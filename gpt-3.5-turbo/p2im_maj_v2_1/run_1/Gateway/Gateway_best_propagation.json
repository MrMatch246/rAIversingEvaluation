{
    "functions": {
        "FUN_0800010c": {
            "additional_data": {
                "DAT_200000f4": {
                    "data_flag": 1,
                    "flag": 20,
                    "flag_variable": 1
                },
                "FUN_0800010c": {
                    "check_and_update_flag": 1,
                    "initialize_data": 1,
                    "initialize_flag": 25,
                    "initialize_flag_if_not_set": 1,
                    "set_flag_if_not_set": 1,
                    "update_flag": 1,
                    "update_flag_if_zero": 1
                },
                "param_1": {
                    "input": 15,
                    "input_data": 1,
                    "input_param": 3,
                    "input_parameter": 2,
                    "input_value": 9,
                    "value": 1
                }
            },
            "called": [
                "FUN_0800a424"
            ],
            "calling": [],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08000118) */\n\nundefined4 initialize_flag_if_not_set_0800010c(undefined4 input)\n\n{\n  if ((char)DAT_200000f4 == '\\0') {\n    DAT_200000f4._0_1_ = '\\x01';\n  }\n  return input;\n}\n\n",
            "current_name": "initialize_flag_if_not_set_0800010c",
            "entrypoint": "0x0800010c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800010c": "initialize_flag_if_not_set_0800010c",
                "param_1": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000178": {
            "additional_data": {
                "FUN_08000178": {
                    "find_end_of_string": 15,
                    "find_last_character_position": 1,
                    "find_null_terminated_string": 1,
                    "find_string_length": 4,
                    "get_null_terminated_string_length": 1,
                    "get_string_end": 2,
                    "get_string_length": 6,
                    "reverse_string": 1
                },
                "cVar1": {
                    "char": 2,
                    "char_value": 1,
                    "character": 1,
                    "current_char": 15,
                    "current_character": 9,
                    "current_character_value": 1,
                    "next_char": 1
                },
                "param_1": {
                    "input_string": 14,
                    "str": 10,
                    "string": 7
                },
                "pcVar2": {
                    "current_char_ptr": 1,
                    "next_char": 11,
                    "next_char_pointer": 1,
                    "next_char_ptr": 2,
                    "next_character": 13,
                    "next_character_pointer": 1,
                    "next_character_ptr": 1
                },
                "pcVar3": {
                    "char_pointer": 1,
                    "current_char": 4,
                    "current_char_pointer": 1,
                    "current_char_ptr": 2,
                    "current_character": 6,
                    "current_character_pointer": 1,
                    "current_character_ptr": 1,
                    "current_pos": 1,
                    "current_position": 6,
                    "current_ptr": 1,
                    "ptr": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080032a2",
                "FUN_08002e44"
            ],
            "code": "\nchar * find_end_of_string_08000178(char *input_string)\n\n{\n  char current_char;\n  char *next_character;\n  char *current_position;\n  \n  current_position = input_string;\n  do {\n    next_character = current_position + 1;\n    current_char = *current_position;\n    current_position = next_character;\n  } while (current_char != '\\0');\n  return next_character + (-1 - (int)input_string);\n}\n\n",
            "current_name": "find_end_of_string_08000178",
            "entrypoint": "0x08000178",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000178": "find_end_of_string_08000178",
                "cVar1": "current_char",
                "param_1": "input_string",
                "pcVar2": "next_character",
                "pcVar3": "current_position"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000188": {
            "additional_data": {
                "0x3f": {
                    "interrupt_number": 1
                },
                "FUN_08000188": {
                    "execute_software_interrupt": 9,
                    "execute_system_call": 4,
                    "execute_system_interrupt": 2,
                    "initialize_system": 1,
                    "interrupt_handler": 1,
                    "invoke_system_call": 1,
                    "perform_system_call": 3,
                    "perform_system_interrupt": 1,
                    "send_interrupt": 1,
                    "send_software_interrupt": 4,
                    "soft_interrupt_0x3f": 1,
                    "trigger_software_interrupt": 2,
                    "trigger_system_interrupt": 1
                },
                "software_interrupt": {
                    "call_interrupt": 3,
                    "execute_interrupt": 3,
                    "interrupt": 1,
                    "invoke_interrupt": 5,
                    "invoke_software_interrupt": 1,
                    "invoke_system_call": 3,
                    "perform_interrupt": 1,
                    "perform_system_call": 1,
                    "trigger_interrupt": 5,
                    "trigger_software_interrupt": 1,
                    "trigger_system_interrupt": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800018c"
            ],
            "code": "\nvoid execute_software_interrupt_08000188(void)\n\n{\n  invoke_interrupt(0x3f);\n  return;\n}\n\n",
            "current_name": "execute_software_interrupt_08000188",
            "entrypoint": "0x08000188",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000188": "execute_software_interrupt_08000188",
                "software_interrupt": "invoke_interrupt"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800018c": {
            "additional_data": {
                "FUN_0800018c": {
                    "afl_call_wrapper": 2,
                    "call_afl": 1,
                    "call_afl_function": 4,
                    "execute_afl_call": 15,
                    "process_afl_call": 1,
                    "process_call_result": 1,
                    "process_data": 2,
                    "process_param": 1,
                    "reverse_afl_call": 1
                },
                "param_1": {
                    "arg1": 1,
                    "data": 1,
                    "function_input_parameter": 1,
                    "input": 4,
                    "input1": 5,
                    "input_data": 1,
                    "input_param": 14,
                    "input_parameter": 4
                },
                "param_2": {
                    "arg2": 1,
                    "input2": 2,
                    "unused_param": 3,
                    "unused_param1": 1,
                    "unused_param_1": 1,
                    "unused_parameter_1": 1
                },
                "param_3": {
                    "arg3": 1,
                    "input3": 2,
                    "unused_param": 2,
                    "unused_param2": 2,
                    "unused_param_2": 1,
                    "unused_parameter_2": 1
                },
                "param_4": {
                    "additional_parameter": 1,
                    "afl_parameter": 1,
                    "arg4": 1,
                    "callback": 1,
                    "callback_param": 2,
                    "flag": 1,
                    "input2": 2,
                    "input4": 3,
                    "output": 1,
                    "output_buffer": 1,
                    "output_data": 1,
                    "output_param": 10,
                    "output_parameter": 3,
                    "result_param": 1,
                    "unused_param3": 1,
                    "unused_param_3": 1
                },
                "uVar1": {
                    "afl_call_result": 1,
                    "afl_result": 1,
                    "call_result": 1,
                    "function_result": 1,
                    "result": 13,
                    "return_value": 3
                }
            },
            "called": [
                "FUN_08000188"
            ],
            "calling": [
                "FUN_08001b48"
            ],
            "code": "\nundefined4 execute_afl_call_0800018c(undefined4 input_param,undefined4 unused_param,undefined4 input3,undefined4 output_param)\n\n{\n  undefined4 result;\n  \n  if (DAT_20000110 != 0) {\n    return 0;\n  }\n  result = aflCall(1,input_param,0,0,output_param);\n  return result;\n}\n\n",
            "current_name": "execute_afl_call_0800018c",
            "entrypoint": "0x0800018c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800018c": "execute_afl_call_0800018c",
                "param_1": "input_param",
                "param_2": "unused_param",
                "param_3": "input3",
                "param_4": "output_param",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000214": {
            "additional_data": {
                "DAT_0800a6cc": {
                    "pin_map": 1,
                    "pin_map_array": 2
                },
                "DAT_0800a908": {
                    "digital_pins": 1,
                    "pin_configuration_array": 1,
                    "pin_map": 1,
                    "pin_mapping_array": 1,
                    "pin_name_array": 1
                },
                "DAT_200001f0": {
                    "servo_index_array": 2,
                    "servo_pin_map": 1,
                    "servo_pins": 1
                },
                "DAT_2000022c": {
                    "servo_data": 1,
                    "servo_position_array": 2,
                    "servo_positions": 2
                },
                "DAT_200003d4": {
                    "pin_data": 1,
                    "pin_mode_array": 2,
                    "pin_mode_data": 1,
                    "pin_modes_array": 1,
                    "pin_states": 1
                },
                "FUN_08000214": {
                    "analog_write_if_pin_mode_is_digital": 1,
                    "control_pin": 1,
                    "control_pin_mode": 1,
                    "digital_pin_write_or_servo_move": 1,
                    "drive_output": 1,
                    "gpio_function": 1,
                    "handle_pin_mode": 2,
                    "perform_pin_operation": 2,
                    "pin_mode_and_write": 2,
                    "pin_mode_handler": 2,
                    "process_pin": 2,
                    "process_pin_action": 1,
                    "process_pin_change": 1,
                    "process_pin_state": 3,
                    "set_pin_mode_and_state": 2,
                    "set_pin_mode_and_write": 1,
                    "update_pin_mode": 2,
                    "update_pin_state": 1,
                    "update_pin_state_and_output": 1,
                    "write_digital_or_servo_pin": 1,
                    "write_digital_value": 1,
                    "write_state_and_mode": 1
                },
                "analogWrite": {
                    "analog_write": 4,
                    "perform_analog_write": 1,
                    "set_pin_value": 1,
                    "write_analog": 7,
                    "write_analog_pin": 2,
                    "write_analog_value": 7,
                    "write_to_analog_pin": 1
                },
                "bVar1": {
                    "is_digital_pin": 2,
                    "is_pin_valid": 2,
                    "is_servo": 13,
                    "is_servo_motor": 1,
                    "is_servo_pin": 3,
                    "is_servo_valid": 1,
                    "is_valid": 1,
                    "is_valid_digital_pin": 1,
                    "is_valid_pin": 4,
                    "is_valid_pin_num": 1,
                    "valid_pin": 2
                },
                "getPinMode": {
                    "get_pin_mode": 10
                },
                "iVar2": {
                    "pin_mapping": 1,
                    "pin_mode": 16,
                    "pin_mode_result": 3,
                    "pin_state": 5,
                    "pin_status": 2,
                    "pin_value": 1,
                    "result": 2,
                    "status": 1
                },
                "param_1": {
                    "pin_index": 2,
                    "pin_number": 29
                },
                "param_2": {
                    "output_value": 2,
                    "pin_mode": 4,
                    "pin_value": 9,
                    "value": 16
                },
                "param_3": {
                    "arg3": 1,
                    "mode1": 1,
                    "param3": 16,
                    "param_3": 10,
                    "param_3_new": 1,
                    "param_name": 1,
                    "unknown_param1": 1
                },
                "param_4": {
                    "arg4": 1,
                    "mode2": 1,
                    "param4": 16,
                    "param_4": 10,
                    "param_4_new": 1,
                    "param_name2": 1,
                    "unknown_param2": 1
                },
                "pinNametoDigitalPin": {
                    "convert_pin_name": 1,
                    "convert_pin_name_to_digital_pin": 4,
                    "get_digital_pin": 4,
                    "get_digital_pin_from_name": 6,
                    "get_digital_pin_from_pin_name": 1,
                    "get_digital_pin_number": 1,
                    "get_pin_number": 1,
                    "name_to_digital_pin": 1,
                    "pin_name_to_digital_pin": 1,
                    "pin_nameto_digital_pin": 1,
                    "resolve_pin_name_to_digital": 1
                },
                "pin_in_pinmap": {
                    "check_if_pin_exists_in_pinmap": 1,
                    "check_pin_in_pin_map": 3,
                    "check_pin_in_pinmap": 1,
                    "check_valid_pin": 1,
                    "is_in_pin_map": 1,
                    "is_pin_in_pin_map": 5,
                    "is_pin_in_pinmap": 3,
                    "pin_in_pin_map": 2
                },
                "return": {
                    "": 1
                },
                "setPinState": {
                    "set_pin_digital_state": 1,
                    "set_pin_mode_state": 1,
                    "set_pin_state": 9,
                    "set_pin_value": 1,
                    "set_state": 1,
                    "update_pin_state": 6
                },
                "update_servo_position_080026b0": {
                    "update_servo_position": 20
                },
                "x": {
                    "pin_state": 1
                }
            },
            "called": [
                "FUN_0800021a"
            ],
            "calling": [
                "FUN_08001cd0"
            ],
            "code": "\nvoid process_pin_state_08000214(uint pin_number,undefined4 value,undefined4 param3,undefined4 param4)\n\n{\n  bool is_servo;\n  int pin_mode;\n  \n  if (0pin_state3b < (int)pin_number) {\n    return;\n  }\n  pin_mode = get_pin_mode(&DAT_200003d4,pin_number,param3,param4,param4);\n  if (pin_mode == 3) {\n    if (pin_number < 0pin_state3c) {\n      if ((&DAT_0800a908)[pin_number] == -1) {\n        pin_mode = 0;\n      }\n      else {\n        pin_mode = get_digital_pin_from_name();\n        if (pin_mode == 0) {\n          pin_mode = 0;\n        }\n        else {\n          pin_mode = get_digital_pin_from_name((int)(char)(&DAT_0800a908)[pin_number]);\n          if (pin_mode == 1) {\n            pin_mode = 0;\n          }\n          else {\n            pin_mode = is_pin_in_pin_map((int)(char)(&DAT_0800a908)[pin_number],&DAT_0800a6cc);\n          }\n        }\n      }\n    }\n    else {\n      pin_mode = 0;\n    }\n    if (pin_mode != 0) {\n      write_analog_value(pin_number,value);\n    }\n    set_pin_state(&DAT_200003d4,pin_number,value);\n  }\n  else if (pin_mode == 4) {\n    if (pin_number < 0pin_state3c) {\n      if ((&DAT_0800a908)[pin_number] == -1) {\n        is_servo = false;\n      }\n      else {\n        pin_mode = get_digital_pin_from_name();\n        if (pin_mode == 0) {\n          is_servo = false;\n        }\n        else {\n          pin_mode = get_digital_pin_from_name((int)(char)(&DAT_0800a908)[pin_number]);\n          if (pin_mode == 1) {\n            is_servo = false;\n          }\n          else {\n            is_servo = true;\n          }\n        }\n      }\n    }\n    else {\n      is_servo = false;\n    }\n    if (is_servo) {\n      update_servo_position(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[pin_number] * 3,value);\n    }\n    set_pin_state(&DAT_200003d4,pin_number,value);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "process_pin_state_08000214",
            "entrypoint": "0x08000214",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000214": "process_pin_state_08000214",
                "analogWrite": "write_analog_value",
                "bVar1": "is_servo",
                "getPinMode": "get_pin_mode",
                "iVar2": "pin_mode",
                "param_1": "pin_number",
                "param_2": "value",
                "param_3": "param3",
                "param_4": "param4",
                "pinNametoDigitalPin": "get_digital_pin_from_name",
                "pin_in_pinmap": "is_pin_in_pin_map",
                "setPinState": "set_pin_state",
                "update_servo_position_080026b0": "update_servo_position",
                "x": "pin_state"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800021a": {
            "additional_data": {
                "DAT_0800a6cc": {
                    "pin_map_config_data": 1
                },
                "DAT_0800a908": {
                    "digital_pin_array": 1,
                    "pin_name_data": 1,
                    "pin_name_to_digital_pin_list": 1
                },
                "DAT_200001f0": {
                    "pin_servo_index": 1,
                    "servo_index_data": 1
                },
                "DAT_2000022c": {
                    "servo_angles": 1,
                    "servo_data": 1
                },
                "DAT_200003d4": {
                    "pin_map_data": 1,
                    "pin_state": 1,
                    "pin_state_array": 1
                },
                "FUN_0800021a": {
                    "analog_write_if_pin_configured": 1,
                    "analog_writeand_set_pin_state": 1,
                    "control_pin": 2,
                    "digital_pin_control": 1,
                    "digital_pin_write": 1,
                    "handle_pin_mode": 1,
                    "handle_pin_operation": 3,
                    "handle_pin_state": 1,
                    "manage_pin_state": 1,
                    "perform_pin_action": 1,
                    "perform_pin_operation": 1,
                    "pin_control_function": 1,
                    "pin_mode_and_set_pin_state": 1,
                    "pin_mode_control": 1,
                    "process_pin": 3,
                    "process_pin_mode": 1,
                    "process_pin_state": 3,
                    "update_pin": 1,
                    "update_pin_state": 3,
                    "write_digital_pin_state_or_servo_position": 1,
                    "write_pin_state": 1,
                    "write_to_pin": 1
                },
                "analogWrite": {
                    "analog_pin_write": 1,
                    "analog_write": 3,
                    "configure_analog_pin": 2,
                    "set_analog_pin_value": 1,
                    "write_analog": 5,
                    "write_analog_pin": 3,
                    "write_analog_value": 10,
                    "write_to_analog_pin": 1
                },
                "bVar1": {
                    "found_servo": 1,
                    "is_configured": 1,
                    "is_digital_pin": 5,
                    "is_digital_pin_valid": 1,
                    "is_pin_valid": 4,
                    "is_servo": 7,
                    "is_servo_motor": 2,
                    "is_servo_pin": 3,
                    "is_valid": 2,
                    "is_valid_pin": 5
                },
                "byte": {
                    "byte": 1
                },
                "check_value_in_array_0800738a": {
                    "check_value_in_array": 24,
                    "is_value_in_array": 5
                },
                "configure_digital_pin_080088e0": {
                    "config_digital_pin": 1,
                    "configure_digital_pin": 26,
                    "set_digital_pin_configuration": 1,
                    "set_digital_pin_mode": 1
                },
                "find_character_index_080036ac": {
                    "character_index": 1,
                    "find_character_index": 26,
                    "get_character_index": 2
                },
                "getPinMode": {
                    "get_pin_config": 1,
                    "get_pin_mode": 20,
                    "get_pin_status": 1,
                    "retrieve_pin_mode": 1
                },
                "get_byte_value_from_offset_08002fa0": {
                    "get_byte_value_from_offset": 27,
                    "get_value_from_offset": 1
                },
                "iVar2": {
                    "pin_config": 1,
                    "pin_config_result": 1,
                    "pin_mode": 26,
                    "pin_state": 2,
                    "pin_status": 1
                },
                "param_1": {
                    "pin": 1,
                    "pin_number": 30
                },
                "param_2": {
                    "new_value": 1,
                    "output_value": 2,
                    "pin_value": 16,
                    "value": 12
                },
                "param_3": {
                    "array": 2,
                    "mode": 2,
                    "mode1": 1,
                    "param": 1,
                    "param3": 17,
                    "param_3": 8
                },
                "param_4": {
                    "base_address": 2,
                    "mode2": 1,
                    "param4": 17,
                    "param_4": 9,
                    "state": 2
                },
                "pinNametoDigitalPin": {
                    "convert_pin_name_to_digital": 1,
                    "convert_pin_name_to_digital_pin": 8,
                    "digit_pin_name_to_digit_pin": 1,
                    "get_digital_pin": 6,
                    "get_digital_pin_from_name": 2,
                    "get_digital_pin_number": 2,
                    "name_to_digital_pin": 1,
                    "pin_name_to_digital_pin": 4
                },
                "pin_in_pinmap": {
                    "check_pin_in_pin_map": 4,
                    "check_pin_in_pinmap": 1,
                    "check_value_in_pin_map": 2,
                    "check_value_in_pinmap": 2,
                    "in_pin_map": 1,
                    "is_pin_in_pin_map": 6,
                    "is_pin_in_pinmap": 5
                },
                "setPinState": {
                    "set_pin_config": 1,
                    "set_pin_state": 19,
                    "store_pin_state": 1,
                    "update_pin_state": 4,
                    "update_pin_state_value": 1
                },
                "store_value_at_offset_index_08002fc2": {
                    "set_value_at_offset_index": 1,
                    "store_value_at_index": 6,
                    "store_value_at_offset_index": 21
                },
                "update_servo_position_080026b0": {
                    "move_servo_to_position": 1,
                    "update_servo_position": 29
                }
            },
            "called": [
                "FUN_0800738a",
                "FUN_080036ac",
                "FUN_080088e0",
                "FUN_080026b0",
                "FUN_08002fc2",
                "FUN_08002fa0"
            ],
            "calling": [
                "FUN_08000214"
            ],
            "code": "\nvoid process_pin_state_0800021a(uint pin_number,undefined4 pin_value,undefined4 param3,undefined4 param4)\n\n{\n  bool is_servo;\n  int pin_mode;\n  \n  pin_mode = get_pin_mode(&DAT_200003d4,pin_number,param3,param4,param4);\n  if (pin_mode == 3) {\n    if (pin_number < 0x3c) {\n      if ((&DAT_0800a908)[pin_number] == -1) {\n        pin_mode = 0;\n      }\n      else {\n        pin_mode = convert_pin_name_to_digital_pin();\n        if (pin_mode == 0) {\n          pin_mode = 0;\n        }\n        else {\n          pin_mode = convert_pin_name_to_digital_pin((int)(char)(&DAT_0800a908)[pin_number]);\n          if (pin_mode == 1) {\n            pin_mode = 0;\n          }\n          else {\n            pin_mode = is_pin_in_pin_map((int)(char)(&DAT_0800a908)[pin_number],&DAT_0800a6cc);\n          }\n        }\n      }\n    }\n    else {\n      pin_mode = 0;\n    }\n    if (pin_mode != 0) {\n      write_analog_value(pin_number,pin_value);\n    }\n    set_pin_state(&DAT_200003d4,pin_number,pin_value);\n  }\n  else if (pin_mode == 4) {\n    if (pin_number < 0x3c) {\n      if ((&DAT_0800a908)[pin_number] == -1) {\n        is_servo = false;\n      }\n      else {\n        pin_mode = convert_pin_name_to_digital_pin();\n        if (pin_mode == 0) {\n          is_servo = false;\n        }\n        else {\n          pin_mode = convert_pin_name_to_digital_pin((int)(char)(&DAT_0800a908)[pin_number]);\n          if (pin_mode == 1) {\n            is_servo = false;\n          }\n          else {\n            is_servo = true;\n          }\n        }\n      }\n    }\n    else {\n      is_servo = false;\n    }\n    if (is_servo) {\n      update_servo_position(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[pin_number] * 3,pin_value);\n    }\n    set_pin_state(&DAT_200003d4,pin_number,pin_value);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "process_pin_state_0800021a",
            "entrypoint": "0x0800021a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800021a": "process_pin_state_0800021a",
                "analogWrite": "write_analog_value",
                "bVar1": "is_servo",
                "getPinMode": "get_pin_mode",
                "iVar2": "pin_mode",
                "param_1": "pin_number",
                "param_2": "pin_value",
                "param_3": "param3",
                "param_4": "param4",
                "pinNametoDigitalPin": "convert_pin_name_to_digital_pin",
                "pin_in_pinmap": "is_pin_in_pin_map",
                "setPinState": "set_pin_state",
                "update_servo_position_080026b0": "update_servo_position"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000488": {
            "additional_data": {
                "DAT_20000114": {
                    "analog_data": 1,
                    "analog_data_flags": 1,
                    "bit_data": 1,
                    "gpio_values": 1
                },
                "DAT_20000171": {
                    "analog_data_enabled": 1,
                    "flag_check": 1,
                    "is_calibration_enabled": 1,
                    "is_data_send": 1
                },
                "DAT_200003d4": {
                    "base_address": 2
                },
                "FUN_08000488": {
                    "update_analog_data": 4,
                    "update_analog_read_data": 1,
                    "update_analog_value": 1,
                    "update_bit_data": 1,
                    "update_data": 17,
                    "update_data_and_send_analog": 1,
                    "update_data_bit": 1,
                    "update_data_status": 2,
                    "update_digital_state": 1,
                    "update_register": 1,
                    "update_register_value": 1
                },
                "analogRead": {
                    "calculate_adc_value": 1,
                    "calculate_adc_value_08008880": 2
                },
                "param_1": {
                    "bit_index": 1,
                    "bit_position": 1,
                    "data_index": 3,
                    "index": 8,
                    "input": 1,
                    "input_index": 7,
                    "input_param": 1,
                    "input_pin_number": 1,
                    "input_value": 4,
                    "param1": 1,
                    "pin_number": 2,
                    "register_index": 1
                },
                "param_2": {
                    "bit_value": 1,
                    "enable_flag": 1,
                    "flag": 20,
                    "flag_param": 1,
                    "is_high": 1,
                    "is_set": 1,
                    "mode": 1,
                    "param2": 1,
                    "should_set": 1,
                    "state": 1,
                    "update_flag": 2
                },
                "send_analog_data_08002ef2": {
                    "send_analog_data": 2,
                    "send_analog_data_to_base_address": 1
                },
                "uVar1": {
                    "adc_value": 18,
                    "analog_read_value": 1,
                    "analog_value": 10,
                    "sensor_value": 1
                }
            },
            "called": [
                "FUN_08008880",
                "FUN_08002ef2"
            ],
            "calling": [
                "FUN_080005f8"
            ],
            "code": "\nvoid update_analog_read_data_08000488(uint index,int flag)\n\n{\n  undefined4 adc_value;\n  \n  if ((int)index < 0xe) {\n    if (flag == 0) {\n      DAT_20000114 = DAT_20000114 & ~(1 << (index & 0xff));\n      return;\n    }\n    DAT_20000114 = 1 << (index & 0xff) | DAT_20000114;\n    if (DAT_20000171 == '\\0') {\n      adc_value = calculate_adc_value_08008880();\n      send_analog_data(&DAT_200003d4,index,adc_value);\n      return;\n    }\n  }\n  return;\n}\n\n",
            "current_name": "update_analog_read_data_08000488",
            "entrypoint": "0x08000488",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000488": "update_analog_read_data_08000488",
                "analogRead": "calculate_adc_value_08008880",
                "param_1": "index",
                "param_2": "flag",
                "send_analog_data_08002ef2": "send_analog_data",
                "uVar1": "adc_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080004d4": {
            "additional_data": {
                "FUN_080004d4": {
                    "activate_servos": 1,
                    "control_servo": 1,
                    "control_servos": 2,
                    "initialize_servo_positions": 2,
                    "initialize_servos": 3,
                    "perform_servo_action": 1,
                    "process_function": 1,
                    "process_param": 2,
                    "process_servo_action": 1,
                    "process_servo_command": 1,
                    "process_servo_data": 3,
                    "process_servo_param": 1,
                    "process_servo_parameters": 1,
                    "process_servo_params": 1,
                    "process_servos": 1,
                    "servo_control": 7,
                    "servo_controller": 2
                },
                "FUN_08002580": {
                    "process_servo": 1
                },
                "iVar1": {
                    "count": 3,
                    "counter": 9,
                    "i": 1,
                    "index": 5,
                    "iteration": 2,
                    "iterator": 2,
                    "loop_count": 2,
                    "loop_counter": 4,
                    "loop_index": 1
                },
                "param_1": {
                    "action_status": 1,
                    "command": 2,
                    "command_code": 1,
                    "condition": 4,
                    "data_flag": 1,
                    "flag": 5,
                    "input_flag": 3,
                    "input_option": 1,
                    "input_param": 1,
                    "input_value": 1,
                    "option": 1,
                    "state": 1,
                    "status": 9
                },
                "param_2": {
                    "code_value": 1,
                    "data": 1,
                    "flag": 2,
                    "limit": 1,
                    "limit_value": 1,
                    "loop_count": 1,
                    "servo_value": 1,
                    "value": 21,
                    "value_flag": 2
                },
                "puVar2": {
                    "data_pointer": 3,
                    "data_ptr": 5,
                    "ptr_servo": 1,
                    "servo_address": 3,
                    "servo_array": 6,
                    "servo_data": 6,
                    "servo_data_ptr": 1,
                    "servo_pointer": 2,
                    "servo_ptr": 1
                }
            },
            "called": [
                "FUN_08002580"
            ],
            "calling": [],
            "code": "\nvoid control_servo_080004d4(int status,int value)\n\n{\n  int counter;\n  undefined *servo_data;\n  \n  if (status != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    servo_data = &DAT_2000022c;\n    for (counter = 0xb; -1 < counter; counter = counter + -1) {\n      Servo(servo_data);\n      servo_data = servo_data + 3;\n    }\n  }\n  return;\n}\n\n",
            "current_name": "control_servo_080004d4",
            "entrypoint": "0x080004d4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080004d4": "control_servo_080004d4",
                "iVar1": "counter",
                "param_1": "status",
                "param_2": "value",
                "puVar2": "servo_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000500": {
            "additional_data": {
                "0": {
                    "offset": 1
                },
                "0x3": {
                    "multiplier": 1
                },
                "0xb": {
                    "max_servos_allowed": 1,
                    "max_servos_threshold": 1
                },
                "DAT_2000011c": {
                    "current_index": 1,
                    "current_servo_index": 1,
                    "data_length": 1,
                    "index": 1,
                    "is_attached": 1,
                    "is_value_zero": 1,
                    "last_servo_index": 1,
                    "map_index": 1,
                    "num_servos": 1,
                    "servo_count": 3,
                    "servo_counter": 1,
                    "servo_index_top": 1,
                    "stack_index": 1,
                    "stack_pointer": 1,
                    "stack_ptr": 2,
                    "stack_top": 2,
                    "unused": 1,
                    "unused_cnt": 1,
                    "unused_variable": 1
                },
                "DAT_2000011f": {
                    "attached_servos": 1,
                    "data_indices": 1,
                    "rev_indices": 1,
                    "reverse_index": 1,
                    "servo_array_reverse": 1,
                    "servo_data": 1,
                    "servo_data_backup": 1,
                    "servo_last_data": 1,
                    "servo_map": 1,
                    "servo_mapping": 1,
                    "servo_stored_positions": 1,
                    "stack": 1,
                    "stack_array": 3,
                    "stack_data": 2,
                    "temp_array": 1,
                    "unused_array": 1
                },
                "DAT_200001ed": {
                    "current_servo_index": 1,
                    "max_servos": 17,
                    "servo_count": 3
                },
                "DAT_200001f0": {
                    "servo_array": 9,
                    "servo_data": 4,
                    "servo_indices": 1,
                    "servo_list": 1,
                    "servo_mapping": 1,
                    "servo_positions": 3
                },
                "DAT_2000022c": {
                    "data": 7,
                    "data_array": 7,
                    "data_buffer": 4
                },
                "DAT_200003d4": {
                    "error_message": 13,
                    "error_msg": 2,
                    "error_string": 3,
                    "error_string_offset": 1
                },
                "DAt_200003d4": {
                    "error_message": 1
                },
                "FUN_08000500": {
                    "assign_or_update_servo": 1,
                    "assign_servo_and_process_data": 1,
                    "attach_servo": 16,
                    "control_servo": 1,
                    "handle_servo": 1,
                    "initialize_servo": 2,
                    "manage_servo": 1,
                    "process_servo": 2,
                    "process_servo_data": 4,
                    "servo_control": 1,
                    "update_servo_position": 1
                },
                "byte": {
                    "improve_result": 1,
                    "improved_byte": 1
                },
                "data": {
                    "data_array": 1
                },
                "improve_and_process_data_080025ac": {
                    "improve_and_process_data": 13,
                    "improve_and_process_servo_data": 1,
                    "modify_and_process_data": 1,
                    "process_and_improve_data": 8,
                    "process_data_and_improve": 1,
                    "process_improved_data": 1,
                    "process_servo_data_with_improvement": 1
                },
                "offset": {
                    "error_message_offset": 1,
                    "improved_offset": 1,
                    "message_offset": 1,
                    "offset": 1
                },
                "param_1": {
                    "pin": 2,
                    "pin_index": 1,
                    "pin_number": 1,
                    "servo_id": 1,
                    "servo_index": 26
                },
                "param_2": {
                    "pin": 1,
                    "value1": 29,
                    "value_1": 1
                },
                "param_3": {
                    "value1": 1,
                    "value2": 29,
                    "value_2": 1
                },
                "param_4": {
                    "data": 3,
                    "extra_param": 1,
                    "param4": 2,
                    "param_4": 1,
                    "pin": 8,
                    "placeholder": 1,
                    "undefined_param": 1,
                    "unknown_param": 1,
                    "unused": 6,
                    "unused_param": 3,
                    "value2": 1
                },
                "pin": {
                    "servo_pin": 1
                },
                "process_data_and_improve_08002634": {
                    "improve_and_process_data": 1,
                    "process_and_improve_data": 6,
                    "process_and_modify_data": 1,
                    "process_and_update_data": 1,
                    "process_data": 2,
                    "process_data_and_improve": 14,
                    "process_data_with_improvement": 2
                },
                "send_string_from_offset_08002f14": {
                    "display_error_message": 2,
                    "print_error_message": 2,
                    "send_error_message": 20,
                    "send_message": 4,
                    "send_string_from_offset": 1
                },
                "undefined4": {
                    "data_param": 1,
                    "improved_undefined4": 1
                },
                "value1": {
                    "value1": 1
                },
                "value2": {
                    "value2": 1
                }
            },
            "called": [
                "FUN_080025ac",
                "FUN_08002634",
                "FUN_08002f14"
            ],
            "calling": [
                "FUN_08001cd0",
                "FUN_080005f8"
            ],
            "code": "\nvoid attach_servo_08000500(int servo_index,int value1,int value2,improved_undefined4 pin)\n\n{\n  if (0xb < DAT_200001ed) {\n    send_error_message(&DAT_200003d4,\"Max servos attached\",value2,pin,pin);\n    return;\n  }\n  if (DAT_2000011c == 0) {\n    (&DAT_200001f0)[servo_index] = DAT_200001ed;\n    DAT_200001ed = DAT_200001ed + 1;\n  }\n  else {\n    (&DAT_200001f0)[servo_index] = (&DAT_2000011f)[DAT_2000011c];\n    DAT_2000011c = DAT_2000011c - 1;\n  }\n  if ((0 < value1) && (0 < value2)) {\n    improve_and_process_data(&DAT_2000022c + (uint)(improve_result)(&DAT_200001f0)[servo_index] * 3,servo_index,value1,value2);\n    return;\n  }\n  process_data_and_improve(&DAT_2000022c + (uint)(improve_result)(&DAT_200001f0)[servo_index] * 3,servo_index);\n  return;\n}\n\n",
            "current_name": "attach_servo_08000500",
            "entrypoint": "0x08000500",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000500": "attach_servo_08000500",
                "byte": "improve_result",
                "data": "data_array",
                "improve_and_process_data_080025ac": "improve_and_process_data",
                "param_1": "servo_index",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "pin",
                "process_data_and_improve_08002634": "process_data_and_improve",
                "send_string_from_offset_08002f14": "send_error_message",
                "undefined4": "improved_undefined4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000588": {
            "additional_data": {
                "0xff": {
                    "reset_value": 1
                },
                "DAT_20000111c": {
                    "counter": 1
                },
                "DAT_2000011c": {
                    "count": 6,
                    "counter": 20,
                    "counter2": 1,
                    "new_index": 1,
                    "updated_index": 1
                },
                "DAT_2000011f": {
                    "buffer": 1,
                    "incremented_data": 1,
                    "modified_array": 1,
                    "modified_bytes": 1,
                    "modified_data_array": 1,
                    "modified_indices_array": 1,
                    "result_array": 1,
                    "selected_indices": 1,
                    "updated_array": 2,
                    "updated_byte_array": 1,
                    "updated_data": 1,
                    "updated_elements": 1,
                    "updated_values_array": 1
                },
                "DAT_200001ed": {
                    "count": 1,
                    "counter": 2,
                    "current_byte": 2,
                    "current_element": 2,
                    "current_index": 2,
                    "current_value": 10,
                    "last_value": 2,
                    "length_limit": 1,
                    "previous_value": 2,
                    "selected_byte": 1,
                    "target": 1,
                    "target_byte": 3,
                    "target_value": 1
                },
                "DAT_200001f0": {
                    "array": 1,
                    "byte_array": 2,
                    "data": 4,
                    "data_array": 7,
                    "indices_array": 1,
                    "reference_array": 1
                },
                "DAT_2000022c": {
                    "another_array": 1,
                    "array": 1,
                    "base_address": 1,
                    "data": 1,
                    "data_array": 3,
                    "data_offset": 4,
                    "detach_data": 1,
                    "list_base": 1,
                    "offset": 1
                },
                "FUN_08000588": {
                    "detach_and_modify": 5,
                    "detach_and_modify_array": 1,
                    "detach_and_modify_byte": 2,
                    "detach_and_modify_data": 1,
                    "detach_and_remove": 1,
                    "detach_and_remove_from_list": 1,
                    "detach_and_reset_byte": 1,
                    "detach_and_update": 5,
                    "detach_and_update_array": 2,
                    "detach_and_update_data": 7,
                    "reverse_detached_byte": 1,
                    "update_data": 3,
                    "update_index": 1
                },
                "FUN_08002644": {
                    "modify_byte": 1,
                    "process_data": 2,
                    "some_other_function": 1,
                    "sub_function": 1,
                    "update_buffer": 1
                },
                "byte": {
                    "byte_array": 1
                },
                "detach": {
                    "detach_and_update": 1,
                    "detach_element": 1,
                    "detach_function": 1
                },
                "param_1": {
                    "buffer": 2,
                    "index": 29
                },
                "param_2": {
                    "param2": 1,
                    "param_2": 1
                },
                "param_3": {
                    "param3": 1,
                    "param_3": 2
                },
                "param_4": {
                    "param4": 1,
                    "param_4": 2
                },
                "undefined4": {
                    "param_2": 1
                }
            },
            "called": [
                "FUN_08002644"
            ],
            "calling": [
                "FUN_08001cd0",
                "FUN_080005f8"
            ],
            "code": "\nvoid detach_and_update_data_08000588(int index)\n\n{\n  detach_function(&DAT_2000022c + (uint)(byte_array)(&DAT_200001f0)[index] * 3);\n  if (((&DAT_200001f0)[index] == DAT_200001ed) && (DAT_200001ed != '\\0')) {\n    DAT_200001ed = DAT_200001ed + -1;\n  }\n  else if (DAT_200001ed != '\\0') {\n    DAT_2000011c = DAT_2000011c + 1;\n    (&DAT_2000011f)[DAT_2000011c] = (&DAT_200001f0)[index];\n  }\n  (&DAT_200001f0)[index] = 0xff;\n  return;\n}\n\n",
            "current_name": "detach_and_update_data_08000588",
            "entrypoint": "0x08000588",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000588": "detach_and_update_data_08000588",
                "byte": "byte_array",
                "detach": "detach_function",
                "param_1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080005e0": {
            "additional_data": {
                "": {
                    "": 3,
                    "_unused_2": 1
                },
                "DAT_20000004": {
                    "constant_value": 1,
                    "data_byte": 1,
                    "data_value": 5,
                    "default_byte": 1,
                    "default_setting": 1,
                    "default_value": 5,
                    "flag": 1,
                    "initial_value": 3,
                    "limit": 1,
                    "mask": 3,
                    "max_value": 1,
                    "maximum_value": 1,
                    "value": 1
                },
                "DAT_20000170": {
                    "count": 1,
                    "counter": 9,
                    "data_counter": 2,
                    "data_flag": 8,
                    "data_pointer": 1,
                    "data_value": 2,
                    "flag": 2
                },
                "FUN_080005e0": {
                    "initialize_data": 29,
                    "initialize_default_values": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08000aec",
                "FUN_080005f8"
            ],
            "code": "\nvoid initialize_data_080005e0(void)\n\n{\n  DAT_20000170 = 0;\n  DAT_20000004 = 0xff;\n  return;\n}\n\n",
            "current_name": "initialize_data_080005e0",
            "entrypoint": "0x080005e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080005e0": "initialize_data_080005e0"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080005f8": {
            "additional_data": {
                "0": {
                    "deservo_value": 1
                },
                "0x0800a66c": {
                    "pin_config": 1
                },
                "0x0800a6cc": {
                    "pin_config": 1
                },
                "0x3c": {
                    "max_pin_number": 1,
                    "servo_pin_value": 1
                },
                "0x7f": {
                    "pin_error_value": 1,
                    "valid_pin_mode": 1
                },
                "0xb": {
                    "input_pulldown": 1
                },
                "0xe": {
                    "analog_pin_count": 1,
                    "analog_pin_range": 1
                },
                "0xff": {
                    "invalid_byte": 1
                },
                "0xffffffff": {
                    "detached": 1
                },
                "1": {
                    "input": 1
                },
                "10": {
                    "input_adc": 1
                },
                "2": {
                    "input_pullup": 1
                },
                "4": {
                    "output": 1
                },
                "6": {
                    "analog_input": 1
                },
                "DAT_0800a66c": {
                    "ext_int_mapping": 1,
                    "pin_map_3_array": 1,
                    "pin_map_array3": 1
                },
                "DAT_0800a69c": {
                    "pin_map_2_array": 1,
                    "pin_map_array2": 1,
                    "pwm_mapping": 1
                },
                "DAT_0800a6cc": {
                    "analog_mapping": 1,
                    "pin_map_1_array": 1,
                    "pin_map_array1": 1
                },
                "DAT_0800a908": {
                    "digital_pins": 1,
                    "pin_config": 1,
                    "pin_index_array": 1,
                    "pin_map": 2,
                    "pin_mapping": 1,
                    "pin_name_array": 1,
                    "pin_nameto_digital_pin_data": 1
                },
                "DAT_20000100": {
                    "pin_nameto_digital_pin_lookup_table": 1
                },
                "DAT_20000170": {
                    "data_value": 1,
                    "disable_i2_c_value": 1,
                    "flag_variable": 2,
                    "global_character": 1,
                    "global_flag": 3,
                    "i2c_pin_mode": 1,
                    "is_i2_c_enabled": 1,
                    "is_zero": 1,
                    "pin_mode_flag": 1,
                    "some_data": 2,
                    "special_character": 1
                },
                "DAT_20000174": {
                    "pin_array": 1,
                    "pin_config": 1,
                    "pin_state": 2,
                    "pin_state_array": 3,
                    "pin_state_data": 1
                },
                "DAT_200001f0": {
                    "analog_array": 1,
                    "analog_callback_array": 1,
                    "analog_callback_data": 1,
                    "analog_config_array": 1,
                    "analog_pin_mode_array": 1,
                    "other_data": 1,
                    "pin_analog_map": 1
                },
                "DAT_2000022c": {
                    "attached_servo_data": 1,
                    "pin_info": 1,
                    "servo_array": 1,
                    "servo_attach_array": 1,
                    "servo_config_array": 1,
                    "servo_data": 1,
                    "servo_map": 1
                },
                "DAT_200003d4": {
                    "pin_config": 2,
                    "pin_config_array": 1,
                    "pin_config_data_array": 1,
                    "pin_data": 2,
                    "pin_data_array": 1,
                    "pin_mode_data": 3
                },
                "DAT_200004b4": {
                    "serial_output": 1
                },
                "DAT_20002114": {
                    "pin_map_array": 1
                },
                "DBUG": {
                    "debug_mode": 1
                },
                "FUN_08000488": {
                    "function800488": 1,
                    "initialize_and_configure_pin": 2,
                    "initialize_data": 2,
                    "initialize_digital_pin": 2,
                    "initialize_pin": 1,
                    "initialize_pin_configuration": 1,
                    "initialize_pin_offsets": 1,
                    "pin_nameto_digital_pin": 1
                },
                "FUN_08000500": {
                    "check_and_update_pin": 1,
                    "configure_and_write_to_pin": 1,
                    "configure_digital_pin_with_offset": 1,
                    "configure_pin_and_initialize": 1,
                    "function801500": 1,
                    "pin_mode_digital_write": 1,
                    "process_data": 1,
                    "update_pin_configuration_and_write_to_gpio": 1,
                    "update_pin_data": 1,
                    "update_pin_mode": 1,
                    "update_pin_values": 1
                },
                "FUN_080005f8": {
                    "configure_pin": 14,
                    "configure_pin_and_state": 1,
                    "manage_pin_function": 1,
                    "pin_mode_control": 5,
                    "pin_mode_controller": 3,
                    "pin_mode_handler": 2,
                    "process_pin_operation": 1,
                    "set_pin_mode_and_state": 1,
                    "update_pin_configuration": 1,
                    "update_pin_mode": 1
                },
                "analogWrite": {
                    "analog_write": 2,
                    "write_analog_pin": 2,
                    "write_analog_value": 1
                },
                "attachServo": {
                    "add_servo": 1,
                    "attach_servo": 5,
                    "attach_servo_motor": 1
                },
                "attached": {
                    "is_attached": 4,
                    "is_servo_attached": 1
                },
                "bVar3": {
                    "bool_flag": 1,
                    "bool_value": 1,
                    "boolean_result": 1,
                    "is_allowed": 1,
                    "is_condition_true": 1,
                    "is_digital_pin": 1,
                    "is_pin_configured": 1,
                    "is_pin_valid": 6,
                    "is_true": 6,
                    "is_valid": 1,
                    "is_valid_config": 1,
                    "is_valid_pin": 7,
                    "should_detach_servo": 1,
                    "should_update_pin": 1,
                    "valid_pin": 1
                },
                "base_address": {
                    "base_address": 1
                },
                "byte": {
                    "byte": 1,
                    "byte_value": 1
                },
                "cVar2": {
                    "char_value": 1,
                    "character_value": 7,
                    "condition_flag": 1,
                    "condition_variable": 2,
                    "conditional_value": 1,
                    "digital_pin_state": 1,
                    "disable_i2_c": 2,
                    "disabled_pin": 1,
                    "enabled": 1,
                    "flag": 1,
                    "important_char": 1,
                    "is_analog_pin": 1,
                    "is_digital_pin": 1,
                    "is_servo_pin": 1,
                    "is_valid": 1,
                    "pin_mode_char": 1,
                    "pin_mode_config": 1,
                    "should_disable_i2_c": 1,
                    "should_disable_i2_c_pins": 3,
                    "special_pin_mode": 1,
                    "switch_case_result": 1
                },
                "character": {
                    "search_character": 1
                },
                "check_value_in_array_0800738a": {
                    "check_value_in_array": 7,
                    "is_value_in_array": 3
                },
                "configure_digital_pin_080088e0": {
                    "configure_digital_pin": 10
                },
                "configure_pin_and_write_to_gpio_08008a24": {
                    "configure_and_write_to_gpio": 2,
                    "configure_pin_and_write": 1,
                    "configure_pin_and_write_to_gpio": 8
                },
                "detachServo": {
                    "detach_servo": 5,
                    "detach_servo_motor": 1,
                    "remove_servo": 1
                },
                "detach_and_update_data_08000588": {
                    "detach_and_update_data": 13
                },
                "digitalWrite": {
                    "digital_write": 1,
                    "set_digital_pin_value": 1,
                    "write_digital_pin": 3,
                    "write_digital_value": 1
                },
                "disableI2CPins": {
                    "disable_i2_c": 3,
                    "disable_i2_c_pins": 4
                },
                "extract_bit_from_byte_080026f8": {
                    "extract_bit_from_byte": 12,
                    "get_bit_value_from_byte": 1
                },
                "find_character_index_080036ac": {
                    "find_char_index": 1,
                    "find_character_index": 10
                },
                "getPinMode": {
                    "get_pin_mode": 1,
                    "get_pin_mode_value": 4,
                    "retrieve_pin_mode": 1
                },
                "get_byte_value_from_offset_08002fa0": {
                    "get_byte_value": 2,
                    "get_byte_value_from_offset": 11
                },
                "iVar1": {
                    "mode_check": 1,
                    "pin_mode_check": 2,
                    "pin_mode_result": 17,
                    "pin_mode_value": 8,
                    "result": 3
                },
                "index": {
                    "array_index": 1
                },
                "initialize_and_configure_pin_08008990": {
                    "initialize_and_configure_pin": 13
                },
                "initialize_data_080005e0": {
                    "initialize_data": 13
                },
                "offset": {
                    "data_offset": 1
                },
                "param_1": {
                    "pin": 1,
                    "pin_index": 1,
                    "pin_number": 29
                },
                "param_2": {
                    "mode": 8,
                    "pin_mode": 23
                },
                "param_3": {
                    "set_pin_and_value": 1
                },
                "pinMode": {
                    "configure_pin_mode": 2,
                    "set_pin_mode": 5
                },
                "pinNameToDigitalPin": {
                    "get_digital_pin": 1
                },
                "pinNametoDigitalPin": {
                    "convert_pin_name_to_digital": 1,
                    "digital_pin_from_pin_name": 1,
                    "get_digital_pin": 2,
                    "get_digital_pin_from_name": 2,
                    "get_digital_pin_number_from_pin_name": 1,
                    "get_digital_pin_value": 1
                },
                "pin_in_pinmap": {
                    "check_pin_map": 1,
                    "find_pin_in_map": 2,
                    "is_pin_in_pin_map": 3,
                    "is_pin_in_pinmap": 1,
                    "pin_in_pin_map": 1
                },
                "reportAnalogCallback": {
                    "do_analog_callback": 1,
                    "report_analog_callback": 4,
                    "send_analog_report": 1,
                    "update_analog_callback": 1
                },
                "send_string_from_offset_08002f14": {
                    "print_error_message": 2,
                    "send_error_message": 3,
                    "send_string_from_offset": 9
                },
                "setPinMode": {
                    "configure_pin_mode": 1,
                    "set_pin_mode": 1,
                    "set_pin_mode_control": 1,
                    "set_pin_mode_data": 1,
                    "store_pin_mode": 1,
                    "update_pin_mode": 1
                },
                "setPinState": {
                    "configure_pin_digital_state": 1,
                    "set_pin_state": 4,
                    "store_pin_state": 1,
                    "update_pin_state": 1
                },
                "store_value_at_offset_index_08002fc2": {
                    "store_value_at_index": 5,
                    "store_value_at_index_offset": 1,
                    "store_value_at_offset_index": 6
                },
                "uVar4": {
                    "analog_callback_index": 1,
                    "analog_index": 1,
                    "analog_pin_index": 5,
                    "analog_pin_number": 2,
                    "analog_value": 1,
                    "bit_index": 1,
                    "bit_mask": 3,
                    "index": 4,
                    "modified_pin_number": 1,
                    "normalized_pin_number": 1,
                    "offset": 4,
                    "offset_value": 1,
                    "pin_index": 2,
                    "pin_offset": 1,
                    "shifted_pin": 1,
                    "u_bit_field": 1,
                    "u_variable": 1
                },
                "update_character_value_08002fa8": {
                    "update_char_value": 1,
                    "update_character_value": 11
                },
                "value": {
                    "new_value": 1
                }
            },
            "called": [
                "FUN_0800738a",
                "FUN_080088e0",
                "FUN_08002f14",
                "FUN_08008a24",
                "FUN_08002fc2",
                "FUN_08002fa8",
                "FUN_08000500",
                "FUN_080036ac",
                "FUN_08000488",
                "FUN_080005e0",
                "FUN_08002fa0",
                "FUN_080026f8",
                "FUN_08008990",
                "FUN_08000588"
            ],
            "calling": [
                "FUN_08001cd0",
                "FUN_08000a64",
                "FUN_08000aec"
            ],
            "code": "\nvoid configure_pin_and_state_080005f8(uint pin_number,int pin_mode)\n\n{\n  int pin_mode_result;\n  char character_value;\n  bool is_valid_pin;\n  uint analog_pin_index;\n  \n  pin_mode_result = get_pin_mode_value(&DAT_200003d4,pin_number);\n  if (pin_mode_result != 0x7f) {\n    pin_mode_result = get_pin_mode_value(&DAT_200003d4,pin_number);\n    if (pin_mode_result == 6) {\n      if (DAT_20000170 == '\\0') {\n        character_value = '\\0';\n      }\n      else {\n        character_value = DAT_20000170;\n        if (pin_mode == 6) {\n          character_value = '\\0';\n        }\n      }\n    }\n    else {\n      character_value = '\\0';\n    }\n    if (character_value != '\\0') {\n      disable_i2_c_pins();\n    }\n    if (pin_number < 0x3c) {\n      if ((&DAT_0800a908)[pin_number] == -1) {\n        is_valid_pin = false;\n      }\n      else {\n        pin_mode_result = get_digital_pin_from_name();\n        if (pin_mode_result == 0) {\n          is_valid_pin = false;\n        }\n        else {\n          pin_mode_result = get_digital_pin_from_name((int)(char)(&DAT_0800a908)[pin_number]);\n          if (pin_mode_result == 1) {\n            is_valid_pin = false;\n          }\n          else if (pin_mode == 4) {\n            is_valid_pin = false;\n          }\n          else {\n            is_valid_pin = true;\n          }\n        }\n      }\n    }\n    else {\n      is_valid_pin = false;\n    }\n    if (is_valid_pin) {\n      if ((byte)(&DAT_200001f0)[pin_number] < 0xc) {\n        pin_mode_result = is_attached(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[pin_number] * 3);\n      }\n      else {\n        pin_mode_result = 0;\n      }\n      if (pin_mode_result != 0) {\n        detach_servo(pin_number);\n      }\n    }\n    analog_pin_index = pin_number - 0x2e & 0xff;\n    if (analog_pin_index < 0xe) {\n      if (pin_number < 0x3c) {\n        pin_mode_result = (int)(char)(&DAT_0800a908)[pin_number];\n      }\n      else {\n        pin_mode_result = -1;\n      }\n      pin_mode_result = get_digital_pin_from_name(pin_mode_result);\n      if (pin_mode_result == 0) {\n        is_valid_pin = false;\n      }\n      else {\n        if (pin_number < 0x3c) {\n          pin_mode_result = (int)(char)(&DAT_0800a908)[pin_number];\n        }\n        else {\n          pin_mode_result = -1;\n        }\n        pin_mode_result = get_digital_pin_from_name(pin_mode_result);\n        if (pin_mode_result == 1) {\n          is_valid_pin = false;\n        }\n        else {\n          is_valid_pin = true;\n        }\n      }\n    }\n    else {\n      is_valid_pin = false;\n    }\n    if (is_valid_pin) {\n      report_analog_callback(analog_pin_index,pin_mode == 2);\n    }\n    if (pin_number < 0x3c) {\n      if ((&DAT_0800a908)[pin_number] == -1) {\n        is_valid_pin = false;\n      }\n      else {\n        pin_mode_result = get_digital_pin_from_name();\n        if (pin_mode_result == 0) {\n          is_valid_pin = false;\n        }\n        else {\n          pin_mode_result = get_digital_pin_from_name((int)(char)(&DAT_0800a908)[pin_number]);\n          if (pin_mode_result == 1) {\n            is_valid_pin = false;\n          }\n          else {\n            is_valid_pin = true;\n          }\n        }\n      }\n    }\n    else {\n      is_valid_pin = false;\n    }\n    if (is_valid_pin) {\n      if ((pin_mode == 0) || (pin_mode == 0xb)) {\n        (&DAT_20000174)[pin_number >> 3] = (&DAT_20000174)[pin_number >> 3] | (byte)(1 << (pin_number & 7));\n      }\n      else {\n        (&DAT_20000174)[pin_number >> 3] = (&DAT_20000174)[pin_number >> 3] & ~(byte)(1 << (pin_number & 7));\n      }\n    }\n    set_pin_state(&DAT_200003d4,pin_number,0);\n    switch(pin_mode) {\n    case 0:\n      if (pin_number < 0x3c) {\n        if ((&DAT_0800a908)[pin_number] == -1) {\n          is_valid_pin = false;\n        }\n        else {\n          pin_mode_result = get_digital_pin_from_name();\n          if (pin_mode_result == 0) {\n            is_valid_pin = false;\n          }\n          else {\n            pin_mode_result = get_digital_pin_from_name((int)(char)(&DAT_0800a908)[pin_number]);\n            if (pin_mode_result == 1) {\n              is_valid_pin = false;\n            }\n            else {\n              is_valid_pin = true;\n            }\n          }\n        }\n      }\n      else {\n        is_valid_pin = false;\n      }\n      if (is_valid_pin) {\n        set_pin_mode(pin_number,0);\n        set_pin_mode_control(&DAT_200003d4,pin_number,0);\n        return;\n      }\n      break;\n    case 1:\n      if (pin_number < 0x3c) {\n        if ((&DAT_0800a908)[pin_number] == -1) {\n          is_valid_pin = false;\n        }\n        else {\n          pin_mode_result = get_digital_pin_from_name();\n          if (pin_mode_result == 0) {\n            is_valid_pin = false;\n          }\n          else {\n            pin_mode_result = get_digital_pin_from_name((int)(char)(&DAT_0800a908)[pin_number]);\n            if (pin_mode_result == 1) {\n              is_valid_pin = false;\n            }\n            else {\n              is_valid_pin = true;\n            }\n          }\n        }\n      }\n      else {\n        is_valid_pin = false;\n      }\n      if (is_valid_pin) {\n        pin_mode_result = get_pin_mode_value(&DAT_200003d4,pin_number);\n        if (pin_mode_result == 3) {\n          write_digital_pin(pin_number,0);\n        }\n        set_pin_mode(pin_number,1);\n        set_pin_mode_control(&DAT_200003d4,pin_number,1);\n        return;\n      }\n      break;\n    case 2:\n      if (analog_pin_index < 0xe) {\n        if (pin_number < 0x3c) {\n          pin_mode_result = (int)(char)(&DAT_0800a908)[pin_number];\n        }\n        else {\n          pin_mode_result = -1;\n        }\n        pin_mode_result = get_digital_pin_from_name(pin_mode_result);\n        if (pin_mode_result == 0) {\n          is_valid_pin = false;\n        }\n        else {\n          if (pin_number < 0x3c) {\n            pin_mode_result = (int)(char)(&DAT_0800a908)[pin_number];\n          }\n          else {\n            pin_mode_result = -1;\n          }\n          pin_mode_result = get_digital_pin_from_name(pin_mode_result);\n          if (pin_mode_result == 1) {\n            is_valid_pin = false;\n          }\n          else {\n            is_valid_pin = true;\n          }\n        }\n      }\n      else {\n        is_valid_pin = false;\n      }\n      if (is_valid_pin) {\n        if (pin_number < 0x3c) {\n          if ((&DAT_0800a908)[pin_number] == -1) {\n            is_valid_pin = false;\n          }\n          else {\n            pin_mode_result = get_digital_pin_from_name();\n            if (pin_mode_result == 0) {\n              is_valid_pin = false;\n            }\n            else {\n              pin_mode_result = get_digital_pin_from_name((int)(char)(&DAT_0800a908)[pin_number]);\n              if (pin_mode_result == 1) {\n                is_valid_pin = false;\n              }\n            }\n          }\n        }\n        else {\n          is_valid_pin = false;\n        }\n        if (is_valid_pin) {\n          set_pin_mode(pin_number,0);\n        }\n        set_pin_mode_control(&DAT_200003d4,pin_number,2);\n        return;\n      }\n      break;\n    case 3:\n      if (pin_number < 0x3c) {\n        if ((&DAT_0800a908)[pin_number] == -1) {\n          pin_mode_result = 0;\n        }\n        else {\n          pin_mode_result = get_digital_pin_from_name();\n          if (pin_mode_result == 0) {\n            pin_mode_result = 0;\n          }\n          else {\n            pin_mode_result = get_digital_pin_from_name((int)(char)(&DAT_0800a908)[pin_number]);\n            if (pin_mode_result == 1) {\n              pin_mode_result = 0;\n            }\n            else {\n              pin_mode_result = is_pin_in_pin_map((int)(char)(&DAT_0800a908)[pin_number],&DAT_0800a6cc);\n            }\n          }\n        }\n      }\n      else {\n        pin_mode_result = 0;\n      }\n      if (pin_mode_result != 0) {\n        set_pin_mode(pin_number,1);\n        analog_write(pin_number,0);\n        set_pin_mode_control(&DAT_200003d4,pin_number,3);\n        return;\n      }\n      break;\n    case 4:\n      if (pin_number < 0x3c) {\n        if ((&DAT_0800a908)[pin_number] == -1) {\n          is_valid_pin = false;\n        }\n        else {\n          pin_mode_result = get_digital_pin_from_name();\n          if (pin_mode_result == 0) {\n            is_valid_pin = false;\n          }\n          else {\n            pin_mode_result = get_digital_pin_from_name((int)(char)(&DAT_0800a908)[pin_number]);\n            if (pin_mode_result == 1) {\n              is_valid_pin = false;\n            }\n            else {\n              is_valid_pin = true;\n            }\n          }\n        }\n      }\n      else {\n        is_valid_pin = false;\n      }\n      if (is_valid_pin) {\n        set_pin_mode_control(&DAT_200003d4,pin_number,4);\n        if (((byte)(&DAT_200001f0)[pin_number] != 0xff) &&\n           (pin_mode_result = is_attached(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[pin_number] * 3), pin_mode_result != 0))\n        {\n          is_valid_pin = false;\n        }\n        if (is_valid_pin) {\n          attach_servo(pin_number,0xffffffff);\n          return;\n        }\n      }\n      break;\n    default:\n      send_string_from_offset(&DAT_200003d4,\"Unknown pin mode\");\n      break;\n    case 6:\n      if (pin_number < 0x3c) {\n        if ((&DAT_0800a908)[pin_number] == -1) {\n          pin_mode_result = 0;\n        }\n        else {\n          pin_mode_result = get_digital_pin_from_name();\n          if (pin_mode_result == 0) {\n            pin_mode_result = 0;\n          }\n          else {\n            pin_mode_result = get_digital_pin_from_name((int)(char)(&DAT_0800a908)[pin_number]);\n            if (pin_mode_result == 1) {\n              pin_mode_result = 0;\n            }\n            else {\n              pin_mode_result = is_pin_in_pin_map((int)(char)(&DAT_0800a908)[pin_number],&DAT_0800a69c);\n              if (pin_mode_result == 0) {\n                pin_mode_result = is_pin_in_pin_map((int)(char)(&DAT_0800a908)[pin_number],&DAT_0800a66c);\n              }\n            }\n          }\n        }\n      }\n      else {\n        pin_mode_result = 0;\n      }\n      if (pin_mode_result != 0) {\n        set_pin_mode_control(&DAT_200003d4,pin_number,6);\n        return;\n      }\n      break;\n    case 10:\n      break;\n    case 0xb:\n      if (pin_number < 0x3c) {\n        if ((&DAT_0800a908)[pin_number] == -1) {\n          is_valid_pin = false;\n        }\n        else {\n          pin_mode_result = get_digital_pin_from_name();\n          if (pin_mode_result == 0) {\n            is_valid_pin = false;\n          }\n          else {\n            pin_mode_result = get_digital_pin_from_name((int)(char)(&DAT_0800a908)[pin_number]);\n            if (pin_mode_result == 1) {\n              is_valid_pin = false;\n            }\n            else {\n              is_valid_pin = true;\n            }\n          }\n        }\n      }\n      else {\n        is_valid_pin = false;\n      }\n      if (is_valid_pin) {\n        set_pin_mode(pin_number,2);\n        set_pin_mode_control(&DAT_200003d4,pin_number,0xb);\n        set_pin_state(&DAT_200003d4,pin_number,1);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "current_name": "configure_pin_and_state_080005f8",
            "entrypoint": "0x080005f8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080005f8": "configure_pin_and_state_080005f8",
                "analogWrite": "analog_write",
                "attachServo": "attach_servo",
                "attached": "is_attached",
                "bVar3": "is_valid_pin",
                "cVar2": "character_value",
                "detachServo": "detach_servo",
                "digitalWrite": "write_digital_pin",
                "disableI2CPins": "disable_i2_c_pins",
                "getPinMode": "get_pin_mode_value",
                "iVar1": "pin_mode_result",
                "offset": "data_offset",
                "param_1": "pin_number",
                "param_2": "pin_mode",
                "pinMode": "set_pin_mode",
                "pinNametoDigitalPin": "get_digital_pin_from_name",
                "pin_in_pinmap": "is_pin_in_pin_map",
                "reportAnalogCallback": "report_analog_callback",
                "send_string_from_offset_08002f14": "send_string_from_offset",
                "setPinMode": "set_pin_mode_control",
                "setPinState": "set_pin_state",
                "uVar4": "analog_pin_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000a64": {
            "additional_data": {
                "DAT_0800a66c": {
                    "pin_map2": 1,
                    "pin_map_array2": 2
                },
                "DAT_0800a69c": {
                    "pin_map1": 1,
                    "pin_map_array1": 2
                },
                "DAT_0800a908": {
                    "pin_array": 1,
                    "pin_data": 1,
                    "pin_map_array": 1,
                    "pin_mapping": 1
                },
                "DAT_20000170": {
                    "device_enabled": 1,
                    "device_initialized": 1,
                    "i2c_device_initialized": 2,
                    "initialized": 1,
                    "initialized_flag": 1,
                    "is_initialized": 5
                },
                "DAT_20000314": {
                    "device_address": 2,
                    "device_config": 1
                },
                "FUN_08000a64": {
                    "configure_digital_pins": 1,
                    "configure_pins": 1,
                    "configure_pins_and_initialize_i2_c": 1,
                    "configure_pins_and_initialize_i2_c_device": 1,
                    "configure_pins_and_initialize_i2c": 1,
                    "configure_pins_and_initialize_i2c_device": 1,
                    "configure_pins_and_set_callbacks": 1,
                    "initialize_all_pins": 1,
                    "initialize_gpio_pins": 1,
                    "initialize_pins": 13,
                    "initialize_pins_and_configure": 1,
                    "initialize_pins_and_devices": 6,
                    "initialize_pins_and_set_mode": 1,
                    "pin_mode_setter": 1
                },
                "check_value_in_array_0800738a": {
                    "check_value_in_array": 8,
                    "check_value_in_pin_map": 1,
                    "is_value_in_array": 2
                },
                "configure_pin_and_state_080005f8": {
                    "configure_pin_and_state": 10,
                    "configure_pin_mode": 1
                },
                "find_character_index_080036ac": {
                    "find_character_index": 9,
                    "find_index_of_character": 1,
                    "get_character_index": 1
                },
                "iVar1": {
                    "pin_mode": 1,
                    "pin_mode_result": 1,
                    "pin_result": 6,
                    "pin_state": 1,
                    "pin_status": 6,
                    "pin_value": 2,
                    "result": 13,
                    "return_value": 1
                },
                "initialize_i2_c_device_and_configure_08002a26": {
                    "configure_i2_c_device_and_initialize": 1,
                    "configure_i2c_device": 1,
                    "initialize_and_configure_i2c_device": 1,
                    "initialize_configure_i2_c_device": 1,
                    "initialize_i2_c_device_and_configure": 5,
                    "initialize_i2c_device": 1,
                    "initialize_i2c_device_and_configure": 6
                },
                "pinNametoDigitalPin": {
                    "convert_pin_name_to_digital_pin": 1,
                    "get_digital_pin": 1,
                    "get_digital_pin_from_name": 3,
                    "get_digital_pin_from_pin_name": 1,
                    "get_digital_pin_index": 1
                },
                "pin_in_pinmap": {
                    "check_pin_in_pin_map": 1,
                    "check_pin_in_pinmap": 3
                },
                "setPinModeCallback": {
                    "set_pin_mode": 3,
                    "set_pin_mode_callback": 1
                },
                "uVar2": {
                    "pin_index": 27,
                    "pin_number": 4
                }
            },
            "called": [
                "FUN_0800738a",
                "FUN_080036ac",
                "FUN_08002a26",
                "FUN_080005f8"
            ],
            "calling": [
                "FUN_08001cd0"
            ],
            "code": "\nvoid initialize_pins_and_devices_08000a64(void)\n\n{\n  int result;\n  uint pin_index;\n  \n  for (pin_index = 0; pin_index < 0x3c; pin_index = pin_index + 1 & 0xff) {\n    if (pin_index < 0x3c) {\n      if ((&DAT_0800a908)[pin_index] == -1) {\n        result = 0;\n      }\n      else {\n        result = get_digital_pin_from_name();\n        if (result == 0) {\n          result = 0;\n        }\n        else {\n          result = get_digital_pin_from_name((int)(char)(&DAT_0800a908)[pin_index]);\n          if (result == 1) {\n            result = 0;\n          }\n          else {\n            result = check_pin_in_pinmap((int)(char)(&DAT_0800a908)[pin_index],&DAT_0800a69c);\n            if (result == 0) {\n              result = check_pin_in_pinmap((int)(char)(&DAT_0800a908)[pin_index],&DAT_0800a66c);\n            }\n          }\n        }\n      }\n    }\n    else {\n      result = 0;\n    }\n    if (result != 0) {\n      set_pin_mode(pin_index,6);\n    }\n  }\n  DAT_20000170 = 1;\n  initialize_i2c_device_and_configure(&DAT_20000314);\n  return;\n}\n\n",
            "current_name": "initialize_pins_and_devices_08000a64",
            "entrypoint": "0x08000a64",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000a64": "initialize_pins_and_devices_08000a64",
                "iVar1": "result",
                "initialize_i2_c_device_and_configure_08002a26": "initialize_i2c_device_and_configure",
                "pinNametoDigitalPin": "get_digital_pin_from_name",
                "pin_in_pinmap": "check_pin_in_pinmap",
                "setPinModeCallback": "set_pin_mode",
                "uVar2": "pin_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000aec": {
            "additional_data": {
                "DAT_0800a908": {
                    "pin_name_array": 1,
                    "pin_name_mappings": 1,
                    "pin_names": 4
                },
                "DAT_20000114": {
                    "counter1": 2,
                    "temp_var1": 1,
                    "temp_variable1": 1,
                    "unknown_value1": 2,
                    "value1": 2,
                    "var1": 5,
                    "variable1": 3
                },
                "DAT_2000011c": {
                    "counter2": 2,
                    "temp_var2": 1,
                    "temp_variable2": 1,
                    "unknown_value2": 2,
                    "value2": 2,
                    "var2": 5,
                    "variable2": 3
                },
                "DAT_20000170": {
                    "disable_i2_c": 1,
                    "disable_i2_c_flag": 2,
                    "enable_i2_c": 1,
                    "i2_c_enabled": 1,
                    "is_i2_c_enabled": 5,
                    "is_i2_c_pins_enabled": 1,
                    "use_i2_c_pins": 1
                },
                "DAT_20000171": {
                    "enable_i2_c": 1,
                    "flag": 1,
                    "initial_flag": 1,
                    "initialized": 1,
                    "is_gpio_initialized": 1,
                    "is_initialization_complete": 1,
                    "is_initialized": 8
                },
                "DAT_20000174": {
                    "array2": 1,
                    "buffer2": 1,
                    "digital_pin_array2": 1,
                    "digital_pin_states": 1,
                    "pin_data_array2": 1,
                    "pin_mode_values": 1,
                    "pin_values2": 1,
                    "some_array2": 1
                },
                "DAT_20000180": {
                    "analog_pin_states": 1,
                    "array3": 1,
                    "buffer3": 1,
                    "digital_pin_array3": 1,
                    "pin_data_array3": 1,
                    "pin_mode_callbacks": 1,
                    "pin_values3": 1,
                    "some_array3": 1
                },
                "DAT_200001e8": {
                    "array1": 1,
                    "buffer1": 1,
                    "digital_pin_array": 1,
                    "digital_pin_modes": 1,
                    "digital_pin_values": 1,
                    "pin_data_array1": 1,
                    "pin_values1": 1,
                    "some_array1": 1
                },
                "DAT_200001ed": {
                    "counter3": 1,
                    "temp_var3": 1,
                    "temp_variable3": 1,
                    "unknown_value3": 2,
                    "value": 1,
                    "value3": 2,
                    "var3": 5,
                    "variable3": 3
                },
                "DAT_200001f0": {
                    "analog_pin_modes": 1,
                    "array4": 1,
                    "data_array4": 1,
                    "data_buffer": 1,
                    "pin_mode_array": 1,
                    "pin_modes": 1,
                    "pin_status_array": 1,
                    "some_array4": 1,
                    "unknown_values": 2
                },
                "FUN_080005e0": {
                    "clear_data": 1,
                    "initialize": 1,
                    "initialize_function": 1,
                    "initialize_value": 1
                },
                "FUN_080005f8": {
                    "set_data": 1,
                    "set_pin_mode": 1,
                    "update_pin_mode": 1,
                    "update_value": 1
                },
                "FUN_08000aec": {
                    "initialize_device": 2,
                    "initialize_gpio": 3,
                    "initialize_i2_c": 3,
                    "initialize_i2_c_pins": 1,
                    "initialize_io": 3,
                    "initialize_pins": 18,
                    "initialize_ports": 1
                },
                "FUN_080036ac": {
                    "calculate_value": 1,
                    "get_digital_pin_number": 1,
                    "get_pin_value": 1,
                    "map_pin_nameto_digital_pin": 1
                },
                "bVar1": {
                    "is_digital": 1,
                    "is_digital_pin": 3,
                    "is_high": 1,
                    "is_high_pin": 1,
                    "is_i2_c_enabled": 1,
                    "is_input_mode": 1,
                    "is_matched": 1,
                    "is_pin_enabled": 1,
                    "is_pin_mode_callback": 1,
                    "is_pin_mode_callback_set": 1,
                    "is_pin_mode_set": 2,
                    "is_pin_reserved": 1,
                    "is_pin_set": 1,
                    "is_pin_valid": 4,
                    "is_special_pin": 1,
                    "is_valid": 1,
                    "is_valid_pin": 4,
                    "is_writable": 1,
                    "should_be_initialized": 1,
                    "should_set_pin_mode": 1
                },
                "disableI2CPins": {
                    "disable_i2_c": 1,
                    "disable_i2_c_communication": 2,
                    "disable_i2_c_components": 1,
                    "disable_i2_c_functionality": 3,
                    "disable_i2_c_interface": 1,
                    "disable_i2_c_pins": 16,
                    "disable_i2_c_ports": 1
                },
                "iVar2": {
                    "digital_pin": 11,
                    "digital_pin_num": 1,
                    "pin": 4,
                    "pin_digital": 1,
                    "pin_index": 4,
                    "pin_number": 1,
                    "pin_value": 7
                },
                "param_1": {
                    "pin_count": 1,
                    "pin_name": 1
                },
                "param_2": {
                    "mode": 1
                },
                "pinNametoDigitalPin": {
                    "convert_character_to_digital_pin": 1,
                    "convert_name_to_digital_pin": 1,
                    "convert_pin_name_to_digital_pin": 3,
                    "convert_pin_nameto_digital_pin": 1,
                    "get_digital_pin": 6,
                    "get_digital_pin_from_name": 9,
                    "get_digital_pin_from_pin_name": 1,
                    "get_pin_number": 1,
                    "name_to_digital_pin": 1,
                    "pin_name_to_digital_pin": 1
                },
                "setPinModeCallback": {
                    "set_digital_pin_mode": 1,
                    "set_pin_mode": 14,
                    "set_pin_mode_callback": 9
                },
                "uVar3": {
                    "i": 6,
                    "index": 18,
                    "loop_counter": 2,
                    "loop_index": 2,
                    "loop_var": 1,
                    "pin_counter": 1
                }
            },
            "called": [
                "FUN_080036ac",
                "FUN_080005e0",
                "FUN_080005f8"
            ],
            "calling": [
                "FUN_08001b48"
            ],
            "code": "\nvoid initialize_i2_c_pins_08000aec(void)\n\n{\n  bool is_pin_valid;\n  int digital_pin;\n  uint index;\n  \n  DAT_20000171 = 1;\n  if (DAT_20000170 != '\\0') {\n    disable_i2_c_pins();\n  }\n  for (index = 0; index < 5; index = index + 1 & 0xff) {\n    (&DAT_200001e8)[index] = 0;\n    (&DAT_20000174)[index] = 0;\n    (&DAT_20000180)[index] = 0;\n  }\n  for (index = 0; index < 0x3c; index = index + 1 & 0xff) {\n    if ((index - 0x2e & 0xff) < 0xe) {\n      if (index < 0x3c) {\n        digital_pin = (int)(char)(&DAT_0800a908)[index];\n      }\n      else {\n        digital_pin = -1;\n      }\n      digital_pin = get_digital_pin_from_name(digital_pin);\n      if (digital_pin == 0) {\n        is_pin_valid = false;\n      }\n      else {\n        if (index < 0x3c) {\n          digital_pin = (int)(char)(&DAT_0800a908)[index];\n        }\n        else {\n          digital_pin = -1;\n        }\n        digital_pin = get_digital_pin_from_name(digital_pin);\n        if (digital_pin == 1) {\n          is_pin_valid = false;\n        }\n        else {\n          is_pin_valid = true;\n        }\n      }\n    }\n    else {\n      is_pin_valid = false;\n    }\n    if (is_pin_valid) {\n      set_pin_mode(index,2);\n    }\n    else {\n      if ((((index < 0x3c) && ((&DAT_0800a908)[index] != -1)) &&\n          (digital_pin = get_digital_pin_from_name(), digital_pin != 0)) &&\n         (digital_pin = get_digital_pin_from_name((int)(char)(&DAT_0800a908)[index]), digital_pin != 1)) {\n        is_pin_valid = true;\n      }\n      if (is_pin_valid) {\n        set_pin_mode(index,1);\n      }\n    }\n    (&DAT_200001f0)[index] = 0xff;\n  }\n  DAT_20000114 = 0;\n  DAT_2000011c = 0;\n  DAT_200001ed = 0;\n  DAT_20000171 = 0;\n  return;\n}\n\n",
            "current_name": "initialize_i2_c_pins_08000aec",
            "entrypoint": "0x08000aec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000aec": "initialize_i2_c_pins_08000aec",
                "bVar1": "is_pin_valid",
                "disableI2CPins": "disable_i2_c_pins",
                "iVar2": "digital_pin",
                "pinNametoDigitalPin": "get_digital_pin_from_name",
                "setPinModeCallback": "set_pin_mode",
                "uVar3": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000be8": {
            "additional_data": {
                "FUN_08000be8": {
                    "digital_port_handler": 2,
                    "handle_digital_port": 1,
                    "port_data_processing": 1,
                    "process_data": 2,
                    "process_digital_port": 5,
                    "process_digital_port_data": 1,
                    "process_port_data": 1,
                    "send_digital_data": 1,
                    "send_digital_port": 10,
                    "send_digital_port_data": 1,
                    "update_digital_port": 4,
                    "update_digital_port_data": 1
                },
                "param2": {
                    "param2": 1
                },
                "param3": {
                    "param3": 1
                },
                "param4": {
                    "param4": 1
                },
                "param_1": {
                    "data_index": 1,
                    "input_index": 2,
                    "port_index": 21,
                    "port_number": 7
                },
                "param_2": {
                    "bit_mask": 6,
                    "data_mask": 1,
                    "filter": 2,
                    "mask": 5,
                    "param_mask": 1,
                    "port_data": 1,
                    "port_mask": 15
                },
                "param_3": {
                    "check_condition": 1,
                    "check_value": 2,
                    "condition": 13,
                    "condition_check": 3,
                    "condition_flag": 1,
                    "flag": 7,
                    "is_condition_met": 1,
                    "is_not_zero": 1,
                    "param_flag": 1,
                    "some_condition": 1
                },
                "param_4": {
                    "additional_param": 6,
                    "config": 1,
                    "extra_param": 2,
                    "param": 11,
                    "param4": 4,
                    "param_4": 3,
                    "param_data": 1,
                    "param_four": 1,
                    "param_value": 1,
                    "some_parameter": 1
                },
                "port_address": {
                    "port_address": 1
                },
                "puVar1": {
                    "address1": 1,
                    "address_1": 1,
                    "data1_ptr": 2,
                    "data_address": 2,
                    "data_array": 1,
                    "data_pointer_1": 1,
                    "data_ptr": 2,
                    "data_ptr1": 3,
                    "data_ptr_1": 2,
                    "digital_port_ptr": 1,
                    "port_address1": 1,
                    "port_address_1": 1,
                    "port_array": 1,
                    "port_data": 3,
                    "port_data1": 1,
                    "port_data_ptr": 2,
                    "port_state_ptr": 1,
                    "port_value_ptr": 1,
                    "ptr1": 1,
                    "ptr_base_address": 1,
                    "ptr_to_data": 1,
                    "start_address": 1
                },
                "puVar2": {
                    "address2": 1,
                    "address_2": 1,
                    "data2_ptr": 2,
                    "data_pointer_2": 1,
                    "data_ptr2": 3,
                    "data_ptr_2": 2,
                    "filtered_data": 3,
                    "masked_address": 1,
                    "masked_data": 5,
                    "masked_port_data": 1,
                    "masked_ptr": 1,
                    "masked_value": 1,
                    "port_address2": 1,
                    "port_address_2": 1,
                    "port_data2": 1,
                    "ptr2": 1,
                    "ptr_result": 1,
                    "result": 1,
                    "updated_port_data": 1,
                    "updated_port_state": 1,
                    "updated_port_value": 1
                },
                "send_digital_port_wrapper_08002efe": {
                    "send_digital_port_wrapper": 2
                }
            },
            "called": [
                "FUN_08002efe"
            ],
            "calling": [
                "FUN_08000ef8"
            ],
            "code": "\nvoid send_digital_port_data_08000be8(int port_index,uint port_mask,int condition,undefined4 param)\n\n{\n  undefined1 *port_data;\n  undefined1 *masked_data;\n  \n  port_data = &DAT_20000174;\n  masked_data = (undefined1 *)((byte)(&DAT_20000174)[port_index] & port_mask);\n  if ((condition != 0) ||\n     (port_data = (undefined1 *)(uint)(byte)(&DAT_20000180)[port_index], masked_data != port_data)) {\n    send_digital_port_wrapper(&DAT_200003d4,port_index,masked_data,port_data,param);\n    (&DAT_20000180)[port_index] = (char)masked_data;\n  }\n  return;\n}\n\n",
            "current_name": "send_digital_port_data_08000be8",
            "entrypoint": "0x08000be8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000be8": "send_digital_port_data_08000be8",
                "param_1": "port_index",
                "param_2": "port_mask",
                "param_3": "condition",
                "param_4": "param",
                "puVar1": "port_data",
                "puVar2": "masked_data",
                "send_digital_port_wrapper_08002efe": "send_digital_port_wrapper"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000ef8": {
            "additional_data": {
                "DAT_20000174": {
                    "b_var1": 1,
                    "byte_var1": 1,
                    "flag": 1,
                    "input_mask1": 1,
                    "pin_config1": 1,
                    "port_setting1": 1
                },
                "DAT_20000175": {
                    "b_var2": 1,
                    "byte_var2": 1,
                    "input_mask2": 1,
                    "pin_config2": 1,
                    "port_setting2": 1
                },
                "DAT_20000176": {
                    "b_var3": 1,
                    "byte_var3": 1,
                    "input_mask3": 1,
                    "pin_config3": 1,
                    "port_setting3": 1
                },
                "DAT_20000177": {
                    "b_var4": 1,
                    "byte_var4": 1,
                    "input_mask4": 1,
                    "pin_config4": 1,
                    "port_setting4": 1
                },
                "DAT_20000178": {
                    "b_var5": 1,
                    "byte_var5": 1,
                    "input_mask5": 1,
                    "pin_config5": 1,
                    "port_setting5": 1
                },
                "DAT_200001e8": {
                    "enable_port1": 1,
                    "flag_enabled": 1,
                    "flag_var1": 1,
                    "is_port_enabled": 1
                },
                "DAT_200001e9": {
                    "enable_port2": 1,
                    "flag_var2": 1,
                    "is_port_enabled": 1
                },
                "DAT_200001ea": {
                    "enable_port3": 1,
                    "flag_var3": 1,
                    "is_port_enabled": 1
                },
                "DAT_200001eb": {
                    "enable_port4": 1,
                    "flag_var4": 1,
                    "is_port_enabled": 1
                },
                "DAT_200001ec": {
                    "enable_port5": 1,
                    "flag_var5": 1,
                    "is_port_enabled": 1
                },
                "FUN_08000ef8": {
                    "configure_output_ports": 1,
                    "initialize_output_ports": 3,
                    "process_digital_input": 1,
                    "process_digital_inputs": 1,
                    "process_digital_pins": 3,
                    "process_digital_ports": 1,
                    "process_gpio": 2,
                    "process_io": 1,
                    "read_digital_pins": 1,
                    "update_digital_output": 1,
                    "update_digital_outputs": 1,
                    "update_digital_pin": 1,
                    "update_digital_pin_status": 1,
                    "update_output_port": 1,
                    "update_output_ports": 11,
                    "update_ports": 1
                },
                "bVar1": {
                    "byte1": 2,
                    "byte_flag": 2,
                    "byte_value1": 1,
                    "byte_var1": 1,
                    "current_value": 1,
                    "data_1": 1,
                    "digital_output_flags": 1,
                    "flag": 2,
                    "flag_value": 1,
                    "input_byte": 1,
                    "input_data1": 1,
                    "input_mask_byte": 1,
                    "input_state1": 1,
                    "io_config": 1,
                    "pin_config": 1,
                    "port_byte": 1,
                    "port_config1": 1,
                    "port_config_byte": 1,
                    "port_setting": 1,
                    "port_status": 1,
                    "port_values": 1
                },
                "bVar3": {
                    "bool_value": 1,
                    "digital_value": 1,
                    "flag": 1,
                    "has_input": 1,
                    "is_digital_high": 1,
                    "is_high": 11,
                    "is_pin_high": 2,
                    "pin_flag": 1,
                    "pin_value": 1,
                    "read_result": 1,
                    "read_value": 1,
                    "result": 1,
                    "status_flag": 1
                },
                "bVar4": {
                    "digital_value": 1,
                    "new_pin_state": 1,
                    "output": 3,
                    "output_byte": 2,
                    "output_data": 2,
                    "output_mask_byte": 1,
                    "output_port_value": 1,
                    "output_state1": 1,
                    "output_value": 7,
                    "port_data": 1,
                    "port_value": 2,
                    "result": 1,
                    "updated_port_status": 1
                },
                "digitalRead": {
                    "read_digital": 2,
                    "read_digital_pin": 5,
                    "read_digital_value": 1
                },
                "iVar2": {
                    "int_value": 1,
                    "pin": 4,
                    "pin_index": 1,
                    "pin_num": 2,
                    "pin_number": 5,
                    "pin_result": 1,
                    "pin_state": 1,
                    "pin_status": 2,
                    "pin_value": 7
                },
                "outputPort": {
                    "set_output_port": 3,
                    "set_output_port_status": 1,
                    "update_output_port": 1,
                    "write_output_port": 1,
                    "write_port": 1,
                    "write_to_digital_port": 1
                },
                "param_1": {
                    "arg1": 1,
                    "pin": 1,
                    "pin_name": 1
                },
                "param_2": {
                    "arg2": 1,
                    "mask": 1,
                    "port": 1
                },
                "param_3": {
                    "additional": 1,
                    "arg3": 1,
                    "value": 1
                },
                "param_4": {
                    "arg4": 1,
                    "dummy": 1,
                    "option": 1
                },
                "pinNametoDigitalPin": {
                    "find_digital_pin": 1,
                    "get_digital_pin": 2,
                    "get_digital_pin_from_name": 2,
                    "get_digital_pin_from_pin_name": 1,
                    "get_pin": 1,
                    "get_pin_number": 1
                },
                "pinNum": {
                    "pin_number": 1
                },
                "portNum": {
                    "port_number": 1
                }
            },
            "called": [
                "FUN_08000be8",
                "FUN_080036ac",
                "FUN_08008a6c"
            ],
            "calling": [
                "FUN_080022f8"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08001ade) */\n/* WARNING: Removing unreachable block (ram,0x08001a4a) */\n/* WARNING: Removing unreachable block (ram,0x080019b6) */\n/* WARNING: Removing unreachable block (ram,0x08001912) */\n/* WARNING: Removing unreachable block (ram,0x08001866) */\n/* WARNING: Removing unreachable block (ram,0x080017d2) */\n/* WARNING: Removing unreachable block (ram,0x0800173e) */\n/* WARNING: Removing unreachable block (ram,0x0800169a) */\n/* WARNING: Removing unreachable block (ram,0x080015ee) */\n/* WARNING: Removing unreachable block (ram,0x0800155a) */\n/* WARNING: Removing unreachable block (ram,0x08001490) */\n/* WARNING: Removing unreachable block (ram,0x080014a2) */\n/* WARNING: Removing unreachable block (ram,0x080014e4) */\n/* WARNING: Removing unreachable block (ram,0x080014b0) */\n/* WARNING: Removing unreachable block (ram,0x080014ba) */\n/* WARNING: Removing unreachable block (ram,0x080014e8) */\n/* WARNING: Removing unreachable block (ram,0x080014c2) */\n/* WARNING: Removing unreachable block (ram,0x080014b6) */\n/* WARNING: Removing unreachable block (ram,0x08001496) */\n/* WARNING: Removing unreachable block (ram,0x08001430) */\n/* WARNING: Removing unreachable block (ram,0x08001376) */\n/* WARNING: Removing unreachable block (ram,0x080012e2) */\n/* WARNING: Removing unreachable block (ram,0x0800124e) */\n/* WARNING: Removing unreachable block (ram,0x080011b8) */\n/* WARNING: Removing unreachable block (ram,0x08001100) */\n/* WARNING: Removing unreachable block (ram,0x0800106c) */\n/* WARNING: Removing unreachable block (ram,0x08000fd8) */\n/* WARNING: Removing unreachable block (ram,0x08000f42) */\n/* WARNING: Removing unreachable block (ram,0x08000f8e) */\n/* WARNING: Removing unreachable block (ram,0x08001022) */\n/* WARNING: Removing unreachable block (ram,0x080010b6) */\n/* WARNING: Removing unreachable block (ram,0x0800114a) */\n/* WARNING: Removing unreachable block (ram,0x08001204) */\n/* WARNING: Removing unreachable block (ram,0x08001298) */\n/* WARNING: Removing unreachable block (ram,0x0800132c) */\n/* WARNING: Removing unreachable block (ram,0x080013c0) */\n/* WARNING: Removing unreachable block (ram,0x0800147c) */\n/* WARNING: Removing unreachable block (ram,0x08001510) */\n/* WARNING: Removing unreachable block (ram,0x080015a4) */\n/* WARNING: Removing unreachable block (ram,0x08001638) */\n/* WARNING: Removing unreachable block (ram,0x080016f4) */\n/* WARNING: Removing unreachable block (ram,0x08001788) */\n/* WARNING: Removing unreachable block (ram,0x0800181c) */\n/* WARNING: Removing unreachable block (ram,0x080018b0) */\n/* WARNING: Removing unreachable block (ram,0x0800196c) */\n/* WARNING: Removing unreachable block (ram,0x08001a00) */\n/* WARNING: Removing unreachable block (ram,0x08001a94) */\n/* WARNING: Removing unreachable block (ram,0x08001b28) */\n/* WARNING: Removing unreachable block (ram,0x080014ca) */\n\nvoid update_output_ports_08000ef8(void)\n\n{\n  byte flag;\n  int pin_value;\n  bool is_high;\n  byte output_value;\n  \n  flag = DAT_20000174;\n  if (DAT_200001e8 != '\\0') {\n    pin_value = get_digital_pin_from_name();\n    if (pin_value == 0) {\n      output_value = 0;\n    }\n    else {\n      pin_value = get_digital_pin_from_name(3);\n      if (pin_value == 1) {\n        output_value = 0;\n      }\n      else if ((flag & 1) == 0) {\n        output_value = 0;\n      }\n      else {\n        pin_value = read_digital_pin(0);\n        if (pin_value == 0) {\n          output_value = 0;\n        }\n        else {\n          output_value = 1;\n        }\n      }\n    }\n    pin_value = get_digital_pin_from_name();\n    if (pin_value == 0) {\n      is_high = false;\n    }\n    else {\n      pin_value = get_digital_pin_from_name(2);\n      if (pin_value == 1) {\n        is_high = false;\n      }\n      else if ((flag & 2) == 0) {\n        is_high = false;\n      }\n      else {\n        pin_value = read_digital_pin(1);\n        if (pin_value == 0) {\n          is_high = false;\n        }\n        else {\n          is_high = true;\n        }\n      }\n    }\n    if (is_high) {\n      output_value = output_value | 2;\n    }\n    pin_value = get_digital_pin_from_name();\n    if (pin_value == 0) {\n      is_high = false;\n    }\n    else {\n      pin_value = get_digital_pin_from_name(10);\n      if (pin_value == 1) {\n        is_high = false;\n      }\n      else if ((flag & 4) == 0) {\n        is_high = false;\n      }\n      else {\n        pin_value = read_digital_pin(2);\n        if (pin_value == 0) {\n          is_high = false;\n        }\n        else {\n          is_high = true;\n        }\n      }\n    }\n    if (is_high) {\n      output_value = output_value | 4;\n    }\n    pin_value = get_digital_pin_from_name();\n    if (pin_value == 0) {\n      is_high = false;\n    }\n    else {\n      pin_value = get_digital_pin_from_name(0x13);\n      if (pin_value == 1) {\n        is_high = false;\n      }\n      else if ((flag & 8) == 0) {\n        is_high = false;\n      }\n      else {\n        pin_value = read_digital_pin(3);\n        if (pin_value == 0) {\n          is_high = false;\n        }\n        else {\n          is_high = true;\n        }\n      }\n    }\n    if (is_high) {\n      output_value = output_value | 8;\n    }\n    pin_value = get_digital_pin_from_name();\n    if (pin_value == 0) {\n      is_high = false;\n    }\n    else {\n      pin_value = get_digital_pin_from_name(0x15);\n      if (pin_value == 1) {\n        is_high = false;\n      }\n      else if ((flag & 0x10) == 0) {\n        is_high = false;\n      }\n      else {\n        pin_value = read_digital_pin(4);\n        if (pin_value == 0) {\n          is_high = false;\n        }\n        else {\n          is_high = true;\n        }\n      }\n    }\n    if (is_high) {\n      output_value = output_value | 0x10;\n    }\n    pin_value = get_digital_pin_from_name();\n    if (pin_value == 0) {\n      is_high = false;\n    }\n    else {\n      pin_value = get_digital_pin_from_name(0x14);\n      if (pin_value == 1) {\n        is_high = false;\n      }\n      else if ((flag & 0x20) == 0) {\n        is_high = false;\n      }\n      else {\n        pin_value = read_digital_pin(5);\n        if (pin_value == 0) {\n          is_high = false;\n        }\n        else {\n          is_high = true;\n        }\n      }\n    }\n    if (is_high) {\n      output_value = output_value | 0x20;\n    }\n    pin_value = get_digital_pin_from_name();\n    if (pin_value == 0) {\n      is_high = false;\n    }\n    else {\n      pin_value = get_digital_pin_from_name(0x1a);\n      if (pin_value == 1) {\n        is_high = false;\n      }\n      else if ((flag & 0x40) == 0) {\n        is_high = false;\n      }\n      else {\n        pin_value = read_digital_pin(6);\n        if (pin_value == 0) {\n          is_high = false;\n        }\n        else {\n          is_high = true;\n        }\n      }\n    }\n    if (is_high) {\n      output_value = output_value | 0x40;\n    }\n    pin_value = get_digital_pin_from_name();\n    if (pin_value == 0) {\n      is_high = false;\n    }\n    else {\n      pin_value = get_digital_pin_from_name(8);\n      if (pin_value == 1) {\n        is_high = false;\n      }\n      else if ((flag & 0x80) == 0) {\n        is_high = false;\n      }\n      else {\n        pin_value = read_digital_pin(7);\n        if (pin_value == 0) {\n          is_high = false;\n        }\n        else {\n          is_high = true;\n        }\n      }\n    }\n    if (is_high) {\n      output_value = output_value | 0x80;\n    }\n    set_output_port(0,output_value);\n  }\n  flag = DAT_20000175;\n  if (DAT_200001e9 != '\\0') {\n    pin_value = get_digital_pin_from_name();\n    if (pin_value == 0) {\n      output_value = 0;\n    }\n    else {\n      pin_value = get_digital_pin_from_name(9);\n      if (pin_value == 1) {\n        output_value = 0;\n      }\n      else if ((flag & 1) == 0) {\n        output_value = 0;\n      }\n      else {\n        pin_value = read_digital_pin(8);\n        if (pin_value == 0) {\n          output_value = 0;\n        }\n        else {\n          output_value = 1;\n        }\n      }\n    }\n    pin_value = get_digital_pin_from_name();\n    if (pin_value == 0) {\n      is_high = false;\n    }\n    else {\n      pin_value = get_digital_pin_from_name(0x27);\n      if (pin_value == 1) {\n        is_high = false;\n      }\n      else if ((flag & 2) == 0) {\n        is_high = false;\n      }\n      else {\n        pin_value = read_digital_pin(9);\n        if (pin_value == 0) {\n          is_high = false;\n        }\n        else {\n          is_high = true;\n        }\n      }\n    }\n    if (is_high) {\n      output_value = output_value | 2;\n    }\n    pin_value = get_digital_pin_from_name();\n    if (pin_value == 0) {\n      is_high = false;\n    }\n    else {\n      pin_value = get_digital_pin_from_name(0x16);\n      if (pin_value == 1) {\n        is_high = false;\n      }\n      else if ((flag & 4) == 0) {\n        is_high = false;\n      }\n      else {\n        pin_value = read_digital_pin(10);\n        if (pin_value == 0) {\n          is_high = false;\n        }\n        else {\n          is_high = true;\n        }\n      }\n    }\n    if (is_high) {\n      output_value = output_value | 4;\n    }\n    pin_value = get_digital_pin_from_name();\n    if (pin_value == 0) {\n      is_high = false;\n    }\n    else {\n      pin_value = get_digital_pin_from_name(7);\n      if (pin_value == 1) {\n        is_high = false;\n      }\n      else if ((flag & 8) == 0) {\n        is_high = false;\n      }\n      else {\n        pin_value = read_digital_pin(0xb);\n        if (pin_value == 0) {\n          is_high = false;\n        }\n        else {\n          is_high = true;\n        }\n      }\n    }\n    if (is_high) {\n      output_value = output_value | 8;\n    }\n    pin_value = get_digital_pin_from_name();\n    if (pin_value == 0) {\n      is_high = false;\n    }\n    else {\n      pin_value = get_digital_pin_from_name(6);\n      if (pin_value == 1) {\n        is_high = false;\n      }\n      else if ((flag & 0x10) == 0) {\n        is_high = false;\n      }\n      else {\n        pin_value = read_digital_pin(0xc);\n        if (pin_value == 0) {\n          is_high = false;\n        }\n        else {\n          is_high = true;\n        }\n      }\n    }\n    if (is_high) {\n      output_value = output_value | 0x10;\n    }\n    pin_value = get_digital_pin_from_name();\n    if (pin_value == 0) {\n      is_high = false;\n    }\n    else {\n      pin_value = get_digital_pin_from_name(5);\n      if (pin_value == 1) {\n        is_high = false;\n      }\n      else if ((flag & 0x20) == 0) {\n        is_high = false;\n      }\n      else {\n        pin_value = read_digital_pin(0xd);\n        if (pin_value == 0) {\n          is_high = false;\n        }\n        else {\n          is_high = true;\n        }\n      }\n    }\n    if (is_high) {\n      output_value = output_value | 0x20;\n    }\n    pin_value = get_digital_pin_from_name();\n    if (pin_value == 0) {\n      is_high = false;\n    }\n    else {\n      pin_value = get_digital_pin_from_name(0x19);\n      if (pin_value == 1) {\n        is_high = false;\n      }\n      else if ((flag & 0x40) == 0) {\n        is_high = false;\n      }\n      else {\n        pin_value = read_digital_pin(0xe);\n        if (pin_value == 0) {\n          is_high = false;\n        }\n        else {\n          is_high = true;\n        }\n      }\n    }\n    if (is_high) {\n      output_value = output_value | 0x40;\n    }\n    pin_value = get_digital_pin_from_name();\n    if (pin_value == 0) {\n      is_high = false;\n    }\n    else {\n      pin_value = get_digital_pin_from_name(0x18);\n      if (pin_value == 1) {\n        is_high = false;\n      }\n      else if ((flag & 0x80) == 0) {\n        is_high = false;\n      }\n      else {\n        pin_value = read_digital_pin(0xf);\n        if (pin_value == 0) {\n          is_high = false;\n        }\n        else {\n          is_high = true;\n        }\n      }\n    }\n    if (is_high) {\n      output_value = output_value | 0x80;\n    }\n    set_output_port(1,output_value,0);\n  }\n  flag = DAT_20000176;\n  if (DAT_200001ea != '\\0') {\n    pin_value = get_digital_pin_from_name();\n    if (pin_value == 0) {\n      output_value = 0;\n    }\n    else {\n      pin_value = get_digital_pin_from_name(0x2a);\n      if (pin_value == 1) {\n        output_value = 0;\n      }\n      else if ((flag & 1) == 0) {\n        output_value = 0;\n      }\n      else {\n        pin_value = read_digital_pin(0x10);\n        if (pin_value == 0) {\n          output_value = 0;\n        }\n        else {\n          output_value = 1;\n        }\n      }\n    }\n    pin_value = get_digital_pin_from_name();\n    if (pin_value == 0) {\n      is_high = false;\n    }\n    else {\n      pin_value = get_digital_pin_from_name(0x2c);\n      if (pin_value == 1) {\n        is_high = false;\n      }\n      else if ((flag & 2) == 0) {\n        is_high = false;\n      }\n      else {\n        pin_value = read_digital_pin(0x11);\n        if (pin_value == 0) {\n          is_high = false;\n        }\n        else {\n          is_high = true;\n        }\n      }\n    }\n    if (is_high) {\n      output_value = output_value | 2;\n    }\n    pin_value = get_digital_pin_from_name();\n    if (pin_value == 0) {\n      is_high = false;\n    }\n    else {\n      pin_value = get_digital_pin_from_name(0xd);\n      if (pin_value == 1) {\n        is_high = false;\n      }\n      else if ((flag & 8) == 0) {\n        is_high = false;\n      }\n      else {\n        pin_value = read_digital_pin(0x13);\n        if (pin_value == 0) {\n          is_high = false;\n        }\n        else {\n          is_high = true;\n        }\n      }\n    }\n    if (is_high) {\n      output_value = output_value | 8;\n    }\n    pin_value = get_digital_pin_from_name();\n    if (pin_value == 0) {\n      is_high = false;\n    }\n    else {\n      pin_value = get_digital_pin_from_name(0xe);\n      if (pin_value == 1) {\n        is_high = false;\n      }\n      else if ((flag & 0x10) == 0) {\n        is_high = false;\n      }\n      else {\n        pin_value = read_digital_pin(0x14);\n        if (pin_value == 0) {\n          is_high = false;\n        }\n        else {\n          is_high = true;\n        }\n      }\n    }\n    if (is_high) {\n      output_value = output_value | 0x10;\n    }\n    pin_value = get_digital_pin_from_name();\n    if (pin_value == 0) {\n      is_high = false;\n    }\n    else {\n      pin_value = get_digital_pin_from_name(0xf);\n      if (pin_value == 1) {\n        is_high = false;\n      }\n      else if ((flag & 0x20) == 0) {\n        is_high = false;\n      }\n      else {\n        pin_value = read_digital_pin(0x15);\n        if (pin_value == 0) {\n          is_high = false;\n        }\n        else {\n          is_high = true;\n        }\n      }\n    }\n    if (is_high) {\n      output_value = output_value | 0x20;\n    }\n    pin_value = get_digital_pin_from_name();\n    if (pin_value == 0) {\n      is_high = false;\n    }\n    else {\n      pin_value = get_digital_pin_from_name(0x17);\n      if (pin_value == 1) {\n        is_high = false;\n      }\n      else if ((flag & 0x40) == 0) {\n        is_high = false;\n      }\n      else {\n        pin_value = read_digital_pin(0x16);\n        if (pin_value == 0) {\n          is_high = false;\n        }\n        else {\n          is_high = true;\n        }\n      }\n    }\n    if (is_high) {\n      output_value = output_value | 0x40;\n    }\n    pin_value = get_digital_pin_from_name();\n    if (pin_value == 0) {\n      is_high = false;\n    }\n    else {\n      pin_value = get_digital_pin_from_name(0x2d);\n      if (pin_value == 1) {\n        is_high = false;\n      }\n      else if ((flag & 0x80) == 0) {\n        is_high = false;\n      }\n      else {\n        pin_value = read_digital_pin(0x17);\n        if (pin_value == 0) {\n          is_high = false;\n        }\n        else {\n          is_high = true;\n        }\n      }\n    }\n    if (is_high) {\n      output_value = output_value | 0x80;\n    }\n    set_output_port(2,output_value,0);\n  }\n  flag = DAT_20000177;\n  if (DAT_200001eb != '\\0') {\n    pin_value = get_digital_pin_from_name();\n    if (pin_value == 0) {\n      output_value = 0;\n    }\n    else {\n      pin_value = get_digital_pin_from_name(0x2e);\n      if (pin_value == 1) {\n        output_value = 0;\n      }\n      else if ((flag & 1) == 0) {\n        output_value = 0;\n      }\n      else {\n        pin_value = read_digital_pin(0x18);\n        if (pin_value == 0) {\n          output_value = 0;\n        }\n        else {\n          output_value = 1;\n        }\n      }\n    }\n    pin_value = get_digital_pin_from_name();\n    if (pin_value == 0) {\n      is_high = false;\n    }\n    else {\n      pin_value = get_digital_pin_from_name(0x2f);\n      if (pin_value == 1) {\n        is_high = false;\n      }\n      else if ((flag & 2) == 0) {\n        is_high = false;\n      }\n      else {\n        pin_value = read_digital_pin(0x19);\n        if (pin_value == 0) {\n          is_high = false;\n        }\n        else {\n          is_high = true;\n        }\n      }\n    }\n    if (is_high) {\n      output_value = output_value | 2;\n    }\n    pin_value = get_digital_pin_from_name();\n    if (pin_value == 0) {\n      is_high = false;\n    }\n    else {\n      pin_value = get_digital_pin_from_name(0x30);\n      if (pin_value == 1) {\n        is_high = false;\n      }\n      else if ((flag & 4) == 0) {\n        is_high = false;\n      }\n      else {\n        pin_value = read_digital_pin(0x1a);\n        if (pin_value == 0) {\n          is_high = false;\n        }\n        else {\n          is_high = true;\n        }\n      }\n    }\n    if (is_high) {\n      output_value = output_value | 4;\n    }\n    pin_value = get_digital_pin_from_name();\n    if (pin_value == 0) {\n      is_high = false;\n    }\n    else {\n      pin_value = get_digital_pin_from_name(0x31);\n      if (pin_value == 1) {\n        is_high = false;\n      }\n      else if ((flag & 8) == 0) {\n        is_high = false;\n      }\n      else {\n        pin_value = read_digital_pin(0x1b);\n        if (pin_value == 0) {\n          is_high = false;\n        }\n        else {\n          is_high = true;\n        }\n      }\n    }\n    if (is_high) {\n      output_value = output_value | 8;\n    }\n    pin_value = get_digital_pin_from_name();\n    if (pin_value == 0) {\n      is_high = false;\n    }\n    else {\n      pin_value = get_digital_pin_from_name(0x22);\n      if (pin_value == 1) {\n        is_high = false;\n      }\n      else if ((flag & 0x10) == 0) {\n        is_high = false;\n      }\n      else {\n        pin_value = read_digital_pin(0x1c);\n        if (pin_value == 0) {\n          is_high = false;\n        }\n        else {\n          is_high = true;\n        }\n      }\n    }\n    if (is_high) {\n      output_value = output_value | 0x10;\n    }\n    pin_value = get_digital_pin_from_name();\n    if (pin_value == 0) {\n      is_high = false;\n    }\n    else {\n      pin_value = get_digital_pin_from_name(0x23);\n      if (pin_value == 1) {\n        is_high = false;\n      }\n      else if ((flag & 0x20) == 0) {\n        is_high = false;\n      }\n      else {\n        pin_value = read_digital_pin(0x1d);\n        if (pin_value == 0) {\n          is_high = false;\n        }\n        else {\n          is_high = true;\n        }\n      }\n    }\n    if (is_high) {\n      output_value = output_value | 0x20;\n    }\n    pin_value = get_digital_pin_from_name();\n    if (pin_value == 0) {\n      is_high = false;\n    }\n    else {\n      pin_value = get_digital_pin_from_name(0x2b);\n      if (pin_value == 1) {\n        is_high = false;\n      }\n      else if ((flag & 0x40) == 0) {\n        is_high = false;\n      }\n      else {\n        pin_value = read_digital_pin(0x1e);\n        if (pin_value == 0) {\n          is_high = false;\n        }\n        else {\n          is_high = true;\n        }\n      }\n    }\n    if (is_high) {\n      output_value = output_value | 0x40;\n    }\n    pin_value = get_digital_pin_from_name();\n    if (pin_value == 0) {\n      is_high = false;\n    }\n    else {\n      pin_value = get_digital_pin_from_name(0x32);\n      if (pin_value == 1) {\n        is_high = false;\n      }\n      else if ((flag & 0x80) == 0) {\n        is_high = false;\n      }\n      else {\n        pin_value = read_digital_pin(0x1f);\n        if (pin_value == 0) {\n          is_high = false;\n        }\n        else {\n          is_high = true;\n        }\n      }\n    }\n    if (is_high) {\n      output_value = output_value | 0x80;\n    }\n    set_output_port(3,output_value,0);\n  }\n  flag = DAT_20000178;\n  if (DAT_200001ec != '\\0') {\n    pin_value = get_digital_pin_from_name();\n    if (pin_value == 0) {\n      output_value = 0;\n    }\n    else {\n      pin_value = get_digital_pin_from_name(0x29);\n      if (pin_value == 1) {\n        output_value = 0;\n      }\n      else if ((flag & 1) == 0) {\n        output_value = 0;\n      }\n      else {\n        pin_value = read_digital_pin(0x20);\n        if (pin_value == 0) {\n          output_value = 0;\n        }\n        else {\n          output_value = 1;\n        }\n      }\n    }\n    pin_value = get_digital_pin_from_name();\n    if (pin_value == 0) {\n      is_high = false;\n    }\n    else {\n      pin_value = get_digital_pin_from_name(0x28);\n      if (pin_value == 1) {\n        is_high = false;\n      }\n      else if ((flag & 2) == 0) {\n        is_high = false;\n      }\n      else {\n        pin_value = read_digital_pin(0x21);\n        if (pin_value == 0) {\n          is_high = false;\n        }\n        else {\n          is_high = true;\n        }\n      }\n    }\n    if (is_high) {\n      output_value = output_value | 2;\n    }\n    pin_value = get_digital_pin_from_name();\n    if (pin_value == 0) {\n      is_high = false;\n    }\n    else {\n      pin_value = get_digital_pin_from_name(0x26);\n      if (pin_value == 1) {\n        is_high = false;\n      }\n      else if ((flag & 4) == 0) {\n        is_high = false;\n      }\n      else {\n        pin_value = read_digital_pin(0x22);\n        if (pin_value == 0) {\n          is_high = false;\n        }\n        else {\n          is_high = true;\n        }\n      }\n    }\n    if (is_high) {\n      output_value = output_value | 4;\n    }\n    pin_value = get_digital_pin_from_name();\n    if (pin_value == 0) {\n      is_high = false;\n    }\n    else {\n      pin_value = get_digital_pin_from_name(0x25);\n      if (pin_value == 1) {\n        is_high = false;\n      }\n      else if ((flag & 8) == 0) {\n        is_high = false;\n      }\n      else {\n        pin_value = read_digital_pin(0x23);\n        if (pin_value == 0) {\n          is_high = false;\n        }\n        else {\n          is_high = true;\n        }\n      }\n    }\n    if (is_high) {\n      output_value = output_value | 8;\n    }\n    pin_value = get_digital_pin_from_name();\n    if (pin_value == 0) {\n      is_high = false;\n    }\n    else {\n      pin_value = get_digital_pin_from_name(0xc);\n      if (pin_value == 1) {\n        is_high = false;\n      }\n      else if ((flag & 0x10) == 0) {\n        is_high = false;\n      }\n      else {\n        pin_value = read_digital_pin(0x24);\n        if (pin_value == 0) {\n          is_high = false;\n        }\n        else {\n          is_high = true;\n        }\n      }\n    }\n    if (is_high) {\n      output_value = output_value | 0x10;\n    }\n    pin_value = get_digital_pin_from_name();\n    if (pin_value == 0) {\n      is_high = false;\n    }\n    else {\n      pin_value = get_digital_pin_from_name(0xb);\n      if (pin_value == 1) {\n        is_high = false;\n      }\n      else if ((flag & 0x20) == 0) {\n        is_high = false;\n      }\n      else {\n        pin_value = read_digital_pin(0x25);\n        if (pin_value == 0) {\n          is_high = false;\n        }\n        else {\n          is_high = true;\n        }\n      }\n    }\n    if (is_high) {\n      output_value = output_value | 0x20;\n    }\n    pin_value = get_digital_pin_from_name();\n    if (pin_value == 0) {\n      is_high = false;\n    }\n    else {\n      pin_value = get_digital_pin_from_name(0x1c);\n      if (pin_value == 1) {\n        is_high = false;\n      }\n      else if ((flag & 0x40) == 0) {\n        is_high = false;\n      }\n      else {\n        pin_value = read_digital_pin(0x26);\n        if (pin_value == 0) {\n          is_high = false;\n        }\n        else {\n          is_high = true;\n        }\n      }\n    }\n    if (is_high) {\n      output_value = output_value | 0x40;\n    }\n    pin_value = get_digital_pin_from_name();\n    if (pin_value == 0) {\n      is_high = false;\n    }\n    else {\n      pin_value = get_digital_pin_from_name(0x1b);\n      if (pin_value == 1) {\n        is_high = false;\n      }\n      else if ((flag & 0x80) == 0) {\n        is_high = false;\n      }\n      else {\n        pin_value = read_digital_pin(0x27);\n        if (pin_value == 0) {\n          is_high = false;\n        }\n        else {\n          is_high = true;\n        }\n      }\n    }\n    if (is_high) {\n      output_value = output_value | 0x80;\n    }\n    set_output_port(4,output_value,0);\n  }\n  return;\n}\n\n",
            "current_name": "update_output_ports_08000ef8",
            "entrypoint": "0x08000ef8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000ef8": "update_output_ports_08000ef8",
                "bVar1": "flag",
                "bVar3": "is_high",
                "bVar4": "output_value",
                "digitalRead": "read_digital_pin",
                "iVar2": "pin_value",
                "outputPort": "set_output_port",
                "pinNametoDigitalPin": "get_digital_pin_from_name"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001b48": {
            "additional_data": {
                "FUN_08001b48": {
                    "initialize_and_start_gateway": 1,
                    "initialize_device": 3,
                    "initialize_firmware": 6,
                    "initialize_firmware_and_devices": 1,
                    "initialize_gateway": 18,
                    "initialize_system": 2
                },
                "execute_afl_call_0800018c": {
                    "execute_afl_call": 23
                },
                "extract_file_name_and_extension_08002e44": {
                    "extract_file_name_and_extension": 27
                },
                "initAndUpdateDeviceInfo": {
                    "init_and_update_device_info": 1
                },
                "initialize_and_update_device_info_08003048": {
                    "init_and_update_device_info": 1,
                    "initialize_and_update_device_info": 27,
                    "initialize_device_info": 3
                },
                "initialize_and_update_device_info_08003048_1": {
                    "initialize_device_info": 1
                },
                "initialize_i2_c_pins_08000aec": {
                    "initialize_i2_c_pins": 27
                },
                "setFirmwareNameAndVersion": {
                    "set_device_firmware": 1,
                    "set_firmware_info": 3,
                    "set_firmware_name_and_version": 5,
                    "set_gateway_firmware_name_and_version": 1
                },
                "setThirdParam": {
                    "set_third_param": 1
                },
                "set_param_3_08002f94": {
                    "set_param3": 19,
                    "set_param_three": 7,
                    "set_parameter_three": 2,
                    "set_third_param": 2,
                    "set_third_parameter": 1
                },
                "set_param_3_08002f94_1": {
                    "set_param3": 1
                },
                "startForkserver": {
                    "start_fork_server": 6,
                    "start_forkserver": 6
                },
                "startForkserver_1": {
                    "start_fork_server": 1
                },
                "systemResetCallback": {
                    "perform_system_reset": 1,
                    "perform_system_reset_callback": 1,
                    "reset_callback": 1,
                    "reset_device": 1,
                    "reset_system": 3,
                    "reset_system_callback": 3,
                    "system_reset_callback": 2
                },
                "updateDataIfMax": {
                    "update_data_if_max": 1
                },
                "updateDataValue": {
                    "update_data_value": 1
                },
                "update_data_if_parameter_is_max_08002f84": {
                    "update_data_if_max": 3,
                    "update_data_if_param_is_max": 2,
                    "update_data_if_parameter_is_max": 26
                },
                "update_data_value_08002f2c": {
                    "update_data_value": 31
                },
                "update_data_value_08002f2c_1": {
                    "update_data_value": 1
                },
                "update_data_value_08002f2c_2": {
                    "update_data_value": 1
                },
                "update_data_value_08002f2c_3": {
                    "update_data_value": 1
                },
                "update_data_value_08002f2c_4": {
                    "update_data_value": 1
                },
                "update_data_value_08002f2c_5": {
                    "update_data_value": 1
                },
                "update_data_value_08002f2c_6": {
                    "update_data_value": 1
                }
            },
            "called": [
                "FUN_08002f2c",
                "FUN_08003048",
                "FUN_08002f84",
                "FUN_08002f94",
                "FUN_0800018c",
                "FUN_08002e44",
                "FUN_08000aec"
            ],
            "calling": [
                "FUN_08008f1c"
            ],
            "code": "\nvoid initialize_and_start_gateway_08001b48(void)\n\n{\n  set_firmware_name_and_version\n            (&DAT_200003d4,\"/home/bo/p2im/p2im-real_firmware_scratch/Gateway/StandardFirmata.ino\",2,\n             5);\n  update_data_value(&DAT_200003d4,0xe0,0x8000215);\n  update_data_value(&DAT_200003d4,0x90,&LAB_080002ec_1);\n  update_data_value(&DAT_200003d4,0xc0,0x8000489);\n  update_data_value(&DAT_200003d4,0xd0,&LAB_08000c18_1);\n  update_data_value(&DAT_200003d4,0xf4,0x80005f9);\n  update_data_value(&DAT_200003d4,0xf5,&LAB_080001a8_1);\n  set_param3(&DAT_200003d4,0xf0,0x8001cd1);\n  update_data_if_parameter_is_max(&DAT_200003d4,0xff,0x8000aed);\n  initialize_and_update_device_info(&DAT_200003d4,0xe100);\n  reset_system();\n  start_fork_server(0);\n  return;\n}\n\n",
            "current_name": "initialize_and_start_gateway_08001b48",
            "entrypoint": "0x08001b48",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001b48": "initialize_and_start_gateway_08001b48",
                "initialize_and_update_device_info_08003048": "initialize_and_update_device_info",
                "setFirmwareNameAndVersion": "set_firmware_name_and_version",
                "set_param_3_08002f94": "set_param3",
                "startForkserver": "start_fork_server",
                "systemResetCallback": "reset_system",
                "update_data_if_parameter_is_max_08002f84": "update_data_if_parameter_is_max",
                "update_data_value_08002f2c": "update_data_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001bf8": {
            "additional_data": {
                "FUN_08001bf8": {
                    "send_data_to_i2c_slave": 8,
                    "send_data_to_slave": 2,
                    "write_data_to_i2_c_slave": 10,
                    "write_data_to_i2_c_slave_wrapper": 1,
                    "write_data_to_i2c_slave": 8,
                    "write_data_to_slave": 2
                },
                "data": {
                    "data": 1
                },
                "device_address": {
                    "device_address": 1
                },
                "param_1": {
                    "device_address": 31
                },
                "param_2": {
                    "": 1,
                    "data": 12,
                    "undefined_param_2": 1,
                    "unused": 1,
                    "unused_param": 3
                },
                "param_3": {
                    "data": 17,
                    "data_1": 1,
                    "param3": 1,
                    "param_3": 7,
                    "undefined": 1,
                    "undefined_data": 1,
                    "undefined_param_1": 1,
                    "undefined_param_3": 2
                },
                "param_4": {
                    "": 1,
                    "data": 1,
                    "data_2": 2,
                    "data_length": 1,
                    "data_size": 1,
                    "length": 2,
                    "param4": 1,
                    "param_4": 7,
                    "size": 1,
                    "undefined": 1,
                    "undefined4_param_4": 1,
                    "undefined_param": 1,
                    "undefined_param_2": 1,
                    "undefined_param_4": 3,
                    "unused": 1,
                    "unused_param": 5,
                    "unused_param_2": 1
                },
                "write_data_to_i2_c_slave_0800288c": {
                    "write_data_to_i2_c_slave": 2,
                    "write_data_to_i2c_slave": 4,
                    "write_i2c_data": 1
                }
            },
            "called": [
                "FUN_0800288c"
            ],
            "calling": [
                "FUN_08001c18",
                "FUN_08001cd0"
            ],
            "code": "\nvoid write_data_to_i2_c_slave_wrapper_08001bf8(undefined4 device_address,undefined4 data,undefined4 data,undefined4 param_4)\n\n{\n  write_data_to_i2c_slave(&DAT_20000314,device_address,data,param_4,param_4);\n  return;\n}\n\n",
            "current_name": "write_data_to_i2_c_slave_wrapper_08001bf8",
            "entrypoint": "0x08001bf8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001bf8": "write_data_to_i2_c_slave_wrapper_08001bf8",
                "param_1": "device_address",
                "param_2": "data",
                "param_3": "data",
                "write_data_to_i2_c_slave_0800288c": "write_data_to_i2c_slave"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001c08": {
            "additional_data": {
                "FUN_08001c08": {
                    "get_next_byte_from_memory": 2,
                    "read_and_return_next_byte": 1,
                    "read_and_return_next_byte_from_memory": 1,
                    "read_byte_from_memory": 8,
                    "read_next_byte": 2,
                    "read_next_byte_from_memory": 17
                },
                "uVar1": {
                    "byte": 2,
                    "byte_value": 2,
                    "next_byte": 26,
                    "result": 1
                }
            },
            "called": [
                "FUN_08002720"
            ],
            "calling": [
                "FUN_08001c18"
            ],
            "code": "\nundefined read_and_return_next_byte_from_memory_08001c08(void)\n\n{\n  undefined next_byte;\n  \n  next_byte = read_next_byte_from_memory_08002720(&DAT_20000314);\n  return next_byte;\n}\n\n",
            "current_name": "read_and_return_next_byte_from_memory_08001c08",
            "entrypoint": "0x08001c08",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001c08": "read_and_return_next_byte_from_memory_08001c08",
                "uVar1": "next_byte"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001c18": {
            "additional_data": {
                "DAT_20000130": {
                    "device_address": 1,
                    "device_address1": 1,
                    "device_address_1": 1,
                    "device_address_byte": 7,
                    "device_address_output": 1,
                    "status_byte": 1
                },
                "DAT_20000131": {
                    "data_length_byte": 2,
                    "data_length_output": 1,
                    "data_size_byte": 1,
                    "data_value": 1,
                    "device_address2": 1,
                    "device_address_2": 1,
                    "device_address_byte": 1,
                    "register_address_byte": 3,
                    "request_length_byte": 1
                },
                "DAT_20000132": {
                    "data_buffer": 1,
                    "received_data": 4,
                    "received_data_array": 1,
                    "received_data_buffer": 2
                },
                "DAT_20000314": {
                    "device_data": 1,
                    "i2_c_device": 1,
                    "i2c_address": 1,
                    "i2c_device": 1
                },
                "DAT_200003d4": {
                    "output_buffer": 2,
                    "sys_ex_buffer": 1
                },
                "FUN_08001bf8": {
                    "function4": 1,
                    "initialize_variables": 3,
                    "reverse_something": 1,
                    "set_config": 1
                },
                "FUN_08001c08": {
                    "function3": 1,
                    "initialize": 1,
                    "initialize_i2_c": 2,
                    "reverse_something": 1,
                    "reversing_function": 1
                },
                "FUN_08001c18": {
                    "execute_i2_c_operation": 1,
                    "perform_i2_c_communication": 1,
                    "perform_i2_c_operation": 1,
                    "perform_i2_c_read_write": 1,
                    "perform_i2_c_transmission": 1,
                    "process_i2_c_data": 15,
                    "read_and_send_i2_c_data": 1,
                    "read_and_validate_i2_c_data": 1,
                    "read_i2_c_data": 5,
                    "transmit_i2_c_data": 1,
                    "transmit_receive_i2c_data": 1
                },
                "FUN_08002a58": {
                    "write_data_to_i2_c": 1
                },
                "FUN_08002c14": {
                    "function2": 1,
                    "initialize_data": 1
                },
                "bVar4": {
                    "bytes_received": 1,
                    "data_received": 1,
                    "has_bytes": 2,
                    "has_data": 8,
                    "has_received_data": 1,
                    "is_available": 1,
                    "is_data_available": 10,
                    "is_data_received": 4,
                    "is_diff_nonzero": 1,
                    "is_difference_non_zero": 1
                },
                "beginTransmission": {
                    "start_i2c_transmission": 1
                },
                "calculate_difference_0800270c": {
                    "calculate_bytes_difference": 1,
                    "calculate_data_difference": 2,
                    "calculate_diff": 1,
                    "calculate_difference": 11,
                    "get_difference": 1
                },
                "i2c_write_data_08002a58": {
                    "write_data_to_device": 2,
                    "write_data_to_i2_c": 2,
                    "write_data_to_i2c": 2,
                    "write_i2_c_data": 8,
                    "write_i2c_data": 1
                },
                "iVar2": {
                    "actual_count": 1,
                    "bytes_received": 1,
                    "count": 1,
                    "difference": 2,
                    "i": 12,
                    "received_bytes": 6,
                    "received_bytes_count": 1,
                    "received_count": 2,
                    "received_data_length": 2,
                    "received_length": 2
                },
                "iVar3": {
                    "available_bytes": 2,
                    "available_data_length": 1,
                    "bytes_available": 1,
                    "calculated_diff": 1,
                    "current_difference": 1,
                    "diff": 2,
                    "difference": 18,
                    "read_length": 1,
                    "received_size": 1,
                    "remaining_count": 1,
                    "result": 1
                },
                "initialize_data_08002a30": {
                    "initialize_data": 7,
                    "initialize_data_with_status_and_input": 1
                },
                "param_1": {
                    "address": 1,
                    "device_address": 26,
                    "input_status": 1,
                    "status": 3
                },
                "param_2": {
                    "byte_count": 5,
                    "byte_data": 1,
                    "data": 1,
                    "data_address": 1,
                    "data_length": 5,
                    "data_size": 1,
                    "device_address": 3,
                    "input_value": 1,
                    "num_bytes": 1,
                    "register_address": 8,
                    "request_length": 1,
                    "write_data": 2,
                    "write_data_length": 1
                },
                "param_3": {
                    "data_length": 2,
                    "expected_bytes": 6,
                    "expected_count": 4,
                    "expected_data_length": 2,
                    "expected_length": 5,
                    "expected_response_length": 1,
                    "expected_size": 1,
                    "num_bytes": 7,
                    "num_bytes_expected": 3
                },
                "param_4": {
                    "data": 9,
                    "data_address": 2,
                    "data_buffer": 4,
                    "data_length": 1,
                    "data_offset": 3,
                    "data_to_send": 1,
                    "device_address": 2,
                    "input_data": 1,
                    "input_value": 1,
                    "read_data": 1,
                    "status": 4,
                    "write_data": 2
                },
                "requestFrom": {
                    "receive_i2c_data": 1,
                    "request_data_from_device": 1,
                    "request_from_i2_c": 1,
                    "request_i2_c_data": 3,
                    "request_i2c_data": 1
                },
                "send_string_from_offset_08002f14": {
                    "print_error_message": 1,
                    "send_error_message": 10,
                    "send_error_string": 4,
                    "send_message": 1
                },
                "send_sysex_with_data_offset_08002f0a": {
                    "send_data": 1,
                    "send_data_with_offset_08002f0a": 1,
                    "send_i2_c_data": 1,
                    "send_sysex_data": 3,
                    "send_sysex_with_data": 8,
                    "send_sysex_with_data_offset": 3
                },
                "uVar1": {
                    "byte": 2,
                    "byte_read": 3,
                    "data": 1,
                    "data_byte": 1,
                    "read_byte": 1,
                    "read_data": 1,
                    "received_byte": 11,
                    "received_data": 10
                },
                "wireRead": {
                    "read_byte_from_wire": 1,
                    "read_from_i2_c": 1,
                    "read_from_wire": 2,
                    "read_wire": 4
                },
                "wireWrite": {
                    "write_to_i2_c": 1,
                    "write_to_wire": 1
                }
            },
            "called": [
                "FUN_08002a58",
                "FUN_08002c14",
                "FUN_08002f14",
                "FUN_0800270c",
                "FUN_08002a30",
                "FUN_08002f0a",
                "FUN_08001c08",
                "FUN_08001bf8"
            ],
            "calling": [
                "FUN_080022f8",
                "FUN_08001cd0"
            ],
            "code": "\nvoid process_i2_c_data_08001c18(undefined4 device_address,uint register_address,int num_bytes,undefined4 data)\n\n{\n  undefined received_byte;\n  int i;\n  int difference;\n  bool is_data_available;\n  \n  if (register_address == 0xffffffff) {\n    register_address = 0;\n  }\n  else {\n    start_i2c_transmission(&DAT_20000314,device_address);\n    write_to_wire(register_address & 0xff);\n    write_i2_c_data(&DAT_20000314,data);\n  }\n  request_i2_c_data(&DAT_20000314,device_address,num_bytes);\n  i = calculate_difference(&DAT_20000314);\n  if (num_bytes < i) {\n    send_error_message(&DAT_200003d4,\"I2C: Too many bytes received\");\n  }\n  else {\n    i = calculate_difference(&DAT_20000314);\n    if (i < num_bytes) {\n      send_error_message(&DAT_200003d4,\"I2C: Too few bytes received\");\n    }\n  }\n  DAT_20000130 = (undefined)device_address;\n  DAT_20000131 = (undefined)register_address;\n  i = 0;\n  while( true ) {\n    if (i < num_bytes) {\n      difference = calculate_difference(&DAT_20000314);\n      if (difference == 0) {\n        is_data_available = false;\n      }\n      else {\n        is_data_available = true;\n      }\n    }\n    else {\n      is_data_available = false;\n    }\n    if (!is_data_available) break;\n    received_byte = read_wire();\n    (&DAT_20000132)[i] = received_byte;\n    i = i + 1;\n  }\n  send_sysex_with_data(&DAT_200003d4,0x77,num_bytes + 2U & 0xff,&DAT_20000130);\n  return;\n}\n\n",
            "current_name": "process_i2_c_data_08001c18",
            "entrypoint": "0x08001c18",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001c18": "process_i2_c_data_08001c18",
                "bVar4": "is_data_available",
                "beginTransmission": "start_i2c_transmission",
                "calculate_difference_0800270c": "calculate_difference",
                "i2c_write_data_08002a58": "write_i2_c_data",
                "iVar2": "i",
                "iVar3": "difference",
                "param_1": "device_address",
                "param_2": "register_address",
                "param_3": "num_bytes",
                "param_4": "data",
                "requestFrom": "request_i2_c_data",
                "send_string_from_offset_08002f14": "send_error_message",
                "send_sysex_with_data_offset_08002f0a": "send_sysex_with_data",
                "uVar1": "received_byte",
                "wireRead": "read_wire",
                "wireWrite": "write_to_wire"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001cd0": {
            "additional_data": {
                "DAT_0800a908": {
                    "pin_names": 1
                },
                "DAT_20000004": {
                    "query_count": 2
                },
                "DAT_20000008": {
                    "i2c_address": 1
                },
                "DAT_2000012c": {
                    "i2_c_address": 1
                },
                "DAT_200003d4": {
                    "callback_data": 1
                },
                "FUN_08000214": {
                    "function5": 2,
                    "function_d": 1,
                    "handle_case0x78": 1,
                    "initialize_status": 1,
                    "process_case0x6f": 1,
                    "process_data": 1,
                    "process_value": 1
                },
                "FUN_08000500": {
                    "function2": 2,
                    "function_a": 1,
                    "handle_case0x70": 1,
                    "process_case0x78": 1,
                    "process_data": 1,
                    "process_digital_write_command": 1,
                    "process_values": 1
                },
                "FUN_080005f8": {
                    "do_something": 1,
                    "function6": 2,
                    "function_e": 1,
                    "handle_case0x6b": 1,
                    "process_analog_read_command": 1,
                    "process_case0x6d": 1,
                    "process_data": 2
                },
                "FUN_08000a64": {
                    "function4": 2,
                    "function_c": 1,
                    "initialize": 2,
                    "initialize_data": 2,
                    "initialize_servo_data": 1
                },
                "FUN_08001bf8": {
                    "do_something_else": 1,
                    "function7": 2,
                    "function_f": 1,
                    "handle_case0x69": 1,
                    "process_case0x6b": 1,
                    "process_servo_write_command": 1,
                    "update_data": 1
                },
                "FUN_08001c18": {
                    "function1": 2,
                    "handle_case0x6d": 1,
                    "initialize_data": 1,
                    "process_case0x69": 1,
                    "process_pin_mode_command": 1,
                    "process_value": 1
                },
                "FUN_08001cd0": {
                    "execute_command": 1,
                    "handle_command": 4,
                    "process_binary_function": 1,
                    "process_command": 15,
                    "process_data": 6,
                    "process_function": 2,
                    "process_input": 1,
                    "process_input_function": 1
                },
                "FUN_08002ac0": {
                    "function3": 2,
                    "function_b": 1,
                    "handle_case0x76": 1,
                    "initialize_data": 1,
                    "process_case0x70": 1,
                    "update_servo_data": 1
                },
                "analogWriteCallback": {
                    "analog_write": 3,
                    "analog_write_callback": 5,
                    "analog_write_handler": 1
                },
                "attachServo": {
                    "attach_servo": 9,
                    "attach_servo_motor": 1,
                    "attach_servo_to_pin": 1
                },
                "attached": {
                    "check_attached": 1,
                    "is_attached": 3
                },
                "bVar1": {
                    "byte1": 21,
                    "byte_val1": 1,
                    "byte_value1": 3,
                    "byte_var1": 3,
                    "first_byte": 1,
                    "value1": 1,
                    "var1": 1
                },
                "bVar12": {
                    "bool1": 2,
                    "bool_val": 1,
                    "bool_value": 2,
                    "bool_var": 6,
                    "bool_var1": 1,
                    "boolean_var": 1,
                    "flag": 11,
                    "flag1": 2,
                    "is_condition_met": 1,
                    "is_true": 3,
                    "pin_is_valid": 1
                },
                "bVar2": {
                    "byte2": 21,
                    "byte_val2": 1,
                    "byte_value2": 3,
                    "byte_var2": 3,
                    "second_byte": 1,
                    "value2": 1,
                    "var2": 1
                },
                "bVar3": {
                    "byte3": 21,
                    "byte_val3": 1,
                    "byte_value3": 3,
                    "byte_var3": 3,
                    "third_byte": 1,
                    "value3": 1,
                    "var3": 1
                },
                "bVar5": {
                    "byte4": 20,
                    "byte5": 1,
                    "byte_val4": 1,
                    "byte_value4": 1,
                    "byte_value5": 2,
                    "byte_var5": 3,
                    "fourth_byte": 1,
                    "value4": 1,
                    "var5": 1
                },
                "beginTransmission": {
                    "begin_i2_c_transmission": 1,
                    "begin_transmission": 4,
                    "begin_transmission_i2_c": 1,
                    "start_data_transmission": 1,
                    "start_transmission": 4
                },
                "cVar6": {
                    "char1": 12,
                    "char_value": 3,
                    "char_var": 3,
                    "char_var1": 1,
                    "char_var6": 3,
                    "character": 6,
                    "fifth_byte": 1,
                    "value5": 1,
                    "var6": 1
                },
                "check_value_in_array_0800738a": {
                    "check_value_in_array": 8,
                    "is_value_in_array": 1
                },
                "detachServo": {
                    "detach_servo": 9,
                    "detach_servo_from_pin": 1,
                    "detach_servo_motor": 1
                },
                "detach_and_update_data_08000588": {
                    "detach_and_update_data": 10
                },
                "enableI2CPins": {
                    "enable_i2_c": 1,
                    "enable_i2_c_pins": 2
                },
                "endTransmission": {
                    "close_transmission": 1,
                    "end_data_transmission": 1,
                    "end_i2_c_transmission": 1,
                    "end_transmission": 7,
                    "end_transmission_i2_c": 1
                },
                "executeCallbackFunction": {
                    "execute_callback_function": 1
                },
                "execute_callback_function_08002f1e": {
                    "execute_callback": 4,
                    "execute_callback_function": 9
                },
                "extract_bit_from_byte_080026f8": {
                    "extract_bit_from_byte": 10
                },
                "find_character_index_080036ac": {
                    "find_char_index": 1,
                    "find_character_index": 8
                },
                "getPinMode": {
                    "get_pin_mode": 10,
                    "get_pin_mode_value": 1
                },
                "getPinState": {
                    "get_pin_state": 10,
                    "get_pin_state_value": 1
                },
                "getPinValue": {
                    "get_pin_value": 1
                },
                "get_byte_value_from_offset_08002fa0": {
                    "get_byte_value_from_offset": 9,
                    "get_offset_byte_value": 1
                },
                "get_value_from_offset_08002fba": {
                    "get_value_from_offset": 8
                },
                "iVar11": {
                    "counter3": 1,
                    "index": 2,
                    "index3": 6,
                    "index5": 1,
                    "int3": 1,
                    "int_val3": 1,
                    "int_var3": 5,
                    "loop": 1,
                    "offset": 1,
                    "servo_position_b": 1,
                    "temp_var": 1,
                    "temp_var2": 1,
                    "temp_var3": 1,
                    "unused_var11": 1,
                    "var11": 1,
                    "var3": 3,
                    "var4": 1,
                    "var5": 1,
                    "variable3": 1
                },
                "iVar7": {
                    "counter1": 1,
                    "index": 9,
                    "index1": 1,
                    "index_var": 2,
                    "int1": 1,
                    "int_val1": 1,
                    "int_value1": 1,
                    "int_var": 2,
                    "int_var1": 4,
                    "pin_index": 2,
                    "pin_number": 1,
                    "pin_value": 1,
                    "result2": 1,
                    "value": 1,
                    "var1": 2,
                    "variable1": 1
                },
                "iVar8": {
                    "counter2": 1,
                    "index": 3,
                    "index2": 7,
                    "int2": 1,
                    "int_val2": 1,
                    "int_value2": 1,
                    "int_var2": 5,
                    "loop_index": 1,
                    "result3": 1,
                    "servo_position_a": 1,
                    "temp_index": 1,
                    "temp_var1": 2,
                    "unused_var8": 1,
                    "var1": 1,
                    "var2": 2,
                    "var8": 1,
                    "variable2": 1
                },
                "initialize_data_08002a30": {
                    "initialize_data": 7,
                    "initialize_data2": 2,
                    "initialize_digital_data": 1
                },
                "param_1": {
                    "command": 15,
                    "command_code": 3,
                    "command_id": 1,
                    "command_type": 6,
                    "input_code": 1,
                    "input_type": 1,
                    "opcode": 4
                },
                "param_2": {
                    "command_length": 2,
                    "data_length": 1,
                    "input_length": 1,
                    "input_size": 1,
                    "length": 14,
                    "num_params": 1,
                    "param_count": 6,
                    "param_length": 3,
                    "size": 2
                },
                "param_3": {
                    "command_data": 2,
                    "data": 17,
                    "input_buffer": 1,
                    "input_data": 1,
                    "param_data": 2,
                    "param_values": 1,
                    "parameters": 1,
                    "params": 5,
                    "params_array": 1
                },
                "param_4": {
                    "callback": 2,
                    "callback_function": 1,
                    "extra_data": 1,
                    "input_parameter": 1,
                    "param": 1,
                    "param4": 3,
                    "param_4": 8,
                    "status": 14
                },
                "pinNametoDigitalPin": {
                    "get_digital_pin": 1,
                    "get_digital_pin_from_name": 3,
                    "get_digital_pin_from_pin_name": 1,
                    "get_digital_pin_number": 1,
                    "get_pin_value": 1,
                    "pin_name_to_digital_pin": 2,
                    "pin_nameto_digital_pin": 2
                },
                "pin_in_pinmap": {
                    "check_pin_in_pin_map": 2,
                    "check_pin_in_pinmap": 1,
                    "check_pin_map": 1,
                    "check_value_in_pinmap": 1,
                    "get_pin_in_pinmap": 2,
                    "is_pin_in_pin_map": 1,
                    "is_pin_in_pinmap": 1,
                    "pin_in_pin_map": 1,
                    "pin_in_pinmap": 1
                },
                "pin_in_pinmap_cpu_specific": {
                    "pin_in_pin_map_cpu_specific": 1
                },
                "readAndReportData": {
                    "read_and_report": 1,
                    "read_and_report_data": 9,
                    "read_and_report_i2_c_data": 1
                },
                "send_string_from_offset_08002f14": {
                    "print_error_message": 1,
                    "send_error_message": 2,
                    "send_error_string": 1,
                    "send_string": 1,
                    "send_string_from_offset": 8
                },
                "setPinModeCallback": {
                    "set_pin_mode": 3,
                    "set_pin_mode_callback": 7,
                    "set_pin_mode_handler": 1
                },
                "uVar10": {
                    "adjusted_loop_index": 1,
                    "count2": 1,
                    "counter2": 4,
                    "index2": 2,
                    "index4": 1,
                    "loop_index": 1,
                    "loop_var2": 2,
                    "temp_var": 1,
                    "temp_var2": 1,
                    "u_var2": 1,
                    "uint2": 1,
                    "uint_value2": 1,
                    "uint_var2": 6,
                    "unsigned_var2": 1,
                    "value": 1,
                    "value2": 1,
                    "var2": 3,
                    "var3": 1,
                    "var4": 1
                },
                "uVar4": {
                    "callback_result": 1,
                    "pin_mode": 1,
                    "result": 17,
                    "result1": 1,
                    "temp_var": 1,
                    "u_var4": 1,
                    "uint_var4": 2,
                    "unused_var4": 1,
                    "value": 1,
                    "value1": 1,
                    "var4": 2
                },
                "uVar9": {
                    "count1": 1,
                    "counter1": 4,
                    "index": 1,
                    "index1": 2,
                    "index3": 1,
                    "iteration": 1,
                    "loop_count": 1,
                    "loop_index": 1,
                    "loop_var1": 3,
                    "u_var1": 1,
                    "uint1": 1,
                    "uint_value1": 1,
                    "uint_var": 1,
                    "uint_var1": 5,
                    "unsigned_var1": 1,
                    "value": 1,
                    "var1": 3,
                    "var2": 1,
                    "var3": 1
                },
                "wireWrite": {
                    "send_wire_data": 1,
                    "wire_write": 4,
                    "write_data_on_i2_c_bus": 1,
                    "write_to_i2_c": 1,
                    "write_to_wire": 4
                },
                "wiringPinToBit": {
                    "wiring_pin_to_bit": 1
                }
            },
            "called": [
                "FUN_0800738a",
                "FUN_08002f14",
                "FUN_08001c18",
                "FUN_08000500",
                "FUN_080036ac",
                "FUN_08002f1e",
                "FUN_08002ac0",
                "FUN_08002fba",
                "FUN_08000a64",
                "FUN_08000214",
                "FUN_08002a30",
                "FUN_08002fa0",
                "FUN_080026f8",
                "FUN_080005f8",
                "FUN_08001bf8",
                "FUN_08000588"
            ],
            "calling": [],
            "code": "\nvoid process_command_08001cd0(undefined4 command,int length,byte *data,undefined4 status)\n\n{\n  byte byte1;\n  byte byte2;\n  byte byte3;\n  undefined4 result;\n  byte byte4;\n  char char1;\n  int index;\n  int index2;\n  uint uint_var1;\n  uint uint_var2;\n  int index3;\n  bool flag;\n  \n  switch(command) {\n  case 0x69:\n    execute_callback_function(&DAT_200003d4,0xf0);\n    execute_callback_function(&DAT_200003d4,0x6a);\n    for (uint_var1 = 0; uint_var1 < 0x3c; uint_var1 = uint_var1 + 1 & 0xff) {\n      uint_var2 = uint_var1 - 0x2e & 0xff;\n      if (uint_var2 < 0xe) {\n        if (uint_var1 < 0x3c) {\n          index = (int)(char)(&DAT_0800a908)[uint_var1];\n        }\n        else {\n          index = -1;\n        }\n        index = get_digital_pin_from_name(index);\n        if (index == 0) {\n          uint_var2 = 0x7f;\n        }\n        else {\n          if (uint_var1 < 0x3c) {\n            index = (int)(char)(&DAT_0800a908)[uint_var1];\n          }\n          else {\n            index = -1;\n          }\n          index = get_digital_pin_from_name(index);\n          if (index == 1) {\n            uint_var2 = 0x7f;\n          }\n        }\n      }\n      else {\n        uint_var2 = 0x7f;\n      }\n      execute_callback_function(&DAT_200003d4,uint_var2);\n    }\n    execute_callback_function(&DAT_200003d4,0xf7);\n    break;\n  case 0x6b:\n    execute_callback_function(&DAT_200003d4,0xf0);\n    execute_callback_function(&DAT_200003d4,0x6c);\n    for (uint_var1 = 0; uint_var1 < 0x3c; uint_var1 = uint_var1 + 1 & 0xff) {\n      if (uint_var1 < 0x3c) {\n        if ((&DAT_0800a908)[uint_var1] == -1) {\n          flag = false;\n        }\n        else {\n          index = get_digital_pin_from_name();\n          if (index == 0) {\n            flag = false;\n          }\n          else {\n            index = get_digital_pin_from_name((int)(char)(&DAT_0800a908)[uint_var1]);\n            if (index == 1) {\n              flag = false;\n            }\n            else {\n              flag = true;\n            }\n          }\n        }\n      }\n      else {\n        flag = false;\n      }\n      if (flag) {\n        execute_callback_function(&DAT_200003d4,0);\n        execute_callback_function(&DAT_200003d4,1);\n        execute_callback_function(&DAT_200003d4,0xb);\n        execute_callback_function(&DAT_200003d4,1);\n        execute_callback_function(&DAT_200003d4,1);\n        execute_callback_function(&DAT_200003d4,1);\n      }\n      if ((uint_var1 - 0x2e & 0xff) < 0xe) {\n        if (uint_var1 < 0x3c) {\n          index = (int)(char)(&DAT_0800a908)[uint_var1];\n        }\n        else {\n          index = -1;\n        }\n        index = get_digital_pin_from_name(index);\n        if (index == 0) {\n          flag = false;\n        }\n        else {\n          if (uint_var1 < 0x3c) {\n            index = (int)(char)(&DAT_0800a908)[uint_var1];\n          }\n          else {\n            index = -1;\n          }\n          index = get_digital_pin_from_name(index);\n          if (index == 1) {\n            flag = false;\n          }\n          else {\n            flag = true;\n          }\n        }\n      }\n      else {\n        flag = false;\n      }\n      if (flag) {\n        execute_callback_function(&DAT_200003d4,2);\n        execute_callback_function(&DAT_200003d4,10);\n      }\n      if (uint_var1 < 0x3c) {\n        if ((&DAT_0800a908)[uint_var1] == -1) {\n          index = 0;\n        }\n        else {\n          index = get_digital_pin_from_name();\n          if (index == 0) {\n            index = 0;\n          }\n          else {\n            index = get_digital_pin_from_name((int)(char)(&DAT_0800a908)[uint_var1]);\n            if (index == 1) {\n              index = 0;\n            }\n            else {\n              index = check_pin_in_pin_map((int)(char)(&DAT_0800a908)[uint_var1],&DAT_0800a6cc);\n            }\n          }\n        }\n      }\n      else {\n        index = 0;\n      }\n      if (index != 0) {\n        execute_callback_function(&DAT_200003d4,3);\n        execute_callback_function(&DAT_200003d4,8);\n      }\n      if (uint_var1 < 0x3c) {\n        if ((&DAT_0800a908)[uint_var1] == -1) {\n          flag = false;\n        }\n        else {\n          index = get_digital_pin_from_name();\n          if (index == 0) {\n            flag = false;\n          }\n          else {\n            index = get_digital_pin_from_name((int)(char)(&DAT_0800a908)[uint_var1]);\n            if (index == 1) {\n              flag = false;\n            }\n            else {\n              flag = true;\n            }\n          }\n        }\n      }\n      else {\n        flag = false;\n      }\n      if (flag) {\n        execute_callback_function(&DAT_200003d4,4);\n        execute_callback_function(&DAT_200003d4,0xe);\n      }\n      if (uint_var1 < 0x3c) {\n        if ((&DAT_0800a908)[uint_var1] == -1) {\n          index = 0;\n        }\n        else {\n          index = get_digital_pin_from_name();\n          if (index == 0) {\n            index = 0;\n          }\n          else {\n            index = get_digital_pin_from_name((int)(char)(&DAT_0800a908)[uint_var1]);\n            if (index == 1) {\n              index = 0;\n            }\n            else {\n              index = check_pin_in_pin_map((int)(char)(&DAT_0800a908)[uint_var1],&DAT_0800a69c);\n              if (index == 0) {\n                index = check_pin_in_pin_map((int)(char)(&DAT_0800a908)[uint_var1],&DAT_0800a66c);\n              }\n            }\n          }\n        }\n      }\n      else {\n        index = 0;\n      }\n      if (index != 0) {\n        execute_callback_function(&DAT_200003d4,6);\n        execute_callback_function(&DAT_200003d4,1);\n      }\n      execute_callback_function(&DAT_200003d4,0x7f);\n    }\n    execute_callback_function(&DAT_200003d4,0xf7);\n    return;\n  case 0x6d:\n    if (length != 0) {\n      byte1 = *data;\n      execute_callback_function(&DAT_200003d4,0xf0);\n      execute_callback_function(&DAT_200003d4,0x6e);\n      execute_callback_function(&DAT_200003d4,byte1);\n      if (byte1 < 0x3c) {\n        result = get_pin_mode(&DAT_200003d4,byte1);\n        execute_callback_function(&DAT_200003d4,result);\n        uint_var1 = get_pin_state(&DAT_200003d4,byte1);\n        execute_callback_function(&DAT_200003d4,uint_var1 & 0x7f);\n        uint_var1 = get_pin_state(&DAT_200003d4,byte1);\n        if ((uint_var1 & 0xff80) != 0) {\n          index = get_pin_state(&DAT_200003d4,byte1);\n          execute_callback_function(&DAT_200003d4,(uint)(index << 0x12) >> 0x19);\n        }\n        uint_var1 = get_pin_state(&DAT_200003d4,byte1);\n        if ((uint_var1 & 0xc000) != 0) {\n          index = get_pin_state(&DAT_200003d4,byte1);\n          execute_callback_function(&DAT_200003d4,(uint)(index << 0xb) >> 0x19);\n        }\n      }\n      execute_callback_function(&DAT_200003d4,0xf7);\n      return;\n    }\n    break;\n  case 0x6f:\n    if (1 < length) {\n      uint_var1 = (uint)data[1];\n      if (2 < length) {\n        uint_var1 = uint_var1 | (uint)data[2] << 7;\n      }\n      if (3 < length) {\n        uint_var1 = uint_var1 | (uint)data[3] << 0xe;\n      }\n      analog_write_callback(*data,uint_var1);\n      return;\n    }\n    break;\n  case 0x70:\n    if (4 < length) {\n      uint_var1 = (uint)*data;\n      byte1 = data[1];\n      byte4 = data[2];\n      byte2 = data[3];\n      byte3 = data[4];\n      if (uint_var1 < 0x3c) {\n        if ((&DAT_0800a908)[uint_var1] == -1) {\n          flag = false;\n        }\n        else {\n          index = get_digital_pin_from_name();\n          if (index == 0) {\n            flag = false;\n          }\n          else {\n            index = get_digital_pin_from_name((int)(char)(&DAT_0800a908)[uint_var1]);\n            if (index == 1) {\n              flag = false;\n            }\n            else {\n              flag = true;\n            }\n          }\n        }\n      }\n      else {\n        flag = false;\n      }\n      if (flag) {\n        if ((byte)(&DAT_200001f0)[uint_var1] < 0xc) {\n          index = is_attached(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[uint_var1] * 3);\n        }\n        else {\n          index = 0;\n        }\n        if (index != 0) {\n          detach_servo(uint_var1);\n        }\n        attach_servo(uint_var1,(uint)byte1 + (uint)byte4 * 0x80,(uint)byte2 + (uint)byte3 * 0x80);\n        set_pin_mode_callback(uint_var1,4);\n        return;\n      }\n    }\n    break;\n  case 0x76:\n    byte1 = data[1];\n    byte4 = byte1 & 0x18;\n    if ((byte1 & 0x20) != 0) {\n      send_string_from_offset(&DAT_200003d4,\"10-bit addressing not supported\",byte4,byte1,status);\n      return;\n    }\n    byte2 = *data;\n    flag = (byte1 & 0x40) == 0;\n    if (byte4 < 0x19) {\n      switch(byte4) {\n      case 0:\n        start_transmission(&DAT_20000314,byte2);\n        for (uint_var1 = 2; (int)uint_var1 < length; uint_var1 = uint_var1 + 2 & 0xff) {\n          wire_write(data[uint_var1 + 1] * -0x80 + data[uint_var1]);\n        }\n        end_transmission(&DAT_20000314);\n        return;\n      case 8:\n        if (length == 6) {\n          index = (uint)data[2] + (uint)data[3] * 0x80;\n          char1 = data[4] + data[5] * -0x80;\n        }\n        else {\n          char1 = data[2] + data[3] * -0x80;\n          index = -1;\n        }\n        read_and_report_data(byte2,index,char1);\n        return;\n      case 0x10:\n        if (DAT_20000004 + 1 < 8) {\n          if (length == 6) {\n            index = (uint)data[2] + (uint)data[3] * 0x80;\n            char1 = data[4] + data[5] * -0x80;\n          }\n          else {\n            char1 = data[2] + data[3] * -0x80;\n            index = -1;\n          }\n          DAT_20000004 = DAT_20000004 + '\\x01';\n          index2 = (int)DAT_20000004;\n          index3 = index2 * 0xc;\n          (&DAT_20000188)[index3] = byte2;\n          (&DAT_2000018c)[index2 * 3] = index;\n          (&DAT_20000190)[index3] = char1;\n          (&DAT_20000191)[index3] = flag;\n          return;\n        }\n        send_string_from_offset(&DAT_200003d4,\"too many queries\",(int)DAT_20000004,flag,status);\n        return;\n      case 0x18:\n        if (DAT_20000004 < 1) {\n          DAT_20000004 = 0xff;\n          return;\n        }\n      }\n      for (uint_var1 = 0; index = DAT_20000004 + 1, (int)uint_var1 < index; uint_var1 = uint_var1 + 1 & 0xff) {\n        if (byte2 == (&DAT_20000188)[uint_var1 * 0xc]) goto LAB_08001e66;\n      }\n      uint_var1 = 0;\nLAB_08001e66:\n      for (; (int)uint_var1 < index; uint_var1 = uint_var1 + 1 & 0xff) {\n        if (uint_var1 < 8) {\n          index2 = (uint_var1 + 1) * 0xc;\n          index3 = uint_var1 * 0xc;\n          (&DAT_20000188)[index3] = (&DAT_20000188)[index2];\n          (&DAT_2000018c)[uint_var1 * 3] = (&DAT_2000018c)[(uint_var1 + 1) * 3];\n          (&DAT_20000190)[index3] = (&DAT_20000190)[index2];\n          (&DAT_20000191)[index3] = (&DAT_20000191)[index2];\n        }\n      }\n      DAT_20000004 = DAT_20000004 + -1;\n      return;\n    }\n    break;\n  case 0x78:\n    index = (uint)*data + (uint)data[1] * 0x80;\n    if ((1 < length) && (index != 0)) {\n      DAT_2000012c = index;\n    }\n    if (DAT_20000170 == '\\0') {\n      enable_i2_c_pins();\n      return;\n    }\n    break;\n  case 0x7a:\n    if ((1 < length) &&\n       (DAT_20000008 = (uint)*data + (uint)data[1] * 0x80, DAT_20000008 == 0)) {\n      DAT_20000008 = 1;\n      return;\n    }\n  }\n  return;\n}\n\n",
            "current_name": "process_command_08001cd0",
            "entrypoint": "0x08001cd0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001cd0": "process_command_08001cd0",
                "analogWriteCallback": "analog_write_callback",
                "attachServo": "attach_servo",
                "attached": "is_attached",
                "bVar1": "byte1",
                "bVar12": "flag",
                "bVar2": "byte2",
                "bVar3": "byte3",
                "bVar5": "byte4",
                "beginTransmission": "start_transmission",
                "cVar6": "char1",
                "detachServo": "detach_servo",
                "enableI2CPins": "enable_i2_c_pins",
                "endTransmission": "end_transmission",
                "execute_callback_function_08002f1e": "execute_callback_function",
                "getPinMode": "get_pin_mode",
                "getPinState": "get_pin_state",
                "iVar11": "index3",
                "iVar7": "index",
                "iVar8": "index2",
                "param_1": "command",
                "param_2": "length",
                "param_3": "data",
                "param_4": "status",
                "pinNametoDigitalPin": "get_digital_pin_from_name",
                "pin_in_pinmap": "check_pin_in_pin_map",
                "readAndReportData": "read_and_report_data",
                "send_string_from_offset_08002f14": "send_string_from_offset",
                "setPinModeCallback": "set_pin_mode_callback",
                "uVar10": "uint_var2",
                "uVar4": "result",
                "uVar9": "uint_var1",
                "wireWrite": "wire_write"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080022f8": {
            "additional_data": {
                "DAT_0800a908": {
                    "pin_name_data": 1,
                    "pin_names": 8
                },
                "DAT_20000004": {
                    "byte_count": 1,
                    "count": 2,
                    "data_count": 1,
                    "loop_count": 2,
                    "loop_limit": 1,
                    "max_data_count": 1,
                    "num_data_points": 1,
                    "num_data_reports": 1,
                    "num_iterations": 5,
                    "num_loops": 1
                },
                "DAT_20000008": {
                    "delay_duration": 1,
                    "delay_time": 2,
                    "interval": 3,
                    "threshold": 5,
                    "threshold_millis": 1,
                    "time_interval": 1,
                    "time_threshold": 3
                },
                "DAT_20000114": {
                    "analog_data": 1,
                    "analog_data_mask": 3,
                    "analog_mask": 2,
                    "analog_pin_mask": 2,
                    "bitmask": 1,
                    "output_mask": 2,
                    "pin_mask": 4
                },
                "DAT_20000118": {
                    "current_millis": 13,
                    "current_time": 3
                },
                "DAT_2000017c": {
                    "last_processed_millis": 1,
                    "previous_millis": 11,
                    "previous_time": 4
                },
                "DAT_20000188": {
                    "address1": 1,
                    "data_address1": 1,
                    "data_addresses": 1,
                    "data_buffer": 1,
                    "data_point_buffers": 1,
                    "offsets": 2
                },
                "DAT_2000018c": {
                    "address2": 1,
                    "buffer_offsets": 1,
                    "data_address2": 1,
                    "data_params1": 1,
                    "data_point_indices": 1,
                    "param2_vals": 1,
                    "param2_values": 1
                },
                "DAT_20000190": {
                    "address3": 1,
                    "buffer_base_addresses": 1,
                    "data_address3": 1,
                    "data_params2": 1,
                    "data_point_counters": 1,
                    "param3_vals": 1,
                    "param3_values": 1
                },
                "DAT_20000191": {
                    "address4": 1,
                    "buffer_sizes": 1,
                    "data_address4": 1,
                    "data_params3": 1,
                    "data_point_masks": 1,
                    "param4_vals": 1,
                    "param4_values": 1
                },
                "DAT_200003d4": {
                    "base_address": 8,
                    "input_data": 5,
                    "sensor_data": 1
                },
                "FUN_08001c18": {
                    "handle_pin_mode": 2,
                    "process_pin_mode": 2,
                    "set_pin_value": 1,
                    "update_pin_mode": 1
                },
                "FUN_080022f8": {
                    "process_digital_input": 2,
                    "process_digital_inputs": 20,
                    "process_input_data": 2,
                    "process_input_loop": 1,
                    "process_inputs": 5,
                    "process_sensor_data": 1
                },
                "analogRead": {
                    "analog_read": 1,
                    "read_analog_data": 4,
                    "read_analog_value": 10
                },
                "bVar1": {
                    "flag": 1,
                    "is_analog": 1,
                    "is_input_valid": 1,
                    "is_mode_valid": 1,
                    "is_pin_enabled": 1,
                    "is_pin_high": 2,
                    "is_pin_mode_analog": 1,
                    "is_pin_mode_valid": 1,
                    "is_pin_valid": 2,
                    "is_valid": 1,
                    "is_valid_pin": 4,
                    "should_send_analog_data": 1,
                    "valid_pin": 1
                },
                "calculate_adc_value_08008880": {
                    "calculate_adc_value": 16
                },
                "checkDigitalInputs": {
                    "check_digital_inputs": 11
                },
                "execute_nested_function_08002ec4": {
                    "execute_nested_function": 21
                },
                "find_character_index_080036ac": {
                    "find_character_index": 13
                },
                "getPinMode": {
                    "get_pin_mode": 14
                },
                "get_byte_value_from_offset_08002fa0": {
                    "get_byte_value_from_offset": 16
                },
                "get_current_time_in_milliseconds_08008abc": {
                    "get_current_time_in_millis": 4,
                    "get_current_time_in_milliseconds": 6,
                    "get_current_time_millis": 2
                },
                "iVar2": {
                    "error_code": 1,
                    "nested_function_result": 2,
                    "offset": 1,
                    "pin": 2,
                    "pin_index": 1,
                    "pin_name": 1,
                    "pin_number": 3,
                    "pin_value": 4,
                    "result": 3
                },
                "millis": {
                    "get_current_millis": 1,
                    "get_current_time": 1,
                    "get_current_time_in_millis": 2,
                    "get_current_time_in_milliseconds": 4,
                    "get_millis": 1
                },
                "parse_and_process_data_08002ed2": {
                    "parse_and_process_data": 14,
                    "process_input_data": 1
                },
                "pinNametoDigitalPin": {
                    "convert_pin_name_to_digital_pin": 4,
                    "convert_pin_nameto_digital_pin": 1,
                    "get_digital_pin": 1,
                    "get_digital_pin_from_name": 1,
                    "get_digital_pin_from_pin_name": 1,
                    "get_digital_pin_number": 1,
                    "map_pin_name_to_digital_pin": 1,
                    "map_pin_nameto_digital_pin": 1,
                    "pin_nameto_digital_pin": 1,
                    "resolve_pin_number": 1
                },
                "processInput": {
                    "process_input": 11
                },
                "readAndReportData": {
                    "process_data_point": 1,
                    "read_and_report_data": 16
                },
                "send_analog_data_08002ef2": {
                    "send_analog_data": 21
                },
                "uVar3": {
                    "adc_value": 11,
                    "analog_read_value": 1,
                    "analog_value": 4,
                    "pin_value": 1
                },
                "uVar4": {
                    "counter": 1,
                    "i": 4,
                    "index": 6,
                    "iter": 1,
                    "iterator": 1,
                    "loop_counter1": 1,
                    "loop_index": 1,
                    "pin_index": 2,
                    "u_var4": 1
                },
                "uVar5": {
                    "adjusted_index": 1,
                    "adjusted_iterator": 1,
                    "analog_pin_index": 1,
                    "character_index": 4,
                    "index": 2,
                    "j": 2,
                    "offset": 2,
                    "pin": 1,
                    "shifted_index": 3,
                    "u_var5": 1
                },
                "update_output_ports_08000ef8": {
                    "update_output_ports": 16
                }
            },
            "called": [
                "FUN_08002ed2",
                "FUN_08008880",
                "FUN_08001c18",
                "FUN_08002ec4",
                "FUN_080036ac",
                "FUN_08008abc",
                "FUN_08000ef8",
                "FUN_08002fa0",
                "FUN_08002ef2"
            ],
            "calling": [
                "FUN_08008f1c"
            ],
            "code": "\nvoid process_digital_inputs_080022f8(void)\n\n{\n  bool is_valid_pin;\n  int pin_value;\n  undefined4 adc_value;\n  uint index;\n  uint character_index;\n  \n  check_digital_inputs();\n  while (pin_value = execute_nested_function(&DAT_200003d4), pin_value != 0) {\n    process_input(&DAT_200003d4);\n  }\n  DAT_20000118 = get_current_time_in_milliseconds();\n  if (DAT_20000008 < (uint)(DAT_20000118 - DAT_2000017c)) {\n    DAT_2000017c = DAT_2000017c + DAT_20000008;\n    for (index = 0; index < 0x3c; index = index + 1 & 0xff) {\n      character_index = index - 0x2e & 0xff;\n      if (character_index < 0xe) {\n        if (index < 0x3c) {\n          pin_value = (int)(char)(&DAT_0800a908)[index];\n        }\n        else {\n          pin_value = -1;\n        }\n        pin_value = convert_pin_name_to_digital_pin(pin_value);\n        if (pin_value == 0) {\n          is_valid_pin = false;\n        }\n        else {\n          if (index < 0x3c) {\n            pin_value = (int)(char)(&DAT_0800a908)[index];\n          }\n          else {\n            pin_value = -1;\n          }\n          pin_value = convert_pin_name_to_digital_pin(pin_value);\n          if (pin_value == 1) {\n            is_valid_pin = false;\n          }\n          else {\n            pin_value = get_pin_mode(&DAT_200003d4,index);\n            if (pin_value == 2) {\n              is_valid_pin = true;\n            }\n            else {\n              is_valid_pin = false;\n            }\n          }\n        }\n      }\n      else {\n        is_valid_pin = false;\n      }\n      if ((is_valid_pin) && ((DAT_20000114 >> character_index & 1U) != 0)) {\n        adc_value = read_analog_value(character_index);\n        send_analog_data(&DAT_200003d4,character_index,adc_value);\n      }\n    }\n    if (-1 < DAT_20000004) {\n      for (index = 0; (int)index < DAT_20000004 + 1; index = index + 1 & 0xff) {\n        pin_value = index * 0xc;\n        read_and_report_data((&DAT_20000188)[pin_value],(&DAT_2000018c)[index * 3],(&DAT_20000190)[pin_value],\n                          (&DAT_20000191)[pin_value]);\n      }\n    }\n  }\n  return;\n}\n\n",
            "current_name": "process_digital_inputs_080022f8",
            "entrypoint": "0x080022f8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080022f8": "process_digital_inputs_080022f8",
                "analogRead": "read_analog_value",
                "bVar1": "is_valid_pin",
                "checkDigitalInputs": "check_digital_inputs",
                "execute_nested_function_08002ec4": "execute_nested_function",
                "getPinMode": "get_pin_mode",
                "iVar2": "pin_value",
                "millis": "get_current_time_in_milliseconds",
                "pinNametoDigitalPin": "convert_pin_name_to_digital_pin",
                "processInput": "process_input",
                "readAndReportData": "read_and_report_data",
                "send_analog_data_08002ef2": "send_analog_data",
                "uVar3": "adc_value",
                "uVar4": "index",
                "uVar5": "character_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002400": {
            "additional_data": {
                "FUN_08002400": {
                    "check_bit": 2,
                    "check_bit_set": 2,
                    "check_data_validity": 1,
                    "check_flag": 7,
                    "check_flag_bit": 3,
                    "check_flag_conditions": 1,
                    "check_flag_set": 2,
                    "check_flag_value": 1,
                    "check_for_bit_flag": 1,
                    "check_if_bit_set": 3,
                    "check_is_bit_set": 1,
                    "check_param": 1,
                    "check_param_bit": 1,
                    "check_parameter_range": 1,
                    "check_validity": 1,
                    "find_flag_bit": 1,
                    "find_set_bit": 2
                },
                "param_1": {
                    "data_index": 1,
                    "flag": 1,
                    "flag_index": 1,
                    "index": 14,
                    "input": 3,
                    "input_index": 1,
                    "input_value": 9,
                    "param": 1
                },
                "uVar1": {
                    "bit_position": 1,
                    "counter": 21,
                    "index": 3,
                    "iteration_count": 4
                }
            },
            "called": [],
            "calling": [
                "FUN_080025ac",
                "FUN_08002644"
            ],
            "code": "\nundefined4 check_for_bit_flag_08002400(int index)\n\n{\n  uint counter;\n  \n  counter = 0;\n  while( true ) {\n    if (0xb < counter) {\n      return 0;\n    }\n    if (((&DAT_20000258)[(index * 0xc + counter) * 8] & 0x40) != 0) break;\n    counter = counter + 1 & 0xff;\n  }\n  return 1;\n}\n\n",
            "current_name": "check_for_bit_flag_08002400",
            "entrypoint": "0x08002400",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002400": "check_for_bit_flag_08002400",
                "param_1": "index",
                "uVar1": "counter"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800242c": {
            "additional_data": {
                "0x5dc": {
                    "pulse_count": 1,
                    "pulse_value": 1
                },
                "60000": {
                    "pulse_duration": 1,
                    "timeout_duration": 1
                },
                "FUN_0800242c": {
                    "initialize_timer": 29,
                    "initialize_timer_pulse": 2
                },
                "FUN_08007648": {
                    "do_something": 1,
                    "initialize_pulse": 1,
                    "modify_params": 1,
                    "process_data": 3,
                    "pulsate_timer": 1,
                    "set_timer_pulse": 1,
                    "timer_pulse_init": 1,
                    "update_data": 1,
                    "update_func": 1,
                    "update_timer": 1,
                    "update_timer_pulse": 1
                },
                "LAB_08002444_1": {
                    "callback_function": 4,
                    "callback_function_wrapper": 1,
                    "constant_label_08002444_1": 1,
                    "label": 2,
                    "label1": 1,
                    "label_08002444_1": 1,
                    "label_1": 1,
                    "pulse_callback": 2,
                    "pulse_timer_callback": 1,
                    "timer_callback": 1,
                    "timer_pulse_callback": 3
                },
                "TimerPulseInit": {
                    "configure_timer_pulse": 1,
                    "init_timer": 1,
                    "init_timer_pulse": 1,
                    "initialize_pulse_timer": 3,
                    "initialize_timer_pulse": 10,
                    "setup_timer_pulse_initialization": 1
                },
                "param_1": {
                    "arg1": 4,
                    "callback_function": 1,
                    "config_address": 1,
                    "context": 1,
                    "device_handle": 2,
                    "device_id": 1,
                    "param1": 14,
                    "param_1": 3,
                    "pulsate_param1": 1,
                    "timer": 1,
                    "timer_handle": 1,
                    "value1": 1
                },
                "param_2": {
                    "arg2": 2,
                    "duration": 1,
                    "interval": 1,
                    "param2": 7,
                    "param_2": 3,
                    "pulsate_param2": 1,
                    "timeout": 3,
                    "timeout_duration": 1,
                    "timeout_value": 1,
                    "value2": 1
                },
                "param_3": {
                    "arg3": 3,
                    "constant": 1,
                    "constant_value": 1,
                    "offset": 1,
                    "param3": 8,
                    "param_3": 3,
                    "pulsate_param3": 1,
                    "pulse_count": 1,
                    "value": 2,
                    "value3": 1
                },
                "param_4": {
                    "arg4": 4,
                    "callback": 2,
                    "callback_fn": 1,
                    "callback_function": 2,
                    "param4": 16,
                    "param_4": 3,
                    "pulsate_param4": 1,
                    "user_data": 1,
                    "value4": 1
                }
            },
            "called": [
                "FUN_08007648"
            ],
            "calling": [
                "FUN_080025ac"
            ],
            "code": "\nvoid initialize_timer_pulse_0800242c(undefined4 param1,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  initialize_timer_pulse_0800242c(param1,60000,0x5dc,&callback_function,param4);\n  return;\n}\n\n",
            "current_name": "initialize_timer_pulse_0800242c",
            "entrypoint": "0x0800242c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800242c": "initialize_timer_pulse_0800242c",
                "LAB_08002444_1": "callback_function",
                "TimerPulseInit": "initialize_timer_pulse",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002578": {
            "additional_data": {
                "FUN_08002578": {
                    "cleanup_timer_pulse": 1,
                    "deinit_timer_pulse": 12,
                    "deinitialize_timer_pulse": 13,
                    "disable_timer_pulse": 2,
                    "shutdown_timer_pulse": 2,
                    "stop_timer_pulse": 1
                },
                "FUN_080076e0": {
                    "deinit_timer_pulse": 1,
                    "handle_callback": 1,
                    "handle_timer_pulse": 1,
                    "handle_undefined4": 1,
                    "initialize": 1,
                    "initialize_timer_params": 1,
                    "perform_operation": 1,
                    "process_param": 1,
                    "process_parameter": 3,
                    "process_timer_pulse": 1,
                    "reverse_param1": 1,
                    "set_parameter1": 1,
                    "set_timer_pulse_parameters": 1,
                    "timer_pulse_deinit": 1,
                    "update_param1": 1,
                    "update_parameter1": 1
                },
                "param_1": {
                    "parameter": 1,
                    "timer_config": 1,
                    "timer_info": 1,
                    "timer_pulse_data": 1
                }
            },
            "called": [
                "FUN_080076e0"
            ],
            "calling": [
                "FUN_08002644"
            ],
            "code": "\nvoid deinitialize_timer_pulse_08002578(void)\n\n{\n  TimerPulseDeinit();\n  return;\n}\n\n",
            "current_name": "deinitialize_timer_pulse_08002578",
            "entrypoint": "0x08002578",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002578": "deinitialize_timer_pulse_08002578"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002580": {
            "additional_data": {
                "0x5dc": {
                    "magic_number": 1,
                    "new_value": 1
                },
                "0xb": {
                    "comparison_value": 1,
                    "max_buffer_size": 1,
                    "threshold": 1
                },
                "0xff": {
                    "default_value": 1,
                    "max_value": 1
                },
                "DAT_20000250": {
                    "counter": 1,
                    "current_value": 1
                },
                "FUN_08002580": {
                    "copy_and_increment_value": 1,
                    "copy_data": 1,
                    "count_and_store_value": 1,
                    "fill_array_with_constant": 1,
                    "initialize_byte": 1,
                    "initialize_byte_array": 1,
                    "initialize_data": 8,
                    "prepare_data": 1,
                    "process_data": 5,
                    "set_byte_value": 2,
                    "set_byte_value_if_needed": 1,
                    "set_initial_value": 1,
                    "set_output_value": 1,
                    "update_data": 3,
                    "update_data_and_index": 1,
                    "update_parameter": 1,
                    "validate_and_set": 1
                },
                "cVar1": {
                    "incremented_value": 1,
                    "new_data": 1,
                    "next_byte": 2,
                    "next_char": 10,
                    "next_character": 1,
                    "next_data": 1,
                    "next_value": 10,
                    "next_value_to_store": 1,
                    "updated_counter": 1
                },
                "param_1": {
                    "array": 1,
                    "buffer": 1,
                    "byte_arr": 1,
                    "byte_array": 3,
                    "byte_pointer": 1,
                    "data": 3,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "output": 2,
                    "output_array": 2,
                    "output_buffer": 12,
                    "output_pointer": 1,
                    "output_ptr": 1
                },
                "uVar2": {
                    "array_length": 2,
                    "array_size": 1,
                    "buffer_size": 1,
                    "byte_count": 1,
                    "count": 1,
                    "counter": 4,
                    "data_count": 1,
                    "data_index": 1,
                    "data_length": 3,
                    "data_size": 8,
                    "index": 1,
                    "num_iterations": 1,
                    "value": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_080004d4"
            ],
            "code": "\nvoid initialize_data_08002580(byte *output_buffer)\n\n{\n  char next_char;\n  uint data_size;\n  \n  data_size = (uint)DAT_20000250;\n  if (0xb < data_size) {\n    *output_buffer = 0xff;\n    return;\n  }\n  next_char = DAT_20000250 + 1;\n  *output_buffer = DAT_20000250;\n  DAT_20000250 = next_char;\n  *(undefined4 *)(&DAT_2000025c + data_size * 8) = 0x5dc;\n  return;\n}\n\n",
            "current_name": "initialize_data_08002580",
            "entrypoint": "0x08002580",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002580": "initialize_data_08002580",
                "cVar1": "next_char",
                "param_1": "output_buffer",
                "uVar2": "data_size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080025ac": {
            "additional_data": {
                "DAT_20000258": {
                    "array": 1,
                    "config_data": 1,
                    "data_array": 4,
                    "data_buffer": 2,
                    "data_buffer1": 1,
                    "data_lookup": 1,
                    "data_table": 1,
                    "memory_block1": 1,
                    "pin_config_data": 1,
                    "pin_config_table": 1,
                    "pin_mode_array": 1,
                    "timer_config_array": 1,
                    "timer_data": 1
                },
                "DAT_200002fc": {
                    "active_byte": 1,
                    "active_data": 1,
                    "active_timer": 4,
                    "active_timer_data": 1,
                    "data_buffer2": 1,
                    "global_var": 1,
                    "timer_active": 1,
                    "timer_data": 5,
                    "timer_status": 1,
                    "undefined_variable": 1,
                    "unknown_value": 1
                },
                "FUN_08002400": {
                    "init_isr": 1,
                    "is_timer_active": 1,
                    "sub_function2": 1
                },
                "FUN_0800242c": {
                    "pin_mode": 2,
                    "sub_function1": 1
                },
                "FUN_080025ac": {
                    "handle_input": 1,
                    "handle_pin_mode": 1,
                    "improve_and_map_pin": 1,
                    "improve_and_process_data": 1,
                    "improve_code": 1,
                    "initialize_gpio": 1,
                    "initialize_io": 1,
                    "initialize_peripheral": 1,
                    "pin_mode_and_activate_timer": 1,
                    "pin_mode_and_initialize": 1,
                    "pin_mode_and_timer_check": 1,
                    "pin_mode_and_timer_control": 1,
                    "pin_mode_and_update_timer": 1,
                    "pin_mode_and_update_timers": 1,
                    "process_data": 4,
                    "resolve_peripheral_functionality": 1,
                    "set_pin_and_activate_timer": 1,
                    "set_pin_mode_and_init": 1,
                    "update_configuration": 1,
                    "update_pin_config": 1,
                    "update_pin_configuration": 1,
                    "update_pin_mode": 2,
                    "update_pin_mode_and_timer": 1
                },
                "FUN_08008990": {
                    "init_isr": 1,
                    "is_timer_active": 1,
                    "sub_function3": 1
                },
                "iVar4": {
                    "calculated_value": 1,
                    "calculation_result": 2,
                    "difference": 1,
                    "offset": 8,
                    "temp1": 1,
                    "temp3": 1,
                    "temp4": 4,
                    "temp_3": 1,
                    "temp_value": 1,
                    "temp_var": 5,
                    "temp_var4": 3,
                    "temp_variable": 1,
                    "updated_value": 1,
                    "updated_var4": 1
                },
                "initISR": {
                    "initialize_isr": 13
                },
                "isTimerActive": {
                    "check_if_timer_active": 2,
                    "check_timer": 3,
                    "check_timer_active": 6,
                    "check_timer_activity": 2,
                    "check_timer_status": 5
                },
                "param_1": {
                    "buffer": 3,
                    "config": 1,
                    "data": 11,
                    "data_ptr": 2,
                    "input": 1,
                    "input_array": 1,
                    "input_data": 2,
                    "pin": 1,
                    "pin_config_array": 1,
                    "pin_data": 1,
                    "pin_state": 2,
                    "pin_status": 2,
                    "pin_value": 2
                },
                "param_2": {
                    "mode": 1,
                    "pin": 19,
                    "pin_mode": 1,
                    "pin_no": 1,
                    "pin_number": 9
                },
                "param_3": {
                    "mode": 1,
                    "param3": 2,
                    "param3_val": 1,
                    "param3_value": 1,
                    "param_a": 2,
                    "pin_num": 1,
                    "val1": 2,
                    "value1": 19,
                    "value_a": 1,
                    "var1": 1
                },
                "param_4": {
                    "param4": 2,
                    "param4_val": 1,
                    "param4_value": 1,
                    "param_4": 2,
                    "param_b": 2,
                    "val2": 2,
                    "value2": 19,
                    "value_b": 1,
                    "var2": 1
                },
                "pinMode": {
                    "configure_pin": 1,
                    "set_pin_mode": 6
                },
                "uVar1": {
                    "mapped_pin": 1,
                    "mask": 4,
                    "mask1": 1,
                    "masked_pin": 1,
                    "modified_byte1": 1,
                    "modified_data": 3,
                    "modified_data1": 2,
                    "modified_value": 1,
                    "modified_value1": 2,
                    "new_value1": 1,
                    "temp1": 4,
                    "temp_var1": 3,
                    "updated_config": 1,
                    "updated_input": 1,
                    "updated_pin_mode": 1,
                    "updated_pin_status": 1,
                    "updated_value1": 2,
                    "updated_var1": 1
                },
                "uVar2": {
                    "index": 3,
                    "mask2": 1,
                    "modified_byte2": 1,
                    "modified_data2": 2,
                    "modified_value2": 2,
                    "new_value2": 1,
                    "original_data": 1,
                    "original_value": 1,
                    "param2_and_bitmask": 1,
                    "param_modified_data": 1,
                    "pin_value": 1,
                    "temp": 1,
                    "temp1": 2,
                    "temp2": 4,
                    "temp_1": 1,
                    "temp_config": 1,
                    "temp_var2": 3,
                    "updated_pin_no": 1,
                    "updated_value2": 2,
                    "updated_var2": 1
                },
                "uVar3": {
                    "byte_quotient": 1,
                    "device_id": 1,
                    "div_result": 1,
                    "divided": 1,
                    "divided_data": 1,
                    "divided_pin_status": 1,
                    "divided_result": 1,
                    "divided_value": 2,
                    "division_result": 3,
                    "divisor": 2,
                    "mapped_pin_data": 1,
                    "modified_data3": 1,
                    "modified_value3": 2,
                    "new_value3": 1,
                    "temp2": 2,
                    "temp3": 4,
                    "temp_2": 1,
                    "temp_var3": 3,
                    "updated_value3": 1,
                    "updated_var3": 1
                }
            },
            "called": [
                "FUN_0800242c",
                "FUN_08002400",
                "FUN_08008990"
            ],
            "calling": [
                "FUN_08000500",
                "FUN_08002634"
            ],
            "code": "\nbyte improve_and_process_data_080025ac(byte *data,uint pin,int value1,int value2)\n\n{\n  uint mask;\n  uint temp2;\n  uint temp3;\n  int offset;\n  \n  if (*data < 0xc) {\n    set_pin_mode(pin,1,value1,*data,value2);\n    temp2 = (uint)*data;\n    mask = (byte)(&DAT_20000258)[temp2 * 8] & 0xffffffc0 | pin & 0x3f;\n    (&DAT_20000258)[temp2 * 8] = (char)mask;\n    offset = -value1 + 0x220;\n    if (offset < 0) {\n      offset = -value1 + 0x223;\n    }\n    data[1] = (byte)((uint)(offset << 0x16) >> 0x18);\n    offset = -value2 + 0x960;\n    if (offset < 0) {\n      offset = -value2 + 0x963;\n    }\n    data[2] = (byte)((uint)(offset << 0x16) >> 0x18);\n    temp3 = *data / 0xc;\n    offset = check_timer_active(temp3,mask,temp2,(uint)*data * -0x55555555);\n    if (offset == 0) {\n      DAT_200002fc = (undefined)temp3;\n      initialize_isr();\n    }\n    (&DAT_20000258)[(uint)*data * 8] = (&DAT_20000258)[(uint)*data * 8] | 0x40;\n  }\n  return *data;\n}\n\n",
            "current_name": "improve_and_process_data_080025ac",
            "entrypoint": "0x080025ac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080025ac": "improve_and_process_data_080025ac",
                "iVar4": "offset",
                "initISR": "initialize_isr",
                "isTimerActive": "check_timer_active",
                "param_1": "data",
                "param_2": "pin",
                "param_3": "value1",
                "param_4": "value2",
                "pinMode": "set_pin_mode",
                "uVar1": "mask",
                "uVar2": "temp2",
                "uVar3": "temp3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002634": {
            "additional_data": {
                "FUN_08002634": {
                    "improve_and_process_data": 2,
                    "initialize_and_process_data": 2,
                    "process_and_improve_data": 11,
                    "process_data": 14,
                    "process_data_and_improve": 1,
                    "process_data_with_improvement": 1
                },
                "improve_and_process_data_080025ac": {
                    "improve_and_process_data": 5,
                    "process_and_improve_data_internal": 2,
                    "process_data_and_improve": 1
                },
                "param_1": {
                    "data": 28,
                    "data_buffer": 1,
                    "data_pointer": 1,
                    "data_ptr": 1
                },
                "param_2": {
                    "pin": 30,
                    "pin_number": 1
                },
                "param_3": {
                    "value1": 15
                },
                "param_4": {
                    "param_4": 15,
                    "value2": 16
                },
                "value1": {
                    "improve_value_1": 1,
                    "value1": 3
                },
                "value2": {
                    "improve_value_2": 1,
                    "value2": 3
                }
            },
            "called": [
                "FUN_080025ac"
            ],
            "calling": [
                "FUN_08000500"
            ],
            "code": "\nvoid process_data_and_improve_08002634(undefined4 data,undefined4 pin,undefined4 value1,undefined4 value2)\n\n{\n  improve_and_process_data(data,pin,0x220,0x960,value2);\n  return;\n}\n\n",
            "current_name": "process_data_and_improve_08002634",
            "entrypoint": "0x08002634",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002634": "process_data_and_improve_08002634",
                "improve_and_process_data_080025ac": "improve_and_process_data",
                "param_1": "data",
                "param_2": "pin",
                "param_3": "value1",
                "param_4": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002644": {
            "additional_data": {
                "FUN_08002644": {
                    "check_and_execute_timed_operation": 1,
                    "check_and_execute_timer": 1,
                    "check_timer_and_execute_action": 1,
                    "execute_function": 1,
                    "execute_timer_action": 1,
                    "handle_timer": 4,
                    "handle_timer_action": 1,
                    "handle_timer_event": 2,
                    "handle_timer_interrupt": 1,
                    "modify_and_check_timer_status": 1,
                    "process_action": 1,
                    "process_data": 4,
                    "process_input_byte": 1,
                    "process_input_data": 1,
                    "process_timer": 6,
                    "process_timer_data": 2,
                    "timer_handler": 1,
                    "update_timer_status": 1
                },
                "bVar1": {
                    "byte_value": 2,
                    "byte_var": 1,
                    "current_byte": 3,
                    "current_flag": 1,
                    "current_value": 3,
                    "modified_value": 1,
                    "new_value": 1,
                    "old_value": 4,
                    "original_value": 2,
                    "prev_timer_status": 1,
                    "prev_value": 1,
                    "temp": 1,
                    "temp_value": 1,
                    "timer_data": 1,
                    "timer_flag": 1,
                    "timer_state": 2,
                    "value": 5
                },
                "finISR": {
                    "finalize_isr": 3,
                    "finish_interrupt": 1,
                    "finish_interrupt_handler": 1,
                    "finish_isr": 1
                },
                "iVar3": {
                    "is_active": 16,
                    "is_timer_active_result": 1,
                    "result": 4,
                    "return_value": 1,
                    "timer_active": 5,
                    "timer_status": 4
                },
                "isTimerActive": {
                    "check_if_timer_is_active": 1,
                    "check_timer_active": 4,
                    "check_timer_status": 1
                },
                "param_1": {
                    "buffer": 2,
                    "byte_array": 1,
                    "data": 19,
                    "data_buffer": 1,
                    "event_data": 1,
                    "input_byte": 1,
                    "input_data": 3,
                    "timer_data": 3
                },
                "param_2": {
                    "arg1": 3,
                    "error_code": 1,
                    "param1": 6,
                    "param2": 11,
                    "param_a": 1,
                    "param_flags": 1,
                    "parameter2": 1,
                    "timer": 1,
                    "timer_id": 1,
                    "val1": 1,
                    "value1": 4
                },
                "param_3": {
                    "arg2": 3,
                    "param": 1,
                    "param2": 5,
                    "param3": 8,
                    "parameter3": 2,
                    "val2": 1,
                    "value2": 4
                },
                "param_4": {
                    "additional_param": 1,
                    "arg3": 3,
                    "param2": 2,
                    "param3": 5,
                    "param4": 12,
                    "param_c": 1,
                    "parameter4": 2,
                    "val3": 1,
                    "value3": 4
                },
                "uVar2": {
                    "byte_value": 1,
                    "current_index": 1,
                    "current_value": 1,
                    "data_value": 2,
                    "event_value": 1,
                    "first_byte": 3,
                    "first_byte_value": 1,
                    "index": 14,
                    "input_value": 1,
                    "timer_index": 1,
                    "timer_value": 3,
                    "value": 2
                }
            },
            "called": [
                "FUN_08002578",
                "FUN_08002400"
            ],
            "calling": [
                "FUN_08000588"
            ],
            "code": "\nvoid process_timer_data_08002644(byte *data,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  byte value;\n  uint index;\n  int is_active;\n  \n  index = (uint)*data;\n  value = (&DAT_20000258)[index * 8];\n  (&DAT_20000258)[index * 8] = value & 0xbf;\n  is_active = check_timer_active(index / 0xc,param2,value & 0xbf,index * -0x55555555,param4);\n  if (is_active == 0) {\n    finalize_isr(&DAT_200002b8);\n  }\n  return;\n}\n\n",
            "current_name": "process_timer_data_08002644",
            "entrypoint": "0x08002644",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002644": "process_timer_data_08002644",
                "bVar1": "value",
                "finISR": "finalize_isr",
                "iVar3": "is_active",
                "isTimerActive": "check_timer_active",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar2": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800267c": {
            "additional_data": {
                "DAT_2000025c": {
                    "array": 1,
                    "array_base": 1,
                    "array_base_address": 1,
                    "array_offset": 1,
                    "data_array": 1,
                    "output_array": 2
                },
                "FUN_0800267c": {
                    "calculate_and_update_value": 1,
                    "calculate_value": 1,
                    "set_array_value": 1,
                    "store_value": 1,
                    "update_array_value": 8,
                    "update_data": 7,
                    "update_int_array": 2,
                    "update_int_value": 1,
                    "update_parameters": 1,
                    "update_value": 1,
                    "update_value_if_valid": 1,
                    "update_values": 5,
                    "update_values_if_less_than": 1
                },
                "SBORROW4": {
                    "is_borrow": 1
                },
                "iVar1": {
                    "calculated_value": 3,
                    "index": 14,
                    "multiplier": 1,
                    "new_index": 1,
                    "new_value": 4,
                    "result": 2,
                    "temp_value": 2,
                    "temp_var": 1,
                    "updated_value": 1
                },
                "param_1": {
                    "array": 10,
                    "byte_array": 2,
                    "data": 7,
                    "data_array": 1,
                    "data_buffer": 1,
                    "data_pointer": 2,
                    "input_array": 5,
                    "input_buffer": 1,
                    "input_data": 1
                },
                "param_2": {
                    "new_value": 1,
                    "size": 1,
                    "target_value": 2,
                    "value": 23,
                    "value_to_compare": 2,
                    "value_to_update": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_080026b0"
            ],
            "code": "\nvoid update_array_value_0800267c(byte *array,int value)\n\n{\n  int index;\n  \n  if (*array < 0xc) {\n    index = (0x88 - (char)array[1]) * 4;\n    if ((index - value == 0 || index < value) &&\n       (index = (600 - (char)array[2]) * 4,\n       value == index || value + (600 - (char)array[2]) * -4 < 0 != is_borrow(value,index)))\n    {\n      index = value;\n    }\n    *(int *)(&DAT_2000025c + (uint)*array * 8) = index;\n  }\n  return;\n}\n\n",
            "current_name": "update_array_value_0800267c",
            "entrypoint": "0x0800267c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800267c": "update_array_value_0800267c",
                "SBORROW4": "is_borrow",
                "iVar1": "index",
                "param_1": "array",
                "param_2": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080026b0": {
            "additional_data": {
                "FUN_0800267c": {
                    "map": 1
                },
                "FUN_080026b0": {
                    "adjust_and_write_microseconds": 1,
                    "control_servo": 2,
                    "map_and_write_microseconds": 2,
                    "send_pulse": 1,
                    "set_and_write_microseconds": 1,
                    "set_servo_angle": 1,
                    "set_servo_motor_position": 1,
                    "set_servo_position": 2,
                    "update_motor_speed": 1,
                    "update_pwm_value": 1,
                    "update_servo": 1,
                    "update_servo_angle": 1,
                    "update_servo_position": 10,
                    "update_servo_pulse_width": 1,
                    "write_mapped_microseconds": 4
                },
                "FUN_08008ef4": {
                    "write_microseconds": 1
                },
                "map": {
                    "calculate_mapped_value": 1,
                    "map_angle": 4,
                    "map_angle_to_microseconds": 2,
                    "map_microseconds": 1,
                    "map_position": 3,
                    "map_pulse_width": 1,
                    "map_speed": 1,
                    "map_value": 4,
                    "map_value_in_range": 1,
                    "map_value_to_range": 1,
                    "scale_position": 1
                },
                "param_1": {
                    "byte_array": 1,
                    "byte_buffer": 1,
                    "input_parameter": 1,
                    "microcontroller_pin": 1,
                    "motor_pin": 1,
                    "pin": 5,
                    "pin_number": 3,
                    "servo_motor_pin": 1,
                    "servo_pin": 17
                },
                "param_2": {
                    "angle": 8,
                    "desired_position": 2,
                    "input_value": 5,
                    "microseconds": 5,
                    "new_position": 1,
                    "position": 1,
                    "pulse_length": 1,
                    "pulse_width": 2,
                    "rotation_angle": 1,
                    "speed": 1,
                    "target_value": 1,
                    "value": 3
                },
                "writeMicroseconds": {
                    "send_microseconds": 1,
                    "send_servo_pulse": 1,
                    "set_microseconds": 1,
                    "set_motor_speed": 1,
                    "set_servo_angle": 2,
                    "set_servo_microseconds": 6,
                    "set_servo_position": 1,
                    "update_servo_position": 1,
                    "write_mapped_microseconds": 1,
                    "write_microseconds": 1,
                    "write_servo_microseconds": 2,
                    "write_signal_microseconds": 1,
                    "write_to_microseconds": 1
                }
            },
            "called": [
                "FUN_0800267c",
                "FUN_08008ef4"
            ],
            "calling": [
                "FUN_0800021a"
            ],
            "code": "\nvoid update_servo_position_080026b0(int servo_pin,int angle)\n\n{\n  if (angle < 0x220) {\n    if (angle < 0) {\n      angle = 0;\n    }\n    else if (0xb4 < angle) {\n      angle = 0xb4;\n    }\n    angle = map_value(angle,0,0xb4,(0x88 - *(char *)(servo_pin + 1)) * 4,\n                  (600 - *(char *)(servo_pin + 2)) * 4);\n  }\n  set_servo_microseconds(servo_pin,angle);\n  return;\n}\n\n",
            "current_name": "update_servo_position_080026b0",
            "entrypoint": "0x080026b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080026b0": "update_servo_position_080026b0",
                "map": "map_value",
                "param_1": "servo_pin",
                "param_2": "angle",
                "writeMicroseconds": "set_servo_microseconds"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080026f8": {
            "additional_data": {
                "DAT_20000258": {
                    "bit_array": 2,
                    "byte_array": 1,
                    "data": 1,
                    "data_array": 4,
                    "data_table": 1,
                    "hash_table": 1,
                    "lookup_table": 2,
                    "memory_data_array": 1
                },
                "FUN_080026f8": {
                    "bit_shift_and_mask": 1,
                    "bitwise_shift_and_extraction": 1,
                    "bitwise_shift_and_mask": 1,
                    "calculate_bit_value": 1,
                    "calculate_bits": 1,
                    "calculate_hash_bits": 1,
                    "calculate_shifted_value": 1,
                    "decode_bits_to_uint": 1,
                    "extract_bit": 3,
                    "extract_bit_from_byte": 1,
                    "extract_bit_from_lookup_table": 1,
                    "extract_byte": 1,
                    "extract_byte_bit": 1,
                    "extract_byte_from_data": 1,
                    "extract_byte_value": 2,
                    "extracted_byte_bit": 1,
                    "extracted_byte_bits": 1,
                    "extracted_byte_value": 4,
                    "get_bit": 1,
                    "get_bit_at_index": 1,
                    "get_bit_from_table": 1,
                    "get_bit_value": 2,
                    "map_byte_to_bit": 1
                },
                "byte": {
                    "byte_value": 1
                },
                "param_1": {
                    "byte_array": 8,
                    "data": 2,
                    "input": 1,
                    "input_array": 2,
                    "input_byte": 12,
                    "input_byte_array": 1,
                    "input_bytes": 1,
                    "input_data": 1
                },
                "uint": {
                    "unsigned_integer": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08001cd0",
                "FUN_080005f8"
            ],
            "code": "\nunsigned_integer extract_bit_from_byte_080026f8(byte_value *input_byte)\n\n{\n  return ((unsigned_integer)(byte_value)(&DAT_20000258)[(unsigned_integer)*input_byte * 8] << 0x19) >> 0x1f;\n}\n\n",
            "current_name": "extract_bit_from_byte_080026f8",
            "entrypoint": "0x080026f8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080026f8": "extract_bit_from_byte_080026f8",
                "byte": "byte_value",
                "param_1": "input_byte",
                "uint": "unsigned_integer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800270c": {
            "additional_data": {
                "DAT_200003b5": {
                    "data2": 1,
                    "data_2": 1,
                    "data_variable_b5": 1,
                    "num2": 1,
                    "reference_data": 1,
                    "second_data": 2,
                    "second_number": 1,
                    "second_value": 5,
                    "value2": 12,
                    "value_2": 4,
                    "value_b": 2
                },
                "DAT_200003b7": {
                    "data1": 1,
                    "data_1": 1,
                    "data_variable_b7": 1,
                    "first_data": 2,
                    "first_number": 1,
                    "first_value": 5,
                    "num1": 1,
                    "source_data": 1,
                    "value1": 12,
                    "value_1": 4,
                    "value_a": 2
                },
                "FUN_0800270c": {
                    "calculate_difference": 31
                }
            },
            "called": [],
            "calling": [
                "FUN_08001c18"
            ],
            "code": "\nint calculate_difference_0800270c(void)\n\n{\n  return (uint)DAT_200003b7 - (uint)DAT_200003b5;\n}\n\n",
            "current_name": "calculate_difference_0800270c",
            "entrypoint": "0x0800270c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800270c": "calculate_difference_0800270c"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002720": {
            "additional_data": {
                "DAT_200003b5": {
                    "array_length": 1,
                    "buffer_size": 1,
                    "byte_array_length": 1,
                    "current_byte_index": 1,
                    "current_index": 12,
                    "data_array_length": 1,
                    "data_index": 1,
                    "data_length": 3,
                    "data_size": 1,
                    "data_start": 1,
                    "index_limit": 1,
                    "index_value": 1,
                    "memory_address": 1,
                    "start_address": 2,
                    "start_index": 2
                },
                "DAT_200003b7": {
                    "array_length": 2,
                    "array_length_limit": 1,
                    "buffer_limit": 1,
                    "byte_count": 1,
                    "data_end": 1,
                    "data_size": 2,
                    "end_address": 2,
                    "end_index": 5,
                    "limit": 1,
                    "limit_index": 1,
                    "max_index": 8,
                    "max_length": 1,
                    "max_size": 1,
                    "memory_size": 1,
                    "target_index": 1,
                    "threshold": 1
                },
                "DAT_200003c8": {
                    "address": 1,
                    "array": 1,
                    "buffer": 1,
                    "buffer_base": 1,
                    "byte_array": 6,
                    "data_address": 2,
                    "data_array": 3,
                    "data_buffer": 1,
                    "data_pointer": 1,
                    "memory_address": 5,
                    "memory_array": 1,
                    "memory_base_address": 1,
                    "memory_block": 1,
                    "memory_pointer": 1,
                    "memory_ptr": 1,
                    "memory_start": 1,
                    "memory_start_address": 1,
                    "start_of_array": 1
                },
                "FUN_08002720": {
                    "byte_to_u_int": 1,
                    "extract_byte_from_binary": 2,
                    "extract_byte_from_data": 1,
                    "extract_byte_from_memory": 1,
                    "fetch_byte_from_data": 1,
                    "get_byte_from_buffer": 1,
                    "get_next_byte": 6,
                    "get_next_byte_from_data": 1,
                    "read_byte": 1,
                    "read_byte_from_memory": 11,
                    "read_next_byte": 3,
                    "read_next_byte_from_memory": 1,
                    "read_uint_from_data": 1
                },
                "byteVal": {
                    "data_byte": 1
                },
                "byte_value": {
                    "byte_value": 1
                },
                "uVar1": {
                    "byte_index": 2,
                    "counter": 1,
                    "current_index": 7,
                    "index": 21
                }
            },
            "called": [],
            "calling": [
                "FUN_08001c08"
            ],
            "code": "\nuint read_next_byte_from_memory_08002720(void)\n\n{\n  uint index;\n  \n  index = (uint)DAT_200003b5;\n  if (index < DAT_200003b7) {\n    DAT_200003b5 = DAT_200003b5 + 1;\n    return (uint)*(byte *)(DAT_200003c8 + index);\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "read_next_byte_from_memory_08002720",
            "entrypoint": "0x08002720",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002720": "read_next_byte_from_memory_08002720",
                "uVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080027f0": {
            "additional_data": {
                "DAT_200003b4": {
                    "check_flag": 1,
                    "flag": 2,
                    "is_i2c_busy": 1,
                    "is_initialized": 2,
                    "is_write_it": 1,
                    "is_write_it_enabled": 1
                },
                "DAT_200003b6": {
                    "current_data_position": 1,
                    "start_addr": 1
                },
                "DAT_200003b8": {
                    "current_addr": 1,
                    "current_address": 1,
                    "current_data_address": 1,
                    "current_data_ptr": 2,
                    "data_end": 1,
                    "data_start": 1,
                    "last_data_position": 1
                },
                "DAT_200003c5": {
                    "buffer_size": 2,
                    "max_address": 1,
                    "max_data_address": 1,
                    "max_data_len": 1,
                    "max_data_length": 2,
                    "maximum_data_size": 1
                },
                "DAT_200003cc": {
                    "allocated_buffer": 1,
                    "allocated_data": 1,
                    "allocated_data_memory": 1,
                    "buffer": 1,
                    "data_buffer": 2,
                    "data_buffer_ptr": 2
                },
                "FUN_080027f0": {
                    "i2c_transfer_data": 1,
                    "i2c_write": 2,
                    "process_data": 4,
                    "transfer_data": 1,
                    "validate_and_copy_data": 1,
                    "write_and_copy_data": 1,
                    "write_data": 15,
                    "write_data_from_i2_c": 1,
                    "write_data_to_buffer": 4,
                    "write_data_to_slave": 1
                },
                "FUN_08007ede": {
                    "allocate_memory": 2,
                    "copy_data": 3,
                    "copy_data_to_buffer": 2,
                    "memcpy": 1,
                    "memcpy_data": 2,
                    "realloc_buffer": 1,
                    "realloc_memory": 1
                },
                "FUN_080091b0": {
                    "handle_write": 1,
                    "i2c_slave_write_it": 5,
                    "write_buffer": 1,
                    "write_data": 2,
                    "write_data_internal": 1,
                    "write_data_to_slave": 2
                },
                "FUN_08009908": {
                    "check_write": 1,
                    "check_write_status": 1,
                    "i2c_slave_write_it": 2,
                    "realloc": 1,
                    "realloc_buffer": 3,
                    "realloc_data_buffer": 2,
                    "realloc_memory": 1,
                    "resize_buffer": 1
                },
                "i2c_slave_write_IT": {
                    "i2c_write_data": 1,
                    "perform_write_operation": 1,
                    "write_data_to_slave_device": 1,
                    "write_i2c_slave": 1,
                    "write_slave_data": 1
                },
                "iVar1": {
                    "result": 11,
                    "return_value": 1,
                    "write_result": 14,
                    "write_status": 3
                },
                "memcpy": {
                    "copy_data": 1,
                    "copy_memory": 4,
                    "copy_memory_block": 1,
                    "copy_to_buffer": 1
                },
                "param_1": {
                    "address": 3,
                    "buffer_address": 2,
                    "data_buffer": 2,
                    "data_ptr": 1,
                    "device": 1,
                    "device_addr": 1,
                    "device_address": 18,
                    "offset": 1,
                    "slave_address": 2
                },
                "param_2": {
                    "buffer": 1,
                    "data": 18,
                    "data_address": 1,
                    "data_buffer": 9,
                    "data_pointer": 1,
                    "input_data": 1
                },
                "param_3": {
                    "data_len": 1,
                    "data_length": 16,
                    "data_size": 4,
                    "input_size": 1,
                    "length": 4,
                    "size": 5
                },
                "realloc": {
                    "reallocate": 1,
                    "reallocate_memory": 4,
                    "resize_data_buffer": 1
                },
                "uVar2": {
                    "new_buffer_length": 2,
                    "new_data_len": 1,
                    "new_data_length": 14,
                    "new_data_size": 3,
                    "new_length": 3,
                    "new_size": 6
                }
            },
            "called": [
                "FUN_080091b0",
                "FUN_08009908",
                "FUN_08007ede"
            ],
            "calling": [],
            "code": "\nuint write_data_to_buffer_080027f0(int device_address,undefined4 data,uint data_length)\n\n{\n  int write_result;\n  uint new_data_length;\n  \n  if (DAT_200003b4 == '\\0') {\n    write_result = write_i2c_slave(device_address + 0x14,data,data_length & 0xffff);\n    if (write_result == 0) {\n      return data_length;\n    }\n    return 0;\n  }\n  new_data_length = DAT_200003b8 + data_length;\n  if (DAT_200003c5 < new_data_length) {\n    if (new_data_length < 0x20) {\n      new_data_length = 0x20;\n    }\n    DAT_200003cc = reallocate_memory(DAT_200003cc,new_data_length);\n    if (DAT_200003cc == 0) {\n      DAT_200003c5 = 0;\n    }\n    else {\n      DAT_200003c5 = (byte)new_data_length;\n    }\n  }\n  if (DAT_200003cc == 0) {\n    *(undefined4 *)(device_address + 4) = 1;\n    return 0;\n  }\n  copy_memory((uint)DAT_200003b6 + DAT_200003cc,data,data_length);\n  DAT_200003b6 = DAT_200003b6 + (char)data_length;\n  DAT_200003b8 = DAT_200003b6;\n  return data_length;\n}\n\n",
            "current_name": "write_data_to_buffer_080027f0",
            "entrypoint": "0x080027f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080027f0": "write_data_to_buffer_080027f0",
                "i2c_slave_write_IT": "write_i2c_slave",
                "iVar1": "write_result",
                "memcpy": "copy_memory",
                "param_1": "device_address",
                "param_2": "data",
                "param_3": "data_length",
                "realloc": "reallocate_memory",
                "uVar2": "new_data_length"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800288c": {
            "additional_data": {
                "DAT_200003b4": {
                    "condition": 1,
                    "data_available": 1,
                    "flag": 2
                },
                "DAT_200003b6": {
                    "buffer_index": 1,
                    "current_index": 2,
                    "current_position": 1
                },
                "DAT_200003b8": {
                    "data_count": 1,
                    "data_length": 2,
                    "prev_size": 1
                },
                "DAT_200003c5": {
                    "max_data_count": 1,
                    "max_data_length": 2,
                    "max_size": 1
                },
                "DAT_200003cc": {
                    "data_buffer": 4
                },
                "FUN_0800288c": {
                    "i2c_slave_write": 1,
                    "process_data": 1,
                    "send_data": 2,
                    "update_data_buffer": 1,
                    "write_data": 21,
                    "write_data_to_i2_c_slave": 1,
                    "write_data_to_slave": 2,
                    "write_to_i2c_slave": 1,
                    "write_to_memory": 1
                },
                "FUN_08007ede": {
                    "realloc": 1
                },
                "FUN_08009908": {
                    "i2c_slave_write_it": 1
                },
                "i2c_slave_write_IT": {
                    "write_i2c_slave_nonblocking": 1
                },
                "iVar2": {
                    "result": 8,
                    "write_result": 21,
                    "write_status": 2
                },
                "local_11": {
                    "buffer": 1,
                    "byte_data": 6,
                    "byte_to_send": 2,
                    "byte_to_write": 12,
                    "byte_value": 1,
                    "data_byte": 2,
                    "data_to_write": 1,
                    "input_data": 1,
                    "new_data": 4,
                    "write_value": 1
                },
                "param_1": {
                    "base_address": 1,
                    "data_address": 1,
                    "data_buffer": 1,
                    "device_address": 25,
                    "device_handle": 1,
                    "device_id": 2
                },
                "param_2": {
                    "data": 29,
                    "data_byte": 2
                },
                "realloc": {
                    "resize_data_buffer": 1
                },
                "uVar1": {
                    "result": 3,
                    "return_value": 2,
                    "status": 3,
                    "success": 22
                },
                "uVar3": {
                    "new_buffer_size": 4,
                    "new_data_length": 2,
                    "new_data_size": 12,
                    "new_length": 1,
                    "new_size": 10,
                    "realloc_size": 1,
                    "size": 1
                }
            },
            "called": [
                "FUN_08009908",
                "FUN_08007ede"
            ],
            "calling": [
                "FUN_08001bf8"
            ],
            "code": "\nundefined4 write_data_to_i2_c_slave_0800288c(int device_address,undefined data)\n\n{\n  undefined4 success;\n  int write_result;\n  uint new_data_size;\n  undefined byte_to_write;\n  \n  byte_to_write = data;\n  if (DAT_200003b4 == '\\0') {\n    write_result = write_i2c_slave_nonblocking(device_address + 0x14,&byte_to_write,1);\n    if (write_result == 0) {\n      success = 1;\n    }\n    else {\n      success = 0;\n    }\n  }\n  else {\n    new_data_size = DAT_200003b8 + 1;\n    if (DAT_200003c5 < new_data_size) {\n      if (new_data_size < 0x20) {\n        new_data_size = 0x20;\n      }\n      DAT_200003cc = resize_data_buffer(DAT_200003cc,new_data_size);\n      if (DAT_200003cc == 0) {\n        DAT_200003c5 = 0;\n      }\n      else {\n        DAT_200003c5 = (byte)new_data_size;\n      }\n    }\n    if (DAT_200003cc == 0) {\n      *(undefined4 *)(device_address + 4) = 1;\n      success = 0;\n    }\n    else {\n      *(undefined *)(DAT_200003cc + (uint)DAT_200003b6) = byte_to_write;\n      DAT_200003b6 = DAT_200003b6 + 1;\n      success = 1;\n      DAT_200003b8 = DAT_200003b6;\n    }\n  }\n  return success;\n}\n\n",
            "current_name": "write_data_to_i2_c_slave_0800288c",
            "entrypoint": "0x0800288c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800288c": "write_data_to_i2_c_slave_0800288c",
                "i2c_slave_write_IT": "write_i2c_slave_nonblocking",
                "iVar2": "write_result",
                "local_11": "byte_to_write",
                "param_1": "device_address",
                "param_2": "data",
                "realloc": "resize_data_buffer",
                "uVar1": "success",
                "uVar3": "new_data_size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800291c": {
            "additional_data": {
                "FUN_0800291c": {
                    "initialize_data": 5,
                    "initialize_data_struct": 1,
                    "initialize_function": 5,
                    "initialize_param": 6,
                    "initialize_parameters": 6,
                    "initialize_params": 8
                },
                "PTR_FUN_0800288c_1_0800a5a0": {
                    "func_pointer": 1,
                    "function_pointer": 6,
                    "ptr_initialize_function_0800288c_1_0800a5a0": 1
                },
                "param_1": {
                    "data": 4,
                    "data_pointer": 1,
                    "data_struct": 1,
                    "function_parameters": 1,
                    "function_params": 3,
                    "param": 2,
                    "param_array": 3,
                    "parameter": 1,
                    "parameters": 8,
                    "params": 6
                }
            },
            "called": [],
            "calling": [
                "FUN_08002948"
            ],
            "code": "\nvoid initialize_params_0800291c(undefined4 *parameters)\n\n{\n  parameters[1] = 0;\n  parameters[2] = 1000;\n  *parameters = &PTR_FUN_0800288c_1_0800a5a0;\n  *(undefined *)(parameters + 0x1b) = 0x19;\n  *(undefined *)((int)parameters + 0x6d) = 0x18;\n  return;\n}\n\n",
            "current_name": "initialize_params_0800291c",
            "entrypoint": "0x0800291c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800291c": "initialize_params_0800291c",
                "param_1": "parameters"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002948": {
            "additional_data": {
                "FUN_0800291c": {
                    "configure_i2c": 1,
                    "handle_error": 1,
                    "init_uart": 1,
                    "init_wire": 1,
                    "initialize_connection": 1,
                    "initialize_data": 2,
                    "initialize_i2_c": 1,
                    "initialize_subsystem": 1,
                    "initialize_wire": 4,
                    "process_data": 1
                },
                "FUN_08002948": {
                    "check_and_execute_operation": 1,
                    "check_and_initialize": 1,
                    "check_and_process_param": 1,
                    "check_and_submit_data": 1,
                    "check_param": 1,
                    "execute_command": 1,
                    "execute_packet_handling": 1,
                    "handle_param": 4,
                    "handle_special_case": 1,
                    "initialize_communication": 4,
                    "initialize_wire_communication": 1,
                    "perform_operation": 1,
                    "process_data": 3,
                    "process_param": 6,
                    "process_paramaters": 1,
                    "process_parameters": 3
                },
                "TwoWire": {
                    "init_wire": 1,
                    "perform_communication": 1,
                    "perform_wire_operation": 1,
                    "peripheral_operation": 1,
                    "send_data": 2
                },
                "param_1": {
                    "command": 1,
                    "error_code": 1,
                    "flag": 6,
                    "input_flag": 1,
                    "input_param": 1,
                    "input_value": 1,
                    "is_param_one": 1,
                    "operation_type": 1,
                    "packet_type": 1,
                    "param": 1,
                    "param_1_val": 1,
                    "param_buffer": 1,
                    "parameter_1": 1,
                    "result_code": 1,
                    "status": 4,
                    "status_flag": 1,
                    "value": 3,
                    "value1": 4
                },
                "param_2": {
                    "config_value": 1,
                    "data_flag": 1,
                    "data_value": 1,
                    "flag": 6,
                    "flag_param": 1,
                    "packet_value": 1,
                    "param_2_val": 1,
                    "param_two": 1,
                    "parameter_2": 1,
                    "status": 1,
                    "value": 12,
                    "value2": 4
                }
            },
            "called": [
                "FUN_0800291c"
            ],
            "calling": [
                "FUN_08002c1e"
            ],
            "code": "\nvoid check_and_process_param_08002948(int flag,int value)\n\n{\n  if (flag != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    send_data(&DAT_20000314);\n  }\n  return;\n}\n\n",
            "current_name": "check_and_process_param_08002948",
            "entrypoint": "0x08002948",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002948": "check_and_process_param_08002948",
                "TwoWire": "send_data",
                "param_1": "flag",
                "param_2": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002968": {
            "additional_data": {
                "DAT_200003b4": {
                    "variable5": 1
                },
                "DAT_200003b5": {
                    "byte_zero": 1,
                    "variable1": 1
                },
                "DAT_200003b6": {
                    "byte_zero3": 1,
                    "variable3": 1
                },
                "DAT_200003b7": {
                    "byte_zero2": 1,
                    "variable2": 1
                },
                "DAT_200003b8": {
                    "byte_zero4": 1,
                    "variable4": 1
                },
                "DAT_200003c4": {
                    "data_buffer1_size": 1,
                    "memory_block_size1": 1
                },
                "DAT_200003c5": {
                    "data_buffer2_size": 1,
                    "memory_block_size2": 1
                },
                "DAT_200003c8": {
                    "data_buffer1": 1,
                    "memory_block1": 1
                },
                "DAT_200003cc": {
                    "data_buffer2": 1,
                    "memory_block2": 1
                },
                "FUN_08002968": {
                    "configure_i2_c_device": 1,
                    "init_i2_c_device": 1,
                    "initialize_device": 5,
                    "initialize_i2_c": 16,
                    "initialize_i2_c_device": 6,
                    "initialize_i2c": 1,
                    "initialize_i2c_communication": 1
                },
                "FUN_080077b0": {
                    "i2c_attach_slave_events": 1,
                    "i2c_attach_slave_tx_event": 2
                },
                "FUN_08007f7c": {
                    "i2c_custom_init": 3
                },
                "FUN_08007f8e": {
                    "i2c_attach_slave_rx_event": 1,
                    "i2c_read_from_slave": 1,
                    "memset": 1
                },
                "FUN_080091c6": {
                    "i2c_attach_slave_rx_event": 2,
                    "i2c_attach_slave_tx_event": 1
                },
                "LAB_08002774_1": {
                    "handle_tx_event": 1,
                    "slave_tx_event": 1,
                    "slave_tx_event_callback": 2
                },
                "LAB_08002b00_1": {
                    "handle_rx_event": 1,
                    "slave_rx_event": 1,
                    "slave_rx_event_callback": 2
                },
                "i2c_attachSlaveRxEvent": {
                    "attach_slave_receive_event": 1,
                    "attach_slave_rx_event": 10,
                    "attach_slave_rx_event_to_i2_c": 1
                },
                "i2c_attachSlaveTxEvent": {
                    "attach_slave_transmit_event": 1,
                    "attach_slave_tx_event": 10,
                    "attach_slave_tx_event_to_i2_c": 1
                },
                "i2c_custom_init": {
                    "custom_i2_c_init": 4,
                    "custom_i2c_init": 2,
                    "custom_init_i2_c": 2,
                    "initialize_custom_i2_c": 3,
                    "initialize_i2_c": 4,
                    "initialize_i2_c_custom": 1
                },
                "iVar1": {
                    "config_flag": 1,
                    "config_setting_shifted": 1,
                    "config_shifted": 1,
                    "configuration_flag": 1,
                    "device_config": 1,
                    "masked_flags": 1,
                    "options_shifted": 1,
                    "shifted_config": 8,
                    "shifted_config_bits": 1,
                    "shifted_config_value": 5,
                    "shifted_configuration": 1,
                    "shifted_control_code": 2,
                    "shifted_device_type": 1,
                    "shifted_flags": 1,
                    "shifted_options": 1,
                    "shifted_value": 1
                },
                "iVar2": {
                    "base_address": 1,
                    "custom_config_address": 1,
                    "custom_init_arg": 1,
                    "device_address_offset": 1,
                    "device_handle": 2,
                    "device_handler": 1,
                    "device_pointer": 2,
                    "device_ptr": 1,
                    "i2_c_instance": 1,
                    "i2c_address": 1,
                    "i2c_custom_init_arg": 1,
                    "i2c_custom_init_param": 2,
                    "i2c_data_address": 1,
                    "i2c_device": 2,
                    "i2c_device_address": 2,
                    "i2c_device_ptr": 1,
                    "i2c_init_address": 3,
                    "i2c_instance": 2,
                    "initialize_offset": 1,
                    "slave_address": 1
                },
                "param_1": {
                    "address": 3,
                    "base_addr": 1,
                    "base_address": 9,
                    "data_buffer_address": 1,
                    "device_address": 16,
                    "device_ptr": 1
                },
                "param_2": {
                    "config": 6,
                    "config_bits": 1,
                    "config_data": 1,
                    "config_flags": 1,
                    "config_setting": 1,
                    "config_value": 10,
                    "configuration": 2,
                    "control_byte": 1,
                    "control_code": 2,
                    "device_type": 2,
                    "flags": 2,
                    "options": 2
                }
            },
            "called": [
                "FUN_08007f7c",
                "FUN_080077b0",
                "FUN_080091c6",
                "FUN_08007f8e"
            ],
            "calling": [
                "FUN_08002a1c"
            ],
            "code": "\nvoid initialize_i2_c_device_08002968(int device_address,uint config_value)\n\n{\n  int shifted_config;\n  int i2c_init_address;\n  \n  DAT_200003b5 = 0;\n  DAT_200003b7 = 0;\n  if (DAT_200003c8 != 0) {\n    memset(DAT_200003c8,0,DAT_200003c4);\n  }\n  DAT_200003b6 = 0;\n  DAT_200003b8 = 0;\n  if (DAT_200003cc != 0) {\n    memset(DAT_200003cc,0,DAT_200003c5);\n  }\n  DAT_200003b4 = 0;\n  shifted_config = (config_value & 0x7f) << 1;\n  *(char *)(device_address + 0x10) = (char)shifted_config;\n  if (config_value == 0x33) {\n    *(undefined *)(device_address + 0x11) = 1;\n  }\n  else {\n    *(undefined *)(device_address + 0x11) = 0;\n  }\n  i2c_init_address = device_address + 0x14;\n  custom_i2_c_init(i2c_init_address,100000,0x4000,shifted_config,*(undefined *)(device_address + 0x11));\n  if (*(char *)(device_address + 0x11) == '\\0') {\n    attach_slave_tx_event(i2c_init_address,&slave_tx_event_callback);\n    attach_slave_rx_event(i2c_init_address,&slave_rx_event_callback);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_i2_c_device_08002968",
            "entrypoint": "0x08002968",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002968": "initialize_i2_c_device_08002968",
                "LAB_08002774_1": "slave_tx_event_callback",
                "LAB_08002b00_1": "slave_rx_event_callback",
                "i2c_attachSlaveRxEvent": "attach_slave_rx_event",
                "i2c_attachSlaveTxEvent": "attach_slave_tx_event",
                "i2c_custom_init": "custom_i2_c_init",
                "iVar1": "shifted_config",
                "iVar2": "i2c_init_address",
                "param_1": "device_address",
                "param_2": "config_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002a1c": {
            "additional_data": {
                "FUN_08002a1c": {
                    "initialize_and_configure_i2c_device": 2,
                    "initialize_i2_c_device": 5,
                    "initialize_i2c": 1,
                    "initialize_i2c_device": 22,
                    "initialize_i2c_device_wrapper": 1
                },
                "initialize_i2_c_device_08002968": {
                    "initialize_i2c_device": 4
                },
                "param_1": {
                    "device_address": 31
                },
                "param_2": {
                    "config_value": 26,
                    "param_2": 1,
                    "unused": 1
                },
                "param_3": {
                    "": 3,
                    "config_value": 5,
                    "unused_param": 1,
                    "unused_parameter": 1
                },
                "param_4": {
                    "": 3,
                    "param_4": 1,
                    "unused": 1,
                    "unused_param_1": 1
                }
            },
            "called": [
                "FUN_08002968"
            ],
            "calling": [
                "FUN_08002a26"
            ],
            "code": "\nvoid initialize_and_configure_i2c_device_08002a1c(undefined4 device_address,undefined config_value,undefined4 config_value,undefined4 param_4)\n\n{\n  initialize_i2c_device(device_address,config_value,config_value,param_4,param_4);\n  return;\n}\n\n",
            "current_name": "initialize_and_configure_i2c_device_08002a1c",
            "entrypoint": "0x08002a1c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002a1c": "initialize_and_configure_i2c_device_08002a1c",
                "initialize_i2_c_device_08002968": "initialize_i2c_device",
                "param_1": "device_address",
                "param_2": "config_value",
                "param_3": "config_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002a26": {
            "additional_data": {
                "FUN_08002a26": {
                    "initialize_and_configure_i2_c_device": 22,
                    "initialize_and_configure_i2c_device": 1,
                    "initialize_i2_c_device": 5,
                    "initialize_i2_c_device_and_configure": 1,
                    "initialize_i2c_device": 2
                },
                "config_value": {
                    "config_value": 1
                },
                "device_address": {
                    "device_address": 1
                },
                "initialize_and_configure_i2c_device_08002a1c": {
                    "initialize_and_configure_i2_c_device": 3,
                    "initialize_and_configure_i2_c_device_helper": 1,
                    "initialize_and_configure_i2c_device_helper": 1
                },
                "param_1": {
                    "device_address": 31
                },
                "param_2": {
                    "": 1,
                    "config_value": 9,
                    "config_value1": 2,
                    "unused": 1
                },
                "param_3": {
                    "": 1,
                    "config_value": 19,
                    "config_value1": 1,
                    "config_value2": 4,
                    "param1": 1,
                    "param3": 2,
                    "param_3": 2,
                    "unused_param": 1
                },
                "param_4": {
                    "": 1,
                    "additional_param": 1,
                    "config_value2": 2,
                    "param": 2,
                    "param2": 1,
                    "param4": 14,
                    "param_4": 4,
                    "param_four": 1,
                    "unused_param": 3,
                    "unused_parameter": 1
                }
            },
            "called": [
                "FUN_08002a1c"
            ],
            "calling": [
                "FUN_08000a64"
            ],
            "code": "\nvoid initialize_i2_c_device_and_configure_08002a26(undefined4 device_address,undefined4 config_value,undefined4 config_value,undefined4 param4)\n\n{\n  initialize_and_configure_i2_c_device(device_address,0x33,config_value,param4,param4);\n  return;\n}\n\n",
            "current_name": "initialize_i2_c_device_and_configure_08002a26",
            "entrypoint": "0x08002a26",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002a26": "initialize_i2_c_device_and_configure_08002a26",
                "initialize_and_configure_i2c_device_08002a1c": "initialize_and_configure_i2_c_device",
                "param_1": "device_address",
                "param_2": "config_value",
                "param_3": "config_value",
                "param_4": "param4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002a30": {
            "additional_data": {
                "DAT_200003b4": {
                    "data_flag": 3,
                    "flag": 4,
                    "is_initialized": 3
                },
                "DAT_200003b6": {
                    "counter": 1,
                    "unnecessary_variable": 1,
                    "unused_flag": 1,
                    "unused_var": 1,
                    "unused_var1": 2,
                    "unused_variable": 2,
                    "unused_variable1": 1
                },
                "DAT_200003b8": {
                    "accumulator": 1,
                    "unused_var": 1,
                    "unused_var2": 3,
                    "unused_variable": 1,
                    "unused_variable2": 3
                },
                "DAT_200003d0": {
                    "shifted_char": 1,
                    "shifted_input": 4,
                    "shifted_multiplier": 1,
                    "shifted_param2": 1,
                    "shifted_value": 5
                },
                "FUN_08002a30": {
                    "initialize_data": 28,
                    "initialize_state": 1,
                    "set_flag_and_values": 1,
                    "set_initial_values": 1
                },
                "param_1": {
                    "address": 1,
                    "arg1": 1,
                    "flag": 1,
                    "flags": 1,
                    "initial_value": 1,
                    "param": 4,
                    "param1": 6,
                    "param_1": 1,
                    "parameter1": 1,
                    "status": 7,
                    "status_flag": 2,
                    "unknown_parameter": 1,
                    "unused_param": 3,
                    "unused_parameter": 1
                },
                "param_2": {
                    "input": 3,
                    "input_value": 9,
                    "multiplier": 3,
                    "param2": 6,
                    "shift_amount": 2,
                    "shift_value": 3,
                    "shifted_value": 1,
                    "value": 4
                }
            },
            "called": [],
            "calling": [
                "FUN_08001c18",
                "FUN_08002b68",
                "FUN_08001cd0"
            ],
            "code": "\nvoid initialize_data_08002a30(undefined4 status,int input_value)\n\n{\n  DAT_200003b4 = 1;\n  DAT_200003d0 = (char)(input_value << 1);\n  DAT_200003b6 = 0;\n  DAT_200003b8 = 0;\n  return;\n}\n\n",
            "current_name": "initialize_data_08002a30",
            "entrypoint": "0x08002a30",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002a30": "initialize_data_08002a30",
                "param_1": "status",
                "param_2": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002a58": {
            "additional_data": {
                "DAT_200003b4": {
                    "bytes_read": 1,
                    "command_buffer_offset": 1,
                    "flag": 1,
                    "flag2": 1,
                    "stop_bit": 1,
                    "variable_3": 1
                },
                "DAT_200003b6": {
                    "bytes_written": 1,
                    "counter": 1,
                    "data_buffer_index": 1,
                    "flag1": 1,
                    "start_bit": 1,
                    "variable_1": 1
                },
                "DAT_200003b8": {
                    "buffer_index": 1,
                    "command_length": 1,
                    "device_address": 1,
                    "read_length": 1,
                    "variable_2": 1,
                    "write_length": 1
                },
                "DAT_200003c5": {
                    "buffer_length": 1,
                    "command_buffer_size": 1,
                    "output_buffer_size": 1
                },
                "DAT_200003cc": {
                    "command_buffer": 1,
                    "data_length": 1,
                    "i2c_buffer": 1,
                    "output_buffer": 1,
                    "read_buf": 1,
                    "write_length": 1
                },
                "DAT_200003d0": {
                    "buffer": 1,
                    "data_buffer": 2,
                    "i2c_data": 1,
                    "write_buf": 1,
                    "write_buffer": 1
                },
                "FUN_08002a58": {
                    "check_and_write_data": 3,
                    "check_and_write_i2c": 1,
                    "check_communication_status": 1,
                    "check_i2_c_status": 1,
                    "check_i2c_status": 1,
                    "check_i2c_write": 1,
                    "execute_i2_c_write_operation": 1,
                    "i2c_write_data": 1,
                    "initialize_i2c_device": 1,
                    "perform_i2_c_transmission": 1,
                    "perform_i2_c_write": 2,
                    "perform_i2c_master_write": 1,
                    "process_data": 1,
                    "validate_and_send_data": 1,
                    "write_data_to_device": 2,
                    "write_i2_c_and_clear": 1,
                    "write_i2_c_data": 1,
                    "write_i2c_and_clear": 1,
                    "write_i2c_data": 7,
                    "write_to_i2c_device": 2
                },
                "FUN_08007e74": {
                    "i2c_master_write": 1
                },
                "iVar1": {
                    "result": 9,
                    "status": 1,
                    "write_result": 18,
                    "write_status": 3
                },
                "memset": {
                    "clear_memory": 1
                },
                "param_1": {
                    "data_ptr": 2,
                    "device_address": 22,
                    "device_handle": 5,
                    "i2c_device_handle": 1,
                    "i2c_port": 1
                },
                "uVar2": {
                    "error_code": 3,
                    "function_result": 1,
                    "result": 5,
                    "result_code": 1,
                    "return_code": 1,
                    "return_status": 1,
                    "return_value": 12,
                    "status": 5,
                    "status_code": 1,
                    "write_result": 1
                }
            },
            "called": [
                "FUN_08007e74",
                "FUN_080091c6"
            ],
            "calling": [
                "FUN_08001c18",
                "FUN_08002b68",
                "FUN_08002ac0"
            ],
            "code": "\nundefined4 i2c_write_data_08002a58(int device_address)\n\n{\n  int write_result;\n  undefined4 return_value;\n  \n  if (*(char *)(device_address + 0x11) == '\\0') {\n    return_value = 4;\n  }\n  else {\n    write_result = i2c_master_write(device_address + 0x14,DAT_200003d0,DAT_200003cc,DAT_200003b8);\n    if (write_result == 0) {\n      return_value = 0;\n    }\n    else if (write_result == 1) {\n      return_value = 1;\n    }\n    else {\n      return_value = 4;\n    }\n    if (DAT_200003cc != 0) {\n      clear_memory(DAT_200003cc,0,DAT_200003c5);\n    }\n    DAT_200003b6 = 0;\n    DAT_200003b8 = 0;\n    DAT_200003b4 = 0;\n  }\n  return return_value;\n}\n\n",
            "current_name": "i2c_write_data_08002a58",
            "entrypoint": "0x08002a58",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002a58": "i2c_write_data_08002a58",
                "iVar1": "write_result",
                "memset": "clear_memory",
                "param_1": "device_address",
                "uVar2": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ac0": {
            "additional_data": {
                "FUN_08002ac0": {
                    "i2c_send_data": 1,
                    "i2c_write_data_wrapper": 3,
                    "send_data": 1,
                    "send_i2c_data": 2,
                    "write_data": 2,
                    "write_data_to_device": 1,
                    "write_data_to_i2c_device": 7,
                    "write_i2c_data": 14
                },
                "i2c_write_data_08002a58": {
                    "i2c_write_data": 1,
                    "write_data_to_i2c": 1
                },
                "param_1": {
                    "device": 4,
                    "device_address": 27
                },
                "param_2": {
                    "": 1,
                    "param_2": 2,
                    "unknown": 1,
                    "unused": 1,
                    "unused_argument": 1,
                    "unused_param": 7,
                    "unused_param_2": 1
                },
                "param_3": {
                    "": 1,
                    "byte_count": 1,
                    "data": 8,
                    "data1": 2,
                    "data_1": 2,
                    "data_address": 2,
                    "data_buffer": 3,
                    "data_byte": 2,
                    "data_len": 1,
                    "data_length": 4,
                    "data_param_1": 1,
                    "data_ptr": 1,
                    "data_size": 2,
                    "param_3": 1
                },
                "param_4": {
                    "": 1,
                    "address": 1,
                    "buffer": 1,
                    "buffer_length": 1,
                    "data": 1,
                    "data2": 2,
                    "data_2": 2,
                    "data_array": 1,
                    "data_buffer": 3,
                    "data_length": 4,
                    "data_param_2": 1,
                    "data_ptr": 3,
                    "data_size": 1,
                    "length": 3,
                    "param_4": 1,
                    "register_address": 1,
                    "size": 3,
                    "size_of_data": 1
                }
            },
            "called": [
                "FUN_08002a58"
            ],
            "calling": [
                "FUN_08001cd0"
            ],
            "code": "\nvoid write_data_to_i2c_device_08002ac0(undefined4 device_address,undefined4 unused_param,undefined4 data,undefined4 data_length)\n\n{\n  i2c_write_data(device_address,1,data,data_length,data_length);\n  return;\n}\n\n",
            "current_name": "write_data_to_i2c_device_08002ac0",
            "entrypoint": "0x08002ac0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002ac0": "write_data_to_i2c_device_08002ac0",
                "i2c_write_data_08002a58": "i2c_write_data",
                "param_1": "device_address",
                "param_2": "unused_param",
                "param_3": "data",
                "param_4": "data_length"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002acc": {
            "additional_data": {
                "DAT_200003c4": {
                    "current_size": 3
                },
                "DAT_200003c8": {
                    "buffer": 1,
                    "memory_block": 1,
                    "memory_pointer": 1
                },
                "FUN_08002acc": {
                    "realloc_param_if_needed": 1,
                    "resize_and_copy_data": 1,
                    "resize_and_free_memory": 1,
                    "resize_array": 2,
                    "resize_buffer": 8,
                    "resize_data": 2,
                    "resize_memory": 5,
                    "resize_memory_block": 10,
                    "resize_memory_if_needed": 1
                },
                "param_1": {
                    "buffer_size": 1,
                    "desired_size": 3,
                    "new_size": 14,
                    "requested_size": 11,
                    "size": 2
                },
                "param_2": {
                    "arg2": 3,
                    "param2": 12,
                    "param_2": 8,
                    "ptr1": 1,
                    "size_param2": 1,
                    "unused": 1,
                    "unused1": 1,
                    "unused_param": 1,
                    "unused_param1": 2
                },
                "param_3": {
                    "arg3": 3,
                    "element_size": 3,
                    "param3": 12,
                    "param_3": 8,
                    "ptr2": 1,
                    "size_param3": 1,
                    "unused2": 1,
                    "unused_param2": 2
                },
                "param_4": {
                    "arg4": 3,
                    "old_size": 1,
                    "param4": 12,
                    "param_4": 8,
                    "ptr3": 1,
                    "size_param4": 1,
                    "unused2": 1,
                    "unused3": 1,
                    "unused_param2": 1,
                    "unused_param3": 2
                },
                "realloc": {
                    "resize_memory": 1
                }
            },
            "called": [
                "FUN_08009908"
            ],
            "calling": [
                "FUN_08002b68"
            ],
            "code": "\nvoid resize_memory_block_08002acc(uint new_size,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  if (DAT_200003c4 < new_size) {\n    if (new_size < 0x20) {\n      new_size = 0x20;\n    }\n    DAT_200003c8 = resize_memory(DAT_200003c8,new_size,param3,(uint)DAT_200003c4,param4);\n    if (DAT_200003c8 == 0) {\n      DAT_200003c4 = 0;\n    }\n    else {\n      DAT_200003c4 = (byte)new_size;\n    }\n  }\n  return;\n}\n\n",
            "current_name": "resize_memory_block_08002acc",
            "entrypoint": "0x08002acc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002acc": "resize_memory_block_08002acc",
                "param_1": "new_size",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "realloc": "resize_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002b68": {
            "additional_data": {
                "DAT_200003b5": {
                    "buffer_flag": 1,
                    "data_flag1": 1,
                    "error_flag": 1,
                    "error_indicator": 1,
                    "sample_flag": 1,
                    "status_flag": 1,
                    "var_200003b5": 1,
                    "variable1": 1
                },
                "DAT_200003b7": {
                    "buffer_size": 1,
                    "data_flag2": 1,
                    "result": 2,
                    "result_flag": 1,
                    "sample_result": 1,
                    "var_200003b7": 1,
                    "variable2": 1
                },
                "DAT_200003c8": {
                    "data_buffer": 1,
                    "is_initialized": 1,
                    "status": 5,
                    "status_variable": 1
                },
                "FUN_08002b68": {
                    "communicate_with_i2_c_device": 1,
                    "perform_i2_c_transaction": 1,
                    "process_data": 7,
                    "process_i2_c_data": 5,
                    "process_transaction": 1,
                    "read_and_process_data": 4,
                    "read_and_process_i2_c_data": 2,
                    "read_data": 1,
                    "read_data_from_i2_c": 1,
                    "read_data_from_i2_c_master": 1,
                    "read_i2_c_data": 5
                },
                "allocateRxBuffer": {
                    "initialize_buffer": 1,
                    "initialize_data": 5,
                    "initialize_data_buffer": 6
                },
                "beginTransmission": {
                    "i2c_write_data": 1,
                    "send_data_to_device": 1,
                    "send_i2_c_start": 1,
                    "send_start_condition": 2,
                    "send_start_sequence": 1,
                    "send_start_signal": 1,
                    "start_i2_c_transmission": 2,
                    "start_transmission": 1,
                    "write_data_start": 1,
                    "write_to_device": 1
                },
                "i2c_master_read": {
                    "read_data_from_i2_c": 1,
                    "read_data_from_i2_c_master": 4,
                    "read_data_from_master": 1,
                    "receive_data": 1,
                    "receive_data_from_device": 1,
                    "receive_data_from_i2_c_master": 2,
                    "receive_data_from_i2c_master": 1,
                    "receive_data_from_master": 1
                },
                "i2c_write_data_08002a58": {
                    "send_data": 2,
                    "send_i2_c_stop": 1,
                    "send_zero": 1,
                    "write_data": 3,
                    "write_data_to_i2_c": 5
                },
                "iVar1": {
                    "error_code": 3,
                    "read_result": 4,
                    "read_status": 1,
                    "result": 17,
                    "return_value": 4
                },
                "param_1": {
                    "buffer": 1,
                    "device": 21,
                    "device_config": 1,
                    "device_data": 1,
                    "device_info": 1,
                    "device_information": 1,
                    "device_params": 2,
                    "device_ptr": 1,
                    "device_status": 1,
                    "output_buffer": 1
                },
                "param_2": {
                    "address": 13,
                    "data_size": 2,
                    "device_address": 14,
                    "device_id": 1,
                    "device_size": 1
                },
                "param_3": {
                    "buffer": 1,
                    "buffer_size": 1,
                    "data": 1,
                    "data_buffer": 4,
                    "data_size": 6,
                    "input_value": 1,
                    "status": 17
                },
                "param_4": {
                    "buffer_size": 2,
                    "data_buffer": 7,
                    "data_size": 12,
                    "device_address": 2,
                    "input_value": 1,
                    "size": 2,
                    "timeout": 5
                },
                "param_5": {
                    "byte_data": 1,
                    "byte_value": 5,
                    "control_byte": 1,
                    "data": 8,
                    "data_buffer": 1,
                    "data_size": 7,
                    "data_value": 1,
                    "flag": 3,
                    "input_value": 1,
                    "param_5": 1,
                    "status": 1,
                    "value": 1
                },
                "uVar2": {
                    "buffer_length": 1,
                    "byte_count": 7,
                    "byte_data": 1,
                    "byte_value": 3,
                    "data_length": 7,
                    "data_size_temp": 1,
                    "flag_value": 2,
                    "num_bytes": 1,
                    "num_writes": 1,
                    "param5": 1,
                    "param5_as_int": 1,
                    "param5_int": 1,
                    "remaining_bytes": 1,
                    "remaining_data": 1,
                    "remaining_size": 1,
                    "temp": 1
                },
                "uVar3": {
                    "bytes_to_read": 1,
                    "data_size_copy": 1,
                    "new_size": 1,
                    "original_timeout": 2,
                    "param4_int": 1,
                    "response_data_size": 1,
                    "temp": 1,
                    "timeout": 23
                }
            },
            "called": [
                "FUN_08002a58",
                "FUN_08002a30",
                "FUN_08007f0e",
                "FUN_08002acc"
            ],
            "calling": [
                "FUN_08002c00"
            ],
            "code": "\nundefined4\nread_and_process_i2_c_data_08002b68(undefined4 *device,uint device_address,undefined4 status,uint data_size,byte data)\n\n{\n  int result;\n  uint data_length;\n  uint timeout;\n  \n  data_length = (uint)data;\n  if (*(char *)((int)device + 0x11) == '\\0') {\n    return 0;\n  }\n  timeout = data_size;\n  initialize_data_buffer(status);\n  if (DAT_200003c8 != 0) {\n    if (data_length != 0) {\n      send_start_condition(device,device_address);\n      if (3 < data_length) {\n        data_length = 3;\n      }\n      while( true ) {\n        if (data_length == 0) break;\n        (**(code **)*device)(device,data_size >> ((data_length - 1 & 0x1f) << 3) & 0xff);\n        data_length = data_length - 1 & 0xff;\n      }\n      write_data_to_i2_c(device,0);\n    }\n    result = read_data_from_i2_c_master(device + 5,(device_address & 0x7f) << 1,DAT_200003c8,status,timeout);\n    if (result != 0) {\n      status = 0;\n    }\n    DAT_200003b5 = 0;\n    DAT_200003b7 = (char)status;\n    return status;\n  }\n  device[1] = 1;\n  return 0;\n}\n\n",
            "current_name": "read_and_process_i2_c_data_08002b68",
            "entrypoint": "0x08002b68",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002b68": "read_and_process_i2_c_data_08002b68",
                "allocateRxBuffer": "initialize_data_buffer",
                "beginTransmission": "send_start_condition",
                "i2c_master_read": "read_data_from_i2_c_master",
                "i2c_write_data_08002a58": "write_data_to_i2_c",
                "iVar1": "result",
                "param_1": "device",
                "param_2": "device_address",
                "param_3": "status",
                "param_4": "data_size",
                "param_5": "data",
                "uVar2": "data_length",
                "uVar3": "timeout"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002c00": {
            "additional_data": {
                "FUN_08002c00": {
                    "process_i2_c_data": 3,
                    "process_i2c_data": 25,
                    "read_and_process_i2_c_data": 1,
                    "read_and_process_i2c_data": 2
                },
                "data": {
                    "buffer": 1,
                    "data": 25,
                    "data_buffer": 2
                },
                "data_size": {
                    "size": 27,
                    "size_of_data": 1
                },
                "device": {
                    "device": 11,
                    "device_buffer": 1,
                    "device_data": 1,
                    "device_ptr": 14
                },
                "device_address": {
                    "address": 27,
                    "device_addr": 1
                },
                "read_and_process_i2_c_data_08002b68": {
                    "process_i2c_data_helper": 1,
                    "read_and_process_i2_c_data_internal": 1,
                    "read_and_process_i2c_data": 17
                },
                "status": {
                    "data_status": 1,
                    "device_status": 1,
                    "status": 26
                }
            },
            "called": [
                "FUN_08002b68"
            ],
            "calling": [
                "FUN_08002c14"
            ],
            "code": "\nvoid read_and_process_i2c_data_08002c00(void)\n\n{\n  read_and_process_i2c_data_08002c00();\n  return;\n}\n\n",
            "current_name": "read_and_process_i2c_data_08002c00",
            "entrypoint": "0x08002c00",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002c00": "read_and_process_i2c_data_08002c00",
                "read_and_process_i2_c_data_08002b68": "read_and_process_i2c_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002c14": {
            "additional_data": {
                "FUN_08002c14": {
                    "process_i2c_data": 27,
                    "read_and_process_i2c_data": 4
                },
                "read_and_process_i2c_data_08002c00": {
                    "read_and_process_i2c_data": 31
                }
            },
            "called": [
                "FUN_08002c00"
            ],
            "calling": [
                "FUN_08001c18"
            ],
            "code": "\nvoid read_and_process_i2c_data_08002c14(void)\n\n{\n  read_and_process_i2c_data_08002c14();\n  return;\n}\n\n",
            "current_name": "read_and_process_i2c_data_08002c14",
            "entrypoint": "0x08002c14",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002c14": "read_and_process_i2c_data_08002c14",
                "read_and_process_i2c_data_08002c00": "read_and_process_i2c_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002c1e": {
            "additional_data": {
                "FUN_08002c1e": {
                    "process_data": 1,
                    "process_param": 17,
                    "process_parameters": 9,
                    "process_params": 4
                },
                "check_and_process_param_08002948": {
                    "check_and_process_param": 5,
                    "validate_and_handle_param": 1,
                    "validate_and_process_param": 1,
                    "validate_and_process_parameter": 1
                },
                "flag": {
                    "flag": 1
                },
                "param_1": {
                    "": 1,
                    "arg1": 1,
                    "flag": 20,
                    "flag_1": 2,
                    "param1": 1,
                    "unused": 1,
                    "unused_param": 5
                },
                "param_2": {
                    "": 1,
                    "arg2": 1,
                    "flag_2": 2,
                    "param2": 1,
                    "unused": 1,
                    "unused_param": 4,
                    "unused_param_2": 1,
                    "value": 18,
                    "value1": 1,
                    "value_unused": 1
                },
                "param_3": {
                    "address": 1,
                    "arg3": 1,
                    "flag": 4,
                    "input_value": 1,
                    "param": 3,
                    "param1": 1,
                    "param3": 2,
                    "param_3": 12,
                    "param_a": 1,
                    "param_flag": 1,
                    "value1": 1,
                    "value2": 1,
                    "value_1": 2
                },
                "param_4": {
                    "arg4": 1,
                    "data": 1,
                    "output_value": 1,
                    "param2": 2,
                    "param4": 2,
                    "param_1": 1,
                    "param_4": 12,
                    "param_b": 1,
                    "param_copy": 1,
                    "param_value": 1,
                    "value": 4,
                    "value2": 1,
                    "value3": 1,
                    "value_2": 2
                },
                "value": {
                    "param_value": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_08002948"
            ],
            "calling": [],
            "code": "\nvoid process_param_08002c1e(undefined4 flag,undefined4 value,undefined4 param_3,undefined4 param_4)\n\n{\n  check_and_process_param_08002c1e(1,0xffff,param_3,param_4,param_4);\n  return;\n}\n\n",
            "current_name": "process_param_08002c1e",
            "entrypoint": "0x08002c1e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002c1e": "process_param_08002c1e",
                "check_and_process_param_08002948": "check_and_process_param",
                "param_1": "flag",
                "param_2": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002c2c": {
            "additional_data": {
                "DAT_200005d4": {
                    "callback_function": 1
                },
                "FUN_08002c2c": {
                    "execute_callback": 25,
                    "execute_callback_function": 5,
                    "execute_function": 1
                },
                "param_1": {
                    "arg1": 6,
                    "callback_function": 5,
                    "callback_index": 1,
                    "callback_param1": 2,
                    "unused": 8,
                    "unused_param": 5,
                    "unused_parameter": 2,
                    "unused_parameter1": 2
                },
                "param_2": {
                    "arg1": 3,
                    "arg2": 6,
                    "callback": 1,
                    "callback_arg1": 1,
                    "callback_argument1": 1,
                    "callback_param1": 8,
                    "callback_param2": 2,
                    "callback_parameter1": 2,
                    "data1": 1,
                    "function_pointer": 1,
                    "param1": 4,
                    "param_2": 1
                },
                "param_3": {
                    "arg1": 2,
                    "arg2": 3,
                    "arg3": 6,
                    "callback_arg2": 1,
                    "callback_argument2": 1,
                    "callback_param2": 8,
                    "callback_param3": 2,
                    "callback_parameter2": 2,
                    "data2": 1,
                    "param2": 4,
                    "param_3": 1
                },
                "param_4": {
                    "arg2": 2,
                    "arg3": 3,
                    "arg4": 6,
                    "callback_arg3": 1,
                    "callback_argument3": 1,
                    "callback_context": 1,
                    "callback_param3": 6,
                    "callback_param4": 2,
                    "callback_parameter3": 1,
                    "param3": 4,
                    "param_4": 1,
                    "unused": 1,
                    "unused_parameter2": 1,
                    "unused_parameter4": 1
                }
            },
            "called": [],
            "calling": [],
            "code": "\nvoid execute_callback_function_08002c2c(undefined4 unused,undefined4 callback_param1,undefined4 callback_param2,undefined4 arg4)\n\n{\n  if (DAT_200005d4 != (code *)0x0) {\n    (*DAT_200005d4)(callback_param1,callback_param2,callback_param2,DAT_200005d4,arg4);\n  }\n  return;\n}\n\n",
            "current_name": "execute_callback_function_08002c2c",
            "entrypoint": "0x08002c2c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002c2c": "execute_callback_function_08002c2c",
                "param_1": "unused",
                "param_2": "callback_param1",
                "param_3": "callback_param2",
                "param_4": "arg4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ce0": {
            "additional_data": {
                "FUN_08002ce0": {
                    "initialize_and_configure": 2,
                    "initialize_and_configure_device": 1,
                    "initialize_and_set_parameters": 1,
                    "initialize_and_update_parameters": 1,
                    "initialize_and_update_params": 2,
                    "initialize_board": 2,
                    "initialize_device": 8,
                    "initialize_firmata": 1,
                    "initialize_firmata_component": 1,
                    "initialize_firmata_components": 3,
                    "initialize_firmata_device": 1,
                    "initialize_firmware": 2,
                    "process_firmata_data": 1
                },
                "FirmataMarshaller": {
                    "initialize_params": 1,
                    "initialize_params_to_zero": 1,
                    "initialize_variable_to_zero": 4,
                    "marshal_and_send_data_to_firmata_device": 1,
                    "marshal_data": 3,
                    "marshal_firmata": 2,
                    "marshall_params": 1
                },
                "FirmataParser": {
                    "parse_data": 3,
                    "parse_data_from_firmata_device": 1,
                    "parse_firmata": 2,
                    "parse_params": 1,
                    "set_parameters": 4,
                    "update_params_based_on_code": 2
                },
                "LAB_08002c40_1": {
                    "callback1": 1,
                    "callback_1": 1,
                    "constant_a": 1,
                    "lab_1": 2,
                    "label_1": 4,
                    "new_value2": 1,
                    "param1": 1,
                    "param1_08002c40": 1,
                    "value1_param": 1
                },
                "LAB_08002c54_1": {
                    "callback4": 1,
                    "callback_4": 1,
                    "constant_d": 1,
                    "lab_4": 2,
                    "label_4": 4,
                    "new_value5": 1,
                    "param1_08002c54": 1,
                    "param4": 1,
                    "value4_param": 1
                },
                "LAB_08002c68_1": {
                    "callback5": 1,
                    "callback_5": 1,
                    "constant_e": 1,
                    "lab_5": 2,
                    "label_5": 4,
                    "new_value6": 1,
                    "param1_08002c68": 1,
                    "param5": 1,
                    "value5_param": 1
                },
                "LAB_08002c7c_1": {
                    "callback2": 1,
                    "callback_2": 1,
                    "constant_b": 1,
                    "lab_2": 2,
                    "label_2": 4,
                    "new_value3": 1,
                    "param1_08002c7c": 1,
                    "param2": 1,
                    "value2_param": 1
                },
                "LAB_08002c90_1": {
                    "callback3": 1,
                    "callback_3": 1,
                    "constant_c": 1,
                    "lab_3": 2,
                    "label_3": 4,
                    "new_value4": 1,
                    "param1_08002c90": 1,
                    "param3": 1,
                    "value3_param": 1
                },
                "LAB_08002ca4_1": {
                    "callback6": 1,
                    "constant_f": 1,
                    "data_based_on_code_1": 1,
                    "lab_6": 2,
                    "label_6": 4,
                    "new_value7": 1,
                    "param1_08002ca4": 1,
                    "param6": 1,
                    "value6_param": 1
                },
                "LAB_08002cb8_1": {
                    "attachment_1": 1,
                    "callback7": 1,
                    "constant_g": 1,
                    "lab_7": 2,
                    "label_7": 3,
                    "new_value8": 1,
                    "param1_08002cb8": 1,
                    "param7": 1,
                    "value7_param": 1
                },
                "LAB_08002cd0_1": {
                    "callback10": 1,
                    "constant_j": 1,
                    "lab_10": 2,
                    "label_10": 3,
                    "label_9": 1,
                    "new_value11": 1,
                    "param10": 1,
                    "param1_08002cd0": 1,
                    "set_param_values_2": 1,
                    "value10_param": 1
                },
                "LAB_08002dea_1": {
                    "callback9": 1,
                    "constant_i": 1,
                    "lab_9": 2,
                    "label_8": 1,
                    "label_9": 3,
                    "new_value10": 1,
                    "param1_08002dea": 1,
                    "param9": 1,
                    "set_param_values_1": 1,
                    "value9_param": 1
                },
                "LAB_08002e1a_1": {
                    "callback8": 1,
                    "constant_h": 1,
                    "lab_8": 2,
                    "label_7": 1,
                    "label_8": 3,
                    "new_value9": 1,
                    "param1_08002e1a": 1,
                    "param8": 1,
                    "value8_param": 1,
                    "value_match_condition_1": 1
                },
                "Param1": {
                    "value": 1
                },
                "Param2": {
                    "new_value1": 1
                },
                "Param3": {
                    "new_value2": 1
                },
                "attach": {
                    "attach_callback": 3,
                    "attach_component": 1,
                    "attach_components": 1,
                    "attach_data": 1,
                    "attach_device": 3,
                    "attach_firmware": 1,
                    "attach_func": 1,
                    "attach_function": 3,
                    "attach_object": 5,
                    "attach_params": 2,
                    "attach_to_device": 1
                },
                "iVar1": {
                    "data_address": 1,
                    "firmata_component_address": 1,
                    "initialized_address": 1,
                    "ivar1": 1,
                    "new_address": 1,
                    "new_base_address": 1,
                    "next_address": 1,
                    "offset": 8,
                    "param2_address": 1,
                    "param_offset": 2,
                    "parameter_offset": 1,
                    "secondary_address": 1,
                    "temp_address": 1,
                    "updated_base_address": 3,
                    "variable1": 1
                },
                "initialize_params_080032bc": {
                    "initialize_parameters": 8,
                    "initialize_params": 5
                },
                "initialize_variable_to_zero_0800314e": {
                    "initialize_output_to_zero": 1,
                    "initialize_to_zero": 1,
                    "initialize_variable_to_zero": 17
                },
                "param_1": {
                    "base_address": 27
                },
                "set_param_values_08003350": {
                    "set_param_values": 18,
                    "set_parameter_values": 13
                },
                "set_parameters_08003370": {
                    "set_parameters": 18,
                    "set_params": 1
                },
                "staticAnalogCallback": {
                    "analog_callback": 8,
                    "analog_callback_function": 1,
                    "new_value1": 1
                },
                "update_data_based_on_code_08003366": {
                    "update_data": 1,
                    "update_data_according_to_code": 1,
                    "update_data_based_on_code": 26,
                    "update_data_based_on_condition": 1,
                    "update_data_by_code": 1
                },
                "update_parameters_08003306": {
                    "update_parameter": 6,
                    "update_parameter_value": 1,
                    "update_parameter_values": 3,
                    "update_parameters": 18,
                    "update_params": 1,
                    "update_params_with_value": 1,
                    "update_params_with_values": 1
                },
                "update_params_if_value_match_08003346": {
                    "update_parameters_if_value_match": 3,
                    "update_parameters_if_value_matches": 1,
                    "update_params_if_value_match": 21,
                    "update_params_if_value_matches": 5
                }
            },
            "called": [
                "FUN_08003350",
                "FUN_0800314e",
                "FUN_08003346",
                "FUN_08003306",
                "FUN_080032bc",
                "FUN_08003366",
                "FUN_08003370"
            ],
            "calling": [
                "FUN_08002dbc"
            ],
            "code": "\nint initialize_and_configure_device_08002ce0(int base_address)\n\n{\n  int offset;\n  \n  initialize_variable_to_zero(base_address + 0x40);\n  offset = base_address + 0x44;\n  set_parameters(offset,base_address,0x40);\n  *(undefined *)(base_address + 0xc4) = 0;\n  *(undefined4 *)(base_address + 200) = 0;\n  *(undefined *)(base_address + 0x1f8) = 0;\n  update_parameters(offset,0xe0,analog_callback + 1,0);\n  update_parameters(offset,0x90,&label_1,0);\n  update_parameters(offset,0xc0,&label_2,0);\n  update_parameters(offset,0xd0,&label_3,0);\n  update_parameters(offset,0xf4,&label_4,0);\n  update_parameters(offset,0xf5,&label_5,0);\n  update_data_based_on_code(offset,0x71,&label_6,0);\n  attach_object(offset,0xf0,&label_7,0);\n  update_params_if_value_match(offset,0x79,&label_8,base_address);\n  set_param_values(offset,0xf9,&label_9,base_address);\n  set_param_values(offset,0xff,&label_10,0);\n  return base_address;\n}\n\n",
            "current_name": "initialize_and_configure_device_08002ce0",
            "entrypoint": "0x08002ce0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002ce0": "initialize_and_configure_device_08002ce0",
                "FirmataMarshaller": "initialize_variable_to_zero",
                "FirmataParser": "set_parameters",
                "LAB_08002c40_1": "label_1",
                "LAB_08002c54_1": "label_4",
                "LAB_08002c68_1": "label_5",
                "LAB_08002c7c_1": "label_2",
                "LAB_08002c90_1": "label_3",
                "LAB_08002ca4_1": "label_6",
                "LAB_08002cb8_1": "label_7",
                "LAB_08002cd0_1": "label_10",
                "LAB_08002dea_1": "label_9",
                "LAB_08002e1a_1": "label_8",
                "attach": "attach_object",
                "iVar1": "offset",
                "param_1": "base_address",
                "set_param_values_08003350": "set_param_values",
                "staticAnalogCallback": "analog_callback",
                "update_data_based_on_code_08003366": "update_data_based_on_code",
                "update_parameters_08003306": "update_parameters",
                "update_params_if_value_match_08003346": "update_params_if_value_match"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002dbc": {
            "additional_data": {
                "FUN_08002ce0": {
                    "calculate_checksum": 3,
                    "calculate_result": 1,
                    "calculate_something": 1,
                    "check_condition": 1,
                    "check_condition_and_return_value": 1,
                    "compute_something": 1,
                    "get_configuration_value": 1,
                    "get_device_status": 1,
                    "process_error_code": 1,
                    "process_input": 1,
                    "process_value": 1,
                    "reverse_bits": 1,
                    "reverse_value": 1,
                    "transform_param": 1,
                    "transform_value": 2,
                    "update_value": 1,
                    "validate_configuration": 1
                },
                "FUN_08002dbc": {
                    "check_and_call_firmata_class": 1,
                    "check_and_execute_firmata_function": 1,
                    "check_and_execute_task": 1,
                    "check_and_update_parameters": 1,
                    "check_firmata_configuration": 1,
                    "check_param_and_call_firmata": 1,
                    "execute_command": 1,
                    "execute_conditional_operation": 1,
                    "execute_firmata_action": 1,
                    "execute_firmata_class": 1,
                    "execute_firmata_function": 2,
                    "execute_if_param1_is_one": 1,
                    "handle_firmata_command": 1,
                    "handle_firmata_request": 1,
                    "handle_input": 1,
                    "handle_param": 1,
                    "handle_param_change": 1,
                    "handle_param_update": 1,
                    "initialize_firmware": 1,
                    "process_data": 1,
                    "process_firmware_data": 1,
                    "process_input": 1,
                    "process_param": 2,
                    "process_parameters": 1,
                    "process_params": 3
                },
                "FirmataClass": {
                    "initialize_firmata": 1
                },
                "param_1": {
                    "command": 1,
                    "command_code": 1,
                    "condition": 2,
                    "config_param": 1,
                    "data_flag": 1,
                    "device_id": 1,
                    "error_code": 1,
                    "flag": 3,
                    "input": 1,
                    "input_1": 1,
                    "input_flag": 2,
                    "option": 1,
                    "param1": 1,
                    "param_flag": 1,
                    "param_one": 1,
                    "request_type": 1,
                    "status": 7,
                    "value": 3,
                    "value1": 1
                },
                "param_2": {
                    "code": 1,
                    "config_flag": 1,
                    "data": 1,
                    "data_value": 1,
                    "flag": 2,
                    "input_2": 1,
                    "input_value": 2,
                    "param2": 1,
                    "param_two": 1,
                    "param_value": 2,
                    "response_code": 1,
                    "status": 2,
                    "status_code": 1,
                    "value": 13,
                    "value2": 1
                }
            },
            "called": [
                "FUN_08002ce0"
            ],
            "calling": [],
            "code": "\nvoid process_firmware_data_08002dbc(int status,int value)\n\n{\n  if (status != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    initialize_firmata(&DAT_200003d4);\n  }\n  return;\n}\n\n",
            "current_name": "process_firmware_data_08002dbc",
            "entrypoint": "0x08002dbc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002dbc": "process_firmware_data_08002dbc",
                "FirmataClass": "initialize_firmata",
                "param_1": "status",
                "param_2": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ddc": {
            "additional_data": {
                "FUN_08002ddc": {
                    "send_modified_version": 4,
                    "send_updated_version": 3,
                    "send_version_and_increase_by64": 1,
                    "send_version_and_return": 1,
                    "send_version_info": 7,
                    "send_version_information": 4,
                    "send_version_to_offset": 1,
                    "send_version_to_param_plus_0x40": 1,
                    "send_version_with_offset": 5,
                    "send_version_with_params": 1,
                    "send_version_wrapper": 3
                },
                "FUN_0800322c": {
                    "handle_send_version": 1,
                    "process_data": 1,
                    "send_data": 1,
                    "set_params_and_call": 1,
                    "set_version_information": 1,
                    "update_configuration": 1,
                    "update_data": 1,
                    "update_helper": 1,
                    "update_sub_function": 1
                },
                "UNK_0800322c": {
                    "unknown_function": 1
                },
                "param_1": {
                    "buffer": 1,
                    "client_socket": 1,
                    "data": 3,
                    "data_ptr": 1,
                    "input": 1,
                    "input_address": 1,
                    "input_data": 1,
                    "input_offset": 1,
                    "input_param": 2,
                    "input_value": 2,
                    "new_param_1": 1,
                    "offset": 3,
                    "old_param1": 1,
                    "original_param": 5,
                    "original_version": 1,
                    "socket": 1,
                    "socket_descriptor": 1,
                    "socket_fd": 4
                },
                "param_2": {
                    "arg1": 2,
                    "arg2": 5,
                    "constant_2": 1,
                    "count": 1,
                    "offset1": 1,
                    "param2": 2,
                    "param_2": 4,
                    "parameter_two": 1,
                    "unknown_param": 2,
                    "unused_param": 2
                },
                "param_3": {
                    "arg2": 2,
                    "arg3": 5,
                    "constant_5": 1,
                    "offset2": 1,
                    "param3": 2,
                    "param_3": 4,
                    "parameter_three": 1,
                    "unknown_param": 1,
                    "unknown_param_2": 1,
                    "unused_param": 1,
                    "unused_param2": 1,
                    "value1": 1
                },
                "param_4": {
                    "additional_data": 1,
                    "additional_param": 1,
                    "arg3": 1,
                    "arg4": 5,
                    "data": 2,
                    "extra_param": 1,
                    "modified_param": 1,
                    "new_param_4": 1,
                    "old_param4": 1,
                    "output_param": 1,
                    "param": 1,
                    "param4": 2,
                    "param_4": 5,
                    "unknown_param": 1,
                    "unknown_param_3": 1,
                    "unused_param": 1,
                    "unused_param3": 1,
                    "updated_param": 1,
                    "value2": 1,
                    "version": 1,
                    "version_info": 1
                },
                "sendVersion": {
                    "send_updated_version": 4,
                    "send_version": 2,
                    "send_version_data": 1
                }
            },
            "called": [
                "FUN_0800322c"
            ],
            "calling": [
                "FUN_08002e26"
            ],
            "code": "\nvoid send_version_info_08002ddc(int original_param,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  send_updated_version(original_param + 0x40,2,5,arg4,arg4);\n  return;\n}\n\n",
            "current_name": "send_version_info_08002ddc",
            "entrypoint": "0x08002ddc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002ddc": "send_version_info_08002ddc",
                "param_1": "original_param",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "sendVersion": "send_updated_version"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002df6": {
            "additional_data": {
                "FUN_08002df6": {
                    "send_firmware": 1,
                    "send_firmware_data": 2,
                    "send_firmware_info": 2,
                    "send_firmware_information": 1,
                    "send_firmware_version": 3,
                    "send_firmware_version_if_available": 2,
                    "send_firmware_version_if_condition_met": 1,
                    "send_firmware_version_if_configured": 1,
                    "send_firmware_version_if_enabled": 2,
                    "send_firmware_version_if_flag_set": 5,
                    "send_firmware_version_if_needed": 4,
                    "send_firmware_version_if_not_empty": 1,
                    "send_firmware_version_if_not_zero": 4,
                    "send_firmware_version_if_supported": 1,
                    "send_firmware_version_if_valid": 1
                },
                "FUN_080031ce": {
                    "helper_function": 1,
                    "send_firmware_version": 1,
                    "update_firmware_version": 1
                },
                "byte": {
                    "byte_value": 1
                },
                "param_1": {
                    "config": 1,
                    "data_ptr": 1,
                    "device": 6,
                    "device_address": 5,
                    "device_context": 2,
                    "device_data": 3,
                    "device_data_address": 1,
                    "device_handle": 1,
                    "device_info": 2,
                    "device_memory": 1,
                    "device_ptr": 3,
                    "device_struct_ptr": 1,
                    "instance": 1,
                    "param": 1,
                    "param_1": 1,
                    "struct_ptr": 1
                },
                "param_2": {
                    "arg2": 1,
                    "param_2": 3
                },
                "param_3": {
                    "arg3": 1,
                    "param_3": 3
                },
                "param_4": {
                    "arg4": 1,
                    "param_4": 3
                },
                "param_5": {
                    "arg5": 1,
                    "param_5": 3
                },
                "puVar1": {
                    "data_ptr": 2,
                    "firmware_data": 2,
                    "firmware_data_ptr": 2,
                    "firmware_info": 10,
                    "firmware_info_address": 1,
                    "firmware_info_ptr": 4,
                    "firmware_ptr": 2,
                    "firmware_version": 1,
                    "firmware_version_ptr": 1,
                    "info_ptr": 1,
                    "version_data": 1,
                    "version_info": 1,
                    "version_pointer": 1
                },
                "sendFirmwareVersion": {
                    "send_firmware_version": 5
                }
            },
            "called": [
                "FUN_080031ce"
            ],
            "calling": [
                "FUN_08002e26"
            ],
            "code": "\nvoid send_firmware_version_if_flag_set_08002df6(int device)\n\n{\n  undefined *firmware_info;\n  \n  if (*(byte_value *)(device + 0xc4) == 0) {\n    return;\n  }\n  firmware_info = *(undefined **)(device + 200);\n  send_firmware_version(device + 0x40,*firmware_info,firmware_info[1],*(byte_value *)(device + 0xc4) - 2,firmware_info + 2);\n  return;\n}\n\n",
            "current_name": "send_firmware_version_if_flag_set_08002df6",
            "entrypoint": "0x08002df6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002df6": "send_firmware_version_if_flag_set_08002df6",
                "byte": "byte_value",
                "param_1": "device",
                "puVar1": "firmware_info",
                "sendFirmwareVersion": "send_firmware_version"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002e26": {
            "additional_data": {
                "FUN_08002e26": {
                    "print_version_info": 1,
                    "print_versions": 1,
                    "update_configurations": 1,
                    "update_device_configuration": 3,
                    "update_device_info": 18,
                    "update_device_information": 2,
                    "update_device_param": 1,
                    "update_device_parameters": 1,
                    "update_device_settings": 1,
                    "update_device_version_information": 1,
                    "update_firmware_info": 1
                },
                "arg2": {
                    "arg2": 2,
                    "argument2": 1
                },
                "arg3": {
                    "arg3": 2,
                    "argument3": 1
                },
                "arg4": {
                    "arg4": 2,
                    "argument4": 1
                },
                "destination": {
                    "param": 1,
                    "param_address": 1,
                    "param_destination": 1,
                    "property": 1
                },
                "device": {
                    "device": 1,
                    "device_number": 1
                },
                "original_param": {
                    "device_info": 1,
                    "original_param": 1,
                    "param1": 1
                },
                "param_1": {
                    "device": 16,
                    "device_address": 2,
                    "device_config": 1,
                    "device_configuration": 1,
                    "device_info": 9,
                    "device_info_ptr": 1,
                    "device_pointer": 1
                },
                "param_2": {
                    "config_value": 1,
                    "firmware_version": 16,
                    "new_firmware_version": 1,
                    "new_value": 1,
                    "param_value": 1,
                    "settings": 1,
                    "value": 2,
                    "version": 5,
                    "version_info": 3
                },
                "printFirmwareVersion": {
                    "display_firmware_version": 1,
                    "print_device_firmware_version": 10,
                    "print_device_info": 1
                },
                "printVersion": {
                    "display_device_version": 1,
                    "print_device_version": 11
                },
                "send_firmware_version_if_flag_set_08002df6": {
                    "send_firmware_version": 2,
                    "send_firmware_version_if_flag_set": 15
                },
                "send_version_info_08002ddc": {
                    "send_device_info": 1,
                    "send_version_info": 16
                },
                "set_param_to_value_08003154": {
                    "set_configuration_value": 2,
                    "set_device_info_value": 2,
                    "set_device_param": 4,
                    "set_device_param_to_value": 1,
                    "set_device_param_value": 1,
                    "set_device_parameter": 3,
                    "set_device_params": 1,
                    "set_device_property_value": 1,
                    "set_param_to_value": 8,
                    "set_parameter": 1,
                    "set_parameter_to_value": 2,
                    "set_parameter_value": 1,
                    "set_value_to_param": 1
                },
                "value": {
                    "new_value": 1,
                    "param_value": 2
                }
            },
            "called": [
                "FUN_08003154",
                "FUN_08002df6",
                "FUN_08002ddc"
            ],
            "calling": [
                "FUN_08003048"
            ],
            "code": "\nvoid update_device_info_08002e26(int device,undefined4 firmware_version)\n\n{\n  *(undefined4 *)(device + 0xc0) = firmware_version;\n  set_param_to_value(device + 0x40);\n  print_device_version(device);\n  print_device_firmware_version(device);\n  return;\n}\n\n",
            "current_name": "update_device_info_08002e26",
            "entrypoint": "0x08002e26",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002e26": "update_device_info_08002e26",
                "param_1": "device",
                "param_2": "firmware_version",
                "printFirmwareVersion": "print_device_firmware_version",
                "printVersion": "print_device_version",
                "set_param_to_value_08003154": "set_param_to_value",
                "value": "param_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002e44": {
            "additional_data": {
                "0x2f": {
                    "slash_char_code": 1
                },
                "0x5c": {
                    "backslash_char_code": 1
                },
                "FUN_08002e44": {
                    "extract_and_save_file_name": 1,
                    "extract_file_extension": 2,
                    "extract_file_info": 1,
                    "extract_file_name": 15,
                    "extract_file_name_and_extension": 1,
                    "extract_file_name_from_path": 1,
                    "extract_file_path_and_extension": 1,
                    "extract_filename": 2,
                    "extract_filename_and_extension": 2,
                    "extract_filename_extension": 4,
                    "parse_and_allocate_memory": 1
                },
                "bVar1": {
                    "buffer_size": 2,
                    "byte_value": 3,
                    "byte_var": 1,
                    "extension_length": 9,
                    "file_length": 1,
                    "file_name_length": 10,
                    "filename_length": 1,
                    "length": 2,
                    "name_length": 1,
                    "str_len": 1
                },
                "cVar2": {
                    "base_filename_length": 1,
                    "char_value": 3,
                    "char_var": 1,
                    "extension_length": 1,
                    "extension_offset": 2,
                    "file_extension_length": 1,
                    "file_name_len": 1,
                    "file_name_length": 6,
                    "file_name_length_minus_two": 1,
                    "file_name_length_plus2": 1,
                    "file_name_length_plus_two": 1,
                    "filename_length": 1,
                    "found_extension": 1,
                    "index": 1,
                    "input_path_length": 2,
                    "input_string_length": 1,
                    "last_character": 1,
                    "length": 1,
                    "name_length": 1,
                    "name_length_byte": 1,
                    "path_length": 1,
                    "str_length": 1
                },
                "free": {
                    "deallocate_memory": 2
                },
                "iVar3": {
                    "cpp_extension": 3,
                    "cpp_extension_index": 2,
                    "cpp_index": 9,
                    "cpp_location": 1,
                    "cpp_pos": 1,
                    "dot_cpp_index": 1,
                    "extension_index": 5,
                    "extension_position": 4,
                    "extension_start": 3,
                    "file_extension_pos": 1,
                    "strstr_result": 1
                },
                "iVar4": {
                    "delimiter_index": 1,
                    "directory_separator_index": 1,
                    "file_name_start": 2,
                    "last_path_separator": 2,
                    "last_separator_index": 1,
                    "last_separator_position": 1,
                    "last_slash": 2,
                    "last_slash_backslash": 1,
                    "last_slash_index": 12,
                    "last_slash_location": 1,
                    "last_slash_position": 2,
                    "path_separator_index": 1,
                    "slash_index": 2,
                    "slash_position": 1,
                    "strrchr_result": 1
                },
                "malloc": {
                    "allocate_memory": 2
                },
                "memset": {
                    "initialize_memory": 1
                },
                "param_1": {
                    "buffer": 5,
                    "dest": 1,
                    "dest_addr": 1,
                    "dest_buffer": 2,
                    "dst_buffer": 1,
                    "file_data": 1,
                    "file_info": 2,
                    "output_buffer": 14,
                    "result": 2,
                    "target_directory": 1,
                    "target_path": 1
                },
                "param_2": {
                    "file_name": 1,
                    "file_path": 14,
                    "filename": 1,
                    "input_file_path": 1,
                    "input_path": 5,
                    "input_string": 2,
                    "path": 2,
                    "source": 1,
                    "source_path": 4
                },
                "param_3": {
                    "arg3": 2,
                    "byte_value": 1,
                    "first_char": 1,
                    "param3": 7,
                    "param_3": 5,
                    "undefined1": 5,
                    "undefined_arg1": 1,
                    "undefined_argument_1": 1,
                    "undefined_param1": 2,
                    "undefined_param3": 1,
                    "undefined_param_3": 2,
                    "undefined_parameter1": 1,
                    "undefined_parameter3": 1,
                    "value1": 1
                },
                "param_4": {
                    "arg4": 2,
                    "param4": 7,
                    "param_4": 5,
                    "second_char": 1,
                    "undefined2": 5,
                    "undefined_arg2": 1,
                    "undefined_argument_2": 1,
                    "undefined_param2": 2,
                    "undefined_param4": 1,
                    "undefined_param_4": 2,
                    "undefined_parameter2": 1,
                    "undefined_parameter4": 1,
                    "undefined_value": 1,
                    "value2": 1
                },
                "puVar5": {
                    "allocated_buffer": 1,
                    "allocated_memory": 3,
                    "dynamic_buffer": 1,
                    "dynamic_memory": 1,
                    "extension_buffer": 3,
                    "file_name": 2,
                    "file_name_buffer": 3,
                    "file_name_memory": 1,
                    "filename_and_extension": 1,
                    "malloced_ptr": 1,
                    "new_buffer": 5,
                    "new_extension": 1,
                    "new_file_name": 5,
                    "new_file_name_buffer": 1,
                    "new_filename": 1,
                    "new_filename_buffer": 1
                },
                "strlen": {
                    "find_string_length": 1,
                    "get_string_length": 1
                },
                "strncpy": {
                    "copy_string": 2
                },
                "strrchr": {
                    "find_last_character": 1,
                    "find_last_occurrence": 1
                },
                "strstr": {
                    "find_substring": 2
                }
            },
            "called": [
                "FUN_08000178",
                "FUN_080091a0",
                "FUN_0800997e",
                "FUN_080099a4",
                "FUN_08009190",
                "FUN_08009954"
            ],
            "calling": [
                "FUN_08001b48"
            ],
            "code": "\nvoid extract_file_name_and_extension_08002e44(int output_buffer,int file_path,undefined param3,undefined param4)\n\n{\n  byte file_name_length;\n  char file_name_length;\n  int cpp_index;\n  int last_slash_index;\n  undefined *new_buffer;\n  \n  cpp_index = find_substring(file_path,\".cpp\");\n  last_slash_index = find_last_occurrence(file_path,0x2f);\n  if (last_slash_index == 0) {\n    last_slash_index = find_last_occurrence(file_path,0x5c);\n  }\n  if (last_slash_index != 0) {\n    file_path = last_slash_index + 1;\n  }\n  if (cpp_index == 0) {\n    file_name_length = find_string_length(file_path);\n    *(char *)(output_buffer + 0xc4) = file_name_length + '\\x02';\n  }\n  else {\n    *(char *)(output_buffer + 0xc4) = ((char)cpp_index - (char)file_path) + '\\x02';\n  }\n  deallocate_memory(*(undefined4 *)(output_buffer + 200));\n  file_name_length = *(byte *)(output_buffer + 0xc4);\n  new_buffer = (undefined *)allocate_memory(file_name_length + 1);\n  *(undefined **)(output_buffer + 200) = new_buffer;\n  new_buffer[file_name_length] = 0;\n  *new_buffer = param3;\n  new_buffer[1] = param4;\n  copy_string(new_buffer + 2,file_path,*(byte *)(output_buffer + 0xc4) - 2);\n  return;\n}\n\n",
            "current_name": "extract_file_name_and_extension_08002e44",
            "entrypoint": "0x08002e44",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002e44": "extract_file_name_and_extension_08002e44",
                "bVar1": "file_name_length",
                "cVar2": "file_name_length",
                "free": "deallocate_memory",
                "iVar3": "cpp_index",
                "iVar4": "last_slash_index",
                "malloc": "allocate_memory",
                "param_1": "output_buffer",
                "param_2": "file_path",
                "param_3": "param3",
                "param_4": "param4",
                "puVar5": "new_buffer",
                "strlen": "find_string_length",
                "strncpy": "copy_string",
                "strrchr": "find_last_occurrence",
                "strstr": "find_substring"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ec4": {
            "additional_data": {
                "8": {
                    "callback_function_ptr": 1,
                    "function_offset": 3
                },
                "FUN_08002ec4": {
                    "call_subroutine": 1,
                    "execute_callback": 6,
                    "execute_callback_function": 1,
                    "execute_code": 3,
                    "execute_dynamic_function": 1,
                    "execute_extracted_code": 1,
                    "execute_func": 1,
                    "execute_function": 12,
                    "execute_function_at_address": 1,
                    "execute_function_from_pointer": 1,
                    "execute_internal_function": 1,
                    "execute_nested_function": 2
                },
                "PTR_methodTable": {
                    "method_table": 1
                },
                "param_1": {
                    "arg1": 1,
                    "callback": 2,
                    "callback_data": 2,
                    "callback_function": 1,
                    "callback_handler": 1,
                    "callback_struct_ptr": 1,
                    "code_pointer": 2,
                    "executable": 1,
                    "func_pointer": 1,
                    "function_address": 4,
                    "function_pointer": 6,
                    "function_ptr": 4,
                    "input": 1,
                    "input_parameter": 1,
                    "nested_function_ptr": 2,
                    "param": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080022f8"
            ],
            "code": "\nvoid execute_nested_function_08002ec4(int function_pointer)\n\n{\n  (**(code **)(**(int **)(function_pointer + 0xc0) + 8))();\n  return;\n}\n\n",
            "current_name": "execute_nested_function_08002ec4",
            "entrypoint": "0x08002ec4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002ec4": "execute_nested_function_08002ec4",
                "param_1": "function_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ed2": {
            "additional_data": {
                "FUN_08002ed2": {
                    "execute_and_parse_data": 1,
                    "parse_and_execute": 2,
                    "parse_and_execute_function": 2,
                    "parse_and_extract_data_from_binary": 1,
                    "parse_and_handle_data": 5,
                    "parse_and_handle_response": 2,
                    "parse_and_handle_result": 1,
                    "parse_and_process": 4,
                    "parse_and_process_data": 10,
                    "parse_data": 1,
                    "parse_main_function": 1,
                    "parse_result_and_call_function": 1
                },
                "FUN_08003474": {
                    "parse": 5,
                    "parse_and_handle_result": 1,
                    "parse_data": 3,
                    "parse_data_section": 1,
                    "parse_function": 1,
                    "parse_sub_function": 1
                },
                "param_1": {
                    "arg": 1,
                    "binary_data": 1,
                    "data": 2,
                    "data_address": 2,
                    "data_pointer": 2,
                    "data_ptr": 5,
                    "data_start_address": 1,
                    "input": 1,
                    "input_data": 9,
                    "input_parameter": 4,
                    "input_variable": 1,
                    "sub_function_parameter_1": 1
                },
                "param_2": {
                    "data_length": 2,
                    "data_to_parse": 1,
                    "data_value": 1,
                    "lower_byte": 1,
                    "parse_data": 1,
                    "parse_option": 1,
                    "parse_parameter": 1,
                    "parsed_value": 3,
                    "sub_function_parameter_2": 1
                },
                "parse": {
                    "parse_data": 5,
                    "parse_function": 1,
                    "process_data": 3
                },
                "uVar1": {
                    "function_result": 3,
                    "response": 1,
                    "response_code": 1,
                    "result": 20,
                    "result_code": 2,
                    "result_value": 1,
                    "return_value": 1,
                    "returned_value": 1
                }
            },
            "called": [
                "FUN_08003474"
            ],
            "calling": [
                "FUN_080022f8"
            ],
            "code": "\nvoid parse_and_process_data_08002ed2(int input_data)\n\n{\n  uint result;\n  \n  result = (**(code **)(**(int **)(input_data + 0xc0) + 0xc))();\n  if (result != 0xffffffff) {\n    parse_data(input_data + 0x44,result & 0xff);\n  }\n  return;\n}\n\n",
            "current_name": "parse_and_process_data_08002ed2",
            "entrypoint": "0x08002ed2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002ed2": "parse_and_process_data_08002ed2",
                "param_1": "input_data",
                "parse": "parse_data",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ef2": {
            "additional_data": {
                "FUN_08002ef2": {
                    "send_analog_data": 28,
                    "send_analog_message": 1,
                    "send_analog_with_offset": 2
                },
                "FUN_08003158": {
                    "process_analog": 1,
                    "process_analog_data": 2,
                    "send_analog_data_wrapper": 1,
                    "send_digital_data": 1
                },
                "param_1": {
                    "analog_buffer": 1,
                    "analog_data": 6,
                    "analog_data_pointer": 1,
                    "analog_data_ptr": 1,
                    "base_address": 6,
                    "data_address": 1,
                    "data_offset": 3,
                    "data_ptr": 1,
                    "device": 1,
                    "device_address": 2,
                    "device_id": 3,
                    "param1": 1,
                    "param_1": 2,
                    "sensor_value": 1,
                    "wrapper_param1": 1
                },
                "param_2": {
                    "analog_data": 1,
                    "analog_value": 1,
                    "data_size": 2,
                    "param": 2,
                    "param1_value": 1,
                    "param2": 11,
                    "param2_val": 1,
                    "param2_value": 1,
                    "param_2": 5,
                    "param_value": 2,
                    "value": 1,
                    "value1": 2,
                    "wrapper_param2": 1
                },
                "param_3": {
                    "analog_value": 3,
                    "data": 1,
                    "data_value": 1,
                    "mode": 1,
                    "param2_value": 1,
                    "param3": 11,
                    "param3_val": 1,
                    "param3_value": 1,
                    "param_3": 4,
                    "param_code": 1,
                    "port_number": 1,
                    "sensor_data": 1,
                    "value1": 1,
                    "value2": 2,
                    "wrapper_param3": 1
                },
                "param_4": {
                    "config_value": 1,
                    "data_address": 1,
                    "param": 2,
                    "param3_value": 1,
                    "param4": 12,
                    "param4_val": 1,
                    "param4_value": 1,
                    "param_4": 4,
                    "param_data": 2,
                    "setting": 1,
                    "size": 1,
                    "value2": 1,
                    "value3": 2
                },
                "sendAnalog": {
                    "send_analog_data": 2
                }
            },
            "called": [
                "FUN_08003158"
            ],
            "calling": [
                "FUN_080022f8",
                "FUN_08000488"
            ],
            "code": "\nvoid send_analog_data_08002ef2(int base_address,undefined4 param2,undefined2 param3,undefined4 param4)\n\n{\n  send_analog_data_08002ef2(base_address + 0x40,param2,param3,param4,param4);\n  return;\n}\n\n",
            "current_name": "send_analog_data_08002ef2",
            "entrypoint": "0x08002ef2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002ef2": "send_analog_data_08002ef2",
                "param_1": "base_address",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "sendAnalog": "send_analog_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002efe": {
            "additional_data": {
                "FUN_08002efe": {
                    "send_data": 1,
                    "send_data_on_digital_port": 2,
                    "send_data_over_digital_port": 1,
                    "send_data_over_network": 1,
                    "send_data_to_digital_port": 3,
                    "send_digital_port_and_return": 1,
                    "send_digital_port_data": 1,
                    "send_digital_port_plus_offset": 3,
                    "send_digital_port_with_data": 1,
                    "send_digital_port_with_offset": 6,
                    "send_digital_port_wrapper": 8,
                    "send_dp_port_with_parameters": 1,
                    "send_extra_data": 1,
                    "send_port_data": 1
                },
                "FUN_0800319e": {
                    "send_data": 2,
                    "send_dp_data_with_parameters": 1,
                    "set_port_data": 1
                },
                "param_1": {
                    "base_address": 2,
                    "data": 2,
                    "device_address": 1,
                    "device_handle": 1,
                    "device_port": 1,
                    "dst_port": 1,
                    "port": 6,
                    "port_address": 9,
                    "port_data": 1,
                    "port_number": 3,
                    "port_offset": 3
                },
                "param_2": {
                    "data": 2,
                    "data1": 1,
                    "data_value1": 1,
                    "len": 1,
                    "param": 3,
                    "param1": 3,
                    "param2": 13,
                    "param2_value": 1,
                    "param4": 1,
                    "param_value": 1,
                    "param_value1": 1,
                    "port_number": 1,
                    "port_value": 1,
                    "value": 1
                },
                "param_3": {
                    "data": 1,
                    "data2": 1,
                    "data_value2": 1,
                    "flag": 1,
                    "param2": 6,
                    "param3": 13,
                    "param3_value": 1,
                    "param_3": 1,
                    "param_code": 1,
                    "param_type": 1,
                    "param_value2": 1,
                    "port": 1,
                    "port_id": 1,
                    "type": 1
                },
                "param_4": {
                    "arg1": 2,
                    "data3": 1,
                    "data_value3": 1,
                    "param3": 6,
                    "param4": 15,
                    "param4_value": 1,
                    "param_4": 3,
                    "param_data": 1,
                    "param_value3": 1
                },
                "sendDigitalPort": {
                    "send_data": 1,
                    "send_data_to_digital_port": 2,
                    "send_digital_port": 1,
                    "send_dp_data": 1
                }
            },
            "called": [
                "FUN_0800319e"
            ],
            "calling": [
                "FUN_08000be8"
            ],
            "code": "\nvoid send_digital_port_wrapper_08002efe(int port_address,undefined4 param2,undefined2 param3,undefined4 param4)\n\n{\n  send_data_to_digital_port(port_address + 0x40,param2,param3,param4,param4);\n  return;\n}\n\n",
            "current_name": "send_digital_port_wrapper_08002efe",
            "entrypoint": "0x08002efe",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002efe": "send_digital_port_wrapper_08002efe",
                "param_1": "port_address",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "sendDigitalPort": "send_data_to_digital_port"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002f0a": {
            "additional_data": {
                "DAT_": {
                    "dat_": 1
                },
                "FUN_08002f0a": {
                    "send_parameter_sysex": 1,
                    "send_sysex_command": 8,
                    "send_sysex_data": 2,
                    "send_sysex_param": 1,
                    "send_sysex_with_data_offset": 1,
                    "send_sysex_with_offset": 16,
                    "send_sysex_wrapper": 2
                },
                "PTR_": {
                    "ptr_": 1
                },
                "PTR_undefined4": {
                    "new_pointer_param1": 1
                },
                "param_1": {
                    "command": 7,
                    "command_code": 1,
                    "data": 1,
                    "data_offset": 1,
                    "data_value": 1,
                    "input": 3,
                    "input_param": 2,
                    "input_value": 3,
                    "midi_data": 1,
                    "offset": 8,
                    "original_data": 1,
                    "param": 1,
                    "value": 1
                },
                "param_2": {
                    "arg": 1,
                    "arg1": 2,
                    "arg_2": 1,
                    "offset": 1,
                    "original_size": 1,
                    "param": 2,
                    "param2": 2,
                    "param_2": 1,
                    "parameter2": 1,
                    "size": 1,
                    "undefined_param": 1,
                    "unknown": 3,
                    "unknown_param": 3,
                    "unused": 3,
                    "unused_param": 2
                },
                "param_3": {
                    "arg2": 2,
                    "arg_3": 1,
                    "count": 3,
                    "data_size": 1,
                    "length": 1,
                    "param3": 2,
                    "param_3": 2,
                    "parameter3": 1,
                    "size": 2,
                    "undefined_param": 1,
                    "unknown": 1,
                    "unknown_length": 1,
                    "unknown_parameter": 1,
                    "unknown_value": 2,
                    "unused": 3,
                    "unused_param": 1
                },
                "param_4": {
                    "arg3": 2,
                    "arg_4": 1,
                    "index": 1,
                    "offset": 1,
                    "param": 2,
                    "param4": 2,
                    "param_4": 2,
                    "parameter4": 1,
                    "undefined_param": 1,
                    "unknown": 2,
                    "unknown_arg": 1,
                    "unknown_param_2": 1,
                    "unknown_parameter": 2,
                    "unused": 4,
                    "unused_param": 2
                },
                "sendSysex": {
                    "send_sysex": 4,
                    "send_sysex_data": 3,
                    "send_sysex_message": 1
                }
            },
            "called": [
                "FUN_0800325a"
            ],
            "calling": [
                "FUN_08001c18"
            ],
            "code": "\nvoid send_sysex_with_data_offset_08002f0a(int offset)\n\n{\n  send_sysex(offset + 0x40);\n  return;\n}\n\n",
            "current_name": "send_sysex_with_data_offset_08002f0a",
            "entrypoint": "0x08002f0a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002f0a": "send_sysex_with_data_offset_08002f0a",
                "param_1": "offset",
                "sendSysex": "send_sysex"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002f14": {
            "additional_data": {
                "0x40": {
                    "offset_adjustment": 1,
                    "offset_constant": 1
                },
                "FUN_08002f14": {
                    "send_adjusted_string": 1,
                    "send_modified_string": 5,
                    "send_param_plus40": 1,
                    "send_string_after_adding_offset": 1,
                    "send_string_from_offset": 9,
                    "send_string_from_param": 4,
                    "send_string_from_param_plus40": 1,
                    "send_string_offset": 1,
                    "send_string_with_offset": 6,
                    "send_updated_string": 1,
                    "send_with_offset": 1
                },
                "FUN_080032a2": {
                    "helper_function": 1
                },
                "param_1": {
                    "data": 1,
                    "data_offset": 1,
                    "input": 5,
                    "input_offset": 1,
                    "input_parameter": 1,
                    "input_value": 5,
                    "offset": 13,
                    "original_string": 1,
                    "param": 1,
                    "param_1": 1,
                    "user_input": 1
                },
                "param_2": {
                    "new_param_2": 2,
                    "new_parameter_name_2": 1,
                    "param2": 1,
                    "param_2": 3,
                    "unused": 2,
                    "unused1": 1,
                    "unused_param2": 1,
                    "unused_param_2": 1
                },
                "param_3": {
                    "new_param_3": 2,
                    "new_parameter_name_3": 1,
                    "param3": 1,
                    "param_3": 3,
                    "unused": 2,
                    "unused2": 1,
                    "unused_param3": 1,
                    "unused_param_3": 1
                },
                "param_4": {
                    "new_param_4": 2,
                    "new_parameter_name_4": 1,
                    "param4": 1,
                    "param_4": 3,
                    "unused": 2,
                    "unused3": 1,
                    "unused_param4": 1,
                    "unused_param_4": 1
                },
                "sendString": {
                    "send": 1,
                    "send_data_to_server": 1,
                    "send_string": 9,
                    "send_string_to_server": 3
                }
            },
            "called": [
                "FUN_080032a2"
            ],
            "calling": [
                "FUN_08001c18",
                "FUN_08001cd0",
                "FUN_08000500",
                "FUN_080005f8"
            ],
            "code": "\nvoid send_string_from_offset_08002f14(int offset)\n\n{\n  send_string(offset + 0x40);\n  return;\n}\n\n",
            "current_name": "send_string_from_offset_08002f14",
            "entrypoint": "0x08002f14",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002f14": "send_string_from_offset_08002f14",
                "param_1": "offset",
                "sendString": "send_string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002f1e": {
            "additional_data": {
                "0xc0": {
                    "function_ptr_offset": 1
                },
                "FUN_08002f1e": {
                    "execute_callback": 3,
                    "execute_callback_function": 2,
                    "execute_code": 1,
                    "execute_dynamic_function": 1,
                    "execute_function": 22,
                    "execute_function_from_pointer": 1
                },
                "c0": {
                    "offset": 1
                },
                "param_1": {
                    "argument": 1,
                    "callback": 1,
                    "callback_object": 1,
                    "callback_parameter": 2,
                    "callback_ptr": 1,
                    "code_pointer": 1,
                    "function_pointer": 20,
                    "function_ptr": 2,
                    "param": 1
                },
                "undefined4": {
                    "function_address": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001cd0"
            ],
            "code": "\nvoid execute_callback_function_08002f1e(int function_pointer)\n\n{\n  (**(code **)**(function_address **)(function_pointer + 0xc0))();\n  return;\n}\n\n",
            "current_name": "execute_callback_function_08002f1e",
            "entrypoint": "0x08002f1e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002f1e": "execute_callback_function_08002f1e",
                "param_1": "function_pointer",
                "undefined4": "function_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002f2c": {
            "additional_data": {
                "0x90": {
                    "value_90": 1
                },
                "0xc0": {
                    "value_c0": 1
                },
                "0xd0": {
                    "value_d0": 1
                },
                "0xe0": {
                    "value_e0": 1
                },
                "0xf4": {
                    "value_f4": 1
                },
                "0xf5": {
                    "value_f5": 1
                },
                "DAT_200005d4": {
                    "configuration_value_e0": 1,
                    "data_4": 1,
                    "variable_e0": 1
                },
                "DAT_200005dc": {
                    "configuration_value_90": 1,
                    "data_5": 1,
                    "variable_90": 1
                },
                "DAT_200005e0": {
                    "configuration_value_f4": 1,
                    "data_2": 1,
                    "variable_f4": 1
                },
                "DAT_200005e4": {
                    "configuration_value_f5": 1,
                    "data_3": 1,
                    "variable_f5": 1
                },
                "DAT_200005ec": {
                    "configuration_value_c0": 1,
                    "data_6": 1,
                    "variable_c0": 1
                },
                "DAT_200005f0": {
                    "configuration_value_d0": 1,
                    "data_1": 1,
                    "variable_d0": 1
                },
                "FUN_08002f2c": {
                    "set_data_value": 2,
                    "store_param_value": 1,
                    "update_config": 1,
                    "update_config_value": 1,
                    "update_configuration": 1,
                    "update_data": 15,
                    "update_data_value": 2,
                    "update_param_values": 2,
                    "update_parameter": 1,
                    "update_parameter_value": 2,
                    "update_parameters": 1,
                    "update_variable": 1,
                    "update_variable_value": 1
                },
                "param_1": {
                    "arg1": 1,
                    "config": 1,
                    "config_id": 1,
                    "context": 1,
                    "data_identifier": 1,
                    "first_param": 1,
                    "input1": 2,
                    "input_flag": 1,
                    "input_type": 1,
                    "new_value": 1,
                    "param1": 9,
                    "param_1": 2,
                    "status": 4,
                    "undef_param": 1,
                    "unused": 1,
                    "unused_param": 1,
                    "value_type": 2
                },
                "param_2": {
                    "arg2": 1,
                    "code": 1,
                    "data_code": 2,
                    "data_index": 1,
                    "data_key": 2,
                    "data_type": 1,
                    "data_value": 3,
                    "input2": 2,
                    "input_code": 2,
                    "input_value": 1,
                    "opcode": 3,
                    "param2": 5,
                    "param_value": 3,
                    "parameter_value": 2,
                    "value": 1,
                    "value_type": 1
                },
                "param_3": {
                    "arg3": 1,
                    "data": 1,
                    "data_value": 2,
                    "input3": 1,
                    "new_value": 18,
                    "param3": 5,
                    "value": 3
                },
                "uVar1": {
                    "previous_value": 1,
                    "temp": 1,
                    "temp_data": 1,
                    "temp_value": 5,
                    "temp_var": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001b48"
            ],
            "code": "\nvoid update_data_value_08002f2c(undefined4 param1,uint param2,undefined4 new_value)\n\n{\n  undefined4 temp_value;\n  \n  if (param2 == 0xd0) {\n    DAT_200005f0 = new_value;\n    return;\n  }\n  if (0xd0 < param2) {\n    if (param2 == 0xf4) {\n      DAT_200005e0 = new_value;\n      return;\n    }\n    temp_value = new_value;\n    if ((param2 != 0xf5) && (temp_value = DAT_200005e4, param2 == 0xe0)) {\n      DAT_200005d4 = new_value;\n      return;\n    }\n    DAT_200005e4 = temp_value;\n    return;\n  }\n  if (param2 == 0x90) {\n    DAT_200005dc = new_value;\n    return;\n  }\n  if (param2 != 0xc0) {\n    return;\n  }\n  DAT_200005ec = new_value;\n  return;\n}\n\n",
            "current_name": "update_data_value_08002f2c",
            "entrypoint": "0x08002f2c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002f2c": "update_data_value_08002f2c",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "new_value",
                "uVar1": "temp_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002f84": {
            "additional_data": {
                "DAT_200005e8": {
                    "saved_data": 1,
                    "saved_parameter": 1
                },
                "FUN_08002f84": {
                    "assign_data_if_param2_equals255": 1,
                    "save_data_if_equal": 1,
                    "save_parameter_if_max": 1,
                    "save_parameter_if_value_is_255": 1,
                    "set_dat_if_param_is_ff": 1,
                    "set_global_value": 2,
                    "set_param_if_equal": 1,
                    "store_data": 1,
                    "store_input_parameter": 1,
                    "store_param_3_if_param_2_is_255": 1,
                    "store_param_if_equal": 2,
                    "store_param_if_value_is_max": 1,
                    "store_param_if_value_max": 1,
                    "store_parameter_if_equal_to_ff": 1,
                    "update_config": 1,
                    "update_data": 11,
                    "update_data_if_parameter_is_max": 1,
                    "update_parameter_if_equal": 1,
                    "update_parameter_if_value255": 1
                },
                "param_1": {
                    "arg1": 2,
                    "config_value1": 1,
                    "context": 1,
                    "data": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "data_storage": 1,
                    "input": 1,
                    "input_parameter": 1,
                    "old_value": 1,
                    "param": 1,
                    "param1": 4,
                    "param_1": 1,
                    "param_address": 1,
                    "status": 4,
                    "unused_param": 3,
                    "value": 3,
                    "value1": 1
                },
                "param_2": {
                    "check_value": 2,
                    "comparison_value": 2,
                    "condition": 3,
                    "config_value2": 1,
                    "input_value": 3,
                    "param2": 1,
                    "param_value": 1,
                    "status": 3,
                    "value": 14,
                    "value_to_check": 1
                },
                "param_3": {
                    "arg2": 1,
                    "config_value3": 1,
                    "data": 4,
                    "data_to_assign": 1,
                    "data_to_store": 2,
                    "new_data": 3,
                    "new_param_value": 1,
                    "new_value": 12,
                    "param3": 1,
                    "param_3": 1,
                    "parameter_to_save": 1,
                    "save_value": 1,
                    "store_value": 1,
                    "stored_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001b48"
            ],
            "code": "\nvoid update_data_if_parameter_is_max_08002f84(undefined4 status,int value,undefined4 new_value)\n\n{\n  if (value == 0xff) {\n    DAT_200005e8 = new_value;\n  }\n  return;\n}\n\n",
            "current_name": "update_data_if_parameter_is_max_08002f84",
            "entrypoint": "0x08002f84",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002f84": "update_data_if_parameter_is_max_08002f84",
                "param_1": "status",
                "param_2": "value",
                "param_3": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002f94": {
            "additional_data": {
                "DAT_200005d0": {
                    "data_pointer": 1
                },
                "FUN_08002f94": {
                    "initialize_data": 3,
                    "initialize_param": 1,
                    "set_data": 3,
                    "set_data_info": 1,
                    "set_data_pointer": 2,
                    "set_global_variable": 2,
                    "set_param_3": 6,
                    "set_value": 1,
                    "store_param": 1,
                    "store_param3": 1,
                    "store_param_3": 1,
                    "update_dat": 1,
                    "update_data": 4,
                    "update_param": 2,
                    "update_param_3": 1
                },
                "param_1": {
                    "arg1": 1,
                    "data_1": 1,
                    "data_param_1": 1,
                    "data_ptr_1": 1,
                    "data_source": 1,
                    "input_param": 4,
                    "input_parameter_1": 1,
                    "new_param_1": 1,
                    "new_value1": 1,
                    "old_param": 1,
                    "old_value": 1,
                    "param1": 3,
                    "param_1": 4,
                    "parameter1": 2,
                    "unnamed_param_1": 1,
                    "unused_param": 1,
                    "unused_param1": 1,
                    "unused_param_1": 2,
                    "value_1": 2
                },
                "param_2": {
                    "arg2": 1,
                    "config_param": 1,
                    "data_2": 1,
                    "data_length": 1,
                    "data_param_2": 1,
                    "data_ptr_2": 1,
                    "input_parameter_2": 1,
                    "new_param": 1,
                    "new_param_2": 1,
                    "new_value": 1,
                    "new_value2": 1,
                    "output_param": 2,
                    "param2": 3,
                    "param_2": 4,
                    "parameter2": 2,
                    "second_param": 1,
                    "unnamed_param_2": 1,
                    "unused_param": 1,
                    "unused_param2": 1,
                    "unused_param_2": 2,
                    "value_2": 2
                },
                "param_3": {
                    "arg3": 1,
                    "data": 1,
                    "data_3": 1,
                    "data_buffer": 1,
                    "data_param": 1,
                    "data_to_set": 1,
                    "data_value": 1,
                    "new_dat_value": 1,
                    "new_data": 2,
                    "new_param_3": 5,
                    "new_param_value": 1,
                    "new_value": 2,
                    "new_value3": 1,
                    "param3": 2,
                    "param_3": 1,
                    "updated_data": 1,
                    "updated_param": 1,
                    "updated_value": 1,
                    "value_3": 1
                },
                "param_4": {
                    "more_data": 1
                },
                "param_5": {
                    "extra_data": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001b48"
            ],
            "code": "\nvoid set_param_3_08002f94(undefined4 input_param,undefined4 param_2,undefined4 new_param_3)\n\n{\n  DAT_200005d0 = new_param_3;\n  return;\n}\n\n",
            "current_name": "set_param_3_08002f94",
            "entrypoint": "0x08002f94",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002f94": "set_param_3_08002f94",
                "param_1": "input_param",
                "param_3": "new_param_3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002fa0": {
            "additional_data": {
                "0xcc": {
                    "byte_offset": 1,
                    "offset": 2,
                    "offset_from_buffer": 1
                },
                "FUN_08002fa0": {
                    "extract_byte_value": 2,
                    "extract_value_from_offset": 1,
                    "get_byte_at_offset": 2,
                    "get_byte_from_offset": 6,
                    "get_byte_value": 1,
                    "get_byte_value_from_offset": 1,
                    "get_data": 1,
                    "get_data_from_offset": 1,
                    "get_memory_value": 3,
                    "get_offset_value": 3,
                    "get_pointer_value": 1,
                    "get_shifted_value": 1,
                    "get_value_at_offset": 1,
                    "get_value_from_offset": 4,
                    "retrieve_byte_at_offset": 1,
                    "retrieve_undefined_value": 1,
                    "retrieve_value_from_offset": 1
                },
                "cc": {
                    "byte_offset": 1
                },
                "param_1": {
                    "index": 3,
                    "memory_offset": 1,
                    "offset": 26,
                    "offset_base": 1
                },
                "param_2": {
                    "base": 1,
                    "base_address": 26,
                    "buffer": 3,
                    "data": 1
                },
                "undefined": {
                    "byte": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080022f8",
                "FUN_08001cd0",
                "FUN_0800021a",
                "FUN_080005f8"
            ],
            "code": "\nbyte get_byte_value_from_offset_08002fa0(int offset,int base_address)\n\n{\n  return *(byte *)(base_address + offset + 0xcc);\n}\n\n",
            "current_name": "get_byte_value_from_offset_08002fa0",
            "entrypoint": "0x08002fa0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002fa0": "get_byte_value_from_offset_08002fa0",
                "param_1": "offset",
                "param_2": "base_address",
                "undefined": "byte"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002fa8": {
            "additional_data": {
                "0xcc": {
                    "byte_offset": 1,
                    "constant_offset": 1,
                    "data_offset": 1,
                    "elf_header_offset": 1,
                    "memory_offset": 1
                },
                "FUN_08002fa8": {
                    "replace_if_not127": 1,
                    "store_char_if_not7f": 1,
                    "store_character_if_valid": 1,
                    "update_byte_if_not127": 1,
                    "update_char_at_if_not_seven_f": 1,
                    "update_char_if_not7_f": 1,
                    "update_char_if_not_boundary": 1,
                    "update_char_if_not_delimiter": 1,
                    "update_char_if_not_whitespace": 1,
                    "update_character": 7,
                    "update_character_byte": 2,
                    "update_character_if_not_elf_header": 1,
                    "update_character_if_not_eof": 1,
                    "update_character_value": 3,
                    "update_data_if_not_signed": 1,
                    "update_memory": 1,
                    "update_parameter_value": 2,
                    "update_value": 1,
                    "update_value_if_not127": 1,
                    "update_value_if_not7_f": 1,
                    "update_value_if_not_byte_signature": 1
                },
                "param_1": {
                    "address": 1,
                    "array_base_address": 1,
                    "base_address": 27,
                    "character_array": 1,
                    "character_base_address": 1
                },
                "param_2": {
                    "array_offset": 1,
                    "index": 1,
                    "offset": 29
                },
                "param_3": {
                    "character": 2,
                    "new_byte": 1,
                    "new_byte_value": 2,
                    "new_char": 1,
                    "new_char_value": 1,
                    "new_character": 3,
                    "new_parameter": 1,
                    "new_value": 17,
                    "value": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_080005f8"
            ],
            "code": "\nvoid update_character_value_08002fa8(int base_address,int offset,undefined new_value)\n\n{\n  if (*(char *)(base_address + offset + 0xcc) != '\\x7f') {\n    *(undefined *)(base_address + offset + 0xcc) = new_value;\n  }\n  return;\n}\n\n",
            "current_name": "update_character_value_08002fa8",
            "entrypoint": "0x08002fa8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002fa8": "update_character_value_08002fa8",
                "param_1": "base_address",
                "param_2": "offset",
                "param_3": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002fba": {
            "additional_data": {
                "0x42": {
                    "offset": 1
                },
                "4": {
                    "size_of_element": 1
                },
                "FUN_08002fba": {
                    "get_array_element": 1,
                    "get_element_at_index": 1,
                    "get_element_at_offset": 2,
                    "get_element_from_array": 1,
                    "get_indexed_value": 1,
                    "get_memory_value": 1,
                    "get_offset_value": 1,
                    "get_value": 1,
                    "get_value_at_index": 3,
                    "get_value_at_offset": 7,
                    "get_value_from_offset": 9,
                    "get_value_from_pointer": 1,
                    "retrieve_data": 1,
                    "retrieve_value": 1
                },
                "arrayElement": {
                    "result": 1
                },
                "index": {
                    "adjusted_index": 1
                },
                "local_1": {
                    "element_address": 1
                },
                "local_2": {
                    "result": 1
                },
                "new_variable_name_1": {
                    "calculated_address": 1,
                    "calculated_offset": 1
                },
                "new_variable_name_2": {
                    "result": 1
                },
                "param_1": {
                    "address": 2,
                    "array": 2,
                    "array_address": 3,
                    "array_base": 1,
                    "array_base_address": 1,
                    "base_address": 21,
                    "data_start_address": 1
                },
                "param_2": {
                    "element_index": 1,
                    "index": 10,
                    "offset": 18,
                    "offset_index": 2
                },
                "param_3": {
                    "base_address": 1,
                    "element_size": 2,
                    "multiplier": 1,
                    "value": 1
                },
                "param_4": {
                    "index": 1,
                    "result_type": 1
                },
                "param_5": {
                    "multiplier": 1
                },
                "param_6": {
                    "additional_offset": 1
                },
                "param_7": {
                    "result": 1
                },
                "param_n": {
                    "new_parameter_name": 1,
                    "new_parameter_name_n": 1
                },
                "result": {
                    "retrieved_value": 1
                },
                "tmp_1": {
                    "offset_multiplier": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001cd0"
            ],
            "code": "\nundefined4 get_value_from_offset_08002fba(int base_address,int offset)\n\n{\n  return *(undefined4 *)(base_address + (offset + 0x42) * 4);\n}\n\n",
            "current_name": "get_value_from_offset_08002fba",
            "entrypoint": "0x08002fba",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002fba": "get_value_from_offset_08002fba",
                "param_1": "base_address",
                "param_2": "offset"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002fc2": {
            "additional_data": {
                "FUN_08002fc2": {
                    "save_value_at_offset": 1,
                    "save_value_in_array": 1,
                    "set_param_value": 1,
                    "set_value_at_index": 2,
                    "set_value_at_offset": 1,
                    "set_value_in_array": 1,
                    "store_data": 1,
                    "store_value": 2,
                    "store_value_at_index": 2,
                    "store_value_at_offset": 4,
                    "store_value_at_offset_index": 1,
                    "store_value_at_position": 1,
                    "store_value_in_array": 6,
                    "store_value_in_memory": 1,
                    "update_data": 1,
                    "update_memory_location": 1,
                    "write_to_memory": 4
                },
                "param_1": {
                    "array": 5,
                    "array_address": 2,
                    "array_base": 4,
                    "array_base_address": 4,
                    "base_address": 14,
                    "data_address": 1,
                    "memory_address": 1
                },
                "param_2": {
                    "array_index": 1,
                    "index": 18,
                    "offset": 12
                },
                "param_3": {
                    "new_value": 2,
                    "value": 28,
                    "value_to_write": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800021a",
                "FUN_080005f8"
            ],
            "code": "\nvoid store_value_at_offset_index_08002fc2(int base_address,int index,undefined4 value)\n\n{\n  *(undefined4 *)(base_address + (index + 0x42) * 4) = value;\n  return;\n}\n\n",
            "current_name": "store_value_at_offset_index_08002fc2",
            "entrypoint": "0x08002fc2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002fc2": "store_value_at_offset_index_08002fc2",
                "param_1": "base_address",
                "param_2": "index",
                "param_3": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002fca": {
            "additional_data": {
                "FUN_08002fca": {
                    "blink_le_ds": 1,
                    "blink_led": 28,
                    "flash_le_ds": 1,
                    "toggle_led": 1
                },
                "param_1": {
                    "arg1": 1,
                    "delay_before_start": 1,
                    "param1": 1,
                    "param_1": 1,
                    "pin": 5,
                    "pin_led": 8,
                    "pin_mode": 3,
                    "pin_num": 1,
                    "pin_number": 4,
                    "pin_on": 1,
                    "unused": 4,
                    "unused_param": 1
                },
                "param_2": {
                    "le_dpin": 1,
                    "led": 2,
                    "led_pin": 12,
                    "led_state": 3,
                    "pin_controller": 1,
                    "pin_delay": 1,
                    "pin_num": 1,
                    "pin_number": 5,
                    "pin_output": 1,
                    "pin_state": 2,
                    "state": 1,
                    "state_led": 1
                },
                "param_3": {
                    "blink_count": 5,
                    "num_blinks": 18,
                    "num_iterations": 1,
                    "num_loops": 1,
                    "num_of_blinks": 1,
                    "num_times": 4,
                    "num_toggles": 1
                },
                "param_4": {
                    "blink_delay": 2,
                    "blink_duration": 1,
                    "delay_on": 13,
                    "delay_time": 1,
                    "delay_time1": 1,
                    "on_delay": 4,
                    "on_duration": 4,
                    "on_time": 5
                },
                "param_5": {
                    "delay_between": 1,
                    "delay_between_blinks": 1,
                    "delay_off": 13,
                    "delay_time2": 1,
                    "led_delay": 2,
                    "off_delay": 4,
                    "off_duration": 4,
                    "off_time": 5
                },
                "uVar1": {
                    "blink_count": 15,
                    "blink_counter": 1,
                    "blink_index": 3,
                    "count": 1,
                    "counter": 2,
                    "i": 1,
                    "iteration": 1,
                    "iteration_count": 2,
                    "loop_counter": 1,
                    "toggle_count": 1
                }
            },
            "called": [
                "FUN_08008ac4",
                "FUN_08008a24"
            ],
            "calling": [
                "FUN_08003002"
            ],
            "code": "\nvoid blink_led_08002fca(undefined4 pin_led,undefined4 led_pin,int num_blinks,undefined4 delay_on,\n                 undefined4 delay_off)\n\n{\n  uint blink_count;\n  \n  for (blink_count = 0; (int)blink_count < num_blinks; blink_count = blink_count + 1 & 0xff) {\n    delay(delay_off);\n    digitalWrite(led_pin,1);\n    delay(delay_on);\n    digitalWrite(led_pin,0);\n  }\n  return;\n}\n\n",
            "current_name": "blink_led_08002fca",
            "entrypoint": "0x08002fca",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002fca": "blink_led_08002fca",
                "param_1": "pin_led",
                "param_2": "led_pin",
                "param_3": "num_blinks",
                "param_4": "delay_on",
                "param_5": "delay_off",
                "uVar1": "blink_count"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003002": {
            "additional_data": {
                "0x1f8": {
                    "config_flag": 1,
                    "flag": 1,
                    "flag_address": 3,
                    "flag_offset": 2,
                    "state_check_offset": 1
                },
                "0x28": {
                    "blink_count": 3,
                    "delay1": 1,
                    "strobe_duration": 1,
                    "strobe_time": 1
                },
                "0x7d": {
                    "delay4": 1,
                    "delay_long": 1,
                    "final_delay": 1,
                    "long_delay": 3,
                    "long_pause_duration": 2
                },
                "0xd": {
                    "led_pin": 6,
                    "output_pin": 1,
                    "pin_d": 1
                },
                "0xd2": {
                    "blink_duration": 1,
                    "blink_interval": 1,
                    "blink_rate": 1,
                    "delay2": 1,
                    "delay_time": 1,
                    "strobe_intensity": 1
                },
                "0xfa": {
                    "delay3": 1,
                    "delay_short": 1,
                    "initial_delay": 1,
                    "short_delay": 3,
                    "short_pause_duration": 2
                },
                "DAT_08003ba0": {
                    "delay_short": 1
                },
                "DAT_08003ba4": {
                    "delay_long": 1
                },
                "DELAY_1": {
                    "delay_before_blink": 1
                },
                "DELAY_2": {
                    "delay_between_blinks": 1
                },
                "FUNC_08008ac4": {
                    "strobe_blink_pin": 1
                },
                "FUN_08002fca": {
                    "prepare_sensor_data": 1
                },
                "FUN_08003002": {
                    "blink_le_ds": 1,
                    "blink_led_sequence": 2,
                    "blink_sequence": 1,
                    "init_blinking": 1,
                    "initialize_and_blink_le_ds": 1,
                    "initialize_and_blink_led": 4,
                    "initialize_blinking": 2,
                    "initialize_device": 3,
                    "initialize_led": 7,
                    "initialize_pin": 1,
                    "initialize_pin_blinking": 1,
                    "initialize_pin_output": 1,
                    "initialize_strobe_blink": 1,
                    "initialize_strobe_led": 1,
                    "perform_blinking_operation": 1,
                    "set_led_blink_pattern": 1,
                    "strobe_blink_delay": 1,
                    "strobe_pattern": 1
                },
                "FUN_08008990": {
                    "delay_and_blink_pin": 1,
                    "send_sensor_data": 1
                },
                "PINMODE": {
                    "mode": 1,
                    "pin_mode": 1
                },
                "delay": {
                    "custom_delay": 3,
                    "delay_execution": 1,
                    "delay_function": 1,
                    "delay_milliseconds": 2,
                    "delay_time": 1,
                    "pause": 7,
                    "pause_execution": 1,
                    "perform_delay": 1,
                    "wait": 7,
                    "wait_for": 1,
                    "wait_for_delay": 3
                },
                "param_1": {
                    "address": 1,
                    "config_address": 2,
                    "config_param": 1,
                    "config_ptr": 1,
                    "device": 1,
                    "device_address": 4,
                    "device_id": 1,
                    "device_pin": 1,
                    "led_pin": 5,
                    "led_state": 1,
                    "param": 1,
                    "pin": 3,
                    "pin_number": 8,
                    "sequence_start": 1
                },
                "param_2": {
                    "delay_time": 1,
                    "duration_1": 1,
                    "param2": 1,
                    "pin_number2": 1
                },
                "param_3": {
                    "blink_count": 1,
                    "param3": 1,
                    "pin_mode1": 1,
                    "pulse_count": 1
                },
                "param_4": {
                    "data": 1,
                    "delay_cycle": 1,
                    "duration_2": 1,
                    "param4": 1
                },
                "pinMode": {
                    "configure_pin_mode": 2,
                    "set_pin_mode": 25
                },
                "strobeBlinkPin": {
                    "blink_led": 7,
                    "blink_pin": 7,
                    "blink_pin_repeatedly": 1,
                    "blink_pin_with_strobe": 8,
                    "blink_strobe": 1,
                    "led_strobe_blink": 1,
                    "strobe_blink_led": 2,
                    "strobe_blink_pin": 1
                },
                "stroberBlinkPin": {
                    "blink_led": 1
                }
            },
            "called": [
                "FUN_08002fca",
                "FUN_08008ac4",
                "FUN_08008990"
            ],
            "calling": [
                "FUN_08003048"
            ],
            "code": "\nvoid initialize_and_blink_led_08003002(int pin_number)\n\n{\n  if (*(char *)(pin_number + 0x1f8) != '\\0') {\n    return;\n  }\n  set_pin_mode(0xd,1);\n  blink_pin_with_strobe(pin_number,0xd,2,0x28,0xd2);\n  pause(0xfa);\n  blink_pin_with_strobe(pin_number,0xd,5,0x28,0xd2);\n  pause(0x7d);\n  return;\n}\n\n",
            "current_name": "initialize_and_blink_led_08003002",
            "entrypoint": "0x08003002",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003002": "initialize_and_blink_led_08003002",
                "delay": "pause",
                "param_1": "pin_number",
                "pinMode": "set_pin_mode",
                "strobeBlinkPin": "blink_pin_with_strobe"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003048": {
            "additional_data": {
                "FUN_08003048": {
                    "initialize_and_blink": 1,
                    "initialize_and_blink_led": 1,
                    "initialize_and_update_device": 3,
                    "initialize_and_update_device_info": 2,
                    "initialize_device": 22,
                    "initialize_device_and_blink_led": 1,
                    "update_device_info": 1
                },
                "begin": {
                    "initialize_and_blink_led": 9,
                    "initialize_and_blink_led_08003002": 4,
                    "initialize_and_configure": 1,
                    "initialize_serial_port": 1
                },
                "blinkVersion": {
                    "blink_firmware_version": 2,
                    "blink_led": 1,
                    "display_firmware_version": 5,
                    "get_firmware_version": 1,
                    "initialize_serial_port": 1,
                    "initialize_serial_port_08008c44": 2,
                    "print_firmware_version": 2,
                    "update_firmware_version": 1
                },
                "initialize_and_blink_led_08003002": {
                    "": 1,
                    "initialize_and_blink_led": 20
                },
                "initialize_serial_port_08008c44": {
                    "": 1,
                    "initialize_serial_port": 23
                },
                "param_1": {
                    "device": 27,
                    "device_id": 2,
                    "device_info": 1,
                    "param1": 1
                },
                "param_2": {
                    "firmware_version": 12,
                    "param2": 1,
                    "pin": 1,
                    "pin_number": 17
                },
                "param_3": {
                    "": 1,
                    "baud_rate": 4,
                    "firmware": 1,
                    "firmware_version": 10,
                    "not_changed": 1,
                    "param3": 1,
                    "pin_number": 9,
                    "unused": 1
                },
                "param_4": {
                    "firmware_version": 3,
                    "param4": 1,
                    "pin_number": 2,
                    "serial_config": 6,
                    "serial_port": 1,
                    "serial_port_address": 17,
                    "serial_port_config": 1
                },
                "update_device_info_08002e26": {
                    "update_device_info": 26
                }
            },
            "called": [
                "FUN_08002e26",
                "FUN_08003002",
                "FUN_08008c44"
            ],
            "calling": [
                "FUN_08001b48"
            ],
            "code": "\nvoid initialize_and_update_device_info_08003048(undefined4 device,undefined4 pin_number,undefined4 firmware_version,undefined4 serial_port_address)\n\n{\n  initialize_and_blink_led(&DAT_20000700,pin_number,6,serial_port_address,serial_port_address);\n  display_firmware_version(device);\n  update_device_info(device,&DAT_20000700);\n  return;\n}\n\n",
            "current_name": "initialize_and_update_device_info_08003048",
            "entrypoint": "0x08003048",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003048": "initialize_and_update_device_info_08003048",
                "begin": "initialize_and_blink_led",
                "blinkVersion": "display_firmware_version",
                "param_1": "device",
                "param_2": "pin_number",
                "param_3": "firmware_version",
                "param_4": "serial_port_address",
                "update_device_info_08002e26": "update_device_info"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800307a": {
            "additional_data": {
                "FUN_0800307a": {
                    "decode": 1,
                    "decode_and_execute": 1,
                    "decode_and_process_data": 3,
                    "decode_byte_stream": 1,
                    "decode_data": 23,
                    "process_data": 2
                },
                "param_1": {
                    "callback": 2,
                    "data_callback": 1,
                    "data_handler": 3,
                    "data_pointer": 6,
                    "data_ptr": 1,
                    "function_array": 1,
                    "function_pointer": 11,
                    "output": 1,
                    "output_buffer": 2,
                    "output_ptr": 2,
                    "result": 1
                },
                "param_2": {
                    "data_length": 12,
                    "data_size": 8,
                    "input_data_size": 1,
                    "input_length": 2,
                    "input_size": 6,
                    "length": 1,
                    "stream_length": 1
                },
                "param_3": {
                    "byte_array": 2,
                    "byte_stream": 1,
                    "data": 7,
                    "data_buffer": 1,
                    "encoded_data": 7,
                    "input_data": 12,
                    "source_data": 1
                },
                "param_4": {
                    "limit": 1,
                    "max_decode_size": 1,
                    "max_decoded_length": 3,
                    "max_decoded_size": 1,
                    "max_iterations": 9,
                    "max_output_length": 5,
                    "max_output_size": 5,
                    "max_size": 1,
                    "output_length": 1,
                    "output_limit": 1,
                    "output_size": 3
                },
                "uVar1": {
                    "current_byte": 30,
                    "first_byte": 1
                },
                "uVar2": {
                    "bit_index": 1,
                    "bit_offset": 18,
                    "bit_position": 11,
                    "current_bit": 1
                },
                "uVar3": {
                    "decode_counter": 1,
                    "decoded_bytes": 2,
                    "decoded_length": 2,
                    "decoded_size": 1,
                    "iteration_count": 9,
                    "iterations": 1,
                    "output_count": 1,
                    "output_counter": 1,
                    "output_index": 1,
                    "output_length": 5,
                    "output_offset": 2,
                    "output_position": 3,
                    "output_size": 2
                },
                "uVar4": {
                    "byte_index": 15,
                    "current_index": 3,
                    "current_offset": 1,
                    "data_index": 2,
                    "i": 1,
                    "input_counter": 1,
                    "input_index": 2,
                    "input_offset": 1,
                    "input_position": 3,
                    "source_index": 1,
                    "stream_index": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003106",
                "FUN_0800319e",
                "FUN_080031ce",
                "FUN_0800325a",
                "FUN_08003158"
            ],
            "code": "\nvoid decode_and_process_data_0800307a(undefined4 *function_pointer,uint data_length,byte *input_data,uint max_iterations)\n\n{\n  uint current_byte;\n  uint bit_offset;\n  uint iteration_count;\n  uint byte_index;\n  \n  current_byte = (uint)*input_data;\n  if (max_iterations == 0) {\n    max_iterations = 0xffffffff;\n  }\n  byte_index = 0;\n  bit_offset = 0;\n  iteration_count = 0;\n  while ((byte_index < data_length && (iteration_count < max_iterations))) {\n    (***(code ***)(undefined4 *)*function_pointer)\n              ((undefined4 *)*function_pointer,((uint)input_data[byte_index] << (bit_offset & 0xff) | current_byte) & 0x7f);\n    current_byte = (int)(uint)input_data[byte_index] >> (7 - bit_offset & 0xff) & 0xff;\n    bit_offset = bit_offset + 1;\n    while ((iteration_count = iteration_count + 1, 6 < bit_offset && (iteration_count < max_iterations))) {\n      (***(code ***)(undefined4 *)*function_pointer)((undefined4 *)*function_pointer,current_byte & 0x7f);\n      current_byte = current_byte >> 7;\n      bit_offset = bit_offset - 7;\n    }\n    byte_index = byte_index + 1;\n  }\n  if ((bit_offset != 0) && (iteration_count < max_iterations)) {\n    (***(code ***)(undefined4 *)*function_pointer)((undefined4 *)*function_pointer,(1 << (bit_offset & 0xff)) - 1U & current_byte)\n    ;\n  }\n  return;\n}\n\n",
            "current_name": "decode_and_process_data_0800307a",
            "entrypoint": "0x0800307a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800307a": "decode_and_process_data_0800307a",
                "param_1": "function_pointer",
                "param_2": "data_length",
                "param_3": "input_data",
                "param_4": "max_iterations",
                "uVar1": "current_byte",
                "uVar2": "bit_offset",
                "uVar3": "iteration_count",
                "uVar4": "byte_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003106": {
            "additional_data": {
                "FUN_0800307a": {
                    "encode_byte_stream": 14
                },
                "FUN_08003106": {
                    "decode_and_encode": 1,
                    "decode_and_encode_data": 2,
                    "decode_and_encode_function": 1,
                    "encode_and_send_data": 1,
                    "execute_and_encode": 3,
                    "execute_encoded_function": 5,
                    "execute_function": 6,
                    "execute_operation": 1,
                    "perform_operation": 1,
                    "process_data": 9
                },
                "encodeByteStream": {
                    "encode_data": 1,
                    "encode_stream": 1,
                    "process_byte_stream": 1,
                    "process_data": 1
                },
                "param_1": {
                    "data": 1,
                    "data_pointer": 6,
                    "data_ptr": 5,
                    "decoded_data": 1,
                    "function_address": 1,
                    "function_pointer": 14,
                    "function_ptr": 2,
                    "operation": 1
                },
                "param_2": {
                    "arg2": 1,
                    "constant1": 2,
                    "encode_param2": 1,
                    "param1": 1,
                    "param2": 6,
                    "param_1": 1,
                    "param_2": 2,
                    "param_value1": 2,
                    "value1": 14,
                    "value_1": 1
                },
                "param_3": {
                    "arg3": 1,
                    "byte_array": 1,
                    "byte_array_pointer": 1,
                    "constant2": 2,
                    "encode_param3": 1,
                    "param2": 1,
                    "param3": 5,
                    "param_2": 1,
                    "param_3": 1,
                    "param_value2": 2,
                    "value2": 14,
                    "value_2": 1
                },
                "param_4": {
                    "arg4": 1,
                    "array_length": 1,
                    "byte_array_size": 1,
                    "constant3": 2,
                    "encode_param4": 1,
                    "param3": 1,
                    "param4": 5,
                    "param_3": 1,
                    "param_4": 1,
                    "param_value3": 2,
                    "value3": 14,
                    "value_3": 1
                },
                "puVar1": {
                    "func_pointer": 1,
                    "function_address": 1,
                    "function_pointer": 5,
                    "function_pointer_value": 2,
                    "function_ptr": 9,
                    "next_function_pointer": 1,
                    "next_function_ptr": 1,
                    "pointer": 2,
                    "pointer1": 1,
                    "pointer_to_function": 2,
                    "ptr": 2,
                    "ptr_operation": 1,
                    "ptr_to_data": 1,
                    "target_function": 1
                }
            },
            "called": [
                "FUN_0800307a"
            ],
            "calling": [
                "FUN_08003158"
            ],
            "code": "\nvoid execute_encoded_function_08003106(undefined4 *function_pointer,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  undefined4 *function_ptr;\n  \n  function_ptr = (undefined4 *)*function_pointer;\n  if (function_ptr != (undefined4 *)0x0) {\n    (**(code **)*function_ptr)(function_ptr,0xf0);\n    (***(code ***)(undefined4 *)*function_pointer)((undefined4 *)*function_pointer,0x6f);\n    (***(code ***)(undefined4 *)*function_pointer)((undefined4 *)*function_pointer,value1);\n    process_data(function_pointer,value2,value3,value2);\n    (***(code ***)(undefined4 *)*function_pointer)((undefined4 *)*function_pointer,0xf7);\n  }\n  return;\n}\n\n",
            "current_name": "execute_encoded_function_08003106",
            "entrypoint": "0x08003106",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003106": "execute_encoded_function_08003106",
                "encodeByteStream": "process_data",
                "param_1": "function_pointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "puVar1": "function_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800314e": {
            "additional_data": {
                "0": {
                    "initial_value": 1
                },
                "FUN_0800314e": {
                    "clear_memory": 1,
                    "initialize": 1,
                    "initialize_data": 1,
                    "initialize_memory": 1,
                    "initialize_param": 3,
                    "initialize_parameter": 2,
                    "initialize_pointer": 2,
                    "initialize_to_zero": 3,
                    "initialize_value": 6,
                    "initialize_variable": 5,
                    "initialize_variable_to_zero": 1,
                    "initiate_zero": 1,
                    "reset_value": 1,
                    "set_param_to_zero": 3
                },
                "param_1": {
                    "data_pointer": 2,
                    "memory_pointer": 2,
                    "output": 3,
                    "output_param": 4,
                    "output_pointer": 8,
                    "output_value": 4,
                    "output_variable": 1,
                    "param": 1,
                    "result": 3,
                    "result_pointer": 1,
                    "result_variable": 1,
                    "variable_pointer": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08002ce0"
            ],
            "code": "\nvoid initialize_variable_to_zero_0800314e(undefined4 *output_pointer)\n\n{\n  *output_pointer = 0;\n  return;\n}\n\n",
            "current_name": "initialize_variable_to_zero_0800314e",
            "entrypoint": "0x0800314e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800314e": "initialize_variable_to_zero_0800314e",
                "param_1": "output_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003154": {
            "additional_data": {
                "FUN_08003154": {
                    "assign_param_value": 1,
                    "assign_parameter_value": 3,
                    "assign_value": 7,
                    "assign_value_to_pointer": 1,
                    "copy_value": 3,
                    "copy_value_to_memory": 1,
                    "copy_value_to_pointer": 7,
                    "set_param_to_value": 2,
                    "set_param_value": 3,
                    "set_parameter_value": 1,
                    "set_value": 1,
                    "update_value": 1
                },
                "param_1": {
                    "dest": 1,
                    "destination": 12,
                    "destination_pointer": 3,
                    "destination_ptr": 1,
                    "output": 3,
                    "output_param": 3,
                    "output_pointer": 1,
                    "output_ptr": 2,
                    "output_variable": 1,
                    "parameter_pointer": 1,
                    "result": 1,
                    "result_ptr": 1
                },
                "param_2": {
                    "input": 3,
                    "input_param": 3,
                    "input_value": 5,
                    "parameter_value": 1,
                    "source": 7,
                    "source_value": 1,
                    "value": 8,
                    "value_to_copy": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_08002e26"
            ],
            "code": "\nvoid set_param_to_value_08003154(undefined4 *destination,undefined4 value)\n\n{\n  *destination = value;\n  return;\n}\n\n",
            "current_name": "set_param_to_value_08003154",
            "entrypoint": "0x08003154",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003154": "set_param_to_value_08003154",
                "param_1": "destination",
                "param_2": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003158": {
            "additional_data": {
                "FUN_0800307a": {
                    "call_second_function": 1,
                    "send_byte_stream": 1
                },
                "FUN_08003106": {
                    "call_first_function": 1,
                    "process_data_callback": 1
                },
                "FUN_08003158": {
                    "handle_data_transmission": 1,
                    "process_analog_data": 2,
                    "process_data": 22,
                    "process_input": 1,
                    "send_analog_data": 3,
                    "send_command": 1,
                    "send_data": 1
                },
                "local_a": {
                    "analog_data": 1,
                    "buffer": 2,
                    "byte_stream": 1,
                    "data": 2,
                    "encoded_data": 4,
                    "encoded_value": 14,
                    "local_value": 1,
                    "local_var": 1,
                    "local_variable": 1,
                    "new_value": 1,
                    "stream_data": 2,
                    "stream_value": 1
                },
                "param_1": {
                    "command_ptr": 1,
                    "data": 3,
                    "data_array": 2,
                    "data_buffer": 1,
                    "data_pointer": 11,
                    "data_ptr": 13
                },
                "param_2": {
                    "analog_value": 4,
                    "command": 2,
                    "command_code": 1,
                    "data_length": 1,
                    "data_size": 1,
                    "data_type": 1,
                    "flag": 2,
                    "flags": 3,
                    "input_size": 2,
                    "length": 1,
                    "param_value": 1,
                    "value": 5,
                    "value1": 7
                },
                "param_3": {
                    "command_value": 1,
                    "data_value": 3,
                    "flag": 4,
                    "flags": 1,
                    "input_value": 2,
                    "length": 1,
                    "sensor_value": 1,
                    "stream_data": 1,
                    "stream_value": 2,
                    "value": 8,
                    "value2": 7
                },
                "puVar1": {
                    "func_ptr": 3,
                    "function_pointer": 7,
                    "function_ptr": 10
                }
            },
            "called": [
                "FUN_08003106",
                "FUN_0800307a"
            ],
            "calling": [
                "FUN_08002ef2"
            ],
            "code": "\nvoid process_analog_data_08003158(undefined4 *data_ptr,uint value1,ushort value)\n\n{\n  undefined4 *function_ptr;\n  ushort encoded_value;\n  \n  function_ptr = (undefined4 *)*data_ptr;\n  if (function_ptr != (undefined4 *)0x0) {\n    encoded_value = value;\n    if (((int)value1 < 0x10) && (value < 0x4000)) {\n      (**(code **)*function_ptr)(function_ptr,value1 | 0xe0);\n      encodeByteStream(data_ptr,2,&encoded_value);\n    }\n    else {\n      sendExtendedAnalog(data_ptr,value1,2,&encoded_value);\n    }\n  }\n  return;\n}\n\n",
            "current_name": "process_analog_data_08003158",
            "entrypoint": "0x08003158",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003158": "process_analog_data_08003158",
                "local_a": "encoded_value",
                "param_1": "data_ptr",
                "param_2": "value1",
                "param_3": "value",
                "puVar1": "function_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800319e": {
            "additional_data": {
                "FUN_0800307a": {
                    "encode_byte_stream": 3
                },
                "FUN_0800319e": {
                    "execute_and_encode": 7,
                    "execute_callback": 1,
                    "execute_code": 1,
                    "execute_encoded_function": 8,
                    "execute_encoded_operation": 1,
                    "execute_function": 1,
                    "execute_function_and_encode": 3,
                    "execute_function_and_encode_byte_stream": 5,
                    "execute_function_and_encode_bytes": 1,
                    "execute_function_with_stream_encoding": 1,
                    "reverse_and_encode": 1
                },
                "encodeByteStream": {
                    "encode_data": 1
                },
                "local_a": {
                    "encoded_data": 19,
                    "encoded_input": 2,
                    "encoded_parameter": 1,
                    "encoded_value": 5,
                    "local_value": 1,
                    "output_data": 1,
                    "temp_encoded_value": 1
                },
                "param_1": {
                    "callback_pointer": 1,
                    "function_list": 2,
                    "function_pointer": 23,
                    "function_ptr": 3,
                    "function_table": 1,
                    "input_ptr": 1
                },
                "param_2": {
                    "encode_param": 1,
                    "encoded_value": 1,
                    "execution_flags": 1,
                    "flag": 4,
                    "flags": 18,
                    "input_length": 1,
                    "input_param": 1,
                    "operation_flag": 1,
                    "options": 1,
                    "permission_flags": 1,
                    "value": 1
                },
                "param_3": {
                    "data": 16,
                    "encode_value": 1,
                    "encoded_value": 1,
                    "encoding_byte": 1,
                    "encoding_param": 1,
                    "encoding_parameter": 1,
                    "encoding_type": 1,
                    "input": 1,
                    "input_data": 5,
                    "input_value": 1,
                    "param_value": 1,
                    "value": 1
                },
                "puVar1": {
                    "decoded_function_pointer": 1,
                    "func_ptr": 1,
                    "function": 4,
                    "function_address": 2,
                    "function_pointer": 1,
                    "function_pointer_value": 3,
                    "function_ptr": 6,
                    "function_ptr_ref": 1,
                    "function_ptr_value": 1,
                    "next_function_pointer": 1,
                    "pointer": 1,
                    "pointer_to_function": 2,
                    "ptr_function": 1,
                    "target_function": 1
                }
            },
            "called": [
                "FUN_0800307a"
            ],
            "calling": [
                "FUN_08002efe"
            ],
            "code": "\nvoid execute_function_and_encode_byte_stream_0800319e(undefined4 *function_pointer,uint flags,undefined2 data)\n\n{\n  undefined4 *function_ptr;\n  undefined2 encoded_data;\n  \n  function_ptr = (undefined4 *)*function_pointer;\n  if (function_ptr != (undefined4 *)0x0) {\n    encoded_data = data;\n    (**(code **)*function_ptr)(function_ptr,flags & 0xf | 0x90);\n    encode_data(function_pointer,2,&encoded_data);\n  }\n  return;\n}\n\n",
            "current_name": "execute_function_and_encode_byte_stream_0800319e",
            "entrypoint": "0x0800319e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800319e": "execute_function_and_encode_byte_stream_0800319e",
                "encodeByteStream": "encode_data",
                "local_a": "encoded_data",
                "param_1": "function_pointer",
                "param_2": "flags",
                "param_3": "data",
                "puVar1": "function_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080031ce": {
            "additional_data": {
                "FUN_080031ce": {
                    "decode_and_encode": 3,
                    "decode_and_encode_byte_stream": 8,
                    "decode_and_encode_bytes": 3,
                    "decode_and_encode_data": 2,
                    "decode_and_encode_function": 1,
                    "decode_and_process_byte_stream": 1,
                    "decode_and_process_data": 1,
                    "process_data": 9,
                    "reverse_and_encode": 1,
                    "reverse_encode_and_update": 1
                },
                "param_1": {
                    "byte_stream_ptr": 1,
                    "code_pointer": 1,
                    "data_list": 1,
                    "data_pointer": 7,
                    "data_ptr": 7,
                    "function_pointer": 2,
                    "function_pointers": 1,
                    "function_ptr": 2,
                    "input_array": 3,
                    "input_data": 1,
                    "input_ptr": 1,
                    "stream": 3,
                    "stream_ptr": 1
                },
                "param_2": {
                    "input_value": 1,
                    "param1": 2,
                    "param2": 18,
                    "param_2": 4,
                    "param_value": 1,
                    "parameter2": 1,
                    "value": 1,
                    "value1": 2,
                    "value2": 1
                },
                "param_3": {
                    "flag": 1,
                    "output_value": 1,
                    "param2": 2,
                    "param3": 18,
                    "param_3": 4,
                    "param_desc": 1,
                    "parameter3": 1,
                    "value2": 2,
                    "value3": 1
                },
                "param_4": {
                    "array_length": 2,
                    "count": 1,
                    "data_length": 2,
                    "input_len": 1,
                    "length": 7,
                    "num_bytes": 2,
                    "num_iterations": 2,
                    "param4": 3,
                    "param_count": 1,
                    "size": 4,
                    "stream_length": 6
                },
                "param_5": {
                    "base_index": 1,
                    "base_value": 1,
                    "offset": 16,
                    "param5": 6,
                    "param_5": 1,
                    "start_index": 2,
                    "start_pos": 1,
                    "start_position": 2,
                    "starting_index": 1
                },
                "puVar1": {
                    "current_function_pointer": 1,
                    "decoded_func": 1,
                    "func_ptr": 7,
                    "function_pointer": 5,
                    "function_pointer_copy": 1,
                    "function_ptr": 9,
                    "function_ptr_value": 1,
                    "pointer": 1,
                    "ptr": 2,
                    "ptr_func": 1,
                    "ptr_to_function": 1,
                    "temp_pointer": 1
                },
                "uVar2": {
                    "counter": 5,
                    "i": 6,
                    "index": 18,
                    "iterator": 2
                }
            },
            "called": [
                "FUN_0800307a"
            ],
            "calling": [
                "FUN_08002df6"
            ],
            "code": "\nvoid decode_and_encode_byte_stream_080031ce(undefined4 *data_ptr,undefined4 param2,undefined4 param3,uint length,int offset\n                 )\n\n{\n  undefined4 *function_ptr;\n  uint index;\n  \n  function_ptr = (undefined4 *)*data_ptr;\n  if (function_ptr != (undefined4 *)0x0) {\n    (**(code **)*function_ptr)(function_ptr,0xf0,param3,*(code **)*function_ptr,length);\n    (***(code ***)(undefined4 *)*data_ptr)((undefined4 *)*data_ptr,0x79);\n    (***(code ***)(undefined4 *)*data_ptr)((undefined4 *)*data_ptr,param2);\n    (***(code ***)(undefined4 *)*data_ptr)((undefined4 *)*data_ptr,param3);\n    for (index = 0; index < length; index = index + 1) {\n      encodeByteStream(data_ptr,1,offset + index,0);\n    }\n    (***(code ***)(undefined4 *)*data_ptr)((undefined4 *)*data_ptr,0xf7);\n  }\n  return;\n}\n\n",
            "current_name": "decode_and_encode_byte_stream_080031ce",
            "entrypoint": "0x080031ce",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080031ce": "decode_and_encode_byte_stream_080031ce",
                "param_1": "data_ptr",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "length",
                "param_5": "offset",
                "puVar1": "function_ptr",
                "uVar2": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800322c": {
            "additional_data": {
                "0x0": {
                    "null": 1
                },
                "FUN_0800322c": {
                    "execute_actions": 1,
                    "execute_and_pass_parameters": 1,
                    "execute_function": 16,
                    "execute_function_and_return": 1,
                    "execute_function_with_parameters": 1,
                    "execute_function_with_params": 3,
                    "execute_multiple_actions": 1,
                    "execute_operations": 3,
                    "execute_process": 1,
                    "execute_three_operations": 2,
                    "run_process": 1
                },
                "param_1": {
                    "action_list": 1,
                    "action_list_ptr": 1,
                    "function_pointer": 11,
                    "function_ptr": 10,
                    "input_pointer": 1,
                    "operation_list": 2,
                    "operation_pointers": 1,
                    "operation_ptr": 1,
                    "process_pointer": 1,
                    "process_ptr": 1
                },
                "param_2": {
                    "action_param_1": 1,
                    "arg1": 1,
                    "arg2": 2,
                    "arg_1": 2,
                    "argument1": 2,
                    "argument2": 1,
                    "argument_1": 1,
                    "argument_2": 1,
                    "input_1": 2,
                    "input_param1": 1,
                    "param2": 8,
                    "param_2": 4,
                    "param_a": 1,
                    "parameter2": 2,
                    "parameter_1": 1,
                    "parameter_2": 1
                },
                "param_3": {
                    "action_param_2": 1,
                    "arg2": 1,
                    "arg3": 2,
                    "arg_2": 2,
                    "argument2": 2,
                    "argument3": 1,
                    "argument_2": 1,
                    "argument_3": 1,
                    "input_2": 2,
                    "input_param2": 1,
                    "param3": 8,
                    "param_3": 4,
                    "param_b": 1,
                    "parameter3": 2,
                    "parameter_2": 1,
                    "parameter_3": 1
                },
                "puVar1": {
                    "current_action_ptr": 1,
                    "current_operation": 1,
                    "func_ptr_to_call": 1,
                    "function": 1,
                    "function_address": 1,
                    "function_call": 1,
                    "function_pointer": 2,
                    "function_ptr": 2,
                    "function_ptr_address": 1,
                    "function_ptr_value": 4,
                    "next_action": 1,
                    "next_function_pointer": 2,
                    "next_function_ptr": 1,
                    "operation": 1,
                    "operation_pointer": 1,
                    "operation_ptr_value": 1,
                    "pointer": 2,
                    "pointer_to_function": 2,
                    "process_function_ptr": 1,
                    "ptr": 1,
                    "ptr_to_function": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_08002ddc"
            ],
            "code": "\nvoid execute_function_with_params_0800322c(undefined4 *function_pointer,undefined4 param2,undefined4 param3)\n\n{\n  undefined4 *function_ptr_value;\n  \n  function_ptr_value = (undefined4 *)*function_pointer;\n  if (function_ptr_value != (undefined4 *)0x0) {\n    (**(code **)*function_ptr_value)(function_ptr_value,0xf9);\n    (***(code ***)(undefined4 *)*function_pointer)((undefined4 *)*function_pointer,param2);\n    (***(code ***)(undefined4 *)*function_pointer)((undefined4 *)*function_pointer,param3);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "execute_function_with_params_0800322c",
            "entrypoint": "0x0800322c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800322c": "execute_function_with_params_0800322c",
                "param_1": "function_pointer",
                "param_2": "param2",
                "param_3": "param3",
                "puVar1": "function_ptr_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800325a": {
            "additional_data": {
                "FUN_0800325a": {
                    "decode_and_encode": 4,
                    "decode_and_encode_byte_stream": 3,
                    "decode_and_encode_bytes": 4,
                    "decode_and_encode_data": 1,
                    "decode_and_encode_function": 1,
                    "decode_and_process_data": 1,
                    "execute_data_processing": 1,
                    "execute_encoding": 1,
                    "execute_process": 1,
                    "process_byte_stream": 1,
                    "process_data": 7,
                    "process_data_stream": 1,
                    "process_function": 1,
                    "reverse_and_encode_byte_stream": 1,
                    "run_encoding_process": 1
                },
                "param_1": {
                    "byte_stream": 1,
                    "data": 1,
                    "data_pointer": 5,
                    "data_ptr": 4,
                    "function_pointer": 8,
                    "input_data": 2,
                    "input_param": 1,
                    "input_ptr": 1,
                    "param_array": 1,
                    "ptr": 1,
                    "ptr_to_data": 1,
                    "stream": 2,
                    "stream_pointer": 1,
                    "stream_ptr": 2
                },
                "param_2": {
                    "data": 2,
                    "initial_value": 1,
                    "input_param": 1,
                    "input_value": 2,
                    "output_param": 1,
                    "param": 3,
                    "param1": 2,
                    "param2": 3,
                    "param_2": 1,
                    "param_value": 6,
                    "parameter": 1,
                    "size": 2,
                    "stream_param": 1,
                    "value": 5
                },
                "param_3": {
                    "byte_count": 3,
                    "count": 1,
                    "data_length": 2,
                    "length": 7,
                    "loop_count": 1,
                    "num_bytes": 6,
                    "num_elements": 1,
                    "num_iterations": 2,
                    "param_count": 2,
                    "size": 1,
                    "stream_length": 3,
                    "stream_size": 2
                },
                "param_4": {
                    "base_offset": 1,
                    "base_param": 1,
                    "base_value": 1,
                    "encoding_offset": 1,
                    "index": 1,
                    "initial_value": 1,
                    "offset": 12,
                    "param2": 1,
                    "param4": 1,
                    "param_offset": 1,
                    "start": 1,
                    "start_byte": 2,
                    "start_index": 1,
                    "start_offset": 1,
                    "start_pos": 1,
                    "start_position": 1,
                    "starting_index": 2,
                    "starting_offset": 1
                },
                "puVar1": {
                    "func_ptr": 3,
                    "function": 1,
                    "function_pointer": 8,
                    "function_pointer_addr": 1,
                    "function_pointer_value": 1,
                    "function_ptr": 4,
                    "next_ptr": 1,
                    "pointer": 2,
                    "ptr": 1,
                    "ptr_to_fn": 1,
                    "ptr_to_function": 1,
                    "ptr_value": 2,
                    "stream_pointer": 1,
                    "stream_ptr": 1,
                    "stream_ptr_data": 1,
                    "sub_func_ptr": 1
                },
                "puVarl": {
                    "function_pointer_ptr": 1
                },
                "uVar2": {
                    "byte_index": 3,
                    "count": 1,
                    "counter": 2,
                    "i": 6,
                    "index": 15,
                    "iteration_count": 2,
                    "iterator": 1,
                    "stream_index": 1
                }
            },
            "called": [
                "FUN_0800307a"
            ],
            "calling": [
                "FUN_080032a2",
                "FUN_08002f0a"
            ],
            "code": "\nvoid decode_and_encode_function_0800325a(undefined4 *function_pointer,undefined4 param_value,uint length,int offset)\n\n{\n  undefined4 *function_pointer;\n  uint index;\n  \n  function_pointer = (undefined4 *)*function_pointer;\n  if (function_pointer != (undefined4 *)0x0) {\n    (**(code **)*function_pointer)(function_pointer,0xf0);\n    (***(code ***)(undefined4 *)*function_pointer)((undefined4 *)*function_pointer,param_value);\n    for (index = 0; index < length; index = index + 1) {\n      encodeByteStream(function_pointer,1,offset + index,0);\n    }\n    (***(code ***)(undefined4 *)*function_pointer)((undefined4 *)*function_pointer,0xf7);\n  }\n  return;\n}\n\n",
            "current_name": "decode_and_encode_function_0800325a",
            "entrypoint": "0x0800325a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800325a": "decode_and_encode_function_0800325a",
                "param_1": "function_pointer",
                "param_2": "param_value",
                "param_3": "length",
                "param_4": "offset",
                "puVar1": "function_pointer",
                "uVar2": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080032a2": {
            "additional_data": {
                "FUN_08000178": {
                    "get_string_length": 1
                },
                "FUN_0800325a": {
                    "send_sysex": 1
                },
                "FUN_080032a2": {
                    "send_sysex_command": 4,
                    "send_sysex_data": 15,
                    "send_sysex_message": 6,
                    "send_sysex_packet": 1,
                    "send_sysex_string": 1,
                    "send_sysex_with_data": 1,
                    "send_sysex_with_length": 1,
                    "send_sysex_with_param": 2
                },
                "param_1": {
                    "device": 8,
                    "device_address": 5,
                    "device_handle": 8,
                    "device_id": 10
                },
                "param_2": {
                    "command": 2,
                    "data": 6,
                    "message": 18,
                    "sysex_data": 1,
                    "sysex_message": 4
                },
                "param_3": {
                    "message_length": 4,
                    "param_3": 1,
                    "size": 2
                },
                "param_4": {
                    "additional_data": 1,
                    "additional_param": 1,
                    "callback": 5,
                    "callback_function": 3,
                    "extra_data": 4,
                    "extra_info": 1,
                    "extra_param": 2,
                    "flags": 2,
                    "option": 1,
                    "options": 1,
                    "other_param": 1,
                    "output_buffer": 1,
                    "param_4": 2,
                    "size": 1,
                    "timeout": 1,
                    "user_data": 4
                },
                "sendSysex": {
                    "send_sysex_message": 2
                },
                "uVar1": {
                    "data_length": 3,
                    "data_size": 1,
                    "message_length": 15,
                    "sysex_length": 1
                }
            },
            "called": [
                "FUN_08000178",
                "FUN_0800325a"
            ],
            "calling": [
                "FUN_08002f14"
            ],
            "code": "\nvoid send_sysex_with_data_080032a2(undefined4 device_id,undefined4 message,undefined4 message_length,undefined4 callback)\n\n{\n  undefined4 message_length;\n  \n  message_length = strlen(message);\n  send_sysex_message(device_id,0x71,message_length,message,callback);\n  return;\n}\n\n",
            "current_name": "send_sysex_with_data_080032a2",
            "entrypoint": "0x080032a2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080032a2": "send_sysex_with_data_080032a2",
                "param_1": "device_id",
                "param_2": "message",
                "param_3": "message_length",
                "param_4": "callback",
                "sendSysex": "send_sysex_message",
                "uVar1": "message_length"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080032bc": {
            "additional_data": {
                "FUN_080032bc": {
                    "init_params": 1,
                    "initialize_data": 2,
                    "initialize_data_struct": 1,
                    "initialize_data_structure": 5,
                    "initialize_function": 2,
                    "initialize_memory": 1,
                    "initialize_parameters": 6,
                    "initialize_params": 10,
                    "initialize_struct": 1,
                    "initialize_structure": 1,
                    "set_initial_values": 1
                },
                "param_1": {
                    "base_address": 2,
                    "buffer_address": 1,
                    "data": 1,
                    "data_ptr": 1,
                    "data_struct": 1,
                    "data_structure": 5,
                    "data_structure_ptr": 1,
                    "func_param_1": 1,
                    "function_data_ptr": 1,
                    "memory_address": 1,
                    "obj_ptr": 1,
                    "object_address": 1,
                    "param": 1,
                    "param1": 2,
                    "param_address": 1,
                    "param_array": 1,
                    "param_base": 1,
                    "param_base_addr": 1,
                    "param_base_address": 1,
                    "param_buffer": 1,
                    "param_ptr": 1,
                    "parameter1": 1,
                    "struct_address": 1,
                    "struct_ptr": 1,
                    "structure_address": 1
                },
                "param_2": {
                    "func_param_2": 1,
                    "param2": 3,
                    "param2_value": 1,
                    "param_value": 11,
                    "param_value1": 1,
                    "parameter2": 1,
                    "value": 13
                },
                "param_3": {
                    "data": 4,
                    "default_value": 4,
                    "func_param_3": 1,
                    "initial_value": 2,
                    "other_param": 1,
                    "param": 1,
                    "param3": 6,
                    "param3_value": 1,
                    "param_3_value": 1,
                    "param_data": 5,
                    "param_value2": 2,
                    "parameter3": 2,
                    "undefined_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08002ce0"
            ],
            "code": "\nvoid initialize_params_080032bc(int data_structure,int value,undefined4 param3)\n\n{\n  *(int *)(data_structure + 4) = value;\n  *(undefined4 *)(data_structure + 8) = param3;\n  *(undefined *)(data_structure + 0xc) = 0;\n  *(undefined *)(data_structure + 0xd) = 0;\n  *(undefined4 *)(data_structure + 0x10) = 0;\n  *(undefined *)(data_structure + 0x14) = 0;\n  *(undefined4 *)(data_structure + 0x18) = 0;\n  *(undefined4 *)(data_structure + 0x1c) = 0;\n  *(undefined4 *)(data_structure + 0x20) = 0;\n  *(undefined4 *)(data_structure + 0x24) = 0;\n  *(undefined4 *)(data_structure + 0x28) = 0;\n  *(undefined4 *)(data_structure + 0x2c) = 0;\n  *(undefined4 *)(data_structure + 0x30) = 0;\n  *(undefined4 *)(data_structure + 0x34) = 0;\n  *(undefined4 *)(data_structure + 0x38) = 0;\n  *(undefined4 *)(data_structure + 0x3c) = 0;\n  *(undefined4 *)(data_structure + 0x40) = 0;\n  *(undefined4 *)(data_structure + 0x44) = 0;\n  *(undefined4 *)(data_structure + 0x48) = 0;\n  *(undefined4 *)(data_structure + 0x4c) = 0;\n  *(undefined4 *)(data_structure + 0x50) = 0;\n  *(undefined4 *)(data_structure + 0x54) = 0;\n  *(undefined4 *)(data_structure + 0x58) = 0;\n  *(undefined4 *)(data_structure + 0x5c) = 0;\n  *(undefined4 *)(data_structure + 0x60) = 0;\n  *(undefined4 *)(data_structure + 100) = 0;\n  *(undefined4 *)(data_structure + 0x68) = 0;\n  *(undefined4 *)(data_structure + 0x6c) = 0;\n  *(undefined4 *)(data_structure + 0x70) = 0;\n  *(undefined4 *)(data_structure + 0x74) = 0;\n  *(undefined4 *)(data_structure + 0x78) = 0;\n  *(bool *)data_structure = value == 0;\n  return;\n}\n\n",
            "current_name": "initialize_params_080032bc",
            "entrypoint": "0x080032bc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080032bc": "initialize_params_080032bc",
                "param_1": "data_structure",
                "param_2": "value",
                "param_3": "param3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003306": {
            "additional_data": {
                "0x90": {
                    "const_value5": 1,
                    "opcode_set5": 1
                },
                "0xc0": {
                    "const_value6": 1,
                    "opcode_set6": 1
                },
                "0xd0": {
                    "const_value1": 1,
                    "opcode_set1": 1
                },
                "0xe0": {
                    "const_value4": 1,
                    "opcode_set4": 1
                },
                "0xf4": {
                    "const_value2": 1,
                    "opcode_set2": 1
                },
                "0xf5": {
                    "const_value3": 1,
                    "opcode_set3": 1
                },
                "FUN_08003306": {
                    "set_param_values": 2,
                    "set_parameters": 1,
                    "set_register_values": 1,
                    "set_values": 1,
                    "update_configuration": 1,
                    "update_data": 5,
                    "update_data_entry": 1,
                    "update_memory": 1,
                    "update_param_values": 2,
                    "update_parameter": 2,
                    "update_parameters": 11,
                    "update_params": 2,
                    "update_registry_entry": 1
                },
                "param_1": {
                    "base_address": 14,
                    "config_address": 1,
                    "data_address": 3,
                    "data_entry_address": 1,
                    "data_ptr": 1,
                    "obj_address": 1,
                    "obj_ptr": 1,
                    "object_address": 7,
                    "register_address": 1,
                    "registry_address": 1
                },
                "param_2": {
                    "config_value": 1,
                    "data_entry_code": 1,
                    "opcode": 1,
                    "param_code": 1,
                    "param_value": 13,
                    "parameter": 1,
                    "parameter_value": 1,
                    "register_value": 1,
                    "value": 10,
                    "value_to_update": 1
                },
                "param_3": {
                    "data1": 1,
                    "new_data1": 1,
                    "new_param1": 1,
                    "new_value1": 22,
                    "param3": 1,
                    "updated_param1": 1,
                    "value1": 4
                },
                "param_4": {
                    "data2": 1,
                    "new_data2": 1,
                    "new_param2": 1,
                    "new_value2": 22,
                    "param4": 1,
                    "updated_param2": 1,
                    "value2": 4
                },
                "param_5": {
                    "value3": 1
                },
                "param_6": {
                    "value4": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08002ce0"
            ],
            "code": "\nvoid update_parameters_08003306(int base_address,uint param_value,undefined4 new_value1,undefined4 new_value2)\n\n{\n  if (param_value == 0xd0) {\n    *(undefined4 *)(base_address + 0x58) = new_value1;\n    *(undefined4 *)(base_address + 0x28) = new_value2;\n    return;\n  }\n  if (0xd0 < param_value) {\n    if (param_value == 0xf4) {\n      *(undefined4 *)(base_address + 0x5c) = new_value1;\n      *(undefined4 *)(base_address + 0x2c) = new_value2;\n      return;\n    }\n    if (param_value == 0xf5) {\n      *(undefined4 *)(base_address + 0x60) = new_value1;\n      *(undefined4 *)(base_address + 0x30) = new_value2;\n    }\n    else if (param_value == 0xe0) {\n      *(undefined4 *)(base_address + 0x4c) = new_value1;\n      *(undefined4 *)(base_address + 0x1c) = new_value2;\n      return;\n    }\n    return;\n  }\n  if (param_value == 0x90) {\n    *(undefined4 *)(base_address + 0x50) = new_value1;\n    *(undefined4 *)(base_address + 0x20) = new_value2;\n    return;\n  }\n  if (param_value == 0xc0) {\n    *(undefined4 *)(base_address + 0x54) = new_value1;\n    *(undefined4 *)(base_address + 0x24) = new_value2;\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "update_parameters_08003306",
            "entrypoint": "0x08003306",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003306": "update_parameters_08003306",
                "param_1": "base_address",
                "param_2": "param_value",
                "param_3": "new_value1",
                "param_4": "new_value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003346": {
            "additional_data": {
                "0x34": {
                    "value2_address_offset": 1
                },
                "0x70": {
                    "value1_address_offset": 1
                },
                "FUN_08003346": {
                    "initialize_parameters": 1,
                    "set_parameters": 3,
                    "store_parameters": 1,
                    "store_params_if_param_2_equals_0x79": 1,
                    "store_values_if_param2_equals0x79": 1,
                    "update_data": 4,
                    "update_data_if_condition_is_met": 1,
                    "update_memory": 3,
                    "update_parameters": 6,
                    "update_params": 5,
                    "update_params_if_match": 1,
                    "update_params_if_value_match": 1,
                    "update_settings": 1,
                    "update_values": 2
                },
                "param_1": {
                    "base_address": 11,
                    "data_address": 2,
                    "data_location": 1,
                    "data_pointer": 3,
                    "input_object_address": 1,
                    "memory_address": 2,
                    "object_address": 10,
                    "settings_ptr": 1
                },
                "param_2": {
                    "check_value": 1,
                    "comparison_value": 1,
                    "condition": 7,
                    "condition_value": 1,
                    "flag": 1,
                    "input_value": 1,
                    "value": 18,
                    "value_to_check": 1
                },
                "param_3": {
                    "first_parameter": 1,
                    "new_param1": 2,
                    "new_param3": 1,
                    "new_value": 1,
                    "new_value1": 19,
                    "param_value1": 1,
                    "parameter1": 2,
                    "value1": 3,
                    "value_to_store_1": 1
                },
                "param_4": {
                    "new_data": 1,
                    "new_param2": 2,
                    "new_param4": 1,
                    "new_value2": 19,
                    "param_value2": 1,
                    "parameter2": 2,
                    "second_parameter": 1,
                    "value2": 3,
                    "value_to_store_2": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08002ce0"
            ],
            "code": "\nvoid update_params_if_value_match_08003346(int base_address,int value,undefined4 new_value1,undefined4 new_value2)\n\n{\n  if (value == 0x79) {\n    *(undefined4 *)(base_address + 0x70) = new_value1;\n    *(undefined4 *)(base_address + 0x34) = new_value2;\n  }\n  return;\n}\n\n",
            "current_name": "update_params_if_value_match_08003346",
            "entrypoint": "0x08003346",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003346": "update_params_if_value_match_08003346",
                "param_1": "base_address",
                "param_2": "value",
                "param_3": "new_value1",
                "param_4": "new_value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003350": {
            "additional_data": {
                "0xf9": {
                    "special_value_1": 1
                },
                "0xff": {
                    "special_value_2": 1
                },
                "DAT_": {
                    "": 1
                },
                "FUN_08003350": {
                    "set_param_values": 1,
                    "set_parameters": 2,
                    "set_params": 1,
                    "update_data": 5,
                    "update_param_values": 2,
                    "update_parameters": 8,
                    "update_params": 8,
                    "update_values": 4
                },
                "PTR_": {
                    "": 1
                },
                "local_var_1": {
                    "destination1": 1
                },
                "local_var_2": {
                    "destination2": 1
                },
                "param_1": {
                    "base_address": 9,
                    "data": 2,
                    "data_pointer": 3,
                    "data_ptr": 1,
                    "data_struct_ptr": 1,
                    "obj": 2,
                    "obj_address": 3,
                    "obj_ptr": 1,
                    "object": 1,
                    "object_address": 4,
                    "p1": 1,
                    "ptr": 1,
                    "struct_address": 1,
                    "target_address": 1
                },
                "param_10": {
                    "new_param8": 1
                },
                "param_11": {
                    "new_param9": 1
                },
                "param_12": {
                    "new_param10": 1
                },
                "param_13": {
                    "new_param11": 1
                },
                "param_14": {
                    "new_param12": 1
                },
                "param_15": {
                    "new_param13": 1
                },
                "param_16": {
                    "new_param14": 1
                },
                "param_2": {
                    "code": 1,
                    "condition": 1,
                    "flag": 2,
                    "p2": 1,
                    "param_code": 1,
                    "param_value": 1,
                    "parameter_flag": 1,
                    "status": 1,
                    "value": 21,
                    "value_flag": 1
                },
                "param_3": {
                    "first_param": 1,
                    "new_data": 1,
                    "new_data1": 1,
                    "new_param1": 4,
                    "new_param_1_value": 1,
                    "new_val1": 1,
                    "new_value1": 15,
                    "param1": 1,
                    "param_value1": 1,
                    "val1": 1,
                    "value1": 4
                },
                "param_4": {
                    "additional_data": 1,
                    "new_data2": 1,
                    "new_param2": 4,
                    "new_param_2_value": 1,
                    "new_val2": 1,
                    "new_value2": 15,
                    "param2": 1,
                    "param_value2": 1,
                    "second_param": 1,
                    "val2": 1,
                    "value2": 4
                },
                "param_5": {
                    "new_param3": 1,
                    "new_value3": 2
                },
                "param_6": {
                    "new_param4": 1,
                    "new_value4": 1
                },
                "param_7": {
                    "new_param5": 1,
                    "new_value5": 1
                },
                "param_8": {
                    "new_param6": 1
                },
                "param_9": {
                    "new_param7": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08002ce0"
            ],
            "code": "\nvoid set_param_values_08003350(int base_address,int value,undefined4 new_value1,undefined4 new_value2)\n\n{\n  if (value == 0xf9) {\n    *(undefined4 *)(base_address + 0x74) = new_value1;\n    *(undefined4 *)(base_address + 0x38) = new_value2;\n    return;\n  }\n  if (value != 0xff) {\n    return;\n  }\n  *(undefined4 *)(base_address + 0x78) = new_value1;\n  *(undefined4 *)(base_address + 0x48) = new_value2;\n  return;\n}\n\n",
            "current_name": "set_param_values_08003350",
            "entrypoint": "0x08003350",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003350": "set_param_values_08003350",
                "param_1": "base_address",
                "param_2": "value",
                "param_3": "new_value1",
                "param_4": "new_value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003366": {
            "additional_data": {
                "FUN_08003366": {
                    "assign_values": 1,
                    "set_parameters": 2,
                    "set_params_if_condition_met": 1,
                    "set_values_if_param2_is_equal_to113": 1,
                    "update_data": 8,
                    "update_data_based_on_code": 1,
                    "update_parameters": 9,
                    "update_params": 5,
                    "update_values": 3
                },
                "param_1": {
                    "base_addr": 1,
                    "base_address": 8,
                    "data_address": 5,
                    "data_pointer": 3,
                    "data_struct_addr": 1,
                    "input_struct_ptr": 1,
                    "obj": 1,
                    "obj_address": 2,
                    "object": 1,
                    "object_addr": 1,
                    "object_address": 6,
                    "param_ptr": 1
                },
                "param_2": {
                    "code": 1,
                    "condition": 6,
                    "condition_value": 1,
                    "flag": 2,
                    "input_code": 1,
                    "status": 1,
                    "value": 16,
                    "value_check": 1,
                    "value_to_check": 2
                },
                "param_3": {
                    "new_param1": 7,
                    "new_value1": 19,
                    "param1_value": 1,
                    "parameter1": 2,
                    "value1": 2
                },
                "param_4": {
                    "new_param2": 7,
                    "new_value2": 19,
                    "param2_value": 1,
                    "parameter2": 2,
                    "value2": 2
                },
                "param_5": {
                    "new_param3": 1
                },
                "var_1": {
                    "temp_address": 1
                },
                "var_2": {
                    "temp_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08002ce0"
            ],
            "code": "\nvoid update_data_based_on_code_08003366(int base_address,int value,undefined4 new_value1,undefined4 new_value2)\n\n{\n  if (value == 0x71) {\n    *(undefined4 *)(base_address + 0x68) = new_value1;\n    *(undefined4 *)(base_address + 0x40) = new_value2;\n  }\n  return;\n}\n\n",
            "current_name": "update_data_based_on_code_08003366",
            "entrypoint": "0x08003366",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003366": "update_data_based_on_code_08003366",
                "param_1": "base_address",
                "param_2": "value",
                "param_3": "new_value1",
                "param_4": "new_value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003370": {
            "additional_data": {
                "FUN_08003370": {
                    "set_param_values": 1,
                    "set_parameters": 16,
                    "set_params": 6,
                    "set_pointers": 1,
                    "set_struct_values": 1,
                    "set_values": 3,
                    "update_parameters": 2,
                    "update_params": 1
                },
                "param_1": {
                    "base_address": 5,
                    "data_struct": 1,
                    "obj": 1,
                    "obj_address": 1,
                    "obj_ptr": 1,
                    "object": 5,
                    "object_address": 12,
                    "object_pointer": 3,
                    "object_ptr": 1,
                    "struct_pointer": 1
                },
                "param_2": {
                    "unused": 7,
                    "unused1": 3,
                    "unused_param": 2,
                    "unused_param1": 2,
                    "unused_parameter": 3,
                    "value1": 1
                },
                "param_3": {
                    "new_param1": 2,
                    "new_param1_value": 1,
                    "new_value1": 4,
                    "param3": 1,
                    "param_value1": 1,
                    "parameter1": 4,
                    "parameter1_value": 1,
                    "parameter3": 1,
                    "pointer1_value": 1,
                    "value1": 12,
                    "value2": 1,
                    "value3": 1,
                    "value_1": 1
                },
                "param_4": {
                    "new_param2": 2,
                    "new_param2_value": 1,
                    "new_value2": 4,
                    "param4": 1,
                    "param_value2": 1,
                    "parameter2": 4,
                    "parameter2_value": 1,
                    "parameter4": 1,
                    "pointer2_value": 1,
                    "value2": 12,
                    "value3": 1,
                    "value4": 1,
                    "value_2": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08002ce0"
            ],
            "code": "\nvoid set_parameters_08003370(int object_address,undefined4 unused,undefined4 value1,undefined4 value2)\n\n{\n  *(undefined4 *)(object_address + 0x6c) = value1;\n  *(undefined4 *)(object_address + 0x44) = value2;\n  return;\n}\n\n",
            "current_name": "set_parameters_08003370",
            "entrypoint": "0x08003370",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003370": "set_parameters_08003370",
                "param_1": "object_address",
                "param_2": "unused",
                "param_3": "value1",
                "param_4": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003376": {
            "additional_data": {
                "DAT_": {
                    "": 3
                },
                "FUN_08003376": {
                    "copy_data_to_buffer": 1,
                    "copy_data_to_memory": 2,
                    "process_data": 1,
                    "store_byte_if_greater": 1,
                    "store_data": 2,
                    "store_value": 1,
                    "store_value_if_greater": 1,
                    "update_array_element": 1,
                    "update_array_value": 1,
                    "update_buffer": 2,
                    "update_data": 8,
                    "update_data_if_needed": 1,
                    "update_memory": 2,
                    "update_memory_at_index": 1,
                    "update_memory_value": 1,
                    "update_value_if_greater": 1,
                    "write_data_to_memory": 1,
                    "write_value_to_buffer": 1,
                    "write_value_to_memory": 2
                },
                "PTR_": {
                    "": 3
                },
                "bVar1": {
                    "is_greater": 3,
                    "is_greater_than": 1,
                    "is_greater_than_limit": 1,
                    "is_index_valid": 8,
                    "is_new_position": 1,
                    "is_new_value_valid": 1,
                    "is_newer_index": 1,
                    "is_offset_valid": 3,
                    "is_out_of_bounds": 1,
                    "is_out_of_range": 4,
                    "is_position_valid": 1,
                    "is_update_needed": 1,
                    "is_update_required": 1,
                    "is_value_written": 1,
                    "should_copy": 1,
                    "should_write": 1
                },
                "code": {
                    "callback": 1,
                    "func_ptr": 1
                },
                "param_1": {
                    "array": 2,
                    "buffer": 2,
                    "buffer_ptr": 1,
                    "data": 10,
                    "data_buffer": 2,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "data_struct": 4,
                    "memory": 2,
                    "memory_array": 1,
                    "memory_block": 2,
                    "memory_block_ptr": 1,
                    "memory_context": 1,
                    "storage": 1
                },
                "param_2": {
                    "data": 3,
                    "data_value": 1,
                    "new_data": 2,
                    "new_element": 1,
                    "new_value": 9,
                    "value": 15
                },
                "param_3": {
                    "byte_offset": 1,
                    "copy_length": 1,
                    "index": 22,
                    "input": 1,
                    "new_value": 1,
                    "offset": 2,
                    "position": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_080033cc",
                "FUN_08003474"
            ],
            "code": "\nvoid update_data_if_needed_08003376(undefined *data,undefined value,uint index)\n\n{\n  bool is_index_valid;\n  \n  if (index < *(uint *)(data + 8)) {\n    is_index_valid = false;\n  }\n  else {\n    is_index_valid = true;\n    if (*(func_ptr **)(data + 100) != (func_ptr *)0x0) {\n      *data = 1;\n      (**(func_ptr **)(data + 100))(*(undefined4 *)(data + 0x3c));\n      if (index < *(uint *)(data + 8)) {\n        is_index_valid = false;\n      }\n      else {\n        is_index_valid = true;\n      }\n    }\n  }\n  if (!is_index_valid) {\n    *(undefined *)(*(int *)(data + 4) + index) = value;\n  }\n  return;\n}\n\n",
            "current_name": "update_data_if_needed_08003376",
            "entrypoint": "0x08003376",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003376": "update_data_if_needed_08003376",
                "bVar1": "is_index_valid",
                "code": "func_ptr",
                "param_1": "data",
                "param_2": "value",
                "param_3": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080033a8": {
            "additional_data": {
                "FUN_080033a8": {
                    "byte_copy_and_shift": 1,
                    "byte_flipping_function": 1,
                    "copy_and_shift": 1,
                    "copy_and_shift_bits": 13,
                    "copy_and_shift_bytes": 8,
                    "copy_and_shift_values": 1,
                    "copy_bytes_with_modification": 1,
                    "copy_bytes_with_shift": 1,
                    "copy_data_with_shift": 1,
                    "copy_shift_bits": 1,
                    "copy_shift_bytes": 1,
                    "copy_with_shift": 1
                },
                "bVar1": {
                    "byte_value": 6,
                    "current_byte": 23,
                    "first_byte": 1
                },
                "iVar2": {
                    "current_index": 2,
                    "dest_index": 13,
                    "dest_offset": 1,
                    "destination_index": 8,
                    "dst_index": 2,
                    "i": 1,
                    "index": 1,
                    "output_index": 2
                },
                "param_1": {
                    "arg1": 1,
                    "base_address": 1,
                    "data": 1,
                    "dest": 2,
                    "dest_pointer": 1,
                    "destination": 4,
                    "dst": 1,
                    "input": 2,
                    "input_pointer": 1,
                    "p_src": 1,
                    "param": 1,
                    "param1": 3,
                    "source": 2,
                    "source_array": 2,
                    "src": 1,
                    "src_byte": 1,
                    "src_offset": 1,
                    "undefined": 3,
                    "undefined_parameter": 1,
                    "unused_param": 1
                },
                "param_2": {
                    "array_size": 1,
                    "byte_count": 2,
                    "count": 2,
                    "data_size": 1,
                    "input_size": 1,
                    "length": 10,
                    "num_bytes": 5,
                    "num_elements": 1,
                    "size": 5,
                    "src_length": 1,
                    "src_size": 2
                },
                "param_3": {
                    "array": 2,
                    "array_address": 1,
                    "buffer": 1,
                    "data_array": 1,
                    "dest": 2,
                    "dest_addr": 1,
                    "destination": 2,
                    "destination_array": 2,
                    "p_dest": 1,
                    "source": 6,
                    "source_address": 2,
                    "source_array": 4,
                    "source_ptr": 3,
                    "src": 1,
                    "src_pointer": 1
                },
                "uVar3": {
                    "byte_index": 1,
                    "counter": 1,
                    "current_byte_index": 1,
                    "current_offset": 1,
                    "i": 1,
                    "index": 2,
                    "input_index": 1,
                    "loop_index": 1,
                    "source_index": 11,
                    "src_index": 10
                }
            },
            "called": [],
            "calling": [
                "FUN_080033cc"
            ],
            "code": "\nvoid copy_and_shift_bits_080033a8(undefined4 destination,uint length,int source)\n\n{\n  byte current_byte;\n  int dest_index;\n  uint source_index;\n  \n  dest_index = 0;\n  for (source_index = 0; source_index < length; source_index = source_index + 2) {\n    current_byte = *(byte *)(source + source_index);\n    *(byte *)(source + dest_index) = current_byte;\n    *(byte *)(source + dest_index) = *(char *)(source + source_index + 1) << 7 | current_byte;\n    dest_index = dest_index + 1;\n  }\n  return;\n}\n\n",
            "current_name": "copy_and_shift_bits_080033a8",
            "entrypoint": "0x080033a8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080033a8": "copy_and_shift_bits_080033a8",
                "bVar1": "current_byte",
                "iVar2": "dest_index",
                "param_1": "destination",
                "param_2": "length",
                "param_3": "source",
                "uVar3": "source_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080033cc": {
            "additional_data": {
                "FUN_08003376": {
                    "decode_byte_stream": 1,
                    "process_case_q": 1,
                    "reverse_and_apply": 1
                },
                "FUN_080033a8": {
                    "buffer_data_at_position": 1,
                    "process_case_y": 1,
                    "reverse_and_apply_with_offset": 1
                },
                "FUN_080033cc": {
                    "handle_data_processing": 1,
                    "process_data": 25,
                    "process_function": 1,
                    "process_input": 3,
                    "process_input_data": 1
                },
                "bufferDataAtPosition": {
                    "append_to_buffer": 1,
                    "buffer_data": 2,
                    "store_data_at_position": 1,
                    "update_buffer": 1
                },
                "cVar1": {
                    "first_char": 30,
                    "first_character": 1
                },
                "code": {
                    "callback_fn": 1,
                    "function_ptr": 1
                },
                "decodeByteStream": {
                    "decode_data": 3,
                    "decode_stream": 2
                },
                "iVar2": {
                    "byte_count": 1,
                    "decoded_len": 1,
                    "decoded_length": 9,
                    "decoded_size": 3,
                    "result": 12,
                    "result_size": 1,
                    "stream_length": 1,
                    "stream_size": 3
                },
                "param_1": {
                    "context": 1,
                    "data": 14,
                    "data_pointer": 1,
                    "data_ptr": 4,
                    "data_struct": 3,
                    "data_structure": 1,
                    "function_context": 1,
                    "input": 1,
                    "input_data": 4,
                    "input_struct": 1
                },
                "param_2": {
                    "arg1": 8,
                    "function_ptr1": 1,
                    "length": 1,
                    "param1": 6,
                    "param2": 12,
                    "param_2": 2,
                    "var1": 1
                },
                "param_3": {
                    "arg2": 8,
                    "extra_param1": 1,
                    "function_ptr2": 1,
                    "param2": 6,
                    "param3": 12,
                    "param_3": 2,
                    "var2": 1
                },
                "param_4": {
                    "arg3": 8,
                    "extra_param2": 1,
                    "param3": 6,
                    "param4": 12,
                    "param_4": 2,
                    "parameter_ptr": 1,
                    "var3": 1
                },
                "pcVar3": {
                    "buffer": 1,
                    "byte_stream": 1,
                    "char_pointer": 8,
                    "char_ptr": 8,
                    "data_pointer": 5,
                    "data_ptr": 1,
                    "first_char_pointer": 1,
                    "first_char_ptr": 1,
                    "input_string": 1,
                    "ptr_to_str": 1,
                    "str": 1,
                    "stream_data": 1,
                    "stream_ptr": 1
                }
            },
            "called": [
                "FUN_08003376",
                "FUN_080033a8"
            ],
            "calling": [
                "FUN_08003474"
            ],
            "code": "\nvoid process_input_data_080033cc(int data,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  char first_char;\n  int result;\n  char *char_pointer;\n  \n  char_pointer = *(char **)(data + 4);\n  first_char = *char_pointer;\n  if (first_char == 'q') {\n    if (*(int *)(data + 0x68) != 0) {\n      result = decode_data(data,*(int *)(data + 0x18) + -1,char_pointer + 1,char_pointer,param4);\n      buffer_data(data,0,result + 1);\n      (**(function_ptr **)(data + 0x68))(*(undefined4 *)(data + 0x40),*(int *)(data + 4) + 1);\n      return;\n    }\n  }\n  else if (first_char == 'y') {\n    if (*(function_ptr **)(data + 0x70) != (function_ptr *)0x0) {\n      if (*(uint *)(data + 0x18) < 3) {\n        (**(function_ptr **)(data + 0x70))(*(undefined4 *)(data + 0x34),0,0);\n        return;\n      }\n      result = decode_data(data,*(uint *)(data + 0x18) - 3,char_pointer + 3,char_pointer,param4);\n      buffer_data(data,0,result + 3);\n      result = *(int *)(data + 4);\n      (**(function_ptr **)(data + 0x70))\n                (*(undefined4 *)(data + 0x34),*(undefined *)(result + 1),*(undefined *)(result + 2)\n                 ,result + 3);\n      return;\n    }\n  }\n  else if (*(function_ptr **)(data + 0x6c) != (function_ptr *)0x0) {\n    (**(function_ptr **)(data + 0x6c))\n              (*(undefined4 *)(data + 0x44),first_char,*(int *)(data + 0x18) + -1,char_pointer + 1);\n  }\n  return;\n}\n\n",
            "current_name": "process_input_data_080033cc",
            "entrypoint": "0x080033cc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080033cc": "process_input_data_080033cc",
                "bufferDataAtPosition": "buffer_data",
                "cVar1": "first_char",
                "code": "function_ptr",
                "decodeByteStream": "decode_data",
                "iVar2": "result",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "pcVar3": "char_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800344a": {
            "additional_data": {
                "FUN_0800344a": {
                    "clear_function_data": 1,
                    "clear_memory": 1,
                    "initialize_data": 16,
                    "initialize_data_structure": 6,
                    "initialize_data_structures": 2,
                    "initialize_function": 2,
                    "initialize_memory": 2,
                    "initialize_parameters": 1
                },
                "param_1": {
                    "base_address": 1,
                    "data": 2,
                    "data_address": 2,
                    "data_pointer": 5,
                    "data_ptr": 3,
                    "data_struct": 3,
                    "data_struct_ptr": 1,
                    "data_structure": 6,
                    "data_structure_pointer": 2,
                    "function_data": 1,
                    "function_data_ptr": 1,
                    "function_param": 1,
                    "memory_address": 1,
                    "memory_start": 1,
                    "parameters": 1
                },
                "uVar1": {
                    "counter": 7,
                    "i": 1,
                    "index": 23
                }
            },
            "called": [],
            "calling": [
                "FUN_08003474"
            ],
            "code": "\nvoid initialize_data_structure_0800344a(int data_structure)\n\n{\n  uint index;\n  \n  *(undefined4 *)(data_structure + 0x10) = 0;\n  *(undefined *)(data_structure + 0xc) = 0;\n  *(undefined *)(data_structure + 0xd) = 0;\n  for (index = 0; index < *(uint *)(data_structure + 8); index = index + 1) {\n    *(undefined *)(*(int *)(data_structure + 4) + index) = 0;\n  }\n  *(undefined *)(data_structure + 0x14) = 0;\n  *(undefined4 *)(data_structure + 0x18) = 0;\n  if (*(code **)(data_structure + 0x78) != (code *)0x0) {\n    (**(code **)(data_structure + 0x78))(*(undefined4 *)(data_structure + 0x48));\n  }\n  return;\n}\n\n",
            "current_name": "initialize_data_structure_0800344a",
            "entrypoint": "0x0800344a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800344a": "initialize_data_structure_0800344a",
                "param_1": "data_structure",
                "uVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003474": {
            "additional_data": {
                "0x10": {
                    "event_level": 1
                },
                "0x14": {
                    "sysex_event": 1
                },
                "0x18": {
                    "event_count": 1
                },
                "0xc": {
                    "last_event": 1
                },
                "0xd": {
                    "note_number": 1
                },
                "FUN_08003376": {
                    "call_midi_handler": 1,
                    "execute_data_callback": 1,
                    "execute_note_on": 1,
                    "handle_message": 1,
                    "handle_note_off_message": 1,
                    "handle_note_on": 1,
                    "perform_command2": 1,
                    "process_data": 1,
                    "process_note_on_message": 1,
                    "system_reset": 2,
                    "transmit_midi_event": 1
                },
                "FUN_080033cc": {
                    "call_with_four_params": 1,
                    "execute_code_callback": 1,
                    "execute_note_off": 1,
                    "handle_key_release": 1,
                    "handle_note_on": 1,
                    "handle_note_on_event": 1,
                    "handle_note_on_message": 1,
                    "perform_command1": 1,
                    "process_note_on": 1,
                    "process_note_on_event": 1,
                    "process_sys_ex_message": 1,
                    "system_reset": 1
                },
                "FUN_0800344a": {
                    "buffer_data_at_position": 9,
                    "decrement_counter": 2,
                    "handle_key_pressure": 1,
                    "process_buffered_data": 1
                },
                "FUN_08003474": {
                    "process_midi_command": 1,
                    "process_midi_event": 20,
                    "process_midi_message": 9
                },
                "bVar1": {
                    "byte_flag": 1,
                    "byte_value": 2,
                    "byte_var": 1,
                    "command": 3,
                    "command_byte": 1,
                    "event_flag": 1,
                    "event_type": 2,
                    "first_byte": 1,
                    "message_type": 4,
                    "midi_status": 1,
                    "status": 2,
                    "status_byte": 2,
                    "sub_command": 1,
                    "sub_event_code": 1,
                    "sub_event_type": 1
                },
                "bufferDataAtPosition": {
                    "buffer_data": 1,
                    "buffer_data_at_position": 1,
                    "buffer_event": 1,
                    "handle_buffer_data_at_position": 1,
                    "send_event_data": 1,
                    "send_midi_event": 1,
                    "store_data": 2,
                    "store_data_at_position": 7,
                    "store_data_in_buffer": 1,
                    "store_midi_byte": 1,
                    "update_buffer_data": 1
                },
                "code": {
                    "callback_function": 1,
                    "function_ptr": 1
                },
                "param_1": {
                    "command_data": 1,
                    "data": 1,
                    "device": 1,
                    "event": 1,
                    "event_data": 15,
                    "message": 3,
                    "message_ptr": 2,
                    "midi_data": 4,
                    "midi_device_info": 1,
                    "param1": 1
                },
                "param_2": {
                    "command": 1,
                    "data_byte": 1,
                    "event": 1,
                    "event_code": 6,
                    "event_data": 2,
                    "event_type": 8,
                    "message_byte": 1,
                    "message_value": 1,
                    "midi_byte": 2,
                    "midi_event_data": 1,
                    "param2": 1,
                    "param_2": 1,
                    "status": 3,
                    "status_byte": 1
                },
                "param_3": {
                    "data1": 1,
                    "param3": 1,
                    "param_3": 2
                },
                "param_4": {
                    "data2": 1,
                    "param3": 1,
                    "param_4": 2
                },
                "processSysexMessage": {
                    "execute_sysex_message": 1,
                    "handle_sysex_message": 12,
                    "process_sysex": 1,
                    "process_sysex_message": 2,
                    "process_system_exclusive_message": 2
                },
                "systemReset": {
                    "handle_system_reset": 1,
                    "perform_system_reset": 7,
                    "reset_system": 6
                }
            },
            "called": [
                "FUN_0800344a",
                "FUN_080033cc",
                "FUN_08003376"
            ],
            "calling": [
                "FUN_08002ed2"
            ],
            "code": "\nvoid process_midi_event_08003474(int event_data,uint event_type)\n\n{\n  byte message_type;\n  \n  if (*(char *)(event_data + 0x14) != '\\0') {\n    if (event_type != 0xf7) {\n      store_data_at_position(event_data,event_type,*(undefined4 *)(event_data + 0x18));\n      *(int *)(event_data + 0x18) = *(int *)(event_data + 0x18) + 1;\n      return;\n    }\n    *(undefined *)(event_data + 0x14) = 0;\n    handle_sysex_message();\n    return;\n  }\n  if ((*(int *)(event_data + 0x10) == 0) || (0x7f < (int)event_type)) {\n    if ((int)event_type < 0xf0) {\n      *(byte *)(event_data + 0xd) = (byte)event_type & 0xf;\n      event_type = event_type & 0xf0;\n    }\n    if (event_type == 0xf0) {\n      *(undefined *)(event_data + 0x14) = 1;\n      *(undefined4 *)(event_data + 0x18) = 0;\n      return;\n    }\n    if (event_type < 0xf1) {\n      if (event_type != 0xc0) {\n        if (event_type < 0xc1) {\n          if (event_type != 0x90) {\n            return;\n          }\n        }\n        else {\n          if (event_type == 0xd0) goto LAB_0800359c;\n          if (event_type != 0xe0) {\n            return;\n          }\n        }\nLAB_08003586:\n        *(undefined4 *)(event_data + 0x10) = 2;\n        *(char *)(event_data + 0xc) = (char)event_type;\n        return;\n      }\nLAB_0800359c:\n      *(undefined4 *)(event_data + 0x10) = 1;\n      *(char *)(event_data + 0xc) = (char)event_type;\n      return;\n    }\n    if (event_type != 0xf9) {\n      if (0xf9 < event_type) {\n        if (event_type == 0xff) {\n          perform_system_reset(event_data);\n          return;\n        }\n        return;\n      }\n      if (1 < event_type - 0xf4) {\n        return;\n      }\n      goto LAB_08003586;\n    }\n    if (*(function_ptr **)(event_data + 0x74) != (function_ptr *)0x0) {\n      (**(function_ptr **)(event_data + 0x74))(*(undefined4 *)(event_data + 0x38));\n    }\n  }\n  else {\n    *(int *)(event_data + 0x10) = *(int *)(event_data + 0x10) + -1;\n    store_data_at_position();\n    if ((*(int *)(event_data + 0x10) == 0) && (message_type = *(byte *)(event_data + 0xc), message_type != 0)) {\n      if (message_type == 0xd0) {\n        if (*(function_ptr **)(event_data + 0x58) != (function_ptr *)0x0) {\n          (**(function_ptr **)(event_data + 0x58))\n                    (*(undefined4 *)(event_data + 0x28),*(undefined *)(event_data + 0xd),\n                     **(undefined **)(event_data + 4));\n        }\n      }\n      else if (message_type < 0xd1) {\n        if (message_type == 0x90) {\n          if (*(function_ptr **)(event_data + 0x50) != (function_ptr *)0x0) {\n            (**(function_ptr **)(event_data + 0x50))\n                      (*(undefined4 *)(event_data + 0x20),*(undefined *)(event_data + 0xd),\n                       (uint)(*(byte **)(event_data + 4))[1] + (uint)**(byte **)(event_data + 4) * 0x80);\n          }\n        }\n        else if ((message_type == 0xc0) && (*(function_ptr **)(event_data + 0x54) != (function_ptr *)0x0)) {\n          (**(function_ptr **)(event_data + 0x54))\n                    (*(undefined4 *)(event_data + 0x24),*(undefined *)(event_data + 0xd),\n                     **(undefined **)(event_data + 4));\n        }\n      }\n      else if (message_type == 0xf4) {\n        if (*(function_ptr **)(event_data + 0x5c) != (function_ptr *)0x0) {\n          (**(function_ptr **)(event_data + 0x5c))\n                    (*(undefined4 *)(event_data + 0x2c),(*(undefined **)(event_data + 4))[1],\n                     **(undefined **)(event_data + 4));\n        }\n      }\n      else if (message_type == 0xf5) {\n        if (*(function_ptr **)(event_data + 0x60) != (function_ptr *)0x0) {\n          (**(function_ptr **)(event_data + 0x60))\n                    (*(undefined4 *)(event_data + 0x30),(*(undefined **)(event_data + 4))[1],\n                     **(undefined **)(event_data + 4));\n        }\n      }\n      else if ((message_type == 0xe0) && (*(function_ptr **)(event_data + 0x4c) != (function_ptr *)0x0)) {\n        (**(function_ptr **)(event_data + 0x4c))\n                  (*(undefined4 *)(event_data + 0x1c),*(undefined *)(event_data + 0xd),\n                   (uint)(*(byte **)(event_data + 4))[1] + (uint)**(byte **)(event_data + 4) * 0x80);\n      }\n      *(undefined *)(event_data + 0xc) = 0;\n      return;\n    }\n  }\n  return;\n}\n\n",
            "current_name": "process_midi_event_08003474",
            "entrypoint": "0x08003474",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003474": "process_midi_event_08003474",
                "bVar1": "message_type",
                "bufferDataAtPosition": "store_data_at_position",
                "code": "function_ptr",
                "param_1": "event_data",
                "param_2": "event_type",
                "processSysexMessage": "handle_sysex_message",
                "systemReset": "perform_system_reset"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080035b8": {
            "additional_data": {
                "FUN_080035b8": {
                    "configure_and_initialize_hardware": 1,
                    "configure_clock": 3,
                    "configure_clocks": 2,
                    "configure_hardware": 1,
                    "configure_system_clock": 2,
                    "init_system_clock": 1,
                    "initialize_clock": 1,
                    "initialize_clocks": 1,
                    "initialize_hardware": 5,
                    "initialize_hclk": 1,
                    "initialize_system": 12,
                    "initialize_system_clock": 1
                },
                "FUN_08003f30": {
                    "error_handler": 1
                },
                "FUN_08003fd8": {
                    "rcc_periph_clk_config": 1
                },
                "FUN_08004024": {
                    "systick_clk_source_config": 1
                },
                "FUN_08005460": {
                    "nvic_set_priority": 1
                },
                "FUN_080058ac": {
                    "rcc_osc_config": 1
                },
                "FUN_08005a1c": {
                    "error_handler": 1
                },
                "FUN_08005aa4": {
                    "get_hclk_freq": 1
                },
                "FUN_080073e8": {
                    "systick_config": 1
                },
                "HAL_NVIC_SetPriority": {
                    "set_interrupt_priority": 1,
                    "set_priority": 4,
                    "set_sys_tick_interrupt_priority": 1
                },
                "HAL_RCCEx_PeriphCLKConfig": {
                    "configure_periph_clock": 3,
                    "configure_peripheral_clk": 1,
                    "configure_peripheral_clock": 2
                },
                "HAL_RCC_ClockConfig": {
                    "configure_clock": 6
                },
                "HAL_RCC_GetHCLKFreq": {
                    "get_hclk_freq": 2,
                    "get_hclk_frequency": 4
                },
                "HAL_RCC_OscConfig": {
                    "configure_oscillator": 5,
                    "configure_oscillators": 1
                },
                "HAL_SYSTICK_CLKSourceConfig": {
                    "configure_sys_tick_clk_source": 1,
                    "configure_sys_tick_clock_source": 5
                },
                "HAL_SYSTICK_Config": {
                    "configure_sys_tick": 6
                },
                "_Error_Handler": {
                    "error_handler": 1,
                    "handle_error": 3
                },
                "iVar1": {
                    "error": 1,
                    "error_check_result": 1,
                    "result": 10
                },
                "local_10": {
                    "apb2_config": 1,
                    "clock_config_result": 1,
                    "clock_divider": 1,
                    "clock_hse_prescaler": 1,
                    "clock_source": 1,
                    "config_value4": 1,
                    "fourth_config": 1,
                    "hclk_freq": 1,
                    "i2c_clock": 1,
                    "oscillator_voltage_scale": 1,
                    "param_9": 1,
                    "pclk2_config": 1,
                    "periph_clock_config_params": 1,
                    "periph_config_source": 1,
                    "peripheral_clock_config": 2,
                    "peripheral_clock_config_params": 1,
                    "pll_multiplier": 2,
                    "pll_source": 3,
                    "pllxtpre": 1,
                    "system_tick_config_param": 1,
                    "systick_config1": 1,
                    "timer_prescaler_config": 1
                },
                "local_14": {
                    "apb1_config": 1,
                    "clock_config": 1,
                    "clock_config_params": 1,
                    "clock_prescaler": 1,
                    "clock_priority": 1,
                    "clock_source_status": 1,
                    "config_value3": 1,
                    "hclk_freq": 1,
                    "oscillator_speed": 1,
                    "param_8": 1,
                    "pclk1_config": 1,
                    "periph_clock_config": 1,
                    "periph_clock_config_params": 1,
                    "periph_config_params": 1,
                    "peripheral_clock_config": 1,
                    "peripheral_config": 2,
                    "pll_multiplier": 1,
                    "pll_source": 2,
                    "plln_value": 1,
                    "pllsource": 1,
                    "system_clock_source": 1,
                    "third_config": 1,
                    "timer_config": 1,
                    "usart_clock": 1,
                    "voltage_range": 1
                },
                "local_1c": {
                    "ahb_config": 1,
                    "clock_config": 3,
                    "clock_config_source": 2,
                    "clock_freq": 1,
                    "clock_prescaler": 2,
                    "clock_source": 1,
                    "clock_source_config": 1,
                    "clock_speed": 1,
                    "clock_type": 1,
                    "config_value2": 1,
                    "external_clock_divider": 1,
                    "external_oscillator_state": 1,
                    "flash_latency": 1,
                    "hclk_config": 1,
                    "oscillator_drive": 1,
                    "oscillator_type": 1,
                    "param_7": 1,
                    "periph_config": 1,
                    "peripheral_clk_config": 1,
                    "peripheral_clock_config": 1,
                    "pll_order": 1,
                    "pllmul": 1,
                    "second_config": 1,
                    "spi_clock": 1,
                    "sys_tick_clock_source": 1
                },
                "local_20": {
                    "clock_config": 6,
                    "clock_config_param": 2,
                    "clock_config_params": 1,
                    "clock_source": 5,
                    "clock_source_config": 1,
                    "config_value1": 1,
                    "external_oscillator_type": 1,
                    "first_config": 1,
                    "gpio_config": 1,
                    "hse_divider": 1,
                    "hsi_value": 1,
                    "oscillator_source": 1,
                    "param_6": 1,
                    "processor_config": 1,
                    "source_clk_config": 1,
                    "sys_tick_reload_value": 1,
                    "sysclk_config": 2,
                    "system_clock_config": 2,
                    "wait_states": 1
                },
                "local_30": {
                    "config_array": 1,
                    "osc_config": 7,
                    "osc_config_array": 1,
                    "osc_config_params": 2,
                    "oscill_config_params": 1,
                    "oscillator_config": 15,
                    "oscillator_config_params": 1
                },
                "local_34": {
                    "apb1_divider": 1,
                    "apb1_timer_prescaler": 1,
                    "apb2_divider": 1,
                    "apb2_prescaler": 2,
                    "apb2prescaler": 1,
                    "apb_divider": 1,
                    "apb_prescaler": 1,
                    "clock_config_param4": 1,
                    "clock_config_pll_source": 1,
                    "clock_config_value5": 1,
                    "clock_source": 1,
                    "clock_usb_clock": 1,
                    "flash_latency": 1,
                    "param_5": 1,
                    "pclk1_config2": 1,
                    "pclk2": 1,
                    "pclk_divider": 1,
                    "pdiv": 1,
                    "priority_group": 1,
                    "rtc_clock_source_config": 1,
                    "systick_config": 1,
                    "usb_clock_config": 1
                },
                "local_38": {
                    "ahb_divider": 2,
                    "ahb_prescaler": 3,
                    "apb1_divider": 1,
                    "apb1_prescaler": 3,
                    "apb1prescaler": 1,
                    "apb2_clock_config": 1,
                    "apb2_divider": 1,
                    "apb2_prescaler": 1,
                    "clock_config_param3": 1,
                    "clock_config_pll_mul": 1,
                    "clock_config_value4": 1,
                    "clock_divider": 1,
                    "clock_filter": 1,
                    "clock_pll": 1,
                    "cortex_config": 1,
                    "hclk_config2": 1,
                    "hclk_divider": 1,
                    "hdiv": 1,
                    "i2c_clock_config": 1,
                    "param_4": 1,
                    "pclk1": 1,
                    "rcc_periph_cfg": 1,
                    "sys_tick_priority": 1
                },
                "local_3c": {
                    "ahb_config_source": 1,
                    "ahb_divider": 1,
                    "ahb_prescaler": 2,
                    "apb1_clock_config": 1,
                    "apb1_divider": 1,
                    "apb1_prescaler": 1,
                    "clock_config_flash_latency": 1,
                    "clock_config_param2": 1,
                    "clock_config_value3": 1,
                    "clock_divider": 1,
                    "clock_source": 2,
                    "config_flag": 1,
                    "flitf_clk_init_struct": 1,
                    "hclk": 1,
                    "hclk_freq": 1,
                    "param_3": 1,
                    "pll_div": 1,
                    "pll_divider": 1,
                    "pll_mul": 1,
                    "spi_clock_config": 1,
                    "sysclk_source": 1,
                    "usb_prescaler": 1
                },
                "local_40": {
                    "ahb_divider": 1,
                    "ahb_prescaler": 1,
                    "apb_prescaler": 1,
                    "bypass_clock": 1,
                    "clk_init_status": 1,
                    "clock_config_param1": 1,
                    "clock_config_source": 1,
                    "clock_config_value2": 1,
                    "clock_divider": 1,
                    "clock_prescaler": 1,
                    "clock_speed": 1,
                    "cpu_clock_config": 1,
                    "flash_latency": 2,
                    "p_clk_init_struct": 1,
                    "param_2": 1,
                    "pclk_config_source": 1,
                    "pll_mul": 1,
                    "pll_multiplier": 1,
                    "pll_source": 1,
                    "pll_state": 1,
                    "rcc_clk_init_struct": 1,
                    "rcc_osc_cfg": 1,
                    "sys_clock_source": 2,
                    "sysclk": 1,
                    "sysclk_source": 1,
                    "sysclk_source_config": 1,
                    "uart_clock_config": 1
                },
                "local_44": {
                    "ahb_config": 1,
                    "clock_config": 3,
                    "clock_config_params": 2,
                    "clock_config_params2": 1,
                    "clock_config_value1": 1,
                    "clock_periph": 1,
                    "clock_prescaler": 1,
                    "clock_source": 3,
                    "clock_source_config": 3,
                    "flas_clock": 1,
                    "internal_clock": 1,
                    "pll_config": 1,
                    "pll_config_params": 1,
                    "pll_source": 1,
                    "pwr_clock_config": 1,
                    "rcc_clk_init_struct": 1,
                    "rcc_clock_cfg": 1,
                    "rcc_clock_config": 1,
                    "rcc_clock_init": 1,
                    "rcc_clock_init_struct": 1,
                    "rcc_osc_init_struct": 1,
                    "sys_clock_config_params": 1,
                    "sysclk_divider": 1
                },
                "local_4c": {
                    "clock_frequency": 1,
                    "error": 1,
                    "external_clock_config": 1,
                    "external_oscillator": 1,
                    "i2s_clock_config": 1,
                    "pal_cfg": 1,
                    "param_1": 1,
                    "periph_clk_config": 1,
                    "periph_clk_config_periph": 1,
                    "periph_clock_config_periph": 1,
                    "periph_clock_device": 1,
                    "periph_config_value": 1,
                    "peripheral_clock_config": 2,
                    "peripheral_clock_config_flag": 1,
                    "peripheral_clock_config_param1": 1,
                    "peripheral_clock_config_params3": 1,
                    "peripheral_clock_source": 1,
                    "peripheral_clock_source_config": 1,
                    "pll_source": 1,
                    "rcc_config": 1,
                    "rcc_periph_clk_init_struct": 1,
                    "rcc_periph_configuration": 1,
                    "uart_clock_divider": 1,
                    "usart_clock_config": 2
                },
                "local_54": {
                    "error_codes": 1,
                    "external_clock": 1,
                    "peri_clock_config": 1,
                    "periph_clk_config": 2,
                    "periph_clk_config_params": 1,
                    "periph_clk_init_struct": 2,
                    "periph_clock_config": 3,
                    "periph_clock_config_array": 1,
                    "periph_clock_config_params_ex": 1,
                    "periph_config_array": 1,
                    "peripheral_clk_config2": 1,
                    "peripheral_clock_config": 3,
                    "peripheral_clock_config_ex": 1,
                    "peripheral_clock_config_params": 1,
                    "peripheral_clock_config_params2": 1,
                    "peripheral_config": 1,
                    "pll_config2": 1,
                    "pll_i2s_config": 1,
                    "rcc_periph_clk_cfg": 1,
                    "rcc_periph_clk_init_struct": 1,
                    "rcc_periph_clock_config_params": 1
                },
                "local_c": {
                    "apb1_clock": 1,
                    "clock_config": 2,
                    "clock_source": 1,
                    "clock_value": 1,
                    "config_value5": 1,
                    "default_clock_value": 1,
                    "fifth_config": 1,
                    "flash_latency": 1,
                    "hclk_frequency": 1,
                    "oscillator_timeout": 1,
                    "oscillator_type": 1,
                    "param_10": 1,
                    "periph_config_frequency": 1,
                    "pll_config": 1,
                    "pll_divider": 1,
                    "pll_mul": 1,
                    "pllm": 1,
                    "rtc_clock": 1,
                    "rtc_config": 1,
                    "sys_tick_config": 1,
                    "sys_tick_config_flag": 1,
                    "system_clock_frequency": 1,
                    "system_tick_config_clock_source": 1,
                    "systick_clock_source": 1,
                    "systick_config2": 1,
                    "timer_clock_config": 1
                },
                "param_1": {
                    "hclk_freq": 1,
                    "parameter_one": 1
                },
                "param_2": {
                    "parameter_two": 1,
                    "priority": 1
                },
                "param_3": {
                    "clk_config": 1,
                    "parameter_three": 1
                },
                "uVar2": {
                    "frequency": 1,
                    "hclk": 1,
                    "hclk_freq": 6,
                    "hclk_frequency": 1,
                    "hclk_frequency_divided": 1,
                    "sys_tick_clk_freq": 1,
                    "system_clock_frequency": 1
                }
            },
            "called": [
                "FUN_08005aa4",
                "FUN_08005a1c",
                "FUN_080073e8",
                "FUN_08004024",
                "FUN_08005460",
                "FUN_080058ac",
                "FUN_08003fd8",
                "FUN_08003f30"
            ],
            "calling": [
                "FUN_080072fa"
            ],
            "code": "\nvoid initialize_system_clock_080035b8(void)\n\n{\n  int result;\n  uint hclk_freq;\n  undefined4 peripheral_clock_config [2];\n  undefined4 peripheral_clock_config;\n  undefined4 clock_config;\n  undefined4 flash_latency;\n  undefined4 ahb_prescaler;\n  undefined4 ahb_prescaler;\n  undefined4 apb2_prescaler;\n  undefined4 oscillator_config [4];\n  undefined4 clock_config;\n  undefined4 clock_config;\n  undefined4 peripheral_config;\n  undefined4 pll_source;\n  undefined4 clock_config;\n  \n  oscillator_config[0] = 2;\n  clock_config = 1;\n  clock_config = 0x10;\n  peripheral_config = 2;\n  pll_source = 0;\n  clock_config = 0x380000;\n  result = configure_oscillator(oscillator_config);\n  if (result != 0) {\n    handle_error(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                   ,0x88);\n  }\n  clock_config = 0xf;\n  flash_latency = 2;\n  ahb_prescaler = 0;\n  ahb_prescaler = 0x400;\n  apb2_prescaler = 0;\n  result = configure_clock(&clock_config);\n  if (result != 0) {\n    handle_error(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                   ,0x95);\n  }\n  peripheral_clock_config[0] = 2;\n  peripheral_clock_config = 0x8000;\n  result = configure_periph_clock(peripheral_clock_config);\n  if (result != 0) {\n    handle_error(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                   ,0x9c);\n  }\n  hclk_freq = get_hclk_frequency();\n  configure_sys_tick(hclk_freq / 1000);\n  configure_sys_tick_clock_source(4);\n  set_priority(0xffffffff,0);\n  return;\n}\n\n",
            "current_name": "initialize_system_clock_080035b8",
            "entrypoint": "0x080035b8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080035b8": "initialize_system_clock_080035b8",
                "HAL_NVIC_SetPriority": "set_priority",
                "HAL_RCCEx_PeriphCLKConfig": "configure_periph_clock",
                "HAL_RCC_ClockConfig": "configure_clock",
                "HAL_RCC_GetHCLKFreq": "get_hclk_frequency",
                "HAL_RCC_OscConfig": "configure_oscillator",
                "HAL_SYSTICK_CLKSourceConfig": "configure_sys_tick_clock_source",
                "HAL_SYSTICK_Config": "configure_sys_tick",
                "_Error_Handler": "handle_error",
                "iVar1": "result",
                "local_10": "pll_source",
                "local_14": "peripheral_config",
                "local_1c": "clock_config",
                "local_20": "clock_config",
                "local_30": "oscillator_config",
                "local_34": "apb2_prescaler",
                "local_38": "ahb_prescaler",
                "local_3c": "ahb_prescaler",
                "local_40": "flash_latency",
                "local_44": "clock_config",
                "local_4c": "peripheral_clock_config",
                "local_54": "peripheral_clock_config",
                "local_c": "clock_config",
                "uVar2": "hclk_freq"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003658": {
            "additional_data": {
                "FUN_08003658": {
                    "initialize_and_call_main": 1,
                    "initialize_data": 1,
                    "initialize_main_function": 1,
                    "initialize_memory_and_call_main": 2,
                    "initialize_program": 8,
                    "initialize_system": 18
                },
                "FUN_080073ec": {
                    "clear_memory": 4
                },
                "FUN_08008f1c": {
                    "activate_system": 1,
                    "initialize_library": 2,
                    "initialize_system": 1
                },
                "FUN_08009148": {
                    "initialize_memory": 3,
                    "initialize_memory_values": 1
                },
                "SystemInit": {
                    "initialize_system": 1
                },
                "UNRECOVERED_JUMPTABLE": {
                    "jmp_table": 1,
                    "jump_table": 17,
                    "jumptable": 8,
                    "unrecovered_jump_table": 1
                },
                "__libc_init_array": {
                    "initialize_clibrary": 1
                },
                "iVar1": {
                    "counter": 2,
                    "i": 2,
                    "index": 20,
                    "iterator": 1,
                    "offset": 2
                },
                "main": {
                    "execute_main": 1
                },
                "puVar2": {
                    "data_ptr": 2,
                    "pointer": 3,
                    "pointer_var": 1,
                    "ptr": 20,
                    "ptr_data": 1
                }
            },
            "called": [
                "FUN_08009148",
                "FUN_080073ec",
                "FUN_08008f1c"
            ],
            "calling": [],
            "code": "\nvoid initialize_system_08003658(void)\n\n{\n  int index;\n  undefined4 *ptr;\n  code *jump_table;\n  \n  for (index = 0; (undefined4 *)(index + 0x20000000) < &DAT_200000f4; index = index + 4) {\n    *(undefined4 *)(index + 0x20000000) = *(undefined4 *)(index + 0x800ac18);\n  }\n  for (ptr = &DAT_200000f4; ptr < &DAT_20000a3c; ptr = ptr + 1) {\n    *ptr = 0;\n  }\n  initialize_system_08003658();\n  initialize_clibrary();\n  jump_table = (code *)0x800368a;\n  execute_main();\n                    /* WARNING: Could not recover jumptable at 0x0800368a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)();\n  return;\n}\n\n",
            "current_name": "initialize_system_08003658",
            "entrypoint": "0x08003658",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003658": "initialize_system_08003658",
                "SystemInit": "initialize_system",
                "UNRECOVERED_JUMPTABLE": "jump_table",
                "__libc_init_array": "initialize_clibrary",
                "iVar1": "index",
                "main": "execute_main",
                "puVar2": "ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080036a2": {
            "additional_data": {
                "FUN_080036a2": {
                    "initialize_hardware": 8,
                    "initialize_hardware_config": 9,
                    "initialize_hardware_configuration": 13,
                    "initialize_hw_config": 1
                },
                "FUN_080072fa": {
                    "configure_hardware": 5,
                    "configure_hw": 1,
                    "hardware_configuration_subroutine": 1,
                    "initialize_subsystem": 3,
                    "perform_additional_configuration": 4,
                    "perform_additional_processing": 1,
                    "perform_additional_setup": 8,
                    "perform_additional_tasks": 2,
                    "perform_hardware_config": 1,
                    "perform_subfunction": 1,
                    "setup_hw_configuration": 1,
                    "update_configuration": 1
                },
                "hw_config_init": {
                    "initialize_hardware": 4,
                    "initialize_hardware_configuration": 5
                }
            },
            "called": [
                "FUN_080072fa"
            ],
            "calling": [
                "FUN_08008f0e"
            ],
            "code": "\nvoid initialize_hardware_configuration_080036a2(void)\n\n{\n  initialize_hardware_configuration_080036a2();\n  return;\n}\n\n",
            "current_name": "initialize_hardware_configuration_080036a2",
            "entrypoint": "0x080036a2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080036a2": "initialize_hardware_configuration_080036a2",
                "hw_config_init": "initialize_hardware_configuration"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080036ac": {
            "additional_data": {
                "FUN_080036ac": {
                    "check_for_value": 1,
                    "check_for_value_in_array": 1,
                    "check_param_value": 1,
                    "check_parameter_value": 2,
                    "find_char_index": 7,
                    "find_character": 1,
                    "find_character_index": 14,
                    "find_element_index": 1,
                    "find_index": 1,
                    "find_matching_byte": 1,
                    "find_matching_index": 1
                },
                "param_1": {
                    "character": 12,
                    "character_code": 1,
                    "index": 1,
                    "input": 1,
                    "input_char": 4,
                    "input_character": 1,
                    "input_number": 1,
                    "input_value": 5,
                    "value": 5
                },
                "uVar1": {
                    "char_index": 2,
                    "found_index": 1,
                    "index": 26,
                    "matching_index": 1,
                    "result_index": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080022f8",
                "FUN_08001cd0",
                "FUN_08000ef8",
                "FUN_08000a64",
                "FUN_0800021a",
                "FUN_08000aec",
                "FUN_080005f8"
            ],
            "code": "\nuint find_character_index_080036ac(int character)\n\n{\n  uint index;\n  \n  if ((uint)(character << 0x18) >> 0x1c < 5) {\n    for (index = 0; (index < 0x3c && (character != (char)(&DAT_0800a908)[index])); index = index + 1)\n    {\n    }\n  }\n  else {\n    index = 0xffffffff;\n  }\n  return index;\n}\n\n",
            "current_name": "find_character_index_080036ac",
            "entrypoint": "0x080036ac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080036ac": "find_character_index_080036ac",
                "param_1": "character",
                "uVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080036d4": {
            "called": [],
            "calling": [
                "FUN_08003724"
            ],
            "code": "\nvoid FUNC_080036d4(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080036d4",
            "entrypoint": "0x080036d4",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080036d4": "FUNC_080036d4"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080036d8": {
            "additional_data": {
                "DAT_2000000c": {
                    "conversion_factor": 1,
                    "desired_frequency": 1,
                    "sys_tick_frequency": 3,
                    "sys_tick_period": 1,
                    "systick_interval": 2,
                    "systick_resolution": 1,
                    "ticks_per_millis": 1
                },
                "DAT_20000010": {
                    "current_priority": 4,
                    "current_priority_level": 1,
                    "interrupt_priority": 2,
                    "stored_priority": 1
                },
                "DAT_20000018": {
                    "sys_tick_clock": 1,
                    "sys_tick_interval": 1,
                    "sys_tick_interval_constant": 1,
                    "sys_tick_load_value": 1,
                    "sys_tick_reload_value": 2,
                    "system_clock_frequency": 1,
                    "system_tick_frequency": 1,
                    "systick_divider": 1,
                    "systick_increment": 1
                },
                "FUN_080036d8": {
                    "configure_and_set_priority": 1,
                    "configure_sys_tick": 14,
                    "configure_sys_tick_interrupt": 2,
                    "configure_sys_tick_irq_priority": 1,
                    "configure_system_tick": 2,
                    "configure_systick": 1,
                    "configure_systick_and_priority": 1,
                    "initialize_sys_tick": 3,
                    "initialize_system": 1,
                    "initialize_system_tick": 2,
                    "initialize_systick": 2,
                    "initialize_systick_timer": 1
                },
                "HAL_NVIC_SetPriority": {
                    "set_interrupt_priority": 7,
                    "set_priority": 2
                },
                "HAL_SYSTICK_Config": {
                    "configure_sys_tick": 3,
                    "configure_sys_tick_increment": 1,
                    "configure_sys_tick_interval": 2,
                    "configure_sys_tick_timer": 1,
                    "configure_systick_timer": 1,
                    "set_sys_tick_config": 1
                },
                "iVar1": {
                    "config_result": 10,
                    "config_status": 3,
                    "error_code": 1,
                    "result": 5,
                    "status": 1,
                    "systick_config_result": 6,
                    "systick_config_status": 2
                },
                "param_1": {
                    "interrupt_priority": 1,
                    "priority": 14,
                    "priority_level": 16
                }
            },
            "called": [
                "FUN_08003fd8",
                "FUN_08003f30"
            ],
            "calling": [
                "FUN_080058d2",
                "FUN_08003724"
            ],
            "code": "\nundefined4 configure_sys_tick_interrupt_080036d8(uint priority_level)\n\n{\n  int config_result;\n  \n  config_result = configure_sys_tick(DAT_20000018 / (1000 / DAT_2000000c));\n  if (config_result != 0) {\n    return 1;\n  }\n  if (0xf < priority_level) {\n    return 1;\n  }\n  set_interrupt_priority(0xffffffff,priority_level,0);\n  DAT_20000010 = priority_level;\n  return 0;\n}\n\n",
            "current_name": "configure_sys_tick_interrupt_080036d8",
            "entrypoint": "0x080036d8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080036d8": "configure_sys_tick_interrupt_080036d8",
                "HAL_NVIC_SetPriority": "set_interrupt_priority",
                "HAL_SYSTICK_Config": "configure_sys_tick",
                "iVar1": "config_result",
                "param_1": "priority_level"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003724": {
            "additional_data": {
                "FUNC_080036d4": {
                    "execute_function_no_param": 1,
                    "initialize_hal": 1,
                    "initialize_low_level_hardware": 1,
                    "initialize_nvic": 2,
                    "initialize_peripherals": 1,
                    "initialize_shared_objects": 1,
                    "initialize_tick": 8,
                    "perform_action": 1,
                    "perform_initialization": 1,
                    "reverse_bits": 1,
                    "reverse_data": 1
                },
                "FUN_080036d8": {
                    "calculate_result": 1,
                    "config_tick_module": 1,
                    "configure_hardware": 1,
                    "configure_peripheral": 1,
                    "configure_system": 1,
                    "convert_input": 1,
                    "disable_interrupts": 1,
                    "execute_function_one_param": 1,
                    "initialize_hal_tick": 1,
                    "initialize_msp": 1,
                    "initialize_nvic": 1,
                    "initialize_periph": 1,
                    "initialize_peripheral": 4,
                    "initialize_peripherals": 1,
                    "initialize_tick": 2,
                    "reverse_and_process_data": 1
                },
                "FUN_08003724": {
                    "initialize": 1,
                    "initialize_hal": 3,
                    "initialize_hal_and_nvic": 1,
                    "initialize_hal_components": 3,
                    "initialize_hardware": 17,
                    "initialize_peripheral": 1,
                    "initialize_system": 5
                },
                "FUN_08003f0c": {
                    "configure_interrupt": 4,
                    "configure_nvic": 2,
                    "configure_peripheral": 1,
                    "execute_function_one_param": 1,
                    "handle_event": 1,
                    "handle_interrupt": 1,
                    "process_data": 2,
                    "process_input": 1,
                    "process_value": 1,
                    "set_nvic_priority": 1,
                    "set_priority": 3
                },
                "HAL_InitTick": {
                    "configure_tick": 1,
                    "initialize_system_tick": 1,
                    "initialize_tick": 14
                },
                "HAL_MspInit": {
                    "initialize_msp": 11,
                    "initialize_periph": 3,
                    "initialize_peripheral": 2
                },
                "HAL_NVIC_SetPriorityGrouping": {
                    "configure_interrupt_priority": 1,
                    "set_interrupt_priority_group": 2,
                    "set_interrupt_priority_grouping": 6,
                    "set_nvic_priority_grouping": 2,
                    "set_priority_grouping": 5
                },
                "PARAM_1": {
                    "param1": 1
                },
                "_DAT_40022000": {
                    "hardware_flags": 2,
                    "status_register": 1
                },
                "param_1": {
                    "config_value": 1,
                    "data": 2,
                    "flags": 2,
                    "input": 1,
                    "param": 1,
                    "param_value": 1,
                    "priority": 2,
                    "priority_grouping": 1,
                    "priority_level": 1,
                    "tick_value": 1,
                    "value": 2
                }
            },
            "called": [
                "FUN_08003f0c",
                "FUN_080036d4",
                "FUN_080036d8"
            ],
            "calling": [
                "FUN_080072fa"
            ],
            "code": "\n\n\nundefined4 initialize_hardware_08003724(void)\n\n{\n  _DAT_40022000 = _DAT_40022000 | 0x10;\n  set_interrupt_priority_grouping(3);\n  initialize_tick(0xf);\n  initialize_msp();\n  return 0;\n}\n\n",
            "current_name": "initialize_hardware_08003724",
            "entrypoint": "0x08003724",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003724": "initialize_hardware_08003724",
                "HAL_InitTick": "initialize_tick",
                "HAL_MspInit": "initialize_msp",
                "HAL_NVIC_SetPriorityGrouping": "set_interrupt_priority_grouping"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003748": {
            "additional_data": {
                "DAT_2000000c": {
                    "current_value": 1,
                    "input": 8,
                    "input_value": 9,
                    "new_value": 2,
                    "value": 6,
                    "value_to_add": 5
                },
                "DAT_20000a34": {
                    "accumulated_sum": 1,
                    "accumulated_value": 2,
                    "current_value": 2,
                    "previous_value": 1,
                    "result": 13,
                    "sum": 10,
                    "updated_value": 2
                },
                "FUN_08003748": {
                    "accumulate_sum": 1,
                    "accumulate_value": 1,
                    "accumulate_values": 1,
                    "add_and_update": 1,
                    "add_and_update_value": 1,
                    "add_current_value_to_previous": 1,
                    "add_previous_value": 1,
                    "add_unsigned_integers": 2,
                    "add_value_to_sum": 1,
                    "add_values": 1,
                    "add_variables": 1,
                    "addition": 4,
                    "addition_and_update": 2,
                    "addition_function": 1,
                    "addition_operation": 2,
                    "addition_update": 1,
                    "calculate_sum": 3,
                    "update_data": 1,
                    "update_sum": 3,
                    "update_value": 1,
                    "update_variable": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08007246"
            ],
            "code": "\nvoid addition_operation_08003748(void)\n\n{\n  DAT_20000a34 = (uint)DAT_2000000c + DAT_20000a34;\n  return;\n}\n\n",
            "current_name": "addition_operation_08003748",
            "entrypoint": "0x08003748",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003748": "addition_operation_08003748"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003760": {
            "additional_data": {
                "DAT_20000a34": {
                    "data": 7,
                    "data_from_memory": 1,
                    "data_value": 2,
                    "global_value": 1,
                    "global_variable": 2,
                    "global_variable_value": 1,
                    "result": 2,
                    "return_value": 1,
                    "value": 1
                },
                "FUN_08003760": {
                    "get_data": 10,
                    "get_data_from_memory": 1,
                    "get_data_value": 11,
                    "get_global_value": 1,
                    "get_global_variable": 3,
                    "get_global_variable_value": 1,
                    "get_result": 1,
                    "get_return_value": 1,
                    "get_value": 1
                },
                "F_UNK_08003760": {
                    "get_data_value": 1
                },
                "return": {
                    "data": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005aa4",
                "FUN_08003e20",
                "FUN_0800376c",
                "FUN_08007e74",
                "FUN_080058d2",
                "FUN_08003a20",
                "FUN_08005460",
                "FUN_080067ac",
                "FUN_080066e8",
                "FUN_08007f0e",
                "FUN_08008500",
                "FUN_08003b8c",
                "FUN_0800723c"
            ],
            "code": "\nundefined4 get_data_value_08003760(void)\n\n{\n  data DAT_20000a34;\n}\n\n",
            "current_name": "get_data_value_08003760",
            "entrypoint": "0x08003760",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003760": "get_data_value_08003760",
                "return": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800376c": {
            "additional_data": {
                "FUN_0800376c": {
                    "calculate_clock_speed": 1,
                    "calculate_delay": 15,
                    "calculate_delay_and_initialize": 1,
                    "calculate_elapsed_time": 1,
                    "calculate_frequency": 2,
                    "calculate_function_result": 1,
                    "calculate_new_value": 1,
                    "calculate_time_elapsed": 1,
                    "calculate_time_threshold": 1,
                    "calculate_timing": 2,
                    "handle_timeout": 1,
                    "process_data": 1,
                    "process_input": 1
                },
                "iVar1": {
                    "start_tick": 11,
                    "start_time": 18,
                    "starting_time": 1,
                    "tick_start": 1
                },
                "iVar3": {
                    "condition": 2,
                    "delay": 5,
                    "delay_const": 1,
                    "delay_factor": 1,
                    "delay_multiplier": 1,
                    "delay_time": 2,
                    "elapsed_time": 1,
                    "freq_multiplier": 1,
                    "increment_value": 1,
                    "interval": 2,
                    "iteration": 2,
                    "iteration_count": 1,
                    "loop_counter": 1,
                    "multiplier": 3,
                    "tick_diff": 2,
                    "tick_difference": 2,
                    "time_delta": 1,
                    "time_difference": 1,
                    "var1": 1
                },
                "local_1c": {
                    "counter": 15,
                    "current_delay": 9,
                    "current_frequency": 1,
                    "current_speed": 1,
                    "current_time": 1,
                    "current_timing": 1,
                    "delay_count": 1,
                    "increment": 1,
                    "iteration_count": 1
                },
                "param_1": {
                    "arguments": 1,
                    "config": 4,
                    "config_data": 1,
                    "config_params": 1,
                    "data_pointer": 1,
                    "delay_params": 1,
                    "device_data": 1,
                    "frequency_data": 1,
                    "frequency_params": 1,
                    "input": 1,
                    "input_data": 1,
                    "input_params": 6,
                    "input_ptr": 1,
                    "param_array": 1,
                    "param_list": 1,
                    "parameter_array": 1,
                    "parameter_list": 1,
                    "parameters": 3,
                    "params": 2,
                    "timer_params": 1
                },
                "param_2": {
                    "max_delay": 2,
                    "threshold": 1,
                    "time_limit": 4,
                    "timeout": 24
                },
                "puVar5": {
                    "config_data": 1,
                    "config_ptr": 1,
                    "data": 3,
                    "data_pointer": 2,
                    "device_data": 1,
                    "device_state": 1,
                    "flag_array": 1,
                    "flags": 1,
                    "frequency_data_ptr": 1,
                    "frequency_param": 1,
                    "input_ptr": 1,
                    "internal_parameters": 1,
                    "param_array": 2,
                    "param_ptr": 2,
                    "param_values": 1,
                    "params": 1,
                    "pointer": 1,
                    "pointer_to_array": 1,
                    "ptr": 4,
                    "ptr_config": 1,
                    "ptr_data": 1,
                    "ptr_to_param_array": 1,
                    "timer_values": 1
                },
                "uVar2": {
                    "clock_freq": 1,
                    "clock_frequency": 2,
                    "core_clock_frequency": 1,
                    "freq": 5,
                    "periph_clk": 1,
                    "periph_clk_freq": 4,
                    "periph_clock_freq": 1,
                    "periph_freq": 13,
                    "peripheral_clock_freq": 2,
                    "peripheral_freq": 1
                },
                "uVar4": {
                    "result": 28,
                    "result_code": 1,
                    "return_value": 2
                },
                "uVar6": {
                    "adjusted_delay": 1,
                    "adjusted_time": 1,
                    "calculated_delay": 3,
                    "calculated_time": 1,
                    "calculated_value": 2,
                    "calculation": 1,
                    "calculation_result": 4,
                    "delay": 1,
                    "delay_target": 1,
                    "delay_threshold": 3,
                    "frequency": 1,
                    "multiplier": 1,
                    "new_value": 2,
                    "target_delay": 1,
                    "target_frequency": 1,
                    "target_speed": 1,
                    "target_timing": 1,
                    "time_threshold": 1,
                    "timing": 1,
                    "total_delay": 3
                }
            },
            "called": [
                "FUN_08005bb8",
                "FUN_08003760"
            ],
            "calling": [
                "FUN_08006d80"
            ],
            "code": "\nundefined4 calculate_delay_and_initialize_0800376c(uint **input_params,uint timeout)\n\n{\n  int start_time;\n  uint periph_freq;\n  int delay;\n  undefined4 result;\n  uint *ptr;\n  uint calculation_result;\n  uint counter;\n  \n  counter = 0;\n  start_time = HAL_GetTick();\n  calculation_result = DAT_20000018;\n  ptr = *input_params;\n  if ((ptr[2] & 0x100) == 0) {\n    if (((ptr[1] & 0x100) == 0) && ((ptr[0xb] & 0xf00000) == 0)) {\n      do {\n        if ((**input_params & 2) != 0) goto LAB_0800387e;\n      } while ((timeout == 0xffffffff) ||\n              ((timeout != 0 && (delay = HAL_GetTick(), (uint)(delay - start_time) <= timeout))));\n      input_params[10] = (uint *)((uint)input_params[10] | 4);\n      *(undefined *)(input_params + 9) = 0;\n      result = 3;\n    }\n    else {\n      periph_freq = HAL_RCCEx_GetPeriphCLKFreq(2);\n      ptr = *input_params;\n      if (((ptr[4] & 0x24924924) == 0) && ((ptr[3] & 0x924924) == 0)) {\n        if ((ptr[4] & 0x12492492) == 0) {\n          if ((ptr[3] & 0x492492) == 0) {\n            delay = 0x14;\n          }\n          else {\n            delay = 0x29;\n          }\n        }\n        else {\n          delay = 0x29;\n        }\n      }\n      else if (((ptr[4] & 0x12492492) == 0) && ((ptr[3] & 0x492492) == 0)) {\n        delay = 0x54;\n      }\n      else if ((ptr[4] & 0x249249) == 0) {\n        if ((ptr[3] & 0x249249) == 0) {\n          delay = 0x54;\n        }\n        else {\n          delay = 0xfc;\n        }\n      }\n      else {\n        delay = 0xfc;\n      }\n      calculation_result = (calculation_result / periph_freq) * delay;\n      for (; counter <= calculation_result && calculation_result - counter != 0; counter = counter + 1) {\n        if ((timeout != 0xffffffff) &&\n           ((timeout == 0 || (delay = HAL_GetTick(), timeout < (uint)(delay - start_time))))) {\n          input_params[10] = (uint *)((uint)input_params[10] | 4);\n          *(undefined *)(input_params + 9) = 0;\n          return 3;\n        }\n      }\nLAB_0800387e:\n      **input_params = 0xffffffed;\n      input_params[10] = (uint *)((uint)input_params[10] | 0x200);\n      if (((*input_params)[2] & 0xe0000) == 0xe0000) {\n        if (input_params[3] == (uint *)0x0) {\n          input_params[10] = (uint *)((uint)input_params[10] & 0xfffffeff);\n          if (((uint)input_params[10] & 0x1000) == 0) {\n            input_params[10] = (uint *)((uint)input_params[10] | 1);\n            result = 0;\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        result = 0;\n      }\n    }\n  }\n  else {\n    input_params[10] = (uint *)((uint)input_params[10] | 0x20);\n    *(undefined *)(input_params + 9) = 0;\n    result = 1;\n  }\n  return result;\n}\n\n",
            "current_name": "calculate_delay_and_initialize_0800376c",
            "entrypoint": "0x0800376c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800376c": "calculate_delay_and_initialize_0800376c",
                "iVar1": "start_time",
                "iVar3": "delay",
                "local_1c": "counter",
                "param_1": "input_params",
                "param_2": "timeout",
                "puVar5": "ptr",
                "uVar2": "periph_freq",
                "uVar4": "result",
                "uVar6": "calculation_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080038dc": {
            "additional_data": {
                "0x4c": {
                    "offset": 2
                },
                "FUN_080038dc": {
                    "extract_data_from_pointer": 1,
                    "extract_offset": 1,
                    "extract_offset_value": 1,
                    "get_address_offset": 1,
                    "get_offset": 4,
                    "get_offset_from_pointer": 2,
                    "get_offset_value": 17,
                    "get_pointer_offset": 1,
                    "get_ptr_value": 1,
                    "get_value_from_offset": 1,
                    "get_value_offset": 1
                },
                "param_1": {
                    "address_pointer": 1,
                    "array": 1,
                    "data_pointer": 1,
                    "input": 1,
                    "input_array": 3,
                    "input_offset": 1,
                    "input_param": 1,
                    "input_pointer": 5,
                    "offset_list": 1,
                    "offset_pointer": 9,
                    "offset_ptr": 4,
                    "pointer": 1,
                    "ptr": 1,
                    "value_pointer": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08006d80"
            ],
            "code": "\nundefined4 get_value_from_offset_080038dc(int *offset_pointer)\n\n{\n  return *(undefined4 *)(*offset_pointer + 0x4c);\n}\n\n",
            "current_name": "get_value_from_offset_080038dc",
            "entrypoint": "0x080038dc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080038dc": "get_value_from_offset_080038dc",
                "param_1": "offset_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080038e4": {
            "additional_data": {
                "DAT_20000018": {
                    "constant_value": 1
                },
                "FUN_080038e4": {
                    "handle_params": 1,
                    "set_configuration_values": 1,
                    "update_config": 8,
                    "update_config_value": 1,
                    "update_configuration": 8,
                    "update_data": 2,
                    "update_parameters": 2,
                    "update_registers": 1,
                    "update_settings": 5,
                    "update_values": 2
                },
                "local_c": {
                    "count": 5,
                    "counter": 22,
                    "delay": 3,
                    "loop_counter": 1
                },
                "param_1": {
                    "config": 10,
                    "config_array": 3,
                    "config_params": 2,
                    "config_ptr": 4,
                    "data": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "parameters": 2,
                    "register_base": 1,
                    "settings": 3,
                    "settings_info": 1,
                    "settings_ptr": 1,
                    "values": 1
                },
                "param_2": {
                    "data": 6,
                    "data_array": 1,
                    "data_ptr": 3,
                    "input_data": 1,
                    "input_values": 1,
                    "update_data": 1,
                    "value_pointer": 1,
                    "values": 15,
                    "values_array": 1,
                    "values_ptr": 1
                },
                "uRam40012408": {
                    "global_variable": 1
                },
                "uVar1": {
                    "result": 16,
                    "return_value": 8,
                    "status": 7
                },
                "uVar2": {
                    "computed_value": 1,
                    "index": 13,
                    "multiplier": 1,
                    "offset": 2,
                    "shift_value": 1,
                    "temp": 2,
                    "temp_value": 3,
                    "value": 8
                }
            },
            "called": [],
            "calling": [
                "FUN_08006d80"
            ],
            "code": "\nundefined4 update_config_value_080038e4(int *config,uint *values)\n\n{\n  undefined4 result;\n  uint index;\n  int counter;\n  \n  if (*(char *)(config + 9) == '\\x01') {\n    result = 2;\n  }\n  else {\n    *(undefined *)(config + 9) = 1;\n    index = values[1];\n    if (index < 7) {\n      index = index * 5 - 5;\n      *(uint *)(*config + 0x34) =\n           *values << (index & 0xff) | *(uint *)(*config + 0x34) & ~(0x1f << (index & 0xff));\n    }\n    else if (index < 0xd) {\n      index = index * 5 - 0x23;\n      *(uint *)(*config + 0x30) =\n           *values << (index & 0xff) | *(uint *)(*config + 0x30) & ~(0x1f << (index & 0xff));\n    }\n    else {\n      index = index * 5 - 0x41;\n      *(uint *)(*config + 0x2c) =\n           *values << (index & 0xff) | *(uint *)(*config + 0x2c) & ~(0x1f << (index & 0xff));\n    }\n    index = *values;\n    if (index < 10) {\n      *(uint *)(*config + 0x10) =\n           values[2] << (index * 3 & 0xff) |\n           *(uint *)(*config + 0x10) & ~(7 << (index * 3 & 0xff));\n    }\n    else {\n      index = index * 3 - 0x1e;\n      *(uint *)(*config + 0xc) =\n           values[2] << (index & 0xff) | *(uint *)(*config + 0xc) & ~(7 << (index & 0xff));\n    }\n    if (*values - 0x10 < 2) {\n      if (*config == 0x40012400) {\n        if ((global_variable & 0x800000) == 0) {\n          global_variable = global_variable | 0x800000;\n          if (*values == 0x10) {\n            for (counter = (DAT_20000018 / 1000000) * 10; counter != 0; counter = counter + -1) {\n            }\n            result = 0;\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        config[10] = config[10] | 0x20;\n        result = 1;\n      }\n    }\n    else {\n      result = 0;\n    }\n    *(undefined *)(config + 9) = 0;\n  }\n  return result;\n}\n\n",
            "current_name": "update_config_value_080038e4",
            "entrypoint": "0x080038e4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080038e4": "update_config_value_080038e4",
                "local_c": "counter",
                "param_1": "config",
                "param_2": "values",
                "uRam40012408": "global_variable",
                "uVar1": "result",
                "uVar2": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003a1c": {
            "additional_data": {
                "0x28": {
                    "value_offset": 1
                },
                "DAT_": {
                    "unchanged": 1
                },
                "FUN_08003a1c": {
                    "extract_value_from_pointer": 1,
                    "get_data_from_address": 1,
                    "get_memory_address": 1,
                    "get_offset_value": 14,
                    "get_pointer_from_offset": 1,
                    "get_pointer_offset": 1,
                    "get_pointer_value": 2,
                    "get_return_value": 1,
                    "get_value_at_offset": 1,
                    "get_value_from_offset": 8
                },
                "PTR_": {
                    "unchanged": 1
                },
                "PTR_28": {
                    "pointer": 1
                },
                "dataPtr": {
                    "new_variable_name": 1
                },
                "new_variable_name_1": {
                    "result": 1
                },
                "offset": {
                    "new_offset": 1
                },
                "offsetValue": {
                    "value": 1
                },
                "originalVariableName": {
                    "new_value": 1
                },
                "param_1": {
                    "address": 3,
                    "base_address": 10,
                    "input_address": 2,
                    "input_offset": 1,
                    "memory_pointer": 1,
                    "offset": 11,
                    "offset_address": 1,
                    "ptr_to_data": 1,
                    "src_offset": 1
                },
                "param_2": {
                    "new_parameter_name_2": 1,
                    "offset": 1
                },
                "param_n": {
                    "new_parameter_name_n": 1
                },
                "undefined4": {
                    "new_return_type": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08006d80"
            ],
            "code": "\nnew_return_type get_value_from_offset_08003a1c(int offset)\n\n{\n  return *(new_return_type *)(offset + 0x28);\n}\n\n",
            "current_name": "get_value_from_offset_08003a1c",
            "entrypoint": "0x08003a1c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003a1c": "get_value_from_offset_08003a1c",
                "param_1": "offset",
                "undefined4": "new_return_type"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003a20": {
            "additional_data": {
                "FUN_08003a20": {
                    "control_and_flag_update": 1,
                    "enable_device": 2,
                    "enable_function": 1,
                    "handle_device_status": 1,
                    "improve_and_check_status": 1,
                    "initialize_and_check_flags": 1,
                    "initialize_component": 1,
                    "initialize_device": 18,
                    "perform_action": 1,
                    "set_flag_and_wait": 1,
                    "toggle_flag_and_check_timeout": 1,
                    "update_control_flags": 1,
                    "verify_and_set_flag": 1
                },
                "HAL_GetTick": {
                    "get_current_tick": 1,
                    "get_current_time": 3,
                    "get_tick": 4,
                    "get_tick_count": 2,
                    "get_time_elapsed": 1
                },
                "iVar1": {
                    "current_tick": 16,
                    "current_ticks": 1,
                    "current_time": 3,
                    "start_time": 1,
                    "tick_count1": 1,
                    "tick_start": 6,
                    "tick_value": 1,
                    "ticks_difference": 1,
                    "time_elapsed": 1
                },
                "iVar3": {
                    "action": 1,
                    "component_address": 1,
                    "control_flags_ptr": 1,
                    "control_value": 1,
                    "data_address": 1,
                    "data_pointer": 1,
                    "data_value": 1,
                    "device": 3,
                    "device_address": 7,
                    "device_data": 1,
                    "device_pointer": 2,
                    "device_ptr": 3,
                    "device_value": 5,
                    "ptr_val": 1,
                    "ptr_value": 1,
                    "status_value": 1
                },
                "local_14": {
                    "count": 2,
                    "counter": 1,
                    "delay": 5,
                    "delay_count": 5,
                    "delay_counter": 3,
                    "iteration": 1,
                    "iteration_count": 2,
                    "loop_count": 2,
                    "loop_counter": 7,
                    "temp_var": 1,
                    "wait_time": 1
                },
                "param_1": {
                    "action_params": 1,
                    "component": 1,
                    "control_flags": 1,
                    "control_pointer": 1,
                    "data": 1,
                    "data_pointer": 1,
                    "device": 8,
                    "device_config": 2,
                    "device_data": 3,
                    "device_info": 1,
                    "device_memory": 1,
                    "device_params": 2,
                    "device_pointer": 1,
                    "device_ptr": 2,
                    "device_state": 1,
                    "function_params": 1,
                    "input_pointer": 1,
                    "pointer": 1,
                    "status_ptr": 1
                },
                "param_2": {
                    "config_size": 2,
                    "data": 1,
                    "data_size": 1,
                    "device_status": 1,
                    "input_param": 1,
                    "input_value": 1,
                    "param": 11,
                    "param2": 6,
                    "param_flag": 2,
                    "param_value": 2,
                    "status": 1,
                    "value": 2
                },
                "uVar2": {
                    "result": 9,
                    "return_value": 13,
                    "success": 1
                }
            },
            "called": [
                "FUN_08003760"
            ],
            "calling": [
                "FUN_08003e20",
                "FUN_08003aa0"
            ],
            "code": "\nundefined4 initialize_device_08003a20(int *device,undefined4 param)\n\n{\n  int current_tick;\n  undefined4 return_value;\n  int device_address;\n  uint loop_counter;\n  \n  device_address = *device;\n  if ((*(uint *)(device_address + 8) & 1) == 0) {\n    *(uint *)(device_address + 8) = *(uint *)(device_address + 8) | 1;\n    for (loop_counter = DAT_20000018 / 1000000; loop_counter != 0; loop_counter = loop_counter - 1) {\n    }\n    device_address = get_tick(device,param,DAT_20000018 * 0x431bde83);\n    do {\n      if ((*(uint *)(*device + 8) & 1) != 0) {\n        return 0;\n      }\n      current_tick = get_tick();\n    } while ((uint)(current_tick - device_address) < 3);\n    device[10] = device[10] | 0x10;\n    device[0xb] = device[0xb] | 1;\n    *(undefined *)(device + 9) = 0;\n    return_value = 1;\n  }\n  else {\n    return_value = 0;\n  }\n  return return_value;\n}\n\n",
            "current_name": "initialize_device_08003a20",
            "entrypoint": "0x08003a20",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003a20": "initialize_device_08003a20",
                "HAL_GetTick": "get_tick",
                "iVar1": "current_tick",
                "iVar3": "device_address",
                "local_14": "loop_counter",
                "param_1": "device",
                "param_2": "param",
                "uVar2": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003aa0": {
            "additional_data": {
                "0x100000": {
                    "some_flag2": 1
                },
                "0x40012800": {
                    "adc_base_addr": 1
                },
                "0x500000": {
                    "some_flag1": 1
                },
                "0xe0000": {
                    "some_mask": 1
                },
                "1": {
                    "true": 1
                },
                "ADC_Enable": {
                    "enable_adc": 8,
                    "enable_adc_function": 1
                },
                "FUN_08003a20": {
                    "configure_adc": 3,
                    "initialize_adc_sub": 1,
                    "other_function": 1,
                    "process_adc_data": 1,
                    "set_adc_config": 2,
                    "set_adc_parameters": 2,
                    "set_config_params": 1
                },
                "FUN_08003aa0": {
                    "configure_adc": 1,
                    "configure_device": 1,
                    "enable_adc": 6,
                    "initialize_adc": 16,
                    "initialize_adc_and_enable_interrupt": 1,
                    "process_param": 1
                },
                "_DAT_40012404": {
                    "constant": 1,
                    "data_value": 1,
                    "data_variable": 1,
                    "some_constant": 1,
                    "some_data": 2,
                    "status_register": 1
                },
                "iVar1": {
                    "adc_enable_result": 1,
                    "adc_enable_status": 1,
                    "adc_result": 6,
                    "adc_status": 3,
                    "enable_result": 4,
                    "enable_status": 1,
                    "error_code": 1,
                    "result": 13,
                    "status": 1
                },
                "iVar3": {
                    "adc": 1,
                    "adc_address": 1,
                    "adc_base": 1,
                    "adc_base_value": 1,
                    "adc_config": 1,
                    "adc_data": 1,
                    "addr": 1,
                    "address": 2,
                    "base_address": 1,
                    "config_value": 2,
                    "data": 1,
                    "data_register": 1,
                    "data_value": 1,
                    "device_addr": 1,
                    "i_var": 1,
                    "reg_value": 1,
                    "register_value": 2,
                    "value": 8,
                    "var1": 1,
                    "var3": 1,
                    "var_10": 1
                },
                "param_1": {
                    "adc_config": 2,
                    "adc_data": 3,
                    "adc_params": 10,
                    "config": 4,
                    "config_params": 1,
                    "input_array": 2,
                    "param_array": 1,
                    "parameters": 8
                },
                "param_2": {
                    "config": 2,
                    "config_data": 1,
                    "config_param": 1,
                    "config_value": 1,
                    "data_value": 1,
                    "param": 2,
                    "param2": 1,
                    "value": 1
                },
                "puVar2": {
                    "adc_base_address": 2,
                    "adc_config": 1,
                    "adc_register": 2,
                    "base_addr": 4,
                    "base_address": 8,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "pointer": 6,
                    "ptr": 4,
                    "ptr_to_data": 1
                }
            },
            "called": [
                "FUN_08003a20"
            ],
            "calling": [
                "FUN_08006d80"
            ],
            "code": "\n\n\nint initialize_adc_and_enable_interrupt_08003aa0(int *adc_params)\n\n{\n  int result;\n  undefined4 *base_address;\n  int value;\n  \n  if (*(char *)(adc_params + 9) != '\\x01') {\n    *(undefined *)(adc_params + 9) = 1;\n    result = enable_adc();\n    if (result == 0) {\n      adc_params[10] = adc_params[10] & 0xfffffcfeU | 0x100;\n      base_address = (undefined4 *)*adc_params;\n      if ((base_address == (undefined4 *)0x40012800) && ((_DAT_40012404 & 0xf0000) != 0)) {\n        adc_params[10] = adc_params[10] | 0x100000;\n        if ((_DAT_40012404 & 0x400) != 0) {\n          adc_params[10] = adc_params[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      else {\n        adc_params[10] = adc_params[10] & 0xffefffff;\n        if ((base_address[1] & 0x400) != 0) {\n          adc_params[10] = adc_params[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      if ((adc_params[10] & 0x1000U) == 0) {\n        adc_params[0xb] = 0;\n      }\n      else {\n        adc_params[0xb] = adc_params[0xb] & 0xfffffff9;\n      }\n      *(undefined *)(adc_params + 9) = 0;\n      *base_address = 0xfffffffd;\n      value = *adc_params;\n      if (((*(uint *)(value + 8) & 0xe0000) == 0xe0000) &&\n         ((value != 0x40012800 || ((_DAT_40012404 & 0xf0000) == 0)))) {\n        *(uint *)(value + 8) = *(uint *)(value + 8) | 0x500000;\n      }\n      else {\n        *(uint *)(value + 8) = *(uint *)(value + 8) | 0x100000;\n      }\n    }\n    else {\n      *(undefined *)(adc_params + 9) = 0;\n    }\n    return result;\n  }\n  return 2;\n}\n\n",
            "current_name": "initialize_adc_and_enable_interrupt_08003aa0",
            "entrypoint": "0x08003aa0",
            "imported": false,
            "improved": true,
            "renaming": {
                "ADC_Enable": "enable_adc",
                "FUN_08003aa0": "initialize_adc_and_enable_interrupt_08003aa0",
                "iVar1": "result",
                "iVar3": "value",
                "param_1": "adc_params",
                "puVar2": "base_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003b8c": {
            "additional_data": {
                "FUN_08003b8c": {
                    "check_and_set_flag": 2,
                    "check_and_set_flags": 9,
                    "check_and_update_flag": 1,
                    "check_and_update_status": 2,
                    "improve_and_check_status": 1,
                    "process_data": 1,
                    "toggle_flag_and_delay": 2,
                    "update_flag": 3,
                    "update_flags": 1,
                    "update_flags_and_check_timeout": 1,
                    "update_status": 1,
                    "update_status_flags": 1
                },
                "HAL_GetTick": {
                    "get_current_tick": 7,
                    "get_current_time": 3
                },
                "iVar1": {
                    "current_tick": 9,
                    "current_tick_count": 1,
                    "current_time": 13,
                    "end_time": 1,
                    "start_tick": 1,
                    "start_time": 3,
                    "tick_diff": 1,
                    "tick_start": 1,
                    "time1": 1
                },
                "iVar2": {
                    "base_address": 1,
                    "current_value": 1,
                    "data_ptr": 1,
                    "data_value": 4,
                    "element": 1,
                    "first_element": 1,
                    "flag_value": 2,
                    "initial_tick": 2,
                    "initial_tick_count": 1,
                    "initial_time": 2,
                    "original_value": 1,
                    "pointer_value": 1,
                    "ptr_value": 1,
                    "record_address": 1,
                    "start_time": 1,
                    "status_value": 3,
                    "stored_value": 1,
                    "value": 5,
                    "var1": 1
                },
                "param_1": {
                    "arguments": 1,
                    "array": 3,
                    "data": 7,
                    "data_array": 2,
                    "flag_array": 1,
                    "flag_ptr": 1,
                    "flags": 1,
                    "flags_array": 1,
                    "flags_ptr": 1,
                    "input": 2,
                    "input_array": 5,
                    "ptr_array": 1,
                    "status": 1,
                    "status_data": 2,
                    "status_flags": 1,
                    "status_ptr": 1
                }
            },
            "called": [
                "FUN_08003760"
            ],
            "calling": [
                "FUN_08003e20",
                "FUN_08003bd8",
                "FUN_08003ce8",
                "FUN_08003de4"
            ],
            "code": "\nundefined4 check_and_set_flags_08003b8c(int *data)\n\n{\n  int current_time;\n  int value;\n  \n  value = *data;\n  if ((*(uint *)(value + 8) & 1) == 0) {\n    return 0;\n  }\n  *(uint *)(value + 8) = *(uint *)(value + 8) & 0xfffffffe;\n  value = get_current_tick();\n  do {\n    if ((*(uint *)(*data + 8) & 1) == 0) {\n      return 0;\n    }\n    current_time = get_current_tick();\n  } while ((uint)(current_time - value) < 3);\n  data[10] = data[10] | 0x10;\n  data[0xb] = data[0xb] | 1;\n  return 1;\n}\n\n",
            "current_name": "check_and_set_flags_08003b8c",
            "entrypoint": "0x08003b8c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003b8c": "check_and_set_flags_08003b8c",
                "HAL_GetTick": "get_current_tick",
                "iVar1": "current_time",
                "iVar2": "value",
                "param_1": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003bd8": {
            "additional_data": {
                "ADC_ConversionStop_Disable": {
                    "stop_adc_conversion": 1,
                    "stop_and_disable_adc": 1,
                    "stop_and_disable_adc_conversion": 1,
                    "stop_and_disable_conversion": 2,
                    "stop_disable_conversion": 2
                },
                "FUN_08003b8c": {
                    "adc_conversion_stop_disable": 1
                },
                "FUN_08003bd8": {
                    "configure_adc": 2,
                    "improve_adc_conversion": 1,
                    "improved_adc_conversion": 1,
                    "init_adc": 1,
                    "initialize_adc": 20,
                    "initialize_adc_converter": 1,
                    "perform_adc_conversion": 1,
                    "perform_adc_operation": 1
                },
                "FUN_08006ca8": {
                    "initialize_adc": 1
                },
                "HAL_ADC_MspInit": {
                    "configure_adc": 1,
                    "initialize_adc": 1,
                    "initialize_adc_msp": 1,
                    "initialize_adc_periph": 1,
                    "initialize_adc_peripheral": 1,
                    "initialize_adc_peripherals": 2
                },
                "iVar1": {
                    "adc_conversion_result": 1,
                    "conversion_result": 8,
                    "conversion_status": 7,
                    "result": 6,
                    "stop_disable_result": 1,
                    "stop_result": 8
                },
                "param_1": {
                    "adc": 1,
                    "adc_config": 8,
                    "adc_data": 5,
                    "adc_param": 1,
                    "adc_parameters": 1,
                    "adc_params": 10,
                    "adc_settings": 1,
                    "converter_data": 1,
                    "input_array": 3
                },
                "uVar2": {
                    "adc_config_bitmask": 1,
                    "adc_control1": 1,
                    "bit_mask": 1,
                    "bit_mask1": 1,
                    "bitmask_1": 1,
                    "bitwise_or": 1,
                    "bitwise_result2": 1,
                    "bitwise_result_1": 2,
                    "combined_param": 1,
                    "combined_params": 1,
                    "combined_value": 1,
                    "combined_values": 3,
                    "combined_vars1": 2,
                    "config_flags": 1,
                    "config_mask": 2,
                    "flags": 1,
                    "flags_1": 1,
                    "mask": 1,
                    "mask1": 2,
                    "mask_1": 1,
                    "modified_settings": 1,
                    "var1": 2,
                    "var2": 2
                },
                "uVar3": {
                    "adc_config_bitmask2": 1,
                    "adc_control2": 1,
                    "additional_params": 1,
                    "additional_settings": 1,
                    "bit_mask2": 1,
                    "bitmask_2": 1,
                    "bitwise_result3": 1,
                    "bitwise_result_2": 2,
                    "calculation_result": 1,
                    "combined_vars2": 2,
                    "computed_value": 1,
                    "condition": 1,
                    "condition_value": 1,
                    "config_flag": 1,
                    "config_value": 2,
                    "control_flags": 1,
                    "extra_config": 1,
                    "flags_2": 1,
                    "mask2": 2,
                    "mask_2": 1,
                    "mode_mask": 1,
                    "temp": 1,
                    "value": 1,
                    "var2": 2,
                    "var3": 2
                }
            },
            "called": [
                "FUN_08003b8c",
                "FUN_08006ca8"
            ],
            "calling": [
                "FUN_08006d80"
            ],
            "code": "\nundefined4 initialize_adc_converter_08003bd8(int *adc_params)\n\n{\n  int conversion_result;\n  uint combined_values;\n  uint mask2;\n  \n  if (adc_params == (int *)0x0) {\n    return 1;\n  }\n  if (adc_params[10] == 0) {\n    adc_params[0xb] = 0;\n    *(undefined *)(adc_params + 9) = 0;\n    initialize_adc_peripherals();\n  }\n  conversion_result = stop_and_disable_conversion(adc_params);\n  if (((adc_params[10] & 0x10U) == 0) && (conversion_result == 0)) {\n    adc_params[10] = adc_params[10] & 0xffffeefdU | 2;\n    combined_values = adc_params[1] | adc_params[7] | adc_params[3] << 1;\n    if (adc_params[2] == 0x100) {\n      mask2 = 0x100;\n    }\n    else {\n      mask2 = 0;\n      if (adc_params[2] == 1) {\n        mask2 = 0x100;\n      }\n    }\n    if (adc_params[5] == 1) {\n      if (adc_params[3] == 0) {\n        mask2 = mask2 | (adc_params[6] + -1) * 0x2000 | 0x800;\n      }\n      else {\n        adc_params[10] = adc_params[10] | 0x20;\n        adc_params[0xb] = adc_params[0xb] | 1;\n      }\n    }\n    *(uint *)(*adc_params + 4) = mask2 | *(uint *)(*adc_params + 4) & 0xffff16ff;\n    *(uint *)(*adc_params + 8) = *(uint *)(*adc_params + 8) & 0xffe1f7fd | combined_values;\n    if ((adc_params[2] == 0x100) || (adc_params[2] == 1)) {\n      mask2 = (adc_params[4] + -1) * 0x100000;\n    }\n    else {\n      mask2 = 0;\n    }\n    *(uint *)(*adc_params + 0x2c) = mask2 | *(uint *)(*adc_params + 0x2c) & 0xff0fffff;\n    if (combined_values != (*(uint *)(*adc_params + 8) & 0xff1f0efe)) {\n      adc_params[10] = adc_params[10] & 0xffffffedU | 0x10;\n      adc_params[0xb] = adc_params[0xb] | 1;\n      return 1;\n    }\n    adc_params[0xb] = 0;\n    adc_params[10] = adc_params[10] & 0xfffffffcU | 1;\n    return 0;\n  }\n  adc_params[10] = adc_params[10] | 0x10;\n  return 1;\n}\n\n",
            "current_name": "initialize_adc_converter_08003bd8",
            "entrypoint": "0x08003bd8",
            "imported": false,
            "improved": true,
            "renaming": {
                "ADC_ConversionStop_Disable": "stop_and_disable_conversion",
                "FUN_08003bd8": "initialize_adc_converter_08003bd8",
                "HAL_ADC_MspInit": "initialize_adc_peripherals",
                "iVar1": "conversion_result",
                "param_1": "adc_params",
                "uVar2": "combined_values",
                "uVar3": "mask2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003ce8": {
            "additional_data": {
                "ADC_ConversionStop_Disable": {
                    "disable_adc_conversion_stop": 5,
                    "disable_conversion_stop": 1,
                    "stop_adc_conversion": 3,
                    "stop_adc_conversion_disable": 1,
                    "stop_conversion_disable": 1,
                    "stop_disable_conversion": 1
                },
                "FUN_08003b8c": {
                    "adc_conversion_stop_disable": 2,
                    "check_adc_status": 1,
                    "disable_adc_conversion": 1,
                    "disable_conversion_stop": 1,
                    "hal_adc_msp_de_init": 2,
                    "initialize_adc": 1,
                    "initialize_adc_config": 1,
                    "initialize_adc_conversion_stop": 1,
                    "initialize_adc_msp_parameters": 1,
                    "sub_function_2": 1
                },
                "FUN_08003ce8": {
                    "cleanup_and_disable_adc": 1,
                    "clear_adc_settings": 1,
                    "conversion_stop_disable": 1,
                    "deinit_adc": 1,
                    "disable_adc_conversion": 2,
                    "disable_adc_conversions": 1,
                    "improve_code": 2,
                    "initialize_adc": 3,
                    "reset_adc": 2,
                    "reset_adc_settings": 1,
                    "reset_adc_state": 1,
                    "reverse_and_reset_adc": 1,
                    "stop_adc_conversion": 3,
                    "stop_and_clear_adc": 1,
                    "stop_and_reset_adc": 2,
                    "stop_and_reset_adc_conversion": 1,
                    "update_adc_settings": 1,
                    "update_configuration": 1
                },
                "FUN_08006d24": {
                    "adc_conversion_stop_disable": 2,
                    "cleanup_adc_config": 1,
                    "hal_adc_msp_de_init": 2,
                    "initialize_adc_conversion_stop_parameters": 1,
                    "reset_adc_config": 1,
                    "reset_adc_conversion_stop": 1,
                    "reset_adc_settings_helper": 1,
                    "stop_conversion": 1,
                    "sub_function_1": 1,
                    "update_param_array": 1
                },
                "HAL_ADC_MspDeInit": {
                    "adc_msp_deinit": 1,
                    "de_initialize_adc": 1,
                    "deinit_adc_msp": 1,
                    "deinitialize_adc": 9,
                    "deinitialize_adc_msp": 1,
                    "deinitialize_hal_adc": 1,
                    "deinitialize_msp": 1,
                    "disable_adc": 1
                },
                "Hal_ADC_MspDeInit": {
                    "deinitialize_hal_adc": 1
                },
                "iVar1": {
                    "error": 1,
                    "result": 27,
                    "return_value": 2,
                    "success_flag": 1
                },
                "param_1": {
                    "adc_config": 4,
                    "adc_configuration": 1,
                    "adc_data": 5,
                    "adc_parameters": 3,
                    "adc_params": 2,
                    "adc_ptr": 1,
                    "adc_settings": 3,
                    "adc_state": 1,
                    "config": 2,
                    "conversion_data": 1,
                    "input_array": 5,
                    "input_data": 1,
                    "param": 1,
                    "param_array": 1
                }
            },
            "called": [
                "FUN_08006d24",
                "FUN_08003b8c"
            ],
            "calling": [
                "FUN_08006d80"
            ],
            "code": "\nint stop_and_reset_adc_conversion_08003ce8(int *input_array)\n\n{\n  int result;\n  \n  if (input_array == (int *)0x0) {\n    result = 1;\n  }\n  else {\n    input_array[10] = input_array[10] | 2;\n    result = disable_adc_conversion_stop();\n    if (result == 0) {\n      *(undefined4 *)*input_array = 0xffffffe0;\n      *(uint *)(*input_array + 4) = *(uint *)(*input_array + 4) & 0xff3f0000;\n      *(uint *)(*input_array + 8) = *(uint *)(*input_array + 8) & 0xff0106f0;\n      *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) & 0xff000000;\n      *(uint *)(*input_array + 0x10) = *(uint *)(*input_array + 0x10) & 0xc0000000;\n      *(uint *)(*input_array + 0x14) = *(uint *)(*input_array + 0x14) & 0xfffff000;\n      *(uint *)(*input_array + 0x18) = *(uint *)(*input_array + 0x18) & 0xfffff000;\n      *(uint *)(*input_array + 0x1c) = *(uint *)(*input_array + 0x1c) & 0xfffff000;\n      *(uint *)(*input_array + 0x20) = *(uint *)(*input_array + 0x20) & 0xfffff000;\n      *(uint *)(*input_array + 0x24) = *(uint *)(*input_array + 0x24) & 0xfffff000;\n      *(uint *)(*input_array + 0x28) = *(uint *)(*input_array + 0x28) & 0xfffff000;\n      *(uint *)(*input_array + 0x2c) = *(uint *)(*input_array + 0x2c) & 0xff000000;\n      *(uint *)(*input_array + 0x2c) = *(uint *)(*input_array + 0x2c) & 0xff000000;\n      *(uint *)(*input_array + 0x30) = *(uint *)(*input_array + 0x30) & 0xc0000000;\n      *(uint *)(*input_array + 0x34) = *(uint *)(*input_array + 0x34) & 0xc0000000;\n      *(uint *)(*input_array + 0x38) = *(uint *)(*input_array + 0x38) & 0xffc00000;\n      *(uint *)(*input_array + 0x38) = *(uint *)(*input_array + 0x38) & 0xffc00000;\n      deinitialize_adc(input_array);\n      input_array[0xb] = 0;\n      input_array[10] = 0;\n    }\n    *(undefined *)(input_array + 9) = 0;\n  }\n  return result;\n}\n\n",
            "current_name": "stop_and_reset_adc_conversion_08003ce8",
            "entrypoint": "0x08003ce8",
            "imported": false,
            "improved": true,
            "renaming": {
                "ADC_ConversionStop_Disable": "disable_adc_conversion_stop",
                "FUN_08003ce8": "stop_and_reset_adc_conversion_08003ce8",
                "HAL_ADC_MspDeInit": "deinitialize_adc",
                "iVar1": "result",
                "param_1": "input_array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003de4": {
            "additional_data": {
                "0xffffeefe": {
                    "control_register_mask": 1,
                    "flag_mask": 1,
                    "mask": 1
                },
                "1": {
                    "bit_mask": 1
                },
                "ADC_ConversionStop_Disable": {
                    "disable_adc_conversion_stop": 3,
                    "stop_adc_conversion": 4,
                    "stop_conversion": 3,
                    "stop_disable_conversion": 1
                },
                "FUN_08003b8c": {
                    "check_adc_conversion_status": 1
                },
                "FUN_08003de4": {
                    "check_adc_conversion": 1,
                    "check_adc_conversion_status": 2,
                    "check_adc_status": 1,
                    "check_and_modify_data": 1,
                    "check_and_modify_flag": 1,
                    "check_and_modify_param": 1,
                    "check_and_modify_parameter": 1,
                    "check_and_modify_parameter_value": 1,
                    "check_and_modify_status": 1,
                    "check_and_modify_value": 1,
                    "check_and_update_adc_state": 1,
                    "check_and_update_param": 2,
                    "convert_adc": 1,
                    "convert_adc_data": 1,
                    "convert_adc_to_integer": 1,
                    "disable_adc_conversion": 1,
                    "handle_adc_conversion": 1,
                    "handle_param": 1,
                    "perform_conversion": 1,
                    "process_param1": 1,
                    "stop_adc_on_demand": 1,
                    "stop_and_check_conversion": 1,
                    "stop_and_disable_adc_conversion": 2,
                    "update_adc_state": 1,
                    "update_adc_status": 1,
                    "update_adc_values": 1,
                    "update_parameter_and_return_result": 1
                },
                "PTR_08003b8c": {
                    "param_1": 1,
                    "pointer_fun_08003b8c": 1
                },
                "PTR_0806123c": {
                    "ptr_value": 1
                },
                "PTR_FUN_08003b8c": {
                    "function_pointer": 1
                },
                "iVar1": {
                    "conversion_result": 3,
                    "conversion_status": 5,
                    "conversion_stop_result": 1,
                    "result": 12,
                    "stop_result": 9,
                    "stop_status": 1
                },
                "param_1": {
                    "adc_data": 4,
                    "adc_handle": 1,
                    "adc_parameters": 1,
                    "adc_state": 1,
                    "address": 1,
                    "conversion_data": 1,
                    "data": 1,
                    "data_ptr": 1,
                    "data_structure": 1,
                    "device_address": 1,
                    "device_ptr": 1,
                    "input": 4,
                    "input_address": 1,
                    "input_param": 2,
                    "input_value": 1,
                    "obj_ptr": 1,
                    "param": 5,
                    "parameter": 2,
                    "state": 1
                }
            },
            "called": [
                "FUN_08003b8c"
            ],
            "calling": [
                "FUN_08006d80"
            ],
            "code": "\nint check_adc_conversion_status_08003de4(int param)\n\n{\n  int result;\n  \n  if (*(char *)(param + 0x24) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(param + 0x24) = 1;\n  result = stop_adc_conversion();\n  if (result == 0) {\n    *(uint *)(param + 0x28) = *(uint *)(param + 0x28) & 0xffffeefe | 1;\n  }\n  *(undefined *)(param + 0x24) = 0;\n  return result;\n}\n\n",
            "current_name": "check_adc_conversion_status_08003de4",
            "entrypoint": "0x08003de4",
            "imported": false,
            "improved": true,
            "renaming": {
                "ADC_ConversionStop_Disable": "stop_adc_conversion",
                "FUN_08003de4": "check_adc_conversion_status_08003de4",
                "iVar1": "result",
                "param_1": "param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003e20": {
            "additional_data": {
                "ADC_ConversionStop_Disable": {
                    "disable_conversion_stop": 1
                },
                "ADC_Enable": {
                    "enable_adc": 1
                },
                "FUN_08003e20": {
                    "handle_adc_conversion": 1,
                    "initialize_adc": 19,
                    "initialize_adc_conversion": 1,
                    "perform_adc_conversion": 2,
                    "process_adc_data": 1
                },
                "HAL_GetTick": {
                    "get_tick": 1
                },
                "HAL_RCCEx_GetPeriphCLKFreq": {
                    "get_peripheral_freq": 1
                },
                "iVar2": {
                    "adc_stop_status": 1,
                    "conversion_stop_result": 3,
                    "result": 6,
                    "return_value": 1,
                    "stop_disable_result": 1,
                    "stop_disable_status": 1,
                    "stop_result": 18
                },
                "iVar4": {
                    "current_time": 1,
                    "start_tick": 9,
                    "start_time": 12,
                    "start_timeout": 1,
                    "start_timestamp": 1,
                    "tick_start": 5,
                    "time1": 1,
                    "timer_start": 1
                },
                "iVar5": {
                    "completion_timeout": 1,
                    "current_tick": 12,
                    "current_time": 10,
                    "current_timestamp": 1,
                    "elapsed_time": 1,
                    "tick_current": 3,
                    "tick_start": 1,
                    "tick_value": 1,
                    "time2": 1
                },
                "local_14": {
                    "conversion_count": 1,
                    "count": 1,
                    "iteration_count": 5,
                    "iterations": 1,
                    "loop_count": 6,
                    "loop_counter": 17
                },
                "param_1": {
                    "adc_config": 3,
                    "adc_controller": 1,
                    "adc_data": 9,
                    "adc_parameters": 1,
                    "adc_params": 9,
                    "adc_state": 1,
                    "input_array": 5,
                    "input_data": 1,
                    "parameters": 1
                },
                "uVar1": {
                    "calculated_value1": 1,
                    "clock_freq": 2,
                    "clock_frequency": 2,
                    "data1": 2,
                    "data_constant": 1,
                    "data_frequency": 1,
                    "data_limit": 1,
                    "dividend": 1,
                    "freq_divisor": 1,
                    "max_value": 1,
                    "per_clk_freq": 1,
                    "periph_clk": 1,
                    "periph_clk_freq": 3,
                    "periph_freq": 4,
                    "peripheral_clock": 1,
                    "peripheral_clock_freq": 1,
                    "peripheral_frequency": 1,
                    "system_clock": 3,
                    "system_frequency": 1,
                    "var1": 1,
                    "var_freq1": 1
                },
                "uVar3": {
                    "adc_clk_freq": 1,
                    "adc_clock_freq": 1,
                    "adc_conversion_time": 1,
                    "calculated_value2": 1,
                    "clock_freq": 1,
                    "clock_frequency": 1,
                    "data2": 2,
                    "divisor": 1,
                    "freq": 2,
                    "frequency": 1,
                    "periph_clk_freq": 4,
                    "periph_clock": 1,
                    "periph_clock_freq": 2,
                    "periph_freq": 2,
                    "periph_frequency": 1,
                    "peripheral_clk_freq": 1,
                    "peripheral_clock": 1,
                    "peripheral_clock_freq": 1,
                    "peripheral_freq": 1,
                    "peripheral_frequency": 2,
                    "sys_clk_freq": 1,
                    "var3": 1,
                    "var_freq2": 1
                }
            },
            "called": [
                "FUN_08005bb8",
                "FUN_08003a20",
                "FUN_08003b8c",
                "FUN_08003760"
            ],
            "calling": [
                "FUN_08006d80"
            ],
            "code": "\nint initialize_adc_conversion_08003e20(int *adc_params)\n\n{\n  uint periph_freq;\n  int stop_result;\n  uint periph_clk_freq;\n  int start_time;\n  int current_tick;\n  int loop_counter;\n  \n  if (*(char *)(adc_params + 9) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(adc_params + 9) = 1;\n  stop_result = disable_conversion_stop();\n  if (stop_result == 0) {\n    adc_params[10] = adc_params[10] & 0xffffeefdU | 2;\n    periph_freq = DAT_20000018;\n    periph_clk_freq = get_peripheral_freq(2);\n    for (loop_counter = periph_freq / periph_clk_freq << 1; loop_counter != 0; loop_counter = loop_counter + -1) {\n    }\n    enable_adc(adc_params);\n    *(uint *)(*adc_params + 8) = *(uint *)(*adc_params + 8) | 8;\n    start_time = get_tick();\n    while (current_tick = *adc_params, (*(uint *)(current_tick + 8) & 8) != 0) {\n      current_tick = get_tick();\n      if (10 < (uint)(current_tick - start_time)) {\n        adc_params[10] = adc_params[10] & 0xffffffedU | 0x10;\n        *(undefined *)(adc_params + 9) = 0;\n        return 1;\n      }\n    }\n    *(uint *)(current_tick + 8) = *(uint *)(current_tick + 8) | 4;\n    start_time = get_tick();\n    while ((*(uint *)(*adc_params + 8) & 4) != 0) {\n      current_tick = get_tick();\n      if (10 < (uint)(current_tick - start_time)) {\n        adc_params[10] = adc_params[10] & 0xffffffedU | 0x10;\n        *(undefined *)(adc_params + 9) = 0;\n        return 1;\n      }\n    }\n    adc_params[10] = adc_params[10] & 0xfffffffcU | 1;\n  }\n  *(undefined *)(adc_params + 9) = 0;\n  return stop_result;\n}\n\n",
            "current_name": "initialize_adc_conversion_08003e20",
            "entrypoint": "0x08003e20",
            "imported": false,
            "improved": true,
            "renaming": {
                "ADC_ConversionStop_Disable": "disable_conversion_stop",
                "ADC_Enable": "enable_adc",
                "FUN_08003e20": "initialize_adc_conversion_08003e20",
                "HAL_GetTick": "get_tick",
                "HAL_RCCEx_GetPeriphCLKFreq": "get_peripheral_freq",
                "iVar2": "stop_result",
                "iVar4": "start_time",
                "iVar5": "current_tick",
                "local_14": "loop_counter",
                "param_1": "adc_params",
                "uVar1": "periph_freq",
                "uVar3": "periph_clk_freq"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003f0c": {
            "additional_data": {
                "0x5fa0000": {
                    "mask_value": 1
                },
                "FUN_08003f0c": {
                    "configure_memory_protection": 1,
                    "set_bit_pattern": 1,
                    "set_bitwise_encoded_value": 1,
                    "update_config": 2,
                    "update_configuration": 5,
                    "update_configuration_value": 1,
                    "update_data": 3,
                    "update_data_value": 1,
                    "update_display_brightness": 1,
                    "update_flag_register": 1,
                    "update_memory_value": 2,
                    "update_register_value": 8,
                    "update_status": 1,
                    "update_value_in_memory": 1,
                    "update_value_with_mask": 1,
                    "update_variable": 1
                },
                "_DAT_e000ed0c": {
                    "config_value": 1,
                    "configuration": 1,
                    "configuration_data": 1,
                    "configuration_value": 1,
                    "current_config": 1,
                    "current_value": 2,
                    "data_register": 2,
                    "display_settings": 1,
                    "existing_config": 1,
                    "existing_value": 3,
                    "flag_register": 1,
                    "memory_control_register": 1,
                    "memory_value": 2,
                    "register": 1,
                    "register_value": 6,
                    "status_reg": 1
                },
                "newVariableName": {
                    "new_value": 1
                },
                "param_1": {
                    "access_rights": 1,
                    "bitmask": 1,
                    "brightness_level": 1,
                    "config_flags": 1,
                    "config_value": 1,
                    "input": 3,
                    "input_data": 1,
                    "input_value": 17,
                    "new_parameter": 1,
                    "new_value": 2,
                    "value": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08003724",
                "FUN_08008f0e"
            ],
            "code": "\n\n\nvoid update_register_value_08003f0c(uint input_value)\n\n{\n  _DAT_e000ed0c = (input_value & 7) << 8 | _DAT_e000ed0c & 0xf8ff | 0x5fa0000;\n  return;\n}\n\n",
            "current_name": "update_register_value_08003f0c",
            "entrypoint": "0x08003f0c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003f0c": "update_register_value_08003f0c",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003f30": {
            "additional_data": {
                "FUN_08003f30": {
                    "apply_bit_mask": 2,
                    "apply_mask_and_write_to_memory": 1,
                    "decode_and_store": 1,
                    "modify_and_store": 1,
                    "modify_and_store_value": 1,
                    "reverse_bits_and_store": 1,
                    "set_bits_in_memory": 1,
                    "update_char_value": 1,
                    "update_character": 4,
                    "update_character_code": 1,
                    "update_character_value": 1,
                    "update_data": 2,
                    "update_memory": 5,
                    "update_memory_byte": 3,
                    "update_memory_location": 2,
                    "update_memory_value": 1,
                    "update_register_value": 2,
                    "update_registers": 1
                },
                "char_ptr_e000e400": {
                    "memory_address2": 1
                },
                "char_ptr_e000ed14": {
                    "memory_address": 1
                },
                "param_1": {
                    "address": 11,
                    "character_id": 1,
                    "character_index": 5,
                    "index": 1,
                    "input_index": 1,
                    "input_value": 2,
                    "memory_address": 4,
                    "offset": 1,
                    "register_address": 2,
                    "register_index": 1,
                    "target_address": 1,
                    "value_index": 1
                },
                "param_2": {
                    "bit_mask": 6,
                    "bit_mask1": 1,
                    "bitmask1": 2,
                    "bitmask_value": 1,
                    "bitwise_data1": 1,
                    "character_data1": 1,
                    "data": 3,
                    "data1": 1,
                    "input": 1,
                    "mask": 2,
                    "mask1": 1,
                    "mask_value": 1,
                    "old_value": 2,
                    "orig_bits": 1,
                    "register_mask": 1,
                    "register_value": 1,
                    "source": 1,
                    "value": 1,
                    "value1": 2,
                    "value_to_clear": 1
                },
                "param_3": {
                    "bit_mask2": 1,
                    "bitmask2": 2,
                    "bitwise_data2": 1,
                    "character_data2": 1,
                    "data": 4,
                    "data2": 1,
                    "data_value": 1,
                    "dest_bits": 1,
                    "input_value": 1,
                    "mask": 6,
                    "mask2": 1,
                    "mask_value": 1,
                    "new_value": 4,
                    "register_value": 1,
                    "source_value": 1,
                    "value2": 2,
                    "value_to_modify": 1,
                    "value_to_update": 1
                },
                "uVar1": {
                    "bit_shift": 2,
                    "result": 1,
                    "shift_amount": 12,
                    "shift_count": 4,
                    "shift_value": 1,
                    "shifted_bitmask3": 1,
                    "shifted_bits": 3,
                    "shifted_data": 1,
                    "shifted_masked_value": 1,
                    "shifted_value": 2,
                    "shifted_value1": 1,
                    "updated_character_code": 1,
                    "updated_data1": 1
                },
                "uVar1_AUX": {
                    "shift_amount_updated": 1
                },
                "uVar1_and_0xff": {
                    "shift_mask": 1
                },
                "uVar1_and_0xfff": {
                    "index_mask": 1
                },
                "uVar1_and_uVar2": {
                    "masked_bitmasks": 1,
                    "shift_result": 1
                },
                "uVar1_and_uVar2_minus_1": {
                    "masked_source": 1
                },
                "uVar1_combined": {
                    "combined_mask": 1
                },
                "uVar1_combined_result": {
                    "final_combined_mask": 1
                },
                "uVar1_final": {
                    "final_shift_amount": 1
                },
                "uVar1_final_AUX": {
                    "final_shift_amount_updated": 1
                },
                "uVar1_final_shifted": {
                    "shifted_value": 1
                },
                "uVar1_final_shifted_4bit": {
                    "shifted_value_4bit": 1
                },
                "uVar1_inverse": {
                    "inverted_shift": 1
                },
                "uVar1_less_than_zero": {
                    "is_negative": 1
                },
                "uVar1_limited": {
                    "condition_limit": 1
                },
                "uVar1_mask": {
                    "mask_a": 1
                },
                "uVar1_masked": {
                    "masked_bitmask1": 1,
                    "masked_shift": 1
                },
                "uVar1_new": {
                    "shifted_bit_mask": 1
                },
                "uVar1_offset": {
                    "negative_offset": 1
                },
                "uVar1_result": {
                    "final_shift_count": 1
                },
                "uVar1_save": {
                    "adjusted_shift": 1
                },
                "uVar1_save_minus_3": {
                    "final_index": 1
                },
                "uVar1_shift_uVar2": {
                    "masked_result": 1
                },
                "uVar1_shifted": {
                    "shifted_data": 1,
                    "shifted_mask1": 1
                },
                "uVar1_shifted_and_filtered": {
                    "filtered_data": 1
                },
                "uVar1_shifted_temp": {
                    "temp_shifted_mask1": 1
                },
                "uVar1_subtracted": {
                    "final_shift": 1
                },
                "uVar1_temp": {
                    "temp_shift_count": 1
                },
                "uVar1_times_4": {
                    "absolute_index": 1
                },
                "uVar2": {
                    "adjusted_shift": 1,
                    "adjusted_shift_count": 1,
                    "bit_mask_shifted": 1,
                    "bit_offset": 1,
                    "bit_position": 2,
                    "bit_shifted_old_value": 1,
                    "bits_to_shift": 1,
                    "clamped_count": 1,
                    "masked_shift_amount": 1,
                    "remaining_bits": 12,
                    "remaining_shift": 1,
                    "remaining_shifts": 2,
                    "selected_bits": 2,
                    "shift_difference": 1,
                    "shift_offset": 1,
                    "shift_result": 1,
                    "shifted_value2": 1
                },
                "uVar2_AUX": {
                    "remaining_bits_updated": 1
                },
                "uVar2_and_0xff": {
                    "bits_to_shift": 1
                },
                "uVar2_final": {
                    "final_remaining_bits": 1
                },
                "uVar2_mask": {
                    "mask_b": 1
                },
                "uVar2_masked": {
                    "masked_bitmask2": 1
                },
                "uVar2_new": {
                    "clamped_bits": 1
                },
                "uVar2_result": {
                    "final_adjusted_shift_count": 1
                },
                "uVar3": {
                    "bit_offset": 1,
                    "shifted_mask": 1,
                    "shifted_mask1": 1,
                    "shifted_mask_value": 1,
                    "temp_variable": 1,
                    "updated_data": 1
                },
                "uVar3_new": {
                    "shifted_and_mask": 1
                },
                "uVar4": {
                    "masked_value": 1,
                    "shifted_and_mask": 1,
                    "shifted_mask2": 1
                },
                "uVar5": {
                    "shifted_or_mask": 1,
                    "shifted_result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080077b0",
                "FUN_08007648",
                "FUN_0800863c",
                "FUN_080036d8",
                "FUN_080035b8",
                "FUN_08008694"
            ],
            "code": "\n\n\nvoid update_memory_byte_08003f30(uint address,uint bit_mask,uint mask)\n\n{\n  uint shift_amount;\n  uint remaining_bits;\n  \n  shift_amount = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  remaining_bits = 7 - shift_amount;\n  if (3 < remaining_bits) {\n    remaining_bits = 4;\n  }\n  if (shift_amount + 4 < 7) {\n    shift_amount = 0;\n  }\n  else {\n    shift_amount = shift_amount - 3;\n  }\n  shift_amount = (bit_mask & (1 << (remaining_bits & 0xff)) - 1U) << (shift_amount & 0xff) |\n          (1 << (shift_amount & 0xff)) - 1U & mask;\n  if ((int)address < 0) {\n    *(char *)((address & 0xf) + 0xe000ed14) = (char)(shift_amount << 4);\n  }\n  else {\n    *(char *)(address + 0xe000e400) = (char)(shift_amount << 4);\n  }\n  return;\n}\n\n",
            "current_name": "update_memory_byte_08003f30",
            "entrypoint": "0x08003f30",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003f30": "update_memory_byte_08003f30",
                "param_1": "address",
                "param_2": "bit_mask",
                "param_3": "mask",
                "uVar1": "shift_amount",
                "uVar2": "remaining_bits"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003f94": {
            "additional_data": {
                "FUN_08003f94": {
                    "set_bit": 5,
                    "set_bit_at_index": 5,
                    "set_bit_at_offset": 2,
                    "set_bit_at_position": 3,
                    "set_bit_in_array": 6,
                    "set_bit_in_int_array": 2,
                    "set_bit_in_integer_array": 1,
                    "set_bit_in_memory": 6,
                    "set_bit_of_int": 1
                },
                "param_1": {
                    "bit_index": 9,
                    "bit_position": 8,
                    "index": 9,
                    "offset": 2,
                    "position": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_080077b0",
                "FUN_08007648",
                "FUN_0800863c",
                "FUN_08008694"
            ],
            "code": "\nvoid set_bit_in_int_array_08003f94(uint index)\n\n{\n  if (-1 < (int)index) {\n    *(int *)((index >> 5) * 4 + -0x1fff1f00) = 1 << (index & 0x1f);\n  }\n  return;\n}\n\n",
            "current_name": "set_bit_in_int_array_08003f94",
            "entrypoint": "0x08003f94",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003f94": "set_bit_in_int_array_08003f94",
                "param_1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003fb0": {
            "additional_data": {
                "0x1f": {
                    "bit_mask": 1
                },
                "0x1fff1f00": {
                    "base_address": 1
                },
                "0x20": {
                    "bits_per_int": 1
                },
                "DataSynchronizationBarrier": {
                    "perform_data_sync_barrier": 1,
                    "sync_data": 2
                },
                "FUN_08003fb0": {
                    "set_bit": 1,
                    "set_bit_at_index": 1,
                    "set_bit_at_position": 1,
                    "set_bit_in_data": 1,
                    "set_bit_in_memory": 17,
                    "set_bit_in_register": 5,
                    "store_bit_in_memory": 1,
                    "store_bitwise_operation_result": 1,
                    "update_bitmap": 1,
                    "update_bitmask": 1,
                    "update_data_value": 1
                },
                "InstructionSynchronizationBarrier": {
                    "perform_instr_sync_barrier": 1,
                    "sync_instructions": 2
                },
                "int": {
                    "integer": 1
                },
                "param_1": {
                    "bit_index": 15,
                    "bit_number": 1,
                    "bit_position": 9,
                    "bitmap_index": 1,
                    "data_index": 1,
                    "index": 2,
                    "position": 1,
                    "value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080076e0"
            ],
            "code": "\nvoid set_bit_in_memory_08003fb0(uinteger bit_index)\n\n{\n  if (-1 < (integer)bit_index) {\n    *(integer *)(((bit_index >> 5) + 0x20) * 4 + -0x1fff1f00) = 1 << (bit_index & 0x1f);\n    sync_data(0xf);\n    sync_instructions(0xf);\n  }\n  return;\n}\n\n",
            "current_name": "set_bit_in_memory_08003fb0",
            "entrypoint": "0x08003fb0",
            "imported": false,
            "improved": true,
            "renaming": {
                "DataSynchronizationBarrier": "sync_data",
                "FUN_08003fb0": "set_bit_in_memory_08003fb0",
                "InstructionSynchronizationBarrier": "sync_instructions",
                "int": "integer",
                "param_1": "bit_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003fd8": {
            "additional_data": {
                "0x1000000": {
                    "hardware_address_limit": 1
                },
                "DAT_e000ed23": {
                    "config_register_1": 1,
                    "configuration_flag": 1,
                    "constant": 1,
                    "constant_value": 3,
                    "control_register": 1,
                    "data": 1,
                    "data_byte": 1,
                    "data_flag": 2,
                    "data_register_2": 1,
                    "default_value": 1,
                    "error_code": 1,
                    "flag": 4,
                    "hardware_config_flag": 1,
                    "initial_value": 1,
                    "status": 2,
                    "status_flag": 4,
                    "status_register": 1
                },
                "FUN_08003fd8": {
                    "initialize_data": 5,
                    "initialize_hardware": 2,
                    "initialize_memory": 9,
                    "initialize_memory_address": 1,
                    "initialize_parameters": 3,
                    "initialize_system": 1,
                    "initialize_value": 1,
                    "set_data_and_config": 1,
                    "set_data_registers": 1,
                    "set_limits": 1,
                    "set_memory_parameters": 1,
                    "set_parameters": 2,
                    "set_register_values": 1,
                    "set_registers": 1,
                    "update_settings": 1
                },
                "_DAT_e000e010": {
                    "another_variable": 1,
                    "bitmask": 1,
                    "config_register_3": 1,
                    "constant": 1,
                    "control_bit": 1,
                    "control_register": 1,
                    "counter": 1,
                    "data_offset": 1,
                    "data_register_4": 1,
                    "flag": 7,
                    "flag_value": 1,
                    "flags": 2,
                    "hardware_control": 1,
                    "initial_value": 1,
                    "limit": 1,
                    "max_attempts": 1,
                    "mode_value": 1,
                    "ptr3": 1,
                    "seven_var": 1,
                    "temp_variable3": 1,
                    "third_value": 1,
                    "threshold": 1,
                    "variable_b": 1
                },
                "_DAT_e000e014": {
                    "adjusted_value": 1,
                    "data_address": 1,
                    "data_pointer": 1,
                    "data_register": 1,
                    "data_register_1": 1,
                    "hardware_base_address": 1,
                    "hardware_register": 1,
                    "last_memory_address": 1,
                    "lower_limit": 2,
                    "memory_address": 5,
                    "memory_location": 1,
                    "memory_offset": 1,
                    "memory_size_minus_one": 1,
                    "modified_input_value": 1,
                    "modified_value": 1,
                    "new_value": 1,
                    "previous_size": 1,
                    "ptr1": 1,
                    "register_value": 1,
                    "start_address": 1,
                    "temp_variable": 1,
                    "updated_value": 4
                },
                "_DAT_e000e018": {
                    "additional_data": 2,
                    "additional_info": 1,
                    "another_value": 1,
                    "another_variable": 1,
                    "config_register_2": 1,
                    "count": 2,
                    "counter": 11,
                    "data_register": 1,
                    "data_register_3": 1,
                    "data_value": 1,
                    "hardware_data": 1,
                    "offset": 1,
                    "ptr2": 1,
                    "second_value": 1,
                    "some_variable": 1,
                    "temp_variable2": 1,
                    "variable_a": 1,
                    "zero_var": 1
                },
                "param_1": {
                    "hardware_address": 1,
                    "input_value": 11,
                    "limit": 1,
                    "memory_size": 2,
                    "size": 3,
                    "value": 13
                },
                "return": {
                    "success": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080036d8",
                "FUN_080035b8"
            ],
            "code": "\n\n\nundefined4 initialize_memory_address_08003fd8(int value)\n\n{\n  if (value - 1U < 0x1000000) {\n    _DAT_e000e014 = value - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    success 0;\n  }\n  success 1;\n}\n\n",
            "current_name": "initialize_memory_address_08003fd8",
            "entrypoint": "0x08003fd8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003fd8": "initialize_memory_address_08003fd8",
                "param_1": "value",
                "return": "success"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004004": {
            "additional_data": {
                "FUN_08004004": {
                    "set_bit": 4,
                    "set_bit_at_index": 6,
                    "set_bit_at_offset": 1,
                    "set_bit_in_array": 8,
                    "set_bit_in_integer": 1,
                    "set_bit_in_memory": 8,
                    "set_bit_value": 2,
                    "write_bit_to_memory": 1
                },
                "int": {
                    "array_index": 1
                },
                "param_1": {
                    "bit_array": 1,
                    "bit_index": 9,
                    "bit_number": 1,
                    "bit_position": 8,
                    "index": 10,
                    "input_number": 1,
                    "offset": 1
                },
                "param_1_dec": {
                    "index_dec": 1
                },
                "param_1_shifted": {
                    "shifted_index": 1
                },
                "var1": {
                    "target_address": 1
                },
                "var2": {
                    "shifted_value": 1
                }
            },
            "called": [],
            "calling": [],
            "code": "\nvoid set_bit_in_memory_08004004(uarray_index index)\n\n{\n  if (-1 < (array_index)index) {\n    *(array_index *)(((index >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (index & 0x1f);\n  }\n  return;\n}\n\n",
            "current_name": "set_bit_in_memory_08004004",
            "entrypoint": "0x08004004",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004004": "set_bit_in_memory_08004004",
                "int": "array_index",
                "param_1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004024": {
            "additional_data": {
                "0xfffffffb": {
                    "bit_mask": 1
                },
                "4": {
                    "flag": 1
                },
                "FUN_08004024": {
                    "configure_data_register": 1,
                    "set_bit_in_register": 1,
                    "set_control_bit": 2,
                    "set_e000e010_bit": 1,
                    "set_e000e010_bits": 1,
                    "set_flag": 6,
                    "update_bit_flags": 1,
                    "update_bit_status": 1,
                    "update_control_register": 3,
                    "update_e000e010": 1,
                    "update_e000e010_bit": 2,
                    "update_e000e010_flag": 3,
                    "update_flag": 1,
                    "update_flag_status": 1,
                    "update_register_flag": 2,
                    "update_status": 3,
                    "update_variable": 1
                },
                "_DAT_e000e010": {
                    "control_register": 5,
                    "data_register": 2,
                    "e000e010": 1,
                    "flag": 2,
                    "flag_register": 2,
                    "flag_status": 1,
                    "flags": 1,
                    "register": 3,
                    "register_flag": 1,
                    "register_value": 5,
                    "status_register": 5
                },
                "param_1": {
                    "bit_flag": 1,
                    "bit_value": 3,
                    "flag": 2,
                    "flag_value": 5,
                    "input": 1,
                    "input_flag": 1,
                    "input_value": 5,
                    "param": 1,
                    "status": 4,
                    "status_flag": 1,
                    "value": 7
                },
                "param_2": {
                    "output": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080035b8"
            ],
            "code": "\n\n\nvoid set_flag_08004024(int value)\n\n{\n  if (value != 4) {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n    return;\n  }\n  _DAT_e000e010 = _DAT_e000e010 | 4;\n  return;\n}\n\n",
            "current_name": "set_flag_08004024",
            "entrypoint": "0x08004024",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004024": "set_flag_08004024",
                "param_1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004044": {
            "called": [],
            "calling": [
                "FUN_08004046"
            ],
            "code": "\nvoid FUNC_08004044(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08004044",
            "entrypoint": "0x08004044",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08004044": "FUNC_08004044"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08004046": {
            "additional_data": {
                "FUNC_08004044": {
                    "do_something": 1,
                    "execute_function": 1,
                    "execute_pre_systick_function": 1,
                    "execute_sub_function": 1,
                    "function08004044": 1,
                    "halt_sys_tick_callback": 1,
                    "handle_system_tick": 1,
                    "initialize_systick": 1,
                    "perform_action": 1,
                    "perform_additional_operations": 1,
                    "perform_custom_logic": 1,
                    "perform_custom_operation": 1,
                    "perform_initialization": 1,
                    "perform_operation": 1,
                    "perform_some_task": 1,
                    "perform_sys_tick_callback": 1,
                    "perform_system_tick": 3,
                    "perform_system_tick_callback": 2,
                    "perform_task": 2,
                    "update_sys_tick": 1
                },
                "FUN_08004046": {
                    "execute_sys_tick_callback": 1,
                    "handle_sys_tick_callback": 1,
                    "handle_sys_tick_event": 1,
                    "handle_sys_tick_interrupt": 1,
                    "initialize_sys_tick": 2,
                    "initialize_system": 1,
                    "initialize_system_tick": 6,
                    "initialize_system_timer": 1,
                    "initialize_systick": 9,
                    "initialize_systick_callback": 1,
                    "run_systick_callback": 1,
                    "update_sys_tick": 1,
                    "update_sys_tick_callback": 1,
                    "update_system_tick": 2,
                    "update_system_tick_callback": 1
                },
                "HAL_SYSTICK_Callback": {
                    "handle_sys_tick": 1,
                    "handle_sys_tick_interrupt": 1,
                    "handle_system_tick": 1,
                    "handle_system_timer_callback": 1,
                    "handle_systick": 2,
                    "handle_systick_callback": 2,
                    "handle_systick_interrupt": 5,
                    "process_system_tick": 1,
                    "system_tick_callback": 1
                }
            },
            "called": [
                "FUN_08004044"
            ],
            "calling": [
                "FUN_08007246"
            ],
            "code": "\nvoid initialize_systick_callback_08004046(void)\n\n{\n  handle_systick_interrupt();\n  return;\n}\n\n",
            "current_name": "initialize_systick_callback_08004046",
            "entrypoint": "0x08004046",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004046": "initialize_systick_callback_08004046",
                "HAL_SYSTICK_Callback": "handle_systick_interrupt"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004050": {
            "additional_data": {
                "0x0": {
                    "null_pointer": 1
                },
                "0x1000000": {
                    "configuration7": 1
                },
                "0x21": {
                    "new_configuration_flag": 1,
                    "status": 1,
                    "status_index": 1
                },
                "0x4": {
                    "default_configuration": 1
                },
                "0x40020004": {
                    "config_value": 1
                },
                "0x40020008": {
                    "address_case_1": 1,
                    "configuration1": 1,
                    "data_option1": 1
                },
                "0x4002001c": {
                    "address_case_2": 1,
                    "configuration2": 1,
                    "data_option2": 1
                },
                "0x40020030": {
                    "address_case_3": 1,
                    "configuration3": 1,
                    "data_option3": 1
                },
                "0x40020044": {
                    "address_case_4": 1,
                    "configuration4": 1,
                    "data_option4": 1
                },
                "0x40020058": {
                    "address_case_5": 1,
                    "configuration5": 1,
                    "data_option5": 1
                },
                "0x4002006c": {
                    "address_case_6": 1,
                    "configuration6": 1,
                    "data_option6": 1
                },
                "0xd": {
                    "callback": 1,
                    "callback_function": 1
                },
                "0xe": {
                    "error_code": 1,
                    "error_code_index": 1
                },
                "FUN_08004050": {
                    "configure": 1,
                    "configure_device": 1,
                    "configure_hardware": 1,
                    "configure_hardware_settings": 1,
                    "configure_memory": 1,
                    "configure_settings": 3,
                    "initialize_data": 7,
                    "initialize_flags": 2,
                    "initialize_memory": 1,
                    "initialize_settings": 1,
                    "initialize_value": 1,
                    "initialize_variable": 1,
                    "process_data": 1,
                    "set_configuration": 2,
                    "set_data_and_execute": 1,
                    "set_data_mode": 1,
                    "set_memory_configuration": 1,
                    "update_data": 2,
                    "update_memory_config": 1,
                    "update_memory_region": 1
                },
                "PTR_080490d4": {
                    "callback_function": 1
                },
                "_DAT_40020004": {
                    "config_value": 1,
                    "configured_value": 1,
                    "data": 1,
                    "data_flag": 2,
                    "data_register": 1,
                    "data_value": 5,
                    "default_config_value": 1,
                    "device_setting": 1,
                    "flag_value": 1,
                    "global_setting": 1,
                    "hardware_setting": 1,
                    "memory_setting": 2,
                    "memory_size": 2,
                    "region_value": 1,
                    "result": 2
                },
                "_DAT_40020008": {
                    "option1": 1
                },
                "_DAT_4002001c": {
                    "option2": 1
                },
                "_DAT_40020030": {
                    "option3": 1
                },
                "_DAT_40020044": {
                    "option4": 1
                },
                "_DAT_40020058": {
                    "option5": 1
                },
                "_DAT_4002006c": {
                    "option6": 1
                },
                "code": {
                    "callback": 1,
                    "function_to_execute": 1
                },
                "param_1": {
                    "config": 2,
                    "config_data": 2,
                    "data": 8,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "device_config": 1,
                    "flags": 1,
                    "hardware_config": 2,
                    "input_params": 1,
                    "inputs": 1,
                    "memory_config": 1,
                    "memory_configuration": 1,
                    "memory_pointer": 1,
                    "memory_region": 1,
                    "parameters": 2,
                    "settings": 4
                },
                "puVar1": {
                    "address": 1,
                    "base_address": 1,
                    "config_ptr": 1,
                    "current_address": 1,
                    "current_config": 2,
                    "current_configuration": 1,
                    "current_data": 1,
                    "current_flag": 1,
                    "current_input": 1,
                    "current_memory_region": 1,
                    "current_param": 1,
                    "current_pointer": 2,
                    "current_setting": 2,
                    "current_value": 1,
                    "data_value": 1,
                    "pointer": 1,
                    "ptr": 3,
                    "ptr_to_param": 1,
                    "selected_config": 1,
                    "selected_setting": 1,
                    "temp": 1,
                    "temp_pointer": 1,
                    "value": 3,
                    "value_ptr": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080069ec",
                "FUN_08004f3c"
            ],
            "code": "\n\n\nundefined4 initialize_data_08004050(uint **data)\n\n{\n  uint *value;\n  \n  if (*(char *)((int)data + 0x21) != '\\x02') {\n    data[0xe] = (uint *)0x4;\n    return 1;\n  }\n  **data = **data & 0xfffffff1;\n  **data = **data & 0xfffffffe;\n  value = *data;\n  if (value == (uint *)0x40020008) {\n    _DAT_40020004 = 1;\n  }\n  else if (value == (uint *)0x4002001c) {\n    _DAT_40020004 = 0x10;\n  }\n  else if (value == (uint *)0x40020030) {\n    _DAT_40020004 = 0x100;\n  }\n  else if (value == (uint *)0x40020044) {\n    _DAT_40020004 = 0x1000;\n  }\n  else if (value == (uint *)0x40020058) {\n    _DAT_40020004 = 0x10000;\n  }\n  else if (value == (uint *)0x4002006c) {\n    _DAT_40020004 = 0x100000;\n  }\n  else {\n    _DAT_40020004 = 0x1000000;\n  }\n  *(undefined *)((int)data + 0x21) = 1;\n  *(undefined *)(data + 8) = 0;\n  if (data[0xd] != (uint *)0x0) {\n    (*(function_to_execute *)data[0xd])();\n    return 0;\n  }\n  return 0;\n}\n\n",
            "current_name": "initialize_data_08004050",
            "entrypoint": "0x08004050",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004050": "initialize_data_08004050",
                "code": "function_to_execute",
                "param_1": "data",
                "puVar1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080040e8": {
            "additional_data": {
                "FUN_080040e8": {
                    "update_bitmask": 2,
                    "update_bits": 7,
                    "update_bitwise_values": 1,
                    "update_configuration": 1,
                    "update_flags": 1,
                    "update_flags_and_registers": 3,
                    "update_flags_and_settings": 1,
                    "update_param_bits": 1,
                    "update_param_values": 1,
                    "update_parameter_flags": 1,
                    "update_register": 2,
                    "update_register_values": 3,
                    "update_registers": 5,
                    "update_settings": 1
                },
                "_DAT_40010400": {
                    "register0": 1
                },
                "_DAT_40010404": {
                    "register1": 1
                },
                "_DAT_40010408": {
                    "register2": 1
                },
                "_DAT_4001040c": {
                    "register3": 1
                },
                "_DAT_40021018": {
                    "register_control": 1
                },
                "iVar7": {
                    "bit_offset": 7,
                    "bit_position": 1,
                    "bit_shift": 3,
                    "byte_index": 1,
                    "index": 1,
                    "offset": 1,
                    "register_index": 2,
                    "register_offset": 1,
                    "shift": 2,
                    "shift_amount": 7,
                    "shift_index": 1,
                    "shift_offset": 1,
                    "shifted_index": 1,
                    "temp_var1": 1
                },
                "iVar8": {
                    "array_index": 1,
                    "bit_shift_index": 1,
                    "device_index": 1,
                    "index": 4,
                    "register_index": 20,
                    "register_value": 2,
                    "temp_var2": 1
                },
                "param_1": {
                    "base_address": 1,
                    "bit_array": 1,
                    "bit_data": 1,
                    "bits": 1,
                    "bits_to_be_updated": 1,
                    "bits_to_modify": 1,
                    "bits_to_update": 2,
                    "config_array": 1,
                    "device_params": 1,
                    "flags": 1,
                    "input_flags": 1,
                    "output": 2,
                    "output_array": 1,
                    "output_flags": 1,
                    "output_params": 1,
                    "output_values": 1,
                    "register1": 2,
                    "register_addrs": 1,
                    "register_array": 4,
                    "register_array1": 1,
                    "register_values": 3,
                    "settings_array": 1,
                    "target_array": 1
                },
                "param_2": {
                    "bit_array": 1,
                    "bit_values": 2,
                    "bitmask": 1,
                    "bitmask_array": 2,
                    "command": 1,
                    "control_values": 1,
                    "data": 1,
                    "flag_array": 1,
                    "flags_array": 1,
                    "input": 2,
                    "input_array": 1,
                    "input_flags": 1,
                    "input_params": 2,
                    "input_values": 2,
                    "mask_array": 1,
                    "mask_bits": 1,
                    "register2": 2,
                    "register_array2": 1,
                    "register_values": 1,
                    "source_array": 1,
                    "source_bits": 1,
                    "update": 1,
                    "update_array": 2,
                    "update_mask": 1
                },
                "puVar1": {
                    "current_register": 1,
                    "current_word": 1,
                    "dst_register_addr": 1,
                    "flags_ptr": 1,
                    "modified_bits": 1,
                    "output_ptr": 3,
                    "register_pointer": 1,
                    "register_ptr": 3,
                    "updated_device_params": 1,
                    "updated_register": 1
                },
                "uVar2": {
                    "bit": 3,
                    "bit_mask": 23,
                    "bit_position": 1,
                    "current_bit": 1,
                    "flag_bit": 1,
                    "mask": 1
                },
                "uVar3": {
                    "and_result": 1,
                    "bit": 1,
                    "bit_check": 6,
                    "bit_mask": 1,
                    "bit_mask_result": 1,
                    "bit_value": 5,
                    "bitmask": 2,
                    "bitwise_and": 2,
                    "flag": 2,
                    "input_bit": 1,
                    "input_mask": 1,
                    "is_bit_set": 1,
                    "mask": 1,
                    "mask_result": 1,
                    "masked_bit_value": 1,
                    "masked_value": 2,
                    "result": 1
                },
                "uVar4": {
                    "bit_index": 9,
                    "bit_position": 5,
                    "counter": 2,
                    "current_bit_index": 1,
                    "i": 4,
                    "index": 5,
                    "iteration": 1,
                    "iterator": 1,
                    "loop_index": 1,
                    "register_index": 1
                },
                "uVar5": {
                    "command_value": 1,
                    "condition": 1,
                    "constant_value": 1,
                    "control_value": 1,
                    "data_type": 1,
                    "flag_type": 1,
                    "flag_value": 1,
                    "instruction": 1,
                    "mask_value": 1,
                    "opcode": 8,
                    "param_value": 1,
                    "type": 1,
                    "update_value": 1,
                    "value": 8,
                    "value_at_index": 1,
                    "value_check": 1
                },
                "uVar6": {
                    "bit_value": 1,
                    "new_bit_value": 1,
                    "new_bits_value": 1,
                    "new_param_value": 1,
                    "new_value": 9,
                    "offset": 1,
                    "result": 2,
                    "update_value": 2,
                    "updated_value": 11,
                    "value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08006e68",
                "FUN_08006ca8",
                "FUN_08007258"
            ],
            "code": "\n\n\nvoid update_flags_and_registers_080040e8(uint *register_array,uint *input)\n\n{\n  uint *output_ptr;\n  uint bit_mask;\n  uint bit_check;\n  uint bit_index;\n  uint opcode;\n  uint updated_value;\n  int bit_offset;\n  int register_index;\n  \n  updated_value = 0;\n  bit_index = 0;\n  do {\n    if (0xf < bit_index) {\n      return;\n    }\n    bit_mask = 1 << (bit_index & 0xff);\n    bit_check = *input & bit_mask;\n    if (bit_mask == bit_check) {\n      opcode = input[1];\n      if (opcode == 0x12) {\n        updated_value = input[3] + 0xc;\n      }\n      else if (opcode < 0x13) {\n        if (opcode == 2) {\n          updated_value = input[3] + 8;\n        }\n        else if (opcode < 3) {\n          if (opcode == 0) goto LAB_0800423a;\n          if (opcode == 1) {\n            updated_value = input[3];\n          }\n        }\n        else if (opcode == 3) {\n          updated_value = 0;\n        }\n        else if (opcode == 0x11) {\n          updated_value = input[3] + 4;\n        }\n      }\n      else if (opcode == 0x10210000) {\nLAB_0800423a:\n        if (input[2] == 0) {\n          updated_value = 4;\n        }\n        else if (input[2] == 1) {\n          register_array[4] = bit_mask;\n          updated_value = 8;\n        }\n        else {\n          register_array[5] = bit_mask;\n          updated_value = 8;\n        }\n      }\n      else if (opcode < 0x10210001) {\n        if ((opcode == 0x10110000) || (opcode == 0x10120000)) goto LAB_0800423a;\n      }\n      else if ((opcode == 0x10310000) || ((opcode == 0x10320000 || (opcode == 0x10220000))))\n      goto LAB_0800423a;\n      bit_mask = bit_index;\n      output_ptr = register_array;\n      if (0xff < bit_check) {\n        bit_mask = bit_index - 8;\n        output_ptr = register_array + 1;\n      }\n      *output_ptr = *output_ptr & ~(0xf << (bit_mask << 2 & 0xff)) | updated_value << (bit_mask << 2 & 0xff);\n      if ((input[1] & 0x10000000) != 0) {\n        _DAT_40021018 = _DAT_40021018 | 1;\n        bit_offset = (bit_index & 3) << 2;\n        if (register_array == (uint *)0x40010800) {\n          register_index = 0;\n        }\n        else if (register_array == (uint *)0x40010c00) {\n          register_index = 1;\n        }\n        else if (register_array == (uint *)0x40011000) {\n          register_index = 2;\n        }\n        else if (register_array == (uint *)0x40011400) {\n          register_index = 3;\n        }\n        else {\n          register_index = 4;\n        }\n        *(uint *)(((bit_index >> 2) + 2) * 4 + 0x40010000) =\n             *(uint *)(((bit_index >> 2) + 2) * 4 + 0x40010000) & ~(0xf << bit_offset) | register_index << bit_offset;\n        if ((input[1] & 0x10000) == 0) {\n          _DAT_40010400 = _DAT_40010400 & ~bit_check;\n        }\n        else {\n          _DAT_40010400 = _DAT_40010400 | bit_check;\n        }\n        if ((input[1] & 0x20000) == 0) {\n          _DAT_40010404 = _DAT_40010404 & ~bit_check;\n        }\n        else {\n          _DAT_40010404 = _DAT_40010404 | bit_check;\n        }\n        if ((input[1] & 0x100000) == 0) {\n          _DAT_40010408 = _DAT_40010408 & ~bit_check;\n        }\n        else {\n          _DAT_40010408 = _DAT_40010408 | bit_check;\n        }\n        if ((input[1] & 0x200000) == 0) {\n          _DAT_4001040c = _DAT_4001040c & ~bit_check;\n        }\n        else {\n          _DAT_4001040c = bit_check | _DAT_4001040c;\n        }\n      }\n    }\n    bit_index = bit_index + 1;\n  } while( true );\n}\n\n",
            "current_name": "update_flags_and_registers_080040e8",
            "entrypoint": "0x080040e8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080040e8": "update_flags_and_registers_080040e8",
                "iVar7": "bit_offset",
                "iVar8": "register_index",
                "param_1": "register_array",
                "param_2": "input",
                "puVar1": "output_ptr",
                "uVar2": "bit_mask",
                "uVar3": "bit_check",
                "uVar4": "bit_index",
                "uVar5": "opcode",
                "uVar6": "updated_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080042d4": {
            "additional_data": {
                "FUN_080042d4": {
                    "check_bit": 20,
                    "check_bit_flag": 1,
                    "check_bit_in_param": 1,
                    "check_bit_presence": 1,
                    "check_bit_set": 1,
                    "check_bitmask": 2,
                    "check_bitwise_match": 1,
                    "check_flags": 1,
                    "check_if_param_bit_is_set": 1,
                    "check_param_bit": 1,
                    "is_bit_set": 1
                },
                "param_1": {
                    "address": 2,
                    "base_address": 2,
                    "data": 1,
                    "data_address": 4,
                    "data_offset": 1,
                    "data_ptr": 3,
                    "first_param": 1,
                    "input1": 1,
                    "input_value": 13,
                    "offset": 2,
                    "value": 1
                },
                "param_2": {
                    "bit_flag": 1,
                    "bit_mask": 17,
                    "bit_pattern": 2,
                    "bitmask": 5,
                    "bits": 1,
                    "input2": 1,
                    "mask_value": 1,
                    "value": 3
                },
                "param_3": {
                    "bit_check_result": 1,
                    "result": 1
                },
                "param_4": {
                    "bit_value": 1
                },
                "param_5": {
                    "bit_check": 1
                },
                "param_6": {
                    "bit_flag": 1
                },
                "param_7": {
                    "bit_comparison": 1
                },
                "param_8": {
                    "bit_result": 1
                },
                "return": {
                    "result": 2
                },
                "return_0": {
                    "result": 1
                },
                "return_1": {
                    "result": 1
                },
                "return_value": {
                    "is_bit_set": 1
                },
                "uint": {
                    "unsigned_integer": 1
                },
                "var_1": {
                    "bit_mask_value": 1
                },
                "var_2": {
                    "result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080072f0"
            ],
            "code": "\nundefined4 check_bit_presence_080042d4(int input_value,unsigned_integer bit_mask)\n\n{\n  if ((bit_mask & *(unsigned_integer *)(input_value + 8)) == 0) {\n    result 0;\n  }\n  result 1;\n}\n\n",
            "current_name": "check_bit_presence_080042d4",
            "entrypoint": "0x080042d4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080042d4": "check_bit_presence_080042d4",
                "param_1": "input_value",
                "param_2": "bit_mask",
                "return": "result",
                "uint": "unsigned_integer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080042e2": {
            "additional_data": {
                "0x10": {
                    "offset": 1
                },
                "FUN_080042e2": {
                    "assign_parameter_value": 1,
                    "convert_and_store_value": 1,
                    "set_memory_value": 1,
                    "set_param": 2,
                    "set_param_value": 12,
                    "set_parameter": 1,
                    "set_parameter_value": 3,
                    "set_shifted_value": 1,
                    "store_param_in_memory": 1,
                    "store_param_value": 2,
                    "store_parameter_value": 1,
                    "update_data": 1,
                    "update_param": 1,
                    "update_param_value": 1,
                    "update_value": 1,
                    "update_value_based_on_condition": 1
                },
                "memory_location": {
                    "new_value": 1
                },
                "param_1": {
                    "address": 2,
                    "base_address": 6,
                    "data": 1,
                    "data_address": 1,
                    "memory_address": 1,
                    "memory_location": 1,
                    "obj_address": 2,
                    "obj_ptr": 1,
                    "object": 1,
                    "object_address": 11,
                    "object_ptr": 1,
                    "parameter": 1,
                    "parameter1": 1,
                    "target": 1
                },
                "param_2": {
                    "new_value": 5,
                    "param_value": 1,
                    "parameter2": 1,
                    "value": 23,
                    "value_to_store": 1
                },
                "param_3": {
                    "condition": 3,
                    "flag": 1,
                    "is_shifted": 25,
                    "shift_required": 2
                },
                "value_location": {
                    "new_value_location": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080072d8"
            ],
            "code": "\nvoid set_param_value_080042e2(int object_address,int value,int is_shifted)\n\n{\n  if (is_shifted == 0) {\n    *(int *)(object_address + 0x10) = value << 0x10;\n    return;\n  }\n  *(int *)(object_address + 0x10) = value;\n  return;\n}\n\n",
            "current_name": "set_param_value_080042e2",
            "entrypoint": "0x080042e2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080042e2": "set_param_value_080042e2",
                "param_1": "object_address",
                "param_2": "value",
                "param_3": "is_shifted"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080042f0": {
            "additional_data": {
                "FUN_080042f0": {
                    "check_and_execute_callback": 1,
                    "check_and_trigger_callback": 1,
                    "check_and_update_status": 1,
                    "handle_gpio_interrupt": 4,
                    "update_and_callback_if_set": 1,
                    "update_and_notify_if_changed": 1,
                    "update_gpio_callback": 1,
                    "update_gpio_ext_interrupt": 1,
                    "update_gpio_exti": 3,
                    "update_gpio_exti_callback": 2,
                    "update_gpio_exti_configuration": 1,
                    "update_gpio_exti_if_flag_set": 1,
                    "update_gpio_if_necessary": 1,
                    "update_gpio_if_triggered": 1,
                    "update_gpio_interrupt": 1,
                    "update_gpio_on_condition": 1,
                    "update_gpio_on_external_interrupt": 1,
                    "update_gpio_on_exti": 1,
                    "update_gpio_on_interrupt": 3,
                    "update_gpio_state": 3,
                    "update_param_and_invoke_callback": 1
                },
                "HAL_GPIO_EXTI_Callback": {
                    "execute_gpio_callback": 1,
                    "handle_external_interrupt": 3,
                    "handle_gpio_external_interrupt": 1,
                    "handle_gpio_exti": 1,
                    "handle_gpio_exti_callback": 2,
                    "handle_gpio_exti_event": 1,
                    "handle_gpio_interrupt": 7,
                    "invoke_gpio_callback": 1,
                    "trigger_callback": 1
                },
                "_DAT_40010414": {
                    "data_register": 2,
                    "existing_value": 1,
                    "gpio_control_register": 1,
                    "gpio_ext_interrupt_enable_mask": 1,
                    "gpio_exti_config": 1,
                    "gpio_exti_flag": 1,
                    "gpio_exti_value": 1,
                    "gpio_flags": 1,
                    "gpio_interrupt_flags": 1,
                    "gpio_register": 5,
                    "gpio_state": 3,
                    "gpio_status": 1,
                    "gpio_status_register": 2,
                    "status": 1
                },
                "param_1": {
                    "flag": 1,
                    "gpio_value": 2,
                    "input": 1,
                    "input_mask": 1,
                    "input_param": 1,
                    "input_parameter": 1,
                    "input_state": 1,
                    "input_value": 5,
                    "interrupt_flag": 3,
                    "interrupt_flags": 4,
                    "interrupt_mask": 1,
                    "mask": 1,
                    "new_input_value": 1,
                    "new_interrupt_mask": 1,
                    "new_param": 1,
                    "new_state": 2,
                    "new_value": 1,
                    "state": 1,
                    "update_value": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_08009094"
            ],
            "calling": [],
            "code": "\n\n\nvoid update_gpio_exti_callback_080042f0(uint input_value)\n\n{\n  if ((_DAT_40010414 & input_value) != 0) {\n    _DAT_40010414 = input_value;\n    handle_gpio_interrupt();\n  }\n  return;\n}\n\n",
            "current_name": "update_gpio_exti_callback_080042f0",
            "entrypoint": "0x080042f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080042f0": "update_gpio_exti_callback_080042f0",
                "HAL_GPIO_EXTI_Callback": "handle_gpio_interrupt",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800430c": {
            "additional_data": {
                "FUN_0800430c": {
                    "calculate_flag": 1,
                    "extract_bit_value": 1,
                    "param_processing_function": 1,
                    "set_flag": 1,
                    "set_flag_based_on_conditions": 4,
                    "set_permission_flag": 1,
                    "set_permissions": 1,
                    "set_value_based_on_condition": 1,
                    "update_flag": 2,
                    "update_flag_based_on_conditions": 1,
                    "update_flag_value": 5,
                    "update_flags_based_on_conditions": 1,
                    "update_function_permission": 1,
                    "update_param": 1,
                    "update_param1": 1,
                    "update_param_value": 2,
                    "update_param_values": 1,
                    "update_parameter": 3,
                    "update_permission": 1,
                    "update_status": 1
                },
                "data": {
                    "data": 1
                },
                "flagAddress": {
                    "flag_address": 1
                },
                "input_data": {
                    "input_data": 1
                },
                "param_1": {
                    "data": 5,
                    "flag_data": 1,
                    "function_params": 1,
                    "input": 1,
                    "input_array": 4,
                    "input_data": 5,
                    "param": 1,
                    "param_array": 1,
                    "param_list": 1,
                    "param_values": 1,
                    "parameter": 4,
                    "parameter_list": 1,
                    "params": 2,
                    "permissions": 2,
                    "status_data": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005188"
            ],
            "code": "\nundefined4 update_flag_value_0800430c(int *input_data)\n\n{\n  if (*(char *)((int)input_data + 0x3e) == '@') {\n    if (input_data[0x14] == 0) {\n      *(uint *)(*input_data + 0x10) = input_data[0x11] & 0xfe;\n    }\n    else {\n      *(uint *)(*input_data + 0x10) = input_data[0x11] & 0xffU | 1;\n    }\n  }\n  else if (input_data[4] == 0x4000) {\n    if (*(char *)((int)input_data + 0x3d) == '!') {\n      *(uint *)(*input_data + 0x10) = input_data[0x11] & 0xfe;\n    }\n    else {\n      *(uint *)(*input_data + 0x10) = input_data[0x11] & 0xffU | 1;\n    }\n  }\n  else if (input_data[0x14] == 0) {\n    *(uint *)(*input_data + 0x10) = (uint)(input_data[0x11] << 0x10) >> 0x17 & 6 | 0xf0;\n  }\n  else if (input_data[0x14] == 1) {\n    *(uint *)(*input_data + 0x10) = (uint)(input_data[0x11] << 0x10) >> 0x17 & 6 | 0xf1;\n  }\n  return 0;\n}\n\n",
            "current_name": "update_flag_value_0800430c",
            "entrypoint": "0x0800430c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800430c": "update_flag_value_0800430c",
                "param_1": "input_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004396": {
            "additional_data": {
                "0x10": {
                    "offset": 4
                },
                "0x11": {
                    "index": 2,
                    "param_index": 1
                },
                "0xff": {
                    "255": 1,
                    "mask": 2
                },
                "FUN_08004396": {
                    "assign_byte_value": 1,
                    "assign_param_to_pointer": 1,
                    "extract_and_store_byte": 1,
                    "extract_byte": 1,
                    "extract_data_and_store": 1,
                    "fill_buffer_with_byte": 1,
                    "set_byte_at_offset": 1,
                    "set_byte_from_array": 1,
                    "set_byte_from_param_plus_16": 1,
                    "set_byte_value": 1,
                    "set_byte_value_from_array_index": 1,
                    "set_first_byte": 1,
                    "set_first_byte_from_index": 1,
                    "set_param_value": 7,
                    "set_value_from_parameter": 1,
                    "set_value_in_memory": 1,
                    "set_values_from_params": 1,
                    "store_value_from_param_array": 1,
                    "update_byte": 1,
                    "update_memory": 1,
                    "update_param_value": 1,
                    "update_parameter_value": 1,
                    "update_value": 1,
                    "update_value_from_param": 1,
                    "write_byte_to_array": 1
                },
                "param_1": {
                    "array": 4,
                    "buffer_address": 1,
                    "data_array": 1,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "input_array": 6,
                    "input_list": 1,
                    "memory_address": 1,
                    "memory_ptr": 1,
                    "param": 1,
                    "param_array": 7,
                    "param_list": 1,
                    "parameter": 2,
                    "params": 1,
                    "ptr": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005188"
            ],
            "code": "\nundefined4 set_param_value_08004396(int *param_array)\n\n{\n  *(uint *)(*param_array + 0x10) = param_array[0x11] & 0xff;\n  return 0;\n}\n\n",
            "current_name": "set_param_value_08004396",
            "entrypoint": "0x08004396",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004396": "set_param_value_08004396",
                "param_1": "param_array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080043a2": {
            "additional_data": {
                "DAT_0800493d": {
                    "char1": 1
                },
                "DAT_0800493e": {
                    "char2": 1
                },
                "DAT_08006cdd": {
                    "double_quote": 1
                },
                "DAT_08006cde": {
                    "at_sign": 1
                },
                "DAT_08006cf5": {
                    "zero_value": 1
                },
                "DAT_08006cfe": {
                    "two_value": 1
                },
                "DAT_08006cff": {
                    "four_value": 1
                },
                "DAT_08006d01": {
                    "one_value": 1
                },
                "DAT_08006d16": {
                    "twelve_value": 1
                },
                "FUN_080043a2": {
                    "process_flags": 3,
                    "set_flag_and_increment": 1,
                    "set_flags": 6,
                    "set_flags_and_values": 2,
                    "set_flags_based_on_conditions": 1,
                    "update_flag": 1,
                    "update_flags": 13,
                    "update_flags_and_count": 1,
                    "update_flags_based_on_conditions": 1,
                    "update_permissions": 2
                },
                "_": {
                    "discard": 1
                },
                "param_1": {
                    "array": 1,
                    "param": 3,
                    "param_array": 1,
                    "parameters": 20,
                    "params": 4,
                    "permissions": 2
                },
                "ptrA": {
                    "ptr_permissions": 1
                },
                "ptrB": {
                    "ptr_value": 1
                },
                "ptrC": {
                    "ptr_check": 1
                },
                "ptrD": {
                    "ptr_double": 1
                },
                "ptrE": {
                    "ptr_triple": 1
                },
                "puVar1": {
                    "current_element": 1,
                    "flag": 1,
                    "flag_pointer": 1,
                    "flag_ptr": 3,
                    "param_value": 1,
                    "permission_data": 1,
                    "pointer": 1,
                    "pointer_to_var1": 1,
                    "pointer_var": 1,
                    "ptr": 2,
                    "ptr1": 4,
                    "ptr_to_param1_b": 1,
                    "ptr_var": 2,
                    "temp": 2,
                    "temp_pointer": 1,
                    "temp_ptr": 1,
                    "temp_var": 1,
                    "temp_var1": 1,
                    "value": 4,
                    "var_1": 1
                },
                "uint": {
                    "uint_type": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005188"
            ],
            "code": "\nundefined4 update_flags_based_on_conditions_080043a2(uint_type **parameters)\n\n{\n  uint_type *value;\n  \n  value = parameters[0xb];\n  if ((*(char *)((int)parameters + 0x3d) == '\\\"') &&\n     ((parameters[0x14] != (uint_type *)0x0 || (*(char *)((int)parameters + 0x3e) != '@')))) {\n    if ((parameters[0x14] == (uint_type *)0x0) && (parameters[4] == (uint_type *)0xc000)) {\n      **parameters = **parameters | 0x100;\n      parameters[0x14] = (uint_type *)((int)parameters[0x14] + 1);\n    }\n    else {\n      if (*(short *)((int)parameters + 0x2a) == 0) {\n        **parameters = **parameters | 0x200;\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 1) {\n        if (value == (uint_type *)0xffff0000) {\n          **parameters = **parameters & 0xfffffbff;\n          value = *parameters;\n          if ((value[1] & 0x800) == 0) {\n            *value = *value | 0x200;\n          }\n          else {\n            *value = *value & 0xfffffbff;\n          }\n        }\n        else if (((value == (uint_type *)0x4) || (value == (uint_type *)0x8)) ||\n                (parameters[0xc] == (uint_type *)0x12)) {\n          **parameters = **parameters & 0xfffffbff;\n          **parameters = **parameters | 0x200;\n        }\n        else if (parameters[0xb] == (uint_type *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n        }\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 2) {\n        if (parameters[0xb] == (uint_type *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters | 0x800;\n          **parameters = **parameters & 0xfffffbff;\n        }\n        value = *parameters;\n        if ((value[1] & 0x800) != 0) {\n          value[1] = value[1] | 0x1000;\n        }\n      }\n      else {\n        **parameters = **parameters | 0x400;\n        value = *parameters;\n        if ((value[1] & 0x800) != 0) {\n          value[1] = value[1] | 0x1000;\n        }\n      }\n      parameters[0x14] = (uint_type *)0x0;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "update_flags_based_on_conditions_080043a2",
            "entrypoint": "0x080043a2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080043a2": "update_flags_based_on_conditions_080043a2",
                "_": "discard",
                "param_1": "parameters",
                "puVar1": "value",
                "uint": "uint_type"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800457c": {
            "additional_data": {
                "FUN_0800457c": {
                    "decode_byte": 1,
                    "extract_and_decrement": 1,
                    "extract_byte_and_decrement_counter": 1,
                    "extract_byte_from_binary": 1,
                    "extract_first_byte": 1,
                    "increment_and_store_byte": 1,
                    "increment_and_store_value": 1,
                    "update_and_decrement_value": 1,
                    "update_array": 1,
                    "update_buffer": 2,
                    "update_byte_array": 3,
                    "update_byte_array_offset": 1,
                    "update_byte_value": 1,
                    "update_data": 3,
                    "update_data_array": 1,
                    "update_memory_value": 1,
                    "update_parameter_value": 1,
                    "update_pointer": 1,
                    "update_pointer_and_decrement": 1,
                    "update_pointer_value": 2,
                    "update_pointers": 1,
                    "update_value": 3,
                    "update_value_from_buffer": 1
                },
                "param_1": {
                    "array": 6,
                    "array_pointer": 1,
                    "array_ptr": 1,
                    "binary_ptr": 1,
                    "buffer": 3,
                    "byte_array": 1,
                    "data": 3,
                    "data_pointer": 2,
                    "input_array": 4,
                    "input_data": 1,
                    "int_array": 1,
                    "memory_block": 1,
                    "parameter_array": 1,
                    "pointer": 2,
                    "pointer_array": 2,
                    "pointers": 1
                },
                "pbVar1": {
                    "buffer_pointer": 1,
                    "byte_array": 1,
                    "byte_pointer": 15,
                    "byte_ptr": 9,
                    "current_byte": 3,
                    "data_pointer": 1,
                    "pointer_to_byte": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005188"
            ],
            "code": "\nundefined4 update_pointer_value_0800457c(int *array)\n\n{\n  byte *byte_pointer;\n  \n  if (*(short *)((int)array + 0x2a) != 0) {\n    byte_pointer = (byte *)array[9];\n    array[9] = (int)(byte_pointer + 1);\n    *(uint *)(*array + 0x10) = (uint)*byte_pointer;\n    *(short *)((int)array + 0x2a) = *(short *)((int)array + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "current_name": "update_pointer_value_0800457c",
            "entrypoint": "0x0800457c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800457c": "update_pointer_value_0800457c",
                "param_1": "array",
                "pbVar1": "byte_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800459c": {
            "additional_data": {
                "0x2a": {
                    "offset": 1
                },
                "FUN_0800459c": {
                    "copy_value_to_memory": 1,
                    "increment_and_copy_value": 1,
                    "update_and_decrement_counter": 1,
                    "update_and_decrement_short": 1,
                    "update_array": 3,
                    "update_array_and_pointer": 1,
                    "update_array_element": 1,
                    "update_char_in_array": 1,
                    "update_data": 9,
                    "update_param1": 1,
                    "update_param9": 1,
                    "update_parameter": 1,
                    "update_parameter_value": 1,
                    "update_pointer_and_value": 1,
                    "update_short_value": 1,
                    "update_value": 5,
                    "update_value_and_decrement": 1
                },
                "param_1": {
                    "array": 12,
                    "array_ptr": 1,
                    "data": 6,
                    "data_array": 1,
                    "data_ptr": 2,
                    "input_array": 4,
                    "param": 1,
                    "param_array": 1,
                    "parameter": 1,
                    "parameter_pointer": 1,
                    "pointer_array": 1
                },
                "puVar1": {
                    "array_element": 2,
                    "buffer": 1,
                    "byte_pointer": 1,
                    "byte_ptr": 1,
                    "current_char_ptr": 1,
                    "current_element": 1,
                    "current_ptr": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "destination": 1,
                    "next_ptr": 1,
                    "output_pointer": 1,
                    "pointer": 5,
                    "pointer_to_value": 1,
                    "ptr": 4,
                    "ptr_to_char": 2,
                    "ptr_to_element": 1,
                    "ptr_to_value": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 2,
                    "updated_ptr": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005188"
            ],
            "code": "\nundefined4 update_data_0800459c(int *array)\n\n{\n  undefined *pointer;\n  \n  if (*(short *)((int)array + 0x2a) != 0) {\n    pointer = (undefined *)array[9];\n    array[9] = (int)(pointer + 1);\n    *pointer = (char)*(undefined4 *)(*array + 0x10);\n    *(short *)((int)array + 0x2a) = *(short *)((int)array + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "current_name": "update_data_0800459c",
            "entrypoint": "0x0800459c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800459c": "update_data_0800459c",
                "param_1": "array",
                "puVar1": "pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080045bc": {
            "called": [],
            "calling": [
                "FUN_080045c0"
            ],
            "code": "\nvoid FUNC_080045bc(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080045bc",
            "entrypoint": "0x080045bc",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080045bc": "FUNC_080045bc"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080045c0": {
            "additional_data": {
                "0x0": {
                    "null": 1
                },
                "0x24": {
                    "initialized_value": 1
                },
                "0x3d": {
                    "is_initialized": 1
                },
                "0x3e": {
                    "tmp_value": 1
                },
                "FUNC_080045bc": {
                    "configure_device_i_os": 1,
                    "deinit_i2_c_peripheral": 1,
                    "func_080045bc": 1,
                    "hal_rcc_get_pclk1_freq": 1,
                    "i2c_config_update": 1,
                    "initialize_hal_rcc": 1,
                    "initialize_i2_c": 1,
                    "initialize_i2_c_periph": 1,
                    "initialize_i2_c_peripherals": 1,
                    "not_used": 1,
                    "set_i2_c_clock_rate": 1,
                    "some_function": 1,
                    "toggle_bit": 1,
                    "unused_function": 1
                },
                "FUN_080045c0": {
                    "calculate_timing_parameters": 1,
                    "configure_i2_c_peripheral": 1,
                    "initialize_device": 6,
                    "initialize_hardware": 1,
                    "initialize_i2_c": 17,
                    "initialize_i2_c_device": 3,
                    "initialize_i2_c_peripheral": 1,
                    "initialize_params": 1
                },
                "FUN_08005a28": {
                    "get_pclk1_freq": 5,
                    "get_pclk1_frequency": 2,
                    "get_peripheral_clock_freq": 1,
                    "hal_rcc_get_pclk1_freq": 6
                },
                "HAL_I2C_MspInit": {
                    "initialize_i2_c": 4,
                    "initialize_i2_c_hardware": 6,
                    "initialize_i2_c_msp": 2,
                    "initialize_i2_c_peripheral": 5,
                    "initialize_i2_c_peripheral_dependencies": 1,
                    "initialize_i2_c_pins": 3
                },
                "HAL_RCC_GetPCLK1Freq": {
                    "get_pclk1_frequency": 3
                },
                "bVar1": {
                    "flag": 1,
                    "is_clock_rate_valid": 1,
                    "is_clock_value_too_high": 1,
                    "is_freq_less": 1,
                    "is_freq_less_than_threshold": 1,
                    "is_freq_low": 1,
                    "is_freq_valid": 1,
                    "is_frequency_valid": 2,
                    "is_less_than4_m_hz": 1,
                    "is_low_clock": 1,
                    "is_low_clock_freq": 1,
                    "is_low_clock_frequency": 1,
                    "is_low_clock_speed": 2,
                    "is_low_frequency": 1,
                    "is_low_speed": 5,
                    "is_pclk1_freq_less_than": 1,
                    "is_pclk1_freq_low": 3,
                    "is_pclk1_freq_valid": 1,
                    "is_pclk1_less_than2_m_hz": 2,
                    "is_pclk1_low": 1,
                    "is_pclk1_under2_mhz": 1,
                    "is_slow_clock": 1
                },
                "param_1": {
                    "config": 6,
                    "config_info": 1,
                    "config_param": 1,
                    "config_params": 1,
                    "device_config": 2,
                    "device_params": 6,
                    "hardware_config": 1,
                    "i2c_config": 5,
                    "i2c_device": 1,
                    "i2c_params": 1,
                    "i2c_peripheral_data": 1,
                    "parameters": 4,
                    "params": 1
                },
                "puVar3": {
                    "clock_divider": 1,
                    "clock_divisor": 1,
                    "config1": 1,
                    "config_p": 1,
                    "config_param1": 1,
                    "device_config_ptr": 1,
                    "device_freq": 1,
                    "device_param1": 3,
                    "divider": 2,
                    "divisor": 2,
                    "freq_ratio": 1,
                    "frequency_divider": 1,
                    "i2c_config1": 1,
                    "i2c_freq": 1,
                    "i2c_freq_div": 1,
                    "i2c_frequency": 1,
                    "i2c_params1": 1,
                    "i2c_peripheral_data_1": 1,
                    "i2c_prescaler": 1,
                    "parameter1": 2,
                    "pclk1_div": 2,
                    "prescaler": 1,
                    "pu_var": 1,
                    "temp_var": 1
                },
                "uVar2": {
                    "clock_freq": 1,
                    "pclk1_freq": 24,
                    "pclk1_frequency": 5,
                    "sys_clock_freq": 1
                },
                "uVar4": {
                    "adjusted_divider": 1,
                    "calculated_value": 4,
                    "calculated_var": 1,
                    "calculation_result": 1,
                    "clock_divisor": 1,
                    "config_param2": 1,
                    "device_clock_div": 1,
                    "divider": 3,
                    "division_factor": 1,
                    "divisor": 1,
                    "frequency_divider": 1,
                    "i2c_prescaler": 1,
                    "i2c_timing": 2,
                    "multiplier": 1,
                    "prescaler": 2,
                    "reload_value": 1,
                    "scl_period": 1,
                    "temp": 1,
                    "temp_val": 1,
                    "temp_var": 1,
                    "temp_variable": 1,
                    "tmp": 1,
                    "u_var4": 1,
                    "var2": 1
                }
            },
            "called": [
                "FUN_08005a28",
                "FUN_080045bc"
            ],
            "calling": [
                "FUN_080077b0"
            ],
            "code": "\nundefined4 initialize_i2_c_device_080045c0(uint **config)\n\n{\n  bool is_low_speed;\n  uint pclk1_freq;\n  uint *device_param1;\n  uint calculated_value;\n  \n  if (config == (uint **)0x0) {\n    return 1;\n  }\n  if (*(char *)((int)config + 0x3d) == '\\0') {\n    *(undefined *)(config + 0xf) = 0;\n    initialize_i2_c_hardware();\n  }\n  *(undefined *)((int)config + 0x3d) = 0x24;\n  **config = **config & 0xfffffffe;\n  pclk1_freq = get_pclk1_frequency();\n  if (config[1] < (uint *)0x186a1) {\n    if (pclk1_freq < 2000000) {\n      is_low_speed = true;\n    }\n    else {\n      is_low_speed = false;\n    }\n  }\n  else {\n    is_low_speed = pclk1_freq < 4000000;\n  }\n  if (is_low_speed) {\n    return 1;\n  }\n  calculated_value = pclk1_freq / 1000000;\n  (*config)[1] = calculated_value;\n  if ((uint *)0x186a0 < config[1]) {\n    calculated_value = (calculated_value * 300) / 1000;\n  }\n  (*config)[8] = calculated_value + 1;\n  device_param1 = config[1];\n  if (device_param1 < (uint *)0x186a1) {\n    pclk1_freq = (pclk1_freq - 1) / (uint)((int)device_param1 << 1) + 1 & 0xfff;\n    if (pclk1_freq < 4) {\n      pclk1_freq = 4;\n    }\n  }\n  else {\n    if (config[2] == (uint *)0x0) {\n      calculated_value = (pclk1_freq - 1) / (uint)((int)device_param1 * 3);\n    }\n    else {\n      calculated_value = (pclk1_freq - 1) / (uint)((int)device_param1 * 0x19);\n    }\n    if ((calculated_value + 1 & 0xfff) == 0) {\n      pclk1_freq = 1;\n    }\n    else if (config[2] == (uint *)0x0) {\n      pclk1_freq = (pclk1_freq - 1) / (uint)((int)device_param1 * 3) + 1 & 0xfff | 0x8000;\n    }\n    else {\n      pclk1_freq = (pclk1_freq - 1) / (uint)((int)device_param1 * 0x19) + 1 & 0xfff | 0xc000;\n    }\n  }\n  (*config)[7] = pclk1_freq;\n  **config = (uint)config[7] | (uint)config[8];\n  (*config)[2] = (uint)config[4] | (uint)config[3];\n  (*config)[3] = (uint)config[5] | (uint)config[6];\n  **config = **config | 1;\n  config[0x10] = (uint *)0x0;\n  *(undefined *)((int)config + 0x3d) = 0x20;\n  config[0xc] = (uint *)0x0;\n  *(undefined *)((int)config + 0x3e) = 0;\n  return 0;\n}\n\n",
            "current_name": "initialize_i2_c_device_080045c0",
            "entrypoint": "0x080045c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080045c0": "initialize_i2_c_device_080045c0",
                "HAL_I2C_MspInit": "initialize_i2_c_hardware",
                "HAL_RCC_GetPCLK1Freq": "get_pclk1_frequency",
                "bVar1": "is_low_speed",
                "param_1": "config",
                "puVar3": "device_param1",
                "uVar2": "pclk1_freq",
                "uVar4": "calculated_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004728": {
            "additional_data": {
                "FUN_08004728": {
                    "calculate_delay": 1,
                    "check_and_initialize": 1,
                    "decode_and_update_flags": 1,
                    "process_data": 21,
                    "process_input": 4,
                    "process_parameters": 1,
                    "update_parameter": 1
                },
                "local_c": {
                    "count": 3,
                    "counter": 24,
                    "loop_count": 1,
                    "loop_counter": 2
                },
                "param_1": {
                    "arg1": 1,
                    "data": 15,
                    "data_list": 1,
                    "data_params": 1,
                    "data_ptr": 2,
                    "input": 1,
                    "input_array": 1,
                    "input_array_ptr": 1,
                    "input_data": 1,
                    "input_params": 2,
                    "param_array": 1,
                    "parameters": 1,
                    "parameters_ptr": 1,
                    "params": 1
                },
                "param_2": {
                    "arg2": 1,
                    "data1": 3,
                    "data_ptr": 1,
                    "input1": 8,
                    "input_param": 1,
                    "output": 1,
                    "output_param1": 2,
                    "param1": 4,
                    "param2_ptr": 1,
                    "param_2_ptr": 1,
                    "param_a": 1,
                    "param_ptr1": 1,
                    "param_ptr_a": 1,
                    "ptr1": 2,
                    "value1": 2
                },
                "param_3": {
                    "arg3": 1,
                    "data2": 3,
                    "input": 1,
                    "input2": 8,
                    "other_data_ptr": 1,
                    "output_param": 1,
                    "output_param2": 2,
                    "param2": 4,
                    "param3_ptr": 1,
                    "param_3_ptr": 1,
                    "param_b": 1,
                    "param_ptr2": 1,
                    "param_ptr_b": 1,
                    "ptr2": 2,
                    "value2": 2
                },
                "param_4": {
                    "arg4": 1,
                    "flag": 8,
                    "input3": 3,
                    "input_char": 1,
                    "param": 1,
                    "param2_byte_value": 1,
                    "param3": 4,
                    "param4": 1,
                    "param_4": 1,
                    "param_4_value": 1,
                    "param_c": 1,
                    "param_flag": 1,
                    "param_value": 2,
                    "status_param": 1,
                    "value": 3
                },
                "puVar2": {
                    "current_ptr": 2,
                    "pointer": 2,
                    "ptr": 19,
                    "ptr_data": 1,
                    "ptr_var": 3,
                    "temp_ptr": 2,
                    "temp_var": 1
                },
                "uVar1": {
                    "result": 19,
                    "return_value": 11
                }
            },
            "called": [],
            "calling": [
                "FUN_08007e74"
            ],
            "code": "\nundefined4 process_data_08004728(uint **data,uint *input1,uint *input2,undefined2 flag)\n\n{\n  undefined4 result;\n  uint *ptr;\n  int counter;\n  \n  if (*(char *)((int)data + 0x3d) == ' ') {\n    counter = (DAT_20000018 / 25000) * 0x19;\n    do {\n      if (counter == 0) {\n        data[0xc] = (uint *)0x0;\n        *(undefined *)((int)data + 0x3d) = 0x20;\n        *(undefined *)(data + 0xf) = 0;\n        return 3;\n      }\n      ptr = *data;\n      counter = counter + -1;\n    } while ((ptr[6] & 2) != 0);\n    if (*(char *)(data + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(data + 0xf) = 1;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **data = **data & 0xfffff7ff;\n      *(undefined *)((int)data + 0x3d) = 0x21;\n      *(undefined *)((int)data + 0x3e) = 0x10;\n      result = 0;\n      data[0x10] = (uint *)0x0;\n      data[9] = input2;\n      *(undefined2 *)((int)data + 0x2a) = flag;\n      data[0xb] = (uint *)0xffff0000;\n      *(undefined2 *)(data + 10) = *(undefined2 *)((int)data + 0x2a);\n      data[0x11] = input1;\n      **data = **data | 0x100;\n      *(undefined *)(data + 0xf) = 0;\n      (*data)[1] = (*data)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "current_name": "process_data_08004728",
            "entrypoint": "0x08004728",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004728": "process_data_08004728",
                "local_c": "counter",
                "param_1": "data",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "flag",
                "puVar2": "ptr",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080047f4": {
            "additional_data": {
                "0x10": {
                    "new_value4": 1
                },
                "0x20": {
                    "new_value2": 1
                },
                "0x22": {
                    "new_value3": 1
                },
                "0x3D": {
                    "offset": 1
                },
                "1": {
                    "value_1": 1
                },
                "2": {
                    "value_2": 1
                },
                "3": {
                    "success": 1
                },
                "DAT_20000018": {
                    "constant1": 1
                },
                "FUN_080047f4": {
                    "check_and_initialize": 1,
                    "decode_and_process_data": 1,
                    "handle_input": 2,
                    "handle_param_checks": 1,
                    "initialize_connection": 1,
                    "initialize_device": 1,
                    "parse_arguments": 1,
                    "perform_operation": 1,
                    "process_command": 1,
                    "process_data": 15,
                    "process_function": 1,
                    "process_input": 1,
                    "process_parameters": 1,
                    "process_params": 2,
                    "update_param_values": 1
                },
                "local_c": {
                    "count": 6,
                    "counter": 23,
                    "loop_count": 1,
                    "loop_counter": 1
                },
                "param_1": {
                    "command_array": 1,
                    "command_params": 1,
                    "connection_info": 1,
                    "data": 15,
                    "data_ptr": 1,
                    "device_params": 1,
                    "input": 2,
                    "input_array": 1,
                    "input_data": 2,
                    "input_parameters": 1,
                    "input_params": 1,
                    "params": 4
                },
                "param_2": {
                    "data1": 1,
                    "data_1": 1,
                    "input1": 6,
                    "input_buffer": 1,
                    "output1": 1,
                    "param1": 10,
                    "param2": 5,
                    "param2_array": 1,
                    "param_a": 3,
                    "param_ptr": 1,
                    "ptr1": 1
                },
                "param_3": {
                    "data2": 1,
                    "data_2": 1,
                    "input2": 6,
                    "output2": 1,
                    "output_buffer": 1,
                    "param2": 10,
                    "param3": 5,
                    "param3_array": 1,
                    "param_b": 3,
                    "ptr2": 1,
                    "result_ptr": 1
                },
                "param_4": {
                    "flag": 5,
                    "input3": 1,
                    "param": 2,
                    "param3": 10,
                    "param4": 4,
                    "param4_value": 1,
                    "param_4": 1,
                    "param_c": 3,
                    "status": 2,
                    "value": 2
                },
                "puVar2": {
                    "array_ptr": 1,
                    "current_command": 1,
                    "current_pointer": 1,
                    "param_ptr": 1,
                    "ptr": 19,
                    "ptr_var": 3,
                    "temp_pointer": 2,
                    "temp_ptr": 3
                },
                "uVar1": {
                    "result": 21,
                    "return_value": 10
                }
            },
            "called": [],
            "calling": [
                "FUN_08007f0e"
            ],
            "code": "\nundefined4 decode_and_process_data_080047f4(uint **data,uint *param1,uint *param2,undefined2 param3)\n\n{\n  undefined4 result;\n  uint *ptr;\n  int counter;\n  \n  if (*(char *)((int)data + 0x3d) == ' ') {\n    counter = (DAT_20000018 / 25000) * 0x19;\n    do {\n      if (counter == 0) {\n        data[0xc] = (uint *)0x0;\n        *(undefined *)((int)data + 0x3d) = 0x20;\n        *(undefined *)(data + 0xf) = 0;\n        return 3;\n      }\n      ptr = *data;\n      counter = counter + -1;\n    } while ((ptr[6] & 2) != 0);\n    if (*(char *)(data + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(data + 0xf) = 1;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **data = **data & 0xfffff7ff;\n      *(undefined *)((int)data + 0x3d) = 0x22;\n      *(undefined *)((int)data + 0x3e) = 0x10;\n      result = 0;\n      data[0x10] = (uint *)0x0;\n      data[9] = param2;\n      *(undefined2 *)((int)data + 0x2a) = param3;\n      data[0xb] = (uint *)0xffff0000;\n      *(undefined2 *)(data + 10) = *(undefined2 *)((int)data + 0x2a);\n      data[0x11] = param1;\n      **data = **data | 0x400;\n      **data = **data | 0x100;\n      *(undefined *)(data + 0xf) = 0;\n      (*data)[1] = (*data)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "current_name": "decode_and_process_data_080047f4",
            "entrypoint": "0x080047f4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080047f4": "decode_and_process_data_080047f4",
                "local_c": "counter",
                "param_1": "data",
                "param_2": "param1",
                "param_3": "param2",
                "param_4": "param3",
                "puVar2": "ptr",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080048c8": {
            "additional_data": {
                "FUN_080048c8": {
                    "check_and_initialize": 2,
                    "check_and_update_parameters": 1,
                    "handle_param": 1,
                    "handle_parameter": 1,
                    "initialize_data": 2,
                    "initialize_data_structure": 1,
                    "initialize_parameters": 3,
                    "parse_arguments": 1,
                    "parse_input": 2,
                    "parse_parameters": 1,
                    "process_function": 1,
                    "process_parameters": 1,
                    "process_params": 4,
                    "update_parameters": 1,
                    "update_params": 1,
                    "validate_input": 2,
                    "validate_parameters": 3,
                    "validate_params": 3
                },
                "param_1": {
                    "arguments": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "data_structure": 1,
                    "input_data": 3,
                    "input_parameters": 1,
                    "input_ptr": 1,
                    "param1": 2,
                    "param_array": 5,
                    "param_list": 5,
                    "param_pointer": 1,
                    "param_ptr": 1,
                    "parameter_1": 1,
                    "parameter_list": 2,
                    "parameters": 2,
                    "pointer": 2,
                    "pointer_list": 1
                },
                "param_2": {
                    "arg1": 1,
                    "data": 1,
                    "data_pointer": 4,
                    "data_ptr": 1,
                    "input1": 1,
                    "input_pointer": 1,
                    "input_ptr": 2,
                    "optional_data": 1,
                    "optional_param": 1,
                    "optional_value": 1,
                    "param1": 4,
                    "param2": 3,
                    "param_pointer": 2,
                    "param_ptr": 5,
                    "parameter_2": 1,
                    "pointer": 1,
                    "target_ptr": 1
                },
                "param_3": {
                    "arg2": 1,
                    "data_length": 1,
                    "data_size": 1,
                    "input2": 1,
                    "input_size": 3,
                    "length": 4,
                    "optional_size": 1,
                    "param2": 2,
                    "param3": 3,
                    "param_count": 3,
                    "param_length": 2,
                    "param_size": 2,
                    "param_value": 2,
                    "parameter_3": 1,
                    "size": 4
                },
                "param_4": {
                    "additional_param": 1,
                    "arg3": 1,
                    "data": 1,
                    "data_buffer": 1,
                    "data_ptr": 1,
                    "flag": 1,
                    "input3": 1,
                    "output": 1,
                    "output_buffer": 1,
                    "output_data": 2,
                    "output_pointer": 1,
                    "output_ptr": 3,
                    "param2": 2,
                    "param3": 1,
                    "param4": 4,
                    "param_data": 3,
                    "param_ptr2": 1,
                    "param_value": 1,
                    "parameter_4": 1,
                    "result": 2,
                    "result_pointer": 1
                },
                "puVar2": {
                    "first_element": 2,
                    "first_ptr": 1,
                    "first_value": 1,
                    "flags_ptr": 1,
                    "pointer1": 1,
                    "pointer_value": 1,
                    "pointer_var": 3,
                    "ptr": 9,
                    "ptr1": 1,
                    "ptr_param1": 1,
                    "ptr_val": 1,
                    "ptr_var": 5,
                    "temp_pointer": 1,
                    "temp_ptr": 2,
                    "value_pointer": 1
                },
                "short": {
                    "short_value": 1
                },
                "uVar1": {
                    "result": 22,
                    "return_value": 6,
                    "status": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_08007fa0"
            ],
            "code": "\nundefined4 process_params_080048c8(uint **param_list,uint *param_ptr,int size,uint *param4)\n\n{\n  undefined4 result;\n  uint *ptr;\n  \n  if (*(char *)((int)param_list + 0x3d) == '(') {\n    if (param_ptr == (uint *)0x0) {\n      result = 1;\n    }\n    else if (size == 0) {\n      result = 1;\n    }\n    else if (*(char *)(param_list + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(param_list + 0xf) = 1;\n      ptr = *param_list;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **param_list = **param_list & 0xfffff7ff;\n      *(undefined *)((int)param_list + 0x3d) = 0x29;\n      *(undefined *)((int)param_list + 0x3e) = 0x20;\n      result = 0;\n      param_list[0x10] = (uint *)0x0;\n      param_list[9] = param_ptr;\n      *(short_value *)((int)param_list + 0x2a) = (short_value)size;\n      param_list[0xb] = param4;\n      *(undefined2 *)(param_list + 10) = *(undefined2 *)((int)param_list + 0x2a);\n      *(undefined *)(param_list + 0xf) = 0;\n      (*param_list)[1] = (*param_list)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "current_name": "process_params_080048c8",
            "entrypoint": "0x080048c8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080048c8": "process_params_080048c8",
                "param_1": "param_list",
                "param_2": "param_ptr",
                "param_3": "size",
                "param_4": "param4",
                "puVar2": "ptr",
                "short": "short_value",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004954": {
            "additional_data": {
                "FUN_08004954": {
                    "check_and_initialize": 1,
                    "extract_data": 1,
                    "initialize_data": 2,
                    "initialize_parameters": 2,
                    "parse_input": 2,
                    "parse_parameters": 1,
                    "process_data": 3,
                    "process_input": 1,
                    "process_parameter": 1,
                    "process_parameters": 4,
                    "process_params": 4,
                    "validate_and_initialize": 1,
                    "validate_input": 4,
                    "validate_input_parameters": 1,
                    "validate_inputs": 1,
                    "validate_parameters": 1,
                    "validate_params": 1
                },
                "param_1": {
                    "config": 1,
                    "data": 3,
                    "data_container": 1,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "input": 2,
                    "input_buffer": 1,
                    "input_data": 1,
                    "input_parameters": 1,
                    "input_ptr": 1,
                    "options": 1,
                    "param_array": 5,
                    "param_list": 1,
                    "param_pointer": 1,
                    "parameter1": 1,
                    "parameter_1": 1,
                    "parameter_array": 2,
                    "parameter_list": 2,
                    "parameters": 1,
                    "pointer_array": 1,
                    "pp_params": 1
                },
                "param_2": {
                    "buffer": 2,
                    "data": 1,
                    "data_pointer": 1,
                    "data_ptr": 3,
                    "input1": 1,
                    "input_array": 1,
                    "input_data": 2,
                    "input_param1": 1,
                    "input_pointer": 1,
                    "optional_data": 1,
                    "p_param1": 1,
                    "param1": 1,
                    "param1_ptr": 1,
                    "param2": 2,
                    "param_ptr": 4,
                    "parameter2": 1,
                    "parameter_2": 1,
                    "pointer": 1,
                    "ptr_data": 1,
                    "second_parameter": 1,
                    "value": 1,
                    "value_pointer": 1,
                    "value_ptr": 1
                },
                "param_3": {
                    "array_length": 1,
                    "buffer_size": 1,
                    "count": 1,
                    "data_size": 4,
                    "input2": 1,
                    "input_param2": 1,
                    "input_size": 2,
                    "length": 4,
                    "optional_data_length": 1,
                    "param1_size": 1,
                    "param2": 2,
                    "param3": 2,
                    "param_length": 2,
                    "param_value": 1,
                    "parameter3": 1,
                    "parameter_3": 1,
                    "size": 2,
                    "third_parameter": 1,
                    "value": 1,
                    "value_length": 1
                },
                "param_4": {
                    "additional_data": 1,
                    "buffer": 2,
                    "data": 1,
                    "fourth_parameter": 1,
                    "input3": 1,
                    "input_param3": 1,
                    "output": 2,
                    "output_array": 1,
                    "output_data": 2,
                    "output_pointer": 3,
                    "output_ptr": 2,
                    "p_param2": 1,
                    "param3": 1,
                    "param3_ptr": 1,
                    "param4": 2,
                    "param_array": 1,
                    "param_data": 1,
                    "parameter4": 1,
                    "parameter_4": 1,
                    "ptr_result": 1,
                    "result": 1,
                    "result_ptr": 2,
                    "return_ptr": 1
                },
                "puVar2": {
                    "config_ptr": 1,
                    "first_element": 1,
                    "first_element_pointer": 1,
                    "p_current_param": 1,
                    "pointer": 2,
                    "pointer2": 1,
                    "pointer_to_data": 2,
                    "pointer_var": 3,
                    "pointer_variable": 1,
                    "ptr": 12,
                    "ptr_value": 1,
                    "ptr_var": 1,
                    "temp_ptr": 1,
                    "var_ptr": 1
                },
                "uVar1": {
                    "result": 26,
                    "return_value": 3,
                    "status": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08007fa0"
            ],
            "code": "\nundefined4 validate_input_parameters_08004954(uint **param_array,uint *param_ptr,int length,uint *output_pointer)\n\n{\n  undefined4 result;\n  uint *ptr;\n  \n  if (*(char *)((int)param_array + 0x3d) == '(') {\n    if (param_ptr == (uint *)0x0) {\n      result = 1;\n    }\n    else if (length == 0) {\n      result = 1;\n    }\n    else if (*(char *)(param_array + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(param_array + 0xf) = 1;\n      ptr = *param_array;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **param_array = **param_array & 0xfffff7ff;\n      *(undefined *)((int)param_array + 0x3d) = 0x2a;\n      *(undefined *)((int)param_array + 0x3e) = 0x20;\n      result = 0;\n      param_array[0x10] = (uint *)0x0;\n      param_array[9] = param_ptr;\n      *(short *)((int)param_array + 0x2a) = (short)length;\n      param_array[0xb] = output_pointer;\n      *(undefined2 *)(param_array + 10) = *(undefined2 *)((int)param_array + 0x2a);\n      *(undefined *)(param_array + 0xf) = 0;\n      (*param_array)[1] = (*param_array)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "current_name": "validate_input_parameters_08004954",
            "entrypoint": "0x08004954",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004954": "validate_input_parameters_08004954",
                "param_1": "param_array",
                "param_2": "param_ptr",
                "param_3": "length",
                "param_4": "output_pointer",
                "puVar2": "ptr",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080049e0": {
            "additional_data": {
                "0x28": {
                    "flag_value": 1
                },
                "0x300": {
                    "flag_3": 1
                },
                "0x400": {
                    "flag_2": 1
                },
                "1": {
                    "flag_1": 1
                },
                "FUN_080049e0": {
                    "configure_device": 1,
                    "decode_and_update_flags": 1,
                    "initialize_data": 6,
                    "initialize_data_structure": 1,
                    "initialize_flags": 4,
                    "initialize_memory": 1,
                    "initialize_parameters": 1,
                    "initialize_settings": 1,
                    "initialize_values": 1,
                    "modify_param": 1,
                    "process_parameter": 1,
                    "set_flags_and_value": 1,
                    "set_flags_and_values": 4,
                    "set_permission_flags": 1,
                    "set_permissions": 1,
                    "update_data": 1,
                    "update_param_values": 1,
                    "update_parameter": 2,
                    "update_permissions": 1
                },
                "param_1": {
                    "data": 2,
                    "data_pointer": 4,
                    "data_ptr": 1,
                    "data_structure": 1,
                    "device_config": 1,
                    "flag_array": 1,
                    "flags": 3,
                    "input": 1,
                    "input_array": 2,
                    "memory_block": 1,
                    "param": 1,
                    "param_array": 1,
                    "parameter": 2,
                    "parameters": 4,
                    "params": 1,
                    "permissions": 3,
                    "pointer": 1,
                    "settings": 1
                },
                "puVar1": {
                    "config_flag": 1,
                    "current_flag": 1,
                    "current_param": 1,
                    "current_parameter": 1,
                    "current_pointer": 3,
                    "current_ptr": 1,
                    "first_element": 4,
                    "first_flags": 1,
                    "first_param": 1,
                    "first_permission": 2,
                    "first_pointer": 2,
                    "first_setting": 1,
                    "flag_pointer": 1,
                    "flag_ptr": 1,
                    "pointer": 1,
                    "pointer1": 4,
                    "ptr": 2,
                    "ptr_to_first_element": 1,
                    "ptr_to_input": 1,
                    "temp_pointer": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08007f7c",
                "FUN_08008020",
                "FUN_08007f8e",
                "FUN_08007ff0"
            ],
            "code": "\nundefined4 initialize_data_structure_080049e0(uint **parameters)\n\n{\n  uint *pointer1;\n  \n  if (*(char *)((int)parameters + 0x3d) != ' ') {\n    return 2;\n  }\n  *(undefined *)((int)parameters + 0x3d) = 0x28;\n  pointer1 = *parameters;\n  if ((*pointer1 & 1) == 0) {\n    *pointer1 = *pointer1 | 1;\n  }\n  **parameters = **parameters | 0x400;\n  (*parameters)[1] = (*parameters)[1] | 0x300;\n  return 0;\n}\n\n",
            "current_name": "initialize_data_structure_080049e0",
            "entrypoint": "0x080049e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080049e0": "initialize_data_structure_080049e0",
                "param_1": "parameters",
                "puVar1": "pointer1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004a1e": {
            "called": [],
            "calling": [
                "FUN_08004ccc",
                "FUN_08004b82"
            ],
            "code": "\nvoid FUNC_08004a1e(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08004a1e",
            "entrypoint": "0x08004a1e",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08004a1e": "FUNC_08004a1e"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08004a20": {
            "called": [],
            "calling": [
                "FUN_08004d6c",
                "FUN_08004e3c"
            ],
            "code": "\nvoid FUNC_08004a20(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08004a20",
            "entrypoint": "0x08004a20",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08004a20": "FUNC_08004a20"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08004a22": {
            "called": [],
            "calling": [
                "FUN_08004a24",
                "FUN_08004aec"
            ],
            "code": "\nvoid FUNC_08004a22(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08004a22",
            "entrypoint": "0x08004a22",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08004a22": "FUNC_08004a22"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08004a24": {
            "additional_data": {
                "FUN_08004a24": {
                    "decode_and_transmit_data": 1,
                    "decode_data": 1,
                    "handle_i2_c_slave_transmission": 1,
                    "process_data": 25,
                    "update_data": 1,
                    "update_i2_c_data": 1,
                    "update_register_and_callback": 1
                },
                "HAL_I2C_SlaveTxCpltCallback": {
                    "handle_i2_c_slave_transmission_complete": 1,
                    "handle_i2_c_transfer_complete": 1,
                    "handle_i2_c_transmission_complete": 1,
                    "handle_i2c_slave_tx_complete": 1,
                    "handle_transmission_complete": 1,
                    "transmission_complete_callback": 1,
                    "transmission_completed_callback": 1
                },
                "cVar1": {
                    "ch": 1,
                    "char1": 1,
                    "char_found": 1,
                    "char_value": 8,
                    "char_var": 4,
                    "character": 11,
                    "character_var": 1,
                    "closing_parenthesis": 1,
                    "first_char": 1,
                    "last_char": 1,
                    "last_character": 1
                },
                "param_1": {
                    "data": 26,
                    "data_buffer": 1,
                    "data_ptr": 1,
                    "i2c_data": 1,
                    "register_data": 1,
                    "state": 1
                },
                "pbVar2": {
                    "byte_pointer": 16,
                    "byte_ptr": 15
                }
            },
            "called": [
                "FUN_08004a22"
            ],
            "calling": [
                "FUN_08005188"
            ],
            "code": "\nundefined4 process_data_08004a24(int *data)\n\n{\n  char character;\n  byte *byte_pointer;\n  \n  character = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    byte_pointer = (byte *)data[9];\n    data[9] = (int)(byte_pointer + 1);\n    *(uint *)(*data + 0x10) = (uint)*byte_pointer;\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (character == ')')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      data[0xc] = 0x21;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      handle_i2_c_transmission_complete();\n    }\n    return 0;\n  }\n  return 0;\n}\n\n",
            "current_name": "process_data_08004a24",
            "entrypoint": "0x08004a24",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004a24": "process_data_08004a24",
                "HAL_I2C_SlaveTxCpltCallback": "handle_i2_c_transmission_complete",
                "cVar1": "character",
                "param_1": "data",
                "pbVar2": "byte_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004a74": {
            "called": [],
            "calling": [
                "FUN_08004a76",
                "FUN_08005084"
            ],
            "code": "\nvoid FUNC_08004a74(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08004a74",
            "entrypoint": "0x08004a74",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08004a74": "FUNC_08004a74"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08004a76": {
            "additional_data": {
                "FUNC_08004a74": {
                    "hal_i2_c_slave_rx_cplt_callback": 1,
                    "initialize_i2c": 1
                },
                "FUN_08004a76": {
                    "handle_i2_c_receive": 1,
                    "process_data": 20,
                    "process_i2_c_data": 4,
                    "process_param": 1,
                    "read_and_process_data": 1,
                    "update_and_check_data": 1,
                    "update_data": 1,
                    "update_data_and_callback": 1,
                    "update_received_data": 1
                },
                "HAL_I2C_SlaveRxCpltCallback": {
                    "handle_i2_c_complete": 3,
                    "handle_i2_c_completion": 1,
                    "handle_i2_c_receive": 1,
                    "handle_i2_c_receive_complete": 7,
                    "handle_i2_c_receive_interrupt": 1,
                    "handle_i2_c_received_data": 1,
                    "handle_i2_c_rx_complete": 2,
                    "handle_slave_rx_cplt": 1,
                    "i2c_callback": 1,
                    "i2c_slave_receive_complete_callback": 1,
                    "on_i2_c_rx_complete": 1
                },
                "cVar1": {
                    "char1": 2,
                    "char_value": 8,
                    "char_var": 1,
                    "char_variable": 1,
                    "character": 6,
                    "first_char": 4,
                    "flag": 5,
                    "flag_char": 1,
                    "last_char": 2
                },
                "param_1": {
                    "array": 1,
                    "data": 23,
                    "data_array": 2,
                    "data_ptr": 2,
                    "input_data": 2,
                    "param_array": 1
                },
                "puVar2": {
                    "buffer": 2,
                    "data_pointer": 1,
                    "data_ptr": 3,
                    "next_byte": 1,
                    "pointer": 2,
                    "pointer_to_data": 1,
                    "ptr": 14,
                    "ptr1": 1,
                    "ptr_data": 2,
                    "ptr_to_data": 2,
                    "ptr_to_undefined": 1
                }
            },
            "called": [
                "FUN_08004a74"
            ],
            "calling": [
                "FUN_08005188"
            ],
            "code": "\nundefined4 process_i2_c_data_08004a76(int *data)\n\n{\n  char char_value;\n  undefined *ptr;\n  \n  char_value = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    ptr = (undefined *)data[9];\n    data[9] = (int)(ptr + 1);\n    *ptr = (char)*(undefined4 *)(*data + 0x10);\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (char_value == '*')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      data[0xc] = 0x22;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      handle_i2_c_receive_complete();\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_i2_c_data_08004a76",
            "entrypoint": "0x08004a76",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004a76": "process_i2_c_data_08004a76",
                "HAL_I2C_SlaveRxCpltCallback": "handle_i2_c_receive_complete",
                "cVar1": "char_value",
                "param_1": "data",
                "puVar2": "ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004ac2": {
            "additional_data": {
                "FUN_08004ac2": {
                    "i2c_address_callback": 5,
                    "i2c_callback": 1,
                    "perform_i2_c_action": 1,
                    "perform_i2_c_address_callback": 2,
                    "perform_i2_c_operation": 2,
                    "perform_i2_c_transfer": 1,
                    "process_i2_c_address": 3,
                    "process_i2_c_callback": 2,
                    "process_i2_c_data": 5,
                    "process_i2_c_operation": 1,
                    "update_i2_c_address": 1,
                    "update_i2_c_device_address": 1
                },
                "HAL_I2C_AddrCallback": {
                    "call_i2_c_address_callback": 1,
                    "callback": 1,
                    "i2c_address_callback": 1,
                    "perform_i2_c_address_callback": 2
                },
                "param_1": {
                    "address": 1,
                    "address_data": 1,
                    "array_pointer": 1,
                    "data": 5,
                    "data_array": 1,
                    "data_pointer": 4,
                    "data_ptr": 1,
                    "device_info": 2,
                    "i2c_config_params": 1,
                    "i2c_data": 9,
                    "i2c_params": 1,
                    "i2c_transfer_data": 1,
                    "input_data": 2,
                    "input_parameters": 1
                },
                "param_2": {
                    "arg2": 1,
                    "callback_mode": 1,
                    "callback_param1": 1,
                    "flag1": 1,
                    "param2": 21,
                    "param_2": 1,
                    "size": 1,
                    "unused": 2,
                    "unused1": 1,
                    "unused_parameter_1": 1
                },
                "param_3": {
                    "arg3": 1,
                    "callback_param2": 1,
                    "flag": 1,
                    "flag2": 1,
                    "param3": 21,
                    "param_3": 1,
                    "unused": 2,
                    "unused2": 1,
                    "unused_parameter_2": 1
                },
                "param_4": {
                    "additional_parameter": 1,
                    "arg4": 1,
                    "callback_arg": 1,
                    "callback_data": 2,
                    "callback_param": 1,
                    "callback_param3": 1,
                    "callback_parameter": 1,
                    "param4": 21,
                    "param_4": 1,
                    "unused3": 1
                },
                "uVar1": {
                    "addr": 2,
                    "address": 10,
                    "callback_address": 2,
                    "callback_param": 1,
                    "callback_value": 3,
                    "result": 2,
                    "selected_address": 3,
                    "selected_data": 1,
                    "selected_value": 6,
                    "variable_name": 1
                },
                "uVar2": {
                    "access_flags": 1,
                    "addr_value": 1,
                    "address_info": 1,
                    "address_value": 4,
                    "config_value": 2,
                    "data": 1,
                    "data_flag": 1,
                    "data_value": 1,
                    "device_status": 1,
                    "flag": 3,
                    "flag_value": 1,
                    "flags": 8,
                    "i2c_value": 1,
                    "transfer_options": 1,
                    "value": 4
                }
            },
            "called": [
                "FUN_08007fa0"
            ],
            "calling": [
                "FUN_08005188"
            ],
            "code": "\nundefined4 i2c_address_callback_08004ac2(int *i2c_data,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined2 address;\n  uint flags;\n  \n  flags = *(uint *)(*i2c_data + 0x18);\n  if ((flags & 0x80) == 0) {\n    address = *(undefined2 *)(i2c_data + 3);\n  }\n  else {\n    address = *(undefined2 *)(i2c_data + 6);\n  }\n  perform_i2_c_address_callback(i2c_data,(*(uint *)(*i2c_data + 0x18) & 4) == 0,address,flags,param4);\n  return 0;\n}\n\n",
            "current_name": "i2c_address_callback_08004ac2",
            "entrypoint": "0x08004ac2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004ac2": "i2c_address_callback_08004ac2",
                "HAL_I2C_AddrCallback": "perform_i2_c_address_callback",
                "param_1": "i2c_data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "address",
                "uVar2": "flags"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004aec": {
            "additional_data": {
                "0x20": {
                    "0x20": 1
                },
                "FUNC_08004a22": {
                    "helper_function": 1,
                    "initialize_i2_c": 1,
                    "sub_function_2": 1
                },
                "FUN_08004a22": {
                    "do_something": 1
                },
                "FUN_08004aec": {
                    "check_param_and_execute_action": 1,
                    "handle_i2_c_data": 1,
                    "handle_i2_c_event": 7,
                    "process_data": 8,
                    "process_i2_c_data": 3,
                    "process_i2_c_result": 1,
                    "process_i2c_data": 1,
                    "process_i2c_operation": 1,
                    "process_input": 2,
                    "process_param": 1,
                    "process_params": 1,
                    "update_i2_c_configuration": 1,
                    "update_state": 1
                },
                "FUN_08007ff0": {
                    "callback_function": 3,
                    "sub_function": 1
                },
                "HAL_I2C_ListenCpltCallback": {
                    "handle_i2_c_listen_complete": 3,
                    "handle_i2c_listen_complete": 1,
                    "handle_listen_complete": 4,
                    "on_i2_c_listen_complete": 1,
                    "on_listen_complete": 2
                },
                "HAL_I2C_SlaveTxCpltCallback": {
                    "handle_i2_c_slave_transmit_complete": 1,
                    "handle_i2_c_slave_tx_complete": 2,
                    "handle_i2c_slave_transmit_complete": 1,
                    "handle_slave_transmission_complete": 1,
                    "handle_slave_transmit_complete": 2,
                    "handle_slave_tx_complete": 1,
                    "on_i2_c_slave_tx_complete": 1,
                    "on_slave_transmit_complete": 2
                },
                "param_1": {
                    "config_params": 1,
                    "data": 9,
                    "event_data": 4,
                    "event_params": 1,
                    "function_parameter": 1,
                    "i2c_data": 1,
                    "i2c_params": 1,
                    "input": 1,
                    "input_data": 2,
                    "input_params": 1,
                    "param_array": 2,
                    "param_list": 1,
                    "parameter": 1,
                    "parameter_array": 1,
                    "params": 3,
                    "user_data": 1
                }
            },
            "called": [
                "FUN_08004a22",
                "FUN_08007ff0"
            ],
            "calling": [
                "FUN_080052f0"
            ],
            "code": "\nundefined4 process_i2_c_data_08004aec(uint **data)\n\n{\n  if (((data[0xb] == (uint *)0x4) || (data[0xb] == (uint *)0x8)) &&\n     (*(char *)((int)data + 0x3d) == '(')) {\n    data[0xb] = (uint *)0xffff0000;\n    (*data)[1] = (*data)[1] & 0xfffff8ff;\n    (*data)[5] = 0xfffffbff;\n    **data = **data & 0xfffffbff;\n    data[0xc] = (uint *)0x0;\n    *(undefined *)((int)data + 0x3d) = 0x20;\n    *(undefined *)((int)data + 0x3e) = 0;\n    handle_listen_complete();\n  }\n  else if (*(char *)((int)data + 0x3d) == '!') {\n    data[0xb] = (uint *)0xffff0000;\n    data[0xc] = (uint *)0x21;\n    *(undefined *)((int)data + 0x3d) = 0x20;\n    *(undefined *)((int)data + 0x3e) = 0;\n    (*data)[1] = (*data)[1] & 0xfffff8ff;\n    (*data)[5] = 0xfffffbff;\n    **data = **data & 0xfffffbff;\n    on_slave_transmit_complete();\n  }\n  else {\n    (*data)[5] = 0xfffffbff;\n  }\n  return 0;\n}\n\n",
            "current_name": "process_i2_c_data_08004aec",
            "entrypoint": "0x08004aec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004aec": "process_i2_c_data_08004aec",
                "HAL_I2C_ListenCpltCallback": "handle_listen_complete",
                "HAL_I2C_SlaveTxCpltCallback": "on_slave_transmit_complete",
                "param_1": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004b80": {
            "called": [],
            "calling": [
                "FUN_08004ccc",
                "FUN_08004b82"
            ],
            "code": "\nvoid FUNC_08004b80(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08004b80",
            "entrypoint": "0x08004b80",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08004b80": "FUNC_08004b80"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08004b82": {
            "additional_data": {
                "FUNC_08004a1e": {
                    "func2": 1
                },
                "FUNC_08004b80": {
                    "func1": 1
                },
                "FUN_08004a1e": {
                    "hal_i2_c_master_tx_cplt_callback": 1
                },
                "FUN_08004b80": {
                    "hal_i2_c_mem_tx_cplt_callback": 1
                },
                "FUN_08004b82": {
                    "handle_i2_c_event": 3,
                    "handle_i2_c_mem_tx": 1,
                    "handle_i2_c_transfer": 1,
                    "process_data": 17,
                    "process_i2_c_callback": 1,
                    "process_i2_c_data": 6,
                    "process_i2_c_request": 1,
                    "reverse_byte_operation": 1
                },
                "HAL_I2C_MasterTxCpltCallback": {
                    "handle_master_tx_complete": 3,
                    "handle_master_tx_cplt": 14,
                    "handle_master_tx_cplt_callback": 1,
                    "master_transmit_complete_callback": 1,
                    "master_tx_cplt_callback": 1,
                    "process_master_tx_cplt_callback": 1
                },
                "HAL_I2C_MemTxCpltCallback": {
                    "handle_mem_tx_complete": 2,
                    "handle_mem_tx_cplt": 14,
                    "handle_mem_tx_cplt_callback": 1,
                    "handle_memory_tx_complete": 1,
                    "mem_tx_cplt_callback": 1,
                    "memory_transfer_complete_callback": 1,
                    "process_mem_tx_cplt_callback": 1
                },
                "cVar1": {
                    "char1": 2,
                    "char_val": 2,
                    "char_value": 8,
                    "char_var": 2,
                    "character": 7,
                    "current_char": 1,
                    "event_char": 1,
                    "event_flag": 1,
                    "first_char": 6,
                    "flag": 1
                },
                "param_1": {
                    "data": 17,
                    "event_data": 2,
                    "i2c_data": 1,
                    "i2c_params": 1,
                    "input_params": 1,
                    "param_list": 1,
                    "parameter": 1,
                    "parameters": 4,
                    "params": 2,
                    "request": 1
                },
                "puVar2": {
                    "data_pointer": 1,
                    "param_b": 1,
                    "pointer": 6,
                    "pointer_value": 2,
                    "pointer_var": 3,
                    "ptr": 4,
                    "ptr2": 1,
                    "ptr_value": 4,
                    "ptr_var": 5,
                    "temp_ptr": 3,
                    "value_pointer": 1
                }
            },
            "called": [
                "FUN_08004b80",
                "FUN_08004a1e"
            ],
            "calling": [
                "FUN_08005188"
            ],
            "code": "\nundefined4 process_i2_c_data_08004b82(uint **data)\n\n{\n  char char_value;\n  uint *pointer;\n  \n  char_value = *(char *)((int)data + 0x3d);\n  pointer = data[0xb];\n  if ((*(short *)(data + 10) == 0) && (char_value == '!')) {\n    if ((pointer == (uint *)0x4) || ((pointer == (uint *)0x8 || (pointer == (uint *)0xffff0000)))) {\n      (*data)[1] = (*data)[1] & 0xfffff8ff;\n      **data = **data | 0x200;\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      if (*(char *)((int)data + 0x3e) == '@') {\n        *(undefined *)((int)data + 0x3e) = 0;\n        handle_mem_tx_cplt();\n      }\n      else {\n        *(undefined *)((int)data + 0x3e) = 0;\n        handle_master_tx_cplt();\n      }\n    }\n    else {\n      (*data)[1] = (*data)[1] & 0xfffff8ff;\n      data[0xc] = (uint *)0x11;\n      *(undefined *)((int)data + 0x3e) = 0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      handle_master_tx_cplt();\n    }\n  }\n  else if ((char_value == '!') || ((*(char *)((int)data + 0x3e) == '@' && (char_value == '\\\"')))) {\n    if (*(short *)((int)data + 0x2a) == 0) {\n      (*data)[1] = (*data)[1] & 0xfffffbff;\n    }\n    else if (*(char *)((int)data + 0x3e) == '@') {\n      if (data[0x14] == (uint *)0x0) {\n        if (data[0x13] == (uint *)0x1) {\n          (*data)[4] = (uint)data[0x12] & 0xff;\n          data[0x14] = (uint *)((int)data[0x14] + 2);\n        }\n        else {\n          (*data)[4] = (uint)((int)data[0x12] << 0x10) >> 0x18;\n          data[0x14] = (uint *)((int)data[0x14] + 1);\n        }\n      }\n      else if (data[0x14] == (uint *)0x1) {\n        (*data)[4] = (uint)data[0x12] & 0xff;\n        data[0x14] = (uint *)((int)data[0x14] + 1);\n      }\n      else if (data[0x14] == (uint *)0x2) {\n        if (*(char *)((int)data + 0x3d) == '\\\"') {\n          **data = **data | 0x100;\n        }\n        else if (*(char *)((int)data + 0x3d) == '!') {\n          pointer = data[9];\n          data[9] = (uint *)((int)pointer + 1);\n          (*data)[4] = (uint)*(byte *)pointer;\n          *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n        }\n      }\n    }\n    else {\n      pointer = data[9];\n      data[9] = (uint *)((int)pointer + 1);\n      (*data)[4] = (uint)*(byte *)pointer;\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_i2_c_data_08004b82",
            "entrypoint": "0x08004b82",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004b82": "process_i2_c_data_08004b82",
                "HAL_I2C_MasterTxCpltCallback": "handle_master_tx_cplt",
                "HAL_I2C_MemTxCpltCallback": "handle_mem_tx_cplt",
                "cVar1": "char_value",
                "param_1": "data",
                "puVar2": "pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004ccc": {
            "additional_data": {
                "FUNC_08004a1e": {
                    "function_b": 1,
                    "helper_function_b": 1
                },
                "FUNC_08004b80": {
                    "function_a": 1,
                    "helper_function_a": 1
                },
                "FUN_08004ccc": {
                    "handle_i2_c_complete": 1,
                    "handle_i2_c_completion": 1,
                    "handle_i2_c_interrupt": 1,
                    "handle_i2_c_transfer": 1,
                    "process_data": 21,
                    "process_i2_c_data": 4,
                    "process_result": 1,
                    "update_i2_c_status": 1
                },
                "HAL_I2C_MasterTxCpltCallback": {
                    "handle_i2_c_master_tx_cplt": 1,
                    "handle_master_transmit_complete": 2,
                    "handle_master_tx_complete": 4,
                    "handle_master_tx_cplt": 16,
                    "handle_master_tx_cplt_callback": 4,
                    "master_tx_cplt_callback": 1
                },
                "HAL_I2C_MemTxCpltCallback": {
                    "handle_i2_c_mem_tx_cplt": 1,
                    "handle_mem_transmit_complete": 1,
                    "handle_mem_tx_complete": 4,
                    "handle_mem_tx_cplt": 15,
                    "handle_mem_tx_cplt_callback": 4,
                    "handle_memory_transmit_complete": 1,
                    "handle_memory_tx_cplt": 1,
                    "mem_tx_cplt_callback": 1
                },
                "param_1": {
                    "data": 20,
                    "data_ptr": 1,
                    "input_data": 3,
                    "parameters": 4,
                    "params": 3
                },
                "puVar1": {
                    "data_ptr": 1,
                    "flag_value": 1,
                    "pointer": 2,
                    "pointer_var": 1,
                    "ptr": 5,
                    "temp_pointer": 2,
                    "temp_var": 1,
                    "value": 16,
                    "value_ptr": 1,
                    "var1": 1
                }
            },
            "called": [
                "FUN_08004b80",
                "FUN_08004a1e"
            ],
            "calling": [
                "FUN_08005188"
            ],
            "code": "\nundefined4 process_i2_c_data_08004ccc(uint **data)\n\n{\n  uint *value;\n  \n  value = data[0xb];\n  if (*(char *)((int)data + 0x3d) == '!') {\n    if (*(short *)((int)data + 0x2a) == 0) {\n      if (((value == (uint *)0x4) || (value == (uint *)0x8)) || (value == (uint *)0xffff0000)) {\n        (*data)[1] = (*data)[1] & 0xfffff8ff;\n        **data = **data | 0x200;\n        data[0xc] = (uint *)0x0;\n        *(undefined *)((int)data + 0x3d) = 0x20;\n        if (*(char *)((int)data + 0x3e) == '@') {\n          *(undefined *)((int)data + 0x3e) = 0;\n          handle_mem_tx_cplt();\n        }\n        else {\n          *(undefined *)((int)data + 0x3e) = 0;\n          handle_master_tx_cplt();\n        }\n      }\n      else {\n        (*data)[1] = (*data)[1] & 0xfffff8ff;\n        data[0xc] = (uint *)0x11;\n        *(undefined *)((int)data + 0x3e) = 0;\n        *(undefined *)((int)data + 0x3d) = 0x20;\n        handle_master_tx_cplt();\n      }\n    }\n    else {\n      value = data[9];\n      data[9] = (uint *)((int)value + 1);\n      (*data)[4] = (uint)*(byte *)value;\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_i2_c_data_08004ccc",
            "entrypoint": "0x08004ccc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004ccc": "process_i2_c_data_08004ccc",
                "HAL_I2C_MasterTxCpltCallback": "handle_master_tx_cplt",
                "HAL_I2C_MemTxCpltCallback": "handle_mem_tx_cplt",
                "param_1": "data",
                "puVar1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004d6a": {
            "called": [],
            "calling": [
                "FUN_08004d6c",
                "FUN_08004e3c"
            ],
            "code": "\nvoid FUNC_08004d6a(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08004d6a",
            "entrypoint": "0x08004d6a",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08004d6a": "FUNC_08004d6a"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08004d6c": {
            "additional_data": {
                "FUNC_08004a20": {
                    "callback2": 1,
                    "function2": 1
                },
                "FUNC_08004d6a": {
                    "callback1": 1,
                    "function1": 1
                },
                "FUN_08004d6c": {
                    "convert_string": 1,
                    "handle_command": 1,
                    "handle_i2_c_data": 1,
                    "process_data": 20,
                    "process_i2_c_data": 1,
                    "update_configuration": 1,
                    "update_flag_and_callback": 1,
                    "update_flag_bits": 1,
                    "update_flags_and_callbacks": 1,
                    "update_i2_c_settings": 1,
                    "update_param": 2
                },
                "HAL_I2C_MasterRxCpltCallback": {
                    "callback2": 1,
                    "handle_master_receive_callback": 1,
                    "handle_master_receive_complete": 1,
                    "handle_master_rx_complete": 1,
                    "handle_master_rx_cplt": 14,
                    "handle_master_rx_cplt_interrupt": 1,
                    "master_receive_complete_callback": 1,
                    "master_rx_cplt_callback": 1
                },
                "HAL_I2C_MemRxCpltCallback": {
                    "callback1": 1,
                    "handle_mem_rx_complete": 1,
                    "handle_mem_rx_cplt": 14,
                    "handle_mem_rx_cplt_interrupt": 1,
                    "handle_memory_receive_callback": 1,
                    "handle_memory_receive_complete": 1,
                    "mem_rx_cplt_callback": 1,
                    "memory_receive_complete_callback": 1
                },
                "param_1": {
                    "config_array": 1,
                    "data": 18,
                    "data_ptr": 1,
                    "i2c_data": 1,
                    "input_array": 1,
                    "param": 3,
                    "parameters": 3,
                    "params": 2,
                    "string_pointer": 1
                },
                "puVar1": {
                    "char_pointer": 1,
                    "next_char": 1,
                    "next_char_ptr": 1,
                    "pointer_var": 1,
                    "ptr": 5,
                    "ptr1": 2,
                    "temp": 3,
                    "temp_pointer": 2,
                    "temp_ptr": 9,
                    "temp_ptr1": 1,
                    "temp_var": 5
                }
            },
            "called": [
                "FUN_08004d6a",
                "FUN_08004a20"
            ],
            "calling": [
                "FUN_08005188"
            ],
            "code": "\nundefined4 process_i2_c_data_08004d6c(uint **data)\n\n{\n  uint *temp_ptr;\n  \n  if (*(char *)((int)data + 0x3d) == '\\\"') {\n    if (*(ushort *)((int)data + 0x2a) < 4) {\n      if (*(ushort *)((int)data + 0x2a) - 2 < 2) {\n        if (data[0xb] == (uint *)0x2) {\n          **data = **data | 0x400;\n        }\n        else {\n          **data = **data & 0xfffffbff;\n          **data = **data | 0x800;\n        }\n        (*data)[1] = (*data)[1] & 0xfffffbff;\n      }\n      else {\n        if (data[0xb] == (uint *)0x2) {\n          **data = **data | 0x400;\n        }\n        else {\n          **data = **data & 0xfffffbff;\n        }\n        (*data)[1] = (*data)[1] & 0xfffff8ff;\n        temp_ptr = data[9];\n        data[9] = (uint *)((int)temp_ptr + 1);\n        *(char *)temp_ptr = (char)(*data)[4];\n        *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n        *(undefined *)((int)data + 0x3d) = 0x20;\n        data[0xc] = (uint *)0x0;\n        if (*(char *)((int)data + 0x3e) == '@') {\n          *(undefined *)((int)data + 0x3e) = 0;\n          handle_mem_rx_cplt();\n        }\n        else {\n          *(undefined *)((int)data + 0x3e) = 0;\n          handle_master_rx_cplt();\n        }\n      }\n    }\n    else {\n      temp_ptr = data[9];\n      data[9] = (uint *)((int)temp_ptr + 1);\n      *(char *)temp_ptr = (char)(*data)[4];\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_i2_c_data_08004d6c",
            "entrypoint": "0x08004d6c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004d6c": "process_i2_c_data_08004d6c",
                "HAL_I2C_MasterRxCpltCallback": "handle_master_rx_cplt",
                "HAL_I2C_MemRxCpltCallback": "handle_mem_rx_cplt",
                "param_1": "data",
                "puVar1": "temp_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004e3c": {
            "additional_data": {
                "FUC_08004d6a": {
                    "reverse_data": 1
                },
                "FUNC_08004a20": {
                    "callback2": 1,
                    "callback_b": 1,
                    "function_b": 1,
                    "improve_data": 1,
                    "other_operation": 1
                },
                "FUNC_08004d6a": {
                    "callback1": 1,
                    "callback_a": 1,
                    "function_a": 1,
                    "reverse_operation": 1
                },
                "FUN_08004e3c": {
                    "handle_data_operation": 1,
                    "parse_data": 1,
                    "process_data": 25,
                    "process_data_packet": 1,
                    "process_param": 1,
                    "update_data": 2
                },
                "HAL_I2C_MasterRxCpltCallback": {
                    "handle_master_receive_complete": 1,
                    "handle_master_rx_complete": 1,
                    "handle_master_rx_cplt": 16,
                    "handle_master_rx_cplt_callback": 2,
                    "master_receive_callback": 1,
                    "on_master_received": 1
                },
                "HAL_I2C_MemRxCpltCallback": {
                    "handle_mem_rx_complete": 1,
                    "handle_mem_rx_cplt": 16,
                    "handle_mem_rx_cplt_callback": 2,
                    "handle_memory_receive_complete": 1,
                    "mem_receive_callback": 1,
                    "on_mem_received": 1
                },
                "Hal_I2C_MasterRxCpltCallback": {
                    "handle_master_rx_cplt": 1
                },
                "Hal_I2C_MemRxCpltCallback": {
                    "handle_mem_rx_cplt": 1
                },
                "param_1": {
                    "data": 21,
                    "data_array": 1,
                    "data_packet": 1,
                    "data_ptr": 2,
                    "input_data": 4,
                    "param_array": 1,
                    "parameter_array": 1
                },
                "puVar1": {
                    "current_param": 1,
                    "current_value": 3,
                    "data_ptr": 1,
                    "ptr": 1,
                    "ptr_value": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 2,
                    "value": 18,
                    "value_pointer": 1,
                    "value_ptr": 2
                }
            },
            "called": [
                "FUN_08004d6a",
                "FUN_08004a20"
            ],
            "calling": [
                "FUN_08005188"
            ],
            "code": "\nundefined4 process_data_packet_08004e3c(uint **data)\n\n{\n  uint *value;\n  \n  value = data[0xb];\n  if (*(short *)((int)data + 0x2a) == 3) {\n    if (((value == (uint *)0x4) || (value == (uint *)0x8)) || (value == (uint *)0xffff0000)) {\n      **data = **data & 0xfffffbff;\n    }\n    value = data[9];\n    data[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  else if (*(short *)((int)data + 0x2a) == 2) {\n    if (((value == (uint *)0x4) || (value == (uint *)0x8)) || (value == (uint *)0xffff0000)) {\n      (*data)[1] = (*data)[1] & 0xfffffcff;\n      **data = **data | 0x200;\n    }\n    else {\n      if (value == (uint *)0x2) {\n        **data = **data | 0x400;\n      }\n      else {\n        **data = **data & 0xfffffbff;\n      }\n      (*data)[1] = (*data)[1] & 0xfffffcff;\n    }\n    value = data[9];\n    data[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    value = data[9];\n    data[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    *(undefined *)((int)data + 0x3d) = 0x20;\n    data[0xc] = (uint *)0x0;\n    if (*(char *)((int)data + 0x3e) == '@') {\n      *(undefined *)((int)data + 0x3e) = 0;\n      handle_mem_rx_cplt();\n    }\n    else {\n      *(undefined *)((int)data + 0x3e) = 0;\n      handle_master_rx_cplt();\n    }\n  }\n  else {\n    value = data[9];\n    data[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "current_name": "process_data_packet_08004e3c",
            "entrypoint": "0x08004e3c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004e3c": "process_data_packet_08004e3c",
                "HAL_I2C_MasterRxCpltCallback": "handle_master_rx_cplt",
                "HAL_I2C_MemRxCpltCallback": "handle_mem_rx_cplt",
                "param_1": "data",
                "puVar1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004f3a": {
            "called": [],
            "calling": [
                "FUN_08004f3c"
            ],
            "code": "\nvoid FUNC_08004f3a(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08004f3a",
            "entrypoint": "0x08004f3a",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08004f3a": "FUNC_08004f3a"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08004f3c": {
            "additional_data": {
                "FUN_08004f3c": {
                    "handle_i2_c_event": 6,
                    "handle_i2_c_operation": 1,
                    "handle_i2c_event": 1,
                    "manage_i2c_operation": 1,
                    "process_data": 3,
                    "process_i2_c_data": 5,
                    "process_i2c_operation": 1
                },
                "HAL_DMA_Abort_IT": {
                    "abort_dma": 3,
                    "abort_dma_interrupt": 1,
                    "dma_abort": 1
                },
                "HAL_I2C_AbortCpltCallback": {
                    "abort_callback": 1,
                    "abort_i2_c_callback": 1,
                    "handle_abort_complete": 1,
                    "handle_i2_c_abort_complete": 1,
                    "handle_i2c_abort_complete": 1
                },
                "HAL_I2C_ErrorCallback": {
                    "error_callback": 1,
                    "error_i2_c_callback": 1,
                    "handle_error": 1,
                    "handle_i2_c_error": 1,
                    "handle_i2c_error": 1
                },
                "HAL_I2C_ListenCpltCallback": {
                    "handle_listen_complete": 1,
                    "listen_callback": 1,
                    "listen_cplt_callback": 1
                },
                "LAB_080053cc_1": {
                    "dma_abort_lambda": 1,
                    "dma_error_handler": 1,
                    "lab_function": 1,
                    "label080053cc_1": 1,
                    "label1": 1
                },
                "iVar1": {
                    "dma_result": 4,
                    "index": 4,
                    "result": 15,
                    "return_value": 2,
                    "status": 4,
                    "temp_var": 1
                },
                "param_1": {
                    "binary_params": 1,
                    "data": 6,
                    "event": 1,
                    "event_data": 4,
                    "function_params": 1,
                    "i2c_data": 3,
                    "i2c_event": 1,
                    "i2c_param": 1,
                    "input_data": 2,
                    "operation_data": 1,
                    "param_array": 4,
                    "parameter": 1,
                    "parameter_1": 1,
                    "params": 3,
                    "pointer_array": 1
                },
                "puVar2": {
                    "char_pointer": 1,
                    "char_ptr": 2,
                    "counter": 1,
                    "next_byte": 1,
                    "output_data": 1,
                    "pointer1": 1,
                    "pointer_1": 1,
                    "pointer_2": 3,
                    "pointer_var1": 1,
                    "ptr": 3,
                    "ptr1": 4,
                    "ptr2": 3,
                    "ptr_char": 1,
                    "ptr_temp": 1,
                    "ptr_var2": 3,
                    "ptr_variable2": 1,
                    "pu_var": 1,
                    "temp_ptr1": 1
                },
                "puVar3": {
                    "event": 1,
                    "event_data": 1,
                    "event_pointer": 1,
                    "event_ptr": 1,
                    "flags": 1,
                    "i2c_ptr": 1,
                    "pointer2": 1,
                    "pointer_2": 1,
                    "pointer_3": 3,
                    "pointer_var2": 1,
                    "ptr2": 7,
                    "ptr3": 3,
                    "ptr_array": 1,
                    "ptr_u_int": 1,
                    "ptr_var3": 3,
                    "ptr_variable3": 1,
                    "temp_data": 1,
                    "temp_ptr2": 1
                }
            },
            "called": [
                "FUN_08008020",
                "FUN_08004050",
                "FUN_08004f3a",
                "FUN_08007ff0"
            ],
            "calling": [
                "FUN_080052f0",
                "FUN_08005084"
            ],
            "code": "\nvoid process_i2_c_data_08004f3c(uint **data)\n\n{\n  int result;\n  uint *ptr1;\n  uint *ptr2;\n  \n  if (*(byte *)((int)data + 0x3d) - 0x29 < 2) {\n    data[0xc] = (uint *)0x0;\n    *(undefined *)((int)data + 0x3d) = 0x28;\n  }\n  else {\n    if ((*(char *)((int)data + 0x3d) != '`') && (((*data)[1] & 0x800) == 0)) {\n      *(undefined *)((int)data + 0x3d) = 0x20;\n    }\n    data[0xc] = (uint *)0x0;\n    *(undefined *)((int)data + 0x3e) = 0;\n  }\n  **data = **data & 0xfffff7ff;\n  ptr2 = *data;\n  if ((ptr2[1] & 0x800) == 0) {\n    if (*(char *)((int)data + 0x3d) == '`') {\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      data[0x10] = (uint *)0x0;\n      if ((ptr2[5] & 0x40) != 0) {\n        ptr1 = data[9];\n        data[9] = (uint *)((int)ptr1 + 1);\n        *(char *)ptr1 = (char)ptr2[4];\n      }\n      **data = **data & 0xfffffffe;\n      handle_i2_c_abort_complete(data);\n    }\n    else {\n      if ((ptr2[5] & 0x40) != 0) {\n        ptr1 = data[9];\n        data[9] = (uint *)((int)ptr1 + 1);\n        *(char *)ptr1 = (char)ptr2[4];\n      }\n      handle_error(data);\n    }\n  }\n  else {\n    ptr2[1] = ptr2[1] & 0xfffff7ff;\n    if (*(char *)((int)data[0xd] + 0x21) == '\\x01') {\n      data[0xe][0xd] = (uint)&label1;\n      result = abort_dma(data[0xe]);\n      if (result != 0) {\n        if (((*data)[5] & 0x40) != 0) {\n          ptr2 = data[9];\n          data[9] = (uint *)((int)ptr2 + 1);\n          *(char *)ptr2 = (char)(*data)[4];\n        }\n        **data = **data & 0xfffffffe;\n        *(undefined *)((int)data + 0x3d) = 0x20;\n        (*(code *)data[0xe][0xd])();\n      }\n    }\n    else {\n      data[0xd][0xd] = (uint)&label1;\n      result = abort_dma(data[0xd]);\n      if (result != 0) {\n        **data = **data & 0xfffffffe;\n        *(undefined *)((int)data + 0x3d) = 0x20;\n        (*(code *)data[0xd][0xd])();\n      }\n    }\n  }\n  if ((*(char *)((int)data + 0x3d) == '(') && (((uint)data[0x10] & 4) != 0)) {\n    data[0xb] = (uint *)0xffff0000;\n    data[0xc] = (uint *)0x0;\n    *(undefined *)((int)data + 0x3d) = 0x20;\n    *(undefined *)((int)data + 0x3e) = 0;\n    handle_listen_complete(data);\n  }\n  return;\n}\n\n",
            "current_name": "process_i2_c_data_08004f3c",
            "entrypoint": "0x08004f3c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004f3c": "process_i2_c_data_08004f3c",
                "HAL_DMA_Abort_IT": "abort_dma",
                "HAL_I2C_AbortCpltCallback": "handle_i2_c_abort_complete",
                "HAL_I2C_ErrorCallback": "handle_error",
                "HAL_I2C_ListenCpltCallback": "handle_listen_complete",
                "LAB_080053cc_1": "label1",
                "iVar1": "result",
                "param_1": "data",
                "puVar2": "ptr1",
                "puVar3": "ptr2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005084": {
            "additional_data": {
                "FUNC_08004a74": {
                    "i2_c_listen_cplt_callback": 1
                },
                "FUN_08004f3c": {
                    "process_packet": 1
                },
                "FUN_08005084": {
                    "finalize_data_processing": 1,
                    "handle_i2_c_packet": 1,
                    "process_data": 21,
                    "process_i2_c_data": 3,
                    "process_i2_c_event": 1,
                    "process_parameter": 1
                },
                "FUN_08007ff0": {
                    "callback_func": 1
                },
                "HAL_I2C_ListenCpltCallback": {
                    "handle_listen_complete": 1
                },
                "HAL_I2C_SlaveRxCpltCallback": {
                    "handle_slave_receive_complete": 1
                },
                "I2C_ITError": {
                    "handle_i2_c_error": 1
                },
                "cVar1": {
                    "char1": 2,
                    "char_value": 5,
                    "char_var": 2,
                    "char_variable": 1,
                    "character": 10,
                    "character_variable": 1,
                    "charcter": 1,
                    "current_char": 1,
                    "first_char": 6,
                    "packet_char": 1
                },
                "param_1": {
                    "binary_data": 1,
                    "data": 22,
                    "data_array": 1,
                    "data_ptr": 1,
                    "i2c_data": 1,
                    "input_data": 1,
                    "packet": 1,
                    "param": 1,
                    "parameter": 1,
                    "parameters": 1
                },
                "puVar2": {
                    "i2c_ptr1": 1,
                    "packet_ptr": 1,
                    "param_ptr": 1,
                    "pointer1": 6,
                    "pointer_var1": 1,
                    "pointer_variable_1": 2,
                    "ptr1": 11,
                    "ptr2": 1,
                    "ptr_data": 3,
                    "ptr_var1": 2,
                    "temp_data": 1
                },
                "puVar3": {
                    "counter_ptr": 1,
                    "i2c_ptr2": 1,
                    "pointer2": 6,
                    "pointer_var2": 1,
                    "pointer_variable_2": 2,
                    "ptr": 1,
                    "ptr2": 11,
                    "ptr3": 1,
                    "ptr_data2": 2,
                    "ptr_temp": 1,
                    "ptr_var2": 2,
                    "temp_data2": 1
                }
            },
            "called": [
                "FUN_08004a74",
                "FUN_08007ff0",
                "FUN_08004f3c"
            ],
            "calling": [
                "FUN_08005188"
            ],
            "code": "\nundefined4 process_i2_c_data_08005084(uint **data)\n\n{\n  char character;\n  uint *ptr1;\n  uint *ptr2;\n  \n  character = *(char *)((int)data + 0x3d);\n  (*data)[1] = (*data)[1] & 0xfffff8ff;\n  **data = **data | 1;\n  **data = **data & 0xfffffbff;\n  ptr1 = *data;\n  if ((ptr1[1] & 0x800) != 0) {\n    if ((*(char *)((int)data + 0x3d) == '\\\"') || (*(char *)((int)data + 0x3d) == '*')) {\n      *(short *)((int)data + 0x2a) = (short)*(undefined4 *)(*data[0xe] + 4);\n    }\n    else {\n      *(short *)((int)data + 0x2a) = (short)*(undefined4 *)(*data[0xd] + 4);\n    }\n  }\n  if (*(short *)((int)data + 0x2a) != 0) {\n    if ((ptr1[5] & 4) != 0) {\n      ptr2 = data[9];\n      data[9] = (uint *)((int)ptr2 + 1);\n      *(char *)ptr2 = (char)ptr1[4];\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n    if (((*data)[5] & 0x40) != 0) {\n      ptr1 = data[9];\n      data[9] = (uint *)((int)ptr1 + 1);\n      *(char *)ptr1 = (char)(*data)[4];\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n    data[0x10] = (uint *)((uint)data[0x10] | 4);\n  }\n  if (data[0x10] == (uint *)0x0) {\n    if (((character == '(') || (character == '*')) || (character == ')')) {\n      data[0xb] = (uint *)0xffff0000;\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      *(undefined *)((int)data + 0x3e) = 0;\n      handle_listen_complete();\n    }\n    else if ((data[0xc] == (uint *)0x22) || (character == '\\\"')) {\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      *(undefined *)((int)data + 0x3e) = 0;\n      handle_slave_receive_complete();\n    }\n  }\n  else {\n    handle_i2_c_error();\n  }\n  return 0;\n}\n\n",
            "current_name": "process_i2_c_data_08005084",
            "entrypoint": "0x08005084",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005084": "process_i2_c_data_08005084",
                "HAL_I2C_ListenCpltCallback": "handle_listen_complete",
                "HAL_I2C_SlaveRxCpltCallback": "handle_slave_receive_complete",
                "I2C_ITError": "handle_i2_c_error",
                "cVar1": "character",
                "param_1": "data",
                "puVar2": "ptr1",
                "puVar3": "ptr2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005188": {
            "additional_data": {
                "FUN_08005188": {
                    "handle_i2_c": 1,
                    "handle_i2_c_communication": 1,
                    "handle_i2_c_event": 2,
                    "handle_i2_c_events": 2,
                    "handle_i2_c_master_slave": 1,
                    "handle_i2_c_operation": 2,
                    "handle_i2_c_operations": 1,
                    "handle_i2_c_transfer": 1,
                    "process_i2_c_data": 3,
                    "process_i2_c_event": 2,
                    "process_i2_c_events": 5,
                    "process_i2_c_operation": 6,
                    "process_i2_c_operations": 2,
                    "process_i2_c_packets": 1,
                    "process_i2c_status": 1
                },
                "I2C_MasterReceive_BTF": {
                    "handle_i2_c_master_receive_btf": 1,
                    "handle_master_receive_btf": 2,
                    "master_receive_btf": 1,
                    "process_master_receive_data_btf": 1
                },
                "I2C_MasterReceive_RXNE": {
                    "handle_i2_c_master_receive_rxne": 1,
                    "handle_master_receive_rxne": 2,
                    "master_receive_rxne": 1,
                    "process_master_receive_data_rxne": 1
                },
                "I2C_MasterTransmit_BTF": {
                    "handle_i2_c_master_transmit_btf": 1,
                    "handle_master_transmit_btf": 2,
                    "master_transmit_btf": 1,
                    "process_master_transmit_data_btf": 1
                },
                "I2C_MasterTransmit_TXE": {
                    "handle_i2_c_master_transmit_txe": 1,
                    "handle_master_transmit_txe": 2,
                    "master_transmit_txe": 1,
                    "process_master_transmit_data_txe": 1
                },
                "I2C_Master_ADD10": {
                    "handle_i2_c_master_address10": 1,
                    "handle_master_add10": 1,
                    "handle_master_address10": 1,
                    "master_add10": 1,
                    "process_master_address10": 1
                },
                "I2C_Master_ADDR": {
                    "handle_i2_c_master_address": 1,
                    "handle_master_addr": 1,
                    "handle_master_address": 1,
                    "master_address": 1,
                    "process_master_address": 1
                },
                "I2C_Master_SB": {
                    "handle_i2_c_master_start_byte": 1,
                    "handle_master_sb": 2,
                    "master_start_bit": 1,
                    "process_master_start_bit": 1
                },
                "I2C_SlaveReceive_BTF": {
                    "handle_i2_c_slave_receive_btf": 1,
                    "handle_slave_receive_btf": 2,
                    "process_slave_receive_data_btf": 1,
                    "slave_receive_btf": 1
                },
                "I2C_SlaveReceive_RXNE": {
                    "handle_i2_c_slave_receive_rxne": 1,
                    "handle_slave_receive_rxne": 2,
                    "process_slave_receive_data_rxne": 1,
                    "slave_receive_rxne": 1
                },
                "I2C_SlaveTransmit_BTF": {
                    "handle_i2_c_slave_transmit_btf": 1,
                    "handle_slave_transmit_btf": 2,
                    "process_slave_transmit_data_btf": 1,
                    "slave_transmit_btf": 1
                },
                "I2C_SlaveTransmit_TXE": {
                    "handle_i2_c_slave_transmit_txe": 1,
                    "handle_slave_transmit_txe": 2,
                    "process_slave_transmit_data_txe": 1,
                    "slave_transmit_txe": 1
                },
                "I2C_Slave_ADDR": {
                    "handle_i2_c_slave_address": 1,
                    "handle_slave_addr": 1,
                    "handle_slave_address": 1,
                    "process_slave_address": 1,
                    "slave_address": 1
                },
                "I2C_Slave_STOPF": {
                    "handle_i2_c_slave_stop_flag": 1,
                    "handle_slave_stopf": 2,
                    "process_slave_stop_flag": 1,
                    "slave_stop_flag": 1
                },
                "iVar1": {
                    "address": 2,
                    "current_data": 2,
                    "data": 4,
                    "data_offset": 1,
                    "data_pointer": 3,
                    "data_ptr": 2,
                    "data_value": 1,
                    "device_data": 1,
                    "event": 2,
                    "event_data": 1,
                    "event_data_value": 1,
                    "event_ptr": 1,
                    "event_value": 2,
                    "i2c_base_address": 1,
                    "input": 1,
                    "operation_data_var": 1,
                    "packet_header": 1,
                    "param_value": 1,
                    "value": 1,
                    "var1": 1
                },
                "param_1": {
                    "data": 3,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "device": 1,
                    "event_data": 8,
                    "i2c_data": 8,
                    "i2c_event": 1,
                    "i2c_module": 1,
                    "input_data": 1,
                    "operation_data": 1,
                    "operation_params": 1,
                    "packet": 1,
                    "ptr_data": 1,
                    "transfer_data": 1
                },
                "uVar2": {
                    "control_flags": 1,
                    "control_flags1": 1,
                    "control_reg": 1,
                    "control_register": 1,
                    "control_register1": 1,
                    "event_code": 1,
                    "event_condition1": 1,
                    "event_flags": 1,
                    "flag1": 4,
                    "flags": 1,
                    "flags1": 1,
                    "i2c_var1": 1,
                    "packet_flags": 1,
                    "reg_value1": 1,
                    "register1": 1,
                    "status1": 1,
                    "status_flag1": 2,
                    "status_flags": 1,
                    "status_reg": 1,
                    "status_reg1": 1,
                    "status_reg_var": 1,
                    "status_register": 1,
                    "status_register1": 1,
                    "value1": 2,
                    "var2": 1
                },
                "uVar3": {
                    "control_bits": 1,
                    "control_flags2": 1,
                    "control_reg": 1,
                    "control_reg_var": 1,
                    "event_condition2": 1,
                    "event_status": 1,
                    "flag2": 4,
                    "flags2": 1,
                    "i2c_var2": 1,
                    "packet_control": 1,
                    "reg_value2": 1,
                    "register2": 1,
                    "register_value": 1,
                    "status": 1,
                    "status2": 1,
                    "status_flag2": 2,
                    "status_flags": 2,
                    "status_reg": 1,
                    "status_reg2": 1,
                    "status_register": 1,
                    "status_register1": 1,
                    "status_register2": 1,
                    "value2": 2,
                    "var3": 1
                },
                "uVar4": {
                    "additional_flags": 1,
                    "config_reg": 1,
                    "config_reg_var": 1,
                    "control_reg": 1,
                    "control_register": 1,
                    "event_condition3": 1,
                    "event_flag": 1,
                    "event_flags": 1,
                    "flag3": 4,
                    "flags3": 1,
                    "i2c_var3": 1,
                    "interrupt_register": 1,
                    "mask": 1,
                    "packet_options": 1,
                    "reg": 1,
                    "reg_value3": 1,
                    "register3": 1,
                    "status3": 1,
                    "status_flag3": 2,
                    "status_flags": 1,
                    "status_register2": 1,
                    "status_register3": 1,
                    "transmission_flags": 1,
                    "value3": 2,
                    "var4": 1
                }
            },
            "called": [
                "FUN_08004d6c",
                "FUN_08004396",
                "FUN_08004a76",
                "FUN_0800459c",
                "FUN_0800457c",
                "FUN_08004a24",
                "FUN_08004e3c",
                "FUN_08004ac2",
                "FUN_08004ccc",
                "FUN_080043a2",
                "FUN_08004b82",
                "FUN_0800430c",
                "FUN_08005084"
            ],
            "calling": [],
            "code": "\nvoid process_i2_c_operation_08005188(int *i2c_data)\n\n{\n  int data;\n  uint flag1;\n  uint flag2;\n  uint flag3;\n  \n  data = *i2c_data;\n  flag3 = *(uint *)(data + 0x18);\n  flag1 = *(uint *)(data + 0x14);\n  flag2 = *(uint *)(data + 4);\n  if ((*(char *)((int)i2c_data + 0x3e) == '\\x10') || (*(char *)((int)i2c_data + 0x3e) == '@')) {\n    if (((flag1 & 0x10001) == 0) || ((flag2 & 0x200) == 0)) {\n      if (((flag1 & 0x10008) == 0) || ((flag2 & 0x200) == 0)) {\n        if (((flag1 & 0x10002) != 0) && ((flag2 & 0x200) != 0)) {\n          master_address(i2c_data);\n        }\n      }\n      else {\n        handle_master_add10(i2c_data);\n      }\n    }\n    else {\n      handle_master_sb(i2c_data);\n    }\n    if ((flag3 & 0x100004) == 0) {\n      if ((((flag1 & 0x10040) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        handle_master_receive_rxne(i2c_data);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        handle_master_receive_btf(i2c_data);\n        return;\n      }\n    }\n    else {\n      if ((((flag1 & 0x10080) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        handle_master_transmit_txe(i2c_data);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        handle_master_transmit_btf(i2c_data);\n        return;\n      }\n    }\n  }\n  else {\n    if (((flag1 & 0x10002) != 0) && ((flag2 & 0x200) != 0)) {\n      slave_address();\n      return;\n    }\n    if (((flag1 & 0x10010) != 0) && ((flag2 & 0x200) != 0)) {\n      handle_slave_stopf(i2c_data);\n      return;\n    }\n    if ((flag3 & 0x100004) == 0) {\n      if ((((flag1 & 0x10040) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        handle_slave_receive_rxne(i2c_data);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        handle_slave_receive_btf(i2c_data);\n      }\n    }\n    else {\n      if ((((flag1 & 0x10080) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        handle_slave_transmit_txe(i2c_data);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        handle_slave_transmit_btf(i2c_data);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "current_name": "process_i2_c_operation_08005188",
            "entrypoint": "0x08005188",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005188": "process_i2_c_operation_08005188",
                "I2C_MasterReceive_BTF": "handle_master_receive_btf",
                "I2C_MasterReceive_RXNE": "handle_master_receive_rxne",
                "I2C_MasterTransmit_BTF": "handle_master_transmit_btf",
                "I2C_MasterTransmit_TXE": "handle_master_transmit_txe",
                "I2C_Master_ADD10": "handle_master_add10",
                "I2C_Master_ADDR": "master_address",
                "I2C_Master_SB": "handle_master_sb",
                "I2C_SlaveReceive_BTF": "handle_slave_receive_btf",
                "I2C_SlaveReceive_RXNE": "handle_slave_receive_rxne",
                "I2C_SlaveTransmit_BTF": "handle_slave_transmit_btf",
                "I2C_SlaveTransmit_TXE": "handle_slave_transmit_txe",
                "I2C_Slave_ADDR": "slave_address",
                "I2C_Slave_STOPF": "handle_slave_stopf",
                "iVar1": "data",
                "param_1": "i2c_data",
                "uVar2": "flag1",
                "uVar3": "flag2",
                "uVar4": "flag3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080052f0": {
            "additional_data": {
                "FUNK_080052f0": {
                    "update_flag_status": 1
                },
                "FUN_08004aec": {
                    "": 1,
                    "function_a": 1,
                    "initialize_config_data": 1,
                    "initialize_params": 1,
                    "update_status1": 1
                },
                "FUN_08004f3c": {
                    "": 1,
                    "finalize_params": 1,
                    "function_b": 1,
                    "process_config_data": 1,
                    "update_status2": 1
                },
                "FUN_080052f0": {
                    "handle_i2_c_error": 1,
                    "improve_code": 1,
                    "process_data": 1,
                    "process_flags": 1,
                    "process_i2_c_data": 2,
                    "process_params": 1,
                    "update_and_check_flags": 1,
                    "update_configuration": 1,
                    "update_flags": 3,
                    "update_flags_and_data": 1,
                    "update_flags_and_status": 3,
                    "update_flags_and_status_bits": 1,
                    "update_flags_and_values": 2,
                    "update_i2_c_flags": 1,
                    "update_i2_c_settings": 1,
                    "update_i2_c_state": 1,
                    "update_i2_c_status": 5,
                    "update_status": 1,
                    "update_status_flags": 2
                },
                "I2C_ITError": {
                    "handle_i2_c_error": 2,
                    "handle_i2_c_error_interrupt": 1,
                    "handle_i2_cit_error": 1,
                    "handle_it_error": 2,
                    "handle_it_errors": 1
                },
                "I2C_Slave_AF": {
                    "handle_i2_c_acknowledge_fail": 1,
                    "handle_i2_c_slave_af": 1,
                    "handle_slave_af": 1,
                    "perform_i2_c_slave_action": 2,
                    "perform_slave_action": 2
                },
                "cVar1": {
                    "c": 1,
                    "char1": 4,
                    "char_value": 8,
                    "char_var": 4,
                    "character": 9,
                    "character1": 2,
                    "character_value": 2,
                    "param_char1": 1
                },
                "param_1": {
                    "config_data": 1,
                    "data": 9,
                    "i2c_data": 2,
                    "i2c_params": 2,
                    "i2c_state": 1,
                    "i2c_status": 2,
                    "input_array": 1,
                    "input_data": 3,
                    "param_array": 1,
                    "parameters": 4,
                    "params": 4,
                    "settings": 1
                },
                "puVar2": {
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "i2c": 1,
                    "i2c_pointer": 1,
                    "i2c_ptr": 1,
                    "i2c_status_ptr": 1,
                    "p_params": 1,
                    "param2": 1,
                    "param_pointer": 1,
                    "param_ptr": 1,
                    "pointer": 4,
                    "pointer_to_data": 1,
                    "pointer_value": 1,
                    "pointer_var": 2,
                    "pointer_var1": 1,
                    "ptr": 6,
                    "ptr1": 1,
                    "ptr_data": 3,
                    "ptr_params": 1
                },
                "uVar3": {
                    "flag": 1,
                    "flag1": 5,
                    "flag_value": 4,
                    "flag_value_1": 1,
                    "flags": 1,
                    "i2c_value1": 1,
                    "status1": 1,
                    "status_flag1": 1,
                    "status_flags": 1,
                    "status_value": 2,
                    "value1": 11,
                    "value_1": 1,
                    "value_var_1": 1
                },
                "uVar4": {
                    "control_flags": 1,
                    "flag2": 5,
                    "flag_mask": 1,
                    "flag_value": 1,
                    "flag_value_2": 1,
                    "i2c_value2": 1,
                    "mask_value": 1,
                    "permission": 1,
                    "status": 1,
                    "status2": 1,
                    "status_flag2": 1,
                    "status_value": 2,
                    "value": 1,
                    "value2": 11,
                    "value_2": 1,
                    "value_var_2": 1
                }
            },
            "called": [
                "FUN_08004aec",
                "FUN_08004f3c"
            ],
            "calling": [],
            "code": "\nvoid update_flags_and_status_bits_080052f0(uint **data)\n\n{\n  char character;\n  uint *ptr;\n  uint value1;\n  uint value2;\n  \n  ptr = *data;\n  value1 = ptr[5];\n  value2 = ptr[1];\n  if (((value1 & 0x10100) != 0) && ((value2 & 0x100) != 0)) {\n    data[0x10] = (uint *)((uint)data[0x10] | 1);\n    ptr[5] = 0xfffffeff;\n    **data = **data | 0x8000;\n  }\n  if (((value1 & 0x10200) != 0) && ((value2 & 0x100) != 0)) {\n    data[0x10] = (uint *)((uint)data[0x10] | 2);\n    (*data)[5] = 0xfffffdff;\n  }\n  if (((value1 & 0x10400) != 0) && ((value2 & 0x100) != 0)) {\n    character = *(char *)((int)data + 0x3d);\n    if (((*(char *)((int)data + 0x3e) == ' ') && (*(short *)((int)data + 0x2a) == 0)) &&\n       (((character == '!' || (character == ')')) || ((character == '(' && (data[0xc] == (uint *)0x21)))))) {\n      perform_slave_action(data);\n    }\n    else {\n      data[0x10] = (uint *)((uint)data[0x10] | 4);\n      if (*(char *)((int)data + 0x3e) == '\\x10') {\n        **data = **data | 0x200;\n      }\n      (*data)[5] = 0xfffffbff;\n    }\n  }\n  if (((value1 & 0x10800) != 0) && ((value2 & 0x100) != 0)) {\n    data[0x10] = (uint *)((uint)data[0x10] | 8);\n    (*data)[5] = 0xfffff7ff;\n  }\n  if (data[0x10] != (uint *)0x0) {\n    handle_it_error(data);\n  }\n  return;\n}\n\n",
            "current_name": "update_flags_and_status_bits_080052f0",
            "entrypoint": "0x080052f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080052f0": "update_flags_and_status_bits_080052f0",
                "I2C_ITError": "handle_it_error",
                "I2C_Slave_AF": "perform_slave_action",
                "cVar1": "character",
                "param_1": "data",
                "puVar2": "ptr",
                "uVar3": "value1",
                "uVar4": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800542a": {
            "additional_data": {
                "0x3d": {
                    "byte_offset": 1
                },
                "DAT_": {
                    "": 2
                },
                "FUN_0800542a": {
                    "extract_byte_from_offset": 1,
                    "extract_byte_value": 1,
                    "extract_value_from_offset": 1,
                    "get_byte": 2,
                    "get_byte_at_offset": 3,
                    "get_byte_from_offset": 8,
                    "get_byte_offset": 1,
                    "get_byte_value": 6,
                    "get_memory_value": 3,
                    "get_offset_value": 1,
                    "get_value_at_offset": 2,
                    "get_value_from_offset": 2
                },
                "PTR_": {
                    "": 2
                },
                "PTR_080003d": {
                    "memory_pointer": 1
                },
                "offset": {
                    "byte_offset": 1
                },
                "param_1": {
                    "address": 7,
                    "base_address": 2,
                    "input_address": 5,
                    "input_offset": 1,
                    "memory_address": 3,
                    "offset": 13
                }
            },
            "called": [],
            "calling": [
                "FUN_08007e74",
                "FUN_08007f0e"
            ],
            "code": "\nundefined get_byte_from_offset_0800542a(int offset)\n\n{\n  return *(undefined *)(offset + 0x3d);\n}\n\n",
            "current_name": "get_byte_from_offset_0800542a",
            "entrypoint": "0x0800542a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800542a": "get_byte_from_offset_0800542a",
                "param_1": "offset"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005430": {
            "additional_data": {
                "0x40": {
                    "offset": 1
                },
                "FUN_08005430": {
                    "get_data_at_offset": 1,
                    "get_data_from_offset": 2,
                    "get_last_value": 1,
                    "get_offset_value": 2,
                    "get_parameter_value": 2,
                    "get_pointer_at_offset": 2,
                    "get_pointer_value": 1,
                    "get_value_at_offset": 1,
                    "get_value_from_address": 2,
                    "get_value_from_memory": 1,
                    "get_value_from_offset": 14,
                    "get_value_from_parameter_plus40": 1
                },
                "param_1": {
                    "address": 3,
                    "base_address": 10,
                    "base_pointer": 1,
                    "input_address": 1,
                    "input_offset": 1,
                    "input_pointer": 1,
                    "input_value": 1,
                    "memory_address": 1,
                    "object_address": 1,
                    "offset": 7,
                    "parameter": 1,
                    "parameter_address": 1,
                    "pointer": 1
                },
                "undefined4": {
                    "value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08007e74",
                "FUN_08007f0e"
            ],
            "code": "\nvalue get_value_from_offset_08005430(int base_address)\n\n{\n  return *(value *)(base_address + 0x40);\n}\n\n",
            "current_name": "get_value_from_offset_08005430",
            "entrypoint": "0x08005430",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005430": "get_value_from_offset_08005430",
                "param_1": "base_address",
                "undefined4": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005434": {
            "additional_data": {
                "FUN_08005434": {
                    "calculate_adjusted_value": 1,
                    "calculate_delay": 12,
                    "calculate_durations": 1,
                    "calculate_iterations": 12,
                    "calculate_modified_value": 1,
                    "delay_function": 3
                },
                "bVar1": {
                    "is_delay_finished": 1,
                    "is_delay_not_zero": 1,
                    "is_non_zero": 1,
                    "is_not_zero": 2,
                    "iteration_flag": 1
                },
                "local_4": {
                    "adjusted_value": 2,
                    "calculated_duration": 1,
                    "calculated_iterations": 1,
                    "calculated_value": 2,
                    "computed_delay": 2,
                    "computed_value": 1,
                    "converted_value": 1,
                    "delay": 2,
                    "delay_count": 7,
                    "delay_counter": 2,
                    "delay_value": 2,
                    "iteration_count": 1,
                    "modified_value": 2,
                    "result": 3,
                    "total_iterations": 2
                },
                "param_1": {
                    "input": 7,
                    "input_param": 1,
                    "input_value": 22,
                    "multiplier": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005460"
            ],
            "code": "\nvoid delay_function_08005434(int input_value)\n\n{\n  bool is_not_zero;\n  int delay_count;\n  \n  delay_count = input_value * (DAT_20000018 / 8000);\n  do {\n    is_not_zero = delay_count != 0;\n    delay_count = delay_count + -1;\n  } while (is_not_zero);\n  return;\n}\n\n",
            "current_name": "delay_function_08005434",
            "entrypoint": "0x08005434",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005434": "delay_function_08005434",
                "bVar1": "is_not_zero",
                "local_4": "delay_count",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005460": {
            "additional_data": {
                "FUN_08003760": {
                    "get_something": 1,
                    "get_ticks": 1,
                    "initialize": 1
                },
                "FUN_08005434": {
                    "configure": 1,
                    "do_something": 2
                },
                "FUN_08005460": {
                    "check_flags": 1,
                    "check_status": 1,
                    "handle_flags": 1,
                    "initialize_hardware": 1,
                    "perform_operation": 1,
                    "process_data": 1,
                    "process_flags": 1,
                    "process_function": 1,
                    "wait_for_flag": 1
                },
                "HAL_GetTick": {
                    "get_current_tick": 1,
                    "get_current_time": 7,
                    "get_elapsed_time": 1,
                    "get_tick": 3,
                    "get_tick_count": 1,
                    "get_ticks": 1
                },
                "RCC_Delay": {
                    "delay": 7,
                    "delay_execution": 2,
                    "delay_function": 3
                },
                "_DAT_40007000": {
                    "register3": 1,
                    "register4": 1,
                    "register6": 1,
                    "register_value7": 1
                },
                "_DAT_40021000": {
                    "register2": 3,
                    "register_value2": 1
                },
                "_DAT_40021004": {
                    "register1": 3,
                    "register_value10": 1
                },
                "_DAT_4002101c": {
                    "register4": 1,
                    "register5": 2,
                    "register_value6": 1
                },
                "_DAT_40021020": {
                    "register5": 1,
                    "register6": 1,
                    "register7": 1,
                    "register_value8": 1
                },
                "_DAT_40021024": {
                    "register3": 1,
                    "register6": 1,
                    "register_value4": 1
                },
                "_DAT_42420000": {
                    "register3": 1,
                    "register7": 1,
                    "register_value3": 1
                },
                "_DAT_42420060": {
                    "register8": 1,
                    "register9": 1,
                    "register_value11": 1
                },
                "_DAT_42420480": {
                    "register4": 1,
                    "register8": 1,
                    "register_value5": 1
                },
                "bVar5": {
                    "check_flag": 1,
                    "condition": 1,
                    "condition_check": 1,
                    "flag": 12,
                    "is_bit_set": 1,
                    "is_condition_met": 2,
                    "is_condition_true": 1,
                    "is_flag_clear": 1,
                    "is_flag_set": 8,
                    "is_reset": 1,
                    "is_set": 2
                },
                "iVar1": {
                    "current_time": 1,
                    "initial_time": 1,
                    "start_tick": 3,
                    "start_time": 25,
                    "tick_start": 1
                },
                "iVar2": {
                    "curr_time": 1,
                    "current_tick": 3,
                    "current_time": 25,
                    "tick": 1,
                    "tick_current": 1
                },
                "param_1": {
                    "data": 3,
                    "flags": 6,
                    "function_params": 1,
                    "hardware_config": 1,
                    "input_flags": 2,
                    "input_params": 1,
                    "operation_params": 1,
                    "param": 4,
                    "parameters": 5,
                    "params": 4,
                    "status_data": 1
                },
                "uVar3": {
                    "result": 23,
                    "return_value": 5,
                    "status": 1
                },
                "uVar4": {
                    "config_value": 1,
                    "param1_value": 2,
                    "param_1_value": 1,
                    "param_value": 6,
                    "temp": 3,
                    "temp_value": 1,
                    "temp_var": 1,
                    "value": 16
                }
            },
            "called": [
                "FUN_08005434",
                "FUN_08003760"
            ],
            "calling": [
                "FUN_080035b8"
            ],
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nundefined4 check_status_08005460(uint *flags)\n\n{\n  int start_time;\n  int current_time;\n  undefined4 result;\n  uint value;\n  bool flag;\n  \n  if ((*flags & 1) != 0) {\n    if (((_DAT_40021004 & 0xc) == 4) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) != 0)))) {\n      if (((_DAT_40021000 & 0x20000) != 0) && (flags[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      value = flags[1];\n      if (value == 0x10000) {\n        _DAT_40021000 = _DAT_40021000 | 0x10000;\n      }\n      else if (value == 0) {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      else if (value == 0x50000) {\n        _DAT_40021000 = _DAT_40021000 | 0x50000;\n      }\n      else {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      if (flags[1] == 0) {\n        start_time = get_current_time();\n        while ((_DAT_40021000 & 0x20000) != 0) {\n          current_time = get_current_time();\n          if (100 < (uint)(current_time - start_time)) {\n            return 3;\n          }\n        }\n      }\n      else {\n        start_time = get_current_time();\n        while ((_DAT_40021000 & 0x20000) == 0) {\n          current_time = get_current_time();\n          if (100 < (uint)(current_time - start_time)) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*flags & 2) != 0) {\n    if (((_DAT_40021004 & 0xc) == 0) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) == 0)))) {\n      if (((_DAT_40021000 & 2) != 0) && (flags[4] != 1)) {\n        return 1;\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | flags[5] << 3;\n    }\n    else if (flags[4] == 0) {\n      _DAT_42420000 = 0;\n      start_time = get_current_time();\n      while ((_DAT_40021000 & 2) != 0) {\n        current_time = get_current_time();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420000 = 1;\n      start_time = get_current_time();\n      while ((_DAT_40021000 & 2) == 0) {\n        current_time = get_current_time();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | flags[5] << 3;\n    }\n  }\n  if ((*flags & 8) != 0) {\n    if (flags[6] == 0) {\n      _DAT_42420480 = 0;\n      start_time = get_current_time();\n      while ((_DAT_40021024 & 2) != 0) {\n        current_time = get_current_time();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420480 = 1;\n      start_time = get_current_time();\n      while ((_DAT_40021024 & 2) == 0) {\n        current_time = get_current_time();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n      delay(1);\n    }\n  }\n  if ((*flags & 4) != 0) {\n    flag = (_DAT_4002101c & 0x10000000) == 0;\n    if (flag) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      start_time = get_current_time();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        current_time = get_current_time();\n        if (100 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    value = flags[3];\n    if (value == 1) {\n      _DAT_40021020 = _DAT_40021020 | 1;\n    }\n    else if (value == 0) {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    else if (value == 5) {\n      _DAT_40021020 = _DAT_40021020 | 5;\n    }\n    else {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    if (flags[3] == 0) {\n      start_time = get_current_time();\n      while ((_DAT_40021020 & 2) != 0) {\n        current_time = get_current_time();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      start_time = get_current_time();\n      while ((_DAT_40021020 & 2) == 0) {\n        current_time = get_current_time();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    if (flag) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if (flags[7] == 0) {\n    result = 0;\n  }\n  else if ((_DAT_40021004 & 0xc) == 8) {\n    result = 1;\n  }\n  else if (flags[7] == 2) {\n    _DAT_42420060 = 0;\n    start_time = get_current_time();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        if (flags[8] == 0x10000) {\n          _DAT_40021004 = _DAT_40021004 & 0xfffdffff | flags[2];\n        }\n        _DAT_40021004 = _DAT_40021004 & 0xffc2ffff | flags[8] | flags[9];\n        _DAT_42420060 = 1;\n        start_time = get_current_time();\n        do {\n          if ((_DAT_40021000 & 0x2000000) != 0) {\n            return 0;\n          }\n          current_time = get_current_time();\n        } while ((uint)(current_time - start_time) < 3);\n        return 3;\n      }\n      current_time = get_current_time();\n    } while ((uint)(current_time - start_time) < 3);\n    result = 3;\n  }\n  else {\n    _DAT_42420060 = 0;\n    start_time = get_current_time();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        return 0;\n      }\n      current_time = get_current_time();\n    } while ((uint)(current_time - start_time) < 3);\n    result = 3;\n  }\n  return result;\n}\n\n",
            "current_name": "check_status_08005460",
            "entrypoint": "0x08005460",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005460": "check_status_08005460",
                "HAL_GetTick": "get_current_time",
                "RCC_Delay": "delay",
                "bVar5": "flag",
                "iVar1": "start_time",
                "iVar2": "current_time",
                "param_1": "flags",
                "uVar3": "result",
                "uVar4": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005840": {
            "additional_data": {
                "FUN_08005840": {
                    "calculate_delay": 17,
                    "calculate_delay_in_milliseconds": 1,
                    "calculate_delay_time": 1,
                    "calculate_execution_time": 3,
                    "calculate_function_execution_time": 2,
                    "calculate_processing_delay": 1,
                    "calculate_processing_speed": 1,
                    "calculate_processing_time": 1,
                    "calculate_some_value": 1,
                    "calculate_time": 1,
                    "get_processing_time": 2
                },
                "_DAT_40021004": {
                    "config": 1,
                    "config_value": 1,
                    "control_register": 2,
                    "data": 1,
                    "data_flag": 2,
                    "data_register": 2,
                    "data_value": 1,
                    "data_variable": 1,
                    "flag": 1,
                    "input_data": 3,
                    "input_value": 4,
                    "register1": 1,
                    "register_value": 4,
                    "status_register": 3
                },
                "local_1c": {
                    "config_value": 1,
                    "constant": 2,
                    "constant_5": 1,
                    "constant_value": 1,
                    "counter": 1,
                    "delay_constant": 2,
                    "delay_constant1": 1,
                    "delay_factor": 1,
                    "delay_multiplier": 1,
                    "delay_precision": 1,
                    "delay_value": 1,
                    "execution_time_limit": 1,
                    "execution_time_modifier": 1,
                    "flag": 1,
                    "input_value": 4,
                    "loop_counter": 1,
                    "result": 1,
                    "status": 2,
                    "status_flag": 2,
                    "timer_value": 1,
                    "user_input": 1,
                    "value1": 2,
                    "variable1": 1
                },
                "uStack_10": {
                    "bitfield_3": 1,
                    "constant2": 1,
                    "constant3": 1,
                    "constant_2": 2,
                    "constant_b": 2,
                    "constant_c": 1,
                    "data2": 1,
                    "data3": 1,
                    "data_modifier3": 1,
                    "data_value3": 1,
                    "delay_constant4": 1,
                    "divisor": 1,
                    "factor2": 1,
                    "factor_value": 1,
                    "multiplication_factor": 1,
                    "multiplier_c": 1,
                    "numerator": 1,
                    "offset2": 1,
                    "offset_value3": 1,
                    "stack_value3": 1,
                    "stack_var3": 1,
                    "third_value": 1,
                    "value3": 3,
                    "value4": 2,
                    "value_c": 1,
                    "variable4": 1
                },
                "uStack_14": {
                    "bitfield_2": 1,
                    "constant1": 1,
                    "constant2": 1,
                    "constant_3": 2,
                    "constant_a": 1,
                    "constant_b": 1,
                    "constant_c": 1,
                    "constant_factor": 1,
                    "data2": 1,
                    "data3": 1,
                    "data_modifier2": 1,
                    "data_value2": 1,
                    "delay_constant3": 1,
                    "denominator": 1,
                    "factor1": 1,
                    "multiplier": 1,
                    "multiplier_b": 1,
                    "multiplier_value": 1,
                    "offset1": 1,
                    "offset_value2": 1,
                    "second_value": 1,
                    "stack_value2": 1,
                    "stack_var2": 1,
                    "value2": 3,
                    "value3": 2,
                    "value_b": 1,
                    "variable3": 1
                },
                "uStack_18": {
                    "address_offset": 1,
                    "bitfield_1": 1,
                    "buffer_size": 1,
                    "constant1": 1,
                    "constant_4": 2,
                    "constant_a": 1,
                    "constant_d": 1,
                    "constant_value": 1,
                    "data": 1,
                    "data1": 1,
                    "data4": 1,
                    "data_modifier1": 1,
                    "data_offset": 1,
                    "data_value1": 1,
                    "delay_constant2": 1,
                    "initial_value": 1,
                    "multiplier": 2,
                    "multiplier_a": 1,
                    "offset_value1": 1,
                    "sensor_value": 1,
                    "stack_value1": 1,
                    "stack_var1": 1,
                    "value1": 3,
                    "value2": 2,
                    "value_a": 1,
                    "variable2": 1
                },
                "uStack_c": {
                    "bitfield_4": 1,
                    "bitmask": 1,
                    "constant": 2,
                    "constant1": 1,
                    "constant3": 1,
                    "constant4": 1,
                    "constant_1": 2,
                    "constant_a": 2,
                    "constant_c": 1,
                    "constant_d": 1,
                    "data1": 1,
                    "data4": 1,
                    "data_modifier4": 1,
                    "data_value4": 1,
                    "delay_constant5": 1,
                    "factor3": 1,
                    "fourth_value": 1,
                    "offset_value": 1,
                    "offset_value4": 1,
                    "stack_value4": 1,
                    "stack_var4": 1,
                    "value4": 3,
                    "value5": 2,
                    "value_d": 1,
                    "variable5": 1
                },
                "uVar1": {
                    "delay": 3,
                    "delay_time": 1,
                    "delay_value": 2,
                    "execution_time": 1,
                    "processing_time": 1,
                    "result": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_080058d2"
            ],
            "code": "\n\n\nuint calculate_processing_delay_08005840(void)\n\n{\n  uint delay;\n  undefined2 input_value;\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  \n  value4 = 0x10100f0e;\n  value3 = 0xd0c0b0a;\n  value2 = 0x9080706;\n  value1 = 0x5040302;\n  input_value = 0x201;\n  if ((_DAT_40021004 & 0xc) == 8) {\n    delay = (uint)*(byte *)((int)&value1 + ((_DAT_40021004 << 10) >> 0x1c));\n    if ((_DAT_40021004 & 0x10000) == 0) {\n      delay = delay * 4000000;\n    }\n    else {\n      delay = (delay * 8000000) /\n              (uint)*(byte *)((int)&input_value - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n    }\n  }\n  else {\n    delay = 8000000;\n  }\n  return delay;\n}\n\n",
            "current_name": "calculate_processing_delay_08005840",
            "entrypoint": "0x08005840",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005840": "calculate_processing_delay_08005840",
                "local_1c": "input_value",
                "uStack_10": "value3",
                "uStack_14": "value2",
                "uStack_18": "value1",
                "uStack_c": "value4",
                "uVar1": "delay"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080058ac": {
            "additional_data": {
                "DAT_20000018": {
                    "sys_clock_freq_divider": 1,
                    "sys_clock_frequency": 1
                },
                "FUN_080058ac": {
                    "improve_and_initialize": 1,
                    "init_and_configure": 1,
                    "initialize_and_tick": 1,
                    "initialize_clock": 3,
                    "initialize_device": 3,
                    "initialize_hardware": 1,
                    "initialize_system": 20,
                    "set_system_clock": 1
                },
                "FUN_080058d2": {
                    "check_configuration": 1
                },
                "HAL_GetTick": {
                    "get_current_tick": 2,
                    "get_current_time": 1,
                    "get_tick_count": 2
                },
                "HAL_RCC_GetSysClockFreq": {
                    "get_sys_clock_freq": 1,
                    "get_sys_clock_frequency": 2,
                    "get_system_clock_frequency": 2
                },
                "_DAT_40021004": {
                    "control_reg": 1,
                    "device_config": 1,
                    "peripheral_config": 1,
                    "sys_config_data1": 1,
                    "system_status": 2
                },
                "_DAT_40022000": {
                    "config_reg": 1,
                    "sys_config_data0": 1,
                    "system_config": 4
                },
                "iVar1": {
                    "initial_time": 1,
                    "start_tick": 1,
                    "start_time": 25
                },
                "iVar2": {
                    "curr_time": 1,
                    "current_tick": 1,
                    "current_time": 25
                },
                "param_1": {
                    "config": 5,
                    "config_data": 3,
                    "config_params": 10,
                    "config_ptr": 1,
                    "config_settings": 1,
                    "configuration": 1,
                    "configurations": 2,
                    "device_config": 2,
                    "device_configuration": 1,
                    "flags": 1,
                    "hardware_config": 1,
                    "input_data": 1,
                    "settings": 2
                },
                "param_2": {
                    "config_count": 1,
                    "config_size": 15,
                    "configuration_length": 1,
                    "count": 1,
                    "input_length": 1,
                    "num_configurations": 2,
                    "num_params": 5,
                    "param_count": 2,
                    "param_size": 1,
                    "setting_count": 1,
                    "size": 1
                },
                "uVar3": {
                    "frequency": 1,
                    "sys_clock_freq": 22,
                    "system_clock_freq": 2,
                    "system_clock_frequency": 1,
                    "temp_var": 1
                }
            },
            "called": [
                "FUN_080058d2"
            ],
            "calling": [
                "FUN_080035b8"
            ],
            "code": "\n\n\nundefined4 initialize_system_080058ac(uint *config_params,uint config_size)\n\n{\n  int start_time;\n  int current_time;\n  uint sys_clock_freq;\n  \n  if ((_DAT_40022000 & 7) < config_size) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | config_size;\n    if (config_size != (config_size & 7)) {\n      return 1;\n    }\n  }\n  if ((*config_params & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | config_params[2];\n  }\n  if ((*config_params & 1) != 0) {\n    sys_clock_freq = config_params[1];\n    if (sys_clock_freq == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((sys_clock_freq != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = sys_clock_freq | _DAT_40021004 & 0xfffffffc;\n    start_time = get_current_tick();\n    if (config_params[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        current_time = get_current_tick();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else if (config_params[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        current_time = get_current_tick();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        current_time = get_current_tick();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (config_size < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | config_size;\n    if (config_size != (config_size & 7)) {\n      return 1;\n    }\n  }\n  if ((*config_params & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | config_params[3];\n  }\n  if ((*config_params & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | config_params[4] << 3;\n  }\n  sys_clock_freq = get_system_clock_frequency();\n  DAT_20000018 = sys_clock_freq >> (&DAT_0800a944)[(_DAT_40021004 << 0x18) >> 0x1c];\n  HAL_InitTick(0xf);\n  return 0;\n}\n\n",
            "current_name": "initialize_system_080058ac",
            "entrypoint": "0x080058ac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080058ac": "initialize_system_080058ac",
                "HAL_GetTick": "get_current_tick",
                "HAL_RCC_GetSysClockFreq": "get_system_clock_frequency",
                "iVar1": "start_time",
                "iVar2": "current_time",
                "param_1": "config_params",
                "param_2": "config_size",
                "uVar3": "sys_clock_freq"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080058d2": {
            "additional_data": {
                "5000": {
                    "timeout": 1
                },
                "DAT_0800a944": {
                    "lookup_table": 1,
                    "sys_clock_offset": 1
                },
                "DAT_20000018": {
                    "device_sys_clock": 1,
                    "sys_clock_freq_divisor": 1,
                    "sys_clock_ratio": 1,
                    "system_clock": 2,
                    "system_clock_frequency": 1,
                    "system_clock_output": 1,
                    "system_clock_ratio": 1
                },
                "DAT_40021000": {
                    "system_status_register": 1
                },
                "DAT_40021004": {
                    "device_control_register": 1
                },
                "FUN_080036d8": {
                    "check_clock_source": 1,
                    "check_flag": 1,
                    "do_something": 1,
                    "function_a": 1,
                    "perform_task": 1
                },
                "FUN_08003760": {
                    "do_something_else": 1,
                    "function_b": 1,
                    "initialize_tick": 3
                },
                "FUN_08005840": {
                    "check_system_status": 1,
                    "get_device_status": 3,
                    "get_some_value": 1
                },
                "FUN_080058d2": {
                    "configure_device": 3,
                    "configure_peripheral": 1,
                    "handle_param_and_clock_config": 1,
                    "initialize_device": 8,
                    "initialize_hardware": 1,
                    "initialize_peripheral": 4,
                    "initialize_system": 13
                },
                "HAL_GetTick": {
                    "get_current_tick": 4,
                    "get_current_time": 1,
                    "get_tick": 1
                },
                "HAL_InitTick": {
                    "initialize_tick": 2
                },
                "HAL_RCC_GetSysClockFreq": {
                    "get_sys_clock_freq": 1,
                    "get_sys_clock_frequency": 1,
                    "get_system_clock_frequency": 3
                },
                "_DAT_40021000": {
                    "device_control": 1,
                    "device_control_register": 1,
                    "gpio_status_register": 1,
                    "hardware_flags": 1,
                    "sys_tick_control_register": 1,
                    "system_control": 1,
                    "system_status": 1,
                    "system_status_register": 1
                },
                "_DAT_40021004": {
                    "control_register": 1,
                    "device_control_register": 1,
                    "device_registers": 1,
                    "device_status_register": 1,
                    "gpio_control_register": 1,
                    "system_control_register": 1,
                    "system_register": 2,
                    "updated_device_control_register": 1
                },
                "_DAT_40022000": {
                    "another_register": 1,
                    "device_data": 1,
                    "device_status_register": 1,
                    "peripheral_clock_enable": 1
                },
                "iVar1": {
                    "current_time": 1,
                    "start_tick": 3,
                    "start_ticks": 1,
                    "start_time": 25
                },
                "iVar2": {
                    "current_tick": 3,
                    "current_ticks": 1,
                    "current_time": 25,
                    "elapsed_time": 1
                },
                "param_1": {
                    "config_flags": 5,
                    "config_options": 1,
                    "device_config": 3,
                    "device_flags": 4,
                    "device_settings": 1,
                    "flags": 10,
                    "hardware_flags": 1,
                    "options": 1,
                    "peripheral_config": 1,
                    "system_flags": 4
                },
                "param_2": {
                    "clock_divisor": 1,
                    "clock_source": 8,
                    "config": 1,
                    "device_id": 1,
                    "device_info": 1,
                    "mode": 1,
                    "num_bits": 1,
                    "num_channels": 3,
                    "num_configurations": 1,
                    "num_cores": 1,
                    "num_of_configs": 1,
                    "num_options": 1,
                    "number_of_devices": 1,
                    "param": 1,
                    "priority": 2,
                    "priority_level": 1,
                    "sys_clock": 1,
                    "sys_clock_div": 1,
                    "sys_clock_freq": 1,
                    "sys_clock_source": 2
                },
                "return": {
                    "return_value": 1
                },
                "uVar3": {
                    "channel_type": 1,
                    "clock_freq": 2,
                    "device_mode": 1,
                    "device_state": 1,
                    "device_type": 1,
                    "frequency": 2,
                    "param_value": 1,
                    "parameter_1": 1,
                    "sys_clock_freq": 13,
                    "sys_clock_frequency": 1,
                    "system_clock": 1,
                    "system_clock_freq": 1,
                    "system_clock_frequency": 1,
                    "system_config": 1,
                    "system_freq": 1,
                    "temp": 1,
                    "temp_value": 1
                }
            },
            "called": [
                "FUN_08005840",
                "FUN_080036d8",
                "FUN_08003760"
            ],
            "calling": [
                "FUN_080058ac"
            ],
            "code": "\n\n\nundefined4 initialize_system_080058d2(uint *flags,uint clock_source)\n\n{\n  int start_time;\n  int current_time;\n  uint sys_clock_freq;\n  \n  if ((*flags & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | flags[2];\n  }\n  if ((*flags & 1) != 0) {\n    sys_clock_freq = flags[1];\n    if (sys_clock_freq == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return_value 1;\n      }\n    }\n    else if ((sys_clock_freq != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return_value 1;\n    }\n    _DAT_40021004 = sys_clock_freq | _DAT_40021004 & 0xfffffffc;\n    start_time = get_current_tick();\n    if (flags[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        current_time = get_current_tick();\n        if (5000 < (uint)(current_time - start_time)) {\n          return_value 3;\n        }\n      }\n    }\n    else if (flags[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        current_time = get_current_tick();\n        if (5000 < (uint)(current_time - start_time)) {\n          return_value 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        current_time = get_current_tick();\n        if (5000 < (uint)(current_time - start_time)) {\n          return_value 3;\n        }\n      }\n    }\n  }\n  if (clock_source < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | clock_source;\n    if (clock_source != (clock_source & 7)) {\n      return_value 1;\n    }\n  }\n  if ((*flags & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | flags[3];\n  }\n  if ((*flags & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | flags[4] << 3;\n  }\n  sys_clock_freq = get_system_clock_frequency();\n  DAT_20000018 = sys_clock_freq >> (&DAT_0800a944)[(_DAT_40021004 << 0x18) >> 0x1c];\n  initialize_tick(0xf);\n  return_value 0;\n}\n\n",
            "current_name": "initialize_system_080058d2",
            "entrypoint": "0x080058d2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080058d2": "initialize_system_080058d2",
                "HAL_GetTick": "get_current_tick",
                "HAL_InitTick": "initialize_tick",
                "HAL_RCC_GetSysClockFreq": "get_system_clock_frequency",
                "iVar1": "start_time",
                "iVar2": "current_time",
                "param_1": "flags",
                "param_2": "clock_source",
                "return": "return_value",
                "uVar3": "sys_clock_freq"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005a1c": {
            "additional_data": {
                "DAT_20000018": {
                    "constant_value": 1,
                    "data": 8,
                    "data_constant": 1,
                    "data_from_memory": 1,
                    "data_value": 4,
                    "global_data": 1,
                    "global_value": 2,
                    "global_variable": 3
                },
                "FUN_08005a1c": {
                    "get_constant_value": 1,
                    "get_dat_value": 1,
                    "get_data": 8,
                    "get_data_constant": 1,
                    "get_data_from_memory": 1,
                    "get_data_pointer": 1,
                    "get_data_value": 11,
                    "get_global_data": 1,
                    "get_global_value": 3,
                    "get_global_variable": 3
                },
                "UNDEFINED4_RET_VAL": {
                    "data_value": 1
                },
                "undefined4": {
                    "uint32": 1,
                    "uint32_t": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005a48",
                "FUN_08005a28",
                "FUN_080035b8"
            ],
            "code": "\nuint32_t get_data_value_08005a1c(void)\n\n{\n  return DAT_20000018;\n}\n\n",
            "current_name": "get_data_value_08005a1c",
            "entrypoint": "0x08005a1c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005a1c": "get_data_value_08005a1c",
                "undefined4": "uint32_t"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005a28": {
            "additional_data": {
                "DAT_0800a954": {
                    "frequency_shift_array": 1,
                    "lookup_table": 1,
                    "shift_amount": 1,
                    "shift_array": 2,
                    "shift_table": 3,
                    "shift_values": 1
                },
                "D_0800a954": {
                    "lookup_table": 1,
                    "shift_table": 1
                },
                "FUN_08005a1c": {
                    "get_hclk_freq": 3,
                    "get_hclk_freq_retrieval": 1,
                    "get_hclk_frequency": 2,
                    "get_hclk_frequency_divisor": 1,
                    "get_hclk_info": 1
                },
                "FUN_08005a28": {
                    "calculate_adjusted_hclk_freq": 1,
                    "calculate_clock_frequency": 1,
                    "calculate_hclk_freq": 1,
                    "calculate_hclk_frequency": 2,
                    "calculate_shifted_value": 1,
                    "get_adjusted_clock_freq": 2,
                    "get_adjusted_clock_frequency": 1,
                    "get_adjusted_frequency": 1,
                    "get_adjusted_hclk_freq": 11,
                    "get_adjusted_hclk_frequency": 1,
                    "get_clock_frequency": 1,
                    "get_hclk_divisor": 2,
                    "get_hclk_freq": 1,
                    "get_hclk_frequency": 5
                },
                "HAL_RCC_GetHCLKFreq": {
                    "get_current_hclk_freq": 1,
                    "get_current_hclk_frequency": 1,
                    "get_hclk_freq": 9,
                    "get_hclk_frequency": 4,
                    "get_hclk_frequency_utility": 1,
                    "get_original_hclk_freq": 1,
                    "get_system_frequency": 1
                },
                "_DAT_40021004": {
                    "data_var": 1,
                    "input_val": 1,
                    "input_value": 9,
                    "input_var": 1,
                    "original_variable": 1,
                    "parameter": 1,
                    "period": 1,
                    "rcc_reg": 1,
                    "reg_value": 1,
                    "register_value": 9,
                    "shift_value": 1
                },
                "uVar1": {
                    "clock_freq": 2,
                    "clock_frequency": 1,
                    "frequency": 1,
                    "hclk_freq": 8,
                    "hclk_frequency": 8
                }
            },
            "called": [
                "FUN_08005a1c"
            ],
            "calling": [
                "FUN_08006538",
                "FUN_080075dc",
                "FUN_080045c0"
            ],
            "code": "\n\n\nuint get_adjusted_hclk_freq_08005a28(void)\n\n{\n  uint hclk_frequency;\n  \n  hclk_frequency = get_hclk_freq();\n  return hclk_frequency >> (&DAT_0800a954)[(uint)(_DAT_40021004 << 0x15) >> 0x1d];\n}\n\n",
            "current_name": "get_adjusted_hclk_freq_08005a28",
            "entrypoint": "0x08005a28",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005a28": "get_adjusted_hclk_freq_08005a28",
                "HAL_RCC_GetHCLKFreq": "get_hclk_freq",
                "uVar1": "hclk_frequency"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005a48": {
            "additional_data": {
                "DAT_0800a954": {
                    "conversion_table": 1,
                    "frequency_table": 1,
                    "offset_table": 2,
                    "shift_array": 1,
                    "shift_bits": 1,
                    "shift_lookup_table": 1,
                    "shift_table": 1,
                    "shift_values": 2
                },
                "FUN_08005a1c": {
                    "get_hclk_frequency": 1,
                    "initialize": 1
                },
                "FUN_08005a48": {
                    "calculate_adjusted_frequency": 1,
                    "calculate_adjusted_hclk_freq": 1,
                    "calculate_frequency": 2,
                    "calculate_hclk_frequency": 1,
                    "get_adjusted_clock_freq": 1,
                    "get_adjusted_clock_frequency": 2,
                    "get_adjusted_frequency": 2,
                    "get_adjusted_hclk_freq": 8,
                    "get_divided_hclk_frequency": 1,
                    "get_frequency": 1,
                    "get_hclk_divided_value": 1,
                    "get_hclk_divisor": 1,
                    "get_hclk_freq": 1,
                    "get_hclk_frequency": 8
                },
                "HAL_RCC_GetHCLKFreq": {
                    "fetch_hclk_frequency": 1,
                    "get_current_hclk_freq": 1,
                    "get_hardware_clock_freq": 1,
                    "get_hclk_freq": 6,
                    "get_hclk_frequency": 8,
                    "get_hclk_frequency_value": 1,
                    "get_system_clock_frequency": 2,
                    "get_system_frequency": 1
                },
                "_DAT_40021004": {
                    "gpio_config_register": 1,
                    "hardware_config": 1,
                    "hclk_multiplier": 1,
                    "input_constant": 1,
                    "input_param": 1,
                    "input_value": 7,
                    "original_value": 1,
                    "parameter": 2,
                    "prescaler_value": 1,
                    "ptr_value": 1,
                    "reg_value": 2,
                    "register_value": 6,
                    "system_clock": 1,
                    "system_clock_frequency": 1,
                    "system_clock_shift": 1
                },
                "uVar1": {
                    "adjusted_hclk_freq": 1,
                    "frequency": 2,
                    "hclk_freq": 12,
                    "hclk_frequency": 6
                }
            },
            "called": [
                "FUN_08005a1c"
            ],
            "calling": [
                "FUN_08005bb8",
                "FUN_08006538",
                "FUN_080075dc"
            ],
            "code": "\n\n\nuint get_divided_hclk_frequency_08005a48(void)\n\n{\n  uint hclk_freq;\n  \n  hclk_freq = get_hclk_frequency();\n  return hclk_freq >> (&DAT_0800a954)[(uint)(_DAT_40021004 << 0x12) >> 0x1d];\n}\n\n",
            "current_name": "get_divided_hclk_frequency_08005a48",
            "entrypoint": "0x08005a48",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005a48": "get_divided_hclk_frequency_08005a48",
                "HAL_RCC_GetHCLKFreq": "get_hclk_frequency",
                "uVar1": "hclk_freq"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005a68": {
            "additional_data": {
                "FUN_08005a68": {
                    "initialize_data": 3,
                    "initialize_param": 2,
                    "initialize_param_data": 1,
                    "initialize_param_values": 1,
                    "initialize_parameters": 13,
                    "initialize_params": 6,
                    "initialize_registers": 1,
                    "initialize_variables": 1,
                    "set_flags_and_values": 1,
                    "set_parameters": 1,
                    "set_params": 1
                },
                "_DAT_40021004": {
                    "control_register": 1,
                    "data_1": 1,
                    "data_register": 2,
                    "data_register1": 6,
                    "data_register_1": 2,
                    "data_value1": 2,
                    "hardware_status": 1,
                    "input_1": 1,
                    "input_data": 8,
                    "input_data_1": 1,
                    "input_value": 2,
                    "input_value1": 2,
                    "register_value": 1
                },
                "_DAT_40022000": {
                    "additional_input_data": 1,
                    "config_data": 1,
                    "control_output_register": 1,
                    "data_2": 1,
                    "data_register": 1,
                    "data_register2": 6,
                    "data_register_2": 2,
                    "data_value": 1,
                    "data_value2": 2,
                    "input_2": 1,
                    "input_data_2": 1,
                    "input_flags": 1,
                    "input_register": 1,
                    "input_value2": 2,
                    "memory_data": 1,
                    "memory_status": 1,
                    "memory_value": 1,
                    "output_data": 4,
                    "output_value": 1
                },
                "param_1": {
                    "data_array": 1,
                    "output_array": 14,
                    "output_buffer": 2,
                    "output_param": 1,
                    "output_params": 2,
                    "output_ptr": 1,
                    "output_registers": 1,
                    "output_values": 6,
                    "param_array": 2,
                    "result": 1
                },
                "param_2": {
                    "config_ptr": 1,
                    "control_bits": 1,
                    "control_register": 2,
                    "input_array": 7,
                    "input_param": 1,
                    "input_params": 1,
                    "input_pointer": 1,
                    "input_registers": 1,
                    "input_value": 1,
                    "input_values": 6,
                    "output": 1,
                    "output_array": 2,
                    "output_param": 1,
                    "output_values": 1,
                    "result_array": 1,
                    "status": 1,
                    "status_array": 1,
                    "status_flags": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080075dc"
            ],
            "code": "\n\n\nvoid initialize_parameters_08005a68(undefined4 *output_array,uint *input_array)\n\n{\n  *output_array = 0xf;\n  output_array[1] = _DAT_40021004 & 3;\n  output_array[2] = _DAT_40021004 & 0xf0;\n  output_array[3] = _DAT_40021004 & 0x700;\n  output_array[4] = _DAT_40021004 >> 3 & 0x700;\n  *input_array = _DAT_40022000 & 7;\n  return;\n}\n\n",
            "current_name": "initialize_parameters_08005a68",
            "entrypoint": "0x08005a68",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005a68": "initialize_parameters_08005a68",
                "param_1": "output_array",
                "param_2": "input_array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005aa4": {
            "additional_data": {
                "FUN_08003760": {
                    "check_flag": 1
                },
                "FUN_08005aa4": {
                    "configure_device": 3,
                    "configure_hardware": 1,
                    "configure_peripheral": 2,
                    "initialize_device": 4,
                    "initialize_hardware": 4,
                    "initialize_peripheral": 1,
                    "initialize_system": 1,
                    "process_data": 1,
                    "process_flags": 1,
                    "update_configuration": 2,
                    "update_device_settings": 1,
                    "update_flags_and_registers": 2,
                    "update_registers": 1,
                    "update_registers_and_settings": 1,
                    "update_settings": 3
                },
                "HAL_GetTick": {
                    "get_current_tick": 1,
                    "get_tick": 1,
                    "get_tick_count": 2
                },
                "_DAT_40007000": {
                    "data_reg2": 1,
                    "device_flag3": 1,
                    "device_reg2": 1,
                    "flag_register2": 1,
                    "hardware_reg2": 1,
                    "peripheral_status_reg": 1,
                    "register2": 6,
                    "register3": 1,
                    "register_2": 1,
                    "register_value2": 1,
                    "system_status_flag": 1
                },
                "_DAT_40021004": {
                    "device_config_flag": 1,
                    "device_flag4": 1,
                    "flag_register5": 1,
                    "hardware_reg4": 1,
                    "register5": 5,
                    "register8": 1,
                    "register_value5": 1
                },
                "_DAT_4002101c": {
                    "data_reg1": 1,
                    "device_flag1": 1,
                    "device_reg1": 1,
                    "device_status_flag": 1,
                    "flag_register1": 1,
                    "hardware_reg1": 1,
                    "peripheral_state_reg": 1,
                    "register1": 6,
                    "register6": 1,
                    "register_1": 1,
                    "register_value1": 1
                },
                "_DAT_40021020": {
                    "communication_flag": 1,
                    "data_reg3": 1,
                    "device_flag2": 1,
                    "device_reg3": 1,
                    "flag_register3": 1,
                    "hardware_reg3": 1,
                    "peripheral_config_reg": 1,
                    "register2": 1,
                    "register3": 5,
                    "register7": 1,
                    "register_3": 1,
                    "register_value3": 1
                },
                "_DAT_42420440": {
                    "communication_data": 1,
                    "dummy_var": 1,
                    "flag_register4": 1,
                    "register4": 5,
                    "register5": 1,
                    "register_4": 1,
                    "register_value4": 1,
                    "temp_flag": 1,
                    "temp_var": 1
                },
                "bVar5": {
                    "condition": 1,
                    "condition_flag": 1,
                    "flag": 5,
                    "flag3": 1,
                    "flag_status": 1,
                    "is_bit_clear": 1,
                    "is_bit_set": 5,
                    "is_configured": 1,
                    "is_first_time": 1,
                    "is_flag_cleared": 1,
                    "is_flag_enabled": 1,
                    "is_flag_set": 11,
                    "original_flag": 1
                },
                "iVar3": {
                    "counter1": 1,
                    "loop_start": 1,
                    "start_tick": 1,
                    "start_time": 25,
                    "temp_var_3": 1,
                    "tick_start": 2
                },
                "iVar4": {
                    "counter2": 1,
                    "curr_time": 1,
                    "current_tick": 2,
                    "current_time": 24,
                    "loop_end": 1,
                    "temp_var_4": 1,
                    "tick_current": 1
                },
                "param_1": {
                    "config": 2,
                    "config_params": 4,
                    "config_values": 1,
                    "configuration": 3,
                    "data": 1,
                    "device_config": 4,
                    "device_settings": 2,
                    "flags": 2,
                    "hardware_config": 2,
                    "input_data": 2,
                    "input_values": 2,
                    "register_values": 1,
                    "settings": 4
                },
                "uVar1": {
                    "flag": 1,
                    "flag1": 9,
                    "flags": 1,
                    "mask": 1,
                    "mask1": 2,
                    "prev_peripheral_state": 1,
                    "temp1": 4,
                    "temp_var1": 8,
                    "temp_var_1": 1,
                    "updated_value1": 1,
                    "var1": 2
                },
                "uVar2": {
                    "flag2": 8,
                    "mask2": 2,
                    "new_peripheral_state": 1,
                    "register4": 1,
                    "temp": 2,
                    "temp2": 3,
                    "temp_flag": 1,
                    "temp_var": 1,
                    "temp_var2": 8,
                    "temp_var_2": 1,
                    "updated_value2": 1,
                    "var2": 2
                }
            },
            "called": [
                "FUN_08003760"
            ],
            "calling": [
                "FUN_080035b8"
            ],
            "code": "\n\n\nundefined4 update_registers_and_settings_08005aa4(uint *device_config)\n\n{\n  uint flag1;\n  uint flag2;\n  int start_time;\n  int current_time;\n  bool is_flag_set;\n  \n  if ((*device_config & 1) != 0) {\n    is_flag_set = (_DAT_4002101c & 0x10000000) == 0;\n    if (is_flag_set) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      start_time = get_tick_count();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        current_time = get_tick_count();\n        if (100 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    if (((_DAT_40021020 & 0x300) != 0) && ((_DAT_40021020 & 0x300) != (device_config[1] & 0x300))) {\n      flag2 = _DAT_40021020 & 0xfffffcff;\n      _DAT_42420440 = 0;\n      flag1 = _DAT_40021020 & 1;\n      _DAT_40021020 = flag2;\n      if (flag1 != 0) {\n        start_time = get_tick_count();\n        while ((_DAT_40021020 & 2) == 0) {\n          current_time = get_tick_count();\n          if (5000 < (uint)(current_time - start_time)) {\n            return 3;\n          }\n        }\n      }\n    }\n    _DAT_40021020 = _DAT_40021020 & 0xfffffcff | device_config[1];\n    if (is_flag_set) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if ((*device_config & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffff3fff | device_config[2];\n  }\n  if ((*device_config & 0x10) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffbfffff | device_config[3];\n  }\n  return 0;\n}\n\n",
            "current_name": "update_registers_and_settings_08005aa4",
            "entrypoint": "0x08005aa4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005aa4": "update_registers_and_settings_08005aa4",
                "HAL_GetTick": "get_tick_count",
                "bVar5": "is_flag_set",
                "iVar3": "start_time",
                "iVar4": "current_time",
                "param_1": "device_config",
                "uVar1": "flag1",
                "uVar2": "flag2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005bb8": {
            "additional_data": {
                "DAT_40021000": {
                    "register_2": 1
                },
                "DAT_40021004": {
                    "register_1": 1
                },
                "DAT_40021020": {
                    "register_3": 1
                },
                "DAT_40021024": {
                    "register_4": 1
                },
                "FUN_08005bb8": {
                    "calculate_clock_freq": 1,
                    "calculate_clock_frequency": 18,
                    "calculate_clock_speed": 2,
                    "calculate_frequency": 2,
                    "get_clock_frequency": 6,
                    "get_modified_frequency": 1,
                    "get_peripheral_clock_frequency": 1
                },
                "HAL_RCC_GetPCLK2Freq": {
                    "get_pclk2_frequency": 2,
                    "get_peripheral_frequency": 1
                },
                "_DAT_40021000": {
                    "data_value2": 2,
                    "register2": 3,
                    "register_2": 1
                },
                "_DAT_40021004": {
                    "data_value1": 2,
                    "register1": 3,
                    "register_1": 1
                },
                "_DAT_40021020": {
                    "data_value3": 2,
                    "register3": 3,
                    "register_3": 1
                },
                "_DAT_40021024": {
                    "data_value4": 2,
                    "register4": 3,
                    "register_4": 1
                },
                "local_24": {
                    "clock_divider": 1,
                    "config_value": 1,
                    "constant": 3,
                    "constant_5": 1,
                    "constant_value": 5,
                    "divider": 2,
                    "divisor": 1,
                    "flag": 1,
                    "multiplier": 1,
                    "prescaler": 11,
                    "prescaler_count": 1,
                    "prescaler_value": 1,
                    "preset_value": 1,
                    "temp": 1
                },
                "param_1": {
                    "clock_source": 1,
                    "clock_type": 4,
                    "input": 6,
                    "input_mode": 1,
                    "input_param": 1,
                    "input_parameter": 1,
                    "input_selection": 1,
                    "input_value": 6,
                    "mode": 7,
                    "peripheral_id": 1,
                    "source": 1,
                    "system_clock_source": 1
                },
                "uStack_14": {
                    "base_frequency": 1,
                    "constant": 7,
                    "constant1": 2,
                    "constant2": 2,
                    "constant4": 3,
                    "constant5": 1,
                    "constant_1": 2,
                    "constant_4": 2,
                    "constant_b": 1,
                    "constant_c": 1,
                    "constant_value1": 1,
                    "constant_value5": 1,
                    "divide_value": 1,
                    "misc_reg": 1,
                    "stack_value4": 1,
                    "stack_var_14": 1,
                    "timer": 1,
                    "value": 1,
                    "value_d": 1
                },
                "uStack_18": {
                    "base_frequency": 1,
                    "constant": 1,
                    "constant1": 2,
                    "constant2": 3,
                    "constant3": 2,
                    "constant4": 1,
                    "constant_2": 4,
                    "constant_a": 1,
                    "constant_b": 1,
                    "constant_value2": 1,
                    "constant_value4": 1,
                    "divider": 5,
                    "divider_tmp": 1,
                    "multiply_value3": 1,
                    "shift": 1,
                    "stack_value3": 1,
                    "stack_var_18": 1,
                    "status_reg": 1,
                    "value_c": 1
                },
                "uStack_1c": {
                    "constant2": 2,
                    "constant3": 4,
                    "constant_3": 4,
                    "constant_value3": 2,
                    "divider": 5,
                    "divisor": 1,
                    "multiplier": 1,
                    "multiply_value2": 1,
                    "prescaler_reg": 1,
                    "stack_value2": 1,
                    "stack_var_1c": 1,
                    "value_b": 1
                },
                "uStack_20": {
                    "config_reg": 1,
                    "constant1": 2,
                    "constant2": 1,
                    "constant4": 1,
                    "constant_4": 1,
                    "constant_a": 1,
                    "constant_value2": 1,
                    "constant_value4": 1,
                    "divider": 1,
                    "multiplier": 14,
                    "multiply_value1": 1,
                    "period": 1,
                    "prescaler": 1,
                    "prescaler_mul_factor": 1,
                    "stack_value1": 1,
                    "stack_var_20": 1,
                    "value_a": 1
                },
                "uVar1": {
                    "clock_freq": 2,
                    "clock_frequency": 12,
                    "clock_speed": 2,
                    "frequency": 11,
                    "modified_frequency": 1,
                    "result": 2
                }
            },
            "called": [
                "FUN_08005a48"
            ],
            "calling": [
                "FUN_08003e20",
                "FUN_0800376c"
            ],
            "code": "\n\n\nuint calculate_clock_frequency_08005bb8(int mode)\n\n{\n  uint clock_frequency;\n  undefined2 prescaler;\n  undefined4 multiplier;\n  undefined4 divider;\n  undefined4 divider;\n  undefined4 constant;\n  \n  constant = 0x10100f0e;\n  divider = 0xd0c0b0a;\n  divider = 0x9080706;\n  multiplier = 0x5040302;\n  prescaler = 0x201;\n  if (mode == 2) {\n    clock_frequency = get_pclk2_frequency();\n    clock_frequency = clock_frequency / ((((_DAT_40021004 << 0x10) >> 0x1e) + 1) * 2);\n  }\n  else if (mode == 0x10) {\n    if ((_DAT_40021000 & 0x1000000) == 0) {\n      clock_frequency = 0;\n    }\n    else {\n      if ((_DAT_40021004 & 0x10000) == 0) {\n        clock_frequency = 4000000;\n      }\n      else {\n        clock_frequency = 8000000 / *(byte *)((int)&prescaler - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n      }\n      clock_frequency = clock_frequency * *(byte *)((int)&multiplier + ((_DAT_40021004 << 10) >> 0x1c));\n      if ((_DAT_40021004 & 0x400000) == 0) {\n        clock_frequency = (clock_frequency * 2) / 3;\n      }\n    }\n  }\n  else if (mode == 1) {\n    if ((_DAT_40021020 & 0x302) == 0x102) {\n      clock_frequency = 0x8000;\n    }\n    else if (((_DAT_40021020 & 0x300) == 0x200) && ((_DAT_40021024 & 2) != 0)) {\n      clock_frequency = 32000;\n    }\n    else if ((_DAT_40021020 & 0x300) == 0x300) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        clock_frequency = 0;\n      }\n      else {\n        clock_frequency = 0xf424;\n      }\n    }\n    else {\n      clock_frequency = 0;\n    }\n  }\n  else {\n    clock_frequency = 0;\n  }\n  return clock_frequency;\n}\n\n",
            "current_name": "calculate_clock_frequency_08005bb8",
            "entrypoint": "0x08005bb8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005bb8": "calculate_clock_frequency_08005bb8",
                "HAL_RCC_GetPCLK2Freq": "get_pclk2_frequency",
                "local_24": "prescaler",
                "param_1": "mode",
                "uStack_14": "constant",
                "uStack_18": "divider",
                "uStack_1c": "divider",
                "uStack_20": "multiplier",
                "uVar1": "clock_frequency"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005cb4": {
            "additional_data": {
                "0x11": {
                    "offset": 1
                },
                "DAT_40010414": {
                    "constant_register": 1,
                    "memory_address": 2,
                    "register_address": 2,
                    "rtc_control_register": 1,
                    "some_variable": 1,
                    "status": 1,
                    "status_register": 1
                },
                "FUN_08005cb4": {
                    "check_and_set_alarm_state": 1,
                    "check_and_update_alarm": 1,
                    "check_and_update_alarm_settings": 1,
                    "handle_alarm_event": 9,
                    "handle_alarms": 1,
                    "handle_rtc_alarm": 2,
                    "handle_rtc_alarm_a_event": 1,
                    "initialize_system": 1,
                    "process_alarm_callback": 1,
                    "process_alarm_check": 1,
                    "set_alarm_callback": 2,
                    "set_alarm_flag_and_callback": 1,
                    "set_alarm_flag_and_time": 1,
                    "set_alarm_status": 1,
                    "set_rtc_alarm_state": 1,
                    "update_alarm_configuration": 1,
                    "update_alarm_settings": 3,
                    "update_rtc_alarm": 2
                },
                "FUN_080073c0": {
                    "additional_function": 1,
                    "handle_rtc_alarm_event": 1
                },
                "HAL_RTC_AlarmAEventCallback": {
                    "callback": 1,
                    "handle_alarm_a_event": 2,
                    "handle_alarm_callback": 5,
                    "handle_alarm_event": 12,
                    "handle_rtc_alarm_a_event": 2,
                    "handle_rtc_alarm_a_event_callback": 1,
                    "handle_rtc_alarm_callback": 1,
                    "notify_alarm_a_callback": 1,
                    "notify_alarm_event": 1,
                    "trigger_alarm_callback": 2
                },
                "PTR_080073c0": {
                    "check_status": 1
                },
                "PTR_11": {
                    "event_flag": 1
                },
                "_DAT_40010414": {
                    "data_register": 1,
                    "device_register": 1,
                    "flag": 1,
                    "mem_address": 1,
                    "memory_address": 1,
                    "register": 1,
                    "register_address": 1,
                    "some_register": 1,
                    "some_variable": 1,
                    "special_register": 1,
                    "timer_register": 2
                },
                "param_1": {
                    "alarm_configuration": 1,
                    "alarm_data": 6,
                    "alarm_flag": 1,
                    "alarm_flags": 1,
                    "alarm_param": 1,
                    "alarm_parameter": 1,
                    "alarm_settings": 4,
                    "alarm_state": 1,
                    "alarm_status": 1,
                    "data": 1,
                    "input_data": 1,
                    "param": 2,
                    "param_list": 1,
                    "param_ptr": 1,
                    "parameters": 2,
                    "params": 1,
                    "rtc_alarm_config": 1,
                    "rtc_data": 1,
                    "rtc_param": 1,
                    "rtc_params": 1,
                    "system_params": 1
                },
                "undefined": {
                    "anon_variable": 1
                }
            },
            "called": [
                "FUN_080073c0"
            ],
            "calling": [],
            "code": "\n\n\nvoid handle_rtc_alarm_a_event_08005cb4(uint **alarm_data)\n\n{\n  if (((**alarm_data & 2) != 0) && (((*alarm_data)[1] & 2) != 0)) {\n    handle_alarm_event();\n    (*alarm_data)[1] = 0xfffffffd;\n  }\n  _DAT_40010414 = 0x20000;\n  *(anon_variable *)((int)alarm_data + 0x11) = 1;\n  return;\n}\n\n",
            "current_name": "handle_rtc_alarm_a_event_08005cb4",
            "entrypoint": "0x08005cb4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005cb4": "handle_rtc_alarm_a_event_08005cb4",
                "HAL_RTC_AlarmAEventCallback": "handle_alarm_event",
                "param_1": "alarm_data",
                "undefined": "anon_variable"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005cec": {
            "additional_data": {
                "0x18": {
                    "offset2": 1
                },
                "0x20": {
                    "offset1": 1
                },
                "0x34": {
                    "offset3": 1
                },
                "0x40012c00": {
                    "specific_address": 1
                },
                "0xfffffff7": {
                    "mask3": 1
                },
                "0xfffffffb": {
                    "mask4": 1
                },
                "0xfffffffd": {
                    "mask2": 1
                },
                "0xfffffffe": {
                    "mask1": 1
                },
                "1": {
                    "data_offset1": 1
                },
                "2": {
                    "data_offset2": 1
                },
                "3": {
                    "data_offset3": 1
                },
                "4": {
                    "flag_offset": 1
                },
                "5": {
                    "data_offset4": 1
                },
                "6": {
                    "data_offset5": 1
                },
                "FUN_08005cec": {
                    "set_flags_and_values": 3,
                    "update_configuration": 4,
                    "update_data": 3,
                    "update_memory": 1,
                    "update_memory_values": 1,
                    "update_param": 2,
                    "update_param_values": 1,
                    "update_parameters": 9,
                    "update_params": 3,
                    "update_register_values": 1,
                    "update_registration_data": 1,
                    "update_state": 1,
                    "update_values": 1
                },
                "param_1": {
                    "address": 4,
                    "base_address": 9,
                    "config_address": 3,
                    "config_base": 1,
                    "data": 1,
                    "data_address": 1,
                    "data_ptr": 1,
                    "function_address": 1,
                    "memory_address": 1,
                    "param_address": 4,
                    "param_base": 1,
                    "register_address": 1,
                    "registration_data": 1,
                    "state": 1,
                    "value": 1
                },
                "param_2": {
                    "config_data": 1,
                    "config_values": 2,
                    "configuration": 1,
                    "data": 4,
                    "data_values": 1,
                    "input_params": 1,
                    "input_values": 1,
                    "new_values": 3,
                    "param_array": 3,
                    "param_ptr": 1,
                    "param_values": 3,
                    "parameters": 1,
                    "params": 2,
                    "register_values": 1,
                    "values": 6
                },
                "uVar1": {
                    "modified_address": 1,
                    "modified_flags": 2,
                    "modified_flags1": 1,
                    "new_flags": 1,
                    "updated_config_value1": 1,
                    "updated_data1": 1,
                    "updated_flag": 2,
                    "updated_flags": 1,
                    "updated_state1": 1,
                    "updated_u_var1": 1,
                    "updated_val1": 1,
                    "updated_value": 1,
                    "updated_value1": 15,
                    "updated_var1": 2
                },
                "uVar2": {
                    "current_value": 1,
                    "modified_flags2": 1,
                    "modified_value1": 2,
                    "old_value": 1,
                    "original_value": 2,
                    "param_1_val": 1,
                    "updated_config_value2": 1,
                    "updated_data2": 1,
                    "updated_state2": 1,
                    "updated_u_var2": 1,
                    "updated_val2": 1,
                    "updated_value2": 15,
                    "updated_var1": 1,
                    "updated_var2": 2
                },
                "uVar3": {
                    "config_value": 1,
                    "data_value": 1,
                    "modified_value2": 2,
                    "new_value": 4,
                    "param_2_val": 1,
                    "updated_data": 1,
                    "updated_data3": 1,
                    "updated_u_var3": 1,
                    "updated_val3": 1,
                    "updated_value3": 15,
                    "updated_var2": 1,
                    "updated_var3": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08006186",
                "FUN_08006128"
            ],
            "code": "\nvoid update_parameters_08005cec(int base_address,uint *values)\n\n{\n  uint updated_value1;\n  uint updated_value2;\n  uint updated_value3;\n  \n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & 0xfffffffe;\n  updated_value2 = *(uint *)(base_address + 4);\n  updated_value3 = *values;\n  updated_value1 = *(uint *)(base_address + 0x20) & 0xfffffffd | values[2];\n  if (base_address == 0x40012c00) {\n    updated_value1 = (updated_value1 & 0xfffffff7 | values[3]) & 0xfffffffb;\n    updated_value2 = updated_value2 & 0xfffffcff | values[5] | values[6];\n  }\n  *(uint *)(base_address + 4) = updated_value2;\n  *(uint *)(base_address + 0x18) = *(uint *)(base_address + 0x18) & 0xffffff8c | updated_value3;\n  *(uint *)(base_address + 0x34) = values[1];\n  *(uint *)(base_address + 0x20) = updated_value1;\n  return;\n}\n\n",
            "current_name": "update_parameters_08005cec",
            "entrypoint": "0x08005cec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005cec": "update_parameters_08005cec",
                "param_1": "base_address",
                "param_2": "values",
                "uVar1": "updated_value1",
                "uVar2": "updated_value2",
                "uVar3": "updated_value3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005d48": {
            "additional_data": {
                "0x40012c00": {
                    "base_address": 1
                },
                "FUN_08005d48": {
                    "initialize_data": 2,
                    "normalize_and_store_data": 1,
                    "set_configuration": 1,
                    "update_config": 1,
                    "update_configuration": 2,
                    "update_data": 7,
                    "update_device_info": 1,
                    "update_memory_info": 1,
                    "update_param": 2,
                    "update_param_values": 1,
                    "update_parameter": 1,
                    "update_parameter_in_memory": 1,
                    "update_parameters": 7,
                    "update_params": 1,
                    "update_register": 1,
                    "update_settings": 1
                },
                "param_1": {
                    "address": 4,
                    "base_address": 3,
                    "config_address": 3,
                    "configuration_address": 1,
                    "data_address": 6,
                    "device_address": 1,
                    "memory_address": 3,
                    "memory_start": 1,
                    "param_address": 4,
                    "param_base": 2,
                    "param_base_address": 1,
                    "register_address": 1,
                    "settings": 1
                },
                "param_2": {
                    "config_data": 1,
                    "config_values": 2,
                    "data": 3,
                    "data_array": 1,
                    "data_pointer": 1,
                    "data_values": 2,
                    "device_info": 1,
                    "input_array": 1,
                    "input_data": 2,
                    "memory_info": 1,
                    "new_values": 1,
                    "param_array": 3,
                    "param_list": 1,
                    "param_values": 5,
                    "parameters": 3,
                    "params": 1,
                    "register_values": 1,
                    "values": 1
                },
                "uVar1": {
                    "combined_value": 1,
                    "modified_flags": 1,
                    "modified_memory_info1": 1,
                    "modified_value1": 1,
                    "new_device_info": 1,
                    "updated_address": 1,
                    "updated_value1": 21,
                    "updated_var1": 4
                },
                "uVar2": {
                    "masked_value": 1,
                    "modified_memory_info2": 1,
                    "modified_value2": 1,
                    "original_flags": 1,
                    "prev_device_info": 1,
                    "updated_value": 1,
                    "updated_value2": 21,
                    "updated_var2": 4
                },
                "uVar3": {
                    "device_value": 1,
                    "input_value": 2,
                    "input_value1": 1,
                    "modified_memory_info3": 1,
                    "new_value": 2,
                    "original_data": 1,
                    "original_value": 1,
                    "param_value": 1,
                    "updated_value3": 17,
                    "updated_var3": 4
                }
            },
            "called": [],
            "calling": [
                "FUN_08006186",
                "FUN_08006128"
            ],
            "code": "\nvoid update_param_values_08005d48(int data_address,uint *param_values)\n\n{\n  uint updated_value1;\n  uint updated_value2;\n  uint updated_value3;\n  \n  *(uint *)(data_address + 0x20) = *(uint *)(data_address + 0x20) & 0xfffffeff;\n  updated_value2 = *(uint *)(data_address + 4);\n  updated_value3 = *param_values;\n  updated_value1 = *(uint *)(data_address + 0x20) & 0xfffffdff | param_values[2] << 8;\n  if (data_address == 0x40012c00) {\n    updated_value1 = (updated_value1 & 0xfffff7ff | param_values[3] << 8) & 0xfffffbff;\n    updated_value2 = updated_value2 & 0xffffcfff | param_values[5] << 4 | param_values[6] << 4;\n  }\n  *(uint *)(data_address + 4) = updated_value2;\n  *(uint *)(data_address + 0x1c) = *(uint *)(data_address + 0x1c) & 0xffffff8c | updated_value3;\n  *(uint *)(data_address + 0x3c) = param_values[1];\n  *(uint *)(data_address + 0x20) = updated_value1;\n  return;\n}\n\n",
            "current_name": "update_param_values_08005d48",
            "entrypoint": "0x08005d48",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005d48": "update_param_values_08005d48",
                "param_1": "data_address",
                "param_2": "param_values",
                "uVar1": "updated_value1",
                "uVar2": "updated_value2",
                "uVar3": "updated_value3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005dac": {
            "additional_data": {
                "FUN_08005dac": {
                    "set_configuration": 1,
                    "update_config": 1,
                    "update_data": 3,
                    "update_data_fields": 1,
                    "update_data_information": 1,
                    "update_flags_and_values": 1,
                    "update_memory": 3,
                    "update_memory_layout": 1,
                    "update_param": 2,
                    "update_param_values": 1,
                    "update_parameter_values": 1,
                    "update_parameters": 7,
                    "update_params": 7,
                    "update_values": 1
                },
                "iVar2": {
                    "config_value2": 1,
                    "data_value1": 1,
                    "first_param": 1,
                    "input_var": 1,
                    "param1": 1,
                    "param2_value": 3,
                    "param_2_value_1": 1,
                    "param_value": 1,
                    "param_value1": 3,
                    "second_param": 1,
                    "updated_value2": 1,
                    "updated_var2": 1,
                    "value1": 5,
                    "value2": 7,
                    "var2": 3
                },
                "iVar3": {
                    "array_value": 1,
                    "config_value3": 1,
                    "data_value2": 1,
                    "param2_index2": 1,
                    "param2_value2": 1,
                    "param3": 1,
                    "param3_value": 2,
                    "param_2_value_2": 1,
                    "param_value2": 3,
                    "second_param": 1,
                    "third_param": 1,
                    "updated_value3": 1,
                    "updated_var3": 1,
                    "value2": 5,
                    "value3": 7,
                    "var3": 3
                },
                "param_1": {
                    "address": 1,
                    "base_address": 10,
                    "config_address": 2,
                    "data_addr": 1,
                    "data_address": 2,
                    "data_ptr": 2,
                    "input_address": 1,
                    "memory_address": 3,
                    "param1": 1,
                    "param_address": 4,
                    "param_base": 1,
                    "param_value": 1,
                    "parameter1": 2
                },
                "param_2": {
                    "config_data": 1,
                    "config_values": 1,
                    "data": 1,
                    "data_array": 1,
                    "input_array": 1,
                    "input_params": 1,
                    "param2": 1,
                    "param_arr": 1,
                    "param_array": 6,
                    "param_list": 1,
                    "param_ptr": 1,
                    "param_values": 2,
                    "parameter2": 2,
                    "parameter_array": 1,
                    "parameters": 4,
                    "params": 1,
                    "params_array": 5
                },
                "uVar1": {
                    "config_data": 1,
                    "config_value1": 1,
                    "current_value": 2,
                    "existing_value": 2,
                    "flag1": 1,
                    "flags": 1,
                    "old_value": 1,
                    "original_value": 2,
                    "param1_value": 2,
                    "param4": 1,
                    "saved_value": 1,
                    "temp_value": 1,
                    "updated_value": 1,
                    "updated_value1": 1,
                    "updated_var1": 2,
                    "value1": 7,
                    "value_to_set": 1,
                    "var1": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_08006186",
                "FUN_08006128"
            ],
            "code": "\nvoid update_memory_layout_08005dac(int base_address,int *param_array)\n\n{\n  uint value1;\n  int value2;\n  int value3;\n  \n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & 0xffffefff;\n  value1 = *(uint *)(base_address + 4);\n  value2 = *param_array;\n  value3 = param_array[2];\n  if (base_address == 0x40012c00) {\n    value1 = value1 & 0xffffbfff | param_array[5] << 6;\n  }\n  *(uint *)(base_address + 4) = value1;\n  *(uint *)(base_address + 0x1c) = *(uint *)(base_address + 0x1c) & 0xffff8cff | value2 << 8;\n  *(int *)(base_address + 0x40) = param_array[1];\n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & 0xffffdfff | value3 << 0xc;\n  return;\n}\n\n",
            "current_name": "update_memory_layout_08005dac",
            "entrypoint": "0x08005dac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005dac": "update_memory_layout_08005dac",
                "iVar2": "value2",
                "iVar3": "value3",
                "param_1": "base_address",
                "param_2": "param_array",
                "uVar1": "value1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005df4": {
            "additional_data": {
                "0x1111": {
                    "flag1_mask": 1
                },
                "0x3d": {
                    "deinit_flag": 1
                },
                "0x444": {
                    "flag2_mask": 1
                },
                "FUN_08005df4": {
                    "clear_timer_interrupt": 1,
                    "configure_timer": 1,
                    "deinit_tim_oc": 5,
                    "deinit_timer": 4,
                    "deinit_timer_and_set_state": 1,
                    "deinit_timer_output_compare": 2,
                    "deinitialize_tim_oc": 1,
                    "deinitialize_timer": 4,
                    "disable_timer_function": 1,
                    "init_function": 1,
                    "init_timer": 1,
                    "initialize_tim_oc": 1,
                    "initialize_timer": 3,
                    "initiate_and_reset_timer": 1,
                    "set_timer_output_mode_and_de_init": 1,
                    "update_and_reset_timer": 1,
                    "update_timer_config": 1,
                    "update_timers": 1
                },
                "FUN_08007710": {
                    "deinit_peripheral": 1
                },
                "HAL_TIM_OC_MspDeInit": {
                    "deinit_msp": 1,
                    "deinit_tim_oc_gpio": 1,
                    "deinit_tim_oc_msp": 2,
                    "deinit_tim_oc_msp_de_init": 1,
                    "deinit_timer_output_compare": 1,
                    "deinit_timer_output_compare_msp": 1,
                    "deinit_timer_peripheral": 1,
                    "deinitialize_oc": 1,
                    "deinitialize_oc_msp": 1,
                    "deinitialize_tim": 1,
                    "deinitialize_timer": 3,
                    "deinitialize_timer_oc": 1,
                    "deinitialize_timer_output_compare": 1
                },
                "param_1": {
                    "config": 1,
                    "input_data": 1,
                    "param": 2,
                    "parameters": 1,
                    "timer": 11,
                    "timer_config": 1,
                    "timer_data": 2,
                    "timer_handle": 2,
                    "timer_instance": 1,
                    "timer_param": 1,
                    "timer_params": 2,
                    "timer_ptr": 4,
                    "timer_settings": 1,
                    "timers": 1
                },
                "puVar1": {
                    "current_timer": 1,
                    "data_ptr": 1,
                    "pointer_var": 1,
                    "pointer_variable": 1,
                    "ptr_param": 1,
                    "ptr_timer": 1,
                    "target": 1,
                    "timer_config": 4,
                    "timer_config_value": 1,
                    "timer_data": 7,
                    "timer_ptr": 6,
                    "timer_registers": 1,
                    "timer_value": 4,
                    "timer_values": 1
                }
            },
            "called": [
                "FUN_08007710"
            ],
            "calling": [
                "FUN_080076e0"
            ],
            "code": "\nvoid deinit_timer_output_compare_08005df4(uint **timer)\n\n{\n  uint *timer_data;\n  \n  *(undefined *)((int)timer + 0x3d) = 2;\n  timer_data = *timer;\n  if ((timer_data[8] & 0x1111) == 0) {\n    if ((timer_data[8] & 0x444) == 0) {\n      *timer_data = *timer_data & 0xfffffffe;\n    }\n  }\n  deinitialize_timer(timer);\n  *(undefined *)((int)timer + 0x3d) = 0;\n  *(undefined *)(timer + 0xf) = 0;\n  return;\n}\n\n",
            "current_name": "deinit_timer_output_compare_08005df4",
            "entrypoint": "0x08005df4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005df4": "deinit_timer_output_compare_08005df4",
                "HAL_TIM_OC_MspDeInit": "deinitialize_timer",
                "param_1": "timer",
                "puVar1": "timer_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005e2e": {
            "additional_data": {
                "0x3d": {
                    "status_flag": 1
                },
                "FUN_08005e2e": {
                    "deinit_pwm": 5,
                    "deinit_pwm_tim": 1,
                    "deinit_pwm_timer": 1,
                    "deinit_pwm_timers": 5,
                    "deinitialize_pwm": 3,
                    "deinitialize_pwm_timer": 1,
                    "initialize_pwm": 3,
                    "initialize_pwm_settings": 1,
                    "initialize_timers": 2,
                    "pwm_deinit": 1,
                    "reset_pwm_channel": 1,
                    "reset_pwm_configuration": 1,
                    "set_pwm_pin_mode": 1,
                    "update_pwm_settings": 2,
                    "update_pwm_state": 1,
                    "update_pwm_values": 1
                },
                "HAL_TIM_PWM_MspDeInit": {
                    "cleanup_tim_pwm": 1,
                    "deinit_hal_pwm": 1,
                    "deinit_hal_tim_pwm": 1,
                    "deinit_pwm": 1,
                    "deinit_pwm_peripherals": 1,
                    "deinit_tim_pwm": 1,
                    "deinitialize_hal_tim_pwm": 1,
                    "deinitialize_hal_tim_pwm_msp": 1,
                    "deinitialize_pwm": 6,
                    "deinitialize_tim_pwm": 2,
                    "tim_pwm_deinit": 1
                },
                "TIM_PWM_MspDeInit": {
                    "deinit_tim_pwm": 1
                },
                "param_1": {
                    "arguments": 2,
                    "config": 2,
                    "input_data": 1,
                    "input_params": 1,
                    "p_param": 2,
                    "p_parameter": 1,
                    "p_params": 1,
                    "p_pwm": 2,
                    "param": 2,
                    "parameters": 1,
                    "pwm_array": 1,
                    "pwm_config": 2,
                    "pwm_data": 1,
                    "pwm_handle": 1,
                    "pwm_param": 1,
                    "pwm_pin": 1,
                    "pwm_settings": 1,
                    "settings": 1,
                    "timer_array": 1,
                    "timer_config": 1,
                    "timer_controls": 1,
                    "timer_param": 1,
                    "timer_params": 1,
                    "timer_pointers": 1,
                    "timers": 1
                },
                "puVar1": {
                    "config_ptr": 2,
                    "current_timer": 1,
                    "data": 1,
                    "data_ptr": 1,
                    "device_config": 1,
                    "p_data": 3,
                    "p_pointer": 1,
                    "p_var": 1,
                    "p_var1": 1,
                    "param_ptr": 1,
                    "pin_data": 1,
                    "pointer": 2,
                    "pointer1": 1,
                    "pointer_to_settings": 1,
                    "ptr": 1,
                    "ptr_argument": 1,
                    "ptr_param": 1,
                    "pwm_data": 3,
                    "pwm_ptr": 1,
                    "timer_control": 1,
                    "timer_data": 1,
                    "timer_pointer": 1,
                    "timer_ptr": 2,
                    "timer_values": 1
                }
            },
            "called": [
                "FUN_08007110"
            ],
            "calling": [
                "FUN_080071e4"
            ],
            "code": "\nvoid deinit_pwm_timers_08005e2e(uint **arguments)\n\n{\n  uint *pwm_data;\n  \n  *(undefined *)((int)arguments + 0x3d) = 2;\n  pwm_data = *arguments;\n  if ((pwm_data[8] & 0x1111) == 0) {\n    if ((pwm_data[8] & 0x444) == 0) {\n      *pwm_data = *pwm_data & 0xfffffffe;\n    }\n  }\n  deinitialize_pwm(arguments);\n  *(undefined *)((int)arguments + 0x3d) = 0;\n  *(undefined *)(arguments + 0xf) = 0;\n  return;\n}\n\n",
            "current_name": "deinit_pwm_timers_08005e2e",
            "entrypoint": "0x08005e2e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005e2e": "deinit_pwm_timers_08005e2e",
                "HAL_TIM_PWM_MspDeInit": "deinitialize_pwm",
                "TIM_PWM_MspDeInit": "deinit_tim_pwm",
                "param_1": "arguments",
                "puVar1": "pwm_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005e68": {
            "called": [],
            "calling": [
                "FUN_08005e6e"
            ],
            "code": "\nvoid FUNC_08005e68(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08005e68",
            "entrypoint": "0x08005e68",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08005e68": "FUNC_08005e68"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08005e6a": {
            "called": [],
            "calling": [
                "FUN_08005e6e"
            ],
            "code": "\nvoid FUNC_08005e6a(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08005e6a",
            "entrypoint": "0x08005e6a",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08005e6a": "FUNC_08005e6a"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08005e6c": {
            "called": [],
            "calling": [
                "FUN_08005e6e"
            ],
            "code": "\nvoid FUNC_08005e6c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08005e6c",
            "entrypoint": "0x08005e6c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08005e6c": "FUNC_08005e6c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08005e6e": {
            "additional_data": {
                "FUNC_08005e68": {
                    "handle_capture": 1
                },
                "FUNC_08005e6a": {
                    "handle_pulse_finished": 1
                },
                "FUNC_08005e6c": {
                    "handle_commuation": 1
                },
                "FUNC_080064ae": {
                    "handle_delay_elapsed": 1
                },
                "FUN_08005e6e": {
                    "handle_interrupt": 1,
                    "handle_tim_callback": 3,
                    "handle_tim_callbacks": 3,
                    "handle_tim_event": 2,
                    "handle_tim_events": 2,
                    "handle_timer_interrupt": 2,
                    "handle_timers": 5,
                    "process_callback": 1,
                    "process_callbacks": 3,
                    "process_timers": 7,
                    "update_timers": 2
                },
                "FUN_0800771c": {
                    "handle_break": 1
                },
                "FUN_08007736": {
                    "handle_trigger": 1
                },
                "HAL_TIMEx_BreakCallback": {
                    "handle_break": 5,
                    "handle_break_callback": 8,
                    "handle_ex_break_callback": 3
                },
                "HAL_TIMEx_CommutationCallback": {
                    "handle_commutation": 5,
                    "handle_commutation_callback": 8,
                    "handle_ex_commutation_callback": 3
                },
                "HAL_TIM_IC_CaptureCallback": {
                    "handle_capture_callback": 1,
                    "handle_ic_capture": 5,
                    "handle_ic_capture_callback": 10
                },
                "HAL_TIM_OC_DelayElapsedCallback": {
                    "handle_delay_elapsed_callback": 2,
                    "handle_oc_delay_elapsed": 5,
                    "handle_oc_delay_elapsed_callback": 9
                },
                "HAL_TIM_PWM_PulseFinishedCallback": {
                    "handle_pulse_finished_callback": 1,
                    "handle_pwm_finished": 1,
                    "handle_pwm_pulse_finished": 4,
                    "handle_pwm_pulse_finished_callback": 10
                },
                "HAL_TIM_PeriodElapsedCallback": {
                    "handle_period_elapsed": 5,
                    "handle_period_elapsed_callback": 11
                },
                "HAL_TIM_TriggerCallback": {
                    "handle_trigger": 5,
                    "handle_trigger_callback": 11
                },
                "PTR_FUN_080064ac": {
                    "handle_period_elapsed": 1
                },
                "iVar1": {
                    "base_address": 1,
                    "callback_data_value": 1,
                    "current_tim_event": 1,
                    "current_timer_data": 1,
                    "data": 1,
                    "data_value": 3,
                    "temp_var": 1,
                    "tim_value": 1,
                    "timer": 2,
                    "timer_address": 2,
                    "timer_data": 3,
                    "timer_value": 11,
                    "timer_var1": 2,
                    "var1": 1
                },
                "param_1": {
                    "callback_data": 4,
                    "interrupt_data": 1,
                    "tim_context": 1,
                    "tim_event": 1,
                    "tim_handle": 2,
                    "timer": 1,
                    "timer_array": 3,
                    "timer_data": 7,
                    "timer_handle": 3,
                    "timer_param": 1,
                    "timer_ptr": 1,
                    "timers": 5
                }
            },
            "called": [
                "FUN_080064ac",
                "FUN_0800771c",
                "FUN_08007736",
                "FUN_08005e6c",
                "FUN_08005e68",
                "FUN_08005e6a",
                "FUN_080064ae"
            ],
            "calling": [],
            "code": "\nvoid process_timers_08005e6e(int *timer_data)\n\n{\n  int timer_value;\n  \n  timer_value = *timer_data;\n  if (((*(uint *)(timer_value + 0x10) & 2) != 0) && ((*(uint *)(timer_value + 0xc) & 2) != 0)) {\n    *(undefined4 *)(timer_value + 0x10) = 0xfffffffd;\n    *(undefined *)(timer_data + 7) = 1;\n    if ((*(uint *)(*timer_data + 0x18) & 3) == 0) {\n      handle_oc_delay_elapsed_callback();\n      handle_pwm_pulse_finished_callback(timer_data);\n    }\n    else {\n      handle_ic_capture_callback();\n    }\n    *(undefined *)(timer_data + 7) = 0;\n  }\n  timer_value = *timer_data;\n  if (((*(uint *)(timer_value + 0x10) & 4) != 0) && ((*(uint *)(timer_value + 0xc) & 4) != 0)) {\n    *(undefined4 *)(timer_value + 0x10) = 0xfffffffb;\n    *(undefined *)(timer_data + 7) = 2;\n    if ((*(uint *)(*timer_data + 0x18) & 0x300) == 0) {\n      handle_oc_delay_elapsed_callback(timer_data);\n      handle_pwm_pulse_finished_callback(timer_data);\n    }\n    else {\n      handle_ic_capture_callback(timer_data);\n    }\n    *(undefined *)(timer_data + 7) = 0;\n  }\n  timer_value = *timer_data;\n  if (((*(uint *)(timer_value + 0x10) & 8) != 0) && ((*(uint *)(timer_value + 0xc) & 8) != 0)) {\n    *(undefined4 *)(timer_value + 0x10) = 0xfffffff7;\n    *(undefined *)(timer_data + 7) = 4;\n    if ((*(uint *)(*timer_data + 0x1c) & 3) == 0) {\n      handle_oc_delay_elapsed_callback(timer_data);\n      handle_pwm_pulse_finished_callback(timer_data);\n    }\n    else {\n      handle_ic_capture_callback(timer_data);\n    }\n    *(undefined *)(timer_data + 7) = 0;\n  }\n  timer_value = *timer_data;\n  if (((*(uint *)(timer_value + 0x10) & 0x10) != 0) && ((*(uint *)(timer_value + 0xc) & 0x10) != 0)) {\n    *(undefined4 *)(timer_value + 0x10) = 0xffffffef;\n    *(undefined *)(timer_data + 7) = 8;\n    if ((*(uint *)(*timer_data + 0x1c) & 0x300) == 0) {\n      handle_oc_delay_elapsed_callback(timer_data);\n      handle_pwm_pulse_finished_callback(timer_data);\n    }\n    else {\n      handle_ic_capture_callback(timer_data);\n    }\n    *(undefined *)(timer_data + 7) = 0;\n  }\n  timer_value = *timer_data;\n  if (((*(uint *)(timer_value + 0x10) & 1) != 0) && ((*(uint *)(timer_value + 0xc) & 1) != 0)) {\n    *(undefined4 *)(timer_value + 0x10) = 0xfffffffe;\n    handle_period_elapsed_callback(timer_data);\n  }\n  timer_value = *timer_data;\n  if (((*(uint *)(timer_value + 0x10) & 0x80) != 0) && ((*(uint *)(timer_value + 0xc) & 0x80) != 0)) {\n    *(undefined4 *)(timer_value + 0x10) = 0xffffff7f;\n    handle_break_callback(timer_data);\n  }\n  timer_value = *timer_data;\n  if (((*(uint *)(timer_value + 0x10) & 0x40) != 0) && ((*(uint *)(timer_value + 0xc) & 0x40) != 0)) {\n    *(undefined4 *)(timer_value + 0x10) = 0xffffffbf;\n    handle_trigger_callback(timer_data);\n  }\n  timer_value = *timer_data;\n  if (((*(uint *)(timer_value + 0x10) & 0x20) != 0) && ((*(uint *)(timer_value + 0xc) & 0x20) != 0)) {\n    *(undefined4 *)(timer_value + 0x10) = 0xffffffdf;\n    handle_commutation_callback(timer_data);\n  }\n  return;\n}\n\n",
            "current_name": "process_timers_08005e6e",
            "entrypoint": "0x08005e6e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005e6e": "process_timers_08005e6e",
                "HAL_TIMEx_BreakCallback": "handle_break_callback",
                "HAL_TIMEx_CommutationCallback": "handle_commutation_callback",
                "HAL_TIM_IC_CaptureCallback": "handle_ic_capture_callback",
                "HAL_TIM_OC_DelayElapsedCallback": "handle_oc_delay_elapsed_callback",
                "HAL_TIM_PWM_PulseFinishedCallback": "handle_pwm_pulse_finished_callback",
                "HAL_TIM_PeriodElapsedCallback": "handle_period_elapsed_callback",
                "HAL_TIM_TriggerCallback": "handle_trigger_callback",
                "iVar1": "timer_value",
                "param_1": "timer_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005fe8": {
            "additional_data": {
                "FUN_08005fe8": {
                    "update_memory": 13,
                    "update_memory_addresses": 1,
                    "update_memory_values": 2,
                    "update_param1": 1,
                    "update_param_values": 2,
                    "update_parameter_data": 1,
                    "update_parameter_values": 1,
                    "update_parameters": 3,
                    "update_params": 3,
                    "update_params_and_values": 1,
                    "update_registers": 1,
                    "update_values": 1
                },
                "param_1": {
                    "array1": 1,
                    "base_address": 1,
                    "destination": 1,
                    "dst_pointer": 1,
                    "input_array": 1,
                    "input_data": 1,
                    "input_params": 1,
                    "memory": 1,
                    "memory_addr": 1,
                    "memory_address": 4,
                    "memory_block": 1,
                    "memory_pointer": 2,
                    "memory_ptr": 2,
                    "old_params": 1,
                    "original_params": 3,
                    "param_array": 1,
                    "param_array1": 1,
                    "registers": 1,
                    "source_addresses": 1,
                    "source_array": 1,
                    "target_memory": 1,
                    "target_params": 3
                },
                "param_2": {
                    "array2": 1,
                    "data": 1,
                    "data_array": 1,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "data_values": 1,
                    "destination_addresses": 1,
                    "input_array": 1,
                    "new_data": 1,
                    "new_memory": 1,
                    "new_params": 5,
                    "new_value": 1,
                    "new_values": 1,
                    "param_array2": 1,
                    "source": 1,
                    "source_data": 2,
                    "source_memory": 1,
                    "source_params": 3,
                    "src_pointer": 1,
                    "update_array": 2,
                    "values": 2
                },
                "uRam40012c30": {
                    "memory_location": 1,
                    "memory_value": 1,
                    "ram_value": 1,
                    "special_memory_value": 1,
                    "special_register": 1,
                    "special_value": 7,
                    "updated_value2": 1
                },
                "uVar1": {
                    "base_value": 1,
                    "current_value": 1,
                    "dst_value": 1,
                    "first_value": 1,
                    "memory_value": 2,
                    "modified_value": 2,
                    "new_value": 1,
                    "old_value": 3,
                    "original_value": 5,
                    "target_value": 2,
                    "temp": 1,
                    "temp_value": 2,
                    "updated_value": 8,
                    "updated_value1": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08006092",
                "FUN_08006060"
            ],
            "code": "\nvoid update_memory_values_08005fe8(uint *memory_address,uint *new_params)\n\n{\n  uint updated_value;\n  \n  updated_value = *memory_address;\n  if ((((memory_address == (uint *)0x40012c00) || (memory_address == (uint *)0x40000000)) ||\n      (memory_address == (uint *)0x40000400)) || (memory_address == (uint *)0x40000800)) {\n    updated_value = updated_value & 0xffffff8f | new_params[1];\n  }\n  if (((memory_address == (uint *)0x40012c00) || (memory_address == (uint *)0x40000000)) ||\n     ((memory_address == (uint *)0x40000400 || (memory_address == (uint *)0x40000800)))) {\n    updated_value = updated_value & 0xfffffcff | new_params[3];\n  }\n  *memory_address = updated_value & 0xffffff7f | new_params[5];\n  memory_address[0xb] = new_params[2];\n  memory_address[10] = *new_params;\n  if (memory_address == (uint *)0x40012c00) {\n    special_value = new_params[4];\n  }\n  memory_address[5] = 1;\n  return;\n}\n\n",
            "current_name": "update_memory_values_08005fe8",
            "entrypoint": "0x08005fe8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005fe8": "update_memory_values_08005fe8",
                "param_1": "memory_address",
                "param_2": "new_params",
                "uRam40012c30": "special_value",
                "uVar1": "updated_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006060": {
            "additional_data": {
                "0": {
                    "success": 1
                },
                "0x0": {
                    "null": 1
                },
                "0x3d": {
                    "status_byte": 1
                },
                "1": {
                    "failure": 1,
                    "status_configured": 1
                },
                "2": {
                    "status_enabled": 1
                },
                "FUN_08005fe8": {
                    "configure_tim_base": 3,
                    "configure_timer": 6,
                    "configure_timer_base": 1,
                    "configure_timers": 1,
                    "copy_data": 1,
                    "initialize_tim_base_config": 1,
                    "set_tim_base_config": 2,
                    "set_tim_config": 1,
                    "set_timer_config": 1,
                    "update_timer_config": 1
                },
                "FUN_08006060": {
                    "configure_tim": 1,
                    "configure_tim_base": 1,
                    "configure_timers": 1,
                    "init_timer_function": 1,
                    "initialize_tim": 1,
                    "initialize_tim_oc": 11,
                    "initialize_timer": 12,
                    "initialize_timers": 3
                },
                "FUN_08007708": {
                    "configure_peripheral": 1,
                    "disable_interrupts": 1,
                    "initialize_hardware": 1,
                    "initialize_tim_base": 2,
                    "initialize_tim_base_setup": 1,
                    "initialize_tim_oc_msp_init": 1,
                    "initialize_timer_interrupt": 1,
                    "initialize_timer_interrupt_handler": 1,
                    "perform_additional_setup": 1,
                    "perform_additional_task": 1,
                    "perform_callback": 1,
                    "perform_tim_base_set_config": 1,
                    "perform_tim_config": 1,
                    "reset_peripherals": 1,
                    "reset_tim_base": 1,
                    "reset_timer": 1,
                    "reset_timers": 1
                },
                "HAL_TIM_OC_MspInit": {
                    "init_timer_peripheral": 1,
                    "initialize_msp": 1,
                    "initialize_specific_timer": 1,
                    "initialize_tim": 1,
                    "initialize_tim_oc_gpio": 1,
                    "initialize_tim_oc_msp": 7,
                    "initialize_timer": 1,
                    "initialize_timer_gpio": 2,
                    "initialize_timer_interrupt": 1,
                    "initialize_timer_interrupts": 1,
                    "initialize_timer_periph": 1,
                    "initialize_timer_peripheral": 3,
                    "initialize_timer_pins": 1
                },
                "TIM_Base_SetConfig": {
                    "configure_tim_base": 2,
                    "configure_timer": 1,
                    "configure_timer_base": 2,
                    "set_tim_base_config": 2,
                    "set_tim_config": 1,
                    "set_timer_config": 2,
                    "set_timer_configuration": 2
                },
                "char": {
                    "byte": 1
                },
                "param_1": {
                    "config": 6,
                    "config_params": 1,
                    "config_ptr": 5,
                    "timer_config": 13,
                    "timer_handle": 1,
                    "timer_instance": 1,
                    "timer_parameters": 2,
                    "timer_params": 1,
                    "unused_parameter": 1
                },
                "param_2": {
                    "base_config": 1,
                    "config_data": 1,
                    "config_parameters": 2,
                    "timer_base_config": 1,
                    "timer_config_2": 1,
                    "timer_config_array": 1,
                    "unused": 1,
                    "unused_param": 3,
                    "unused_parameter": 1
                }
            },
            "called": [
                "FUN_08005fe8",
                "FUN_08007708"
            ],
            "calling": [
                "FUN_08007648"
            ],
            "code": "\nundefined4 initialize_tim_oc_08006060(undefined4 *timer_config)\n\n{\n  if (timer_config != (undefined4 *)0x0) {\n    if (*(byte *)((int)timer_config + 0x3d) == '\\0') {\n      *(undefined *)(timer_config + 0xf) = 0;\n      initialize_tim_oc_08006060_msp();\n    }\n    *(undefined *)((int)timer_config + 0x3d) = 2;\n    set_timer_configuration(*timer_config,timer_config + 1);\n    *(undefined *)((int)timer_config + 0x3d) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "initialize_tim_oc_08006060",
            "entrypoint": "0x08006060",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006060": "initialize_tim_oc_08006060",
                "HAL_TIM_OC_MspInit": "initialize_tim_oc_msp",
                "TIM_Base_SetConfig": "set_timer_configuration",
                "char": "byte",
                "param_1": "timer_config"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006092": {
            "additional_data": {
                "0": {
                    "success": 1
                },
                "0x0": {
                    "null": 1
                },
                "0x3d": {
                    "is_initialized": 1
                },
                "1": {
                    "failure": 1,
                    "success": 1
                },
                "FUN_08005fe8": {
                    "configure_gpio": 1,
                    "configure_pwm_base": 1,
                    "configure_tim_base": 5,
                    "configure_tim_parameters": 1,
                    "configure_timer": 1,
                    "configure_timer_base": 1,
                    "configure_timer_bases": 1,
                    "init_pwm_config": 1,
                    "set_pwm_config": 3,
                    "set_tim_base_config": 1
                },
                "FUN_08006092": {
                    "configure_pwm_timer": 1,
                    "configure_pwm_timers": 1,
                    "configure_tim_pwm": 2,
                    "initialize_pwm": 24,
                    "initialize_pwm_module": 1,
                    "initialize_pwm_timer": 1,
                    "initialize_pwm_timers": 1
                },
                "FUN_08006e68": {
                    "enable_pwm": 1,
                    "initialize_pwm_msp": 1,
                    "return_false_if_null": 1,
                    "set_pwm_base": 1,
                    "set_pwm_base_config": 1,
                    "set_pwm_config": 3,
                    "set_pwm_configuration": 1,
                    "set_pwm_mode": 1,
                    "set_tim_base_config": 3,
                    "set_tim_config": 1,
                    "set_tim_pwm_mode": 1,
                    "set_timer_config": 1
                },
                "HAL_TIM_PWM_MspInit": {
                    "initialize_pwm_gpio": 6,
                    "initialize_pwm_hardware": 2,
                    "initialize_pwm_msp": 5,
                    "initialize_pwm_msp_init": 1,
                    "initialize_pwm_peripheral": 5,
                    "initialize_pwm_peripherals": 6,
                    "initialize_pwm_pins": 1,
                    "initialize_pwm_specific": 1,
                    "initialize_tim_pwm_msp": 2
                },
                "TIM_Base_SetConfig": {
                    "configure_pwm": 1,
                    "configure_pwm_base": 1,
                    "configure_tim_base": 1,
                    "configure_timer": 1,
                    "configure_timer_base": 1,
                    "set_config": 1,
                    "set_pwm_config": 2,
                    "set_tim_base_config": 2,
                    "set_tim_config": 1,
                    "set_timer_config": 3
                },
                "char": {
                    "byte": 1
                },
                "param_1": {
                    "base_config": 1,
                    "config": 15,
                    "config_ptr": 4,
                    "config_settings": 1,
                    "config_struct": 1,
                    "p_param": 1,
                    "p_pwm_config": 1,
                    "pwm_config": 3,
                    "timer_config": 1,
                    "timer_handle": 1,
                    "timer_instance": 1,
                    "value": 1
                },
                "param_2": {
                    "base_config_ptr": 2,
                    "config": 1,
                    "config2": 1,
                    "config_info_ptr": 1,
                    "p_tim_config": 1,
                    "timer_config": 2,
                    "unused": 1,
                    "unused_param": 1,
                    "unused_ptr": 1
                }
            },
            "called": [
                "FUN_08005fe8",
                "FUN_08006e68"
            ],
            "calling": [
                "FUN_08007118"
            ],
            "code": "\nundefined4 initialize_pwm_timers_08006092(undefined4 *config)\n\n{\n  if (config != (undefined4 *)0x0) {\n    if (*(byte *)((int)config + 0x3d) == '\\0') {\n      *(undefined *)(config + 0xf) = 0;\n      initialize_pwm_gpio();\n    }\n    *(undefined *)((int)config + 0x3d) = 2;\n    set_timer_config(*config,config + 1);\n    *(undefined *)((int)config + 0x3d) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "initialize_pwm_timers_08006092",
            "entrypoint": "0x08006092",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006092": "initialize_pwm_timers_08006092",
                "HAL_TIM_PWM_MspInit": "initialize_pwm_gpio",
                "TIM_Base_SetConfig": "set_timer_config",
                "char": "byte",
                "param_1": "config"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080060c4": {
            "additional_data": {
                "0x18": {
                    "flag2": 1
                },
                "0x20": {
                    "flag1": 1
                },
                "0x38": {
                    "flag3": 1
                },
                "FUN_080060c4": {
                    "update_and_set_params": 1,
                    "update_config": 5,
                    "update_configuration": 2,
                    "update_data": 3,
                    "update_flags_and_values": 1,
                    "update_function_data": 1,
                    "update_param": 2,
                    "update_parameter": 1,
                    "update_parameters": 6,
                    "update_params": 5,
                    "update_register_parameters": 1,
                    "update_register_values": 1,
                    "update_settings": 2
                },
                "PTR_080060c4": {
                    "unmodified_pointer": 1
                },
                "data1": {
                    "param1": 1
                },
                "data2": {
                    "param2": 1
                },
                "data3": {
                    "param3": 1
                },
                "data4": {
                    "param4": 1
                },
                "data5": {
                    "param5": 1
                },
                "data6": {
                    "param6": 1
                },
                "iVar3": {
                    "config_data_value": 1,
                    "config_value1": 1,
                    "flags_data": 1,
                    "input_value": 9,
                    "input_value1": 1,
                    "input_var": 1,
                    "new_value": 1,
                    "param2_value": 2,
                    "param_value": 6,
                    "param_value1": 1,
                    "parameter1": 1,
                    "parameter_value": 1,
                    "temp_value1": 1,
                    "updated_value3": 1,
                    "updated_var3": 1,
                    "value_to_store": 1
                },
                "param_1": {
                    "address": 1,
                    "base_address": 10,
                    "config_addr": 1,
                    "config_address": 6,
                    "data_address": 2,
                    "data_pointer": 1,
                    "function_data": 1,
                    "param": 3,
                    "param1": 1,
                    "param_address": 1,
                    "register_address": 1,
                    "register_base_address": 1,
                    "settings_address": 1,
                    "settings_ptr": 1
                },
                "param_2": {
                    "config_data": 4,
                    "config_values": 3,
                    "data": 1,
                    "data_array": 1,
                    "data_values": 1,
                    "input_params": 2,
                    "param2": 1,
                    "param_array": 2,
                    "param_values": 1,
                    "parameters": 6,
                    "params": 2,
                    "params_array": 5,
                    "register_values": 1,
                    "settings_data": 1
                },
                "uVar1": {
                    "modified_control_byte": 1,
                    "modified_flag": 1,
                    "modified_param1": 1,
                    "modified_value1": 3,
                    "new_config_value1": 1,
                    "updated_bit_flags": 1,
                    "updated_config1": 1,
                    "updated_field1": 1,
                    "updated_flag1": 1,
                    "updated_value1": 18,
                    "updated_var1": 1
                },
                "uVar1_2": {
                    "updated_value1_2": 1
                },
                "uVar2": {
                    "modified_flags": 1,
                    "modified_param2": 1,
                    "modified_value": 1,
                    "modified_value2": 3,
                    "new_config_value2": 1,
                    "updated_config2": 1,
                    "updated_field2": 1,
                    "updated_flag2": 1,
                    "updated_value": 1,
                    "updated_value2": 18,
                    "updated_var2": 1
                },
                "uVar2_2": {
                    "updated_value2_2": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08006186",
                "FUN_08006128"
            ],
            "code": "\nvoid update_register_parameters_080060c4(int base_address,int *parameters)\n\n{\n  uint updated_value1;\n  uint updated_value2;\n  int input_value;\n  \n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & 0xffffffef;\n  updated_value2 = *(uint *)(base_address + 4);\n  input_value = *parameters;\n  updated_value1 = *(uint *)(base_address + 0x20) & 0xffffffdf | parameters[2] << 4;\n  if (base_address == 0x40012c00) {\n    updated_value1 = (updated_value1 & 0xffffff7f | parameters[3] << 4) & 0xffffffbf;\n    updated_value2 = updated_value2 & 0xfffff3ff | parameters[5] << 2 | parameters[6] << 2;\n  }\n  *(uint *)(base_address + 4) = updated_value2;\n  *(uint *)(base_address + 0x18) = *(uint *)(base_address + 0x18) & 0xffff8cff | input_value << 8;\n  *(int *)(base_address + 0x38) = parameters[1];\n  *(uint *)(base_address + 0x20) = updated_value1;\n  return;\n}\n\n",
            "current_name": "update_register_parameters_080060c4",
            "entrypoint": "0x080060c4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080060c4": "update_register_parameters_080060c4",
                "iVar3": "input_value",
                "param_1": "base_address",
                "param_2": "parameters",
                "uVar1": "updated_value1",
                "uVar2": "updated_value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006128": {
            "additional_data": {
                "0": {
                    "channel_1": 1,
                    "oc_config_1": 1,
                    "output_channel_1": 1,
                    "timer_channel_1": 1
                },
                "0xc": {
                    "channel_4": 1,
                    "oc_config_4": 1,
                    "output_channel_4": 1,
                    "timer_channel_4": 1
                },
                "4": {
                    "channel_2": 1,
                    "oc_config_2": 1,
                    "output_channel_2": 1,
                    "timer_channel_2": 1
                },
                "8": {
                    "channel_3": 1,
                    "oc_config_3": 1,
                    "output_channel_3": 1,
                    "timer_channel_3": 1
                },
                "FUN_08006128": {
                    "configure_output_compare": 2,
                    "configure_pwm": 1,
                    "configure_tim_oc": 13,
                    "configure_tim_output_channel": 1,
                    "configure_tim_output_compare": 3,
                    "configure_tim_output_compare_mode": 1,
                    "configure_tim_pwm": 1,
                    "configure_timer": 1,
                    "configure_timer_output": 3,
                    "initialize_timer": 3,
                    "set_timer_output_config": 1,
                    "update_timoc_config": 1
                },
                "TIM_OC1_SetConfig": {
                    "configure_channel1": 1,
                    "configure_output_channel1": 1,
                    "configure_output_compare1": 1,
                    "configure_tim_oc1": 10,
                    "configure_timer_output_compare1": 1,
                    "set_config_for_channel_1": 1,
                    "set_oc1_config": 1,
                    "set_tim_oc1_config": 1,
                    "set_timer_channel1_config": 1,
                    "set_timer_output_config_for_channel1": 1
                },
                "TIM_OC2_SetConfig": {
                    "configure_channel2": 1,
                    "configure_output_channel2": 1,
                    "configure_output_compare2": 1,
                    "configure_tim_oc2": 10,
                    "configure_timer_output_compare2": 1,
                    "set_config_for_channel_2": 1,
                    "set_oc2_config": 1,
                    "set_tim_oc2_config": 1,
                    "set_timer_channel2_config": 1,
                    "set_timer_output_config_for_channel2": 1
                },
                "TIM_OC3_SetConfig": {
                    "configure_channel3": 1,
                    "configure_output_channel3": 1,
                    "configure_output_compare3": 1,
                    "configure_tim_oc3": 10,
                    "configure_timer_output_compare3": 1,
                    "set_config_for_channel_3": 1,
                    "set_oc3_config": 1,
                    "set_tim_oc3_config": 1,
                    "set_timer_channel3_config": 1,
                    "set_timer_output_config_for_channel3": 1
                },
                "TIM_OC4_SetConfig": {
                    "configure_channel4": 1,
                    "configure_output_channel4": 1,
                    "configure_output_compare4": 1,
                    "configure_tim_oc4": 10,
                    "configure_timer_output_compare4": 1,
                    "set_config_for_channel_4": 1,
                    "set_oc4_config": 1,
                    "set_tim_oc4_config": 1,
                    "set_timer_channel4_config": 1,
                    "set_timer_output_config_for_channel4": 1
                },
                "param_1": {
                    "config": 19,
                    "config_data": 4,
                    "config_ptr": 2,
                    "config_struct": 1,
                    "output_config": 1,
                    "timer_config": 4
                },
                "param_2": {
                    "arg": 1,
                    "channel": 1,
                    "config_option": 1,
                    "config_value": 1,
                    "mode": 3,
                    "oc_value": 1,
                    "option": 2,
                    "output_config": 1,
                    "output_mode": 1,
                    "param": 1,
                    "param2": 4,
                    "param_2": 9,
                    "unused": 1,
                    "unused_param": 2,
                    "value": 2
                },
                "param_3": {
                    "channel": 14,
                    "channel_option": 1,
                    "mode": 1,
                    "oc_channel": 4,
                    "oc_index": 1,
                    "oc_indicator": 1,
                    "oc_number": 1,
                    "option": 1,
                    "output_channel": 5,
                    "param3": 1,
                    "tim_channel": 1
                }
            },
            "called": [
                "FUN_08005cec",
                "FUN_08005dac",
                "FUN_08005d48",
                "FUN_080060c4"
            ],
            "calling": [
                "FUN_08007648"
            ],
            "code": "\nundefined4 configure_tim_oc_08006128(undefined4 *config,undefined4 param_2,undefined4 channel)\n\n{\n  if (*(char *)(config + 0xf) != '\\x01') {\n    *(undefined *)(config + 0xf) = 1;\n    *(undefined *)((int)config + 0x3d) = 2;\n    switch(channel) {\n    case 0:\n      configure_tim_oc_080061281(*config);\n      break;\n    case 4:\n      configure_tim_oc_080061282(*config);\n      break;\n    case 8:\n      configure_tim_oc_080061283(*config);\n      break;\n    case 0xc:\n      configure_tim_oc_080061284(*config);\n    }\n    *(undefined *)((int)config + 0x3d) = 1;\n    *(undefined *)(config + 0xf) = 0;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "current_name": "configure_tim_oc_08006128",
            "entrypoint": "0x08006128",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006128": "configure_tim_oc_08006128",
                "TIM_OC1_SetConfig": "configure_tim_oc1",
                "TIM_OC2_SetConfig": "configure_tim_oc2",
                "TIM_OC3_SetConfig": "configure_tim_oc3",
                "TIM_OC4_SetConfig": "configure_tim_oc4",
                "param_1": "config",
                "param_3": "channel"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006186": {
            "additional_data": {
                "FUN_08005cec": {
                    "configure_oc1": 1,
                    "set_tim_oc1_config": 1,
                    "set_timer_channel1_config": 1,
                    "tim_oc1_set_config": 3
                },
                "FUN_08005d48": {
                    "configure_oc3": 1,
                    "set_tim_oc3_config": 1,
                    "set_timer_channel3_config": 1,
                    "tim_oc2_set_config": 1,
                    "tim_oc3_set_config": 2
                },
                "FUN_08005dac": {
                    "configure_oc2": 1,
                    "set_tim_oc2_config": 1,
                    "set_timer_channel2_config": 1,
                    "tim_oc2_set_config": 2,
                    "tim_oc3_set_config": 1
                },
                "FUN_080060c4": {
                    "configure_oc4": 1,
                    "set_tim_oc4_config": 1,
                    "set_timer_channel4_config": 1,
                    "tim_oc4_set_config": 3
                },
                "FUN_08006186": {
                    "configure_output_compare": 2,
                    "configure_tim_oc": 7,
                    "configure_tim_output_channel": 1,
                    "configure_tim_output_compare": 3,
                    "configure_timer": 1,
                    "configure_timer_channel": 1,
                    "configure_timer_output": 4,
                    "configure_timer_output_channel": 2,
                    "configure_timer_output_compare": 3,
                    "configure_timers": 1,
                    "set_config_and_enable": 1,
                    "set_config_and_return": 1,
                    "set_oc_config": 1,
                    "set_output_compare_config": 1,
                    "set_tim_oc_config": 1,
                    "set_timer_config": 1
                },
                "TIM_OC1_SetConfig": {
                    "configure_channel1": 1,
                    "configure_oc1": 1,
                    "configure_output_channel1": 1,
                    "configure_output_compare1": 1,
                    "configure_output_compare_channel1": 1,
                    "configure_tim_oc1": 3,
                    "configure_timer_channel1": 1,
                    "configure_timer_oc1": 1,
                    "configure_timer_output_channel1": 1,
                    "configure_timer_output_compare_channel1": 1,
                    "set_config_for_channel1": 1,
                    "set_config_for_oc1": 1,
                    "set_oc1_config": 1,
                    "set_output_channel_config1": 1,
                    "set_tim_channel1_config": 1,
                    "set_tim_oc1_config": 1,
                    "set_tim_output_compare1_config": 1,
                    "set_tim_output_compare_channel_1_config": 1,
                    "set_timer_output_channel1_config": 1
                },
                "TIM_OC2_SetConfig": {
                    "configure_channel2": 1,
                    "configure_oc2": 1,
                    "configure_output_channel2": 1,
                    "configure_output_compare2": 1,
                    "configure_output_compare_channel2": 1,
                    "configure_tim_oc2": 3,
                    "configure_timer_channel2": 1,
                    "configure_timer_oc2": 1,
                    "configure_timer_output_channel2": 1,
                    "configure_timer_output_compare_channel2": 1,
                    "set_config_for_channel2": 1,
                    "set_config_for_oc2": 1,
                    "set_oc2_config": 1,
                    "set_output_channel_config2": 1,
                    "set_tim_channel2_config": 1,
                    "set_tim_oc2_config": 1,
                    "set_tim_output_compare2_config": 1,
                    "set_tim_output_compare_channel_2_config": 1,
                    "set_timer_output_channel2_config": 1
                },
                "TIM_OC3_SetConfig": {
                    "configure_channel3": 1,
                    "configure_oc3": 1,
                    "configure_output_channel3": 1,
                    "configure_output_compare3": 1,
                    "configure_output_compare_channel3": 1,
                    "configure_tim_oc3": 3,
                    "configure_timer_channel3": 1,
                    "configure_timer_oc3": 1,
                    "configure_timer_output_channel3": 1,
                    "configure_timer_output_compare_channel3": 1,
                    "set_config_for_channel3": 1,
                    "set_config_for_oc3": 1,
                    "set_oc3_config": 1,
                    "set_output_channel_config3": 1,
                    "set_tim_channel3_config": 1,
                    "set_tim_oc3_config": 1,
                    "set_tim_output_compare3_config": 1,
                    "set_tim_output_compare_channel_3_config": 1,
                    "set_timer_output_channel3_config": 1
                },
                "TIM_OC4_SetConfig": {
                    "configure_channel4": 1,
                    "configure_oc4": 1,
                    "configure_output_channel4": 1,
                    "configure_output_compare4": 1,
                    "configure_output_compare_channel4": 1,
                    "configure_tim_oc4": 3,
                    "configure_timer_channel4": 1,
                    "configure_timer_oc4": 1,
                    "configure_timer_output_channel4": 1,
                    "configure_timer_output_compare_channel4": 1,
                    "set_config_for_channel4": 1,
                    "set_config_for_oc4": 1,
                    "set_oc4_config": 1,
                    "set_output_channel_config4": 1,
                    "set_tim_channel4_config": 1,
                    "set_tim_oc4_config": 1,
                    "set_tim_output_compare4_config": 1,
                    "set_tim_output_compare_channel_4_config": 1,
                    "set_timer_output_channel4_config": 1
                },
                "param_1": {
                    "config": 9,
                    "config_array": 1,
                    "config_ptr": 2,
                    "output_compare_config": 1,
                    "tim_instance": 1,
                    "timer": 4,
                    "timer_channel": 1,
                    "timer_config": 10,
                    "timer_config_array": 1,
                    "timer_instance": 1
                },
                "param_2": {
                    "channel_config": 2,
                    "config": 2,
                    "config_data": 9,
                    "config_value": 1,
                    "data": 8,
                    "data_ptr": 1,
                    "gpio_config": 1,
                    "param": 2,
                    "param_2_ptr": 1,
                    "param_value_array": 1,
                    "register_config": 1,
                    "timer_config": 1,
                    "timer_value": 1
                },
                "param_3": {
                    "channel": 20,
                    "channel_id": 1,
                    "channel_index": 1,
                    "channel_number": 2,
                    "config_type": 2,
                    "option": 1,
                    "output_channel": 2,
                    "timer_channel": 2
                }
            },
            "called": [
                "FUN_08005cec",
                "FUN_08005dac",
                "FUN_08005d48",
                "FUN_080060c4"
            ],
            "calling": [
                "FUN_08007118"
            ],
            "code": "\nundefined4 configure_timer_output_compare_08006186(int *timer_config,int config_data,undefined4 channel)\n\n{\n  if (*(char *)(timer_config + 0xf) != '\\x01') {\n    *(undefined *)(timer_config + 0xf) = 1;\n    *(undefined *)((int)timer_config + 0x3d) = 2;\n    switch(channel) {\n    case 0:\n      configure_tim_oc1(*timer_config);\n      *(uint *)(*timer_config + 0x18) = *(uint *)(*timer_config + 0x18) | 8;\n      *(uint *)(*timer_config + 0x18) = *(uint *)(*timer_config + 0x18) & 0xfffffffb;\n      *(uint *)(*timer_config + 0x18) = *(uint *)(*timer_config + 0x18) | *(uint *)(config_data + 0x10);\n      break;\n    case 4:\n      configure_tim_oc2(*timer_config);\n      *(uint *)(*timer_config + 0x18) = *(uint *)(*timer_config + 0x18) | 0x800;\n      *(uint *)(*timer_config + 0x18) = *(uint *)(*timer_config + 0x18) & 0xfffffbff;\n      *(uint *)(*timer_config + 0x18) = *(uint *)(*timer_config + 0x18) | *(int *)(config_data + 0x10) << 8;\n      break;\n    case 8:\n      configure_tim_oc3(*timer_config);\n      *(uint *)(*timer_config + 0x1c) = *(uint *)(*timer_config + 0x1c) | 8;\n      *(uint *)(*timer_config + 0x1c) = *(uint *)(*timer_config + 0x1c) & 0xfffffffb;\n      *(uint *)(*timer_config + 0x1c) = *(uint *)(*timer_config + 0x1c) | *(uint *)(config_data + 0x10);\n      break;\n    case 0xc:\n      configure_tim_oc4(*timer_config);\n      *(uint *)(*timer_config + 0x1c) = *(uint *)(*timer_config + 0x1c) | 0x800;\n      *(uint *)(*timer_config + 0x1c) = *(uint *)(*timer_config + 0x1c) & 0xfffffbff;\n      *(uint *)(*timer_config + 0x1c) = *(uint *)(*timer_config + 0x1c) | *(int *)(config_data + 0x10) << 8;\n    }\n    *(undefined *)((int)timer_config + 0x3d) = 1;\n    *(undefined *)(timer_config + 0xf) = 0;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "current_name": "configure_timer_output_compare_08006186",
            "entrypoint": "0x08006186",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006186": "configure_timer_output_compare_08006186",
                "TIM_OC1_SetConfig": "configure_tim_oc1",
                "TIM_OC2_SetConfig": "configure_tim_oc2",
                "TIM_OC3_SetConfig": "configure_tim_oc3",
                "TIM_OC4_SetConfig": "configure_tim_oc4",
                "param_1": "timer_config",
                "param_2": "config_data",
                "param_3": "channel"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006262": {
            "additional_data": {
                "FUN_08006262": {
                    "clear_and_set_bits": 1,
                    "modify_bit": 2,
                    "set_bit": 1,
                    "set_bit_value": 1,
                    "toggle_bit": 1,
                    "update_bit": 7,
                    "update_bit_at_position": 1,
                    "update_bit_in_value": 1,
                    "update_bit_value": 5,
                    "update_bitmask": 1,
                    "update_bits": 5,
                    "update_bitwise_value": 3,
                    "update_value": 2
                },
                "param_1": {
                    "address": 2,
                    "base_addr": 1,
                    "base_address": 20,
                    "data": 6,
                    "target_address": 1,
                    "value_address": 1
                },
                "param_2": {
                    "bit_index": 2,
                    "bit_pos": 1,
                    "bit_position": 26,
                    "position": 2
                },
                "param_3": {
                    "bit_value": 12,
                    "bits_to_set": 1,
                    "new_value": 15,
                    "value": 3
                },
                "param_4": {
                    "original_value": 1
                },
                "param_5": {
                    "mask": 1
                },
                "param_6": {
                    "shifted_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08006280",
                "FUN_08006390",
                "FUN_080063c0",
                "FUN_080062f4"
            ],
            "code": "\nvoid update_bit_in_value_08006262(int base_address,uint bit_position,int new_value)\n\n{\n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & ~(1 << (bit_position & 0xff));\n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) | new_value << (bit_position & 0xff);\n  return;\n}\n\n",
            "current_name": "update_bit_in_value_08006262",
            "entrypoint": "0x08006262",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006262": "update_bit_in_value_08006262",
                "param_1": "base_address",
                "param_2": "bit_position",
                "param_3": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006280": {
            "called": [
                "FUN_08006262"
            ],
            "calling": [
                "FUN_08007648"
            ],
            "code": "\nundefined4 FUNC_08006280(uint **param_1,undefined4 param_2)\n\n{\n  switch(param_2) {\n  case 0:\n    (*param_1)[3] = (*param_1)[3] | 2;\n    break;\n  case 4:\n    (*param_1)[3] = (*param_1)[3] | 4;\n    break;\n  case 8:\n    (*param_1)[3] = (*param_1)[3] | 8;\n    break;\n  case 0xc:\n    (*param_1)[3] = (*param_1)[3] | 0x10;\n  }\n  TIM_CCxChannelCmd(*param_1,param_2,1);\n  if (*param_1 == (uint *)0x40012c00) {\n    uRam40012c44 = uRam40012c44 | 0x8000;\n  }\n  **param_1 = **param_1 | 1;\n  return 0;\n}\n\n",
            "current_name": "FUNC_08006280",
            "entrypoint": "0x08006280",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08006280": "FUNC_08006280"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080062f4": {
            "additional_data": {
                "0x40012c00": {
                    "timer_address": 1
                },
                "FUN_080062f4": {
                    "configure_peripheral": 1,
                    "configure_timer": 1,
                    "configure_timer_channel": 1,
                    "configure_timers": 2,
                    "modify_parameter_and_toggle_channel": 1,
                    "set_tim_ccr": 1,
                    "set_timer_channel": 1,
                    "update_and_configure_timer": 1,
                    "update_and_configure_timer_channel": 1,
                    "update_and_toggle_channel": 1,
                    "update_config": 1,
                    "update_configuration": 2,
                    "update_flags_and_timers": 1,
                    "update_param": 1,
                    "update_param_and_control": 1,
                    "update_param_and_tim": 1,
                    "update_param_and_toggle_timer": 1,
                    "update_peripheral_config": 1,
                    "update_register_and_channel": 1,
                    "update_tim_c_cx_channel": 1,
                    "update_tim_cc_channel": 1,
                    "update_timer_configuration": 1,
                    "update_timer_control": 1,
                    "update_timer_settings": 1,
                    "update_timers": 4
                },
                "P_FUN_080062f4": {
                    "configure_peripheral": 1
                },
                "TIM_CCxChannelCmd": {
                    "configure_channel": 2,
                    "configure_channel_cmd": 1,
                    "configure_timer_channel": 3,
                    "control_timer_channel": 1,
                    "set_channel_command": 1,
                    "set_tim_c_cx_channel_cmd": 1,
                    "set_timer_channel_command": 1,
                    "toggle_timer_channel_cmd": 1
                },
                "param_1": {
                    "array_pointer": 1,
                    "channel_pointer": 1,
                    "config": 1,
                    "config_ptr": 2,
                    "param": 1,
                    "param_array": 2,
                    "param_ptr": 1,
                    "parameter": 1,
                    "peripheral": 1,
                    "peripheral_address": 1,
                    "peripheral_config": 1,
                    "ptr_to_param_array": 1,
                    "register": 1,
                    "tim_c_cx_channel": 1,
                    "timer": 2,
                    "timer_config": 8,
                    "timer_control": 1,
                    "timer_data": 1,
                    "timer_params": 1,
                    "timer_settings": 1,
                    "timers": 1
                },
                "param_2": {
                    "channel": 14,
                    "channel_index": 1,
                    "channel_number": 1,
                    "channel_type": 1,
                    "config_option": 1,
                    "config_value": 3,
                    "control_value": 1,
                    "mode": 3,
                    "option": 1,
                    "param_value": 1,
                    "timer_channel": 1,
                    "value": 3
                },
                "param_3": {
                    "additional_data": 1,
                    "unused_parameter": 1
                },
                "puVar1": {
                    "channel_ptr": 1,
                    "config_ptr": 2,
                    "current_config": 1,
                    "current_param_array": 1,
                    "current_timer": 1,
                    "param": 1,
                    "param_ptr": 1,
                    "peripheral": 1,
                    "peripheral_data": 1,
                    "peripheral_state": 1,
                    "pointer": 1,
                    "ptr_param1": 1,
                    "ptr_to_param": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 1,
                    "temp_var": 1,
                    "tim": 1,
                    "tim_c_cx_channel_ptr": 1,
                    "timer": 2,
                    "timer_address": 1,
                    "timer_config": 1,
                    "timer_config_ptr": 1,
                    "timer_data": 2,
                    "timer_ptr": 1,
                    "timer_registers": 3,
                    "timer_state": 1
                },
                "uRam40012c00": {
                    "constant1": 2,
                    "memory_address1": 1,
                    "memory_value1": 1,
                    "ram_addr1": 1,
                    "ram_value1": 1,
                    "register1_value": 1,
                    "register_address": 1,
                    "some_constant": 1,
                    "timer_address": 2,
                    "timer_base_address": 2,
                    "timer_constant1": 1
                },
                "uRam40012c20": {
                    "another_constant": 1,
                    "constant2": 2,
                    "memory_data1": 1,
                    "memory_value2": 1,
                    "ram_addr2": 1,
                    "ram_value2": 1,
                    "register1": 1,
                    "register2_value": 1,
                    "register_value": 1,
                    "timer_config": 1,
                    "timer_config1": 1,
                    "timer_config_a": 1,
                    "timer_constant2": 1,
                    "timer_state1": 1,
                    "timer_status1": 1,
                    "value1": 1
                },
                "uRam40012c44": {
                    "constant3": 2,
                    "flag": 1,
                    "memory_data2": 1,
                    "memory_value3": 1,
                    "ram_addr3": 1,
                    "ram_value3": 1,
                    "register2": 1,
                    "register3_value": 1,
                    "register_flag": 1,
                    "timer_config2": 1,
                    "timer_config_b": 1,
                    "timer_constant3": 1,
                    "timer_control": 1,
                    "timer_state2": 1,
                    "timer_status2": 1,
                    "value2": 1
                }
            },
            "called": [
                "FUN_08006262"
            ],
            "calling": [
                "FUN_080076e0"
            ],
            "code": "\nundefined4 update_flags_and_timers_080062f4(uint **timer_config,undefined4 channel)\n\n{\n  uint *timer_registers;\n  \n  switch(channel) {\n  case 0:\n    (*timer_config)[3] = (*timer_config)[3] & 0xfffffffd;\n    break;\n  case 4:\n    (*timer_config)[3] = (*timer_config)[3] & 0xfffffffb;\n    break;\n  case 8:\n    (*timer_config)[3] = (*timer_config)[3] & 0xfffffff7;\n    break;\n  case 0xc:\n    (*timer_config)[3] = (*timer_config)[3] & 0xffffffef;\n  }\n  configure_timer_channel(*timer_config,channel,0);\n  if (((*timer_config == (uint *)0x40012c00) && ((constant2 & 0x1111) == 0)) &&\n     ((constant2 & 0x444) == 0)) {\n    constant3 = constant3 & 0xffff7fff;\n  }\n  timer_registers = *timer_config;\n  if (((timer_registers[8] & 0x1111) == 0) && ((timer_registers[8] & 0x444) == 0)) {\n    *timer_registers = *timer_registers & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "current_name": "update_flags_and_timers_080062f4",
            "entrypoint": "0x080062f4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080062f4": "update_flags_and_timers_080062f4",
                "TIM_CCxChannelCmd": "configure_timer_channel",
                "param_1": "timer_config",
                "param_2": "channel",
                "puVar1": "timer_registers",
                "uRam40012c20": "constant2",
                "uRam40012c44": "constant3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006390": {
            "additional_data": {
                "0x40012c00": {
                    "device_address": 1,
                    "memory_address": 1,
                    "register_address": 1,
                    "timer_base_address": 1
                },
                "FUN_08006262": {
                    "configure_tim_ccx_channel": 1,
                    "configure_timer_channel": 1,
                    "perform_specific_operation": 1,
                    "set_channel_attributes": 1,
                    "set_tim_c_cx_channel": 1
                },
                "FUN_08006390": {
                    "configure_and_enable_pwm_channel": 1,
                    "configure_and_enable_timer": 1,
                    "configure_tim_c_cx_channel": 4,
                    "configure_tim_c_cx_channel_and_set_flag": 1,
                    "configure_tim_cc_channel": 1,
                    "configure_tim_channel": 3,
                    "configure_timer_channel": 3,
                    "configure_timers": 1,
                    "enable_tim_ccx_channel": 1,
                    "enable_timer_channel": 1,
                    "initialize_channel": 2,
                    "initialize_tim_channel": 1,
                    "initialize_timer": 1,
                    "initialize_timer_channel": 2,
                    "set_bit_and_channel_command": 1,
                    "set_channel_command": 4,
                    "set_channel_enabled": 1,
                    "set_timer_channel": 1,
                    "toggle_channel": 1
                },
                "PTR_DAT_08005f00": {
                    "base_address": 1
                },
                "PTR_FUN_08006262": {
                    "handle_channel": 1
                },
                "TIM_CCxChannelCmd": {
                    "configure_channel": 1,
                    "enable_cc_channel": 1,
                    "set_channel_tim_cmd": 1,
                    "set_timer_channel_command": 1
                },
                "param_1": {
                    "ch_pointer": 1,
                    "channel": 3,
                    "channel_data": 1,
                    "channel_pointer": 4,
                    "channel_ptr": 5,
                    "p_pwm_config": 1,
                    "param1": 1,
                    "pointer_to_tim_c_cx_channel": 1,
                    "timer": 3,
                    "timer_address": 1,
                    "timer_channel": 7,
                    "timer_channel_parameter": 1,
                    "timer_config": 2
                },
                "param_2": {
                    "channel": 3,
                    "channel_cmd": 3,
                    "channel_command": 3,
                    "channel_config": 2,
                    "channel_index": 1,
                    "channel_num": 1,
                    "channel_number": 2,
                    "channel_param": 1,
                    "channel_parameter": 1,
                    "channel_setting": 2,
                    "channel_value": 5,
                    "command": 5,
                    "param2": 1,
                    "value": 1
                },
                "param_3": {
                    "enable_flag": 1,
                    "mode": 1,
                    "param3": 1,
                    "undefined_param": 1,
                    "unused_parameter": 1,
                    "value": 1,
                    "value_to_update": 1
                },
                "ptr_40012c00": {
                    "base_address": 1
                },
                "uRam40012c44": {
                    "channel_register": 1,
                    "channel_status": 5,
                    "device_register": 1,
                    "flag_variable": 1,
                    "pwm_control_register": 1,
                    "ram_flag": 1,
                    "ram_status": 1,
                    "ram_value": 1,
                    "register_value": 2,
                    "special_register": 1,
                    "status_flag": 1,
                    "status_register": 3,
                    "tim_register": 1,
                    "timer_channel_register": 1,
                    "timer_control": 1,
                    "timer_control_register": 3,
                    "timer_register": 3,
                    "timer_status": 3
                },
                "uint": {
                    "unsigned_int": 2
                }
            },
            "called": [
                "FUN_08006262"
            ],
            "calling": [
                "FUN_08007118"
            ],
            "code": "\nundefined4 configure_tim_c_cx_channel_and_set_flag_08006390(unsigned_int **timer_channel,undefined4 channel_value)\n\n{\n  set_timer_channel_command(*timer_channel,channel_value,1);\n  if (*timer_channel == (unsigned_int *)0x40012c00) {\n    channel_status = channel_status | 0x8000;\n  }\n  **timer_channel = **timer_channel | 1;\n  return 0;\n}\n\n",
            "current_name": "configure_tim_c_cx_channel_and_set_flag_08006390",
            "entrypoint": "0x08006390",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006390": "configure_tim_c_cx_channel_and_set_flag_08006390",
                "TIM_CCxChannelCmd": "set_timer_channel_command",
                "param_1": "timer_channel",
                "param_2": "channel_value",
                "uRam40012c44": "channel_status",
                "uint": "unsigned_int"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080063c0": {
            "additional_data": {
                "DAT_0800665a": {
                    "new_value": 1
                },
                "FUN_08006262": {
                    "configure_c_cx_channel": 1,
                    "configure_channel": 1,
                    "configure_pwm": 1,
                    "configure_tim_c_cx_channel_cmd": 1,
                    "configure_timer_channel": 3,
                    "initialize_channel": 1,
                    "perform_action": 1
                },
                "FUN_080063c0": {
                    "configure_tim_c_cx_channel": 7,
                    "configure_tim_channel": 3,
                    "configure_timer_channel": 5,
                    "control_tim_c_cx_channel": 1,
                    "initialize_pwm": 1,
                    "initialize_tim_channel": 1,
                    "initialize_timer": 4,
                    "initialize_timer_channel": 5,
                    "initialize_timers": 2,
                    "set_tim_c_cx_channel_cmd": 1,
                    "set_timer_channel_command": 1
                },
                "PTR_FUN_08006262": {
                    "check_condition": 1,
                    "set_timer_c_cx_channel_cmd": 1
                },
                "TIM_CCxChannelCmd": {
                    "configure_tim_c_cx_channel": 1,
                    "configure_tim_c_cx_channel_cmd": 1
                },
                "param_1": {
                    "action_type": 1,
                    "channel": 2,
                    "channel_address": 1,
                    "channel_config": 1,
                    "channel_index": 1,
                    "channel_ptr": 4,
                    "config_ptr": 1,
                    "param1": 1,
                    "param_1": 1,
                    "timer": 3,
                    "timer_array": 1,
                    "timer_channel": 2,
                    "timer_channel_ptr": 1,
                    "timer_config": 7,
                    "timer_handle": 1,
                    "timer_ptr": 2,
                    "timers": 1
                },
                "param_2": {
                    "channel": 8,
                    "channel_cmd": 1,
                    "channel_command": 2,
                    "channel_config": 5,
                    "channel_id": 1,
                    "channel_number": 3,
                    "channel_state": 1,
                    "channel_value": 2,
                    "command_config": 1,
                    "param": 1,
                    "param1": 1,
                    "param2": 1,
                    "param_2": 1,
                    "param_value": 1,
                    "timer_value": 1,
                    "value": 1
                },
                "param_3": {
                    "additional_param": 1,
                    "another_param": 1,
                    "mode": 1,
                    "param2": 1,
                    "param3": 1,
                    "param_3": 2,
                    "parameter": 1,
                    "unknown": 1,
                    "unused_param": 1,
                    "value": 1
                },
                "puVar1": {
                    "channel": 1,
                    "channel_data": 3,
                    "channel_ptr": 2,
                    "channel_ptr_value": 2,
                    "config": 1,
                    "config_ptr": 2,
                    "current_timer": 2,
                    "p_timer_value": 1,
                    "timer": 1,
                    "timer_base_address": 1,
                    "timer_channel_ptr": 2,
                    "timer_data": 1,
                    "timer_data_ptr": 1,
                    "timer_instance": 1,
                    "timer_pointer": 2,
                    "timer_ptr": 5,
                    "timer_registers": 2,
                    "timer_value": 1
                },
                "uRam40012c00": {
                    "base_address": 3,
                    "control_address": 1,
                    "memory_1": 1,
                    "register_base_address": 1,
                    "tim1_base_address": 1,
                    "timer_base_address": 8
                },
                "uRam40012c20": {
                    "control_data": 1,
                    "flag": 1,
                    "memory_2": 1,
                    "memory_value": 1,
                    "ram_data_1": 1,
                    "ram_flag": 1,
                    "register_value": 1,
                    "register_value1": 1,
                    "some_flag": 1,
                    "status_bits": 1,
                    "tim1_control_register": 1,
                    "timer_channel_status": 1,
                    "timer_config1": 1,
                    "timer_config_reg1": 1,
                    "timer_config_value": 2,
                    "timer_control_register": 1,
                    "timer_flags": 1,
                    "timer_status": 4,
                    "timer_status1": 1,
                    "timer_status_reg": 1,
                    "timer_status_register": 1
                },
                "uRam40012c44": {
                    "another_flag": 1,
                    "channel_config": 1,
                    "control": 1,
                    "control_mask": 1,
                    "memory_3": 1,
                    "memory_value_2": 1,
                    "ram_data_2": 1,
                    "ram_value": 1,
                    "register_value": 1,
                    "register_value2": 1,
                    "some_other_register_value": 1,
                    "tim1_interrupt_register": 1,
                    "timer_config2": 1,
                    "timer_config_reg2": 1,
                    "timer_configuration_register": 1,
                    "timer_control": 3,
                    "timer_control_reg": 1,
                    "timer_control_register": 2,
                    "timer_control_value": 1,
                    "timer_reset_value": 1,
                    "timer_status2": 1,
                    "timer_status_register": 1
                }
            },
            "called": [
                "FUN_08006262"
            ],
            "calling": [
                "FUN_080071e4"
            ],
            "code": "\nundefined4 configure_tim_c_cx_channel_080063c0(uint **timer_config,undefined4 channel)\n\n{\n  uint *timer_ptr;\n  \n  configure_tim_c_cx_channel_080063c0_cmd(*timer_config,channel,0);\n  if (((*timer_config == (uint *)0x40012c00) && ((timer_status & 0x1111) == 0)) &&\n     ((timer_status & 0x444) == 0)) {\n    timer_control = timer_control & 0xffff7fff;\n  }\n  timer_ptr = *timer_config;\n  if (((timer_ptr[8] & 0x1111) == 0) && ((timer_ptr[8] & 0x444) == 0)) {\n    *timer_ptr = *timer_ptr & 0xfffffffe;\n  }\n  *(undefined *)((int)timer_config + 0x3d) = 1;\n  return 0;\n}\n\n",
            "current_name": "configure_tim_c_cx_channel_080063c0",
            "entrypoint": "0x080063c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080063c0": "configure_tim_c_cx_channel_080063c0",
                "TIM_CCxChannelCmd": "configure_tim_c_cx_channel_cmd",
                "param_1": "timer_config",
                "param_2": "channel",
                "puVar1": "timer_ptr",
                "uRam40012c20": "timer_status",
                "uRam40012c44": "timer_control"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006420": {
            "additional_data": {
                "4": {
                    "mask": 1
                },
                "FUN_08006420": {
                    "apply_modifications": 1,
                    "set_bit": 1,
                    "set_bit_value_in_memory": 1,
                    "update_bit_data": 1,
                    "update_bit_field": 2,
                    "update_bit_value": 2,
                    "update_bitmask": 1,
                    "update_bits": 4,
                    "update_bitwise_value": 3,
                    "update_param_bits": 1,
                    "update_parameter": 2,
                    "update_register": 3,
                    "update_value": 5,
                    "update_value_at_bit": 1,
                    "update_value_at_index": 1,
                    "update_value_at_offset": 1,
                    "update_value_at_position": 1
                },
                "param_1": {
                    "addr": 1,
                    "address": 1,
                    "array": 1,
                    "base_address": 19,
                    "data": 1,
                    "data_pointer": 1,
                    "memory_address": 2,
                    "object_address": 1,
                    "param_base": 1,
                    "ptr": 1,
                    "register_addr": 1,
                    "register_address": 1
                },
                "param_2": {
                    "bit_offset": 11,
                    "bit_pos": 1,
                    "bit_position": 16,
                    "bit_shift": 2,
                    "index": 1
                },
                "param_3": {
                    "bit_value": 5,
                    "data": 4,
                    "new_value": 17,
                    "value": 5
                },
                "param_4": {
                    "mask": 1
                },
                "param_5": {
                    "result": 1
                },
                "param_6": {
                    "bit_masked_value": 1
                },
                "registerAddress": {
                    "register_value": 1
                },
                "uint": {
                    "unsigned_int": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800643c",
                "FUN_08006460"
            ],
            "code": "\nvoid update_bitwise_value_08006420(int base_address,unsigned_int bit_position,int new_value)\n\n{\n  *(unsigned_int *)(base_address + 0x20) = *(unsigned_int *)(base_address + 0x20) & ~(4 << (bit_position & 0xff));\n  *(unsigned_int *)(base_address + 0x20) = *(unsigned_int *)(base_address + 0x20) | new_value << (bit_position & 0xff);\n  return;\n}\n\n",
            "current_name": "update_bitwise_value_08006420",
            "entrypoint": "0x08006420",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006420": "update_bitwise_value_08006420",
                "param_1": "base_address",
                "param_2": "bit_position",
                "param_3": "new_value",
                "uint": "unsigned_int"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800643c": {
            "additional_data": {
                "0x1": {
                    "bit_mask": 1
                },
                "0x11": {
                    "channel_index": 1,
                    "desired_state": 1,
                    "index": 1,
                    "register_value": 1,
                    "timer_array_index": 1
                },
                "0x8000": {
                    "channel_mask": 1,
                    "flag_mask": 1,
                    "tim_c_cx_n_enable_mask": 1,
                    "timer_bit_mask": 1
                },
                "1": {
                    "enable_flag": 1,
                    "enable_mask": 1,
                    "tim_enable_bit": 1
                },
                "FUN_08006420": {
                    "configure_tim_c_cx_n_channel": 1,
                    "configure_timer": 4,
                    "configure_timer_c_cx_n_channel": 1,
                    "set_channel_value": 1,
                    "set_timer_channel": 2,
                    "set_timers": 1,
                    "setup_tim_c_cx_n_channel": 1
                },
                "FUN_0800643c": {
                    "configure_and_enable_tim_c_cx_n_channel": 1,
                    "configure_and_enable_timer": 1,
                    "configure_and_enable_timer_c_cx_n": 1,
                    "configure_tim_c_cx_n_channel": 2,
                    "configure_tim_channel": 2,
                    "configure_timer": 2,
                    "configure_timer_channel": 1,
                    "configure_timers": 4,
                    "enable_channel_and_set_flags": 1,
                    "initialize_device": 1,
                    "initialize_timer_channel": 1,
                    "initialize_timers": 2,
                    "initialize_timers_and_flags": 1,
                    "set_channel_and_flags": 1,
                    "set_channel_commands": 1,
                    "set_channel_configuration": 1,
                    "set_channel_configure": 1,
                    "set_channel_parameters": 1,
                    "set_tim_capture_mode": 1,
                    "set_tim_config": 1,
                    "set_timers": 1,
                    "set_timers_and_flags": 2
                },
                "TIM_CCxNChannelCmd": {
                    "configure_channel": 6,
                    "configure_tim_capture_channel": 1,
                    "configure_timer_channel_command": 1,
                    "set_channel_command": 2,
                    "set_timer_channel_command": 2
                },
                "param_1": {
                    "channel": 1,
                    "channel_array": 2,
                    "channel_pointer": 1,
                    "channel_ptr": 2,
                    "device": 1,
                    "input_data": 1,
                    "param_1": 1,
                    "tim_channel": 1,
                    "tim_channel_array": 1,
                    "tim_channel_ptr": 1,
                    "tim_handle": 1,
                    "timer": 3,
                    "timer_array": 3,
                    "timer_channel": 2,
                    "timer_config": 3,
                    "timer_handle": 1,
                    "timer_id": 1,
                    "timer_settings": 3,
                    "timers": 1,
                    "timers_ptr": 1
                },
                "param_2": {
                    "channel": 9,
                    "channel_cmd": 2,
                    "channel_command": 4,
                    "channel_config": 1,
                    "channel_data": 1,
                    "channel_index": 2,
                    "channel_num": 1,
                    "channel_number": 2,
                    "channel_value": 2,
                    "command_parameter": 1,
                    "param": 1,
                    "param_2": 1,
                    "timer_channel_value": 1,
                    "timer_value": 1,
                    "value": 2
                },
                "param_3": {
                    "channel_number": 1,
                    "command": 1,
                    "config_value": 1,
                    "configuration_value": 1,
                    "mode": 1,
                    "param3": 1,
                    "param_3": 3,
                    "param_count": 1,
                    "parameter": 1,
                    "timer_channel_cmd": 1,
                    "timer_mode": 1,
                    "unknown_param": 1,
                    "unused": 1,
                    "value": 3
                },
                "uint": {
                    "timer": 1
                }
            },
            "called": [
                "FUN_08006420"
            ],
            "calling": [
                "FUN_08007118"
            ],
            "code": "\nundefined4 configure_and_enable_tim_c_cx_n_channel_0800643c(timer **timer,undefined4 channel)\n\n{\n  configure_channel(*timer,channel,4);\n  (*timer)[0x11] = (*timer)[0x11] | 0x8000;\n  **timer = **timer | 1;\n  return 0;\n}\n\n",
            "current_name": "configure_and_enable_tim_c_cx_n_channel_0800643c",
            "entrypoint": "0x0800643c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800643c": "configure_and_enable_tim_c_cx_n_channel_0800643c",
                "TIM_CCxNChannelCmd": "configure_channel",
                "param_1": "timer",
                "param_2": "channel",
                "uint": "timer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006460": {
            "additional_data": {
                "0": {
                    "disable_channel": 1
                },
                "0x11": {
                    "register1": 1
                },
                "0x1111": {
                    "mask1": 1,
                    "status_mask1": 1
                },
                "0x444": {
                    "mask2": 1,
                    "status_mask2": 1
                },
                "0xffff7fff": {
                    "mask1_value": 1
                },
                "0xfffffffe": {
                    "mask2_value": 1
                },
                "8": {
                    "channel_status": 1
                },
                "FUN_08006420": {
                    "configure_tim": 1,
                    "configure_tim_c_cx_n_channel": 1,
                    "configure_tim_c_cx_n_channel_cmd": 1,
                    "modify_tim_c_cx_n_channel": 1,
                    "perform_comparison": 1,
                    "set_channel_cmd": 2,
                    "set_timer_c_cx_n_channel_cmd": 1
                },
                "FUN_08006460": {
                    "configure_and_disable_timer_channel": 1,
                    "configure_pwm_channel": 1,
                    "configure_tim_c_cx_n_channel": 11,
                    "configure_tim_channel": 1,
                    "disable_channel": 2,
                    "disable_channel_and_clear_flags": 1,
                    "disable_tim_c_cx_n_channel": 3,
                    "disable_tim_channel": 1,
                    "disable_timc_cx_n_channel": 1,
                    "disable_timer_channel": 1,
                    "handle_tim_c_cx_n_channel_cmd": 1,
                    "improve_tim_c_cx_n_channel_cmd": 2,
                    "initialize_timer": 1,
                    "reset_tim_channel": 1,
                    "reset_timer": 1,
                    "update_pwm_channel": 1,
                    "update_tim_c_cx_n_channel_cmd": 1
                },
                "TIM_CCxNChannelCmd": {
                    "configure_channel_command": 1,
                    "configure_tim_c_cx_n_channel_cmd": 2,
                    "set_channel_cmd": 1,
                    "set_pwm_channel_cmd": 1,
                    "set_tim_channel_cmd": 1
                },
                "param_1": {
                    "channel_params": 1,
                    "channel_ptr": 4,
                    "config": 3,
                    "config_ptr": 1,
                    "p_pwm": 1,
                    "p_pwm_channel": 1,
                    "param1": 3,
                    "param_1": 3,
                    "param_array": 1,
                    "parameter": 1,
                    "parameters": 1,
                    "pointer": 2,
                    "ptr_to_uint_ptr": 1,
                    "tim_channel": 3,
                    "tim_param": 1,
                    "timer": 2,
                    "timer_config": 1,
                    "timer_pointer": 1
                },
                "param_2": {
                    "channel": 5,
                    "channel_cmd": 2,
                    "channel_function": 1,
                    "channel_id": 2,
                    "channel_num": 2,
                    "channel_number": 1,
                    "channel_param": 1,
                    "command": 1,
                    "param": 1,
                    "param2": 3,
                    "param_2": 3,
                    "param_value": 4,
                    "parameter": 1,
                    "timer_setting": 1,
                    "value": 3
                },
                "param_3": {
                    "param3": 3,
                    "param_3": 3
                },
                "ptrToUint": {
                    "channel_data": 1
                },
                "ptrToUintPtr": {
                    "channel": 1
                },
                "puVar1": {
                    "channel_data": 3,
                    "channel_ptr": 2,
                    "channel_var1": 1,
                    "config": 1,
                    "config_data": 2,
                    "config_ptr": 2,
                    "current_channel": 1,
                    "current_config": 1,
                    "current_params": 1,
                    "p_channel": 1,
                    "param_ptr_value": 1,
                    "pointer": 2,
                    "pointer_to_parameter": 1,
                    "pointer_value": 1,
                    "ptr": 1,
                    "ptr_channel": 1,
                    "ptr_to_param_array": 1,
                    "ptr_to_uint": 1,
                    "tim_channel_ptr": 1,
                    "tim_pointer": 1,
                    "tim_registers": 1,
                    "timer": 1,
                    "timer_data": 1,
                    "timer_ptr": 2
                }
            },
            "called": [
                "FUN_08006420"
            ],
            "calling": [
                "FUN_080071e4"
            ],
            "code": "\nundefined4 configure_tim_c_cx_n_channel_08006460(uint **channel_ptr,undefined4 channel)\n\n{\n  uint *channel_data;\n  \n  configure_tim_c_cx_n_channel_08006460_cmd(*channel_ptr,channel,0);\n  channel_data = *channel_ptr;\n  if (((channel_data[8] & 0x1111) == 0) && ((channel_data[8] & 0x444) == 0)) {\n    channel_data[0x11] = channel_data[0x11] & 0xffff7fff;\n  }\n  channel_data = *channel_ptr;\n  if (((channel_data[8] & 0x1111) == 0) && ((channel_data[8] & 0x444) == 0)) {\n    *channel_data = *channel_data & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "current_name": "configure_tim_c_cx_n_channel_08006460",
            "entrypoint": "0x08006460",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006460": "configure_tim_c_cx_n_channel_08006460",
                "TIM_CCxNChannelCmd": "configure_tim_c_cx_n_channel_cmd",
                "param_1": "channel_ptr",
                "param_2": "channel",
                "puVar1": "channel_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080064ac": {
            "called": [],
            "calling": [
                "FUN_08005e6e"
            ],
            "code": "\nvoid FUNC_080064ac(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080064ac",
            "entrypoint": "0x080064ac",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080064ac": "FUNC_080064ac"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080064ae": {
            "called": [],
            "calling": [
                "FUN_08005e6e"
            ],
            "code": "\nvoid FUNC_080064ae(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080064ae",
            "entrypoint": "0x080064ae",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080064ae": "FUNC_080064ae"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080064b0": {
            "additional_data": {
                "0x14": {
                    "constant2": 1,
                    "flag2_offset": 1,
                    "mask_2": 1,
                    "offset2": 2,
                    "offset_b": 1,
                    "value2": 1,
                    "value2_offset": 1
                },
                "0x20": {
                    "new_flag_value": 1,
                    "value": 2
                },
                "0x3a": {
                    "flag_offset": 1,
                    "offset": 1,
                    "offset2": 1,
                    "offset3": 1
                },
                "0xc": {
                    "constant1": 1,
                    "flag1_offset": 1,
                    "mask_1": 1,
                    "offset1": 2,
                    "offset_a": 1,
                    "value1": 1,
                    "value1_offset": 1
                },
                "0xfffffedf": {
                    "mask1": 4,
                    "mask_value_1": 1
                },
                "0xfffffffe": {
                    "mask2": 4,
                    "mask_value_2": 1
                },
                "14": {
                    "mask2": 1,
                    "offset1": 1
                },
                "20": {
                    "new_value": 1
                },
                "3a": {
                    "character": 1
                },
                "DAT_080064cc": {
                    "value1_offset": 1
                },
                "DAT_080064d4": {
                    "value2_offset": 1
                },
                "DAT_080064e9": {
                    "constant_value": 1
                },
                "FUN_080064b0": {
                    "clear_bit_fields": 1,
                    "clear_bits": 3,
                    "clear_bits_and_set_flag": 2,
                    "clear_flags": 8,
                    "clear_flags_and_set_space_char": 1,
                    "clear_flags_and_set_space_character": 1,
                    "initialize_data": 1,
                    "set_bit_values": 1,
                    "set_bits_and_value": 1,
                    "set_flags_and_value": 3,
                    "set_flags_and_values": 2,
                    "update_flags_and_value": 3,
                    "update_flags_and_values": 2,
                    "update_memory": 1,
                    "update_memory_values": 1
                },
                "PTR_16": {
                    "p_flag": 1
                },
                "PTR_1c": {
                    "p_value": 1
                },
                "PTR_3a": {
                    "p_mask": 1
                },
                "c": {
                    "mask1": 1,
                    "mask_value": 1
                },
                "fffffffe": {
                    "mask1": 1
                },
                "int": {
                    "integer": 1
                },
                "local_var_1": {
                    "temp": 1
                },
                "local_var_2": {
                    "flag_offset": 1
                },
                "param_1": {
                    "array": 5,
                    "array_pointer": 1,
                    "bits": 1,
                    "data": 3,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "flag_pointer": 2,
                    "flags": 6,
                    "flags_pointer": 1,
                    "input_params": 1,
                    "input_ptr": 3,
                    "memory_address": 2,
                    "memory_pointer": 1,
                    "p_param": 1,
                    "pointer": 1
                },
                "uint": {
                    "unsigned_int": 4
                },
                "undefined": {
                    "dummy": 1,
                    "space_char": 1,
                    "unknown": 1,
                    "unspecified": 1
                },
                "var_1": {
                    "flag_value1": 1
                },
                "var_2": {
                    "flag_value2": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080069ec"
            ],
            "code": "\nvoid clear_flags_and_set_space_character_080064b0(integer *flags)\n\n{\n  *(unsigned_int *)(*flags + 0xc) = *(unsigned_int *)(*flags + 0xc) & 0xfffffedf;\n  *(unsigned_int *)(*flags + 0x14) = *(unsigned_int *)(*flags + 0x14) & 0xfffffffe;\n  *(unknown *)((integer)flags + 0x3a) = 0x20;\n  return;\n}\n\n",
            "current_name": "clear_flags_and_set_space_character_080064b0",
            "entrypoint": "0x080064b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080064b0": "clear_flags_and_set_space_character_080064b0",
                "int": "integer",
                "param_1": "flags",
                "uint": "unsigned_int",
                "undefined": "unknown"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080064cc": {
            "additional_data": {
                "0x1000": {
                    "constant_value": 1
                },
                "0x1ff": {
                    "mask_value": 1
                },
                "0x26": {
                    "counter_value": 1
                },
                "0x39": {
                    "char_value": 1
                },
                "FUN_080064cc": {
                    "decode_and_update": 1,
                    "decode_and_update_value": 1,
                    "decode_data": 2,
                    "extract_data": 1,
                    "parse_data": 6,
                    "parse_input": 1,
                    "process_binary_data": 2,
                    "process_data": 12,
                    "process_function": 1,
                    "process_input": 2,
                    "process_parameter": 1,
                    "reverse_and_update_value": 1
                },
                "PTR_082fd740": {
                    "constant_ptr": 1
                },
                "param_1": {
                    "data": 16,
                    "data_array": 3,
                    "input": 1,
                    "input_array": 2,
                    "input_buffer": 1,
                    "input_data": 6,
                    "parameter_array": 1
                },
                "pbVar2": {
                    "byte_pointer": 10,
                    "byte_ptr": 16,
                    "current_byte": 2,
                    "pointer": 1
                },
                "sVar1": {
                    "count": 8,
                    "counter": 8,
                    "decremented_value": 2,
                    "remaining": 1,
                    "remaining_attempts": 1,
                    "remaining_count": 2,
                    "remaining_data_count": 1,
                    "remaining_iterations": 4,
                    "remaining_value": 1,
                    "temp_var": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080069ec"
            ],
            "code": "\nundefined4 process_binary_data_080064cc(int *data)\n\n{\n  short count;\n  byte *byte_ptr;\n  \n  if (*(char *)((int)data + 0x39) != '!') {\n    return 2;\n  }\n  if (data[2] == 0x1000) {\n    *(uint *)(*data + 4) = *(ushort *)data[8] & 0x1ff;\n    if (data[4] == 0) {\n      data[8] = data[8] + 2;\n    }\n    else {\n      data[8] = data[8] + 1;\n    }\n  }\n  else {\n    byte_ptr = (byte *)data[8];\n    data[8] = (int)(byte_ptr + 1);\n    *(uint *)(*data + 4) = (uint)*byte_ptr;\n  }\n  count = *(short *)((int)data + 0x26) + -1;\n  *(short *)((int)data + 0x26) = count;\n  if (count == 0) {\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xffffff7f;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x40;\n    return 0;\n  }\n  return 0;\n}\n\n",
            "current_name": "process_binary_data_080064cc",
            "entrypoint": "0x080064cc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080064cc": "process_binary_data_080064cc",
                "param_1": "data",
                "pbVar2": "byte_ptr",
                "sVar1": "count"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006538": {
            "additional_data": {
                "FUN_08005a28": {
                    "get_pclk1_freq": 1,
                    "get_pclk2_freq": 1
                },
                "FUN_08005a48": {
                    "get_pclk1_freq": 1,
                    "get_pclk2_freq": 1
                },
                "FUN_08006538": {
                    "calculate_and_set_clock_frequency": 1,
                    "calculate_and_set_frequency": 1,
                    "calculate_clock_config": 2,
                    "calculate_clock_configuration": 1,
                    "calculate_clock_frequency": 5,
                    "calculate_clock_rate": 1,
                    "calculate_clock_speed": 1,
                    "calculate_clock_value": 2,
                    "calculate_new_clock_frequency": 1,
                    "calculate_pclk": 3,
                    "configure_peripheral": 1,
                    "initialize_clock_configuration": 2,
                    "set_clock_frequency": 1,
                    "update_clock_configuration": 5,
                    "update_clock_frequencies": 1,
                    "update_clock_frequency": 1,
                    "update_clock_settings": 1
                },
                "HAL_RCC_GetPCLK1Freq": {
                    "get_pclk1_freq": 1,
                    "get_pclk1_frequency": 10
                },
                "HAL_RCC_GetPCLK2Freq": {
                    "get_pclk2_freq": 1,
                    "get_pclk2_frequency": 10
                },
                "iRam40013808": {
                    "clock_config": 1,
                    "clock_config_var2": 1,
                    "clock_freq": 1,
                    "clock_frequency": 1,
                    "clock_value2": 1,
                    "final_clock": 1,
                    "pclk2_freq": 1,
                    "pclk2_offset": 1,
                    "pclk2_ram": 1,
                    "pclk2_value": 1,
                    "ram40013808": 1,
                    "result_frequency": 1
                },
                "iVar1": {
                    "pclk1": 2,
                    "pclk1_1": 1,
                    "pclk1_freq": 16,
                    "pclk1_freq1": 9,
                    "pclk1_freq_1": 1,
                    "pclk1_frequency": 1
                },
                "iVar10": {
                    "base_addr": 1,
                    "base_address": 5,
                    "clock_address": 1,
                    "clock_base": 1,
                    "clock_config_base_address": 1,
                    "clock_config_var": 1,
                    "clock_params": 1,
                    "clock_ptr": 2,
                    "clock_value": 1,
                    "current_clock": 2,
                    "input_param": 1,
                    "param1": 1,
                    "param1_value": 1,
                    "pclk1_freq": 1,
                    "pclk2_freq": 1,
                    "pclk2_freq4": 1,
                    "pclk2_freq5": 2,
                    "peripheral_addr": 1,
                    "sysclk": 1
                },
                "iVar2": {
                    "pclk": 1,
                    "pclk1": 1,
                    "pclk1_2": 1,
                    "pclk1_freq": 12,
                    "pclk1_freq2": 13,
                    "pclk1_freq_2": 1,
                    "pclk1_frequency": 1
                },
                "iVar3": {
                    "pclk": 1,
                    "pclk1": 2,
                    "pclk1_3": 1,
                    "pclk1_freq": 11,
                    "pclk1_freq3": 13,
                    "pclk1_freq_3": 1,
                    "pclk1_frequency": 1
                },
                "iVar4": {
                    "pclk": 1,
                    "pclk1": 1,
                    "pclk1_4": 1,
                    "pclk1_freq": 12,
                    "pclk1_freq4": 13,
                    "pclk1_freq_4": 1,
                    "pclk1_frequency": 1
                },
                "iVar5": {
                    "pclk": 1,
                    "pclk1": 2,
                    "pclk1_5": 1,
                    "pclk1_freq": 11,
                    "pclk1_freq5": 13,
                    "pclk1_freq_5": 1,
                    "pclk1_frequency": 1
                },
                "iVar6": {
                    "clock_multiplier": 1,
                    "clock_params": 1,
                    "param1": 1,
                    "param1_1": 2,
                    "param1_val1": 1,
                    "pclk": 1,
                    "pclk1": 1,
                    "pclk1_freq": 1,
                    "pclk1_freq6": 2,
                    "pclk1_freq_6": 1,
                    "pclk2_1": 1,
                    "pclk2_freq": 3,
                    "pclk2_freq1": 8,
                    "peripheral_config_value": 1
                },
                "iVar7": {
                    "clock_multiplier": 1,
                    "clock_params": 1,
                    "param1": 1,
                    "param1_1": 1,
                    "param1_1_2": 1,
                    "param1_val1": 1,
                    "pclk": 1,
                    "pclk1": 2,
                    "pclk1_freq7": 1,
                    "pclk1_freq_7": 1,
                    "pclk2_2": 1,
                    "pclk2_freq": 2,
                    "pclk2_freq2": 10,
                    "peripheral_config_value": 1
                },
                "iVar8": {
                    "clock_multiplier": 1,
                    "clock_params": 1,
                    "param1": 1,
                    "param1_1": 1,
                    "param1_1_3": 1,
                    "param1_val1": 1,
                    "pclk": 1,
                    "pclk1": 1,
                    "pclk1_freq": 1,
                    "pclk1_freq8": 1,
                    "pclk1_freq_8": 1,
                    "pclk2_3": 1,
                    "pclk2_freq": 1,
                    "pclk2_freq2": 1,
                    "pclk2_freq3": 10,
                    "peripheral_config_value": 1
                },
                "iVar9": {
                    "clock_multiplier": 1,
                    "clock_params": 1,
                    "param1": 1,
                    "param1_1": 1,
                    "param1_1_4": 1,
                    "param1_val1": 1,
                    "pclk": 1,
                    "pclk1": 2,
                    "pclk1_freq9": 1,
                    "pclk1_freq_9": 1,
                    "pclk2_4": 1,
                    "pclk2_freq": 1,
                    "pclk2_freq3": 1,
                    "pclk2_freq4": 10,
                    "peripheral_config_value": 1
                },
                "param_1": {
                    "clock_config": 3,
                    "clock_config_data": 1,
                    "clock_config_params": 3,
                    "clock_info": 1,
                    "clock_params": 7,
                    "config": 1,
                    "config_params": 5,
                    "configuration": 1,
                    "input_params": 2,
                    "parameters": 3,
                    "params": 1,
                    "peripheral_config": 1
                }
            },
            "called": [
                "FUN_08005a48",
                "FUN_08005a28"
            ],
            "calling": [
                "FUN_0800674e"
            ],
            "code": "\nvoid calculate_and_set_clock_frequency_08006538(int *clock_params)\n\n{\n  int pclk1_freq;\n  int pclk1_freq2;\n  int pclk1_freq3;\n  int pclk1_freq4;\n  int pclk1_freq5;\n  int pclk2_freq1;\n  int pclk2_freq2;\n  int pclk2_freq3;\n  int pclk2_freq4;\n  int base_address;\n  \n  *(uint *)(*clock_params + 0x10) = *(uint *)(*clock_params + 0x10) & 0xffffcfff | clock_params[3];\n  *(uint *)(*clock_params + 0xc) =\n       clock_params[2] | clock_params[4] | clock_params[5] | *(uint *)(*clock_params + 0xc) & 0xffffe9f3;\n  *(uint *)(*clock_params + 0x14) = *(uint *)(*clock_params + 0x14) & 0xfffffcff | clock_params[6];\n  base_address = *clock_params;\n  if (base_address != 0x40013800) {\n    pclk1_freq = get_pclk1_frequency();\n    pclk2_freq1 = clock_params[1];\n    pclk1_freq2 = get_pclk1_frequency();\n    pclk2_freq2 = clock_params[1];\n    pclk1_freq3 = get_pclk1_frequency();\n    pclk2_freq3 = clock_params[1];\n    pclk1_freq4 = get_pclk1_frequency();\n    pclk2_freq4 = clock_params[1];\n    pclk1_freq5 = get_pclk1_frequency();\n    *(uint *)(base_address + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(pclk1_freq4 * 0x19) / (uint)(pclk2_freq4 << 2) +\n                        (int)(((ulonglong)(uint)(pclk1_freq5 * 0x19) / (ulonglong)(uint)(clock_params[1] << 2))\n                             / 100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n         ((((uint)(pclk1_freq2 * 0x19) / (uint)(pclk2_freq2 << 2) +\n           (int)(((ulonglong)(uint)(pclk1_freq3 * 0x19) / (ulonglong)(uint)(pclk2_freq3 << 2)) / 100) * -100) *\n           0x10 + 0x32) / 100 & 0xf0) +\n         (int)(((ulonglong)(uint)(pclk1_freq * 0x19) / (ulonglong)(uint)(pclk2_freq1 << 2)) / 100) * 0x10;\n    return;\n  }\n  base_address = get_pclk2_frequency();\n  pclk1_freq5 = clock_params[1];\n  pclk1_freq = get_pclk2_frequency();\n  pclk2_freq1 = clock_params[1];\n  pclk1_freq2 = get_pclk2_frequency();\n  pclk2_freq2 = clock_params[1];\n  pclk1_freq3 = get_pclk2_frequency();\n  pclk2_freq3 = clock_params[1];\n  pclk1_freq4 = get_pclk2_frequency();\n  clock_config_var2 = ((uint)((int)((ulonglong)\n                               (((uint)(pclk1_freq3 * 0x19) / (uint)(pclk2_freq3 << 2) +\n                                (int)(((ulonglong)(uint)(pclk1_freq4 * 0x19) /\n                                      (ulonglong)(uint)(clock_params[1] << 2)) / 100) * -100) * 0x10 +\n                               0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n                 ((((uint)(pclk1_freq * 0x19) / (uint)(pclk2_freq1 << 2) +\n                   (int)(((ulonglong)(uint)(pclk1_freq2 * 0x19) / (ulonglong)(uint)(pclk2_freq2 << 2)) / 100) *\n                   -100) * 0x10 + 0x32) / 100 & 0xf0) +\n                 (int)(((ulonglong)(uint)(base_address * 0x19) / (ulonglong)(uint)(pclk1_freq5 << 2)) / 100) *\n                 0x10;\n  return;\n}\n\n",
            "current_name": "calculate_and_set_clock_frequency_08006538",
            "entrypoint": "0x08006538",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006538": "calculate_and_set_clock_frequency_08006538",
                "HAL_RCC_GetPCLK1Freq": "get_pclk1_frequency",
                "HAL_RCC_GetPCLK2Freq": "get_pclk2_frequency",
                "iRam40013808": "clock_config_var2",
                "iVar1": "pclk1_freq",
                "iVar10": "base_address",
                "iVar2": "pclk1_freq2",
                "iVar3": "pclk1_freq3",
                "iVar4": "pclk1_freq4",
                "iVar5": "pclk1_freq5",
                "iVar6": "pclk2_freq1",
                "iVar7": "pclk2_freq2",
                "iVar8": "pclk2_freq3",
                "iVar9": "pclk2_freq4",
                "param_1": "clock_params"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080066e8": {
            "additional_data": {
                "FUN_080066e8": {
                    "check_and_modify": 1,
                    "check_and_modify_data": 1,
                    "check_and_modify_params": 1,
                    "check_and_modify_values": 2,
                    "check_and_update_flags": 1,
                    "check_condition": 2,
                    "check_condition_and_modify_param": 1,
                    "check_condition_and_update": 1,
                    "check_condition_and_update_data": 1,
                    "check_conditions": 3,
                    "check_conditions_and_modify": 1,
                    "check_conditions_and_modify_data": 1,
                    "check_conditions_and_update": 1,
                    "check_flag_validity": 1,
                    "check_parameter_validity": 1,
                    "check_parameters_validity": 1,
                    "check_params": 1,
                    "check_params_and_update": 1,
                    "check_params_validity": 1,
                    "check_permission": 1,
                    "check_status": 1,
                    "check_validity": 1,
                    "process_function": 1,
                    "validate_flags": 1,
                    "verify_condition_and_set_values": 1
                },
                "HAL_GetTick": {
                    "get_current_time": 2,
                    "get_tick": 1
                },
                "iVar1": {
                    "current_tick": 8,
                    "current_ticks": 2,
                    "current_time": 19,
                    "tick_difference": 1
                },
                "param_1": {
                    "data_array": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "flag": 1,
                    "flag_array": 1,
                    "input_array": 3,
                    "input_array_ptr": 1,
                    "input_data": 1,
                    "param_array": 7,
                    "parameter_array": 2,
                    "params": 1,
                    "permissions": 1,
                    "pointer_array": 5,
                    "pointer_to_array": 2,
                    "pointer_to_values": 1,
                    "ptr_to_uint_ptr": 1,
                    "table_ptr": 1
                },
                "param_2": {
                    "bit_mask": 1,
                    "bitmask": 1,
                    "condition": 1,
                    "condition1": 1,
                    "condition_flag": 2,
                    "desired_value": 1,
                    "flag": 4,
                    "flag_value": 1,
                    "input_flag": 1,
                    "input_flags": 1,
                    "input_value1": 1,
                    "input_value_1": 1,
                    "mask": 5,
                    "mask_value": 4,
                    "required_flags": 1,
                    "required_permission": 1,
                    "target_value": 1,
                    "value": 1,
                    "value1": 1,
                    "value_2": 1
                },
                "param_3": {
                    "check_exact": 1,
                    "check_result": 1,
                    "compare_result": 1,
                    "condition": 9,
                    "condition2": 1,
                    "condition_flag": 1,
                    "desired_result": 1,
                    "expected": 1,
                    "expected_condition": 2,
                    "expected_result": 6,
                    "expected_validity": 1,
                    "flag_comparison": 1,
                    "input_value2": 1,
                    "input_value_2": 1,
                    "is_flag_set": 1,
                    "is_true": 1,
                    "is_valid": 1
                },
                "param_4": {
                    "base_time": 1,
                    "initial_tick": 1,
                    "input_value_3": 1,
                    "previous_tick": 1,
                    "reference_tick": 1,
                    "reference_time": 2,
                    "start_tick": 4,
                    "start_ticks": 2,
                    "start_time": 17,
                    "tick_value": 1
                },
                "param_5": {
                    "input_value_4": 1,
                    "max_delay": 1,
                    "max_duration": 2,
                    "max_ticks": 1,
                    "max_wait_time": 1,
                    "tick_limit": 1,
                    "time_limit": 2,
                    "timeout": 21,
                    "timeout_duration": 1
                }
            },
            "called": [
                "FUN_08003760"
            ],
            "calling": [
                "FUN_080067ac"
            ],
            "code": "\nundefined4 check_conditions_and_modify_data_080066e8(uint **param_array,uint mask,uint condition,int start_time,uint timeout)\n\n{\n  int current_time;\n  \n  do {\n    if (((mask & ~**param_array) == 0) != condition) {\n      return 0;\n    }\n  } while ((timeout == 0xffffffff) ||\n          ((timeout != 0 && (current_time = get_current_time(), (uint)(current_time - start_time) <= timeout))));\n  (*param_array)[3] = (*param_array)[3] & 0xfffffe5f;\n  (*param_array)[5] = (*param_array)[5] & 0xfffffffe;\n  *(undefined *)((int)param_array + 0x39) = 0x20;\n  *(undefined *)((int)param_array + 0x3a) = 0x20;\n  *(undefined *)(param_array + 0xe) = 0;\n  return 3;\n}\n\n",
            "current_name": "check_conditions_and_modify_data_080066e8",
            "entrypoint": "0x080066e8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080066e8": "check_conditions_and_modify_data_080066e8",
                "HAL_GetTick": "get_current_time",
                "iVar1": "current_time",
                "param_1": "param_array",
                "param_2": "mask",
                "param_3": "condition",
                "param_4": "start_time",
                "param_5": "timeout"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800674c": {
            "called": [],
            "calling": [
                "FUN_0800674e"
            ],
            "code": "\nvoid FUNC_0800674c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800674c",
            "entrypoint": "0x0800674c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800674c": "FUNC_0800674c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800674e": {
            "additional_data": {
                "FUNC_0800674c": {
                    "check_peripheral_status": 1,
                    "hal_uart_msp_init": 1,
                    "initialize_default_values": 1,
                    "initialize_uart": 1,
                    "initialize_uart_globals": 1,
                    "initialize_uart_internal": 1,
                    "initialize_uart_peripheral": 1,
                    "initialize_uart_peripherals": 1,
                    "reverse_something": 1,
                    "set_uart_config": 1,
                    "set_uart_configuration": 1,
                    "uart_set_config": 3,
                    "undefined_behavior_handler": 1,
                    "unknown_function": 2,
                    "unused": 1,
                    "unused_func": 1,
                    "unused_function": 4
                },
                "FUN_08006538": {
                    "check_uart_configuration": 1,
                    "check_uart_initialized": 2,
                    "configure_uart": 2,
                    "configure_uart_peripherals": 1,
                    "hal_uart_msp_init": 2,
                    "initialize_hal_uart": 1,
                    "initialize_peripherals": 1,
                    "initialize_uart": 3,
                    "initialize_uart_config": 1,
                    "initialize_uart_device": 1,
                    "initialize_uart_handle": 1,
                    "initialize_uart_peripheral": 1,
                    "initialize_uart_peripherals": 4,
                    "initialize_uart_peripherals_helper": 1,
                    "set_uart_configuration": 1,
                    "uart_gpio_init": 1
                },
                "FUN_0800674e": {
                    "configure_uart": 2,
                    "init_uart": 1,
                    "initialize_uart": 25,
                    "initialize_uart_configuration": 2,
                    "initialize_uart_device": 1
                },
                "HAL_UART_MspInit": {
                    "configure_uart_pins": 1,
                    "initialize_uart": 1,
                    "initialize_uart_hardware": 1,
                    "initialize_uart_peripheral": 3,
                    "initialize_uart_peripherals": 18,
                    "uart_gpio_init": 1
                },
                "PTR_08006538": {
                    "check_uart_status": 1
                },
                "PTR_uart_handle_c": {
                    "uart_handle_c": 1
                },
                "UART_SetConfig": {
                    "configure_uart": 7,
                    "set_uart_config": 4,
                    "set_uart_configuration": 9
                },
                "initialize_uart": {
                    "initialize_uart": 2
                },
                "initialize_uart_peripherals": {
                    "initialize_uart_peripherals": 1
                },
                "param_1": {
                    "config": 1,
                    "config_ptr": 1,
                    "device_ptr": 1,
                    "uart_config": 10,
                    "uart_device": 2,
                    "uart_handle": 8,
                    "uart_instance": 5,
                    "uart_param": 1,
                    "uart_params": 2
                },
                "set_uart_configuration": {
                    "set_uart_configuration": 1
                },
                "uart_config": {
                    "uart_config": 1
                }
            },
            "called": [
                "FUN_08006538",
                "FUN_0800674c"
            ],
            "calling": [
                "FUN_08008078"
            ],
            "code": "\nundefined4 initialize_uart_configuration_0800674e(int *uart_config)\n\n{\n  if (uart_config != (int *)0x0) {\n    if (*(char *)((int)uart_config + 0x39) == '\\0') {\n      *(undefined *)(uart_config + 0xe) = 0;\n      initialize_uart_peripherals();\n    }\n    *(undefined *)((int)uart_config + 0x39) = 0x24;\n    *(uint *)(*uart_config + 0xc) = *(uint *)(*uart_config + 0xc) & 0xffffdfff;\n    set_uart_configuration(uart_config);\n    *(uint *)(*uart_config + 0x10) = *(uint *)(*uart_config + 0x10) & 0xffffb7ff;\n    *(uint *)(*uart_config + 0x14) = *(uint *)(*uart_config + 0x14) & 0xffffffd5;\n    *(uint *)(*uart_config + 0xc) = *(uint *)(*uart_config + 0xc) | 0x2000;\n    uart_config[0xf] = 0;\n    *(undefined *)((int)uart_config + 0x39) = 0x20;\n    *(undefined *)((int)uart_config + 0x3a) = 0x20;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "initialize_uart_configuration_0800674e",
            "entrypoint": "0x0800674e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800674e": "initialize_uart_configuration_0800674e",
                "HAL_UART_MspInit": "initialize_uart_peripherals",
                "UART_SetConfig": "set_uart_configuration",
                "param_1": "uart_config"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080067ac": {
            "additional_data": {
                "FUN_08003760": {
                    "initialize_uart": 1
                },
                "FUN_080066e8": {
                    "read_uart": 1
                },
                "FUN_080067ac": {
                    "check_and_transmit_data": 1,
                    "parse_input": 1,
                    "process_data": 29
                },
                "HAL_GetTick": {
                    "get_current_tick": 2,
                    "get_current_time": 1
                },
                "Hal_GetTick": {
                    "get_current_tick": 1
                },
                "UART_WaitOnFlagUntilTimeout": {
                    "wait_for_flag_until_timeout": 2,
                    "wait_for_flag_with_timeout": 1,
                    "wait_on_flag_until_timeout": 1
                },
                "iVar1": {
                    "error_code": 1,
                    "flag_status": 3,
                    "result": 17,
                    "return_value": 2,
                    "status": 6,
                    "uart_result": 1,
                    "wait_result": 1
                },
                "param_1": {
                    "buffer": 2,
                    "data": 5,
                    "data_buffer": 14,
                    "data_holder": 1,
                    "data_ptr": 1,
                    "input_array": 3,
                    "input_buffer": 2,
                    "input_data": 1,
                    "input_params": 1,
                    "uart_pointer": 1
                },
                "param_2": {
                    "buffer": 6,
                    "byte_array": 1,
                    "byte_buffer": 1,
                    "command_buffer": 1,
                    "data": 8,
                    "data_buffer": 2,
                    "flag": 1,
                    "input_buffer": 3,
                    "input_data": 8
                },
                "param_3": {
                    "buffer_length": 2,
                    "buffer_size": 9,
                    "command_length": 1,
                    "data_length": 9,
                    "data_size": 2,
                    "input_length": 4,
                    "length": 1,
                    "size": 2,
                    "value": 1
                },
                "param_4": {
                    "param_value": 1,
                    "tick": 1,
                    "tick_timeout": 1,
                    "tick_value": 2,
                    "timeout": 25,
                    "uart_data": 1
                },
                "param_5": {
                    "param": 1
                },
                "uVar2": {
                    "result": 10,
                    "result_code": 1,
                    "return_val": 1,
                    "return_value": 9,
                    "status": 9,
                    "status_code": 1
                }
            },
            "called": [
                "FUN_080066e8",
                "FUN_08003760"
            ],
            "calling": [
                "FUN_08008500"
            ],
            "code": "\nundefined4 process_data_080067ac(int *data_buffer,ushort *input_data,int buffer_size,undefined4 timeout)\n\n{\n  int result;\n  undefined4 result;\n  \n  if (*(char *)((int)data_buffer + 0x39) == ' ') {\n    if (input_data == (ushort *)0x0) {\n      result = 1;\n    }\n    else if (buffer_size == 0) {\n      result = 1;\n    }\n    else if (*(char *)(data_buffer + 0xe) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(data_buffer + 0xe) = 1;\n      data_buffer[0xf] = 0;\n      *(undefined *)((int)data_buffer + 0x39) = 0x21;\n      result = get_current_tick();\n      *(short *)(data_buffer + 9) = (short)buffer_size;\n      *(short *)((int)data_buffer + 0x26) = (short)buffer_size;\n      while (*(short *)((int)data_buffer + 0x26) != 0) {\n        *(short *)((int)data_buffer + 0x26) = *(short *)((int)data_buffer + 0x26) + -1;\n        if (data_buffer[2] == 0x1000) {\n          result = wait_for_flag_until_timeout(data_buffer,0x80,0,result,timeout);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*data_buffer + 4) = *input_data & 0x1ff;\n          if (data_buffer[4] == 0) {\n            input_data = input_data + 1;\n          }\n          else {\n            input_data = (ushort *)((int)input_data + 1);\n          }\n        }\n        else {\n          result = wait_for_flag_until_timeout(data_buffer,0x80,0,result,timeout);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*data_buffer + 4) = (uint)*(byte *)input_data;\n          input_data = (ushort *)((int)input_data + 1);\n        }\n      }\n      result = wait_for_flag_until_timeout(data_buffer,0x40,0,result,timeout);\n      if (result == 0) {\n        *(undefined *)((int)data_buffer + 0x39) = 0x20;\n        *(undefined *)(data_buffer + 0xe) = 0;\n        result = 0;\n      }\n      else {\n        result = 3;\n      }\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "current_name": "process_data_080067ac",
            "entrypoint": "0x080067ac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080067ac": "process_data_080067ac",
                "HAL_GetTick": "get_current_tick",
                "UART_WaitOnFlagUntilTimeout": "wait_for_flag_until_timeout",
                "iVar1": "result",
                "param_1": "data_buffer",
                "param_2": "input_data",
                "param_3": "buffer_size",
                "param_4": "timeout",
                "uVar2": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800688e": {
            "additional_data": {
                "0x21": {
                    "new_char_value": 1
                },
                "0x26": {
                    "short_value": 1
                },
                "0x39": {
                    "char_value": 1,
                    "flag": 1
                },
                "0xc": {
                    "flag_value": 1
                },
                "0xe": {
                    "flag": 1
                },
                "0xf": {
                    "param_6": 1
                },
                "8": {
                    "param_4": 1
                },
                "9": {
                    "param_5": 1
                },
                "FUN_0800688e": {
                    "initialize_data": 5,
                    "initialize_parameters": 2,
                    "initialize_values": 1,
                    "process_data": 1,
                    "process_parameters": 1,
                    "set_param_values": 1,
                    "update_data": 7,
                    "update_params": 1,
                    "validate_and_assign_values": 1,
                    "validate_and_set_params": 1,
                    "validate_input": 8,
                    "validate_parameters": 1,
                    "validate_params": 1
                },
                "int": {
                    "integer": 1
                },
                "param_1": {
                    "array": 3,
                    "data": 13,
                    "data_pointer": 2,
                    "input": 2,
                    "input_array": 6,
                    "parameter_array": 1,
                    "parameters": 3,
                    "params": 1
                },
                "param_2": {
                    "length": 2,
                    "size": 2,
                    "value1": 23,
                    "value_1": 4
                },
                "param_3": {
                    "size": 1,
                    "value": 3,
                    "value2": 23,
                    "value_2": 4
                },
                "short": {
                    "ushort": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08008730",
                "FUN_08008694"
            ],
            "code": "\nundefined4 validate_input_0800688e(integer *data,integer value1,integer value2)\n\n{\n  if (*(char *)((integer)data + 0x39) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(char *)(data + 0xe) != '\\x01') {\n    data[8] = value1;\n    *(ushort *)(data + 9) = (ushort)value2;\n    *(ushort *)((integer)data + 0x26) = (ushort)value2;\n    data[0xf] = 0;\n    *(undefined *)((integer)data + 0x39) = 0x21;\n    *(undefined *)(data + 0xe) = 0;\n    *(uinteger *)(*data + 0xc) = *(uinteger *)(*data + 0xc) | 0x80;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "current_name": "validate_input_0800688e",
            "entrypoint": "0x0800688e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800688e": "validate_input_0800688e",
                "int": "integer",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2",
                "short": "ushort"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080068d6": {
            "additional_data": {
                "0x14": {
                    "uint_d": 1
                },
                "0x20": {
                    "uint_e": 1
                },
                "0x22": {
                    "char_d": 1,
                    "space_character": 1
                },
                "0x2e": {
                    "array_entry_14": 1,
                    "short_c": 1
                },
                "0x3a": {
                    "char_a": 1,
                    "flag": 1
                },
                "0xb": {
                    "array_entry_11": 1,
                    "short_b": 1
                },
                "0xc": {
                    "uint_c": 1
                },
                "0xe": {
                    "short_a": 1,
                    "status": 1
                },
                "0xf": {
                    "array_entry_15": 1,
                    "param15": 1
                },
                "10": {
                    "array_entry_10": 1,
                    "param10": 1
                },
                "FUN_080068d6": {
                    "check_and_set_values": 1,
                    "initialize_data": 2,
                    "process_data": 3,
                    "process_input": 1,
                    "process_params": 1,
                    "update_params": 1,
                    "validate_and_set_values": 1,
                    "validate_and_update_data": 1,
                    "validate_and_update_params": 1,
                    "validate_input": 13,
                    "validate_param": 1,
                    "validate_parameters": 3,
                    "validate_params": 2
                },
                "char_1": {
                    "char_1": 1
                },
                "char_2": {
                    "char_2": 1
                },
                "char_value_1": {
                    "first_char": 1
                },
                "char_value_2": {
                    "second_char": 1
                },
                "data_array": {
                    "data": 1
                },
                "inputArray": {
                    "param_array": 1
                },
                "input_array": {
                    "array": 1,
                    "input": 1
                },
                "input_value_1": {
                    "value_1": 1
                },
                "input_value_2": {
                    "value_2": 1
                },
                "length_param": {
                    "length": 1
                },
                "param_1": {
                    "arr": 1,
                    "array": 3,
                    "array_ptr": 1,
                    "buffer": 1,
                    "data": 3,
                    "data_array": 3,
                    "input": 1,
                    "input_arr": 1,
                    "input_array": 11,
                    "input_data": 3,
                    "parameters": 1,
                    "params": 1,
                    "params_array": 1
                },
                "param_2": {
                    "array_length": 1,
                    "input_value_1": 1,
                    "length": 4,
                    "length_param": 1,
                    "param2_length": 1,
                    "size": 2,
                    "size_param": 1,
                    "value1": 12,
                    "value_1": 8
                },
                "param_3": {
                    "count_param": 1,
                    "input_value_2": 1,
                    "param3_value": 1,
                    "value": 7,
                    "value2": 12,
                    "value_2": 8,
                    "value_param": 1
                },
                "uint_ptr_1": {
                    "ptr_value_1": 1
                },
                "uint_ptr_2": {
                    "ptr_value_2": 1
                },
                "ushort_value_1": {
                    "ushort_1": 1
                },
                "ushort_value_2": {
                    "ushort_2": 1
                },
                "value1": {
                    "length": 1
                },
                "value2": {
                    "max_length": 1
                },
                "value_1": {
                    "length": 1
                },
                "value_2": {
                    "parameter": 1
                },
                "value_param": {
                    "value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800863c",
                "FUN_08008600"
            ],
            "code": "\nundefined4 validate_input_080068d6(int *input_array,int value1,int value2)\n\n{\n  if (*(char *)((int)input_array + 0x3a) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(char *)(input_array + 0xe) != '\\x01') {\n    input_array[10] = value1;\n    *(short *)(input_array + 0xb) = (short)value2;\n    *(short *)((int)input_array + 0x2e) = (short)value2;\n    input_array[0xf] = 0;\n    *(undefined *)((int)input_array + 0x3a) = 0x22;\n    *(undefined *)(input_array + 0xe) = 0;\n    *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) | 0x100;\n    *(uint *)(*input_array + 0x14) = *(uint *)(*input_array + 0x14) | 1;\n    *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) | 0x20;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "current_name": "validate_input_080068d6",
            "entrypoint": "0x080068d6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080068d6": "validate_input_080068d6",
                "param_1": "input_array",
                "param_2": "value1",
                "param_3": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006932": {
            "additional_data": {
                "DAT_08008730": {
                    "uart_reset_value": 1
                },
                "FUN_08006932": {
                    "clear_flag_and_send_data": 1,
                    "clear_flags": 1,
                    "configure_uart_transmission": 1,
                    "initialize_uart": 1,
                    "reset_uart_settings": 1,
                    "set_bit_and_callback": 1,
                    "set_bit_value_and_callback": 1,
                    "set_flag_and_callback": 1,
                    "set_flag_and_notify": 1,
                    "set_flag_and_trigger_callback": 1,
                    "set_uart_data": 1,
                    "set_uart_interrupt_flags": 1,
                    "set_uart_transmit_flag": 1,
                    "set_uart_tx_cplt_callback": 1,
                    "update_flags_and_transmit_data": 1,
                    "update_uart_configuration": 8,
                    "update_uart_control": 2,
                    "update_uart_flags": 1,
                    "update_uart_parameters": 1,
                    "update_uart_settings": 3,
                    "update_uart_transmission": 1
                },
                "FUN_08008730": {
                    "uart_transmit_complete_callback": 1
                },
                "HAL_UART_TxCpltCallback": {
                    "handle_transmission_completion": 2,
                    "handle_transmit_complete": 5,
                    "handle_transmit_complete_callback": 2,
                    "handle_uart_transfer_complete": 2,
                    "handle_uart_transmission_complete": 2,
                    "handle_uart_transmit_complete": 2,
                    "handle_uart_tx_complete": 1,
                    "handle_uart_tx_cplt": 1,
                    "send_complete_callback": 1,
                    "transmission_complete_callback": 3,
                    "uart_transmit_complete_callback": 1
                },
                "PTR_FUN_08008730": {
                    "perform_uart_reset": 1
                },
                "param_1": {
                    "arg1": 1,
                    "config_data": 1,
                    "data": 5,
                    "data_pointer": 2,
                    "flag_ptr": 2,
                    "settings": 2,
                    "uart_config": 7,
                    "uart_config_ptr": 1,
                    "uart_configuration": 2,
                    "uart_control": 1,
                    "uart_data_ptr": 1,
                    "uart_flags": 1,
                    "uart_params": 2,
                    "uart_settings": 1,
                    "uart_settings_ptr": 1
                },
                "uint": {
                    "unsigned_int": 1
                }
            },
            "called": [
                "FUN_08008730"
            ],
            "calling": [
                "FUN_080069ec"
            ],
            "code": "\nundefined4 update_uart_configuration_08006932(int *uart_config)\n\n{\n  *(unsigned_int *)(*uart_config + 0xc) = *(unsigned_int *)(*uart_config + 0xc) & 0xffffffbf;\n  *(undefined *)((int)uart_config + 0x39) = 0x20;\n  handle_transmit_complete();\n  return 0;\n}\n\n",
            "current_name": "update_uart_configuration_08006932",
            "entrypoint": "0x08006932",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006932": "update_uart_configuration_08006932",
                "HAL_UART_TxCpltCallback": "handle_transmit_complete",
                "param_1": "uart_config",
                "uint": "unsigned_int"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800694c": {
            "additional_data": {
                "FUN_0800694c": {
                    "decode_data_packet": 1,
                    "decode_input": 1,
                    "parse_and_process_data": 1,
                    "parse_data": 1,
                    "parse_input": 1,
                    "parse_input_string": 1,
                    "parse_string": 4,
                    "process_data": 14,
                    "process_input": 6,
                    "process_input_data": 1
                },
                "HAL_UART_RxCpltCallback": {
                    "handle_uart_completion": 1,
                    "handle_uart_receive_complete": 1
                },
                "param_1": {
                    "data": 11,
                    "data_array": 1,
                    "data_ptr": 4,
                    "input": 2,
                    "input_array": 4,
                    "input_data": 5,
                    "packet": 1,
                    "parameters": 1,
                    "string_data": 1,
                    "string_params": 1
                },
                "pbVar1": {
                    "byte_pointer": 10,
                    "byte_ptr": 19,
                    "output_byte": 1
                },
                "puVar3": {
                    "dest_pointer": 1,
                    "dest_ptr": 1,
                    "output_data": 1,
                    "ptr": 1,
                    "undefined_pointer": 9,
                    "undefined_ptr": 16,
                    "undefined_var": 1
                },
                "sVar2": {
                    "count": 11,
                    "counter": 8,
                    "decremented_value": 1,
                    "loop_counter": 1,
                    "remaining_chars": 1,
                    "remaining_count": 1,
                    "short_value": 1,
                    "short_var": 5,
                    "temp_short": 1
                }
            },
            "called": [
                "FUN_0800870c"
            ],
            "calling": [
                "FUN_080069ec"
            ],
            "code": "\nundefined4 parse_and_process_data_0800694c(int *data)\n\n{\n  byte *byte_ptr;\n  short count;\n  undefined *undefined_ptr;\n  \n  if (*(char *)((int)data + 0x3a) != '\\\"') {\n    return 2;\n  }\n  if (data[2] == 0x1000) {\n    if (data[4] == 0) {\n      *(ushort *)data[10] = (ushort)((uint)(*(int *)(*data + 4) << 0x17) >> 0x17);\n      data[10] = data[10] + 2;\n    }\n    else {\n      *(ushort *)data[10] = (ushort)*(undefined4 *)(*data + 4) & 0xff;\n      data[10] = data[10] + 1;\n    }\n  }\n  else if (data[4] == 0) {\n    undefined_ptr = (undefined *)data[10];\n    data[10] = (int)(undefined_ptr + 1);\n    *undefined_ptr = (char)*(undefined4 *)(*data + 4);\n  }\n  else {\n    byte_ptr = (byte *)data[10];\n    data[10] = (int)(byte_ptr + 1);\n    *byte_ptr = (byte)*(undefined4 *)(*data + 4) & 0x7f;\n  }\n  count = *(short *)((int)data + 0x2e) + -1;\n  *(short *)((int)data + 0x2e) = count;\n  if (count != 0) {\n    return 0;\n  }\n  *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xffffffdf;\n  *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xfffffeff;\n  *(uint *)(*data + 0x14) = *(uint *)(*data + 0x14) & 0xfffffffe;\n  *(undefined *)((int)data + 0x3a) = 0x20;\n  handle_uart_receive_complete();\n  return 0;\n}\n\n",
            "current_name": "parse_and_process_data_0800694c",
            "entrypoint": "0x0800694c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800694c": "parse_and_process_data_0800694c",
                "HAL_UART_RxCpltCallback": "handle_uart_receive_complete",
                "param_1": "data",
                "pbVar1": "byte_ptr",
                "puVar3": "undefined_ptr",
                "sVar2": "count"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080069ec": {
            "additional_data": {
                "FUNC_0800877c": {
                    "func4": 1,
                    "handle_error": 1,
                    "unknown_function": 1
                },
                "FUN_08004050": {
                    "func5": 1,
                    "initialize_uart": 1,
                    "perform_unknown_operation": 1,
                    "receive_data": 1
                },
                "FUN_080064b0": {
                    "check_condition_1": 1,
                    "func1": 1,
                    "handle_success": 1,
                    "unknown1": 1
                },
                "FUN_080064cc": {
                    "check_condition_4": 1,
                    "func6": 1,
                    "transmit_data": 1,
                    "unknown2": 1
                },
                "FUN_08006932": {
                    "check_condition": 1,
                    "check_condition_2": 1,
                    "func2": 1,
                    "unknown3": 1
                },
                "FUN_0800694c": {
                    "check_condition_3": 1,
                    "check_flag": 1,
                    "func3": 1,
                    "unknown4": 1
                },
                "FUN_080069ec": {
                    "check_and_handle_uart_event": 1,
                    "check_and_perform_action": 1,
                    "check_and_process_uart_events": 1,
                    "handle_communication": 1,
                    "handle_uart_actions": 1,
                    "handle_uart_data": 1,
                    "handle_uart_operation": 1,
                    "handle_uart_operations": 2,
                    "handle_uart_transfer": 4,
                    "manage_receive_transmit": 1,
                    "process_data": 3,
                    "process_input_data": 2,
                    "process_params": 1,
                    "process_status_flags": 2,
                    "process_uart": 1,
                    "process_uart_data": 4,
                    "process_uart_operations": 1,
                    "process_uart_signals": 1,
                    "process_uart_transfer": 1,
                    "update_transfers_conditions": 1
                },
                "HAL_DMA_Abort_IT": {
                    "abort_dma": 3,
                    "abort_dma_transfer": 2
                },
                "HAL_UART_EndRxTransfer": {
                    "end_rx_transfer": 1
                },
                "HAL_UART_ErrorCallback": {
                    "handle_error": 3,
                    "handle_uart_error": 2
                },
                "Hal_UARTDROP_Abort_IT": {
                    "drop_abort_dma": 1
                },
                "LAB_08006b0c_1": {
                    "callback_func": 1,
                    "dma_error_handler": 1,
                    "label_08006b0c_1": 1,
                    "placeholder_func": 1
                },
                "UART_EndRxTransfer": {
                    "end_receive_transfer": 1,
                    "end_rx_transfer": 1,
                    "end_uart_receive": 1,
                    "end_uart_receive_transfer": 1
                },
                "UART_EndTransmit_IT": {
                    "end_transmission": 1,
                    "end_transmit": 2,
                    "end_uart_transmit": 2
                },
                "UART_Receive_IT": {
                    "initiate_receive": 1,
                    "perform_uart_receive": 1,
                    "receive_data": 2,
                    "start_uart_receive": 1
                },
                "UART_Transmit_IT": {
                    "initiate_transmit": 1,
                    "perform_uart_transmit": 1,
                    "start_uart_transmit": 1,
                    "transmit_data": 2
                },
                "iVar1": {
                    "dma_abort_result": 5,
                    "dma_error": 1,
                    "dma_result": 2,
                    "error_code": 2,
                    "error_flag": 1,
                    "error_status": 1,
                    "result": 8,
                    "return_value": 3,
                    "status": 8
                },
                "param_1": {
                    "action_ptr": 1,
                    "communication_params": 1,
                    "data": 5,
                    "data_ptr": 1,
                    "event_data": 1,
                    "input_data": 4,
                    "param": 4,
                    "param_pointer": 1,
                    "parameters": 1,
                    "params": 2,
                    "signal_data": 1,
                    "status_array": 1,
                    "transfer_data": 2,
                    "transfer_params": 3,
                    "uart_params": 3
                },
                "puVar3": {
                    "data": 1,
                    "data_pointer": 1,
                    "data_ptr": 3,
                    "event_data_ptr": 1,
                    "first_pointer": 1,
                    "pointer": 3,
                    "pointer1": 1,
                    "pointer_1": 1,
                    "ptr": 8,
                    "ptr1": 1,
                    "ptr_data": 1,
                    "ptr_params": 1,
                    "ptr_value": 1,
                    "ptr_var3": 1,
                    "status_pointer": 1,
                    "transfer": 1,
                    "transfer_data_ptr": 1,
                    "uart_data": 2,
                    "uart_param_4": 1
                },
                "uVar2": {
                    "data_flag": 2,
                    "event_data_2": 1,
                    "flag": 1,
                    "flag1": 1,
                    "flag_value": 1,
                    "flags": 1,
                    "param3_value": 1,
                    "second_value": 1,
                    "status_flag3": 1,
                    "uart_control": 1,
                    "uart_param_3": 1,
                    "uart_state": 1,
                    "value1": 12,
                    "value2": 1,
                    "value_1": 1,
                    "value_2": 2,
                    "var2": 1,
                    "var_1": 1
                },
                "uVar4": {
                    "bit": 1,
                    "bit_flag": 1,
                    "check_flag": 1,
                    "check_value": 3,
                    "condition": 1,
                    "condition_result": 1,
                    "flag": 2,
                    "flag2": 1,
                    "status_flag1": 1,
                    "transmit_flag": 1,
                    "value2": 11,
                    "value3": 1,
                    "value4": 1,
                    "value_2": 1,
                    "value_4": 2,
                    "var4": 1,
                    "var_2": 1
                },
                "uVar5": {
                    "event_data_1": 1,
                    "first_value": 1,
                    "flag3": 1,
                    "input_data_2": 1,
                    "param1_value": 1,
                    "receive_flag": 1,
                    "signal_options": 1,
                    "status": 1,
                    "status_flag": 1,
                    "status_flag2": 1,
                    "transfer_flag": 1,
                    "uart_param_1": 1,
                    "uart_status": 1,
                    "value2": 1,
                    "value3": 11,
                    "value5": 1,
                    "value_3": 1,
                    "value_5": 2,
                    "var5": 1,
                    "var_3": 1
                },
                "value4": {
                    "value4": 1
                }
            },
            "called": [
                "FUN_080064b0",
                "FUN_08006932",
                "FUN_0800694c",
                "FUN_0800877c",
                "FUN_08004050",
                "FUN_080064cc"
            ],
            "calling": [],
            "code": "\nvoid process_uart_data_080069ec(uint **data)\n\n{\n  int status;\n  uint value1;\n  uint *ptr;\n  uint value2;\n  uint value3;\n  \n  ptr = *data;\n  value3 = *ptr;\n  value1 = ptr[3];\n  if ((((value3 & 0xf) == 0) && ((value3 & 0x20) != 0)) && ((value1 & 0x20) != 0)) {\n    receive_data(data);\n    return;\n  }\n  if (((value3 & 0xf) == 0) || ((value2 = ptr[5] & 1, value2 == 0 && ((value1 & 0x120) == 0)))) {\n    if (((value3 & 0x80) != 0) && ((value1 & 0x80) != 0)) {\n      transmit_data(data);\n      return;\n    }\n    if (((value3 & 0x40) != 0) && ((value1 & 0x40) != 0)) {\n      end_transmit(data);\n    }\n  }\n  else {\n    if (((value3 & 1) != 0) && ((value1 & 0x100) != 0)) {\n      data[0xf] = (uint *)((uint)data[0xf] | 1);\n    }\n    if (((value3 & 4) != 0) && (value2 != 0)) {\n      data[0xf] = (uint *)((uint)data[0xf] | 2);\n    }\n    if (((value3 & 2) != 0) && (value2 != 0)) {\n      data[0xf] = (uint *)((uint)data[0xf] | 4);\n    }\n    if (((value3 & 8) != 0) && (value2 != 0)) {\n      data[0xf] = (uint *)((uint)data[0xf] | 8);\n    }\n    if (data[0xf] != (uint *)0x0) {\n      if (((value3 & 0x20) != 0) && ((value1 & 0x20) != 0)) {\n        receive_data(data);\n      }\n      if ((((uint)data[0xf] & 8) == 0) && (((*data)[5] & 0x40) == 0)) {\n        handle_error(data);\n        data[0xf] = (uint *)0x0;\n        return;\n      }\n      end_uart_receive(data);\n      ptr = *data;\n      if ((ptr[5] & 0x40) == 0) {\n        handle_error(data);\n        return;\n      }\n      ptr[5] = ptr[5] & 0xffffffbf;\n      if (data[0xd] == (uint *)0x0) {\n        handle_error(data);\n        return;\n      }\n      data[0xd][0xd] = (uint)&label_08006b0c_1;\n      status = abort_dma(data[0xd]);\n      if (status != 0) {\n        (*(code *)data[0xd][0xd])();\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "current_name": "process_uart_data_080069ec",
            "entrypoint": "0x080069ec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080069ec": "process_uart_data_080069ec",
                "HAL_DMA_Abort_IT": "abort_dma",
                "HAL_UART_ErrorCallback": "handle_error",
                "LAB_08006b0c_1": "label_08006b0c_1",
                "UART_EndRxTransfer": "end_uart_receive",
                "UART_EndTransmit_IT": "end_transmit",
                "UART_Receive_IT": "receive_data",
                "UART_Transmit_IT": "transmit_data",
                "iVar1": "status",
                "param_1": "data",
                "puVar3": "ptr",
                "uVar2": "value1",
                "uVar4": "value2",
                "uVar5": "value3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006b1c": {
            "additional_data": {
                "FUN_08006b1c": {
                    "bitwise_or": 1,
                    "combine_bytes": 29,
                    "combine_two_bytes": 1
                },
                "byte": {
                    "result": 3
                },
                "param_1": {
                    "address": 5,
                    "base_address": 1,
                    "input": 19,
                    "input_address": 1,
                    "input_value": 2,
                    "offset": 3
                },
                "param_2": {
                    "input2": 1
                },
                "param_3": {
                    "input3": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080085dc",
                "FUN_080085b8"
            ],
            "code": "\nresult combine_two_bytes_08006b1c(int input)\n\n{\n  return *(result *)(input + 0x3a) | *(result *)(input + 0x39);\n}\n\n",
            "current_name": "combine_two_bytes_08006b1c",
            "entrypoint": "0x08006b1c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006b1c": "combine_two_bytes_08006b1c",
                "byte": "result",
                "param_1": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006b28": {
            "additional_data": {
                "0x18": {
                    "left_shift_bits": 1
                },
                "0x1c": {
                    "right_shift_bits": 1
                },
                "0xf": {
                    "bit_mask": 1
                },
                "4": {
                    "word_size": 1
                },
                "FUN_08006b28": {
                    "bitwise_extraction": 1,
                    "bitwise_shift_and_mask": 1,
                    "extract_bit": 3,
                    "extract_bit_from_address": 1,
                    "extract_bit_from_memory": 1,
                    "extract_bit_from_uint": 3,
                    "extract_bit_from_uint_array": 1,
                    "extract_bit_value": 2,
                    "extract_bits": 1,
                    "get_bit": 3,
                    "get_bit_at_index": 2,
                    "get_bit_at_position": 1,
                    "get_bit_from_param": 1,
                    "get_bit_value": 5,
                    "read_bit_from_offset": 1,
                    "retrieve_bit": 2,
                    "retrieve_bit_value": 2
                },
                "param_1": {
                    "address": 1,
                    "bit_index": 3,
                    "bit_position": 3,
                    "bit_shift_amount": 1,
                    "data": 2,
                    "index": 4,
                    "input": 1,
                    "input_number": 1,
                    "input_uint": 1,
                    "input_value": 6,
                    "value": 8
                },
                "param_2": {
                    "address": 4,
                    "array": 2,
                    "array_address": 4,
                    "array_base": 1,
                    "array_base_address": 1,
                    "array_offset": 2,
                    "array_pointer": 1,
                    "array_ptr": 1,
                    "array_start_address": 1,
                    "base_address": 3,
                    "data": 1,
                    "data_address": 2,
                    "data_array": 1,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "pointer": 1,
                    "ptr": 1,
                    "ptr_offset": 1,
                    "uint_array": 1
                },
                "uint": {
                    "unsigned_integer": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080088e0",
                "FUN_08008a24",
                "FUN_08008a6c",
                "FUN_08008990"
            ],
            "code": "\nunsigned_integer get_bit_value_08006b28(unsigned_integer value,int array_address)\n\n{\n  return *(unsigned_integer *)(array_address + ((value << 0x18) >> 0x1c) * 4) >> (value & 0xf) & 1;\n}\n\n",
            "current_name": "get_bit_value_08006b28",
            "entrypoint": "0x08006b28",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006b28": "get_bit_value_08006b28",
                "param_1": "value",
                "param_2": "array_address",
                "uint": "unsigned_integer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006b3e": {
            "additional_data": {
                "FUM_08006b3e": {
                    "set_bit": 1
                },
                "FUN_08006b3e": {
                    "set_bit": 3,
                    "set_bit_in_array": 12,
                    "set_bit_in_memory": 1,
                    "set_bit_in_uint_array": 1,
                    "store_bit_in_array": 1,
                    "update_bit": 1,
                    "update_bit_at_index": 1,
                    "update_bit_in_array": 3,
                    "update_bit_value": 1,
                    "update_bitwise_flag": 1,
                    "update_data": 1,
                    "update_data_at_offset": 1,
                    "update_memory": 2,
                    "update_value": 1
                },
                "param_1": {
                    "bit_index": 10,
                    "bit_position": 11,
                    "data_index": 2,
                    "input": 1,
                    "input_value": 2,
                    "value": 5
                },
                "param_2": {
                    "array": 14,
                    "array_address": 7,
                    "array_pointer": 2,
                    "array_ptr": 1,
                    "bit_array": 1,
                    "data_array": 2,
                    "memory_address": 3,
                    "uint_array": 1
                },
                "uVar1": {
                    "array_index": 4,
                    "bit_offset": 1,
                    "byte_index": 2,
                    "byte_offset": 5,
                    "element_index": 1,
                    "index": 4,
                    "shifted_bit_index": 1,
                    "shifted_bit_pos": 1,
                    "shifted_bit_position": 1,
                    "shifted_index": 6,
                    "shifted_value": 1,
                    "word_index": 1
                },
                "uint": {
                    "unsigned_integer": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080088e0",
                "FUN_08008990"
            ],
            "code": "\nvoid set_bit_in_uint_array_08006b3e(unsigned_integer bit_position,int array)\n\n{\n  unsigned_integer shifted_index;\n  \n  shifted_index = (bit_position << 0x18) >> 0x1c;\n  *(unsigned_integer *)(array + shifted_index * 4) = *(unsigned_integer *)(array + shifted_index * 4) | 1 << (bit_position & 0xf);\n  return;\n}\n\n",
            "current_name": "set_bit_in_uint_array_08006b3e",
            "entrypoint": "0x08006b3e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006b3e": "set_bit_in_uint_array_08006b3e",
                "param_1": "bit_position",
                "param_2": "array",
                "uVar1": "shifted_index",
                "uint": "unsigned_integer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006b5c": {
            "additional_data": {
                "FUN_08006b5c": {
                    "store_bit_flag": 1,
                    "store_bit_mask": 1,
                    "update_array_element": 4,
                    "update_bit": 11,
                    "update_bit_in_array": 5,
                    "update_bit_value": 1,
                    "update_bits_at_index": 1,
                    "update_data": 1,
                    "update_data_at_index": 1,
                    "update_memory": 1,
                    "update_value": 1,
                    "update_value_at_position": 1,
                    "update_value_in_array": 1
                },
                "param_1": {
                    "bit_index": 6,
                    "bit_pos": 1,
                    "bit_position": 12,
                    "data": 1,
                    "element_index": 1,
                    "index": 3,
                    "input": 1,
                    "input_value": 2,
                    "position": 1,
                    "value": 3
                },
                "param_2": {
                    "array": 9,
                    "array_address": 14,
                    "array_pointer": 1,
                    "array_ptr": 1,
                    "data": 3,
                    "data_address": 1,
                    "data_array": 1,
                    "memory_address": 1
                },
                "uVar1": {
                    "array_index": 3,
                    "bit_index": 1,
                    "byte_index": 1,
                    "byte_offset": 1,
                    "index": 8,
                    "position": 1,
                    "shift": 1,
                    "shifted_index": 6,
                    "shifted_position": 3,
                    "shifted_value": 2,
                    "word_index": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08008990"
            ],
            "code": "\nvoid update_bit_in_array_08006b5c(uint bit_position,int array_address)\n\n{\n  uint index;\n  \n  index = (bit_position << 0x18) >> 0x1c;\n  *(uint *)(array_address + index * 4) = *(uint *)(array_address + index * 4) & ~(1 << (bit_position & 0xf));\n  return;\n}\n\n",
            "current_name": "update_bit_in_array_08006b5c",
            "entrypoint": "0x08006b5c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006b5c": "update_bit_in_array_08006b5c",
                "param_1": "bit_position",
                "param_2": "array_address",
                "uVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006b7c": {
            "additional_data": {
                "0": {
                    "addr_1": 1,
                    "address0": 1,
                    "address1": 1,
                    "address_0": 5,
                    "base_address": 3,
                    "map_value_0": 1,
                    "mem_address_0": 1,
                    "memory_address_0": 5,
                    "memory_address_1": 2,
                    "offset_0": 1,
                    "value_0": 1,
                    "zero_index_address": 1
                },
                "1": {
                    "addr_2": 1,
                    "address1": 1,
                    "address2": 1,
                    "address_1": 5,
                    "first_address": 2,
                    "first_index_address": 1,
                    "map_value_1": 1,
                    "mem_address_1": 1,
                    "memory_address_1": 5,
                    "memory_address_2": 2,
                    "offset_1": 1,
                    "offset_a": 1,
                    "value_1": 1
                },
                "2": {
                    "addr_3": 1,
                    "address2": 1,
                    "address3": 1,
                    "address_2": 5,
                    "map_value_2": 1,
                    "mem_address_2": 1,
                    "memory_address_2": 5,
                    "memory_address_3": 2,
                    "offset_2": 1,
                    "offset_b": 1,
                    "second_address": 2,
                    "second_index_address": 1,
                    "value_2": 1
                },
                "3": {
                    "addr_4": 1,
                    "address3": 1,
                    "address4": 1,
                    "address_3": 5,
                    "map_value_3": 1,
                    "mem_address_3": 1,
                    "memory_address_3": 5,
                    "memory_address_4": 2,
                    "offset_3": 1,
                    "offset_c": 1,
                    "third_address": 2,
                    "third_index_address": 1,
                    "value_3": 1
                },
                "4": {
                    "addr_5": 1,
                    "address4": 1,
                    "address5": 1,
                    "address_4": 5,
                    "fourth_address": 2,
                    "fourth_index_address": 1,
                    "map_value_4": 1,
                    "mem_address_4": 1,
                    "memory_address_4": 5,
                    "memory_address_5": 2,
                    "offset_4": 1,
                    "offset_d": 1,
                    "value_4": 1
                },
                "FUN_08006b7c": {
                    "get_address": 2,
                    "get_address_offset": 1,
                    "get_base_address": 1,
                    "get_memory_address": 15,
                    "map_param_to_address": 7,
                    "map_param_to_return_address": 1,
                    "map_param_to_value": 2,
                    "map_parameter_to_address": 2
                },
                "param_1": {
                    "index": 5,
                    "input": 9,
                    "input_index": 1,
                    "input_number": 1,
                    "input_param": 1,
                    "input_value": 4,
                    "param": 9,
                    "parameter": 1
                },
                "return": {
                    "base_address": 1
                },
                "return_value": {
                    "address": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08008a24",
                "FUN_08008a6c"
            ],
            "code": "\nundefined4 get_memory_address_08006b7c(undefined4 input)\n\n{\n  switch(input) {\n  case 0:\n    base_address 0x40010800;\n  case 1:\n    base_address 0x40010c00;\n  case 2:\n    base_address 0x40011000;\n  case 3:\n    base_address 0x40011400;\n  case 4:\n    base_address 0x40011800;\n  default:\n    base_address 0;\n  }\n}\n\n",
            "current_name": "get_memory_address_08006b7c",
            "entrypoint": "0x08006b7c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006b7c": "get_memory_address_08006b7c",
                "param_1": "input",
                "return": "base_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006bb8": {
            "additional_data": {
                "FUN_08006bb8": {
                    "configure_io": 1,
                    "configure_peripheral": 1,
                    "initialize_status": 1,
                    "map_address_to_code_segment": 1,
                    "map_param_to_address": 2,
                    "map_value_to_address": 2,
                    "set_bit_and_return_address": 1,
                    "set_display_address": 1,
                    "set_flag_and_get_address": 2,
                    "set_flag_and_return_address": 3,
                    "set_flag_and_return_value": 2,
                    "set_hardware_address": 1,
                    "set_memory_address": 2,
                    "set_memory_location": 2,
                    "set_peripheral_address": 1,
                    "set_permissions": 1,
                    "set_register_offset": 1,
                    "set_register_value": 3,
                    "update_register": 1,
                    "update_register_and_return_address": 1,
                    "update_status": 1
                },
                "_DAT_40021018": {
                    "flag_register": 1,
                    "register_flags": 1,
                    "register_value": 2
                },
                "param_1": {
                    "address": 1,
                    "bit_position": 1,
                    "config_number": 1,
                    "display_index": 1,
                    "flag": 6,
                    "flag_index": 1,
                    "index": 1,
                    "input": 1,
                    "input_parameter": 2,
                    "input_value": 2,
                    "location": 1,
                    "memory_region": 1,
                    "peripheral_index": 2,
                    "permission_code": 1,
                    "register_index": 3,
                    "status": 2,
                    "value": 4
                },
                "uVar1": {
                    "address": 9,
                    "code_segment_address": 1,
                    "display_address": 1,
                    "new_address": 1,
                    "new_offset": 1,
                    "output": 1,
                    "output_address": 3,
                    "output_value": 1,
                    "result": 7,
                    "return_address": 2,
                    "return_value": 4
                }
            },
            "called": [],
            "calling": [
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08006e68",
                "FUN_08006ca8",
                "FUN_08007258"
            ],
            "code": "\n\n\nundefined4 update_register_and_return_address_08006bb8(undefined4 flag)\n\n{\n  undefined4 address;\n  \n  switch(flag) {\n  case 0:\n    _DAT_40021018 = _DAT_40021018 | 4;\n    address = 0x40010800;\n    break;\n  case 1:\n    _DAT_40021018 = _DAT_40021018 | 8;\n    address = 0x40010c00;\n    break;\n  case 2:\n    _DAT_40021018 = _DAT_40021018 | 0x10;\n    address = 0x40011000;\n    break;\n  case 3:\n    _DAT_40021018 = _DAT_40021018 | 0x20;\n    address = 0x40011400;\n    break;\n  case 4:\n    _DAT_40021018 = _DAT_40021018 | 0x40;\n    address = 0x40011800;\n    break;\n  default:\n    address = 0;\n  }\n  return address;\n}\n\n",
            "current_name": "update_register_and_return_address_08006bb8",
            "entrypoint": "0x08006bb8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006bb8": "update_register_and_return_address_08006bb8",
                "param_1": "flag",
                "uVar1": "address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006c60": {
            "additional_data": {
                "FUN_08006c60": {
                    "calculate_pin": 1,
                    "calculate_pinmap": 2,
                    "calculate_pinmap_value": 4,
                    "calculate_shifted_value": 1,
                    "compute_pinmap_value": 1,
                    "decode_pin": 1,
                    "decode_pinmap": 1,
                    "extract_bits_from_value": 1,
                    "extracted_binary_function": 1,
                    "map_function_result": 2,
                    "map_pin_to_index": 1,
                    "map_pin_to_uint": 1,
                    "map_pin_to_value": 1,
                    "map_pin_value": 3,
                    "pinmap_function_return_value_processor": 1,
                    "pinmap_function_wrapper": 2,
                    "pinmap_reversed": 1,
                    "pinmap_to_uint": 1,
                    "reverse_bits": 1,
                    "reverse_extracted_code": 1
                },
                "iVar1": {
                    "pinmap_function_result": 2,
                    "pinmap_result": 8,
                    "result": 19,
                    "result_of_pinmap_function": 1
                },
                "param_1": {
                    "arg1": 1,
                    "function_param_1": 1,
                    "input": 2,
                    "input1": 6,
                    "input_1": 1,
                    "input_param": 2,
                    "input_param_1": 3,
                    "input_parameter_1": 1,
                    "input_value": 3,
                    "pin": 6,
                    "pin_value": 4,
                    "pinmap_value": 1
                },
                "param_2": {
                    "arg2": 1,
                    "data1": 1,
                    "function_param_2": 1,
                    "input2": 5,
                    "input_2": 1,
                    "input_param_2": 3,
                    "input_parameter_2": 1,
                    "param2": 1,
                    "param_2": 6,
                    "unused": 1,
                    "unused_param": 6,
                    "unused_parameter": 2
                },
                "param_3": {
                    "additional_data_1": 1,
                    "arg3": 1,
                    "data2": 1,
                    "data_param": 3,
                    "function_param_3": 1,
                    "input3": 6,
                    "input_3": 1,
                    "input_param_3": 3,
                    "input_parameter_3": 1,
                    "param3": 2,
                    "param_3": 9,
                    "pinmap_parameter_1": 1,
                    "unused_param": 1
                },
                "param_4": {
                    "additional_data_2": 1,
                    "arg4": 1,
                    "data3": 1,
                    "function_param_4": 1,
                    "input4": 6,
                    "input_4": 1,
                    "input_param_4": 3,
                    "input_parameter_4": 1,
                    "param4": 2,
                    "param_4": 9,
                    "pinmap_parameter_2": 1,
                    "size_param": 1,
                    "unused_param": 1,
                    "unused_param_2": 2
                },
                "uVar2": {
                    "calculated_value": 1,
                    "index": 1,
                    "reversed_bits": 1,
                    "shifted_result": 9,
                    "shifted_val": 1,
                    "shifted_value": 17
                }
            },
            "called": [
                "FUN_08007376"
            ],
            "calling": [
                "FUN_08006d80"
            ],
            "code": "\nuint calculate_pinmap_value_08006c60(undefined4 input1,undefined4 unused_param,undefined4 param_3,undefined4 param_4)\n\n{\n  int result;\n  uint shifted_value;\n  \n  result = pinmap_function(input1,&DAT_0800a5b8,param_3,param_4,param_4);\n  shifted_value = (uint)(result << 0xc) >> 0x1b;\n  if (0x10 < shifted_value - 1) {\n    shifted_value = 0;\n  }\n  return shifted_value;\n}\n\n",
            "current_name": "calculate_pinmap_value_08006c60",
            "entrypoint": "0x08006c60",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006c60": "calculate_pinmap_value_08006c60",
                "iVar1": "result",
                "param_1": "input1",
                "param_2": "unused_param",
                "uVar2": "shifted_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006c7c": {
            "additional_data": {
                "FUN_08006c7c": {
                    "check_function_result": 1,
                    "check_pinmap": 1,
                    "check_pinmap_result": 1,
                    "map_and_convert": 1,
                    "map_pin_function": 2,
                    "map_pin_to_value": 2,
                    "map_pin_value": 1,
                    "pinmap_analysis": 1,
                    "pinmap_check": 5,
                    "pinmap_check_function_result": 1,
                    "pinmap_converter": 1,
                    "pinmap_function_analysis": 1,
                    "pinmap_function_result": 4,
                    "pinmap_function_wrapper": 2,
                    "pinmap_processor": 1,
                    "pinmap_to_value": 5,
                    "process_pinmap": 1
                },
                "iVar1": {
                    "pinmap_result": 13,
                    "result": 16
                },
                "param_1": {
                    "device_type": 1,
                    "input1": 1,
                    "input_1": 6,
                    "input_param": 9,
                    "input_param1": 2,
                    "input_value": 2,
                    "pin": 6,
                    "pin_id": 3,
                    "pinmap_param_1": 1
                },
                "param_2": {
                    "input2": 1,
                    "input_2": 6,
                    "input_param2": 1,
                    "output_param": 1,
                    "param2": 1,
                    "param_2": 7,
                    "pinmap_param": 1,
                    "pinmap_param_2": 1,
                    "unused_param": 7
                },
                "param_3": {
                    "address_param": 1,
                    "buffer_param": 1,
                    "config_param": 2,
                    "conversion_param": 1,
                    "flag_param": 1,
                    "input3": 1,
                    "input_3": 6,
                    "input_param2": 1,
                    "input_param3": 1,
                    "mapping_param": 1,
                    "param3": 1,
                    "param_3": 11,
                    "pin_data": 1,
                    "pinmap_param_3": 1,
                    "unused_param": 1
                },
                "param_4": {
                    "additional_param": 1,
                    "flag_param": 2,
                    "input4": 1,
                    "input_4": 6,
                    "input_param3": 1,
                    "input_param4": 1,
                    "optional_param": 1,
                    "other_param": 1,
                    "param4": 1,
                    "param_4": 11,
                    "pin_value": 1,
                    "pinmap_param_4": 1,
                    "secondary_mapping_param": 1,
                    "size_param": 1,
                    "unused_param": 1
                },
                "uVar2": {
                    "shifted_bits": 1,
                    "shifted_result": 16,
                    "shifted_value": 12
                }
            },
            "called": [
                "FUN_08007376"
            ],
            "calling": [
                "FUN_08007118",
                "FUN_080071e4"
            ],
            "code": "\nundefined4 pinmap_check_function_result_08006c7c(undefined4 input_param,undefined4 unused_param,undefined4 param_3,undefined4 param_4)\n\n{\n  int result;\n  uint shifted_result;\n  \n  result = pinmap_function(input_param,&DAT_0800a6cc,param_3,param_4,param_4);\n  shifted_result = (uint)(result << 0xc) >> 0x1b;\n  if (shifted_result == 3) {\n    return 8;\n  }\n  if (shifted_result != 4) {\n    if (shifted_result != 2) {\n      return 0;\n    }\n    return 4;\n  }\n  return 0xc;\n}\n\n",
            "current_name": "pinmap_check_function_result_08006c7c",
            "entrypoint": "0x08006c7c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006c7c": "pinmap_check_function_result_08006c7c",
                "iVar1": "result",
                "param_1": "input_param",
                "param_2": "unused_param",
                "uVar2": "shifted_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006ca8": {
            "additional_data": {
                "DAT_20000014": {
                    "dat_gpio_pin": 1,
                    "data": 1,
                    "data_mask": 1,
                    "gpio_config": 1,
                    "gpio_config_param": 1,
                    "gpio_index": 1,
                    "gpio_input_data": 1,
                    "port_data": 1,
                    "port_settings": 1
                },
                "FUN_080040e8": {
                    "initialize_gpio": 1,
                    "initialize_gpio_pin": 1
                },
                "FUN_08006bb8": {
                    "set_gpio_port_clock": 2
                },
                "FUN_08006ca8": {
                    "initialize_gpio": 14,
                    "initialize_gpio_pin": 1,
                    "initialize_gpio_port": 16
                },
                "HAL_GPIO_Init": {
                    "configure_gpio": 1,
                    "init_gpio_port": 1,
                    "initialize_gpio": 4,
                    "initialize_gpio_pin": 1,
                    "initialize_gpio_port": 3,
                    "initialize_pin": 1
                },
                "iVar3": {
                    "config_value": 1,
                    "current_value": 1,
                    "data_value": 3,
                    "gpio_config_type": 1,
                    "gpio_mode": 2,
                    "gpio_pin": 1,
                    "gpio_port_size": 1,
                    "gpio_port_value": 2,
                    "gpio_status": 1,
                    "gpio_value": 5,
                    "initial_value": 1,
                    "input_value": 2,
                    "param_1_value": 1,
                    "pin_type": 1,
                    "pin_value": 2,
                    "port_mode": 1,
                    "port_size": 1,
                    "port_value": 1,
                    "value": 2,
                    "var_flag": 1
                },
                "local_10": {
                    "gpio_pin_pull": 1,
                    "gpio_pin_state": 1,
                    "gpio_pull": 14,
                    "gpio_pull_config": 1,
                    "pin_config": 2,
                    "pin_pull": 7,
                    "pin_state": 1,
                    "pull_config": 1,
                    "pull_configuration": 1,
                    "pull_mode": 1,
                    "pull_value": 1
                },
                "local_14": {
                    "gpio_config_mode": 1,
                    "gpio_init_periph": 1,
                    "gpio_mode": 13,
                    "gpio_pin_mode": 2,
                    "gpio_type": 1,
                    "mode_value": 1,
                    "pin_mode": 11,
                    "pin_speed": 1
                },
                "local_18": {
                    "bit_mask": 2,
                    "gpio_mask": 1,
                    "gpio_pin": 4,
                    "gpio_pin_mask": 5,
                    "pin_bit_mask": 1,
                    "pin_bitmask": 2,
                    "pin_mask": 16
                },
                "param_1": {
                    "config_ptr": 1,
                    "data": 2,
                    "data_ptr": 1,
                    "gpio_address": 2,
                    "gpio_buffer": 1,
                    "gpio_config": 3,
                    "gpio_configuration": 1,
                    "gpio_data": 2,
                    "gpio_input": 1,
                    "gpio_parameter": 1,
                    "gpio_pin": 1,
                    "gpio_port": 1,
                    "gpio_registers": 1,
                    "gpio_selection": 1,
                    "gpio_status": 1,
                    "input_address": 1,
                    "input_data": 2,
                    "input_param": 1,
                    "input_ptr": 1,
                    "pin": 1,
                    "pin_address": 1,
                    "port_address": 2,
                    "port_param": 1,
                    "port_value": 1
                },
                "param_2": {
                    "clock_address": 1,
                    "clock_config": 1,
                    "clock_param": 1,
                    "clock_setting": 2,
                    "clock_source": 2,
                    "clock_value": 4,
                    "config": 1,
                    "config_value": 2,
                    "gpio_clock": 1,
                    "gpio_config": 1,
                    "gpio_output": 1,
                    "input_param": 1,
                    "param": 2,
                    "param2": 2,
                    "param_2": 1,
                    "param_value": 4,
                    "port_config": 1,
                    "port_configuration": 1,
                    "port_setting": 1,
                    "value": 1
                },
                "set_GPIO_Port_Clock": {
                    "configure_gpio_clock": 5,
                    "configure_gpio_port_clock": 5,
                    "configure_port_clock": 1
                },
                "uVar1": {
                    "gpio_base_address": 1,
                    "gpio_clk_status": 1,
                    "gpio_clock": 2,
                    "gpio_port": 18,
                    "gpio_port_address": 1,
                    "gpio_port_clock": 4,
                    "gpio_port_clock_result": 2,
                    "initialized_gpio": 1,
                    "port_clock_result": 1
                },
                "uVar2": {
                    "gpio_bitmask": 1,
                    "gpio_clock": 2,
                    "gpio_config": 3,
                    "gpio_config_value": 1,
                    "gpio_configuration": 1,
                    "gpio_data": 2,
                    "gpio_mask": 3,
                    "gpio_mode": 1,
                    "gpio_port": 1,
                    "gpio_port_config": 2,
                    "gpio_port_setting": 1,
                    "gpio_port_status": 2,
                    "gpio_port_val": 1,
                    "gpio_port_value": 3,
                    "gpio_settings": 1,
                    "gpio_value": 1,
                    "port_config": 1,
                    "port_data": 1,
                    "port_selection": 1,
                    "port_status": 1,
                    "port_value": 1
                }
            },
            "called": [
                "FUN_08006bb8",
                "FUN_080040e8"
            ],
            "calling": [
                "FUN_08003bd8"
            ],
            "code": "\n\n\nvoid initialize_gpio_port_08006ca8(int *gpio_config,undefined4 clock_value)\n\n{\n  undefined4 gpio_port;\n  uint gpio_mask;\n  int gpio_value;\n  uint pin_mask;\n  undefined4 gpio_mode;\n  undefined4 gpio_pull;\n  \n  gpio_value = *gpio_config;\n  if (gpio_value == 0x40012400) {\n    gpio_mask = _DAT_40021018 | 0x200;\n    gpio_value = 0x200;\n    _DAT_40021018 = gpio_mask;\n  }\n  else {\n    gpio_mask = 0x40012800;\n    if (gpio_value == 0x40012800) {\n      gpio_mask = _DAT_40021018 | 0x400;\n      gpio_value = 0x400;\n      _DAT_40021018 = gpio_mask;\n    }\n  }\n  gpio_port = configure_gpio_clock((uint)((int)(char)DAT_20000014 << 0x18) >> 0x1c,clock_value,gpio_mask,gpio_value);\n  pin_mask = 1 << (DAT_20000014 & 0xf) & 0xffff;\n  gpio_mode = 3;\n  gpio_pull = 0;\n  initialize_gpio(gpio_port,&pin_mask);\n  return;\n}\n\n",
            "current_name": "initialize_gpio_port_08006ca8",
            "entrypoint": "0x08006ca8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006ca8": "initialize_gpio_port_08006ca8",
                "HAL_GPIO_Init": "initialize_gpio",
                "iVar3": "gpio_value",
                "local_10": "gpio_pull",
                "local_14": "gpio_mode",
                "local_18": "pin_mask",
                "param_1": "gpio_config",
                "param_2": "clock_value",
                "set_GPIO_Port_Clock": "configure_gpio_clock",
                "uVar1": "gpio_port",
                "uVar2": "gpio_mask"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006d24": {
            "additional_data": {
                "0x40012400": {
                    "mask1": 1
                },
                "0x40012800": {
                    "mask2": 1
                },
                "DAT_4002100c": {
                    "register_value_1": 1
                },
                "DAT_40021018": {
                    "register_value_2": 1
                },
                "FUN_08006d24": {
                    "set_flags_based_on_parameter": 1,
                    "toggle_memory_access": 1,
                    "update_configuration": 1,
                    "update_control_register": 2,
                    "update_control_registers": 4,
                    "update_dat_400210": 1,
                    "update_data": 1,
                    "update_flags_based_on_param": 2,
                    "update_flags_based_on_parameter": 1,
                    "update_memory": 1,
                    "update_memory_access": 1,
                    "update_memory_protection": 4,
                    "update_memory_settings": 1,
                    "update_permissions": 1,
                    "update_register_flags": 1,
                    "update_register_value": 1,
                    "update_register_values": 2,
                    "update_registers": 2,
                    "update_settings": 2,
                    "update_status": 1
                },
                "_DAT_4002100c": {
                    "control_register1": 2,
                    "memory_protection_register1": 1,
                    "memory_register1": 1,
                    "register1": 6,
                    "register_1": 2,
                    "register_a": 7,
                    "register_value1": 2
                },
                "_DAT_40021018": {
                    "control_register2": 2,
                    "memory_protection_register2": 1,
                    "memory_register2": 1,
                    "register2": 6,
                    "register_2": 2,
                    "register_b": 7,
                    "register_value2": 2
                },
                "param_1": {
                    "address": 3,
                    "config_value": 1,
                    "control_reg": 1,
                    "data": 1,
                    "data_param": 1,
                    "input": 1,
                    "input_parameter": 1,
                    "memory_address": 3,
                    "memory_ptr": 1,
                    "param": 1,
                    "parameter": 2,
                    "permission": 1,
                    "pointer": 1,
                    "register_value": 3,
                    "settings": 2,
                    "status": 1,
                    "value": 5,
                    "value_ptr": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003ce8"
            ],
            "code": "\n\n\nvoid update_control_registers_08006d24(int *value)\n\n{\n  if (*value != 0x40012400) {\n    if (*value == 0x40012800) {\n      _DAT_4002100c = _DAT_4002100c & 0xfffffbff;\n      _DAT_40021018 = _DAT_40021018 & 0xfffffbff;\n    }\n    return;\n  }\n  _DAT_4002100c = _DAT_4002100c & 0xfffffdff;\n  _DAT_40021018 = _DAT_40021018 & 0xfffffdff;\n  return;\n}\n\n",
            "current_name": "update_control_registers_08006d24",
            "entrypoint": "0x08006d24",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006d24": "update_control_registers_08006d24",
                "param_1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006d80": {
            "additional_data": {
                "DAT_20000014": {
                    "adc_config11": 1,
                    "adc_peripheral": 3,
                    "adc_peripheral_instance": 1,
                    "device_id": 1,
                    "peripheral": 1,
                    "peripheral_address": 1,
                    "peripheral_data": 1,
                    "peripheral_identifier": 1,
                    "peripheral_info": 1,
                    "peripheral_state": 1,
                    "peripheral_value": 2
                },
                "FUN_0800376c": {
                    "adc_calibration_start": 1,
                    "adc_config_channel": 1
                },
                "FUN_080038dc": {
                    "adc_calibration_start": 1,
                    "adc_init": 1
                },
                "FUN_080038e4": {
                    "get_adc_channel": 2
                },
                "FUN_08003a1c": {
                    "hal_adc_ex_calibration_start": 1,
                    "hal_adc_init": 1
                },
                "FUN_08003aa0": {
                    "adc_poll_conversion": 1,
                    "hal_adc_stop": 1
                },
                "FUN_08003bd8": {
                    "adc_start": 1,
                    "hal_adc_init": 1
                },
                "FUN_08003ce8": {
                    "adc_stop": 1,
                    "hal_adc_de_init": 1
                },
                "FUN_08003de4": {
                    "adc_get_value": 1,
                    "hal_adc_start": 1
                },
                "FUN_08003e20": {
                    "adc_config_channel": 1,
                    "adc_init": 1
                },
                "FUN_08006c60": {
                    "adc_deinit": 1,
                    "hal_adc_get_state": 1
                },
                "FUN_08006d80": {
                    "get_adc_value": 7,
                    "initialize_adc": 2,
                    "measure_adc_value": 2,
                    "measure_adc_voltage": 1,
                    "measure_analog_voltage": 1,
                    "read_adc_value": 15,
                    "read_analog_pin_value": 1,
                    "read_analog_value": 2
                },
                "FUN_08007320": {
                    "hal_adc_poll_for_conversion": 1,
                    "pinmap_peripheral": 1
                },
                "FUN_080091c6": {
                    "adc_get_state": 1,
                    "hal_adc_get_value": 1
                },
                "iVar1": {
                    "adc_status": 1,
                    "hal_status": 1,
                    "result": 7,
                    "status": 8
                },
                "local_10": {
                    "adc_calibration_factor": 1,
                    "adc_config8": 1,
                    "adc_config_param8": 1,
                    "adc_data_reg_offset": 1,
                    "adc_external_trigger_edge": 1,
                    "adc_init": 1,
                    "adc_init_result": 1,
                    "adc_init_status": 1,
                    "adc_o_continuous_conv_mode": 1,
                    "adc_offset": 1,
                    "adc_resolution": 1,
                    "adc_samplerate": 1,
                    "adc_start": 1,
                    "adc_stop_error_code": 1,
                    "adc_value2": 1,
                    "clock_prescaler": 1,
                    "config10": 2,
                    "continuous_mode": 1,
                    "conversion": 1,
                    "conversion_result": 1,
                    "dma_value": 1,
                    "local_var6": 1,
                    "result": 1,
                    "stop": 1
                },
                "local_1c": {
                    "adc": 1,
                    "adc_base_address": 1,
                    "adc_buffer": 1,
                    "adc_cal_peripheral": 1,
                    "adc_config": 1,
                    "adc_config7": 1,
                    "adc_config_param7": 1,
                    "adc_dma_access_mode": 1,
                    "adc_dma_continuous_requests": 1,
                    "adc_external_trigger": 2,
                    "adc_get_value_error_code": 1,
                    "adc_initialize": 1,
                    "adc_resolution": 1,
                    "adc_sampling_time": 1,
                    "adc_speed": 1,
                    "address": 1,
                    "channel_type": 1,
                    "common_value": 1,
                    "config9": 2,
                    "data_address": 1,
                    "external_trigger": 1,
                    "local_var5": 1,
                    "start": 1
                },
                "local_20": {
                    "adc_channel_rank": 1,
                    "adc_config10": 1,
                    "adc_config3": 1,
                    "adc_config_param10": 1,
                    "adc_continuous_conversion": 1,
                    "adc_deinit": 1,
                    "adc_get_state_error_code": 1,
                    "adc_init_status": 1,
                    "adc_n_oversampling_ratio": 1,
                    "adc_nbr_of_conversion": 1,
                    "adc_poll": 1,
                    "adc_scan_conversion_mode": 1,
                    "adc_state": 2,
                    "adc_value": 1,
                    "config8": 2,
                    "continuous_conversion": 1,
                    "conversion_result": 1,
                    "data_instantiation": 1,
                    "event": 1,
                    "get_state": 1,
                    "injected_offset_value": 1,
                    "interrupt": 1,
                    "local_var8": 1
                },
                "local_24": {
                    "adc_calibration": 1,
                    "adc_config6": 1,
                    "adc_config_param6": 1,
                    "adc_data_align": 1,
                    "adc_deinitialize": 1,
                    "adc_n_channels": 1,
                    "adc_poll_for_conversion_error_code": 1,
                    "adc_resolution": 1,
                    "adc_scan_conv_mode": 1,
                    "adc_scan_conversion": 1,
                    "adc_state": 1,
                    "adc_status3": 1,
                    "channel_config": 1,
                    "config7": 2,
                    "external_trigger_edge": 1,
                    "local_var4": 1,
                    "poll": 1,
                    "poll_conversion_result": 1,
                    "poll_result": 2,
                    "scan_conversion": 1,
                    "state": 1,
                    "threshold_value": 1,
                    "timeout": 1
                },
                "local_28": {
                    "adc_calibration": 1,
                    "adc_channel_num": 1,
                    "adc_config9": 1,
                    "adc_config_param9": 1,
                    "adc_data_align": 2,
                    "adc_data_alignment": 1,
                    "adc_eoc_selection": 1,
                    "adc_sampling_time": 1,
                    "adc_start_error_code": 1,
                    "adc_start_result": 1,
                    "adc_state": 1,
                    "adc_stop": 2,
                    "config6": 2,
                    "conversion_status": 1,
                    "data_alignment": 1,
                    "external_trigger": 1,
                    "gpio_init": 1,
                    "local_var7": 1,
                    "multimode_value": 1,
                    "period": 1,
                    "start": 1,
                    "state": 1
                },
                "local_2c": {
                    "adc_calibration_start_error_code": 1,
                    "adc_channel_config": 1,
                    "adc_config5": 1,
                    "adc_config_param5": 1,
                    "adc_dma_continuous_req": 1,
                    "adc_dma_continuous_requests": 1,
                    "adc_external_trig_conv": 1,
                    "adc_resolution": 1,
                    "adc_start": 1,
                    "adc_status2": 1,
                    "adc_trigger": 1,
                    "calibration_3": 1,
                    "calibration_config": 1,
                    "calibration_result": 1,
                    "channel_config": 1,
                    "config5": 2,
                    "config_status": 1,
                    "config_value3": 1,
                    "conversion_status": 1,
                    "dma_interrupts": 1,
                    "local_var3": 1,
                    "scan_conversion": 1,
                    "start": 1,
                    "start_status": 1
                },
                "local_30": {
                    "adc_calibration": 1,
                    "adc_channel_config_error_code": 1,
                    "adc_clock": 1,
                    "adc_config4": 1,
                    "adc_config_param4": 1,
                    "adc_config_result": 1,
                    "adc_continuous_conversion_mode": 1,
                    "adc_pre_scaler": 1,
                    "adc_prescaler": 1,
                    "adc_regular_config": 1,
                    "adc_scan_conv_mode": 1,
                    "adc_start_status": 1,
                    "adc_status": 1,
                    "calibration": 2,
                    "calibration_2": 1,
                    "calibration_status": 1,
                    "channel_config": 1,
                    "config4": 2,
                    "config_value2": 1,
                    "dma": 1,
                    "init_status": 1,
                    "local_var2": 1,
                    "resolution": 1
                },
                "local_34": {
                    "adc_config": 1,
                    "adc_config3": 1,
                    "adc_config_param3": 1,
                    "adc_configuration": 1,
                    "adc_engine": 1,
                    "adc_init_error_code": 1,
                    "adc_init_result": 1,
                    "adc_mode": 1,
                    "adc_prescaler": 1,
                    "adc_trigger": 3,
                    "calibrate_status": 1,
                    "calibration_1": 1,
                    "calibration_status": 2,
                    "calibration_value": 1,
                    "channel_config": 1,
                    "clock_prescaler": 1,
                    "config": 2,
                    "config3": 2,
                    "interrupt": 1,
                    "local_var1": 1
                },
                "local_38": {
                    "adc_handle": 27,
                    "adc_handler": 2,
                    "adc_instance": 1,
                    "pinmap_peripheral_return_value": 1
                },
                "local_3c": {
                    "adc_config2": 3,
                    "adc_config_channel": 1,
                    "adc_config_param2": 1,
                    "adc_conversion_data": 1,
                    "adc_data_align": 1,
                    "adc_data_alignment": 5,
                    "adc_reference": 1,
                    "adc_resolution": 1,
                    "calibration": 2,
                    "calibration_error_code": 1,
                    "calibration_start_success": 1,
                    "config2": 2,
                    "config_channel_2": 1,
                    "config_param2": 2,
                    "config_param_2": 1,
                    "config_rank": 1,
                    "conversion_type": 2,
                    "data_alignment": 1,
                    "reference": 1,
                    "sampling_time": 2
                },
                "local_40": {
                    "adc_config": 2,
                    "adc_config1": 3,
                    "adc_config_param1": 1,
                    "adc_error_code": 1,
                    "adc_prescaler": 1,
                    "adc_resolution": 7,
                    "adc_synchronous": 1,
                    "channel_rank": 1,
                    "config1": 2,
                    "config_channel_1": 1,
                    "config_channel_success": 1,
                    "config_param1": 2,
                    "config_param_1": 1,
                    "config_value": 1,
                    "continuous_conversion": 1,
                    "resolution": 5
                },
                "local_44": {
                    "adc_channel": 18,
                    "channel": 11,
                    "channel_num": 1,
                    "channel_number": 1
                },
                "local_46": {
                    "adc_value": 26,
                    "analog_value": 3,
                    "voltage": 1,
                    "voltage_value": 1
                },
                "param_1": {
                    "peripheral": 11,
                    "peripheral_address": 10,
                    "peripheral_id": 4,
                    "pin": 3,
                    "pin_number": 3
                },
                "uVar2": {
                    "adc_state": 11,
                    "state": 6
                }
            },
            "called": [
                "FUN_080038e4",
                "FUN_08003e20",
                "FUN_0800376c",
                "FUN_080038dc",
                "FUN_08003bd8",
                "FUN_08003aa0",
                "FUN_080091c6",
                "FUN_08003de4",
                "FUN_08003ce8",
                "FUN_08006c60",
                "FUN_08007320",
                "FUN_08003a1c"
            ],
            "calling": [
                "FUN_08008880"
            ],
            "code": "\nundefined2 read_adc_value_08006d80(undefined4 peripheral)\n\n{\n  int status;\n  uint adc_state;\n  undefined2 adc_value;\n  uint adc_channel;\n  undefined4 adc_resolution;\n  undefined4 adc_data_alignment;\n  int adc_handle;\n  undefined4 adc_trigger;\n  undefined4 config4;\n  undefined4 config5;\n  undefined4 adc_data_align;\n  undefined4 config7;\n  undefined4 config8;\n  undefined4 config9;\n  undefined4 config10;\n  \n  memset(&adc_handle,0,0x30);\n  adc_channel = 0;\n  adc_resolution = 0;\n  adc_data_alignment = 0;\n  adc_value = 0;\n  adc_handle = pinmap_peripheral(peripheral,&DAT_0800a5b8);\n  if (adc_handle == 0) {\n    adc_value = 0;\n  }\n  else {\n    adc_trigger = 0;\n    config4 = 0;\n    config5 = 0;\n    config7 = 0;\n    config9 = 0xe0000;\n    config10 = 0;\n    adc_data_align = 1;\n    config8 = 0;\n    DAT_20000014 = (undefined)peripheral;\n    status = HAL_ADC_Init(&adc_handle);\n    if (status == 0) {\n      adc_channel = get_adc_channel(peripheral);\n      if (adc_channel < 0x12) {\n        adc_resolution = 1;\n        adc_data_alignment = 2;\n        status = HAL_ADC_ConfigChannel(&adc_handle,&adc_channel);\n        if (status == 0) {\n          status = HAL_ADCEx_Calibration_Start(&adc_handle);\n          if (status == 0) {\n            status = HAL_ADC_Start(&adc_handle);\n            if (status == 0) {\n              status = HAL_ADC_PollForConversion(&adc_handle,10);\n              if (status == 0) {\n                adc_state = HAL_ADC_GetState(&adc_handle);\n                if ((adc_state & 0x200) != 0) {\n                  adc_value = HAL_ADC_GetValue(&adc_handle);\n                }\n                status = HAL_ADC_Stop(&adc_handle);\n                if (status == 0) {\n                  status = HAL_ADC_DeInit(&adc_handle);\n                  if (status != 0) {\n                    adc_value = 0;\n                  }\n                }\n                else {\n                  adc_value = 0;\n                }\n              }\n              else {\n                adc_value = 0;\n              }\n            }\n            else {\n              adc_value = 0;\n            }\n          }\n          else {\n            adc_value = 0;\n          }\n        }\n        else {\n          adc_value = 0;\n        }\n      }\n      else {\n        adc_value = 0;\n      }\n    }\n    else {\n      adc_value = 0;\n    }\n  }\n  return adc_value;\n}\n\n",
            "current_name": "read_adc_value_08006d80",
            "entrypoint": "0x08006d80",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006d80": "read_adc_value_08006d80",
                "iVar1": "status",
                "local_10": "config10",
                "local_1c": "config9",
                "local_20": "config8",
                "local_24": "config7",
                "local_28": "adc_data_align",
                "local_2c": "config5",
                "local_30": "config4",
                "local_34": "adc_trigger",
                "local_38": "adc_handle",
                "local_3c": "adc_data_alignment",
                "local_40": "adc_resolution",
                "local_44": "adc_channel",
                "local_46": "adc_value",
                "param_1": "peripheral",
                "uVar2": "adc_state"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006e68": {
            "additional_data": {
                "FUN_08006e68": {
                    "initialize_gpio": 30,
                    "initialize_gpio_port": 1
                },
                "HAL_GPIO_Init": {
                    "configure_gpio": 1
                },
                "_DAT_40010004": {
                    "gpio_config_register": 1,
                    "gpio_output_register": 1,
                    "register2": 1
                },
                "_DAT_40021018": {
                    "gpio_direction": 1,
                    "gpio_port_config": 1,
                    "register1": 1
                },
                "iVar1": {
                    "pin_function": 2,
                    "pin_function_idx": 1,
                    "pin_index": 1,
                    "pin_map_result": 2,
                    "pin_result": 1,
                    "pinmap": 1,
                    "pinmap_result": 23
                },
                "local_14": {
                    "configuration_3": 1,
                    "gpio_init_pin3": 1,
                    "gpio_init_speed": 1,
                    "gpio_init_structure_speed": 1,
                    "gpio_init_var3": 1,
                    "gpio_pin_mode_3": 1,
                    "gpio_speed": 4,
                    "local_var3": 1,
                    "mode2": 1,
                    "mode_2": 1,
                    "param2": 1,
                    "param3": 3,
                    "param_3_val": 1,
                    "pin3": 1,
                    "pin_config": 1,
                    "pin_config3": 1,
                    "pin_mode3": 1,
                    "pin_set": 1,
                    "pin_type": 1,
                    "register3": 1,
                    "speed": 1,
                    "timer_direction": 1,
                    "timer_init_value": 1,
                    "value14": 1,
                    "value3": 2
                },
                "local_18": {
                    "adc_init_value": 1,
                    "configuration_2": 1,
                    "gpio_init_pin2": 1,
                    "gpio_init_pull": 1,
                    "gpio_init_structure_pull": 1,
                    "gpio_init_var2": 1,
                    "gpio_output_type": 1,
                    "gpio_pin_mode_2": 1,
                    "gpio_pull": 2,
                    "local_var2": 1,
                    "param2": 3,
                    "param_2_val": 1,
                    "pin_config": 1,
                    "pin_config2": 1,
                    "pin_reset": 1,
                    "pull": 1,
                    "register2": 1,
                    "timer_prescaler": 1,
                    "value18": 1,
                    "value2": 2
                },
                "local_1c": {
                    "configuration_1": 1,
                    "gpio_init_mode": 1,
                    "gpio_init_pin1": 1,
                    "gpio_init_structure_mode": 1,
                    "gpio_init_var1": 1,
                    "gpio_mode": 4,
                    "gpio_pin_mode_1": 1,
                    "local_var1": 1,
                    "mode": 1,
                    "mode1": 1,
                    "mode_1": 1,
                    "param1": 4,
                    "param_1_val": 1,
                    "pin1": 1,
                    "pin_config": 1,
                    "pin_config1": 1,
                    "pin_mode1": 1,
                    "pin_output": 1,
                    "pin_speed": 1,
                    "register1": 1,
                    "timer_mode": 1,
                    "uart_init_value": 1,
                    "value1": 2,
                    "value1c": 1
                },
                "local_20": {
                    "gpio_init_bit_mask": 1,
                    "gpio_init_mask": 4,
                    "gpio_pin": 7,
                    "gpio_pin_mask": 2,
                    "pin": 2,
                    "pin_config": 1,
                    "pin_mask": 12,
                    "pin_number_mask": 1,
                    "pin_selection": 1
                },
                "param_1": {
                    "clock": 1,
                    "clock_config": 1,
                    "clock_index": 1,
                    "clock_param": 6,
                    "clock_pin": 15,
                    "clock_source": 1,
                    "param": 6
                },
                "uVar2": {
                    "gpio_clock": 1,
                    "gpio_clock_result": 1,
                    "gpio_port": 23,
                    "gpio_port_clock": 4,
                    "gpio_register": 1,
                    "port_clock": 1
                }
            },
            "called": [
                "FUN_08007438",
                "FUN_08007376",
                "FUN_08006bb8",
                "FUN_080040e8"
            ],
            "calling": [
                "FUN_08006092"
            ],
            "code": "\n\n\nvoid initialize_gpio_port_08006e68(undefined4 clock_pin)\n\n{\n  int pinmap_result;\n  undefined4 gpio_port;\n  uint pin_mask;\n  undefined4 param1;\n  undefined4 param2;\n  undefined4 gpio_speed;\n  \n  pinmap_result = pinmap_function((int)(char)DAT_20000014,&DAT_0800a6cc);\n  timer_enable_clock(clock_pin);\n  gpio_port = set_GPIO_Port_Clock((uint)((int)(char)DAT_20000014 << 0x18) >> 0x1c);\n  param1 = 2;\n  param2 = 0;\n  gpio_speed = 3;\n  _DAT_40021018 = _DAT_40021018 | 1;\n  switch((uint)(pinmap_result << 0x11) >> 0x19) {\n  case 1:\n    _DAT_40010004 = _DAT_40010004 | 0x7000001;\n    break;\n  case 2:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n    break;\n  case 3:\n    _DAT_40010004 = _DAT_40010004 | 0x7000002;\n    break;\n  case 4:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n    break;\n  case 5:\n    _DAT_40010004 = _DAT_40010004 | 0x7000004;\n    break;\n  case 6:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n    break;\n  case 7:\n    _DAT_40010004 = _DAT_40010004 | 0x7000008;\n    break;\n  case 8:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n    break;\n  case 9:\n    _DAT_40010004 = _DAT_40010004 | 0x7000030;\n    break;\n  case 10:\n    _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n    break;\n  case 0xb:\n    _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n    break;\n  case 0xc:\n    _DAT_40010004 = _DAT_40010004 | 0x70000c0;\n    break;\n  case 0xd:\n    _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n    break;\n  case 0xe:\n    _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n    break;\n  case 0xf:\n    _DAT_40010004 = _DAT_40010004 | 0x7000300;\n    break;\n  case 0x10:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n    break;\n  case 0x11:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n    break;\n  case 0x12:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n    break;\n  case 0x13:\n    _DAT_40010004 = _DAT_40010004 | 0x7000c00;\n    break;\n  case 0x14:\n    _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n    break;\n  case 0x15:\n    _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n    break;\n  case 0x16:\n    _DAT_40010004 = _DAT_40010004 | 0x7001000;\n    break;\n  case 0x17:\n    _DAT_40010004 = _DAT_40010004 & 0xffffefff | 0x7000000;\n    break;\n  case 0x1b:\n    _DAT_40010004 = _DAT_40010004 | 0x7008000;\n    break;\n  case 0x1c:\n    _DAT_40010004 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n    break;\n  case 0x21:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff;\n    break;\n  case 0x22:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n    break;\n  case 0x23:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n    break;\n  case 0x24:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n  }\n  pin_mask = 1 << (DAT_20000014 & 0xf) & 0xffff;\n  configure_gpio(gpio_port,&pin_mask);\n  return;\n}\n\n",
            "current_name": "initialize_gpio_port_08006e68",
            "entrypoint": "0x08006e68",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006e68": "initialize_gpio_port_08006e68",
                "HAL_GPIO_Init": "configure_gpio",
                "iVar1": "pinmap_result",
                "local_14": "gpio_speed",
                "local_18": "param2",
                "local_1c": "param1",
                "local_20": "pin_mask",
                "param_1": "clock_pin",
                "uVar2": "gpio_port"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007110": {
            "additional_data": {
                "FUN_08007110": {
                    "disable_timer": 2,
                    "disable_timer_clock": 29
                },
                "FUN_080074e0": {
                    "calculate_timer_values": 1,
                    "process_array": 2,
                    "process_data": 6,
                    "process_input": 1,
                    "process_int_array": 1,
                    "process_integer_param": 1,
                    "process_param_1": 1,
                    "process_parameter": 8,
                    "update_parameter": 3,
                    "update_parameter_1": 1
                },
                "param_1": {
                    "array": 1,
                    "array_param": 1,
                    "data": 1,
                    "data_array": 2,
                    "data_ptr": 1,
                    "input_parameter": 1,
                    "integer_param": 1,
                    "parameter": 1,
                    "parameter_array": 1,
                    "ptr_parameter": 1,
                    "timer_param": 1
                }
            },
            "called": [
                "FUN_080074e0"
            ],
            "calling": [
                "FUN_08005e2e"
            ],
            "code": "\nvoid disable_timer_clock_08007110(void)\n\n{\n  timer_disable_clock();\n  return;\n}\n\n",
            "current_name": "disable_timer_clock_08007110",
            "entrypoint": "0x08007110",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007110": "disable_timer_clock_08007110"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007118": {
            "additional_data": {
                "DAT_0800a6cc": {
                    "map_data": 1,
                    "pin_map": 1,
                    "pin_map_config": 1,
                    "pin_mapping_data": 1,
                    "pinmap_array": 1,
                    "pinmap_data": 1,
                    "pinmap_peripherals": 1,
                    "some_data": 1
                },
                "DAT_20000014": {
                    "data_variable": 1,
                    "flag_address": 1,
                    "peripheral_2": 1,
                    "peripheral_address": 1,
                    "peripheral_data": 1,
                    "peripheral_id": 1,
                    "peripheral_id_2": 1,
                    "peripheral_selected": 1,
                    "pin_map_function": 1,
                    "pinmap_base_address": 1,
                    "pwm_peripheral": 1,
                    "pwm_pin_number": 1,
                    "register_address": 1,
                    "something": 1,
                    "timer_num": 1
                },
                "FUN_08006092": {
                    "pinmap_peripheral": 3
                },
                "FUN_08006186": {
                    "get_timer_clk_freq": 1,
                    "hal_tim_pwm_init": 2
                },
                "FUN_08006390": {
                    "hal_tim_ex_pwmn_start": 2,
                    "hal_tim_pwm_start": 1
                },
                "FUN_0800643c": {
                    "get_pwm_channel": 1,
                    "hal_tim_pwm_config_channel": 2
                },
                "FUN_08006c7c": {
                    "hal_tim_pwm_start": 2,
                    "pinmap_function": 1
                },
                "FUN_08007118": {
                    "configure_peripheral": 1,
                    "configure_pwm": 2,
                    "configure_pwm_function": 1,
                    "configure_pwm_peripheral": 1,
                    "init_peripheral": 1,
                    "initialize_peripheral": 2,
                    "initialize_pwm": 21,
                    "initialize_pwm_function": 1,
                    "initialize_pwm_timer": 1
                },
                "FUN_08007320": {
                    "hal_tim_ex_pwmn_start": 1,
                    "hal_tim_ex_pwmn_stop": 1,
                    "memset": 1
                },
                "FUN_08007376": {
                    "get_pwm_channel": 2,
                    "hal_tim_pwm_init": 1
                },
                "FUN_080075dc": {
                    "hal_tim_ex_pwmn_start": 1,
                    "hal_tim_pwm_de_init": 1,
                    "hal_tim_pwm_start": 1
                },
                "FUN_080091c6": {
                    "hal_tim_pwm_config_channel": 1,
                    "pinmap_function": 2
                },
                "HAL_TIMEx_PWMN_Start": {
                    "start_pwm": 2,
                    "start_pwm_channel": 1,
                    "start_pwm_channel_n": 1,
                    "start_pwm_with_n_channel": 1
                },
                "HAL_TIM_PWM_ConfigChannel": {
                    "configure_pwm_channel": 5
                },
                "HAL_TIM_PWM_Init": {
                    "initialize_pwm": 3,
                    "initialize_pwm_config": 1,
                    "initialize_pwm_timer": 1
                },
                "HAL_TIM_PWM_Start": {
                    "start_pwm": 4,
                    "start_pwm_channel": 1
                },
                "HAL_TIM_PWM_Stop": {
                    "stop_pwm": 1
                },
                "getTimerClkFreq": {
                    "get_timer_clk_frequency": 1,
                    "get_timer_clock_frequency": 2
                },
                "get_pwm_channel": {
                    "get_channel_number": 1,
                    "get_pwm_channel": 3
                },
                "iVar2": {
                    "pwm_channel": 28
                },
                "iVar3": {
                    "config_result": 12,
                    "config_status": 3,
                    "init_result": 1,
                    "init_status": 1,
                    "pwm_config_result": 4,
                    "pwm_config_status": 2,
                    "result": 3,
                    "return_value": 1
                },
                "local_1b": {
                    "bool_value": 1,
                    "break_input": 1,
                    "channel_output": 1,
                    "config_flag": 1,
                    "config_n": 1,
                    "config_start_bit": 1,
                    "empty11": 1,
                    "flag": 3,
                    "init_status": 1,
                    "is_break_input": 1,
                    "local_1b": 1,
                    "local_var": 1,
                    "local_var11": 1,
                    "low": 1,
                    "oc_is_enabled": 1,
                    "pwm_config_flag": 1,
                    "reserved_10": 1,
                    "reserverd": 1,
                    "reset_flag": 1,
                    "stop_flag": 1,
                    "temp": 1,
                    "temp_var": 1,
                    "unused": 1,
                    "unused10": 1,
                    "unused_var4": 1,
                    "update_value10": 1,
                    "uq_flag": 1
                },
                "local_44": {
                    "break_value": 1,
                    "channel_compare": 1,
                    "channel_config9": 1,
                    "config_dma": 1,
                    "config_result": 1,
                    "dcc_enable": 1,
                    "direction": 1,
                    "empty10": 1,
                    "end_config": 1,
                    "fault_level": 1,
                    "local_44": 1,
                    "local_var10": 1,
                    "oc_fast_disable": 1,
                    "oc_inactive_low": 1,
                    "oc_output": 1,
                    "oc_pulse_n_minus_two": 1,
                    "ocnp_idle_state": 1,
                    "polarity2": 1,
                    "pulse_toggle": 1,
                    "pwm_config10": 1,
                    "pwm_ic_prescaler": 1,
                    "pwm_output_n_inverted_structure": 1,
                    "reserved_9": 1,
                    "reserverd": 1,
                    "s_rss_config_oc": 1,
                    "setting_2": 1,
                    "unused9": 1,
                    "unused_var3": 1,
                    "update_value9": 1
                },
                "local_48": {
                    "capture_compare_mode": 2,
                    "channel_config8": 1,
                    "channel_prescaler": 1,
                    "compare_value": 1,
                    "config_result": 1,
                    "counter": 1,
                    "empty9": 1,
                    "local_48": 1,
                    "local_var9": 1,
                    "oc_active_high": 1,
                    "oc_fast_enable": 1,
                    "oc_idle_state": 1,
                    "oc_pulse_n_plus_one": 1,
                    "oc_trigger": 1,
                    "polarity_inverted": 1,
                    "prescaler2": 1,
                    "pulse_count": 1,
                    "pwm_config9": 1,
                    "pwm_oc_idle_state": 1,
                    "pwm_output_structure": 1,
                    "reserved_8": 1,
                    "reserverd": 1,
                    "s_master_config_oc": 1,
                    "setting_1": 1,
                    "start_config": 1,
                    "unused8": 1,
                    "unused_var2": 1,
                    "update_value8": 1
                },
                "local_4c": {
                    "calculation_result3": 1,
                    "channel": 1,
                    "channel_config7": 1,
                    "channel_index": 1,
                    "channel_instance": 1,
                    "channel_num": 2,
                    "channel_value": 1,
                    "compare_val": 1,
                    "compare_value": 1,
                    "count": 1,
                    "counter_value": 1,
                    "empty8": 1,
                    "end_init": 1,
                    "local_4c": 1,
                    "local_var8": 1,
                    "modified_channel_count": 1,
                    "oc_pulse_n_minus_one": 1,
                    "param_3_counter": 1,
                    "param_3_minus1": 1,
                    "period": 1,
                    "power_of_two": 1,
                    "pulse_width_minus_one": 1,
                    "pwm_ch_state_init_structure": 1,
                    "pwm_count": 1,
                    "pwm_oc_fast_mode": 1,
                    "pwm_phase": 1,
                    "pwm_pulse": 1,
                    "resolution_adjusted": 1,
                    "setting_index": 1
                },
                "local_50": {
                    "break_polarity": 1,
                    "calculation_result2": 1,
                    "channel_config6": 1,
                    "cr2_config": 1,
                    "empty7": 1,
                    "filter": 2,
                    "gpio_alternate_func": 1,
                    "local_50": 1,
                    "local_var7": 1,
                    "oc_configure": 1,
                    "oc_mode": 2,
                    "oc_pulse_n": 1,
                    "ocn_startup_state": 1,
                    "pulse": 1,
                    "pulse_control": 1,
                    "pwm_break_state": 1,
                    "pwm_config8": 1,
                    "pwm_h_state_init_structure": 1,
                    "pwm_input_state": 1,
                    "pwm_instance": 1,
                    "pwm_pulse": 1,
                    "reserved_7": 1,
                    "settings": 1,
                    "start_init": 1,
                    "unused7": 1,
                    "unused_var1": 1,
                    "upcounter_value": 1
                },
                "local_54": {
                    "arr": 2,
                    "arr_value": 4,
                    "auto_reload": 1,
                    "auto_reload_val": 1,
                    "calculation_result1": 1,
                    "counter": 1,
                    "oc_preload": 1,
                    "period": 5,
                    "prescaler": 2,
                    "prescaler_value": 3,
                    "pulse_width": 1,
                    "pwm_divider": 1,
                    "pwm_period": 2,
                    "timer_auto_reload_reg": 1,
                    "timer_count": 1,
                    "timer_period": 2,
                    "timer_prescaler": 1
                },
                "local_58": {
                    "gpio_config": 1,
                    "gpio_port": 2,
                    "peripheral": 2,
                    "peripheral_handle": 2,
                    "peripheral_id": 1,
                    "peripheral_instance": 1,
                    "peripheral_mapping": 1,
                    "peripheral_pin": 1,
                    "peripheral_pinmap": 1,
                    "peripheral_status": 1,
                    "pinmap_result": 4,
                    "pwm_handle": 5,
                    "pwm_peripheral": 1,
                    "tim_handle": 2,
                    "tim_handle_type_def": 1,
                    "timer_handle": 4
                },
                "local_5c": {
                    "break_enable": 1,
                    "channel_5c": 1,
                    "channel_config5": 1,
                    "compare4": 1,
                    "dead_time": 2,
                    "delay": 1,
                    "empty6": 1,
                    "idle_state": 1,
                    "local_var6": 1,
                    "oc_pulse": 1,
                    "oc_slow_state": 1,
                    "ocn_idle_status": 1,
                    "preload": 1,
                    "pulse_lock": 1,
                    "pwm_config7": 1,
                    "pwm_config_oc_fast_mode": 1,
                    "pwm_config_value7": 1,
                    "pwm_oc_fast": 1,
                    "pwm_oc_polarity": 1,
                    "pwm_output_mode6": 1,
                    "pwm_prescaler_n_minus2_inverted": 1,
                    "pwm_pulse_generator_n": 1,
                    "reserved_6": 1,
                    "s_config_oc": 1,
                    "start_flag": 1,
                    "start_pwm": 1,
                    "timer_config": 1,
                    "unused6": 1,
                    "update_value7": 1
                },
                "local_60": {
                    "break_polarity": 1,
                    "channel_60": 1,
                    "channel_config4": 1,
                    "compare3": 1,
                    "control": 1,
                    "deadtime": 1,
                    "delayed_mode": 1,
                    "duty_cycle": 2,
                    "empty5": 1,
                    "local_var5": 1,
                    "oc_fast_state": 1,
                    "oc_idle_status": 1,
                    "oc_preload": 1,
                    "output_state": 1,
                    "period_n": 1,
                    "polarity": 1,
                    "pulse_delay": 1,
                    "pwm_config6": 1,
                    "pwm_config_oc_polarity": 1,
                    "pwm_config_value6": 1,
                    "pwm_counter_mode": 1,
                    "pwm_oc_polarity": 1,
                    "pwm_output_mode5": 1,
                    "pwm_prescaler_n_minus2": 1,
                    "pwm_pulse_generator": 1,
                    "reserved_5": 1,
                    "s_config_oc": 1,
                    "unused5": 1,
                    "update_value6": 1
                },
                "local_64": {
                    "break": 1,
                    "capture": 1,
                    "channel_64": 1,
                    "channel_config3": 1,
                    "compare2": 1,
                    "deadtime": 1,
                    "duty_cycle_val": 1,
                    "empty4": 1,
                    "fast_mode": 1,
                    "local_var4": 1,
                    "mode": 1,
                    "oc_fast_mode": 1,
                    "oc_polarity": 1,
                    "oc_slow_mode": 1,
                    "period": 1,
                    "pulse_duration_zero": 1,
                    "pulse_n": 1,
                    "pulse_value": 1,
                    "pwm_config5": 1,
                    "pwm_config_oc_mode": 1,
                    "pwm_config_value5": 1,
                    "pwm_output_mode4": 1,
                    "pwm_period": 1,
                    "pwm_prescaler": 1,
                    "pwm_prescaler_n_minus1_inverted": 1,
                    "reserved_4": 1,
                    "s_master_config_oc": 1,
                    "start_stop_mode": 1,
                    "unused4": 1,
                    "update_value5": 1
                },
                "local_68": {
                    "capture": 1,
                    "channel_68": 1,
                    "channel_config2": 1,
                    "compare": 1,
                    "compare1": 1,
                    "compare_val": 1,
                    "counter_mode": 1,
                    "empty3": 1,
                    "fast_mode": 1,
                    "local_var3": 1,
                    "oc_idle_state": 1,
                    "oc_mode": 1,
                    "ocnp_mode": 1,
                    "polarity": 1,
                    "polarity_inversed": 1,
                    "preload": 1,
                    "pulse": 2,
                    "pulse_duration_negated": 1,
                    "pwm_config4": 1,
                    "pwm_config_pulse": 1,
                    "pwm_config_value4": 1,
                    "pwm_output_mode3": 1,
                    "pwm_polarity": 2,
                    "pwm_prescaler_n_minus1": 1,
                    "reserved_3": 1,
                    "s_prescaler_config": 1,
                    "unused3": 1,
                    "update_value4": 1
                },
                "local_6c": {
                    "autoreload": 1,
                    "channel_6c": 1,
                    "channel_config1": 1,
                    "compare": 1,
                    "empty2": 1,
                    "filter": 1,
                    "initial_pulse": 1,
                    "little_endian": 1,
                    "local_var2": 1,
                    "oc_fast_mode": 1,
                    "oc_polarity": 1,
                    "oc_slow_mode": 1,
                    "period": 1,
                    "polarity": 2,
                    "prescaler": 1,
                    "pulse": 1,
                    "pulse_duration_inverse": 1,
                    "pwm_compare_value": 1,
                    "pwm_config3": 1,
                    "pwm_config_repetition_cnt": 1,
                    "pwm_config_value3": 1,
                    "pwm_output_mode2": 1,
                    "pwm_prescaler_n_inverted": 1,
                    "pwm_pulse": 1,
                    "reserved_2": 1,
                    "s_config_oc": 1,
                    "unused2": 1,
                    "update_value3": 1
                },
                "local_70": {
                    "channel_70": 1,
                    "empty1": 1,
                    "initial_period": 1,
                    "input_state": 1,
                    "local_var1": 1,
                    "oc_fast_mode": 1,
                    "oc_mode": 1,
                    "oc_polarity": 1,
                    "polarity": 2,
                    "pre_emption_priority": 1,
                    "preload": 1,
                    "prescaler": 1,
                    "prescaler_val": 1,
                    "psc": 1,
                    "pulse_duration_low": 1,
                    "pwm_config2": 1,
                    "pwm_config_prescaler": 1,
                    "pwm_config_value2": 1,
                    "pwm_oc_mode": 2,
                    "pwm_output_mode1": 1,
                    "pwm_prescaler_n": 1,
                    "pwm_start": 1,
                    "repetition_counter": 1,
                    "reserved_1": 1,
                    "s_master_config": 1,
                    "unused1": 1,
                    "update_value2": 1
                },
                "local_74": {
                    "arr": 1,
                    "auto_reload": 1,
                    "auto_reload_val": 1,
                    "ccr_value": 1,
                    "channel_74": 1,
                    "channel_pulse": 1,
                    "oc_idle_mode": 1,
                    "oc_init_type": 1,
                    "oc_init_type_def": 1,
                    "oc_mode": 1,
                    "prescaler": 7,
                    "pulse_duration_high": 1,
                    "pulse_width": 2,
                    "pwm_config1": 1,
                    "pwm_config_period": 1,
                    "pwm_config_value1": 1,
                    "pwm_configured": 1,
                    "pwm_mode": 1,
                    "pwm_prescaler": 4,
                    "update_value1": 1
                },
                "memset": {
                    "clear_memory": 2,
                    "clear_peripheral_data": 1,
                    "initialize_peripheral": 1,
                    "set_memory": 1
                },
                "param_1": {
                    "peripheral": 13,
                    "peripheral_address": 10,
                    "peripheral_id": 5,
                    "pin": 1,
                    "pin_number": 2
                },
                "param_2": {
                    "desired_frequency": 1,
                    "frequency": 11,
                    "pwm_frequency": 2,
                    "timer_clk_freq": 1,
                    "timer_freq_div": 1,
                    "timer_frequency": 11,
                    "timer_period": 3,
                    "timer_prescaler": 1
                },
                "param_3": {
                    "channel": 1,
                    "channel_count": 6,
                    "channel_number": 3,
                    "config_value": 1,
                    "count": 2,
                    "param3": 4,
                    "param_3": 3,
                    "param_plus_minus_1": 1,
                    "period": 1,
                    "pulse_width": 1,
                    "pwm_resolution": 2,
                    "resolution": 1,
                    "timer_count": 1,
                    "timer_period": 1,
                    "timer_prescaler": 2,
                    "value": 1
                },
                "param_4": {
                    "channel": 3,
                    "channel_config": 3,
                    "channel_value": 1,
                    "compare_value": 1,
                    "config": 4,
                    "config_param": 1,
                    "configuration": 2,
                    "configuration_value": 1,
                    "param4": 2,
                    "param_4": 2,
                    "polarity": 1,
                    "pwm_config": 6,
                    "pwm_configuration": 2,
                    "pwm_initial_duty": 1,
                    "pwm_pulse": 1
                },
                "param_5": {
                    "condition": 1,
                    "condition_value": 1,
                    "enable_pwm": 3,
                    "flag": 1,
                    "is_enabled": 2,
                    "is_pwm_enabled": 1,
                    "is_start": 1,
                    "is_start_enabled": 1,
                    "param5": 2,
                    "param_5": 1,
                    "polarity": 1,
                    "pwm_enable": 1,
                    "pwm_start": 1,
                    "pwm_start_flag": 1,
                    "start": 2,
                    "start_flag": 2,
                    "start_pwm": 7,
                    "use_advanced_mode": 1,
                    "use_pwm_init": 1
                },
                "pinmap_function": {
                    "find_function_pin": 1,
                    "get_function_mapping": 1,
                    "get_function_pin": 1,
                    "map_function": 1
                },
                "pinmap_peripheral": {
                    "find_peripheral_pin": 1,
                    "get_peripheral_mapping": 1,
                    "get_peripheral_pin": 1,
                    "map_peripheral": 1
                },
                "uVar1": {
                    "timer_clk_freq": 23,
                    "timer_clock_frequency": 2,
                    "timer_frequency": 1
                }
            },
            "called": [
                "FUN_08006092",
                "FUN_08006186",
                "FUN_08007376",
                "FUN_0800643c",
                "FUN_080091c6",
                "FUN_08006c7c",
                "FUN_08006390",
                "FUN_080075dc",
                "FUN_08007320"
            ],
            "calling": [
                "FUN_080088e0"
            ],
            "code": "\nvoid initialize_pwm_function_08007118(undefined4 peripheral,uint timer_frequency,int channel_count,undefined4 pwm_config,char start_pwm)\n\n{\n  uint timer_clk_freq;\n  int pwm_channel;\n  int config_result;\n  undefined4 prescaler;\n  undefined4 pwm_oc_mode;\n  undefined4 polarity;\n  undefined4 pulse;\n  undefined4 oc_polarity;\n  undefined4 duty_cycle;\n  undefined4 dead_time;\n  int pwm_handle;\n  int period;\n  undefined4 oc_mode;\n  int channel_num;\n  undefined4 capture_compare_mode;\n  undefined4 channel_config9;\n  undefined flag;\n  \n  clear_memory(&pwm_handle,0,0x40);\n  prescaler = 0;\n  pwm_oc_mode = 0;\n  polarity = 0;\n  pulse = 0;\n  oc_polarity = 0;\n  duty_cycle = 0;\n  dead_time = 0;\n  pwm_handle = map_peripheral(peripheral,&DAT_0800a6cc);\n  if (pwm_handle != 0) {\n    timer_clk_freq = get_timer_clock_frequency();\n    period = timer_clk_freq / timer_frequency - 1;\n    channel_num = channel_count + -1;\n    capture_compare_mode = 0;\n    oc_mode = 0;\n    channel_config9 = 0;\n    flag = 0;\n    if (start_pwm == '\\x01') {\n      DAT_20000014 = (undefined)peripheral;\n      pwm_channel = initialize_pwm(&pwm_handle);\n      if (pwm_channel != 0) {\n        return;\n      }\n    }\n    pwm_channel = get_pwm_channel(peripheral);\n    if ((((pwm_channel == 0) || (pwm_channel == 4)) || (pwm_channel == 8)) || ((pwm_channel == 0xc || (pwm_channel == 0x18)))) {\n      prescaler = 0x60;\n      polarity = 0;\n      oc_polarity = 0;\n      pulse = 0;\n      dead_time = 0;\n      duty_cycle = 0;\n      pwm_oc_mode = pwm_config;\n      config_result = configure_pwm_channel(&pwm_handle,&prescaler,pwm_channel);\n      if (config_result == 0) {\n        timer_clk_freq = map_function(peripheral,&DAT_0800a6cc);\n        if ((timer_clk_freq & 0x100000) == 0) {\n          start_pwm(&pwm_handle,pwm_channel);\n        }\n        else {\n          start_pwm(&pwm_handle,pwm_channel);\n        }\n      }\n    }\n  }\n  return;\n}\n\n",
            "current_name": "initialize_pwm_function_08007118",
            "entrypoint": "0x08007118",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007118": "initialize_pwm_function_08007118",
                "HAL_TIMEx_PWMN_Start": "start_pwm",
                "HAL_TIM_PWM_ConfigChannel": "configure_pwm_channel",
                "HAL_TIM_PWM_Init": "initialize_pwm",
                "HAL_TIM_PWM_Start": "start_pwm",
                "getTimerClkFreq": "get_timer_clock_frequency",
                "iVar2": "pwm_channel",
                "iVar3": "config_result",
                "local_1b": "flag",
                "local_44": "channel_config9",
                "local_48": "capture_compare_mode",
                "local_4c": "channel_num",
                "local_50": "oc_mode",
                "local_54": "period",
                "local_58": "pwm_handle",
                "local_5c": "dead_time",
                "local_60": "duty_cycle",
                "local_64": "oc_polarity",
                "local_68": "pulse",
                "local_6c": "polarity",
                "local_70": "pwm_oc_mode",
                "local_74": "prescaler",
                "memset": "clear_memory",
                "param_1": "peripheral",
                "param_2": "timer_frequency",
                "param_3": "channel_count",
                "param_4": "pwm_config",
                "param_5": "start_pwm",
                "pinmap_function": "map_function",
                "pinmap_peripheral": "map_peripheral",
                "uVar1": "timer_clk_freq"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080071e4": {
            "additional_data": {
                "DAT_0800a6cc": {
                    "mapping_data": 1
                },
                "FUN_080071e4": {
                    "disable_pwm_channel": 1,
                    "stop_or_deinit_pwm": 1,
                    "stop_pwm": 11,
                    "stop_pwm_channel": 4,
                    "stop_pwm_channel_if_valid": 1,
                    "stop_pwm_on_peripheral": 5,
                    "stop_pwm_on_pin": 2,
                    "stop_pwm_peripheral": 3,
                    "stop_timed_pwm": 1,
                    "stop_timed_pwm_signal_on_peripheral": 1,
                    "stop_timers_based_on_channel": 1
                },
                "HAL_TIMEx_PWMN_Stop": {
                    "stop_pwmn_timer": 1
                },
                "HAL_TIM_PWM_DeInit": {
                    "deinit_pwm": 1
                },
                "HAL_TIM_PWM_Stop": {
                    "stop_pwm_timer": 1
                },
                "get_pwm_channel": {
                    "get_pwm_channel": 1
                },
                "iVar1": {
                    "channel": 8,
                    "pwm_channel": 15,
                    "pwm_channel_value": 2
                },
                "local_50": {
                    "gpio_pins": 1,
                    "peripheral_array": 5,
                    "peripheral_handle": 1,
                    "peripheral_mappings": 1,
                    "pwm_array": 1,
                    "pwm_channel": 4,
                    "pwm_channel_array": 2,
                    "pwm_channel_list": 1,
                    "pwm_channels": 6,
                    "pwm_config": 1,
                    "pwm_handle": 2,
                    "pwm_handles": 1,
                    "pwm_timers": 2,
                    "tim_channels": 1,
                    "timed_pwm_array": 1,
                    "timers": 1
                },
                "param_1": {
                    "device": 2,
                    "peripheral": 22,
                    "peripheral_address": 4,
                    "pin": 3
                },
                "pinmap_peripheral": {
                    "get_peripheral_mapping": 1
                },
                "uVar2": {
                    "function": 3,
                    "function_flag": 2,
                    "function_id": 2,
                    "function_mapping": 1,
                    "function_pin_map": 1,
                    "function_pinmap": 1,
                    "function_result": 3,
                    "function_value": 2,
                    "pin_function": 4,
                    "pin_map_function": 1,
                    "pinmap_function_value": 1,
                    "pinmap_result": 3,
                    "pwm_function": 1
                }
            },
            "called": [
                "FUN_08007376",
                "FUN_08005e2e",
                "FUN_08006c7c",
                "FUN_080063c0",
                "FUN_08007320",
                "FUN_08006460"
            ],
            "calling": [
                "FUN_08008990"
            ],
            "code": "\nvoid stop_timed_pwm_signal_on_peripheral_080071e4(undefined4 peripheral)\n\n{\n  int pwm_channel;\n  uint pin_function;\n  int pwm_channels [17];\n  \n  pwm_channels[0] = get_peripheral_mapping(peripheral,&DAT_0800a6cc);\n  if ((pwm_channels[0] != 0) &&\n     ((((pwm_channel = get_pwm_channel(peripheral), pwm_channel == 0 || (pwm_channel == 4)) || (pwm_channel == 8)) ||\n      ((pwm_channel == 0xc || (pwm_channel == 0x18)))))) {\n    pin_function = pinmap_function(peripheral,&DAT_0800a6cc);\n    if ((pin_function & 0x100000) == 0) {\n      stop_pwm_timer(pwm_channels,pwm_channel);\n    }\n    else {\n      stop_pwmn_timer(pwm_channels,pwm_channel);\n    }\n    deinit_pwm(pwm_channels);\n  }\n  return;\n}\n\n",
            "current_name": "stop_timed_pwm_signal_on_peripheral_080071e4",
            "entrypoint": "0x080071e4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080071e4": "stop_timed_pwm_signal_on_peripheral_080071e4",
                "HAL_TIMEx_PWMN_Stop": "stop_pwmn_timer",
                "HAL_TIM_PWM_DeInit": "deinit_pwm",
                "HAL_TIM_PWM_Stop": "stop_pwm_timer",
                "iVar1": "pwm_channel",
                "local_50": "pwm_channels",
                "param_1": "peripheral",
                "pinmap_peripheral": "get_peripheral_mapping",
                "uVar2": "pin_function"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800723c": {
            "additional_data": {
                "FUN_08003760": {
                    "fetch_data": 1,
                    "get_data": 1,
                    "get_system_tick": 1,
                    "get_tick": 1,
                    "get_value": 1,
                    "initialize": 1,
                    "initialize_hardware": 1,
                    "initialize_system": 9,
                    "perform_some_operation": 1,
                    "retrieve_data": 4,
                    "retrieve_value": 1,
                    "undefined_func": 1
                },
                "FUN_0800723c": {
                    "get_current_tick": 14,
                    "get_current_ticks": 1,
                    "get_current_time": 10,
                    "get_system_tick": 1,
                    "get_system_time": 2,
                    "get_tick_count": 2
                },
                "HAL_GetTick": {
                    "get_current_tick_count": 1,
                    "get_sys_tick": 1,
                    "get_system_tick": 1,
                    "get_tick": 3,
                    "get_tick_count": 1,
                    "get_tick_value": 1,
                    "retrieve_tick": 1,
                    "retrieve_tick_value": 1,
                    "system_timer": 1
                },
                "HalGetTickCount": {
                    "get_tick_count": 1
                },
                "undefined4": {
                    "uint32_t": 1
                }
            },
            "called": [
                "FUN_08003760"
            ],
            "calling": [
                "FUN_08008abc"
            ],
            "code": "\nvoid get_current_tick_0800723c(void)\n\n{\n  get_tick();\n  return;\n}\n\n",
            "current_name": "get_current_tick_0800723c",
            "entrypoint": "0x0800723c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800723c": "get_current_tick_0800723c",
                "HAL_GetTick": "get_tick"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007244": {
            "called": [],
            "calling": [
                "FUN_08007246"
            ],
            "code": "\nvoid FUNC_08007244(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08007244",
            "entrypoint": "0x08007244",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08007244": "FUNC_08007244"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08007246": {
            "additional_data": {
                "FUNC_08007244": {
                    "increase_tick": 1,
                    "increment_system_tick": 6,
                    "increment_systick": 1,
                    "increment_tick": 18,
                    "initialize_hal": 1,
                    "initialize_module": 1,
                    "perform_task_one": 1,
                    "perform_tick_increment": 1
                },
                "FUN_08003748": {
                    "custom_systick_handler": 1,
                    "execute_systick_handler": 1,
                    "handle_no_os_sys_tick": 1,
                    "handle_no_os_sys_tick_handler": 1,
                    "handle_no_os_systick": 14,
                    "no_operating_system_systick_handler": 1,
                    "no_os_handler": 1,
                    "no_os_sys_tick_handler": 2,
                    "no_os_systick_handler": 6,
                    "perform_task_three": 1,
                    "process_data": 1
                },
                "FUN_08004046": {
                    "handle_sys_tick": 3,
                    "handle_sys_tick_interrupt": 11,
                    "handle_sys_tick_irq": 5,
                    "handle_system_tick_interrupt": 1,
                    "handle_systick_interrupt": 1,
                    "handle_systick_irq": 2,
                    "perform_task": 1,
                    "perform_task_two": 1,
                    "process_sys_tick_irq": 1,
                    "sys_tick_irq_handler": 1,
                    "system_tick_irq_handler": 1,
                    "systick_interrupt_handler": 1,
                    "systick_irq_handler": 1
                },
                "FUN_08007246": {
                    "execute_system_tick": 1,
                    "handle_sys_tick": 1,
                    "handle_sys_tick_event": 1,
                    "handle_sys_tick_interrupt": 3,
                    "handle_system_tick": 4,
                    "handle_tick_interrupt": 2,
                    "initialize_system": 1,
                    "process_sys_tick": 1,
                    "process_tick_interrupt": 2,
                    "update_sys_tick": 1,
                    "update_sys_tick_handler": 2,
                    "update_system_tick": 7,
                    "update_tick_and_handler": 2,
                    "update_tick_and_systick": 1,
                    "update_tick_handler": 2
                },
                "HAL_IncTick": {
                    "increment_system_tick": 2,
                    "increment_tick": 1
                },
                "HAL_SYSTICK_IRQHandler": {
                    "handle_sy_stick_interrupt": 1,
                    "handle_system_tick_interrupt": 1,
                    "system_tick_interrupt_handler": 1,
                    "system_tick_irq_handler": 1
                },
                "noOsSystickHandler": {
                    "custom_sys_tick_handler": 1,
                    "handle_no_os_systick": 2
                }
            },
            "called": [
                "FUN_08007244",
                "FUN_08004046",
                "FUN_08003748"
            ],
            "calling": [],
            "code": "\nvoid update_system_tick_08007246(void)\n\n{\n  increment_system_tick();\n  handle_sy_stick_interrupt();\n  handle_no_os_systick();\n  return;\n}\n\n",
            "current_name": "update_system_tick_08007246",
            "entrypoint": "0x08007246",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007246": "update_system_tick_08007246",
                "HAL_IncTick": "increment_system_tick",
                "HAL_SYSTICK_IRQHandler": "handle_sy_stick_interrupt",
                "noOsSystickHandler": "handle_no_os_systick"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007258": {
            "additional_data": {
                "FUN_08007258": {
                    "configure_gpio_port": 2,
                    "configure_gpio_port_clock": 1,
                    "init_gpio_port": 2,
                    "initialize_gpio": 16,
                    "initialize_gpio_pin": 1,
                    "initialize_gpio_port": 9
                },
                "HAL_GPIO_Init": {
                    "configure_gpio": 1,
                    "initialize_gpio": 1
                },
                "_DAT_40010004": {
                    "gpi_ox_moder": 1,
                    "gpio_config_reg": 1,
                    "gpio_init_register": 1,
                    "gpio_mode_register": 1,
                    "gpio_port_register2": 1,
                    "gpioc_moder_register": 1,
                    "register_2": 2
                },
                "_DAT_40021018": {
                    "gpio_port_clock_register": 1,
                    "gpio_port_ctrl_reg": 1,
                    "gpio_port_register1": 1,
                    "gpio_pull_up_control_register": 1,
                    "gpioa_moder_register": 1,
                    "port_c_reg": 1,
                    "register_1": 2
                },
                "local_14": {
                    "bit_mask": 1,
                    "constant": 5,
                    "constant_3": 1,
                    "constant_three": 1,
                    "constant_value": 5,
                    "flag": 1,
                    "gpio_mode": 1,
                    "gpio_mode_push_pull": 1,
                    "local_var": 4,
                    "local_var3": 1,
                    "local_variable": 5,
                    "local_variable_1": 1,
                    "parameter14": 1,
                    "value": 1
                },
                "local_18": {
                    "config_2": 1,
                    "config_param_2_copy": 1,
                    "config_value": 1,
                    "gpio_config_2_temp": 1,
                    "local_param3": 4,
                    "local_param_3": 6,
                    "local_port_pull": 1,
                    "local_var2": 1,
                    "param2_copy": 1,
                    "param3": 1,
                    "param3_copy": 7,
                    "param_3": 1,
                    "param_3_copy": 2,
                    "param_3_new": 1,
                    "parameter18": 1
                },
                "local_1c": {
                    "config_1": 1,
                    "config_param_1_copy": 1,
                    "gpio_config_1_temp": 1,
                    "initial_value": 1,
                    "local_param2": 4,
                    "local_param_2": 6,
                    "local_port_mode": 1,
                    "local_var1": 1,
                    "param1_copy": 1,
                    "param2": 1,
                    "param2_copy": 7,
                    "param_2": 1,
                    "param_2_copy": 2,
                    "param_2_new": 1,
                    "parameter1_c": 1
                },
                "local_20": {
                    "gpio_config": 1,
                    "gpio_pin": 3,
                    "gpio_pin_mask": 2,
                    "pin_bit_mask": 1,
                    "pin_mask": 24
                },
                "param_1": {
                    "pin": 2,
                    "pin_number": 29
                },
                "param_2": {
                    "config_param_1": 1,
                    "configuration": 1,
                    "configuration_1": 1,
                    "gpio_config_1": 1,
                    "gpio_init_structure": 1,
                    "init_value": 1,
                    "param1": 1,
                    "param2": 12,
                    "param_2": 8,
                    "param_init1": 1,
                    "parameter2": 1,
                    "pin_configure_mode": 1,
                    "port_mode": 1
                },
                "param_3": {
                    "config_param_2": 1,
                    "configuration": 1,
                    "configuration_2": 1,
                    "gpio_config_2": 1,
                    "gpio_pin_state": 1,
                    "mode": 1,
                    "param2": 1,
                    "param3": 12,
                    "param_3": 8,
                    "param_init2": 1,
                    "parameter3": 1,
                    "pin_configure_pull": 1,
                    "port_pull": 1
                },
                "set_GPIO_Port_Clock": {
                    "configure_gpio_clock": 1,
                    "initialize_gpio_port_clock": 1
                },
                "uVar1": {
                    "clock_setting": 1,
                    "gpio_clock": 9,
                    "gpio_port": 17,
                    "gpio_port_clock": 2,
                    "port_address": 1,
                    "port_clock": 1
                }
            },
            "called": [
                "FUN_08006bb8",
                "FUN_080040e8"
            ],
            "calling": [
                "FUN_08008990"
            ],
            "code": "\n\n\nvoid initialize_gpio_port_08007258(uint pin_number,undefined4 param2,undefined4 param3)\n\n{\n  undefined4 gpio_port;\n  uint pin_mask;\n  undefined4 param2_copy;\n  undefined4 param3_copy;\n  undefined4 constant_value;\n  \n  gpio_port = configure_gpio_clock((pin_number << 0x18) >> 0x1c);\n  pin_mask = 1 << (pin_number & 0xf) & 0xffff;\n  constant_value = 3;\n  _DAT_40021018 = _DAT_40021018 | 1;\n  if ((pin_number - 0xd & 0xff) < 2) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n  }\n  if (((pin_number == 0xf) || (pin_number == 0x13)) || (pin_number == 0x14)) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n  }\n  param2_copy = param2;\n  param3_copy = param3;\n  configure_gpio(gpio_port,&pin_mask);\n  return;\n}\n\n",
            "current_name": "initialize_gpio_port_08007258",
            "entrypoint": "0x08007258",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007258": "initialize_gpio_port_08007258",
                "HAL_GPIO_Init": "configure_gpio",
                "local_14": "constant_value",
                "local_18": "param3_copy",
                "local_1c": "param2_copy",
                "local_20": "pin_mask",
                "param_1": "pin_number",
                "param_2": "param2",
                "param_3": "param3",
                "set_GPIO_Port_Clock": "configure_gpio_clock",
                "uVar1": "gpio_port"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080072d8": {
            "additional_data": {
                "FUN_080042e2": {
                    "process_pin_write": 1,
                    "reverse_bytes": 1,
                    "reverse_params_if_zero": 1,
                    "set_pin_state": 1
                },
                "FUN_080072d8": {
                    "set_gpio_level": 3,
                    "set_gpio_output": 1,
                    "set_gpio_pin": 1,
                    "set_gpio_pin_state": 4,
                    "set_gpio_state": 4,
                    "set_pin_state": 1,
                    "set_pin_value": 1,
                    "toggle_pin_state": 1,
                    "write_digital_pin": 1,
                    "write_gpio": 4,
                    "write_pin": 1,
                    "write_pin_based_on_condition": 3,
                    "write_pin_based_on_param": 1,
                    "write_pin_based_on_param3_value": 1,
                    "write_pin_state": 1,
                    "write_pin_status": 2,
                    "write_pin_with_state": 1
                },
                "HAL_GPIO_WritePin": {
                    "set_gpio_pin_state": 1,
                    "set_gpio_state": 2,
                    "set_pin_state": 2,
                    "set_pin_status": 1,
                    "write_gpio": 3,
                    "write_gpio_pin": 1,
                    "write_gpio_state": 2,
                    "write_pin": 2
                },
                "param_1": {
                    "base_address": 1,
                    "gpio": 1,
                    "gpio_port": 22,
                    "pin": 1,
                    "port": 6
                },
                "param_2": {
                    "gpio_pin": 19,
                    "pin": 9,
                    "pin_number": 2,
                    "pin_state": 1
                },
                "param_3": {
                    "condition": 3,
                    "is_high": 1,
                    "level": 3,
                    "pin_state": 6,
                    "pin_value": 1,
                    "state": 13,
                    "status": 2,
                    "value": 2
                },
                "param_4": {
                    "delay": 1,
                    "param": 12,
                    "param1": 1,
                    "param4": 12,
                    "param_4": 3,
                    "param_pointer": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_080042e2"
            ],
            "calling": [
                "FUN_08008a24"
            ],
            "code": "\nvoid set_gpio_pin_state_080072d8(undefined4 gpio_port,undefined2 gpio_pin,int state,undefined4 param4)\n\n{\n  if (state == 0) {\n    write_gpio(gpio_port,gpio_pin,0,param4,param4);\n    return;\n  }\n  write_gpio(gpio_port,gpio_pin,1,param4,param4);\n  return;\n}\n\n",
            "current_name": "set_gpio_pin_state_080072d8",
            "entrypoint": "0x080072d8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080072d8": "set_gpio_pin_state_080072d8",
                "HAL_GPIO_WritePin": "write_gpio",
                "param_1": "gpio_port",
                "param_2": "gpio_pin",
                "param_3": "state",
                "param_4": "param4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080072f0": {
            "additional_data": {
                "FUN_080042d4": {
                    "get_something_from_param1_and_param2": 1,
                    "perform_operation": 1,
                    "process_data": 1,
                    "read_pin_value": 1,
                    "reverse_bits": 1
                },
                "FUN_080072f0": {
                    "read_and_return_gpio_pin": 1,
                    "read_and_return_gpio_state": 2,
                    "read_and_return_pin_state": 4,
                    "read_and_return_pin_value": 1,
                    "read_gpio": 1,
                    "read_gpio_and_return": 1,
                    "read_gpio_pin": 6,
                    "read_gpio_pin_and_return": 1,
                    "read_pin": 7,
                    "read_pin_and_return": 3,
                    "read_pin_from_gpio": 2,
                    "read_pin_status": 1,
                    "read_pin_value": 1
                },
                "param_1": {
                    "data": 1,
                    "gpio_port": 17,
                    "num": 1,
                    "param1": 1,
                    "param_1": 1,
                    "parameter1": 1,
                    "pin": 3,
                    "pin_config": 1,
                    "pin_group": 1,
                    "port": 4
                },
                "param_2": {
                    "gpio_pin": 7,
                    "length": 1,
                    "param2": 1,
                    "param_2": 2,
                    "parameter2": 1,
                    "pin": 8,
                    "pin_mode": 1,
                    "pin_num": 1,
                    "pin_number": 6,
                    "pin_port": 1,
                    "pin_type": 1,
                    "port": 1
                },
                "param_3": {
                    "arg3": 1,
                    "param3": 14,
                    "param_3": 14,
                    "u32_param1": 1,
                    "unused1": 1
                },
                "param_4": {
                    "arg4": 1,
                    "param4": 14,
                    "param_4": 14,
                    "u32_param2": 1,
                    "unused2": 1
                }
            },
            "called": [
                "FUN_080042d4"
            ],
            "calling": [
                "FUN_08008a6c"
            ],
            "code": "\nvoid read_pin_from_gpio_080072f0(undefined4 gpio_port,undefined2 pin,undefined4 param_3,undefined4 param4)\n\n{\n  HAL_GPIO_ReadPin(gpio_port,pin,param_3,param4,param4);\n  return;\n}\n\n",
            "current_name": "read_pin_from_gpio_080072f0",
            "entrypoint": "0x080072f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080072f0": "read_pin_from_gpio_080072f0",
                "param_1": "gpio_port",
                "param_2": "pin",
                "param_4": "param4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080072fa": {
            "additional_data": {
                "FUN_080035b8": {
                    "config_system_clock": 1,
                    "configure_clock": 1,
                    "configure_system_clock": 5,
                    "execute_initialization": 1,
                    "execute_task": 1,
                    "function_2": 1,
                    "initialize_clock": 1,
                    "initialize_miscellaneous": 1,
                    "initialize_peripherals": 1,
                    "perform_action": 3,
                    "perform_additional_setup": 1,
                    "perform_hal_initialization": 1,
                    "perform_operation": 1,
                    "perform_system_configuration": 1,
                    "process_data": 1,
                    "subfunction_b": 1,
                    "void_function": 1
                },
                "FUN_08003724": {
                    "configure_peripherals": 1,
                    "function_1": 1,
                    "get_configuration": 3,
                    "get_data": 4,
                    "get_initialization_status": 1,
                    "get_status": 1,
                    "get_system_info": 1,
                    "get_undefined4_value": 1,
                    "get_unknown_value": 1,
                    "initialize_hal": 5,
                    "perform_task": 1,
                    "retrieve_data": 1,
                    "subfunction_a": 1,
                    "undefined4_function": 1
                },
                "FUN_080072fa": {
                    "initialize": 1,
                    "initialize_and_configure_system": 2,
                    "initialize_hal_and_system_clock": 4,
                    "initialize_hardware": 4,
                    "initialize_system": 20
                },
                "HAL_Init": {
                    "": 1,
                    "hardware_abstraction_layer_initialize": 1,
                    "init_hardware_abstraction_layer": 1,
                    "initialize_hal": 14,
                    "initialize_hardware": 3,
                    "initialize_hardware_layer": 1
                },
                "SystemClock_Config": {
                    "": 1,
                    "configure_clock": 1,
                    "configure_system_clock": 20
                }
            },
            "called": [
                "FUN_08003724",
                "FUN_080035b8"
            ],
            "calling": [
                "FUN_080036a2"
            ],
            "code": "\nvoid initialize_hal_and_system_clock_080072fa(void)\n\n{\n  initialize_hal();\n  configure_system_clock();\n  return;\n}\n\n",
            "current_name": "initialize_hal_and_system_clock_080072fa",
            "entrypoint": "0x080072fa",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080072fa": "initialize_hal_and_system_clock_080072fa",
                "HAL_Init": "initialize_hal",
                "SystemClock_Config": "configure_system_clock"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007306": {
            "additional_data": {
                "0": {
                    "0": 1
                },
                "FUN_08007306": {
                    "find_matching_value": 1,
                    "find_param_value": 2,
                    "find_parameter_value": 2,
                    "find_value": 4,
                    "find_value_by_index": 1,
                    "find_value_by_key": 2,
                    "find_value_from_list": 1,
                    "find_value_in_array": 11,
                    "find_value_in_list": 2,
                    "find_value_index": 2,
                    "find_value_offset": 3
                },
                "PTR_4": {
                    "result_ptr": 1
                },
                "param_1": {
                    "index_to_find": 1,
                    "key": 1,
                    "search_value": 2,
                    "target": 1,
                    "target_value": 11,
                    "value": 7,
                    "value_to_find": 8
                },
                "param_2": {
                    "array": 12,
                    "array_ptr": 3,
                    "data": 3,
                    "data_array": 6,
                    "data_ptr": 1,
                    "key_value_array": 1,
                    "list": 2,
                    "list_ptr": 1,
                    "param_array": 1,
                    "parameter_array": 1
                },
                "ptr": {
                    "value_ptr": 1
                }
            },
            "called": [
                "FUN_08007306"
            ],
            "calling": [
                "FUN_08007320",
                "FUN_08007306"
            ],
            "code": "\nundefined4 find_value_in_array_08007306(int target_value,char *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      return 0;\n    }\n    if (*array == target_value) break;\n    array = array + 0xc;\n  }\n  return *(undefined4 *)(array + 4);\n}\n\n",
            "current_name": "find_value_in_array_08007306",
            "entrypoint": "0x08007306",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007306": "find_value_in_array_08007306",
                "param_1": "target_value",
                "param_2": "array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007320": {
            "additional_data": {
                "FUN_08007306": {
                    "check_peripheral": 1,
                    "pinmap_find_peripheral": 5
                },
                "FUN_08007320": {
                    "find_peripheral": 28,
                    "find_peripheral_address": 1,
                    "find_peripheral_function": 1,
                    "initialize_peripheral": 1
                },
                "param_1": {
                    "input": 5,
                    "input_code": 1,
                    "input_num": 1,
                    "input_param": 1,
                    "input_parameter": 2,
                    "input_value": 15,
                    "peripheral_id": 4,
                    "status": 1,
                    "value": 1
                },
                "param_2": {
                    "buffer": 1,
                    "peripheral_name": 3
                },
                "uVar1": {
                    "found_peripheral": 1,
                    "peripheral": 6,
                    "peripheral_address": 5,
                    "peripheral_found": 8,
                    "peripheral_value": 2,
                    "result": 7
                }
            },
            "called": [
                "FUN_08007306"
            ],
            "calling": [
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08008500",
                "FUN_08007118",
                "FUN_08006d80",
                "FUN_080084b0",
                "FUN_080071e4"
            ],
            "code": "\nundefined4 find_peripheral_address_08007320(int input_value)\n\n{\n  undefined4 peripheral_found;\n  \n  if (input_value != -1) {\n    peripheral_found = pinmap_find_peripheral();\n    return peripheral_found;\n  }\n  return 0;\n}\n\n",
            "current_name": "find_peripheral_address_08007320",
            "entrypoint": "0x08007320",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007320": "find_peripheral_address_08007320",
                "param_1": "input_value",
                "uVar1": "peripheral_found"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007332": {
            "additional_data": {
                "FUN_08007332": {
                    "find_char_offset": 1,
                    "find_character": 3,
                    "find_character_in_list": 1,
                    "find_character_index": 2,
                    "find_character_position": 1,
                    "find_element": 1,
                    "find_element_by_id": 1,
                    "find_element_in_array": 1,
                    "find_element_index": 2,
                    "find_element_position": 1,
                    "find_index_in_array": 1,
                    "find_matching_value": 1,
                    "find_value_by_parameter": 1,
                    "find_value_from_array": 1,
                    "find_value_in_array": 5,
                    "find_value_in_list": 2,
                    "find_value_index": 6
                },
                "param_1": {
                    "char_to_find": 1,
                    "character": 1,
                    "character_code": 1,
                    "desired_value": 1,
                    "element": 4,
                    "index_to_find": 1,
                    "parameter": 1,
                    "search_value": 1,
                    "target": 2,
                    "target_character": 2,
                    "target_index": 1,
                    "target_num": 1,
                    "target_value": 2,
                    "value": 7,
                    "value_to_find": 5
                },
                "param_2": {
                    "array": 13,
                    "array_of_values": 2,
                    "array_ptr": 6,
                    "character_array": 1,
                    "character_list": 1,
                    "characters": 1,
                    "data": 1,
                    "input_string": 1,
                    "list": 1,
                    "list_ptr": 1,
                    "string": 2,
                    "string_array": 1
                },
                "param_3": {
                    "characters": 1
                }
            },
            "called": [
                "FUN_08007332"
            ],
            "calling": [
                "FUN_08007332",
                "FUN_0800734a"
            ],
            "code": "\nint find_value_index_08007332(int value,char *array)\n\n{\n  while( true ) {\n    if (*(int *)(array + 4) == 0) {\n      return -1;\n    }\n    if (*(int *)(array + 4) == value) break;\n    array = array + 0xc;\n  }\n  return (int)*array;\n}\n\n",
            "current_name": "find_value_index_08007332",
            "entrypoint": "0x08007332",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007332": "find_value_index_08007332",
                "param_1": "value",
                "param_2": "array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800734a": {
            "additional_data": {
                "FUN_08007332": {
                    "check_pin": 1
                },
                "FUN_0800734a": {
                    "find_pin": 7,
                    "find_pin_by_param": 1,
                    "find_pin_or_default": 4,
                    "find_pin_or_error": 5,
                    "find_pin_or_fail": 2,
                    "find_pin_value": 1,
                    "find_valid_pin": 11
                },
                "param_1": {
                    "input_value": 1,
                    "pin": 2,
                    "pin_code": 2,
                    "pin_count": 1,
                    "pin_id": 8,
                    "pin_index": 5,
                    "pin_number": 5,
                    "pin_param": 1,
                    "pin_parameter": 1,
                    "pin_value": 5
                },
                "param_2": {
                    "pin_name": 1
                },
                "uVar1": {
                    "found_pin": 4,
                    "pin": 1,
                    "pin_found": 1,
                    "pin_result": 14,
                    "pin_value": 1,
                    "result": 9,
                    "valid_pin": 1
                }
            },
            "called": [
                "FUN_08007332"
            ],
            "calling": [
                "FUN_08008d30",
                "FUN_080084b0"
            ],
            "code": "\nundefined4 find_valid_pin_0800734a(int pin_id)\n\n{\n  undefined4 pin_result;\n  \n  if (pin_id != 0) {\n    pin_result = pinmap_find_pin();\n    return pin_result;\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "find_valid_pin_0800734a",
            "entrypoint": "0x0800734a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800734a": "find_valid_pin_0800734a",
                "param_1": "pin_id",
                "uVar1": "pin_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800735a": {
            "additional_data": {
                "0xffffffff": {
                    "not_found": 1
                },
                "DAT_": {
                    "": 1,
                    "dat_": 1
                },
                "DAT_C": {
                    "end_of_array_value": 1
                },
                "DAT_FFFFFFFF": {
                    "not_found": 1
                },
                "FUN_0800735a": {
                    "find_index_in_array": 1,
                    "find_offset": 1,
                    "find_parameter_value": 1,
                    "find_value": 4,
                    "find_value_address": 1,
                    "find_value_by_index": 1,
                    "find_value_by_key": 1,
                    "find_value_from_list": 1,
                    "find_value_in_array": 8,
                    "find_value_in_list": 2,
                    "find_value_index": 6,
                    "find_value_offset": 4
                },
                "PTR_": {
                    "": 1,
                    "ptr_": 1
                },
                "PTR_8": {
                    "next_value_offset": 1
                },
                "break_label_1": {
                    "found_value": 1
                },
                "param_1": {
                    "key": 1,
                    "search_value": 1,
                    "target": 1,
                    "target_value": 5,
                    "value": 14,
                    "value_to_find": 9
                },
                "param_2": {
                    "array": 18,
                    "array_of_values": 2,
                    "array_ptr": 2,
                    "buffer": 1,
                    "data": 2,
                    "data_array": 2,
                    "list": 1,
                    "list_ptr": 2,
                    "values_list": 1
                },
                "result": {
                    "value_found": 1
                },
                "return": {
                    "found_value": 1
                }
            },
            "called": [
                "FUN_0800735a"
            ],
            "calling": [
                "FUN_08007376",
                "FUN_0800735a"
            ],
            "code": "\nundefined4 find_value_in_array_0800735a(int value,char *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      found_value 0xffffffff;\n    }\n    if (*array == value) break;\n    array = array + 0xc;\n  }\n  found_value *(undefined4 *)(array + 8);\n}\n\n",
            "current_name": "find_value_in_array_0800735a",
            "entrypoint": "0x0800735a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800735a": "find_value_in_array_0800735a",
                "param_1": "value",
                "param_2": "array",
                "return": "found_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007376": {
            "additional_data": {
                "FUN_08007376": {
                    "find_and_return_function": 5,
                    "find_function": 10,
                    "find_function_address": 1,
                    "find_function_from_param": 1,
                    "find_function_in_pinmap": 2,
                    "find_function_or_default": 4,
                    "find_function_or_error": 1,
                    "find_function_or_fail": 2,
                    "find_function_or_negative_one": 1,
                    "find_function_or_return": 2,
                    "find_function_result": 1,
                    "initialize_pinmap": 1
                },
                "param_1": {
                    "input": 7,
                    "input_param": 3,
                    "input_value": 19,
                    "value": 2
                },
                "uVar1": {
                    "function_address": 1,
                    "function_found": 1,
                    "function_pointer": 1,
                    "function_result": 13,
                    "result": 14,
                    "return_value": 1
                }
            },
            "called": [
                "FUN_0800735a"
            ],
            "calling": [
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08007118",
                "FUN_08006e68",
                "FUN_08006c60",
                "FUN_080071e4",
                "FUN_08006c7c"
            ],
            "code": "\nundefined4 find_and_return_function_08007376(int input_value)\n\n{\n  undefined4 result;\n  \n  if (input_value == -1) {\n    return 0xffffffff;\n  }\n  result = pinmap_find_function();\n  return result;\n}\n\n",
            "current_name": "find_and_return_function_08007376",
            "entrypoint": "0x08007376",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007376": "find_and_return_function_08007376",
                "param_1": "input_value",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800738a": {
            "additional_data": {
                "0xc": {
                    "offset": 1
                },
                "FUN_0800738a": {
                    "check_for_match": 1,
                    "check_if_value_exists": 1,
                    "check_match": 2,
                    "check_param": 3,
                    "check_param_existence": 1,
                    "check_param_in_array": 1,
                    "check_param_match": 1,
                    "check_value": 1,
                    "check_value_in_array": 4,
                    "compare_param1_with_array": 1,
                    "compare_param_and_param2": 1,
                    "compare_params": 2,
                    "compare_values": 4,
                    "find_character": 1,
                    "find_match": 2,
                    "find_param_in_array": 1,
                    "find_value": 1,
                    "find_value_in_array": 1,
                    "find_value_index": 1,
                    "match_value_in_array": 1
                },
                "array_value": {
                    "current_value": 1
                },
                "param_1": {
                    "character_to_find": 1,
                    "first_value": 1,
                    "input_value": 6,
                    "num1": 1,
                    "number": 1,
                    "search_value": 1,
                    "target": 1,
                    "value": 11,
                    "value1": 3,
                    "value_1": 2,
                    "value_to_check": 3
                },
                "param_2": {
                    "array": 15,
                    "array_of_values": 4,
                    "array_to_search": 1,
                    "data": 1,
                    "data_array": 2,
                    "input_array": 1,
                    "param_array": 1,
                    "str2": 1,
                    "string": 2,
                    "value2": 1,
                    "values": 1,
                    "values_array": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001cd0",
                "FUN_080088e0",
                "FUN_08000a64",
                "FUN_0800021a",
                "FUN_080005f8",
                "FUN_08008990"
            ],
            "code": "\nundefined4 check_value_in_array_0800738a(int value,char *array)\n\n{\n  if (value == -1) {\n    return 0;\n  }\n  while( true ) {\n    if (*array == -1) {\n      return 0;\n    }\n    if (value == *array) break;\n    array = array + 0xc;\n  }\n  return 1;\n}\n\n",
            "current_name": "check_value_in_array_0800738a",
            "entrypoint": "0x0800738a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800738a": "check_value_in_array_0800738a",
                "param_1": "value",
                "param_2": "array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080073ae": {
            "additional_data": {
                "FUN_080073ae": {
                    "check_or_set_zero_param": 1,
                    "compare": 1,
                    "compare_and_return": 4,
                    "compare_and_return_non_zero": 1,
                    "compare_and_return_nonzero": 3,
                    "compare_and_return_smaller": 4,
                    "compare_and_return_smallest": 1,
                    "compare_and_return_zero": 5,
                    "compare_and_return_zero_if_equal": 1,
                    "find_common_value": 2,
                    "find_difference": 1,
                    "find_differing_param": 1,
                    "find_matching_number": 1,
                    "find_non_zero": 2,
                    "find_non_zero_param": 1,
                    "find_nonzero_param": 1,
                    "get_nonzero_value": 1
                },
                "param_1": {
                    "first_num": 1,
                    "first_number": 1,
                    "first_param": 3,
                    "input1": 1,
                    "num1": 2,
                    "number_1": 2,
                    "result": 1,
                    "value1": 12,
                    "value_1": 8
                },
                "param_2": {
                    "input2": 1,
                    "num2": 2,
                    "number_2": 2,
                    "second_num": 1,
                    "second_number": 1,
                    "second_param": 3,
                    "value2": 12,
                    "value_2": 9
                }
            },
            "called": [],
            "calling": [
                "FUN_08008078",
                "FUN_080077b0"
            ],
            "code": "\nint compare_and_return_non_zero_080073ae(int value1,int value2)\n\n{\n  if (value1 != value2) {\n    if (value1 == 0) {\n      return value2;\n    }\n    if (value2 == 0) {\n      return value1;\n    }\n    value1 = 0;\n  }\n  return value1;\n}\n\n",
            "current_name": "compare_and_return_non_zero_080073ae",
            "entrypoint": "0x080073ae",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080073ae": "compare_and_return_non_zero_080073ae",
                "param_1": "value1",
                "param_2": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080073c0": {
            "additional_data": {
                "DAT_200005f4": {
                    "callback_function": 14,
                    "callback_function_pointer": 4,
                    "callback_function_ptr": 2,
                    "callback_pointer": 4,
                    "callback_ptr": 1,
                    "user_function": 1
                },
                "DAT_2000060c": {
                    "callback_argument": 7,
                    "callback_data": 10,
                    "callback_function_arg": 1,
                    "callback_function_parameter": 2,
                    "callback_parameter": 7,
                    "parameter": 1,
                    "user_data": 1
                },
                "FUN_080073c0": {
                    "execute_callback": 20,
                    "execute_callback_function": 9,
                    "execute_code_function": 1,
                    "execute_user_code": 1
                },
                "callbackFunction": {
                    "callback_function": 1
                },
                "callbackFunctionPointer": {
                    "callback_function_pointer": 1
                },
                "callback_function": {
                    "callback": 1
                },
                "code": {
                    "callback_function": 5,
                    "user_code": 1
                },
                "executeCallbackFunction": {
                    "execute_callback_function": 1
                },
                "executeCodeFunction": {
                    "execute_code": 1
                },
                "execute_callback_function": {
                    "execute_callback": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005cb4"
            ],
            "code": "\nvoid execute_callback_function_080073c0(void)\n\n{\n  if (DAT_200005f4 != (callback_function *)0x0) {\n    (*DAT_200005f4)(DAT_2000060c);\n  }\n  return;\n}\n\n",
            "current_name": "execute_callback_function_080073c0",
            "entrypoint": "0x080073c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080073c0": "execute_callback_function_080073c0",
                "code": "callback_function"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080073e8": {
            "additional_data": {
                "DAT_": {
                    "": 2
                },
                "DAT_0123456": {
                    "dat_0123456": 1
                },
                "DAT_XXXXX": {
                    "unmodified": 1
                },
                "Do_nothing_block_with_infinite_loop": {
                    "loop_body": 1
                },
                "FUN_080073e8": {
                    "endless_loop": 1,
                    "execute_infinite_loop": 1,
                    "infinite_loop": 27,
                    "loop_forever": 1,
                    "run_infinite_loop": 1
                },
                "PTR_": {
                    "": 1
                },
                "PTR_XXXXX": {
                    "unmodified": 1
                },
                "PTR_abcdefg": {
                    "ptr_abcdefg": 1
                },
                "do": {
                    "do": 2,
                    "while": 1
                },
                "original_variable_name_1": {
                    "loop_counter": 1
                },
                "true": {
                    "condition": 1,
                    "true": 3
                }
            },
            "called": [
                "FUN_080073e8"
            ],
            "calling": [
                "FUN_080073e8",
                "FUN_080035b8"
            ],
            "code": "\nvoid execute_infinite_loop_080073e8(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "current_name": "execute_infinite_loop_080073e8",
            "entrypoint": "0x080073e8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080073e8": "execute_infinite_loop_080073e8"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080073ec": {
            "additional_data": {
                "": {
                    "": 1
                },
                "FUN_080073ec": {
                    "configure_memory": 1,
                    "initialize_device": 2,
                    "initialize_device_registers": 1,
                    "initialize_hardware": 5,
                    "initialize_memory": 5,
                    "initialize_memory_configuration": 1,
                    "initialize_peripheral": 6,
                    "initialize_peripheral_registers": 1,
                    "initialize_registers": 6,
                    "initialize_system": 1,
                    "set_configuration": 1,
                    "set_hardware_configurations": 1
                },
                "_DAT_40021000": {
                    "config_register": 1,
                    "config_register1": 1,
                    "control_register": 6,
                    "control_register1": 2,
                    "control_register_1": 1,
                    "device_configuration_register": 1,
                    "device_register1": 1,
                    "hardware_config1": 1,
                    "hardware_register1": 1,
                    "memory_address1": 1,
                    "memory_config1": 1,
                    "peripheral_control_register": 2,
                    "peripheral_control_register1": 2,
                    "peripheral_register1": 1,
                    "register": 1,
                    "register1": 6,
                    "registers": 1,
                    "system_status": 1
                },
                "_DAT_40021004": {
                    "config": 1,
                    "config_register2": 1,
                    "configuration_register": 1,
                    "control_register": 1,
                    "control_register2": 2,
                    "control_register_2": 1,
                    "data_register": 1,
                    "device_control_register": 1,
                    "device_register2": 1,
                    "flags": 1,
                    "hardware_config2": 1,
                    "hardware_register2": 1,
                    "mask_register": 2,
                    "memory_address2": 1,
                    "memory_config2": 1,
                    "peripheral_configuration_register": 2,
                    "peripheral_control_register2": 2,
                    "peripheral_register2": 1,
                    "register2": 6,
                    "status_register": 2,
                    "system_flags": 1
                },
                "_DAT_40021008": {
                    "control": 1,
                    "data_register": 4,
                    "device_register3": 1,
                    "device_status_register": 1,
                    "hardware_config3": 1,
                    "hardware_register3": 1,
                    "interrupt_config": 1,
                    "interrupt_control_register": 2,
                    "interrupt_priority": 1,
                    "interrupt_register": 1,
                    "io_control": 1,
                    "memory_address": 2,
                    "memory_address3": 1,
                    "memory_config3": 1,
                    "peripheral_address_register": 1,
                    "peripheral_register3": 1,
                    "register3": 6,
                    "status_register": 1,
                    "timer_configuration_register": 1,
                    "timer_register": 1,
                    "user_permission": 1
                },
                "_DAT_e000ed08": {
                    "device_register4": 1,
                    "hardware_config4": 1,
                    "hardware_register4": 1,
                    "interrupt_control": 1,
                    "interrupt_control_register": 3,
                    "interrupt_flags": 1,
                    "interrupt_mask": 1,
                    "interrupt_register": 5,
                    "memory_address4": 1,
                    "memory_config4": 1,
                    "peripheral_register4": 1,
                    "register4": 6,
                    "special_register": 1,
                    "status": 1,
                    "system_configuration_register": 1,
                    "system_control": 2,
                    "system_control_register": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_08003658"
            ],
            "code": "\n\n\nvoid initialize_peripheral_registers_080073ec(void)\n\n{\n  _DAT_40021000 = _DAT_40021000 & 0xfef2ffff | 1;\n  _DAT_40021004 = _DAT_40021004 & 0xf8800000;\n  _DAT_40021008 = 0x9f0000;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "current_name": "initialize_peripheral_registers_080073ec",
            "entrypoint": "0x080073ec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080073ec": "initialize_peripheral_registers_080073ec"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007438": {
            "additional_data": {
                "DAT_20000610": {
                    "address1": 1,
                    "address_1": 1,
                    "config_value_ptr": 1,
                    "data_pointer1": 1,
                    "data_ptr_1": 1,
                    "device_config_ptr1": 1,
                    "first_data": 1,
                    "flag1_pointer": 1,
                    "flag1_ptr": 1,
                    "flag_data1": 1,
                    "flag_data_1": 1,
                    "flag_pointer1": 1,
                    "input_pointer1": 1,
                    "matching_param1": 1,
                    "memory_data_flag1": 1,
                    "param_ptr_1": 1,
                    "pointer1": 1,
                    "ptr_settings1": 1,
                    "ptr_status1": 1,
                    "register20000610": 1,
                    "register_1_data": 1,
                    "register_value1": 1,
                    "setting_ptr0": 1,
                    "status_ptr1": 2,
                    "status_ptr_1": 1,
                    "status_value_ptr1": 1,
                    "value_pointer1": 1
                },
                "DAT_20000614": {
                    "address2": 1,
                    "address_2": 1,
                    "config_value_ptr": 1,
                    "data_pointer2": 1,
                    "data_ptr_2": 1,
                    "device_config_ptr2": 1,
                    "flag2_pointer": 1,
                    "flag2_ptr": 1,
                    "flag_data2": 1,
                    "flag_data_2": 1,
                    "flag_pointer2": 1,
                    "input_pointer2": 1,
                    "matching_param2": 1,
                    "memory_data_flag2": 1,
                    "param_ptr_2": 1,
                    "pointer2": 1,
                    "ptr_settings2": 1,
                    "ptr_status2": 1,
                    "register20000614": 1,
                    "register_2_data": 1,
                    "register_value2": 1,
                    "second_data": 1,
                    "setting_ptr1": 1,
                    "status_ptr2": 2,
                    "status_ptr_2": 1,
                    "status_value_ptr2": 1,
                    "value_pointer2": 1
                },
                "DAT_20000618": {
                    "address3": 1,
                    "address_3": 1,
                    "config_value_ptr": 1,
                    "data_pointer3": 1,
                    "data_ptr_3": 1,
                    "device_config_ptr3": 1,
                    "flag2_ptr": 1,
                    "flag3_pointer": 1,
                    "flag_data3": 1,
                    "flag_data_3": 1,
                    "flag_pointer3": 1,
                    "input_pointer3": 1,
                    "matching_param3": 1,
                    "memory_data_flag3": 1,
                    "param_ptr_3": 1,
                    "pointer3": 1,
                    "ptr_settings3": 1,
                    "ptr_status3": 1,
                    "register20000618": 1,
                    "register_3_data": 1,
                    "register_value3": 1,
                    "setting_ptr2": 1,
                    "status_ptr3": 2,
                    "status_ptr_3": 1,
                    "status_value_ptr3": 1,
                    "third_data": 1,
                    "value_pointer3": 1
                },
                "DAT_2000061c": {
                    "address4": 1,
                    "address_4": 1,
                    "config_value_ptr": 1,
                    "data_pointer4": 1,
                    "data_ptr_4": 1,
                    "device_config_ptr4": 1,
                    "flag2_ptr": 1,
                    "flag4_pointer": 1,
                    "flag_data4": 1,
                    "flag_data_4": 1,
                    "flag_pointer4": 1,
                    "fourth_data": 1,
                    "input_pointer4": 1,
                    "matching_param4": 1,
                    "memory_data_flag4": 1,
                    "param_ptr_4": 1,
                    "pointer4": 1,
                    "ptr_settings4": 1,
                    "ptr_status4": 1,
                    "register2000061c": 1,
                    "register_4_data": 1,
                    "register_value4": 1,
                    "setting_ptr3": 1,
                    "status_ptr4": 2,
                    "status_ptr_4": 1,
                    "status_value_ptr4": 1,
                    "value_pointer4": 1
                },
                "FUN_08007438": {
                    "configure_device": 1,
                    "configure_flags": 1,
                    "initialize_data": 1,
                    "initialize_flags": 2,
                    "process_param": 2,
                    "set_flags": 1,
                    "set_flags_based_on_value": 1,
                    "set_memory_flags": 1,
                    "update_data": 1,
                    "update_data_flags": 3,
                    "update_data_status": 1,
                    "update_flags": 2,
                    "update_flags_and_pointers": 1,
                    "update_memory_data": 1,
                    "update_memory_flags": 1,
                    "update_register_values": 1,
                    "update_registers": 1,
                    "update_settings": 3,
                    "update_status": 3,
                    "update_status_flags": 3
                },
                "_DAT_40021018": {
                    "device_flag1": 1,
                    "device_flags": 1,
                    "flag1": 5,
                    "flag_register1": 2,
                    "flag_register_1": 1,
                    "flags_1": 1,
                    "interrupt_flags": 1,
                    "memory_flag1": 1,
                    "memory_flags_1": 1,
                    "register_1": 1,
                    "register_flag": 1,
                    "settings_flag1": 1,
                    "status_flag1": 3,
                    "status_flags": 1,
                    "status_flags_1": 1,
                    "status_register1": 1,
                    "updated_flag1": 1
                },
                "_DAT_4002101c": {
                    "device_control_flags": 1,
                    "device_flag2": 1,
                    "flag2": 3,
                    "flag_register2": 2,
                    "flag_register_2": 1,
                    "flags": 1,
                    "flags_2": 1,
                    "memory_flag2": 1,
                    "memory_flags_2": 1,
                    "register_2": 1,
                    "register_flag2": 1,
                    "settings_flag2": 1,
                    "status_flag2": 2,
                    "status_flags2": 1,
                    "status_flags_2": 1,
                    "status_register2": 1,
                    "system_control_register": 1,
                    "updated_flag2": 1
                },
                "param_1": {
                    "address": 1,
                    "config_value": 1,
                    "data": 1,
                    "data_pointer": 2,
                    "data_ptr": 3,
                    "device_config": 1,
                    "input": 2,
                    "input_pointer": 2,
                    "input_value": 1,
                    "memory_address": 3,
                    "param": 1,
                    "parameter": 1,
                    "register_value": 2,
                    "setting": 1,
                    "settings": 2,
                    "status": 3,
                    "status_ptr": 1,
                    "status_register": 1,
                    "status_value": 1,
                    "value_pointer": 1
                },
                "register_value": {
                    "register_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08006e68",
                "FUN_08007708"
            ],
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nvoid update_status_flags_08007438(int *status)\n\n{\n  if (*status == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 | 0x800;\n    DAT_20000610 = status;\n  }\n  if (*status == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c | 1;\n    DAT_20000614 = status;\n  }\n  if (*status == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c | 2;\n    DAT_20000618 = status;\n  }\n  if (*status == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c | 4;\n    DAT_2000061c = status;\n  }\n  return;\n}\n\n",
            "current_name": "update_status_flags_08007438",
            "entrypoint": "0x08007438",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007438": "update_status_flags_08007438",
                "param_1": "status"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080074e0": {
            "additional_data": {
                "DAT_40021018": {
                    "register_1": 1,
                    "register_a": 1
                },
                "DAT_4002101c": {
                    "register_2": 1,
                    "register_b": 1
                },
                "FUN_080074e0": {
                    "modify_memory": 1,
                    "modify_registers_based_on_param": 1,
                    "update_control_flags": 1,
                    "update_control_registers": 3,
                    "update_data_based_on_param": 1,
                    "update_data_based_on_value": 1,
                    "update_data_flags": 1,
                    "update_data_registers": 1,
                    "update_flags": 3,
                    "update_memory_access": 1,
                    "update_memory_addresses": 1,
                    "update_memory_values": 1,
                    "update_permissions": 1,
                    "update_register_based_on_value": 1,
                    "update_register_values": 1,
                    "update_registers": 7,
                    "update_registers_based_on_value": 1,
                    "update_settings": 2,
                    "update_status_bits": 1,
                    "update_values": 1
                },
                "_DAT_40021018": {
                    "control_register1": 2,
                    "control_register18": 1,
                    "data_register1": 1,
                    "flag_register1": 1,
                    "flags1": 1,
                    "main_memory_address1": 1,
                    "mask1": 1,
                    "memory_register1": 1,
                    "memory_value1": 1,
                    "memory_value_a": 1,
                    "register1": 4,
                    "register_1": 4,
                    "register_a": 2,
                    "system_flags": 1
                },
                "_DAT_4002101c": {
                    "control_flags": 1,
                    "control_register1c": 1,
                    "control_register2": 2,
                    "data_register2": 1,
                    "flag_register2": 1,
                    "flags2": 1,
                    "main_memory_address2": 1,
                    "mask2": 1,
                    "memory_register2": 1,
                    "memory_value2": 1,
                    "memory_value_b": 1,
                    "register2": 4,
                    "register_2": 4,
                    "register_b": 2
                },
                "param_1": {
                    "address": 1,
                    "data": 1,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "input": 2,
                    "input_value": 2,
                    "mem_value": 1,
                    "memory_address": 3,
                    "register_value": 5,
                    "settings": 2,
                    "status_ptr": 1,
                    "value": 6,
                    "value_ptr": 2,
                    "value_to_update": 1
                },
                "param_2": {
                    "size": 1
                },
                "registerA": {
                    "register_a": 1
                },
                "registerB": {
                    "register_b": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08007710",
                "FUN_08007110"
            ],
            "code": "\n\n\nvoid update_control_registers_080074e0(int *value)\n\n{\n  if (*value == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 & 0xfffff7ff;\n  }\n  if (*value == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffe;\n  }\n  if (*value == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffd;\n  }\n  if (*value == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffb;\n  }\n  return;\n}\n\n",
            "current_name": "update_control_registers_080074e0",
            "entrypoint": "0x080074e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080074e0": "update_control_registers_080074e0",
                "param_1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007544": {
            "additional_data": {
                "0x19": {
                    "timer3_result": 1,
                    "timer_irqn_4_value": 1
                },
                "0x1c": {
                    "timer0_result": 1,
                    "timer_irqn_2_value": 1
                },
                "0x1d": {
                    "timer1_result": 1,
                    "timer_irqn_1_value": 1
                },
                "0x1e": {
                    "timer2_result": 1,
                    "timer_irqn_3_value": 1
                },
                "0x40000000": {
                    "timer0_irq": 1,
                    "timer_irqn_2": 1
                },
                "0x40000400": {
                    "timer1_irq": 1,
                    "valid_timer_irqn_1": 1
                },
                "0x40000401": {
                    "min_valid_timer_irqn": 1,
                    "min_value": 1
                },
                "0x40000800": {
                    "timer2_irq": 1,
                    "timer_irqn_3": 1
                },
                "0x40012c00": {
                    "timer3_irq": 1,
                    "timer_irqn_4": 1
                },
                "0xffffffff": {
                    "invalid_timer_irqn": 1,
                    "invalid_value": 1
                },
                "FUN_08007544": {
                    "check_timer_ir_qn": 1,
                    "check_timer_irq": 4,
                    "find_timer_ir_qn": 1,
                    "find_timer_irq": 1,
                    "get_timer_interrupt": 2,
                    "get_timer_interrupt_value": 1,
                    "get_timer_ir_qn": 10,
                    "get_timer_irq": 2,
                    "get_timer_irq_number": 3,
                    "get_timer_irq_status": 1,
                    "get_timer_priority": 2,
                    "get_timer_value": 1,
                    "identify_timer_ir_qn": 1,
                    "timer_irq_handler": 1
                },
                "iprintf": {
                    "print_error": 1,
                    "print_error_message": 7,
                    "print_message": 5,
                    "print_timer_warning": 1,
                    "print_unknown_ir_qn": 1,
                    "print_unknown_ir_qn_message": 1,
                    "print_unknown_irq": 2,
                    "print_unknown_timer_ir_qn": 6,
                    "print_unknown_timer_irq": 2
                },
                "param_1": {
                    "input_value": 2,
                    "irq_number": 6,
                    "irq_value": 1,
                    "timer_base_address": 1,
                    "timer_ir_qn": 6,
                    "timer_ir_qn_value": 1,
                    "timer_irq": 1,
                    "timer_number": 1,
                    "timer_value": 12
                },
                "param_2": {
                    "new_param2": 1
                },
                "param_3": {
                    "new_param3": 1
                },
                "param_4": {
                    "new_param4": 1
                }
            },
            "called": [
                "FUN_080098d8"
            ],
            "calling": [
                "FUN_080076e0",
                "FUN_08007648"
            ],
            "code": "\nundefined4 get_timer_ir_qn_08007544(uint timer_value)\n\n{\n  if (timer_value == 0xffffffff) {\n    return 0;\n  }\n  if (timer_value == 0x40000400) {\n    return 0x1d;\n  }\n  if (timer_value < 0x40000401) {\n    if (timer_value == 0x40000000) {\n      return 0x1c;\n    }\n  }\n  else {\n    if (timer_value == 0x40000800) {\n      return 0x1e;\n    }\n    if (timer_value == 0x40012c00) {\n      return 0x19;\n    }\n  }\n  print_error_message(\"TIM: Unknown timer IRQn\");\n  return 0;\n}\n\n",
            "current_name": "get_timer_ir_qn_08007544",
            "entrypoint": "0x08007544",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007544": "get_timer_ir_qn_08007544",
                "iprintf": "print_error_message",
                "param_1": "timer_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007594": {
            "additional_data": {
                "FUN_08007594": {
                    "check_timer": 2,
                    "check_timer_instance": 15,
                    "check_timer_value": 1,
                    "determine_timer_instance": 1,
                    "find_timer_instance": 2,
                    "get_timer_instance": 5,
                    "get_timer_instance_type": 2,
                    "get_timer_type": 1,
                    "identify_timer_instance": 2
                },
                "iprintf": {
                    "print_error": 2,
                    "print_error_message": 14,
                    "print_message": 5,
                    "print_message_on_timer": 1,
                    "print_unknown_timer_instance": 2,
                    "print_warning": 1
                },
                "param_1": {
                    "instance": 4,
                    "timer_id": 1,
                    "timer_instance": 23,
                    "timer_value": 3
                },
                "param_2": {
                    "param2": 1
                },
                "param_3": {
                    "param3": 1
                },
                "param_4": {
                    "param4": 1
                }
            },
            "called": [
                "FUN_080098d8"
            ],
            "calling": [
                "FUN_080075dc"
            ],
            "code": "\nundefined4 check_timer_instance_08007594(uint timer_instance)\n\n{\n  if (timer_instance == 0xffffffff) {\n    return 0;\n  }\n  if (timer_instance == 0x40000400) {\n    return 1;\n  }\n  if (timer_instance < 0x40000401) {\n    if (timer_instance == 0x40000000) {\n      return 1;\n    }\n  }\n  else {\n    if (timer_instance == 0x40000800) {\n      return 1;\n    }\n    if (timer_instance == 0x40012c00) {\n      return 2;\n    }\n  }\n  print_error_message(\"TIM: Unknown timer instance\");\n  return 0;\n}\n\n",
            "current_name": "check_timer_instance_08007594",
            "entrypoint": "0x08007594",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007594": "check_timer_instance_08007594",
                "iprintf": "print_error_message",
                "param_1": "timer_instance"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080075dc": {
            "additional_data": {
                "FUN_080075dc": {
                    "calculate_timer_clk": 1,
                    "calculate_timer_clk_frequency": 1,
                    "calculate_timer_clk_src": 1,
                    "calculate_timer_clock_freq": 3,
                    "calculate_timer_clock_frequency": 2,
                    "calculate_timer_clock_speed": 1,
                    "calculate_timer_frequency": 10,
                    "get_timer_clk_multiplier": 1,
                    "get_timer_clock_frequency": 5,
                    "get_timer_clock_source": 3,
                    "get_timer_clock_source_frequency": 1,
                    "get_timer_frequency": 1,
                    "get_timer_operating_frequency": 1
                },
                "HAL_RCC_GetClockConfig": {
                    "get_clock_config": 2,
                    "get_clock_configuration": 2
                },
                "HAL_RCC_GetPCLK1Freq": {
                    "get_pclk1_frequency": 3,
                    "get_periph_clock1_frequency": 1
                },
                "HAL_RCC_GetPCLK2Freq": {
                    "get_pclk2_frequency": 3,
                    "get_periph_clock2_frequency": 1
                },
                "getTimerClkSrc": {
                    "get_timer_clock_source": 3,
                    "get_timer_clock_source_index": 1
                },
                "iVar2": {
                    "clock_source": 2,
                    "timer_clk_freq": 1,
                    "timer_clk_src": 13,
                    "timer_clock": 1,
                    "timer_clock_frequency": 1,
                    "timer_clock_source": 5,
                    "timer_clock_src": 1,
                    "timer_frequency": 7
                },
                "iprintf": {
                    "print_error_message": 2
                },
                "local_10": {
                    "check_value1": 1,
                    "clock_config1": 1,
                    "clock_config_result": 1,
                    "clock_source1": 2,
                    "config_5": 1,
                    "counter1": 1,
                    "freq_var1": 1,
                    "local_var3": 1,
                    "local_variable3": 1,
                    "pclk1": 1,
                    "pclk1_cfg": 1,
                    "pclk1_freq": 2,
                    "pclk1_frequency": 2,
                    "pclk2_frequency": 1,
                    "pclk2_source": 1,
                    "pwm_config": 1,
                    "temp1": 1,
                    "temp_var3": 1,
                    "temp_var5": 1,
                    "timer_clk": 1,
                    "timer_clk1": 1,
                    "timer_clock1": 1,
                    "timer_pclk1_freq": 1,
                    "unknown_var": 1,
                    "unused3": 1,
                    "unused_var_c": 1
                },
                "local_14": {
                    "clock_config4": 5,
                    "clock_config6": 1,
                    "clock_config_param4": 1,
                    "config_4": 1,
                    "config_var4": 1,
                    "i2c_config": 1,
                    "ip_clock": 1,
                    "local_var2": 1,
                    "pclk1_frequency": 1,
                    "pclk2_source_div": 1,
                    "temp_var4": 1,
                    "timer_config4": 1,
                    "unknown": 1,
                    "unknown_config": 1,
                    "unknown_src_message": 1,
                    "unused2": 1,
                    "unused_param2": 1,
                    "unused_var2": 1,
                    "unused_var_b": 1
                },
                "local_18": {
                    "apb2_clock": 1,
                    "clock_config3": 5,
                    "clock_config5": 1,
                    "clock_config_param3": 1,
                    "config_3": 1,
                    "config_var3": 1,
                    "local_var1": 1,
                    "pclk2_config": 1,
                    "pclk2_div": 1,
                    "pclk2_freq": 1,
                    "pclk2_frequency": 1,
                    "periph_clk_frequency": 1,
                    "temp_var3": 1,
                    "timer_config3": 1,
                    "uart_config": 1,
                    "unused1": 1,
                    "unused_param1": 1,
                    "unused_var1": 1,
                    "unused_var_a": 1
                },
                "local_1c": {
                    "apb1_clock": 1,
                    "clock_config1": 1,
                    "clock_config2": 6,
                    "clock_config4": 1,
                    "clock_config_d": 1,
                    "clock_config_param2": 3,
                    "clock_config_value": 1,
                    "config1": 1,
                    "config_2": 1,
                    "config_var2": 1,
                    "pclk1_config": 1,
                    "pclk1_div": 1,
                    "pclk1_freq": 1,
                    "spi_config": 1,
                    "sys_clk_cfg": 1,
                    "sys_clock_source": 1,
                    "sysclk_frequency": 1,
                    "temp_var2": 1,
                    "timer_config1": 1
                },
                "local_20": {
                    "clock_config": 6,
                    "clock_config1": 6,
                    "clock_config2": 1,
                    "clock_config3": 2,
                    "clock_config_c": 1,
                    "clock_config_param1": 3,
                    "config2": 1,
                    "config_1": 1,
                    "config_var1": 1,
                    "gpio_config": 1,
                    "sys_clock_config": 1,
                    "system_clock_source": 1,
                    "timer_clock_config_value": 1,
                    "timer_config2": 1
                },
                "local_c": {
                    "adc_config": 1,
                    "check_value2": 1,
                    "clock_config2": 1,
                    "clock_source": 1,
                    "clock_source2": 2,
                    "config_6": 1,
                    "counter2": 1,
                    "freq_var2": 1,
                    "local_var4": 1,
                    "local_variable4": 1,
                    "pclk1_frequency": 1,
                    "pclk1_source": 1,
                    "pclk2": 1,
                    "pclk2_cfg": 1,
                    "pclk2_freq": 2,
                    "pclk2_frequency": 2,
                    "saved_clock": 1,
                    "temp2": 1,
                    "temp_var4": 1,
                    "temp_var6": 1,
                    "timer_clk2": 1,
                    "timer_clock2": 1,
                    "timer_pclk2_freq": 1,
                    "unknown_clock_source": 1,
                    "unused4": 1,
                    "unused_var_d": 1
                },
                "param_1": {
                    "config": 1,
                    "input_param": 4,
                    "source": 1,
                    "source_index": 1,
                    "timer": 2,
                    "timer_config": 2,
                    "timer_configuration": 1,
                    "timer_id": 4,
                    "timer_index": 7,
                    "timer_number": 7,
                    "timer_source": 1
                },
                "uVar1": {
                    "clock_config": 1,
                    "clock_config1": 1,
                    "clock_config_a": 1,
                    "clock_freq": 1,
                    "clock_source": 2,
                    "local_counter1": 1,
                    "local_flag": 1,
                    "local_var1": 1,
                    "local_variable1": 1,
                    "param1_copy": 1,
                    "pclk1_freq": 4,
                    "pclk1_frequency": 4,
                    "pclk_frequency": 1,
                    "source_frequency": 1,
                    "temp1": 1,
                    "temp_var1": 5,
                    "timer_frequency": 1,
                    "value1": 2,
                    "var1": 1
                },
                "uVar3": {
                    "clock_config2": 1,
                    "clock_config_b": 1,
                    "clock_source": 1,
                    "current_clock": 1,
                    "local_clk_src": 1,
                    "local_counter2": 1,
                    "local_var3": 2,
                    "local_variable2": 1,
                    "param2_copy": 1,
                    "pclk2_freq": 4,
                    "pclk2_frequency": 3,
                    "saved_timer_clk_src": 1,
                    "source_freq": 1,
                    "temp2": 1,
                    "temp_var2": 3,
                    "temp_var3": 1,
                    "timer_clk_src": 2,
                    "timer_freq_check": 1,
                    "timer_periph_id": 1,
                    "value2": 2,
                    "var2": 1
                }
            },
            "called": [
                "FUN_08005a68",
                "FUN_08005a48",
                "FUN_08007594",
                "FUN_08005a28",
                "FUN_080098d8"
            ],
            "calling": [
                "FUN_08007648",
                "FUN_08007118"
            ],
            "code": "\nint calculate_timer_clock_frequency_080075dc(undefined4 timer_index)\n\n{\n  uint temp_var1;\n  int timer_clk_src;\n  uint pclk2_freq;\n  undefined4 clock_config;\n  undefined4 clock_config2;\n  undefined4 clock_config3;\n  undefined4 clock_config4;\n  uint pclk1_freq;\n  uint pclk2_frequency;\n  \n  clock_config2 = 0;\n  clock_config3 = 0;\n  clock_config4 = 0;\n  pclk1_freq = 0;\n  pclk2_frequency = 0;\n  clock_config = 0;\n  get_clock_configuration(&clock_config2,&clock_config);\n  timer_clk_src = get_timer_clock_source(timer_index);\n  temp_var1 = pclk2_frequency;\n  pclk2_freq = pclk1_freq;\n  if (timer_clk_src == 1) {\n    timer_clk_src = get_pclk1_frequency();\n  }\n  else if (timer_clk_src == 2) {\n    timer_clk_src = get_pclk2_frequency();\n    pclk2_freq = temp_var1;\n  }\n  else {\n    print_error_message(\"TIM: Unknown clock source\");\n    timer_clk_src = 0;\n    pclk2_freq = 0;\n  }\n  if (pclk2_freq != 0x500) {\n    if (pclk2_freq < 0x501) {\n      if (pclk2_freq != 0x400) {\n        return timer_clk_src;\n      }\n    }\n    else if ((pclk2_freq != 0x600) && (pclk2_freq != 0x700)) {\n      return timer_clk_src;\n    }\n  }\n  return timer_clk_src << 1;\n}\n\n",
            "current_name": "calculate_timer_clock_frequency_080075dc",
            "entrypoint": "0x080075dc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080075dc": "calculate_timer_clock_frequency_080075dc",
                "HAL_RCC_GetClockConfig": "get_clock_configuration",
                "HAL_RCC_GetPCLK1Freq": "get_pclk1_frequency",
                "HAL_RCC_GetPCLK2Freq": "get_pclk2_frequency",
                "getTimerClkSrc": "get_timer_clock_source",
                "iVar2": "timer_clk_src",
                "iprintf": "print_error_message",
                "local_10": "pclk1_freq",
                "local_14": "clock_config4",
                "local_18": "clock_config3",
                "local_1c": "clock_config2",
                "local_20": "clock_config",
                "local_c": "pclk2_frequency",
                "param_1": "timer_index",
                "uVar1": "temp_var1",
                "uVar3": "pclk2_freq"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007648": {
            "additional_data": {
                "FUN_08007648": {
                    "init_timer": 1,
                    "initialize_timer": 29,
                    "initialize_timer_irq": 1
                },
                "HAL_NVIC_EnableIRQ": {
                    "enable_timer_irq": 1
                },
                "HAL_NVIC_SetPriority": {
                    "set_timer_irq_priority": 1
                },
                "HAL_TIM_OC_ConfigChannel": {
                    "configure_timer_output_compare_channel": 1
                },
                "HAL_TIM_OC_Init": {
                    "initialize_timer_output_compare": 1
                },
                "HAL_TIM_OC_Start_IT": {
                    "start_timer_output_compare_interrupt": 1
                },
                "cVar1": {
                    "irq": 10,
                    "irq_code": 1,
                    "irq_handle": 1,
                    "irq_handler": 1,
                    "irq_name": 1,
                    "irq_num": 1,
                    "irq_number": 3,
                    "irq_timer": 1,
                    "irq_type": 2,
                    "timer_irq": 8,
                    "timer_irq_id": 1
                },
                "getTimerClkFreq": {
                    "get_timer_clock_frequency": 1
                },
                "getTimerIrq": {
                    "get_timer_irq": 1
                },
                "iVar3": {
                    "error": 1,
                    "error_code": 1,
                    "init_result": 12,
                    "init_return_value": 1,
                    "init_status": 8,
                    "initialization_result": 1,
                    "result": 1,
                    "ret_value": 1,
                    "status": 2,
                    "tim_oc_init_result": 1
                },
                "local_1c": {
                    "capture_val7": 1,
                    "channel7": 2,
                    "channel7_ccr": 1,
                    "channel7_value": 1,
                    "channel_config6": 1,
                    "channel_config7": 2,
                    "compare_value7": 1,
                    "counter_mode": 1,
                    "init_value7": 1,
                    "local1c": 1,
                    "local_param7": 1,
                    "local_var1c": 2,
                    "local_var3": 1,
                    "local_var6": 1,
                    "local_var7": 6,
                    "local_var_7": 1,
                    "local_var_g": 1,
                    "local_variable7": 1,
                    "oc_config7": 1,
                    "unused4": 1,
                    "unused_var": 1,
                    "value7": 1,
                    "zero": 1
                },
                "local_20": {
                    "capture_val6": 1,
                    "channel6": 2,
                    "channel6_ccr": 1,
                    "channel6_value": 1,
                    "channel_config5": 1,
                    "channel_config6": 2,
                    "compare_value": 1,
                    "compare_value6": 1,
                    "init_value6": 1,
                    "local20": 1,
                    "local_param6": 1,
                    "local_var2": 1,
                    "local_var20": 2,
                    "local_var5": 1,
                    "local_var6": 6,
                    "local_var_6": 1,
                    "local_var_f": 1,
                    "local_variable6": 1,
                    "oc_config6": 1,
                    "unused3": 1,
                    "unused_var": 1,
                    "value6": 1,
                    "zero": 1
                },
                "local_24": {
                    "capture_val5": 1,
                    "channel5": 2,
                    "channel5_ccr": 1,
                    "channel5_value": 1,
                    "channel_config4": 1,
                    "channel_config5": 2,
                    "compare_value5": 1,
                    "init_value5": 1,
                    "local24": 1,
                    "local_param5": 1,
                    "local_var1": 1,
                    "local_var24": 2,
                    "local_var4": 1,
                    "local_var5": 6,
                    "local_var_5": 1,
                    "local_var_e": 1,
                    "local_variable5": 1,
                    "oc_config5": 1,
                    "preload_value": 1,
                    "unused2": 1,
                    "unused_var": 1,
                    "value5": 1,
                    "zero": 1
                },
                "local_28": {
                    "capture_val4": 1,
                    "channel4": 2,
                    "channel4_ccr": 1,
                    "channel4_value": 1,
                    "channel_config3": 1,
                    "channel_config4": 2,
                    "compare_value4": 1,
                    "init_value4": 1,
                    "irq_enable": 1,
                    "local28": 1,
                    "local_param4": 1,
                    "local_var28": 2,
                    "local_var3": 1,
                    "local_var4": 6,
                    "local_var_4": 1,
                    "local_var_d": 1,
                    "local_variable4": 1,
                    "oc_config4": 1,
                    "timer_mode": 1,
                    "unused1": 1,
                    "unused_var": 1,
                    "value4": 1,
                    "zero": 1
                },
                "local_2c": {
                    "capture_val3": 1,
                    "channel3": 2,
                    "channel3_ccr": 1,
                    "channel3_value": 1,
                    "channel_config2": 1,
                    "channel_config3": 2,
                    "compare_mode": 1,
                    "compare_value3": 1,
                    "init_value3": 1,
                    "irq_priority": 1,
                    "local_param3": 1,
                    "local_var2": 1,
                    "local_var2c": 2,
                    "local_var3": 6,
                    "local_var_3": 1,
                    "local_var_c": 1,
                    "local_variable3": 1,
                    "oc_config3": 1,
                    "param4_local": 1,
                    "unused_var": 1,
                    "value3": 1,
                    "zero": 1
                },
                "local_30": {
                    "capture_val2": 1,
                    "channel2": 2,
                    "channel2_ccr": 1,
                    "channel2_value": 1,
                    "channel_config2": 2,
                    "channel_number": 1,
                    "compare_value2": 1,
                    "init_value2": 1,
                    "irq_enable": 1,
                    "local_param2": 1,
                    "local_var1": 1,
                    "local_var2": 6,
                    "local_var30": 2,
                    "local_var_2": 1,
                    "local_var_b": 1,
                    "local_variable2": 1,
                    "oc_config2": 1,
                    "param3_copy": 3,
                    "param3_local": 1,
                    "priority": 1,
                    "value2": 1
                },
                "local_34": {
                    "capture_val1": 1,
                    "channel": 1,
                    "channel1": 3,
                    "channel1_ccr": 2,
                    "channel1_oc_value": 1,
                    "channel1_value": 1,
                    "channel_config1": 3,
                    "channel_value": 2,
                    "compare_value": 1,
                    "init_value1": 1,
                    "local_param1": 1,
                    "local_var1": 6,
                    "local_var34": 2,
                    "local_var_a": 1,
                    "local_variable1": 1,
                    "oc_config1": 1,
                    "pulse_value": 1,
                    "timer_prescaler": 1,
                    "value1": 1
                },
                "param_1": {
                    "config": 1,
                    "ptr_timer": 1,
                    "timer": 1,
                    "timer_config": 10,
                    "timer_instance": 1,
                    "timer_param": 1,
                    "timer_params": 12,
                    "timer_registers": 2,
                    "timer_settings": 1,
                    "timer_values": 1
                },
                "param_2": {
                    "config_value": 1,
                    "freq": 1,
                    "input_value": 1,
                    "param": 1,
                    "param2": 23,
                    "param_2": 1,
                    "param_value": 1,
                    "timer_config": 1,
                    "value": 1
                },
                "param_3": {
                    "interrupt_priority": 1,
                    "irq": 1,
                    "irq_enable": 1,
                    "irq_priority": 6,
                    "irq_value": 2,
                    "param3": 19,
                    "timer_priority": 1
                },
                "param_4": {
                    "irq_handler": 3,
                    "irq_line": 1,
                    "irq_priority": 3,
                    "param4": 21,
                    "param_4": 1,
                    "parameter4": 1,
                    "priority": 1
                },
                "puVar4": {
                    "channel_config": 1,
                    "next_param": 7,
                    "param1_plus_one": 1,
                    "param1_ptr": 1,
                    "param_1_plus_1": 1,
                    "param_pointer": 1,
                    "ptr_next_param": 1,
                    "tim_handle": 2,
                    "timer_config": 1,
                    "timer_config_plus1": 1,
                    "timer_config_ptr": 1,
                    "timer_handle": 12,
                    "timer_instance": 1
                },
                "uVar2": {
                    "clk_freq": 4,
                    "timer_clk_freq": 19,
                    "timer_freq": 6
                }
            },
            "called": [
                "FUN_08003f94",
                "FUN_08006280",
                "FUN_08006128",
                "FUN_08007544",
                "FUN_08006060",
                "FUN_080075dc",
                "FUN_08003f30"
            ],
            "calling": [
                "FUN_0800242c"
            ],
            "code": "\nvoid initialize_timer_irq_08007648(undefined4 *timer_params,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  char irq;\n  uint timer_clk_freq;\n  int init_result;\n  undefined4 *timer_handle;\n  undefined4 local_var1;\n  undefined4 local_var2;\n  undefined4 local_var3;\n  undefined4 local_var4;\n  undefined4 local_var5;\n  undefined4 local_var6;\n  undefined4 local_var7;\n  \n  local_var1 = 0;\n  local_var2 = 0;\n  local_var3 = 0;\n  local_var4 = 0;\n  local_var5 = 0;\n  local_var6 = 0;\n  local_var7 = 0;\n  timer_handle = timer_params + 1;\n  *timer_params = 0x40000000;\n  timer_params[1] = 0x40000000;\n  timer_params[4] = param2;\n  timer_clk_freq = get_timer_clock_frequency();\n  timer_params[2] = timer_clk_freq / 1000000 - 1;\n  timer_params[5] = 0;\n  timer_params[3] = 0;\n  timer_params[6] = 0;\n  timer_params[0x13] = param4;\n  local_var1 = 0;\n  local_var3 = 0;\n  local_var5 = 0;\n  local_var4 = 0;\n  local_var6 = 0;\n  local_var7 = 0;\n  local_var2 = param3;\n  irq = get_timer_irq(*timer_params);\n  set_timer_irq_priority((int)irq,0xe,0);\n  irq = get_timer_irq(*timer_params);\n  enable_timer_irq((int)irq);\n  init_result = initialize_timer_output_compare(timer_handle);\n  if ((init_result == 0) && (init_result = configure_timer_output_compare_channel(timer_handle,&local_var1,0), init_result == 0)) {\n    start_timer_output_compare_interrupt(timer_handle,0);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_timer_irq_08007648",
            "entrypoint": "0x08007648",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007648": "initialize_timer_irq_08007648",
                "HAL_NVIC_EnableIRQ": "enable_timer_irq",
                "HAL_NVIC_SetPriority": "set_timer_irq_priority",
                "HAL_TIM_OC_ConfigChannel": "configure_timer_output_compare_channel",
                "HAL_TIM_OC_Init": "initialize_timer_output_compare",
                "HAL_TIM_OC_Start_IT": "start_timer_output_compare_interrupt",
                "cVar1": "irq",
                "getTimerClkFreq": "get_timer_clock_frequency",
                "getTimerIrq": "get_timer_irq",
                "iVar3": "init_result",
                "local_1c": "local_var7",
                "local_20": "local_var6",
                "local_24": "local_var5",
                "local_28": "local_var4",
                "local_2c": "local_var3",
                "local_30": "local_var2",
                "local_34": "local_var1",
                "param_1": "timer_params",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "puVar4": "timer_handle",
                "uVar2": "timer_clk_freq"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080076e0": {
            "additional_data": {
                "FUN_08003fb0": {
                    "configure_timer_irq": 1
                },
                "FUN_08005df4": {
                    "deinitialize_timer": 1
                },
                "FUN_080062f4": {
                    "stop_it_timer": 1
                },
                "FUN_08007544": {
                    "get_timer_irq": 1
                },
                "FUN_080076e0": {
                    "disable_timer": 1,
                    "disable_timer_and_interrupt": 1,
                    "disable_timer_interrupt": 8,
                    "disable_timer_irq": 21
                },
                "HAL_NVIC_DisableIRQ": {
                    "disable_irq": 1
                },
                "cVar1": {
                    "irq": 6,
                    "irq_number": 2,
                    "irq_timer": 3,
                    "irq_type": 6,
                    "timer_irq": 14
                },
                "iVar2": {
                    "de_init_result": 9,
                    "de_init_status": 9,
                    "de_initialization_result": 1,
                    "deinit_result": 3,
                    "result": 8,
                    "status": 1
                },
                "param_1": {
                    "args": 2,
                    "config": 1,
                    "input_params": 1,
                    "parameters": 1,
                    "timer": 3,
                    "timer_array": 1,
                    "timer_data": 3,
                    "timer_parameters": 1,
                    "timer_params": 14,
                    "timer_settings": 1
                }
            },
            "called": [
                "FUN_08003fb0",
                "FUN_08007544",
                "FUN_08005df4",
                "FUN_080062f4"
            ],
            "calling": [
                "FUN_08002578"
            ],
            "code": "\nvoid disable_timer_irq_080076e0(undefined4 *timer_params)\n\n{\n  char timer_irq;\n  int de_init_status;\n  \n  timer_params[0x13] = 0;\n  timer_irq = getTimerIrq(*timer_params);\n  disable_irq((int)timer_irq);\n  de_init_status = HAL_TIM_OC_DeInit(timer_params + 1);\n  if (de_init_status == 0) {\n    HAL_TIM_OC_Stop_IT(timer_params + 1,0);\n  }\n  return;\n}\n\n",
            "current_name": "disable_timer_irq_080076e0",
            "entrypoint": "0x080076e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080076e0": "disable_timer_irq_080076e0",
                "HAL_NVIC_DisableIRQ": "disable_irq",
                "cVar1": "timer_irq",
                "iVar2": "de_init_status",
                "param_1": "timer_params"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007708": {
            "additional_data": {
                "FUN_08007438": {
                    "configure_timer": 1,
                    "process_data": 12,
                    "process_parameter": 2,
                    "process_parameters": 1,
                    "set_timer_parameters": 1,
                    "update_parameter": 3,
                    "update_parameter1": 1
                },
                "FUN_08007708": {
                    "enable_clock": 1,
                    "enable_timer": 1,
                    "enable_timer_clock": 13,
                    "initialize_clock": 2,
                    "initialize_timer": 13,
                    "initialize_timer_clock": 1
                },
                "param_1": {
                    "array_param": 1,
                    "array_pointer": 2,
                    "buffer": 1,
                    "data": 2,
                    "data_array": 2,
                    "data_buffer": 1,
                    "data_ptr": 1,
                    "parameter": 1,
                    "timer_configuration": 1,
                    "timer_data": 2,
                    "timer_settings": 1
                }
            },
            "called": [
                "FUN_08007438"
            ],
            "calling": [
                "FUN_08006060"
            ],
            "code": "\nvoid initialize_timer_clock_08007708(void)\n\n{\n  timer_enable_clock();\n  return;\n}\n\n",
            "current_name": "initialize_timer_clock_08007708",
            "entrypoint": "0x08007708",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007708": "initialize_timer_clock_08007708"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007710": {
            "additional_data": {
                "FUN_080074e0": {
                    "modify_parameter": 1,
                    "process_array": 3,
                    "process_data": 2,
                    "process_input": 1,
                    "process_param_1": 1,
                    "process_parameter": 8,
                    "process_parameter_1": 1,
                    "process_timer": 1,
                    "update_param1": 1,
                    "update_parameter": 4
                },
                "FUN_08007710": {
                    "disable_clock": 3,
                    "disable_clock_timer": 1,
                    "disable_timer": 3,
                    "disable_timer_clock": 24
                },
                "param_1": {
                    "array": 3,
                    "array_ptr": 1,
                    "data_array": 2,
                    "input_data": 1,
                    "input_param": 1,
                    "parameter": 1,
                    "timer_param": 1,
                    "timer_ptr": 1
                }
            },
            "called": [
                "FUN_080074e0"
            ],
            "calling": [
                "FUN_08005df4"
            ],
            "code": "\nvoid disable_clock_timer_08007710(void)\n\n{\n  timer_disable_clock();\n  return;\n}\n\n",
            "current_name": "disable_clock_timer_08007710",
            "entrypoint": "0x08007710",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007710": "disable_clock_timer_08007710"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007718": {
            "additional_data": {
                "FUN_08007718": {
                    "subtract4_from_param": 1,
                    "subtract_four": 28,
                    "subtract_four_from_param": 1,
                    "subtract_four_from_parameter": 1
                },
                "param_1": {
                    "input": 8,
                    "input_num": 1,
                    "input_number": 3,
                    "input_value": 9,
                    "new_value": 1,
                    "num": 3,
                    "number": 1,
                    "result": 5
                },
                "param_2": {
                    "input_2": 1,
                    "output": 1
                },
                "ptr_local_1": {
                    "local_var1": 1
                },
                "return": {
                    "result": 3
                },
                "return_value": {
                    "result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800771c",
                "FUN_08007736"
            ],
            "code": "\nint subtract_four_from_param_08007718(int input_value)\n\n{\n  result input_value + -4;\n}\n\n",
            "current_name": "subtract_four_from_param_08007718",
            "entrypoint": "0x08007718",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007718": "subtract_four_from_param_08007718",
                "param_1": "input_value",
                "return": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800771c": {
            "additional_data": {
                "0x01": {
                    "timer_active": 1
                },
                "FUN_08007718": {
                    "check_condition": 1,
                    "check_parameter_flag": 1,
                    "check_timer_object_flag": 1,
                    "check_timer_state": 1,
                    "check_timer_value": 1,
                    "get_timer_obj": 4,
                    "get_timer_object": 1
                },
                "FUN_0800771c": {
                    "execute_action_if_timer_active": 1,
                    "execute_timer": 1,
                    "execute_timer_action": 4,
                    "execute_timer_callback": 7,
                    "execute_timer_event": 1,
                    "execute_timer_function": 16,
                    "execute_timer_operation": 1
                },
                "FUn_08007718": {
                    "get_timer_obj": 1
                },
                "code": {
                    "action_function": 1,
                    "callback_function": 1,
                    "callback_function_ptr": 1,
                    "function_pointer": 1,
                    "timer_function": 2
                },
                "get_timer_obj": {
                    "get_current_timer_obj": 1,
                    "get_timer_object": 9,
                    "retrieve_timer_object": 2
                },
                "iVar1": {
                    "timer": 1,
                    "timer_address": 1,
                    "timer_handle": 1,
                    "timer_obj": 16,
                    "timer_obj_address": 1,
                    "timer_obj_ptr": 3,
                    "timer_object": 2,
                    "timer_object_ptr": 1
                },
                "param_1": {
                    "callback_param": 1,
                    "event_id": 1,
                    "timer_handle": 1,
                    "timer_id": 5,
                    "timer_index": 9,
                    "timer_instance": 1,
                    "timer_obj": 5,
                    "timer_obj_index": 1,
                    "timer_obj_ptr": 1,
                    "timer_object": 4,
                    "timer_object_id": 1,
                    "timer_param": 1
                }
            },
            "called": [
                "FUN_08007718"
            ],
            "calling": [
                "FUN_08005e6e"
            ],
            "code": "\nvoid execute_timer_function_0800771c(int timer_index)\n\n{\n  int timer_obj;\n  \n  timer_obj = get_timer_object();\n  if ((*(timer_function **)(timer_obj + 0x4c) != (timer_function *)0x0) && (*(char *)(timer_index + 0x1c) == '\\x01')) {\n    (**(timer_function **)(timer_obj + 0x4c))(timer_obj,0);\n  }\n  return;\n}\n\n",
            "current_name": "execute_timer_function_0800771c",
            "entrypoint": "0x0800771c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800771c": "execute_timer_function_0800771c",
                "code": "timer_function",
                "get_timer_obj": "get_timer_object",
                "iVar1": "timer_obj",
                "param_1": "timer_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007736": {
            "additional_data": {
                "0x0": {
                    "null_ptr": 1
                },
                "0x48": {
                    "offset": 2
                },
                "FUN_08007718": {
                    "calculate_parameter": 1,
                    "calculate_result": 1,
                    "calculate_timer_obj": 2,
                    "calculate_timer_object": 2,
                    "calculate_timer_result": 1,
                    "calculate_timer_value": 1,
                    "check_timer_object": 1,
                    "get_timer_obj": 13,
                    "get_timer_object": 5,
                    "get_timer_value": 1,
                    "initialize_timer_object": 1
                },
                "FUN_08007736": {
                    "call_timer_function": 1,
                    "execute_timer_action": 1,
                    "execute_timer_callback": 5,
                    "execute_timer_event": 1,
                    "execute_timer_function": 20,
                    "execute_timer_object": 1,
                    "execute_timer_operation": 1
                },
                "FUn_08007736": {
                    "execute_timer_callback": 1
                },
                "code": {
                    "function_pointer": 1
                },
                "get_timer_obj": {
                    "get_timer_object": 2,
                    "retrieve_timer_object": 1
                },
                "iVar1": {
                    "timer_handle": 1,
                    "timer_obj": 17,
                    "timer_obj_pointer": 1,
                    "timer_obj_ptr": 1,
                    "timer_object": 9,
                    "timer_object_index": 1
                },
                "iVar2": {
                    "callback_function": 1
                },
                "param_1": {
                    "input_param": 4,
                    "input_parameter": 1,
                    "input_value": 3,
                    "obj_id": 1,
                    "param": 2,
                    "timer_id": 2,
                    "timer_index": 3,
                    "timer_obj": 2,
                    "timer_obj_param": 1,
                    "timer_object": 2,
                    "unused_param": 1
                }
            },
            "called": [
                "FUN_08007718"
            ],
            "calling": [
                "FUN_08005e6e"
            ],
            "code": "\nvoid execute_timer_function_08007736(void)\n\n{\n  int timer_obj;\n  \n  timer_obj = get_timer_object();\n  if (*(function_pointer **)(timer_obj + 0x48) != (function_pointer *)0x0) {\n    (**(function_pointer **)(timer_obj + 0x48))();\n  }\n  return;\n}\n\n",
            "current_name": "execute_timer_function_08007736",
            "entrypoint": "0x08007736",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007736": "execute_timer_function_08007736",
                "code": "function_pointer",
                "get_timer_obj": "get_timer_object",
                "iVar1": "timer_obj"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007744": {
            "additional_data": {
                "DAT_08000024": {
                    "offset_data": 1
                },
                "DAT_08007768": {
                    "offset_value": 1
                },
                "FUN_08007744": {
                    "extract_pointer": 1,
                    "get_data_offset": 1,
                    "get_memory_address": 1,
                    "get_memory_offset": 1,
                    "get_memory_value": 1,
                    "get_nested_value": 3,
                    "get_offset_value": 7,
                    "get_pointer_at_offset": 1,
                    "get_pointer_from_offset": 1,
                    "get_pointer_offset": 1,
                    "get_pointer_value": 4,
                    "get_value_at_offset": 1,
                    "get_value_from_offset": 8
                },
                "PTR_1": {
                    "address_pointer": 1,
                    "base_address": 1
                },
                "PTR_param_1": {
                    "ptr_offset": 1
                },
                "PTR_param_1_data": {
                    "ptr_offset_data": 1
                },
                "PTR_something": {
                    "data_pointer": 1
                },
                "PTR_somethingElse": {
                    "offset_pointer": 1
                },
                "PTR_x": {
                    "pointer_x": 1
                },
                "PTR_y": {
                    "pointer_y": 1
                },
                "int": {
                    "ptr_int": 1
                },
                "param_1": {
                    "address": 4,
                    "base_address": 3,
                    "data_pointer": 1,
                    "data_structure": 1,
                    "input": 2,
                    "input_offset": 2,
                    "input_parameter": 2,
                    "input_pointer": 1,
                    "input_value": 2,
                    "memory_address": 1,
                    "nested_struct_ptr": 1,
                    "offset": 9,
                    "offset_address": 1,
                    "offset_index": 1
                }
            },
            "called": [],
            "calling": [],
            "code": "\nundefined4 get_value_from_offset_08007744(ptr_int offset)\n\n{\n  return *(undefined4 *)(*(ptr_int *)(offset + 4) + 0x24);\n}\n\n",
            "current_name": "get_value_from_offset_08007744",
            "entrypoint": "0x08007744",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007744": "get_value_from_offset_08007744",
                "int": "ptr_int",
                "param_1": "offset"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800774a": {
            "additional_data": {
                "FUN_0800774a": {
                    "set_memory_value": 1,
                    "set_param": 2,
                    "set_param_value": 7,
                    "set_parameter_value": 3,
                    "store_parameter_value": 1,
                    "update_data": 1,
                    "update_memory_location": 1,
                    "update_memory_value": 2,
                    "update_param_value": 1,
                    "update_parameter": 6,
                    "update_parameter_in_struct": 1,
                    "update_parameter_value": 3,
                    "update_value_in_struct": 1,
                    "write_param_to_memory": 1
                },
                "param_1": {
                    "arg1": 1,
                    "base_address": 2,
                    "data": 1,
                    "data_pointer": 2,
                    "function_context": 1,
                    "function_parameter": 1,
                    "input_parameter": 1,
                    "memory_address": 3,
                    "obj_offset": 1,
                    "obj_pointer": 1,
                    "obj_ptr": 1,
                    "object_address": 5,
                    "object_pointer": 1,
                    "object_ptr": 1,
                    "param1": 1,
                    "param_1_value": 1,
                    "param_address": 1,
                    "parameter_index": 1,
                    "ptr1": 1,
                    "ptr_to_memory_struct": 1,
                    "struct_pointer": 3
                },
                "param_2": {
                    "new_data": 1,
                    "new_param": 1,
                    "new_param_value": 1,
                    "new_parameter": 1,
                    "new_parameter_value": 1,
                    "new_value": 19,
                    "param2": 1,
                    "param_value": 1,
                    "parameter_value": 1,
                    "value": 4
                }
            },
            "called": [],
            "calling": [],
            "code": "\nvoid set_memory_value_0800774a(int object_address,undefined4 new_value)\n\n{\n  *(undefined4 *)(*(int *)(object_address + 4) + 0x24) = new_value;\n  return;\n}\n\n",
            "current_name": "set_memory_value_0800774a",
            "entrypoint": "0x0800774a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800774a": "set_memory_value_0800774a",
                "param_1": "object_address",
                "param_2": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007750": {
            "additional_data": {
                "0x34": {
                    "offset": 1
                },
                "DAT1": {
                    "offset": 1
                },
                "FUN_08007750": {
                    "save_value_at_offset": 1,
                    "set_data_at_index": 1,
                    "set_element_at_offset": 1,
                    "set_integer_value": 1,
                    "set_param_at_offset": 1,
                    "set_param_value": 2,
                    "set_param_value_in_array": 1,
                    "set_pointer_value": 1,
                    "set_value_at_index": 1,
                    "set_value_at_offset": 1,
                    "store_data_into_array": 1,
                    "store_param_value": 1,
                    "store_value_at_offset": 1,
                    "store_value_in_array": 1,
                    "store_value_in_memory": 1,
                    "store_value_to_memory": 1,
                    "update_data_value": 1,
                    "update_memory": 1,
                    "update_param_value": 1,
                    "update_parameter_value": 1,
                    "update_value_at_offset": 2,
                    "update_value_in_array": 1,
                    "write_data_to_memory": 1,
                    "write_to_dynamic_array": 1,
                    "write_to_memory": 3,
                    "write_value_to_memory": 2
                },
                "new_variable_name_1": {
                    "memory_address": 1
                },
                "param_1": {
                    "address": 1,
                    "arg1": 1,
                    "array": 1,
                    "array_address": 1,
                    "array_base_address": 2,
                    "array_ptr": 1,
                    "array_start": 1,
                    "base_address": 13,
                    "data_structure": 1,
                    "memory_address": 1,
                    "memory_array": 1,
                    "memory_block": 1,
                    "object_address": 3,
                    "object_ptr": 1,
                    "param1": 1,
                    "struct_base_address": 1
                },
                "param_2": {
                    "arg2": 1,
                    "array_index": 2,
                    "element_index": 1,
                    "index": 16,
                    "offset": 7,
                    "offset_index": 3,
                    "param2": 1
                },
                "param_3": {
                    "data": 4,
                    "new_element_value": 1,
                    "new_value": 11,
                    "value": 15
                }
            },
            "called": [],
            "calling": [],
            "code": "\nvoid write_value_to_memory_08007750(int base_address,int index,undefined4 value)\n\n{\n  *(undefined4 *)(*(int *)(base_address + 4) + 0x34 + index * 4) = value;\n  return;\n}\n\n",
            "current_name": "write_value_to_memory_08007750",
            "entrypoint": "0x08007750",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007750": "write_value_to_memory_08007750",
                "param_1": "base_address",
                "param_2": "index",
                "param_3": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080077b0": {
            "additional_data": {
                "DAT_0800a66c": {
                    "gpio_afrh": 1,
                    "gpio_pin_array2": 1,
                    "gpio_pin_map2": 1,
                    "gpio_port_a_config": 1,
                    "i2c_pin_map1": 1,
                    "pin_map2": 1,
                    "sda_periph_mapping": 1
                },
                "DAT_0800a69c": {
                    "gpio_afrl": 1,
                    "gpio_pin_array1": 1,
                    "gpio_pin_map1": 1,
                    "gpio_port_c_config": 1,
                    "i2c_pin_map2": 1,
                    "pin_map1": 1,
                    "scl_periph_mapping": 1
                },
                "DAT_20000668": {
                    "dat1": 1,
                    "data1": 1,
                    "gpio_config_1": 1,
                    "gpio_data1": 1,
                    "gpio_pin_1": 1,
                    "gpio_pin_data1": 1,
                    "gpio_port_c": 1,
                    "i2_c1_gpi_oregister": 1,
                    "i2_c1_rxtx": 1,
                    "i2c_address1": 1,
                    "i2c_data": 1,
                    "i2c_handle1": 2,
                    "i2c_periph1": 1,
                    "i2c_periph_ptr1": 1,
                    "i2c_pointer1": 1,
                    "i2c_scl_pin": 1,
                    "register_3": 1,
                    "usart1": 1
                },
                "DAT_2000066c": {
                    "gpio_config_2": 1,
                    "gpio_data2": 1,
                    "gpio_pin_2": 1,
                    "gpio_pin_data2": 1,
                    "gpio_port_d": 1,
                    "i2_c2_gpi_oregister": 1,
                    "i2c_data2": 1,
                    "i2c_handle2": 2,
                    "i2c_periph2": 1,
                    "i2c_periph_ptr2": 1,
                    "i2c_pointer2": 1,
                    "i2c_sda_pin": 1,
                    "register_5": 1,
                    "usart6": 1
                },
                "FUN_080077b0": {
                    "configure_i2_c": 1,
                    "configure_i2_c_peripheral": 1,
                    "initialize_i2_c": 21,
                    "initialize_i2_c_peripheral": 4,
                    "initialize_i2_c_pins": 4
                },
                "HAL_GPIO_Init": {
                    "gpio_init": 1,
                    "initialize_gpio": 3
                },
                "HAL_I2C_Init": {
                    "i2_c_init": 1,
                    "initialize_i2_c": 2,
                    "initialize_i2_c_handle": 1
                },
                "HAL_NVIC_EnableIRQ": {
                    "enable_interrupt": 1,
                    "enable_irq": 1,
                    "enable_nvicirq": 1,
                    "nvic_enable_irq": 1
                },
                "HAL_NVIC_SetPriority": {
                    "nvic_set_priority": 1,
                    "set_interrupt_priority": 1,
                    "set_nvic_priority": 1,
                    "set_priority": 1
                },
                "_DAT_40010000": {
                    "exti_imr": 1,
                    "register5": 1
                },
                "_DAT_40010004": {
                    "exti_pr": 1,
                    "gpio_reg_setting1": 1,
                    "rcc_ahb1_enr": 1,
                    "register4": 3
                },
                "_DAT_40010008": {
                    "register6": 1
                },
                "_DAT_40021010": {
                    "gpio_reg2": 1,
                    "i2_c1_cr2": 1,
                    "io_configuration_register": 1,
                    "register2": 3,
                    "register_2": 1,
                    "syscfg_exticr1": 1
                },
                "_DAT_40021018": {
                    "gpio_reg_setting2": 1,
                    "i2_c1_cr2": 1,
                    "rcc_apb2_enr": 1,
                    "register3": 3,
                    "register_4": 1
                },
                "_DAT_4002101c": {
                    "gpio_reg1": 1,
                    "i2_c1_cr1": 1,
                    "io_configuration_register1": 1,
                    "register1": 3,
                    "register_1": 1,
                    "syscfg_exticr2": 1
                },
                "iVar1": {
                    "peripheral1": 11,
                    "peripheral_1": 1,
                    "peripheral_match_1": 1,
                    "peripheral_result1": 1,
                    "pin1": 2,
                    "pin1_peripheral": 2,
                    "pin_1_value": 1,
                    "pin_map1": 1,
                    "pin_peripheral1": 1,
                    "pin_result1": 2,
                    "pinmap_result1": 4,
                    "result1": 4
                },
                "iVar2": {
                    "peripheral2": 11,
                    "peripheral_2": 1,
                    "peripheral_match_2": 1,
                    "peripheral_result2": 1,
                    "pin2": 2,
                    "pin2_peripheral": 2,
                    "pin_2_value": 1,
                    "pin_map2": 1,
                    "pin_peripheral2": 1,
                    "pin_result2": 2,
                    "pinmap_result2": 4,
                    "result2": 4
                },
                "local_2c": {
                    "gpio_afrl": 1,
                    "gpio_init1": 1,
                    "gpio_init_speed": 1,
                    "gpio_mode": 4,
                    "gpio_on_init": 1,
                    "gpio_pin_mode": 2,
                    "gpio_pull_mode": 1,
                    "gpio_push_pull": 1,
                    "gpio_speed": 2,
                    "i2c_config": 1,
                    "i2c_speed": 1,
                    "local_variable1": 1,
                    "pin_config_param2": 1,
                    "pin_function": 1,
                    "pin_function2": 1,
                    "pin_mode": 2,
                    "pin_selection4": 1,
                    "pin_speed": 1,
                    "pull_up": 1,
                    "pupd_val": 1,
                    "scl_gpio_clock": 1,
                    "shifted_var2": 1,
                    "var2c": 1
                },
                "local_30": {
                    "bit_rate": 1,
                    "gpio_alternate": 1,
                    "gpio_alternate_function": 2,
                    "gpio_pin_af": 2,
                    "gpio_pin_af_sel": 2,
                    "gpio_pin_config": 1,
                    "gpio_pull": 1,
                    "gpio_speed": 1,
                    "i2c_index": 1,
                    "pin_af1": 1,
                    "pin_alternate_function": 1,
                    "pin_config3": 1,
                    "pin_config_param": 1,
                    "pin_function": 3,
                    "pin_function1": 1,
                    "pin_function_high": 1,
                    "pin_mode": 2,
                    "pin_selection3": 1,
                    "pin_shift": 1,
                    "scl_gpio": 1,
                    "shift": 1,
                    "shift_value": 2,
                    "shifted_var": 1
                },
                "local_34": {
                    "alt_function": 1,
                    "gpio_conf": 1,
                    "gpio_config": 1,
                    "gpio_pin2": 2,
                    "gpio_pin_config": 3,
                    "gpio_pin_function": 2,
                    "gpio_pin_mask2": 3,
                    "init_value": 1,
                    "pin_config": 1,
                    "pin_config1": 1,
                    "pin_config2": 1,
                    "pin_configuration": 1,
                    "pin_function": 1,
                    "pin_function_low": 1,
                    "pin_mask2": 5,
                    "pin_mask_2": 1,
                    "pin_mode": 1,
                    "pin_mux": 1,
                    "pin_selection2": 1,
                    "scl_alternate_function": 1
                },
                "local_38": {
                    "gpio_bit": 1,
                    "gpio_pin": 4,
                    "gpio_pin1": 3,
                    "gpio_pin_mask": 2,
                    "gpio_pin_mask1": 5,
                    "gpio_pins": 1,
                    "pin1": 1,
                    "pin1_mask": 1,
                    "pin_1_mask": 1,
                    "pin_config1": 1,
                    "pin_mask": 1,
                    "pin_mask1": 6,
                    "pin_mask_1": 1,
                    "pin_selection1": 1,
                    "scl_pin": 1
                },
                "param_1": {
                    "config": 7,
                    "config_ptr": 1,
                    "gpio_pin": 1,
                    "i2c_config": 6,
                    "i2c_params": 1,
                    "i2c_pin_config": 1,
                    "i2c_settings": 1,
                    "peripheral_config": 2,
                    "pin_array": 1,
                    "pin_config": 6,
                    "pin_configuration": 2,
                    "pin_description": 1,
                    "port_config": 1
                },
                "param_2": {
                    "address": 3,
                    "baud_rate": 1,
                    "i2c_mode": 1,
                    "param1": 1,
                    "param2": 19,
                    "param_2": 1,
                    "parameter_2": 1,
                    "pin_number_1": 1,
                    "slave_address": 1,
                    "speed": 1,
                    "value": 1
                },
                "param_3": {
                    "address_mode": 1,
                    "clock_speed": 1,
                    "data_length": 1,
                    "i2c_speed": 1,
                    "mode": 2,
                    "own_address": 1,
                    "param2": 1,
                    "param3": 19,
                    "param_3": 1,
                    "parameter_3": 1,
                    "pin_number_2": 1,
                    "reg": 1
                },
                "param_4": {
                    "clock_speed": 1,
                    "frequency": 2,
                    "i2c_pin_name": 1,
                    "i2c_slave_address": 1,
                    "own_address": 1,
                    "own_address_size": 1,
                    "param4": 19,
                    "param_4": 1,
                    "parameter_4": 1,
                    "peripheral_id": 1,
                    "size": 1,
                    "target_address": 1
                },
                "param_5": {
                    "acknowledge": 1,
                    "clock": 1,
                    "duty_cycle": 1,
                    "interrupt_mode": 2,
                    "interrupt_priority": 1,
                    "mode": 1,
                    "param5": 19,
                    "param_5": 1,
                    "parameter_5": 1,
                    "sda_pullup": 1,
                    "undefined": 1,
                    "undefined_param": 1
                },
                "piVar6": {
                    "gpio_config": 1,
                    "handle": 1,
                    "i2_c_ptr": 1,
                    "i2c": 2,
                    "i2c_config": 3,
                    "i2c_handle": 12,
                    "i2c_periph": 4,
                    "i2c_periph_ptr": 1,
                    "i2c_peripheral": 1,
                    "i2c_pointer": 1,
                    "p_i2_c": 1,
                    "peripheral_pin": 1,
                    "peripheral_ptr": 1
                },
                "pinmap_function": {
                    "get_pin_function": 1
                },
                "uVar3": {
                    "clock": 1,
                    "clock_result": 1,
                    "gpio_clock": 1,
                    "gpio_clock1": 1,
                    "gpio_clock_result": 1,
                    "gpio_config": 1,
                    "gpio_periph_clock": 1,
                    "gpio_port": 11,
                    "gpio_port_c": 1,
                    "gpio_port_clock": 6,
                    "peripheral_clock": 1,
                    "port_c": 1,
                    "port_clock": 4
                },
                "uVar4": {
                    "figure1": 1,
                    "function1": 6,
                    "function_1": 2,
                    "function_result1": 1,
                    "gpio_config1": 3,
                    "gpio_function1": 1,
                    "gpio_function_result1": 1,
                    "gpio_init1": 2,
                    "gpio_init_val": 1,
                    "gpio_init_value": 1,
                    "gpio_mode": 1,
                    "gpio_pin_func1": 1,
                    "pin_function1": 4,
                    "pinmap_func1": 2,
                    "pinmap_func_result1": 1,
                    "pinmap_function_1": 1,
                    "pinmap_result3": 1
                },
                "uVar5": {
                    "figure2": 1,
                    "function2": 6,
                    "function_2": 2,
                    "function_result2": 1,
                    "gpio_config2": 3,
                    "gpio_function2": 1,
                    "gpio_function_result2": 1,
                    "gpio_init2": 2,
                    "gpio_init_val2": 1,
                    "gpio_mask": 1,
                    "gpio_pin_func2": 1,
                    "gpio_pull": 1,
                    "pin_function2": 4,
                    "pinmap_func2": 2,
                    "pinmap_func_result2": 1,
                    "pinmap_function_2": 1,
                    "pinmap_result4": 1
                }
            },
            "called": [
                "FUN_08003f94",
                "FUN_08007376",
                "FUN_08006bb8",
                "FUN_080098d8",
                "FUN_080073ae",
                "FUN_080045c0",
                "FUN_080040e8",
                "FUN_08003f30",
                "FUN_08007320"
            ],
            "calling": [
                "FUN_08002968"
            ],
            "code": "\n\n\nvoid initialize_i2_c_pins_080077b0(int *config,int param2,int param3,int param4,undefined param5)\n\n{\n  int peripheral1;\n  int peripheral2;\n  undefined4 gpio_port;\n  uint function1;\n  uint function2;\n  int *i2c_handle;\n  uint pin_mask1;\n  uint pin_mask2;\n  uint pin_function;\n  undefined4 gpio_mode;\n  \n  if (config != (int *)0x0) {\n    i2c_handle = config + 1;\n    peripheral1 = pinmap_peripheral((int)*(char *)(config + 0x16),&DAT_0800a69c);\n    peripheral2 = pinmap_peripheral((int)*(char *)((int)config + 0x59),&DAT_0800a66c);\n    if ((peripheral1 == 0) || (peripheral2 == 0)) {\n      iprintf(\"ERROR: at least one I2C pin has no peripheral\\n\");\n    }\n    else {\n      peripheral1 = pinmap_merge_peripheral(peripheral1,peripheral2);\n      *config = peripheral1;\n      if (peripheral1 == 0) {\n        iprintf(\"ERROR: I2C pins mismatch\\n\");\n      }\n      else {\n        if (peripheral1 == 0x40005400) {\n          _DAT_4002101c = _DAT_4002101c | 0x200000;\n          _DAT_40021010 = _DAT_40021010 & 0xffdfffff;\n          *(undefined *)((int)config + 0x5a) = 0x1f;\n          *(undefined *)((int)config + 0x5b) = 0x20;\n          DAT_20000668 = i2c_handle;\n        }\n        if (*config == 0x40005800) {\n          _DAT_4002101c = _DAT_4002101c | 0x400000;\n          _DAT_40021010 = _DAT_40021010 & 0xffbfffff;\n          *(undefined *)((int)config + 0x5a) = 0x21;\n          *(undefined *)((int)config + 0x5b) = 0x22;\n          DAT_2000066c = i2c_handle;\n        }\n        gpio_port = set_GPIO_Port_Clock((uint)((int)*(char *)((int)config + 0x59) << 0x18) >> 0x1c);\n        pin_mask1 = 1 << ((int)*(char *)((int)config + 0x59) & 0xfU) & 0xffff;\n        function1 = get_pin_function((int)*(char *)((int)config + 0x59),&DAT_0800a66c);\n        function2 = get_pin_function((int)*(char *)((int)config + 0x59),&DAT_0800a66c);\n        pin_mask2 = (function1 >> 3 & 1) << 4 | function2 & 7;\n        gpio_mode = 3;\n        peripheral1 = get_pin_function((int)*(char *)((int)config + 0x59),&DAT_0800a66c);\n        pin_function = (uint)(peripheral1 << 0x1a) >> 0x1e;\n        peripheral1 = get_pin_function((int)*(char *)((int)config + 0x59),&DAT_0800a66c);\n        _DAT_40021018 = _DAT_40021018 | 1;\n        function2 = 1;\n        function1 = _DAT_40021018;\n        switch((uint)(peripheral1 << 0x11) >> 0x19) {\n        case 1:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 | 0x7000001;\n          _DAT_40010004 = function2;\n          break;\n        case 2:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          _DAT_40010004 = function2;\n          break;\n        case 3:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 | 0x7000002;\n          _DAT_40010004 = function2;\n          break;\n        case 4:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          _DAT_40010004 = function2;\n          break;\n        case 5:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 | 0x7000004;\n          _DAT_40010004 = function2;\n          break;\n        case 6:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          _DAT_40010004 = function2;\n          break;\n        case 7:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 | 0x7000008;\n          _DAT_40010004 = function2;\n          break;\n        case 8:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          _DAT_40010004 = function2;\n          break;\n        case 9:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 | 0x7000030;\n          _DAT_40010004 = function2;\n          break;\n        case 10:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          _DAT_40010004 = function2;\n          break;\n        case 0xb:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          _DAT_40010004 = function2;\n          break;\n        case 0xc:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 | 0x70000c0;\n          _DAT_40010004 = function2;\n          break;\n        case 0xd:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          _DAT_40010004 = function2;\n          break;\n        case 0xe:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          _DAT_40010004 = function2;\n          break;\n        case 0xf:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 | 0x7000300;\n          _DAT_40010004 = function2;\n          break;\n        case 0x10:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          _DAT_40010004 = function2;\n          break;\n        case 0x11:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          _DAT_40010004 = function2;\n          break;\n        case 0x12:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          _DAT_40010004 = function2;\n          break;\n        case 0x13:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 | 0x7000c00;\n          _DAT_40010004 = function2;\n          break;\n        case 0x14:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          _DAT_40010004 = function2;\n          break;\n        case 0x15:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          _DAT_40010004 = function2;\n          break;\n        case 0x16:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 | 0x7001000;\n          _DAT_40010004 = function2;\n          break;\n        case 0x17:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          _DAT_40010004 = function2;\n          break;\n        case 0x1b:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 | 0x7008000;\n          _DAT_40010004 = function2;\n          break;\n        case 0x1c:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          _DAT_40010004 = function2;\n          break;\n        case 0x21:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 & 0xf8ffffff;\n          _DAT_40010004 = function2;\n          break;\n        case 0x22:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          _DAT_40010004 = function2;\n          break;\n        case 0x23:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          _DAT_40010004 = function2;\n          break;\n        case 0x24:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n          _DAT_40010004 = function2;\n        }\n        initialize_gpio(gpio_port,&pin_mask1,function1,function2);\n        gpio_port = set_GPIO_Port_Clock((uint)((int)*(char *)(config + 0x16) << 0x18) >> 0x1c);\n        pin_mask1 = 1 << ((int)*(char *)(config + 0x16) & 0xfU) & 0xffff;\n        function1 = get_pin_function((int)*(char *)(config + 0x16),&DAT_0800a69c);\n        function2 = get_pin_function((int)*(char *)(config + 0x16),&DAT_0800a69c);\n        pin_mask2 = (function1 >> 3 & 1) << 4 | function2 & 7;\n        gpio_mode = 3;\n        peripheral1 = get_pin_function((int)*(char *)(config + 0x16),&DAT_0800a69c);\n        pin_function = (uint)(peripheral1 << 0x1a) >> 0x1e;\n        peripheral1 = get_pin_function((int)*(char *)(config + 0x16),&DAT_0800a69c);\n        _DAT_40021018 = _DAT_40021018 | 1;\n        function2 = 1;\n        function1 = _DAT_40021018;\n        switch((uint)(peripheral1 << 0x11) >> 0x19) {\n        case 1:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 | 0x7000001;\n          _DAT_40010004 = function2;\n          break;\n        case 2:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          _DAT_40010004 = function2;\n          break;\n        case 3:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 | 0x7000002;\n          _DAT_40010004 = function2;\n          break;\n        case 4:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          _DAT_40010004 = function2;\n          break;\n        case 5:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 | 0x7000004;\n          _DAT_40010004 = function2;\n          break;\n        case 6:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          _DAT_40010004 = function2;\n          break;\n        case 7:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 | 0x7000008;\n          _DAT_40010004 = function2;\n          break;\n        case 8:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          _DAT_40010004 = function2;\n          break;\n        case 9:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 | 0x7000030;\n          _DAT_40010004 = function2;\n          break;\n        case 10:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          _DAT_40010004 = function2;\n          break;\n        case 0xb:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          _DAT_40010004 = function2;\n          break;\n        case 0xc:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 | 0x70000c0;\n          _DAT_40010004 = function2;\n          break;\n        case 0xd:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          _DAT_40010004 = function2;\n          break;\n        case 0xe:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          _DAT_40010004 = function2;\n          break;\n        case 0xf:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 | 0x7000300;\n          _DAT_40010004 = function2;\n          break;\n        case 0x10:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          _DAT_40010004 = function2;\n          break;\n        case 0x11:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          _DAT_40010004 = function2;\n          break;\n        case 0x12:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          _DAT_40010004 = function2;\n          break;\n        case 0x13:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 | 0x7000c00;\n          _DAT_40010004 = function2;\n          break;\n        case 0x14:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          _DAT_40010004 = function2;\n          break;\n        case 0x15:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          _DAT_40010004 = function2;\n          break;\n        case 0x16:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 | 0x7001000;\n          _DAT_40010004 = function2;\n          break;\n        case 0x17:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          _DAT_40010004 = function2;\n          break;\n        case 0x1b:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 | 0x7008000;\n          _DAT_40010004 = function2;\n          break;\n        case 0x1c:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          _DAT_40010004 = function2;\n          break;\n        case 0x21:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 & 0xf8ffffff;\n          _DAT_40010004 = function2;\n          break;\n        case 0x22:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          _DAT_40010004 = function2;\n          break;\n        case 0x23:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          _DAT_40010004 = function2;\n          break;\n        case 0x24:\n          function1 = 0x40010000;\n          function2 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n          _DAT_40010004 = function2;\n        }\n        initialize_gpio(gpio_port,&pin_mask1,function1,function2);\n        config[1] = *config;\n        config[2] = param2;\n        config[3] = 0;\n        config[4] = param4;\n        config[7] = 0xff;\n        config[5] = param3;\n        config[6] = 0;\n        config[8] = 0;\n        config[9] = 0;\n        *(undefined *)((int)config + 0x41) = 0;\n        set_nvic_priority((int)*(char *)((int)config + 0x5a),0,1);\n        enable_irq((int)*(char *)((int)config + 0x5a));\n        set_nvic_priority((int)*(char *)((int)config + 0x5b),0,1);\n        enable_irq((int)*(char *)((int)config + 0x5b));\n        initialize_i2_c(i2c_handle);\n        *(undefined *)((int)config + 0x5d) = param5;\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_i2_c_pins_080077b0",
            "entrypoint": "0x080077b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080077b0": "initialize_i2_c_pins_080077b0",
                "HAL_GPIO_Init": "initialize_gpio",
                "HAL_I2C_Init": "initialize_i2_c",
                "HAL_NVIC_EnableIRQ": "enable_irq",
                "HAL_NVIC_SetPriority": "set_nvic_priority",
                "iVar1": "peripheral1",
                "iVar2": "peripheral2",
                "local_2c": "gpio_mode",
                "local_30": "pin_function",
                "local_34": "pin_mask2",
                "local_38": "pin_mask1",
                "param_1": "config",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "piVar6": "i2c_handle",
                "pinmap_function": "get_pin_function",
                "uVar3": "gpio_port",
                "uVar4": "function1",
                "uVar5": "function2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007e74": {
            "additional_data": {
                "FUN_08003760": {
                    "initialize": 1
                },
                "FUN_08004728": {
                    "get_state": 1
                },
                "FUN_0800542a": {
                    "get_i2_c_error": 1
                },
                "FUN_08005430": {
                    "get_tick": 1
                },
                "FUN_08007e74": {
                    "perform_i2_c_transaction": 1,
                    "transmit_and_check_acknowledge": 1,
                    "transmit_and_check_i2_c": 1,
                    "transmit_and_check_i2_c_state": 1,
                    "transmit_and_check_response": 1,
                    "transmit_and_check_status": 3,
                    "transmit_and_receive_i2_c_data": 1,
                    "transmit_data": 10,
                    "transmit_data_and_check_status": 1,
                    "transmit_data_over_i2_c": 3,
                    "transmit_data_with_i2_c": 1,
                    "transmit_data_with_timeout": 5,
                    "transmit_i2_c_data": 1
                },
                "HAL_GetTick": {
                    "get_current_time": 4
                },
                "HAL_I2C_GetError": {
                    "get_i2_c_error": 4
                },
                "HAL_I2C_GetState": {
                    "get_i2_c_state": 3,
                    "get_i2_c_status": 1
                },
                "HAL_I2C_Master_Transmit_IT": {
                    "transmit_data": 1,
                    "transmit_data_master": 1,
                    "transmit_data_with_interrupt": 1,
                    "transmit_i2_c_data": 1
                },
                "HalI2cTransmit": {
                    "send_data_via_i2_c": 1
                },
                "iVar1": {
                    "start_tick": 1,
                    "start_time": 30
                },
                "iVar2": {
                    "error_code": 3,
                    "i2c_state": 5,
                    "i2c_status": 4,
                    "result": 1,
                    "result_code": 1,
                    "return_value": 1,
                    "status": 4,
                    "transmit_result": 1,
                    "transmit_state": 1,
                    "transmit_status": 6
                },
                "iVar4": {
                    "error_status": 1,
                    "overall_status": 1,
                    "result": 11,
                    "retry_count": 1,
                    "return_code": 1,
                    "return_status": 2,
                    "return_val": 1,
                    "status": 6,
                    "transaction_status": 1,
                    "transmit_result": 3,
                    "transmit_status": 3
                },
                "iVar5": {
                    "device_address_offset": 1,
                    "device_handle": 3,
                    "i2c_device": 4,
                    "i2c_device_address": 1,
                    "i2c_handle": 18,
                    "i2c_instance": 3,
                    "i2c_state": 1
                },
                "param_1": {
                    "device_address": 25,
                    "i2c_address": 3,
                    "i2c_device_address": 2,
                    "i2c_handle": 1
                },
                "param_2": {
                    "data": 4,
                    "data_buffer": 8,
                    "data_to_send": 1,
                    "device_address": 1,
                    "p_data": 1,
                    "reg_address": 1,
                    "transmit_buffer": 8,
                    "tx_buffer": 5,
                    "tx_data": 1,
                    "write_buffer": 1
                },
                "param_3": {
                    "data": 2,
                    "data_length": 8,
                    "data_size": 4,
                    "size": 2,
                    "transmit_buffer_size": 7,
                    "transmit_size": 1,
                    "tx_buffer_size": 5,
                    "tx_size": 1,
                    "write_buffer_size": 1
                },
                "param_4": {
                    "data_size": 1,
                    "dev_address": 1,
                    "i2c_timeout": 6,
                    "size": 1,
                    "time_out": 1,
                    "timeout": 20,
                    "transmit_timeout": 1
                },
                "uVar3": {
                    "elapsed_time": 30,
                    "time_elapsed": 1
                },
                "uVar6": {
                    "device_address": 1,
                    "error_flag": 1,
                    "error_status": 3,
                    "i2c_timeout": 1,
                    "new_timeout": 1,
                    "original_timeout": 1,
                    "saved_i2c_timeout": 1,
                    "temp": 1,
                    "temp_timeout": 1,
                    "timeout": 4,
                    "timeout_backup": 3,
                    "timeout_copy": 4,
                    "timeout_param": 1,
                    "timeout_value": 2,
                    "timeout_var": 1,
                    "user_data": 1
                }
            },
            "called": [
                "FUN_08004728",
                "FUN_0800542a",
                "FUN_08005430",
                "FUN_08003760"
            ],
            "calling": [
                "FUN_08002a58"
            ],
            "code": "\nint transmit_data_with_timeout_08007e74(int device_address,undefined4 data_buffer,undefined4 data_length,undefined4 timeout)\n\n{\n  int start_time;\n  int transmit_status;\n  uint elapsed_time;\n  int result;\n  int i2c_handle;\n  undefined4 timeout_copy;\n  \n  timeout_copy = timeout;\n  start_time = get_current_time();\n  elapsed_time = 0;\n  result = 2;\n  do {\n    i2c_handle = device_address + 4;\n    transmit_status = transmit_data(i2c_handle,data_buffer,data_length,timeout,timeout_copy);\n    if (transmit_status == 0) {\n      result = 0;\n      while ((transmit_status = get_i2_c_state(i2c_handle), transmit_status != 0x20 && (result == 0))) {\n        transmit_status = get_current_time();\n        elapsed_time = transmit_status - start_time;\n        if (elapsed_time < 0x65) {\n          transmit_status = get_i2_c_error(i2c_handle);\n          if (transmit_status != 0) {\n            result = 2;\n          }\n        }\n        else {\n          result = 1;\n        }\n      }\n    }\n    transmit_status = get_i2_c_error(i2c_handle);\n  } while ((transmit_status == 4) && (elapsed_time < 100));\n  return result;\n}\n\n",
            "current_name": "transmit_data_with_timeout_08007e74",
            "entrypoint": "0x08007e74",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007e74": "transmit_data_with_timeout_08007e74",
                "HAL_GetTick": "get_current_time",
                "HAL_I2C_GetError": "get_i2_c_error",
                "HAL_I2C_GetState": "get_i2_c_state",
                "HAL_I2C_Master_Transmit_IT": "transmit_data",
                "iVar1": "start_time",
                "iVar2": "transmit_status",
                "iVar4": "result",
                "iVar5": "i2c_handle",
                "param_1": "device_address",
                "param_2": "data_buffer",
                "param_3": "data_length",
                "param_4": "timeout",
                "uVar3": "elapsed_time",
                "uVar6": "timeout_copy"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007ede": {
            "additional_data": {
                "FUN_08007ede": {
                    "copy_and_increment": 2,
                    "copy_bytes": 2,
                    "copy_data": 16,
                    "copy_data_into_buffer": 1,
                    "copy_data_to_buffer": 3,
                    "copy_data_to_destination": 2,
                    "copy_data_to_memory": 2,
                    "copy_memory": 1,
                    "copy_to_buffer": 1,
                    "copy_to_memory": 1
                },
                "param_1": {
                    "dest": 2,
                    "dest_addr": 1,
                    "dest_address": 5,
                    "dest_buffer": 4,
                    "dest_pointer": 1,
                    "dest_ptr": 1,
                    "destination": 8,
                    "destination_addr": 1,
                    "destination_address": 5,
                    "destination_buffer": 2,
                    "dst_address": 1
                },
                "param_2": {
                    "source": 8,
                    "source_addr": 1,
                    "source_address": 5,
                    "source_buffer": 3,
                    "src": 2,
                    "src_addr": 1,
                    "src_address": 6,
                    "src_buffer": 3,
                    "src_pointer": 1,
                    "src_ptr": 1
                },
                "param_3": {
                    "buffer_length": 2,
                    "buffer_size": 1,
                    "count": 1,
                    "data_length": 2,
                    "data_size": 1,
                    "length": 8,
                    "num_bytes": 10,
                    "size": 6
                },
                "uVar1": {
                    "byte_counter": 1,
                    "byte_index": 1,
                    "counter": 2,
                    "current_index": 2,
                    "i": 11,
                    "index": 13,
                    "offset": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080027f0",
                "FUN_0800288c"
            ],
            "code": "\nundefined4 copy_data_to_buffer_08007ede(int destination,int source,uint num_bytes)\n\n{\n  uint index;\n  \n  if (0x20 < num_bytes) {\n    return 2;\n  }\n  for (index = 0; index < num_bytes; index = index + 1 & 0xff) {\n    *(undefined *)(destination + index + 0x68) = *(undefined *)(source + index);\n    *(char *)(destination + 0x88) = *(char *)(destination + 0x88) + '\\x01';\n  }\n  return 0;\n}\n\n",
            "current_name": "copy_data_to_buffer_08007ede",
            "entrypoint": "0x08007ede",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007ede": "copy_data_to_buffer_08007ede",
                "param_1": "destination",
                "param_2": "source",
                "param_3": "num_bytes",
                "uVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007f0e": {
            "additional_data": {
                "FUN_08003760": {
                    "get_elapsed_time": 1,
                    "get_i2_c_error": 1,
                    "hal_get_tick": 2,
                    "i2c_get_error": 1
                },
                "FUN_080047f4": {
                    "hal_i2_c_get_state": 1,
                    "hal_i2_c_master_receive_it": 1,
                    "i2c_master_receive": 1,
                    "i2c_receive": 1,
                    "i2c_receive_it": 1
                },
                "FUN_0800542a": {
                    "get_i2_c_state": 1,
                    "get_tick_count": 1,
                    "hal_i2_c_get_state": 1,
                    "hal_i2_c_master_receive": 1,
                    "initialize_i2_c": 1
                },
                "FUN_08005430": {
                    "get_i2_c_error": 1,
                    "get_i2_c_state": 1,
                    "hal_i2_c_get_error": 2,
                    "i2c_get_state": 1
                },
                "FUN_08007f0e": {
                    "perform_i2_c_master_read": 1,
                    "receive_data": 9,
                    "receive_data_and_check": 1,
                    "receive_data_from_i2_c": 9,
                    "receive_data_from_i2_c_master": 1,
                    "receive_data_over_i2_c": 2,
                    "receive_data_with_timeout": 5,
                    "receive_i2_c_data": 2
                },
                "HAL_GetTick": {
                    "get_current_time": 5
                },
                "HAL_I2C_GetError": {
                    "get_error": 1,
                    "get_i2_c_error": 3,
                    "get_i2c_error": 1
                },
                "HAL_I2C_GetState": {
                    "get_i2_c_state": 3,
                    "get_i2c_state": 1,
                    "get_state": 1
                },
                "HAL_I2C_Master_Receive_IT": {
                    "receive_data": 2,
                    "receive_data_async": 1,
                    "start_i2_c_receive": 2
                },
                "iVar1": {
                    "start_tick": 2,
                    "start_time": 28,
                    "start_timestamp": 1
                },
                "iVar2": {
                    "current_state": 1,
                    "error_code": 4,
                    "i2c_result": 1,
                    "i2c_state": 6,
                    "i2c_status": 7,
                    "result": 3,
                    "result_code": 1,
                    "state": 1,
                    "status": 4
                },
                "iVar4": {
                    "read_status": 1,
                    "result": 19,
                    "result_code": 1,
                    "return_code": 1,
                    "return_flag": 1,
                    "return_status": 1,
                    "return_value": 2,
                    "status": 5
                },
                "iVar5": {
                    "device_addr": 1,
                    "device_address_plus4": 1,
                    "i2c_address": 1,
                    "i2c_device": 6,
                    "i2c_device_instance": 1,
                    "i2c_handle": 16,
                    "i2c_index": 2,
                    "i2c_instance": 3
                },
                "param_1": {
                    "address": 1,
                    "data_buffer": 1,
                    "device_addr": 1,
                    "device_address": 23,
                    "i2c_address": 2,
                    "i2c_device_address": 2,
                    "i2c_periph": 1
                },
                "param_2": {
                    "buffer": 1,
                    "data_buffer": 18,
                    "data_pointer": 1,
                    "device_address": 1,
                    "p_data": 4,
                    "receive_buffer": 4,
                    "rx_buffer": 2
                },
                "param_3": {
                    "buffer_length": 1,
                    "buffer_size": 3,
                    "data_length": 6,
                    "data_size": 12,
                    "receive_size": 1,
                    "register_address": 1,
                    "rx_buffer_size": 1,
                    "rx_size": 1,
                    "size": 5
                },
                "param_4": {
                    "data_size": 1,
                    "dev_addr": 1,
                    "dev_address": 1,
                    "i2_c_address": 1,
                    "i2c_handle": 1,
                    "i2c_instance": 1,
                    "i2c_timeout": 5,
                    "timeout": 20
                },
                "uVar3": {
                    "elapsed_time": 31
                },
                "uVar6": {
                    "error": 1,
                    "handle_param": 1,
                    "i2_c_address_copy": 1,
                    "instance": 1,
                    "p_handle": 1,
                    "param4": 1,
                    "param_4_copy": 1,
                    "slave_addr": 1,
                    "temp": 1,
                    "temp_timeout": 2,
                    "timeout": 3,
                    "timeout_backup": 1,
                    "timeout_copy": 3,
                    "timeout_param": 2,
                    "timeout_ref": 1,
                    "timeout_val": 1,
                    "tmp_timeout": 1,
                    "unused": 1,
                    "user_data": 1
                }
            },
            "called": [
                "FUN_0800542a",
                "FUN_080047f4",
                "FUN_08005430",
                "FUN_08003760"
            ],
            "calling": [
                "FUN_08002b68"
            ],
            "code": "\nint receive_data_from_i2_c_master_08007f0e(int device_address,undefined4 data_buffer,undefined4 data_size,undefined4 timeout)\n\n{\n  int start_time;\n  int i2c_status;\n  uint elapsed_time;\n  int result;\n  int i2c_handle;\n  undefined4 timeout_copy;\n  \n  timeout_copy = timeout;\n  start_time = get_current_time();\n  elapsed_time = 0;\n  result = 2;\n  do {\n    i2c_handle = device_address + 4;\n    i2c_status = receive_data(i2c_handle,data_buffer,data_size,timeout,timeout_copy);\n    if (i2c_status == 0) {\n      result = 0;\n      while ((i2c_status = get_i2_c_state(i2c_handle), i2c_status != 0x20 && (result == 0))) {\n        i2c_status = get_current_time();\n        elapsed_time = i2c_status - start_time;\n        if (elapsed_time < 0x65) {\n          i2c_status = get_i2_c_error(i2c_handle);\n          if (i2c_status != 0) {\n            result = 2;\n          }\n        }\n        else {\n          result = 1;\n        }\n      }\n    }\n    i2c_status = get_i2_c_error(i2c_handle);\n  } while ((i2c_status == 4) && (elapsed_time < 100));\n  return result;\n}\n\n",
            "current_name": "receive_data_from_i2_c_master_08007f0e",
            "entrypoint": "0x08007f0e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007f0e": "receive_data_from_i2_c_master_08007f0e",
                "HAL_GetTick": "get_current_time",
                "HAL_I2C_GetError": "get_i2_c_error",
                "HAL_I2C_GetState": "get_i2_c_state",
                "HAL_I2C_Master_Receive_IT": "receive_data",
                "iVar1": "start_time",
                "iVar2": "i2c_status",
                "iVar4": "result",
                "iVar5": "i2c_handle",
                "param_1": "device_address",
                "param_2": "data_buffer",
                "param_3": "data_size",
                "param_4": "timeout",
                "uVar3": "elapsed_time",
                "uVar6": "timeout_copy"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007f78": {
            "additional_data": {
                "FUN_08007f78": {
                    "add_four": 1,
                    "decrement_by4": 1,
                    "decrement_by_four": 2,
                    "subtract_4": 1,
                    "subtract_by_four": 1,
                    "subtract_four": 25
                },
                "param_1": {
                    "input": 5,
                    "input_minus_four": 1,
                    "input_num": 1,
                    "input_number": 4,
                    "input_value": 5,
                    "integer": 1,
                    "new_value": 1,
                    "num": 5,
                    "number": 3,
                    "result": 5
                },
                "param_2": {
                    "new_number": 1
                },
                "return_value": {
                    "result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08007fa0",
                "FUN_08008020",
                "FUN_08007ff0"
            ],
            "code": "\nint subtract_by_four_08007f78(int num)\n\n{\n  return num + -4;\n}\n\n",
            "current_name": "subtract_by_four_08007f78",
            "entrypoint": "0x08007f78",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007f78": "subtract_by_four_08007f78",
                "param_1": "num"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007f7c": {
            "additional_data": {
                "FUN_08007f7c": {
                    "set_i2_c_device_address": 2,
                    "set_i2_c_listen_and_enable": 1,
                    "set_i2_c_listen_mode": 5,
                    "set_i2_c_register": 1,
                    "set_i2_c_slave_address": 1,
                    "update_i2_c": 1,
                    "update_i2_c_configuration": 1,
                    "update_i2_c_data": 4,
                    "update_i2_c_device": 3,
                    "update_i2_c_device_config": 1,
                    "update_i2_c_listen_configuration": 1,
                    "update_i2_c_listen_mode": 2,
                    "update_i2_c_listener": 1,
                    "update_i2_c_parameters": 3,
                    "update_i2_c_params": 1,
                    "update_i2_c_registers": 1,
                    "update_i2c_settings": 2
                },
                "HAL_I2C_EnableListen_IT": {
                    "enable_i2_c_event_listener": 1,
                    "enable_i2_c_interrupt": 2,
                    "enable_i2_c_listen": 3,
                    "enable_i2_c_listen_interrupt": 11,
                    "enable_i2_c_listener": 1,
                    "enable_i2c_listen": 1,
                    "enable_interrupt_for_i2_c": 1
                },
                "param_1": {
                    "address": 1,
                    "bus_address": 1,
                    "device": 5,
                    "device_address": 13,
                    "device_config": 1,
                    "device_handle": 6,
                    "device_ptr": 2,
                    "i2c_dev_addr": 1,
                    "i2c_device": 1
                },
                "param_2": {
                    "address": 2,
                    "data": 7,
                    "data_value": 1,
                    "device_address": 1,
                    "enable_listen": 1,
                    "enabled_state": 1,
                    "i2c_listen": 1,
                    "listen_enabled": 2,
                    "listen_mode": 6,
                    "new_config": 1,
                    "new_i2c_value": 1,
                    "new_param_value": 1,
                    "param_value": 1,
                    "register_value": 2,
                    "slave_address": 2,
                    "value": 1
                }
            },
            "called": [
                "FUN_080049e0"
            ],
            "calling": [
                "FUN_08002968"
            ],
            "code": "\nvoid update_i2_c_listener_08007f7c(int device_address,int data)\n\n{\n  if (device_address != 0) {\n    if (data != 0) {\n      *(int *)(device_address + 0x60) = data;\n      enable_i2_c_listen_interrupt(device_address + 4);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "update_i2_c_listener_08007f7c",
            "entrypoint": "0x08007f7c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007f7c": "update_i2_c_listener_08007f7c",
                "HAL_I2C_EnableListen_IT": "enable_i2_c_listen_interrupt",
                "param_1": "device_address",
                "param_2": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007f8e": {
            "additional_data": {
                "100": {
                    "offset": 1
                },
                "FUN_08007f8e": {
                    "configure_i2_c": 1,
                    "set_i2_c_data": 1,
                    "set_i2_c_data_and_enable_listen": 1,
                    "set_i2_c_device_address_and_enable_listening": 1,
                    "set_i2_c_listen_address": 1,
                    "set_i2_c_listen_mode": 4,
                    "set_i2_c_listener": 1,
                    "store_i2_c_data": 1,
                    "store_parameter_value_in_register": 1,
                    "update_device_data": 1,
                    "update_i2_c_address": 1,
                    "update_i2_c_buffer": 1,
                    "update_i2_c_config": 1,
                    "update_i2_c_data": 1,
                    "update_i2_c_device": 2,
                    "update_i2_c_device_data": 1,
                    "update_i2_c_enable": 1,
                    "update_i2_c_listen": 1,
                    "update_i2_c_parameters": 1,
                    "update_i2_c_registers": 1,
                    "update_i2c_configuration": 1,
                    "update_i2c_data": 2,
                    "update_i2c_device": 1,
                    "update_i2c_info": 1,
                    "update_i2c_param": 2
                },
                "HAL_I2C_EnableListen_IT": {
                    "enable_i2_c_listen": 3,
                    "enable_i2_c_listen_interrupt": 3,
                    "enable_i2_c_listen_it": 2,
                    "enable_i2_c_listening": 2,
                    "enable_i2c_listen": 2,
                    "enable_i2c_listen_interrupt": 1,
                    "enable_i2c_listen_it": 1,
                    "enable_listen_interrupt": 1
                },
                "param_1": {
                    "buffer_address": 1,
                    "data_pointer": 1,
                    "device": 4,
                    "device_addr": 1,
                    "device_address": 17,
                    "device_data": 1,
                    "device_info": 1,
                    "i2c_controller": 1,
                    "i2c_data": 1,
                    "i2c_device_address": 1,
                    "i2c_handle": 1,
                    "register_a": 1
                },
                "param_2": {
                    "data": 7,
                    "data_addr": 1,
                    "data_value": 3,
                    "enable_listen": 1,
                    "listen_address": 1,
                    "listen_flag": 1,
                    "listen_mode": 3,
                    "listen_status": 1,
                    "mode": 1,
                    "new_address": 1,
                    "new_configuration": 1,
                    "new_data": 3,
                    "new_param": 1,
                    "param_value": 1,
                    "register_b": 1,
                    "register_value": 1,
                    "value": 3
                }
            },
            "called": [
                "FUN_080049e0"
            ],
            "calling": [
                "FUN_08002968"
            ],
            "code": "\nvoid update_i2_c_device_data_08007f8e(int device_address,int data)\n\n{\n  if (device_address != 0) {\n    if (data != 0) {\n      *(int *)(device_address + 100) = data;\n      enable_i2_c_listen_interrupt(device_address + 4);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "update_i2_c_device_data_08007f8e",
            "entrypoint": "0x08007f8e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007f8e": "update_i2_c_device_data_08007f8e",
                "HAL_I2C_EnableListen_IT": "enable_i2_c_listen_interrupt",
                "param_1": "device_address",
                "param_2": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007fa0": {
            "additional_data": {
                "FUN_080048c8": {
                    "i2c_slave_sequential_receive_it": 1
                },
                "FUN_08004954": {
                    "i2c_slave_sequential_transmit_it": 1
                },
                "FUN_08007f78": {
                    "get_i2_c_obj": 1
                },
                "FUN_08007fa0": {
                    "i2c_data_transmission": 1,
                    "i2c_sequential_transaction": 1,
                    "perform_i2_c_operation": 1,
                    "perform_i2_c_transfer": 1,
                    "process_i2c_data": 2,
                    "send_data": 2,
                    "send_data_or_receive": 1,
                    "send_i2c_data": 1,
                    "send_or_receive_data": 2,
                    "transmit_data": 7,
                    "transmit_i2_c_data": 1,
                    "transmit_or_receive_data": 11
                },
                "HAL_I2C_Slave_Sequential_Receive_IT": {
                    "receive_data": 6,
                    "receive_data_in_sequence": 1,
                    "receive_data_it": 1,
                    "receive_data_over_i2_c": 1,
                    "receive_data_sequentially": 3,
                    "receive_data_sequentially_with_it": 1,
                    "receive_data_using_i2_c": 1,
                    "receive_data_with_interrupt": 1,
                    "receive_i2_c_data": 2,
                    "receive_i2_c_sequential_data": 1,
                    "receive_i2c_data": 1,
                    "receive_i2c_data_sequentially": 1,
                    "receive_sequential_data": 1,
                    "receive_sequential_data_it": 1,
                    "receive_sequentially": 1,
                    "sequential_receive": 1
                },
                "HAL_I2C_Slave_Sequential_Transmit_IT": {
                    "send_i2c_data_sequentially": 1,
                    "sequential_transmit": 1,
                    "transmit_data": 6,
                    "transmit_data_in_sequence": 1,
                    "transmit_data_it": 1,
                    "transmit_data_over_i2_c": 1,
                    "transmit_data_sequentially": 3,
                    "transmit_data_sequentially_with_it": 1,
                    "transmit_data_using_i2_c": 1,
                    "transmit_data_with_interrupt": 1,
                    "transmit_i2_c_data": 2,
                    "transmit_i2_c_sequential_data": 1,
                    "transmit_i2c_data": 1,
                    "transmit_sequential_data": 1,
                    "transmit_sequential_data_it": 1,
                    "transmit_sequentially": 1
                },
                "get_i2c_obj": {
                    "create_i2_c_obj": 1,
                    "get_i2_c_object": 12,
                    "get_i2c_object": 4,
                    "retrieve_i2_c_object": 2
                },
                "iVar1": {
                    "i2c_obj": 18,
                    "i2c_obj_address": 1,
                    "i2c_obj_ref": 1,
                    "i2c_object": 10,
                    "obj_handle": 1
                },
                "param_1": {
                    "arg1": 1,
                    "base_address": 1,
                    "config_ptr": 1,
                    "data": 1,
                    "data_address": 3,
                    "data_buffer": 5,
                    "device_address": 5,
                    "i2_c_handle": 1,
                    "i2c_device": 2,
                    "i2c_handle": 2,
                    "i2c_obj": 2,
                    "i2c_object": 1,
                    "input": 1,
                    "input_buffer": 1,
                    "input_data": 1,
                    "object": 1,
                    "param1": 1,
                    "pointer": 1
                },
                "param_2": {
                    "arg2": 1,
                    "flag": 1,
                    "is_receive": 15,
                    "is_receive_mode": 1,
                    "is_transmit": 4,
                    "is_transmitting": 1,
                    "is_write_operation": 1,
                    "mode": 3,
                    "operation_type": 1,
                    "param2": 1,
                    "receive_flag": 1,
                    "transmit_flag": 1
                },
                "param_3": {
                    "arg3": 1,
                    "check_value": 2,
                    "compare_value": 3,
                    "comparison_value": 1,
                    "condition": 1,
                    "data_length": 2,
                    "data_size": 3,
                    "expected_data": 2,
                    "expected_data_length": 1,
                    "expected_length": 2,
                    "expected_param": 1,
                    "expected_response": 1,
                    "expected_size": 1,
                    "expected_value": 2,
                    "lookup": 1,
                    "param3": 2,
                    "param3_value": 1,
                    "param_value": 1,
                    "received_length": 1,
                    "size": 1,
                    "some_value": 1
                },
                "param_4": {
                    "additional_data": 1,
                    "arg4": 1,
                    "callback": 13,
                    "callback_func": 2,
                    "callback_function": 7,
                    "param": 1,
                    "param4": 1,
                    "param4_value": 1,
                    "param_callback": 1,
                    "unknown_param": 1,
                    "user_data": 2
                }
            },
            "called": [
                "FUN_08007f78",
                "FUN_08004954",
                "FUN_080048c8"
            ],
            "calling": [
                "FUN_08004ac2"
            ],
            "code": "\nvoid transmit_or_receive_data_08007fa0(int device_address,int is_receive,int compare_value,undefined4 callback)\n\n{\n  int i2c_obj;\n  \n  i2c_obj = get_i2_c_object();\n  if (compare_value == *(int *)(device_address + 0xc)) {\n    if (is_receive == 0) {\n      *(undefined *)(i2c_obj + 0x88) = 0;\n      *(undefined *)(i2c_obj + 0x5c) = 0;\n      if (*(code **)(i2c_obj + 100) != (code *)0x0) {\n        (**(code **)(i2c_obj + 100))();\n      }\n      transmit_data(device_address,i2c_obj + 0x68,*(undefined *)(i2c_obj + 0x88),8);\n      return;\n    }\n    *(undefined *)(i2c_obj + 0x5c) = 1;\n    receive_data(device_address,i2c_obj + 0x68,0x20,8,callback);\n  }\n  return;\n}\n\n",
            "current_name": "transmit_or_receive_data_08007fa0",
            "entrypoint": "0x08007fa0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007fa0": "transmit_or_receive_data_08007fa0",
                "HAL_I2C_Slave_Sequential_Receive_IT": "receive_data",
                "HAL_I2C_Slave_Sequential_Transmit_IT": "transmit_data",
                "get_i2c_obj": "get_i2_c_object",
                "iVar1": "i2c_obj",
                "param_1": "device_address",
                "param_2": "is_receive",
                "param_3": "compare_value",
                "param_4": "callback"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007ff0": {
            "additional_data": {
                "FUN_080049e0": {
                    "convert_param_to_pointer": 1,
                    "extract_data": 1,
                    "function_1": 1,
                    "get_i2_c_obj_ptr": 1,
                    "get_i2c_obj": 4,
                    "get_i2c_obj_address": 1,
                    "get_i2c_obj_function": 1,
                    "get_i2c_object_function": 2,
                    "initialize_i2c_obj": 1,
                    "initialize_i2c_object": 1,
                    "initialize_param1": 1,
                    "process_i2c_parameter": 1,
                    "retrieve_data": 1,
                    "retrieve_data_from_i2_c_object": 1,
                    "retrieve_i2c_data": 1
                },
                "FUN_08007f78": {
                    "check_condition": 2,
                    "check_i2c_condition": 2,
                    "check_i2c_conditions": 1,
                    "check_i2c_object_state": 1,
                    "check_i2c_status": 1,
                    "check_i2c_value": 1,
                    "enable_i2_c_listen_interrupt": 1,
                    "enable_i2_c_listen_it": 1,
                    "enable_i2c_listen_interrupt": 1,
                    "enable_i2c_listen_interrupts": 1,
                    "enable_interrupt": 1,
                    "enable_listen_function": 2,
                    "function_2": 1,
                    "hal_i2_c_enable_listen_it": 1,
                    "perform_i2c_operation": 1,
                    "process_i2c_obj": 1,
                    "process_param1": 1
                },
                "FUN_08007ff0": {
                    "enable_and_listen_i2_c": 1,
                    "enable_i2_c_and_call_function": 1,
                    "enable_i2_c_and_listen": 1,
                    "enable_i2_c_listening": 1,
                    "enable_i2c_and_execute_callback": 1,
                    "enable_i2c_and_hal_listen_interrupt": 1,
                    "enable_i2c_and_listen": 6,
                    "enable_i2c_function": 1,
                    "enable_i2c_function_and_enable_interrupt": 1,
                    "enable_i2c_listen": 3,
                    "enable_i2c_listen_mode": 3,
                    "enable_i2c_listener": 2,
                    "initialize_i2_c": 1,
                    "initialize_i2_c_communication": 1,
                    "initialize_i2c_and_enable_listen": 4,
                    "initiate_i2c_communication": 1,
                    "update_i2c_and_enable_listen": 1
                },
                "F_080049e0": {
                    "process_i2_c_packet": 1
                },
                "HAL_I2C_EnableListen_IT": {
                    "enable_i2_c_listen_interrupt": 1,
                    "enable_i2c_listen_interrupt": 13,
                    "enable_i2c_listen_it": 3,
                    "enable_listen_interrupts": 1,
                    "enable_listen_it": 1
                },
                "code": {
                    "callback_function": 1,
                    "function_pointer": 5,
                    "function_ptr": 1
                },
                "get_i2c_obj": {
                    "get_i2_c_object": 3,
                    "get_i2c_handle": 1,
                    "get_i2c_instance": 1,
                    "get_i2c_object": 12,
                    "obtain_i2c_handle": 1,
                    "retrieve_i2c_obj": 1,
                    "retrieve_i2c_object": 2
                },
                "iVar1": {
                    "i2c_handle": 3,
                    "i2c_instance": 1,
                    "i2c_obj": 20,
                    "i2c_obj_pointer": 1,
                    "i2c_object": 5,
                    "param_1": 1
                },
                "param_1": {
                    "arg": 1,
                    "condition": 1,
                    "device_address": 1,
                    "i2c_device": 3,
                    "i2c_device_handle": 2,
                    "i2c_handle": 2,
                    "i2c_instance": 2,
                    "i2c_obj": 4,
                    "i2c_obj_address": 1,
                    "i2c_object": 1,
                    "i2c_packet": 1,
                    "i2c_param": 1,
                    "i2c_port": 1,
                    "listen_param": 1,
                    "obj_instance": 1,
                    "obj_param": 1,
                    "obj_port": 1,
                    "param": 3,
                    "param_1": 2,
                    "parameter1": 1
                }
            },
            "called": [
                "FUN_080049e0",
                "FUN_08007f78"
            ],
            "calling": [
                "FUN_08004aec",
                "FUN_08004f3c",
                "FUN_08005084"
            ],
            "code": "\nvoid initialize_i2c_and_enable_listen_08007ff0(undefined4 i2c_obj)\n\n{\n  int i2c_obj;\n  \n  i2c_obj = get_i2c_object();\n  if (((*(function_pointer **)(i2c_obj + 0x60) != (function_pointer *)0x0) && (*(char *)(i2c_obj + 0x5c) == '\\x01')) &&\n     (*(char *)(i2c_obj + 0x2c) != ' ')) {\n    (**(function_pointer **)(i2c_obj + 0x60))(i2c_obj + 0x68);\n  }\n  enable_i2c_listen_interrupt(i2c_obj);\n  return;\n}\n\n",
            "current_name": "initialize_i2c_and_enable_listen_08007ff0",
            "entrypoint": "0x08007ff0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007ff0": "initialize_i2c_and_enable_listen_08007ff0",
                "HAL_I2C_EnableListen_IT": "enable_i2c_listen_interrupt",
                "code": "function_pointer",
                "get_i2c_obj": "get_i2c_object",
                "iVar1": "i2c_obj",
                "param_1": "i2c_obj"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008020": {
            "additional_data": {
                "FUN_080049e0": {
                    "get_i2_c_object_pointer": 1,
                    "get_i2c_object": 1
                },
                "FUN_08007f78": {
                    "check_i2_c_enabled": 1,
                    "is_i2c_object_initialized": 1
                },
                "FUN_08008020": {
                    "enable_i2_c_listen": 4,
                    "enable_i2_c_listen_interrupt": 9,
                    "enable_i2_c_listen_it": 2,
                    "enable_i2_c_listener": 1,
                    "enable_i2_c_listening": 1,
                    "enable_i2c_listen": 5,
                    "enable_i2c_listen_interrupt": 1,
                    "enable_i2c_listen_interrupts": 1,
                    "enable_listen_i2_c": 1,
                    "enable_listen_interrupt": 4,
                    "enable_listen_interrupts": 1,
                    "initialize_i2_c_listen_mode": 1
                },
                "HAL_I2C_EnableListen_IT": {
                    "enable_i2_c_listen": 2,
                    "enable_i2_c_listen_interrupt": 6,
                    "enable_i2_c_listen_interrupt_it": 1,
                    "enable_i2_c_listen_it": 2,
                    "enable_i2_c_listener_handler": 1,
                    "enable_i2_c_listening_it": 1,
                    "enable_i2c_listen_interrupt": 3,
                    "enable_i2c_listen_it": 2,
                    "enable_listen_interrupt_it": 1
                },
                "HAl_I2C_EnableListen_IT": {
                    "enable_i2c_listen_interrupts": 1
                },
                "Hal_I2C_EnableListen_IT": {
                    "enable_interrupt_listen": 1
                },
                "get_i2c_obj": {
                    "get_i2_c_object": 8,
                    "get_i2c_object": 2
                },
                "iVar1": {
                    "i2c_obj": 19,
                    "i2c_obj_index": 1,
                    "i2c_obj_pointer": 1,
                    "i2c_object": 7,
                    "i2c_object_address": 1,
                    "i2c_object_index": 1,
                    "obj_address": 1
                },
                "param_1": {
                    "device_address": 2,
                    "i2c_device_handle": 1,
                    "i2c_handle": 6,
                    "i2c_instance": 2,
                    "i2c_module_address": 1,
                    "i2c_obj_id": 1,
                    "i2c_object": 4,
                    "i2c_param": 2,
                    "interrupt_handler": 1,
                    "interrupt_line": 1,
                    "listen_address": 1,
                    "listen_param": 2,
                    "obj": 1,
                    "obj_address": 1,
                    "object_address": 1,
                    "object_handle": 1,
                    "param": 3
                }
            },
            "called": [
                "FUN_080049e0",
                "FUN_08007f78"
            ],
            "calling": [
                "FUN_08004f3c"
            ],
            "code": "\nvoid enable_i2_c_listen_interrupt_08008020(undefined4 i2c_handle)\n\n{\n  int i2c_obj;\n  \n  i2c_obj = get_i2_c_object();\n  if (*(char *)(i2c_obj + 0x5d) == '\\0') {\n    enable_i2_c_listen_interrupt_08008020(i2c_handle);\n  }\n  return;\n}\n\n",
            "current_name": "enable_i2_c_listen_interrupt_08008020",
            "entrypoint": "0x08008020",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008020": "enable_i2_c_listen_interrupt_08008020",
                "HAL_I2C_EnableListen_IT": "enable_i2_c_listen_interrupt",
                "get_i2c_obj": "get_i2_c_object",
                "iVar1": "i2c_obj",
                "param_1": "i2c_handle"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008078": {
            "additional_data": {
                "DAT_0800a81c": {
                    "data2": 2,
                    "gpio_af_selection2": 1,
                    "gpio_pinmap_params1": 1,
                    "pin_map_gpio": 1,
                    "pin_peripheral_mapping2": 1,
                    "uart2and3_pin_map": 1,
                    "uart_pin_data2": 1,
                    "uart_pinmap2": 1
                },
                "DAT_0800a864": {
                    "data1": 2,
                    "gpio_af_selection1": 1,
                    "gpio_pinmap_params2": 1,
                    "pin_map_uart": 1,
                    "pin_peripheral_mapping1": 1,
                    "uart1_pin_map": 1,
                    "uart_pin_data1": 1,
                    "uart_pinmap1": 1
                },
                "DAT_200006c0": {
                    "data3": 2,
                    "register_memory": 1,
                    "uart_base_regs_array": 1,
                    "uart_pin_array": 1,
                    "uart_pin_mapping": 1,
                    "uart_port_buffer": 1,
                    "uart_registers": 1
                },
                "DAT_40010004": {
                    "gpio_config_reg": 1,
                    "gpio_pin_config": 1,
                    "uart_reg3": 1
                },
                "DAT_4002100c": {
                    "uart1_mcr": 1,
                    "uart_config_reg1": 1
                },
                "DAT_40021010": {
                    "uart2_mcr": 1,
                    "uart_config_reg3": 1
                },
                "DAT_40021018": {
                    "uart1_lcr": 1,
                    "uart_config_reg2": 1
                },
                "DAT_4002101c": {
                    "uart2_lcr": 1,
                    "uart_config_reg4": 1
                },
                "FUN_080040e8": {
                    "copy_pin_array": 1,
                    "get_pin_mask_config": 1,
                    "hal_gpio_init": 1,
                    "pinmap_function": 1
                },
                "FUN_0800674e": {
                    "map_pin_function1": 1,
                    "pinmap_function": 1,
                    "pinmap_merge_peripheral": 2
                },
                "FUN_08006bb8": {
                    "iprintf": 2,
                    "map_pin_peripheral2": 1,
                    "pinmap_merge_peripheral": 1
                },
                "FUN_08007320": {
                    "hal_uart_init": 2,
                    "map_pin_function2": 1,
                    "set_uart_pin": 1
                },
                "FUN_08007376": {
                    "map_pin_peripheral1": 1,
                    "pinmap_peripheral": 3
                },
                "FUN_080073ae": {
                    "merge_mapped_peripheral": 1,
                    "set_gpio_port_clock": 3
                },
                "FUN_08008078": {
                    "configure_uart_pin": 1,
                    "configure_uart_pins": 4,
                    "init_uart": 1,
                    "initialize_peripheral": 1,
                    "initialize_peripherals": 1,
                    "initialize_uart": 9,
                    "initialize_uart_peripheral": 1,
                    "initialize_uart_pins": 13
                },
                "FUN_080098d8": {
                    "hal_gpio_init": 1,
                    "hal_uart_init": 1,
                    "pinmap_function": 1,
                    "set_register_bits": 1
                },
                "HAL_GPIO_Init": {
                    "configure_gpio": 1,
                    "initialize_gpio": 10,
                    "initialize_gpio_port": 1
                },
                "HAL_UART_Init": {
                    "configure_uart": 1,
                    "initialize_uart": 6,
                    "initialize_uart_module": 2,
                    "initialize_uart_peripheral": 1
                },
                "_DAT_40010004": {
                    "gpio_reg": 1,
                    "gpio_register": 1,
                    "register5": 1,
                    "uart2and3_sel_reg": 1,
                    "uart_configuration_reg": 1,
                    "uart_enable_mask": 1
                },
                "_DAT_4002100c": {
                    "register1": 3,
                    "uart0_c1": 1,
                    "uart1_address": 1,
                    "uart1_base_reg1": 1,
                    "uart1_misc_reg": 1,
                    "uart1_pin_config1": 1,
                    "uart1_register1": 2,
                    "uart_ctrl_reg1": 1,
                    "uart_peripheral1_config1": 1,
                    "uart_pin_register1": 1,
                    "uart_reg1": 1
                },
                "_DAT_40021010": {
                    "register3": 3,
                    "uart1_c1": 1,
                    "uart2_address": 1,
                    "uart2_base_reg1": 1,
                    "uart2_pin_config1": 1,
                    "uart2_register1": 2,
                    "uart2and3_misc_reg": 1,
                    "uart_ctrl_reg3": 1,
                    "uart_peripheral2_config1": 1,
                    "uart_pin_register3": 1,
                    "uart_reg4": 1
                },
                "_DAT_40021018": {
                    "register2": 3,
                    "uart0_c3": 1,
                    "uart1_base_reg2": 1,
                    "uart1_conf_reg": 1,
                    "uart1_pin_config2": 1,
                    "uart1_register": 1,
                    "uart1_register2": 2,
                    "uart_ctrl_reg2": 1,
                    "uart_peripheral1_config2": 1,
                    "uart_pin_register2": 1,
                    "uart_reg2": 1
                },
                "_DAT_4002101c": {
                    "register4": 3,
                    "uart1_c3": 1,
                    "uart2_base_reg2": 1,
                    "uart2_pin_config2": 1,
                    "uart2_register": 1,
                    "uart2_register2": 2,
                    "uart2and3_conf_reg": 1,
                    "uart_ctrl_reg4": 1,
                    "uart_peripheral2_config2": 1,
                    "uart_pin_register4": 1,
                    "uart_reg5": 1
                },
                "byteValue": {
                    "uart_pin_value": 1
                },
                "byteValue2": {
                    "gpio_pin_value": 1
                },
                "byte_1": {
                    "uart_pin1": 1
                },
                "byte_2": {
                    "uart_pin2": 1
                },
                "gpio_pin_value": {
                    "gpio_pin": 1
                },
                "iVar1": {
                    "peripheral1": 10,
                    "peripheral1_result": 2,
                    "peripheral_1": 1,
                    "pin_peripheral_result1": 1,
                    "pin_result1": 1,
                    "pinmap_peripheral_result1": 1,
                    "pinmap_result1": 3,
                    "uart1_peripheral": 2,
                    "uart1_pin": 1,
                    "uart_perip1": 1,
                    "uart_peripheral1": 4,
                    "uart_pin1": 3,
                    "uart_terminal_pin_check": 1
                },
                "iVar2": {
                    "peripheral2": 10,
                    "peripheral2_result": 2,
                    "peripheral_2": 1,
                    "pin_peripheral_result2": 1,
                    "pin_result2": 1,
                    "pinmap_peripheral_result2": 1,
                    "pinmap_result2": 3,
                    "uart2_peripheral": 2,
                    "uart2_pin": 1,
                    "uart_communication_pin_check": 1,
                    "uart_perip2": 1,
                    "uart_peripheral2": 4,
                    "uart_pin2": 3
                },
                "iprintf": {
                    "print_error": 1,
                    "print_error_message": 3
                },
                "local_14": {
                    "default_val": 1,
                    "gpio4_pin": 1,
                    "gpio_clk_init_result2": 1,
                    "gpio_config": 2,
                    "gpio_config3": 2,
                    "gpio_init3": 1,
                    "gpio_init_config": 1,
                    "gpio_init_struct": 11,
                    "gpio_init_type": 1,
                    "gpio_init_value4": 1,
                    "gpio_init_value_4": 1,
                    "gpio_init_var": 1,
                    "gpio_pin_config2": 1,
                    "gpio_pin_init": 2,
                    "gpio_pin_mode": 1,
                    "gpio_pin_mode1": 1,
                    "init_struct": 1,
                    "uart_init_value": 1
                },
                "local_18": {
                    "af": 1,
                    "gpio3_pin": 1,
                    "gpio_alt_mode": 1,
                    "gpio_config2": 2,
                    "gpio_function_high": 1,
                    "gpio_init2": 1,
                    "gpio_init_config2": 1,
                    "gpio_init_value3": 2,
                    "gpio_init_value_3": 1,
                    "gpio_mask3": 1,
                    "gpio_mode": 1,
                    "gpio_pin_alt_function1": 1,
                    "gpio_pin_config": 1,
                    "gpio_pin_shift1": 1,
                    "pin3": 2,
                    "pin3_mask": 1,
                    "pin_alt_function": 1,
                    "pin_config2": 2,
                    "pin_configuration2": 1,
                    "pin_mode": 2,
                    "pin_mux_value": 1,
                    "pin_shift": 1,
                    "pin_speed": 2,
                    "uart_communication_pin2": 1,
                    "uart_pin_config2": 1
                },
                "local_1c": {
                    "alternate_function": 1,
                    "gpio2_pin": 1,
                    "gpio_af_select": 1,
                    "gpio_alt_function": 1,
                    "gpio_config1": 2,
                    "gpio_function_low": 1,
                    "gpio_init1": 1,
                    "gpio_init_config1": 1,
                    "gpio_init_value2": 2,
                    "gpio_init_value_2": 1,
                    "gpio_mask2": 1,
                    "gpio_pin_config1": 2,
                    "pin2": 2,
                    "pin2_mask": 1,
                    "pin_alternate_function": 1,
                    "pin_conf_value": 1,
                    "pin_config": 3,
                    "pin_config1": 2,
                    "pin_configuration1": 1,
                    "pin_function_mask": 1,
                    "pin_transfer_mode": 1,
                    "rsr_mask": 1,
                    "uart_communication_pin": 1,
                    "uart_pin_config1": 1
                },
                "local_20": {
                    "gpio1_pin": 1,
                    "gpio_init_value1": 2,
                    "gpio_init_value_1": 1,
                    "gpio_mask1": 1,
                    "gpio_pin": 5,
                    "gpio_pin_mask": 3,
                    "gpio_pin_mask1": 2,
                    "pin1": 2,
                    "pin1_mask": 1,
                    "pin_mask": 5,
                    "pin_mask1": 6,
                    "uart_pin_mask": 1,
                    "uart_terminal_pin": 1
                },
                "param_1": {
                    "configuration": 1,
                    "peripheral_data": 1,
                    "pin_array": 1,
                    "pin_config": 3,
                    "pin_configuration": 1,
                    "pin_info": 1,
                    "pin_settings": 2,
                    "pins": 4,
                    "pins_array": 1,
                    "uart_config": 7,
                    "uart_configuration": 1,
                    "uart_params": 1,
                    "uart_pin_config": 1,
                    "uart_pins": 6
                },
                "pinmap_function": {
                    "get_function_pin_mapping": 1,
                    "get_pin_function": 1,
                    "map_function": 1,
                    "map_pin_function": 1
                },
                "pinmap_merge_peripheral": {
                    "merge_mapped_peripheral": 1,
                    "merge_peripheral": 2,
                    "merge_peripheral_mapping": 1
                },
                "pinmap_peripheral": {
                    "get_peripheral": 1,
                    "get_peripheral_mapping": 1,
                    "map_peripheral": 1,
                    "map_pin_peripheral": 1
                },
                "set_GPIO_Port_Clock": {
                    "configure_gpio_clock": 1,
                    "enable_port_clock": 1,
                    "get_port_clock": 1,
                    "set_gpio_clock": 1,
                    "set_gpio_port_clock": 1
                },
                "uVar3": {
                    "clock": 1,
                    "gpio1_clock": 1,
                    "gpio_clk_init_result1": 1,
                    "gpio_clock": 1,
                    "gpio_clock1": 3,
                    "gpio_clock_result": 1,
                    "gpio_clock_result1": 1,
                    "gpio_clocked_port": 1,
                    "gpio_config1": 1,
                    "gpio_peripheral1": 1,
                    "gpio_port": 1,
                    "gpio_port1": 2,
                    "gpio_port_c": 1,
                    "gpio_port_c1": 1,
                    "gpio_port_clock": 7,
                    "gpio_port_clock1": 3,
                    "port_clock": 3,
                    "uart_terminal_gpio_clock": 1
                },
                "uVar4": {
                    "function": 3,
                    "function_mapping": 1,
                    "gpio2_function": 1,
                    "gpio_config2": 1,
                    "gpio_function1": 2,
                    "gpio_function_mapping": 1,
                    "gpio_pinmap_result1": 1,
                    "gpio_port2": 2,
                    "pin_func_result": 1,
                    "pin_function": 12,
                    "pinmap_function": 2,
                    "pinmap_function_result": 2,
                    "pinmap_result": 1,
                    "uart_communication_function": 1
                },
                "uart_pin_value": {
                    "uart_pin": 1
                }
            },
            "called": [
                "FUN_08007376",
                "FUN_08006bb8",
                "FUN_0800674e",
                "FUN_080073ae",
                "FUN_080098d8",
                "FUN_080040e8",
                "FUN_08007320"
            ],
            "calling": [
                "FUN_080084b0",
                "FUN_08008c44"
            ],
            "code": "\n\n\nvoid initialize_uart_pins_08008078(int *uart_config)\n\n{\n  int peripheral1;\n  int peripheral2;\n  undefined4 gpio_port_clock;\n  uint pin_function;\n  uint pin_mask1;\n  uint pin_config;\n  uint pin_config2;\n  undefined4 gpio_init_struct;\n  \n  if (uart_config != (int *)0x0) {\n    peripheral1 = map_peripheral((int)*(char *)(uart_config + 0x16),&DAT_0800a864);\n    peripheral2 = map_peripheral((int)*(char *)((int)uart_config + 0x59),&DAT_0800a81c);\n    if ((peripheral2 == 0) || (peripheral1 == 0)) {\n      print_error_message(\"ERROR: at least one UART pin has no peripheral\\n\",peripheral2);\n    }\n    else {\n      peripheral1 = merge_peripheral(peripheral1);\n      *uart_config = peripheral1;\n      if (peripheral1 == 0) {\n        print_error_message(\"ERROR: U(S)ART pins mismatch\\n\");\n      }\n      else {\n        if (peripheral1 == 0x40013800) {\n          _DAT_4002100c = _DAT_4002100c & 0xffffbfff;\n          _DAT_40021018 = _DAT_40021018 | 0x4000;\n          *(undefined *)(uart_config + 0x11) = 0;\n          *(undefined *)((int)uart_config + 0x5a) = 0x25;\n        }\n        else if (peripheral1 == 0x40004400) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffdffff;\n          _DAT_4002101c = _DAT_4002101c | 0x20000;\n          *(undefined *)(uart_config + 0x11) = 1;\n          *(undefined *)((int)uart_config + 0x5a) = 0x26;\n        }\n        else if (peripheral1 == 0x40004800) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffbffff;\n          _DAT_4002101c = _DAT_4002101c | 0x40000;\n          *(undefined *)(uart_config + 0x11) = 2;\n          *(undefined *)((int)uart_config + 0x5a) = 0x27;\n        }\n        gpio_port_clock = set_gpio_port_clock((uint)((int)*(char *)((int)uart_config + 0x59) << 0x18) >> 0x1c);\n        pin_function = map_function((int)*(char *)((int)uart_config + 0x59),&DAT_0800a81c);\n        pin_mask1 = 1 << (*(byte *)((int)uart_config + 0x59) & 0xf) & 0xffff;\n        pin_config = (pin_function >> 3 & 1) << 4 | pin_function & 7;\n        pin_config2 = (pin_function << 0x1a) >> 0x1e;\n        _DAT_40021018 = _DAT_40021018 | 1;\n        switch((pin_function << 0x11) >> 0x19) {\n        case 1:\n          _DAT_40010004 = _DAT_40010004 | 0x7000001;\n          break;\n        case 2:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          break;\n        case 3:\n          _DAT_40010004 = _DAT_40010004 | 0x7000002;\n          break;\n        case 4:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          break;\n        case 5:\n          _DAT_40010004 = _DAT_40010004 | 0x7000004;\n          break;\n        case 6:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          break;\n        case 7:\n          _DAT_40010004 = _DAT_40010004 | 0x7000008;\n          break;\n        case 8:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          break;\n        case 9:\n          _DAT_40010004 = _DAT_40010004 | 0x7000030;\n          break;\n        case 10:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          break;\n        case 0xb:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          break;\n        case 0xc:\n          _DAT_40010004 = _DAT_40010004 | 0x70000c0;\n          break;\n        case 0xd:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          break;\n        case 0xe:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          break;\n        case 0xf:\n          _DAT_40010004 = _DAT_40010004 | 0x7000300;\n          break;\n        case 0x10:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          break;\n        case 0x11:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          break;\n        case 0x12:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          break;\n        case 0x13:\n          _DAT_40010004 = _DAT_40010004 | 0x7000c00;\n          break;\n        case 0x14:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          break;\n        case 0x15:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          break;\n        case 0x16:\n          _DAT_40010004 = _DAT_40010004 | 0x7001000;\n          break;\n        case 0x17:\n          _DAT_40010004 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          break;\n        case 0x1b:\n          _DAT_40010004 = _DAT_40010004 | 0x7008000;\n          break;\n        case 0x1c:\n          _DAT_40010004 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          break;\n        case 0x21:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff;\n          break;\n        case 0x22:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          break;\n        case 0x23:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          break;\n        case 0x24:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n        }\n        gpio_init_struct = 3;\n        initialize_gpio(gpio_port_clock,&pin_mask1);\n        gpio_port_clock = set_gpio_port_clock((uint)((int)*(char *)(uart_config + 0x16) << 0x18) >> 0x1c);\n        pin_function = map_function((int)*(char *)(uart_config + 0x16),&DAT_0800a864);\n        pin_mask1 = 1 << (*(byte *)(uart_config + 0x16) & 0xf) & 0xffff;\n        pin_config = (pin_function >> 3 & 1) << 4 | pin_function & 7;\n        pin_config2 = (pin_function << 0x1a) >> 0x1e;\n        initialize_gpio(gpio_port_clock,&pin_mask1);\n        (&DAT_200006c0)[*(byte *)(uart_config + 0x11)] = uart_config + 1;\n        uart_config[1] = *uart_config;\n        uart_config[2] = uart_config[0x12];\n        uart_config[3] = uart_config[0x13];\n        uart_config[4] = uart_config[0x14];\n        uart_config[5] = uart_config[0x15];\n        uart_config[6] = 0xc;\n        uart_config[7] = 0;\n        uart_config[8] = 0;\n        initialize_uart(uart_config + 1);\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_uart_pins_08008078",
            "entrypoint": "0x08008078",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008078": "initialize_uart_pins_08008078",
                "HAL_GPIO_Init": "initialize_gpio",
                "HAL_UART_Init": "initialize_uart",
                "iVar1": "peripheral1",
                "iVar2": "peripheral2",
                "iprintf": "print_error_message",
                "local_14": "gpio_init_struct",
                "local_18": "pin_config2",
                "local_1c": "pin_config",
                "local_20": "pin_mask1",
                "param_1": "uart_config",
                "pinmap_function": "map_function",
                "pinmap_merge_peripheral": "merge_peripheral",
                "pinmap_peripheral": "map_peripheral",
                "set_GPIO_Port_Clock": "set_gpio_port_clock",
                "uVar3": "gpio_port_clock",
                "uVar4": "pin_function"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080084b0": {
            "additional_data": {
                "DAT_0800a81c": {
                    "pin_data": 1
                },
                "DAT_0800a864": {
                    "peripheral_data": 1,
                    "pinmap_data_1": 1
                },
                "DAT_2000001c": {
                    "uart_data": 1
                },
                "DAT_20000064": {
                    "baud_rate": 7,
                    "constant": 1,
                    "constant_value_1": 1,
                    "delay_time": 1,
                    "some_constant": 1,
                    "value": 1,
                    "value_1": 1
                },
                "DAT_20000068": {
                    "another_value": 1,
                    "param2": 1,
                    "stop_bits": 4,
                    "value_3": 1,
                    "var2": 1,
                    "variable_2": 4,
                    "variable_b": 1
                },
                "DAT_2000006c": {
                    "param3": 1,
                    "parity": 4,
                    "some_other_value": 1,
                    "value_4": 1,
                    "var3": 1,
                    "variable_3": 4,
                    "variable_c": 1
                },
                "DAT_20000070": {
                    "data_bits": 4,
                    "param1": 1,
                    "some_value": 1,
                    "value_2": 1,
                    "var1": 1,
                    "variable_1": 4,
                    "variable_a": 1
                },
                "DAT_20000074": {
                    "parameter": 1,
                    "peripheral": 1,
                    "peripheral_id": 1,
                    "pin_2": 1,
                    "pin_count": 3,
                    "pin_mode": 4,
                    "pins_constant": 1,
                    "port_number": 1
                },
                "DAT_20000075": {
                    "pin": 4,
                    "pin_1": 1,
                    "pin_num": 1,
                    "pin_number": 5,
                    "pin_value": 1,
                    "pins_value": 1
                },
                "FUN_08007320": {
                    "initialize_uart": 1,
                    "uart_init": 1
                },
                "FUN_0800734a": {
                    "get_peripheral_pin": 1,
                    "pinmap_pin": 1
                },
                "FUN_08008078": {
                    "check_peripheral_status": 1,
                    "pinmap_peripheral": 1
                },
                "FUN_080084b0": {
                    "initialize_peripheral": 3,
                    "initialize_uart": 25,
                    "initialize_uart_module": 1,
                    "initialize_uart_peripheral": 2
                },
                "iVar1": {
                    "peripheral_check": 1,
                    "peripheral_index": 1,
                    "peripheral_info_1": 1,
                    "peripheral_mapping_result": 1,
                    "peripheral_result": 6,
                    "peripheral_status": 7,
                    "pin_result": 1,
                    "result": 13
                },
                "param_1": {
                    "input": 1,
                    "uart_data": 1
                },
                "pinmap_peripheral": {
                    "find_peripheral": 1,
                    "find_peripheral_address": 1,
                    "get_peripheral": 1,
                    "get_peripheral_info": 1
                },
                "pinmap_pin": {
                    "find_pin": 1,
                    "find_pin_number": 1,
                    "get_pin": 1
                },
                "uVar2": {
                    "peripheral": 7,
                    "peripheral_address": 3,
                    "peripheral_handle": 1,
                    "peripheral_id": 1,
                    "peripheral_info_2": 1,
                    "peripheral_location": 1,
                    "peripheral_result": 3,
                    "peripheral_result_2": 2,
                    "pin_mapping_result": 1,
                    "pin_peripheral": 1,
                    "pin_peripheral_result": 1,
                    "pin_result": 5,
                    "pin_result_2": 1,
                    "pin_status": 1,
                    "pinmap_result": 1,
                    "pinperipheral_result": 1
                },
                "uart_init": {
                    "configure_uart": 2,
                    "initialize_uart": 3,
                    "initialize_uart_controller": 1,
                    "initialize_uart_function": 1,
                    "initialize_uart_module": 2,
                    "initialize_uart_peripheral": 1
                }
            },
            "called": [
                "FUN_08008078",
                "FUN_0800734a",
                "FUN_08007320"
            ],
            "calling": [
                "FUN_08008500"
            ],
            "code": "\nvoid initialize_uart_peripheral_080084b0(void)\n\n{\n  int result;\n  undefined4 peripheral;\n  \n  result = find_peripheral(2,&DAT_0800a864);\n  if (result != 0) {\n    peripheral = find_peripheral(2,&DAT_0800a864);\n    DAT_20000075 = get_pin(peripheral,&DAT_0800a81c);\n    DAT_20000074 = 2;\n    DAT_20000064 = 0x2580;\n    DAT_20000070 = 0;\n    DAT_20000068 = 0;\n    DAT_2000006c = 0;\n    initialize_uart(&DAT_2000001c);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_uart_peripheral_080084b0",
            "entrypoint": "0x080084b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080084b0": "initialize_uart_peripheral_080084b0",
                "iVar1": "result",
                "pinmap_peripheral": "find_peripheral",
                "pinmap_pin": "get_pin",
                "uVar2": "peripheral",
                "uart_init": "initialize_uart"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008500": {
            "additional_data": {
                "DAT_0800a864": {
                    "desired_peripheral": 1,
                    "peripheral": 2,
                    "peripheral_address": 1,
                    "peripheral_data": 7,
                    "pin_map": 1,
                    "pin_map_table": 1,
                    "pin_value": 1,
                    "pinmap": 1
                },
                "DAT_20000060": {
                    "buffer_size": 1,
                    "debug_value": 1,
                    "uart_buffer_size": 1,
                    "uart_count": 2,
                    "uart_data": 2,
                    "uart_debug_flag": 1,
                    "uart_index": 1,
                    "uart_initialized": 1,
                    "uart_limit": 1,
                    "uart_peripherals_count": 1,
                    "uart_port_count": 1,
                    "uart_size": 2,
                    "uart_value": 1
                },
                "DAT_200006c0": {
                    "peripheral_array": 1,
                    "transmit_buffer": 1,
                    "uart": 1,
                    "uart_array": 4,
                    "uart_buffer": 1,
                    "uart_data": 3,
                    "uart_map": 1,
                    "uart_peripherals_array": 1,
                    "uart_ports": 1,
                    "uart_table": 1
                },
                "FUN_08003760": {
                    "initialize_uart": 2,
                    "uart_debug_init": 1
                },
                "FUN_080067ac": {
                    "find_peripheral_index": 1,
                    "map_peripheral": 1,
                    "pinmap_peripheral": 1
                },
                "FUN_08007320": {
                    "get_tick": 1,
                    "hal_uart_transmit": 1,
                    "uart_debug_init": 1
                },
                "FUN_08007320_param_1": {
                    "tick_count": 1
                },
                "FUN_080084b0": {
                    "initialize": 1,
                    "initialize_debug": 2
                },
                "FUN_08008500": {
                    "send_data": 1,
                    "transmit_data": 28,
                    "transmit_message": 1,
                    "uart_transmit": 1
                },
                "HAL_GetTick": {
                    "get_current_tick": 1,
                    "get_current_time": 1,
                    "get_tick": 1
                },
                "HAL_UART_Transmit": {
                    "transmit_data": 1,
                    "transmit_uart_data": 1
                },
                "iVar1": {
                    "current_time": 1,
                    "start_tick": 13,
                    "start_time": 16
                },
                "iVar2": {
                    "peripheral": 14,
                    "peripheral_id": 2,
                    "peripheral_index": 1,
                    "pin_map_result": 1,
                    "pin_number": 1,
                    "pin_peripheral": 4,
                    "pin_result": 1,
                    "pinmap_result": 6
                },
                "param_1": {
                    "buffer": 1,
                    "data": 24,
                    "data_buffer": 5,
                    "message": 1
                },
                "param_2": {
                    "data_length": 3,
                    "data_size": 3,
                    "length": 14,
                    "size": 11
                },
                "param_3": {
                    "pin_type": 1
                },
                "param_4": {
                    "peripheral_id": 1
                },
                "pinmap_peripheral": {
                    "get_peripheral": 2,
                    "get_peripheral_value": 1
                },
                "uVar3": {
                    "counter": 1,
                    "i": 3,
                    "idx": 1,
                    "index": 24,
                    "peripheral_idx": 1
                },
                "uart_debug_init": {
                    "initialize_debug_uart": 2
                }
            },
            "called": [
                "FUN_080084b0",
                "FUN_080067ac",
                "FUN_08003760",
                "FUN_08007320"
            ],
            "calling": [
                "FUN_0800885c"
            ],
            "code": "\nuint transmit_data_08008500(undefined4 data,uint length)\n\n{\n  int start_time;\n  int peripheral;\n  uint index;\n  \n  start_time = get_current_tick();\n  peripheral = get_peripheral(2,&DAT_0800a864);\n  if (peripheral == 0) {\n    return 0;\n  }\n  for (index = 0;\n      (index < 5 &&\n      (((&DAT_200006c0)[index] == 0 ||\n       (peripheral = get_peripheral(2,&DAT_0800a864), *(int *)(&DAT_200006c0)[index] != peripheral))));\n      index = index + 1 & 0xff) {\n  }\n  if (4 < index) {\n    if ((4 < DAT_20000060) && (initialize_debug_uart(), 4 < DAT_20000060)) {\n      return 0;\n    }\n    index = (uint)DAT_20000060;\n  }\n  do {\n    peripheral = transmit_uart_data((&DAT_200006c0)[index],data,length & 0xffff,1000);\n    if (peripheral == 0) {\n      return length;\n    }\n    peripheral = get_current_tick();\n  } while ((uint)(peripheral - start_time) < 1000);\n  return 0;\n}\n\n",
            "current_name": "transmit_data_08008500",
            "entrypoint": "0x08008500",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008500": "transmit_data_08008500",
                "HAL_GetTick": "get_current_tick",
                "HAL_UART_Transmit": "transmit_uart_data",
                "iVar1": "start_time",
                "iVar2": "peripheral",
                "param_1": "data",
                "param_2": "length",
                "pinmap_peripheral": "get_peripheral",
                "uVar3": "index",
                "uart_debug_init": "initialize_debug_uart"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080085b8": {
            "additional_data": {
                "0x22": {
                    "expected_value": 1,
                    "valid_state_mask": 1
                },
                "DAT_200006c0": {
                    "uart_state_array": 1
                },
                "FUN_08006b1c": {
                    "get_byte_value": 1,
                    "get_uart_state": 1,
                    "get_uart_state_for_input_index": 1,
                    "get_uart_state_index": 1,
                    "get_uart_status": 1
                },
                "FUN_080085b8": {
                    "check_uart_state": 12,
                    "is_uart_data_valid": 1,
                    "is_uart_fifo_empty": 1,
                    "is_uart_in_transmission_ready": 1,
                    "is_uart_initialized": 1,
                    "is_uart_receiving_data": 1,
                    "is_uart_state_clear": 1,
                    "is_uart_state_error": 2,
                    "is_uart_state_ok": 1,
                    "is_uart_state_set": 2,
                    "is_uart_state_valid": 4,
                    "is_uart_transmission_complete": 1,
                    "is_uart_transmit_complete": 2,
                    "is_uart_transmitting": 1
                },
                "HAL_UART_GetState": {
                    "get_uart_state": 4
                },
                "byte": {
                    "byte_val": 2,
                    "byte_value": 2,
                    "data": 1,
                    "state_index": 1,
                    "status": 1
                },
                "param_1": {
                    "data_index": 2,
                    "data_offset": 1,
                    "device_address": 1,
                    "device_handle": 1,
                    "device_id": 1,
                    "device_index": 2,
                    "index": 6,
                    "input": 3,
                    "input_index": 1,
                    "input_param": 3,
                    "input_value": 3,
                    "state": 1,
                    "uart_handle": 2,
                    "uart_index": 1,
                    "uart_instance": 1,
                    "uart_port": 1,
                    "value": 1
                },
                "uVar1": {
                    "uart_state": 28
                }
            },
            "called": [
                "FUN_08006b1c"
            ],
            "calling": [
                "FUN_0800863c",
                "FUN_08008600"
            ],
            "code": "\nbool check_uart_state_080085b8(int index)\n\n{\n  uint uart_state;\n  \n  uart_state = get_uart_state((&DAT_200006c0)[*(byte_val *)(index + 0x44)]);\n  return (uart_state & 0x22) == 0x22;\n}\n\n",
            "current_name": "check_uart_state_080085b8",
            "entrypoint": "0x080085b8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080085b8": "check_uart_state_080085b8",
                "HAL_UART_GetState": "get_uart_state",
                "byte": "byte_val",
                "param_1": "index",
                "uVar1": "uart_state"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080085dc": {
            "additional_data": {
                "FUN_08006b1c": {
                    "get_uart_port": 1,
                    "get_uart_state": 5,
                    "get_uart_state_byte": 1
                },
                "FUN_080085dc": {
                    "check_uart_state": 10,
                    "check_uart_status": 1,
                    "is_uart_in_transmit_error_state": 1,
                    "is_uart_ready": 1,
                    "is_uart_ready_for_transmission": 2,
                    "is_uart_receive_complete": 1,
                    "is_uart_receiving_data": 1,
                    "is_uart_state_clear": 1,
                    "is_uart_state_healthy": 1,
                    "is_uart_state_ready": 1,
                    "is_uart_state_transmitting": 1,
                    "is_uart_state_valid": 6,
                    "is_uart_transmit_complete": 1,
                    "is_uart_transmitting": 2,
                    "is_uart_transmitting_data": 1
                },
                "HAL_UART_GetState": {
                    "get_uart_state": 5
                },
                "byte": {
                    "byte_value": 1,
                    "index_value": 1,
                    "port": 1
                },
                "param_1": {
                    "buffer_index": 1,
                    "data_buffer": 1,
                    "data_pointer": 1,
                    "data_source": 1,
                    "device_id": 1,
                    "device_index": 2,
                    "index": 5,
                    "input": 3,
                    "input_index": 2,
                    "input_param": 3,
                    "input_value": 6,
                    "uart_handle": 3,
                    "uart_instance": 1,
                    "value": 1
                },
                "uVar1": {
                    "state": 2,
                    "uart_state": 29
                }
            },
            "called": [
                "FUN_08006b1c"
            ],
            "calling": [],
            "code": "\nbool check_uart_state_080085dc(int input_value)\n\n{\n  uint uart_state;\n  \n  uart_state = get_uart_state((&DAT_200006c0)[*(byte_value *)(input_value + 0x44)]);\n  return (uart_state & 0x21) == 0x21;\n}\n\n",
            "current_name": "check_uart_state_080085dc",
            "entrypoint": "0x080085dc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080085dc": "check_uart_state_080085dc",
                "HAL_UART_GetState": "get_uart_state",
                "byte": "byte_value",
                "param_1": "input_value",
                "uVar1": "uart_state"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008600": {
            "additional_data": {
                "FUN_080068d6": {
                    "check_serial_active": 1,
                    "modify_data": 1,
                    "process_data": 2,
                    "rx_active": 1,
                    "serial_rx_active": 1
                },
                "FUN_080085b8": {
                    "check_condition": 1,
                    "check_serial_port": 1,
                    "hal_uart_receive_it": 1,
                    "is_serial_rx_active": 1,
                    "serial_rx_active": 2
                },
                "FUN_08008600": {
                    "extract_and_receive_byte": 1,
                    "extract_and_receive_serial_data": 1,
                    "extract_data": 2,
                    "extract_data_from_serial": 1,
                    "extract_serial_data": 1,
                    "receive_and_check_serial_data": 1,
                    "receive_and_process_data": 2,
                    "receive_data": 18,
                    "receive_data_from_serial_port": 1,
                    "receive_data_from_uart": 2,
                    "receive_uart_data": 1
                },
                "HAL_UART_Receive_IT": {
                    "receive_data_with_interrupt": 1,
                    "receive_uart_data": 2,
                    "start_uart_reception": 1
                },
                "byte": {
                    "byte_value": 1
                },
                "iVar1": {
                    "is_active": 2,
                    "is_rx_active": 10,
                    "is_serial_port_active": 1,
                    "is_serial_rx_active": 13,
                    "rx_active": 2,
                    "serial_active": 1
                },
                "param_1": {
                    "buffer_address": 1,
                    "buffer_size": 1,
                    "data": 2,
                    "data_address": 1,
                    "data_length": 3,
                    "data_ptr": 9,
                    "data_size": 2,
                    "device_id": 1,
                    "input_data": 1,
                    "input_data_length": 1,
                    "param": 1,
                    "param_1": 1,
                    "port": 1,
                    "port_number": 1,
                    "serial_data": 1,
                    "serial_port": 2,
                    "status_code": 1,
                    "uart_port": 1
                },
                "param_2": {
                    "buffer": 2,
                    "data": 3,
                    "data_buffer": 2,
                    "output": 1,
                    "output_buffer": 2,
                    "output_data": 3,
                    "output_ptr": 3,
                    "param_2": 1,
                    "receive_buffer": 2,
                    "received_byte": 1,
                    "received_data": 10,
                    "received_data_ptr": 1
                },
                "param_3": {
                    "callback_param_1": 1,
                    "config_value": 1,
                    "param3": 7,
                    "param_3": 18,
                    "param_length": 1,
                    "parameter_3": 1,
                    "size": 1,
                    "unused_param_1": 1
                },
                "param_4": {
                    "callback": 1,
                    "callback_function": 1,
                    "callback_param_2": 1,
                    "hal_uart_instance": 1,
                    "param4": 7,
                    "param_4": 16,
                    "param_flag": 1,
                    "parameter_4": 1,
                    "receive_callback": 1,
                    "unused_param_2": 1
                },
                "serial_rx_active": {
                    "check_serial_activity": 1,
                    "check_serial_rx_active": 1,
                    "check_serial_rx_activity": 3,
                    "is_rx_active": 1
                }
            },
            "called": [
                "FUN_080068d6",
                "FUN_080085b8"
            ],
            "calling": [
                "FUN_08008b66"
            ],
            "code": "\nundefined4 receive_and_process_data_08008600(int data_ptr,undefined *received_data,undefined4 param_3,undefined4 param_4)\n\n{\n  int is_serial_rx_active;\n  \n  if (data_ptr == 0) {\n    return 0xffffffff;\n  }\n  is_serial_rx_active = check_serial_rx_activity();\n  if (is_serial_rx_active == 0) {\n    *received_data = *(undefined *)(data_ptr + 0x45);\n    receive_uart_data((&DAT_200006c0)[*(byte_value *)(data_ptr + 0x44)],data_ptr + 0x45,1,&DAT_200006c0,\n                        param_4);\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "receive_and_process_data_08008600",
            "entrypoint": "0x08008600",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008600": "receive_and_process_data_08008600",
                "HAL_UART_Receive_IT": "receive_uart_data",
                "byte": "byte_value",
                "iVar1": "is_serial_rx_active",
                "param_1": "data_ptr",
                "param_2": "received_data",
                "serial_rx_active": "check_serial_rx_activity"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800863c": {
            "additional_data": {
                "DAT_20000670": {
                    "config_array": 1,
                    "data_buffer": 1
                },
                "DAT_20000684": {
                    "address_buffer": 1,
                    "port_array": 1
                },
                "FUN_08003f30": {
                    "hal_nvic_enable_irq": 2,
                    "set_priority": 1
                },
                "FUN_08003f94": {
                    "disable_interrupt": 1,
                    "serial_rx_active": 2
                },
                "FUN_080068d6": {
                    "hal_nvic_set_priority": 2,
                    "set_device_data": 1
                },
                "FUN_080085b8": {
                    "hal_uart_receive_it": 2,
                    "is_serial_communication_enabled": 1
                },
                "FUN_0800863c": {
                    "configure_and_enable_uart_interrupt": 1,
                    "configure_serial_communication": 2,
                    "handle_serial_data": 4,
                    "handle_serial_rx": 2,
                    "init_serial_communication": 1,
                    "initialize_serial_communication": 8,
                    "initialize_serial_rx": 1,
                    "initialize_uart_rx": 1,
                    "process_received_data": 1,
                    "process_rx_data": 1,
                    "process_serial_communication": 1,
                    "process_serial_data": 4,
                    "process_uart_data": 2,
                    "receive_data": 1,
                    "serial_data_handler": 1
                },
                "HAL_NVIC_EnableIRQ": {
                    "enable_interrupt": 4,
                    "enable_irq": 4
                },
                "HAL_NVIC_SetPriority": {
                    "set_interrupt_priority": 4,
                    "set_priority": 4
                },
                "HAL_UART_Receive_IT": {
                    "enable_uart_receive_interrupt": 1,
                    "receive_data": 3,
                    "receive_data_interrupt": 1,
                    "receive_interrupt": 1,
                    "receive_uart_interrupt": 2
                },
                "iVar1": {
                    "is_active": 7,
                    "is_rx_active": 5,
                    "is_serial_active": 1,
                    "is_serial_rx_active": 10,
                    "rx_active": 4,
                    "rx_active_flag": 1,
                    "serial_active": 1,
                    "serial_rx_active": 2
                },
                "param_1": {
                    "data": 4,
                    "data_pointer": 1,
                    "data_ptr": 4,
                    "device_id": 2,
                    "serial_data": 5,
                    "serial_data_ptr": 1,
                    "serial_device": 2,
                    "serial_handle": 1,
                    "serial_port": 7,
                    "serial_rx_handle": 1,
                    "uart_data": 1,
                    "uart_handle": 1,
                    "uart_instance": 1
                },
                "param_2": {
                    "baud_rate": 2,
                    "config_data": 1,
                    "data": 10,
                    "data_1": 1,
                    "data_byte": 1,
                    "data_value": 3,
                    "irq_priority": 1,
                    "new_value": 1,
                    "param1_value": 1,
                    "param2": 1,
                    "tx_data": 1,
                    "value": 4,
                    "value1": 3,
                    "value_1": 1
                },
                "param_3": {
                    "address": 1,
                    "buffer": 1,
                    "data_2": 1,
                    "data_bits": 2,
                    "interrupt_flag": 1,
                    "param": 1,
                    "param2_value": 1,
                    "param3": 6,
                    "param_3": 1,
                    "param_data": 1,
                    "priority": 5,
                    "undefined4": 1,
                    "unknown1": 1,
                    "unused": 1,
                    "unused_param": 3,
                    "value2": 3,
                    "value_2": 1
                },
                "param_4": {
                    "data_3": 1,
                    "handler": 1,
                    "interrupt_config": 1,
                    "interrupt_priority": 2,
                    "irq_enable": 1,
                    "irq_flag": 1,
                    "irq_status": 1,
                    "irq_sub_priority": 1,
                    "param3_value": 1,
                    "param4": 6,
                    "priority": 5,
                    "rx_data": 1,
                    "stop_bits": 2,
                    "trigger": 1,
                    "undefined4": 1,
                    "unknown2": 1,
                    "value3": 3,
                    "value_3": 1
                },
                "uVar2": {
                    "byte_index": 1,
                    "byte_value": 5,
                    "data_index": 5,
                    "index": 13,
                    "param_offset": 1,
                    "port_index": 1,
                    "serial_data_index": 1,
                    "serial_index": 1,
                    "serial_port_index": 1,
                    "uart_index": 2
                }
            },
            "called": [
                "FUN_08003f94",
                "FUN_080068d6",
                "FUN_08003f30",
                "FUN_080085b8"
            ],
            "calling": [
                "FUN_08008c44"
            ],
            "code": "\nvoid initialize_serial_communication_0800863c(int serial_port,undefined4 data,undefined4 param3,undefined4 param4)\n\n{\n  int is_serial_rx_active;\n  uint index;\n  \n  if (serial_port != 0) {\n    is_serial_rx_active = serial_rx_active();\n    if (is_serial_rx_active == 0) {\n      index = (uint)*(byte *)(serial_port + 0x44);\n      *(undefined4 *)(&DAT_20000670 + index * 4) = data;\n      *(int *)(&DAT_20000684 + index * 4) = serial_port;\n      set_priority((int)*(char *)(serial_port + 0x5a),0,1,index,param4);\n      enable_irq((int)*(char *)(serial_port + 0x5a));\n      receive_data((&DAT_200006c0)[*(byte *)(serial_port + 0x44)],serial_port + 0x45,1);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_serial_communication_0800863c",
            "entrypoint": "0x0800863c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800863c": "initialize_serial_communication_0800863c",
                "HAL_NVIC_EnableIRQ": "enable_irq",
                "HAL_NVIC_SetPriority": "set_priority",
                "HAL_UART_Receive_IT": "receive_data",
                "iVar1": "is_serial_rx_active",
                "param_1": "serial_port",
                "param_2": "data",
                "param_3": "param3",
                "param_4": "param4",
                "uVar2": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008694": {
            "additional_data": {
                "FUN_08003f30": {
                    "calculate_checksum": 2,
                    "configure_peripheral": 1,
                    "enable_irq": 1,
                    "send_data": 1
                },
                "FUN_08003f94": {
                    "configure_peripheral": 1,
                    "initialize_peripheral": 1,
                    "process_data": 3
                },
                "FUN_0800688e": {
                    "get_device_info": 1,
                    "handle_data": 1,
                    "process_data": 2,
                    "transmit_data": 1
                },
                "FUN_08008694": {
                    "configure_device": 1,
                    "configure_interrupt_and_transmit": 1,
                    "configure_peripheral_irq": 1,
                    "configure_uart_interrupt": 1,
                    "initialize_component": 1,
                    "initialize_device": 6,
                    "initialize_hardware": 1,
                    "initialize_interrupt_and_transmit": 1,
                    "initialize_peripheral": 8,
                    "initialize_pin": 1,
                    "set_interrupt_priority_and_transmit": 1,
                    "set_priority_and_transmit": 1,
                    "setup_and_transmit_data": 1,
                    "setup_device_interrupts": 1,
                    "transmit_data": 2,
                    "update_priority_and_transmit": 1
                },
                "FirmwareUpdate": {
                    "update_firmware": 1
                },
                "HAL_NVIC_EnableIRQ": {
                    "enable_interrupt": 10,
                    "enable_irq": 1
                },
                "HAL_NVIC_SetPriority": {
                    "configure_interrupt_priority": 1,
                    "set_interrupt_priority": 6,
                    "set_priority": 4
                },
                "HAL_UART_Transmit_IT": {
                    "transmit_data": 7,
                    "transmit_data_over_uart": 1,
                    "transmit_data_with_interrupt": 1,
                    "transmit_uart_data": 2
                },
                "bVar1": {
                    "byte_value": 13,
                    "component_index": 1,
                    "config_index": 1,
                    "device_index": 3,
                    "index": 3,
                    "interrupt_channel": 1,
                    "peripheral_byte": 1,
                    "peripheral_index": 6,
                    "peripheral_type": 1,
                    "uart_index": 1
                },
                "param_1": {
                    "component_id": 1,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "data_struct": 1,
                    "device": 1,
                    "device_address": 8,
                    "device_config": 1,
                    "device_ptr": 1,
                    "hardware_param": 1,
                    "input": 1,
                    "input_pointer": 1,
                    "peripheral_address": 9,
                    "pin": 1,
                    "uart_config": 1
                },
                "param_2": {
                    "config_value": 3,
                    "configuration": 1,
                    "data": 3,
                    "device_config": 1,
                    "device_data": 1,
                    "device_settings": 1,
                    "firmware_version": 1,
                    "initial_value": 1,
                    "new_value": 2,
                    "param_data": 1,
                    "param_value": 1,
                    "parameter_value": 2,
                    "priority": 6,
                    "priority_level": 2,
                    "setting": 1,
                    "setting_value": 1,
                    "value": 2
                }
            },
            "called": [
                "FUN_08003f94",
                "FUN_0800688e",
                "FUN_08003f30"
            ],
            "calling": [],
            "code": "\nvoid initialize_peripheral_08008694(int peripheral_address,undefined4 priority)\n\n{\n  byte byte_value;\n  \n  if (peripheral_address != 0) {\n    byte_value = *(byte *)(peripheral_address + 0x44);\n    *(undefined4 *)(&DAT_20000698 + (uint)byte_value * 4) = priority;\n    *(int *)(&DAT_200006ac + (uint)byte_value * 4) = peripheral_address;\n    set_interrupt_priority((int)*(char *)(peripheral_address + 0x5a),0,2);\n    enable_interrupt((int)*(char *)(peripheral_address + 0x5a));\n    transmit_data\n              ((&DAT_200006c0)[*(byte *)(peripheral_address + 0x44)],\n               *(int *)(peripheral_address + 100) + (uint)*(ushort *)(peripheral_address + 0x6a),1);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_peripheral_08008694",
            "entrypoint": "0x08008694",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008694": "initialize_peripheral_08008694",
                "HAL_NVIC_EnableIRQ": "enable_interrupt",
                "HAL_NVIC_SetPriority": "set_interrupt_priority",
                "HAL_UART_Transmit_IT": "transmit_data",
                "bVar1": "byte_value",
                "param_1": "peripheral_address",
                "param_2": "priority"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080086e8": {
            "additional_data": {
                "DAT_200006c0": {
                    "data_array": 1
                },
                "FUN_080086e8": {
                    "find_element": 1,
                    "find_element_index": 2,
                    "find_index": 7,
                    "find_match": 1,
                    "find_value_in_array": 1,
                    "find_value_index": 18,
                    "lookup_value": 1
                },
                "param_1": {
                    "element": 3,
                    "input_value": 3,
                    "search_value": 2,
                    "value": 23
                },
                "uVar1": {
                    "index": 30,
                    "result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08008730",
                "FUN_0800870c"
            ],
            "code": "\nuint find_value_index_080086e8(int value)\n\n{\n  uint index;\n  \n  if (value == 0) {\n    index = 5;\n  }\n  else {\n    index = 0;\n    while( true ) {\n      if (4 < index) {\n        return index;\n      }\n      if (value == (&DAT_200006c0)[index]) break;\n      index = index + 1 & 0xff;\n    }\n  }\n  return index;\n}\n\n",
            "current_name": "find_value_index_080086e8",
            "entrypoint": "0x080086e8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080086e8": "find_value_index_080086e8",
                "param_1": "value",
                "uVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800870c": {
            "additional_data": {
                "DAT_20000670": {
                    "function_array": 1,
                    "function_pointers": 1,
                    "function_table": 3,
                    "ptr_function_table": 1,
                    "uart_function_table": 1,
                    "uart_functions": 1
                },
                "DAT_20000684": {
                    "argument_pointers": 1,
                    "argument_table": 1,
                    "parameter_array": 1,
                    "parameter_table": 2,
                    "ptr_argument_table": 1,
                    "uart_arguments_table": 1
                },
                "FUN_080086e8": {
                    "get_uart_command_result": 1,
                    "get_uart_function_index": 1,
                    "get_uart_index": 17,
                    "get_uart_index_value": 1,
                    "uart_index": 3
                },
                "FUN_0800870c": {
                    "execute_uart_command": 7,
                    "execute_uart_function": 16,
                    "execute_uart_operation": 6,
                    "run_uart_function": 1
                },
                "code": {
                    "function_pointer": 1
                },
                "param_1": {
                    "index": 8,
                    "input": 1,
                    "uart_command": 1,
                    "uart_function_index": 1
                },
                "uVar1": {
                    "command_index": 1,
                    "index": 3,
                    "uart_index": 17,
                    "uart_index_result": 2,
                    "uart_index_value": 2
                }
            },
            "called": [
                "FUN_080086e8"
            ],
            "calling": [
                "FUN_0800694c"
            ],
            "code": "\nvoid execute_uart_function_0800870c(void)\n\n{\n  uint uart_index;\n  \n  uart_index = uart_index();\n  if (uart_index < 5) {\n    (**(function_pointer **)(&DAT_20000670 + uart_index * 4))(*(undefined4 *)(&DAT_20000684 + uart_index * 4));\n  }\n  return;\n}\n\n",
            "current_name": "execute_uart_function_0800870c",
            "entrypoint": "0x0800870c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800870c": "execute_uart_function_0800870c",
                "code": "function_pointer",
                "uVar1": "uart_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008730": {
            "additional_data": {
                "FUN_0800688e": {
                    "check_result": 1,
                    "configure_uart": 1,
                    "get_uart_descriptor": 1,
                    "handle_uart_transmission": 1,
                    "process_data": 5,
                    "process_uart_data": 6
                },
                "FUN_080086e8": {
                    "check_uart_status": 1,
                    "get_uart_config": 5,
                    "get_uart_data": 3,
                    "get_uart_index": 4,
                    "get_uart_info": 1,
                    "uart_index": 1
                },
                "FUN_08008730": {
                    "transmit_data": 21,
                    "transmit_uart_data": 10
                },
                "HAL_UART_Transmit_IT": {
                    "transmit_data_with_interrupt": 1
                },
                "iVar2": {
                    "result": 26,
                    "result_code": 1,
                    "return_value": 1,
                    "status": 1
                },
                "iVar3": {
                    "data": 1,
                    "device_index": 1,
                    "uart": 1,
                    "uart_address": 4,
                    "uart_config": 5,
                    "uart_data": 5,
                    "uart_descriptor": 2,
                    "uart_device": 2,
                    "uart_handle": 2,
                    "uart_handler": 1,
                    "uart_info": 1,
                    "uart_pointer": 4
                },
                "param_1": {
                    "data_ptr": 1,
                    "uart_data": 1,
                    "uart_index": 3
                },
                "param_2": {
                    "param2": 1,
                    "param_2": 2,
                    "uart_data": 1
                },
                "param_3": {
                    "param3": 1,
                    "param_3": 2,
                    "uart_size": 1
                },
                "uVar1": {
                    "index": 3,
                    "uart_index": 26
                }
            },
            "called": [
                "FUN_0800688e",
                "FUN_080086e8"
            ],
            "calling": [
                "FUN_08006932"
            ],
            "code": "\nvoid transmit_uart_data_08008730(void)\n\n{\n  uint uart_index;\n  int result;\n  int uart_config;\n  \n  uart_index = uart_index();\n  uart_config = *(int *)(&DAT_200006ac + uart_index * 4);\n  if ((uart_index < 5) && (result = (**(code **)(&DAT_20000698 + uart_index * 4))(uart_config), result != -1)) {\n    transmit_data_with_interrupt\n              ((&DAT_200006c0)[*(byte *)(uart_config + 0x44)],\n               *(int *)(uart_config + 100) + (uint)*(ushort *)(uart_config + 0x6a),1);\n  }\n  return;\n}\n\n",
            "current_name": "transmit_uart_data_08008730",
            "entrypoint": "0x08008730",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008730": "transmit_uart_data_08008730",
                "HAL_UART_Transmit_IT": "transmit_data_with_interrupt",
                "iVar2": "result",
                "iVar3": "uart_config",
                "uVar1": "uart_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800877c": {
            "called": [],
            "calling": [
                "FUN_080069ec"
            ],
            "code": "\nvoid FUNC_0800877c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800877c",
            "entrypoint": "0x0800877c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800877c": "FUNC_0800877c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08008804": {
            "additional_data": {
                "DAT_200006d4": {
                    "current_block": 1,
                    "current_memory": 8,
                    "current_memory_pointer": 1,
                    "current_memory_ptr": 2,
                    "current_pointer": 2,
                    "current_position": 3,
                    "current_ptr": 1,
                    "mem_ptr": 1,
                    "memory_pool": 1
                },
                "DAT_20000a38": {
                    "error_code": 17,
                    "error_flag": 2
                },
                "DAT_20000a3c": {
                    "default_block": 1,
                    "default_mem_ptr": 1,
                    "default_memory_ptr": 1,
                    "initial_memory": 4,
                    "initial_memory_pointer": 1,
                    "initial_pointer": 1,
                    "stack_base": 1,
                    "stack_base_address": 1,
                    "stack_bottom": 2,
                    "stack_limit": 1,
                    "stack_pointer": 1,
                    "stack_start": 1
                },
                "FUN_08008804": {
                    "allocate_memory": 28,
                    "allocate_memory_block": 1,
                    "reserve_memory": 2
                },
                "param_1": {
                    "bytes_to_allocate": 1,
                    "num_bytes": 2,
                    "size": 28
                },
                "puVar1": {
                    "allocated_address": 1,
                    "allocated_mem": 1,
                    "allocated_memory": 24,
                    "memory_block": 1,
                    "pointer": 1,
                    "reserved_memory": 1,
                    "start_address": 2
                },
                "stack0x00000000": {
                    "end_of_stack": 1,
                    "stack_base": 1,
                    "stack_base_address": 1,
                    "stack_bottom": 3,
                    "stack_boundary": 1,
                    "stack_limit": 1,
                    "stack_memory": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08009918"
            ],
            "code": "\nundefined * allocate_memory_block_08008804(int size)\n\n{\n  undefined *allocated_memory;\n  \n  if (DAT_200006d4 == (undefined *)0x0) {\n    DAT_200006d4 = &DAT_20000a3c;\n  }\n  allocated_memory = DAT_200006d4;\n  if (DAT_200006d4 + size <= &stack_bottom) {\n    DAT_200006d4 = DAT_200006d4 + size;\n    return allocated_memory;\n  }\n  DAT_20000a38 = 0xc;\n  return (undefined *)0xffffffff;\n}\n\n",
            "current_name": "allocate_memory_block_08008804",
            "entrypoint": "0x08008804",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008804": "allocate_memory_block_08008804",
                "param_1": "size",
                "puVar1": "allocated_memory",
                "stack0x00000000": "stack_bottom"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008840": {
            "additional_data": {
                "": {
                    "": 1
                },
                "0xffffffff": {
                    "failure_code": 1
                },
                "FUN_08008840": {
                    "clear_error_status": 1,
                    "get_default_value": 7,
                    "get_dummy_value": 1,
                    "get_error_code": 10,
                    "get_negative_one": 1,
                    "get_return_value": 4,
                    "initialize_default_value": 1,
                    "initialize_return_value": 1,
                    "initialize_value": 2,
                    "return_error": 1,
                    "return_failure_code": 1,
                    "set_return_value": 1
                },
                "PTR_FUN_08008840_param_1": {
                    "param1": 1
                },
                "more_descriptive_function_name": {
                    "get_error_code": 1
                },
                "new_variable_name_1": {
                    "error_code": 1
                },
                "original_function_name": {
                    "new_function_name": 1
                },
                "original_parameter_name_1": {
                    "new_parameter_name_1": 1
                },
                "original_parameter_name_2": {
                    "new_parameter_name_2": 1
                },
                "original_variable_name_1": {
                    "new_variable_name_1": 1
                },
                "original_variable_name_2": {
                    "new_variable_name_2": 1
                },
                "return_0xffffffff": {
                    "success_value": 1
                },
                "return_value": {
                    "default_value": 1
                },
                "undefined4": {
                    "int": 3,
                    "uint32_t": 6,
                    "unsigned32": 1,
                    "unsigned_integer": 1
                }
            },
            "called": [],
            "calling": [],
            "code": "\nuint32_t get_error_code_08008840(void)\n\n{\n  return 0xffffffff;\n}\n\n",
            "current_name": "get_error_code_08008840",
            "entrypoint": "0x08008840",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008840": "get_error_code_08008840",
                "undefined4": "uint32_t"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008846": {
            "additional_data": {
                "0x2000": {
                    "initial_value": 1,
                    "memory_size": 1,
                    "page_size": 3
                },
                "FUN_08008846": {
                    "initialize_memory": 4,
                    "set_flags": 1,
                    "set_memory_flag": 1,
                    "set_memory_page_size": 7,
                    "set_memory_parameter": 1,
                    "set_memory_permission": 1,
                    "set_memory_permissions": 2,
                    "set_memory_size": 7,
                    "set_memory_to2000": 1,
                    "set_page_size": 6
                },
                "param_1": {
                    "address": 1,
                    "arg1": 3,
                    "base_address": 2,
                    "context": 1,
                    "initial_memory": 1,
                    "mem_layout": 1,
                    "memory": 1,
                    "output_pointer": 1,
                    "param": 1,
                    "param1": 5,
                    "param_1": 1,
                    "result": 9,
                    "target": 1,
                    "unused": 1,
                    "value": 2
                },
                "param_2": {
                    "address": 5,
                    "arg2": 1,
                    "base_address": 3,
                    "buffer": 4,
                    "buffer_offset": 1,
                    "buffer_pointer": 1,
                    "memory_address": 10,
                    "memory_location": 1,
                    "page_address": 1,
                    "param2": 1,
                    "permission_ptr": 1,
                    "pointer": 1,
                    "target_address": 1
                },
                "param_3": {
                    "size": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800a0ec"
            ],
            "code": "\nundefined4 set_memory_page_size_08008846(undefined4 result,int memory_address)\n\n{\n  *(undefined4 *)(memory_address + 4) = 0x2000;\n  return 0;\n}\n\n",
            "current_name": "set_memory_page_size_08008846",
            "entrypoint": "0x08008846",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008846": "set_memory_page_size_08008846",
                "param_1": "result",
                "param_2": "memory_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008850": {
            "additional_data": {
                "": {
                    "": 2
                },
                "FUN_08008850": {
                    "check_status": 1,
                    "describe_function": 1,
                    "determine_return_value": 1,
                    "determine_success": 1,
                    "get_default_value": 1,
                    "get_one": 3,
                    "get_result": 3,
                    "get_return_value": 4,
                    "get_status": 2,
                    "initialize": 6,
                    "initialize_application": 2,
                    "initialize_flag": 2,
                    "initialize_return_value": 2,
                    "is_true": 1,
                    "retrieve_success_status": 1
                },
                "return": {
                    "default_value": 1,
                    "result": 4,
                    "return_value": 1
                },
                "return_value": {
                    "result": 1
                },
                "undefined4": {
                    "int": 5,
                    "status": 5,
                    "unsigned_int": 1,
                    "void": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_0800a110"
            ],
            "code": "\nint initialize_application_08008850(void)\n\n{\n  result 1;\n}\n\n",
            "current_name": "initialize_application_08008850",
            "entrypoint": "0x08008850",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008850": "initialize_application_08008850",
                "return": "result",
                "undefined4": "int"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008854": {
            "additional_data": {
                "FUN_08008854": {
                    "calculate_result": 1,
                    "execute": 1,
                    "get_default_value": 4,
                    "get_return_value": 2,
                    "get_zero_value": 2,
                    "initialize": 10,
                    "initialize_app": 1,
                    "initialize_application": 3,
                    "initialize_data": 1,
                    "initialize_function": 3,
                    "initialize_program": 3
                },
                "return": {
                    "result": 1,
                    "return_value": 2,
                    "status": 1
                },
                "undefined4": {
                    "void": 15
                }
            },
            "called": [],
            "calling": [
                "FUN_0800a130"
            ],
            "code": "\nvoid initialize_application_08008854(void)\n\n{\n  return_value 0;\n}\n\n",
            "current_name": "initialize_application_08008854",
            "entrypoint": "0x08008854",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008854": "initialize_application_08008854",
                "return": "return_value",
                "undefined4": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008858": {
            "additional_data": {
                "FUN_08008858": {
                    "calculate_return_value": 1,
                    "clean_up_function": 1,
                    "clear_memory": 1,
                    "describe_function": 1,
                    "get_default_value": 2,
                    "get_zero": 1,
                    "initialize": 18,
                    "initialize_application": 3,
                    "initialize_data": 2,
                    "terminate_process": 1
                },
                "result": {
                    "default_value": 1
                },
                "return_val": {
                    "status": 1
                },
                "undefined4": {
                    "uint32_t": 1,
                    "void": 13
                },
                "var_1": {
                    "result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800a168"
            ],
            "code": "\nvoid initialize_application_08008858(void)\n\n{\n  return 0;\n}\n\n",
            "current_name": "initialize_application_08008858",
            "entrypoint": "0x08008858",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008858": "initialize_application_08008858",
                "undefined4": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800885c": {
            "additional_data": {
                "FUN_08008500": {
                    "calculate_checksum": 2,
                    "process_data": 5,
                    "process_message": 1,
                    "reverse_bytes": 2,
                    "transform_data": 1
                },
                "FUN_0800885c": {
                    "print_debug_message": 1,
                    "uart_debug_write_wrapper": 1,
                    "write_debug_data": 1,
                    "write_debug_info": 4,
                    "write_debug_information": 4,
                    "write_debug_message": 17,
                    "write_debug_output": 1,
                    "write_to_debug": 1,
                    "write_to_debug_uart": 1
                },
                "param_1": {
                    "arg1": 1,
                    "argument_1": 1,
                    "data": 1,
                    "input_value": 1,
                    "message_param": 1,
                    "param1": 1,
                    "param_1": 3,
                    "unk_param_1": 1,
                    "unknown_param": 1,
                    "unspecified_param_1": 1,
                    "unused": 1,
                    "unused_param": 17,
                    "unused_parameter1": 1
                },
                "param_2": {
                    "buffer": 1,
                    "data1": 4,
                    "data_1": 4,
                    "data_buffer": 2,
                    "data_param": 2,
                    "data_pointer": 1,
                    "data_ptr": 3,
                    "length_param": 1,
                    "message": 4,
                    "message1": 1,
                    "message_1": 1,
                    "message_address": 1,
                    "message_param": 1,
                    "message_ptr": 1,
                    "num_bytes": 1,
                    "size": 1,
                    "uart_port": 1,
                    "write_buffer": 1
                },
                "param_3": {
                    "buffer_size": 3,
                    "data2": 4,
                    "data_2": 4,
                    "data_start": 1,
                    "data_start_address": 1,
                    "length": 6,
                    "length_param": 4,
                    "message2": 1,
                    "message_2": 1,
                    "message_length": 1,
                    "size": 3,
                    "size_1": 1,
                    "unk_param_3": 1
                },
                "param_4": {
                    "arg1": 1,
                    "buffer": 1,
                    "buffer_address": 1,
                    "data3": 3,
                    "data_3": 4,
                    "data_end_address": 1,
                    "data_length": 1,
                    "offset_param": 1,
                    "param4": 1,
                    "param_4": 2,
                    "placeholder": 1,
                    "size_2": 1,
                    "unk_param_4": 1,
                    "unspecified_param_4": 1,
                    "unused": 2,
                    "unused_param": 5,
                    "unused_param2": 2,
                    "unused_param_2": 1,
                    "unused_parameter2": 1
                }
            },
            "called": [
                "FUN_08008500"
            ],
            "calling": [
                "FUN_0800a042"
            ],
            "code": "\nvoid write_debug_message_0800885c(undefined4 unused_param,undefined4 data1,undefined4 length,undefined4 unused_param)\n\n{\n  uart_debug_write(data1,length,length,unused_param,unused_param);\n  return;\n}\n\n",
            "current_name": "write_debug_message_0800885c",
            "entrypoint": "0x0800885c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800885c": "write_debug_message_0800885c",
                "param_1": "unused_param",
                "param_2": "data1",
                "param_3": "length",
                "param_4": "unused_param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008868": {
            "additional_data": {
                "DAT_": {
                    "": 1,
                    "dat_": 1,
                    "unchanged": 1
                },
                "DAT_08008868": {
                    "dat_something": 2
                },
                "DAT_08008868_1": {
                    "dat1": 1
                },
                "DAT_08008868_2": {
                    "dat2": 1
                },
                "DAT_2": {
                    "dat2": 1
                },
                "DO_ONLY": {
                    "do_only": 1
                },
                "FUN_08008868": {
                    "do_nothing": 1,
                    "infinite_loop": 28,
                    "loop_forever": 1,
                    "run_infinite_loop": 1
                },
                "PTR_": {
                    "": 1,
                    "ptr_": 1,
                    "unchanged": 1
                },
                "PTR_08008868": {
                    "ptr_infinite_loop": 1,
                    "ptr_loop": 1,
                    "ptr_something": 1,
                    "ptr_to_something": 1
                },
                "PTR_08008868_1": {
                    "ptr1": 1
                },
                "PTR_1": {
                    "ptr1": 1
                },
                "do": {
                    "do": 1,
                    "infinite_loop": 1
                },
                "original_variable_name_1": {
                    "counter": 1
                },
                "true": {
                    "infinite_condition": 1
                },
                "void": {
                    "void": 1
                },
                "while": {
                    "while": 1
                }
            },
            "called": [
                "FUN_08008868"
            ],
            "calling": [
                "FUN_08009b5c",
                "FUN_08008868"
            ],
            "code": "\nvoid run_infinite_loop_08008868(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( infinite_condition );\n}\n\n",
            "current_name": "run_infinite_loop_08008868",
            "entrypoint": "0x08008868",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008868": "run_infinite_loop_08008868",
                "true": "infinite_condition"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800886c": {
            "additional_data": {
                "": {
                    "": 1
                },
                "DAT_20000a38": {
                    "constant_value": 1,
                    "counter": 1,
                    "data": 3,
                    "data_size": 1,
                    "data_value": 9,
                    "data_variable": 1,
                    "default_cursor_value": 1,
                    "default_value": 1,
                    "global_variable": 1,
                    "initial_value": 5,
                    "settings_variable": 1,
                    "value": 1
                },
                "FUN_0800886c": {
                    "initialize_counter": 1,
                    "initialize_data": 18,
                    "initialize_default_value": 1,
                    "initialize_default_values": 1,
                    "initialize_global_variable": 2,
                    "initialize_settings": 1,
                    "initialize_value": 1,
                    "initialize_variable": 2,
                    "set_initial_value": 4
                },
                "return": {
                    "status": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08009fe8"
            ],
            "code": "\nundefined4 initialize_data_0800886c(void)\n\n{\n  DAT_20000a38 = 0x16;\n  status 0xffffffff;\n}\n\n",
            "current_name": "initialize_data_0800886c",
            "entrypoint": "0x0800886c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800886c": "initialize_data_0800886c",
                "return": "status"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800887c": {
            "additional_data": {
                "": {
                    "": 1
                },
                "FUN_0800887c": {
                    "check_success": 1,
                    "execute_function": 1,
                    "get_constant_one": 1,
                    "get_one": 1,
                    "get_result": 1,
                    "get_return_value": 8,
                    "get_status": 1,
                    "get_status_code": 1,
                    "get_true": 1,
                    "get_value": 1,
                    "initialize": 2,
                    "initialize_app": 1,
                    "initialize_data": 1,
                    "initialize_default_flag": 1,
                    "initialize_flag": 2,
                    "initialize_return_value": 1,
                    "initialize_value": 2,
                    "is_initialized": 1,
                    "is_one": 1,
                    "is_valid": 1,
                    "return_one": 1
                },
                "PTR_ARG_1": {
                    "data": 1
                },
                "PTR_ARG_2": {
                    "config": 1
                },
                "PTR_LOCAL_1": {
                    "result": 1
                },
                "original_variable_name_1": {
                    "initial_value": 1
                },
                "original_variable_name_2": {
                    "result": 1
                },
                "original_variable_name_n": {
                    "unused_variable": 1
                },
                "return": {
                    "flag": 1,
                    "return_value": 1,
                    "status": 2
                },
                "returnType": {
                    "undefined4": 1
                },
                "undefined4": {
                    "bool": 3,
                    "int": 4,
                    "result": 1,
                    "success_flag": 1,
                    "uint32_t": 4,
                    "void": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800a01c"
            ],
            "code": "\nuint32_t get_return_value_0800887c(void)\n\n{\n  status 1;\n}\n\n",
            "current_name": "get_return_value_0800887c",
            "entrypoint": "0x0800887c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800887c": "get_return_value_0800887c",
                "return": "status",
                "undefined4": "uint32_t"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008880": {
            "additional_data": {
                "DAT_0800a908": {
                    "character_array": 1
                },
                "DAT_20000088": {
                    "shift_amount": 2
                },
                "FUN_08008880": {
                    "calculate_adc_value": 5,
                    "convert_value": 1,
                    "decode_and_adjust_value": 2,
                    "decode_data": 1,
                    "decode_input_value": 1,
                    "decode_value": 1,
                    "extract_adc_value": 4,
                    "extract_data": 1,
                    "get_adc_value": 4,
                    "get_filtered_value": 1,
                    "map_adc_value_to_voltage": 1,
                    "process_data": 1,
                    "read_adc_value": 4,
                    "transform_value": 2,
                    "translate_param_to_value": 1
                },
                "adc_read_value": {
                    "read_adc_value": 2
                },
                "bVar1": {
                    "check_result": 1,
                    "is_in_range": 1,
                    "is_less_than": 1,
                    "is_less_than_0x3c": 5,
                    "is_less_than_30": 1,
                    "is_less_than_3c": 1,
                    "is_less_than_e": 1,
                    "is_less_than_limit": 1,
                    "is_less_than_threshold": 6,
                    "is_small_input": 2,
                    "is_small_value": 1,
                    "is_valid": 3,
                    "is_valid_input": 1,
                    "is_valid_param": 1,
                    "is_within_range": 4
                },
                "cVar2": {
                    "adc_char": 1,
                    "char_code": 1,
                    "char_value": 2,
                    "character": 1,
                    "character_value": 4,
                    "converted_value": 1,
                    "decoded_char": 3,
                    "decoded_character": 1,
                    "extracted_data": 1,
                    "extracted_value": 2,
                    "filtered_result": 1,
                    "lookup_result": 1,
                    "mapped_value": 1,
                    "output_value": 1,
                    "read_value": 1,
                    "result": 2,
                    "result_char": 2,
                    "result_value": 1,
                    "resulting_character": 1,
                    "translated_value": 1,
                    "value_from_dat": 1
                },
                "param_1": {
                    "adc_value": 1,
                    "input": 1,
                    "input_param": 1,
                    "input_value": 28
                },
                "uVar3": {
                    "adc_value": 7,
                    "adjusted_value": 2,
                    "decoded_value": 2,
                    "extracted_value": 1,
                    "final_result": 1,
                    "final_value": 1,
                    "output_value": 4,
                    "result": 7,
                    "result_value": 2,
                    "transformed_value": 2,
                    "voltage": 1
                }
            },
            "called": [
                "FUN_08006d80"
            ],
            "calling": [
                "FUN_080022f8",
                "FUN_08000488"
            ],
            "code": "\nuint calculate_adc_value_08008880(uint input_value)\n\n{\n  bool is_less_than_threshold;\n  char character_value;\n  uint adc_value;\n  \n  if (input_value < 0xe) {\n    if (input_value + 0x2e < 0x3c) {\n      is_less_than_threshold = true;\n    }\n    else {\n      is_less_than_threshold = false;\n    }\n  }\n  else {\n    is_less_than_threshold = input_value < 0x3c;\n  }\n  if (is_less_than_threshold) {\n    if (input_value < 0xe) {\n      input_value = input_value + 0x2e;\n    }\n    character_value = (&DAT_0800a908)[input_value];\n  }\n  else {\n    character_value = -1;\n  }\n  if (character_value == -1) {\n    adc_value = 0;\n  }\n  else {\n    adc_value = read_adc_value();\n    if (DAT_20000088 != 0xc) {\n      if (DAT_20000088 < 0xc) {\n        return adc_value >> (0xc - DAT_20000088 & 0xff);\n      }\n      return adc_value << (DAT_20000088 - 0xc & 0xff);\n    }\n  }\n  return adc_value;\n}\n\n",
            "current_name": "calculate_adc_value_08008880",
            "entrypoint": "0x08008880",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008880": "calculate_adc_value_08008880",
                "adc_read_value": "read_adc_value",
                "bVar1": "is_less_than_threshold",
                "cVar2": "character_value",
                "param_1": "input_value",
                "uVar3": "adc_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080088e0": {
            "additional_data": {
                "0x3c": {
                    "max_pin_number": 1,
                    "pin_mapping_threshold": 1
                },
                "0x3e418": {
                    "pwm_duty_cycle": 1,
                    "pwm_frequency": 1,
                    "pwm_period": 1
                },
                "0x80": {
                    "low_digital_threshold": 1,
                    "pin_value_threshold": 1
                },
                "0xff": {
                    "pwm_duty_cycle": 1,
                    "pwm_resolution": 2
                },
                "DAT": {
                    "not_changed": 1
                },
                "DAT_0800a6cc": {
                    "pin_config_mapping": 1
                },
                "DAT_0800a908": {
                    "pin_map": 1,
                    "pin_mapping": 1
                },
                "DAT_2000008c": {
                    "bit_count": 3,
                    "bit_length": 1,
                    "bit_offset": 1,
                    "bit_shift_amount": 2,
                    "bit_size": 2,
                    "bit_width": 2,
                    "bits": 1,
                    "data_register_value": 1,
                    "default_configuration": 1,
                    "pin_config": 1,
                    "pin_config_value": 1,
                    "pin_mode_setting": 2,
                    "pin_mode_value": 1,
                    "shift_amount": 1,
                    "shift_value": 1
                },
                "DAT_200006d8": {
                    "pin_config": 1,
                    "pin_config_status2": 1,
                    "pin_configured": 2
                },
                "DIGITAL_HIGH": {
                    "digital_high": 1,
                    "high": 2
                },
                "DIGITAL_LOW": {
                    "digital_low": 1,
                    "low": 2
                },
                "FUN_08006b28": {
                    "bit_shift": 1,
                    "bit_shift_value": 1,
                    "initialize_pin": 1,
                    "scale_pwm_value": 1,
                    "shift_left": 1,
                    "shift_pin_value": 1,
                    "shift_right": 2,
                    "shift_value_bits": 1
                },
                "FUN_08006b3e": {
                    "configure_pin": 1,
                    "initialize_pin": 1,
                    "set_digital_output": 1,
                    "set_pin_configuration_mode": 1,
                    "set_pin_mode": 2,
                    "set_pwm": 1,
                    "shift_left": 1,
                    "shift_value": 1
                },
                "FUN_08007118": {
                    "configure_pin_with_param": 1,
                    "configure_pwm": 2,
                    "pwm_config": 1,
                    "pwm_start": 1,
                    "set_pin_configuration": 1,
                    "start_pwm_with_parameters": 1,
                    "write_digital_value": 1,
                    "write_pin_digital": 1
                },
                "FUN_0800738a": {
                    "check_pin_mapping": 1,
                    "get_mapped_pin_index": 1,
                    "get_pin": 1,
                    "get_pin_index": 1,
                    "get_pin_index_from_data_array": 1,
                    "load_pin_from_pinmap": 1,
                    "pin_config_data": 1,
                    "pin_in_pin_map": 1,
                    "validate_pin": 1
                },
                "FUN_080088e0": {
                    "configure_digital_pin": 1,
                    "configure_pin": 22,
                    "handle_pin_function": 1,
                    "handle_pin_operation": 1,
                    "initialize_pin": 3,
                    "pin_mode_and_digital_write": 1,
                    "set_pin_mode_and_write": 1
                },
                "FUN_08008990": {
                    "configure_pin": 3,
                    "initialize_pin": 1,
                    "set_pwm_parameters": 1,
                    "start_pwm": 2,
                    "update_pin_config_with_param": 1,
                    "write_value": 1
                },
                "FUN_08008a24": {
                    "initialize_pin": 2,
                    "initialize_pwm": 1,
                    "set_pin_configured": 2,
                    "start_pwm": 2,
                    "update_pin_config": 1,
                    "write_value": 1
                },
                "PTR": {
                    "not_changed": 1
                },
                "PTR_0800a6cc": {
                    "pin_map": 1
                },
                "PTR_0800a908": {
                    "pin_mapping_data": 1
                },
                "digitalWrite": {
                    "digital_write_value": 1,
                    "set_digital_output": 2,
                    "set_digital_pin": 1,
                    "set_digital_value": 2,
                    "set_pin_value": 1,
                    "write_digital": 3,
                    "write_digital_pin": 3,
                    "write_digital_value": 4,
                    "write_pin": 1,
                    "write_pin_data": 1,
                    "write_pin_value": 1,
                    "write_to_pin": 2
                },
                "iVar1": {
                    "is_pin_configured_result": 1,
                    "is_pin_in_map": 1,
                    "is_pin_in_pinmap": 1,
                    "pin_config_result": 1,
                    "pin_config_status": 1,
                    "pin_configured": 10,
                    "pin_exists": 2,
                    "pin_found": 1,
                    "pin_in_pin_map_result": 2,
                    "pin_in_pinmap_result": 3,
                    "pin_index": 1,
                    "pin_map_result": 1,
                    "pin_status": 5,
                    "result": 1
                },
                "iVar2": {
                    "mapped_pin": 8,
                    "pin_config": 2,
                    "pin_configuration": 2,
                    "pin_index": 11,
                    "pin_map_index": 1,
                    "pin_map_value": 1,
                    "pin_mapping": 5,
                    "pin_mapping_index": 1
                },
                "is_pin_configured": {
                    "check_pin_configuration": 1,
                    "check_pin_configured": 7,
                    "is_pin_configured": 15
                },
                "param_1": {
                    "pin_index": 2,
                    "pin_number": 29
                },
                "param_2": {
                    "bit_value": 1,
                    "param": 1,
                    "pin_data": 1,
                    "pin_value": 9,
                    "pin_value_shift": 1,
                    "value": 18
                },
                "pinMode": {
                    "set_pin_mode": 23
                },
                "pin_in_pinmap": {
                    "check_pin_in_map": 1,
                    "check_pin_in_pin_map": 1,
                    "check_pin_in_pinmap": 4,
                    "check_pin_mapping": 2,
                    "get_mapped_pin": 3,
                    "get_pin_index": 1,
                    "get_pin_mapping": 1,
                    "is_pin_in_map": 2,
                    "is_pin_in_mapping": 1,
                    "is_pin_in_pin_map": 1,
                    "is_pin_in_pinmap": 2,
                    "is_pin_mapped": 1,
                    "map_pin_in_pinmap": 1,
                    "map_pin_to_gpio": 1
                },
                "pwm_start": {
                    "start_pwm": 23
                },
                "set_pin_configured": {
                    "mark_pin_configured": 1,
                    "set_pin_as_configured": 2,
                    "set_pin_configuration": 1,
                    "set_pin_configured": 19
                }
            },
            "called": [
                "FUN_0800738a",
                "FUN_08006b3e",
                "FUN_08007118",
                "FUN_08006b28",
                "FUN_08008a24",
                "FUN_08008990"
            ],
            "calling": [
                "FUN_0800021a",
                "FUN_080005f8"
            ],
            "code": "\nvoid configure_digital_pin_080088e0(uint pin_number,uint value)\n\n{\n  int pin_configured;\n  int pin_index;\n  \n  if (pin_number < 0x3c) {\n    pin_index = (int)(char)(&DAT_0800a908)[pin_number];\n  }\n  else {\n    pin_index = -1;\n  }\n  if (pin_index != -1) {\n    pin_configured = check_pin_in_pinmap(pin_index,&DAT_0800a6cc);\n    if (pin_configured == 0) {\n      set_pin_mode(pin_number,1);\n      if (DAT_2000008c != 8) {\n        if (DAT_2000008c < 9) {\n          value = value << (8 - DAT_2000008c & 0xff);\n        }\n        else {\n          value = value >> (DAT_2000008c - 8 & 0xff);\n        }\n      }\n      if (value < 0x80) {\n        write_digital_value(pin_number,0);\n      }\n      else {\n        write_digital_value(pin_number,1);\n      }\n    }\n    else {\n      pin_configured = is_pin_configured(pin_index,&DAT_200006d8);\n      if (pin_configured == 0) {\n        set_pin_configured(pin_index,&DAT_200006d8);\n      }\n      if (DAT_2000008c != 8) {\n        if (DAT_2000008c < 9) {\n          value = value << (8 - DAT_2000008c & 0xff);\n        }\n        else {\n          value = value >> (DAT_2000008c - 8 & 0xff);\n        }\n      }\n      start_pwm(pin_index,0x3e418,0xff,value,pin_configured == 0);\n    }\n  }\n  return;\n}\n\n",
            "current_name": "configure_digital_pin_080088e0",
            "entrypoint": "0x080088e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "DAT": "not_changed",
                "FUN_080088e0": "configure_digital_pin_080088e0",
                "digitalWrite": "write_digital_value",
                "iVar1": "pin_configured",
                "iVar2": "pin_index",
                "param_1": "pin_number",
                "param_2": "value",
                "pinMode": "set_pin_mode",
                "pin_in_pinmap": "check_pin_in_pinmap",
                "pwm_start": "start_pwm"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008990": {
            "additional_data": {
                "DAT_0800a6cc": {
                    "pin_array": 1,
                    "pin_map_array": 1,
                    "pin_map_initialized": 1,
                    "pin_map_list": 1
                },
                "DAT_200006d8": {
                    "config_status": 1,
                    "pin_configured_array": 1,
                    "pin_map": 1,
                    "pinmap_array": 1
                },
                "DAT_200006ec": {
                    "configured_pins_array": 2,
                    "configured_pins_list": 1,
                    "pin_initialized": 1
                },
                "FUN_08006b28": {
                    "pwm_stop": 5
                },
                "FUN_08006b3e": {
                    "pin_in_pinmap": 5
                },
                "FUN_08006b5c": {
                    "digital_io_init": 5
                },
                "FUN_080071e4": {
                    "reset_pin_configured": 5
                },
                "FUN_08007258": {
                    "set_pin_configured": 5
                },
                "FUN_0800738a": {
                    "is_pin_configured": 5
                },
                "FUN_08008990": {
                    "configure_and_init_pin": 3,
                    "configure_and_initialize_pin": 3,
                    "configure_io_pin": 2,
                    "configure_pin": 13,
                    "initialize_and_configure_pin": 1,
                    "initialize_pin": 8,
                    "initialize_pin_configurations": 1
                },
                "digital_io_init": {
                    "init_digital_io": 1,
                    "initialize_digital_io": 12
                },
                "iVar1": {
                    "is_configured": 4,
                    "is_pin_configured": 2,
                    "is_pin_configured_result": 9,
                    "pin_config_result": 5,
                    "pin_config_status": 1,
                    "pin_configured": 9,
                    "pin_found": 1
                },
                "iVar3": {
                    "pin_config": 2,
                    "pin_config_index": 10,
                    "pin_config_value": 3,
                    "pin_configuration": 1,
                    "pin_configuration_index": 1,
                    "pin_data": 1,
                    "pin_index": 6,
                    "pin_index_configured": 1,
                    "pin_mapping": 2,
                    "pin_mode_index": 1,
                    "pin_selector": 1,
                    "pin_value": 2
                },
                "is_pin_configured": {
                    "check_if_pin_configured": 3,
                    "check_pin_config": 2,
                    "check_pin_configuration": 1,
                    "check_pin_configured": 1,
                    "is_pin_configured": 3,
                    "is_pin_initialized": 1
                },
                "param_1": {
                    "pin_id": 2,
                    "pin_index": 13,
                    "pin_number": 16
                },
                "param_2": {
                    "config_type": 3,
                    "configuration": 1,
                    "init_mode": 2,
                    "init_type": 1,
                    "io_mode": 8,
                    "mode": 3,
                    "pin_mode": 13
                },
                "param_3": {
                    "additional_flag": 1,
                    "arg_1": 1,
                    "config_param": 2,
                    "config_value": 1,
                    "io_type": 1,
                    "param": 1,
                    "param1": 1,
                    "param3": 8,
                    "param_3": 10,
                    "parameter_3": 2,
                    "pin_configuration": 1,
                    "pin_state": 1,
                    "undefined_parameter": 1
                },
                "param_4": {
                    "param4": 1,
                    "param_4": 1,
                    "pin_config": 10,
                    "pin_config_array": 1,
                    "pin_config_data": 7,
                    "pin_config_list": 1,
                    "pin_config_param": 1,
                    "pin_config_table": 1,
                    "pin_configs": 1,
                    "pin_configuration_array": 1,
                    "pin_data": 3,
                    "pin_map": 3
                },
                "pin_in_pinmap": {
                    "check_if_pin_in_pinmap": 4,
                    "check_pin_in_map": 2,
                    "check_pin_in_pinmap": 2,
                    "is_pin_in_map": 1,
                    "is_pin_in_pin_map": 1,
                    "is_pin_in_pinmap": 2
                },
                "puVar2": {
                    "pin_address": 1,
                    "pin_array": 4,
                    "pin_config_array": 1,
                    "pin_config_data": 2,
                    "pin_config_data_ptr": 1,
                    "pin_config_pointer": 1,
                    "pin_config_ptr": 6,
                    "pin_config_table": 2,
                    "pin_config_table_ptr": 1,
                    "pin_configs": 1,
                    "pin_configuration_array": 1,
                    "pin_configuration_array_ptr": 1,
                    "pin_configured_ptr": 1,
                    "pin_data": 2,
                    "pin_list": 1,
                    "pin_map": 2,
                    "pin_mapping_address": 1,
                    "pin_table": 1,
                    "pinmap_data": 1
                },
                "pwm_stop": {
                    "stop_pwm": 13
                },
                "reset_pin_configured": {
                    "reset_config_status": 1,
                    "reset_pin_config": 3,
                    "reset_pin_configuration": 2,
                    "reset_pin_configured": 4,
                    "reset_pin_configured_pin": 1,
                    "reset_pin_initialized": 1,
                    "unset_pin_configured": 1
                },
                "set_pin_configured": {
                    "set_config_status": 1,
                    "set_pin_config": 3,
                    "set_pin_configuration": 2,
                    "set_pin_configured": 6,
                    "set_pin_initialized": 1
                }
            },
            "called": [
                "FUN_0800738a",
                "FUN_08006b3e",
                "FUN_08006b28",
                "FUN_080071e4",
                "FUN_08006b5c",
                "FUN_08007258"
            ],
            "calling": [
                "FUN_080025ac",
                "FUN_08003002",
                "FUN_080088e0",
                "FUN_080005f8"
            ],
            "code": "\nvoid initialize_and_configure_pin_08008990(uint pin_number,undefined4 pin_mode,undefined4 param_3,undefined1 *pin_config)\n\n{\n  int pin_configured;\n  undefined1 *pin_config_ptr;\n  int pin_config_index;\n  \n  if (pin_number < 0x3c) {\n    pin_config_index = (int)(char)(&DAT_0800a908)[pin_number];\n    pin_config_ptr = &DAT_0800a908;\n  }\n  else {\n    pin_config_index = -1;\n    pin_config_ptr = pin_config;\n  }\n  if (pin_config_index != -1) {\n    pin_configured = is_pin_configured(pin_config_index,&DAT_200006d8,param_3,pin_config_ptr,pin_config);\n    if (pin_configured != 0) {\n      pin_configured = check_if_pin_in_pinmap(pin_config_index,&DAT_0800a6cc);\n      if (pin_configured != 0) {\n        stop_pwm(pin_config_index);\n      }\n      reset_pin_configured(pin_config_index,&DAT_200006d8);\n    }\n    switch(pin_mode) {\n    case 0:\n      initialize_digital_io(pin_config_index,0);\n      break;\n    case 1:\n      initialize_digital_io(pin_config_index,1,0);\n      break;\n    case 2:\n      initialize_digital_io(pin_config_index,0,1);\n      break;\n    case 3:\n      initialize_digital_io(pin_config_index,0,2);\n    }\n    set_pin_configured(pin_config_index,&DAT_200006ec);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_and_configure_pin_08008990",
            "entrypoint": "0x08008990",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008990": "initialize_and_configure_pin_08008990",
                "digital_io_init": "initialize_digital_io",
                "iVar1": "pin_configured",
                "iVar3": "pin_config_index",
                "param_1": "pin_number",
                "param_2": "pin_mode",
                "param_4": "pin_config",
                "pin_in_pinmap": "check_if_pin_in_pinmap",
                "puVar2": "pin_config_ptr",
                "pwm_stop": "stop_pwm"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008a24": {
            "additional_data": {
                "DAT_0800a908": {
                    "pins_data": 1
                },
                "DAT_200006ec": {
                    "param2": 1
                },
                "FUN_08006b28": {
                    "get_pin_config": 1,
                    "get_pin_value": 1,
                    "is_pin_configured": 1
                },
                "FUN_08006b7c": {
                    "get_gpio_port": 2,
                    "set_default_config": 1
                },
                "FUN_080072d8": {
                    "configure_port": 1,
                    "digital_io_write": 2
                },
                "FUN_08008a24": {
                    "configure_and_write_gpio": 5,
                    "configure_and_write_gpio_pin": 1,
                    "configure_and_write_pin": 1,
                    "configure_gpio": 1,
                    "configure_gpio_pin": 5,
                    "configure_pin": 7,
                    "configure_pin_and_write": 4,
                    "configure_pin_and_write_data": 2,
                    "configure_pin_and_write_to_gpio": 2,
                    "configure_pin_and_write_value": 1,
                    "configure_pin_output": 1,
                    "write_gpio_port": 1
                },
                "digital_io_write": {
                    "perform_digital_io_write": 1,
                    "write_digital_io": 4,
                    "write_gpio": 1,
                    "write_gpio_pin": 1,
                    "write_gpio_value": 1,
                    "write_to_gpio": 2
                },
                "get_GPIO_Port": {
                    "get_gpio_port": 5,
                    "get_gpio_port_by_pin": 1,
                    "get_pin_gpio_port": 1,
                    "retrieve_gpio_port": 3
                },
                "iVar1": {
                    "config_result": 1,
                    "configured": 2,
                    "is_configured": 14,
                    "is_pin_configured_result": 2,
                    "pin_config_result": 1,
                    "pin_config_status": 1,
                    "pin_configuration_status": 1,
                    "pin_configured": 8,
                    "result": 1
                },
                "is_pin_configured": {
                    "check_if_pin_configured": 2,
                    "check_if_pin_is_configured": 1,
                    "check_pin_configuration": 6
                },
                "param_1": {
                    "pin_id": 1,
                    "pin_index": 20,
                    "pin_number": 10
                },
                "param_2": {
                    "data": 3,
                    "output_value": 8,
                    "pin_state": 1,
                    "pin_value": 3,
                    "value": 16
                },
                "param_3": {
                    "config": 1,
                    "config_1": 1,
                    "config_param": 5,
                    "config_param_1": 1,
                    "config_value": 1,
                    "configuration": 1,
                    "input_value": 1,
                    "param1": 1,
                    "param3": 4,
                    "param_3": 7,
                    "param_port": 1,
                    "param_value": 1,
                    "parameter_3": 2,
                    "pin_config": 1,
                    "pin_configuration": 1,
                    "some_parameter": 1,
                    "some_parameter_1": 1
                },
                "param_4": {
                    "buffer": 2,
                    "config_2": 1,
                    "config_data": 2,
                    "config_param_2": 1,
                    "data": 1,
                    "data_buffer": 1,
                    "data_param": 1,
                    "data_ptr": 1,
                    "gpio_base_address": 1,
                    "gpio_data": 1,
                    "gpio_registers_ptr": 1,
                    "param4": 1,
                    "param_buffer": 1,
                    "pin_config": 2,
                    "pin_config_array": 3,
                    "pin_config_data": 3,
                    "pin_config_table": 1,
                    "pin_data": 5,
                    "port": 1,
                    "some_parameter_2": 1
                },
                "puVar3": {
                    "base_address": 1,
                    "config_data_ptr": 1,
                    "config_ptr": 1,
                    "gpio_base": 1,
                    "gpio_config": 1,
                    "look_up_table": 1,
                    "pin_config": 2,
                    "pin_config_array_ptr": 1,
                    "pin_config_pointer": 1,
                    "pin_config_ptr": 5,
                    "pin_data": 5,
                    "pin_data_array": 1,
                    "pin_data_ptr": 7,
                    "pin_pointer": 1,
                    "pin_ptr": 1,
                    "pin_value_table": 1
                },
                "uVar2": {
                    "gpio_port": 28,
                    "port": 3
                },
                "uVar4": {
                    "config_value": 1,
                    "configured_pin": 2,
                    "pin_config": 4,
                    "pin_config_index": 1,
                    "pin_config_value": 1,
                    "pin_data": 4,
                    "pin_data_value": 1,
                    "pin_number": 1,
                    "pin_value": 15,
                    "pin_value_from_table": 1
                }
            },
            "called": [
                "FUN_08006b28",
                "FUN_08006b7c",
                "FUN_080072d8"
            ],
            "calling": [
                "FUN_08002fca",
                "FUN_080088e0",
                "FUN_080005f8"
            ],
            "code": "\nvoid configure_pin_and_write_to_gpio_08008a24(uint pin_index,undefined4 value,undefined4 param_3,undefined1 *pin_data)\n\n{\n  int is_configured;\n  undefined4 gpio_port;\n  undefined1 *pin_data_ptr;\n  uint pin_value;\n  \n  if (pin_index < 0x3c) {\n    pin_value = (uint)(char)(&DAT_0800a908)[pin_index];\n    pin_data_ptr = &DAT_0800a908;\n  }\n  else {\n    pin_value = 0xffffffff;\n    pin_data_ptr = pin_data;\n  }\n  if ((pin_value != 0xffffffff) &&\n     (is_configured = check_pin_configuration(pin_value,&DAT_200006ec,param_3,pin_data_ptr,pin_data), is_configured != 0)) {\n    gpio_port = get_gpio_port((pin_value << 0x18) >> 0x1c);\n    write_digital_io(gpio_port,1 << (pin_value & 0xf) & 0xffff,value);\n  }\n  return;\n}\n\n",
            "current_name": "configure_pin_and_write_to_gpio_08008a24",
            "entrypoint": "0x08008a24",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008a24": "configure_pin_and_write_to_gpio_08008a24",
                "digital_io_write": "write_digital_io",
                "get_GPIO_Port": "get_gpio_port",
                "iVar1": "is_configured",
                "is_pin_configured": "check_pin_configuration",
                "param_1": "pin_index",
                "param_2": "value",
                "param_4": "pin_data",
                "puVar3": "pin_data_ptr",
                "uVar2": "gpio_port",
                "uVar4": "pin_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008a6c": {
            "additional_data": {
                "FUN_08006b28": {
                    "shift_bits": 1
                },
                "FUN_08006b7c": {
                    "read_digital_io": 1
                },
                "FUN_080072f0": {
                    "initialize_pin": 1
                },
                "FUN_08008a6c": {
                    "check_and_read_gpio": 1,
                    "check_and_read_gpio_pin_value": 1,
                    "check_gpio_pin": 1,
                    "check_gpio_pin_status": 1,
                    "check_pin_config": 3,
                    "check_pin_state": 2,
                    "check_pin_status": 11,
                    "is_gpio_pin_configured": 1,
                    "pin_status": 1,
                    "read_gpio_pin_status": 2,
                    "read_pin_state": 2,
                    "read_pin_status": 2,
                    "read_pin_value": 3
                },
                "cVar1": {
                    "is_configured": 4,
                    "is_pin_configured": 1,
                    "is_pin_valid": 1,
                    "pin_state": 4,
                    "pin_status": 5,
                    "pin_value": 4,
                    "result": 2,
                    "status": 10
                },
                "char": {
                    "boolean": 1
                },
                "digital_io_read": {
                    "read_digital_io": 10,
                    "read_gpio": 1,
                    "read_gpio_pin_value": 1
                },
                "get_GPIO_Port": {
                    "get_gpio_port": 8,
                    "get_port_address": 3,
                    "retrieve_gpio_port": 1
                },
                "iVar2": {
                    "configured": 2,
                    "is_configured": 11,
                    "is_configured_result": 2,
                    "is_pin_configured": 3,
                    "pin_config_status": 1,
                    "pin_configured": 12
                },
                "is_pin_configured": {
                    "check_if_pin_configured": 1,
                    "check_pin_configuration": 5,
                    "check_pin_configured": 2,
                    "is_gpio_configured": 1,
                    "is_pin_configured": 2
                },
                "param_1": {
                    "pin_index": 4,
                    "pin_num": 1,
                    "pin_number": 26
                },
                "uVar3": {
                    "gpio_port": 28,
                    "port": 1,
                    "port_address": 2
                },
                "uVar4": {
                    "config_value": 1,
                    "configured_pin": 1,
                    "gpio_index": 1,
                    "gpio_pin": 1,
                    "map_index": 1,
                    "mapped_pin": 1,
                    "mapped_pin_number": 1,
                    "pin_bit": 1,
                    "pin_config": 5,
                    "pin_configuration": 2,
                    "pin_data": 1,
                    "pin_index": 2,
                    "pin_mapping": 4,
                    "pin_value": 7,
                    "port_address": 1,
                    "port_value": 1
                }
            },
            "called": [
                "FUN_080072f0",
                "FUN_08006b28",
                "FUN_08006b7c"
            ],
            "calling": [
                "FUN_08000ef8"
            ],
            "code": "\nboolean check_gpio_pin_status_08008a6c(uint pin_number)\n\n{\n  boolean status;\n  int pin_configured;\n  undefined4 gpio_port;\n  uint pin_value;\n  \n  if (pin_number < 0x3c) {\n    pin_value = (uint)(boolean)(&DAT_0800a908)[pin_number];\n  }\n  else {\n    pin_value = 0xffffffff;\n  }\n  if (pin_value == 0xffffffff) {\n    status = '\\0';\n  }\n  else {\n    pin_configured = check_pin_configuration(pin_value,&DAT_200006ec);\n    if (pin_configured == 0) {\n      status = '\\0';\n    }\n    else {\n      gpio_port = get_gpio_port((pin_value << 0x18) >> 0x1c);\n      status = read_digital_io(gpio_port,1 << (pin_value & 0xf) & 0xffff);\n    }\n  }\n  if (status != '\\0') {\n    status = '\\x01';\n  }\n  return status;\n}\n\n",
            "current_name": "check_gpio_pin_status_08008a6c",
            "entrypoint": "0x08008a6c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008a6c": "check_gpio_pin_status_08008a6c",
                "cVar1": "status",
                "char": "boolean",
                "digital_io_read": "read_digital_io",
                "get_GPIO_Port": "get_gpio_port",
                "iVar2": "pin_configured",
                "is_pin_configured": "check_pin_configuration",
                "param_1": "pin_number",
                "uVar3": "gpio_port",
                "uVar4": "pin_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008abc": {
            "additional_data": {
                "FUN_0800723c": {
                    "calculate_something": 1,
                    "do_something": 1,
                    "extract_data": 1,
                    "get_system_time": 1,
                    "initialize": 2,
                    "initialize_data": 1,
                    "initialize_subsystem": 1,
                    "initialize_system": 12,
                    "initialize_timer": 1,
                    "log_current_time": 1,
                    "perform_action": 1,
                    "perform_some_operation": 1,
                    "print_current_time": 1,
                    "print_elapsed_time": 1,
                    "print_info": 1,
                    "retrieve_data": 1,
                    "retrieve_system_information": 1,
                    "sub_function": 1,
                    "update_system_state": 1
                },
                "FUN_08008abc": {
                    "calculate_current_milliseconds": 1,
                    "calculate_elapsed_time": 2,
                    "get_current_milli": 2,
                    "get_current_milli_timestamp": 1,
                    "get_current_millisecond": 8,
                    "get_current_milliseconds": 6,
                    "get_current_time": 3,
                    "get_current_time_in_millis": 2,
                    "get_current_time_in_milliseconds": 1,
                    "get_current_time_milliseconds": 3,
                    "get_current_timestamp": 1,
                    "get_time_elapsed": 1
                },
                "GetCurrentMilli": {
                    "get_current_millis": 1,
                    "get_current_millisecond": 1,
                    "get_millisecond_timestamp": 1
                }
            },
            "called": [
                "FUN_0800723c"
            ],
            "calling": [
                "FUN_080022f8"
            ],
            "code": "\nvoid get_current_time_in_milliseconds_08008abc(void)\n\n{\n  get_millisecond_timestamp();\n  return;\n}\n\n",
            "current_name": "get_current_time_in_milliseconds_08008abc",
            "entrypoint": "0x08008abc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008abc": "get_current_time_in_milliseconds_08008abc",
                "GetCurrentMilli": "get_millisecond_timestamp"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008ac4": {
            "called": [],
            "calling": [
                "FUN_08003002",
                "FUN_08002fca"
            ],
            "code": "\nvoid FUNC_08008ac4(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08008ac4",
            "entrypoint": "0x08008ac4",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08008ac4": "FUNC_08008ac4"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08008afa": {
            "additional_data": {
                "0x134": {
                    "base_value_address": 1,
                    "first_offset": 1,
                    "offset": 1,
                    "offset1": 5,
                    "offset_1": 3
                },
                "0x136": {
                    "offset2": 6,
                    "offset_2": 3,
                    "second_offset": 1,
                    "sub_value_address": 1
                },
                "0x3f": {
                    "bit_mask": 1,
                    "constant2": 1,
                    "constant_2": 1,
                    "mask": 1
                },
                "0x40": {
                    "constant1": 2,
                    "constant_1": 1,
                    "offset": 1
                },
                "FUN_08008afa": {
                    "calculate_adjustment": 1,
                    "calculate_and_offset_value": 1,
                    "calculate_checksum": 11,
                    "calculate_difference": 3,
                    "calculate_hash": 1,
                    "calculate_modified_value": 1,
                    "calculate_offset": 8,
                    "calculate_result": 4,
                    "calculate_value": 1
                },
                "PTR_0802b134": {
                    "value_a": 1
                },
                "PTR_0802b136": {
                    "value_b": 1
                },
                "param_1": {
                    "address": 1,
                    "base_address": 5,
                    "checksum_input": 1,
                    "data_pointer": 1,
                    "input": 1,
                    "input_address": 3,
                    "input_data": 1,
                    "input_value": 13,
                    "memory_address": 1,
                    "offset": 2,
                    "offset_value": 1,
                    "value": 1
                },
                "short": {
                    "checksum_type": 1
                },
                "short1": {
                    "value1": 1
                },
                "short2": {
                    "value2": 1
                },
                "short_1": {
                    "offset_0x134_value": 1
                },
                "short_2": {
                    "offset_0x136_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08008bf4"
            ],
            "code": "\nuchecksum_type calculate_checksum_08008afa(int input_value)\n\n{\n  return (*(checksum_type *)(input_value + 0x134) + 0x40) - *(checksum_type *)(input_value + 0x136) & 0x3f;\n}\n\n",
            "current_name": "calculate_checksum_08008afa",
            "entrypoint": "0x08008afa",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008afa": "calculate_checksum_08008afa",
                "param_1": "input_value",
                "short": "checksum_type"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008b66": {
            "additional_data": {
                "FUN_08008b66": {
                    "extract_and_store": 1,
                    "extract_and_store_input": 1,
                    "process_input": 1,
                    "process_uart_input": 25,
                    "read_and_store_character": 1,
                    "read_and_store_uart_data": 1,
                    "receive_and_store_input": 1
                },
                "iVar1": {
                    "character_status": 1,
                    "input_result": 7,
                    "input_status": 8,
                    "read_result": 1,
                    "receive_status": 1,
                    "received_byte": 1,
                    "result": 1,
                    "status": 1,
                    "uart_read_result": 2,
                    "uart_result": 3,
                    "uart_status": 3
                },
                "local_9": {
                    "input_byte": 4,
                    "input_char": 2,
                    "input_data": 4,
                    "input_value": 1,
                    "new_char": 1,
                    "received_byte": 12,
                    "received_char": 1,
                    "received_character": 2,
                    "received_data": 3,
                    "received_data_byte": 1
                },
                "param_1": {
                    "uart_controller": 1,
                    "uart_device": 6,
                    "uart_handle": 10,
                    "uart_instance": 3,
                    "uart_module": 1,
                    "uart_port": 10
                },
                "uVar2": {
                    "buffer_index": 1,
                    "current_index": 9,
                    "index": 1,
                    "new_index": 11,
                    "next_index": 7
                },
                "uart_getc": {
                    "read_uart_data": 1
                }
            },
            "called": [
                "FUN_08008600"
            ],
            "calling": [],
            "code": "\nvoid process_uart_input_08008b66(int uart_port)\n\n{\n  int input_status;\n  ushort new_index;\n  undefined received_byte;\n  \n  input_status = read_uart_data(uart_port,&received_byte);\n  if ((input_status == 0) &&\n     (new_index = *(short *)(uart_port + 0x60) + 1U & 0x3f, new_index != *(ushort *)(uart_port + 0x62))) {\n    *(undefined *)(*(int *)(uart_port + 0x5c) + (uint)*(ushort *)(uart_port + 0x60)) = received_byte;\n    *(ushort *)(uart_port + 0x60) = new_index;\n  }\n  return;\n}\n\n",
            "current_name": "process_uart_input_08008b66",
            "entrypoint": "0x08008b66",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008b66": "process_uart_input_08008b66",
                "iVar1": "input_status",
                "local_9": "received_byte",
                "param_1": "uart_port",
                "uVar2": "new_index",
                "uart_getc": "read_uart_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008bf4": {
            "called": [
                "FUN_08008afa"
            ],
            "calling": [
                "FUN_08008f1c"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08008bfa) */\n/* WARNING: Removing unreachable block (ram,0x08008c0c) */\n/* WARNING: Removing unreachable block (ram,0x08008c02) */\n/* WARNING: Removing unreachable block (ram,0x08008c14) */\n\nvoid FUNC_08008bf4(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08008bf4",
            "entrypoint": "0x08008bf4",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08008bf4": "FUNC_08008bf4"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08008c20": {
            "additional_data": {
                "0x11": {
                    "additional_offset1": 1,
                    "constant1": 1,
                    "constant_value1": 1,
                    "initial_offset": 1,
                    "offset_value_1": 1,
                    "some_value1": 1,
                    "value1": 1
                },
                "0x130": {
                    "offset1": 4,
                    "offset_1": 2,
                    "offset_a": 1,
                    "some_offset1": 1
                },
                "0x134": {
                    "offset2": 3,
                    "offset_2": 2,
                    "some_offset2": 1,
                    "value1": 1,
                    "value_a": 1
                },
                "0x136": {
                    "offset3": 3,
                    "offset_3": 2,
                    "some_offset3": 1,
                    "value2": 1,
                    "value_b": 1
                },
                "0x138": {
                    "offset2": 1,
                    "offset4": 3,
                    "offset_4": 2,
                    "offset_b": 1,
                    "some_offset4": 1
                },
                "0x13c": {
                    "offset5": 3,
                    "offset_5": 2,
                    "some_offset5": 1,
                    "value3": 1,
                    "value_c": 1
                },
                "0x13e": {
                    "offset6": 3,
                    "offset_6": 2,
                    "some_offset6": 1,
                    "value4": 1,
                    "value_d": 1
                },
                "0x51": {
                    "additional_offset2": 1,
                    "constant2": 1,
                    "constant_value2": 1,
                    "initial_offset_b": 1,
                    "offset_value_2": 1,
                    "some_value2": 1,
                    "value2": 1
                },
                "FUN_08008c20": {
                    "initialize_data": 9,
                    "initialize_data_structure": 4,
                    "initialize_data_structures": 3,
                    "initialize_function": 2,
                    "initialize_object": 1,
                    "initialize_parameters": 7,
                    "initialize_params": 1,
                    "initialize_struct": 1,
                    "initialize_user_data": 1,
                    "set_default_values": 1,
                    "set_initial_values": 1
                },
                "PTR_DAT_08008c20_00000130": {
                    "entry_pointer": 1
                },
                "PTR_DAT_08008c20_00000134": {
                    "pointer1": 1
                },
                "PTR_DAT_08008c20_00000136": {
                    "pointer2": 1
                },
                "PTR_DAT_08008c20_00000138": {
                    "initial_pointer": 1
                },
                "PTR_DAT_08008c20_0000013c": {
                    "pointer3": 1
                },
                "PTR_DAT_08008c20_0000013e": {
                    "pointer4": 1
                },
                "param_1": {
                    "base_address": 12,
                    "data_address": 4,
                    "data_pointer": 2,
                    "data_struct": 1,
                    "data_structure": 1,
                    "data_structure_address": 2,
                    "function_base_address": 1,
                    "input_parameter": 1,
                    "input_value": 1,
                    "object_address": 2,
                    "param": 1,
                    "parameter": 1,
                    "struct_pointer": 1,
                    "user_data_address": 1
                },
                "param_2": {
                    "size_of_data_structure": 1
                },
                "param_3": {
                    "offset": 1
                },
                "param_4": {
                    "initial_value": 1
                },
                "param_5": {
                    "value_offset": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08008d30"
            ],
            "code": "\nvoid initialize_data_structure_08008c20(int base_address)\n\n{\n  *(int *)(base_address + 0x130) = base_address + 0x11;\n  *(undefined2 *)(base_address + 0x134) = 0;\n  *(undefined2 *)(base_address + 0x136) = 0;\n  *(int *)(base_address + 0x138) = base_address + 0x51;\n  *(undefined2 *)(base_address + 0x13c) = 0;\n  *(undefined2 *)(base_address + 0x13e) = 0;\n  return;\n}\n\n",
            "current_name": "initialize_data_structure_08008c20",
            "entrypoint": "0x08008c20",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008c20": "initialize_data_structure_08008c20",
                "param_1": "base_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008c44": {
            "additional_data": {
                "DAT_0800a908": {
                    "data_array": 1
                },
                "FUN_08008078": {
                    "initialize_data": 1,
                    "initialize_hardware_serial": 1,
                    "initialize_serial": 1,
                    "uart_init": 2,
                    "unhide_data_bits": 1
                },
                "FUN_0800863c": {
                    "begin_hardware_serial": 1,
                    "begin_serial": 1,
                    "configure_hardware": 1,
                    "configure_serial": 1,
                    "uart_attach_rx_callback": 2
                },
                "FUN_08008c44": {
                    "configure_hardware_serial": 1,
                    "configure_serial_port": 4,
                    "initialize_hardware_serial": 1,
                    "initialize_serial": 6,
                    "initialize_serial_communication": 3,
                    "initialize_serial_port": 10,
                    "initialize_uart": 5,
                    "set_serial_params": 1
                },
                "FUN_080090cc": {
                    "__assert_func": 1,
                    "assert_data_bits": 1,
                    "assert_function": 2,
                    "process_data": 1,
                    "recover_jump_table": 1
                },
                "UNRECOVERED_JUMPTABLE": {
                    "callback_function": 1,
                    "jmp_table": 1,
                    "jump_table": 16,
                    "jump_table_addr": 1,
                    "jump_table_address": 1,
                    "jump_table_function": 1,
                    "jumptable": 5,
                    "jumptable_function": 1,
                    "uart_callback_function": 1,
                    "unknown_function": 1,
                    "unrecovered_jump_table": 1
                },
                "__assert_func": {
                    "assert_function": 6
                },
                "bVar1": {
                    "bit_mask": 2,
                    "bit_value": 1,
                    "config_bit": 2,
                    "config_bits": 1,
                    "config_byte_mask": 1,
                    "config_flag": 1,
                    "config_flags": 1,
                    "config_mask": 9,
                    "config_value": 1,
                    "flag": 1,
                    "low_bits": 1,
                    "masked_config": 1,
                    "option_bits": 1,
                    "option_mask": 1,
                    "param_flags_mod": 1,
                    "serial_config_flag": 1,
                    "serial_config_mask": 2,
                    "serial_config_masked": 1,
                    "serial_mode": 1,
                    "uart_settings_mask": 1
                },
                "extraout_r1": {
                    "assert_condition": 1,
                    "bit_rate_index": 1,
                    "checked_data_bits": 1,
                    "config_mask": 1,
                    "data_bits": 3,
                    "error_code": 3,
                    "extra_output": 2,
                    "extra_output_r1": 1,
                    "param": 1,
                    "random_number": 1,
                    "random_value": 1,
                    "result": 3,
                    "return_value": 1,
                    "status": 1
                },
                "iVar2": {
                    "condition": 1,
                    "config_count": 1,
                    "config_index": 1,
                    "config_value": 13,
                    "data_bits": 3,
                    "flag_value": 1,
                    "interrupt_config_flag": 1,
                    "mode": 1,
                    "option": 1,
                    "uart_config": 1,
                    "uart_flags": 1,
                    "uart_mode": 5,
                    "uart_settings_flag": 1
                },
                "param_1": {
                    "base_address": 1,
                    "param1": 1,
                    "port_address": 7,
                    "serial_address": 2,
                    "serial_data_struct": 1,
                    "serial_device": 1,
                    "serial_port": 6,
                    "serial_port_address": 8,
                    "uart_device": 1,
                    "uart_handle": 1,
                    "uart_instance": 2
                },
                "param_2": {
                    "baud_rate": 26,
                    "param1": 1,
                    "param2": 4
                },
                "param_3": {
                    "config": 4,
                    "config_bits": 1,
                    "config_byte": 3,
                    "config_settings": 1,
                    "configuration": 1,
                    "options": 1,
                    "param2": 1,
                    "param3": 4,
                    "param_flags": 1,
                    "serial_config": 11,
                    "serial_options": 1,
                    "serial_params": 1,
                    "uart_settings": 1
                },
                "param_4": {
                    "param4": 1,
                    "stack0x00000148": 1
                },
                "stack0x00000148": {
                    "stack_data": 1
                },
                "uRam0000012d": {
                    "assigned_data": 1,
                    "data_bits": 1,
                    "ram_data": 1,
                    "ram_value": 2,
                    "unknown_value": 1
                },
                "uart_attach_rx_callback": {
                    "attach_callback_to_uart": 1,
                    "attach_rx_callback": 5,
                    "attach_uart_callback": 1
                },
                "uart_init": {
                    "initialize_uart": 7
                }
            },
            "called": [
                "FUN_08008078",
                "FUN_0800863c",
                "FUN_080090cc"
            ],
            "calling": [
                "FUN_08003048"
            ],
            "code": "\nvoid initialize_serial_port_08008c44(int serial_port_address,undefined4 baud_rate,byte serial_config)\n\n{\n  uint error_code;\n  byte config_mask;\n  int config_value;\n  code *jump_table;\n  \n  *(undefined4 *)(serial_port_address + 0x11c) = baud_rate;\n  *(byte *)(serial_port_address + 0x140) = serial_config;\n  config_mask = serial_config & 7;\n  if (config_mask == 4) {\n    config_value = 7;\n  }\n  else if (config_mask == 6) {\n    config_value = 8;\n  }\n  else if (config_mask == 2) {\n    config_value = 6;\n  }\n  else {\n    config_value = 0;\n  }\n  if ((serial_config & 0x30) == 0x30) {\n    *(undefined4 *)(serial_port_address + 0x128) = 0x600;\n    config_value = config_value + 1;\n  }\n  else if ((serial_config & 0x20) == 0) {\n    *(undefined4 *)(serial_port_address + 0x128) = 0;\n  }\n  else {\n    *(undefined4 *)(serial_port_address + 0x128) = 0x400;\n    config_value = config_value + 1;\n  }\n  if ((serial_config & 8) == 0) {\n    *(undefined4 *)(serial_port_address + 0x124) = 0;\n  }\n  else {\n    *(undefined4 *)(serial_port_address + 0x124) = 0x2000;\n  }\n  if (config_value == 8) {\n    *(undefined4 *)(serial_port_address + 0x120) = 0;\n  }\n  else if (config_value == 9) {\n    *(undefined4 *)(serial_port_address + 0x120) = 0x1000;\n  }\n  else {\n    config_value = 0;\n  }\n  if (config_value != 0) {\n    initialize_uart(serial_port_address + 0xd4);\n    attach_rx_callback(serial_port_address + 0xd4,0x8008b67);\n    return;\n  }\n  jump_table = (code *)0x8008cee;\n  assert_function(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/cores/arduino/HardwareSerial.cpp\"\n                ,299,\"void HardwareSerial::begin(long unsigned int, byte)\",\"databits!=0\");\n  if (error_code < 0x3c) {\n    ram_value = (&DAT_0800a908)[error_code];\n  }\n  else {\n    ram_value = 0xff;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08008d0c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)(0,error_code,&stack_data);\n  return;\n}\n\n",
            "current_name": "initialize_serial_port_08008c44",
            "entrypoint": "0x08008c44",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008c44": "initialize_serial_port_08008c44",
                "UNRECOVERED_JUMPTABLE": "jump_table",
                "__assert_func": "assert_function",
                "bVar1": "config_mask",
                "extraout_r1": "error_code",
                "iVar2": "config_value",
                "param_1": "serial_port_address",
                "param_2": "baud_rate",
                "param_3": "serial_config",
                "stack0x00000148": "stack_data",
                "uRam0000012d": "ram_value",
                "uart_attach_rx_callback": "attach_rx_callback",
                "uart_init": "initialize_uart"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008d00": {
            "additional_data": {
                "FUN_08008d00": {
                    "assign_value_to_memory": 1,
                    "set_byte_based_on_index": 1,
                    "set_byte_based_on_value": 1,
                    "set_byte_in_memory": 1,
                    "set_byte_value": 4,
                    "set_character": 1,
                    "set_control_code": 1,
                    "set_control_register": 1,
                    "set_default_value": 1,
                    "set_function_parameter": 1,
                    "set_memory_byte": 1,
                    "set_memory_byte_after_threshold": 1,
                    "set_param_value": 1,
                    "set_parameter_value": 1,
                    "set_pixel_color": 2,
                    "set_return_value": 1,
                    "set_undefined_value": 1,
                    "update_character": 1,
                    "update_data": 1,
                    "update_memory_value": 1,
                    "update_param_value": 1,
                    "update_parameter": 2,
                    "update_parameter_value": 1,
                    "update_value": 2,
                    "update_value_and_jump": 1
                },
                "UNRECOVERED_JUMPTABLE": {
                    "function_pointer": 1,
                    "jump_table": 6
                },
                "param_1": {
                    "address": 5,
                    "base_address": 8,
                    "buffer": 1,
                    "character_address": 1,
                    "character_base_address": 1,
                    "destination_address": 1,
                    "memory_address": 9,
                    "pixel_address": 1,
                    "pixel_array": 1,
                    "register_address": 1,
                    "target_address": 2
                },
                "param_2": {
                    "byte_index": 1,
                    "character_index": 2,
                    "code_value": 1,
                    "color_index": 2,
                    "index": 11,
                    "offset": 1,
                    "param_value": 1,
                    "parameter_index": 1,
                    "value": 10,
                    "value_index": 1
                },
                "uVar1": {
                    "assigned_value": 1,
                    "byte_to_set": 1,
                    "byte_value": 3,
                    "character_value": 2,
                    "color_value": 2,
                    "control_value": 1,
                    "data": 1,
                    "default_value": 4,
                    "memory_value": 1,
                    "new_value": 3,
                    "parameter_value": 1,
                    "return_value": 1,
                    "selected_value": 1,
                    "updated_value": 4,
                    "value": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08008d30"
            ],
            "code": "\nvoid update_value_and_jump_08008d00(int memory_address,uint index)\n\n{\n  undefined default_value;\n  code *jump_table;\n  \n  if (index < 0x3c) {\n    default_value = (&DAT_0800a908)[index];\n  }\n  else {\n    default_value = 0xff;\n  }\n  *(undefined *)(memory_address + 0x12d) = default_value;\n                    /* WARNING: Could not recover jumptable at 0x08008d0c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)();\n  return;\n}\n\n",
            "current_name": "update_value_and_jump_08008d00",
            "entrypoint": "0x08008d00",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008d00": "update_value_and_jump_08008d00",
                "UNRECOVERED_JUMPTABLE": "jump_table",
                "param_1": "memory_address",
                "param_2": "index",
                "uVar1": "default_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008d18": {
            "additional_data": {
                "FUN_08008d18": {
                    "copy_to_buffer": 1,
                    "set_byte_at_offset": 2,
                    "set_byte_in_memory": 1,
                    "set_byte_value": 11,
                    "set_byte_value_at_offset": 2,
                    "set_default_value": 1,
                    "set_memory_value": 1,
                    "set_param_value": 1,
                    "set_threshold_value": 4,
                    "set_variable_value": 1,
                    "update_buffer_value": 1,
                    "update_param_value": 1,
                    "update_parameter": 1,
                    "update_parameter_value": 1,
                    "update_value_at_address": 1,
                    "update_value_in_buffer": 1
                },
                "param_1": {
                    "address": 7,
                    "base_address": 13,
                    "buffer": 1,
                    "buffer_address": 3,
                    "dst_address": 1,
                    "memory_address": 3,
                    "memory_offset": 1,
                    "target_address": 2
                },
                "param_2": {
                    "byte_index": 1,
                    "index": 23,
                    "input_value": 1,
                    "offset": 2,
                    "threshold_index": 2,
                    "value": 1,
                    "value_index": 1
                },
                "uVar1": {
                    "byte_value": 5,
                    "default_val": 1,
                    "new_value": 2,
                    "threshold_value": 3,
                    "updated_value": 2,
                    "value": 14
                }
            },
            "called": [],
            "calling": [
                "FUN_08008d30"
            ],
            "code": "\nvoid set_byte_value_at_offset_08008d18(int base_address,uint index)\n\n{\n  undefined value;\n  \n  if (index < 0x3c) {\n    value = (&DAT_0800a908)[index];\n  }\n  else {\n    value = 0xff;\n  }\n  *(undefined *)(base_address + 300) = value;\n  return;\n}\n\n",
            "current_name": "set_byte_value_at_offset_08008d18",
            "entrypoint": "0x08008d18",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008d18": "set_byte_value_at_offset_08008d18",
                "param_1": "base_address",
                "param_2": "index",
                "uVar1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008d30": {
            "additional_data": {
                "DAT_20000700": {
                    "data": 1
                },
                "FUN_0800734a": {
                    "get_param": 1,
                    "get_pin_id": 1,
                    "get_pin_value": 1,
                    "get_something": 1,
                    "init": 2,
                    "read_status": 1
                },
                "FUN_08008c20": {
                    "cleanup": 1,
                    "initialize": 2,
                    "reset": 1,
                    "reset_config": 1,
                    "set_tx": 2
                },
                "FUN_08008d00": {
                    "configure_pin": 2,
                    "configure_receive": 1,
                    "configure_rx": 1,
                    "set_rx": 2,
                    "setup_receive": 1
                },
                "FUN_08008d18": {
                    "configure_pin_mode": 1,
                    "configure_pin_with_param": 1,
                    "configure_receive": 1,
                    "configure_transmit": 1,
                    "configure_tx": 1,
                    "pinmap_pin": 2
                },
                "FUN_08008d30": {
                    "configure_device": 3,
                    "initialize": 1,
                    "initialize_communication": 9,
                    "initialize_device": 15,
                    "initialize_peripheral": 3
                },
                "PINMAP_PIN_1": {
                    "pin_index_value1": 1
                },
                "PINMAP_PIN_2": {
                    "pin_index_value2": 1
                },
                "init": {
                    "initialize": 7,
                    "initialize_device": 1
                },
                "param_1": {
                    "communication_data": 1,
                    "communication_info": 1,
                    "communication_params": 6,
                    "config": 2,
                    "device": 10,
                    "device_config": 4,
                    "device_data": 1,
                    "device_parameters": 1,
                    "device_params": 2,
                    "peripheral": 1,
                    "peripheral_config": 1,
                    "peripheral_data": 1
                },
                "param_2": {
                    "pin": 14,
                    "pin_config": 1,
                    "pin_id": 1,
                    "pin_index": 1,
                    "pin_number": 14
                },
                "param_3": {
                    "config_value": 1,
                    "param": 1,
                    "param1": 3,
                    "param3": 5,
                    "param3_input": 1,
                    "param_3": 1,
                    "param_a": 6,
                    "rx": 1,
                    "rx_buffer": 2,
                    "rx_config": 3,
                    "rx_data": 2,
                    "rx_param": 2,
                    "rx_pin_number": 1,
                    "value": 2
                },
                "param_4": {
                    "data": 1,
                    "option": 1,
                    "param2": 3,
                    "param4": 5,
                    "param4_input": 1,
                    "param_4": 1,
                    "param_b": 6,
                    "timeout": 1,
                    "tx": 1,
                    "tx_buffer": 2,
                    "tx_config": 3,
                    "tx_data": 2,
                    "tx_param": 2,
                    "tx_pin_number": 1,
                    "tx_value": 1
                },
                "pinmap_pin": {
                    "get_pin_id": 1,
                    "get_pin_map_pin": 1,
                    "get_pin_mapping": 3,
                    "get_pin_number": 1,
                    "map_pin": 1,
                    "resolve_pin": 1
                },
                "setRx": {
                    "configure_receive": 1,
                    "configure_receiving": 1,
                    "configure_rx": 3,
                    "set_receive": 2,
                    "set_receive_mode": 1
                },
                "setTx": {
                    "configure_transmit": 1,
                    "configure_transmitting": 1,
                    "configure_tx": 3,
                    "set_transmit": 2,
                    "set_transmit_mode": 1
                },
                "uVar1": {
                    "mapped_pin": 1,
                    "pin_value": 21,
                    "resolved_pin": 1
                }
            },
            "called": [
                "FUN_08008d00",
                "FUN_08008c20",
                "FUN_08008d18",
                "FUN_0800734a"
            ],
            "calling": [
                "FUN_08008d8c"
            ],
            "code": "\nundefined4 *\ninitialize_device_08008d30(undefined4 *device,undefined4 pin_number,undefined4 param_a,undefined4 param_b)\n\n{\n  undefined pin_value;\n  \n  device[1] = 0;\n  device[2] = 1000;\n  *device = &PTR_LAB_08008ba4_1_0800aab8;\n  if (device == (undefined4 *)&DAT_20000700) {\n    configure_rx(&DAT_20000700,0,param_a,&DAT_20000700,param_b);\n    configure_tx(&DAT_20000700,1);\n  }\n  else {\n    pin_value = get_pin_mapping(pin_number,&DAT_0800a81c);\n    *(undefined *)((int)device + 0x12d) = pin_value;\n    pin_value = get_pin_mapping(pin_number,&DAT_0800a864);\n    *(undefined *)(device + 0x4b) = pin_value;\n  }\n  initialize(device);\n  return device;\n}\n\n",
            "current_name": "initialize_device_08008d30",
            "entrypoint": "0x08008d30",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008d30": "initialize_device_08008d30",
                "init": "initialize",
                "param_1": "device",
                "param_2": "pin_number",
                "param_3": "param_a",
                "param_4": "param_b",
                "pinmap_pin": "get_pin_mapping",
                "setRx": "configure_rx",
                "setTx": "configure_tx",
                "uVar1": "pin_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008d8c": {
            "additional_data": {
                "FUN_08008d8c": {
                    "check_and_initialize_hardware_serial": 2,
                    "check_for_serial_connection": 1,
                    "initialize_hardware_serial": 12,
                    "initialize_hardware_serial_connection": 1,
                    "initialize_serial_communication": 11,
                    "initialize_serial_connection": 1,
                    "initialize_serial_port": 2
                },
                "HardwareSerial": {
                    "configure_serial": 1,
                    "configure_serial_port": 1,
                    "create_hardware_serial_instance": 1,
                    "initialize_hardware_serial": 2,
                    "initialize_serial_connection": 1
                },
                "param_1": {
                    "check_result": 1,
                    "condition": 1,
                    "condition_flag": 1,
                    "config_status": 1,
                    "device_enabled": 1,
                    "error_code": 1,
                    "flag": 5,
                    "function_code": 1,
                    "is_param1_one": 1,
                    "mode": 3,
                    "option": 2,
                    "status": 12,
                    "value1": 1
                },
                "param_2": {
                    "code": 1,
                    "config_value": 2,
                    "data_value": 1,
                    "device_address": 1,
                    "error_code": 2,
                    "flag": 6,
                    "input_value": 1,
                    "param2_value": 1,
                    "serial_port": 2,
                    "value": 13,
                    "value2": 1
                },
                "param_3": {
                    "arg1": 2,
                    "argument1": 1,
                    "baud_rate": 1,
                    "config": 1,
                    "config1": 1,
                    "config_param1": 2,
                    "data1": 1,
                    "data_1": 1,
                    "option1": 1,
                    "param1": 7,
                    "param1_value": 2,
                    "param3": 2,
                    "param3_value": 1,
                    "param_a": 1,
                    "parameter1": 2,
                    "serial_port": 1,
                    "serial_port_address": 1,
                    "val1": 1,
                    "value3": 1
                },
                "param_4": {
                    "arg2": 2,
                    "argument2": 1,
                    "baud_rate": 1,
                    "config2": 1,
                    "config_param2": 2,
                    "data2": 1,
                    "data_2": 1,
                    "data_bit_rate": 1,
                    "option2": 1,
                    "param2": 7,
                    "param2_value": 2,
                    "param4": 2,
                    "param4_value": 1,
                    "param_b": 1,
                    "parameter2": 2,
                    "parity_bit": 1,
                    "settings": 1,
                    "val2": 1,
                    "value4": 1
                }
            },
            "called": [
                "FUN_08008d30"
            ],
            "calling": [],
            "code": "\nvoid check_and_initialize_hardware_serial_08008d8c(int status,int value,undefined4 param1,undefined4 param2)\n\n{\n  if (status != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    initialize_hardware_serial(&DAT_20000700,0x40004400,param1,0xffff,param2);\n  }\n  return;\n}\n\n",
            "current_name": "check_and_initialize_hardware_serial_08008d8c",
            "entrypoint": "0x08008d8c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008d8c": "check_and_initialize_hardware_serial_08008d8c",
                "HardwareSerial": "initialize_hardware_serial",
                "param_1": "status",
                "param_2": "value",
                "param_3": "param1",
                "param_4": "param2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008df8": {
            "additional_data": {
                "FUN_08008df8": {
                    "initialize_buffer": 1,
                    "initialize_data": 20,
                    "initialize_param": 1,
                    "initialize_parameters": 2,
                    "initialize_params": 3,
                    "set_data": 1,
                    "set_function_data": 1,
                    "set_parameters": 2
                },
                "param_1": {
                    "buffer_ptr": 1,
                    "data_pointer": 14,
                    "function_data": 1,
                    "output": 2,
                    "output_array": 2,
                    "output_data": 4,
                    "output_pointer": 2,
                    "output_ptr": 2,
                    "param_pointer": 1,
                    "parameter1": 1,
                    "result_pointer": 1
                },
                "param_2": {
                    "byte1": 1,
                    "data1": 1,
                    "data_1": 1,
                    "first_param": 1,
                    "input1": 2,
                    "param_value1": 1,
                    "parameter2": 1,
                    "value1": 22,
                    "value_1": 1
                },
                "param_3": {
                    "byte2": 1,
                    "data2": 1,
                    "data_2": 1,
                    "input2": 2,
                    "param_value2": 1,
                    "parameter3": 1,
                    "second_param": 1,
                    "value2": 22,
                    "value_2": 1
                },
                "param_4": {
                    "byte3": 1,
                    "data3": 1,
                    "data_3": 1,
                    "input3": 2,
                    "param_value3": 1,
                    "parameter4": 1,
                    "third_param": 1,
                    "value3": 22,
                    "value_3": 1
                },
                "param_5": {
                    "byte4": 1,
                    "data4": 1,
                    "data_4": 1,
                    "fourth_param": 1,
                    "input4": 2,
                    "param_value4": 1,
                    "parameter5": 1,
                    "value4": 22,
                    "value_4": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08008e14"
            ],
            "code": "\nvoid initialize_data_08008df8(undefined4 *data_pointer,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *data_pointer = &DAT_0800ab0c;\n  *(undefined *)(data_pointer + 1) = value1;\n  *(undefined *)((int)data_pointer + 5) = value2;\n  *(undefined *)((int)data_pointer + 6) = value3;\n  *(undefined *)((int)data_pointer + 7) = value4;\n  return;\n}\n\n",
            "current_name": "initialize_data_08008df8",
            "entrypoint": "0x08008df8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008df8": "initialize_data_08008df8",
                "param_1": "data_pointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008e14": {
            "additional_data": {
                "DAT_20000844": {
                    "ip_address": 2
                },
                "FUN_08008e14": {
                    "configure_ip": 1,
                    "initialize_ip": 1,
                    "initialize_ip_address": 27,
                    "set_ip_address": 2
                },
                "IPAddress": {
                    "set_ip_address": 4
                },
                "param_1": {
                    "comparison_value": 1,
                    "condition1": 4,
                    "config_status": 1,
                    "device": 1,
                    "flag": 4,
                    "flag1": 3,
                    "input_flag": 1,
                    "input_one": 1,
                    "is_param1_one": 1,
                    "param1": 2,
                    "state": 1,
                    "status": 6,
                    "status_flag": 2,
                    "value1": 3
                },
                "param_2": {
                    "condition2": 4,
                    "config_value": 1,
                    "data": 1,
                    "flag2": 3,
                    "flag_value": 1,
                    "input_two": 1,
                    "input_value": 2,
                    "is_param2_ffff": 1,
                    "magic_number": 1,
                    "param2": 2,
                    "status": 1,
                    "value": 10,
                    "value2": 3
                }
            },
            "called": [
                "FUN_08008df8"
            ],
            "calling": [],
            "code": "\nvoid initialize_ip_address_08008e14(int status,int value)\n\n{\n  if ((status == 1) && (value == 0xffff)) {\n    set_ip_address(&DAT_20000844,0,0,0,0);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_ip_address_08008e14",
            "entrypoint": "0x08008e14",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008e14": "initialize_ip_address_08008e14",
                "IPAddress": "set_ip_address",
                "param_1": "status",
                "param_2": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008ef4": {
            "additional_data": {
                "FUN_08008ef4": {
                    "calculate_adjusted_value": 1,
                    "calculate_difference": 1,
                    "calculate_interpolated_value": 2,
                    "calculate_interpolation": 4,
                    "calculate_interpolation_value": 1,
                    "calculate_inverse_proportion": 1,
                    "calculate_linear_interpolation": 5,
                    "calculate_new_value": 7,
                    "calculate_offset": 1,
                    "calculate_range": 1,
                    "calculate_result": 3,
                    "calculate_value": 2,
                    "calculate_weighted_average": 2
                },
                "new_variable_name_1": {
                    "temp": 1
                },
                "new_variable_name_2": {
                    "range_difference": 1
                },
                "param_1": {
                    "base_value": 1,
                    "first_value": 4,
                    "initial_value": 2,
                    "num1": 1,
                    "numerator_start": 1,
                    "start_value": 12,
                    "start_value_1": 3,
                    "value1": 3,
                    "value_1": 1,
                    "x1": 3
                },
                "param_2": {
                    "current_value": 3,
                    "denominator_start": 1,
                    "end_value": 4,
                    "final_value": 1,
                    "initial_offset": 1,
                    "mid_value": 1,
                    "num2": 1,
                    "previous_value": 1,
                    "second_value": 4,
                    "start_point": 1,
                    "start_position": 2,
                    "start_value": 1,
                    "start_value_2": 3,
                    "value2": 3,
                    "value_2": 1,
                    "x2": 3
                },
                "param_3": {
                    "denominator_end": 1,
                    "divider_value": 1,
                    "end_offset": 1,
                    "end_point": 1,
                    "end_position": 2,
                    "end_value": 8,
                    "end_value_1": 1,
                    "end_value_2": 1,
                    "final_offset": 1,
                    "mid_value": 1,
                    "middle_value": 1,
                    "num3": 1,
                    "third_value": 4,
                    "value3": 3,
                    "value_3": 1,
                    "x3": 2,
                    "y2": 1
                },
                "param_4": {
                    "end_value_2": 1,
                    "fourth_value": 1,
                    "initial_value": 1,
                    "lower_bound": 1,
                    "min_range": 1,
                    "min_value": 1,
                    "minimum_value": 1,
                    "num4": 1,
                    "numerator_end": 1,
                    "offset_value": 1,
                    "start_offset": 5,
                    "start_range": 4,
                    "start_result": 2,
                    "start_value": 4,
                    "start_value_output": 1,
                    "value4": 2,
                    "y1": 2,
                    "y2": 1
                },
                "param_5": {
                    "current_value": 1,
                    "end_offset": 4,
                    "end_range": 4,
                    "end_result": 2,
                    "end_value": 3,
                    "end_value_output": 1,
                    "fifth_value": 1,
                    "final_value": 1,
                    "max_range": 1,
                    "max_value": 1,
                    "maximum_value": 1,
                    "num5": 1,
                    "result_offset": 1,
                    "target_offset": 1,
                    "target_value": 1,
                    "upper_bound": 1,
                    "value5": 2,
                    "weight": 1,
                    "x": 1,
                    "y2": 1,
                    "y3": 1
                },
                "result": {
                    "final_result": 1,
                    "y": 1
                },
                "result_offset": {
                    "final_offset": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080026b0"
            ],
            "code": "\nint calculate_adjusted_value_08008ef4(int start_value,int second_value,int end_value,int start_offset,int end_offset)\n\n{\n  return (uint)((end_offset - start_offset) * (start_value - second_value)) / (uint)(end_value - second_value) + start_offset;\n}\n\n",
            "current_name": "calculate_adjusted_value_08008ef4",
            "entrypoint": "0x08008ef4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008ef4": "calculate_adjusted_value_08008ef4",
                "param_1": "start_value",
                "param_2": "second_value",
                "param_3": "end_value",
                "param_4": "start_offset",
                "param_5": "end_offset"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008f0c": {
            "called": [],
            "calling": [
                "FUN_08008f1c"
            ],
            "code": "\nvoid FUNC_08008f0c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08008f0c",
            "entrypoint": "0x08008f0c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08008f0c": "FUNC_08008f0c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08008f0e": {
            "additional_data": {
                "FUN_08008f0e": {
                    "configure_hardware": 4,
                    "initialize_hardware": 11,
                    "initialize_hardware_system": 1,
                    "initialize_peripherals": 1,
                    "initialize_system": 13,
                    "initialize_system_configuration": 1
                },
                "initialize_hardware_configuration_080036a2": {
                    "configure_hardware": 5,
                    "hardware_configuration": 1,
                    "initialize_configuration": 1,
                    "initialize_hardware_configuration": 20
                },
                "input_value": {
                    "register_value": 5,
                    "value": 10
                },
                "update_register_value_08003f0c": {
                    "update_register_value": 25
                }
            },
            "called": [
                "FUN_08003f0c",
                "FUN_080036a2"
            ],
            "calling": [
                "FUN_08009148"
            ],
            "code": "\nvoid initialize_hardware_system_08008f0e(void)\n\n{\n  HAL_NVIC_SetPriorityGrouping(3);\n  initialize_hardware_configuration();\n  return;\n}\n\n",
            "current_name": "initialize_hardware_system_08008f0e",
            "entrypoint": "0x08008f0e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008f0e": "initialize_hardware_system_08008f0e",
                "initialize_hardware_configuration_080036a2": "initialize_hardware_configuration"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008f1c": {
            "additional_data": {
                "FUNC_08001b48": {
                    "execute_loop": 1,
                    "loop": 2
                },
                "FUNC_08008bf4": {
                    "init_variant": 4,
                    "loop": 22,
                    "main_loop": 2,
                    "perform_initial_setup": 1,
                    "perform_loop": 1,
                    "setup_program": 1
                },
                "FUNC_08008f0c": {
                    "init_variant": 23,
                    "initialize_variant": 4,
                    "setup": 2
                },
                "FUN_08001b48": {
                    "execute_serial_event": 1,
                    "execute_serial_events": 1,
                    "handle_serial_event": 5,
                    "handle_serial_events": 1,
                    "loop": 1,
                    "process_serial_events": 1,
                    "run_serial_event": 6,
                    "run_serial_events": 1,
                    "serial_event": 1,
                    "serial_event_run": 9,
                    "serial_event_run_loop": 1
                },
                "FUN_080022f8": {
                    "execute_serial_event_run": 1,
                    "loop": 1,
                    "reverse_something": 1,
                    "run_serial_event": 1,
                    "set_up": 1,
                    "setup": 24,
                    "setup_components": 1,
                    "setup_program": 1
                },
                "FUN_0800445c": {
                    "run_serial_event": 1
                },
                "FUN_08008f1c": {
                    "application_loop": 1,
                    "execute_main_loop": 1,
                    "execute_program": 1,
                    "initialize_and_loop": 1,
                    "initialize_and_run": 7,
                    "initialize_and_run_program": 1,
                    "main_loop": 5,
                    "program_loop": 1,
                    "program_main_loop": 1,
                    "run_main_loop": 4,
                    "run_main_program": 1,
                    "run_program": 5,
                    "start_main_loop": 1,
                    "start_program": 1
                },
                "initVariant": {
                    "initialize_variant": 1
                },
                "loop": {
                    "run_loop": 1
                },
                "serialEventRun": {
                    "execute_serial_events": 1,
                    "run_serial_event": 1
                },
                "setup": {
                    "perform_initial_setup": 1
                }
            },
            "called": [
                "FUN_08008f0c",
                "FUN_080022f8",
                "FUN_08008bf4",
                "FUN_08001b48"
            ],
            "calling": [
                "FUN_08003658"
            ],
            "code": "\nvoid initialize_and_run_program_08008f1c(void)\n\n{\n  initialize_variant();\n  perform_initial_setup();\n  do {\n    run_loop();\n    execute_serial_events();\n  } while( true );\n}\n\n",
            "current_name": "initialize_and_run_program_08008f1c",
            "entrypoint": "0x08008f1c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008f1c": "initialize_and_run_program_08008f1c",
                "initVariant": "initialize_variant",
                "loop": "run_loop",
                "serialEventRun": "execute_serial_events",
                "setup": "perform_initial_setup"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008f3c": {
            "additional_data": {
                "FUN_08008f3c": {
                    "count_bits": 4,
                    "count_bits_set": 4,
                    "count_ones": 1,
                    "count_set_bits": 20,
                    "find_num_shifts": 1,
                    "get_binary_representation": 1
                },
                "cVar1": {
                    "binary_count": 1,
                    "bit_count": 19,
                    "bits_count": 2,
                    "count": 5,
                    "num_bits_set": 1,
                    "ones_count": 1,
                    "set_bits_count": 1,
                    "shift_count": 1
                },
                "param_1": {
                    "input": 5,
                    "input_num": 1,
                    "input_number": 3,
                    "num": 6,
                    "number": 16
                }
            },
            "called": [],
            "calling": [
                "FUN_08009094"
            ],
            "code": "\nchar count_bits_set_08008f3c(uint number)\n\n{\n  char bit_count;\n  \n  bit_count = '\\0';\n  for (; number != 1; number = number >> 1) {\n    bit_count = bit_count + '\\x01';\n  }\n  return bit_count;\n}\n\n",
            "current_name": "count_bits_set_08008f3c",
            "entrypoint": "0x08008f3c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008f3c": "count_bits_set_08008f3c",
                "cVar1": "bit_count",
                "param_1": "number"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008f78": {
            "additional_data": {
                "FUN_08008f78": {
                    "configure_system_settings": 1,
                    "initialize_config_data": 1,
                    "initialize_data": 21,
                    "initialize_game_data": 1,
                    "initialize_memory": 1,
                    "initialize_parameters": 4,
                    "initialize_settings": 1,
                    "set_configuration": 1
                },
                "FUN_080090c2": {
                    "handle_sub_function": 1,
                    "initialize_variables": 1,
                    "process_data": 1,
                    "reverse_data": 1,
                    "set_values": 1,
                    "sub_function": 1
                },
                "LAB_08008f50_1": {
                    "cleanup_function": 3,
                    "exit_function": 3,
                    "exit_handler": 1
                },
                "__aeabi_atexit": {
                    "register_cleanup_function": 4,
                    "register_exit_function": 6,
                    "register_exit_handler": 3
                },
                "param_1": {
                    "arg1": 1,
                    "check_condition": 1,
                    "check_value": 2,
                    "condition": 6,
                    "config_param": 1,
                    "first_param": 1,
                    "flag": 9,
                    "input_flag": 2,
                    "input_param": 1,
                    "input_param1": 1,
                    "input_parameter": 1,
                    "option": 1,
                    "status": 2,
                    "value1": 2
                },
                "param_2": {
                    "arg2": 1,
                    "compare_value": 1,
                    "condition_value": 1,
                    "flag": 1,
                    "flag_parameter": 1,
                    "input_param2": 1,
                    "input_value": 2,
                    "param_status": 1,
                    "param_value": 2,
                    "second_param": 1,
                    "value": 17,
                    "value2": 2
                },
                "param_3": {
                    "param3": 2,
                    "param_3": 1,
                    "unused": 2,
                    "unused1": 3,
                    "unused_1": 1,
                    "unused_param": 4,
                    "unused_param1": 10,
                    "unused_param3": 2,
                    "unused_param_1": 1,
                    "unused_parameter": 1
                },
                "param_4": {
                    "arg4": 1,
                    "callback": 3,
                    "callback_param": 1,
                    "exit_func": 1,
                    "exit_function": 2,
                    "exit_function_parameter": 1,
                    "param4": 2,
                    "param_4": 1,
                    "unused2": 3,
                    "unused_2": 1,
                    "unused_param2": 11,
                    "unused_param4": 2,
                    "unused_param_2": 1
                },
                "value1": {
                    "input_value": 1
                },
                "value2": {
                    "checking_value": 1
                }
            },
            "called": [
                "FUN_080090c2"
            ],
            "calling": [],
            "code": "\nvoid initialize_config_data_08008f78(int flag,int value,undefined4 unused_param1,undefined4 unused_param2)\n\n{\n  if (flag != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    DAT_2000084c = 6;\n    DAT_20000858 = 0;\n    DAT_20000860 = 7;\n    DAT_2000086c = 0;\n    DAT_20000874 = 8;\n    DAT_20000880 = 0;\n    DAT_20000888 = 9;\n    DAT_20000894 = 0;\n    DAT_2000089c = 10;\n    DAT_200008a8 = 0;\n    DAT_200008b0 = 0x17;\n    DAT_200008bc = 0;\n    DAT_200008c4 = 0x17;\n    DAT_200008d0 = 0;\n    DAT_200008d8 = 0x17;\n    DAT_200008e4 = 0;\n    DAT_200008ec = 0x17;\n    DAT_200008f8 = 0;\n    DAT_20000900 = 0x17;\n    DAT_2000090c = 0;\n    DAT_20000914 = 0x28;\n    DAT_20000920 = 0;\n    DAT_20000928 = 0x28;\n    DAT_20000934 = 0;\n    DAT_2000093c = 0x28;\n    DAT_20000948 = 0;\n    DAT_20000950 = 0x28;\n    DAT_2000095c = 0;\n    DAT_20000964 = 0x28;\n    DAT_20000970 = 0;\n    DAT_20000978 = 0x28;\n    DAT_20000984 = 0;\n    register_exit_function(0,&cleanup_function,&DAT_20000000,&DAT_2000084c,unused_param2);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_config_data_08008f78",
            "entrypoint": "0x08008f78",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008f78": "initialize_config_data_08008f78",
                "LAB_08008f50_1": "cleanup_function",
                "__aeabi_atexit": "register_exit_function",
                "param_1": "flag",
                "param_2": "value",
                "param_3": "unused_param1",
                "param_4": "unused_param2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009084": {
            "additional_data": {
                "FUN_08009084": {
                    "call_function_or_throw": 1,
                    "check_and_call_function": 3,
                    "check_and_execute_function": 5,
                    "check_and_invoke_function": 1,
                    "execute_function": 4,
                    "execute_function_or_throw": 3,
                    "execute_function_or_throw_error": 1,
                    "execute_or_throw_exception_without_pin": 1,
                    "process_data": 2,
                    "process_function": 9,
                    "process_parameter": 1
                },
                "FUN_0800a18c": {
                    "additional_processing": 1,
                    "do_something": 3,
                    "execute_sub_function": 3,
                    "perform_additional_action": 1,
                    "perform_task": 1,
                    "reset_function": 1,
                    "some_function": 1,
                    "sub_function": 4
                },
                "get_pin_id": {
                    "get_pin_id": 1
                },
                "iVar1": {
                    "pin_id": 31
                },
                "param_1": {
                    "data": 1,
                    "function_address": 2,
                    "function_data": 1,
                    "function_handle": 1,
                    "function_pointer": 4,
                    "input": 8,
                    "input_param": 10,
                    "input_parameter": 1,
                    "input_value": 1,
                    "param": 2
                }
            },
            "called": [
                "FUN_0800a18c"
            ],
            "calling": [
                "FUN_08009094"
            ],
            "code": "\nvoid check_and_invoke_function_08009084(int input_param)\n\n{\n  int pin_id;\n  \n  if (*(int *)(input_param + 8) != 0) {\n    (**(code **)(input_param + 0xc))();\n    return;\n  }\n  __throw_bad_function_call();\n  pin_id = get_pin_id();\n  if ((&DAT_20000858)[pin_id * 5] != 0) {\n    check_and_invoke_function_08009084();\n  }\n  return;\n}\n\n",
            "current_name": "check_and_invoke_function_08009084",
            "entrypoint": "0x08009084",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009084": "check_and_invoke_function_08009084",
                "iVar1": "pin_id",
                "param_1": "input_param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009094": {
            "additional_data": {
                "DAT_20000858": {
                    "pin_status_array": 2
                },
                "FUN_08008f3c": {
                    "check_data_validity": 1,
                    "check_if_pin_valid": 1,
                    "check_pin_validity": 1,
                    "check_value": 1,
                    "execute_operator": 1,
                    "get_element_from_data": 1,
                    "get_pin_value": 2,
                    "is_valid_pin": 1,
                    "operator": 1,
                    "perform_operator": 1,
                    "process_data": 1,
                    "process_parameter": 1,
                    "process_pin": 1,
                    "reverse_byte_order": 1,
                    "reverse_number": 1,
                    "validate_pin": 2
                },
                "FUN_08009084": {
                    "calculate_offset": 1,
                    "check_if_pin_zero": 1,
                    "check_pin_exists": 1,
                    "get_pin_id": 5,
                    "handle_gpio": 1,
                    "initialize_flag": 1,
                    "initialize_variable": 1,
                    "perform_action": 1,
                    "print_error_message": 1,
                    "print_pin_id": 1,
                    "set_pin_id": 2,
                    "update_pin_data": 1,
                    "validate_pin_id": 1
                },
                "FUN_08009094": {
                    "check_and_call_operator": 10,
                    "check_and_execute": 1,
                    "check_and_execute_operator": 9,
                    "check_and_execute_operators": 1,
                    "check_and_invoke_operator": 3,
                    "check_and_operate": 2,
                    "check_and_perform_operation": 2,
                    "check_pin_id_and_call_operator": 1,
                    "execute_if_pin_valid": 1,
                    "execute_if_valid_pin": 1
                },
                "char": {
                    "uint8_t": 1
                },
                "get_pin_id": {
                    "get_current_pin_id": 2,
                    "get_pin_id": 11,
                    "retrieve_pin_id": 7
                },
                "iVar1": {
                    "index": 1,
                    "pin_id": 20
                },
                "param_1": {
                    "data_value": 1,
                    "input_value": 1,
                    "number": 1,
                    "operator_result": 1,
                    "pin_id": 4,
                    "pin_id_check": 1,
                    "pin_to_validate": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_08009084",
                "FUN_08008f3c"
            ],
            "calling": [
                "FUN_080042f0"
            ],
            "code": "\nvoid check_pin_id_and_call_operator_08009094(void)\n\n{\n  int pin_id;\n  \n  pin_id = get_pin_id();\n  if ((&DAT_20000858)[pin_id * 5] != 0) {\n    operator()();\n  }\n  return;\n}\n\n",
            "current_name": "check_pin_id_and_call_operator_08009094",
            "entrypoint": "0x08009094",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009094": "check_pin_id_and_call_operator_08009094",
                "iVar1": "pin_id"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080090c2": {
            "additional_data": {
                "FUN_080090c2": {
                    "register_at_exit_handler": 4,
                    "register_at_exit_handlers": 1,
                    "register_atexit_handler": 1,
                    "register_cleanup_function": 6,
                    "register_cleanup_handler": 1,
                    "register_cxa_atexit": 1,
                    "register_destructor": 2,
                    "register_exit_function": 4,
                    "register_exit_handler": 11
                },
                "FUN_08009108": {
                    "calculate_checksum": 6,
                    "calculate_result": 2,
                    "calculate_value": 1,
                    "compute_value": 1,
                    "execute_cleanup": 1,
                    "execute_task": 1,
                    "get_max_unsigned": 1,
                    "perform_calculation": 2,
                    "perform_operation": 1,
                    "perform_some_operation": 1,
                    "perform_task": 1,
                    "process_data": 4,
                    "process_param": 1,
                    "reverse_and_modify": 1,
                    "reverse_number": 1
                },
                "__cxa_atexit": {
                    "register_at_exit_function": 1
                },
                "_param_1": {
                    "input_value": 1
                },
                "_param_2": {
                    "input_size": 1
                },
                "param_1": {
                    "arg1": 1,
                    "argument1": 1,
                    "argument_a": 1,
                    "cleanup_function": 1,
                    "data": 1,
                    "destructor_func": 1,
                    "exit_function": 1,
                    "exit_handler_function": 1,
                    "func_ptr": 1,
                    "function_pointer": 1,
                    "handler1": 1,
                    "handler_func": 1,
                    "handler_function": 4,
                    "input": 3,
                    "input_data": 2,
                    "input_value": 3,
                    "param1": 2,
                    "param_1": 2,
                    "task_parameter": 2
                },
                "param_2": {
                    "arg2": 1,
                    "argument2": 1,
                    "argument_b": 1,
                    "bit_mask": 1,
                    "bitmask": 1,
                    "checksum_size": 1,
                    "cleanup_handler": 1,
                    "cleanup_object": 1,
                    "exit_handler_param": 1,
                    "handler2": 1,
                    "handler_data": 1,
                    "handler_object": 2,
                    "length": 3,
                    "obj_ptr": 1,
                    "option": 2,
                    "param2": 2,
                    "param_2": 2,
                    "shift_amount": 1,
                    "task_length": 1,
                    "task_value": 1,
                    "user_data": 3,
                    "value_parameter": 1
                }
            },
            "called": [
                "FUN_08009108"
            ],
            "calling": [
                "FUN_08008f78"
            ],
            "code": "\nvoid register_at_exit_handler_080090c2(undefined4 handler_function,undefined4 user_data)\n\n{\n  register_at_exit_function(user_data,handler_function);\n  return;\n}\n\n",
            "current_name": "register_at_exit_handler_080090c2",
            "entrypoint": "0x080090c2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080090c2": "register_at_exit_handler_080090c2",
                "__cxa_atexit": "register_at_exit_function",
                "param_1": "handler_function",
                "param_2": "user_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080090cc": {
            "additional_data": {
                "FUN_080090cc": {
                    "assertion_failed": 1,
                    "format_assertion_error": 1,
                    "format_error_message": 1,
                    "print_assert_error": 1,
                    "print_assertion_error": 7,
                    "print_assertion_failed": 5,
                    "print_assertion_failed_message": 6,
                    "print_assertion_failed_msg": 1,
                    "print_assertion_failure": 6,
                    "print_assertion_message": 1,
                    "print_file_line_assertion": 1
                },
                "abort": {
                    "abort_execution": 1
                },
                "fiprintf": {
                    "formatted_print": 1
                },
                "param_1": {
                    "file": 12,
                    "file_name": 17,
                    "filename": 2
                },
                "param_2": {
                    "line": 9,
                    "line_num": 1,
                    "line_number": 21
                },
                "param_3": {
                    "assertion": 9,
                    "assertion_condition": 1,
                    "assertion_expression": 1,
                    "assertion_message": 2,
                    "condition": 2,
                    "function": 1,
                    "function_name": 11,
                    "message": 4
                },
                "param_4": {
                    "assertion": 5,
                    "assertion_message": 5,
                    "assertion_msg": 2,
                    "function": 10,
                    "function_name": 8,
                    "message": 1
                },
                "pcVar2": {
                    "additional_info": 10,
                    "additional_message": 5,
                    "additional_msg": 1,
                    "additional_text": 1,
                    "comma_string": 1,
                    "delimiter": 1,
                    "extra_info": 3,
                    "extra_message": 2,
                    "function_name": 1,
                    "function_string": 1,
                    "message": 1,
                    "message_prefix": 1,
                    "prefix": 1,
                    "separator": 1,
                    "suffix": 1
                },
                "uVar1": {
                    "buffer": 1,
                    "file": 1,
                    "file_descriptor": 7,
                    "file_handle": 1,
                    "file_out": 1,
                    "file_output_stream": 1,
                    "file_pointer": 2,
                    "file_ptr": 3,
                    "file_stream": 1,
                    "output_file": 6,
                    "output_stream": 5,
                    "stream": 2
                },
                "uVar3": {
                    "abort_result": 17,
                    "abort_ret_val": 1,
                    "abort_return_value": 1,
                    "result": 10,
                    "return_value": 2
                },
                "uVar4": {
                    "additional_arguments": 1,
                    "arg4": 1,
                    "assertion2": 1,
                    "assertion_copy": 2,
                    "assertion_detail": 1,
                    "assertion_details": 1,
                    "assertion_expression_copy": 1,
                    "assertion_message2": 1,
                    "assertion_message_2": 1,
                    "assertion_message_copy": 1,
                    "assertion_message_ptr": 1,
                    "assertion_msg_2": 1,
                    "assertion_msg_pointer": 1,
                    "assertion_ptr": 1,
                    "extra_info": 1,
                    "extra_info_length": 1,
                    "formatted_assertion": 1,
                    "function_arg": 1,
                    "function_argument": 1,
                    "function_arguments": 1,
                    "function_descriptor": 1,
                    "function_info": 1,
                    "function_name": 1,
                    "function_parameter": 1,
                    "function_ptr": 1,
                    "message_suffix": 1,
                    "output_bytes": 1,
                    "param_4": 1,
                    "suffix": 1,
                    "temp": 1
                }
            },
            "called": [
                "FUN_08009b5c",
                "FUN_08009124"
            ],
            "calling": [
                "FUN_08008c44"
            ],
            "code": "\nvoid print_assertion_failed_message_080090cc(undefined4 file_name,undefined4 line_number,char *function_name,undefined4 function)\n\n{\n  undefined4 file_descriptor;\n  char *additional_info;\n  undefined8 abort_result;\n  undefined4 assertion_copy;\n  \n  file_descriptor = *(undefined4 *)(DAT_20000090 + 0xc);\n  assertion_copy = function;\n  if (function_name == (char *)0x0) goto LAB_080090f0;\n  additional_info = \", function: \";\n  do {\n    formatted_print(file_descriptor,\"assertion \\\"%s\\\" failed: file \\\"%s\\\", line %d%s%s\\n\",function,file_name,line_number,\n             additional_info,function_name,assertion_copy);\n    abort_result = abort_execution();\n    line_number = (undefined4)((ulonglong)abort_result >> 0x20);\n    file_descriptor = (undefined4)abort_result;\nLAB_080090f0:\n    function_name = \"\";\n    additional_info = function_name;\n  } while( true );\n}\n\n",
            "current_name": "print_assertion_failed_message_080090cc",
            "entrypoint": "0x080090cc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080090cc": "print_assertion_failed_message_080090cc",
                "abort": "abort_execution",
                "fiprintf": "formatted_print",
                "param_1": "file_name",
                "param_2": "line_number",
                "param_3": "function_name",
                "param_4": "function",
                "pcVar2": "additional_info",
                "uVar1": "file_descriptor",
                "uVar3": "abort_result",
                "uVar4": "assertion_copy"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009108": {
            "additional_data": {
                "DAT_": {
                    "new_variable_name2": 1
                },
                "FUN_08009108": {
                    "convert_to_long_long": 1,
                    "convert_to_unsigned_long_long": 1,
                    "left_shift64bits": 1,
                    "left_shift_by32_bits": 2,
                    "left_shift_to_long_long": 1,
                    "left_shift_uint64": 3,
                    "left_shift_with_zero_fill": 1,
                    "shift_left64_bit": 1,
                    "shift_left64_bits": 1,
                    "shift_left_by32": 3,
                    "shift_left_by32_bits": 3,
                    "shift_left_long": 1,
                    "shift_left_param_to_long_long": 1,
                    "shift_left_uint64": 1,
                    "shift_left_with_zero_fill": 1,
                    "shift_param_left64": 1,
                    "shift_param_left_by32": 1,
                    "shift_param_to_long_long": 2,
                    "shift_parameter_to64_bits": 1,
                    "shift_parameter_to_long_long": 1,
                    "shift_u_int64_left": 1,
                    "shift_unsigned_long_long": 1,
                    "shift_value_left_by32_bits": 1
                },
                "PTR_": {
                    "new_variable_name1": 1
                },
                "param_1": {
                    "flags": 6,
                    "input": 2,
                    "input_code": 1,
                    "input_flag": 1,
                    "input_param1": 1,
                    "input_value": 3,
                    "new_param1": 1,
                    "param": 2,
                    "param1": 5,
                    "param_1": 2,
                    "size": 1,
                    "start_value": 1,
                    "undefined": 1,
                    "unknown_param": 1,
                    "value": 2,
                    "value_to_shift": 1
                },
                "param_2": {
                    "bits_to_shift": 1,
                    "input": 1,
                    "input_number": 1,
                    "input_param2": 1,
                    "input_value": 2,
                    "num_bits": 1,
                    "param2": 4,
                    "shift_amount": 4,
                    "shift_value": 2,
                    "value": 10,
                    "value_to_shift": 4
                },
                "param_3": {
                    "new_param": 1,
                    "new_parameter_name1": 1
                },
                "param_3_2": {
                    "new_param2": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080090c2"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08009110) */\n\nlonglong shift_value_left_by32_bits_08009108(undefined4 flags,uint value)\n\n{\n  return (ulonglong)value << 0x20;\n}\n\n",
            "current_name": "shift_value_left_by32_bits_08009108",
            "entrypoint": "0x08009108",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009108": "shift_value_left_by32_bits_08009108",
                "param_1": "flags",
                "param_2": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009124": {
            "additional_data": {
                "FUN_08009124": {
                    "print_arguments": 1,
                    "print_data": 3,
                    "print_formatted_data": 2,
                    "print_formatted_message": 1,
                    "print_message": 1,
                    "print_param_values": 1,
                    "print_stack_and_params": 1,
                    "print_stack_elements": 1,
                    "print_stack_info": 1,
                    "print_stack_values": 12,
                    "print_values": 2,
                    "print_variable_info": 1,
                    "print_with_context": 1,
                    "print_with_stack": 1,
                    "print_with_stack_params": 1,
                    "print_with_stack_values": 1
                },
                "FUN_0800937c": {
                    "process_data": 2,
                    "reverse_bytes": 1
                },
                "_vfiprintf_r": {
                    "custom_printf": 1,
                    "formatted_print": 1
                },
                "param_1": {
                    "data_format": 1,
                    "format_specifier": 1,
                    "format_string": 27,
                    "message": 2
                },
                "param_2": {
                    "arg1": 16,
                    "arg_1": 2,
                    "arg_ptr": 1,
                    "data_length": 1,
                    "file_descriptor": 1,
                    "file_stream": 1,
                    "format": 1,
                    "format_args": 1,
                    "format_string": 1,
                    "param2": 2,
                    "param_2": 1,
                    "param_ptr": 1,
                    "parameter1": 1,
                    "value1": 1
                },
                "param_3": {
                    "arg2": 10,
                    "arg_2": 2,
                    "int_parameter": 1,
                    "param_1_updated": 1,
                    "param_3": 1,
                    "stack_arg_1": 1,
                    "stack_data1": 1,
                    "stack_param1": 1,
                    "stack_val1": 3,
                    "stack_value1": 4,
                    "stack_value_1": 1,
                    "value1": 1,
                    "value2": 1,
                    "value_1": 2,
                    "value_ptr_1": 1
                },
                "param_4": {
                    "arg3": 10,
                    "arg_3": 2,
                    "output_parameter": 1,
                    "param_2_updated": 1,
                    "param_4": 1,
                    "stack_arg_2": 1,
                    "stack_data2": 1,
                    "stack_param2": 1,
                    "stack_val2": 3,
                    "stack_value2": 4,
                    "stack_value_2": 1,
                    "value2": 1,
                    "value3": 1,
                    "value_2": 2,
                    "value_ptr_2": 1
                },
                "uStack_4": {
                    "arg3_copy": 5,
                    "arg_3_copy": 1,
                    "context2": 1,
                    "copied_stack_value2": 1,
                    "formatted_arg3": 1,
                    "output_param2": 1,
                    "param4_value": 1,
                    "print_arg2": 1,
                    "replaced_stack_value": 1,
                    "stack_arg_2": 1,
                    "stack_data4": 1,
                    "stack_element2": 1,
                    "stack_param4": 1,
                    "stack_value2": 1,
                    "stack_value4": 1,
                    "stack_value_2": 1,
                    "temp_output": 1,
                    "value4": 1
                },
                "uStack_8": {
                    "arg2_copy": 5,
                    "arg_2_copy": 1,
                    "context1": 1,
                    "copied_stack_value1": 1,
                    "formatted_arg2": 1,
                    "output_param1": 1,
                    "param3_value": 1,
                    "print_arg1": 1,
                    "replaced_stack_value": 1,
                    "stack_arg_1": 1,
                    "stack_data3": 1,
                    "stack_element1": 1,
                    "stack_param3": 1,
                    "stack_value1": 1,
                    "stack_value3": 1,
                    "stack_value_1": 1,
                    "temp_int": 1,
                    "value3": 1
                }
            },
            "called": [
                "FUN_0800937c"
            ],
            "calling": [
                "FUN_080090cc"
            ],
            "code": "\nvoid print_with_stack_values_08009124(undefined4 format_string,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  undefined4 arg2_copy;\n  undefined4 arg3_copy;\n  \n  arg2_copy = arg2;\n  arg3_copy = arg3;\n  formatted_print(DAT_20000090,format_string,arg1,&arg2_copy,format_string,&arg2_copy);\n  return;\n}\n\n",
            "current_name": "print_with_stack_values_08009124",
            "entrypoint": "0x08009124",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009124": "print_with_stack_values_08009124",
                "_vfiprintf_r": "formatted_print",
                "param_1": "format_string",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3",
                "uStack_4": "arg3_copy",
                "uStack_8": "arg2_copy"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009148": {
            "additional_data": {
                "FUNC_0800a424": {
                    "function_a": 2,
                    "function_one": 2,
                    "initialize": 2,
                    "perform_action": 1,
                    "perform_task1": 2,
                    "sub_function1": 3,
                    "sub_function_a": 1
                },
                "FUN_08008f0e": {
                    "execute_setup_functions": 1,
                    "function_b": 2,
                    "function_two": 2,
                    "initialize_system": 1,
                    "main_execution": 1,
                    "perform_task2": 2,
                    "sub_function2": 3,
                    "sub_function_b": 1
                },
                "FUN_08009148": {
                    "execute_all_functions": 1,
                    "execute_function_list": 1,
                    "execute_functions": 21,
                    "execute_initialization_sequence": 1,
                    "execute_sub_functions": 5,
                    "initialize_and_call_functions": 1,
                    "initialize_components": 1
                },
                "iVar1": {
                    "counter": 9,
                    "i": 1,
                    "index": 16,
                    "iteration_count": 1,
                    "iteration_index": 1
                }
            },
            "called": [
                "FUN_0800a424",
                "FUN_08008f0e"
            ],
            "calling": [
                "FUN_08003658"
            ],
            "code": "\nvoid execute_sub_functions_08009148(void)\n\n{\n  int index;\n  \n  for (index = 0; index != 0; index = index + 1) {\n    (*(code *)(&DAT_0800abe4)[index])();\n  }\n  _init();\n  for (index = 0; index != 0xc; index = index + 1) {\n    (*(code *)(&DAT_0800abe4)[index])();\n  }\n  return;\n}\n\n",
            "current_name": "execute_sub_functions_08009148",
            "entrypoint": "0x08009148",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009148": "execute_sub_functions_08009148",
                "iVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009190": {
            "additional_data": {
                "FUN_08009190": {
                    "allocate_memory": 30,
                    "initialize_memory": 1
                },
                "FUN_08009270": {
                    "allocate_memory": 1,
                    "copy_data": 19,
                    "copy_memory": 3,
                    "copy_to_new_memory": 1,
                    "process_data": 1,
                    "reverse_array": 2,
                    "reverse_bytes": 2,
                    "reverse_data": 1,
                    "reverse_string": 1
                },
                "param_1": {
                    "array": 2,
                    "destination": 11,
                    "input": 1,
                    "memory_size": 1,
                    "original_string": 1,
                    "output": 1,
                    "size": 7,
                    "source": 7
                },
                "param_2": {
                    "count": 1,
                    "data_size": 1,
                    "input": 1,
                    "length": 16,
                    "num_bytes": 1,
                    "num_elements": 4,
                    "size": 1,
                    "source": 5,
                    "string_length": 1
                }
            },
            "called": [
                "FUN_08009270"
            ],
            "calling": [
                "FUN_08002e44"
            ],
            "code": "\nvoid allocate_memory_08009190(undefined4 destination)\n\n{\n  _malloc_r(DAT_20000090,destination);\n  return;\n}\n\n",
            "current_name": "allocate_memory_08009190",
            "entrypoint": "0x08009190",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009190": "allocate_memory_08009190",
                "param_1": "destination"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080091a0": {
            "additional_data": {
                "FUN_080091a0": {
                    "dealloc_memory": 1,
                    "deallocate_memory": 2,
                    "free_memory": 26,
                    "release_memory": 2
                },
                "FUN_080091d8": {
                    "call_function": 2,
                    "call_sub_function": 1,
                    "copy_data_to_array": 1,
                    "modify_data": 1,
                    "process_data": 9,
                    "process_function": 1,
                    "sub_function": 6
                },
                "param_1": {
                    "array": 1,
                    "data": 1,
                    "data_array": 1,
                    "mem_block": 1,
                    "memory": 1,
                    "memory_address": 7,
                    "memory_block": 7,
                    "memory_pointer": 2,
                    "memory_to_deallocate": 1,
                    "memory_to_free": 1,
                    "pointer": 4,
                    "ptr": 3,
                    "ptr_to_free": 1
                },
                "param_2": {
                    "arr_size": 1,
                    "array": 3,
                    "array_size": 4,
                    "count": 2,
                    "data": 1,
                    "data_array": 1,
                    "data_buffer": 1,
                    "data_count": 1,
                    "data_size": 1,
                    "pointer_array": 1,
                    "size": 4
                },
                "param_3": {
                    "arg1": 2,
                    "argument1": 1,
                    "flag1": 1,
                    "item1": 1,
                    "param3": 7,
                    "param_3": 1,
                    "size": 2,
                    "value1": 5
                },
                "param_4": {
                    "arg2": 2,
                    "argument2": 1,
                    "flag2": 1,
                    "item2": 1,
                    "offset": 1,
                    "param4": 7,
                    "param_4": 1,
                    "value": 1,
                    "value2": 5
                }
            },
            "called": [
                "FUN_080091d8"
            ],
            "calling": [
                "FUN_08002e44"
            ],
            "code": "\nvoid free_memory_080091a0(undefined4 memory_block)\n\n{\n  _free_r(DAT_20000090,memory_block);\n  return;\n}\n\n",
            "current_name": "free_memory_080091a0",
            "entrypoint": "0x080091a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080091a0": "free_memory_080091a0",
                "param_1": "memory_block"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080091b0": {
            "additional_data": {
                "FUN_080091b0": {
                    "copy_and_shift": 2,
                    "copy_array": 2,
                    "copy_array_to": 1,
                    "copy_buffer": 1,
                    "copy_bytes": 1,
                    "copy_data": 19,
                    "copy_data_to_buffer": 3,
                    "copy_memory": 1,
                    "copy_to_offset": 1
                },
                "param_1": {
                    "array_dest": 1,
                    "buffer_start_index": 1,
                    "buffer_start_offset": 1,
                    "data_dest_size": 1,
                    "data_destination": 1,
                    "dest_address": 3,
                    "dest_index": 1,
                    "dest_ptr": 1,
                    "dest_start": 1,
                    "destination_offset": 2,
                    "source": 1,
                    "source_address": 1,
                    "source_start": 2,
                    "src_offset": 4,
                    "start_address": 2,
                    "start_dst": 1,
                    "start_idx": 1,
                    "start_index": 5,
                    "start_offset": 1
                },
                "param_2": {
                    "array_src": 1,
                    "data_source": 1,
                    "data_src": 1,
                    "destination": 1,
                    "source": 6,
                    "source_array": 3,
                    "source_buffer": 1,
                    "source_bytes": 1,
                    "source_data": 5,
                    "src_address": 2,
                    "src_buffer": 2,
                    "src_data": 4,
                    "src_ptr": 1,
                    "src_start": 1,
                    "start_src": 1
                },
                "param_3": {
                    "array_length": 3,
                    "buffer_size": 1,
                    "count": 1,
                    "data_length": 8,
                    "data_size": 4,
                    "length": 5,
                    "num_bytes": 3,
                    "num_elements": 2,
                    "size": 3,
                    "source_length": 1
                },
                "puVar1": {
                    "dest": 1,
                    "dest_buffer": 1,
                    "dest_data_end": 1,
                    "dest_end": 9,
                    "dest_end_address": 1,
                    "dest_ptr": 3,
                    "destination_end": 1,
                    "end_address": 1,
                    "end_of_source": 2,
                    "end_of_source_data": 1,
                    "end_of_src_buffer": 1,
                    "end_src": 2,
                    "source_end": 2,
                    "src_end": 1
                },
                "puVar2": {
                    "buffer_ptr": 1,
                    "current_destination": 1,
                    "dest": 3,
                    "dest_address": 1,
                    "dest_buffer": 1,
                    "dest_current": 2,
                    "dest_data_ptr": 1,
                    "dest_end": 1,
                    "dest_index": 1,
                    "dest_offset": 1,
                    "dest_ptr": 4,
                    "destination": 1,
                    "destination_address": 1,
                    "destination_buffer": 1,
                    "destination_end": 2,
                    "end_dest": 1,
                    "end_dst": 1,
                    "src_ptr": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_08009908",
                "FUN_080027f0"
            ],
            "code": "\nvoid copy_data_to_buffer_080091b0(int start_index,undefined *source,int data_length)\n\n{\n  undefined *dest_end;\n  undefined *dest_ptr;\n  \n  dest_ptr = (undefined *)(start_index + -1);\n  dest_end = source + data_length;\n  for (; source != dest_end; source = source + 1) {\n    dest_ptr = dest_ptr + 1;\n    *dest_ptr = *source;\n  }\n  return;\n}\n\n",
            "current_name": "copy_data_to_buffer_080091b0",
            "entrypoint": "0x080091b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080091b0": "copy_data_to_buffer_080091b0",
                "param_1": "start_index",
                "param_2": "source",
                "param_3": "data_length",
                "puVar1": "dest_end",
                "puVar2": "dest_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080091c6": {
            "additional_data": {
                "FUN_080091c6": {
                    "fill_array_with": 1,
                    "fill_array_with_value": 2,
                    "fill_memory": 12,
                    "fill_memory_with": 5,
                    "fill_memory_with_byte": 2,
                    "fill_with_value": 1,
                    "initialize_memory": 1,
                    "memset": 6,
                    "set_range_to_value": 1
                },
                "param_1": {
                    "array": 4,
                    "buffer": 1,
                    "dest": 2,
                    "destination": 13,
                    "memory": 10,
                    "memory_start": 1
                },
                "param_2": {
                    "byte": 1,
                    "byte_to_fill": 1,
                    "value": 29
                },
                "param_3": {
                    "count": 1,
                    "length": 11,
                    "memory_size": 1,
                    "num_bytes": 3,
                    "size": 15
                },
                "puVar1": {
                    "array_end": 1,
                    "dest_end": 1,
                    "end": 2,
                    "end_address": 6,
                    "end_memory": 1,
                    "end_of_array": 1,
                    "end_of_memory": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08009cdc",
                "FUN_08009db0",
                "FUN_08002a58",
                "FUN_08007118",
                "FUN_08006d80",
                "FUN_08002968",
                "FUN_08009d24"
            ],
            "code": "\nvoid fill_memory_with_byte_080091c6(undefined *destination,undefined value,int size)\n\n{\n  undefined *end_address;\n  \n  end_address = destination + size;\n  for (; destination != end_address; destination = destination + 1) {\n    *destination = value;\n  }\n  return;\n}\n\n",
            "current_name": "fill_memory_with_byte_080091c6",
            "entrypoint": "0x080091c6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080091c6": "fill_memory_with_byte_080091c6",
                "param_1": "destination",
                "param_2": "value",
                "param_3": "size",
                "puVar1": "end_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080091d8": {
            "additional_data": {
                "DAT_2000098c": {
                    "head": 1,
                    "head_node": 1,
                    "list_head": 1,
                    "memory_data": 1,
                    "memory_list": 2
                },
                "FUN_080091d8": {
                    "add_elements": 1,
                    "add_value_to_linked_list": 1,
                    "allocate_and_add_to_list": 1,
                    "allocate_and_link_nodes": 1,
                    "allocate_and_lock_memory": 1,
                    "allocate_memory": 14,
                    "append_to_linked_list": 1,
                    "improved_allocate_memory": 1,
                    "process_data": 2,
                    "rearrange_memory": 1,
                    "reorder_pointers": 1,
                    "resize_array": 1,
                    "update_dynamic_memory": 1,
                    "update_linked_list": 2
                },
                "__malloc_lock": {
                    "lock_malloc": 1,
                    "lock_memory": 3
                },
                "__malloc_unlock": {
                    "unlock_malloc": 1,
                    "unlock_memory": 3
                },
                "extraout_r1": {
                    "extra_out_r1": 2,
                    "extra_output": 2,
                    "extra_output1": 1,
                    "extra_ptr1": 1,
                    "extra_result": 1,
                    "extra_ret_val": 1,
                    "extra_return": 1,
                    "extraout": 3,
                    "ppi_var1": 1,
                    "return_value": 1,
                    "temp": 1,
                    "temp1": 4,
                    "temp_malloc": 1,
                    "temp_ptr": 2,
                    "tmp_node": 1
                },
                "param_1": {
                    "array": 2,
                    "error_code": 2,
                    "linked_list": 2,
                    "list_head": 1,
                    "lock_param": 1,
                    "memory": 1,
                    "memory_ptr": 1,
                    "node_list": 1,
                    "output": 1,
                    "output_ptr": 1,
                    "param_array": 1,
                    "parameter1": 1,
                    "ptr": 2,
                    "result": 13,
                    "result_pointer": 1
                },
                "param_2": {
                    "input_size": 1,
                    "length": 3,
                    "num_elements": 1,
                    "num_nodes": 1,
                    "parameter2": 1,
                    "size": 22,
                    "value": 2
                },
                "param_3": {
                    "arg1": 1,
                    "arg3": 9,
                    "arg_3": 1,
                    "offset": 1,
                    "param1": 1,
                    "param3": 9,
                    "param_3": 5,
                    "parameter3": 1,
                    "unused_param": 1,
                    "var1": 1,
                    "var3": 1
                },
                "param_4": {
                    "arg2": 1,
                    "arg4": 9,
                    "arg_4": 1,
                    "dummy": 1,
                    "param2": 1,
                    "param4": 9,
                    "param_4": 5,
                    "parameter4": 1,
                    "unused_param": 1,
                    "var2": 1,
                    "var4": 1
                },
                "piVar3": {
                    "": 1,
                    "int_ptr": 1,
                    "pointer3": 1,
                    "pointer_var3": 1,
                    "temp": 7,
                    "temp3": 3,
                    "temp4": 3,
                    "temp_pointer_3": 1,
                    "temp_ptr": 5,
                    "temp_var": 5,
                    "temp_var1": 2,
                    "tmp": 1
                },
                "ppiVar1": {
                    "": 1,
                    "curr_list_ptr": 1,
                    "curr_node": 1,
                    "curr_pos": 1,
                    "current": 2,
                    "current_block": 1,
                    "current_node": 3,
                    "current_ptr": 4,
                    "pointer1": 1,
                    "pointer_var1": 1,
                    "prev": 1,
                    "prev_ptr": 1,
                    "ptr1": 1,
                    "temp1": 3,
                    "temp2": 3,
                    "temp_pointer1": 1,
                    "temp_pointer_1": 1,
                    "temp_ptr1": 4
                },
                "ppiVar2": {
                    "curr_pointer": 1,
                    "curr_ptr": 1,
                    "current": 1,
                    "iterator_ptr": 1,
                    "next": 1,
                    "next_block": 1,
                    "next_list_ptr": 1,
                    "next_node": 5,
                    "next_pos": 1,
                    "next_ptr": 3,
                    "pointer2": 1,
                    "pointer_var2": 1,
                    "ptr2": 1,
                    "temp2": 3,
                    "temp3": 3,
                    "temp_pointer2": 1,
                    "temp_pointer_2": 1,
                    "temp_ptr2": 4
                },
                "ppiVar4": {
                    "": 1,
                    "iter": 1,
                    "last_ptr": 1,
                    "pointer4": 1,
                    "pointer_var4": 1,
                    "prev_list_ptr": 1,
                    "prev_node": 3,
                    "prev_pos": 1,
                    "prev_ptr": 1,
                    "prev_ptr2": 1,
                    "previous": 1,
                    "previous_block": 1,
                    "previous_node": 2,
                    "previous_ptr": 2,
                    "ptr4": 1,
                    "temp4": 3,
                    "temp5": 3,
                    "temp_pointer3": 1,
                    "temp_pointer_4": 1,
                    "temp_ptr3": 4
                },
                "ppiVar5": {
                    "allocated_memory": 1,
                    "block": 1,
                    "curr_ptr2": 1,
                    "new_block": 1,
                    "new_list_ptr": 1,
                    "new_node": 6,
                    "new_pointer": 1,
                    "new_pos": 1,
                    "new_ptr": 3,
                    "pointer5": 1,
                    "pointer_var5": 1,
                    "ptr5": 1,
                    "temp5": 3,
                    "temp6": 3,
                    "temp_pointer4": 1,
                    "temp_pointer_5": 1,
                    "temp_ptr4": 4
                }
            },
            "called": [
                "FUN_08009f48",
                "FUN_08009f4a"
            ],
            "calling": [
                "FUN_08009b5c",
                "FUN_08009908",
                "FUN_080091a0",
                "FUN_08009a80"
            ],
            "code": "\nvoid improved_allocate_memory_080091d8(undefined4 *result,int size,undefined4 arg3,undefined4 arg4)\n\n{\n  int **temp1;\n  int **temp_ptr1;\n  int **next_node;\n  int *temp;\n  int **temp_ptr3;\n  int **new_node;\n  \n  if (size == 0) {\n    return;\n  }\n  new_node = (int **)(size + -4);\n  if (*(int *)(size + -4) < 0) {\n    new_node = (int **)((int)new_node + *(int *)(size + -4));\n  }\n  lock_memory();\n  next_node = (int **)&DAT_2000098c;\n  if (DAT_2000098c == (int **)0x0) {\n    new_node[1] = (int *)0x0;\n    temp_ptr1 = temp1;\n    DAT_2000098c = new_node;\n  }\n  else {\n    next_node = DAT_2000098c;\n    if (new_node < DAT_2000098c) {\n      temp_ptr1 = (int **)*new_node;\n      next_node = (int **)((int)new_node + (int)temp_ptr1);\n      if (DAT_2000098c == next_node) {\n        temp = *DAT_2000098c;\n        DAT_2000098c = (int **)DAT_2000098c[1];\n        next_node = (int **)((int)temp + (int)temp_ptr1);\n        *new_node = (int *)next_node;\n      }\n      new_node[1] = (int *)DAT_2000098c;\n      DAT_2000098c = new_node;\n    }\n    else {\n      do {\n        temp_ptr3 = next_node;\n        next_node = (int **)temp_ptr3[1];\n        if (next_node == (int **)0x0) break;\n      } while (next_node <= new_node);\n      temp_ptr1 = (int **)*temp_ptr3;\n      if ((int **)((int)temp_ptr3 + (int)temp_ptr1) == new_node) {\n        temp_ptr1 = (int **)((int)temp_ptr1 + (int)*new_node);\n        *temp_ptr3 = (int *)temp_ptr1;\n        if (next_node == (int **)((int)temp_ptr3 + (int)temp_ptr1)) {\n          temp = *next_node;\n          next_node = (int **)next_node[1];\n          temp_ptr1 = (int **)((int)temp_ptr1 + (int)temp);\n          *temp_ptr3 = (int *)temp_ptr1;\n          temp_ptr3[1] = (int *)next_node;\n        }\n      }\n      else if (new_node < (int **)((int)temp_ptr3 + (int)temp_ptr1)) {\n        *result = 0xc;\n      }\n      else {\n        temp_ptr1 = (int **)((int)new_node + (int)*new_node);\n        if (next_node == temp_ptr1) {\n          temp = *next_node;\n          next_node = (int **)next_node[1];\n          temp_ptr1 = (int **)((int)temp + (int)*new_node);\n          *new_node = (int *)temp_ptr1;\n        }\n        new_node[1] = (int *)next_node;\n        temp_ptr3[1] = (int *)new_node;\n      }\n    }\n  }\n  unlock_memory(result,temp_ptr1,next_node,arg4);\n  return;\n}\n\n",
            "current_name": "improved_allocate_memory_080091d8",
            "entrypoint": "0x080091d8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080091d8": "improved_allocate_memory_080091d8",
                "__malloc_lock": "lock_memory",
                "__malloc_unlock": "unlock_memory",
                "extraout_r1": "temp1",
                "param_1": "result",
                "param_2": "size",
                "param_3": "arg3",
                "param_4": "arg4",
                "piVar3": "temp",
                "ppiVar1": "temp_ptr1",
                "ppiVar2": "next_node",
                "ppiVar4": "temp_ptr3",
                "ppiVar5": "new_node"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009270": {
            "additional_data": {
                "DAT_2000098c": {
                    "first_block": 2,
                    "first_chunk": 2,
                    "free_list": 1,
                    "head": 1,
                    "head_ptr": 1,
                    "heap_base": 1,
                    "heap_start": 3,
                    "memory_blocks": 1,
                    "memory_start": 1
                },
                "DAT_20000990": {
                    "break_point": 1,
                    "brk": 1,
                    "brk_ptr": 2,
                    "brk_result": 1,
                    "brk_return_value": 1,
                    "brk_value": 1,
                    "current_break": 1,
                    "heap_end": 2,
                    "last_block": 1,
                    "memory_segment": 1,
                    "previous_break": 1
                },
                "FUNC_08009f48": {
                    "function1": 2
                },
                "FUNC_08009f4a": {
                    "function2": 2
                },
                "FUN_08009270": {
                    "allocate_memory": 27,
                    "allocate_memory_block": 4
                },
                "__malloc_lock": {
                    "lock_malloc": 1,
                    "lock_memory": 5,
                    "lock_memory_allocation": 1
                },
                "__malloc_unlock": {
                    "unlock_malloc": 1,
                    "unlock_memory": 5,
                    "unlock_memory_allocation": 1
                },
                "_sbrk_r": {
                    "increase_heap": 1,
                    "increase_heap_size": 2,
                    "increment_break_r": 1,
                    "sbrk": 1,
                    "sbrk_r": 1,
                    "sbrk_wrapper": 1
                },
                "iVar2": {
                    "block_diff": 1,
                    "block_size": 1,
                    "chunk_diff": 1,
                    "diff": 3,
                    "difference": 3,
                    "remainder": 1,
                    "remaining_size": 8,
                    "remaining_space": 11,
                    "unused": 1
                },
                "param_1": {
                    "allocated_memory": 1,
                    "block_size": 1,
                    "buffer_size": 1,
                    "dest": 1,
                    "error_code": 3,
                    "memory_ptr": 1,
                    "output_pointer": 1,
                    "output_ptr": 1,
                    "output_size": 2,
                    "ptr_error_code": 1,
                    "ptr_size": 4,
                    "result": 3,
                    "size": 6,
                    "size_of_allocated_memory": 1,
                    "size_pointer": 1,
                    "size_ptr": 1,
                    "start_address": 1
                },
                "param_2": {
                    "alignment": 6,
                    "block_size": 1,
                    "requested_size": 8,
                    "required_size": 1,
                    "size": 14
                },
                "puVar1": {
                    "current": 1,
                    "current_block": 21,
                    "current_chunk": 4,
                    "current_ptr": 2,
                    "next_block": 1,
                    "previous_block": 1
                },
                "puVar3": {
                    "current_block": 3,
                    "current_block_next": 1,
                    "next_block": 2,
                    "next_chunk": 1,
                    "prev_block": 2,
                    "prev_chunk": 1,
                    "prev_ptr": 1,
                    "previous_block": 14,
                    "previous_chunk": 2,
                    "previous_ptr": 1,
                    "temp": 1,
                    "temp_block": 1,
                    "temp_ptr": 1
                },
                "puVar5": {
                    "aligned_block": 1,
                    "last_allocated_block": 1,
                    "last_block": 1,
                    "last_chunk": 1,
                    "new_block": 7,
                    "new_chunk": 1,
                    "new_ptr": 1,
                    "prev_block": 1,
                    "prev_block_next": 1,
                    "prev_prev_ptr": 1,
                    "previous": 1,
                    "previous_block": 7,
                    "previous_block_next": 1,
                    "previous_chunk": 1,
                    "split_block": 2,
                    "target_block": 1,
                    "updated_block": 1,
                    "updated_chunk": 1
                },
                "uVar4": {
                    "available_space": 1,
                    "block_diff": 6,
                    "block_difference": 3,
                    "block_size_diff": 1,
                    "block_size_difference": 1,
                    "chunk_difference": 1,
                    "diff": 2,
                    "diff_align": 1,
                    "difference": 9,
                    "free_space": 1,
                    "remaining": 1,
                    "size_diff": 2,
                    "size_difference": 1
                },
                "uVar6": {
                    "actual_size": 1,
                    "adjusted_size": 2,
                    "aligned_size": 2,
                    "allocated_block_size": 2,
                    "allocated_memory_size": 2,
                    "allocated_size": 19,
                    "new_block_size": 1,
                    "total_block_size": 1
                }
            },
            "called": [
                "FUN_08009918",
                "FUN_08009f48",
                "FUN_08009f4a"
            ],
            "calling": [
                "FUN_08009908",
                "FUN_08009eac",
                "FUN_08009190",
                "FUN_08009d24"
            ],
            "code": "\nuint allocate_memory_block_08009270(undefined4 *size,uint size)\n\n{\n  uint *current_block;\n  int remaining_space;\n  uint *previous_block;\n  uint difference;\n  uint *new_block;\n  uint allocated_size;\n  \n  allocated_size = (size + 3 & 0xfffffffc) + 8;\n  if (allocated_size < 0xc) {\n    allocated_size = 0xc;\n  }\n  if (((int)allocated_size < 0) || (allocated_size < size)) {\n    *size = 0xc;\n  }\n  else {\n    lock_memory();\n    current_block = DAT_2000098c;\n    new_block = DAT_2000098c;\n    while (previous_block = current_block, previous_block != (uint *)0x0) {\n      difference = *previous_block - allocated_size;\n      if (-1 < (int)difference) {\n        if (difference < 0xc) {\n          if (new_block == previous_block) {\n            current_block = (uint *)new_block[1];\n            DAT_2000098c = current_block;\n          }\n          else {\n            current_block = (uint *)previous_block[1];\n          }\n          if (new_block != previous_block) {\n            new_block[1] = (uint)current_block;\n            new_block = previous_block;\n          }\n        }\n        else {\n          *previous_block = difference;\n          *(uint *)((int)previous_block + difference) = allocated_size;\n          new_block = (uint *)((int)previous_block + difference);\n        }\n        goto LAB_080092d4;\n      }\n      new_block = previous_block;\n      current_block = (uint *)previous_block[1];\n    }\n    if (DAT_20000990 == 0) {\n      DAT_20000990 = increase_heap_size(size);\n    }\n    current_block = (uint *)increase_heap_size(size,allocated_size);\n    if ((current_block != (uint *)0xffffffff) &&\n       ((new_block = (uint *)((int)current_block + 3U & 0xfffffffc), current_block == new_block ||\n        (remaining_space = increase_heap_size(size,(int)new_block - (int)current_block), remaining_space != -1)))) {\n      *new_block = allocated_size;\nLAB_080092d4:\n      unlock_memory(size);\n      allocated_size = (int)new_block + 0xbU & 0xfffffff8;\n      remaining_space = allocated_size - (int)(new_block + 1);\n      if (remaining_space != 0) {\n        *(int *)((int)new_block + remaining_space) = -remaining_space;\n        return allocated_size;\n      }\n      return allocated_size;\n    }\n    *size = 0xc;\n    unlock_memory(size);\n  }\n  return 0;\n}\n\n",
            "current_name": "allocate_memory_block_08009270",
            "entrypoint": "0x08009270",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009270": "allocate_memory_block_08009270",
                "__malloc_lock": "lock_memory",
                "__malloc_unlock": "unlock_memory",
                "_sbrk_r": "increase_heap_size",
                "iVar2": "remaining_space",
                "param_1": "size",
                "param_2": "size",
                "puVar1": "current_block",
                "puVar3": "previous_block",
                "puVar5": "new_block",
                "uVar4": "difference",
                "uVar6": "allocated_size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800932c": {
            "additional_data": {
                "DAT_0800ab84": {
                    "constant_data_ptr_3": 1,
                    "dat_0800ab84": 2,
                    "third_data": 1,
                    "unknown3": 1
                },
                "DAT_0800aba4": {
                    "constant_data_ptr_1": 1,
                    "dat_0800aba4": 2,
                    "first_data": 1,
                    "unknown1": 1
                },
                "DAT_0800abc4": {
                    "constant_data_ptr_2": 1,
                    "dat_0800abc4": 2,
                    "second_data": 1,
                    "unknown2": 1
                },
                "FUN_0800932c": {
                    "decode_and_update_buffer": 2,
                    "decode_and_write_byte": 1,
                    "handle_input": 1,
                    "process_byte": 3,
                    "process_input": 19,
                    "process_parameter_value": 1,
                    "read_and_update_byte": 1,
                    "update_byte": 1
                },
                "__sinit": {
                    "initialize": 9,
                    "initialize_stream": 1
                },
                "__swsetup_r": {
                    "setup": 2,
                    "setup_r": 3,
                    "setup_stream": 2,
                    "setup_write": 1,
                    "sw_setup": 1,
                    "swsetup_r": 1
                },
                "_fflush_r": {
                    "fflush_r": 1,
                    "flush": 3,
                    "flush_r": 3,
                    "flush_stream": 2,
                    "flush_write": 1
                },
                "iVar1": {
                    "array_index": 1,
                    "index": 6,
                    "result": 3,
                    "temp": 1,
                    "temp_int1": 1,
                    "temp_int_1": 1,
                    "temp_value": 1,
                    "temp_var": 4,
                    "temp_var1": 3,
                    "temp_var_1": 6,
                    "temp_variable": 1,
                    "value": 1
                },
                "param_1": {
                    "arg1": 1,
                    "argument_1": 1,
                    "buffer": 1,
                    "data": 3,
                    "data_struct_ptr": 1,
                    "handle": 1,
                    "input": 3,
                    "input_buffer": 1,
                    "input_data": 3,
                    "input_flag": 1,
                    "input_param": 2,
                    "input_ptr": 1,
                    "input_ptr_1": 1,
                    "num": 1,
                    "param": 2,
                    "param1": 4,
                    "param_a": 1,
                    "param_int": 1,
                    "param_length": 1,
                    "ptr_object": 1
                },
                "param_2": {
                    "byte_param": 1,
                    "byte_to_insert": 1,
                    "byte_val": 1,
                    "byte_value": 12,
                    "input_byte": 11,
                    "param2": 3,
                    "param_b": 1,
                    "param_byte": 1
                },
                "param_3": {
                    "buffer": 2,
                    "buffer_pointers": 1,
                    "buffers": 1,
                    "byte_array": 5,
                    "byte_array_ptr": 1,
                    "byte_pointer": 1,
                    "byte_pointer_array": 1,
                    "byte_ptr_ptr": 1,
                    "data": 1,
                    "input": 1,
                    "input_array": 1,
                    "input_buffer": 2,
                    "input_byte_ptr": 1,
                    "input_data": 2,
                    "input_data_ptr": 1,
                    "input_ptr_2": 1,
                    "output_buffer": 1,
                    "output_data": 1,
                    "param3": 3,
                    "param_byte_ptr_ptr": 1,
                    "param_c": 1,
                    "ptr_input_data": 1
                },
                "pbVar2": {
                    "array_end": 1,
                    "array_ptr": 2,
                    "buffer": 1,
                    "buffer_end": 1,
                    "buffer_ptr": 1,
                    "byte_pointer": 1,
                    "byte_ptr1": 1,
                    "current_byte": 3,
                    "current_byte_ptr": 1,
                    "current_index": 1,
                    "dest_pointer": 1,
                    "output_byte_ptr": 1,
                    "ptr1": 2,
                    "ptr_2": 1,
                    "temp_byte_1": 1,
                    "temp_byte_ptr": 2,
                    "temp_var2": 3,
                    "temp_var_2": 6,
                    "write_ptr": 1
                },
                "pbVar3": {
                    "another_array_ptr": 1,
                    "buffer_start": 1,
                    "byte_count": 1,
                    "byte_ptr": 1,
                    "byte_ptr2": 1,
                    "byte_value": 1,
                    "flags_ptr": 1,
                    "next_byte": 2,
                    "pb_var3": 1,
                    "ptr2": 2,
                    "ptr_3": 1,
                    "read_ptr": 1,
                    "src_pointer": 1,
                    "temp_byte_2": 1,
                    "temp_byte_ptr_2": 2,
                    "temp_ptr": 2,
                    "temp_var3": 3,
                    "temp_var_3": 6,
                    "ushort_ptr": 1,
                    "ushort_value": 1
                },
                "uVar4": {
                    "converted_byte": 1,
                    "converted_value": 1,
                    "output": 1,
                    "output_byte": 3,
                    "result": 15,
                    "return_val": 1,
                    "return_value": 8,
                    "temp_uint": 1
                }
            },
            "called": [
                "FUN_08009d50",
                "FUN_08009c7c",
                "FUN_08009a80"
            ],
            "calling": [
                "FUN_08009358"
            ],
            "code": "\nuint process_input_0800932c(int param1,byte byte_value,byte **byte_array)\n\n{\n  int index;\n  byte *temp_var_2;\n  byte *temp_var_3;\n  uint result;\n  \n  temp_var_2 = byte_array[2] + -1;\n  byte_array[2] = temp_var_2;\n  if ((-1 < (int)temp_var_2) ||\n     (((int)byte_array[6] <= (int)temp_var_2 && (temp_var_2 = (byte *)(uint)byte_value, temp_var_2 != (byte *)0xa))))\n  {\n    temp_var_2 = *byte_array;\n    *byte_array = temp_var_2 + 1;\n    *temp_var_2 = byte_value;\n    return (uint)byte_value;\n  }\n  if ((param1 != 0) && (*(int *)(param1 + 0x18) == 0)) {\n    initialize();\n  }\n  if (byte_array == (byte **)&DAT_0800aba4) {\n    byte_array = *(byte ***)(param1 + 4);\n  }\n  else if (byte_array == (byte **)&DAT_0800abc4) {\n    byte_array = *(byte ***)(param1 + 8);\n  }\n  else if (byte_array == (byte **)&DAT_0800ab84) {\n    byte_array = *(byte ***)(param1 + 0xc);\n  }\n  byte_array[2] = byte_array[6];\n  temp_var_3 = (byte *)(uint)*(ushort *)(byte_array + 3);\n  index = (int)temp_var_3 << 0x1c;\n  if (((index < 0) && (temp_var_3 = byte_array[4], temp_var_3 != (byte *)0x0)) ||\n     (index = setup_r(param1,byte_array,index,temp_var_3,temp_var_2), index == 0)) {\n    result = (uint)byte_value;\n    index = (int)*byte_array - (int)byte_array[4];\n    if ((index < (int)byte_array[5]) || (index = flush(param1,byte_array), index == 0)) {\n      byte_array[2] = byte_array[2] + -1;\n      temp_var_2 = *byte_array;\n      *byte_array = temp_var_2 + 1;\n      *temp_var_2 = byte_value;\n      if ((byte *)(index + 1) != byte_array[5]) {\n        if (-1 < (int)((uint)*(ushort *)(byte_array + 3) << 0x1f)) {\n          return result;\n        }\n        if (result != 10) {\n          return result;\n        }\n      }\n      index = flush(param1,byte_array);\n      if (index == 0) {\n        return result;\n      }\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "process_input_0800932c",
            "entrypoint": "0x0800932c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800932c": "process_input_0800932c",
                "__sinit": "initialize",
                "__swsetup_r": "setup_r",
                "_fflush_r": "flush",
                "iVar1": "index",
                "param_1": "param1",
                "param_2": "byte_value",
                "param_3": "byte_array",
                "pbVar2": "temp_var_2",
                "pbVar3": "temp_var_3",
                "uVar4": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009358": {
            "additional_data": {
                "FUN_08009358": {
                    "copy_and_print": 1,
                    "copy_bytes": 1,
                    "copy_string": 1,
                    "output_characters": 1,
                    "reverse_and_write": 1,
                    "stream_write": 1,
                    "write_bytes": 3,
                    "write_bytes_to_stream": 1,
                    "write_data": 4,
                    "write_data_to_buffer": 1,
                    "write_data_to_file": 1,
                    "write_data_to_stream": 2,
                    "write_text_to_stream": 1,
                    "write_to_file": 1,
                    "write_to_output": 2,
                    "write_to_output_stream": 1,
                    "write_to_stream": 7
                },
                "F_UNDETERMINED_FUNCTION": {
                    "write_data": 1
                },
                "iVar1": {
                    "bytes_written": 4,
                    "error_code": 1,
                    "output_length": 1,
                    "result": 19,
                    "return_value": 1,
                    "write_result": 5
                },
                "iVar3": {
                    "bytes_remaining": 2,
                    "bytes_written": 1,
                    "count": 1,
                    "current": 1,
                    "current_index": 1,
                    "current_length": 2,
                    "current_position": 2,
                    "current_size": 1,
                    "length": 1,
                    "loop_counter": 1,
                    "remaining": 1,
                    "remaining_buffer_size": 1,
                    "remaining_bytes": 2,
                    "remaining_count": 1,
                    "remaining_length": 8,
                    "remaining_size": 5
                },
                "param_1": {
                    "file_descriptor": 9,
                    "file_stream": 1,
                    "output_file": 2,
                    "output_stream": 1,
                    "output_stream_handle": 1,
                    "stream": 17
                },
                "param_2": {
                    "buf": 1,
                    "buffer": 4,
                    "byte": 1,
                    "byte_buffer": 1,
                    "byte_to_write": 1,
                    "c": 1,
                    "char_count": 1,
                    "character": 14,
                    "flags": 1,
                    "input": 1,
                    "input_char": 1,
                    "mode": 1,
                    "value": 1,
                    "write_mode": 2
                },
                "param_3": {
                    "buffer": 15,
                    "bytes": 1,
                    "data": 8,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "input_data": 1,
                    "input_string": 2,
                    "source_buffer": 1,
                    "text": 1
                },
                "param_4": {
                    "buffer_size": 6,
                    "count": 2,
                    "data_length": 2,
                    "data_size": 3,
                    "input_length": 1,
                    "length": 8,
                    "num_bytes": 2,
                    "size": 5,
                    "string_length": 1,
                    "text_length": 1
                },
                "puVar2": {
                    "buffer_end": 2,
                    "current_byte": 1,
                    "destination_buffer": 1,
                    "end": 2,
                    "end_of_buffer": 12,
                    "end_of_bytes": 1,
                    "end_of_data": 2,
                    "end_of_input": 1,
                    "end_of_string": 1,
                    "end_of_text": 1,
                    "end_pointer": 2,
                    "end_ptr": 4,
                    "last_position": 1
                }
            },
            "called": [
                "FUN_0800932c"
            ],
            "calling": [
                "FUN_0800937c"
            ],
            "code": "\nint write_data_to_stream_08009358(undefined4 stream,undefined4 character,undefined *buffer,int length)\n\n{\n  int result;\n  undefined *end_of_buffer;\n  int remaining_length;\n  \n  end_of_buffer = buffer + length;\n  remaining_length = length;\n  do {\n    if (buffer == end_of_buffer) {\n      return 0;\n    }\n    result = __sfputc_r(stream,*buffer,character,length,remaining_length);\n    length = result + 1;\n    buffer = buffer + 1;\n  } while (length != 0);\n  return result;\n}\n\n",
            "current_name": "write_data_to_stream_08009358",
            "entrypoint": "0x08009358",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009358": "write_data_to_stream_08009358",
                "iVar1": "result",
                "iVar3": "remaining_length",
                "param_1": "stream",
                "param_2": "character",
                "param_3": "buffer",
                "param_4": "length",
                "puVar2": "end_of_buffer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800937c": {
            "additional_data": {
                "0x18": {
                    "offset_for_stream": 1
                },
                "0x8009359": {
                    "format_conversion": 1,
                    "integer_format_string": 1
                },
                "FUN_08009358": {
                    "count_string_width": 1,
                    "process_string_specifier": 1,
                    "write_string_to_stream_function": 1,
                    "write_to_buffer": 1
                },
                "FUN_0800937c": {
                    "format_string": 1,
                    "formatted_print": 2,
                    "improved_printf": 1,
                    "parse_and_format": 1,
                    "parse_format_string": 2,
                    "parse_printf_format": 3,
                    "print_formatted": 1,
                    "print_formatted_output": 5,
                    "print_formatted_string": 6,
                    "print_formatted_text": 2,
                    "printf_format_checker": 1,
                    "process_format_string": 2,
                    "process_printf_format": 1,
                    "process_string_format": 1
                },
                "FUN_08009698": {
                    "handle_float_format": 1,
                    "parse_format_specifier": 1,
                    "process_float_specifier": 1,
                    "setup_wide_characters_function": 1
                },
                "FUN_08009a80": {
                    "handle_string_format": 1,
                    "initialize_pointer": 1,
                    "print_integer_or_string_function": 1,
                    "process_int_specifier": 1
                },
                "FUN_08009d50": {
                    "init_float_values": 1,
                    "initialize_floating_point": 1,
                    "initialize_stdio": 1,
                    "initialize_stream_function": 1
                },
                "FUN_08009f2c": {
                    "format_string_function": 1,
                    "format_string_precision": 1,
                    "get_next_arg": 1,
                    "handle_character_format": 1
                },
                "__sfputs_r": {
                    "_put_string": 1,
                    "sfputs_helper": 1,
                    "sfputs_r": 1,
                    "write_string_to_stream": 1,
                    "write_to_stream": 1
                },
                "__sinit": {
                    "_initialize_stream": 1,
                    "initialize": 2,
                    "initialize_stream": 2
                },
                "__swsetup_r": {
                    "_prepare_stream": 1,
                    "setup_r": 1,
                    "setup_string_width": 1,
                    "setup_wide_characters": 1,
                    "swsetup_helper": 1
                },
                "_printf": {
                    "printf_helper": 1
                },
                "_printf_i": {
                    "handle_integer_format": 1,
                    "print_integer": 1,
                    "print_integer_or_string": 1,
                    "printf_big_i_helper": 1,
                    "printf_i": 1
                },
                "bVar3": {
                    "flag": 5,
                    "found_digit": 3,
                    "has_digit": 2,
                    "has_digits": 1,
                    "has_width": 2,
                    "is_digit": 4,
                    "is_integer": 1,
                    "is_number": 6,
                    "is_numeric": 3,
                    "is_parsing_number": 1,
                    "is_valid": 1,
                    "isdigit": 1
                },
                "iVar1": {
                    "num_chars_written": 1,
                    "result": 19,
                    "return_code": 1,
                    "return_val": 1,
                    "return_value": 3,
                    "write_error": 1,
                    "write_length": 1,
                    "write_result": 3
                },
                "iVar2": {
                    "arg_index": 1
                },
                "iVar6": {
                    "counter": 1,
                    "index": 1,
                    "int_value": 1,
                    "iteration_var": 1,
                    "loop_variable": 1,
                    "num_digits": 1,
                    "return_value": 1,
                    "size": 1,
                    "temp": 2,
                    "temp2": 1,
                    "temp3": 1,
                    "temp_var": 8,
                    "temp_var1": 1,
                    "temp_var2": 1,
                    "temp_var_2": 1,
                    "temp_variable": 2,
                    "temp_variable_2": 1,
                    "tmp": 1,
                    "tmp2": 1,
                    "value": 2
                },
                "local_30": {
                    "alternate_form_flag": 1,
                    "arg_ptr": 1,
                    "arg_ptr3": 1,
                    "buffer_length": 1,
                    "grouping_flag": 1,
                    "length_modifier": 1,
                    "length_modifier_ptr": 1,
                    "local_flag": 1,
                    "local_variable3": 1,
                    "nr_of_character_assigned": 1,
                    "overflow_flag": 1,
                    "pad_char": 1,
                    "prec_flag": 1,
                    "precision_arg_ptr": 1,
                    "precision_flag": 1,
                    "print_func": 1,
                    "ret": 1,
                    "size_modifier": 1,
                    "standard_flag": 1,
                    "temp_offset": 1,
                    "temp_register_30": 1,
                    "temp_var_3": 1,
                    "terminating_null": 1,
                    "var_arg_ptr": 1,
                    "zero_flag": 3,
                    "zero_pad_flag": 1
                },
                "local_45": {
                    "alignment_flag": 1,
                    "alt_flag": 2,
                    "alternate_form": 1,
                    "alternative_flag": 1,
                    "fill_char": 1,
                    "flag": 1,
                    "flag_char": 3,
                    "flag_sharp": 1,
                    "pad_char": 1,
                    "padding": 1,
                    "prefix": 1,
                    "sign_char": 3,
                    "sign_flag": 4,
                    "sign_padding": 1,
                    "zero_flag": 4,
                    "zero_pad": 1,
                    "zero_pad_flag": 1
                },
                "local_6e": {
                    "flag_plus": 1,
                    "plus": 1,
                    "plus_char": 1,
                    "plus_flag": 20,
                    "show_sign_flag": 2,
                    "sign_flag": 1,
                    "zero_padding": 3
                },
                "local_6f": {
                    "flag_space": 1,
                    "space": 1,
                    "space_char": 1,
                    "space_flag": 23,
                    "space_padding": 3
                },
                "local_70": {
                    "conversion": 1,
                    "conversion_char": 2,
                    "conversion_character": 1,
                    "conversion_spec": 2,
                    "conversion_specifier": 15,
                    "current_char": 1,
                    "specifier": 7,
                    "specifier_char": 1
                },
                "local_74": {
                    "num_bytes": 1,
                    "output_chars": 1,
                    "output_length": 2,
                    "printed_chars": 1,
                    "result": 1,
                    "total_bytes": 2,
                    "total_bytes_written": 2,
                    "total_char_count": 2,
                    "total_chars": 2,
                    "total_chars_written": 3,
                    "total_length": 5,
                    "total_output_count": 1,
                    "total_size": 3,
                    "total_written": 2,
                    "total_written_chars": 1,
                    "written_chars": 1
                },
                "local_7c": {
                    "arg_index": 1,
                    "arg_int": 1,
                    "arg_num": 1,
                    "arg_numeric_value": 1,
                    "arg_width": 5,
                    "digit": 1,
                    "error_width": 1,
                    "field_length": 1,
                    "field_width": 4,
                    "local_variable2": 1,
                    "min_field_width": 1,
                    "num_width": 1,
                    "precision": 2,
                    "precision_arg": 1,
                    "width": 8
                },
                "local_80": {
                    "arg_base": 1,
                    "arg_size": 1,
                    "argptr_copy": 1,
                    "fp": 1,
                    "int_width": 1,
                    "length_modifier": 1,
                    "local_variable1": 1,
                    "locale_info": 1,
                    "output_ptr2": 1,
                    "pad_char": 1,
                    "padding": 1,
                    "precision": 7,
                    "print_func": 1,
                    "result_length": 1,
                    "return_address": 1,
                    "temp_value": 1,
                    "width": 7,
                    "width_value": 1
                },
                "local_84": {
                    "arg_precision": 1,
                    "field_width": 8,
                    "precision": 18,
                    "precision_value": 1,
                    "width": 2
                },
                "local_88": {
                    "flag": 3,
                    "flag_bit_mask": 1,
                    "flag_bits": 4,
                    "flag_mask": 1,
                    "flag_value": 1,
                    "flag_variables": 1,
                    "flags": 19
                },
                "local_8c": {
                    "arg": 1,
                    "arg4_ptr": 1,
                    "arg_count": 1,
                    "arg_counter": 1,
                    "arg_data": 1,
                    "arg_iterator": 1,
                    "arg_length": 1,
                    "arg_list_index": 1,
                    "arg_list_index_ptr": 1,
                    "arg_ptr": 2,
                    "arg_type": 1,
                    "arg_width_ptr": 1,
                    "argp": 1,
                    "argument_pointer": 1,
                    "arguments": 1,
                    "count_ptr": 1,
                    "directive_pointer": 1,
                    "flag_ptr": 1,
                    "local_arg_list": 1,
                    "local_param_pointer": 1,
                    "next_argument": 1,
                    "num_width_ptr": 1,
                    "output_count_pointer": 1,
                    "output_ptr": 2,
                    "param_array_ptr": 1,
                    "pointer_array": 1,
                    "ptr_array": 1,
                    "tmp_ptr": 1
                },
                "memchr": {
                    "_find_char": 1,
                    "find_char_helper": 1,
                    "find_char_in_memory": 1,
                    "find_char_in_string": 1
                },
                "param_1": {
                    "arg1": 2,
                    "file_descriptor": 4,
                    "fmt": 1,
                    "format_flags": 1,
                    "format_specification": 1,
                    "format_specifier": 1,
                    "format_string": 6,
                    "formatting_flags": 1,
                    "input": 1,
                    "input_param": 1,
                    "output_stream": 3,
                    "param": 1,
                    "stream": 7,
                    "value": 1
                },
                "param_2": {
                    "arg2": 1,
                    "arg_ptr": 1,
                    "args": 6,
                    "arguments": 1,
                    "data_type_param": 1,
                    "format": 6,
                    "format_spec": 1,
                    "format_specifier": 3,
                    "format_string": 10,
                    "format_string_page": 1
                },
                "param_3": {
                    "arg": 1,
                    "arg_list": 4,
                    "args": 2,
                    "argument_string": 1,
                    "arguments": 2,
                    "buffer": 5,
                    "format": 1,
                    "format_arguments": 1,
                    "format_string": 2,
                    "format_string_param": 1,
                    "input_string": 2,
                    "output_buffer": 4,
                    "str": 1,
                    "string": 3,
                    "string_ptr": 1
                },
                "param_4": {
                    "arg4": 1,
                    "arg_list": 2,
                    "arg_ptr": 1,
                    "argptr": 1,
                    "buf_size": 1,
                    "buffer_length": 1,
                    "buffer_size": 1,
                    "bytes_written": 3,
                    "char_count": 1,
                    "count": 1,
                    "directive_pointer": 1,
                    "error_flag": 1,
                    "flag_ptr": 1,
                    "n_ptr": 1,
                    "num_chars_written": 1,
                    "output_buffer_len": 1,
                    "output_count": 2,
                    "output_length": 1,
                    "output_size": 2,
                    "param_array": 1,
                    "param_pointer": 1,
                    "params": 1,
                    "result": 1,
                    "width": 1,
                    "width_ptr": 1,
                    "written_chars": 1
                },
                "pbVar4": {
                    "byte_pointer": 1,
                    "byte_ptr": 1,
                    "ch": 1,
                    "char_pointer": 1,
                    "char_ptr": 3,
                    "current_byte": 1,
                    "current_char": 13,
                    "current_char_ptr": 1,
                    "format_pointer": 1,
                    "format_ptr": 2,
                    "ptr": 1,
                    "ptr2": 1,
                    "ptr_char": 1,
                    "specifier_ptr": 1,
                    "str_ptr": 1
                },
                "pbVar5": {
                    "char_ptr2": 1,
                    "curr_char": 1,
                    "current_byte_pointer": 1,
                    "current_byte_ptr": 1,
                    "current_char": 2,
                    "current_char_ptr": 1,
                    "current_character": 1,
                    "current_ptr": 1,
                    "iter_ptr": 1,
                    "next_byte": 1,
                    "next_char": 11,
                    "next_char_ptr": 2,
                    "prev_char": 1,
                    "ptr2": 1,
                    "ptr3": 1,
                    "ptr_char2": 1,
                    "start_of_token": 1,
                    "temp_pointer": 1
                },
                "piVar2": {
                    "arg_counter": 1,
                    "arg_index": 1,
                    "arg_length_ptr": 1,
                    "arg_list_index": 1,
                    "arg_ptr": 1,
                    "arg_ptr2": 1,
                    "count_ptr": 1,
                    "counter_pointer": 1,
                    "n_ptr_temp": 1,
                    "next_arg": 2,
                    "next_argument": 1,
                    "num_chars_written_ptr": 1,
                    "num_ptr": 1,
                    "param_pointer": 1,
                    "param_pointer2": 1,
                    "param_ptr": 1,
                    "pointer": 1,
                    "ptr": 3,
                    "ptr_result": 1,
                    "ptr_var": 2,
                    "temp": 1,
                    "temp1": 1,
                    "temp_pointer": 3
                },
                "unaff_r9": {
                    "arg_count": 1,
                    "format_length": 1,
                    "num_placeholder": 1,
                    "pointer_size": 1,
                    "previous_result": 1,
                    "print_arg_count": 1,
                    "printf_result": 1,
                    "result": 2,
                    "status_flag": 1,
                    "stream_error": 1,
                    "swapped_args": 1,
                    "swsetup": 2,
                    "swsetup_result": 2,
                    "temp": 1,
                    "temp2": 1,
                    "temp_index": 1,
                    "temp_register": 1,
                    "temp_register_9": 1,
                    "temp_var": 1,
                    "temp_var_1": 1,
                    "temp_variable_1": 1,
                    "tmp": 2,
                    "unaccessible_register": 1,
                    "unaff_var": 1,
                    "uninitialized": 1,
                    "unused": 1
                }
            },
            "called": [
                "FUN_08009d50",
                "FUN_08009f2c",
                "FUN_08009698",
                "FUN_08009358",
                "FUN_08009a80"
            ],
            "calling": [
                "FUN_080098d8",
                "FUN_08009124"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08009550) */\n\nint print_formatted_string_0800937c(int stream,undefined4 *format_string,byte *buffer,int *bytes_written)\n\n{\n  int result;\n  int *ptr;\n  bool is_number;\n  byte *current_char;\n  byte *next_char;\n  int tmp;\n  int temp_var;\n  int *arg_ptr;\n  uint flags;\n  int precision;\n  undefined4 width;\n  int width;\n  int total_length;\n  byte conversion_specifier;\n  undefined space_flag;\n  undefined plus_flag;\n  undefined sign_flag;\n  undefined4 zero_flag;\n  \n  arg_ptr = bytes_written;\n  if ((stream != 0) && (*(int *)(stream + 0x18) == 0)) {\n    initialize();\n  }\n  if (format_string == &DAT_0800aba4) {\n    format_string = *(undefined4 **)(stream + 4);\n  }\n  else if (format_string == (undefined4 *)&DAT_0800abc4) {\n    format_string = *(undefined4 **)(stream + 8);\n  }\n  else if (format_string == (undefined4 *)&DAT_0800ab84) {\n    format_string = *(undefined4 **)(stream + 0xc);\n  }\n  if (((-1 < (int)((uint)*(ushort *)(format_string + 3) << 0x1c)) || (format_string[4] == 0)) &&\n     (temp_var = setup_string_width(stream,format_string), temp_var != 0)) {\n    return -1;\n  }\n  total_length = 0;\n  space_flag = 0x20;\n  plus_flag = 0x30;\n  current_char = buffer;\nLAB_080093be:\n  next_char = current_char;\n  if (*next_char != 0) goto LAB_08009474;\n  goto LAB_080093c8;\nLAB_08009474:\n  current_char = next_char + 1;\n  if (*next_char != 0x25) goto LAB_080093be;\nLAB_080093c8:\n  temp_var = (int)next_char - (int)buffer;\n  if (temp_var != 0) {\n    result = sfputs_r(stream,format_string,buffer,temp_var);\n    if (result == -1) {\nLAB_08009568:\n      if ((int)((uint)*(ushort *)(format_string + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return total_length;\n    }\n    total_length = total_length + temp_var;\n  }\n  if (*next_char == 0) goto LAB_08009568;\n  flags = 0;\n  width = 0;\n  precision = -1;\n  width = 0;\n  sign_flag = 0;\n  zero_flag = 0;\n  current_char = next_char + 1;\n  while( true ) {\n    temp_var = find_char_in_memory(\"#-0+ \",*current_char);\n    buffer = current_char + 1;\n    if (temp_var == 0) break;\n    flags = 1 << (temp_var + 0xf7ff54b0U & 0xff) | flags;\n    current_char = buffer;\n  }\n  if ((int)(flags << 0x1b) < 0) {\n    sign_flag = 0x20;\n  }\n  if ((int)(flags << 0x1c) < 0) {\n    sign_flag = 0x2b;\n  }\n  if (*current_char == 0x2a) {\n    ptr = arg_ptr + 1;\n    temp_var = *arg_ptr;\n    arg_ptr = ptr;\n    if (temp_var < 0) {\n      width = -temp_var;\n      flags = flags | 2;\n      goto LAB_080094a6;\n    }\n  }\n  else {\n    is_number = false;\n    temp_var = width;\n    buffer = current_char;\n    while( true ) {\n      if (9 < *buffer - 0x30) break;\n      temp_var = temp_var * 10 + (*buffer - 0x30);\n      is_number = true;\n      buffer = buffer + 1;\n    }\n    if (!is_number) goto LAB_080094a6;\n  }\n  width = temp_var;\nLAB_080094a6:\n  if (*buffer == 0x2e) {\n    if (buffer[1] == 0x2a) {\n      buffer = buffer + 2;\n      ptr = arg_ptr + 1;\n      precision = *arg_ptr;\n      arg_ptr = ptr;\n      if (precision < 0) {\n        precision = -1;\n      }\n    }\n    else {\n      is_number = false;\n      temp_var = 0;\n      precision = 0;\n      while( true ) {\n        buffer = buffer + 1;\n        if (9 < *buffer - 0x30) break;\n        temp_var = temp_var * 10 + (*buffer - 0x30);\n        is_number = true;\n      }\n      if (is_number) {\n        precision = temp_var;\n      }\n    }\n  }\n  temp_var = find_char_in_memory(&DAT_0800ab56,*buffer,3);\n  if (temp_var != 0) {\n    buffer = buffer + 1;\n    flags = flags | 0x40 << (temp_var + 0xf7ff54aaU & 0xff);\n  }\n  conversion_specifier = *buffer;\n  buffer = buffer + 1;\n  temp_var = find_char_in_memory(\"efgEFG\",conversion_specifier,6);\n  if (temp_var == 0) {\n    tmp = handle_integer_format(stream,&flags,format_string,0x8009359,&arg_ptr);\n    if (tmp == -1) goto LAB_08009568;\n  }\n  else {\n    arg_ptr = (int *)(((int)arg_ptr + 7U & 0xfffffff8) + 8);\n  }\n  total_length = total_length + tmp;\n  current_char = buffer;\n  goto LAB_080093be;\n}\n\n",
            "current_name": "print_formatted_string_0800937c",
            "entrypoint": "0x0800937c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800937c": "print_formatted_string_0800937c",
                "__sfputs_r": "sfputs_r",
                "__sinit": "initialize",
                "__swsetup_r": "setup_string_width",
                "_printf": "printf_helper",
                "_printf_i": "handle_integer_format",
                "bVar3": "is_number",
                "iVar1": "result",
                "iVar2": "arg_index",
                "iVar6": "temp_var",
                "local_30": "zero_flag",
                "local_45": "sign_flag",
                "local_6e": "plus_flag",
                "local_6f": "space_flag",
                "local_70": "conversion_specifier",
                "local_74": "total_length",
                "local_7c": "width",
                "local_80": "width",
                "local_84": "precision",
                "local_88": "flags",
                "local_8c": "arg_ptr",
                "memchr": "find_char_in_memory",
                "param_1": "stream",
                "param_2": "format_string",
                "param_3": "buffer",
                "param_4": "bytes_written",
                "pbVar4": "current_char",
                "pbVar5": "next_char",
                "piVar2": "ptr",
                "unaff_r9": "tmp"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080095a8": {
            "additional_data": {
                "FUN_080095a8": {
                    "convert_to_hex_string": 1,
                    "decode_and_process_data": 1,
                    "decode_data": 4,
                    "decode_param": 1,
                    "decompile_and_improve": 1,
                    "extract_data": 2,
                    "extract_meta_data": 1,
                    "parse_data": 3,
                    "process_data": 14
                },
                "bVar5": {
                    "check": 1,
                    "check_condition": 1,
                    "check_flag": 2,
                    "check_value": 1,
                    "condition": 6,
                    "flag": 5,
                    "is_condition_met": 6,
                    "is_condition_true": 2,
                    "is_flag_set": 2,
                    "is_true": 1,
                    "is_zero": 4
                },
                "byteN": {
                    "byte_val": 1
                },
                "iVar1": {
                    "callback_result": 1,
                    "index": 18,
                    "index1": 4,
                    "int_var1": 1,
                    "iteration": 1,
                    "loop_counter": 2,
                    "loop_index": 1,
                    "loop_index1": 1,
                    "loop_index_1": 1,
                    "result": 1
                },
                "iVar2": {
                    "callback_result": 3,
                    "index2": 4,
                    "int_var2": 1,
                    "loop_counter_2": 1,
                    "loop_index2": 1,
                    "loop_index_2": 1,
                    "result": 13,
                    "return_value": 7
                },
                "param_1": {
                    "arg1": 1,
                    "data": 3,
                    "data_1": 1,
                    "input": 14,
                    "input1": 1,
                    "input_arg": 1,
                    "input_buffer": 1,
                    "input_data": 4,
                    "input_param": 3,
                    "input_value": 2
                },
                "param_2": {
                    "array": 3,
                    "data": 10,
                    "data_arr": 1,
                    "data_array": 8,
                    "data_buffer": 1,
                    "header": 2,
                    "input2": 1,
                    "metadata": 2,
                    "param_array": 1,
                    "params": 1,
                    "values": 1
                },
                "param_3": {
                    "decoded_length": 1,
                    "length": 1,
                    "output": 7,
                    "output_length": 2,
                    "output_param": 3,
                    "output_size": 10,
                    "result": 5,
                    "result_count": 1,
                    "size_out": 1
                },
                "param_4": {
                    "arg4": 1,
                    "count_param": 1,
                    "data_2": 1,
                    "extra_param": 1,
                    "input3": 1,
                    "input_param": 1,
                    "param": 7,
                    "param4": 7,
                    "param_4": 7,
                    "param_var": 1,
                    "some_param": 1,
                    "unused": 1,
                    "val": 1
                },
                "param_5": {
                    "callback": 19,
                    "callback_func": 3,
                    "callback_function": 4,
                    "decoder": 1,
                    "function": 1,
                    "function_pointer": 1,
                    "process_byte": 1,
                    "processor": 1
                },
                "return": {
                    "return_value": 1
                },
                "uVar3": {
                    "byte_value": 1,
                    "header_length": 1,
                    "loop_terminator": 1,
                    "max_count": 1,
                    "max_element": 1,
                    "max_length": 1,
                    "max_output_length": 2,
                    "max_size": 10,
                    "max_value": 10,
                    "min_size": 1,
                    "min_value": 1,
                    "num_bytes": 1
                },
                "uVar4": {
                    "additional_size": 1,
                    "additional_value": 2,
                    "count": 1,
                    "counter": 1,
                    "extra_length": 1,
                    "increment": 1,
                    "length": 1,
                    "new_size": 1,
                    "offset": 13,
                    "secondary_value": 1,
                    "temp": 1,
                    "temp_length": 1,
                    "temp_offset": 1,
                    "temp_size": 1,
                    "temp_value": 1,
                    "u_var4": 1,
                    "value": 1,
                    "var1": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08009698"
            ],
            "code": "\nundefined4\ndecode_and_process_data_080095a8(undefined4 input,uint *data,uint *output_size,undefined4 param4,code *callback)\n\n{\n  int index;\n  int result;\n  uint max_size;\n  uint offset;\n  bool is_condition_met;\n  \n  max_size = data[4];\n  if ((int)data[4] < (int)data[2]) {\n    max_size = data[2];\n  }\n  *output_size = max_size;\n  if (*(char *)((int)data + 0x43) != '\\0') {\n    *output_size = max_size + 1;\n  }\n  if ((int)(*data << 0x1a) < 0) {\n    *output_size = *output_size + 2;\n  }\n  if ((*data & 6) == 0) {\n    for (index = 0; index < (int)(data[3] - *output_size); index = index + 1) {\n      result = (*callback)(input,param4,(int)data + 0x19,1);\n      if (result == -1) {\n        return_value 0xffffffff;\n      }\n    }\n  }\n  max_size = (uint)*(byte *)((int)data + 0x43);\n  if (max_size != 0) {\n    max_size = 1;\n  }\n  offset = max_size;\n  if ((int)(*data << 0x1a) < 0) {\n    *(undefined *)((int)data + max_size + 0x43) = 0x30;\n    offset = max_size + 2;\n    *(undefined *)((int)data + max_size + 0x44) = *(undefined *)((int)data + 0x45);\n  }\n  index = (*callback)(input,param4,(int)data + 0x43,offset);\n  if (index != -1) {\n    max_size = data[3];\n    is_condition_met = (*data & 6) != 4;\n    if (is_condition_met) {\n      max_size = 0;\n    }\n    offset = 0;\n    if (!is_condition_met) {\n      max_size = max_size - *output_size;\n    }\n    if (!is_condition_met) {\n      max_size = max_size & ~((int)max_size >> 0x1f);\n    }\n    if ((int)data[4] < (int)data[2]) {\n      max_size = max_size + (data[2] - data[4]);\n    }\n    while( true ) {\n      if (max_size == offset) {\n        return_value 0;\n      }\n      index = (*callback)(input,param4,(int)data + 0x1a,1);\n      if (index == -1) break;\n      offset = offset + 1;\n    }\n  }\n  return_value 0xffffffff;\n}\n\n",
            "current_name": "decode_and_process_data_080095a8",
            "entrypoint": "0x080095a8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080095a8": "decode_and_process_data_080095a8",
                "bVar5": "is_condition_met",
                "iVar1": "index",
                "iVar2": "result",
                "param_1": "input",
                "param_2": "data",
                "param_3": "output_size",
                "param_4": "param4",
                "param_5": "callback",
                "return": "return_value",
                "uVar3": "max_size",
                "uVar4": "offset"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009698": {
            "additional_data": {
                "FUN_08009698": {
                    "format_and_print": 1,
                    "format_print": 1,
                    "improved_printf": 1,
                    "print_formatted": 1,
                    "print_formatted_data": 5,
                    "print_formatted_message": 1,
                    "print_formatted_output": 8,
                    "print_formatted_string": 3,
                    "print_formatted_value": 9,
                    "reverse_and_print": 1
                },
                "_printf_": {
                    "formatted_print": 1
                },
                "_printf_common": {
                    "": 1,
                    "common_print_function": 1,
                    "printf_common": 1
                },
                "bVar1": {
                    "arg_spec_type": 1,
                    "arg_type": 1,
                    "byte_value": 9,
                    "char_byte": 2,
                    "first_arg_byte": 1,
                    "first_argument": 1,
                    "first_byte": 3,
                    "first_char": 1,
                    "flag": 1,
                    "format_char": 2,
                    "format_specifier": 2,
                    "format_type": 4,
                    "specifier": 1
                },
                "byte": {
                    "b_var1": 1
                },
                "char": {
                    "ch": 1
                },
                "iVar2": {
                    "count": 1,
                    "i": 3,
                    "index": 15,
                    "index_of_null_byte": 1,
                    "loop_index": 1,
                    "result": 7,
                    "return_value": 1
                },
                "iVar4": {
                    "char_count": 1,
                    "inner_index": 1,
                    "inner_result": 1,
                    "loop_variable": 1,
                    "output_result": 2,
                    "print_result": 2,
                    "printf_result": 2,
                    "putch_result": 1,
                    "res": 1,
                    "result": 11,
                    "result_code": 1,
                    "return_value": 1,
                    "status": 1,
                    "temp": 2,
                    "var4": 1,
                    "write_result": 1
                },
                "int": {
                    "i_var2": 1
                },
                "local_24": {
                    "arg_align": 1,
                    "arg_width": 1,
                    "args": 1,
                    "buffer": 2,
                    "conversion_count": 1,
                    "length": 1,
                    "local_array": 3,
                    "local_values": 1,
                    "min_width": 1,
                    "offsets": 1,
                    "output_buf": 1,
                    "output_info": 1,
                    "padding_info": 1,
                    "print_result": 1,
                    "result": 1,
                    "result_buffer": 1,
                    "size_array": 1,
                    "size_values": 1,
                    "string_lengths": 2,
                    "temp_buffer": 1,
                    "width_arr": 3,
                    "width_array": 1
                },
                "memchr": {
                    "find_null_byte": 1,
                    "find_null_character": 1
                },
                "memset": {
                    "memchr": 1
                },
                "param_1": {
                    "arg1": 2,
                    "format": 1,
                    "format_specifier": 1,
                    "format_str": 1,
                    "format_string": 23,
                    "param": 2
                },
                "param_2": {
                    "arg_list": 4,
                    "arg_spec": 1,
                    "arglist": 1,
                    "args": 10,
                    "arguments": 3,
                    "data": 1,
                    "flags": 1,
                    "format_args": 5,
                    "format_string": 3,
                    "input_array": 1
                },
                "param_3": {
                    "arg3": 2,
                    "arg_count": 2,
                    "arg_list": 1,
                    "arg_size": 1,
                    "arg_spec_len": 1,
                    "args_count": 2,
                    "field_width": 1,
                    "file_stream": 1,
                    "format_arg_num": 1,
                    "format_spec": 1,
                    "locale": 1,
                    "max_width": 1,
                    "nargs": 1,
                    "num_args": 2,
                    "num_arguments": 1,
                    "position": 1,
                    "stream": 1,
                    "width": 9
                },
                "param_4": {
                    "char_to_print": 1,
                    "format_func": 1,
                    "formatter_func": 1,
                    "output_func": 2,
                    "output_function": 6,
                    "print_func": 2,
                    "print_function": 13,
                    "printf_func": 1,
                    "putc_function": 1,
                    "putch_func": 1,
                    "putchar_func": 1
                },
                "param_5": {
                    "arg5": 1,
                    "arg_end": 1,
                    "arg_index": 1,
                    "arg_list_ptr": 1,
                    "arg_pointer": 1,
                    "arg_ptr": 5,
                    "arg_ptr_increment": 1,
                    "arg_ptr_ptr": 1,
                    "argptr": 1,
                    "buffer_ptr": 1,
                    "format_arg_ptr": 1,
                    "get_data_func": 1,
                    "io_file": 1,
                    "num_written": 1,
                    "output_arg": 1,
                    "output_args": 1,
                    "output_array": 1,
                    "output_function_data": 1,
                    "output_stream": 1,
                    "print_arg": 1,
                    "print_args": 2,
                    "print_function": 1,
                    "printer": 1,
                    "result": 1,
                    "write_data": 1
                },
                "pcVar11": {
                    "char_ptr2": 1,
                    "character_pointer": 1,
                    "current_char": 3,
                    "current_digit": 2,
                    "dest": 1,
                    "digit": 1,
                    "digit_ptr": 1,
                    "dst": 1,
                    "end_digit_ptr": 1,
                    "formatted_output_ptr": 1,
                    "formatted_string": 2,
                    "formatted_txt": 1,
                    "formatted_value": 2,
                    "new_str_ptr": 1,
                    "output": 1,
                    "output_pointer": 1,
                    "output_ptr": 1,
                    "p": 1,
                    "result_ptr": 1,
                    "str_ptr": 2,
                    "str_ptr1": 1,
                    "temp_ptr": 1,
                    "temp_string": 1
                },
                "pcVar12": {
                    "buffer": 1,
                    "current_char": 1,
                    "dst_end": 1,
                    "format": 2,
                    "format_buffer": 1,
                    "format_pointer": 1,
                    "format_ptr": 3,
                    "format_string_ptr": 1,
                    "formatted_output": 3,
                    "formatted_str": 1,
                    "formatted_string": 2,
                    "original_formatted_string": 1,
                    "output": 1,
                    "output_buffer": 2,
                    "output_ptr": 1,
                    "param2_1": 1,
                    "printed_txt": 1,
                    "result_string": 1,
                    "specifier_ptr": 1,
                    "str_ptr": 1,
                    "str_ptr2": 1,
                    "temp_string": 1
                },
                "pcVar5": {
                    "char_ptr": 1,
                    "character_string": 1,
                    "conversion_specifiers": 1,
                    "digit_set": 3,
                    "digit_str": 1,
                    "digit_string": 1,
                    "digits": 4,
                    "hex_array": 1,
                    "hex_chars": 5,
                    "hex_chars_pointer": 1,
                    "hex_digits": 9,
                    "num_table": 1
                },
                "ppcVar8": {
                    "char_pointer_array": 1,
                    "char_ptr_ptr": 2,
                    "ptr_to_ptr_of_string": 1,
                    "str_pointer": 1,
                    "str_ptr_ptr": 3,
                    "string_arg_ptr": 1,
                    "string_ptr": 2
                },
                "ppuVar7": {
                    "arg_list_ptr": 1,
                    "char_ptr_ptr": 2,
                    "func_pointer": 1,
                    "output_arg_ptr": 1,
                    "pointer_ptr": 1,
                    "print_func_ptr": 1,
                    "print_function_ptr": 1,
                    "ptr_ptr": 1,
                    "ptr_to_ptr": 1,
                    "string_pointer_array": 1
                },
                "printf_result": {
                    "formatted_output_length": 1
                },
                "puVar3": {
                    "arg_pointer": 1,
                    "arg_ptr": 5,
                    "arg_ptr_copy": 1,
                    "arg_ptr_new": 1,
                    "arg_ptr_temp": 1,
                    "arg_value": 1,
                    "argptr_temp": 1,
                    "args_ptr": 1,
                    "argument_ptr": 1,
                    "current_argument": 1,
                    "data_pointer": 1,
                    "data_ptr": 3,
                    "output_arg": 1,
                    "param_ptr": 1,
                    "pointer": 2,
                    "pointer_var": 1,
                    "ptr": 4,
                    "ptr_to_args": 1,
                    "var_pointer": 1
                },
                "uVar10": {
                    "arg_copy": 1,
                    "arg_length": 1,
                    "arg_value2": 1,
                    "arg_width": 1,
                    "base_copy": 1,
                    "length": 3,
                    "local_var": 1,
                    "original_arg": 1,
                    "original_width": 2,
                    "param2_2": 1,
                    "saved_value": 1,
                    "size": 1,
                    "string_length": 1,
                    "string_value_length": 1,
                    "temp": 1,
                    "temp_value": 3,
                    "temporary_value": 1,
                    "value": 1,
                    "value2": 1,
                    "width": 5
                },
                "uVar6": {
                    "base": 19,
                    "format_flags": 2,
                    "format_mask": 1,
                    "leading_zeros": 1,
                    "radix": 1,
                    "temp_var": 1,
                    "value": 4
                },
                "uVar9": {
                    "arg": 1,
                    "arg_sign": 1,
                    "arg_value": 1,
                    "integer_value": 1,
                    "length": 1,
                    "num": 1,
                    "num_bytes": 1,
                    "num_value": 2,
                    "number_abs": 1,
                    "output_length": 1,
                    "result": 3,
                    "temp_value": 1,
                    "value": 13,
                    "value1": 1,
                    "width": 1
                },
                "uint": {
                    "u_var6": 1
                }
            },
            "called": [
                "FUN_08009f2c",
                "FUN_080095a8"
            ],
            "calling": [
                "FUN_0800937c"
            ],
            "code": "\nu_var6 print_formatted_value_08009698(undefined4 format_string,u_var6 *args,undefined4 width,code *print_function,u_var6 **arg_ptr)\n\n{\n  b_var1 byte_value;\n  i_var2 index;\n  u_var6 *arg_ptr;\n  i_var2 result;\n  ch *hex_digits;\n  u_var6 base;\n  u_var6 **char_ptr_ptr;\n  ch **str_ptr_ptr;\n  u_var6 value;\n  u_var6 width;\n  ch *current_char;\n  ch *format_ptr;\n  u_var6 width_arr [2];\n  \n  byte_value = *(b_var1 *)(args + 6);\n  format_ptr = (ch *)((i_var2)args + 0x43);\n  if (byte_value != 0x6e) {\n    if (byte_value < 0x6f) {\n      if (byte_value != 99) {\n        if (byte_value < 100) {\n          if (byte_value == 0) goto LAB_08009852;\n          if (byte_value != 0x58) goto LAB_080096c8;\n          *(undefined *)((i_var2)args + 0x45) = 0x58;\n          hex_digits = \"0123456789ABCDEF\";\nLAB_080097e2:\n          base = *args;\n          arg_ptr = *arg_ptr;\n          *arg_ptr = arg_ptr + 1;\n          if (((base & 0x80) == 0) && ((i_var2)(base << 0x19) < 0)) {\n            value = (u_var6)*(ushort *)arg_ptr;\n          }\n          else {\n            value = *arg_ptr;\n          }\n          if ((i_var2)(base << 0x1f) < 0) {\n            *args = base | 0x20;\n          }\n          if (value == 0) {\n            *args = *args & 0xffffffdf;\n          }\n          base = 0x10;\nLAB_08009778:\n          *(undefined *)((i_var2)args + 0x43) = 0;\n        }\n        else {\n          if ((byte_value != 100) && (byte_value != 0x69)) goto LAB_080096c8;\n          value = *args;\n          arg_ptr = *arg_ptr;\n          if ((value & 0x80) == 0) {\n            *arg_ptr = arg_ptr + 1;\n            if ((value & 0x40) == 0) goto LAB_080096e8;\n            value = (u_var6)(short)*(ushort *)arg_ptr;\n          }\n          else {\n            *arg_ptr = arg_ptr + 1;\nLAB_080096e8:\n            value = *arg_ptr;\n          }\n          if ((i_var2)value < 0) {\n            value = -value;\n            *(undefined *)((i_var2)args + 0x43) = 0x2d;\n          }\n          hex_digits = \"0123456789ABCDEF\";\n          base = 10;\n        }\n        width = args[1];\n        args[2] = width;\n        current_char = format_ptr;\n        if ((i_var2)width < 0) {\n          if (value != 0) goto LAB_08009816;\nLAB_080098c4:\n          *(ch *)((i_var2)args + 0x42) = *hex_digits;\n          current_char = (ch *)((i_var2)args + 0x42);\n        }\n        else {\n          *args = *args & 0xfffffffb;\n          if (value == 0) {\n            if (width != 0) goto LAB_080098c4;\n          }\n          else {\nLAB_08009816:\n            do {\n              width = value / base;\n              current_char = current_char + -1;\n              *current_char = hex_digits[value - base * width];\n              value = width;\n            } while (width != 0);\n          }\n        }\n        if (((base == 8) && ((i_var2)(*args << 0x1f) < 0)) && ((i_var2)args[1] <= (i_var2)args[4]))\n        {\n          current_char[-1] = '0';\n          current_char = current_char + -1;\n        }\n        args[4] = (i_var2)format_ptr - (i_var2)current_char;\n        format_ptr = current_char;\n        goto LAB_080097be;\n      }\n      arg_ptr = *arg_ptr;\n      *arg_ptr = arg_ptr + 1;\n      *(ch *)((i_var2)args + 0x42) = (ch)*arg_ptr;\nLAB_08009728:\n      format_ptr = (ch *)((i_var2)args + 0x42);\n      value = 1;\n    }\n    else {\n      if (byte_value != 0x73) {\n        if (byte_value < 0x74) {\n          if (byte_value == 0x6f) {\nLAB_0800974e:\n            value = *args;\n            arg_ptr = *arg_ptr;\n            if ((value & 0x80) == 0) {\n              *arg_ptr = arg_ptr + 1;\n              if ((value & 0x40) == 0) goto LAB_0800975c;\n              value = (u_var6)*(ushort *)arg_ptr;\n            }\n            else {\n              *arg_ptr = arg_ptr + 1;\nLAB_0800975c:\n              value = *arg_ptr;\n            }\n            if (byte_value == 0x6f) {\n              base = 8;\n            }\n            else {\n              base = 10;\n            }\n            hex_digits = \"0123456789ABCDEF\";\n            goto LAB_08009778;\n          }\n          if (byte_value == 0x70) {\n            *args = *args | 0x20;\nLAB_0800970e:\n            hex_digits = \"0123456789abcdef\";\n            *(undefined *)((i_var2)args + 0x45) = 0x78;\n            goto LAB_080097e2;\n          }\n        }\n        else {\n          if (byte_value == 0x75) goto LAB_0800974e;\n          if (byte_value == 0x78) goto LAB_0800970e;\n        }\nLAB_080096c8:\n        *(b_var1 *)((i_var2)args + 0x42) = byte_value;\n        goto LAB_08009728;\n      }\n      str_ptr_ptr = (ch **)*arg_ptr;\n      *arg_ptr = (u_var6 *)(str_ptr_ptr + 1);\n      format_ptr = *str_ptr_ptr;\n      index = find_null_character(format_ptr,0,args[1]);\n      if (index != 0) {\n        args[1] = index - (i_var2)format_ptr;\n      }\n      value = args[1];\n    }\n    args[4] = value;\n    *(undefined *)((i_var2)args + 0x43) = 0;\n    goto LAB_080097be;\n  }\n  value = *args;\n  char_ptr_ptr = (u_var6 **)*arg_ptr;\n  base = args[5];\n  if ((value & 0x80) == 0) {\n    *arg_ptr = (u_var6 *)(char_ptr_ptr + 1);\n    arg_ptr = *char_ptr_ptr;\n    if ((value & 0x40) == 0) goto LAB_0800983e;\n    *(short *)arg_ptr = (short)base;\n  }\n  else {\n    *arg_ptr = (u_var6 *)(char_ptr_ptr + 1);\n    arg_ptr = *char_ptr_ptr;\nLAB_0800983e:\n    *arg_ptr = base;\n  }\nLAB_08009852:\n  args[4] = 0;\nLAB_080097be:\n  index = formatted_printcommon(format_string,args,width_arr,width,print_function);\n  if ((index == -1) || (index = (*print_function)(format_string,width,format_ptr,args[4]), index == -1)) {\nLAB_080097d2:\n    value = 0xffffffff;\n  }\n  else {\n    if ((i_var2)(*args << 0x1e) < 0) {\n      for (index = 0; index < (i_var2)(args[3] - width_arr[0]); index = index + 1) {\n        result = (*print_function)(format_string,width,(i_var2)args + 0x19,1);\n        if (result == -1) goto LAB_080097d2;\n      }\n    }\n    value = args[3];\n    if ((i_var2)args[3] < (i_var2)width_arr[0]) {\n      value = width_arr[0];\n    }\n  }\n  return value;\n}\n\n",
            "current_name": "print_formatted_value_08009698",
            "entrypoint": "0x08009698",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009698": "print_formatted_value_08009698",
                "_printf_": "formatted_print",
                "bVar1": "byte_value",
                "byte": "b_var1",
                "char": "ch",
                "iVar2": "index",
                "iVar4": "result",
                "int": "i_var2",
                "local_24": "width_arr",
                "memchr": "find_null_character",
                "param_1": "format_string",
                "param_2": "args",
                "param_3": "width",
                "param_4": "print_function",
                "param_5": "arg_ptr",
                "pcVar11": "current_char",
                "pcVar12": "format_ptr",
                "pcVar5": "hex_digits",
                "ppcVar8": "str_ptr_ptr",
                "ppuVar7": "char_ptr_ptr",
                "puVar3": "arg_ptr",
                "uVar10": "width",
                "uVar6": "base",
                "uVar9": "value",
                "uint": "u_var6"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080098d8": {
            "additional_data": {
                "FUN_080098d8": {
                    "format_and_print": 3,
                    "print_formatted": 1,
                    "print_formatted_data": 4,
                    "print_formatted_message": 1,
                    "print_formatted_output": 9,
                    "print_formatted_string": 11,
                    "print_formatted_text": 1,
                    "print_results": 1
                },
                "__sinit": {
                    "initialize_data_structure": 1
                },
                "_vfiprintf_r": {
                    "print_formatted_data": 1
                },
                "iVar1": {
                    "base_address": 1,
                    "data": 2,
                    "data_address": 5,
                    "data_content": 1,
                    "data_pointer": 3,
                    "data_ptr": 9,
                    "data_segment_address": 1,
                    "data_struct": 1,
                    "data_structure": 2,
                    "data_structure_ptr": 1,
                    "file_descriptor": 2,
                    "format_specifier": 1,
                    "print_handler": 1,
                    "stream_handle": 1
                },
                "param_1": {
                    "format": 1,
                    "format_specifier": 2,
                    "format_string": 22,
                    "message_format": 1,
                    "output_stream": 2,
                    "param_a": 1,
                    "str_format": 1,
                    "string": 1
                },
                "param_2": {
                    "arg1": 19,
                    "arg_1": 3,
                    "argument1": 1,
                    "argument_1": 2,
                    "format_string": 1,
                    "integer1": 1,
                    "param2": 1,
                    "param_2": 1,
                    "param_b": 1,
                    "parameter1": 1
                },
                "param_3": {
                    "arg1": 1,
                    "arg2": 19,
                    "arg_2": 3,
                    "argument2": 1,
                    "argument_2": 2,
                    "integer2": 1,
                    "param3": 1,
                    "param_3": 1,
                    "param_c": 1,
                    "parameter2": 1
                },
                "param_4": {
                    "arg2": 1,
                    "arg3": 19,
                    "arg_3": 3,
                    "argument3": 1,
                    "argument_3": 2,
                    "integer3": 1,
                    "param4": 1,
                    "param_4": 1,
                    "param_d": 1,
                    "parameter3": 1
                },
                "uStack_4": {
                    "arg3_backup": 1,
                    "arg3_copy": 8,
                    "arg3_ptr": 5,
                    "arg_3_copy": 2,
                    "arg_3_temp": 1,
                    "argument3_copy": 1,
                    "integer3": 1,
                    "param_4_copy": 1,
                    "param_d_copy": 1,
                    "stack_var3": 1
                },
                "uStack_8": {
                    "arg2_backup": 1,
                    "arg2_copy": 8,
                    "arg2_ptr": 5,
                    "arg_2_copy": 2,
                    "arg_2_temp": 1,
                    "argument2_copy": 1,
                    "integer2": 1,
                    "param_3_copy": 1,
                    "param_c_copy": 1,
                    "stack_var2": 1
                },
                "uStack_c": {
                    "arg1_backup": 1,
                    "arg1_copy": 9,
                    "arg1_ptr": 5,
                    "arg_1_copy": 2,
                    "arg_1_temp": 1,
                    "argument1_copy": 1,
                    "integer1": 1,
                    "param_2_copy": 1,
                    "param_b_copy": 1,
                    "stack_var1": 1
                },
                "uVar2": {
                    "format": 2,
                    "format_address": 1,
                    "format_arg": 1,
                    "format_ptr": 8,
                    "format_specifier": 1,
                    "format_specifier_copy": 2,
                    "format_string_address": 1,
                    "format_string_copy": 5,
                    "format_string_ptr": 2,
                    "output_stream_copy": 1,
                    "param1_copy": 1,
                    "param_1_backup": 1,
                    "param_1_copy": 1,
                    "param_a_copy": 1,
                    "param_ptr": 1,
                    "string": 1,
                    "temp_var": 1
                }
            },
            "called": [
                "FUN_08009d50",
                "FUN_0800937c"
            ],
            "calling": [
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08007594",
                "FUN_08007544",
                "FUN_080075dc"
            ],
            "code": "\nvoid print_formatted_string_080098d8(undefined4 format_string,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  int data_ptr;\n  undefined4 format_ptr;\n  undefined4 arg1_copy;\n  undefined4 arg2_copy;\n  undefined4 arg3_copy;\n  \n  data_ptr = DAT_20000090;\n  format_ptr = format_string;\n  arg1_copy = arg1;\n  arg2_copy = arg2;\n  arg3_copy = arg3;\n  if ((DAT_20000090 != 0) && (*(int *)(DAT_20000090 + 0x18) == 0)) {\n    initialize_data_structure(DAT_20000090);\n  }\n  print_formatted_data(data_ptr,*(undefined4 *)(data_ptr + 8),format_string,&arg1_copy,format_ptr,&arg1_copy);\n  return;\n}\n\n",
            "current_name": "print_formatted_string_080098d8",
            "entrypoint": "0x080098d8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080098d8": "print_formatted_string_080098d8",
                "__sinit": "initialize_data_structure",
                "_vfiprintf_r": "print_formatted_data",
                "iVar1": "data_ptr",
                "param_1": "format_string",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3",
                "uStack_4": "arg3_copy",
                "uStack_8": "arg2_copy",
                "uStack_c": "arg1_copy",
                "uVar2": "format_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009908": {
            "additional_data": {
                "DAT_20000090": {
                    "allocation_flags": 1
                },
                "FUN_080091b0": {
                    "initialize_memory": 1
                },
                "FUN_080091d8": {
                    "free_r": 1
                },
                "FUN_08009270": {
                    "malloc_usable_size_r": 1
                },
                "FUN_08009908": {
                    "allocate_and_copy_memory": 1,
                    "allocate_memory": 1,
                    "allocate_or_copy_data": 1,
                    "allocate_or_copy_memory": 10,
                    "allocate_or_resize_memory": 1,
                    "malloc_or_copy": 1,
                    "memory_management": 1,
                    "memory_operation": 1,
                    "realloc_memory": 1,
                    "realloc_or_malloc": 3,
                    "resize_and_copy_memory": 4,
                    "resize_buffer": 1,
                    "resize_memory": 2,
                    "resize_memory_block": 3
                },
                "FUN_0800a154": {
                    "malloc_r": 1
                },
                "_free_r": {
                    "free_mem": 1,
                    "free_memory": 1,
                    "free_memory_r": 1,
                    "free_r": 1,
                    "release_memory": 1
                },
                "_malloc_r": {
                    "alloc_mem": 1,
                    "allocate_memory": 2,
                    "allocate_memory_r": 1,
                    "malloc_r": 1
                },
                "_malloc_usable_size_r": {
                    "get_current_size": 1,
                    "get_usable_size": 2,
                    "get_usable_size_r": 1,
                    "malloc_usable_size_r": 1
                },
                "iVar2": {
                    "destination": 3,
                    "destination_address": 1,
                    "destination_memory": 1,
                    "destination_ptr": 1,
                    "dst": 1,
                    "dst_pointer": 1,
                    "new_block": 2,
                    "new_pointer": 1,
                    "new_ptr": 1,
                    "output_data": 1,
                    "result": 17,
                    "result_buffer": 1
                },
                "memcpy": {
                    "copy_memory": 5
                },
                "param_1": {
                    "buffer": 1,
                    "existing_block": 1,
                    "input_data": 1,
                    "old_block": 2,
                    "old_ptr": 1,
                    "original_buffer": 1,
                    "pointer": 1,
                    "ptr": 1,
                    "source": 14,
                    "source_address": 1,
                    "source_buffer": 1,
                    "source_memory": 3,
                    "source_ptr": 1,
                    "src": 1,
                    "src_pointer": 1
                },
                "param_2": {
                    "input_size": 1,
                    "new_size": 9,
                    "size": 21
                },
                "uVar1": {
                    "alloc_size": 2,
                    "allocation_type": 1,
                    "context": 1,
                    "default_allocation_flag": 1,
                    "default_allocator": 1,
                    "default_size": 1,
                    "flags_copy": 1,
                    "initial_alloc": 1,
                    "initial_size": 1,
                    "malloc_context": 1,
                    "malloc_flag": 3,
                    "malloc_r_block": 1,
                    "malloc_r_flags": 1,
                    "malloc_r_value": 1,
                    "mem": 1,
                    "mem_size": 1,
                    "mem_type": 1,
                    "memory_manager": 1,
                    "old_size": 2,
                    "original_malloc_size": 1,
                    "original_source": 1,
                    "ptr": 1,
                    "saved_value": 1,
                    "temp": 2,
                    "temp_var": 2
                },
                "uVar3": {
                    "current_size": 3,
                    "existing_size": 2,
                    "malloc_size": 1,
                    "old_size": 2,
                    "original_size": 1,
                    "source_size": 1,
                    "src_size": 1,
                    "usable_size": 20
                }
            },
            "called": [
                "FUN_080091b0",
                "FUN_0800a154",
                "FUN_08009270",
                "FUN_080091d8"
            ],
            "calling": [
                "FUN_080027f0",
                "FUN_0800288c",
                "FUN_08002acc"
            ],
            "code": "\nint allocate_or_copy_memory_08009908(int source,uint size)\n\n{\n  undefined4 malloc_flag;\n  int result;\n  uint usable_size;\n  \n  malloc_flag = DAT_20000090;\n  if (source != 0) {\n    if (size == 0) {\n      free_mem();\n      result = 0;\n    }\n    else {\n      usable_size = get_usable_size();\n      result = source;\n      if ((usable_size < size) && (result = allocate_memory(malloc_flag,size), result != 0)) {\n        copy_memory(result,source,size);\n        free_mem(malloc_flag,source);\n      }\n    }\n    return result;\n  }\n  result = allocate_memory(DAT_20000090,size,size,&DAT_20000090);\n  return result;\n}\n\n",
            "current_name": "allocate_or_copy_memory_08009908",
            "entrypoint": "0x08009908",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009908": "allocate_or_copy_memory_08009908",
                "_free_r": "free_mem",
                "_malloc_r": "allocate_memory",
                "_malloc_usable_size_r": "get_usable_size",
                "iVar2": "result",
                "memcpy": "copy_memory",
                "param_1": "source",
                "param_2": "size",
                "uVar1": "malloc_flag",
                "uVar3": "usable_size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009918": {
            "additional_data": {
                "FUN_08008804": {
                    "get_memory_block": 1
                },
                "FUN_08009918": {
                    "allocate_dynamic_memory": 1,
                    "allocate_memory": 23,
                    "initialize_memory": 6,
                    "initialize_memory_allocation": 1
                },
                "iVar1": {
                    "allocated_address": 2,
                    "allocated_memory": 6,
                    "allocation_result": 13,
                    "brk_result": 1,
                    "brk_return_value": 1,
                    "memory_address": 3,
                    "memory_allocation": 1,
                    "memory_allocation_result": 1,
                    "sbrk_result": 1
                },
                "param_1": {
                    "buffer": 1,
                    "memory_address": 4,
                    "memory_pointer": 2,
                    "output_address": 2,
                    "output_buffer": 1,
                    "output_pointer": 2,
                    "output_ptr": 2,
                    "pointer": 1,
                    "result": 10,
                    "result_pointer": 2,
                    "result_ptr": 4
                },
                "param_2": {
                    "allocation_size": 4,
                    "block_size": 1,
                    "length": 1,
                    "memory_size": 4,
                    "size": 21
                }
            },
            "called": [
                "FUN_08008804"
            ],
            "calling": [
                "FUN_08009270"
            ],
            "code": "\nvoid allocate_dynamic_memory_08009918(int *result,undefined4 size)\n\n{\n  int allocation_result;\n  \n  DAT_20000a38 = 0;\n  allocation_result = _sbrk(size);\n  if ((allocation_result == -1) && (DAT_20000a38 != 0)) {\n    *result = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "current_name": "allocate_dynamic_memory_08009918",
            "entrypoint": "0x08009918",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009918": "allocate_dynamic_memory_08009918",
                "iVar1": "allocation_result",
                "param_1": "result",
                "param_2": "size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009938": {
            "additional_data": {
                "FUN_08009938": {
                    "find_char": 1,
                    "find_char_in_string": 6,
                    "find_character": 12,
                    "find_character_in_string": 2,
                    "find_first_char": 2,
                    "find_first_character": 1,
                    "find_first_occurrence": 7
                },
                "param_1": {
                    "input_string": 3,
                    "str": 5,
                    "string": 23
                },
                "param_2": {
                    "ch": 1,
                    "character": 21,
                    "search_char": 1,
                    "target": 1,
                    "target_char": 6,
                    "target_character": 1
                },
                "pcVar1": {
                    "current_char": 22,
                    "current_character": 6
                }
            },
            "called": [],
            "calling": [
                "FUN_0800997e"
            ],
            "code": "\nchar * find_character_in_string_08009938(char *string,char character)\n\n{\n  char *current_char;\n  \n  do {\n    current_char = string;\n    if (*current_char == '\\0') {\n      if (character != '\\0') {\n        current_char = (char *)0x0;\n      }\n      return current_char;\n    }\n    string = current_char + 1;\n  } while (character != *current_char);\n  return current_char;\n}\n\n",
            "current_name": "find_character_in_string_08009938",
            "entrypoint": "0x08009938",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009938": "find_character_in_string_08009938",
                "param_1": "string",
                "param_2": "character",
                "pcVar1": "current_char"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009954": {
            "additional_data": {
                "FUN_08009954": {
                    "copy_and_pad_string": 2,
                    "copy_string": 21,
                    "copy_string_with_length": 1,
                    "copy_string_with_limit": 3,
                    "copy_string_with_null_terminator": 3,
                    "copy_string_with_terminator": 1
                },
                "cVar1": {
                    "current_char": 28,
                    "current_character": 3
                },
                "iVar2": {
                    "count": 4,
                    "remaining_chars": 1,
                    "remaining_length": 20,
                    "remaining_limit": 1,
                    "remaining_size": 4,
                    "size": 1
                },
                "param_1": {
                    "dest": 2,
                    "destination": 26,
                    "destination_string": 1,
                    "dst": 1,
                    "source": 1
                },
                "param_2": {
                    "destination": 1,
                    "source": 26,
                    "source_string": 1,
                    "src": 3
                },
                "param_3": {
                    "length": 25,
                    "limit": 2,
                    "max_size": 1,
                    "size": 3
                },
                "pcVar3": {
                    "current_dest": 2,
                    "current_destination": 4,
                    "dest_pointer": 3,
                    "dest_ptr": 11,
                    "destination_pointer": 1,
                    "destination_ptr": 4,
                    "dst": 1,
                    "dst_ptr": 4
                }
            },
            "called": [],
            "calling": [
                "FUN_08002e44"
            ],
            "code": "\nvoid copy_string_with_limit_08009954(char *destination,char *source,int length)\n\n{\n  char current_char;\n  int remaining_length;\n  char *dest_ptr;\n  \n  do {\n    dest_ptr = destination;\n    remaining_length = length;\n    if (remaining_length == 0) {\n      return;\n    }\n    current_char = *source;\n    destination = dest_ptr + 1;\n    *dest_ptr = current_char;\n    source = source + 1;\n    length = remaining_length + -1;\n  } while (current_char != '\\0');\n  for (; destination != dest_ptr + remaining_length; destination = destination + 1) {\n    *destination = '\\0';\n  }\n  return;\n}\n\n",
            "current_name": "copy_string_with_limit_08009954",
            "entrypoint": "0x08009954",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009954": "copy_string_with_limit_08009954",
                "cVar1": "current_char",
                "iVar2": "remaining_length",
                "param_1": "destination",
                "param_2": "source",
                "param_3": "length",
                "pcVar3": "dest_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800997e": {
            "additional_data": {
                "FUN_08009938": {
                    "strchr": 1
                },
                "FUN_0800997e": {
                    "find_last_occurrence": 29,
                    "search_last_occurrence": 2
                },
                "iVar1": {
                    "current_occurrence": 1,
                    "found_index": 2,
                    "last_occurrence": 15,
                    "last_occurrence_index": 4,
                    "occurrence": 4,
                    "occurrence_index": 2,
                    "occurrence_position": 1,
                    "ptr_i_var1": 1
                },
                "iVar2": {
                    "last_index": 1,
                    "last_occurrence": 8,
                    "last_occurrence_index": 2,
                    "last_occurrence_position": 1,
                    "prev_occurrence": 1,
                    "previous_occurrence": 12,
                    "previous_occurrence_index": 2,
                    "result": 3
                },
                "param_1": {
                    "input_string": 4,
                    "str": 11,
                    "string": 16
                },
                "param_2": {
                    "ch": 1,
                    "character": 16,
                    "search_char": 1,
                    "target": 2,
                    "target_char": 9,
                    "target_character": 2
                },
                "param_3": {
                    "arg1": 1,
                    "delimiter": 1,
                    "first_search_position": 1,
                    "ignore_char_1": 1,
                    "length": 1,
                    "lower_bound": 1,
                    "param3": 3,
                    "param_3": 4,
                    "param_a": 1,
                    "parameter_1": 1,
                    "parameter_3": 1,
                    "search_start": 1,
                    "size": 1,
                    "size1": 1,
                    "size_to_search": 1,
                    "start": 1,
                    "start_index": 6,
                    "start_pos": 1,
                    "start_position": 1,
                    "start_search": 1,
                    "strchr_param_1": 1
                },
                "param_4": {
                    "arg2": 1,
                    "end": 1,
                    "end_delimiter": 1,
                    "end_index": 6,
                    "end_pos": 1,
                    "end_position": 1,
                    "end_search": 1,
                    "ignore_char_2": 1,
                    "last_search_position": 1,
                    "offset": 2,
                    "param4": 3,
                    "param_4": 4,
                    "param_b": 1,
                    "parameter_2": 1,
                    "parameter_4": 1,
                    "position": 1,
                    "search_end": 1,
                    "size2": 1,
                    "strchr_param_2": 1,
                    "upper_bound": 1
                }
            },
            "called": [
                "FUN_08009938"
            ],
            "calling": [
                "FUN_08002e44"
            ],
            "code": "\nint find_last_occurrence_0800997e(int string,int character,undefined4 start_index,undefined4 end_index)\n\n{\n  int last_occurrence;\n  int previous_occurrence;\n  \n  if (character != 0) {\n    previous_occurrence = 0;\n    while (last_occurrence = strchr(string,character,start_index,string,end_index), last_occurrence != 0) {\n      string = last_occurrence + 1;\n      previous_occurrence = last_occurrence;\n    }\n    return previous_occurrence;\n  }\n  previous_occurrence = strchr();\n  return previous_occurrence;\n}\n\n",
            "current_name": "find_last_occurrence_0800997e",
            "entrypoint": "0x0800997e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800997e": "find_last_occurrence_0800997e",
                "iVar1": "last_occurrence",
                "iVar2": "previous_occurrence",
                "param_1": "string",
                "param_2": "character",
                "param_3": "start_index",
                "param_4": "end_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080099a4": {
            "additional_data": {
                "FUN_080099a4": {
                    "find_common_prefix": 2,
                    "find_first_match": 1,
                    "find_first_substring": 2,
                    "find_string_match": 1,
                    "find_substring": 25
                },
                "param_1": {
                    "input_string": 1,
                    "source_string": 2,
                    "str": 1,
                    "str1": 4,
                    "string": 3,
                    "string1": 13,
                    "string1_temp": 1,
                    "string_1": 6
                },
                "param_2": {
                    "str2": 4,
                    "string2": 14,
                    "string_2": 6,
                    "substr": 1,
                    "substring": 4,
                    "target_string": 2
                },
                "pcVar1": {
                    "cur_char": 1,
                    "curr_char": 1,
                    "curr_char1": 1,
                    "curr_char1_temp": 1,
                    "curr_char_str1": 1,
                    "current_char": 6,
                    "current_char1": 8,
                    "current_char_1": 5,
                    "current_char_input": 1,
                    "current_char_str1": 1,
                    "ptr_string1": 1,
                    "s1_ptr": 1,
                    "source_char_ptr": 1,
                    "source_ptr": 1,
                    "str_ptr": 1
                },
                "pcVar2": {
                    "compared_char_str": 1,
                    "cur_char_compare": 1,
                    "curr_char2": 2,
                    "curr_char_str2": 1,
                    "current_char2": 9,
                    "current_char_2": 5,
                    "current_char_str2": 1,
                    "current_char_substring": 1,
                    "current_substring_char": 1,
                    "ptr_string1_prev": 1,
                    "s2_ptr": 1,
                    "source_prev_char_ptr": 1,
                    "str1_char": 1,
                    "str1_previous": 1,
                    "sub_char": 1,
                    "substr_char": 1,
                    "substr_ptr": 1,
                    "target_ptr": 1
                },
                "pcVar3": {
                    "compared_char_sub": 1,
                    "curr_char2_old": 1,
                    "curr_char2_temp": 1,
                    "current_char2_copy": 1,
                    "current_char2_previous": 1,
                    "current_char2_ptr": 1,
                    "current_char3": 1,
                    "current_char_2_copy": 1,
                    "current_char_2_cp": 1,
                    "current_char_2_cpy": 1,
                    "current_char_3": 1,
                    "current_substring": 1,
                    "current_substring_char": 2,
                    "next_char2": 4,
                    "next_char_2": 1,
                    "next_char_str2": 1,
                    "next_char_substring": 1,
                    "prev_char_str2": 1,
                    "ptr_string2_prev": 1,
                    "str2_char": 1,
                    "str2_previous": 1,
                    "sub_ptr": 1,
                    "substring_compare": 1,
                    "target_end_ptr": 1,
                    "target_prev_char_ptr": 1,
                    "temp_ptr": 1,
                    "temp_substr_ptr": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08002e44"
            ],
            "code": "\nchar * find_first_substring_080099a4(char *string1,char *string2)\n\n{\n  char *current_char1;\n  char *current_char2;\n  char *next_char2;\n  \n  if (*string1 == '\\0') {\n    if (*string2 != '\\0') {\n      string1 = (char *)0x0;\n    }\n    return string1;\n  }\n  do {\n    current_char1 = string1;\n    if (*current_char1 == '\\0') {\n      return (char *)0x0;\n    }\n    next_char2 = string2 + -1;\n    current_char2 = current_char1 + -1;\n    do {\n      next_char2 = next_char2 + 1;\n      if (*next_char2 == '\\0') {\n        return current_char1;\n      }\n      current_char2 = current_char2 + 1;\n      string1 = current_char1 + 1;\n    } while (*current_char2 == *next_char2);\n  } while( true );\n}\n\n",
            "current_name": "find_first_substring_080099a4",
            "entrypoint": "0x080099a4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080099a4": "find_first_substring_080099a4",
                "param_1": "string1",
                "param_2": "string2",
                "pcVar1": "current_char1",
                "pcVar2": "current_char2",
                "pcVar3": "next_char2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009a80": {
            "additional_data": {
                "0xffffffff": {
                    "constant5": 1
                },
                "9": {
                    "constant4": 1
                },
                "FUN_080091d8": {
                    "func_c": 1,
                    "function3": 1,
                    "function_3": 1,
                    "perform_operation": 1,
                    "process_another_subfunction": 1,
                    "process_buffer": 1,
                    "process_data_with_params": 1,
                    "process_subfunction_2": 1,
                    "update": 1
                },
                "FUN_08009a80": {
                    "decode_and_modify_data": 1,
                    "decode_and_process": 1,
                    "decode_and_process_data": 2,
                    "parse_data": 1,
                    "process_data": 18,
                    "process_data_stream": 1,
                    "process_input": 1,
                    "process_param": 1,
                    "process_parameter": 1,
                    "update_param": 1
                },
                "FUN_08009d50": {
                    "func_a": 1,
                    "function1": 1,
                    "function_1": 1,
                    "handle_exception": 1,
                    "initialize": 1,
                    "initialize_buffer": 1,
                    "initialize_data": 1,
                    "initialize_output": 2
                },
                "FUN_08009eac": {
                    "calculate": 1,
                    "calculate_value": 1,
                    "func_b": 1,
                    "function2": 1,
                    "function_2": 1,
                    "process_data_with_int": 1,
                    "process_input": 1,
                    "process_subfunction": 1,
                    "process_subfunction_1": 1
                },
                "__free_r": {
                    "free_memory": 1
                },
                "__sinit": {
                    "initialize": 4,
                    "initialize_context": 1,
                    "initialize_data": 10
                },
                "__smakebuf_r": {
                    "allocate_buffer": 1,
                    "create_buffer": 5,
                    "make_buffer": 9
                },
                "_free_r": {
                    "free": 1,
                    "free_memory": 11,
                    "release_memory": 1
                },
                "iVar1": {
                    "base_address": 1,
                    "context_address": 1,
                    "data": 2,
                    "data_addr": 1,
                    "data_address": 8,
                    "data_location": 1,
                    "data_offset": 2,
                    "data_pointer": 3,
                    "data_ptr": 7,
                    "data_segment": 1,
                    "data_start": 1,
                    "data_start_address": 1,
                    "ptr": 1,
                    "var1": 1
                },
                "param_1": {
                    "dest": 1,
                    "output": 5,
                    "output1": 3,
                    "output_array": 1,
                    "output_buffer": 3,
                    "output_data": 1,
                    "output_param": 7,
                    "output_pointer": 1,
                    "output_ptr": 3,
                    "param_array": 1,
                    "param_input": 1,
                    "result": 3
                },
                "param_2": {
                    "data": 2,
                    "data_pointer": 1,
                    "input": 5,
                    "input1": 3,
                    "input_array": 1,
                    "input_buffer": 3,
                    "input_data": 1,
                    "input_param": 7,
                    "input_pointer": 1,
                    "input_ptr": 3,
                    "param2_array": 1,
                    "param_data": 1,
                    "source": 1
                },
                "uVar2": {
                    "data_value": 2,
                    "result": 22,
                    "result_code": 1,
                    "return_value": 1,
                    "temp_var": 1,
                    "value": 3,
                    "var2": 1
                },
                "uVar3": {
                    "data_flag": 1,
                    "flag": 1,
                    "flag_value": 1,
                    "flags": 14,
                    "input2": 1,
                    "input_value": 1,
                    "param2_value": 1,
                    "temp": 2,
                    "temp_value": 1,
                    "ushort_val": 1,
                    "ushort_value": 2,
                    "value": 4,
                    "var3": 1
                }
            },
            "called": [
                "FUN_08009d50",
                "FUN_08009eac",
                "FUN_080091d8"
            ],
            "calling": [
                "FUN_0800937c",
                "FUN_0800932c"
            ],
            "code": "\nuint decode_and_process_data_08009a80(undefined4 *output_param,undefined4 *input_param)\n\n{\n  int data_address;\n  uint result;\n  ushort flags;\n  \n  data_address = DAT_20000090;\n  if ((DAT_20000090 != 0) && (*(int *)(DAT_20000090 + 0x18) == 0)) {\n    initialize_data(DAT_20000090);\n  }\n  if (input_param == &DAT_0800aba4) {\n    input_param = *(undefined4 **)(data_address + 4);\n  }\n  else if (input_param == (undefined4 *)&DAT_0800abc4) {\n    input_param = *(undefined4 **)(data_address + 8);\n  }\n  else if (input_param == (undefined4 *)&DAT_0800ab84) {\n    input_param = *(undefined4 **)(data_address + 0xc);\n  }\n  flags = *(ushort *)(input_param + 3);\n  result = (uint)flags;\n  if (-1 < (int)(result << 0x1c)) {\n    if (-1 < (int)(result << 0x1b)) {\n      *output_param = 9;\n      goto LAB_08009ab0;\n    }\n    if ((int)(result << 0x1d) < 0) {\n      if ((undefined4 *)input_param[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)input_param[0xd] != input_param + 0x11) {\n          free_memory(output_param);\n        }\n        input_param[0xd] = 0;\n      }\n      *(ushort *)(input_param + 3) = *(ushort *)(input_param + 3) & 0xffdb;\n      input_param[1] = 0;\n      *input_param = input_param[4];\n    }\n    *(ushort *)(input_param + 3) = *(ushort *)(input_param + 3) | 8;\n  }\n  if ((input_param[4] == 0) && ((*(ushort *)(input_param + 3) & 0x280) != 0x200)) {\n    make_buffer(output_param,input_param);\n  }\n  flags = *(ushort *)(input_param + 3);\n  result = flags & 1;\n  if ((flags & 1) == 0) {\n    if (-1 < (int)((uint)flags << 0x1e)) {\n      result = input_param[5];\n    }\n    input_param[2] = result;\n  }\n  else {\n    input_param[2] = 0;\n    input_param[6] = -input_param[5];\n  }\n  if (input_param[4] == 0) {\n    flags = *(ushort *)(input_param + 3);\n    result = (int)(short)flags & 0x80;\n    if (result != 0) {\nLAB_08009ab0:\n      *(ushort *)(input_param + 3) = flags | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "current_name": "decode_and_process_data_08009a80",
            "entrypoint": "0x08009a80",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009a80": "decode_and_process_data_08009a80",
                "__sinit": "initialize_data",
                "__smakebuf_r": "make_buffer",
                "_free_r": "free_memory",
                "iVar1": "data_address",
                "param_1": "output_param",
                "param_2": "input_param",
                "uVar2": "result",
                "uVar3": "flags"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009b5c": {
            "additional_data": {
                "ENABLED": {
                    "is_enabled": 1
                },
                "FREE_R": {
                    "_free_r": 1
                },
                "FUN_08008868": {
                    "cleanup_resources": 1,
                    "initialize": 5,
                    "initialize_resources": 2,
                    "sub_function2": 1
                },
                "FUN_080091d8": {
                    "allocate_memory": 5,
                    "assign_values": 1,
                    "cleanup": 1,
                    "initialize_resource": 1,
                    "sub_function3": 1
                },
                "FUN_08009b5c": {
                    "extract_binary_data": 1,
                    "handle_error": 4,
                    "handle_exception": 8,
                    "main_function": 1,
                    "process_binary_code": 1
                },
                "FUN_08009fe8": {
                    "calculate": 1,
                    "calculate_value": 1,
                    "perform_operation": 2,
                    "perform_validation": 1,
                    "process_data": 3,
                    "sub_function1": 1
                },
                "Raise": {
                    "raise": 1
                },
                "UNRECOVERED_JUMPTABLE_00": {
                    "exit_jumptable": 1,
                    "jmp_table": 1,
                    "jump_table": 14,
                    "jump_table_function": 1,
                    "jumptable_function": 1,
                    "unrecovered_jump_table": 2,
                    "unrecovered_jumptable": 5,
                    "unrecovered_jumptable_00": 1
                },
                "_exit": {
                    "_exit": 1
                },
                "bVar11": {
                    "b_var11": 1,
                    "bool_value": 1,
                    "bool_var": 4,
                    "bool_variable": 1,
                    "boolean_variable": 3,
                    "boolean_variable_11": 1,
                    "condition": 1,
                    "condition_flag": 1,
                    "flag": 1,
                    "flag_temp": 1,
                    "is_condition_true": 1,
                    "is_true": 1,
                    "is_var": 1,
                    "is_var12": 1,
                    "is_zero": 6,
                    "temp_flag": 1,
                    "var_b11": 1
                },
                "iVar10": {
                    "var3": 1
                },
                "iVar2": {
                    "count": 3,
                    "counter": 3,
                    "exception_value": 1,
                    "i_var2": 1,
                    "int_value": 1,
                    "int_value1": 1,
                    "int_var": 2,
                    "int_var_1": 1,
                    "integer_var": 1,
                    "integer_variable_2": 1,
                    "iterator": 1,
                    "length": 1,
                    "offset": 2,
                    "temp_value": 2,
                    "var1": 2,
                    "var17": 1,
                    "var_i2": 1,
                    "variable1": 1,
                    "variable2": 1
                },
                "iVar3": {
                    "index": 1
                },
                "iVar4": {
                    "offset": 1
                },
                "iVar5": {
                    "var15": 1
                },
                "iVar7": {
                    "counter": 2,
                    "i_var7": 2,
                    "int_value2": 1,
                    "int_var2": 1,
                    "int_var_2": 1,
                    "integer_var1": 1,
                    "integer_variable_7": 1,
                    "iterator": 1,
                    "loop_var": 1,
                    "offset": 1,
                    "temp": 3,
                    "temp_value": 1,
                    "temp_value2": 1,
                    "temp_var": 2,
                    "temp_variable": 1,
                    "temp_variable_1": 1,
                    "var16": 1,
                    "var4": 1,
                    "var_i7": 1,
                    "variable4": 1,
                    "variable7": 1,
                    "zero": 1
                },
                "iVar8": {
                    "result": 1
                },
                "iVar9": {
                    "counter": 1,
                    "i_var9": 1,
                    "int_value3": 1,
                    "int_var3": 1,
                    "int_var_3": 1,
                    "integer_var2": 1,
                    "integer_variable_9": 1,
                    "iterator2": 1,
                    "length": 1,
                    "loop_var": 1,
                    "remaining": 2,
                    "size": 2,
                    "temp_counter": 1,
                    "temp_value2": 1,
                    "temp_value3": 1,
                    "temp_variable_2": 2,
                    "total_count": 1,
                    "total_size": 1,
                    "var19": 1,
                    "var2": 1,
                    "var5": 1,
                    "var_i9": 1,
                    "variable5": 1,
                    "variable9": 1
                },
                "malloc": {
                    "malloc": 1
                },
                "param_1": {
                    "exception_code": 1,
                    "input_param": 1
                },
                "param_2": {
                    "length": 1
                },
                "param_3": {
                    "param3": 1
                },
                "param_4": {
                    "param4": 1
                },
                "pcVar8": {
                    "callback": 3,
                    "callback_func": 1,
                    "error_handler": 1,
                    "exception_handler": 2,
                    "func_ptr": 1,
                    "function_pointer": 8,
                    "function_ptr": 2,
                    "pointer_to_code": 1,
                    "pointer_to_var8": 1,
                    "pointer_to_variable_8": 1,
                    "ptr_code": 1,
                    "ptr_pc_var8": 1,
                    "var18": 1
                },
                "piVar3": {
                    "array": 1,
                    "array_pointer": 2,
                    "array_ptr": 1,
                    "data": 1,
                    "data_array": 1,
                    "data_ptr": 1,
                    "exception_data": 1,
                    "exception_info": 2,
                    "exception_ptr": 1,
                    "int_ptr": 1,
                    "param_array": 1,
                    "params": 1,
                    "pointer1": 3,
                    "pointer2": 1,
                    "pointer_to_var3": 1,
                    "pointer_to_variable3": 1,
                    "pointer_to_variable_3": 1,
                    "pointer_to_variables": 1,
                    "pointer_variable": 1,
                    "ptr1": 1,
                    "ptr_array": 1,
                    "ptr_error_info": 1,
                    "ptr_i_var3": 1
                },
                "piVar4": {
                    "allocated_memory": 1,
                    "array2": 1,
                    "array_ptr2": 1,
                    "old_exception_info": 1,
                    "pointer2": 2,
                    "pointer3": 1,
                    "pointer_to_variable4": 1,
                    "previous_func": 1,
                    "ptr2": 1,
                    "ptr_i_var4": 1,
                    "secondary_array_pointer": 1,
                    "secondary_ptr": 1,
                    "temp_array": 1,
                    "temp_array_pointer": 1,
                    "temp_ptr": 1
                },
                "piVar8": {
                    "function_pointer": 1
                },
                "puVar1": {
                    "data": 2,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "exception_code_ptr": 1,
                    "exception_val": 1,
                    "p_pointer": 1,
                    "param1": 1,
                    "param_pointer": 1,
                    "pointer": 3,
                    "pointer1": 1,
                    "pointer2": 1,
                    "pointer_param": 1,
                    "pointer_to_uint": 1,
                    "pointer_to_var1": 1,
                    "pointer_to_variable_1": 1,
                    "pointer_variable": 1,
                    "pointer_variable1": 1,
                    "ptr_result": 1,
                    "ptr_u_var1": 1,
                    "ptr_uint": 1,
                    "result_ptr": 1,
                    "temp_ptr": 1,
                    "uint_pointer": 1
                },
                "uVar10": {
                    "original_data": 1,
                    "temp_code": 1,
                    "temp_flag": 1,
                    "temp_value": 3,
                    "temp_value4": 1,
                    "temp_value_2": 1,
                    "temp_var": 1,
                    "temp_var2": 1,
                    "temp_variable_3": 1,
                    "u_var10": 1,
                    "uint_value": 1,
                    "uint_var": 1,
                    "uint_variable2": 1,
                    "unsigned_var3": 1,
                    "unsigned_variable_10": 1,
                    "value2": 1,
                    "var20": 1,
                    "var6": 1,
                    "var_3": 1,
                    "var_u10": 1,
                    "variable6": 1
                },
                "uVar12": {
                    "exit_code": 2,
                    "exit_status": 3,
                    "exit_value": 2,
                    "exit_var": 1,
                    "result": 4,
                    "result_value": 1,
                    "u_var12": 1,
                    "undefined8_var": 1,
                    "undefined8_variable": 1,
                    "undefined_variable": 1,
                    "unsigned_variable_12": 1,
                    "var14": 1,
                    "var_4": 1,
                    "variable7": 1
                },
                "uVar5": {
                    "converted_value": 1,
                    "count2": 1,
                    "error_code": 1,
                    "exception_data": 1,
                    "exception_flag": 1,
                    "flag_value": 1,
                    "flags_masked": 1,
                    "temp_value": 1,
                    "u_var5": 1,
                    "uint_val": 1,
                    "uint_value": 1,
                    "uint_var5": 1,
                    "uint_variable": 1,
                    "unsigned_var1": 1,
                    "unsigned_variable_5": 1,
                    "ushort_value": 1,
                    "ushort_var": 1,
                    "ushort_variable": 1,
                    "value": 3,
                    "var2": 1,
                    "var3": 1,
                    "var_1": 1,
                    "var_u5": 1,
                    "variable2": 1
                },
                "uVar6": {
                    "combined_var": 1,
                    "exception_flags": 1,
                    "flag": 5,
                    "flags": 6,
                    "param_value": 1,
                    "unsigned_var2": 1,
                    "unsigned_variable_6": 1,
                    "ushort_val": 1,
                    "ushort_value": 1,
                    "ushort_var": 1,
                    "ushort_var6": 1,
                    "ushort_variable": 1,
                    "ushort_variable_2": 1,
                    "var3": 1,
                    "var4": 1,
                    "var_2": 1,
                    "var_u6": 1,
                    "variable3": 1
                },
                "uvar10": {
                    "var13": 1
                }
            },
            "called": [
                "FUN_08009fe8",
                "FUN_08008868",
                "FUN_080091d8"
            ],
            "calling": [
                "FUN_080090cc",
                "FUN_0800a18c"
            ],
            "code": "\nvoid handle_exception_08009b5c(void)\n\n{\n  uint *pointer;\n  int counter;\n  int *pointer1;\n  int *pointer2;\n  uint value;\n  ushort flags;\n  int temp;\n  code *function_pointer;\n  int remaining;\n  uint temp_value;\n  code *jump_table;\n  bool is_zero;\n  undefined8 result;\n  \n  raise(6);\n  jump_table = (code *)0x8009b6b;\n  result = _exit(1);\n  pointer1 = (int *)((ulonglong)result >> 0x20);\n  pointer = (uint *)result;\n  flags = *(ushort *)(pointer1 + 3);\n  value = (uint)flags;\n  if ((int)(value << 0x1c) < 0) {\n    counter = pointer1[4];\n    if (counter != 0) {\n      temp = value << 0x1e;\n      is_zero = temp != 0;\n      if (is_zero) {\n        temp = 0;\n      }\n      remaining = *pointer1;\n      if (!is_zero) {\n        temp = pointer1[5];\n      }\n      *pointer1 = counter;\n      pointer1[2] = temp;\n      for (remaining = remaining - counter; 0 < remaining; remaining = remaining - temp) {\n        temp = (*(code *)pointer1[10])(pointer,pointer1[8],counter,remaining);\n        if (temp < 1) {\n          flags = *(ushort *)(pointer1 + 3);\n          goto LAB_08009c62;\n        }\n        counter = counter + temp;\n      }\n    }\n  }\n  else if (((0 < pointer1[1]) || (0 < pointer1[0x10])) &&\n          (function_pointer = (code *)pointer1[0xb], function_pointer != (code *)0x0)) {\n    temp_value = *pointer;\n    *pointer = 0;\n    if ((flags & 0x1000) == 0) {\n      counter = (*function_pointer)(pointer,pointer1[8],value & 0x1000,1);\n      if ((counter == -1) && (value = *pointer, value != 0)) {\n        if ((value != 0x1d) && (value != 0x16)) {\n          *(ushort *)(pointer1 + 3) = *(ushort *)(pointer1 + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c2c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          (*jump_table)();\n          return;\n        }\n        *pointer = temp_value;\n        goto LAB_08009b86;\n      }\n    }\n    else {\n      counter = pointer1[0x15];\n    }\n    if (((int)((uint)*(ushort *)(pointer1 + 3) << 0x1d) < 0) &&\n       (counter = counter - pointer1[1], pointer1[0xd] != 0)) {\n      counter = counter - pointer1[0x10];\n    }\n    counter = (*(code *)pointer1[0xb])(pointer,pointer1[8],counter,0);\n    flags = *(ushort *)(pointer1 + 3);\n    if ((counter == -1) &&\n       ((0x1d < *pointer || (-1 < (int)((0x20400001U >> (*pointer & 0xff)) << 0x1f))))) {\nLAB_08009c62:\n      *(ushort *)(pointer1 + 3) = flags | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c6c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jump_table)(0xffffffff);\n      return;\n    }\n    pointer1[1] = 0;\n    *pointer1 = pointer1[4];\n    if (((int)((uint)flags << 0x13) < 0) && ((counter != -1 || (*pointer == 0)))) {\n      pointer1[0x15] = counter;\n    }\n    pointer2 = (int *)pointer1[0xd];\n    *pointer = temp_value;\n    if (pointer2 != (int *)0x0) {\n      if (pointer2 != pointer1 + 0x11) {\n        _free_r(pointer);\n      }\n      pointer1[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08009c02. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jump_table)();\n      return;\n    }\n  }\nLAB_08009b86:\n                    /* WARNING: Could not recover jumptable at 0x08009b88. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)(0);\n  return;\n}\n\n",
            "current_name": "handle_exception_08009b5c",
            "entrypoint": "0x08009b5c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009b5c": "handle_exception_08009b5c",
                "UNRECOVERED_JUMPTABLE_00": "jump_table",
                "bVar11": "is_zero",
                "iVar2": "counter",
                "iVar3": "index",
                "iVar4": "offset",
                "iVar7": "temp",
                "iVar9": "remaining",
                "pcVar8": "function_pointer",
                "piVar3": "pointer1",
                "piVar4": "pointer2",
                "puVar1": "pointer",
                "uVar10": "temp_value",
                "uVar12": "result",
                "uVar5": "value",
                "uVar6": "flags"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009c7c": {
            "additional_data": {
                "FUN_08009c7c": {
                    "execute_command": 1,
                    "process_binary_data": 1,
                    "process_data": 9,
                    "process_function": 2
                },
                "FUN_08009d50": {
                    "initialize_memory": 1
                },
                "UNRECOVERED_JUMPTABLE_00": {
                    "function_pointer_table": 1,
                    "jmp_table": 2,
                    "jump_table": 12,
                    "jump_table_pointer": 1,
                    "jumptable": 1,
                    "jumptable_func": 2,
                    "jumptable_ptr": 1,
                    "unrecovered_00": 1
                },
                "bVar10": {
                    "bool_var": 5,
                    "boolean_check": 1,
                    "boolean_var": 1,
                    "branch_flag": 1,
                    "flag1": 1
                },
                "bVar11": {
                    "bool1": 1,
                    "condition": 1
                },
                "iVar12": {
                    "temp3": 1
                },
                "iVar13": {
                    "temp4": 1
                },
                "iVar2": {
                    "arg4": 1,
                    "count": 2,
                    "counter": 5,
                    "index": 2,
                    "index_1": 1,
                    "length": 1,
                    "offset": 5,
                    "size": 1,
                    "temp_int_1": 1,
                    "temp_var": 1,
                    "temp_var1": 5,
                    "val1": 1,
                    "value_1": 1,
                    "var1": 4
                },
                "iVar6": {
                    "count": 1,
                    "flag2": 1,
                    "i_var1": 1,
                    "i_var6": 3,
                    "loop_var": 1,
                    "loop_var1": 1,
                    "offset": 2,
                    "temp": 1,
                    "temp_counter": 1,
                    "temp_int_2": 1,
                    "temp_value2": 1,
                    "temp_var": 2,
                    "temp_var2": 1,
                    "temp_var3": 5,
                    "temp_var5": 2,
                    "temp_variable": 1,
                    "val2": 1,
                    "value": 1,
                    "value_2": 1,
                    "var2": 2,
                    "var5": 1
                },
                "iVar8": {
                    "count": 3,
                    "counter": 1,
                    "i": 1,
                    "i_var2": 1,
                    "i_var8": 3,
                    "initial_size": 1,
                    "iteration_counter": 1,
                    "loop_count": 1,
                    "loop_counter": 3,
                    "loop_var2": 2,
                    "temp": 1,
                    "temp_int_3": 1,
                    "temp_var": 1,
                    "temp_var3": 1,
                    "temp_var4": 3,
                    "temp_var6": 1,
                    "temp_var8": 1,
                    "temp_variable3": 1,
                    "value_3": 1,
                    "var5": 2,
                    "var8": 1
                },
                "param_1": {
                    "array_ptr": 3,
                    "command": 1,
                    "data": 4,
                    "data_array": 1,
                    "data_buffer": 1,
                    "data_pointer": 1,
                    "input_array": 4,
                    "input_data": 1,
                    "memory_array": 1,
                    "original_array": 1,
                    "param1": 1,
                    "param_array": 7,
                    "parameter1": 1,
                    "uint_array": 3,
                    "uint_array_ptr": 1
                },
                "param_2": {
                    "args": 1,
                    "config": 3,
                    "config_array": 2,
                    "control_data": 1,
                    "data_array": 1,
                    "function_params": 1,
                    "input_pointer": 1,
                    "input_values": 1,
                    "int_array": 3,
                    "int_array_ptr": 2,
                    "int_ptr": 2,
                    "metadata": 1,
                    "original_pointer": 1,
                    "param2": 1,
                    "param_array": 1,
                    "param_pointer": 3,
                    "param_pointer_array": 1,
                    "param_ptr": 2,
                    "parameter2": 1,
                    "params": 1
                },
                "pcVar7": {
                    "callback": 3,
                    "callback_func": 1,
                    "callback_func_ptr": 1,
                    "code_pointer": 2,
                    "code_ptr": 1,
                    "func_ptr": 3,
                    "function1": 1,
                    "function_pointer": 13,
                    "function_ptr": 6
                },
                "piVar3": {
                    "data_pointer": 1,
                    "dynamic_data": 1,
                    "index_2": 1,
                    "other_pointer": 1,
                    "pointer": 1,
                    "pointer_var": 2,
                    "pointer_var1": 1,
                    "pointer_var3": 2,
                    "ptr": 7,
                    "ptr_value": 1,
                    "ptr_var": 3,
                    "temp_int_ptr": 1,
                    "temp_pointer": 3,
                    "temp_var2": 4,
                    "var2": 2
                },
                "uVar1": {
                    "result": 11,
                    "return_val": 2,
                    "return_value": 18
                },
                "uVar10": {
                    "b_var10": 2,
                    "bool_flag": 3,
                    "bool_val": 1,
                    "bool_value": 1,
                    "bool_var": 7,
                    "boolean": 1,
                    "boolean_var": 2,
                    "boolean_variable": 1,
                    "check": 1,
                    "check_flag": 1,
                    "flag2": 1,
                    "temp_var8": 1,
                    "u_var10": 1,
                    "var10": 1
                },
                "uVar11": {
                    "flag2": 1
                },
                "uVar4": {
                    "shifted_value": 1,
                    "temp": 1,
                    "temp_uint_1": 1,
                    "temp_value": 2,
                    "temp_var": 4,
                    "temp_var1": 1,
                    "temp_var3": 2,
                    "temp_variable": 1,
                    "u_short_val": 1,
                    "u_var4": 2,
                    "ushort_value": 4,
                    "ushort_var": 6,
                    "value": 3,
                    "var3": 2
                },
                "uVar5": {
                    "flag": 6,
                    "temp_flag": 1,
                    "temp_ushort": 1,
                    "temp_value": 1,
                    "temp_var2": 2,
                    "temp_var4": 2,
                    "temp_var5": 1,
                    "temp_variable2": 1,
                    "u_short_var": 1,
                    "u_var5": 2,
                    "ushort_flag": 1,
                    "ushort_result": 1,
                    "ushort_temp": 1,
                    "ushort_val": 1,
                    "ushort_value": 4,
                    "ushort_value2": 1,
                    "ushort_var": 2,
                    "var4": 1,
                    "var8": 1
                },
                "uVar9": {
                    "temp": 2,
                    "temp2": 2,
                    "temp_register": 1,
                    "temp_uint_2": 1,
                    "temp_value3": 1,
                    "temp_var2": 3,
                    "temp_var3": 1,
                    "temp_var4": 2,
                    "temp_var5": 1,
                    "temp_var6": 1,
                    "temp_var7": 1,
                    "temp_var9": 1,
                    "temp_variable4": 1,
                    "u_val": 1,
                    "u_var1": 1,
                    "u_var9": 3,
                    "uint_value": 2,
                    "uint_var": 5,
                    "var9": 1
                },
                "unaff_r4": {
                    "arg1": 1,
                    "r4": 1,
                    "register4": 2,
                    "temp_register_4": 1,
                    "temp_var1": 1,
                    "temp_var6": 1,
                    "temp_var_r4": 1,
                    "unaff_r4": 6,
                    "unaff_var1": 1,
                    "unaff_var4": 2,
                    "unaffected_register_4": 2,
                    "unaffected_var4": 1,
                    "unused_register_4": 1,
                    "unused_var1": 3,
                    "unused_variable_1": 1,
                    "var1": 2,
                    "var3": 2,
                    "var6": 1,
                    "var_unaff_r4": 1
                },
                "unaff_r5": {
                    "arg2": 1,
                    "r5": 1,
                    "register5": 2,
                    "temp_register_5": 1,
                    "temp_var2": 1,
                    "temp_var7": 1,
                    "temp_var_r5": 1,
                    "unaff_r5": 6,
                    "unaff_var2": 1,
                    "unaff_var5": 2,
                    "unaffected_register_5": 2,
                    "unaffected_var5": 1,
                    "unused_register_5": 1,
                    "unused_var2": 3,
                    "unused_variable_2": 1,
                    "var2": 2,
                    "var4": 2,
                    "var7": 1,
                    "var_unaff_r5": 1
                }
            },
            "called": [
                "FUN_08009d50"
            ],
            "calling": [
                "FUN_0800932c"
            ],
            "code": "\nundefined4 process_binary_data_08009c7c(uint *param_array,int *int_array)\n\n{\n  undefined4 return_value;\n  int offset;\n  int *ptr;\n  uint ushort_var;\n  ushort flag;\n  int temp_var3;\n  undefined4 unaff_r4;\n  undefined4 unaff_r5;\n  code *function_pointer;\n  int temp_var4;\n  uint uint_var;\n  code *jump_table;\n  bool bool_var;\n  \n  if (int_array[4] != 0) {\n    if ((param_array != (uint *)0x0) && (param_array[6] == 0)) {\n      __sinit();\n    }\n    if (int_array == &DAT_0800aba4) {\n      int_array = (int *)param_array[1];\n    }\n    else if (int_array == (int *)&DAT_0800abc4) {\n      int_array = (int *)param_array[2];\n    }\n    else if (int_array == (int *)&DAT_0800ab84) {\n      int_array = (int *)param_array[3];\n    }\n    if (*(short *)(int_array + 3) != 0) {\n      flag = *(ushort *)(int_array + 3);\n      ushort_var = (uint)flag;\n      if ((int)(ushort_var << 0x1c) < 0) {\n        offset = int_array[4];\n        if (offset != 0) {\n          temp_var3 = ushort_var << 0x1e;\n          bool_var = temp_var3 != 0;\n          if (bool_var) {\n            temp_var3 = 0;\n          }\n          temp_var4 = *int_array;\n          if (!bool_var) {\n            temp_var3 = int_array[5];\n          }\n          *int_array = offset;\n          int_array[2] = temp_var3;\n          for (temp_var4 = temp_var4 - offset; 0 < temp_var4; temp_var4 = temp_var4 - temp_var3) {\n            temp_var3 = (*(code *)int_array[10])(param_array,int_array[8],offset,temp_var4,unaff_r4,unaff_r5);\n            if (temp_var3 < 1) {\n              flag = *(ushort *)(int_array + 3);\n              goto LAB_08009c62;\n            }\n            offset = offset + temp_var3;\n          }\n        }\n      }\n      else if (((0 < int_array[1]) || (0 < int_array[0x10])) &&\n              (function_pointer = (code *)int_array[0xb], function_pointer != (code *)0x0)) {\n        uint_var = *param_array;\n        *param_array = 0;\n        if ((flag & 0x1000) == 0) {\n          offset = (*function_pointer)(param_array,int_array[8],ushort_var & 0x1000,1);\n          if ((offset == -1) && (ushort_var = *param_array, ushort_var != 0)) {\n            if ((ushort_var != 0x1d) && (ushort_var != 0x16)) {\n              *(ushort *)(int_array + 3) = *(ushort *)(int_array + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c2c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              return_value = (*jump_table)();\n              return return_value;\n            }\n            *param_array = uint_var;\n            goto LAB_08009b86;\n          }\n        }\n        else {\n          offset = int_array[0x15];\n        }\n        if (((int)((uint)*(ushort *)(int_array + 3) << 0x1d) < 0) &&\n           (offset = offset - int_array[1], int_array[0xd] != 0)) {\n          offset = offset - int_array[0x10];\n        }\n        offset = (*(code *)int_array[0xb])(param_array,int_array[8],offset,0);\n        flag = *(ushort *)(int_array + 3);\n        if ((offset == -1) &&\n           ((0x1d < *param_array || (-1 < (int)((0x20400001U >> (*param_array & 0xff)) << 0x1f))))) {\nLAB_08009c62:\n          *(ushort *)(int_array + 3) = flag | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c6c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          return_value = (*jump_table)(0xffffffff);\n          return return_value;\n        }\n        int_array[1] = 0;\n        *int_array = int_array[4];\n        if (((int)((uint)flag << 0x13) < 0) && ((offset != -1 || (*param_array == 0)))) {\n          int_array[0x15] = offset;\n        }\n        ptr = (int *)int_array[0xd];\n        *param_array = uint_var;\n        if (ptr != (int *)0x0) {\n          if (ptr != int_array + 0x11) {\n            _free_r(param_array);\n          }\n          int_array[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08009c02. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          return_value = (*jump_table)();\n          return return_value;\n        }\n      }\nLAB_08009b86:\n                    /* WARNING: Could not recover jumptable at 0x08009b88. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      return_value = (*jump_table)(0);\n      return return_value;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_binary_data_08009c7c",
            "entrypoint": "0x08009c7c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009c7c": "process_binary_data_08009c7c",
                "UNRECOVERED_JUMPTABLE_00": "jump_table",
                "bVar10": "bool_var",
                "iVar2": "offset",
                "iVar6": "temp_var3",
                "iVar8": "temp_var4",
                "param_1": "param_array",
                "param_2": "int_array",
                "pcVar7": "function_pointer",
                "piVar3": "ptr",
                "uVar1": "return_value",
                "uVar4": "ushort_var",
                "uVar5": "flag",
                "uVar9": "uint_var"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009cdc": {
            "additional_data": {
                "FUN_080091c6": {
                    "copy_value_to_output_array": 1,
                    "process_data": 3,
                    "process_values": 1,
                    "set_initial_values": 1,
                    "set_undefined_data": 1
                },
                "FUN_08009cdc": {
                    "initialize_data": 6,
                    "initialize_data_struct": 2,
                    "initialize_data_structure": 6,
                    "initialize_data_structures": 1,
                    "initialize_param": 3,
                    "initialize_param_array": 1,
                    "initialize_param_struct": 1,
                    "initialize_parameters": 7,
                    "initialize_params": 3,
                    "initialize_struct": 1
                },
                "LAB_0800a09e_1": {
                    "constant1": 1,
                    "constant_value": 2,
                    "label_address": 1,
                    "label_ptr": 1,
                    "reversed_variable": 1,
                    "some_label": 2
                },
                "memset": {
                    "clear_memory": 2,
                    "set_array_values": 1
                },
                "param_1": {
                    "data": 6,
                    "data_struct": 3,
                    "data_structure": 6,
                    "output_array": 2,
                    "param_array": 4,
                    "param_struct": 1,
                    "parameters": 5,
                    "params": 3,
                    "struct_ptr": 1
                },
                "param_2": {
                    "param_a": 1,
                    "param_value1": 1,
                    "value1": 26,
                    "value_1": 3
                },
                "param_3": {
                    "param_b": 1,
                    "param_value2": 1,
                    "value2": 26,
                    "value_2": 3
                }
            },
            "called": [
                "FUN_080091c6"
            ],
            "calling": [
                "FUN_08009d50"
            ],
            "code": "\nvoid initialize_data_structure_08009cdc(undefined4 *data_structure,undefined2 value1,undefined2 value2)\n\n{\n  *data_structure = 0;\n  data_structure[1] = 0;\n  data_structure[2] = 0;\n  *(undefined2 *)(data_structure + 3) = value1;\n  data_structure[0x19] = 0;\n  *(undefined2 *)((int)data_structure + 0xe) = value2;\n  data_structure[4] = 0;\n  data_structure[5] = 0;\n  data_structure[6] = 0;\n  clear_memory(data_structure + 0x17,0,8);\n  data_structure[8] = data_structure;\n  data_structure[9] = 0x800a021;\n  data_structure[10] = 0x800a043;\n  data_structure[0xb] = 0x800a07b;\n  data_structure[0xc] = &some_label;\n  return;\n}\n\n",
            "current_name": "initialize_data_structure_08009cdc",
            "entrypoint": "0x08009cdc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009cdc": "initialize_data_structure_08009cdc",
                "LAB_0800a09e_1": "some_label",
                "memset": "clear_memory",
                "param_1": "data_structure",
                "param_2": "value1",
                "param_3": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009d24": {
            "additional_data": {
                "0x68": {
                    "sizeof_element": 1
                },
                "FUN_080091c6": {
                    "initialize_array": 1,
                    "initialize_block": 1,
                    "initialize_element": 2,
                    "initialize_item": 1,
                    "initialize_memory": 1,
                    "set_block_properties": 1
                },
                "FUN_08009270": {
                    "calculate_checksum": 1,
                    "clear_memory": 1,
                    "initialize_block_data": 1,
                    "memset_array": 1,
                    "reverse_array": 1,
                    "set_element_value": 1,
                    "set_items_to_zero": 1
                },
                "FUN_08009d24": {
                    "allocate_and_initialize_array": 3,
                    "allocate_array": 1,
                    "allocate_initialized_array": 1,
                    "allocate_memory": 14,
                    "allocate_memory_and_initialize": 2,
                    "allocate_memory_array": 1,
                    "allocate_memory_block": 2,
                    "allocate_memory_for_data_structure": 1,
                    "allocate_memory_for_struct": 2,
                    "create_array_with_padding": 1,
                    "create_data_structure": 1,
                    "initialize_data_structure": 1,
                    "initialize_memory_block": 1
                },
                "_malloc_r": {
                    "_allocate_memory": 1,
                    "allocate": 1,
                    "allocate_memory": 4
                },
                "iVar2": {
                    "array_size": 3,
                    "block_size": 1,
                    "block_size_offset": 1,
                    "buffer_size": 2,
                    "calculated_block_size": 1,
                    "memory_size": 1,
                    "offset": 1,
                    "padding_size": 1,
                    "struct_offset": 1,
                    "struct_size": 1,
                    "total_allocation_size": 1,
                    "total_memory_size": 1,
                    "total_size": 16
                },
                "memset": {
                    "initialize_array_with_zeros": 1,
                    "initialize_memory": 5
                },
                "param_1": {
                    "array_ptr": 1,
                    "array_size": 2,
                    "block_ptr": 1,
                    "bytes_allocated": 1,
                    "data": 1,
                    "data_structure_size": 1,
                    "ptr": 1,
                    "size": 14,
                    "size_of_array": 1,
                    "size_of_array_element": 1,
                    "size_of_chunk": 1,
                    "size_of_data_structure": 1,
                    "size_of_element": 2,
                    "size_of_memory": 2,
                    "struct_size": 1
                },
                "param_2": {
                    "array_length": 2,
                    "block_count": 1,
                    "count": 6,
                    "data_size": 2,
                    "element_index": 1,
                    "element_size": 1,
                    "length": 1,
                    "num_elements": 11,
                    "num_of_chunks": 1,
                    "num_of_elements": 2,
                    "num_structs": 1,
                    "number_of_elements": 2
                },
                "param_3": {
                    "block_size": 1,
                    "element_size": 2,
                    "length": 1,
                    "memset_value": 1,
                    "num_blocks": 1
                },
                "puVar1": {
                    "allocated_array": 2,
                    "allocated_block_pointer": 1,
                    "allocated_buffer": 1,
                    "allocated_memory": 10,
                    "array_pointer": 2,
                    "array_ptr": 2,
                    "data_structure": 1,
                    "data_structure_pointer": 1,
                    "memory_block": 1,
                    "ptr": 5,
                    "result": 1,
                    "result_pointer": 2,
                    "struct_pointer": 1,
                    "struct_ptr": 1
                }
            },
            "called": [
                "FUN_080091c6",
                "FUN_08009270"
            ],
            "calling": [
                "FUN_08009db0"
            ],
            "code": "\nundefined4 * allocate_memory_and_initialize_08009d24(undefined4 size,int num_elements)\n\n{\n  undefined4 *allocated_memory;\n  int total_size;\n  \n  total_size = (num_elements + -1) * 0x68;\n  allocated_memory = (undefined4 *)allocate_memory(size,total_size + 0x74);\n  if (allocated_memory != (undefined4 *)0x0) {\n    *allocated_memory = 0;\n    allocated_memory[1] = num_elements;\n    allocated_memory[2] = allocated_memory + 3;\n    initialize_memory(allocated_memory + 3,0,total_size + 0x68);\n  }\n  return allocated_memory;\n}\n\n",
            "current_name": "allocate_memory_and_initialize_08009d24",
            "entrypoint": "0x08009d24",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009d24": "allocate_memory_and_initialize_08009d24",
                "_malloc_r": "allocate_memory",
                "iVar2": "total_size",
                "memset": "initialize_memory",
                "param_1": "size",
                "param_2": "num_elements",
                "puVar1": "allocated_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009d50": {
            "additional_data": {
                "DAT_20000094": {
                    "default_data": 2,
                    "original_pointer": 1
                },
                "FUN_08009cdc": {
                    "initialize_data2": 1,
                    "initialize_sub_parameters": 1,
                    "initialize_values": 1,
                    "perform_calculation": 1,
                    "set_data_value": 1,
                    "set_initial_values": 1,
                    "set_param": 1,
                    "set_parameters": 1,
                    "set_parameters1": 2,
                    "set_values": 4,
                    "update_parameter": 1
                },
                "FUN_08009d50": {
                    "initialize_data": 17,
                    "initialize_function": 2,
                    "initialize_parameters": 10,
                    "initialize_params": 1
                },
                "FUN_08009db0": {
                    "allocate_memory": 1,
                    "calculate": 5,
                    "calculate_sum": 1,
                    "calculate_value": 2,
                    "calculate_values": 1,
                    "get_data_pointer": 1,
                    "process_data": 2,
                    "set_parameters2": 2
                },
                "LAB_08009cd0_1": {
                    "label": 3
                },
                "__sfp": {
                    "calculate_sfp": 1,
                    "calculate_value": 2,
                    "get_float": 1,
                    "get_float_value": 4,
                    "get_floating_point_value": 1,
                    "get_num": 1,
                    "get_sfp": 3,
                    "get_sfp_value": 2,
                    "get_something_from_pointer": 1,
                    "get_special_function_pointer": 1,
                    "set_float_precision": 1
                },
                "param_1": {
                    "data": 13,
                    "data_array": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "data_struct": 1,
                    "input_array": 1,
                    "parameter1": 1,
                    "parameters": 10,
                    "params": 1
                },
                "param_2": {
                    "param1": 2,
                    "param2": 3,
                    "param_1": 1,
                    "value1": 10
                },
                "param_3": {
                    "param2": 2,
                    "param3": 3,
                    "param_2": 1,
                    "value2": 10
                },
                "param_4": {
                    "param3": 1,
                    "param4": 3,
                    "param_4": 1,
                    "value3": 5,
                    "value4": 4
                },
                "puVar2": {
                    "condition_var": 1,
                    "data_pointer": 1,
                    "default_ptr": 1,
                    "first_data": 1,
                    "pointer": 12,
                    "pointer2": 1,
                    "pointer_var": 1,
                    "ptr": 1,
                    "pu_var": 1,
                    "temp": 3,
                    "temp_pointer": 2,
                    "temp_ptr": 4,
                    "temp_var": 1
                },
                "std_isra_0": {
                    "do_something": 2,
                    "modify_value": 1,
                    "perform_operation": 1,
                    "process_data": 1,
                    "set_standard": 1,
                    "standard_function": 2,
                    "standardize_data": 5,
                    "standardize_value": 5
                },
                "uVar1": {
                    "result": 21,
                    "result1": 2,
                    "result_var": 1,
                    "return_val": 1,
                    "return_value": 1,
                    "sfp": 1,
                    "sfp_result": 2,
                    "status": 1
                }
            },
            "called": [
                "FUN_08009cdc",
                "FUN_08009db0"
            ],
            "calling": [
                "FUN_08009c7c",
                "FUN_0800937c",
                "FUN_08009db0",
                "FUN_080098d8",
                "FUN_0800932c",
                "FUN_08009a80"
            ],
            "code": "\nvoid initialize_data_08009d50(undefined4 *data)\n\n{\n  undefined4 result;\n  undefined4 *pointer;\n  \n  if (data[6] == 0) {\n    data[0x12] = 0;\n    data[0x13] = 0;\n    data[0x14] = 0;\n    pointer = &DAT_20000094;\n    data[10] = &label;\n    if (data == &DAT_20000094) {\n      pointer = (undefined4 *)0x1;\n    }\n    if (data == &DAT_20000094) {\n      data[6] = pointer;\n    }\n    result = get_float_value();\n    data[1] = result;\n    result = get_float_value(data);\n    data[2] = result;\n    result = get_float_value(data);\n    data[3] = result;\n    standardize_value(data[1],4,0);\n    standardize_value(data[2],9,1);\n    standardize_value(data[3],0x12,2);\n    data[6] = 1;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_data_08009d50",
            "entrypoint": "0x08009d50",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009d50": "initialize_data_08009d50",
                "LAB_08009cd0_1": "label",
                "__sfp": "get_float_value",
                "param_1": "data",
                "puVar2": "pointer",
                "std_isra_0": "standardize_value",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009db0": {
            "additional_data": {
                "0xc": {
                    "allocation_error_code": 1
                },
                "DAT_20000094": {
                    "data1": 1,
                    "data_initializer": 1,
                    "data_segment": 1,
                    "data_structure": 1,
                    "global_data": 3,
                    "init_data": 1,
                    "initialize_data": 1,
                    "static_data": 1
                },
                "DAT_200000ac": {
                    "flag": 2,
                    "global_flag": 1,
                    "initialized": 6,
                    "initialized_flag": 2,
                    "is_initialized": 1,
                    "is_static_data_initialized": 1
                },
                "DAT_200000dc": {
                    "array_list_head": 1,
                    "buffer_list_pointer": 1,
                    "data2": 1,
                    "data_head": 1,
                    "data_list": 1,
                    "data_ptr": 1,
                    "data_structure_address": 1,
                    "global_list": 1,
                    "module_array": 1,
                    "static_list": 1
                },
                "FUN_080091c6": {
                    "function2": 1,
                    "reset_value": 1,
                    "set_nested_pointer": 1
                },
                "FUN_08009d24": {
                    "allocate_structure": 1,
                    "function3": 1,
                    "initialize_array": 1
                },
                "FUN_08009d50": {
                    "decrement_pointer": 1,
                    "initialize_value": 1
                },
                "FUN_08009db0": {
                    "allocate_and_initialize": 1,
                    "extract_data": 2,
                    "find_first_available": 1,
                    "find_initialized_buffer": 1,
                    "init_data": 1,
                    "initialize_array": 1,
                    "initialize_array_of_structs": 1,
                    "initialize_data": 3,
                    "initialize_data_structure": 13,
                    "initialize_data_structures": 2,
                    "initialize_device": 1,
                    "initialize_function": 2,
                    "initialize_module": 1
                },
                "PTR_FUN_08009d50": {
                    "function1": 1
                },
                "__sfmoreglue": {
                    "allocate_buffer": 1,
                    "allocate_memory": 8,
                    "allocate_memory_space": 1,
                    "allocate_more_memory": 1,
                    "allocate_pointer": 1,
                    "request_additional_memory": 1
                },
                "__sinit": {
                    "initialize": 2,
                    "initialize_global_data": 6,
                    "initialize_global_variable": 1,
                    "initialize_globals": 1,
                    "initialize_static_data": 3,
                    "initialize_variables": 1
                },
                "memset": {
                    "clear_memory": 4,
                    "fill_memory": 1,
                    "initialize_buffer_values": 1,
                    "initialize_memory": 3,
                    "set_memory": 3
                },
                "param_1": {
                    "array_of_structs": 1,
                    "array_pointer": 2,
                    "error": 3,
                    "error_code": 11,
                    "error_flag": 2,
                    "error_status": 1,
                    "output": 3,
                    "output_buffer": 1,
                    "param_array": 1,
                    "result": 4,
                    "status": 2
                },
                "param_2": {
                    "arg1": 4,
                    "arg2": 1,
                    "arg_1": 1,
                    "data1": 1,
                    "input1": 1,
                    "input2": 1,
                    "param": 1,
                    "param1": 2,
                    "param2": 13,
                    "param_2": 6
                },
                "param_3": {
                    "arg2": 4,
                    "arg3": 1,
                    "arg_2": 1,
                    "data2": 1,
                    "input2": 1,
                    "input3": 1,
                    "param2": 2,
                    "param3": 13,
                    "param_3": 7
                },
                "param_4": {
                    "arg3": 4,
                    "arg4": 1,
                    "arg_3": 1,
                    "input3": 1,
                    "input4": 1,
                    "param": 1,
                    "param3": 2,
                    "param4": 13,
                    "param_4": 6,
                    "size": 1
                },
                "piVar1": {
                    "array_pointer1": 1,
                    "current_block": 1,
                    "current_buffer": 1,
                    "current_data": 1,
                    "current_device": 1,
                    "current_element": 6,
                    "current_entry": 1,
                    "current_index": 1,
                    "current_item": 1,
                    "current_pointer": 3,
                    "current_pointer1": 1,
                    "current_ptr": 1,
                    "current_ptr1": 1,
                    "current_struct": 1,
                    "current_value": 1,
                    "current_value_pointer": 1,
                    "inner_loop_pointer": 1,
                    "inner_ptr1": 1,
                    "iterator": 2,
                    "new_allocated_memory": 1,
                    "new_pointer": 1,
                    "ptr1": 2
                },
                "piVar2": {
                    "array_pointer": 2,
                    "array_pointer2": 1,
                    "current_array": 2,
                    "current_array_pointer": 1,
                    "current_data_ptr": 1,
                    "current_element_ptr": 1,
                    "current_item": 1,
                    "current_pointer2": 1,
                    "current_property": 1,
                    "current_ptr": 1,
                    "current_ptr2": 1,
                    "current_sub_element": 2,
                    "current_sub_pointer": 1,
                    "data_ptr": 1,
                    "inner_buffer": 1,
                    "inner_pointer": 1,
                    "inner_ptr2": 1,
                    "inner_struct": 1,
                    "nested_pointer": 1,
                    "new_item": 1,
                    "next_data": 1,
                    "next_element": 2,
                    "next_ptr": 1,
                    "outer_loop_pointer": 1,
                    "pointer2": 1,
                    "ptr2": 2
                },
                "ppiVar3": {
                    "array_list": 1,
                    "array_of_array_pointers": 1,
                    "array_of_arrays_pointer": 1,
                    "array_of_pointers": 1,
                    "array_pointer3": 1,
                    "array_ptr": 1,
                    "buffer_list": 1,
                    "data_list": 2,
                    "data_structure": 2,
                    "data_structure_pointer": 1,
                    "data_structure_ptr": 1,
                    "device_list": 1,
                    "linked_blocks": 1,
                    "list": 4,
                    "list_head": 1,
                    "list_ptr": 3,
                    "node_pointer": 1,
                    "pointer_pointer": 2,
                    "pointer_pointer3": 1,
                    "pointer_to_pointer": 1,
                    "ptr3": 1,
                    "ptr_to_ptr": 1,
                    "ptrptr3": 1
                }
            },
            "called": [
                "FUN_08009d50",
                "FUN_080091c6",
                "FUN_08009d24"
            ],
            "calling": [
                "FUN_08009d50"
            ],
            "code": "\nint * initialize_data_structure_08009db0(undefined4 *error_code,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int *current_element;\n  int *current_array;\n  int **list;\n  \n  if (DAT_200000ac == 0) {\n    initialize_global_data(&DAT_20000094);\n  }\n  list = (int **)&DAT_200000dc;\n  do {\n    current_array = list[2];\n    current_element = list[1];\n    while (current_element = (int *)((int)current_element + -1), -1 < (int)current_element) {\n      if (*(short *)(current_array + 3) == 0) {\n        *(undefined2 *)((int)current_array + 0xe) = 0xffff;\n        current_array[0x19] = 0;\n        *(undefined2 *)(current_array + 3) = 1;\n        *current_array = 0;\n        current_array[2] = 0;\n        current_array[1] = 0;\n        current_array[4] = 0;\n        current_array[5] = 0;\n        current_array[6] = 0;\n        clear_memory(current_array + 0x17,0,8,1,param4);\n        current_array[0xd] = 0;\n        current_array[0xe] = 0;\n        current_array[0x12] = 0;\n        current_array[0x13] = 0;\n        return current_array;\n      }\n      current_array = current_array + 0x1a;\n    }\n    if (*list == (int *)0x0) {\n      current_element = (int *)allocate_memory(error_code,4);\n      *list = current_element;\n      if (current_element == (int *)0x0) {\n        *error_code = 0xc;\n        return (int *)0x0;\n      }\n    }\n    list = (int **)*list;\n  } while( true );\n}\n\n",
            "current_name": "initialize_data_structure_08009db0",
            "entrypoint": "0x08009db0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009db0": "initialize_data_structure_08009db0",
                "__sfmoreglue": "allocate_memory",
                "__sinit": "initialize_global_data",
                "memset": "clear_memory",
                "param_1": "error_code",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "piVar1": "current_element",
                "piVar2": "current_array",
                "ppiVar3": "list"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009e64": {
            "additional_data": {
                "FUN_08009e64": {
                    "check_and_get_permissions": 1,
                    "check_and_set_file_permission": 1,
                    "check_and_set_file_permissions": 1,
                    "check_file_access": 1,
                    "check_file_permission": 3,
                    "check_file_permissions": 19,
                    "check_file_status": 1,
                    "check_file_type": 1,
                    "get_file_permission": 1,
                    "get_file_permissions": 1,
                    "get_file_type": 1
                },
                "_fstat_r": {
                    "get_file_status": 1
                },
                "auStack_4c": {
                    "auxiliary_stack": 3,
                    "buffer": 1,
                    "file_info": 1,
                    "file_stat": 1,
                    "stack_buffer": 4,
                    "stack_data": 3,
                    "stack_variable": 3,
                    "stat_buffer": 5,
                    "status_buffer": 6,
                    "temp_buffer": 2,
                    "temp_stack": 1,
                    "temporary_buffer": 1
                },
                "iVar1": {
                    "file_stat_result": 2,
                    "file_status": 2,
                    "fstat_result": 6,
                    "result": 3,
                    "result_status": 1,
                    "return_value": 1,
                    "stat_result": 3,
                    "status": 13
                },
                "local_48": {
                    "file_mode": 25,
                    "file_permission": 1,
                    "file_permissions": 2,
                    "file_type": 3
                },
                "param_1": {
                    "fd": 1,
                    "file_descriptor": 30
                },
                "param_2": {
                    "buffer": 1,
                    "file_header": 1,
                    "file_info": 17,
                    "file_info_address": 1,
                    "file_info_pointer": 1,
                    "file_stat": 4,
                    "file_stat_buffer": 1,
                    "file_stat_struct": 2,
                    "file_stats": 1,
                    "file_status": 1,
                    "stat_buffer": 1
                },
                "param_3": {
                    "access_mode": 2,
                    "access_rights": 1,
                    "file_status": 1,
                    "file_type": 1,
                    "output": 1,
                    "output_flag": 2,
                    "output_permissions": 1,
                    "permission": 2,
                    "permission_flag": 4,
                    "permission_flags": 2,
                    "permission_result": 2,
                    "permission_value": 1,
                    "result": 10,
                    "result_flags": 1
                },
                "param_4": {
                    "file_flags": 1,
                    "file_permission": 1,
                    "flag": 1,
                    "is_directory": 1,
                    "is_executable": 16,
                    "is_setuid": 2,
                    "is_shared": 1,
                    "output_flag": 1,
                    "permission_flag": 1,
                    "permission_flags": 1,
                    "permission_mask": 1,
                    "result": 3,
                    "success_flag": 1
                },
                "uVar2": {
                    "access_mask": 1,
                    "default_permission": 1,
                    "file_access": 1,
                    "flag": 2,
                    "flags": 1,
                    "new_permission_flag": 1,
                    "new_permission_value": 1,
                    "output": 1,
                    "permission": 3,
                    "permission_code": 3,
                    "permission_flag": 7,
                    "permission_flags": 2,
                    "permission_value": 4,
                    "permissions": 1,
                    "return_value": 1
                }
            },
            "called": [
                "FUN_0800a0ec"
            ],
            "calling": [
                "FUN_08009eac"
            ],
            "code": "\nundefined4 check_and_set_file_permissions_08009e64(undefined4 file_descriptor,int file_info,undefined4 *result,uint *is_executable)\n\n{\n  int status;\n  undefined4 permission_flag;\n  undefined status_buffer [4];\n  uint file_mode;\n  \n  if ((*(short *)(file_info + 0xe) < 0) ||\n     (status = get_file_status(file_descriptor,(int)*(short *)(file_info + 0xe),status_buffer), status < 0)) {\n    *is_executable = 0;\n    if ((int)((uint)*(ushort *)(file_info + 0xc) << 0x18) < 0) {\n      permission_flag = 0x40;\n      goto LAB_08009ea4;\n    }\n  }\n  else {\n    *is_executable = (uint)((file_mode & 0xf000) == 0x2000);\n  }\n  permission_flag = 0x400;\nLAB_08009ea4:\n  *result = permission_flag;\n  return 0;\n}\n\n",
            "current_name": "check_and_set_file_permissions_08009e64",
            "entrypoint": "0x08009e64",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009e64": "check_and_set_file_permissions_08009e64",
                "_fstat_r": "get_file_status",
                "auStack_4c": "status_buffer",
                "iVar1": "status",
                "local_48": "file_mode",
                "param_1": "file_descriptor",
                "param_2": "file_info",
                "param_3": "result",
                "param_4": "is_executable",
                "uVar2": "permission_flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009eac": {
            "additional_data": {
                "FUNK_08009e64": {
                    "read_buffer_from_file": 1
                },
                "FUN_08009270": {
                    "process_buffer": 1
                },
                "FUN_08009eac": {
                    "decode_and_allocate_memory": 3,
                    "decode_and_initialize_buffer": 1,
                    "initialize_buffer": 5,
                    "initialize_file_descriptor": 2,
                    "initialize_file_parameters": 1,
                    "initialize_resource": 1,
                    "parse_buffer": 2,
                    "parse_data": 1,
                    "parse_input": 3,
                    "parse_parameters": 1,
                    "process_buffer": 2,
                    "process_data": 3,
                    "process_function": 1,
                    "process_input": 3,
                    "process_parameter": 1
                },
                "FUN_0800a110": {
                    "initialize_buffer_data": 1
                },
                "LAB_08009cd0_1": {
                    "label1": 1,
                    "some_label": 2
                },
                "__swhatbuf_r": {
                    "decode_buffer_in_r": 1,
                    "parse_helper": 1,
                    "parse_string": 1
                },
                "_isatty_r": {
                    "check_if_terminal_r": 1,
                    "check_is_terminal": 1,
                    "check_terminal": 3,
                    "check_tty": 1
                },
                "_malloc_r": {
                    "allocate_memory": 5,
                    "allocate_memory_in_r": 1
                },
                "iVar2": {
                    "allocated_address": 1,
                    "allocated_buffer": 6,
                    "allocated_data": 1,
                    "allocated_memory": 11,
                    "allocated_size": 1,
                    "allocation": 3,
                    "allocation_result": 2,
                    "malloc_result": 4,
                    "memory_alloc_result": 1,
                    "resource_pointer": 1
                },
                "local_14": {
                    "buffer": 3,
                    "buffer_data": 2,
                    "buffer_pointer": 1,
                    "buffer_ptr": 1,
                    "callback_parameters": 1,
                    "decoded_data": 1,
                    "file_pointer": 1,
                    "local_array": 1,
                    "local_buffer": 1,
                    "local_buffer_ptr": 1,
                    "local_data": 1,
                    "local_params": 1,
                    "local_variable_2": 1,
                    "original_buffer_pointer": 1,
                    "param2_temp": 1,
                    "param_2_copy": 1,
                    "pointer_to_allocation": 1,
                    "pointer_var": 1,
                    "result": 1,
                    "temp2": 1,
                    "temp_buffer": 4,
                    "temp_parameters": 1,
                    "temp_pointer": 2,
                    "temp_ptr": 1
                },
                "local_18": {
                    "allocation_size": 1,
                    "buffer_size": 4,
                    "data_length": 1,
                    "data_size": 1,
                    "decoded_data_size": 1,
                    "file_size": 1,
                    "input_size": 1,
                    "length": 1,
                    "local_buffer": 2,
                    "local_buffer_size": 1,
                    "local_size": 1,
                    "local_variable_1": 1,
                    "original_buffer_size": 1,
                    "param1_temp": 1,
                    "param_1_copy": 1,
                    "resource_size": 1,
                    "size": 5,
                    "size_var": 1,
                    "temp1": 1,
                    "temp_buffer": 1,
                    "temp_buffer_size": 2,
                    "temp_size": 1
                },
                "param_1": {
                    "buffer_ptr": 1,
                    "buffer_size": 11,
                    "context": 1,
                    "ctx": 1,
                    "data_offset": 1,
                    "fd": 1,
                    "file_descriptor": 2,
                    "file_handle": 1,
                    "function_param": 1,
                    "input_buffer": 1,
                    "input_flag": 1,
                    "input_size": 4,
                    "input_value": 1,
                    "memory_manager": 1,
                    "param": 1,
                    "process_id": 1,
                    "resource_manager": 1
                },
                "param_2": {
                    "array_param": 1,
                    "buffer": 10,
                    "data": 2,
                    "data_pointer": 1,
                    "decoded_data": 1,
                    "file_descriptor": 1,
                    "file_descriptor_info": 1,
                    "file_info": 1,
                    "input": 1,
                    "input_array": 2,
                    "input_data": 3,
                    "input_params": 1,
                    "output_buffer": 1,
                    "parameters": 1,
                    "params": 2,
                    "params_ptr": 1,
                    "resource": 1
                },
                "uVar1": {
                    "buffer_return": 1,
                    "buffer_size": 1,
                    "decoded_value": 1,
                    "flag": 3,
                    "flags": 4,
                    "result": 12,
                    "result_variable": 1,
                    "status": 8
                }
            },
            "called": [
                "FUN_08009e64",
                "FUN_08009270",
                "FUN_0800a110"
            ],
            "calling": [
                "FUN_08009a80"
            ],
            "code": "\nvoid decode_and_initialize_buffer_08009eac(int buffer_size,int *buffer)\n\n{\n  ushort result;\n  int allocated_memory;\n  int size;\n  int *temp_buffer;\n  \n  if (-1 < (int)((uint)*(ushort *)(buffer + 3) << 0x1e)) {\n    size = buffer_size;\n    temp_buffer = buffer;\n    result = decode_buffer_in_r(buffer_size,buffer,&size,&temp_buffer);\n    allocated_memory = allocate_memory(buffer_size,size);\n    if (allocated_memory != 0) {\n      *(undefined **)(buffer_size + 0x28) = &some_label;\n      *buffer = allocated_memory;\n      *(ushort *)(buffer + 3) = *(ushort *)(buffer + 3) | 0x80;\n      buffer[4] = allocated_memory;\n      buffer[5] = size;\n      if ((temp_buffer != (int *)0x0) &&\n         (allocated_memory = check_terminal(buffer_size,(int)*(short *)((int)buffer + 0xe)), allocated_memory != 0)) {\n        *(ushort *)(buffer + 3) = *(ushort *)(buffer + 3) & 0xfffc | 1;\n      }\n      *(ushort *)(buffer + 3) = result | *(ushort *)(buffer + 3);\n      return;\n    }\n    if ((int)(short)*(ushort *)(buffer + 3) << 0x16 < 0) {\n      return;\n    }\n    *(ushort *)(buffer + 3) = *(ushort *)(buffer + 3) & 0xfffc | 2;\n  }\n  *buffer = (int)buffer + 0x47;\n  buffer[4] = (int)buffer + 0x47;\n  buffer[5] = 1;\n  return;\n}\n\n",
            "current_name": "decode_and_initialize_buffer_08009eac",
            "entrypoint": "0x08009eac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009eac": "decode_and_initialize_buffer_08009eac",
                "LAB_08009cd0_1": "some_label",
                "__swhatbuf_r": "decode_buffer_in_r",
                "_isatty_r": "check_terminal",
                "_malloc_r": "allocate_memory",
                "iVar2": "allocated_memory",
                "local_14": "temp_buffer",
                "local_18": "size",
                "param_1": "buffer_size",
                "param_2": "buffer",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009f2c": {
            "additional_data": {
                "FUN_08009f2c": {
                    "find_char_in_string": 2,
                    "find_char_index": 1,
                    "find_char_position": 1,
                    "find_character": 15,
                    "find_character_in_string": 3,
                    "find_first_occurrence": 9
                },
                "param_1": {
                    "input_string": 2,
                    "str": 5,
                    "string": 23,
                    "string_ptr": 1
                },
                "param_2": {
                    "char_to_find": 1,
                    "character": 19,
                    "target": 5,
                    "target_char": 4,
                    "target_character": 2
                },
                "param_3": {
                    "length": 24,
                    "string_length": 7
                },
                "pcVar1": {
                    "current_char": 14,
                    "current_character": 2,
                    "current_position": 6,
                    "current_ptr": 1
                },
                "pcVar2": {
                    "next_char": 12,
                    "next_character": 2,
                    "next_position": 6,
                    "next_ptr": 1,
                    "previous_char": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08009698",
                "FUN_0800937c"
            ],
            "code": "\nchar * find_character_in_string_08009f2c(char *string,char character,int length)\n\n{\n  char *current_char;\n  char *next_char;\n  \n  current_char = string;\n  do {\n    next_char = current_char;\n    if (next_char == string + length) {\n      return (char *)0x0;\n    }\n    current_char = next_char + 1;\n  } while (*next_char != character);\n  return next_char;\n}\n\n",
            "current_name": "find_character_in_string_08009f2c",
            "entrypoint": "0x08009f2c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009f2c": "find_character_in_string_08009f2c",
                "param_1": "string",
                "param_2": "character",
                "param_3": "length",
                "pcVar1": "current_char",
                "pcVar2": "next_char"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009f48": {
            "called": [],
            "calling": [
                "FUN_08009270",
                "FUN_080091d8"
            ],
            "code": "\nvoid FUNC_08009f48(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08009f48",
            "entrypoint": "0x08009f48",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08009f48": "FUNC_08009f48"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08009f4a": {
            "called": [],
            "calling": [
                "FUN_08009270",
                "FUN_080091d8"
            ],
            "code": "\nvoid FUNC_08009f4a(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08009f4a",
            "entrypoint": "0x08009f4a",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08009f4a": "FUNC_08009f4a"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08009fe8": {
            "additional_data": {
                "0x16": {
                    "return_value": 1
                },
                "0x1f": {
                    "max_value": 1
                },
                "0xffffffff": {
                    "error_value": 1
                },
                "DAT_20000090": {
                    "data_array": 1
                },
                "DAT_20000a38": {
                    "kill_error": 1,
                    "return_value": 1
                },
                "FUN_0800886c": {
                    "get_process_id": 1,
                    "initialize_data": 2
                },
                "FUN_08009fe8": {
                    "check_and_execute_process": 1,
                    "process_signal": 3,
                    "reverse_lookup": 1
                },
                "_getpid_r": {
                    "get_process_id": 2
                },
                "_kill": {
                    "kill_process": 2
                },
                "iVar3": {
                    "array_element": 1,
                    "array_value": 2,
                    "data": 1,
                    "data_at_index": 1,
                    "data_value": 1,
                    "data_var": 1,
                    "function_ptr": 1,
                    "function_value": 1,
                    "handler": 1,
                    "handler_address": 1,
                    "i_var3": 2,
                    "index": 2,
                    "offset": 1,
                    "result": 2,
                    "return_value": 1,
                    "signal_handler": 1,
                    "some_variable": 1,
                    "temp_var": 1,
                    "temp_variable": 1,
                    "value": 6,
                    "var3": 1,
                    "variable3": 1
                },
                "in_lr": {
                    "in_lr": 2,
                    "link_register": 3,
                    "return_address": 5,
                    "unused": 1,
                    "unused_var3": 1,
                    "unused_var_3": 1,
                    "unused_variable3": 1
                },
                "param_1": {
                    "index": 1,
                    "input": 10,
                    "input_param": 2,
                    "input_parameter": 3,
                    "input_value": 11,
                    "process_id": 1,
                    "signal": 1,
                    "signal_number": 2
                },
                "pcVar4": {
                    "callback_ptr": 1,
                    "function_pointer": 13,
                    "function_ptr": 15,
                    "handler_code": 1,
                    "signal_handler": 1
                },
                "piVar1": {
                    "array_pointer": 3,
                    "data_array": 1,
                    "data_array_ptr": 1,
                    "data_buffer": 1,
                    "data_pointer": 1,
                    "data_ptr": 4,
                    "pointer": 2,
                    "pointer_to_data": 2,
                    "pointer_to_var1": 2,
                    "pointer_var": 1,
                    "ptr1": 1,
                    "ptr_data": 1,
                    "ptr_global_data": 1,
                    "ptr_i_var1": 1,
                    "ptr_var1": 1,
                    "result": 3,
                    "result_ptr": 1,
                    "signal_array": 1,
                    "signal_data_ptr": 1,
                    "signal_table": 1,
                    "variable1": 1
                },
                "puVar5": {
                    "array_pointer2": 1,
                    "data_array_pointer": 1,
                    "data_array_ptr": 1,
                    "data_buffer_ptr": 1,
                    "data_pointer_pointer": 1,
                    "data_ptr_pointer": 1,
                    "data_ptr_ptr": 2,
                    "pointer": 3,
                    "pointer_ptr": 1,
                    "pointer_to_data": 3,
                    "pointer_to_pointer": 1,
                    "pointer_to_var5": 2,
                    "pointer_var": 1,
                    "pointer_var_2": 1,
                    "ptr2": 1,
                    "ptr_data": 1,
                    "ptr_global_data": 1,
                    "ptr_pu_var5": 1,
                    "ptr_var5": 1,
                    "result_ptr_ptr": 1,
                    "signal_data_ptr_ptr": 1,
                    "signal_pointer": 1,
                    "signal_table_ptr": 1,
                    "variable4": 1
                },
                "uVar2": {
                    "pid": 9,
                    "pid_result": 1,
                    "pid_var": 1,
                    "process_id": 17,
                    "result": 2,
                    "variable2": 1
                },
                "unaff_r4": {
                    "parameter4": 1,
                    "unaffected_r4": 2,
                    "unavailable_r4": 1,
                    "undefined_register_4": 1,
                    "unused": 1,
                    "unused_register4": 1,
                    "unused_var": 1,
                    "unused_var1": 1,
                    "unused_variable1": 1
                },
                "unaff_r5": {
                    "parameter5": 1,
                    "unaffected_r5": 2,
                    "unavailable_r5": 1,
                    "undefined_register_5": 1,
                    "unused": 1,
                    "unused_register5": 1,
                    "unused_var2": 1,
                    "unused_var_2": 1,
                    "unused_variable2": 1
                }
            },
            "called": [
                "FUN_0800a01c",
                "FUN_0800886c"
            ],
            "calling": [
                "FUN_08009b5c"
            ],
            "code": "\nint process_signal_08009fe8(uint input_value)\n\n{\n  int *data_ptr;\n  undefined4 process_id;\n  int value;\n  code *function_ptr;\n  undefined4 unaffected_r4;\n  undefined4 unaffected_r5;\n  undefined4 return_address;\n  undefined4 *pointer;\n  \n  data_ptr = DAT_20000090;\n  pointer = &DAT_20000090;\n  if (0x1f < input_value) {\n    *DAT_20000090 = 0x16;\n    return -1;\n  }\n  value = DAT_20000090[0x11];\n  if ((value != 0) && (function_ptr = *(code **)(value + input_value * 4), function_ptr != (code *)0x0)) {\n    if (function_ptr != (code *)0x1) {\n      if (function_ptr == (code *)0xffffffff) {\n        *DAT_20000090 = 0x16;\n        return 1;\n      }\n      *(undefined4 *)(value + input_value * 4) = 0;\n      (*function_ptr)(input_value);\n    }\n    return 0;\n  }\n  process_id = get_process_id(DAT_20000090);\n  DAT_20000a38 = 0;\n  value = kill_process(process_id,input_value,input_value,0,pointer,unaffected_r4,unaffected_r5,return_address);\n  if ((value == -1) && (DAT_20000a38 != 0)) {\n    *data_ptr = DAT_20000a38;\n  }\n  return value;\n}\n\n",
            "current_name": "process_signal_08009fe8",
            "entrypoint": "0x08009fe8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009fe8": "process_signal_08009fe8",
                "_getpid_r": "get_process_id",
                "_kill": "kill_process",
                "iVar3": "value",
                "in_lr": "return_address",
                "param_1": "input_value",
                "pcVar4": "function_ptr",
                "piVar1": "data_ptr",
                "puVar5": "pointer",
                "uVar2": "process_id",
                "unaff_r4": "unaffected_r4",
                "unaff_r5": "unaffected_r5"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800a01c": {
            "called": [
                "FUN_0800887c"
            ],
            "calling": [
                "FUN_08009fe8"
            ],
            "code": "\nundefined4 _getpid(void)\n\n{\n  return 1;\n}\n\n",
            "current_name": "FUN_0800a01c",
            "entrypoint": "0x0800a01c",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_0800a020": {
            "additional_data": {
                "FUN_0800a020": {
                    "process_data": 4,
                    "read_and_update_value": 4,
                    "read_and_update_values": 1,
                    "update_checksum": 1,
                    "update_counter": 2,
                    "update_data": 15,
                    "update_data_offset": 1,
                    "update_file": 1,
                    "update_value": 2
                },
                "FUN_0800a168": {
                    "other_function": 1
                },
                "bVar3": {
                    "is_ok": 1,
                    "is_positive": 2,
                    "is_read_successful": 6,
                    "is_success": 12,
                    "is_successful": 2,
                    "is_successful_read": 4,
                    "is_valid_read": 1,
                    "read_success": 1,
                    "read_successful": 1,
                    "success": 1
                },
                "iVar1": {
                    "bytes_read": 4,
                    "num_bytes_read": 1,
                    "read_result": 24,
                    "read_size": 1,
                    "result": 1
                },
                "param_1": {
                    "arg1": 1,
                    "buffer": 8,
                    "data": 1,
                    "data_buffer": 1,
                    "data_pointer": 1,
                    "file_descriptor": 13,
                    "input_buffer": 1,
                    "pointer": 1,
                    "source": 1,
                    "stream": 3
                },
                "param_2": {
                    "address": 1,
                    "arg2": 1,
                    "base_address": 1,
                    "data": 10,
                    "data_address": 4,
                    "data_buffer": 2,
                    "data_offset": 3,
                    "data_pointer": 3,
                    "data_struct_address": 1,
                    "data_struct_offset": 1,
                    "offset": 2,
                    "struct_address": 1,
                    "struct_offset": 1
                },
                "uVar2": {
                    "calculated_value": 1,
                    "new_data_value": 2,
                    "new_value": 4,
                    "updated_value": 24
                }
            },
            "called": [
                "FUN_0800a168"
            ],
            "calling": [],
            "code": "\nvoid update_data_offset_0800a020(undefined4 file_descriptor,int data)\n\n{\n  int read_result;\n  uint updated_value;\n  bool is_success;\n  \n  read_result = _read_r(file_descriptor,(int)*(short *)(data + 0xe));\n  is_success = -1 < read_result;\n  if (is_success) {\n    updated_value = *(int *)(data + 0x54) + read_result;\n  }\n  else {\n    updated_value = *(ushort *)(data + 0xc) & 0xffffefff;\n  }\n  if (is_success) {\n    *(uint *)(data + 0x54) = updated_value;\n  }\n  if (!is_success) {\n    *(short *)(data + 0xc) = (short)updated_value;\n  }\n  return;\n}\n\n",
            "current_name": "update_data_offset_0800a020",
            "entrypoint": "0x0800a020",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800a020": "update_data_offset_0800a020",
                "bVar3": "is_success",
                "iVar1": "read_result",
                "param_1": "file_descriptor",
                "param_2": "data",
                "uVar2": "updated_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800a042": {
            "additional_data": {
                "DAT_20000a38": {
                    "error_flag": 2
                },
                "FUN_0800a042": {
                    "reposition_and_write_to_file": 1,
                    "update_file_and_set_error": 1,
                    "update_file_contents": 1,
                    "write_data": 6,
                    "write_data_to_file": 8,
                    "write_file": 2,
                    "write_or_seek_file": 1,
                    "write_to_file": 11
                },
                "iVar1": {
                    "bytes_written": 2,
                    "write_result": 29
                },
                "in_lr": {
                    "reserved_param_3": 1,
                    "unused_var3": 1,
                    "unused_variable3": 1
                },
                "param_1": {
                    "file_descriptor": 31
                },
                "param_2": {
                    "buffer": 6,
                    "buffer_address": 5,
                    "buffer_offset": 2,
                    "data_buffer": 2,
                    "data_header_addr": 1,
                    "data_info": 2,
                    "data_location": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "file_info": 4,
                    "header_address": 1,
                    "header_offset": 2,
                    "header_pointer": 1,
                    "info_pointer": 1,
                    "metadata_pointer": 1
                },
                "param_3": {
                    "buffer": 10,
                    "buffer_address": 1,
                    "data": 11,
                    "data_address": 3,
                    "data_buffer": 2,
                    "data_pointer": 2,
                    "data_size": 1
                },
                "param_4": {
                    "buffer_length": 1,
                    "buffer_size": 4,
                    "count": 3,
                    "data_length": 1,
                    "data_size": 7,
                    "length": 1,
                    "num_bytes": 4,
                    "size": 9,
                    "size_of_buffer": 1
                },
                "unaff_r4": {
                    "reserved_param_1": 1,
                    "unused_param": 1,
                    "unused_var1": 1,
                    "unused_variable": 1
                },
                "unaff_r5": {
                    "reserved_param_2": 1,
                    "unused_param_2": 1,
                    "unused_var2": 1,
                    "unused_variable2": 1
                }
            },
            "called": [
                "FUN_0800a130",
                "FUN_0800885c"
            ],
            "calling": [],
            "code": "\nvoid write_data_to_file_0800a042(int *file_descriptor,int buffer,undefined4 data,undefined4 size)\n\n{\n  int write_result;\n  undefined4 unused_param;\n  undefined4 unused_var2;\n  undefined4 unused_variable3;\n  \n  if ((int)((uint)*(ushort *)(buffer + 0xc) << 0x17) < 0) {\n    _lseek_r(file_descriptor,(int)*(short *)(buffer + 0xe),0,2);\n  }\n  *(ushort *)(buffer + 0xc) = *(ushort *)(buffer + 0xc) & 0xefff;\n  DAT_20000a38 = 0;\n  write_result = _write((int)*(short *)(buffer + 0xe),data,size,size,size,unused_param,unused_var2,\n                 unused_variable3);\n  if ((write_result == -1) && (DAT_20000a38 != 0)) {\n    *file_descriptor = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "current_name": "write_data_to_file_0800a042",
            "entrypoint": "0x0800a042",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800a042": "write_data_to_file_0800a042",
                "iVar1": "write_result",
                "in_lr": "unused_variable3",
                "param_1": "file_descriptor",
                "param_2": "buffer",
                "param_3": "data",
                "param_4": "size",
                "unaff_r4": "unused_param",
                "unaff_r5": "unused_var2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800a07a": {
            "additional_data": {
                "FUN_0800a07a": {
                    "adjust_seek_position": 1,
                    "check_and_set_file_offset": 1,
                    "file_seek_and_update_status": 1,
                    "find_and_set_file_offset": 1,
                    "perform_file_seek": 1,
                    "perform_lseek": 1,
                    "reposition_file": 1,
                    "reverse_file_seek": 1,
                    "seek_and_set_flag": 3,
                    "seek_and_set_flags": 1,
                    "seek_and_update": 1,
                    "seek_and_update_file_status": 1,
                    "seek_and_update_status": 1,
                    "update_cursor_position": 1,
                    "update_file_pointer": 3,
                    "update_file_pointer_status": 1,
                    "update_file_position": 3,
                    "update_file_seek": 1,
                    "update_file_seek_status": 1,
                    "update_file_status": 2,
                    "verify_and_set_file_offset": 1
                },
                "bVar3": {
                    "is_error": 11,
                    "is_failed": 1,
                    "is_lseek_error": 1,
                    "is_offset_negative": 1,
                    "is_seek_error": 5,
                    "is_seek_failed": 3,
                    "is_seek_successful": 2,
                    "seek_failed": 7
                },
                "iVar1": {
                    "file_offset": 2,
                    "file_offset_result": 1,
                    "file_position": 1,
                    "file_seek_result": 1,
                    "lseek_result": 1,
                    "result": 5,
                    "seek_result": 20
                },
                "offsetValue1": {
                    "file_offset1": 1
                },
                "offsetValue2": {
                    "file_offset2": 1
                },
                "param_1": {
                    "file_descriptor": 31
                },
                "param_2": {
                    "buffer_address": 3,
                    "data": 2,
                    "data_block": 1,
                    "data_buffer": 1,
                    "data_struct": 2,
                    "struct_address": 14,
                    "struct_pointer": 5,
                    "structure_address": 2,
                    "structure_pointer": 1
                },
                "shortValue": {
                    "offset": 1
                },
                "uVar2": {
                    "file_status_flag": 1,
                    "flag": 3,
                    "flag_value": 1,
                    "flags": 4,
                    "modified_flag": 3,
                    "modified_flags": 4,
                    "modified_value": 1,
                    "new_flag": 2,
                    "new_flags": 1,
                    "new_status": 3,
                    "status_update_value": 1,
                    "updated_flag": 2,
                    "updated_flags": 3,
                    "updated_status": 2
                },
                "ushortValue1": {
                    "flags1": 1
                },
                "ushortValue2": {
                    "flags2": 1
                }
            },
            "called": [
                "FUN_0800a130"
            ],
            "calling": [],
            "code": "\nvoid file_seek_and_update_status_0800a07a(undefined4 file_descriptor,int struct_address)\n\n{\n  int seek_result;\n  ushort modified_flags;\n  bool is_error;\n  \n  seek_result = _lseek_r(file_descriptor,(int)*(short *)(struct_address + 0xe));\n  is_error = seek_result == -1;\n  if (is_error) {\n    modified_flags = *(ushort *)(struct_address + 0xc) & 0xefff;\n  }\n  else {\n    *(int *)(struct_address + 0x54) = seek_result;\n    modified_flags = *(ushort *)(struct_address + 0xc) | 0x1000;\n  }\n  if (is_error) {\n    *(ushort *)(struct_address + 0xc) = modified_flags;\n  }\n  if (!is_error) {\n    *(ushort *)(struct_address + 0xc) = modified_flags;\n  }\n  return;\n}\n\n",
            "current_name": "file_seek_and_update_status_0800a07a",
            "entrypoint": "0x0800a07a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800a07a": "file_seek_and_update_status_0800a07a",
                "bVar3": "is_error",
                "iVar1": "seek_result",
                "param_1": "file_descriptor",
                "param_2": "struct_address",
                "uVar2": "modified_flags"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800a0ec": {
            "additional_data": {
                "DAT_20000a38": {
                    "file_size": 1,
                    "file_status": 1
                },
                "FUN_08008846": {
                    "get_file_status": 1
                },
                "FUN_0800a0ec": {
                    "calculate_file_info": 1,
                    "calculate_fstat_result": 1,
                    "check_and_assign_file_size": 1,
                    "check_and_assign_file_stat": 1,
                    "check_and_update_file_status": 1,
                    "check_file_stat": 1,
                    "file_stat": 2,
                    "fstat_and_assign": 1,
                    "get_file_info": 1,
                    "get_file_permission": 1,
                    "get_file_size": 3,
                    "get_file_size_and_assign": 1,
                    "get_file_size_and_store_in_param": 1,
                    "get_file_stat": 1,
                    "get_file_stats": 1,
                    "get_file_status": 2,
                    "improve_fstat_check": 1,
                    "process_file_information": 1,
                    "set_and_check_file_stat": 1,
                    "set_param_or_error": 1,
                    "stat_and_copy_if_error": 1,
                    "update_file_stat": 1,
                    "update_file_status": 2,
                    "update_stat_info": 1
                },
                "_fstat": {
                    "get_file_status": 2
                },
                "iVar1": {
                    "file_stat_result": 4,
                    "file_stat_return_value": 1,
                    "file_status": 2,
                    "file_status_check_result": 1,
                    "file_status_result": 1,
                    "fstat_result": 1,
                    "result": 4,
                    "stat_result": 8,
                    "status": 6
                },
                "param_1": {
                    "array": 1,
                    "destination": 1,
                    "file_size": 3,
                    "file_size_ptr": 2,
                    "file_stat_result": 1,
                    "file_status": 3,
                    "output": 3,
                    "output_pointer": 1,
                    "output_status": 1,
                    "output_value": 1,
                    "result": 11,
                    "result_pointer": 1,
                    "return_value": 1,
                    "status_pointer": 1
                },
                "param_2": {
                    "fd": 1,
                    "file_descriptor": 28,
                    "file_path": 1,
                    "stat_result": 1
                },
                "param_3": {
                    "buf": 3,
                    "buffer": 3,
                    "file_stat_buff": 1,
                    "file_status": 1,
                    "stat_buf": 2,
                    "stat_buffer": 18,
                    "stat_struct": 1,
                    "struct_stat": 1,
                    "unused_param1": 1
                },
                "param_4": {
                    "buf_size": 3,
                    "buffer_size": 15,
                    "extra_flags": 1,
                    "file_length": 1,
                    "file_path": 1,
                    "file_permission": 2,
                    "file_stat_size": 2,
                    "file_type": 1,
                    "flags": 1,
                    "size": 1,
                    "stat_buffer_size": 1,
                    "stat_size": 1,
                    "unused_param2": 1
                }
            },
            "called": [
                "FUN_08008846"
            ],
            "calling": [
                "FUN_08009e64"
            ],
            "code": "\nvoid check_and_assign_file_size_0800a0ec(int *result,undefined4 file_descriptor,undefined4 stat_buffer,undefined4 buffer_size)\n\n{\n  int stat_result;\n  \n  DAT_20000a38 = 0;\n  stat_result = get_file_status(file_descriptor,stat_buffer,stat_buffer,0,buffer_size);\n  if ((stat_result == -1) && (DAT_20000a38 != 0)) {\n    *result = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "current_name": "check_and_assign_file_size_0800a0ec",
            "entrypoint": "0x0800a0ec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800a0ec": "check_and_assign_file_size_0800a0ec",
                "_fstat": "get_file_status",
                "iVar1": "stat_result",
                "param_1": "result",
                "param_2": "file_descriptor",
                "param_3": "stat_buffer",
                "param_4": "buffer_size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800a110": {
            "additional_data": {
                "DAT_20000a38": {
                    "saved_output_value": 2,
                    "saved_terminal_status": 1,
                    "saved_terminal_width": 1,
                    "saved_tty_value": 1,
                    "stored_file_descriptor": 1,
                    "stored_value": 1
                },
                "FUNC_08008850": {
                    "get_terminal_status": 1
                },
                "FUN_08008850": {
                    "check_terminal_status": 1,
                    "get_terminal_descriptor": 1
                },
                "FUN_0800a110": {
                    "check_and_assign_file_descriptor": 1,
                    "check_and_assign_terminal": 3,
                    "check_and_assign_terminal_descriptor": 1,
                    "check_and_assign_terminal_width": 1,
                    "check_and_assign_tty": 2,
                    "check_and_assign_value": 1,
                    "check_and_copy_terminal_value": 1,
                    "check_and_set_param": 1,
                    "check_and_set_terminal": 1,
                    "check_and_set_terminal_status": 1,
                    "check_and_set_tty": 1,
                    "check_and_set_variable": 1,
                    "check_is_tty": 1,
                    "detect_and_store_tty": 1,
                    "get_terminal_code": 1,
                    "initialize_data": 1,
                    "initialize_device_info": 1,
                    "initialize_value_if_not_tty": 1,
                    "set_console_output": 1,
                    "set_stdout_if_needed": 1,
                    "set_terminal_input": 1,
                    "set_terminal_value": 1,
                    "update_param1_if_not_stdout": 1,
                    "update_param_based_on_terminal": 1,
                    "update_param_if_not_tty": 1,
                    "update_param_with_value": 1,
                    "update_parameter_if_standard_output": 1,
                    "update_value_if_invalid_terminal": 1
                },
                "_isatty": {
                    "check_terminal_status": 2,
                    "check_tty": 2
                },
                "iVar1": {
                    "is_terminal": 11,
                    "is_tty": 9,
                    "is_tty_result": 1,
                    "terminal_result": 1,
                    "terminal_status": 1,
                    "tty_check_result": 1,
                    "tty_status": 1
                },
                "param_1": {
                    "output": 1,
                    "output_descriptor": 1,
                    "output_device": 1,
                    "output_file_descriptor": 1,
                    "output_param": 1,
                    "output_pointer": 1,
                    "output_ptr": 2,
                    "output_value": 15,
                    "output_variable": 1,
                    "result": 5,
                    "result_ptr": 1,
                    "terminal_code": 1
                },
                "param_2": {
                    "device_identifier": 1,
                    "file_descriptor": 22,
                    "input_descriptor": 1,
                    "input_device": 1,
                    "input_flag": 1,
                    "input_value": 1,
                    "stream_descriptor": 1,
                    "terminal_descriptor": 1,
                    "terminal_handle": 1,
                    "terminal_status": 1
                }
            },
            "called": [
                "FUN_08008850"
            ],
            "calling": [
                "FUN_08009eac"
            ],
            "code": "\nvoid check_and_assign_terminal_descriptor_0800a110(int *output_value,undefined4 file_descriptor)\n\n{\n  int is_terminal;\n  \n  DAT_20000a38 = 0;\n  is_terminal = check_tty(file_descriptor);\n  if ((is_terminal == -1) && (DAT_20000a38 != 0)) {\n    *output_value = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "current_name": "check_and_assign_terminal_descriptor_0800a110",
            "entrypoint": "0x0800a110",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800a110": "check_and_assign_terminal_descriptor_0800a110",
                "_isatty": "check_tty",
                "iVar1": "is_terminal",
                "param_1": "output_value",
                "param_2": "file_descriptor"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800a130": {
            "additional_data": {
                "DAT_20000a38": {
                    "error_code": 1
                },
                "FUN_0800a130": {
                    "improve_and_set_param": 1,
                    "lseek_and_assign": 1,
                    "lseek_and_store_result": 1,
                    "parse_and_set_file_position": 1,
                    "read_and_assign_value_to_pointer": 1,
                    "read_and_store": 1,
                    "reposition_file_pointer": 1,
                    "seek_and_assign_error_code": 1,
                    "seek_and_assign_if_error": 2,
                    "seek_and_assign_result": 1,
                    "seek_and_assign_value": 3,
                    "seek_and_copy": 2,
                    "seek_and_read": 1,
                    "seek_and_set_param": 3,
                    "seek_and_store": 1,
                    "seek_and_store_data": 1,
                    "seek_and_update_value": 1,
                    "set_file_position": 1,
                    "update_file_pointer": 2
                },
                "_lseek": {
                    "seek_file": 1
                },
                "iVar1": {
                    "lseek_result": 2,
                    "result": 2,
                    "return_val": 1,
                    "seek_result": 19,
                    "seek_return_value": 1,
                    "seek_status": 2,
                    "status": 2
                },
                "param_1": {
                    "destination": 1,
                    "error_code_ptr": 1,
                    "output": 3,
                    "output_buffer": 2,
                    "output_data": 1,
                    "output_value": 4,
                    "result": 15,
                    "result_pointer": 1,
                    "result_ptr": 3
                },
                "param_2": {
                    "file_descriptor": 31
                },
                "param_3": {
                    "offset": 30,
                    "seek_offset": 1
                },
                "param_4": {
                    "origin": 8,
                    "whence": 23
                }
            },
            "called": [
                "FUN_08008854"
            ],
            "calling": [
                "FUN_0800a07a",
                "FUN_0800a042"
            ],
            "code": "\nvoid seek_and_assign_error_code_0800a130(int *result,undefined4 file_descriptor,undefined4 offset,undefined4 whence)\n\n{\n  int seek_result;\n  \n  DAT_20000a38 = 0;\n  seek_result = seek_file(file_descriptor,offset,whence,whence,whence);\n  if ((seek_result == -1) && (DAT_20000a38 != 0)) {\n    *result = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "current_name": "seek_and_assign_error_code_0800a130",
            "entrypoint": "0x0800a130",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800a130": "seek_and_assign_error_code_0800a130",
                "_lseek": "seek_file",
                "iVar1": "seek_result",
                "param_1": "result",
                "param_2": "file_descriptor",
                "param_3": "offset",
                "param_4": "whence"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800a154": {
            "additional_data": {
                "FUNK_0800a154": {
                    "calculate_final_value": 1
                },
                "FUN_0800a154": {
                    "calculate_adjusted_value": 1,
                    "calculate_modified_value": 1,
                    "calculate_new_value": 1,
                    "calculate_offset": 1,
                    "calculate_result": 7,
                    "calculate_sum": 19
                },
                "iVar1": {
                    "adjusted_value": 1,
                    "array_length": 1,
                    "calculated_value": 1,
                    "current_index": 4,
                    "current_sum": 1,
                    "final_value": 1,
                    "new_result": 1,
                    "offset": 1,
                    "result": 6,
                    "sum": 13,
                    "sum_index": 1
                },
                "param_1": {
                    "first_value": 1,
                    "input": 2,
                    "input1": 3,
                    "input_param": 1,
                    "input_parameter": 1,
                    "input_value": 2,
                    "param": 1,
                    "param1": 2,
                    "result": 15,
                    "undefined_int": 1,
                    "unknown_param1": 1,
                    "value1": 1
                },
                "param_2": {
                    "arr": 1,
                    "array": 11,
                    "array_address": 1,
                    "array_index": 3,
                    "array_ptr": 1,
                    "array_size": 1,
                    "input": 3,
                    "input2": 3,
                    "input_int": 1,
                    "input_param": 1,
                    "input_pointer": 1,
                    "offset": 1,
                    "param2": 2,
                    "value2": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08009908"
            ],
            "code": "\nint calculate_sum_0800a154(undefined4 result,int array)\n\n{\n  int sum;\n  \n  sum = *(int *)(array + -4) + -4;\n  if (*(int *)(array + -4) < 0) {\n    sum = sum + *(int *)(array + sum);\n  }\n  return sum;\n}\n\n",
            "current_name": "calculate_sum_0800a154",
            "entrypoint": "0x0800a154",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800a154": "calculate_sum_0800a154",
                "iVar1": "sum",
                "param_1": "result",
                "param_2": "array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800a168": {
            "additional_data": {
                "DAT_20000a38": {
                    "error_flag": 1
                },
                "FUN_0800a168": {
                    "extract_error_code": 1,
                    "read_and_assign": 3,
                    "read_and_assign_data": 3,
                    "read_and_assign_error": 2,
                    "read_and_assign_error_code": 1,
                    "read_and_assign_if_error": 2,
                    "read_and_assign_value": 8,
                    "read_and_check_error": 1,
                    "read_and_copy_to_parameter": 1,
                    "read_and_set_param": 2,
                    "read_and_store_data": 2,
                    "read_and_store_value": 1,
                    "read_and_store_value_if_error": 1,
                    "read_and_update_param": 1,
                    "read_and_update_value": 1,
                    "read_data_into_buffer": 1
                },
                "iVar1": {
                    "num_read": 1,
                    "read_result": 28
                },
                "param_1": {
                    "data_pointer": 1,
                    "error_code": 1,
                    "output": 4,
                    "output_array": 1,
                    "output_buffer": 1,
                    "output_param": 2,
                    "output_pointer": 1,
                    "output_value": 3,
                    "output_value_ptr": 1,
                    "result": 12,
                    "result_pointer": 1,
                    "result_ptr": 3
                },
                "param_2": {
                    "file_descriptor": 25,
                    "input_file_descriptor": 2,
                    "source": 2,
                    "source_file_desc": 1,
                    "source_pointer": 1
                },
                "param_3": {
                    "buffer": 28,
                    "destination": 1,
                    "destination_pointer": 1,
                    "input_buffer": 1
                },
                "param_4": {
                    "buffer_size": 3,
                    "count": 21,
                    "num_bytes": 1,
                    "size": 6
                }
            },
            "called": [
                "FUN_08008858"
            ],
            "calling": [
                "FUN_0800a020"
            ],
            "code": "\nvoid read_and_assign_value_0800a168(int *result,undefined4 file_descriptor,undefined4 buffer,undefined4 count)\n\n{\n  int read_result;\n  \n  DAT_20000a38 = 0;\n  read_result = _read(file_descriptor,buffer,count,count,count);\n  if ((read_result == -1) && (DAT_20000a38 != 0)) {\n    *result = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "current_name": "read_and_assign_value_0800a168",
            "entrypoint": "0x0800a168",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800a168": "read_and_assign_value_0800a168",
                "iVar1": "read_result",
                "param_1": "result",
                "param_2": "file_descriptor",
                "param_3": "buffer",
                "param_4": "count"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800a18c": {
            "additional_data": {
                "DAT_20000994": {
                    "data_94": 1
                },
                "DAT_20000998": {
                    "data_98": 1
                },
                "DAT_2000099c": {
                    "data_9c": 1
                },
                "DAT_200009a0": {
                    "data_a0": 1
                },
                "DAT_200009a4": {
                    "data_a4": 1
                },
                "DAT_200009a8": {
                    "data_a8": 1
                },
                "DAT_200009ac": {
                    "data_ac": 1
                },
                "DAT_200009b0": {
                    "data_b0": 1
                },
                "DAT_200009b4": {
                    "data_b4": 1
                },
                "DAT_200009b8": {
                    "data_b8": 1
                },
                "DAT_200009bc": {
                    "data_bc": 1
                },
                "DAT_200009c0": {
                    "data_c0": 1
                },
                "FUN_0800a18c": {
                    "abort_and_reset": 1,
                    "abort_and_reset_vars": 1,
                    "abort_and_set_flags": 4,
                    "abort_function": 2,
                    "abort_jumptable": 1,
                    "handle_abort": 2,
                    "handle_abort_exception": 1,
                    "handle_exception": 9,
                    "initialize": 2,
                    "initialize_data": 2,
                    "initialize_flags": 1,
                    "initialize_variables": 4
                },
                "UNRECOVERED_JUMPTABLE": {
                    "exception_handler": 4,
                    "exception_jumptable": 1,
                    "handle_exception": 2,
                    "handle_exception_jumptable": 1,
                    "jmp_table": 1,
                    "jump_table": 6,
                    "jumptable": 1
                },
                "handle_exception_08009b5c": {
                    "exception_handler_08009b5c": 1,
                    "handle_exception": 23,
                    "handle_exception_code": 1,
                    "handle_exception_subfunction": 2
                }
            },
            "called": [
                "FUN_08009b5c"
            ],
            "calling": [
                "FUN_08009084"
            ],
            "code": "\nvoid handle_abort_exception_0800a18c(void)\n\n{\n  code *jump_table;\n  \n  jump_table = handle_abort_exception_0800a18c;\n  abort();\n  if (-1 < DAT_200009c0 << 0x1f) {\n    DAT_200009c0 = 1;\n  }\n  if (-1 < DAT_200009bc << 0x1f) {\n    DAT_200009bc = 1;\n  }\n  if (-1 < DAT_200009b8 << 0x1f) {\n    DAT_200009b8 = 1;\n  }\n  if (-1 < DAT_200009b4 << 0x1f) {\n    DAT_200009b4 = 1;\n  }\n  if (-1 < DAT_200009b0 << 0x1f) {\n    DAT_200009b0 = 1;\n  }\n  if (-1 < DAT_200009ac << 0x1f) {\n    DAT_200009ac = 1;\n  }\n  if (-1 < DAT_200009a8 << 0x1f) {\n    DAT_200009a8 = 1;\n  }\n  if (-1 < DAT_200009a4 << 0x1f) {\n    DAT_200009a4 = 1;\n  }\n  if (-1 < DAT_200009a0 << 0x1f) {\n    DAT_200009a0 = 1;\n  }\n  if (-1 < DAT_2000099c << 0x1f) {\n    DAT_2000099c = 1;\n  }\n  if (-1 < DAT_20000998 << 0x1f) {\n    DAT_20000998 = 1;\n  }\n  if (-1 < DAT_20000994 << 0x1f) {\n    DAT_20000994 = 1;\n  }\n                    /* WARNING: Could not recover jumptable at 0x0800a224. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)();\n  return;\n}\n\n",
            "current_name": "handle_abort_exception_0800a18c",
            "entrypoint": "0x0800a18c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800a18c": "handle_abort_exception_0800a18c",
                "UNRECOVERED_JUMPTABLE": "jump_table"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800a424": {
            "called": [],
            "calling": [
                "FUN_08009148",
                "FUN_0800010c"
            ],
            "code": "\nvoid FUNC_0800a424(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800a424",
            "entrypoint": "0x0800a424",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800a424": "FUNC_0800a424"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800a430": {
            "called": [],
            "calling": [],
            "code": "\nvoid FUNC_0800a430(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800a430",
            "entrypoint": "0x0800a430",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800a430": "FUNC_0800a430"
            },
            "skipped": true,
            "tags": []
        }
    },
    "layers": [
        [
            "FUN_0800010c",
            "FUN_08000178",
            "FUN_08000188",
            "FUN_0800018c",
            "FUN_080004d4",
            "FUN_08000588",
            "FUN_080005e0",
            "FUN_08000aec",
            "FUN_08000ef8",
            "FUN_08002400",
            "FUN_0800242c",
            "FUN_08002578",
            "FUN_08002580",
            "FUN_080025ac",
            "FUN_08002644",
            "FUN_0800267c",
            "FUN_080026b0",
            "FUN_080026f8",
            "FUN_0800270c",
            "FUN_08002720",
            "FUN_080027f0",
            "FUN_0800288c",
            "FUN_0800291c",
            "FUN_08002948",
            "FUN_08002968",
            "FUN_08002a30",
            "FUN_08002a58",
            "FUN_08002acc",
            "FUN_08002c2c",
            "FUN_08002dbc",
            "FUN_08002ddc",
            "FUN_08002df6",
            "FUN_08002e44",
            "FUN_08002ec4",
            "FUN_08002ed2",
            "FUN_08002ef2",
            "FUN_08002efe",
            "FUN_08002f0a",
            "FUN_08002f14",
            "FUN_08002f1e",
            "FUN_08002f2c",
            "FUN_08002f84",
            "FUN_08002f94",
            "FUN_08002fa0",
            "FUN_08002fa8",
            "FUN_08002fba",
            "FUN_08002fc2",
            "FUN_08002fca",
            "FUN_08003002",
            "FUN_0800307a",
            "FUN_08003106",
            "FUN_0800314e",
            "FUN_08003154",
            "FUN_08003158",
            "FUN_0800319e",
            "FUN_080031ce",
            "FUN_0800322c",
            "FUN_0800325a",
            "FUN_080032a2",
            "FUN_080032bc",
            "FUN_08003306",
            "FUN_08003346",
            "FUN_08003350",
            "FUN_08003366",
            "FUN_08003370",
            "FUN_08003376",
            "FUN_080033a8",
            "FUN_080033cc",
            "FUN_0800344a",
            "FUN_08003474",
            "FUN_080035b8",
            "FUN_08003658",
            "FUN_080036a2",
            "FUN_080036ac",
            "FUN_080036d8",
            "FUN_08003724",
            "FUN_08003748",
            "FUN_08003760",
            "FUN_0800376c",
            "FUN_080038dc",
            "FUN_080038e4",
            "FUN_08003a1c",
            "FUN_08003a20",
            "FUN_08003aa0",
            "FUN_08003b8c",
            "FUN_08003bd8",
            "FUN_08003ce8",
            "FUN_08003de4",
            "FUN_08003e20",
            "FUN_08003f0c",
            "FUN_08003f30",
            "FUN_08003f94",
            "FUN_08003fb0",
            "FUN_08003fd8",
            "FUN_08004004",
            "FUN_08004024",
            "FUN_08004046",
            "FUN_08004050",
            "FUN_080040e8",
            "FUN_080042d4",
            "FUN_080042e2",
            "FUN_080042f0",
            "FUN_0800430c",
            "FUN_08004396",
            "FUN_080043a2",
            "FUN_0800457c",
            "FUN_0800459c",
            "FUN_080045c0",
            "FUN_08004728",
            "FUN_080047f4",
            "FUN_080048c8",
            "FUN_08004954",
            "FUN_080049e0",
            "FUN_08004a24",
            "FUN_08004a76",
            "FUN_08004ac2",
            "FUN_08004aec",
            "FUN_08004b82",
            "FUN_08004ccc",
            "FUN_08004d6c",
            "FUN_08004e3c",
            "FUN_08004f3c",
            "FUN_08005084",
            "FUN_08005188",
            "FUN_080052f0",
            "FUN_0800542a",
            "FUN_08005430",
            "FUN_08005434",
            "FUN_08005460",
            "FUN_08005840",
            "FUN_080058ac",
            "FUN_080058d2",
            "FUN_08005a1c",
            "FUN_08005a28",
            "FUN_08005a48",
            "FUN_08005a68",
            "FUN_08005aa4",
            "FUN_08005bb8",
            "FUN_08005cb4",
            "FUN_08005cec",
            "FUN_08005d48",
            "FUN_08005dac",
            "FUN_08005df4",
            "FUN_08005e2e",
            "FUN_08005e6e",
            "FUN_08005fe8",
            "FUN_08006060",
            "FUN_08006092",
            "FUN_080060c4",
            "FUN_08006128",
            "FUN_08006186",
            "FUN_08006262",
            "FUN_08006280",
            "FUN_080062f4",
            "FUN_08006390",
            "FUN_080063c0",
            "FUN_08006420",
            "FUN_0800643c",
            "FUN_08006460",
            "FUN_080064b0",
            "FUN_080064cc",
            "FUN_08006538",
            "FUN_080066e8",
            "FUN_0800674e",
            "FUN_080067ac",
            "FUN_0800688e",
            "FUN_080068d6",
            "FUN_08006932",
            "FUN_0800694c",
            "FUN_080069ec",
            "FUN_08006b1c",
            "FUN_08006b28",
            "FUN_08006b3e",
            "FUN_08006b5c",
            "FUN_08006b7c",
            "FUN_08006bb8",
            "FUN_08006c60",
            "FUN_08006c7c",
            "FUN_08006ca8",
            "FUN_08006d24",
            "FUN_08006d80",
            "FUN_08006e68",
            "FUN_08007110",
            "FUN_08007118",
            "FUN_080071e4",
            "FUN_0800723c",
            "FUN_08007246",
            "FUN_08007258",
            "FUN_080072d8",
            "FUN_080072f0",
            "FUN_080072fa",
            "FUN_08007306",
            "FUN_08007320",
            "FUN_08007332",
            "FUN_0800734a",
            "FUN_0800735a",
            "FUN_08007376",
            "FUN_0800738a",
            "FUN_080073ae",
            "FUN_080073c0",
            "FUN_080073e8",
            "FUN_080073ec",
            "FUN_08007438",
            "FUN_080074e0",
            "FUN_08007544",
            "FUN_08007594",
            "FUN_080075dc",
            "FUN_08007648",
            "FUN_080076e0",
            "FUN_08007708",
            "FUN_08007710",
            "FUN_08007718",
            "FUN_0800771c",
            "FUN_08007736",
            "FUN_08007744",
            "FUN_0800774a",
            "FUN_08007750",
            "FUN_080077b0",
            "FUN_08007e74",
            "FUN_08007ede",
            "FUN_08007f0e",
            "FUN_08007f78",
            "FUN_08007f7c",
            "FUN_08007f8e",
            "FUN_08007fa0",
            "FUN_08007ff0",
            "FUN_08008020",
            "FUN_08008078",
            "FUN_080084b0",
            "FUN_08008500",
            "FUN_080085b8",
            "FUN_080085dc",
            "FUN_08008600",
            "FUN_0800863c",
            "FUN_08008694",
            "FUN_080086e8",
            "FUN_0800870c",
            "FUN_08008730",
            "FUN_08008804",
            "FUN_08008840",
            "FUN_08008846",
            "FUN_08008850",
            "FUN_08008854",
            "FUN_08008858",
            "FUN_0800885c",
            "FUN_08008868",
            "FUN_0800886c",
            "FUN_0800887c",
            "FUN_08008880",
            "FUN_080088e0",
            "FUN_08008990",
            "FUN_08008a24",
            "FUN_08008a6c",
            "FUN_08008abc",
            "FUN_08008afa",
            "FUN_08008b66",
            "FUN_08008c20",
            "FUN_08008c44",
            "FUN_08008d00",
            "FUN_08008d18",
            "FUN_08008d30",
            "FUN_08008d8c",
            "FUN_08008df8",
            "FUN_08008e14",
            "FUN_08008ef4",
            "FUN_08008f1c",
            "FUN_08008f3c",
            "FUN_08008f78",
            "FUN_08009094",
            "FUN_080090c2",
            "FUN_080090cc",
            "FUN_08009108",
            "FUN_08009124",
            "FUN_08009148",
            "FUN_08009190",
            "FUN_080091a0",
            "FUN_080091b0",
            "FUN_080091c6",
            "FUN_080091d8",
            "FUN_08009270",
            "FUN_0800932c",
            "FUN_08009358",
            "FUN_0800937c",
            "FUN_080095a8",
            "FUN_08009698",
            "FUN_080098d8",
            "FUN_08009908",
            "FUN_08009918",
            "FUN_08009938",
            "FUN_08009954",
            "FUN_0800997e",
            "FUN_080099a4",
            "FUN_08009a80",
            "FUN_08009b5c",
            "FUN_08009c7c",
            "FUN_08009cdc",
            "FUN_08009d24",
            "FUN_08009d50",
            "FUN_08009db0",
            "FUN_08009e64",
            "FUN_08009eac",
            "FUN_08009f2c",
            "FUN_08009fe8",
            "FUN_0800a020",
            "FUN_0800a042",
            "FUN_0800a07a",
            "FUN_0800a0ec",
            "FUN_0800a110",
            "FUN_0800a130",
            "FUN_0800a154",
            "FUN_0800a168"
        ],
        [
            "FUN_08000214",
            "FUN_0800021a",
            "FUN_08000488",
            "FUN_080005f8",
            "FUN_08000be8",
            "FUN_08001bf8",
            "FUN_08001c08",
            "FUN_08001c18",
            "FUN_08001cd0",
            "FUN_080022f8",
            "FUN_08002634",
            "FUN_08002a1c",
            "FUN_08002ac0",
            "FUN_08002b68",
            "FUN_08002c1e",
            "FUN_08002ce0",
            "FUN_08002e26",
            "FUN_08008f0e"
        ],
        [
            "FUN_08000500",
            "FUN_08002a26",
            "FUN_08002c00",
            "FUN_08003048"
        ],
        [
            "FUN_08000a64",
            "FUN_08001b48",
            "FUN_08002c14"
        ],
        [
            "FUN_08009084",
            "FUN_0800a18c"
        ]
    ],
    "locked_functions": [],
    "used_tokens": 1177790
}