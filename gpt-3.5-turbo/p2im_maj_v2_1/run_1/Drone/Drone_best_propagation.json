{
    "functions": {
        "FUN_08000110": {
            "additional_data": {
                "DAT_20000228": {
                    "data_flag": 2,
                    "flag": 12,
                    "flag_variable": 3
                },
                "FUN_08000110": {
                    "check_and_update_flag": 2,
                    "initialize_data": 3,
                    "initialize_data_if_not_set": 1,
                    "initialize_flag": 19,
                    "set_flag_if_zero": 2,
                    "update_flag": 1,
                    "update_flag_if_unset": 1,
                    "update_flag_if_zero": 2
                },
                "param_1": {
                    "data": 2,
                    "input": 8,
                    "input_data": 1,
                    "input_param": 2,
                    "input_parameter": 2,
                    "input_value": 12,
                    "input_variable": 1,
                    "param": 1,
                    "value": 2
                }
            },
            "called": [
                "FUN_080072d4"
            ],
            "calling": [],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800011c) */\n\nundefined4 initialize_flag_08000110(undefined4 input_value)\n\n{\n  if ((char)DAT_20000228 == '\\0') {\n    DAT_20000228._0_1_ = '\\x01';\n  }\n  return input_value;\n}\n\n",
            "current_name": "initialize_flag_08000110",
            "entrypoint": "0x08000110",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000110": "initialize_flag_08000110",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000134": {
            "additional_data": {
                "FUN_08000134": {
                    "concatenate": 3,
                    "concatenate_64bit": 1,
                    "concatenate_and_convert": 1,
                    "concatenate_and_convert_to64_bit": 1,
                    "concatenate_and_convert_to64_bits": 1,
                    "concatenate_integers": 3,
                    "concatenate_numbers": 5,
                    "concatenate_parameters": 4,
                    "concatenate_params": 6,
                    "concatenate_values": 6
                },
                "param_1": {
                    "first_32bit": 1,
                    "first_integer": 3,
                    "first_number": 5,
                    "first_param": 4,
                    "first_parameter": 3,
                    "first_value": 1,
                    "input1": 2,
                    "input_1": 2,
                    "input_parameter_1": 1,
                    "parameter1": 1,
                    "value1": 7,
                    "value_1": 1
                },
                "param_2": {
                    "input2": 2,
                    "input_2": 2,
                    "input_parameter_2": 1,
                    "parameter2": 1,
                    "second_32bit": 1,
                    "second_integer": 3,
                    "second_number": 5,
                    "second_param": 4,
                    "second_parameter": 3,
                    "second_value": 1,
                    "value2": 7,
                    "value_2": 1
                }
            },
            "called": [
                "FUN_080072d4"
            ],
            "calling": [
                "FUN_08004fb4"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800013a) */\n\nundefined8 concatenate_params_08000134(undefined4 value1,undefined4 value2)\n\n{\n  return CONCAT44(value2,value1);\n}\n\n",
            "current_name": "concatenate_params_08000134",
            "entrypoint": "0x08000134",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000134": "concatenate_params_08000134",
                "param_1": "value1",
                "param_2": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000150": {
            "additional_data": {
                "FUN_08000150": {
                    "find_end_of_string": 14,
                    "find_first_null_terminator": 1,
                    "find_last_character": 1,
                    "find_null_terminated_string": 2,
                    "find_null_terminated_string_length": 1,
                    "find_null_terminator": 2,
                    "find_string_end": 1,
                    "find_string_length": 4,
                    "get_string_length": 4,
                    "string_length": 1
                },
                "cVar1": {
                    "char": 1,
                    "char_val": 1,
                    "character": 2,
                    "current_char": 16,
                    "current_char_value": 1,
                    "current_character": 9
                },
                "param_1": {
                    "input_string": 14,
                    "str": 5,
                    "string": 12
                },
                "pcVar2": {
                    "current_character": 1,
                    "next_char": 13,
                    "next_char_pointer": 3,
                    "next_char_ptr": 4,
                    "next_character": 9,
                    "next_character_pointer": 1
                },
                "pcVar3": {
                    "current_char": 9,
                    "current_char_pointer": 3,
                    "current_char_ptr": 3,
                    "current_character": 4,
                    "current_character_pointer": 1,
                    "current_position": 6,
                    "current_str": 1,
                    "next_character": 1,
                    "string_ptr": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08004c8c"
            ],
            "code": "\nchar * find_end_of_string_08000150(char *input_string)\n\n{\n  char current_char;\n  char *next_char;\n  char *current_char;\n  \n  current_char = input_string;\n  do {\n    next_char = current_char + 1;\n    current_char = *current_char;\n    current_char = next_char;\n  } while (current_char != '\\0');\n  return next_char + (-1 - (int)input_string);\n}\n\n",
            "current_name": "find_end_of_string_08000150",
            "entrypoint": "0x08000150",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000150": "find_end_of_string_08000150",
                "cVar1": "current_char",
                "param_1": "input_string",
                "pcVar2": "next_char",
                "pcVar3": "current_char"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000168": {
            "additional_data": {
                "FUN_08000168": {
                    "calculate": 4,
                    "calculate_concatenation": 1,
                    "calculate_result": 4,
                    "calculate_sum": 2,
                    "calculate_unsigned_addition": 1,
                    "calculate_unsigned_multiplication": 1,
                    "perform_arithmetic": 2,
                    "perform_calculation": 1,
                    "perform_operation": 1,
                    "reverse_binary_calculation": 1,
                    "reverse_bits": 8
                },
                "F_to_UL_function": {
                    "convert_u_int_to_u_long_long": 1
                },
                "bVar13": {
                    "bool1": 3,
                    "bool_var_1": 1,
                    "check1": 3,
                    "check_condition": 1,
                    "compare1": 1,
                    "cond1": 1,
                    "condition1": 6,
                    "condition_1": 1,
                    "flag1": 4,
                    "is_equal": 2,
                    "is_zero": 4,
                    "should_shift": 1,
                    "temp_flag1": 1,
                    "temp_value11": 1
                },
                "bVar14": {
                    "bool2": 3,
                    "bool_var_2": 1,
                    "check2": 3,
                    "check_condition_2": 1,
                    "compare2": 1,
                    "cond2": 1,
                    "condition2": 6,
                    "condition_2": 1,
                    "flag2": 4,
                    "is_condition_met": 1,
                    "is_equal": 1,
                    "is_negative": 1,
                    "is_true": 1,
                    "is_zero": 3,
                    "temp_flag2": 1,
                    "temp_value12": 1
                },
                "bVar15": {
                    "bool3": 3,
                    "bool_var_3": 1,
                    "carry_bit_ext": 1,
                    "check3": 2,
                    "check_condition_3": 1,
                    "cond3": 1,
                    "condition3": 6,
                    "condition_3": 1,
                    "flag3": 4,
                    "is_carry": 3,
                    "is_negative": 1,
                    "is_overflow": 2,
                    "overflow": 1,
                    "signed_compare": 1,
                    "temp_flag3": 1,
                    "temp_value13": 1
                },
                "bVar2": {
                    "bit": 1,
                    "bit_check": 1,
                    "carry": 12,
                    "carry1": 2,
                    "carry_bit": 1,
                    "carry_bit1": 1,
                    "carry_flag": 2,
                    "carry_flag_1": 1,
                    "temp_6": 1,
                    "temp_value1": 1
                },
                "iVar1": {
                    "bit_count1": 1,
                    "calculated_value1": 1,
                    "int1": 1,
                    "shift1": 10,
                    "shift_amount": 3,
                    "shift_amount1": 3,
                    "shift_amount_1": 1,
                    "shift_count": 1,
                    "shift_count1": 1,
                    "shifted_bits1": 1,
                    "shifted_num4": 1,
                    "temp1": 1,
                    "temp_4": 1
                },
                "iVar8": {
                    "bit_count": 1,
                    "calculated_value2": 1,
                    "int2": 1,
                    "shift1": 1,
                    "shift2": 10,
                    "shift_amount2": 4,
                    "shift_amount_2": 2,
                    "shift_amount_ext": 1,
                    "shift_count2": 1,
                    "shifted_bits2": 1,
                    "temp11": 1,
                    "temp6": 1,
                    "temp7": 1,
                    "temp_5": 1,
                    "temp_shift_count": 1
                },
                "param_1": {
                    "a": 2,
                    "input1": 20,
                    "input_1": 5,
                    "num1": 3
                },
                "param_2": {
                    "b": 2,
                    "input2": 20,
                    "input_2": 5,
                    "num2": 3
                },
                "param_3": {
                    "c": 2,
                    "input3": 20,
                    "input_3": 5,
                    "num3": 3
                },
                "param_4": {
                    "d": 2,
                    "input4": 20,
                    "input_4": 5,
                    "num4": 3
                },
                "uVar1": {
                    "result": 1
                },
                "uVar10": {
                    "b": 1,
                    "counter": 1,
                    "input2_lower": 1,
                    "mask2": 1,
                    "masked_input1": 1,
                    "part1_b": 1,
                    "result1": 1,
                    "result2": 2,
                    "shift2": 1,
                    "temp2": 3,
                    "temp4": 5,
                    "temp5": 3,
                    "temp6": 1,
                    "temp7": 1,
                    "temp8": 1,
                    "temp9": 1,
                    "temp_1": 1,
                    "temp_c": 1,
                    "temp_mask": 1,
                    "temp_value8": 1,
                    "temp_var_6": 1
                },
                "uVar11": {
                    "c": 1,
                    "diff1": 1,
                    "output1": 1,
                    "part2_a": 1,
                    "result2": 2,
                    "result3": 4,
                    "result4": 2,
                    "result_high": 1,
                    "result_low": 1,
                    "temp10": 1,
                    "temp3": 3,
                    "temp5": 3,
                    "temp6": 2,
                    "temp7": 1,
                    "temp8": 1,
                    "temp9": 1,
                    "temp_2": 1,
                    "temp_result": 1,
                    "temp_result_2": 1,
                    "temp_value9": 1
                },
                "uVar12": {
                    "carry2": 1,
                    "carry_ext": 1,
                    "carry_flag_2": 1,
                    "d": 1,
                    "mask": 1,
                    "output1": 1,
                    "output2": 1,
                    "part2_b": 1,
                    "result4": 3,
                    "result5": 1,
                    "temp": 1,
                    "temp10": 1,
                    "temp11": 1,
                    "temp3": 1,
                    "temp4": 3,
                    "temp5": 1,
                    "temp6": 2,
                    "temp7": 2,
                    "temp8": 1,
                    "temp9": 1,
                    "temp_3": 1,
                    "temp_carry": 1,
                    "temp_mask_2": 1,
                    "temp_value10": 1
                },
                "uVar17": {
                    "shift_amount": 1
                },
                "uVar3": {
                    "carry": 4,
                    "product_lower": 1,
                    "result1": 3,
                    "result_1": 1,
                    "result_low": 1,
                    "sum1": 3,
                    "temp1": 12,
                    "temp2": 1,
                    "temp_7": 1,
                    "temp_value2": 1,
                    "temp_var_1": 1
                },
                "uVar4": {
                    "carry": 1,
                    "carry2": 1,
                    "mask_1": 1,
                    "output_high": 1,
                    "partial_result1": 1,
                    "result": 1,
                    "result1": 1,
                    "result1_carry": 1,
                    "result2": 2,
                    "result_lower": 1,
                    "sum2": 1,
                    "temp1": 1,
                    "temp2": 11,
                    "temp3": 1,
                    "temp9": 1,
                    "temp_8": 1,
                    "temp_value3": 1,
                    "temp_var_2": 1
                },
                "uVar5": {
                    "carry_sum": 1,
                    "output_low": 1,
                    "partial_result2": 1,
                    "result2": 2,
                    "result3": 2,
                    "result_2": 1,
                    "sum2": 2,
                    "sum3": 1,
                    "temp": 1,
                    "temp3": 12,
                    "temp4": 1,
                    "temp_9": 1,
                    "temp_result": 1,
                    "temp_value4": 1,
                    "temp_var_3": 1
                },
                "uVar6": {
                    "bit_count2": 1,
                    "complement": 1,
                    "extended_input2": 1,
                    "half_input1": 1,
                    "input2_shifted": 1,
                    "modified_input_4": 1,
                    "result": 2,
                    "result1": 5,
                    "result4": 1,
                    "result_1": 1,
                    "temp1": 5,
                    "temp10": 1,
                    "temp4": 4,
                    "temp5": 1,
                    "temp_a": 1,
                    "temp_high": 1,
                    "temp_value5": 1,
                    "temp_var_4": 1
                },
                "uVar7": {
                    "extended_input1": 1,
                    "half_input2": 1,
                    "input3_shifted": 1,
                    "mask_2": 1,
                    "masked_input2": 1,
                    "result1": 1,
                    "result2": 5,
                    "result5": 1,
                    "result_2": 1,
                    "temp2": 4,
                    "temp4": 2,
                    "temp5": 4,
                    "temp6": 1,
                    "temp_10": 1,
                    "temp_b": 1,
                    "temp_low": 1,
                    "temp_value6": 1,
                    "temp_var_5": 1
                },
                "uVar9": {
                    "a": 1,
                    "a_high": 1,
                    "first_condition": 1,
                    "input1_lower": 1,
                    "mask1": 1,
                    "modified_input_2": 1,
                    "part1_a": 1,
                    "result1": 3,
                    "result2": 1,
                    "result3": 2,
                    "result_high": 1,
                    "shifted_input2": 1,
                    "temp1": 2,
                    "temp2": 2,
                    "temp3": 2,
                    "temp4": 2,
                    "temp5": 1,
                    "temp6": 1,
                    "temp7": 1,
                    "temp8": 2,
                    "temp_result": 1,
                    "temp_value7": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800411c",
                "FUN_08006070",
                "FUN_08006d68",
                "FUN_08006228",
                "FUN_08006c0c",
                "FUN_080070b0",
                "FUN_08005c70"
            ],
            "code": "\nulonglong calculate_unsigned_multiplication_08000168(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int shift1;\n  byte carry;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint result1;\n  uint result2;\n  int shift2;\n  uint result1;\n  uint temp4;\n  uint result3;\n  uint temp4;\n  bool condition1;\n  bool condition2;\n  bool condition3;\n  \n  result1 = input4 ^ 0x80000000;\n  result1 = input2 << 1;\n  input4 = input4 << 1;\n  condition1 = ((input2 ^ result1) & 0x7fffffff) == 0;\n  condition2 = condition1 && input1 == input3;\n  if (!condition1 || input1 != input3) {\n    condition2 = (result1 | input1) == 0;\n  }\n  if (!condition2) {\n    condition2 = (input4 | input3) == 0;\n  }\n  shift2 = (int)result1 >> 0x15;\n  if (!condition2) {\n    condition2 = shift2 == -1;\n  }\n  shift1 = (int)input4 >> 0x15;\n  if (!condition2) {\n    condition2 = shift1 == -1;\n  }\n  if (condition2) {\n    if (shift2 == -1 || shift1 == -1) {\n      result1 = result1;\n      result3 = input3;\n      if (shift2 == -1) {\n        result1 = input2;\n        result3 = input1;\n      }\n      if (shift2 != -1 || shift1 != -1) {\n        input3 = result3;\n        result1 = result1;\n      }\n      condition2 = (result3 | result1 << 0xc) == 0;\n      if (condition2) {\n        condition2 = (input3 | result1 << 0xc) == 0;\n      }\n      if (condition2) {\n        condition2 = result1 == result1;\n      }\n      if (!condition2) {\n        result1 = result1 | 0x80000;\n      }\n      return CONCAT44(result1,result3);\n    }\n    if (((input2 ^ result1) & 0x7fffffff) != 0 || input1 != input3) {\n      if ((result1 | input1) == 0) {\n        input1 = input3;\n        input2 = result1;\n      }\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != result1) {\n      return 0;\n    }\n    if (result1 >> 0x15 == 0) {\n      condition2 = (input1 & 0x80000000) != 0;\n      result1 = input2 * 2 + (uint)condition2;\n      if (CARRY4(input2,input2) || CARRY4(input2 * 2,(uint)condition2)) {\n        result1 = result1 | 0x80000000;\n      }\n      return CONCAT44(result1,input1 << 1);\n    }\n    if (result1 < 0xffc00000) {\n      return CONCAT44(input2 + 0x100000,input1);\n    }\n    input2 = input2 & 0x80000000;\nLAB_080003ac:\n    return (ulonglong)(input2 | 0x7ff00000) << 0x20;\n  }\n  result1 = result1 >> 0x15;\n  input4 = input4 >> 0x15;\n  result3 = input4 - result1;\n  condition2 = result3 != 0;\n  if (input4 < result1) {\n    result3 = -result3;\n  }\n  temp4 = input1;\n  result2 = input2;\n  if (condition2 && result1 <= input4) {\n    result1 = result1 + result3;\n    temp4 = input3;\n    result2 = result1;\n    input3 = input1;\n    result1 = input2;\n  }\n  if (0x36 < result3) {\n    return CONCAT44(result2,temp4);\n  }\n  temp2 = result2 & 0xfffff | 0x100000;\n  if ((result2 & 0x80000000) != 0) {\n    condition2 = temp4 != 0;\n    temp4 = -temp4;\n    temp2 = -temp2 - (uint)condition2;\n  }\n  result2 = result1 & 0xfffff | 0x100000;\n  if ((result1 & 0x80000000) != 0) {\n    condition2 = input3 != 0;\n    input3 = -input3;\n    result2 = -result2 - (uint)condition2;\n  }\n  if (result1 == result3) {\n    result2 = result2 ^ 0x100000;\n    if (result1 == 0) {\n      temp2 = temp2 ^ 0x100000;\n      result1 = 1;\n    }\n    else {\n      result3 = result3 - 1;\n    }\n  }\n  result1 = -result3 + 0x20;\n  if ((int)result3 < 0x21) {\n    temp4 = input3 << (result1 & 0xff);\n    input3 = input3 >> (result3 & 0xff);\n    temp1 = temp4 + input3;\n    temp3 = result2 << (result1 & 0xff);\n    result1 = temp1 + temp3;\n    temp2 = temp2 + CARRY4(temp4,input3) + ((int)result2 >> (result3 & 0xff)) +\n            (uint)CARRY4(temp1,temp3);\n  }\n  else {\n    temp4 = result2 << (-result3 + 0x40 & 0xff);\n    if (input3 != 0) {\n      temp4 = temp4 | 2;\n    }\n    result2 = (int)result2 >> (result3 - 0x20 & 0xff);\n    result1 = temp4 + result2;\n    temp2 = temp2 + ((int)result2 >> 0x1f) + (uint)CARRY4(temp4,result2);\n  }\n  input2 = temp2 & 0x80000000;\n  result3 = temp2;\n  if ((int)temp2 < 0) {\n    condition2 = temp4 == 0;\n    temp4 = -temp4;\n    result3 = -result1;\n    result1 = -(uint)!condition2 - result1;\n    result3 = -(uint)(condition2 <= result3) - temp2;\n  }\n  if (0xfffff < result3) {\n    temp4 = result1 - 1;\n    if (0x1fffff < result3) {\n      temp4 = result3 & 1;\n      result3 = result3 >> 1;\n      carry = (byte)result1;\n      result1 = (uint)(temp4 != 0) << 0x1f | result1 >> 1;\n      temp4 = (uint)(carry & 1) << 0x1f | temp4 >> 1;\n      temp4 = result1;\n      if (0xffbfffff < result1 * 0x200000) goto LAB_080003ac;\n    }\nLAB_08000278:\n    condition2 = 0x7fffffff < temp4;\n    if (temp4 == 0x80000000) {\n      condition2 = (result1 & 1) != 0;\n    }\n    return CONCAT44(result3 + temp4 * 0x100000 + (uint)CARRY4(result1,(uint)condition2) | input2,\n                    result1 + condition2);\n  }\n  condition1 = (temp4 & 0x80000000) != 0;\n  temp4 = temp4 << 1;\n  temp4 = result1 * 2;\n  condition2 = CARRY4(result1,result1);\n  result1 = result1 * 2 + (uint)condition1;\n  result3 = result3 * 2 + (uint)(condition2 || CARRY4(temp4,(uint)condition1));\n  temp4 = result1 - 2;\n  if ((result3 & 0x100000) != 0) goto LAB_08000278;\n  result2 = result1;\n  result1 = result3;\n  if (result3 == 0) {\n    result2 = 0;\n    result1 = result1;\n  }\n  shift2 = LZCOUNT(result1);\n  if (result3 == 0) {\n    shift2 = shift2 + 0x20;\n  }\n  result3 = shift2 - 0xb;\n  condition3 = SBORROW4(result3,0x20);\n  result1 = shift2 - 0x2b;\n  condition2 = (int)result1 < 0;\n  condition1 = result1 == 0;\n  if ((int)result3 < 0x20) {\n    condition3 = SCARRY4(result1,0xc);\n    shift2 = shift2 + -0x1f;\n    condition2 = shift2 < 0;\n    condition1 = shift2 == 0;\n    result1 = result3;\n    if (!condition1 && condition2 == condition3) {\n      result2 = result1 << (result3 & 0xff);\n      result1 = result1 >> (0xcU - shift2 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (condition1 || condition2 != condition3) {\n    temp4 = 0x20 - result1;\n  }\n  result1 = result1 << (result1 & 0xff);\n  if (condition1 || condition2 != condition3) {\n    result1 = result1 | result2 >> (temp4 & 0xff);\n  }\n  if (condition1 || condition2 != condition3) {\n    result2 = result2 << (result1 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)result3 <= (int)temp4) {\n    return CONCAT44(result1 + (temp4 - result3) * 0x100000 | input2,result2);\n  }\n  result1 = ~(temp4 - result3);\n  if ((int)result1 < 0x1f) {\n    shift2 = result1 - 0x13;\n    if (shift2 != 0 && shift2 < 0 == SCARRY4(result1 - 0x1f,0xc)) {\n      return CONCAT44(temp2,result2 >> (0x20 - (0xcU - shift2) & 0xff) | result1 << (0xcU - shift2 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    result1 = result1 + 1;\n    return CONCAT44(input2 | result1 >> (result1 & 0xff),\n                    result2 >> (result1 & 0xff) | result1 << (0x20 - result1 & 0xff));\n  }\n  return CONCAT44(temp2,result1 >> (result1 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "current_name": "calculate_unsigned_multiplication_08000168",
            "entrypoint": "0x08000168",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000168": "calculate_unsigned_multiplication_08000168",
                "bVar13": "condition1",
                "bVar14": "condition2",
                "bVar15": "condition3",
                "bVar2": "carry",
                "iVar1": "shift1",
                "iVar8": "shift2",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result",
                "uVar10": "temp4",
                "uVar11": "result3",
                "uVar12": "temp4",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar5": "temp3",
                "uVar6": "result1",
                "uVar7": "result2",
                "uVar9": "result1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800016c": {
            "additional_data": {
                "CARRY4": {
                    "carry4": 1
                },
                "FUN_0800016c": {
                    "calculate_64bit_result": 1,
                    "calculate_converted_value": 1,
                    "calculate_exponent": 1,
                    "calculate_numbers": 1,
                    "calculate_product": 1,
                    "calculate_result": 6,
                    "calculate_sum": 1,
                    "calculate_sum_and_shift": 1,
                    "perform_arithmetic": 1,
                    "perform_arithmetic_operation": 1,
                    "perform_unsigned_arithmetic": 2,
                    "reverse_bits": 2,
                    "reverse_integers": 1,
                    "reverse_operation": 1,
                    "reversed_unsigned_integer_operations": 1
                },
                "bVar13": {
                    "are_integers_equal": 1,
                    "b_condition1": 1,
                    "b_var13": 1,
                    "bool1": 1,
                    "bool_1": 1,
                    "condition1": 5,
                    "condition_flag_1": 1,
                    "diff_is_negative": 1,
                    "flag1": 2,
                    "flag_1": 1,
                    "is_equal": 6,
                    "is_inputs_equal": 3,
                    "is_result_negative": 1,
                    "is_same_sign": 3,
                    "negative_check": 1,
                    "temp_bool1": 1,
                    "x_overflow": 1
                },
                "bVar14": {
                    "b_condition2": 1,
                    "b_var14": 1,
                    "bool2": 1,
                    "bool_2": 1,
                    "carry_check": 1,
                    "comparison_result": 1,
                    "condition": 1,
                    "condition1": 1,
                    "condition2": 5,
                    "condition_1": 1,
                    "condition_flag_2": 1,
                    "flag2": 2,
                    "flag_2": 1,
                    "is_condition_met": 2,
                    "is_condition_true": 1,
                    "is_special_case": 2,
                    "is_valid": 1,
                    "is_zero": 4,
                    "is_zero2": 1,
                    "temp_bool2": 1,
                    "temporary_boolean_1": 1
                },
                "bVar15": {
                    "b_condition3": 1,
                    "b_var15": 1,
                    "bool3": 1,
                    "bool_3": 1,
                    "borrow": 1,
                    "borrow_check": 1,
                    "carry_flag": 1,
                    "check_flag": 1,
                    "condition3": 4,
                    "condition_2": 1,
                    "condition_flag_3": 1,
                    "flag3": 2,
                    "flag_3": 1,
                    "is_carry": 2,
                    "is_carry_set": 1,
                    "is_condition_true2": 1,
                    "is_negative": 4,
                    "is_overflow": 1,
                    "overflow": 2,
                    "temp_bool3": 1,
                    "temporary_boolean_2": 1,
                    "y_overflow": 1
                },
                "bVar2": {
                    "carry": 12,
                    "carry_bit": 3,
                    "carry_flag": 3,
                    "least_significant_bit": 1,
                    "overflow_check": 1
                },
                "iVar1": {
                    "bit_shift1": 2,
                    "right_shift1": 1,
                    "shift1": 4,
                    "shift_1": 1,
                    "shift_amount1": 1,
                    "shift_amount2": 1,
                    "shift_amount_1": 1,
                    "shift_amt2": 1,
                    "shift_count1": 2,
                    "shift_count_1": 1,
                    "shift_count_4": 1,
                    "shift_right_4": 1,
                    "shifted_input1": 1,
                    "shifted_input2": 1,
                    "shifted_input4_sign": 1,
                    "shifted_input_2": 2,
                    "shifted_num4_sign": 1
                },
                "iVar16": {
                    "shift_amount2": 1
                },
                "iVar6": {
                    "bit_shift2": 2,
                    "input2_shifted": 1,
                    "input2_shifted_divided": 1,
                    "leading_zero_count": 1,
                    "right_shift2": 1,
                    "shift2": 4,
                    "shift_2": 1,
                    "shift_amount1": 4,
                    "shift_amount2": 1,
                    "shift_amount_2": 1,
                    "shift_amt1": 1,
                    "shift_count1": 1,
                    "shift_count2": 2,
                    "shift_count_2": 2,
                    "shifted_input2": 1,
                    "shifted_input2_shifted": 1,
                    "shifted_input2_sign": 1,
                    "shifted_input_4": 2,
                    "temp4": 1,
                    "temp_4": 1,
                    "temp_right_shift": 1
                },
                "param_1": {
                    "base": 1,
                    "first_integer": 1,
                    "input1": 18,
                    "input_1": 9,
                    "num1": 2
                },
                "param_2": {
                    "exponent": 1,
                    "input2": 18,
                    "input_2": 9,
                    "num2": 2,
                    "second_integer": 1
                },
                "param_3": {
                    "input2": 1,
                    "input3": 17,
                    "input_3": 9,
                    "num3": 2,
                    "power": 1,
                    "third_integer": 1
                },
                "param_4": {
                    "fourth_integer": 1,
                    "input2": 1,
                    "input4": 17,
                    "input_4": 9,
                    "num4": 2,
                    "result": 1
                },
                "uVar1": {
                    "shifted_input2": 1
                },
                "uVar10": {
                    "abs_difference": 1,
                    "carried_value": 1,
                    "diff_shifted_inputs": 1,
                    "difference": 2,
                    "input_diff": 1,
                    "modified_input_4": 1,
                    "normalized_result_low": 1,
                    "result2": 4,
                    "result_high": 1,
                    "shifted_input_diff": 1,
                    "shifted_power": 1,
                    "temp2": 2,
                    "temp3": 1,
                    "temp5": 1,
                    "temp7": 2,
                    "temp8": 1,
                    "temp_5": 1,
                    "temp_6": 1,
                    "temp_var3": 1,
                    "temporary": 1,
                    "u10": 1,
                    "u_result4": 1,
                    "u_var10": 1,
                    "val_diff": 1,
                    "var3": 1
                },
                "uVar10Copy": {
                    "result2_copy": 1
                },
                "uVar10MinusShiftedAmount": {
                    "shifted_amount_minus_shifted_amount": 1
                },
                "uVar10Shifted": {
                    "shifted_amount": 1
                },
                "uVar10ShiftedCopy": {
                    "shifted_amount_shifted": 1
                },
                "uVar11": {
                    "bit": 1,
                    "carry": 1,
                    "carry1": 1,
                    "carry_result": 1,
                    "normalized_result_high": 1,
                    "overflow": 1,
                    "result1": 1,
                    "result3": 1,
                    "result_upper_part": 1,
                    "shifted_bit_value": 1,
                    "shifted_input2_copy_shifted": 1,
                    "shifted_result": 1,
                    "temp1": 1,
                    "temp3": 2,
                    "temp4": 1,
                    "temp6": 1,
                    "temp8": 2,
                    "temp9": 1,
                    "temp_3": 1,
                    "temp_6": 1,
                    "temp_7": 1,
                    "temp_output_2": 1,
                    "temp_result": 1,
                    "temp_var4": 1,
                    "u11": 1,
                    "u_var11": 2,
                    "u_var12": 1,
                    "var4": 1
                },
                "uVar11Shifted": {
                    "shifted_input2_copy_shifted": 1
                },
                "uVar12": {
                    "calculation_result": 1,
                    "carry2": 1,
                    "final_result": 1,
                    "normalized_result": 1,
                    "result": 1,
                    "result2_copy": 1,
                    "result4": 2,
                    "result_lower": 1,
                    "shift_amount": 1,
                    "temp1": 1,
                    "temp10": 1,
                    "temp2": 1,
                    "temp3": 1,
                    "temp4": 3,
                    "temp5": 1,
                    "temp7": 1,
                    "temp9": 2,
                    "temp_4": 1,
                    "temp_7": 1,
                    "temp_8": 1,
                    "temp_output_1": 1,
                    "temp_value": 1,
                    "temp_var5": 1,
                    "u12": 1,
                    "u_var12": 2,
                    "var5": 1
                },
                "uVar12Copy": {
                    "result2_copy": 1
                },
                "uVar12Shifted": {
                    "shifted_amount": 1
                },
                "uVar13": {
                    "u13": 1
                },
                "uVar16": {
                    "temp6": 1
                },
                "uVar17": {
                    "shifted_input4": 1,
                    "temp7": 1
                },
                "uVar18": {
                    "shifted_input2": 1
                },
                "uVar19": {
                    "input3": 1
                },
                "uVar2": {
                    "shifted_input4": 1
                },
                "uVar20": {
                    "input4": 1
                },
                "uVar21": {
                    "input1": 1
                },
                "uVar22": {
                    "input2": 1
                },
                "uVar23": {
                    "temp1": 1
                },
                "uVar24": {
                    "temp2": 1
                },
                "uVar25": {
                    "temp3": 1
                },
                "uVar26": {
                    "temp4": 1
                },
                "uVar27": {
                    "temp5": 1
                },
                "uVar28": {
                    "temp6": 1
                },
                "uVar29": {
                    "temp7": 1
                },
                "uVar3": {
                    "l_var1": 1,
                    "lower_bits": 1,
                    "masked_input2": 1,
                    "result1": 4,
                    "result_1": 3,
                    "result_high": 1,
                    "shifted_input1": 1,
                    "shifted_value": 1,
                    "sum": 1,
                    "sum1": 3,
                    "temp": 1,
                    "temp1": 8,
                    "temp_1": 2,
                    "temp_sum_1": 1,
                    "tmp5": 1,
                    "u_var3": 1
                },
                "uVar30": {
                    "temp8": 1
                },
                "uVar31": {
                    "temp9": 1
                },
                "uVar32": {
                    "temp10": 1
                },
                "uVar33": {
                    "temp11": 1
                },
                "uVar34": {
                    "temp12": 1
                },
                "uVar35": {
                    "temp13": 1
                },
                "uVar36": {
                    "temp14": 1
                },
                "uVar37": {
                    "temp15": 1
                },
                "uVar38": {
                    "temp16": 1
                },
                "uVar4": {
                    "masked_input4": 1,
                    "result2": 5,
                    "result_2": 2,
                    "result_low": 1,
                    "result_upper_part_when_left_shifted": 1,
                    "shifted_carry": 1,
                    "shifted_input2": 1,
                    "shifted_value_1": 1,
                    "sum2": 3,
                    "sum_lower_bits": 1,
                    "temp1": 1,
                    "temp2": 8,
                    "temp_2": 2,
                    "temp_sum_2": 1,
                    "u_var2": 1,
                    "u_var4": 1
                },
                "uVar5": {
                    "input4_shifted_modified": 1,
                    "l_var3": 1,
                    "masked_input2_shifted": 1,
                    "num2": 1,
                    "result1": 1,
                    "result3": 2,
                    "result_2": 1,
                    "result_3": 1,
                    "shifted_input3": 1,
                    "shifted_input4": 1,
                    "shifted_input_3": 1,
                    "temp1": 1,
                    "temp2": 1,
                    "temp3": 7,
                    "temp_1": 2,
                    "temp_3": 2,
                    "temp_var1": 1,
                    "u5": 1,
                    "u_var5": 2,
                    "val1": 1,
                    "var2": 1
                },
                "uVar5And1": {
                    "compare_result": 1
                },
                "uVar5Copy": {
                    "temp3_copy": 1
                },
                "uVar5Shifted": {
                    "temp3_copy_shifted": 1
                },
                "uVar5ShiftedCopy": {
                    "temp3_copy_shifted": 1
                },
                "uVar7": {
                    "input2_shifted": 2,
                    "num2_shifted": 1,
                    "shifted_exponent": 1,
                    "shifted_input1": 1,
                    "shifted_input1_copy": 1,
                    "shifted_input2": 7,
                    "shifted_input2_copy": 1,
                    "shifted_input2_shifted_unsigned": 1,
                    "shifted_input_2": 4,
                    "shifted_input_2_1": 1,
                    "shifted_num2": 1,
                    "shifted_second_integer": 1,
                    "temp2": 1,
                    "temp3": 1,
                    "temp4": 2,
                    "temp5": 1,
                    "temp_2": 1,
                    "tmp8": 1,
                    "u_var5": 1,
                    "u_var7": 1
                },
                "uVar7Copy": {
                    "shifted_input1_copy": 1
                },
                "uVar7CopyShifted": {
                    "shifted_input1_copy_shifted": 1
                },
                "uVar7Shifted": {
                    "shifted_input1_copy_shifted": 1
                },
                "uVar7ShiftedByShiftedAmount": {
                    "shifted_input1_copy_shifted": 1
                },
                "uVar8": {
                    "carry_result": 1,
                    "input1_modified": 1,
                    "num4_shifted": 1,
                    "result1": 1,
                    "result2": 1,
                    "shift_amount2": 1,
                    "shifted_difference": 1,
                    "shifted_fourth_integer": 1,
                    "shifted_input2": 1,
                    "shifted_input3_copy": 1,
                    "shifted_input4": 3,
                    "shifted_input_1": 2,
                    "shifted_input_4_1": 1,
                    "shifted_result": 1,
                    "sum_result": 1,
                    "temp3": 1,
                    "temp4": 1,
                    "temp5": 2,
                    "temp6": 1,
                    "temp_2": 1,
                    "temp_3": 1,
                    "temp_5": 1,
                    "temp_var2": 1,
                    "u8": 1,
                    "u_shifted_input4": 1,
                    "u_var8": 1,
                    "var1": 1
                },
                "uVar8Copy": {
                    "result1_copy": 1
                },
                "uVar8MinusShiftedAmount": {
                    "result1_minus_shifted_amount": 1
                },
                "uVar8Shifted": {
                    "result1_shifted": 1
                },
                "uVar9": {
                    "combine_result": 1,
                    "input4_shifted": 2,
                    "modified_input_2": 1,
                    "result": 1,
                    "result1": 3,
                    "result_low": 1,
                    "shifted_base": 1,
                    "shifted_input2_copy": 1,
                    "shifted_input4": 3,
                    "shifted_input4_copy": 1,
                    "shifted_input_4": 3,
                    "temp1": 2,
                    "temp2": 1,
                    "temp4": 1,
                    "temp6": 2,
                    "temp7": 1,
                    "temp_4": 2,
                    "temporary_2": 1,
                    "u_var7": 1,
                    "u_var9": 1,
                    "val2": 1
                },
                "uVar9And1": {
                    "compare_result": 1
                },
                "uVar9Copy": {
                    "shifted_input2_copy": 1
                },
                "uVar9MinusShiftedAmount": {
                    "shifted_amount_minus_shifted_amount": 1
                },
                "uVar9Shifted": {
                    "shifted_input2_copy_shifted": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08006070",
                "FUN_080071c0",
                "FUN_08006d68",
                "FUN_08006228",
                "FUN_08006c0c",
                "FUN_080070b0",
                "FUN_08005c70"
            ],
            "code": "\nulonglong calculate_64bit_result_0800016c(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int shift1;\n  byte carry;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  int shift_amount1;\n  uint shifted_input2;\n  uint shifted_input4;\n  uint shifted_input4;\n  uint result2;\n  uint u_var11;\n  uint temp4;\n  bool is_equal;\n  bool condition2;\n  bool condition3;\n  \n  shifted_input2 = input2 << 1;\n  shifted_input4 = input4 << 1;\n  is_equal = ((input2 ^ input4) & 0x7fffffff) == 0;\n  condition2 = is_equal && input1 == input3;\n  if (!is_equal || input1 != input3) {\n    condition2 = (shifted_input2 | input1) == 0;\n  }\n  if (!condition2) {\n    condition2 = (shifted_input4 | input3) == 0;\n  }\n  shift_amount1 = (int)shifted_input2 >> 0x15;\n  if (!condition2) {\n    condition2 = shift_amount1 == -1;\n  }\n  shift1 = (int)shifted_input4 >> 0x15;\n  if (!condition2) {\n    condition2 = shift1 == -1;\n  }\n  if (condition2) {\n    if (shift_amount1 == -1 || shift1 == -1) {\n      shifted_input4 = input4;\n      shifted_input2 = input3;\n      if (shift_amount1 == -1) {\n        shifted_input4 = input2;\n        shifted_input2 = input1;\n      }\n      if (shift_amount1 != -1 || shift1 != -1) {\n        input3 = shifted_input2;\n        input4 = shifted_input4;\n      }\n      condition2 = (shifted_input2 | shifted_input4 << 0xc) == 0;\n      if (condition2) {\n        condition2 = (input3 | input4 << 0xc) == 0;\n      }\n      if (condition2) {\n        condition2 = shifted_input4 == input4;\n      }\n      if (!condition2) {\n        shifted_input4 = shifted_input4 | 0x80000;\n      }\n      return CONCAT44(shifted_input4,shifted_input2);\n    }\n    if (((input2 ^ input4) & 0x7fffffff) != 0 || input1 != input3) {\n      if ((shifted_input2 | input1) == 0) {\n        input1 = input3;\n        input2 = input4;\n      }\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != input4) {\n      return 0;\n    }\n    if (shifted_input2 >> 0x15 == 0) {\n      condition2 = (input1 & 0x80000000) != 0;\n      shifted_input4 = input2 * 2 + (uint)condition2;\n      if (carry4(input2,input2) || carry4(input2 * 2,(uint)condition2)) {\n        shifted_input4 = shifted_input4 | 0x80000000;\n      }\n      return CONCAT44(shifted_input4,input1 << 1);\n    }\n    if (shifted_input2 < 0xffc00000) {\n      return CONCAT44(input2 + 0x100000,input1);\n    }\n    input2 = input2 & 0x80000000;\nLAB_080003ac:\n    return (ulonglong)(input2 | 0x7ff00000) << 0x20;\n  }\n  shifted_input2 = shifted_input2 >> 0x15;\n  shifted_input4 = shifted_input4 >> 0x15;\n  result2 = shifted_input4 - shifted_input2;\n  condition2 = result2 != 0;\n  if (shifted_input4 < shifted_input2) {\n    result2 = -result2;\n  }\n  shifted_input4 = input1;\n  temp3 = input2;\n  if (condition2 && shifted_input2 <= shifted_input4) {\n    shifted_input2 = shifted_input2 + result2;\n    shifted_input4 = input3;\n    temp3 = input4;\n    input3 = input1;\n    input4 = input2;\n  }\n  if (0x36 < result2) {\n    return CONCAT44(temp3,shifted_input4);\n  }\n  shifted_input4 = temp3 & 0xfffff | 0x100000;\n  if ((temp3 & 0x80000000) != 0) {\n    condition2 = shifted_input4 != 0;\n    shifted_input4 = -shifted_input4;\n    shifted_input4 = -shifted_input4 - (uint)condition2;\n  }\n  temp3 = input4 & 0xfffff | 0x100000;\n  if ((input4 & 0x80000000) != 0) {\n    condition2 = input3 != 0;\n    input3 = -input3;\n    temp3 = -temp3 - (uint)condition2;\n  }\n  if (shifted_input2 == result2) {\n    temp3 = temp3 ^ 0x100000;\n    if (shifted_input2 == 0) {\n      shifted_input4 = shifted_input4 ^ 0x100000;\n      shifted_input2 = 1;\n    }\n    else {\n      result2 = result2 - 1;\n    }\n  }\n  temp4 = -result2 + 0x20;\n  if ((int)result2 < 0x21) {\n    u_var11 = input3 << (temp4 & 0xff);\n    input3 = input3 >> (result2 & 0xff);\n    temp1 = shifted_input4 + input3;\n    temp2 = temp3 << (temp4 & 0xff);\n    temp4 = temp1 + temp2;\n    shifted_input4 = shifted_input4 + carry4(shifted_input4,input3) + ((int)temp3 >> (result2 & 0xff)) +\n            (uint)carry4(temp1,temp2);\n  }\n  else {\n    u_var11 = temp3 << (-result2 + 0x40 & 0xff);\n    if (input3 != 0) {\n      u_var11 = u_var11 | 2;\n    }\n    temp3 = (int)temp3 >> (result2 - 0x20 & 0xff);\n    temp4 = shifted_input4 + temp3;\n    shifted_input4 = shifted_input4 + ((int)temp3 >> 0x1f) + (uint)carry4(shifted_input4,temp3);\n  }\n  input2 = shifted_input4 & 0x80000000;\n  result2 = shifted_input4;\n  if ((int)shifted_input4 < 0) {\n    condition2 = u_var11 == 0;\n    u_var11 = -u_var11;\n    result2 = -temp4;\n    temp4 = -(uint)!condition2 - temp4;\n    result2 = -(uint)(condition2 <= result2) - shifted_input4;\n  }\n  if (0xfffff < result2) {\n    shifted_input4 = shifted_input2 - 1;\n    if (0x1fffff < result2) {\n      shifted_input4 = result2 & 1;\n      result2 = result2 >> 1;\n      carry = (byte)temp4;\n      temp4 = (uint)(shifted_input4 != 0) << 0x1f | temp4 >> 1;\n      u_var11 = (uint)(carry & 1) << 0x1f | u_var11 >> 1;\n      shifted_input4 = shifted_input2;\n      if (0xffbfffff < shifted_input2 * 0x200000) goto LAB_080003ac;\n    }\nLAB_08000278:\n    condition2 = 0x7fffffff < u_var11;\n    if (u_var11 == 0x80000000) {\n      condition2 = (temp4 & 1) != 0;\n    }\n    return CONCAT44(result2 + shifted_input4 * 0x100000 + (uint)carry4(temp4,(uint)condition2) | input2,\n                    temp4 + condition2);\n  }\n  is_equal = (u_var11 & 0x80000000) != 0;\n  u_var11 = u_var11 << 1;\n  shifted_input4 = temp4 * 2;\n  condition2 = carry4(temp4,temp4);\n  temp4 = temp4 * 2 + (uint)is_equal;\n  result2 = result2 * 2 + (uint)(condition2 || carry4(shifted_input4,(uint)is_equal));\n  shifted_input4 = shifted_input2 - 2;\n  if ((result2 & 0x100000) != 0) goto LAB_08000278;\n  temp3 = temp4;\n  shifted_input2 = result2;\n  if (result2 == 0) {\n    temp3 = 0;\n    shifted_input2 = temp4;\n  }\n  shift_amount1 = LZCOUNT(shifted_input2);\n  if (result2 == 0) {\n    shift_amount1 = shift_amount1 + 0x20;\n  }\n  temp4 = shift_amount1 - 0xb;\n  condition3 = SBORROW4(temp4,0x20);\n  result2 = shift_amount1 - 0x2b;\n  condition2 = (int)result2 < 0;\n  is_equal = result2 == 0;\n  if ((int)temp4 < 0x20) {\n    condition3 = Scarry4(result2,0xc);\n    shift_amount1 = shift_amount1 + -0x1f;\n    condition2 = shift_amount1 < 0;\n    is_equal = shift_amount1 == 0;\n    result2 = temp4;\n    if (!is_equal && condition2 == condition3) {\n      temp3 = shifted_input2 << (temp4 & 0xff);\n      shifted_input2 = shifted_input2 >> (0xcU - shift_amount1 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (is_equal || condition2 != condition3) {\n    u_var11 = 0x20 - result2;\n  }\n  shifted_input2 = shifted_input2 << (result2 & 0xff);\n  if (is_equal || condition2 != condition3) {\n    shifted_input2 = shifted_input2 | temp3 >> (u_var11 & 0xff);\n  }\n  if (is_equal || condition2 != condition3) {\n    temp3 = temp3 << (result2 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)temp4 <= (int)shifted_input4) {\n    return CONCAT44(shifted_input2 + (shifted_input4 - temp4) * 0x100000 | input2,temp3);\n  }\n  result2 = ~(shifted_input4 - temp4);\n  if ((int)result2 < 0x1f) {\n    shift_amount1 = result2 - 0x13;\n    if (shift_amount1 != 0 && shift_amount1 < 0 == Scarry4(result2 - 0x1f,0xc)) {\n      return CONCAT44(shifted_input4,temp3 >> (0x20 - (0xcU - shift_amount1) & 0xff) | shifted_input2 << (0xcU - shift_amount1 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    result2 = result2 + 1;\n    return CONCAT44(input2 | shifted_input2 >> (result2 & 0xff),\n                    temp3 >> (result2 & 0xff) | shifted_input2 << (0x20 - result2 & 0xff));\n  }\n  return CONCAT44(shifted_input4,shifted_input2 >> (result2 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "current_name": "calculate_64bit_result_0800016c",
            "entrypoint": "0x0800016c",
            "imported": false,
            "improved": true,
            "renaming": {
                "CARRY4": "carry4",
                "FUN_0800016c": "calculate_64bit_result_0800016c",
                "bVar13": "is_equal",
                "bVar14": "condition2",
                "bVar15": "condition3",
                "bVar2": "carry",
                "iVar1": "shift1",
                "iVar6": "shift_amount1",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "shifted_input2",
                "uVar10": "result2",
                "uVar11": "u_var11",
                "uVar12": "temp4",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar5": "temp3",
                "uVar7": "shifted_input2",
                "uVar8": "shifted_input4",
                "uVar9": "shifted_input4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000404": {
            "additional_data": {
                "0U": {
                    "zero": 1
                },
                "0x80000000": {
                    "min_int": 1
                },
                "CONCAT44": {
                    "build_result": 1,
                    "combine_upper_lower": 1,
                    "concatenate": 1
                },
                "DAT_08000448": {
                    "constant432": 1
                },
                "DAT_08000AA8": {
                    "constant432_minus_shift_value": 1
                },
                "DAT_08000ACC": {
                    "constant_negative31": 1
                },
                "FUN_08000404": {
                    "bit_manipulation": 1,
                    "bit_shift_and_concat": 1,
                    "bit_shuffle": 1,
                    "bitwise_reverse": 1,
                    "bitwise_shift": 2,
                    "bitwise_shift_and_concatenate": 1,
                    "compute_shifted_concatenation": 1,
                    "convert_to_u_int64": 1,
                    "number_manipulation": 1,
                    "process_bits": 1,
                    "reverse_and_shift": 1,
                    "reverse_and_shift_bits": 1,
                    "reverse_bits": 9,
                    "reverse_bits_and_shift": 1,
                    "reverse_bits_shift": 1,
                    "reverse_bitwise_shift": 1,
                    "reverse_shift_and_concat": 1,
                    "shift_and_combine": 2,
                    "shift_and_concat": 1,
                    "shift_and_concatenate": 1
                },
                "LAB_080002f0": {
                    "after_shift": 1,
                    "continue_shift": 1,
                    "end_of_function": 1,
                    "perform_shift": 1,
                    "shift_result": 1
                },
                "LZCOUNT": {
                    "count_leading_zeros": 1
                },
                "SCARRY4": {
                    "check_subtraction_carry": 1
                },
                "bVar7": {
                    "condition1": 1,
                    "is_negative": 18,
                    "is_negative_shift": 3,
                    "is_shift_negative": 1,
                    "is_zero": 1,
                    "less_than_zero": 1,
                    "negative": 1,
                    "negative_shift_amount": 1,
                    "non_negative": 1,
                    "shift_flag": 1,
                    "shift_greater_zero": 1,
                    "should_shift": 1
                },
                "bVar8": {
                    "condition2": 1,
                    "equal_zero": 1,
                    "is_positive": 1,
                    "is_shift_zero": 1,
                    "is_zero": 18,
                    "is_zero_bit_count": 1,
                    "is_zero_shift": 3,
                    "no_shift": 1,
                    "shift_equal_zero": 1,
                    "shift_zero": 1,
                    "zero_flag": 1,
                    "zero_shift": 1
                },
                "bVar9": {
                    "borrowed": 1,
                    "carry": 4,
                    "carry_flag": 10,
                    "condition3": 1,
                    "is_carry": 7,
                    "is_carry_set": 1,
                    "is_out_of_range": 1,
                    "is_shifted": 1,
                    "is_subtraction_overflow": 1,
                    "overflow": 4
                },
                "iVar4": {
                    "bit_count": 1,
                    "highest_bit_position": 1,
                    "leading_zero_count": 1,
                    "leading_zeroes": 2,
                    "leading_zeros": 23,
                    "num_bits": 1,
                    "temp3": 1,
                    "tmp4": 1
                },
                "in_r12": {
                    "bit_mask": 1,
                    "in_r12": 1,
                    "mask": 2,
                    "remaining_bits": 20,
                    "remaining_shift": 1,
                    "reserved": 1,
                    "shift_mask": 1,
                    "temp_var": 1,
                    "temporary_value": 1,
                    "zero_bits": 1,
                    "zero_shift": 1
                },
                "new_variable_name_1": {
                    "updated_var_name_1": 1
                },
                "new_variable_name_2": {
                    "updated_var_name_2": 1
                },
                "new_variable_name_n": {
                    "updated_var_name_n": 1
                },
                "param_1": {
                    "input": 24,
                    "input_number": 3,
                    "input_value": 2,
                    "number": 2
                },
                "uVar1": {
                    "bit_count": 4,
                    "bit_shifted_input": 1,
                    "count": 1,
                    "mask": 1,
                    "output_high": 2,
                    "result": 5,
                    "shift": 1,
                    "shift_amount": 2,
                    "shift_count": 3,
                    "shift_result": 1,
                    "shifted_bits": 1,
                    "shifted_output": 1,
                    "shifted_result_high": 1,
                    "shifted_value": 5,
                    "tmp1": 1,
                    "zero": 1
                },
                "uVar10": {
                    "shifted_input": 1
                },
                "uVar11": {
                    "concatenated_result": 1
                },
                "uVar2": {
                    "abs_input": 16,
                    "abs_input_number": 1,
                    "abs_number": 1,
                    "abs_value": 2,
                    "absolute_number": 2,
                    "absolute_value": 2,
                    "input_abs": 1,
                    "temp": 2,
                    "temp1": 1,
                    "temp_input": 2,
                    "tmp2": 1
                },
                "uVar3": {
                    "new_shift_count": 1,
                    "num_shift": 1,
                    "remaining_bits": 1,
                    "shift": 1,
                    "shift_amount": 20,
                    "shift_count": 2,
                    "shift_offset": 1,
                    "shift_result": 1,
                    "shift_value": 1,
                    "temp2": 1,
                    "tmp3": 1
                },
                "uVar5": {
                    "adjusted_bit_count": 1,
                    "adjusted_count": 1,
                    "adjusted_shift": 3,
                    "adjusted_shift_amount": 3,
                    "adjusted_shift_count": 2,
                    "final_shift": 1,
                    "final_shift_amount": 3,
                    "new_bit_count": 1,
                    "new_shift": 1,
                    "new_shift_amount": 1,
                    "shift": 1,
                    "shift_amount": 1,
                    "shifted_amount": 1,
                    "shifted_bit_count": 1,
                    "shifted_high": 1,
                    "shifted_value_minus_b": 1,
                    "total_bits": 3,
                    "total_shift": 2,
                    "total_size": 1,
                    "upper_bound": 1,
                    "upper_limit": 1
                },
                "uVar6": {
                    "highest_bit": 1,
                    "input_sign": 3,
                    "is_negative": 3,
                    "mask": 1,
                    "msb": 1,
                    "output": 1,
                    "sign_bit": 20,
                    "sign_bit_check": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08006228"
            ],
            "code": "\nulonglong reverse_and_shift_bits_08000404(uint input)\n\n{\n  uint shifted_value;\n  uint abs_input;\n  uint shift_amount;\n  int leading_zeros;\n  uint total_bits;\n  uint sign_bit;\n  uint remaining_bits;\n  bool is_negative;\n  bool is_zero;\n  bool carry_flag;\n  \n  if (input == 0) {\n    return 0;\n  }\n  sign_bit = input & 0x80000000;\n  abs_input = input;\n  if ((int)sign_bit < 0) {\n    abs_input = -input;\n  }\n  shifted_value = 0;\n  leading_zeros = count_leading_zeros(abs_input);\n  total_bits = leading_zeros + 0x15;\n  carry_flag = SBORROW4(total_bits,0x20);\n  shift_amount = leading_zeros - 0xb;\n  is_negative = (int)shift_amount < 0;\n  is_zero = shift_amount == 0;\n  if (total_bits < 0x20) {\n    carry_flag = check_subtraction_carry(shift_amount,0xc);\n    is_negative = false;\n    is_zero = leading_zeros + 1 == 0;\n    shift_amount = total_bits;\n    if (!is_zero && carry_flag == false) {\n      shifted_value = abs_input << total_bits;\n      abs_input = abs_input >> (0xcU - (leading_zeros + 1) & 0xff);\n      goto continue_shift;\n    }\n  }\n  if (is_zero || is_negative != carry_flag) {\n    remaining_bits = 0x20 - shift_amount;\n  }\n  abs_input = abs_input << (shift_amount & 0xff);\n  if (is_zero || is_negative != carry_flag) {\n    abs_input = abs_input | zero >> (remaining_bits & 0xff);\n  }\n  if (is_zero || is_negative != carry_flag) {\n    shifted_value = 0 << (shift_amount & 0xff);\n  }\ncontinue_shift:\n  if (total_bits < 0x433) {\n    return combine_upper_lower(abs_input + (0x432 - total_bits) * 0x100000 | sign_bit,shifted_value);\n  }\n  shift_amount = ~(0x432 - total_bits);\n  if (0x1e < (int)shift_amount) {\n    return combine_upper_lower(input,abs_input >> (shift_amount - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  leading_zeros = shift_amount - 0x13;\n  if (leading_zeros == 0 || leading_zeros < 0 != check_subtraction_carry(shift_amount - 0x1f,0xc)) {\n    shift_amount = shift_amount + 1;\n    return combine_upper_lower(sign_bit | abs_input >> (shift_amount & 0xff),\n                    shifted_value >> (shift_amount & 0xff) | abs_input << (0x20 - shift_amount & 0xff));\n  }\n  return combine_upper_lower(input,shifted_value >> (0x20 - (0xcU - leading_zeros) & 0xff) | abs_input << (0xcU - leading_zeros & 0xff))\n         & 0x80000000ffffffff;\n}\n\n",
            "current_name": "reverse_and_shift_bits_08000404",
            "entrypoint": "0x08000404",
            "imported": false,
            "improved": true,
            "renaming": {
                "0U": "zero",
                "CONCAT44": "combine_upper_lower",
                "FUN_08000404": "reverse_and_shift_bits_08000404",
                "LAB_080002f0": "continue_shift",
                "LZCOUNT": "count_leading_zeros",
                "SCARRY4": "check_subtraction_carry",
                "bVar7": "is_negative",
                "bVar8": "is_zero",
                "bVar9": "carry_flag",
                "iVar4": "leading_zeros",
                "in_r12": "remaining_bits",
                "param_1": "input",
                "uVar1": "shifted_value",
                "uVar2": "abs_input",
                "uVar3": "shift_amount",
                "uVar5": "total_bits",
                "uVar6": "sign_bit"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000428": {
            "additional_data": {
                "FUN_08000428": {
                    "calculate_new_value": 1,
                    "calculate_unsigned_long_long": 1,
                    "decode_bits_and_concat": 1,
                    "extract_bit_range": 1,
                    "more_descriptive_function_name": 1,
                    "reverse_bits": 20,
                    "reverse_bits_and_shift": 1,
                    "reverse_bitwise_operation": 1
                },
                "bVar10": {
                    "b3": 1,
                    "carry": 2,
                    "check_overflow": 1,
                    "greater_than32": 1,
                    "is_bit_count_positive": 1,
                    "is_carry": 1,
                    "is_count_negative": 1,
                    "is_invalid": 1,
                    "is_less_than12": 2,
                    "is_mask2": 1,
                    "is_negative": 5,
                    "is_out_of_bounds": 1,
                    "is_overflow": 2,
                    "is_shift_count_negative": 1,
                    "is_shift_negative": 1,
                    "is_shift_positive": 1,
                    "is_shifted": 1,
                    "is_zero2": 1,
                    "overflow": 1,
                    "overflow_flag": 1,
                    "param4_equals255": 1,
                    "shift_carry": 1,
                    "sign_comparison": 1
                },
                "bVar8": {
                    "b1": 1,
                    "bit_flag": 1,
                    "is_bit_count_negative": 1,
                    "is_bit_count_zero": 1,
                    "is_less_than": 1,
                    "is_less_than32": 1,
                    "is_negative": 6,
                    "is_negative_count": 1,
                    "is_negative_shift": 1,
                    "is_shift_value_zero": 1,
                    "is_shift_zero": 2,
                    "is_zero": 9,
                    "is_zero_shift": 1,
                    "less_than32": 1,
                    "shift_zero": 1
                },
                "bVar9": {
                    "b2": 1,
                    "check_ff000000": 1,
                    "check_param4": 1,
                    "equal32": 1,
                    "is_all_ones": 2,
                    "is_all_zeros": 1,
                    "is_equal": 1,
                    "is_ff": 1,
                    "is_full_mask": 1,
                    "is_mask": 1,
                    "is_mask1": 1,
                    "is_mask_zero": 4,
                    "is_masked": 1,
                    "is_not_empty": 1,
                    "is_param4_equal": 1,
                    "is_shift_zero": 1,
                    "is_zero": 7,
                    "is_zero1": 1,
                    "is_zero2": 1,
                    "param4_is_zero": 1
                },
                "iVar6": {
                    "adjusted_shift": 1,
                    "bit_count": 11,
                    "count": 7,
                    "count_bits": 1,
                    "leading_zeros": 5,
                    "lz_count": 1,
                    "shift_amount": 2,
                    "shift_count": 1,
                    "shift_result": 1,
                    "shifted_count": 1
                },
                "in_r12": {
                    "bit_mask": 1,
                    "const_value": 1,
                    "constant": 1,
                    "in_r12": 1,
                    "in_register": 1,
                    "inverted_shift_amount": 1,
                    "remainder": 4,
                    "remainder_value": 1,
                    "remaining_bits": 12,
                    "remaining_count": 1,
                    "remaining_shift": 1,
                    "shift_amount": 1,
                    "shifted_bits": 1,
                    "shifting_variable": 1,
                    "temp_shift": 1,
                    "zero_count": 1
                },
                "param_1": {
                    "input": 22,
                    "input_param": 1,
                    "input_value": 8
                },
                "param_2": {
                    "flag_param": 1,
                    "param1": 2,
                    "param2": 4,
                    "parameter2": 1,
                    "unknown1": 1,
                    "unused": 3,
                    "unused1": 2,
                    "unused_param": 4,
                    "unused_param1": 2
                },
                "param_3": {
                    "param2": 2,
                    "param3": 4,
                    "parameter3": 1,
                    "unknown2": 1,
                    "unused": 3,
                    "unused2": 2,
                    "unused_param": 4,
                    "unused_param2": 2,
                    "unused_param_2": 1
                },
                "param_4": {
                    "condition": 1,
                    "flag": 1,
                    "input_mask": 1,
                    "mask": 13,
                    "mask_param": 1,
                    "mask_value": 1,
                    "param": 1,
                    "param3": 2,
                    "param4": 4,
                    "parameter4": 1,
                    "to_check": 1,
                    "unused3": 1,
                    "unused_param": 1,
                    "unused_param3": 1,
                    "upper_byte": 1
                },
                "uVar1": {
                    "bit31": 5,
                    "bit31_flag": 1,
                    "bit31_mask": 1,
                    "bit_sign": 1,
                    "high_bit": 1,
                    "highest_bit": 1,
                    "mask": 1,
                    "msb": 3,
                    "msb_bit": 1,
                    "shifted_input": 1,
                    "shifted_mask": 1,
                    "shifted_msb": 1,
                    "sign_bit": 6,
                    "sign_bit_mask": 1,
                    "sign_extension": 2,
                    "sign_flag": 1,
                    "sign_mask": 1,
                    "sign_shift": 1,
                    "upper_mask": 1
                },
                "uVar11": {
                    "final_result": 1
                },
                "uVar2": {
                    "input_copy": 1,
                    "output": 2,
                    "output_value": 1,
                    "result": 5,
                    "result1": 1,
                    "result_high": 1,
                    "result_part1": 1,
                    "shifted_input": 5,
                    "shifted_input_value": 1,
                    "shifted_value": 1,
                    "temp": 5,
                    "temp1": 2,
                    "temp_input": 1,
                    "temp_value": 2,
                    "temp_var": 1,
                    "temp_var1": 1
                },
                "uVar3": {
                    "bit_mask": 1,
                    "combined": 1,
                    "combined_bits": 1,
                    "combined_value": 2,
                    "final_result": 1,
                    "output": 1,
                    "result": 8,
                    "result1": 2,
                    "result2": 1,
                    "result_bits1": 1,
                    "result_high": 4,
                    "result_high_bits": 1,
                    "result_part2": 1,
                    "result_upper": 2,
                    "secondary_result": 1,
                    "shifted_result_high": 1,
                    "sign_and_shift": 1
                },
                "uVar4": {
                    "num_bits": 1,
                    "result2": 1,
                    "shamt": 1,
                    "shift": 3,
                    "shift_amount": 4,
                    "shift_amt": 2,
                    "shift_amt1": 1,
                    "shift_count": 1,
                    "shift_count1": 1,
                    "shift_result": 1,
                    "shift_value": 2,
                    "shifted": 1,
                    "shifted_input": 5,
                    "shifted_input2": 2,
                    "shifted_result_low": 1,
                    "shifted_value": 4
                },
                "uVar5": {
                    "adjusted_input": 1,
                    "doubled_input": 2,
                    "input_shifted": 2,
                    "input_times2": 1,
                    "input_times_2": 1,
                    "shift_amt2": 1,
                    "shifted": 1,
                    "shifted_input": 4,
                    "shifted_input2": 3,
                    "shifted_input3": 1,
                    "shifted_input_mult": 1,
                    "temp": 6,
                    "temp2": 3,
                    "temp_shifted_value": 1,
                    "temp_value": 1,
                    "temp_var2": 1,
                    "twice_input_value": 1
                },
                "uVar7": {
                    "adjusted_shift": 1,
                    "adjusted_shift_amount": 1,
                    "diff_bit_count": 1,
                    "diff_value": 1,
                    "lower_bits": 1,
                    "masked_count": 1,
                    "remainder": 1,
                    "remaining_bits": 2,
                    "shift_amount": 7,
                    "shift_count2": 1,
                    "shifted_amount": 2,
                    "shifted_bits": 2,
                    "shifted_count": 2,
                    "shifted_leading_zeros": 1,
                    "shifted_result": 1,
                    "shifted_value": 2,
                    "subtract_constant": 1,
                    "temp": 1,
                    "temp_count": 1,
                    "temp_var": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800411c",
                "FUN_08003330"
            ],
            "code": "\nulonglong reverse_bits_and_shift_08000428(uint input,undefined4 unused_param,undefined4 unused_param,uint mask)\n\n{\n  uint sign_bit;\n  uint temp;\n  uint result;\n  uint shifted_input;\n  uint temp;\n  int bit_count;\n  uint shift_amount;\n  uint remaining_bits;\n  bool is_zero;\n  bool is_zero;\n  bool is_negative;\n  \n  temp = input << 1;\n  is_zero = temp == 0;\n  sign_bit = (uint)((input & 0x80000000) != 0) << 0x1f;\n  shifted_input = (uint)((int)temp >> 3) >> 1;\n  result = sign_bit | shifted_input;\n  input = input << 0x1d;\n  if (!is_zero) {\n    mask = temp & 0xff000000;\n    is_zero = mask == 0;\n  }\n  if (!is_zero) {\n    is_zero = mask == 0xff000000;\n  }\n  if (!is_zero) {\n    return CONCAT44(result,input) ^ 0x3800000000000000;\n  }\n  if (temp == 0 || mask == 0xff000000) {\n    return CONCAT44(result,input);\n  }\n  temp = input;\n  temp = shifted_input;\n  if (shifted_input == 0) {\n    temp = 0;\n    temp = input;\n  }\n  bit_count = LZCOUNT(temp);\n  if (shifted_input == 0) {\n    bit_count = bit_count + 0x20;\n  }\n  shift_amount = bit_count - 0xb;\n  is_negative = SBORROW4(shift_amount,0x20);\n  shifted_input = bit_count - 0x2b;\n  is_zero = (int)shifted_input < 0;\n  is_zero = shifted_input == 0;\n  if ((int)shift_amount < 0x20) {\n    is_negative = SCARRY4(shifted_input,0xc);\n    bit_count = bit_count + -0x1f;\n    is_zero = bit_count < 0;\n    is_zero = bit_count == 0;\n    shifted_input = shift_amount;\n    if (!is_zero && is_zero == is_negative) {\n      temp = temp << (shift_amount & 0xff);\n      temp = temp >> (0xcU - bit_count & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (is_zero || is_zero != is_negative) {\n    remaining_bits = 0x20 - shifted_input;\n  }\n  temp = temp << (shifted_input & 0xff);\n  if (is_zero || is_zero != is_negative) {\n    temp = temp | temp >> (remaining_bits & 0xff);\n  }\n  if (is_zero || is_zero != is_negative) {\n    temp = temp << (shifted_input & 0xff);\n  }\nLAB_080002f0:\n  if ((int)shift_amount < 0x381) {\n    return CONCAT44(temp + (0x380 - shift_amount) * 0x100000 | sign_bit,temp);\n  }\n  shifted_input = ~(0x380 - shift_amount);\n  if ((int)shifted_input < 0x1f) {\n    bit_count = shifted_input - 0x13;\n    if (bit_count != 0 && bit_count < 0 == SCARRY4(shifted_input - 0x1f,0xc)) {\n      return CONCAT44(result,temp >> (0x20 - (0xcU - bit_count) & 0xff) | temp << (0xcU - bit_count & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    shifted_input = shifted_input + 1;\n    return CONCAT44(sign_bit | temp >> (shifted_input & 0xff),\n                    temp >> (shifted_input & 0xff) | temp << (0x20 - shifted_input & 0xff));\n  }\n  return CONCAT44(result,temp >> (shifted_input - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "current_name": "reverse_bits_and_shift_08000428",
            "entrypoint": "0x08000428",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000428": "reverse_bits_and_shift_08000428",
                "bVar10": "is_negative",
                "bVar8": "is_zero",
                "bVar9": "is_zero",
                "iVar6": "bit_count",
                "in_r12": "remaining_bits",
                "param_1": "input",
                "param_2": "unused_param",
                "param_3": "unused_param",
                "param_4": "mask",
                "uVar1": "sign_bit",
                "uVar2": "temp",
                "uVar3": "result",
                "uVar4": "shifted_input",
                "uVar5": "temp",
                "uVar7": "shift_amount"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080004d0": {
            "additional_data": {
                "FUN_080004d0": {
                    "calculate": 3,
                    "calculate_hash": 1,
                    "calculate_mul_div": 1,
                    "calculate_product": 6,
                    "calculate_result": 13,
                    "calculate_unsigned_long": 1,
                    "calculate_value": 2,
                    "compute_result": 1,
                    "perform_calculation": 1
                },
                "bVar10": {
                    "bool2": 2,
                    "carry": 1,
                    "condition2": 4,
                    "flag2": 20,
                    "is_carry": 1,
                    "is_high": 1,
                    "is_overflow": 1,
                    "is_overflow1": 1
                },
                "bVar11": {
                    "bool3": 2,
                    "condition3": 4,
                    "flag3": 20,
                    "is_negative": 3,
                    "is_overflow2": 1,
                    "overflow": 1
                },
                "bVar9": {
                    "bool1": 2,
                    "condition1": 4,
                    "flag1": 20,
                    "is_zero": 5
                },
                "iVar5": {
                    "sum": 6,
                    "sum_param2_and_masked_param4": 1,
                    "temp3": 15,
                    "temp4": 1,
                    "temp5": 4,
                    "temp_var": 2,
                    "var3": 2
                },
                "lVar2": {
                    "mul_result2": 1,
                    "product2": 1,
                    "result2": 11,
                    "temp": 10,
                    "temp1": 1,
                    "temp2": 5,
                    "temp_result": 1,
                    "temp_value": 1
                },
                "param_1": {
                    "input1": 30,
                    "value1": 1
                },
                "param_2": {
                    "input2": 30,
                    "value2": 1
                },
                "param_3": {
                    "input3": 30,
                    "value3": 1
                },
                "param_4": {
                    "input4": 30,
                    "value4": 1
                },
                "reverse_bits_080006ac": {
                    "reverse_bits": 5
                },
                "uVar1": {
                    "mul_result1": 1,
                    "product": 2,
                    "product1": 1,
                    "result": 12,
                    "result1": 10,
                    "temp1": 5
                },
                "uVar12": {
                    "combined": 1,
                    "combined_input": 6,
                    "combined_params": 10,
                    "concat_inputs": 1,
                    "concat_value": 1,
                    "concatenated": 4,
                    "concatenated_input": 1,
                    "concatenated_params": 2,
                    "concatenated_result": 1,
                    "concatenated_value": 1,
                    "concatenated_var": 1,
                    "temp10": 1,
                    "temp8": 1
                },
                "uVar3": {
                    "bitwise_and": 1,
                    "mask": 2,
                    "mask1": 3,
                    "masked_param2": 1,
                    "num1": 1,
                    "temp1": 15,
                    "temp2": 1,
                    "temp3": 4,
                    "value1": 1,
                    "var1": 2
                },
                "uVar4": {
                    "bit_shifted": 1,
                    "exponent1": 1,
                    "mask2": 3,
                    "masked_param2_shifted": 1,
                    "num2": 1,
                    "shifted_mask": 1,
                    "temp2": 14,
                    "temp3": 1,
                    "temp4": 4,
                    "u_var4": 1,
                    "value2": 1,
                    "var2": 2
                },
                "uVar6": {
                    "diff": 1,
                    "difference": 2,
                    "masked_param4_shifted": 1,
                    "remainder1": 1,
                    "temp3": 1,
                    "temp4": 15,
                    "temp5": 1,
                    "temp6": 4,
                    "temp_value": 1,
                    "temp_var2": 1,
                    "u_var6": 1,
                    "var4": 2
                },
                "uVar7": {
                    "bitmask": 1,
                    "carry": 2,
                    "mask": 1,
                    "remainder2": 1,
                    "temp1": 1,
                    "temp4": 1,
                    "temp5": 3,
                    "temp6": 10,
                    "temp7": 2,
                    "temp8": 3,
                    "temp_reg2": 1,
                    "temp_var4": 1,
                    "u_var7": 1,
                    "var5": 1,
                    "var6": 1,
                    "var7": 1
                },
                "uVar8": {
                    "carry": 1,
                    "carry2": 1,
                    "result2": 1,
                    "temp2": 1,
                    "temp5": 1,
                    "temp6": 3,
                    "temp7": 12,
                    "temp8": 2,
                    "temp9": 3,
                    "temp_value2": 1,
                    "temp_var5": 1,
                    "u_var8": 1,
                    "var6": 1,
                    "var7": 1,
                    "var8": 1
                },
                "unaff_r5": {
                    "exponent2": 1,
                    "mask3": 1,
                    "masked_param4": 1,
                    "num3": 1,
                    "sum2": 1,
                    "temp5": 11,
                    "temp6": 1,
                    "temp7": 3,
                    "temp_reg": 1,
                    "temp_var3": 1,
                    "u_var5": 1,
                    "var5": 1
                }
            },
            "called": [
                "FUN_080006ac"
            ],
            "calling": [
                "FUN_0800411c",
                "FUN_080071c0",
                "FUN_08006d68",
                "FUN_08006228",
                "FUN_08003330",
                "FUN_08005900",
                "FUN_08006c0c",
                "FUN_08005c70"
            ],
            "code": "\nulonglong calculate_result_080004d0(undefined4 input1,uint input2,uint input3,uint input4)\n\n{\n  ulonglong result;\n  longlong result2;\n  uint temp1;\n  uint temp2;\n  int temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  bool flag1;\n  bool flag2;\n  bool flag3;\n  ulonglong combined_params;\n  \n  combined_params = CONCAT44(input2,input1);\n  temp6 = 0x7ff;\n  temp2 = input2 >> 0x14 & 0x7ff;\n  flag1 = temp2 == 0;\n  if (!flag1) {\n    temp5 = input4 >> 0x14 & 0x7ff;\n    flag1 = temp5 == 0;\n  }\n  if (!flag1) {\n    flag1 = temp2 == 0x7ff;\n  }\n  if (!flag1) {\n    flag1 = temp5 == 0x7ff;\n  }\n  if (flag1) {\n    combined_params = reverse_bits();\n  }\n  temp1 = (uint)(combined_params >> 0x20);\n  temp3 = temp2 + temp5;\n  temp2 = temp1 ^ input4;\n  temp1 = temp1 & ~(temp6 << 0x15);\n  input4 = input4 & ~(temp6 << 0x15);\n  flag1 = ((uint)combined_params | temp1 << 0xc) == 0;\n  if (!flag1) {\n    flag1 = (input3 | input4 << 0xc) == 0;\n  }\n  temp1 = temp1 | 0x100000;\n  input4 = input4 | 0x100000;\n  if (flag1) {\n    input3 = (uint)combined_params | input3;\n    input4 = (temp2 & 0x80000000 | temp1) ^ input4;\n    temp2 = temp6 >> 1;\n    flag3 = SBORROW4(temp3,temp2);\n    temp4 = temp3 - temp2;\n    flag1 = temp4 == 0;\n    temp1 = temp4;\n    if (!flag1 && (int)temp2 <= temp3) {\n      flag3 = SBORROW4(temp6,temp4);\n      temp1 = temp6 - temp4;\n      flag1 = temp6 == temp4;\n    }\n    if (!flag1 && (int)temp1 < 0 == flag3) {\n      input4 = input4 | temp4 * 0x100000;\n    }\n    if (!flag1 && (int)temp1 < 0 == flag3) {\n      return CONCAT44(input4,input3);\n    }\n    input4 = input4 | 0x100000;\n    temp6 = 0;\n    flag3 = SBORROW4(temp4,1);\n    temp4 = temp4 - 1;\n    flag1 = temp4 == 0;\n    temp2 = temp4;\n  }\n  else {\n    result = (combined_params & 0xffffffff) * (ulonglong)input3;\n    combined_params = (combined_params & 0xffffffff) * (ulonglong)input4 +\n             (ulonglong)temp1 * (ulonglong)input3 + (result >> 0x20);\n    temp7 = (uint)combined_params;\n    result2 = (ulonglong)temp1 * (ulonglong)input4 + (combined_params >> 0x20);\n    temp6 = (uint)result2;\n    temp1 = (uint)((ulonglong)result2 >> 0x20);\n    if ((int)result != 0) {\n      temp7 = temp7 | 1;\n    }\n    temp4 = (temp3 + -0x3ff) - (uint)(temp1 < 0x200);\n    if (temp1 < 0x200) {\n      flag1 = (temp7 & 0x80000000) != 0;\n      temp7 = temp7 << 1;\n      result2 = CONCAT44(temp1 * 2 + (uint)(CARRY4(temp6,temp6) || CARRY4(temp6 * 2,(uint)flag1)),\n                       temp6 * 2 + (uint)flag1);\n    }\n    input4 = temp2 & 0x80000000 | (int)((ulonglong)result2 >> 0x20) << 0xb | (uint)result2 >> 0x15;\n    input3 = (uint)result2 << 0xb | temp7 >> 0x15;\n    temp6 = temp7 * 0x800;\n    flag2 = 0xfc < temp4;\n    flag3 = SBORROW4(temp4,0xfd);\n    temp1 = temp4 - 0xfd;\n    flag1 = temp1 == 0;\n    temp2 = temp1;\n    if (flag2 && !flag1) {\n      flag2 = 0x6ff < temp1;\n      flag3 = SBORROW4(temp1,0x700);\n      temp2 = temp4 - 0x7fd;\n      flag1 = temp1 == 0x700;\n    }\n    if (!flag2 || flag1) {\n      flag1 = 0x7fffffff < temp6;\n      if (temp6 == 0x80000000) {\n        flag1 = (temp7 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(input4 + temp4 * 0x100000 + (uint)CARRY4(input3,(uint)flag1),input3 + flag1\n                     );\n    }\n  }\n  if (!flag1 && (int)temp2 < 0 == flag3) {\n    return (ulonglong)(input4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  flag2 = SCARRY4(temp4,0x36);\n  flag1 = (int)(temp4 + 0x36) < 0;\n  flag3 = temp4 == 0xffffffca;\n  if (flag3 || flag1 != flag2) {\n    input3 = 0;\n  }\n  if (flag3 || flag1 != flag2) {\n    input4 = input4 & 0x80000000;\n  }\n  if (flag3 || flag1 != flag2) {\n    return CONCAT44(input4,input3);\n  }\n  temp2 = -temp4;\n  temp1 = temp2 - 0x20;\n  if (0x1f < (int)temp2) {\n    temp4 = input3 >> (temp1 & 0xff) | input4 << (0x20 - temp1 & 0xff);\n    temp2 = (input4 >> (temp1 & 0xff) & ~((input4 & 0x80000000) >> (temp1 & 0xff))) -\n            ((int)temp4 >> 0x1f);\n    if ((temp6 | input3 << (0x20 - temp1 & 0xff) | temp4 << 1) == 0) {\n      temp2 = temp2 & ~(temp4 >> 0x1f);\n    }\n    return CONCAT44(input4,temp2) & 0x80000000ffffffff;\n  }\n  temp3 = temp2 - 0x14;\n  if (temp3 == 0 || temp3 < 0 != SCARRY4(temp1,0xc)) {\n    temp7 = input3 << (temp4 + 0x20 & 0xff);\n    temp1 = input3 >> (temp2 & 0xff) | input4 << (temp4 + 0x20 & 0xff);\n    temp4 = temp1 + -((int)temp7 >> 0x1f);\n    if ((temp6 | temp7 << 1) == 0) {\n      temp4 = temp4 & ~(temp7 >> 0x1f);\n    }\n    return CONCAT44((input4 & 0x80000000) +\n                    ((input4 & 0x7fffffff) >> (temp2 & 0xff)) +\n                    (uint)CARRY4(temp1,-((int)temp7 >> 0x1f)),temp4);\n  }\n  temp2 = 0xc - temp3;\n  temp4 = input3 << (temp2 & 0xff);\n  temp2 = input3 >> (0x20 - temp2 & 0xff) | input4 << (temp2 & 0xff);\n  temp1 = temp2 + -((int)temp4 >> 0x1f);\n  if ((temp6 | temp4 << 1) == 0) {\n    temp1 = temp1 & ~(temp4 >> 0x1f);\n  }\n  return CONCAT44((input4 & 0x80000000) + (uint)CARRY4(temp2,-((int)temp4 >> 0x1f)),temp1);\n}\n\n",
            "current_name": "calculate_result_080004d0",
            "entrypoint": "0x080004d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080004d0": "calculate_result_080004d0",
                "bVar10": "flag2",
                "bVar11": "flag3",
                "bVar9": "flag1",
                "iVar5": "temp3",
                "lVar2": "result2",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "reverse_bits_080006ac": "reverse_bits",
                "uVar1": "result",
                "uVar12": "combined_params",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar6": "temp4",
                "uVar7": "temp6",
                "uVar8": "temp7",
                "unaff_r5": "temp5"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080006ac": {
            "additional_data": {
                "FUN_080006ac": {
                    "binary_operation": 1,
                    "calculate_bitwise_difference": 2,
                    "calculate_result": 4,
                    "calculate_shifted_value": 1,
                    "calculate_shifted_xor": 1,
                    "extract_bit_range": 3,
                    "extracted_code": 1,
                    "reverse_and_mask": 1,
                    "reverse_bit_sequence": 1,
                    "reverse_bits": 12,
                    "reverse_bitwise_operations": 2,
                    "reverse_unsigned_long_long": 1
                },
                "bVar4": {
                    "flag": 1,
                    "is_equal": 1,
                    "is_zero": 28
                },
                "in_r12": {
                    "bit5": 5,
                    "bit6": 1,
                    "bit_5": 1,
                    "constant": 3,
                    "constant_r12": 1,
                    "constant_val": 1,
                    "flag2": 1,
                    "input_param_5": 1,
                    "mask": 4,
                    "temp2": 2,
                    "temp4": 1,
                    "temp5": 6,
                    "temp_2": 2,
                    "temp_5": 1
                },
                "param_1": {
                    "input1": 17,
                    "input_1": 8,
                    "input_bit1": 1,
                    "input_param_1": 1,
                    "number1": 1,
                    "result3": 2,
                    "value1": 1
                },
                "param_2": {
                    "input2": 17,
                    "input_2": 8,
                    "input_bit2": 1,
                    "input_param_2": 1,
                    "number2": 1,
                    "result2": 2,
                    "value2": 1
                },
                "param_3": {
                    "input3": 17,
                    "input_3": 8,
                    "input_bit3": 1,
                    "input_param_3": 1,
                    "number3": 1,
                    "result4": 2,
                    "value3": 1
                },
                "param_4": {
                    "bit5": 1,
                    "input4": 17,
                    "input_4": 8,
                    "input_bit4": 1,
                    "input_param_4": 1,
                    "number4": 1,
                    "result5": 1,
                    "value4": 1
                },
                "uVar1": {
                    "bit1": 7,
                    "bit_1": 1,
                    "bit_check1": 1,
                    "msb_bit_param_1": 1,
                    "output3": 1,
                    "result1": 1,
                    "result2": 1,
                    "shifted_bit1": 1,
                    "shifted_input_1": 2,
                    "temp1": 4,
                    "temp2": 5,
                    "temp_1": 2,
                    "temp_2": 1,
                    "temp_3": 2
                },
                "uVar2": {
                    "bit2": 3,
                    "bit3": 3,
                    "bit_3": 1,
                    "bit_check2": 1,
                    "masked_param4": 1,
                    "masked_param_4": 1,
                    "output2": 1,
                    "result2": 1,
                    "result_1": 1,
                    "result_high": 1,
                    "shifted_bit2": 1,
                    "shifted_input4": 1,
                    "shifted_result": 1,
                    "temp2": 2,
                    "temp3": 6,
                    "temp6": 1,
                    "temp_2": 1,
                    "temp_3": 2,
                    "temp_4": 2
                },
                "uVar3": {
                    "bit3": 2,
                    "bit4": 3,
                    "bit_4": 1,
                    "bit_check3": 1,
                    "output1": 1,
                    "result": 3,
                    "result1": 3,
                    "result3": 1,
                    "result_2": 1,
                    "result_low": 1,
                    "result_param_2": 1,
                    "shifted_bit3": 1,
                    "shifted_input2": 1,
                    "temp3": 2,
                    "temp4": 4,
                    "temp_3": 1,
                    "temp_4": 2,
                    "temp_5": 2
                },
                "unaff_r4": {
                    "bit2": 5,
                    "bit4": 1,
                    "bit_2": 1,
                    "comparison": 1,
                    "flag1": 1,
                    "initial_bit": 1,
                    "input_2_copy": 1,
                    "shifted_input_2": 1,
                    "temp1": 7,
                    "temp2": 2,
                    "temp5": 1,
                    "temp_1": 3,
                    "temp_2": 1,
                    "temp_param": 1,
                    "unaffected": 2,
                    "unaffected_r4": 1,
                    "unused_variable": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080004d0"
            ],
            "code": "\nulonglong reverse_bits_080006ac(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint bit1;\n  uint temp1;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  bool is_zero;\n  \n  temp3 = temp5 & input4 >> 0x14;\n  if (temp1 != temp5 && temp3 != temp5) {\n    is_zero = (input1 | input2 << 1) == 0;\n    if (!is_zero) {\n      is_zero = (input3 | input4 << 1) == 0;\n    }\n    if (is_zero) {\n      return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n    }\n    if (temp1 == 0) {\n      temp4 = input2 & 0x80000000;\n      do {\n        bit1 = input1 & 0x80000000;\n        input1 = input1 << 1;\n        input2 = input2 * 2 + (uint)(bit1 != 0);\n      } while ((input2 & 0x100000) == 0);\n      input2 = input2 | temp4;\n      if (temp3 != 0) {\n        return CONCAT44(input2,input1);\n      }\n    }\n    do {\n      temp3 = input3 & 0x80000000;\n      input3 = input3 << 1;\n      input4 = input4 * 2 + (uint)(temp3 != 0);\n    } while ((input4 & 0x100000) == 0);\n    return CONCAT44(input2,input1);\n  }\n  is_zero = (input1 | input2 << 1) == 0;\n  if (is_zero) {\n    input2 = input4;\n    input1 = input3;\n  }\n  if (!is_zero) {\n    is_zero = (input3 | input4 << 1) == 0;\n  }\n  temp4 = input2;\n  if (((!is_zero) && ((temp1 != temp5 || ((input1 | input2 << 0xc) == 0)))) &&\n     ((temp3 != temp5 || (input1 = input3, temp4 = input4, (input3 | input4 << 0xc) == 0)))) {\n    return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  return CONCAT44(temp4,input1) | 0x7ff8000000000000;\n}\n\n",
            "current_name": "reverse_bits_080006ac",
            "entrypoint": "0x080006ac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080006ac": "reverse_bits_080006ac",
                "bVar4": "is_zero",
                "in_r12": "temp5",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "bit1",
                "uVar2": "temp3",
                "uVar3": "temp4",
                "unaff_r4": "temp1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000724": {
            "additional_data": {
                "FUN_08000724": {
                    "calculate_float_value": 1,
                    "calculate_float_values": 1,
                    "calculate_floating_point": 10,
                    "calculate_floating_point_value": 14,
                    "calculate_improved_floating_point": 1,
                    "calculate_improved_floating_value": 1
                },
                "bVar14": {
                    "bool1": 1,
                    "boolean_var1": 1,
                    "check_overflow": 1,
                    "condition1": 1,
                    "flag1": 20,
                    "is_condition1": 1,
                    "is_zero": 3,
                    "is_zero1": 2,
                    "temp_var15": 1
                },
                "bVar15": {
                    "bool2": 1,
                    "boolean_var2": 1,
                    "check_zero": 1,
                    "condition2": 1,
                    "flag2": 20,
                    "is_condition2": 1,
                    "is_equal": 3,
                    "is_zero2": 2,
                    "temp_var16": 1
                },
                "bVar16": {
                    "bool3": 1,
                    "boolean_var3": 1,
                    "condition3": 1,
                    "flag3": 20,
                    "is_carry": 5,
                    "is_condition3": 1,
                    "overflow": 1,
                    "temp_var17": 1
                },
                "bVar17": {
                    "bool4": 1,
                    "carry_flag": 1,
                    "flag4": 5,
                    "is_borrow": 1,
                    "is_condition4": 1,
                    "is_sign": 1
                },
                "bVar18": {
                    "borrow_flag": 1
                },
                "iVar8": {
                    "diff": 1,
                    "difference": 2,
                    "i8": 1,
                    "result8": 1,
                    "temp8": 22,
                    "temp_var8": 2,
                    "var1": 1,
                    "variable8": 1
                },
                "param_1": {
                    "first_input": 1,
                    "input1": 26,
                    "input_1": 1,
                    "input_param1": 1,
                    "value1": 2
                },
                "param_2": {
                    "input2": 26,
                    "input_2": 1,
                    "input_param2": 1,
                    "second_input": 1,
                    "value2": 2
                },
                "param_3": {
                    "input3": 26,
                    "input_3": 1,
                    "input_param3": 1,
                    "third_input": 1,
                    "value3": 2
                },
                "param_4": {
                    "fourth_input": 1,
                    "input4": 26,
                    "input_4": 1,
                    "input_param4": 1,
                    "value4": 2
                },
                "uVar1": {
                    "carry": 1,
                    "result1": 3,
                    "temp1": 22,
                    "temp_var1": 2,
                    "u1": 1,
                    "val1": 1,
                    "variable1": 1
                },
                "uVar10": {
                    "exponent_temp": 1,
                    "result11": 1,
                    "temp10": 4,
                    "temp11": 18,
                    "temp2": 1,
                    "temp3": 1,
                    "temp_var11": 2,
                    "u10": 1,
                    "var4": 1,
                    "variable10": 1
                },
                "uVar11": {
                    "mantissa": 2,
                    "result12": 1,
                    "temp11": 3,
                    "temp12": 18,
                    "temp3": 1,
                    "temp4": 1,
                    "temp_var12": 2,
                    "u11": 1,
                    "var5": 1,
                    "variable11": 1
                },
                "uVar12": {
                    "mantissa_temp": 1,
                    "result13": 1,
                    "temp12": 4,
                    "temp13": 18,
                    "temp4": 1,
                    "temp5": 1,
                    "temp_var13": 2,
                    "u12": 1,
                    "var6": 1,
                    "variable12": 1
                },
                "uVar13": {
                    "bits": 1,
                    "result": 1,
                    "result14": 1,
                    "temp13": 4,
                    "temp14": 17,
                    "temp5": 1,
                    "temp6": 1,
                    "temp_var14": 2,
                    "u13": 1,
                    "var7": 1,
                    "variable13": 1
                },
                "uVar17": {
                    "combined_result": 2,
                    "concatenated_vars": 1,
                    "floating_point_value": 1,
                    "result": 16,
                    "temp15": 1,
                    "temp_var18": 1,
                    "variable17": 1
                },
                "uVar18": {
                    "new_variable": 1,
                    "result": 1,
                    "result1": 2
                },
                "uVar19": {
                    "new_variable1": 1,
                    "result2": 2,
                    "temp15": 1
                },
                "uVar2": {
                    "result2": 3,
                    "temp": 1,
                    "temp2": 22,
                    "temp_var2": 2,
                    "u2": 1,
                    "val2": 1,
                    "variable2": 1
                },
                "uVar20": {
                    "result3": 1,
                    "temp16": 1
                },
                "uVar21": {
                    "result4": 1,
                    "temp17": 1
                },
                "uVar22": {
                    "result5": 1,
                    "temp18": 1
                },
                "uVar23": {
                    "result6": 1,
                    "temp19": 1
                },
                "uVar24": {
                    "result7": 1,
                    "temp20": 1
                },
                "uVar25": {
                    "result8": 1,
                    "temp21": 1
                },
                "uVar26": {
                    "result9": 1,
                    "temp22": 1
                },
                "uVar27": {
                    "result10": 1,
                    "temp23": 1
                },
                "uVar28": {
                    "temp24": 1
                },
                "uVar3": {
                    "result3": 3,
                    "temp3": 22,
                    "temp_var3": 2,
                    "u3": 1,
                    "val3": 1,
                    "variable3": 1
                },
                "uVar4": {
                    "result4": 3,
                    "temp4": 22,
                    "temp_var4": 2,
                    "u4": 1,
                    "val4": 1,
                    "variable4": 1
                },
                "uVar5": {
                    "result5": 3,
                    "shift": 1,
                    "temp5": 22,
                    "temp_var5": 2,
                    "u5": 1,
                    "val5": 1,
                    "variable5": 1
                },
                "uVar6": {
                    "result6": 3,
                    "round": 1,
                    "temp6": 22,
                    "temp_var6": 2,
                    "u6": 1,
                    "val6": 1,
                    "variable6": 1
                },
                "uVar7": {
                    "result7": 3,
                    "sign": 1,
                    "temp7": 22,
                    "temp_var7": 2,
                    "u7": 1,
                    "val7": 1,
                    "variable7": 1
                },
                "uVar9": {
                    "exponent": 2,
                    "result9": 1,
                    "temp1": 2,
                    "temp9": 21,
                    "temp_var9": 2,
                    "u9": 1,
                    "var2": 1,
                    "variable9": 1
                },
                "unaff_r5": {
                    "exponent_difference": 1,
                    "result10": 1,
                    "temp10": 18,
                    "temp2": 1,
                    "temp_var10": 2,
                    "u5_temp": 1,
                    "var3": 1
                }
            },
            "called": [
                "FUN_08000892"
            ],
            "calling": [
                "FUN_08006070",
                "FUN_08005bc8",
                "FUN_08006d68",
                "FUN_08006228",
                "FUN_08003330",
                "FUN_08005900",
                "FUN_08006c0c",
                "FUN_08005c70"
            ],
            "code": "\nulonglong calculate_floating_point_value_08000724(undefined4 input1,uint input2,uint input3,uint input4)\n\n{\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  int temp8;\n  uint temp9;\n  uint temp10;\n  uint temp11;\n  uint temp12;\n  uint temp13;\n  uint temp14;\n  bool flag1;\n  bool flag2;\n  bool flag3;\n  undefined8 result;\n  \n  result = CONCAT44(input2,input1);\n  temp14 = 0x7ff;\n  temp7 = input2 >> 0x14 & 0x7ff;\n  flag1 = temp7 == 0;\n  if (!flag1) {\n    temp10 = input4 >> 0x14 & 0x7ff;\n    flag1 = temp10 == 0;\n  }\n  if (!flag1) {\n    flag1 = temp7 == 0x7ff;\n  }\n  if (!flag1) {\n    flag1 = temp10 == 0x7ff;\n  }\n  if (flag1) {\n    result = calculate_floating_point_value_08000724_08000892();\n  }\n  temp9 = (uint)((ulonglong)result >> 0x20);\n  temp12 = (uint)result;\n  temp8 = temp7 - temp10;\n  if ((input3 | input4 << 0xc) == 0) {\n    temp7 = (temp9 ^ input4) & 0x80000000 | temp9 & 0xfffff;\n    flag3 = SCARRY4(temp8,temp14 >> 1);\n    temp9 = temp8 + (temp14 >> 1);\n    flag1 = (int)temp9 < 0;\n    flag2 = temp9 == 0;\n    if (!flag2 && flag1 == flag3) {\n      flag3 = SBORROW4(temp14,temp9);\n      flag1 = (int)(temp14 - temp9) < 0;\n      flag2 = temp14 == temp9;\n    }\n    if (!flag2 && flag1 == flag3) {\n      temp7 = temp7 | temp9 * 0x100000;\n    }\n    if (!flag2 && flag1 == flag3) {\n      return CONCAT44(temp7,temp12);\n    }\n    temp7 = temp7 | 0x100000;\n    temp14 = 0;\n    flag2 = SBORROW4(temp9,1);\n    temp9 = temp9 - 1;\n    flag1 = temp9 == 0;\n    temp3 = temp9;\n  }\n  else {\n    temp3 = (input4 << 0xc) >> 4 | 0x10000000 | input3 >> 0x18;\n    temp14 = input3 << 8;\n    temp11 = (temp9 << 0xc) >> 4 | 0x10000000 | temp12 >> 0x18;\n    temp12 = temp12 * 0x100;\n    temp7 = (temp9 ^ input4) & 0x80000000;\n    flag1 = temp3 <= temp11;\n    if (temp11 == temp3) {\n      flag1 = temp14 <= temp12;\n    }\n    temp8 = temp8 + (uint)flag1;\n    temp9 = temp8 + 0x3fd;\n    if (flag1 == false) {\n      temp3 = temp3 >> 1;\n      temp14 = (uint)((input3 >> 0x18 & 1) != 0) << 0x1f | temp14 >> 1;\n    }\n    temp13 = temp12 - temp14;\n    temp11 = (temp11 - temp3) - (uint)(temp12 < temp14);\n    temp4 = temp3 >> 1;\n    temp1 = (uint)((temp3 & 1) != 0) << 0x1f | temp14 >> 1;\n    temp12 = 0x100000;\n    temp3 = 0x80000;\n    while( true ) {\n      flag1 = temp1 <= temp13;\n      if (temp4 < temp11 || temp11 - temp4 < (uint)flag1) {\n        temp13 = temp13 - temp1;\n        temp12 = temp12 | temp3;\n        temp11 = (temp11 - temp4) - (uint)!flag1;\n      }\n      temp5 = temp4 >> 1;\n      temp1 = (uint)((temp4 & 1) != 0) << 0x1f | temp1 >> 1;\n      flag2 = temp1 <= temp13;\n      flag1 = temp11 - temp5 < (uint)flag2;\n      temp14 = temp11;\n      if (temp5 < temp11 || flag1) {\n        temp13 = temp13 - temp1;\n        temp14 = (temp11 - temp5) - (uint)!flag2;\n      }\n      if (temp5 < temp11 || flag1) {\n        temp12 = temp12 | temp3 >> 1;\n      }\n      temp11 = temp4 >> 2;\n      temp2 = (uint)((temp5 & 1) != 0) << 0x1f | temp1 >> 1;\n      flag2 = temp2 <= temp13;\n      flag1 = temp14 - temp11 < (uint)flag2;\n      temp5 = temp14;\n      if (temp11 < temp14 || flag1) {\n        temp13 = temp13 - temp2;\n        temp5 = (temp14 - temp11) - (uint)!flag2;\n      }\n      if (temp11 < temp14 || flag1) {\n        temp12 = temp12 | temp3 >> 2;\n      }\n      temp6 = temp4 >> 3;\n      temp1 = (uint)((temp11 & 1) != 0) << 0x1f | temp2 >> 1;\n      flag2 = temp1 <= temp13;\n      flag1 = temp5 - temp6 < (uint)flag2;\n      temp11 = temp5;\n      if (temp6 < temp5 || flag1) {\n        temp13 = temp13 - temp1;\n        temp11 = (temp5 - temp6) - (uint)!flag2;\n      }\n      if (temp6 < temp5 || flag1) {\n        temp12 = temp12 | temp3 >> 3;\n      }\n      temp14 = temp11 | temp13;\n      if (temp14 == 0) break;\n      temp11 = temp11 << 4 | temp13 >> 0x1c;\n      temp13 = temp13 << 4;\n      temp4 = temp4 & 0xfffffff8 | temp1 >> 0x1d;\n      temp1 = (temp2 >> 1) << 3;\n      temp3 = temp3 >> 4;\n      if (temp3 == 0) {\n        temp6 = temp4;\n        if ((temp7 & 0x100000) != 0) goto LAB_08000842;\n        temp7 = temp7 | temp12;\n        temp12 = 0;\n        temp3 = 0x80000000;\n      }\n    }\n    if ((temp7 & 0x100000) == 0) {\n      temp7 = temp7 | temp12;\n      temp12 = 0;\n    }\nLAB_08000842:\n    flag3 = 0xfc < temp9;\n    flag2 = SBORROW4(temp9,0xfd);\n    temp4 = temp8 + 0x300;\n    flag1 = temp4 == 0;\n    temp3 = temp4;\n    if (flag3 && !flag1) {\n      flag3 = 0x6ff < temp4;\n      flag2 = SBORROW4(temp4,0x700);\n      temp3 = temp8 - 0x400;\n      flag1 = temp4 == 0x700;\n    }\n    if (!flag3 || flag1) {\n      flag1 = temp6 <= temp11;\n      if (temp11 == temp6) {\n        flag1 = temp1 <= temp13;\n      }\n      if (temp11 == temp6 && temp13 == temp1) {\n        flag1 = (temp12 & 1) != 0;\n      }\n      return CONCAT44(temp7 + temp9 * 0x100000 + (uint)CARRY4(temp12,(uint)flag1),temp12 + flag1);\n    }\n  }\n  if (!flag1 && (int)temp3 < 0 == flag2) {\n    return (ulonglong)(temp7 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  flag3 = SCARRY4(temp9,0x36);\n  flag1 = (int)(temp9 + 0x36) < 0;\n  flag2 = temp9 == 0xffffffca;\n  if (flag2 || flag1 != flag3) {\n    temp12 = 0;\n  }\n  if (flag2 || flag1 != flag3) {\n    temp7 = temp7 & 0x80000000;\n  }\n  if (flag2 || flag1 != flag3) {\n    return CONCAT44(temp7,temp12);\n  }\n  temp3 = -temp9;\n  temp11 = temp3 - 0x20;\n  if (0x1f < (int)temp3) {\n    temp3 = temp12 >> (temp11 & 0xff) | temp7 << (0x20 - temp11 & 0xff);\n    temp9 = (temp7 >> (temp11 & 0xff) & ~((temp7 & 0x80000000) >> (temp11 & 0xff))) -\n            ((int)temp3 >> 0x1f);\n    if ((temp14 | temp12 << (0x20 - temp11 & 0xff) | temp3 << 1) == 0) {\n      temp9 = temp9 & ~(temp3 >> 0x1f);\n    }\n    return CONCAT44(temp7,temp9) & 0x80000000ffffffff;\n  }\n  temp8 = temp3 - 0x14;\n  if (temp8 != 0 && temp8 < 0 == SCARRY4(temp11,0xc)) {\n    temp9 = 0xc - temp8;\n    temp3 = temp12 << (temp9 & 0xff);\n    temp12 = temp12 >> (0x20 - temp9 & 0xff) | temp7 << (temp9 & 0xff);\n    temp9 = temp12 + -((int)temp3 >> 0x1f);\n    if ((temp14 | temp3 << 1) == 0) {\n      temp9 = temp9 & ~(temp3 >> 0x1f);\n    }\n    return CONCAT44((temp7 & 0x80000000) + (uint)CARRY4(temp12,-((int)temp3 >> 0x1f)),temp9);\n  }\n  temp11 = temp12 << (temp9 + 0x20 & 0xff);\n  temp12 = temp12 >> (temp3 & 0xff) | temp7 << (temp9 + 0x20 & 0xff);\n  temp9 = temp12 + -((int)temp11 >> 0x1f);\n  if ((temp14 | temp11 << 1) == 0) {\n    temp9 = temp9 & ~(temp11 >> 0x1f);\n  }\n  return CONCAT44((temp7 & 0x80000000) +\n                  ((temp7 & 0x7fffffff) >> (temp3 & 0xff)) +\n                  (uint)CARRY4(temp12,-((int)temp11 >> 0x1f)),temp9);\n}\n\n",
            "current_name": "calculate_floating_point_value_08000724",
            "entrypoint": "0x08000724",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000724": "calculate_floating_point_value_08000724",
                "bVar14": "flag1",
                "bVar15": "flag2",
                "bVar16": "flag3",
                "iVar8": "temp8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "temp1",
                "uVar10": "temp11",
                "uVar11": "temp12",
                "uVar12": "temp13",
                "uVar13": "temp14",
                "uVar17": "result",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6",
                "uVar7": "temp7",
                "uVar9": "temp9",
                "unaff_r5": "temp10"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000892": {
            "additional_data": {
                "FUN_08000892": {
                    "calculate_double": 1,
                    "calculate_exponent": 1,
                    "calculate_float_value": 1,
                    "calculate_floating_point": 3,
                    "calculate_floating_point_value": 3,
                    "calculate_value": 1,
                    "convert_float_to_bits": 1,
                    "convert_to_double": 3,
                    "decode_floating_point": 1,
                    "extract_bits": 2,
                    "extract_bits_from_params": 1,
                    "float_to_double_na_n": 1,
                    "perform_calculation": 1,
                    "reverse_bit_pattern": 1,
                    "reverse_bits": 1,
                    "reverse_bits_and_shift": 1,
                    "reverse_bitwise_operation": 1,
                    "reverse_float": 1
                },
                "_bool_var_1": {
                    "check_result": 1
                },
                "_bool_var_2": {
                    "check_result2": 1
                },
                "_bool_var_3": {
                    "check_result3": 1
                },
                "bVar4": {
                    "check": 2,
                    "check1": 1,
                    "check_result": 1,
                    "cond_flag": 1,
                    "flag": 4,
                    "flag_1": 1,
                    "is_bit_zero": 1,
                    "is_zero": 18,
                    "temp6": 1,
                    "temp_6": 1
                },
                "in_r12": {
                    "bit5": 2,
                    "bit_e": 1,
                    "condition_check2": 1,
                    "constant": 4,
                    "constant1": 1,
                    "constant_a": 1,
                    "magic_number": 1,
                    "mask": 6,
                    "num6": 1,
                    "pattern_mask": 1,
                    "register12": 1,
                    "temp2": 3,
                    "temp4": 1,
                    "temp5": 2,
                    "temp_5": 2,
                    "temp_var5": 1,
                    "temporary4": 1,
                    "temporary_var4": 1
                },
                "param_1": {
                    "base": 1,
                    "input1": 15,
                    "input_1": 4,
                    "input_a": 2,
                    "input_float": 1,
                    "integer_part1": 1,
                    "num1": 2,
                    "sign": 1,
                    "unsigned_int1": 1,
                    "value1": 1,
                    "value_a": 1,
                    "x1": 1
                },
                "param_2": {
                    "exponent": 2,
                    "fractional_part1": 1,
                    "input2": 15,
                    "input_2": 4,
                    "input_b": 2,
                    "input_int": 1,
                    "num2": 2,
                    "unsigned_int2": 1,
                    "value2": 1,
                    "value_b": 1,
                    "x2": 1
                },
                "param_3": {
                    "fraction": 1,
                    "input3": 15,
                    "input_3": 4,
                    "input_c": 2,
                    "integer_part2": 1,
                    "num3": 2,
                    "numerator": 1,
                    "shifted_int": 1,
                    "unsigned_int3": 1,
                    "value3": 1,
                    "value_c": 1,
                    "y1": 1
                },
                "param_4": {
                    "denominator": 1,
                    "fractional_part2": 1,
                    "input4": 15,
                    "input_4": 4,
                    "input_d": 2,
                    "mask": 1,
                    "num4": 2,
                    "rounding_bits": 1,
                    "unsigned_int4": 1,
                    "value4": 1,
                    "value_d": 1,
                    "y2": 1
                },
                "uVar1": {
                    "bit1": 15,
                    "bit_1": 1,
                    "bit_a": 2,
                    "bit_mask": 1,
                    "bitwise1": 1,
                    "bitwise_input1": 1,
                    "input_float_sign": 1,
                    "temp1": 3,
                    "temp2": 1,
                    "temp_2": 3,
                    "temp_var1": 1
                },
                "uVar2": {
                    "bit2": 8,
                    "bit3": 4,
                    "bit_b": 1,
                    "bit_c": 1,
                    "bit_pattern_1": 1,
                    "bitwise2": 1,
                    "bitwise_input3": 1,
                    "check_value": 1,
                    "masked_register": 1,
                    "shifted_rounding_bits": 1,
                    "temp2": 2,
                    "temp3": 3,
                    "temp_3": 3,
                    "temp_var3": 1,
                    "temporary2": 1,
                    "temporary_var2": 1
                },
                "uVar3": {
                    "bit3": 4,
                    "bit4": 4,
                    "bit_d": 1,
                    "bit_pattern_2": 1,
                    "bitwise3": 1,
                    "bitwise_input4": 1,
                    "current_input": 1,
                    "new_exponent": 1,
                    "result": 1,
                    "result_a": 1,
                    "shifted_int": 1,
                    "temp": 2,
                    "temp2": 1,
                    "temp3": 2,
                    "temp4": 3,
                    "temp_4": 3,
                    "temp_var4": 1,
                    "temporary3": 1,
                    "temporary_var3": 1
                },
                "uVar5": {
                    "shifted_bit_pattern_1": 1
                },
                "uVar6": {
                    "shifted_bit_pattern_2": 1
                },
                "unaff_r4": {
                    "bit2": 4,
                    "bit_b": 1,
                    "bit_flag": 1,
                    "bitwise_input2": 1,
                    "condition_check1": 1,
                    "constant": 1,
                    "constant_b": 1,
                    "in_r4": 1,
                    "num5": 1,
                    "original_exponent": 1,
                    "register4": 2,
                    "shifted_int": 1,
                    "temp1": 6,
                    "temp2": 2,
                    "temp_1": 3,
                    "temp_var2": 1,
                    "temporary1": 1,
                    "temporary_var1": 1,
                    "unaffected_r4": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08000724"
            ],
            "code": "\nulonglong calculate_floating_point_value_08000892(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint bit1;\n  uint temp1;\n  uint bit2;\n  uint bit4;\n  uint mask;\n  bool is_zero;\n  \n  bit2 = mask & input4 >> 0x14;\n  bit4 = input2;\n  if (temp1 != mask || bit2 != mask) {\n    if (temp1 == mask) {\n      if (((input1 | input2 << 0xc) == 0) && (input1 = input3, bit4 = input4, bit2 != mask)\n         ) {\nLAB_08000704:\n        return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (bit2 == mask) {\n      input1 = input3;\n      bit4 = input4;\n      if ((input3 | input4 << 0xc) == 0) {\nLAB_080006c8:\n        return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      is_zero = (input1 | input2 << 1) == 0;\n      if (!is_zero) {\n        is_zero = (input3 | input4 << 1) == 0;\n      }\n      if (!is_zero) {\n        if (temp1 == 0) {\n          bit4 = input2 & 0x80000000;\n          do {\n            bit1 = input1 & 0x80000000;\n            input1 = input1 << 1;\n            input2 = input2 * 2 + (uint)(bit1 != 0);\n          } while ((input2 & 0x100000) == 0);\n          input2 = input2 | bit4;\n          if (bit2 != 0) {\n            return CONCAT44(input2,input1);\n          }\n        }\n        do {\n          bit4 = input3 & 0x80000000;\n          input3 = input3 << 1;\n          input4 = input4 * 2 + (uint)(bit4 != 0);\n        } while ((input4 & 0x100000) == 0);\n        return CONCAT44(input2,input1);\n      }\n      if ((input1 | input2 << 1) != 0) goto LAB_08000704;\n      if ((input3 | input4 << 1) != 0) goto LAB_080006c8;\n    }\n  }\n  return CONCAT44(bit4,input1) | 0x7ff8000000000000;\n}\n\n",
            "current_name": "calculate_floating_point_value_08000892",
            "entrypoint": "0x08000892",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000892": "calculate_floating_point_value_08000892",
                "bVar4": "is_zero",
                "in_r12": "mask",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "bit1",
                "uVar2": "bit2",
                "uVar3": "bit4",
                "unaff_r4": "temp1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000904": {
            "additional_data": {
                "FUN_08000904": {
                    "binary_input_validation": 1,
                    "check_conditions": 1,
                    "check_equality": 18,
                    "check_equality_and_difference": 1,
                    "check_parameters": 5,
                    "check_params_equality": 1,
                    "compare_and_check": 1,
                    "compare_parameters": 3
                },
                "bVar2": {
                    "all_params_zero": 1,
                    "all_zero": 1,
                    "are_inputs_zero": 1,
                    "are_numbers_zero": 1,
                    "has_zero": 1,
                    "has_zero_values": 1,
                    "is_equal": 5,
                    "is_input_zero": 1,
                    "is_zero": 19
                },
                "bVar3": {
                    "is_below_zero": 1,
                    "is_comparison_valid": 1,
                    "is_condition_met": 1,
                    "is_equal": 1,
                    "is_greater": 1,
                    "is_greater_than_or_equal": 1,
                    "is_in_range": 1,
                    "is_less_or_equal": 2,
                    "is_less_than_or_equal": 2,
                    "is_less_than_or_equal_to_zero": 2,
                    "is_less_than_zero": 1,
                    "is_neg": 1,
                    "is_negative": 12,
                    "is_param4_less_than_param2": 1,
                    "is_valid": 1,
                    "negative_flag": 1,
                    "param_comparison": 1
                },
                "param_1": {
                    "a": 5,
                    "first_param": 1,
                    "first_value": 1,
                    "input1": 3,
                    "input_1": 1,
                    "number1": 1,
                    "value1": 15,
                    "value_1": 2,
                    "var1": 1,
                    "x": 1
                },
                "param_2": {
                    "b": 5,
                    "input2": 3,
                    "input_2": 1,
                    "number2": 1,
                    "second_param": 1,
                    "second_value": 1,
                    "value2": 15,
                    "value_2": 2,
                    "var2": 1,
                    "y": 1
                },
                "param_3": {
                    "c": 5,
                    "input3": 3,
                    "input_3": 1,
                    "number3": 1,
                    "third_param": 1,
                    "third_value": 1,
                    "value3": 15,
                    "value_3": 2,
                    "var3": 1,
                    "z": 1
                },
                "param_4": {
                    "d": 4,
                    "fourth_param": 1,
                    "fourth_value": 1,
                    "input4": 3,
                    "input_4": 1,
                    "number4": 1,
                    "result": 1,
                    "value4": 15,
                    "value_4": 2,
                    "var4": 1,
                    "w": 1
                },
                "return": {
                    "result": 3
                },
                "uVar1": {
                    "comparison_result": 1,
                    "difference": 1,
                    "param_xor_result": 1,
                    "result": 17,
                    "temp": 1,
                    "temp1": 1,
                    "xor_result": 9
                }
            },
            "called": [],
            "calling": [
                "FUN_08000990"
            ],
            "code": "\nuint check_equality_and_difference_08000904(uint value1,uint value2,uint value3,uint value4)\n\n{\n  uint result;\n  bool is_zero;\n  bool is_negative;\n  \n  if (((int)(value2 << 1) >> 0x15 == -1 || (int)(value4 << 1) >> 0x15 == -1) &&\n     ((((int)(value2 << 1) >> 0x15 == -1 && ((value1 | value2 << 0xc) != 0)) ||\n      (((int)(value4 << 1) >> 0x15 == -1 && ((value3 | value4 << 0xc) != 0)))))) {\n    result 1;\n  }\n  is_zero = (value1 | value2 << 1) == 0;\n  if (is_zero) {\n    is_zero = (value3 | value4 << 1) == 0;\n  }\n  if (!is_zero) {\n    is_zero = value2 == value4;\n  }\n  if (is_zero) {\n    is_zero = value1 == value3;\n  }\n  if (!is_zero) {\n    result = value2 ^ value4;\n    is_zero = result == 0;\n    if (-1 < (int)result) {\n      is_zero = value2 == value4;\n    }\n    is_negative = -1 < (int)result && value4 <= value2;\n    if (is_zero) {\n      is_negative = value3 <= value1;\n    }\n    value4 = (int)value4 >> 0x1f;\n    if (!is_negative) {\n      value4 = ~value4;\n    }\n    result value4 | 1;\n  }\n  result 0;\n}\n\n",
            "current_name": "check_equality_and_difference_08000904",
            "entrypoint": "0x08000904",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000904": "check_equality_and_difference_08000904",
                "bVar2": "is_zero",
                "bVar3": "is_negative",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "return": "result",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000980": {
            "additional_data": {
                "FUN_08000980": {
                    "compare_and_return": 4,
                    "compare_double": 1,
                    "compare_float_numbers": 1,
                    "compare_float_values": 1,
                    "compare_floating_point_numbers": 4,
                    "compare_floating_point_values": 3,
                    "compare_floats": 15,
                    "compare_with_param": 1,
                    "perform_comparison": 1
                },
                "FUN_08000990": {
                    "compare_result": 1,
                    "convert_to_unsigned": 1,
                    "negate_float": 1,
                    "process_number": 1
                },
                "__aeabi_cdcmpeq": {
                    "compare_floats": 1,
                    "compare_floats_helper": 1
                },
                "param_1": {
                    "arg1": 5,
                    "comparison_result": 2,
                    "first_float": 1,
                    "float1": 1,
                    "input1": 3,
                    "input_1": 1,
                    "number": 1,
                    "result": 11,
                    "result_flag": 1,
                    "result_ptr": 1,
                    "undefined_param1": 1,
                    "val1": 1,
                    "value1": 2
                },
                "param_2": {
                    "arg2": 5,
                    "comparison_result": 1,
                    "comparison_result2": 1,
                    "discard1": 1,
                    "float2": 1,
                    "input2": 3,
                    "input_2": 1,
                    "int1": 1,
                    "length": 1,
                    "second_float": 1,
                    "status": 3,
                    "temp": 1,
                    "temp1": 1,
                    "undefined1": 1,
                    "undefined_param2": 1,
                    "unused": 3,
                    "unused1": 1,
                    "unused_ptr": 1,
                    "val2": 1,
                    "value2": 2
                },
                "param_3": {
                    "arg3": 2,
                    "compare_val1": 1,
                    "float1": 7,
                    "float3": 1,
                    "float_a": 1,
                    "float_num1": 1,
                    "float_value1": 1,
                    "floating_point_number1": 1,
                    "input1": 1,
                    "input_value1": 1,
                    "operand1": 2,
                    "param_int1": 1,
                    "third_float": 1,
                    "undefined_param3": 1,
                    "value1": 7,
                    "value3": 1,
                    "value_1": 1
                },
                "param_4": {
                    "arg4": 2,
                    "compare_val2": 1,
                    "float2": 7,
                    "float4": 1,
                    "float_b": 1,
                    "float_num2": 1,
                    "float_value2": 1,
                    "floating_point_number2": 1,
                    "fourth_float": 1,
                    "input2": 1,
                    "input_value2": 1,
                    "operand2": 2,
                    "param_int2": 1,
                    "undefined_param4": 1,
                    "value2": 7,
                    "value4": 1,
                    "value_2": 1
                }
            },
            "called": [
                "FUN_08000990"
            ],
            "calling": [
                "FUN_080009f0"
            ],
            "code": "\nvoid compare_floats_08000980(undefined4 result,undefined4 arg2,undefined4 value1,undefined4 value2)\n\n{\n  compare_floats_08000980(value1,value2,result,arg2);\n  return;\n}\n\n",
            "current_name": "compare_floats_08000980",
            "entrypoint": "0x08000980",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000980": "compare_floats_08000980",
                "__aeabi_cdcmpeq": "compare_floats",
                "param_1": "result",
                "param_2": "arg2",
                "param_3": "value1",
                "param_4": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000990": {
            "additional_data": {
                "FUN_08000904": {
                    "calculate_result": 2,
                    "calculate_sum": 3,
                    "calculate_unsigned_int": 1,
                    "calculate_value": 2,
                    "perform_calculation": 5,
                    "perform_computation": 1,
                    "perform_conversion": 2,
                    "perform_operation": 2,
                    "perform_unsigned_conversion": 2
                },
                "FUN_08000990": {
                    "calculate": 1,
                    "calculate_and_return": 1,
                    "calculate_result": 2,
                    "calculate_return_value": 1,
                    "calculate_square": 1,
                    "compute": 1,
                    "compute_result": 1,
                    "convert_float_to_uint": 1,
                    "convert_float_to_undefined": 2,
                    "convert_float_to_unsigned": 2,
                    "convert_to_double": 1,
                    "convert_to_float": 3,
                    "convert_to_undefined4": 2,
                    "convert_undefined_to_float": 3,
                    "convert_undefined_to_param": 1,
                    "convert_undefined_to_unsigned": 1,
                    "perform_calculation": 1,
                    "process_data": 2,
                    "process_input": 1,
                    "process_param": 1
                },
                "__nedf2": {
                    "float_conversion_function": 1,
                    "helper_function": 1,
                    "reverse_operation": 1
                },
                "param_1": {
                    "first_number": 1,
                    "input": 3,
                    "input1": 3,
                    "input_data": 1,
                    "input_param": 2,
                    "input_value": 12,
                    "operand_1": 1,
                    "param_a": 1,
                    "val1": 2,
                    "value": 2,
                    "value1": 3
                },
                "param_2": {
                    "input1": 1,
                    "input2": 3,
                    "operand_2": 1,
                    "param2": 2,
                    "param_a": 1,
                    "param_b": 1,
                    "parameter_2": 1,
                    "second_number": 1,
                    "val2": 2,
                    "value1": 2,
                    "value2": 3,
                    "value_1": 1,
                    "var1": 1
                },
                "param_3": {
                    "input2": 1,
                    "input3": 3,
                    "operand_3": 1,
                    "param3": 2,
                    "param_b": 1,
                    "param_c": 1,
                    "parameter_3": 1,
                    "third_number": 1,
                    "val3": 2,
                    "value2": 2,
                    "value3": 3,
                    "value_2": 1,
                    "var2": 1
                },
                "param_4": {
                    "fourth_number": 1,
                    "input3": 1,
                    "input4": 3,
                    "operand_4": 1,
                    "param4": 2,
                    "param_c": 1,
                    "param_d": 1,
                    "parameter_4": 1,
                    "val4": 2,
                    "value3": 2,
                    "value4": 3,
                    "value_3": 1,
                    "var3": 1
                }
            },
            "called": [
                "FUN_08000904"
            ],
            "calling": [
                "FUN_08000980",
                "FUN_080009b4",
                "FUN_080009c8",
                "FUN_080009a0"
            ],
            "code": "\nundefined4 convert_float_to_undefined_08000990(undefined4 input_value)\n\n{\n  float_conversion_function();\n  return input_value;\n}\n\n",
            "current_name": "convert_float_to_undefined_08000990",
            "entrypoint": "0x08000990",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000990": "convert_float_to_undefined_08000990",
                "__nedf2": "float_conversion_function",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080009a0": {
            "additional_data": {
                "FUN_080009a0": {
                    "check_cdcmpeq_result": 1,
                    "check_condition": 5,
                    "check_conditional": 1,
                    "check_equality": 5,
                    "check_if_equal": 1,
                    "check_if_nonzero": 1,
                    "check_if_not_equal_null": 1,
                    "check_if_not_zero": 5,
                    "check_if_zero": 4,
                    "check_nonzero": 1,
                    "check_not_equal_to_zero": 1,
                    "check_result": 1,
                    "check_results": 1,
                    "check_zero": 1,
                    "compare_character": 1,
                    "is_zero": 1
                },
                "__aeabi_cdcmpeq": {
                    "compare_doubles": 1
                },
                "in_ZR": {
                    "character": 1,
                    "condition_result": 2,
                    "flag": 1,
                    "has_cdcmpeq_result": 1,
                    "input_char": 1,
                    "is_equal": 2,
                    "is_not_equal_to_zero": 1,
                    "is_not_zero": 7,
                    "is_null": 1,
                    "is_zero": 1,
                    "is_zero_result": 1,
                    "result": 11,
                    "return_value": 1
                },
                "param_1": {
                    "input_param": 1
                }
            },
            "called": [
                "FUN_08000990"
            ],
            "calling": [
                "FUN_08005900"
            ],
            "code": "\nbool check_if_not_zero_080009a0(void)\n\n{\n  char result;\n  \n  compare_doubles();\n  return result != '\\0';\n}\n\n",
            "current_name": "check_if_not_zero_080009a0",
            "entrypoint": "0x080009a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080009a0": "check_if_not_zero_080009a0",
                "__aeabi_cdcmpeq": "compare_doubles",
                "in_ZR": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080009b4": {
            "additional_data": {
                "DAT_": {
                    "": 1
                },
                "FUN_08000990": {
                    "compare_values": 1,
                    "convert_param1": 1,
                    "execute_param1": 1,
                    "process_param_1": 1,
                    "some_function": 1
                },
                "FUN_080009b4": {
                    "check_cy_status": 1,
                    "check_for_zero": 1,
                    "check_if_argument_is_null": 1,
                    "check_if_carry_flag_is_set": 1,
                    "check_if_carry_is_zero": 1,
                    "check_if_char_is_null": 1,
                    "check_if_cy_is_null": 2,
                    "check_if_cy_zero": 1,
                    "check_if_in_cy_is_null": 2,
                    "check_if_null": 4,
                    "check_if_null_character": 1,
                    "check_if_zero": 1,
                    "is_carry_zero": 1,
                    "is_cryptography_enabled": 1,
                    "is_cy_null": 9,
                    "is_cy_zero": 2,
                    "is_null_string": 1
                },
                "PTR_": {
                    "": 1
                },
                "__aeabi_cdcmpeq": {
                    "cdcmpeq_check": 2,
                    "check_equality": 1,
                    "compare_carry_flag": 1,
                    "compare_cdouble": 1,
                    "compare_double": 1,
                    "compare_eq_double": 1,
                    "compare_floats": 1,
                    "perform_cdcmpeq_check": 1
                },
                "in_CY": {
                    "carry_flag": 1,
                    "character_in_cy": 1,
                    "character_input": 1,
                    "check_result": 1,
                    "cy": 6,
                    "cy_input": 2,
                    "cy_value": 4,
                    "input_char": 7,
                    "input_character": 5,
                    "is_carry": 1,
                    "is_enabled": 1,
                    "status": 1
                },
                "param_1": {
                    "arg": 1,
                    "value_1": 1
                }
            },
            "called": [
                "FUN_08000990"
            ],
            "calling": [
                "FUN_08005bc8",
                "FUN_08005900"
            ],
            "code": "\nbool check_if_in_cy_is_null_080009b4(void)\n\n{\n  char input_char;\n  \n  cdcmpeq_check();\n  return input_char == '\\0';\n}\n\n",
            "current_name": "check_if_in_cy_is_null_080009b4",
            "entrypoint": "0x080009b4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080009b4": "check_if_in_cy_is_null_080009b4",
                "__aeabi_cdcmpeq": "cdcmpeq_check",
                "in_CY": "input_char"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080009c8": {
            "additional_data": {
                "FUN_08000990": {
                    "compare_float_values": 1
                },
                "FUN_080009c8": {
                    "check_carry_and_zero_flags": 1,
                    "check_cdcmpeq_result": 1,
                    "check_condition": 4,
                    "check_conditions": 3,
                    "check_equal": 1,
                    "check_equality": 11,
                    "check_equality_or_zero": 1,
                    "check_zero_carry": 1,
                    "check_zero_condition": 1,
                    "check_zero_or_carry": 1,
                    "check_zero_or_equal": 1,
                    "check_zero_or_negative": 1,
                    "compare_and_return": 1,
                    "evaluate_alignment_result": 1,
                    "perform_cdcmpeq_check": 1
                },
                "__aeabi_cdcmpeq": {
                    "compare_doubles": 1
                },
                "in_CY": {
                    "carry": 1,
                    "carry_flag": 10,
                    "carry_result": 2,
                    "discard_carry": 1,
                    "is_carry": 9,
                    "is_carry_flag": 2,
                    "is_carry_set": 5,
                    "is_negative": 1
                },
                "in_ZR": {
                    "is_zero": 8,
                    "is_zero_flag": 2,
                    "is_zero_result": 7,
                    "is_zero_return": 1,
                    "zero": 1,
                    "zero_flag": 10,
                    "zero_result": 2
                },
                "param_1": {
                    "value": 1
                }
            },
            "called": [
                "FUN_08000990"
            ],
            "calling": [
                "FUN_08006228"
            ],
            "code": "\nbool check_equality_or_zero_080009c8(void)\n\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  \n  compare_doubles();\n  return !(bool)carry_flag || (bool)zero_flag;\n}\n\n",
            "current_name": "check_equality_or_zero_080009c8",
            "entrypoint": "0x080009c8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080009c8": "check_equality_or_zero_080009c8",
                "__aeabi_cdcmpeq": "compare_doubles",
                "in_CY": "carry_flag",
                "in_ZR": "zero_flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080009f0": {
            "additional_data": {
                "FUN_08000980": {
                    "initialize_parameters": 1,
                    "perform_operation": 2,
                    "perform_some_operations": 1
                },
                "FUN_080009f0": {
                    "check_if_carry_is_zero": 1,
                    "check_if_char_is_null": 1,
                    "check_if_cy_is_null": 3,
                    "check_if_empty": 1,
                    "check_if_in_cy_is_null": 1,
                    "check_if_input_empty": 1,
                    "check_if_input_is_empty": 1,
                    "check_if_null": 3,
                    "check_if_null_terminated": 1,
                    "check_if_string_empty": 2,
                    "check_if_string_is_empty": 1,
                    "check_if_zero": 1,
                    "check_is_null_terminated": 1,
                    "check_null_termination": 2,
                    "is_cy_null": 1,
                    "is_end_of_string": 1,
                    "is_in_cy_null": 1,
                    "is_null_char_present": 1,
                    "is_null_character": 3,
                    "is_null_string": 2,
                    "is_null_terminated": 1,
                    "is_zero": 1
                },
                "__aeabi_cdrcmple": {
                    "compare_cy": 1,
                    "compare_cy_with_null": 1,
                    "compare_order": 1,
                    "compare_using_float": 1
                },
                "in_CY": {
                    "byte_value": 1,
                    "carry_flag": 1,
                    "char_value": 1,
                    "character": 2,
                    "cy": 2,
                    "cy_value": 2,
                    "input_byte": 1,
                    "input_char": 8,
                    "input_character": 8,
                    "input_character_is_null": 1,
                    "input_string_empty": 1,
                    "is_empty": 1,
                    "null_terminated": 1,
                    "user_input": 1
                },
                "param_1": {
                    "unused_param_1": 1
                },
                "param_2": {
                    "unused_param_2": 1
                },
                "param_3": {
                    "unused_param_3": 1
                },
                "param_4": {
                    "unused_param_4": 1
                }
            },
            "called": [
                "FUN_08000980"
            ],
            "calling": [
                "FUN_08006d68",
                "FUN_08006228",
                "FUN_08005854",
                "FUN_08005c70"
            ],
            "code": "\nbool check_if_in_cy_is_null_080009f0(void)\n\n{\n  char input_char;\n  \n  compare_cy();\n  return input_char == '\\0';\n}\n\n",
            "current_name": "check_if_in_cy_is_null_080009f0",
            "entrypoint": "0x080009f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080009f0": "check_if_in_cy_is_null_080009f0",
                "__aeabi_cdrcmple": "compare_cy",
                "in_CY": "input_char"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000a04": {
            "additional_data": {
                "0x15": {
                    "bit_shift": 1
                },
                "FUN_08000a04": {
                    "check_conditions": 3,
                    "check_inputs": 1,
                    "check_param_combination": 1,
                    "check_parameters": 14,
                    "check_params": 5,
                    "check_valid_inputs": 2,
                    "check_valid_parameters": 1,
                    "is_valid_combination": 1,
                    "is_valid_input": 1,
                    "is_valid_params": 1
                },
                "param_1": {
                    "first_param": 1,
                    "flags_1": 1,
                    "input1": 6,
                    "input_1": 7,
                    "num1": 1,
                    "value1": 11,
                    "value_1": 4
                },
                "param_2": {
                    "flags_2": 1,
                    "input2": 6,
                    "input_2": 7,
                    "num2": 1,
                    "second_param": 1,
                    "value2": 11,
                    "value_2": 4
                },
                "param_3": {
                    "input3": 6,
                    "input_3": 7,
                    "num3": 1,
                    "third_param": 1,
                    "value3": 11,
                    "value_1": 1,
                    "value_3": 4
                },
                "param_4": {
                    "fourth_param": 1,
                    "input4": 6,
                    "input_4": 7,
                    "num4": 1,
                    "value4": 11,
                    "value_2": 1,
                    "value_4": 4
                }
            },
            "called": [],
            "calling": [
                "FUN_08005bc8",
                "FUN_08005900",
                "FUN_08005854"
            ],
            "code": "\nundefined4 check_valid_parameters_08000a04(uint value1,int value2,uint value3,int value4)\n\n{\n  if ((((value2 << 1) >> 0x15 != -1) || ((value1 | value2 << 0xc) == 0)) &&\n     (((value4 << 1) >> 0x15 != -1 || ((value3 | value4 << 0xc) == 0)))) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "check_valid_parameters_08000a04",
            "entrypoint": "0x08000a04",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000a04": "check_valid_parameters_08000a04",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000a30": {
            "additional_data": {
                "FUN_08000a30": {
                    "calculate_float": 11,
                    "calculate_float32": 1,
                    "calculate_float_offset": 1,
                    "calculate_float_value": 1,
                    "calculate_floating_point": 4,
                    "calculate_new_float": 1,
                    "calculate_normalized_float": 2,
                    "calculate_square_root": 1,
                    "compute_float": 1,
                    "convert_floating_point": 1,
                    "convert_to_float": 3,
                    "decode_floating_point": 1,
                    "floating_point_conversion": 1,
                    "reverse_compute": 1
                },
                "SCARRY4": {
                    "is_carry": 1,
                    "is_overflow": 1
                },
                "bVar4": {
                    "check_flag": 1,
                    "is_special_case": 1,
                    "is_zero": 27,
                    "is_zero_value": 1
                },
                "bVar5": {
                    "check_condition": 1,
                    "is_below_threshold": 1,
                    "is_in_range": 1,
                    "is_less_than": 4,
                    "is_less_than2_3e9": 1,
                    "is_less_than70000000": 2,
                    "is_less_than_boundary": 1,
                    "is_less_than_threshold": 8,
                    "is_negative": 1,
                    "is_normal_case": 1,
                    "is_not_large_exponent": 1,
                    "is_small": 2,
                    "is_small_exponent": 1,
                    "is_small_value": 1,
                    "is_valid": 2,
                    "is_within_range": 2
                },
                "in_r12": {
                    "adjusted_double_y": 1,
                    "adjusted_exponent_minus": 1,
                    "adjusted_int": 1,
                    "adjusted_multiplier": 1,
                    "adjusted_multiplier_2": 1,
                    "adjusted_value": 1,
                    "adjusted_value2": 1,
                    "boundary_value": 1,
                    "check_value": 1,
                    "condition_value": 1,
                    "conditional_value": 2,
                    "limit_value": 1,
                    "normalized_exponent_with_offset": 1,
                    "offset": 1,
                    "saved_value": 1,
                    "scaled_value": 1,
                    "shifted_double_denominator2": 1,
                    "special_exponent": 1,
                    "temp": 1,
                    "temp2": 1,
                    "temp3": 2,
                    "temp_offset": 1,
                    "temp_value": 1,
                    "temp_value3": 1,
                    "temp_var": 3,
                    "temp_var1": 1
                },
                "param_1": {
                    "float1": 1,
                    "float_bits": 1,
                    "float_input": 1,
                    "input": 2,
                    "input1": 3,
                    "input_float": 2,
                    "input_significand": 1,
                    "input_value": 10,
                    "int_value": 1,
                    "integer1": 1,
                    "num1": 2,
                    "number": 1,
                    "numerator": 1,
                    "value": 2,
                    "x": 1
                },
                "param_2": {
                    "bit_mask": 1,
                    "conversion_type": 1,
                    "denominator": 1,
                    "exponent": 2,
                    "flags": 1,
                    "float2": 1,
                    "float_exponent": 1,
                    "input2": 3,
                    "input_exponent": 1,
                    "input_flag": 1,
                    "input_int": 1,
                    "input_mode": 1,
                    "input_multiplier": 1,
                    "int_value2": 1,
                    "integer2": 1,
                    "mask": 1,
                    "multiplier": 5,
                    "num2": 2,
                    "precision": 1,
                    "scale_factor": 1,
                    "shift_amount": 1,
                    "y": 1
                },
                "uVar1": {
                    "output_value": 1,
                    "result": 29
                },
                "uVar2": {
                    "double_denominator": 1,
                    "double_flag": 1,
                    "double_input2": 1,
                    "double_multiplier": 3,
                    "double_num2": 1,
                    "double_of_input2": 1,
                    "double_y": 1,
                    "doubled_input2": 1,
                    "doubled_integer2": 1,
                    "exponent_times2": 1,
                    "exponent_times_two": 1,
                    "multiplied": 1,
                    "multiplied_exponent": 1,
                    "multiplier_times2": 2,
                    "scaled_param_2": 1,
                    "scaled_value": 1,
                    "shifted_bit_mask": 1,
                    "shifted_exponent": 1,
                    "shifted_int": 1,
                    "shifted_mask": 1,
                    "shifted_value": 1,
                    "temp": 1,
                    "temp1": 2,
                    "temp_value": 1,
                    "temp_value1": 1,
                    "twice_multiplier": 1
                },
                "uVar3": {
                    "added_value": 1,
                    "adjusted": 1,
                    "adjusted_bit_mask": 1,
                    "adjusted_double_input2": 1,
                    "adjusted_exponent": 1,
                    "adjusted_multiplier": 1,
                    "adjusted_num2": 1,
                    "adjusted_value": 4,
                    "modified_scaled_value": 1,
                    "normalized_exponent": 2,
                    "normalized_int": 1,
                    "offset": 1,
                    "scaled": 1,
                    "shifted_double_denominator": 1,
                    "shifted_mask_plus_constant": 1,
                    "shifted_value": 1,
                    "sum": 1,
                    "summed_exponent": 1,
                    "temp": 1,
                    "temp1": 1,
                    "temp2": 2,
                    "temp_result": 1,
                    "temp_value2": 1,
                    "updated_multiplier": 2
                },
                "uVar4": {
                    "shifted_value": 1
                },
                "uVar5": {
                    "mask": 1
                },
                "uVar6": {
                    "shifted_multiplier": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800411c",
                "FUN_08003330"
            ],
            "code": "\nuint calculate_normalized_float_08000a30(uint input_value,uint multiplier)\n\n{\n  uint result;\n  uint double_multiplier;\n  uint adjusted_value;\n  uint temp_var;\n  bool is_zero;\n  bool is_less_than_threshold;\n  \n  double_multiplier = multiplier * 2;\n  is_less_than_threshold = double_multiplier < 0x70000000;\n  adjusted_value = double_multiplier + 0x90000000;\n  result = adjusted_value;\n  if (!is_less_than_threshold) {\n    temp_var = double_multiplier + 0x8fe00000;\n    result = temp_var;\n  }\n  is_zero = result == 0;\n  if (!is_less_than_threshold && adjusted_value >= 0x200000) {\n    is_zero = temp_var == 0x1fc00000;\n  }\n  if (((is_less_than_threshold || adjusted_value < 0x200000) || 0x1fc00000 < temp_var) || is_zero) {\n    if ((multiplier & 0x40000000) != 0) {\n      if (((int)double_multiplier >> 0x15 == -1) && ((input_value | multiplier << 0xc) != 0)) {\n        return 0x7fc00000;\n      }\n      return multiplier & 0x80000000 | 0x7f800000;\n    }\n    if ((int)(double_multiplier + 0x92e00000) < 0 != is_overflow(adjusted_value,0x2e00000)) {\n      return multiplier & 0x80000000;\n    }\n    double_multiplier = 0x18 - (double_multiplier + 0x92e00000 >> 0x15);\n    result = input_value >> (double_multiplier & 0xff);\n    if (input_value << (0x20 - double_multiplier & 0xff) != 0) {\n      result = result | 1;\n    }\n    adjusted_value = multiplier & 0x1fffff | 0x100000;\n    input_value = result | adjusted_value << (0x20 - double_multiplier & 0xff);\n    adjusted_value = (adjusted_value >> (double_multiplier & 0xff)) << 1;\n  }\n  result = (multiplier & 0x80000000 | input_value >> 0x1d) + adjusted_value * 4 + (uint)(0x7fffffff < input_value * 8);\n  if (input_value * 8 == 0x80000000) {\n    result = result & 0xfffffffe;\n  }\n  return result;\n}\n\n",
            "current_name": "calculate_normalized_float_08000a30",
            "entrypoint": "0x08000a30",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000a30": "calculate_normalized_float_08000a30",
                "SCARRY4": "is_overflow",
                "bVar4": "is_zero",
                "bVar5": "is_less_than_threshold",
                "in_r12": "temp_var",
                "param_1": "input_value",
                "param_2": "multiplier",
                "uVar1": "result",
                "uVar2": "double_multiplier",
                "uVar3": "adjusted_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000ad8": {
            "additional_data": {
                "FUN_08000ad8": {
                    "calculate_division": 1,
                    "calculate_double_precision_float": 1,
                    "calculate_float": 7,
                    "calculate_float_from_bits": 1,
                    "calculate_floating_point": 5,
                    "calculate_new_float": 1,
                    "calculate_new_value": 2,
                    "calculate_normalized_float": 1,
                    "calculate_shifted_value": 1,
                    "calculate_square_root": 1,
                    "calculation": 1,
                    "perform_arithmetic_operation": 1,
                    "perform_bitwise_operations": 1,
                    "perform_calculation": 2,
                    "reverse_bits": 2
                },
                "LZCOUNT": {
                    "leading_zero_count": 1,
                    "leading_zeroes_count": 1,
                    "leading_zeros_count": 1
                },
                "bVar8": {
                    "b_var8": 1,
                    "check": 1,
                    "check_flag": 2,
                    "compare": 1,
                    "condition": 2,
                    "condition_check": 1,
                    "flag": 3,
                    "is_condition_met": 2,
                    "is_condition_true": 1,
                    "is_equal": 14,
                    "is_true": 1,
                    "is_zero": 2
                },
                "iVar1": {
                    "dividend_shifted_msb": 1,
                    "high_byte_shifted_input1": 1,
                    "input_shifted": 2,
                    "msb_shifted1": 1,
                    "num_shifted_msb": 1,
                    "shift": 1,
                    "shift_amount": 1,
                    "shift_amount1": 1,
                    "shift_input": 1,
                    "shifted_input": 2,
                    "shifted_input_1": 2,
                    "shifted_input_high": 1,
                    "shifted_input_value_1_div_0x18": 1,
                    "shifted_input_value_msb": 1,
                    "shifted_mantissa": 1,
                    "shifted_val1": 2,
                    "shifted_value1": 3,
                    "shifted_x": 1,
                    "sign_bits1": 1,
                    "upper_bit_check": 1,
                    "upper_byte": 1,
                    "value_shifted": 1,
                    "x_sign": 1
                },
                "iVar2": {
                    "bit_pattern_shifted": 1,
                    "divisor_shifted_msb": 1,
                    "exponent_shifted": 1,
                    "high_byte_shifted_input2": 1,
                    "mask_shifted": 1,
                    "masked_shift_high": 1,
                    "msb_shifted2": 1,
                    "num_bits": 1,
                    "shift2": 1,
                    "shift_amount2": 2,
                    "shifted_exponent": 1,
                    "shifted_input2": 1,
                    "shifted_input_2": 2,
                    "shifted_input_value_2_div_0x18": 1,
                    "shifted_mask": 1,
                    "shifted_mask_msb": 1,
                    "shifted_num_msb": 1,
                    "shifted_result": 1,
                    "shifted_val2": 2,
                    "shifted_value2": 3,
                    "shifted_y": 1,
                    "sign_bits2": 1,
                    "upper_bit_check2": 1,
                    "y_sign": 1
                },
                "param_1": {
                    "dividend": 2,
                    "float1": 1,
                    "float_bits1": 1,
                    "input": 3,
                    "input1": 4,
                    "input_1": 2,
                    "input_float1": 1,
                    "input_number": 2,
                    "input_significand": 1,
                    "input_val1": 1,
                    "input_value": 4,
                    "input_value1": 2,
                    "input_value_1": 1,
                    "mantissa": 1,
                    "num": 1,
                    "value": 2,
                    "x": 2
                },
                "param_2": {
                    "bit_pattern": 1,
                    "divisor": 2,
                    "exponent": 3,
                    "float2": 1,
                    "float_bits2": 1,
                    "input2": 4,
                    "input_2": 2,
                    "input_exponent": 1,
                    "input_float2": 1,
                    "input_val2": 1,
                    "input_value2": 2,
                    "input_value_2": 1,
                    "is_negative": 1,
                    "mask": 4,
                    "mask_value": 2,
                    "shift_amount": 1,
                    "xor_value": 1,
                    "y": 2
                },
                "param_3": {
                    "arg": 1,
                    "constant": 1,
                    "constant_value": 1,
                    "flag": 2,
                    "flags": 1,
                    "float_param": 1,
                    "input3": 4,
                    "input_3": 1,
                    "input_int": 1,
                    "input_sign_bit": 1,
                    "input_val3": 1,
                    "input_value3": 1,
                    "input_value_3": 1,
                    "optional_parameter": 1,
                    "param_3": 2,
                    "parameter3": 1,
                    "sign": 2,
                    "sign_bit": 1,
                    "temp_value": 1,
                    "undefined": 1,
                    "unknown": 1,
                    "unused": 1,
                    "value": 1,
                    "z": 2
                },
                "param_4": {
                    "accumulator": 1,
                    "bit_pattern_mask": 1,
                    "comparison_number": 1,
                    "float3": 1,
                    "float_bits3": 1,
                    "input4": 4,
                    "input_4": 1,
                    "input_float3": 1,
                    "input_val4": 1,
                    "input_value4": 1,
                    "input_value_4": 1,
                    "output_exponent": 1,
                    "param_4": 1,
                    "parameter4": 1,
                    "result": 4,
                    "result_value": 1,
                    "round_mode": 1,
                    "rounding_mode": 2,
                    "shift_amount": 1,
                    "shift_value": 2,
                    "temp_value": 1,
                    "w": 2
                },
                "uVar1": {
                    "temp1": 1
                },
                "uVar10": {
                    "dividend_neg": 1
                },
                "uVar11": {
                    "quotient": 1
                },
                "uVar12": {
                    "remainder": 1
                },
                "uVar13": {
                    "rounding_bit": 1
                },
                "uVar14": {
                    "dividend_significand": 1
                },
                "uVar15": {
                    "divisor_significand": 1
                },
                "uVar16": {
                    "shift_count": 1
                },
                "uVar17": {
                    "result_sign": 1
                },
                "uVar18": {
                    "divisor_sign_bit": 1
                },
                "uVar19": {
                    "divisor_negated": 1
                },
                "uVar2": {
                    "temp2": 1
                },
                "uVar20": {
                    "divisor_neg_shifted": 1
                },
                "uVar21": {
                    "magic_number": 1
                },
                "uVar22": {
                    "remainder_neg": 1
                },
                "uVar23": {
                    "quotient_sign": 1
                },
                "uVar3": {
                    "abs_x": 1,
                    "bit_pattern_inverse": 1,
                    "bits1_complement": 1,
                    "bitwise_xor": 2,
                    "dividend_abs": 1,
                    "divisor_complement": 1,
                    "flipped_mask": 1,
                    "input_xor_mask": 1,
                    "inverted_shift_amount": 1,
                    "masked_input": 2,
                    "modified_input_value_2": 1,
                    "normalized_significand": 1,
                    "num_complement": 1,
                    "result1": 1,
                    "result_mantissa": 1,
                    "temp1": 1,
                    "temp3": 1,
                    "temp_result": 1,
                    "temp_val1": 1,
                    "temp_value": 1,
                    "temp_value1": 1,
                    "temp_var1": 4,
                    "value2": 1,
                    "x_abs": 1,
                    "xor_output": 1,
                    "xor_result": 1
                },
                "uVar4": {
                    "abs_shifted_input_2": 1,
                    "abs_y": 1,
                    "bits2_complement": 1,
                    "divisor_abs": 1,
                    "flipped_input_value": 1,
                    "input_inverse": 1,
                    "mask_complement": 1,
                    "masked_result": 1,
                    "masked_shift": 1,
                    "modified_input_value_3": 1,
                    "output_significand": 1,
                    "result1": 1,
                    "result2": 1,
                    "result_exponent": 1,
                    "result_mask": 1,
                    "shifted_bitwise_xor": 1,
                    "temp2": 1,
                    "temp4": 1,
                    "temp_exponent": 1,
                    "temp_result2": 1,
                    "temp_val2": 1,
                    "temp_value2": 1,
                    "temp_var2": 4,
                    "temp_var_1": 1,
                    "u_var4": 1,
                    "value2_abs": 1,
                    "y_abs": 1
                },
                "uVar5": {
                    "abs_input_1": 1,
                    "abs_shifted_x": 1,
                    "bit_operation1": 1,
                    "bit_pattern1": 1,
                    "dividend_shifted": 1,
                    "input_shifted_twice": 1,
                    "left_shifted_input1": 1,
                    "normalized_input": 1,
                    "num_shifted": 1,
                    "operation": 1,
                    "output": 1,
                    "result": 1,
                    "result1": 1,
                    "result2": 1,
                    "result_abs": 1,
                    "result_sign": 1,
                    "result_val1": 1,
                    "result_var1": 2,
                    "shifted_input": 2,
                    "shifted_input_value": 1,
                    "shifted_input_value_1": 1,
                    "temp1": 1,
                    "temp5": 1,
                    "temp_mantissa": 1,
                    "temp_significand": 1,
                    "temp_value3": 1,
                    "temp_var3": 2,
                    "temp_var_2": 1
                },
                "uVar6": {
                    "adjusted_shift": 1,
                    "adjusted_shifted_input_2": 1,
                    "bit_operation2": 1,
                    "bit_pattern2": 1,
                    "corrected_shift_value": 1,
                    "loop_counter": 2,
                    "num_bits_shifted": 1,
                    "num_iterations": 1,
                    "precision_diff": 1,
                    "result": 2,
                    "result2": 1,
                    "result_var2": 2,
                    "shift_amount": 2,
                    "shifted_result": 1,
                    "shifted_value": 1,
                    "temp1": 1,
                    "temp2": 1,
                    "temp6": 1,
                    "temp_1": 1,
                    "temp_exponent": 1,
                    "temp_val3": 1,
                    "temp_value4": 1,
                    "temp_var4": 2,
                    "temp_var_3": 1,
                    "u_var6": 1,
                    "updated_input_1": 1
                },
                "uVar7": {
                    "diff": 1,
                    "difference": 17,
                    "exponent_difference": 1,
                    "result_var3": 1,
                    "shift_difference": 1,
                    "temp2": 1,
                    "temp3": 1,
                    "temp7": 1,
                    "temp_2": 1,
                    "temp_val4": 1,
                    "temp_value5": 1,
                    "temp_var3": 1,
                    "temp_var5": 2,
                    "u_var7": 1
                },
                "uVar9": {
                    "divisor_neg": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08002ec0",
                "FUN_0800426c",
                "FUN_08002bf0",
                "FUN_0800483c",
                "FUN_08003330",
                "FUN_08002ee8",
                "FUN_08002d88"
            ],
            "code": "\nuint calculate_new_float_08000ad8(uint input1,uint input2,undefined4 input3,uint result)\n\n{\n  int shifted_value1;\n  int shifted_value2;\n  uint temp_var1;\n  uint temp_var2;\n  uint temp_var3;\n  uint result;\n  uint difference;\n  bool is_equal;\n  \n  temp_var1 = input2 ^ 0x80000000;\n  temp_var3 = input1 << 1;\n  is_equal = temp_var3 == 0;\n  if (!is_equal) {\n    result = input2 << 1;\n    is_equal = result == 0;\n  }\n  if (!is_equal) {\n    is_equal = temp_var3 == result;\n  }\n  shifted_value1 = (int)temp_var3 >> 0x18;\n  if (!is_equal) {\n    is_equal = shifted_value1 == -1;\n  }\n  if (!is_equal) {\n    is_equal = (int)result >> 0x18 == -1;\n  }\n  if (is_equal) {\n    shifted_value2 = (int)(input2 << 1) >> 0x18;\n    if (shifted_value1 == -1 || shifted_value2 == -1) {\n      temp_var3 = temp_var1;\n      if (shifted_value1 == -1) {\n        temp_var3 = input1;\n      }\n      if (shifted_value1 != -1 || shifted_value2 != -1) {\n        temp_var1 = temp_var3;\n      }\n      is_equal = (temp_var3 & 0x7fffff) == 0;\n      if (is_equal) {\n        is_equal = (temp_var1 & 0x7fffff) == 0;\n      }\n      if (is_equal) {\n        is_equal = temp_var3 == temp_var1;\n      }\n      if (!is_equal) {\n        temp_var3 = temp_var3 | 0x400000;\n      }\n      return temp_var3;\n    }\n    if (((input1 ^ temp_var1) & 0x7fffffff) != 0) {\n      if (temp_var3 == 0) {\n        input1 = temp_var1;\n      }\n      return input1;\n    }\n    if (input1 != temp_var1) {\n      return 0;\n    }\n    if ((temp_var3 & 0xff000000) == 0) {\n      temp_var1 = input1 << 1;\n      if ((input1 & 0x80000000) != 0) {\n        temp_var1 = temp_var1 | 0x80000000;\n      }\n      return temp_var1;\n    }\n    if (temp_var3 < 0xfe000000) {\n      return input1 + 0x800000;\n    }\n    input1 = input1 & 0x80000000;\nLAB_08000c12:\n    return input1 | 0x7f800000;\n  }\n  temp_var3 = temp_var3 >> 0x18;\n  result = result >> 0x18;\n  difference = result - temp_var3;\n  is_equal = difference != 0;\n  result = temp_var3;\n  if (is_equal && temp_var3 <= result) {\n    result = temp_var3 + difference;\n  }\n  if (is_equal && temp_var3 <= result) {\n    temp_var1 = temp_var1 ^ input1;\n  }\n  if (is_equal && temp_var3 <= result) {\n    input1 = input1 ^ temp_var1;\n  }\n  if (is_equal && temp_var3 <= result) {\n    temp_var1 = temp_var1 ^ input1;\n  }\n  if (result < temp_var3) {\n    difference = -difference;\n  }\n  if (0x19 < difference) {\n    return input1;\n  }\n  temp_var3 = input1 & 0xffffff | 0x800000;\n  if ((input1 & 0x80000000) != 0) {\n    temp_var3 = -temp_var3;\n  }\n  temp_var2 = temp_var1 & 0xffffff | 0x800000;\n  if ((temp_var1 & 0x80000000) != 0) {\n    temp_var2 = -temp_var2;\n  }\n  if (result == difference) {\n    temp_var2 = temp_var2 ^ 0x800000;\n    if (result == 0) {\n      temp_var3 = temp_var3 ^ 0x800000;\n      result = 1;\n    }\n    else {\n      difference = difference - 1;\n    }\n  }\n  temp_var3 = temp_var3 + ((int)temp_var2 >> (difference & 0xff));\n  temp_var2 = temp_var2 << (0x20 - difference & 0xff);\n  input1 = temp_var3 & 0x80000000;\n  if ((int)temp_var3 < 0) {\n    is_equal = temp_var2 != 0;\n    temp_var2 = -temp_var2;\n    temp_var3 = -temp_var3 - (uint)is_equal;\n  }\n  if (temp_var3 < 0x800000) {\n    temp_var1 = temp_var2 & 0x80000000;\n    temp_var2 = temp_var2 << 1;\n    temp_var3 = temp_var3 * 2 + (uint)(temp_var1 != 0);\n    temp_var1 = result - 2;\n    if ((temp_var3 & 0x800000) == 0) {\n      difference = leading_zeroes_count(temp_var3) - 8;\n      temp_var3 = temp_var3 << (difference & 0xff);\n      if ((int)temp_var1 < (int)difference) {\n        temp_var3 = temp_var3 >> (-(temp_var1 - difference) & 0xff);\n      }\n      else {\n        temp_var3 = temp_var3 + (temp_var1 - difference) * 0x800000;\n      }\n      return temp_var3 | input1;\n    }\n  }\n  else {\n    temp_var1 = result - 1;\n    if (0xffffff < temp_var3) {\n      temp_var1 = temp_var3 & 1;\n      temp_var3 = temp_var3 >> 1;\n      temp_var2 = (uint)(temp_var1 != 0) << 0x1f | temp_var2 >> 1;\n      temp_var1 = result;\n      if (0xfd < result) goto LAB_08000c12;\n    }\n  }\n  temp_var3 = temp_var3 + temp_var1 * 0x800000 + (uint)(0x7fffffff < temp_var2);\n  if (temp_var2 == 0x80000000) {\n    temp_var3 = temp_var3 & 0xfffffffe;\n  }\n  return temp_var3 | input1;\n}\n\n",
            "current_name": "calculate_new_float_08000ad8",
            "entrypoint": "0x08000ad8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000ad8": "calculate_new_float_08000ad8",
                "LZCOUNT": "leading_zeroes_count",
                "bVar8": "is_equal",
                "iVar1": "shifted_value1",
                "iVar2": "shifted_value2",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "result",
                "uVar3": "temp_var1",
                "uVar4": "temp_var2",
                "uVar5": "temp_var3",
                "uVar6": "result",
                "uVar7": "difference"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000adc": {
            "additional_data": {
                "FUN_08000adc": {
                    "calculate_arithmetic": 1,
                    "calculate_float": 5,
                    "calculate_float_exponent": 1,
                    "calculate_float_value": 2,
                    "calculate_floating_point": 6,
                    "calculate_floating_point_result": 1,
                    "calculate_floating_point_value": 3,
                    "calculate_shifted_sum": 1,
                    "compute_floating_point": 1,
                    "convert_float_to_uint": 1,
                    "convert_to_ieee754": 1,
                    "improved_code": 1,
                    "normalize_float": 1,
                    "reverse_binary_calculation": 1,
                    "reverse_bits": 1,
                    "reverse_floating_point": 1
                },
                "LZCOUNT": {
                    "leading_zero_count": 4,
                    "leading_zeros_count": 1
                },
                "bVar7": {
                    "check_condition": 1,
                    "equal_shift": 1,
                    "is_condition_met": 1,
                    "is_equal": 15,
                    "is_equal_exp": 1,
                    "is_zero": 11,
                    "is_zero_or_equal": 1
                },
                "iVar1": {
                    "exp1": 1,
                    "exponent1": 3,
                    "num1_shifted_right24": 1,
                    "shift_amount1": 2,
                    "shifted_a": 1,
                    "shifted_float1": 2,
                    "shifted_input1": 7,
                    "shifted_input1_msb": 1,
                    "shifted_input_1": 1,
                    "shifted_num1": 2,
                    "shifted_number1": 1,
                    "shifted_operand1": 1,
                    "shifted_value": 1,
                    "shifted_value1": 1,
                    "shifted_value1_msb": 1,
                    "sign1": 1,
                    "sign_bit1": 2,
                    "upper_byte1": 1
                },
                "iVar2": {
                    "exp2": 1,
                    "exponent2": 3,
                    "num2_shifted_right24": 1,
                    "shift_amount2": 2,
                    "shifted_b": 1,
                    "shifted_float2": 2,
                    "shifted_input2": 7,
                    "shifted_input_2": 1,
                    "shifted_neg_input2_msb": 1,
                    "shifted_num2": 2,
                    "shifted_number2": 1,
                    "shifted_operand2": 1,
                    "shifted_value2": 2,
                    "shifted_value2_msb": 1,
                    "sign2": 1,
                    "sign_bit2": 2,
                    "upper_byte2": 1
                },
                "param_1": {
                    "float1": 3,
                    "float_number1": 1,
                    "input": 1,
                    "input1": 12,
                    "input_1": 1,
                    "input_a": 1,
                    "input_float1": 1,
                    "input_value1": 2,
                    "num1": 4,
                    "number1": 3,
                    "operand1": 1,
                    "value1": 1
                },
                "param_2": {
                    "float2": 3,
                    "float_number2": 1,
                    "input2": 13,
                    "input_2": 1,
                    "input_b": 1,
                    "input_float2": 1,
                    "input_value2": 2,
                    "num2": 4,
                    "number2": 3,
                    "operand2": 1,
                    "value2": 1
                },
                "param_3": {
                    "constant1": 1,
                    "flag": 1,
                    "float3": 1,
                    "float_exponent": 1,
                    "input3": 9,
                    "int_param": 1,
                    "param3": 6,
                    "precision": 2,
                    "rounding_mode": 1,
                    "shift": 1,
                    "undefined_param": 1,
                    "undefined_value": 1,
                    "unknown": 1,
                    "unused": 1,
                    "unused_param": 1,
                    "unused_parameter": 1,
                    "var3": 1
                },
                "param_4": {
                    "compare_value": 1,
                    "comparison_result": 1,
                    "constant2": 1,
                    "exception_flags": 1,
                    "flag": 1,
                    "float3": 2,
                    "float4": 1,
                    "float_result": 1,
                    "input3": 1,
                    "input4": 9,
                    "param4": 6,
                    "result": 3,
                    "unused": 1,
                    "unused_parameter2": 1,
                    "var4": 1
                },
                "uVar10": {
                    "shifted_modified_input1": 1,
                    "temp_float3": 1
                },
                "uVar11": {
                    "shifted_modified_input2": 1
                },
                "uVar12": {
                    "shift_value": 1
                },
                "uVar13": {
                    "shifted_result1": 1
                },
                "uVar14": {
                    "shifted_result2": 1
                },
                "uVar15": {
                    "or_value": 1
                },
                "uVar16": {
                    "and_value": 1
                },
                "uVar17": {
                    "count": 1
                },
                "uVar18": {
                    "initial_result": 1
                },
                "uVar19": {
                    "is_negative": 1
                },
                "uVar20": {
                    "shifted_result3": 1
                },
                "uVar21": {
                    "temp_shift": 1
                },
                "uVar22": {
                    "final_result": 1
                },
                "uVar3": {
                    "abs_input1": 3,
                    "absolute_number1": 1,
                    "converted_float1": 1,
                    "float1": 1,
                    "fraction1": 1,
                    "fraction_a": 1,
                    "mantissa": 1,
                    "mantissa1": 3,
                    "neg_shifted_input2": 1,
                    "normalized_num1": 1,
                    "num1_msb": 1,
                    "result": 2,
                    "result1": 7,
                    "result_1": 1,
                    "result_value1": 1,
                    "shifted_input1": 1,
                    "shifted_number2": 1,
                    "shifted_value2": 1,
                    "sign1_mask": 1,
                    "value1": 1
                },
                "uVar4": {
                    "abs_input2": 3,
                    "absolute_number2": 1,
                    "converted_float2": 1,
                    "exponent1": 1,
                    "float2": 1,
                    "fraction2": 1,
                    "fraction_b": 1,
                    "input1_shifted": 1,
                    "mantissa2": 3,
                    "normalized_num2": 1,
                    "num1_shifted_left1": 1,
                    "result": 1,
                    "result2": 3,
                    "result_2": 1,
                    "result_value2": 1,
                    "shifted_input1": 1,
                    "shifted_input2": 1,
                    "shifted_number1": 1,
                    "shifted_result": 1,
                    "shifted_result1": 4,
                    "shifted_value1": 1,
                    "value2": 1
                },
                "uVar5": {
                    "abs_diff": 1,
                    "compare": 1,
                    "comparison1": 1,
                    "comparison_value1": 1,
                    "count_1": 1,
                    "diff": 1,
                    "diff_bits": 1,
                    "diff_exp": 1,
                    "difference": 2,
                    "exponent": 1,
                    "exponent2": 1,
                    "exponent_a": 1,
                    "fraction3": 1,
                    "num2_shifted_left1": 1,
                    "shift": 1,
                    "shift_amount": 3,
                    "shift_count": 1,
                    "shifted_input3": 1,
                    "shifted_result2": 2,
                    "temp1": 3,
                    "temp_float1": 1,
                    "temporary_result1": 1,
                    "u_var5": 1,
                    "updated_input1": 1,
                    "value3": 1
                },
                "uVar6": {
                    "abs_diff": 2,
                    "abs_diff_exp": 1,
                    "abs_difference": 1,
                    "comparison2": 1,
                    "comparison_value2": 1,
                    "count_2": 1,
                    "diff": 1,
                    "diff_abs": 1,
                    "difference": 13,
                    "exponent_diff": 1,
                    "exponent_difference": 1,
                    "shift_amount": 1,
                    "temp": 1,
                    "temp2": 3,
                    "temp_float2": 1,
                    "u_var6": 1
                },
                "uVar8": {
                    "modified_input1": 1,
                    "temp_float1": 1
                },
                "uVar9": {
                    "modified_input2": 1,
                    "temp_float2": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800411c",
                "FUN_08002ec0",
                "FUN_08002cb0",
                "FUN_0800426c",
                "FUN_0800483c",
                "FUN_08003330",
                "FUN_08002ee8",
                "FUN_08004a84"
            ],
            "code": "\nuint calculate_floating_point_value_08000adc(uint input1,uint input2,undefined4 input3,uint input4)\n\n{\n  int shifted_input1;\n  int shifted_input2;\n  uint result1;\n  uint shifted_result1;\n  uint temp1;\n  uint difference;\n  bool is_equal;\n  \n  shifted_result1 = input1 << 1;\n  is_equal = shifted_result1 == 0;\n  if (!is_equal) {\n    input4 = input2 << 1;\n    is_equal = input4 == 0;\n  }\n  if (!is_equal) {\n    is_equal = shifted_result1 == input4;\n  }\n  shifted_input1 = (int)shifted_result1 >> 0x18;\n  if (!is_equal) {\n    is_equal = shifted_input1 == -1;\n  }\n  if (!is_equal) {\n    is_equal = (int)input4 >> 0x18 == -1;\n  }\n  if (is_equal) {\n    shifted_input2 = (int)(input2 << 1) >> 0x18;\n    if (shifted_input1 == -1 || shifted_input2 == -1) {\n      shifted_result1 = input2;\n      if (shifted_input1 == -1) {\n        shifted_result1 = input1;\n      }\n      if (shifted_input1 != -1 || shifted_input2 != -1) {\n        input2 = shifted_result1;\n      }\n      is_equal = (shifted_result1 & 0x7fffff) == 0;\n      if (is_equal) {\n        is_equal = (input2 & 0x7fffff) == 0;\n      }\n      if (is_equal) {\n        is_equal = shifted_result1 == input2;\n      }\n      if (!is_equal) {\n        shifted_result1 = shifted_result1 | 0x400000;\n      }\n      return shifted_result1;\n    }\n    if (((input1 ^ input2) & 0x7fffffff) != 0) {\n      if (shifted_result1 == 0) {\n        input1 = input2;\n      }\n      return input1;\n    }\n    if (input1 != input2) {\n      return 0;\n    }\n    if ((shifted_result1 & 0xff000000) == 0) {\n      shifted_result1 = input1 << 1;\n      if ((input1 & 0x80000000) != 0) {\n        shifted_result1 = shifted_result1 | 0x80000000;\n      }\n      return shifted_result1;\n    }\n    if (shifted_result1 < 0xfe000000) {\n      return input1 + 0x800000;\n    }\n    input1 = input1 & 0x80000000;\nLAB_08000c12:\n    return input1 | 0x7f800000;\n  }\n  shifted_result1 = shifted_result1 >> 0x18;\n  input4 = input4 >> 0x18;\n  difference = input4 - shifted_result1;\n  is_equal = difference != 0;\n  temp1 = shifted_result1;\n  if (is_equal && shifted_result1 <= input4) {\n    temp1 = shifted_result1 + difference;\n  }\n  if (is_equal && shifted_result1 <= input4) {\n    input2 = input2 ^ input1;\n  }\n  if (is_equal && shifted_result1 <= input4) {\n    input1 = input1 ^ input2;\n  }\n  if (is_equal && shifted_result1 <= input4) {\n    input2 = input2 ^ input1;\n  }\n  if (input4 < shifted_result1) {\n    difference = -difference;\n  }\n  if (0x19 < difference) {\n    return input1;\n  }\n  shifted_result1 = input1 & 0xffffff | 0x800000;\n  if ((input1 & 0x80000000) != 0) {\n    shifted_result1 = -shifted_result1;\n  }\n  result1 = input2 & 0xffffff | 0x800000;\n  if ((input2 & 0x80000000) != 0) {\n    result1 = -result1;\n  }\n  if (temp1 == difference) {\n    result1 = result1 ^ 0x800000;\n    if (temp1 == 0) {\n      shifted_result1 = shifted_result1 ^ 0x800000;\n      temp1 = 1;\n    }\n    else {\n      difference = difference - 1;\n    }\n  }\n  shifted_result1 = shifted_result1 + ((int)result1 >> (difference & 0xff));\n  result1 = result1 << (0x20 - difference & 0xff);\n  input1 = shifted_result1 & 0x80000000;\n  if ((int)shifted_result1 < 0) {\n    is_equal = result1 != 0;\n    result1 = -result1;\n    shifted_result1 = -shifted_result1 - (uint)is_equal;\n  }\n  if (shifted_result1 < 0x800000) {\n    difference = result1 & 0x80000000;\n    result1 = result1 << 1;\n    shifted_result1 = shifted_result1 * 2 + (uint)(difference != 0);\n    difference = temp1 - 2;\n    if ((shifted_result1 & 0x800000) == 0) {\n      temp1 = leading_zero_count(shifted_result1) - 8;\n      shifted_result1 = shifted_result1 << (temp1 & 0xff);\n      if ((int)difference < (int)temp1) {\n        shifted_result1 = shifted_result1 >> (-(difference - temp1) & 0xff);\n      }\n      else {\n        shifted_result1 = shifted_result1 + (difference - temp1) * 0x800000;\n      }\n      return shifted_result1 | input1;\n    }\n  }\n  else {\n    difference = temp1 - 1;\n    if (0xffffff < shifted_result1) {\n      difference = shifted_result1 & 1;\n      shifted_result1 = shifted_result1 >> 1;\n      result1 = (uint)(difference != 0) << 0x1f | result1 >> 1;\n      difference = temp1;\n      if (0xfd < temp1) goto LAB_08000c12;\n    }\n  }\n  shifted_result1 = shifted_result1 + difference * 0x800000 + (uint)(0x7fffffff < result1);\n  if (result1 == 0x80000000) {\n    shifted_result1 = shifted_result1 & 0xfffffffe;\n  }\n  return shifted_result1 | input1;\n}\n\n",
            "current_name": "calculate_floating_point_value_08000adc",
            "entrypoint": "0x08000adc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000adc": "calculate_floating_point_value_08000adc",
                "LZCOUNT": "leading_zero_count",
                "bVar7": "is_equal",
                "iVar1": "shifted_input1",
                "iVar2": "shifted_input2",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar3": "result1",
                "uVar4": "shifted_result1",
                "uVar5": "temp1",
                "uVar6": "difference"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000c3c": {
            "additional_data": {
                "FUN_08000c3c": {
                    "calculate": 1,
                    "calculate_bitwise_shift": 1,
                    "calculate_hash": 3,
                    "calculate_new_value": 1,
                    "calculate_result": 2,
                    "calculate_shifted_value": 2,
                    "calculate_unsigned_value": 1,
                    "calculate_value": 5,
                    "compute_result": 1,
                    "convert_to_unsigned": 1,
                    "count_bits_to_right": 1,
                    "decode_and_transform": 1,
                    "decode_bits": 1,
                    "decode_integer": 1,
                    "decompress": 1,
                    "decompress_data": 1,
                    "perform_calculation": 1,
                    "reverse_bits": 3
                },
                "LZCOUNT": {
                    "count_leading_zeros": 1
                },
                "iVar3": {
                    "base_value": 1,
                    "constant": 16,
                    "constant_offset": 1,
                    "constant_term": 1,
                    "constant_value": 2,
                    "intermediate_value": 2,
                    "multiplier": 1,
                    "offset": 6,
                    "result": 1
                },
                "param_1": {
                    "input": 8,
                    "input_data": 2,
                    "input_value": 18,
                    "num": 2,
                    "number": 1
                },
                "uVar1": {
                    "computed_result": 1,
                    "final_result": 1,
                    "leading_zero_count": 2,
                    "leading_zeroes": 2,
                    "leading_zeros": 18,
                    "leading_zeros_count": 1,
                    "lz_count": 1,
                    "result": 5
                },
                "uVar1_2": {
                    "leading_zero_count_minus8": 1
                },
                "uVar1_3": {
                    "leading_zero_count_incremented": 1
                },
                "uVar1_4": {
                    "leading_zero_count_minus7": 1
                },
                "uVar1_5": {
                    "leading_zero_count_minus31": 1
                },
                "uVar1_6": {
                    "leading_zero_count_plus24": 1
                },
                "uVar1_7": {
                    "leading_zero_count_plus24_minus_u_var2": 1
                },
                "uVar1_temp": {
                    "temp_var2": 1
                },
                "uVar2": {
                    "shift": 3,
                    "shift_amount": 22,
                    "shift_count": 3,
                    "shift_value": 1,
                    "shifted_value": 1,
                    "temp": 1
                },
                "uVar2_2": {
                    "shift_amount_minus8": 1
                },
                "uVar2_3": {
                    "shift_amount_plus24": 1
                },
                "uVar2_4": {
                    "shift_amount_minus31": 1
                },
                "uVar2_5": {
                    "leading_zero_count_plus24_minus_u_var2_shifted": 1
                },
                "uVar2_temp": {
                    "temp_var3": 1
                },
                "uVar4": {
                    "bit_mask": 1,
                    "bitwise_shift_value": 1,
                    "carry_bit": 1,
                    "check_value": 2,
                    "compare_result": 1,
                    "comparison_result": 1,
                    "flag": 1,
                    "mask": 11,
                    "mask_value": 1,
                    "overflow_check": 2,
                    "shifted_value2": 1,
                    "temp": 1,
                    "temp2": 1,
                    "temp_value": 4,
                    "temp_var": 1,
                    "temporary_value": 1
                },
                "uVar4_2": {
                    "max_value_check": 1
                },
                "uVar4_temp": {
                    "temp_var4": 1
                },
                "uVar4_temp2": {
                    "temp_var5": 1
                },
                "uVar5": {
                    "mask": 1,
                    "mask_value": 1,
                    "masked_input": 1,
                    "result": 3,
                    "shifted_value": 1,
                    "temp": 1,
                    "temp_var": 1
                },
                "uVar6": {
                    "adjusted_data": 1,
                    "adjusted_value": 1,
                    "final_value": 1,
                    "result": 3
                },
                "uVar7": {
                    "adjusted_offset": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08002f28"
            ],
            "code": "\nuint calculate_shifted_value_08000c3c(uint input_value)\n\n{\n  uint leading_zeros;\n  uint shift_amount;\n  int constant;\n  uint mask;\n  \n  if (input_value == 0) {\n    return 0;\n  }\n  leading_zeros = count_leading_zeros(input_value);\n  shift_amount = leading_zeros - 8;\n  constant = shift_amount * -0x800000 + 0x4a800000;\n  if (7 < leading_zeros) {\n    mask = 0 << (shift_amount & 0xff);\n    leading_zeros = constant + (input_value << (shift_amount & 0xff)) +\n            (0U >> (0x20 - shift_amount & 0xff)) + (uint)(0x7fffffff < mask);\n    if (mask == 0x80000000) {\n      leading_zeros = leading_zeros & 0xfffffffe;\n    }\n    return leading_zeros;\n  }\n  shift_amount = input_value << leading_zeros + 0x18;\n  leading_zeros = constant + ((input_value >> (0x20 - (leading_zeros + 0x18) & 0xff)) - ((int)shift_amount >> 0x1f));\n  if ((shift_amount & 0x7fffffff) == 0) {\n    leading_zeros = leading_zeros & ~(shift_amount >> 0x1f);\n  }\n  return leading_zeros;\n}\n\n",
            "current_name": "calculate_shifted_value_08000c3c",
            "entrypoint": "0x08000c3c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000c3c": "calculate_shifted_value_08000c3c",
                "LZCOUNT": "count_leading_zeros",
                "iVar3": "constant",
                "param_1": "input_value",
                "uVar1": "leading_zeros",
                "uVar2": "shift_amount",
                "uVar4": "mask"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000c44": {
            "additional_data": {
                "FUN_08000c44": {
                    "bitwise_shift_reverse": 1,
                    "calculate_positive_integer": 1,
                    "calculate_result": 1,
                    "calculate_reverse_bits": 1,
                    "calculate_uint": 1,
                    "calculate_unsigned_integer": 1,
                    "calculate_unsigned_offset": 1,
                    "calculate_unsigned_value": 1,
                    "convert_unsigned_int_to_signed_int": 1,
                    "count_bits": 4,
                    "count_bits_shift": 1,
                    "count_leading_zeros": 8,
                    "decode_integer": 1,
                    "decode_signed_integer": 1,
                    "decode_unsigned_integer": 1,
                    "reverse_bits": 3,
                    "reverse_integer_bits": 1
                },
                "LZCOUNT": {
                    "count_leading_zeros": 3,
                    "leading_zero_count": 2,
                    "leading_zeroes_count": 1
                },
                "iVar4": {
                    "adjusted_value": 2,
                    "computed_value": 1,
                    "intermediate_result": 1,
                    "intermediate_value": 1,
                    "offset_value": 1,
                    "result": 25
                },
                "param_1": {
                    "input": 13,
                    "input_number": 6,
                    "input_value": 5,
                    "number": 3,
                    "value": 4
                },
                "uVar1": {
                    "bit_count": 3,
                    "count": 1,
                    "leading_zero_bits": 1,
                    "leading_zeroes": 2,
                    "leading_zeros": 23,
                    "leading_zeros_count": 1
                },
                "uVar1_2": {
                    "shifted_value": 1
                },
                "uVar2": {
                    "mask": 1,
                    "shift": 4,
                    "shift_amount": 18,
                    "shift_count": 1,
                    "shift_value": 2,
                    "shifted_bits": 1,
                    "shifted_leading_zeros": 2,
                    "shifted_value": 1,
                    "shifted_zeros": 1
                },
                "uVar2_2": {
                    "trailing_bits": 1
                },
                "uVar2_3": {
                    "leading_bits": 1
                },
                "uVar3": {
                    "is_negative": 7,
                    "return_value": 1,
                    "sign_bit": 20,
                    "sign_mask": 2,
                    "signed_bit": 1
                },
                "uVar3_2": {
                    "result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800411c",
                "FUN_08002cb0",
                "FUN_08002bf0",
                "FUN_0800483c",
                "FUN_08002b48",
                "FUN_08002d88"
            ],
            "code": "\nuint count_leading_zeros_08000c44(uint input)\n\n{\n  uint leading_zeros;\n  uint shift_amount;\n  uint sign_bit;\n  int result;\n  \n  sign_bit = input & 0x80000000;\n  if ((int)sign_bit < 0) {\n    input = -input;\n  }\n  if (input == 0) {\n    return 0;\n  }\n  leading_zeros = count_leading_zeros_08000c44(input);\n  shift_amount = leading_zeros - 8;\n  result = ((sign_bit | 0x4b000000) - 0x800000) + shift_amount * -0x800000;\n  if (7 < leading_zeros) {\n    leading_zeros = 0 << (shift_amount & 0xff);\n    sign_bit = result + (input << (shift_amount & 0xff)) +\n            (0U >> (0x20 - shift_amount & 0xff)) + (uint)(0x7fffffff < leading_zeros);\n    if (leading_zeros == 0x80000000) {\n      sign_bit = sign_bit & 0xfffffffe;\n    }\n    return sign_bit;\n  }\n  shift_amount = input << leading_zeros + 0x18;\n  sign_bit = result + ((input >> (0x20 - (leading_zeros + 0x18) & 0xff)) - ((int)shift_amount >> 0x1f));\n  if ((shift_amount & 0x7fffffff) == 0) {\n    sign_bit = sign_bit & ~(shift_amount >> 0x1f);\n  }\n  return sign_bit;\n}\n\n",
            "current_name": "count_leading_zeros_08000c44",
            "entrypoint": "0x08000c44",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000c44": "count_leading_zeros_08000c44",
                "LZCOUNT": "count_leading_zeros",
                "iVar4": "result",
                "param_1": "input",
                "uVar1": "leading_zeros",
                "uVar2": "shift_amount",
                "uVar3": "sign_bit"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000cec": {
            "additional_data": {
                "FUN_08000cec": {
                    "calculate_float": 10,
                    "calculate_float_value": 2,
                    "calculate_floating_point": 7,
                    "calculate_floating_point_value": 1,
                    "calculate_floating_value": 1,
                    "calculate_sum_of_bits": 1,
                    "float_to_uint": 1,
                    "floating_point_operation": 1,
                    "perform_floating_point_operation": 1,
                    "rearrange_bits": 1,
                    "reverse_bits": 1,
                    "reverse_float": 1,
                    "reverse_floating_point": 1
                },
                "SBORROW4": {
                    "is_subtraction_overflow": 1
                },
                "SCARRY4": {
                    "is_addition_overflow": 1
                },
                "bVar10": {
                    "carry_flag": 1,
                    "check_2": 1,
                    "cond_2": 1,
                    "has_overflow": 1,
                    "is_borrow": 1,
                    "is_condition_met2": 1,
                    "is_negative": 17,
                    "is_negative_2": 1,
                    "is_overflow": 3,
                    "is_param_difference_negative": 1,
                    "is_positive": 1,
                    "is_valid2_value": 1,
                    "is_zero2": 1
                },
                "bVar9": {
                    "check_1": 1,
                    "cond_1": 1,
                    "condition": 1,
                    "flag": 1,
                    "is_condition_met1": 1,
                    "is_param1_equal_0": 1,
                    "is_valid1_value": 1,
                    "is_zero": 18,
                    "is_zero1": 3,
                    "is_zero2": 1,
                    "is_zero_1": 1,
                    "is_zero_byte": 1
                },
                "iVar4": {
                    "exponent_sum": 1,
                    "msb_sum": 1,
                    "num1_top_bits": 1,
                    "shift_amount2": 1,
                    "shift_sum": 1,
                    "shifted_bits_sum": 1,
                    "shifted_sum": 1,
                    "sum": 16,
                    "sum_high_bytes": 1,
                    "sum_of_bits_23_to_31": 1,
                    "sum_of_exponents": 1,
                    "sum_of_shifted_bits": 1,
                    "sum_of_shifted_values": 1,
                    "sum_shifted": 1,
                    "sum_shifted_bits": 1,
                    "sum_sign_bits": 1
                },
                "iVar5": {
                    "adjusted_exponent": 1,
                    "diff": 9,
                    "diff_shifted_bits": 1,
                    "diff_sum": 1,
                    "difference": 3,
                    "exponent": 1,
                    "exponent_diff": 1,
                    "num1_exponent_value": 1,
                    "num_bits": 1,
                    "shift": 1,
                    "shift_amount1": 1,
                    "shift_diff": 1,
                    "shift_value": 1,
                    "shifted_bits_diff": 1,
                    "shifted_num": 1,
                    "shifted_subtract": 1,
                    "sum_diff": 1,
                    "sum_minus_seven_f": 1,
                    "temp_3": 1,
                    "temp_var1": 1
                },
                "iVar7": {
                    "abs_diff": 1,
                    "count": 1,
                    "counter": 1,
                    "diff2": 1,
                    "diff_low_word": 1,
                    "difference": 2,
                    "difference_2": 1,
                    "difference_of_exponents": 1,
                    "exponent": 1,
                    "exponent_diff2": 1,
                    "num2_top_bits": 1,
                    "num_bits2": 1,
                    "overflow": 1,
                    "remaining_difference": 1,
                    "shift2": 1,
                    "shift_amount": 2,
                    "shift_amount2": 2,
                    "shift_count": 1,
                    "shift_difference": 1,
                    "shifted_diff": 1,
                    "shifted_difference": 1,
                    "sum_diff_adjusted": 1,
                    "sum_minus_ff": 1,
                    "temp": 2,
                    "temp_diff": 1,
                    "temp_shift": 1,
                    "temp_var2": 1
                },
                "lVar1": {
                    "long_result": 2,
                    "multiplication_result": 1,
                    "multiplied_result": 1,
                    "product": 6,
                    "product64": 2,
                    "temp": 1,
                    "temp_long": 1,
                    "temp_long_result": 1
                },
                "param_1": {
                    "first_float_value": 1,
                    "first_number": 1,
                    "float_a": 1,
                    "input1": 16,
                    "input_1": 3,
                    "input_a": 1,
                    "input_param_1": 1,
                    "input_value1": 2,
                    "integer1": 1,
                    "num1": 1,
                    "operand1": 1,
                    "value1": 1,
                    "value_a": 1
                },
                "param_2": {
                    "float_b": 1,
                    "input2": 16,
                    "input_2": 3,
                    "input_b": 1,
                    "input_param_2": 1,
                    "input_value2": 2,
                    "integer2": 1,
                    "num2": 1,
                    "operand2": 1,
                    "second_float_value": 1,
                    "second_number": 1,
                    "value2": 1,
                    "value_b": 1
                },
                "param_3": {
                    "constant": 2,
                    "flag": 4,
                    "flags": 1,
                    "float_c": 1,
                    "input3": 5,
                    "input_3": 1,
                    "input_param_3": 1,
                    "other_parameter1": 1,
                    "param3": 5,
                    "parameter3": 1,
                    "third_number": 1,
                    "undefined_param": 1,
                    "unused": 3,
                    "unused_param": 3,
                    "value_c": 1
                },
                "param_4": {
                    "extra_input": 1,
                    "flag_value": 1,
                    "float_d": 1,
                    "fourth_number": 1,
                    "input3": 4,
                    "input4": 5,
                    "input_4": 1,
                    "input_param_4": 1,
                    "input_value3": 1,
                    "mask": 2,
                    "other_parameter2": 1,
                    "param": 1,
                    "param4": 4,
                    "parameter4": 1,
                    "shifted_value2": 1,
                    "temp": 1,
                    "unused_param2": 2,
                    "unused_param_2": 1,
                    "value_d": 1
                },
                "uVar2": {
                    "final_result": 1,
                    "output": 1,
                    "result": 27,
                    "result_1": 1
                },
                "uVar3": {
                    "bit_field1": 1,
                    "bit_mask": 1,
                    "bit_slice1": 1,
                    "exponent1": 2,
                    "first_float_value_shifted": 1,
                    "first_num_shifted": 1,
                    "first_shifted_bits": 1,
                    "flag1": 1,
                    "high_byte_1": 1,
                    "input1_bit_23_to_31": 1,
                    "input1_shifted": 1,
                    "mask1": 2,
                    "msb1": 1,
                    "num1_byte": 1,
                    "num1_sign_extension": 1,
                    "shift1": 2,
                    "shift_amount": 1,
                    "shift_amount1": 3,
                    "shift_count1": 1,
                    "shift_val_1": 1,
                    "shifted_bits": 1,
                    "shifted_bits_2": 1,
                    "shifted_bits_a": 1,
                    "shifted_value1": 1,
                    "shifted_value_a": 1,
                    "sign_bits": 1
                },
                "uVar5": {
                    "mask": 1
                },
                "uVar6": {
                    "exponent1_times_exponent2": 1,
                    "low_word_product": 1,
                    "mul_result": 1,
                    "multiplied": 1,
                    "multiplied_result": 1,
                    "multiplied_value": 1,
                    "multiplied_values": 1,
                    "multiplier": 1,
                    "num1_numerical_value": 1,
                    "product": 7,
                    "product_low": 2,
                    "product_lower_bits": 2,
                    "result_3": 1,
                    "result_lower": 1,
                    "shift_result2": 1,
                    "temp": 1,
                    "temp2": 1,
                    "temp_1": 1,
                    "temp_result": 3,
                    "temp_result2": 1
                },
                "uVar8": {
                    "combined": 3,
                    "combined_bits": 1,
                    "combined_values": 1,
                    "mask": 1,
                    "num2_sign_extension": 1,
                    "output": 1,
                    "output_masked": 1,
                    "result": 1,
                    "result_2": 1,
                    "result_bits": 1,
                    "result_bitwise_and": 1,
                    "result_sign_and_mantissa": 1,
                    "result_upper": 1,
                    "result_with_sign": 1,
                    "result_with_sign_bit": 1,
                    "shift_result1": 1,
                    "shifted_result": 1,
                    "temp": 1,
                    "temp3": 1,
                    "temp_2": 1,
                    "temp_result": 4,
                    "temp_value": 1,
                    "temp_variable": 1,
                    "temporary_result": 1,
                    "tmp_result": 1,
                    "xor_result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08002ec0",
                "FUN_08002cb0",
                "FUN_08002bf0",
                "FUN_0800483c",
                "FUN_08004a30",
                "FUN_08002f28",
                "FUN_08003330",
                "FUN_08004a84",
                "FUN_08002b48",
                "FUN_08002d88"
            ],
            "code": "\nuint calculate_float_value_08000cec(uint input1,uint input2,undefined4 input3,uint input4)\n\n{\n  longlong product;\n  uint result;\n  uint shift_amount1;\n  int sum;\n  int diff;\n  uint product;\n  int difference;\n  uint temp_result;\n  bool is_zero;\n  bool is_negative;\n  \n  shift_amount1 = input1 >> 0x17 & 0xff;\n  is_zero = shift_amount1 == 0;\n  if (!is_zero) {\n    input4 = input2 >> 0x17 & 0xff;\n    is_zero = input4 == 0;\n  }\n  if (!is_zero) {\n    is_zero = shift_amount1 == 0xff;\n  }\n  if (!is_zero) {\n    is_zero = input4 == 0xff;\n  }\n  if (is_zero) {\n    input4 = input2 >> 0x17 & 0xff;\n    if (shift_amount1 == 0xff || input4 == 0xff) {\n      is_zero = input1 == 0 || input1 == 0x80000000;\n      result = input2;\n      if (input1 != 0 && input1 != 0x80000000) {\n        is_zero = input2 == 0;\n        result = input1;\n      }\n      if (!is_zero) {\n        is_zero = input2 == 0x80000000;\n      }\n      temp_result = result;\n      if (((is_zero) || ((shift_amount1 == 0xff && ((result & 0x7fffff) != 0)))) ||\n         ((input4 == 0xff && (temp_result = input2, (input2 & 0x7fffff) != 0)))) {\n        return temp_result | 0x7fc00000;\n      }\n      result = result ^ input2;\n      goto LAB_08000e3c;\n    }\n    is_zero = (input1 & 0x7fffffff) == 0;\n    if (!is_zero) {\n      is_zero = (input2 & 0x7fffffff) == 0;\n    }\n    if (is_zero) {\n      return (input1 ^ input2) & 0x80000000;\n    }\n    is_zero = shift_amount1 == 0;\n    result = input1 & 0x80000000;\n    while( true ) {\n      if (is_zero) {\n        input1 = input1 << 1;\n        is_zero = (input1 & 0x800000) == 0;\n      }\n      if (!is_zero) break;\n      shift_amount1 = shift_amount1 - 1;\n    }\n    input1 = input1 | result;\n    is_zero = input4 == 0;\n    result = input2 & 0x80000000;\n    while( true ) {\n      if (is_zero) {\n        input2 = input2 << 1;\n        is_zero = (input2 & 0x800000) == 0;\n      }\n      if (!is_zero) break;\n      input4 = input4 - 1;\n    }\n    input2 = input2 | result;\n  }\n  sum = shift_amount1 + input4;\n  temp_result = input1 ^ input2;\n  shift_amount1 = input1 << 9;\n  is_zero = shift_amount1 == 0;\n  if (!is_zero) {\n    input2 = input2 << 9;\n    is_zero = input2 == 0;\n  }\n  if (is_zero) {\n    if (shift_amount1 == 0) {\n      input2 = input2 << 9;\n    }\n    result = temp_result & 0x80000000 | input1 & 0x7fffff | input2 >> 9;\n    is_negative = is_subtraction_overflow(sum,0x7f);\n    diff = sum + -0x7f;\n    is_zero = diff == 0;\n    difference = diff;\n    if (!is_zero && 0x7e < sum) {\n      is_negative = is_subtraction_overflow(0xff,diff);\n      difference = 0xff - diff;\n      is_zero = diff == 0xff;\n    }\n    if (!is_zero && difference < 0 == is_negative) {\n      result = result | diff * 0x800000;\n    }\n    if (!is_zero && difference < 0 == is_negative) {\n      return result;\n    }\n    result = result | 0x800000;\n    product = 0;\n    is_negative = is_subtraction_overflow(diff,1);\n    temp_result = sum - 0x80;\n    is_zero = temp_result == 0;\n    shift_amount1 = temp_result;\n  }\n  else {\n    product = (ulonglong)(shift_amount1 >> 5 | 0x8000000) * (ulonglong)(input2 >> 5 | 0x8000000);\n    product = (uint)product;\n    result = (uint)((ulonglong)product >> 0x20);\n    is_zero = result < 0x800000;\n    if (is_zero) {\n      result = result << 1;\n    }\n    if (is_zero) {\n      result = result | product >> 0x1f;\n      product = product << 1;\n    }\n    result = temp_result & 0x80000000 | result;\n    temp_result = (sum + -0x7f) - (uint)is_zero;\n    is_negative = is_subtraction_overflow(temp_result,0xfd);\n    is_zero = temp_result == 0xfd;\n    shift_amount1 = temp_result - 0xfd;\n    if (temp_result < 0xfe) {\n      result = result + temp_result * 0x800000 + (uint)(0x7fffffff < product);\n      if (product == 0x80000000) {\n        result = result & 0xfffffffe;\n      }\n      return result;\n    }\n  }\n  if (is_zero || (int)shift_amount1 < 0 != is_negative) {\n    is_zero = (int)(temp_result + 0x19) < 0;\n    if (temp_result == 0xffffffe7 || is_zero != is_addition_overflow(temp_result,0x19)) {\n      result = result & 0x80000000;\n    }\n    if (temp_result != 0xffffffe7 && is_zero == is_addition_overflow(temp_result,0x19)) {\n      shift_amount1 = (result << 1) >> (-temp_result & 0xff);\n      temp_result = result << (temp_result + 0x20 & 0xff);\n      shift_amount1 = ((uint)((result & 0x80000000) != 0) << 0x1f | shift_amount1 >> 1) + (uint)((byte)shift_amount1 & 1);\n      if ((product | temp_result << 1) == 0) {\n        shift_amount1 = shift_amount1 & ~(temp_result >> 0x1f);\n      }\n      return shift_amount1;\n    }\n    return result;\n  }\nLAB_08000e3c:\n  return result & 0x80000000 | 0x7f800000;\n}\n\n",
            "current_name": "calculate_float_value_08000cec",
            "entrypoint": "0x08000cec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000cec": "calculate_float_value_08000cec",
                "SBORROW4": "is_subtraction_overflow",
                "SCARRY4": "is_addition_overflow",
                "bVar10": "is_negative",
                "bVar9": "is_zero",
                "iVar4": "sum",
                "iVar5": "diff",
                "iVar7": "difference",
                "lVar1": "product",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar2": "result",
                "uVar3": "shift_amount1",
                "uVar6": "product",
                "uVar8": "temp_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000e54": {
            "additional_data": {
                "FUN_08000e54": {
                    "calculate_float": 8,
                    "calculate_float32_ieee_754": 1,
                    "calculate_float_value": 1,
                    "calculate_floating_point": 8,
                    "calculate_floating_point_result": 1,
                    "calculate_floating_point_value": 1,
                    "convert_to_float": 1,
                    "decode_float": 2,
                    "float_to_uint": 2,
                    "floating_point_conversion": 1,
                    "perform_float_conversion": 1,
                    "perform_float_operation": 1,
                    "reverse_binary_operation": 1,
                    "reverse_floating_point": 1
                },
                "LAB_08000e00": {
                    "skip_return": 1
                },
                "LAB_08000e4a": {
                    "end_label": 1
                },
                "LAB_08000e6c": {
                    "carry_label": 1
                },
                "bVar7": {
                    "check": 1,
                    "condition": 2,
                    "condition1": 7,
                    "condition_check": 1,
                    "flag1": 5,
                    "flag_1": 2,
                    "is_equal_exponent": 1,
                    "is_equal_zero": 1,
                    "is_zero": 8,
                    "is_zero1": 1,
                    "op1_is_zero": 1
                },
                "bVar8": {
                    "check": 1,
                    "compare": 1,
                    "comparison1": 1,
                    "condition2": 7,
                    "condition_2": 1,
                    "flag2": 5,
                    "flag_2": 2,
                    "is_final": 1,
                    "is_less_exponent": 1,
                    "is_max": 1,
                    "is_negative": 2,
                    "is_overflow": 4,
                    "is_zero2": 1,
                    "op1_op2_equal": 1,
                    "overflow_check": 1
                },
                "bVar9": {
                    "carry_check": 1,
                    "carry_detected": 1,
                    "comparison2": 1,
                    "condition3": 7,
                    "condition_3": 1,
                    "flag3": 5,
                    "flag_3": 2,
                    "is_borrow": 1,
                    "is_carry": 3,
                    "is_overflow": 2,
                    "is_underflow": 2,
                    "op1_op2_carry": 1,
                    "overflow": 3
                },
                "iVar3": {
                    "bit_shift_diff": 1,
                    "diff": 8,
                    "difference": 10,
                    "exponent_difference": 1,
                    "index": 1,
                    "numerator_shift": 1,
                    "operand_difference": 1,
                    "shift_diff": 1,
                    "shift_difference": 1,
                    "temp3": 3,
                    "temp_3": 1,
                    "temp_var_3": 1
                },
                "iVar5": {
                    "added_difference": 1,
                    "adjusted_diff": 1,
                    "adjusted_exponent": 1,
                    "counter2": 1,
                    "denominator_shift": 1,
                    "loop_index": 1,
                    "result": 1,
                    "sum": 5,
                    "sum_comparison": 1,
                    "sum_plus127": 2,
                    "temp": 1,
                    "temp2": 2,
                    "temp4": 3,
                    "temp5": 3,
                    "temp_2": 1,
                    "temp_5": 1,
                    "temp_var": 1,
                    "temp_var_5": 1,
                    "temp_variable2": 1,
                    "variable2": 1
                },
                "param_1": {
                    "float1": 3,
                    "float_1": 2,
                    "float_bits1": 1,
                    "input1": 10,
                    "input_1": 2,
                    "input_a": 3,
                    "input_float1": 1,
                    "input_value_1": 1,
                    "num1": 1,
                    "number1": 1,
                    "numerator": 1,
                    "numerical_value1": 1,
                    "operand1": 2,
                    "value1": 2
                },
                "param_2": {
                    "denominator": 1,
                    "float2": 3,
                    "float_2": 2,
                    "float_bits2": 1,
                    "input2": 10,
                    "input_2": 2,
                    "input_b": 3,
                    "input_float2": 1,
                    "input_value_2": 1,
                    "num2": 1,
                    "number2": 1,
                    "numerical_value2": 1,
                    "operand2": 2,
                    "value2": 2
                },
                "param_3": {
                    "constant": 1,
                    "constant_1": 1,
                    "flag": 2,
                    "flags": 1,
                    "input3": 5,
                    "input_c": 1,
                    "operand3": 1,
                    "operation_type": 1,
                    "param3": 9,
                    "parameter_3": 1,
                    "precision": 1,
                    "temp": 1,
                    "undefined": 1,
                    "undefined_value": 1,
                    "unknown_param": 1,
                    "unknown_value3": 1,
                    "unused_param": 2
                },
                "param_4": {
                    "carry": 1,
                    "constant_2": 1,
                    "flags": 1,
                    "float_3": 1,
                    "input3": 1,
                    "input4": 5,
                    "input_c": 1,
                    "input_d": 1,
                    "mask": 1,
                    "operand4": 1,
                    "param4": 9,
                    "parameter_4": 1,
                    "shift": 1,
                    "temp": 2,
                    "temp2": 1,
                    "unknown_value4": 1,
                    "unused_param": 1,
                    "unused_param2": 1
                },
                "uVar1": {
                    "bit1": 1,
                    "bit_mask": 1,
                    "bitshifted_float2": 1,
                    "bitwise_num2": 1,
                    "dividend": 1,
                    "exponent_2": 1,
                    "i": 1,
                    "input1_bits": 1,
                    "mantissa1": 1,
                    "mask1": 3,
                    "mask_a": 1,
                    "normalized_op2": 1,
                    "numerator_shifted": 1,
                    "quotient": 2,
                    "remainder": 1,
                    "shifted_input_b": 1,
                    "shifted_operand1": 1,
                    "temp1": 7,
                    "temp_1": 2,
                    "temp_var_1": 1
                },
                "uVar2": {
                    "bit_shift": 1,
                    "bitshifted_float1": 1,
                    "bitwise_num1": 1,
                    "divisor": 1,
                    "exponent1": 4,
                    "exponent_1": 1,
                    "input1_exponent": 1,
                    "mask2": 3,
                    "mask_b": 1,
                    "normalized_op1": 1,
                    "numerator_masked": 1,
                    "param_1_shifted": 1,
                    "shifted_input1": 1,
                    "shifted_input_a": 1,
                    "shifted_operand2": 1,
                    "temp2": 7,
                    "temp3": 1,
                    "temp_2": 1,
                    "temp_var_2": 1
                },
                "uVar4": {
                    "counter": 1,
                    "denominator_masked": 1,
                    "exponent2": 1,
                    "exponent_sum": 1,
                    "input2_bits": 1,
                    "loop_count": 1,
                    "mantissa": 1,
                    "mantissa2": 1,
                    "power": 1,
                    "remainder": 1,
                    "second_mask": 1,
                    "shift_count": 1,
                    "shifted_diff": 1,
                    "shifted_input2": 1,
                    "sum": 2,
                    "temp": 1,
                    "temp1": 2,
                    "temp3": 4,
                    "temp4": 3,
                    "temp_4": 1,
                    "temp_var_4": 1,
                    "temp_variable1": 1,
                    "variable1": 1
                },
                "uVar6": {
                    "final_result": 1,
                    "final_value": 1,
                    "result": 23,
                    "result_bits": 1,
                    "temp6": 2,
                    "temp_6": 1,
                    "temp_var_6": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800411c",
                "FUN_0800483c",
                "FUN_08002f28",
                "FUN_08003330"
            ],
            "code": "\nuint calculate_floating_point_result_08000e54(uint input1,uint input2,undefined4 param3,uint param4)\n\n{\n  uint temp1;\n  uint temp2;\n  int difference;\n  uint temp3;\n  int sum;\n  uint result;\n  bool is_zero;\n  bool condition2;\n  bool condition3;\n  \n  temp2 = input1 >> 0x17 & 0xff;\n  is_zero = temp2 == 0;\n  if (!is_zero) {\n    param4 = input2 >> 0x17 & 0xff;\n    is_zero = param4 == 0;\n  }\n  if (!is_zero) {\n    is_zero = temp2 == 0xff;\n  }\n  if (!is_zero) {\n    is_zero = param4 == 0xff;\n  }\n  if (is_zero) {\n    param4 = input2 >> 0x17 & 0xff;\n    result = input1;\n    if (temp2 == 0xff) {\n      if (((input1 & 0x7fffff) != 0) || (result = input2, param4 == 0xff)) {\nend_label:\n        return result | 0x7fc00000;\n      }\n    }\n    else {\n      if (param4 == 0xff) {\n        result = input2;\n        if ((input2 & 0x7fffff) == 0) {\nskip_return:\n          return (input1 ^ input2) & 0x80000000;\n        }\n        goto end_label;\n      }\n      is_zero = (input1 & 0x7fffffff) == 0;\n      if (!is_zero) {\n        is_zero = (input2 & 0x7fffffff) == 0;\n      }\n      if (!is_zero) {\n        is_zero = temp2 == 0;\n        result = input1 & 0x80000000;\n        while( true ) {\n          if (is_zero) {\n            input1 = input1 << 1;\n            is_zero = (input1 & 0x800000) == 0;\n          }\n          if (!is_zero) break;\n          temp2 = temp2 - 1;\n        }\n        input1 = input1 | result;\n        is_zero = param4 == 0;\n        result = input2 & 0x80000000;\n        while( true ) {\n          if (is_zero) {\n            input2 = input2 << 1;\n            is_zero = (input2 & 0x800000) == 0;\n          }\n          if (!is_zero) break;\n          param4 = param4 - 1;\n        }\n        input2 = input2 | result;\n        goto carry_label;\n      }\n      if ((input1 & 0x7fffffff) == 0) {\n        if ((input2 & 0x7fffffff) != 0) goto skip_return;\n        goto end_label;\n      }\n    }\n    input1 = input1 ^ input2;\n  }\n  else {\ncarry_label:\n    difference = temp2 - param4;\n    if (input2 << 9 == 0) {\n      input1 = (input1 ^ input2) & 0x80000000 | input1 & 0x7fffff;\n      condition3 = SCARRY4(difference,0x7f);\n      sum = difference + 0x7f;\n      is_zero = sum < 0;\n      condition2 = sum == 0;\n      if (!condition2 && is_zero == condition3) {\n        condition3 = SBORROW4(0xff,sum);\n        is_zero = 0xff - sum < 0;\n        condition2 = sum == 0xff;\n      }\n      if (!condition2 && is_zero == condition3) {\n        input1 = input1 | sum * 0x800000;\n      }\n      if (!condition2 && is_zero == condition3) {\n        return input1;\n      }\n      input1 = input1 | 0x800000;\n      temp2 = 0;\n      condition2 = SBORROW4(sum,1);\n      temp3 = difference + 0x7e;\n      is_zero = temp3 == 0;\n      result = temp3;\n    }\n    else {\n      temp1 = (input2 << 9) >> 4 | 0x10000000;\n      temp2 = (input1 << 9) >> 4 | 0x10000000;\n      input1 = (input1 ^ input2) & 0x80000000;\n      is_zero = temp1 <= temp2;\n      if (!is_zero) {\n        temp2 = temp2 << 1;\n      }\n      temp3 = difference + 0x7d + (uint)is_zero;\n      result = 0x800000;\n      do {\n        if (temp1 <= temp2) {\n          temp2 = temp2 - temp1;\n          input1 = input1 | result;\n        }\n        is_zero = temp1 >> 1 <= temp2;\n        if (is_zero) {\n          temp2 = temp2 - (temp1 >> 1);\n        }\n        if (is_zero) {\n          input1 = input1 | result >> 1;\n        }\n        is_zero = temp1 >> 2 <= temp2;\n        if (is_zero) {\n          temp2 = temp2 - (temp1 >> 2);\n        }\n        if (is_zero) {\n          input1 = input1 | result >> 2;\n        }\n        is_zero = temp1 >> 3 <= temp2;\n        if (is_zero) {\n          temp2 = temp2 - (temp1 >> 3);\n        }\n        if (is_zero) {\n          input1 = input1 | result >> 3;\n        }\n        temp2 = temp2 * 0x10;\n        is_zero = temp2 == 0;\n        if (!is_zero) {\n          result = result >> 4;\n          is_zero = result == 0;\n        }\n      } while (!is_zero);\n      condition2 = SBORROW4(temp3,0xfd);\n      is_zero = temp3 == 0xfd;\n      result = temp3 - 0xfd;\n      if (temp3 < 0xfe) {\n        input1 = input1 + temp3 * 0x800000 + (uint)(temp1 <= temp2);\n        if (temp2 - temp1 == 0) {\n          input1 = input1 & 0xfffffffe;\n        }\n        return input1;\n      }\n    }\n    if (is_zero || (int)result < 0 != condition2) {\n      is_zero = (int)(temp3 + 0x19) < 0;\n      if (temp3 == 0xffffffe7 || is_zero != SCARRY4(temp3,0x19)) {\n        input1 = input1 & 0x80000000;\n      }\n      if (temp3 == 0xffffffe7 || is_zero != SCARRY4(temp3,0x19)) {\n        return input1;\n      }\n      result = (input1 << 1) >> (-temp3 & 0xff);\n      temp3 = input1 << (temp3 + 0x20 & 0xff);\n      result = ((uint)((input1 & 0x80000000) != 0) << 0x1f | result >> 1) + (uint)((byte)result & 1);\n      if ((temp2 | temp3 << 1) == 0) {\n        result = result & ~(temp3 >> 0x1f);\n      }\n      return result;\n    }\n  }\n  return input1 & 0x80000000 | 0x7f800000;\n}\n\n",
            "current_name": "calculate_floating_point_result_08000e54",
            "entrypoint": "0x08000e54",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000e54": "calculate_floating_point_result_08000e54",
                "LAB_08000e00": "skip_return",
                "LAB_08000e4a": "end_label",
                "LAB_08000e6c": "carry_label",
                "bVar7": "is_zero",
                "bVar8": "condition2",
                "bVar9": "condition3",
                "iVar3": "difference",
                "iVar5": "sum",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "uVar4": "temp3",
                "uVar6": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000f9c": {
            "additional_data": {
                "FUN_08000f9c": {
                    "calculate_and_compare": 1,
                    "calculate_multiplication": 1,
                    "calculate_result": 7,
                    "check_bitwise_operations": 2,
                    "check_integer_overflow": 3,
                    "check_overflow": 6,
                    "check_overflow_and_compare": 1,
                    "check_overflow_and_return_result": 1,
                    "check_overflow_and_sign": 1,
                    "check_param_validity": 1,
                    "compute_result": 1,
                    "determine_sign_and_abs_difference": 1,
                    "get_sign_and_bitwise_operations": 1,
                    "multiply_and_compare": 2,
                    "multiply_and_merge": 1,
                    "perform_operation": 1
                },
                "bVar1": {
                    "has_negative_result": 1,
                    "has_sign_overflow": 1,
                    "is_combined_negative": 2,
                    "is_negative": 20,
                    "is_negative_overflow": 1,
                    "is_negative_result": 3,
                    "is_negative_xor": 1,
                    "is_result_negative": 1,
                    "is_u_var4_negative": 1
                },
                "bVar5": {
                    "is_combined_variables_zero": 1,
                    "is_combined_zero": 3,
                    "is_result_zero": 1,
                    "is_zero": 22,
                    "is_zero_combined_result": 1,
                    "is_zero_result": 3
                },
                "param_1": {
                    "first_number": 2,
                    "first_param": 1,
                    "input1": 4,
                    "input_1": 14,
                    "input_a": 2,
                    "input_value1": 1,
                    "input_value_1": 2,
                    "num1": 2,
                    "number1": 1,
                    "output_value": 1,
                    "value1": 1
                },
                "param_1_bitwise_xor_param_2": {
                    "inputs_bitwise_xor": 1
                },
                "param_1_doubled": {
                    "input1_doubled": 1
                },
                "param_1_times_two": {
                    "input1_times_minus_two": 1
                },
                "param_2": {
                    "input2": 4,
                    "input_2": 14,
                    "input_b": 2,
                    "input_value2": 1,
                    "input_value_2": 3,
                    "num2": 2,
                    "number2": 1,
                    "second_number": 2,
                    "second_param": 1,
                    "value2": 1
                },
                "result": {
                    "final_result": 1,
                    "output": 1
                },
                "return": {
                    "output": 2
                },
                "uVar2": {
                    "double_first_number": 2,
                    "double_input_1": 3,
                    "doubled_input_1": 4,
                    "doubled_input_value1": 1,
                    "first_param_multiplied": 1,
                    "input1_times2": 1,
                    "input1_times_2": 1,
                    "input1_times_two": 2,
                    "input_1_doubled": 3,
                    "input_1_shifted": 1,
                    "input_1_times_2": 2,
                    "input_a_times_2": 1,
                    "input_value_1_times_2": 1,
                    "mul_input_1": 2,
                    "multiplied_input_1": 1,
                    "multiplied_value1": 1,
                    "num1_doubled": 1,
                    "num1_multiplied": 1,
                    "number1_updated": 1,
                    "result_a": 1
                },
                "uVar3": {
                    "double_input_2": 3,
                    "double_second_number": 2,
                    "doubled_input_2": 4,
                    "doubled_input_value2": 1,
                    "input2_times2": 1,
                    "input2_times_2": 1,
                    "input2_times_two": 2,
                    "input_2_doubled": 3,
                    "input_2_shifted": 1,
                    "input_2_times_2": 2,
                    "input_b_times_2": 1,
                    "input_value_2_times_2": 1,
                    "mul_input_2": 2,
                    "multiplied_input_2": 1,
                    "multiplied_value2": 1,
                    "num2_doubled": 1,
                    "num2_multiplied": 1,
                    "number2_updated": 1,
                    "result_b": 1,
                    "second_param_multiplied": 1
                },
                "uVar4": {
                    "bitwise_combined_values": 1,
                    "combined": 1,
                    "combined_input": 3,
                    "combined_inputs": 8,
                    "combined_numbers": 2,
                    "combined_nums": 1,
                    "combined_param": 1,
                    "combined_result": 4,
                    "combined_value": 2,
                    "combined_values": 2,
                    "combined_variables": 1,
                    "masked_result": 1,
                    "merged_input": 1,
                    "result": 1,
                    "result_c": 1,
                    "updated_result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001004"
            ],
            "code": "\nuint check_integer_overflow_08000f9c(uint input_1,uint input_2)\n\n{\n  bool is_negative;\n  uint doubled_input_1;\n  uint doubled_input_2;\n  uint combined_inputs;\n  bool is_zero;\n  \n  doubled_input_1 = input_1 * 2;\n  doubled_input_2 = input_2 * 2;\n  if (((int)doubled_input_1 >> 0x18 == -1 || (int)doubled_input_2 >> 0x18 == -1) &&\n     ((((int)doubled_input_1 >> 0x18 == -1 && ((input_1 & 0x7fffff) != 0)) ||\n      (((int)doubled_input_2 >> 0x18 == -1 && ((input_2 & 0x7fffff) != 0)))))) {\n    output 1;\n  }\n  combined_inputs = doubled_input_1 | input_2 & 0x7fffffff;\n  is_zero = combined_inputs == 0;\n  if (!is_zero) {\n    combined_inputs = input_1 ^ input_2;\n    is_zero = combined_inputs == 0;\n  }\n  is_negative = -1 < (int)combined_inputs;\n  if (is_negative) {\n    input_1 = doubled_input_1 + input_2 * -2;\n    is_zero = input_1 == 0;\n  }\n  if ((is_negative && doubled_input_2 <= doubled_input_1) && !is_zero) {\n    input_1 = (int)input_2 >> 0x1f;\n  }\n  if (!is_negative || doubled_input_2 > doubled_input_1) {\n    input_1 = ~((int)input_2 >> 0x1f);\n  }\n  if (!is_zero) {\n    input_1 = input_1 | 1;\n  }\n  output input_1;\n}\n\n",
            "current_name": "check_integer_overflow_08000f9c",
            "entrypoint": "0x08000f9c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000f9c": "check_integer_overflow_08000f9c",
                "bVar1": "is_negative",
                "bVar5": "is_zero",
                "param_1": "input_1",
                "param_2": "input_2",
                "return": "output",
                "uVar2": "doubled_input_1",
                "uVar3": "doubled_input_2",
                "uVar4": "combined_inputs"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000ffc": {
            "additional_data": {
                "FUN_08000ffc": {
                    "compare_and_return": 1,
                    "compare_and_return_result": 1,
                    "compare_float": 1,
                    "compare_floating_point_numbers": 1,
                    "compare_floats": 25,
                    "compare_floats_with_epsilon": 1,
                    "compare_parameters": 1
                },
                "FUN_08001004": {
                    "is_equal": 1,
                    "perform_comparison": 1
                },
                "__aeabi_cfcmpeq": {
                    "check_equality": 1,
                    "compare_floats_using_eabi": 1
                },
                "param_1": {
                    "first_float": 9,
                    "float1": 5,
                    "input1": 1,
                    "num1": 1,
                    "parameter1": 1,
                    "value1": 14
                },
                "param_2": {
                    "float2": 5,
                    "input2": 1,
                    "num2": 1,
                    "parameter2": 1,
                    "second_float": 9,
                    "value2": 14
                }
            },
            "called": [
                "FUN_08001004"
            ],
            "calling": [
                "FUN_08001064",
                "FUN_08001050"
            ],
            "code": "\nvoid compare_floats_with_epsilon_08000ffc(undefined4 value1,undefined4 value2)\n\n{\n  compare_floats_using_eabi(value2,value1);\n  return;\n}\n\n",
            "current_name": "compare_floats_with_epsilon_08000ffc",
            "entrypoint": "0x08000ffc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000ffc": "compare_floats_with_epsilon_08000ffc",
                "__aeabi_cfcmpeq": "compare_floats_using_eabi",
                "param_1": "value1",
                "param_2": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001004": {
            "additional_data": {
                "CONCAT44": {
                    "concatenate44": 1,
                    "concatenate_44": 1,
                    "concatenate_params_result": 1,
                    "concatenate_strings": 1,
                    "concatenate_u_integers": 1
                },
                "FUN_08000f9c": {
                    "combine_params": 1,
                    "compare_and_swap_floats": 1,
                    "compare_u_ints": 1,
                    "perform_calculation": 1,
                    "perform_operation": 2,
                    "perform_unsigned_operation": 1
                },
                "FUN_08001004": {
                    "combine_float_words": 1,
                    "combine_parameters": 2,
                    "concatenate_44": 1,
                    "concatenate_and_compare": 3,
                    "concatenate_bit_converter": 1,
                    "concatenate_floats_with_params": 1,
                    "concatenate_integers": 1,
                    "concatenate_parameters": 9,
                    "concatenate_params": 11,
                    "concatenate_uint_to_uint64": 1
                },
                "__cmpsf2": {
                    "compare_floats": 10
                },
                "param_1": {
                    "first_param": 3,
                    "first_parameter": 5,
                    "first_u_int": 1,
                    "float_param": 1,
                    "input1": 6,
                    "input_1": 1,
                    "input_param1": 1,
                    "input_param_1": 2,
                    "num1": 1,
                    "operand1": 1,
                    "param1": 3,
                    "param_a": 1,
                    "parameter_1": 1,
                    "uint32_value": 1,
                    "value1": 2,
                    "word1": 1
                },
                "param_2": {
                    "input2": 6,
                    "input_2": 1,
                    "input_param2": 1,
                    "input_param_2": 2,
                    "int_param": 1,
                    "num2": 1,
                    "operand2": 1,
                    "param2": 3,
                    "param_b": 1,
                    "parameter_2": 1,
                    "second_param": 3,
                    "second_parameter": 5,
                    "second_u_int": 1,
                    "uint32_value_to_concatenate": 1,
                    "value2": 2,
                    "word2": 1
                }
            },
            "called": [
                "FUN_08000f9c"
            ],
            "calling": [
                "FUN_08001014",
                "FUN_08000ffc",
                "FUN_08001028"
            ],
            "code": "\nundefined8 concatenate_floats_with_params_08001004(undefined4 input1,undefined4 input2)\n\n{\n  compare_floats();\n  return concatenate44(input2,input1);\n}\n\n",
            "current_name": "concatenate_floats_with_params_08001004",
            "entrypoint": "0x08001004",
            "imported": false,
            "improved": true,
            "renaming": {
                "CONCAT44": "concatenate44",
                "FUN_08001004": "concatenate_floats_with_params_08001004",
                "__cmpsf2": "compare_floats",
                "param_1": "input1",
                "param_2": "input2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001014": {
            "additional_data": {
                "FUN_08001014": {
                    "check_comparision_result": 1,
                    "check_comparison_result": 5,
                    "check_condition": 3,
                    "check_for_nonzero": 1,
                    "check_if_comparison_result_is_false": 1,
                    "check_if_non_zero": 1,
                    "check_if_not_equal_to_zero": 1,
                    "check_if_not_zero": 8,
                    "check_non_zero_value": 1,
                    "check_not_null": 1,
                    "check_zero_comparison": 1,
                    "compare_not_equal": 1,
                    "decompiled_function": 1,
                    "is_comparison_true": 2,
                    "is_not_zero": 2,
                    "is_zero": 1
                },
                "in_ZR": {
                    "comparison_result": 11,
                    "input_char": 1,
                    "input_variable": 1,
                    "is_non_zero": 1,
                    "is_not_zero": 3,
                    "is_not_zero_result": 1,
                    "result": 13
                },
                "param_1": {
                    "unused_param_1": 1
                },
                "param_2": {
                    "unused_param_2": 1
                }
            },
            "called": [
                "FUN_08001004"
            ],
            "calling": [
                "FUN_08003330"
            ],
            "code": "\nbool check_if_not_equal_to_zero_08001014(void)\n\n{\n  char result;\n  \n  __aeabi_cfcmpeq();\n  return result != '\\0';\n}\n\n",
            "current_name": "check_if_not_equal_to_zero_08001014",
            "entrypoint": "0x08001014",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001014": "check_if_not_equal_to_zero_08001014",
                "in_ZR": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001028": {
            "additional_data": {
                "FUM_08001028": {
                    "is_cy_null": 1
                },
                "FUN_08001004": {
                    "compare_cf": 1
                },
                "FUN_08001028": {
                    "check_cy_value": 1,
                    "check_if_carry_flag_is_set": 1,
                    "check_if_cy_equal_zero": 1,
                    "check_if_cy_is_empty": 1,
                    "check_if_cy_is_zero": 2,
                    "check_if_cy_zero": 1,
                    "check_if_equal_zero": 1,
                    "check_if_input_is_null": 1,
                    "check_if_null": 4,
                    "check_if_zero": 2,
                    "check_in_cy": 1,
                    "check_in_cy_zero": 1,
                    "is_carry_flag_zero": 1,
                    "is_cy_null": 6,
                    "is_cy_zero": 2,
                    "is_in_cy_zero": 1,
                    "is_null_character": 2,
                    "is_null_character_present": 1
                },
                "__aeabi_cfcmpeq": {
                    "compare_float_equal": 1,
                    "compare_floats": 3
                },
                "in_CY": {
                    "carry_flag": 2,
                    "comparison_result": 1,
                    "current_char": 1,
                    "cy": 2,
                    "cy_flag": 1,
                    "cy_value": 3,
                    "input_char": 11,
                    "input_character": 8,
                    "input_cy": 2
                },
                "param_1": {
                    "input_param_1": 2,
                    "param_1": 1,
                    "unknown_param1": 1
                },
                "param_2": {
                    "input_param_2": 2,
                    "param_2": 1,
                    "unknown_param2": 1
                }
            },
            "called": [
                "FUN_08001004"
            ],
            "calling": [
                "FUN_0800483c",
                "FUN_08002ee8",
                "FUN_08004a84"
            ],
            "code": "\nbool check_if_cy_is_zero_08001028(void)\n\n{\n  char input_char;\n  \n  compare_floats();\n  return input_char == '\\0';\n}\n\n",
            "current_name": "check_if_cy_is_zero_08001028",
            "entrypoint": "0x08001028",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001028": "check_if_cy_is_zero_08001028",
                "__aeabi_cfcmpeq": "compare_floats",
                "in_CY": "input_char"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001050": {
            "additional_data": {
                "FUN_08000ffc": {
                    "perform_operation": 1
                },
                "FUN_08001050": {
                    "check_bounds": 1,
                    "check_carry_zero": 1,
                    "check_carry_zero_return": 1,
                    "check_cfrcmple_condition": 1,
                    "check_comparison_result": 3,
                    "check_condition": 3,
                    "check_conditions": 7,
                    "check_float_comparison": 1,
                    "check_if_float_is_not_zero": 1,
                    "check_if_less_or_eq": 1,
                    "check_if_less_or_equal": 2,
                    "check_if_less_than_or_equal_to": 1,
                    "check_if_less_than_or_equal_zero": 1,
                    "check_le_relationship": 1,
                    "check_zero_or_negative": 1,
                    "check_zeros_or_less": 1,
                    "evaluate_comparison": 1,
                    "is_carry_flag_set": 1,
                    "is_cfrcmple_satisfied": 1,
                    "is_less_than_or_equal_to_zero": 1
                },
                "PTR_FUN_08000ffc": {
                    "compare_float_values": 1
                },
                "in_CY": {
                    "carry": 1,
                    "carry_flag": 12,
                    "carry_result": 1,
                    "carry_set": 2,
                    "is_carry": 7,
                    "is_carry_set": 1,
                    "is_less_or_equal": 2
                },
                "in_ZR": {
                    "is_same": 1,
                    "is_zero": 11,
                    "is_zero_result": 3,
                    "zero_flag": 9,
                    "zero_result": 2
                },
                "param_1": {
                    "": 1,
                    "arg1": 2,
                    "first_parameter": 1,
                    "input_1": 1,
                    "input_param_1": 1,
                    "input_value_1": 1,
                    "param1": 2,
                    "unused_param_1": 1,
                    "value1": 2,
                    "value_1": 1
                },
                "param_2": {
                    "": 1,
                    "arg2": 2,
                    "input_2": 1,
                    "input_param_2": 1,
                    "input_value_2": 1,
                    "param2": 2,
                    "second_parameter": 1,
                    "unused_param_2": 1,
                    "value2": 2,
                    "value_2": 1
                }
            },
            "called": [
                "FUN_08000ffc"
            ],
            "calling": [
                "FUN_08002ee8"
            ],
            "code": "\nbool check_conditions_08001050(void)\n\n{\n  undefined is_zero;\n  undefined carry_flag;\n  \n  __aeabi_cfrcmple();\n  return !(bool)carry_flag || (bool)is_zero;\n}\n\n",
            "current_name": "check_conditions_08001050",
            "entrypoint": "0x08001050",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001050": "check_conditions_08001050",
                "in_CY": "carry_flag",
                "in_ZR": "is_zero"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001064": {
            "additional_data": {
                "FUN_08001064": {
                    "check_if_char_is_null": 1,
                    "check_if_cy_is_null": 1,
                    "check_if_empty": 2,
                    "check_if_in_cy_is_null": 2,
                    "check_if_null": 6,
                    "check_if_null_character": 1,
                    "check_if_string_empty": 1,
                    "check_null_terminator": 1,
                    "check_zero_character": 1,
                    "is_char_null": 1,
                    "is_cy_zero": 1,
                    "is_in_cy_null": 1,
                    "is_input_empty": 1,
                    "is_null": 2,
                    "is_null_character": 1,
                    "is_null_character_present": 2,
                    "is_null_terminated": 4,
                    "is_null_terminator": 1
                },
                "__aeabi_cfrcmple": {
                    "compare_floats": 3,
                    "perform_comparision_operation": 1
                },
                "in_CY": {
                    "character": 4,
                    "cy_value": 1,
                    "input_char": 15,
                    "input_character": 10,
                    "string_character": 1
                }
            },
            "called": [
                "FUN_08000ffc"
            ],
            "calling": [
                "FUN_0800483c",
                "FUN_08004a84"
            ],
            "code": "\nbool check_if_in_cy_is_null_08001064(void)\n\n{\n  char input_char;\n  \n  compare_floats();\n  return input_char == '\\0';\n}\n\n",
            "current_name": "check_if_in_cy_is_null_08001064",
            "entrypoint": "0x08001064",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001064": "check_if_in_cy_is_null_08001064",
                "__aeabi_cfrcmple": "compare_floats",
                "in_CY": "input_char"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001078": {
            "additional_data": {
                "FUN_08001078": {
                    "calculate_shifted_value": 1,
                    "calculate_value": 2,
                    "convert_integer_to_float": 1,
                    "convert_integer_to_fractional": 1,
                    "convert_signed_integer": 1,
                    "convert_to_float": 1,
                    "convert_to_positive_value": 1,
                    "convert_to_signed_int": 2,
                    "convert_to_signed_integer": 3,
                    "convert_to_unsigned": 1,
                    "convert_unsigned_to_signed": 1,
                    "convert_value": 1,
                    "decode_unsigned_integer": 1,
                    "extract_and_adjust_integer": 1,
                    "extract_and_convert_value": 1,
                    "extract_integer": 1,
                    "extract_integer_from_binary": 1,
                    "extract_integer_from_param": 1,
                    "extract_number_from_parameter": 1,
                    "extracted_value": 1,
                    "invert_and_shift": 1,
                    "reverse_bits": 3,
                    "reverse_integer": 2,
                    "reverse_number_bits": 1
                },
                "param_1": {
                    "final_output": 1,
                    "input": 7,
                    "input_integer": 1,
                    "input_number": 3,
                    "input_value": 12,
                    "number": 2,
                    "temp_value": 1,
                    "unsigned_integer": 1,
                    "value": 3
                },
                "param_1_2": {
                    "input_value2": 1
                },
                "uVar1": {
                    "converted_integer": 1,
                    "converted_value": 1,
                    "result": 1,
                    "return_value": 1,
                    "shifted_bits": 6,
                    "shifted_input": 3,
                    "shifted_input_value": 1,
                    "shifted_number": 2,
                    "shifted_value": 15
                },
                "uVar1_2": {
                    "shifted_value2": 1
                },
                "uVar2": {
                    "adjusted_value": 1,
                    "complement": 1,
                    "decimal_places": 1,
                    "difference": 17,
                    "difference_value": 1,
                    "offset": 4,
                    "offset_result": 1,
                    "result": 1,
                    "shift_amount": 2,
                    "shifted_input_difference": 1,
                    "shifted_value_complement": 1
                },
                "uVar3": {
                    "masked_value": 1,
                    "result": 3,
                    "shift_amount": 1,
                    "shifted_and_adjusted_value": 1,
                    "shifted_and_masked_value": 1,
                    "shifted_and_signed_value": 1,
                    "shifted_input": 2,
                    "shifted_input_with_sign": 1,
                    "shifted_offset": 1,
                    "shifted_result": 2
                },
                "uVar4": {
                    "bit_mask": 1,
                    "computed_value": 1,
                    "converted_value": 1,
                    "final_result": 1,
                    "result": 3,
                    "shifted_input_negative": 1,
                    "shifted_value": 1,
                    "sign_cleared_value": 1,
                    "sign_extended": 1
                },
                "uVar5": {
                    "result": 2,
                    "signed_result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800411c",
                "FUN_0800426c",
                "FUN_08002f28"
            ],
            "code": "\nuint convert_unsigned_to_signed_08001078(uint input_value)\n\n{\n  uint shifted_value;\n  uint difference;\n  \n  if (input_value << 1 < 0x7f000000) {\n    return 0;\n  }\n  shifted_value = (input_value << 1) >> 0x18;\n  difference = 0x9e - shifted_value;\n  if (shifted_value < 0x9f && difference != 0) {\n    shifted_value = (input_value << 8 | 0x80000000) >> (difference & 0xff);\n    if ((input_value & 0x80000000) != 0) {\n      shifted_value = -shifted_value;\n    }\n    return shifted_value;\n  }\n  if ((difference == 0xffffff9f) && ((input_value & 0x7fffff) != 0)) {\n    return 0;\n  }\n  input_value = input_value & 0x80000000;\n  if (input_value == 0) {\n    input_value = 0x7fffffff;\n  }\n  return input_value;\n}\n\n",
            "current_name": "convert_unsigned_to_signed_08001078",
            "entrypoint": "0x08001078",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001078": "convert_unsigned_to_signed_08001078",
                "param_1": "input_value",
                "uVar1": "shifted_value",
                "uVar2": "difference"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080010c4": {
            "additional_data": {
                "0x18": {
                    "bit_shift": 1
                },
                "0x7f000000": {
                    "threshold": 1
                },
                "0x7fffff": {
                    "exception_mask": 1
                },
                "0x80000000": {
                    "most_significant_bit": 1
                },
                "0x9e": {
                    "shift_amount": 1
                },
                "0xffffff9f": {
                    "exception_value": 1
                },
                "0xffffffff": {
                    "result": 1
                },
                "FUN_080010c4": {
                    "bitwise_shift_and_extract": 1,
                    "calculate_shift_amount": 1,
                    "check_and_shift": 1,
                    "convert_number": 1,
                    "convert_to_unsigned_int": 1,
                    "decode_and_extract": 1,
                    "decode_and_filter": 1,
                    "decode_and_shift": 2,
                    "decode_integer": 3,
                    "decode_number": 2,
                    "decode_uint": 1,
                    "decode_unsigned_integer": 1,
                    "decode_value": 1,
                    "extract_bitfield": 1,
                    "extract_bits": 1,
                    "extracted_bits_from_param": 1,
                    "invert_bits_and_shift_right": 1,
                    "reverse_and_shift": 1,
                    "reverse_bit_shift": 3,
                    "reverse_bits": 3,
                    "reverse_bitwise_operation": 1,
                    "reverse_shift_bits": 1
                },
                "param_1": {
                    "input": 10,
                    "input_number": 1,
                    "input_value": 14,
                    "number": 4,
                    "value": 2
                },
                "return_value": {
                    "decoded_result": 1
                },
                "uVar1": {
                    "decoded_value": 1,
                    "result": 1,
                    "shift_amount": 21,
                    "shift_count": 1,
                    "shifted_bit_count": 1,
                    "shifted_value": 6
                }
            },
            "called": [],
            "calling": [
                "FUN_08004a84"
            ],
            "code": "\nuint bitwise_shift_and_extract_080010c4(uint input_value)\n\n{\n  uint shift_amount;\n  \n  if (((input_value & 0x80000000) != 0) || (input_value << 1 < 0x7f000000)) {\n    return 0;\n  }\n  shift_amount = 0x9e - ((input_value << 1) >> 0x18);\n  if (-1 < (int)shift_amount) {\n    return (input_value << 8 | 0x80000000) >> (shift_amount & 0xff);\n  }\n  if ((shift_amount == 0xffffff9f) && ((input_value & 0x7fffff) != 0)) {\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "bitwise_shift_and_extract_080010c4",
            "entrypoint": "0x080010c4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080010c4": "bitwise_shift_and_extract_080010c4",
                "param_1": "input_value",
                "uVar1": "shift_amount"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001104": {
            "additional_data": {
                "FUN_08001104": {
                    "configure_sys_tick": 2,
                    "configure_system": 2,
                    "configure_system_tick": 1,
                    "initialize_clock": 1,
                    "initialize_hal_sys_tick": 1,
                    "initialize_hardware": 1,
                    "initialize_sys_tick": 1,
                    "initialize_system": 22
                },
                "FUN_08001194": {
                    "configure_interrupt": 2,
                    "configure_interrupts": 1,
                    "configure_sys_tick": 1
                },
                "FUN_08001214": {
                    "configure_peripheral": 1,
                    "initialize_component": 1,
                    "initialize_something": 1,
                    "set_priority": 1
                },
                "FUN_08002214": {
                    "get_configuration": 2,
                    "get_data": 1,
                    "get_something": 1
                },
                "HAL_NVIC_SetPriority": {
                    "set_interrupt_priority": 1,
                    "set_priority": 3
                },
                "HAL_RCC_GetHCLKFreq": {
                    "get_hclk_frequency": 1,
                    "get_system_clock_freq": 1,
                    "get_system_clock_frequency": 2
                },
                "HAL_SYSTICK_Config": {
                    "configure_sys_tick": 3,
                    "configure_sys_tick_irq": 1
                },
                "param_1": {
                    "component_index": 1,
                    "parameter": 1,
                    "peripheral_id": 1,
                    "priority": 11,
                    "priority_level": 17
                },
                "param_2": {
                    "interrupt2": 1,
                    "param2": 1,
                    "param_2": 1
                },
                "param_3": {
                    "interrupt3": 1,
                    "param3": 1,
                    "param_3": 1
                },
                "uVar1": {
                    "clk_frequency": 1,
                    "clock_frequency": 2,
                    "hclk_freq": 14,
                    "hclk_frequency": 8,
                    "sys_tick_freq": 1,
                    "system_clock": 2,
                    "system_clock_freq_divided": 1,
                    "system_clock_frequency": 2
                }
            },
            "called": [
                "FUN_08001194",
                "FUN_08002214",
                "FUN_08001214"
            ],
            "calling": [
                "FUN_0800209c",
                "FUN_08001128"
            ],
            "code": "\nundefined4 initialize_system_08001104(undefined4 priority_level)\n\n{\n  uint hclk_freq;\n  \n  hclk_freq = get_system_clock_frequency();\n  configure_sys_tick(hclk_freq / 1000);\n  set_priority(0xffffffff,priority_level,0);\n  return 0;\n}\n\n",
            "current_name": "initialize_system_08001104",
            "entrypoint": "0x08001104",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001104": "initialize_system_08001104",
                "HAL_NVIC_SetPriority": "set_priority",
                "HAL_RCC_GetHCLKFreq": "get_system_clock_frequency",
                "HAL_SYSTICK_Config": "configure_sys_tick",
                "param_1": "priority_level",
                "uVar1": "hclk_freq"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001128": {
            "additional_data": {
                "DAT_40022000": {
                    "register_value": 1
                },
                "FUN_08001104": {
                    "configure_interrupt": 2,
                    "configure_interrupts": 1,
                    "configure_nvic_priority": 1,
                    "configure_nvic_priority_grouping": 1,
                    "configure_peripheral": 2,
                    "configure_priority": 1,
                    "configure_priority_grouping": 1,
                    "configure_system": 3,
                    "init_function": 1,
                    "init_subsystem": 1,
                    "initialize_irq": 1,
                    "initialize_nvic_priority": 1,
                    "initialize_peripheral": 1,
                    "initialize_peripherals": 1,
                    "initialize_priority": 1,
                    "initialize_subsystem": 1,
                    "perform_operation": 1,
                    "set_priority": 3,
                    "set_priority_grouping": 2
                },
                "FUN_08001128": {
                    "initialize": 2,
                    "initialize_hal": 3,
                    "initialize_hardware": 14,
                    "initialize_peripheral_devices": 1,
                    "initialize_system": 11
                },
                "FUN_08001170": {
                    "configure_interrupts": 1,
                    "configure_irq": 1,
                    "init_tick": 2,
                    "initialize_tick": 7,
                    "perform_operation": 1,
                    "set_interrupt_priority": 4,
                    "set_priority": 4,
                    "set_priority_group": 1,
                    "set_priority_level": 1,
                    "set_tick": 1,
                    "set_tick_config": 1,
                    "set_tick_interval": 1
                },
                "FUN_08004ccc": {
                    "configure_peripheral": 1,
                    "configure_subsystem": 1,
                    "handle_data": 1,
                    "handle_event": 1,
                    "init_peripheral": 2,
                    "init_tick": 1,
                    "initialize_components": 1,
                    "initialize_device": 1,
                    "initialize_devices": 1,
                    "initialize_hal": 1,
                    "initialize_hardware": 1,
                    "initialize_interrupt": 1,
                    "initialize_msp": 3,
                    "initialize_periph": 4,
                    "initialize_peripheral": 2,
                    "initialize_subsystem": 1,
                    "perform_task": 1,
                    "process_data": 2
                },
                "HAL_InitTick": {
                    "initialize_tick": 5
                },
                "HAL_MspInit": {
                    "initialize_msp": 2,
                    "initialize_peripheral": 3
                },
                "HAL_NVIC_SetPriorityGrouping": {
                    "set_interrupt_priority_grouping": 2,
                    "set_nvic_priority_grouping": 1,
                    "set_priority_grouping": 2
                },
                "_DAT_40022000": {
                    "data_register": 1,
                    "device_control_reg": 1,
                    "gpio_register": 1,
                    "peripheral_register": 1,
                    "system_flags": 1
                },
                "param_1": {
                    "arg1": 1,
                    "arg_1": 1,
                    "config": 1,
                    "config_flags": 1,
                    "irq_param": 1,
                    "param": 5,
                    "param1": 4,
                    "priority_group": 2,
                    "tick_config": 1,
                    "unused_param": 1,
                    "unused_parameter": 1,
                    "value": 1
                },
                "param_2": {
                    "arg2": 1,
                    "arg_2": 1,
                    "option1": 1,
                    "param": 1,
                    "param2": 6,
                    "priority": 1,
                    "priority_group": 1,
                    "priority_grouping": 1,
                    "tick_config": 1,
                    "unused": 1,
                    "unused_param": 2,
                    "unused_param2": 1
                },
                "param_3": {
                    "arg3": 1,
                    "arg_3": 1,
                    "option2": 1,
                    "param": 1,
                    "param3": 7,
                    "tick_init": 1,
                    "unused": 1,
                    "unused_param": 1,
                    "unused_param3": 1,
                    "unused_param_2": 1
                }
            },
            "called": [
                "FUN_08001104",
                "FUN_08001170",
                "FUN_08004ccc"
            ],
            "calling": [
                "FUN_0800458c"
            ],
            "code": "\n\n\nundefined4 initialize_hardware_08001128(void)\n\n{\n  _DAT_40022000 = _DAT_40022000 | 0x10;\n  set_priority_grouping(3);\n  initialize_tick(0);\n  initialize_peripheral();\n  return 0;\n}\n\n",
            "current_name": "initialize_hardware_08001128",
            "entrypoint": "0x08001128",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001128": "initialize_hardware_08001128",
                "HAL_InitTick": "initialize_tick",
                "HAL_MspInit": "initialize_peripheral",
                "HAL_NVIC_SetPriorityGrouping": "set_priority_grouping"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800114c": {
            "additional_data": {
                "": {
                    "": 2
                },
                "DAT_20000244": {
                    "count": 1,
                    "counter": 20,
                    "data_counter": 2,
                    "data_value": 1
                },
                "FUN_0800114c": {
                    "increment_and_update_data_counter": 1,
                    "increment_count": 1,
                    "increment_counter": 24,
                    "increment_data_counter": 4,
                    "increment_data_value": 1
                },
                "var": {
                    "counter": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080041ae"
            ],
            "code": "\nvoid increment_and_update_data_counter_0800114c(void)\n\n{\n  DAT_20000244 = DAT_20000244 + 1;\n  return;\n}\n\n",
            "current_name": "increment_and_update_data_counter_0800114c",
            "entrypoint": "0x0800114c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800114c": "increment_and_update_data_counter_0800114c"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800115c": {
            "additional_data": {
                "DAT_20000244": {
                    "config_value": 1,
                    "data": 11,
                    "data_value": 8,
                    "global_value": 2,
                    "global_variable": 2,
                    "global_variable_value": 1,
                    "result": 1,
                    "retrieved_data": 1
                },
                "FUN_0800115c": {
                    "get_config_value": 1,
                    "get_dat_value": 1,
                    "get_data": 13,
                    "get_data_value": 11,
                    "get_global_value": 2,
                    "get_global_variable": 2,
                    "get_global_variable_value": 1
                },
                "undefined4": {
                    "uint32_t": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800209c",
                "FUN_08001460",
                "FUN_08004f60",
                "FUN_08001938",
                "FUN_08004c18",
                "FUN_08001b58",
                "FUN_08004f5c",
                "FUN_080014e2",
                "FUN_08001530",
                "FUN_08001828",
                "FUN_080015e8",
                "FUN_080016f4"
            ],
            "code": "\nuint32_t get_data_value_0800115c(void)\n\n{\n  return DAT_20000244;\n}\n\n",
            "current_name": "get_data_value_0800115c",
            "entrypoint": "0x0800115c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800115c": "get_data_value_0800115c",
                "undefined4": "uint32_t"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001168": {
            "called": [],
            "calling": [
                "FUN_08001b58",
                "FUN_08004f64"
            ],
            "code": "\nvoid FUNC_08001168(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08001168",
            "entrypoint": "0x08001168",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08001168": "FUNC_08001168"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08001170": {
            "additional_data": {
                "0x5fa0000": {
                    "preset_value": 1
                },
                "0xf8ff": {
                    "mask": 1
                },
                "8": {
                    "shift_amount": 1
                },
                "DAT_e000ed0c": {
                    "memory_configuration": 1
                },
                "FUN_08001170": {
                    "configure_control_register": 4,
                    "configure_interrupt": 1,
                    "configure_interrupts": 1,
                    "configure_memory": 1,
                    "configure_memory_page": 1,
                    "configure_memory_protection": 1,
                    "configure_peripheral": 1,
                    "configure_peripheral_interrupt": 1,
                    "configure_port": 1,
                    "configure_register": 2,
                    "set_configuration": 1,
                    "set_configuration_register": 1,
                    "set_control_bits": 1,
                    "set_cr_reg_bits": 1,
                    "set_custom_value": 1,
                    "set_memory_config": 1,
                    "set_memory_configuration": 2,
                    "set_param_bits": 1,
                    "set_register_bits": 1,
                    "update_config_register": 1,
                    "update_control_register": 1,
                    "update_memory_register": 1,
                    "update_parameter": 1,
                    "update_register_bits": 1,
                    "update_register_value": 2
                },
                "_DAT_e000ed0c": {
                    "config_register": 1,
                    "control_register": 6,
                    "interrupt_control_register": 1,
                    "memory_config_reg": 1,
                    "memory_config_register": 3,
                    "memory_control_register": 1,
                    "memory_register": 1,
                    "peripheral_config": 1,
                    "peripheral_value": 1,
                    "register_value": 6
                },
                "param_1": {
                    "config": 1,
                    "config_data": 1,
                    "config_value": 1,
                    "configuration": 2,
                    "control_value": 1,
                    "custom_value": 1,
                    "input": 1,
                    "input_value": 12,
                    "interrupt_flags": 2,
                    "interrupt_type": 1,
                    "memory_config": 1,
                    "page_setting": 1,
                    "param": 1,
                    "port_number": 1,
                    "protection_level": 1,
                    "value": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_08004ccc",
                "FUN_08001128"
            ],
            "code": "\n\n\nvoid configure_control_register_08001170(uint input_value)\n\n{\n  _DAT_e000ed0c = _DAT_e000ed0c & 0xf8ff | 0x5fa0000 | (input_value & 7) << 8;\n  return;\n}\n\n",
            "current_name": "configure_control_register_08001170",
            "entrypoint": "0x08001170",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001170": "configure_control_register_08001170",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001194": {
            "additional_data": {
                "FUNK_08001194": {
                    "reverse_implementation": 1
                },
                "FUN_08001194": {
                    "apply_transformation": 2,
                    "process_and_store_data": 1,
                    "transform_data": 1,
                    "update_data": 3,
                    "update_memory": 7,
                    "update_memory_content": 1,
                    "update_memory_data": 1,
                    "update_memory_entry": 1,
                    "update_memory_location": 2,
                    "update_memory_register": 1,
                    "update_memory_value": 4,
                    "update_registers": 1,
                    "write_data_to_memory": 3,
                    "write_to_memory": 1
                },
                "param_1": {
                    "address": 14,
                    "address_offset": 2,
                    "data": 1,
                    "data_offset": 1,
                    "entry_index": 1,
                    "index": 1,
                    "input1": 3,
                    "input_1": 1,
                    "input_index": 1,
                    "input_value1": 1,
                    "register_index": 1,
                    "register_value": 1,
                    "source_value": 1,
                    "value": 1,
                    "value1": 1
                },
                "param_2": {
                    "bit_mask1": 1,
                    "bitmask1": 1,
                    "data": 6,
                    "data1": 6,
                    "data_bits": 1,
                    "input2": 3,
                    "input_2": 1,
                    "input_data": 1,
                    "input_value2": 1,
                    "mask": 2,
                    "mask1": 1,
                    "mask_1": 1,
                    "value": 2,
                    "value1": 3,
                    "value2": 1
                },
                "param_3": {
                    "bit_mask2": 1,
                    "bitmask2": 1,
                    "control_bits": 1,
                    "data": 1,
                    "data2": 6,
                    "input3": 3,
                    "input_3": 1,
                    "input_value3": 1,
                    "mask": 8,
                    "mask2": 1,
                    "mask_2": 1,
                    "value": 2,
                    "value2": 3,
                    "value3": 1
                },
                "uVar1": {
                    "modified_data": 1,
                    "new_byte": 1,
                    "result": 4,
                    "shifted_data": 4,
                    "shifted_input": 1,
                    "shifted_value": 1,
                    "transformed_value": 1,
                    "updated_byte": 3,
                    "updated_data": 1,
                    "updated_value": 11,
                    "value": 2,
                    "value_to_write": 1
                },
                "uVar2": {
                    "min_shift_count": 1,
                    "num_bits": 2,
                    "remaining_bits": 1,
                    "shift": 1,
                    "shift_amount": 18,
                    "shift_bits": 1,
                    "shifted_bits": 2,
                    "shifted_positions": 1,
                    "shifted_value": 2,
                    "start_mask": 1,
                    "u_var2": 1
                },
                "uVar3": {
                    "adjusted_shift_amount": 1,
                    "bit_mask": 1,
                    "bit_mask1": 1,
                    "bit_offset": 1,
                    "bit_position": 2,
                    "end_mask": 1,
                    "final_shift_count": 1,
                    "index": 1,
                    "mask_positions": 1,
                    "masked_index": 1,
                    "masked_value1": 1,
                    "offset": 4,
                    "shift_amount": 6,
                    "shifted_amount": 1,
                    "shifted_bits": 4,
                    "shifted_control": 1,
                    "shifted_mask": 1,
                    "shifted_value": 2
                },
                "uVar4": {
                    "add_amount": 1,
                    "adjusted_shift": 1,
                    "adjusted_shift_amount": 2,
                    "bit_mask2": 1,
                    "increment": 1,
                    "limit": 1,
                    "masked_value2": 1,
                    "max_offset": 1,
                    "modified_bit_position": 1,
                    "modified_index": 1,
                    "modified_offset": 1,
                    "modified_shifted_value": 1,
                    "new_bit_offset": 1,
                    "new_bits_count": 1,
                    "offset": 1,
                    "offset_plus_4": 1,
                    "shift_limit": 2,
                    "shifted_amount": 1,
                    "shifted_amount_plus_four": 1,
                    "shifted_bits_plus_four": 2,
                    "shifted_control_plus_four": 1,
                    "shifted_data": 1,
                    "shifted_end_bit": 1,
                    "shifted_offset": 1,
                    "shifted_value": 1,
                    "total_bits": 1,
                    "updated_positions": 1,
                    "upper_bound": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001104",
                "FUN_08004514",
                "FUN_08004e7c",
                "FUN_08004ccc"
            ],
            "code": "\n\n\nvoid update_memory_value_08001194(uint address,uint data1,uint mask)\n\n{\n  undefined updated_value;\n  uint shift_amount;\n  uint shift_amount;\n  uint adjusted_shift_amount;\n  \n  shift_amount = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  shift_amount = 7 - shift_amount;\n  adjusted_shift_amount = shift_amount + 4;\n  if (3 < shift_amount) {\n    shift_amount = 4;\n  }\n  if (adjusted_shift_amount < 7) {\n    shift_amount = 0;\n  }\n  shift_amount = (1 << (shift_amount & 0xff)) - 1;\n  if (6 < adjusted_shift_amount) {\n    shift_amount = shift_amount - 3;\n  }\n  updated_value = (undefined)\n          ((mask & (1 << (shift_amount & 0xff)) - 1U | (data1 & shift_amount) << (shift_amount & 0xff)) << 4);\n  if (-1 < (int)address) {\n    shift_amount = address + 0xe000e100;\n  }\n  else {\n    shift_amount = 0xe000ed14;\n    shift_amount = address & 0xf;\n  }\n  if (-1 < (int)address) {\n    *(undefined *)(shift_amount + 0x300) = updated_value;\n  }\n  else {\n    *(undefined *)(shift_amount + shift_amount) = updated_value;\n  }\n  return;\n}\n\n",
            "current_name": "update_memory_value_08001194",
            "entrypoint": "0x08001194",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001194": "update_memory_value_08001194",
                "param_1": "address",
                "param_2": "data1",
                "param_3": "mask",
                "uVar1": "updated_value",
                "uVar2": "shift_amount",
                "uVar3": "shift_amount",
                "uVar4": "adjusted_shift_amount"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080011fc": {
            "additional_data": {
                "FUN_080011fc": {
                    "set_bit": 8,
                    "set_bit_in_array": 12,
                    "set_bit_in_memory": 5,
                    "set_bit_in_pointer_array": 1,
                    "set_bit_value": 3,
                    "store_bit": 1
                },
                "param_1": {
                    "bit_index": 8,
                    "bit_position": 14,
                    "index": 4,
                    "input": 2,
                    "input_value": 1,
                    "position": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08004e7c"
            ],
            "code": "\nvoid set_bit_in_pointer_array_080011fc(uint bit_position)\n\n{\n  *(int *)((bit_position >> 5) * 4 + -0x1fff1f00) = 1 << (bit_position & 0x1f);\n  return;\n}\n\n",
            "current_name": "set_bit_in_pointer_array_080011fc",
            "entrypoint": "0x080011fc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080011fc": "set_bit_in_pointer_array_080011fc",
                "param_1": "bit_position"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001214": {
            "additional_data": {
                "0": {
                    "default_extra_value": 1,
                    "zero_value": 1
                },
                "0xf0": {
                    "default_flag": 1,
                    "default_value": 1
                },
                "7": {
                    "constant_value": 1,
                    "default_constant": 1
                },
                "DAT_e000ed23": {
                    "access_permission": 1,
                    "constant_value": 4,
                    "data_flag": 1,
                    "default_value": 1,
                    "error_code": 1,
                    "flag": 1,
                    "flags": 1,
                    "hardware_mode": 1,
                    "high_byte": 1,
                    "initial_value": 1,
                    "mcu_configuration_status": 1,
                    "mem_value": 1,
                    "memory_flag": 1,
                    "memory_value": 1,
                    "new_data_2": 1,
                    "new_value2": 1,
                    "param_value_high": 1,
                    "register_flag": 1,
                    "special_value": 1,
                    "status": 2,
                    "status_code": 1,
                    "status_flag": 3
                },
                "FUN_08001214": {
                    "initialize_data": 4,
                    "initialize_hardware": 1,
                    "initialize_memory": 10,
                    "initialize_memory_region": 1,
                    "initialize_parameter": 1,
                    "initialize_parameters": 3,
                    "initialize_register": 1,
                    "initialize_registers": 1,
                    "initiate_data_transfer": 1,
                    "set_data_parameters": 1,
                    "set_initial_values": 1,
                    "set_param_values": 2,
                    "set_parameters_for_mcu_configuration": 1,
                    "set_value_and_flags": 1,
                    "update_registers": 1,
                    "update_values": 1
                },
                "_DAT_e000e010": {
                    "bit_pattern": 1,
                    "constant": 2,
                    "control_register": 1,
                    "error_code": 2,
                    "flag": 7,
                    "hardware_flag": 1,
                    "initial_value": 1,
                    "max_value": 1,
                    "mcu_configuration_seven": 1,
                    "memory_size": 1,
                    "memory_type": 1,
                    "new_data_4": 1,
                    "new_value4": 1,
                    "offset": 1,
                    "one_more_value": 1,
                    "param_value_bit": 1,
                    "preset_value": 1,
                    "register_index": 1,
                    "status": 1,
                    "threshold": 1,
                    "type": 1,
                    "variable2": 1
                },
                "_DAT_e000e014": {
                    "adjusted_value": 1,
                    "base_address": 1,
                    "data_register_1": 1,
                    "data_size_minus_one": 1,
                    "hardware_parameter": 1,
                    "mcu_configuration_minus_one": 1,
                    "mem_address": 2,
                    "memory_address": 5,
                    "memory_base": 1,
                    "memory_base_address": 1,
                    "modified_input": 2,
                    "modified_value": 3,
                    "new_data_1": 1,
                    "new_value1": 1,
                    "param_value_low": 1,
                    "register_value": 2,
                    "start_address": 1,
                    "updated_input_value": 1,
                    "updated_value": 3
                },
                "_DAT_e000e018": {
                    "additional_data": 1,
                    "additional_info": 1,
                    "another_value": 1,
                    "counter": 12,
                    "data_register_2": 1,
                    "extra_value": 1,
                    "hardware_setting": 1,
                    "index": 1,
                    "initialized_value": 2,
                    "mcu_configuration_zero": 1,
                    "new_data_3": 1,
                    "new_value3": 1,
                    "offset": 2,
                    "param_value_int": 1,
                    "progress": 1,
                    "register_increment": 1,
                    "variable1": 1
                },
                "param_1": {
                    "address": 2,
                    "data_size": 1,
                    "input": 1,
                    "input_value": 5,
                    "mcu_configuration_value": 1,
                    "memory_size": 1,
                    "new_value": 2,
                    "size": 5,
                    "value": 13
                }
            },
            "called": [],
            "calling": [
                "FUN_08001104",
                "FUN_08004514"
            ],
            "code": "\n\n\nundefined4 initialize_memory_region_08001214(int value)\n\n{\n  if (value - 1U < 0x1000000) {\n    _DAT_e000e014 = value - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "initialize_memory_region_08001214",
            "entrypoint": "0x08001214",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001214": "initialize_memory_region_08001214",
                "param_1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001240": {
            "additional_data": {
                "FUN_08001240": {
                    "modify_flag": 1,
                    "set_bit_if_parameter_is_four": 1,
                    "set_e000e010_bit": 1,
                    "set_flag": 4,
                    "set_flag_for_param": 1,
                    "set_flag_if_equal_to_four": 2,
                    "set_flag_if_param_is_four": 1,
                    "set_flag_in_register": 2,
                    "update_control_register": 2,
                    "update_e000e010_flag": 2,
                    "update_flag": 3,
                    "update_register": 1,
                    "update_register_flag": 3,
                    "update_status": 3,
                    "update_status_flag": 2,
                    "update_status_flags": 1,
                    "update_status_register": 1
                },
                "_DAT_e000e010": {
                    "control_register": 2,
                    "e000e010": 1,
                    "flag": 3,
                    "flag_register": 3,
                    "register": 5,
                    "register_flag": 2,
                    "register_value": 3,
                    "status_flag": 1,
                    "status_register": 5
                },
                "param_1": {
                    "flag": 3,
                    "flag_value": 9,
                    "input": 1,
                    "input_param": 1,
                    "input_value": 3,
                    "param": 1,
                    "status": 2,
                    "status_code": 1,
                    "status_flag": 2,
                    "value": 8
                }
            },
            "called": [],
            "calling": [
                "FUN_08004514"
            ],
            "code": "\n\n\nvoid update_register_flag_08001240(int flag_value)\n\n{\n  if (flag_value == 4) {\n    _DAT_e000e010 = _DAT_e000e010 | 4;\n  }\n  else {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n  }\n  return;\n}\n\n",
            "current_name": "update_register_flag_08001240",
            "entrypoint": "0x08001240",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001240": "update_register_flag_08001240",
                "param_1": "flag_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001258": {
            "called": [],
            "calling": [],
            "code": "\nvoid FUNC_08001258(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08001258",
            "entrypoint": "0x08001258",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08001258": "FUNC_08001258"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08001264": {
            "additional_data": {
                "FUN_08001264": {
                    "process_data": 1,
                    "process_flags": 1,
                    "process_parameters": 1,
                    "update_bitmask": 1,
                    "update_bits": 1,
                    "update_bitwise_operations": 1,
                    "update_data": 1,
                    "update_flags": 5,
                    "update_flags_and_registers": 2,
                    "update_flags_and_values": 1,
                    "update_parameter": 1,
                    "update_parameter_flags": 1,
                    "update_register_value": 1,
                    "update_register_values": 1,
                    "update_registers": 5,
                    "update_settings": 1,
                    "update_status_bits": 1,
                    "update_values": 2
                },
                "_DAT_40010008": {
                    "register": 1
                },
                "_DAT_40010400": {
                    "data_register1": 1,
                    "register": 1,
                    "register1": 1
                },
                "_DAT_40010404": {
                    "data_register2": 1,
                    "register": 1,
                    "register2": 1
                },
                "_DAT_40010408": {
                    "data_register3": 1,
                    "register": 1,
                    "register3": 1
                },
                "_DAT_4001040c": {
                    "data_register4": 1,
                    "register": 1,
                    "register4": 1
                },
                "_DAT_40021018": {
                    "control_register": 1,
                    "register": 1,
                    "register_mask": 1
                },
                "iVar4": {
                    "bit_index": 1,
                    "block_identifier": 1,
                    "case_value": 1,
                    "category": 1,
                    "config_index": 1,
                    "device_index": 1,
                    "flag_offset": 1,
                    "index": 14,
                    "index1": 1,
                    "index_var": 1,
                    "offset": 1,
                    "param_case": 1,
                    "register_index": 4,
                    "shift_amount": 1,
                    "switch_case": 1
                },
                "iVar8": {
                    "bit_index": 1,
                    "bit_offset": 3,
                    "bit_shift": 4,
                    "i_var": 1,
                    "index": 3,
                    "index3": 1,
                    "offset": 1,
                    "output_index": 1,
                    "register_index": 1,
                    "shift": 1,
                    "shift_amount": 5,
                    "shift_value": 1,
                    "special_index": 1,
                    "sub_index": 3,
                    "switch_index": 1,
                    "temp_index": 1,
                    "temp_var": 1
                },
                "param_1": {
                    "data_structure1": 1,
                    "flag_array": 2,
                    "flags": 4,
                    "flags_array": 1,
                    "input_values": 3,
                    "output_array": 4,
                    "output_data": 1,
                    "output_flags": 1,
                    "output_params": 3,
                    "output_settings": 1,
                    "register1": 1,
                    "register_array": 1,
                    "register_src": 1,
                    "register_values": 1,
                    "register_values1": 1,
                    "registers": 2,
                    "status_bits": 1,
                    "target_register": 1
                },
                "param_2": {
                    "config_values": 1,
                    "data": 1,
                    "data_structure2": 1,
                    "flag_array": 1,
                    "flags": 4,
                    "input": 1,
                    "input_array": 5,
                    "input_bits": 1,
                    "input_data": 1,
                    "input_flags": 1,
                    "input_params": 3,
                    "input_settings": 1,
                    "instructions": 1,
                    "param_array": 1,
                    "register2": 1,
                    "register_dst": 1,
                    "register_values2": 1,
                    "registers": 1,
                    "source_register": 1,
                    "values": 2
                },
                "uVar1": {
                    "bit_index": 1,
                    "bit_mask": 1,
                    "bit_shift_count": 1,
                    "bitmask": 1,
                    "flag": 2,
                    "flag1": 2,
                    "flag_mask": 1,
                    "flag_temp": 1,
                    "flag_value": 5,
                    "mask_value": 1,
                    "new_flag_value": 1,
                    "new_status": 1,
                    "new_value": 6,
                    "new_value1": 1,
                    "output_value": 1,
                    "result": 1,
                    "result_code": 1,
                    "status": 1,
                    "updated_value": 2
                },
                "uVar2": {
                    "bit": 1,
                    "bit_check": 6,
                    "bit_mask": 7,
                    "bit_value": 1,
                    "bitmask": 2,
                    "bitwise_check": 1,
                    "current_value1": 1,
                    "flag": 3,
                    "flag2": 2,
                    "flag_check": 1,
                    "flag_mask": 1,
                    "flag_value": 2,
                    "param_flag": 1,
                    "register_value": 1,
                    "value_mask": 1
                },
                "uVar3": {
                    "byte_value": 1,
                    "case_value": 1,
                    "condition": 4,
                    "config_value": 1,
                    "constant_value": 2,
                    "current_value2": 1,
                    "flag3": 2,
                    "flag_type": 3,
                    "flag_value": 1,
                    "instruction": 1,
                    "instruction_type": 1,
                    "op_code": 1,
                    "opcode": 3,
                    "param_type": 1,
                    "register_value2": 1,
                    "switch_value": 1,
                    "value": 5,
                    "value_check": 1
                },
                "uVar5": {
                    "bit": 1,
                    "bit_index": 6,
                    "bits_processed": 1,
                    "byte_index": 1,
                    "counter": 6,
                    "flag_index": 1,
                    "i": 6,
                    "index": 1,
                    "index2": 1,
                    "iteration": 1,
                    "iteration_count": 1,
                    "loop_count": 2,
                    "loop_counter": 2,
                    "loop_index": 1
                },
                "uVar6": {
                    "bit": 1,
                    "bit_mask": 10,
                    "bit_position": 3,
                    "bit_shift": 1,
                    "bitwise_mask": 1,
                    "bitwise_shift": 1,
                    "mask": 7,
                    "mask_value": 1,
                    "shifted_mask": 1,
                    "temp1": 2,
                    "temp_flag": 1,
                    "temp_register": 1,
                    "temp_value": 1
                },
                "uVar7": {
                    "check_value": 4,
                    "compare_value": 1,
                    "comparison": 1,
                    "comparison_value": 3,
                    "condition": 1,
                    "constant": 2,
                    "constant_value": 1,
                    "default_case": 1,
                    "flag": 1,
                    "magic_value": 1,
                    "mask": 1,
                    "matching_value": 1,
                    "opcode_value": 1,
                    "special_flag": 1,
                    "special_opcode": 1,
                    "special_value": 4,
                    "temp2": 2,
                    "temp_flag2": 1,
                    "temp_value": 1,
                    "u_var7": 1,
                    "value": 1
                },
                "unaff_r10": {
                    "array_pointer": 1,
                    "current_flag": 1,
                    "current_register": 2,
                    "output_array_address": 1,
                    "output_ptr": 1,
                    "output_values": 3,
                    "pointer": 1,
                    "pointer1": 1,
                    "pointer_register": 1,
                    "ptr": 1,
                    "register3": 1,
                    "register_pointer": 2,
                    "register_ptr": 2,
                    "register_temp": 1,
                    "result": 1,
                    "status_ptr": 1,
                    "target_address": 3,
                    "target_array": 2,
                    "target_register": 1,
                    "temp_ptr": 1,
                    "updated_settings": 1,
                    "write_address": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800458c",
                "FUN_08004e7c",
                "FUN_08004e14",
                "FUN_08004d48"
            ],
            "code": "\n\n\nvoid update_flags_and_registers_08001264(uint *output_array,uint *input_array)\n\n{\n  uint new_value;\n  uint bit_mask;\n  uint value;\n  int index;\n  uint i;\n  uint bit_mask;\n  uint special_value;\n  uint *target_address;\n  int shift_amount;\n  \n  new_value = 0;\n  i = 0;\n  do {\n    bit_mask = 1 << (i & 0xff);\n    bit_mask = bit_mask & *input_array;\n    if (bit_mask == bit_mask) {\n      value = input_array[1];\n      if (value == 0x12) {\n        new_value = input_array[3] + 0xc;\n      }\n      else if (value < 0x13) {\n        if (value == 2) {\n          new_value = input_array[3] + 8;\n        }\n        else if (value < 3) {\n          if (value == 0) goto LAB_080013be;\n          if (value == 1) {\n            new_value = input_array[3];\n          }\n        }\n        else if (value == 3) {\n          new_value = 0;\n        }\n        else if (value == 0x11) {\n          new_value = input_array[3] + 4;\n        }\n      }\n      else {\n        if (value != 0x10210000) {\n          if (value < 0x10210001) {\n            if (value != 0x10110000) {\n              special_value = 0x10120000;\nLAB_080013b8:\n              if (value != special_value) goto LAB_080012a8;\n            }\n          }\n          else if ((value != 0x10310000) && (value != 0x10320000)) {\n            special_value = 0x10220000;\n            goto LAB_080013b8;\n          }\n        }\nLAB_080013be:\n        new_value = input_array[2];\n        if (new_value == 0) {\n          new_value = 4;\n        }\n        else {\n          if (new_value == 1) {\n            output_array[4] = bit_mask;\n          }\n          if (new_value != 1) {\n            output_array[5] = bit_mask;\n          }\n          new_value = 8;\n        }\n      }\nLAB_080012a8:\n      if (bit_mask < 0x100) {\n        bit_mask = *output_array;\n        value = i << 2;\n        target_address = output_array;\n      }\n      else {\n        bit_mask = output_array[1];\n        value = (i + 0x3ffffff8) * 4;\n      }\n      if (0xff < bit_mask) {\n        target_address = output_array + 1;\n      }\n      *target_address = bit_mask & ~(0xf << (value & 0xff)) | new_value << (value & 0xff);\n      target_address = (uint *)input_array[1];\n      if (((uint)target_address & 0x10000000) != 0) {\n        _DAT_40021018 = _DAT_40021018 | 1;\n        shift_amount = (i & 3) << 2;\n        if (output_array == (uint *)0x40010800) {\n          index = 0;\n        }\n        else if (output_array == (uint *)0x40010c00) {\n          index = 1;\n        }\n        else if (output_array == (uint *)0x40011000) {\n          index = 2;\n        }\n        else if (output_array == (uint *)0x40011400) {\n          index = 3;\n        }\n        else {\n          index = 4;\n        }\n        *(uint *)((i & 0xfffffffc) + 0x40010008) =\n             index << shift_amount | *(uint *)((i & 0xfffffffc) + 0x40010008) & ~(0xf << shift_amount);\n        if (((uint)target_address & 0x10000) == 0) {\n          _DAT_40010400 = _DAT_40010400 & ~bit_mask;\n        }\n        else {\n          _DAT_40010400 = _DAT_40010400 | bit_mask;\n        }\n        if (((uint)target_address & 0x20000) == 0) {\n          _DAT_40010404 = _DAT_40010404 & ~bit_mask;\n        }\n        else {\n          _DAT_40010404 = _DAT_40010404 | bit_mask;\n        }\n        if (((uint)target_address & 0x100000) == 0) {\n          _DAT_40010408 = _DAT_40010408 & ~bit_mask;\n        }\n        else {\n          _DAT_40010408 = _DAT_40010408 | bit_mask;\n        }\n        if (((uint)target_address & 0x200000) == 0) {\n          _DAT_4001040c = _DAT_4001040c & ~bit_mask;\n        }\n        else {\n          _DAT_4001040c = bit_mask | _DAT_4001040c;\n        }\n      }\n    }\n    i = i + 1;\n    if (i == 0x10) {\n      return;\n    }\n  } while( true );\n}\n\n",
            "current_name": "update_flags_and_registers_08001264",
            "entrypoint": "0x08001264",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001264": "update_flags_and_registers_08001264",
                "iVar4": "index",
                "iVar8": "shift_amount",
                "param_1": "output_array",
                "param_2": "input_array",
                "uVar1": "new_value",
                "uVar2": "bit_mask",
                "uVar3": "value",
                "uVar5": "i",
                "uVar6": "bit_mask",
                "uVar7": "special_value",
                "unaff_r10": "target_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001424": {
            "additional_data": {
                "FUN_08001424": {
                    "set_param": 6,
                    "set_param_2": 2,
                    "set_param_value": 11,
                    "set_parameter": 3,
                    "set_parameter_value": 3,
                    "set_value_in_memory": 2,
                    "store_parameter_in_memory": 1,
                    "store_parameter_value": 1,
                    "store_shifted_value": 1,
                    "update_param": 1
                },
                "param_1": {
                    "address": 3,
                    "base_address": 18,
                    "data_address": 1,
                    "destination_address": 1,
                    "memory_address": 1,
                    "obj_ptr": 1,
                    "object_address": 2,
                    "param_address": 1,
                    "parameter_address": 1,
                    "target_address": 2
                },
                "param_2": {
                    "new_param_value": 1,
                    "new_value": 1,
                    "parameter_value": 1,
                    "shifted_value": 3,
                    "updated_value": 1,
                    "value": 21,
                    "value_shifted": 3
                },
                "param_3": {
                    "condition": 4,
                    "flag": 9,
                    "is_shift": 1,
                    "is_shifted": 10,
                    "is_zero": 1,
                    "shift": 1,
                    "shift_flag": 1,
                    "shift_value": 3,
                    "should_shift": 1
                },
                "param_address": {
                    "base_address": 1
                },
                "value": {
                    "new_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800458c",
                "FUN_08003f3c",
                "FUN_08004490"
            ],
            "code": "\nvoid set_param_value_08001424(int base_address,int value,int is_shifted)\n\n{\n  if (is_shifted == 0) {\n    value = value << 0x10;\n  }\n  *(int *)(base_address + 0x10) = value;\n  return;\n}\n\n",
            "current_name": "set_param_value_08001424",
            "entrypoint": "0x08001424",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001424": "set_param_value_08001424",
                "param_1": "base_address",
                "param_2": "value",
                "param_3": "is_shifted"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800142e": {
            "additional_data": {
                "0xc": {
                    "masked_value": 1,
                    "offset": 3
                },
                "FUN_0800142e": {
                    "apply_xo_rto_value": 1,
                    "apply_xor": 2,
                    "apply_xor_operation": 1,
                    "bitwise_xor": 1,
                    "bitwise_xor_with_param2": 1,
                    "bitwise_xor_with_uint": 1,
                    "combine_and_store": 2,
                    "combine_param_and_var": 1,
                    "combine_values": 1,
                    "modify_param_and_assign": 1,
                    "modify_parameter": 1,
                    "update_parameter_value": 1,
                    "update_xor_value": 2,
                    "xor_and_store": 2,
                    "xor_and_update": 1,
                    "xor_param_and_offset": 1,
                    "xor_param_with_pointer": 1,
                    "xor_param_with_variable": 2,
                    "xor_parameter": 1,
                    "xor_parameter_and_variable": 1,
                    "xor_parameters": 1,
                    "xor_params": 2,
                    "xor_values": 1,
                    "xor_with_param_and_store": 2
                },
                "param_1": {
                    "address": 3,
                    "array_base_address": 1,
                    "array_offset": 1,
                    "base_address": 9,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "input_addr": 1,
                    "input_address": 4,
                    "input_pointer": 2,
                    "input_ptr": 1,
                    "memory_location": 1,
                    "offset": 1,
                    "param": 1,
                    "param_ptr": 1,
                    "pointer": 1,
                    "target_address": 2
                },
                "param_2": {
                    "input_uint": 1,
                    "input_value": 2,
                    "new_data": 1,
                    "new_value": 3,
                    "operand": 1,
                    "param": 1,
                    "value": 11,
                    "value_to_combine": 1,
                    "value_to_xor": 3,
                    "xor_key": 1,
                    "xor_value": 6
                },
                "param_3": {
                    "combined_value": 1,
                    "ptr_to_value": 1,
                    "result": 1
                },
                "param_4": {
                    "mask": 1,
                    "result": 1
                },
                "param_5": {
                    "ptr_to_result": 1
                },
                "uint": {
                    "unsigned_int": 1,
                    "unsigned_integer": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004490"
            ],
            "code": "\nvoid xor_with_param_and_store_0800142e(int base_address,unsigned_integer value)\n\n{\n  *(unsigned_integer *)(base_address + 0xc) = value ^ *(unsigned_integer *)(base_address + 0xc);\n  return;\n}\n\n",
            "current_name": "xor_with_param_and_store_0800142e",
            "entrypoint": "0x0800142e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800142e": "xor_with_param_and_store_0800142e",
                "param_1": "base_address",
                "param_2": "value",
                "uint": "unsigned_integer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001436": {
            "additional_data": {
                "0x14": {
                    "flag": 1,
                    "flag_offset": 2
                },
                "0x20": {
                    "new_value": 1
                },
                "0x35": {
                    "character": 1,
                    "constant_value1": 1
                },
                "0x400": {
                    "bitmask": 1,
                    "flag_mask": 2
                },
                "0xd": {
                    "pointer_value": 1
                },
                "0xe": {
                    "error_code": 1,
                    "index": 1
                },
                "0xfffffbff": {
                    "clear_bitmask": 1,
                    "flag_clear_mask": 1
                },
                "1": {
                    "success": 1
                },
                "FUN_08001436": {
                    "check_and_modify_flag": 2,
                    "check_and_modify_flags": 1,
                    "check_and_modify_permissions": 1,
                    "check_flag": 5,
                    "check_flag_bit": 1,
                    "check_flag_permission": 1,
                    "check_flag_permissions": 1,
                    "check_flag_status": 5,
                    "check_flagged_status": 1,
                    "clear_flag": 3,
                    "clear_flag_and_set_values": 2,
                    "clear_flag_if_set": 1,
                    "update_flag": 1,
                    "update_flag_and_info": 1,
                    "update_flag_and_value": 1,
                    "update_flag_and_values": 1,
                    "update_flags": 2,
                    "update_permissions": 1
                },
                "PARAM_1_SIZE": {
                    "data_size": 1
                },
                "iVar1": {
                    "data_value": 1,
                    "element_value": 1,
                    "flag_value": 16,
                    "permission_value": 2,
                    "value": 11
                },
                "param_1": {
                    "data": 4,
                    "data_array": 1,
                    "data_pointer": 1,
                    "flag": 4,
                    "flag_address": 1,
                    "flag_pointer": 3,
                    "flag_ptr": 7,
                    "input": 2,
                    "input_arr": 1,
                    "input_array": 3,
                    "input_flag": 1,
                    "permissions": 2,
                    "pointer": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080014e2"
            ],
            "code": "\nundefined4 check_flag_status_08001436(int *flag_ptr)\n\n{\n  int flag_value;\n  \n  flag_value = *flag_ptr;\n  if ((*(uint *)(flag_value + 0x14) & 0x400) != 0) {\n    *(uint *)(flag_value + 0x14) = *(uint *)(flag_value + 0x14) & 0xfffffbff;\n    flag_ptr[0xe] = 4;\n    *(undefined *)((int)flag_ptr + 0x35) = 0x20;\n    *(undefined *)(flag_ptr + 0xd) = 0;\n    return 1;\n  }\n  return 0;\n}\n\n",
            "current_name": "check_flag_status_08001436",
            "entrypoint": "0x08001436",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001436": "check_flag_status_08001436",
                "iVar1": "flag_value",
                "param_1": "flag_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001460": {
            "additional_data": {
                "FUN_08001460": {
                    "check_and_modify_data": 1,
                    "check_and_modify_value": 1,
                    "check_and_set_flag": 1,
                    "check_and_update_data": 1,
                    "check_and_update_flags": 1,
                    "check_condition": 3,
                    "check_condition_and_update": 1,
                    "check_conditions": 4,
                    "check_conditions_and_handle": 1,
                    "check_data_validity": 2,
                    "check_flag_validity": 2,
                    "check_flags": 2,
                    "check_param_validity": 2,
                    "check_parameter": 2,
                    "check_parameter_validity": 1,
                    "check_parameters": 2,
                    "check_parameters_and_update": 1,
                    "check_status": 1,
                    "check_timed_condition": 1,
                    "verify_access": 1
                },
                "HAL_GetTick": {
                    "get_current_tick": 3,
                    "get_current_time": 5,
                    "get_tick_count": 1
                },
                "iVar1": {
                    "start_tick": 4,
                    "start_time": 27
                },
                "iVar2": {
                    "current_tick": 4,
                    "current_time": 27
                },
                "param_1": {
                    "data": 4,
                    "data_pointer": 1,
                    "data_pointer_array": 1,
                    "data_ptr": 4,
                    "flag_data": 1,
                    "flag_pointer": 1,
                    "input_array": 2,
                    "input_data": 2,
                    "input_params": 1,
                    "param_array": 3,
                    "param_list": 3,
                    "param_ptr": 1,
                    "parameter_array": 1,
                    "parameter_list": 1,
                    "parameters": 2,
                    "params": 1,
                    "pointer_array": 2
                },
                "param_2": {
                    "bit_mask": 1,
                    "condition": 3,
                    "flag": 19,
                    "flag_value": 2,
                    "flags": 1,
                    "mask_value": 1,
                    "param_value": 1,
                    "value": 1,
                    "value1": 1,
                    "value_1": 1
                },
                "param_3": {
                    "timeout": 29,
                    "value2": 1,
                    "value_2": 1
                },
                "puVar4": {
                    "array_ptr": 2,
                    "current_data": 1,
                    "current_param": 1,
                    "current_pointer": 2,
                    "data": 4,
                    "data_pointer": 3,
                    "data_ptr": 4,
                    "element_ptr": 1,
                    "flag_array": 2,
                    "pointer": 4,
                    "pointer_to_array": 1,
                    "pointer_to_data": 1,
                    "ptr": 3,
                    "ptr_data": 1,
                    "ptr_to_data": 1
                },
                "uVar3": {
                    "check_value": 3,
                    "comparison": 1,
                    "data": 1,
                    "data_value": 5,
                    "element_value": 1,
                    "flag_value": 1,
                    "mask": 1,
                    "target_flag": 1,
                    "threshold_value": 1,
                    "value": 14,
                    "value3": 1,
                    "value_3": 1
                }
            },
            "called": [
                "FUN_0800115c"
            ],
            "calling": [
                "FUN_08001530",
                "FUN_080015e8"
            ],
            "code": "\nundefined4 check_conditions_and_handle_08001460(uint **data_ptr,uint flag,uint timeout)\n\n{\n  int start_time;\n  int current_time;\n  uint value;\n  uint *data_ptr;\n  \n  start_time = get_current_time();\n  do {\n    data_ptr = *data_ptr;\n    if ((flag << 8) >> 0x18 == 1) {\n      value = data_ptr[5];\n    }\n    else {\n      value = data_ptr[6];\n    }\n    if ((flag & 0xffff & ~value) == 0) {\n      return 0;\n    }\n    if ((int)(data_ptr[5] << 0x15) < 0) {\n      *data_ptr = *data_ptr | 0x200;\n      data_ptr[5] = data_ptr[5] & 0xfffffbff;\n      data_ptr[0xe] = (uint *)0x4;\n      *(undefined *)((int)data_ptr + 0x35) = 0x20;\n      *(undefined *)(data_ptr + 0xd) = 0;\n      return 1;\n    }\n  } while ((timeout == 0xffffffff) ||\n          ((timeout != 0 && (current_time = get_current_time(), (uint)(current_time - start_time) <= timeout))));\n  *(undefined *)((int)data_ptr + 0x35) = 0x20;\n  *(undefined *)(data_ptr + 0xd) = 0;\n  return 3;\n}\n\n",
            "current_name": "check_conditions_and_handle_08001460",
            "entrypoint": "0x08001460",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001460": "check_conditions_and_handle_08001460",
                "HAL_GetTick": "get_current_time",
                "iVar1": "start_time",
                "iVar2": "current_time",
                "param_1": "data_ptr",
                "param_2": "flag",
                "param_3": "timeout",
                "puVar4": "data_ptr",
                "uVar3": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080014e2": {
            "additional_data": {
                "FREQUENCY_THRESHOLD": {
                    "frequency_threshold": 1
                },
                "FUN_0800115c": {
                    "get_system_tick": 2,
                    "get_tick": 1,
                    "get_tick_count": 1,
                    "hal_get_tick": 16,
                    "initialize_i2_c": 1
                },
                "FUN_08001436": {
                    "check_acknowledge_failed": 2,
                    "check_i2_c_acknowledge_failed": 1,
                    "i2_c_is_acknowledge_failed": 16,
                    "is_acknowledgement_failed": 1,
                    "is_i2c_acknowledge_failed": 1
                },
                "FUN_080014e2": {
                    "check_communication": 1,
                    "check_i2_c_acknowledge": 10,
                    "check_i2_c_acknowledgement": 2,
                    "check_i2_c_communication": 2,
                    "check_i2_c_response_time": 1,
                    "check_i2_c_status": 6,
                    "check_i2_c_timeout": 1,
                    "check_i2c_acknowledge": 1,
                    "check_timeout_and_acknowledge": 1,
                    "check_transmission": 1,
                    "check_transmission_validity": 1,
                    "poll_status": 1,
                    "process_i2_c_communication": 1,
                    "read_i2_c_data": 1,
                    "receive_data": 1
                },
                "HAL_GetTick": {
                    "get_current_tick": 1
                },
                "I2C_IsAcknowledgeFailed": {
                    "check_i2_c_acknowledge_failed": 1,
                    "is_acknowledge_failed": 1,
                    "is_i2_c_acknowledge_failed": 1
                },
                "iVar1": {
                    "current_tick": 1,
                    "start_tick": 4,
                    "start_ticks": 1,
                    "start_time": 24
                },
                "iVar2": {
                    "acknowledge_failed": 24,
                    "acknowledgement_failed": 1,
                    "is_acknowledge_failed": 5
                },
                "param_1": {
                    "communication_buffer": 1,
                    "data": 3,
                    "data_pointer": 1,
                    "device": 3,
                    "device_register": 1,
                    "i2c_address": 1,
                    "i2c_data": 4,
                    "i2c_device": 3,
                    "i2c_params": 7,
                    "i2c_pointer": 1,
                    "i2c_registers": 4,
                    "i2c_status": 1,
                    "transmission_array": 1
                },
                "param_2": {
                    "max_transmission_time": 1,
                    "timeout": 29,
                    "timeout_delay": 1
                }
            },
            "called": [
                "FUN_08001436",
                "FUN_0800115c"
            ],
            "calling": [
                "FUN_08001530",
                "FUN_08001828",
                "FUN_080015e8"
            ],
            "code": "\nundefined4 check_i2_c_acknowledge_080014e2(int *i2c_params,uint timeout)\n\n{\n  int start_time;\n  int acknowledge_failed;\n  \n  start_time = get_current_tick();\n  while( true ) {\n    if (*(int *)(*i2c_params + 0x14) << 0x18 < 0) {\n      return 0;\n    }\n    acknowledge_failed = is_i2_c_acknowledge_failed(i2c_params);\n    if (acknowledge_failed != 0) break;\n    if ((timeout != 0xffffffff) &&\n       ((timeout == 0 || (acknowledge_failed = get_current_tick(), timeout < (uint)(acknowledge_failed - start_time))))) {\n      i2c_params[0xe] = i2c_params[0xe] | 0x20;\n      *(undefined *)((int)i2c_params + 0x35) = 0x20;\n      *(undefined *)(i2c_params + 0xd) = 0;\n      return 3;\n    }\n  }\n  return 1;\n}\n\n",
            "current_name": "check_i2_c_acknowledge_080014e2",
            "entrypoint": "0x080014e2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080014e2": "check_i2_c_acknowledge_080014e2",
                "HAL_GetTick": "get_current_tick",
                "I2C_IsAcknowledgeFailed": "is_i2_c_acknowledge_failed",
                "iVar1": "start_time",
                "iVar2": "acknowledge_failed",
                "param_1": "i2c_params",
                "param_2": "timeout"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001530": {
            "additional_data": {
                "FUN_08001530": {
                    "configure_i2_c": 1,
                    "configure_i2_c_master": 1,
                    "handle_i2_c_transfer": 1,
                    "init_i2_c_peripheral": 1,
                    "initialize_and_send_data": 1,
                    "initialize_device": 1,
                    "initialize_i2_c": 3,
                    "initialize_i2c_device": 1,
                    "perform_i2_c_communication": 1,
                    "perform_i2_c_transaction": 2,
                    "perform_i2_c_transfer": 3,
                    "process_i2_c_communication": 1,
                    "process_i2_c_transaction": 1,
                    "set_and_send_data": 1,
                    "set_i2_c_config": 1,
                    "update_and_check_status": 1,
                    "update_and_process_data": 1,
                    "update_and_send_data": 1,
                    "update_device_configuration": 1,
                    "update_i2_c_config": 1,
                    "update_i2_c_device_settings": 1,
                    "update_register": 1,
                    "update_status_and_transmit_i2_c_data": 1
                },
                "HAL_GetTick": {
                    "get_tick": 1,
                    "get_time": 1
                },
                "I2C_WaitOnMasterAddressFlagUntilTimeout": {
                    "wait_for_master_address_flag": 2
                },
                "I2C_WaitOnTXEFlagUntilTimeout": {
                    "wait_for_txe_flag": 2
                },
                "LAB_080015ca": {
                    "transmit_i2_c_data": 1
                },
                "iVar1": {
                    "start_tick": 8,
                    "start_ticks": 1,
                    "start_time": 17,
                    "tick_start": 5
                },
                "iVar2": {
                    "current_tick": 10,
                    "current_ticks": 1,
                    "current_time": 16,
                    "tick_current": 2,
                    "tick_end": 1
                },
                "param_1": {
                    "data": 1,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "device": 2,
                    "device_config": 1,
                    "i2c_address": 1,
                    "i2c_config": 5,
                    "i2c_device": 3,
                    "i2c_device_ptr": 1,
                    "i2c_handle": 2,
                    "i2c_params": 1,
                    "i2c_peripheral": 1,
                    "i2c_port": 1,
                    "i2c_ptr": 2,
                    "input_array": 1,
                    "input_data": 1,
                    "parameter_list": 1,
                    "pointer_to_pointer": 1,
                    "register_ptr": 1,
                    "transaction": 2
                },
                "param_2": {
                    "address": 3,
                    "config_value1": 1,
                    "control_byte": 1,
                    "data": 1,
                    "data1": 1,
                    "device_addr": 1,
                    "device_address": 5,
                    "flag1": 1,
                    "i2c_data": 1,
                    "param1": 1,
                    "reg_address": 1,
                    "reg_value": 1,
                    "register": 1,
                    "size1": 1,
                    "slave_address": 3,
                    "start_value": 1,
                    "value1": 6,
                    "write_address": 1
                },
                "param_3": {
                    "command": 1,
                    "config_value2": 1,
                    "data": 7,
                    "data2": 1,
                    "data_byte": 1,
                    "end_value": 1,
                    "flag2": 1,
                    "i2c_register": 1,
                    "memory_address": 3,
                    "param2": 1,
                    "read_address": 1,
                    "register_addr": 1,
                    "register_address": 4,
                    "size2": 1,
                    "value2": 6
                },
                "param_4": {
                    "byte_count": 2,
                    "condition": 7,
                    "data_length": 1,
                    "data_size": 1,
                    "flag": 4,
                    "is_multi_byte": 1,
                    "is_read_operation": 1,
                    "is_single_byte": 1,
                    "length": 1,
                    "mode": 2,
                    "num_bytes": 3,
                    "param3": 1,
                    "reg_address": 1,
                    "reg_flag": 1,
                    "register_length": 1,
                    "size": 1,
                    "use_register_byte": 1,
                    "write_size": 1
                },
                "param_5": {
                    "param4": 1,
                    "timeout": 30
                },
                "ppuVar4": {
                    "base_data_pointer": 1,
                    "current_config_ptr": 1,
                    "current_data_ptr_ptr": 1,
                    "current_device_ptr": 1,
                    "current_i2_c_config_ptr": 1,
                    "current_i2_c_port": 1,
                    "data_ptr": 1,
                    "data_ptr_ptr": 1,
                    "i2c_address_pointer": 1,
                    "i2c_config_copy": 1,
                    "i2c_config_pointer": 1,
                    "i2c_config_ptr": 1,
                    "i2c_device_ptr": 3,
                    "i2c_device_ptr_ptr": 1,
                    "i2c_handle_ptr": 2,
                    "i2c_params_ptr": 1,
                    "i2c_peripheral_ptr": 1,
                    "i2c_ptr_ptr": 1,
                    "initial_i2_c_ptr": 1,
                    "pointer_to_pointer": 1,
                    "pointer_to_pointer_copy": 1,
                    "pp_device": 1,
                    "ptr_input_data": 1,
                    "ptr_ptr": 1,
                    "ptr_to_ptr": 1,
                    "register_ptr_ptr": 1,
                    "transaction_ptr": 2
                },
                "puVar3": {
                    "current_config": 2,
                    "current_data": 1,
                    "current_data_pointer": 1,
                    "current_data_ptr": 2,
                    "current_device": 2,
                    "current_i2_c": 1,
                    "current_i2_c_config": 1,
                    "current_i2_c_device": 3,
                    "current_i2_c_ptr": 2,
                    "current_i2_c_reg": 1,
                    "current_i2_c_register": 1,
                    "current_i2c": 1,
                    "current_i2c_device": 1,
                    "current_params": 1,
                    "current_pointer": 1,
                    "current_ptr": 2,
                    "current_register_ptr": 1,
                    "current_transaction": 3,
                    "i2c_data": 1,
                    "i2c_registers": 1,
                    "pointer": 1,
                    "ptr_data": 1
                },
                "uVar5": {
                    "address_byte": 1,
                    "address_copy": 2,
                    "control_byte_value": 1,
                    "data1_copy": 1,
                    "data_length": 1,
                    "device_address_copy": 4,
                    "device_address_lower_byte": 1,
                    "flag1_copy": 1,
                    "i2c_data_copy": 1,
                    "original_device_addr": 1,
                    "param1_copy": 1,
                    "param2_copy": 2,
                    "reg_value": 1,
                    "reg_value_copy": 1,
                    "register_value": 1,
                    "slave_addr_copy": 1,
                    "slave_address_temp": 1,
                    "start_value_copy": 1,
                    "temp_slave_address": 1,
                    "value1": 2,
                    "value1_copy": 3,
                    "var1": 1,
                    "write_reg": 1
                },
                "uVar6": {
                    "command_length": 1,
                    "data2_copy": 1,
                    "data_byte": 1,
                    "data_byte_value": 1,
                    "data_copy": 4,
                    "data_value": 2,
                    "end_value_copy": 1,
                    "flag2_copy": 1,
                    "i2c_register_copy": 1,
                    "mem_addr_copy": 1,
                    "memory_address_byte_count": 1,
                    "memory_address_copy": 1,
                    "original_register_addr": 1,
                    "param2_copy": 1,
                    "param3_copy": 2,
                    "read_reg": 1,
                    "register_address_copy": 2,
                    "register_address_temp": 1,
                    "temp_register_address": 1,
                    "value2": 2,
                    "value2_copy": 3,
                    "var2": 1
                }
            },
            "called": [
                "FUN_08001460",
                "FUN_080014e2",
                "FUN_0800115c"
            ],
            "calling": [
                "FUN_08001828"
            ],
            "code": "\nundefined4 perform_i2_c_communication_08001530(uint **i2c_config,uint value1,uint data,int condition,uint timeout)\n\n{\n  int start_time;\n  int current_time;\n  uint *current_transaction;\n  uint **i2c_device_ptr;\n  uint device_address_copy;\n  uint data_copy;\n  \n  **i2c_config = **i2c_config | 0x100;\n  i2c_device_ptr = i2c_config;\n  device_address_copy = value1;\n  data_copy = data;\n  start_time = get_tick();\n  do {\n    current_transaction = *i2c_config;\n    do {\n      if ((int)(current_transaction[5] << 0x1f) < 0) {\n        current_transaction[4] = value1 & 0xfe;\n        start_time = wait_for_master_address_flag\n                          (i2c_config,0x10002,timeout,current_transaction,i2c_device_ptr,device_address_copy,data_copy);\n        if (start_time == 0) {\n          start_time = wait_for_txe_flag(i2c_config,timeout,(*i2c_config)[5],(*i2c_config)[6]);\n          if (start_time == 0) {\n            current_transaction = *i2c_config;\n            if (condition == 1) {\ntransmit_i2_c_data:\n              current_transaction[4] = data & 0xff;\n              return 0;\n            }\n            current_transaction[4] = data >> 8;\n            start_time = wait_for_txe_flag(i2c_config,timeout);\n            if (start_time == 0) {\n              current_transaction = *i2c_config;\n              goto transmit_i2_c_data;\n            }\n          }\n          if (i2c_config[0xe] != (uint *)0x4) {\n            return 3;\n          }\n          **i2c_config = **i2c_config | 0x200;\n        }\n        else if (i2c_config[0xe] != (uint *)0x4) {\n          return 3;\n        }\n        return 1;\n      }\n    } while (timeout == 0xffffffff);\n    if ((timeout == 0) || (current_time = get_tick(), timeout < (uint)(current_time - start_time))) {\n      *(undefined *)((int)i2c_config + 0x35) = 0x20;\n      *(undefined *)(i2c_config + 0xd) = 0;\n      return 3;\n    }\n  } while( true );\n}\n\n",
            "current_name": "perform_i2_c_communication_08001530",
            "entrypoint": "0x08001530",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001530": "perform_i2_c_communication_08001530",
                "HAL_GetTick": "get_tick",
                "I2C_WaitOnMasterAddressFlagUntilTimeout": "wait_for_master_address_flag",
                "I2C_WaitOnTXEFlagUntilTimeout": "wait_for_txe_flag",
                "LAB_080015ca": "transmit_i2_c_data",
                "iVar1": "start_time",
                "iVar2": "current_time",
                "param_1": "i2c_config",
                "param_2": "value1",
                "param_3": "data",
                "param_4": "condition",
                "param_5": "timeout",
                "ppuVar4": "i2c_device_ptr",
                "puVar3": "current_transaction",
                "uVar5": "device_address_copy",
                "uVar6": "data_copy"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080015e8": {
            "additional_data": {
                "FUN_080015e8": {
                    "configure_i2_c_device": 1,
                    "i2c_write": 1,
                    "perform_i2_c_communication": 1,
                    "perform_i2_c_transaction": 3,
                    "perform_i2_c_transfer": 3,
                    "perform_i2_c_transmission": 1,
                    "process_i2_c_transfer": 1,
                    "send_data": 5,
                    "send_data_via_i2_c": 1,
                    "send_i2_c_data": 8,
                    "send_i2c_data": 2
                },
                "HAL_GetTick": {
                    "get_current_tick": 1,
                    "get_current_time": 1
                },
                "I2C_WaitOnMasterAddressFlagUntilTimeout": {
                    "wait_for_master_address_flag": 1,
                    "wait_on_master_addr_flag": 1
                },
                "I2C_WaitOnTXEFlagUntilTimeout": {
                    "wait_for_txe_flag": 1,
                    "wait_on_txe_flag": 1
                },
                "iVar1": {
                    "start_tick": 6,
                    "start_time": 24,
                    "tick_start": 1
                },
                "iVar2": {
                    "current_tick": 6,
                    "current_time": 24,
                    "tick_current": 1
                },
                "param_1": {
                    "data": 4,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "device_address": 1,
                    "i2c_data": 8,
                    "i2c_device": 9,
                    "i2c_transaction_object": 1,
                    "input_data": 2,
                    "input_ptr": 1,
                    "parameter1": 1,
                    "ptr_i2_c_handle": 1
                },
                "param_2": {
                    "address": 5,
                    "data": 1,
                    "dev_address": 1,
                    "device_address": 5,
                    "mem_addr": 1,
                    "parameter2": 1,
                    "reg_addr": 3,
                    "reg_address": 1,
                    "register": 1,
                    "register_address": 5,
                    "slave_address": 3,
                    "value": 1,
                    "value1": 2,
                    "value_1": 1
                },
                "param_3": {
                    "address": 2,
                    "data": 17,
                    "data_byte": 1,
                    "mem_address": 1,
                    "parameter3": 1,
                    "reg_address": 3,
                    "register_address": 1,
                    "value": 2,
                    "value2": 2,
                    "value_2": 1
                },
                "param_4": {
                    "byte_count": 1,
                    "condition": 1,
                    "data_size": 2,
                    "flag": 4,
                    "is10_bit_addr": 1,
                    "is10bit_address_mode": 1,
                    "is_16bit_data": 1,
                    "is_multiple_bytes": 1,
                    "is_read_operation": 1,
                    "is_reg_address16_bit": 1,
                    "is_single_byte": 1,
                    "is_single_byte_addr": 1,
                    "is_ten_bit_addr": 1,
                    "length": 1,
                    "mem_address_size": 1,
                    "mode": 1,
                    "num_bytes": 3,
                    "parameter4": 1,
                    "prefix": 1,
                    "reg_size": 1,
                    "register_address_size": 1,
                    "size": 1,
                    "stop_condition": 1,
                    "tx_bytes": 1,
                    "wait_until_complete": 1
                },
                "param_5": {
                    "parameter5": 1,
                    "timeout": 30
                },
                "ppuVar4": {
                    "current_data_ptr": 1,
                    "current_device_ptr": 1,
                    "data_pointer_ptr": 1,
                    "data_ptr_ptr": 1,
                    "device_address": 1,
                    "device_ptr_ptr": 2,
                    "i2c_data": 1,
                    "i2c_data_double_ptr": 1,
                    "i2c_data_ptr": 4,
                    "i2c_data_ptr_ptr": 2,
                    "i2c_device_ptr": 6,
                    "i2c_transaction_object_ptr": 1,
                    "pointer2": 1,
                    "pointer_pointer": 1,
                    "ptr_ptr": 2,
                    "ptr_ptr_data": 3,
                    "ptr_ptr_i2_c_handle": 1,
                    "ptr_to_i2_c_device": 1
                },
                "puVar3": {
                    "current_data": 1,
                    "current_device": 1,
                    "data_buffer": 1,
                    "data_ptr": 2,
                    "device": 2,
                    "device_ptr": 1,
                    "device_register": 1,
                    "device_status": 2,
                    "i2c_data": 1,
                    "i2c_data_ptr": 3,
                    "i2c_ptr": 1,
                    "i2c_reg": 4,
                    "i2c_registers": 1,
                    "i2c_status": 1,
                    "pointer": 1,
                    "pointer1": 1,
                    "ptr": 2,
                    "ptr_data": 3,
                    "ptr_i2_c_state": 1,
                    "reg_value": 1
                },
                "uVar5": {
                    "addr": 1,
                    "addr_bits": 1,
                    "addr_nack": 1,
                    "addr_set": 1,
                    "address": 1,
                    "address_mask": 1,
                    "data": 1,
                    "data_length": 1,
                    "data_upper_byte": 1,
                    "dev_address_masked": 1,
                    "device_address_masked": 1,
                    "device_address_temp": 1,
                    "new_address": 1,
                    "reg_addr_masked": 1,
                    "reg_addr_temp": 2,
                    "reg_address_copy": 1,
                    "reg_data": 1,
                    "reg_val": 1,
                    "register_address": 1,
                    "register_address_temp": 1,
                    "register_value": 2,
                    "temp_register_address": 2,
                    "temp_value1": 2,
                    "transmitted_bytes": 1,
                    "value_copy": 1,
                    "var5": 1,
                    "var_1": 1
                },
                "uVar6": {
                    "address_copy": 1,
                    "data": 1,
                    "data_bits": 1,
                    "data_copy": 1,
                    "data_lower_byte": 1,
                    "data_mask": 1,
                    "data_masked": 1,
                    "data_nack": 1,
                    "data_set": 1,
                    "data_size": 1,
                    "data_temp": 3,
                    "data_value": 2,
                    "i2c_data": 1,
                    "mem_address_masked": 1,
                    "new_data": 1,
                    "reg_address": 1,
                    "reg_address_masked": 1,
                    "register_address_temp": 1,
                    "register_value": 1,
                    "remaining_bytes": 1,
                    "temp_data": 2,
                    "temp_value2": 2,
                    "val": 2,
                    "var6": 1,
                    "var_2": 1
                }
            },
            "called": [
                "FUN_08001460",
                "FUN_080014e2",
                "FUN_0800115c"
            ],
            "calling": [
                "FUN_08001938"
            ],
            "code": "\nundefined4 send_data_via_i2_c_080015e8(uint **i2c_device,uint register_address,uint data,int flag,uint timeout)\n\n{\n  int start_time;\n  int current_time;\n  uint *i2c_reg;\n  uint **i2c_device_ptr;\n  uint temp_register_address;\n  uint data_temp;\n  \n  i2c_reg = *i2c_device;\n  *i2c_reg = *i2c_reg | 0x400;\n  *i2c_reg = *i2c_reg | 0x100;\n  i2c_device_ptr = i2c_device;\n  temp_register_address = register_address;\n  data_temp = data;\n  start_time = get_current_tick();\nLAB_0800160e:\n  i2c_reg = *i2c_device;\n  while (-1 < (int)(i2c_reg[5] << 0x1f)) {\n    if (timeout != 0xffffffff) goto code_r0x08001658;\n  }\n  i2c_reg[4] = register_address & 0xfe;\n  start_time = wait_on_master_addr_flag\n                    (i2c_device,0x10002,timeout,i2c_reg,i2c_device_ptr,temp_register_address,data_temp);\n  if (start_time != 0) goto LAB_080016ba;\n  start_time = wait_for_txe_flag(i2c_device,timeout,(*i2c_device)[5],(*i2c_device)[6]);\n  if (start_time == 0) {\n    i2c_reg = *i2c_device;\n    if (flag != 1) {\n      i2c_reg[4] = data >> 8;\n      start_time = wait_for_txe_flag(i2c_device,timeout);\n      if (start_time != 0) goto LAB_08001642;\n      i2c_reg = *i2c_device;\n    }\n    i2c_reg[4] = data & 0xff;\n    start_time = wait_for_txe_flag(i2c_device,timeout);\n    if (start_time == 0) {\n      **i2c_device = **i2c_device | 0x100;\n      start_time = get_current_tick();\n      do {\n        do {\n          if ((int)((*i2c_device)[5] << 0x1f) < 0) {\n            (*i2c_device)[4] = register_address & 0xff | 1;\n            start_time = wait_on_master_addr_flag(i2c_device,0x10002,timeout);\n            if (start_time == 0) {\n              return 0;\n            }\nLAB_080016ba:\n            if (i2c_device[0xe] != (uint *)0x4) {\n              return 3;\n            }\n            return 1;\n          }\n        } while (timeout == 0xffffffff);\n      } while ((timeout != 0) && (current_time = get_current_tick(), (uint)(current_time - start_time) <= timeout));\nLAB_0800165a:\n      *(undefined *)((int)i2c_device + 0x35) = 0x20;\n      *(undefined *)(i2c_device + 0xd) = 0;\n      return 3;\n    }\n  }\nLAB_08001642:\n  if (i2c_device[0xe] == (uint *)0x4) {\n    **i2c_device = **i2c_device | 0x200;\n    return 1;\n  }\n  return 3;\ncode_r0x08001658:\n  if ((timeout == 0) || (current_time = get_current_tick(), timeout < (uint)(current_time - start_time))) goto LAB_0800165a;\n  goto LAB_0800160e;\n}\n\n",
            "current_name": "send_data_via_i2_c_080015e8",
            "entrypoint": "0x080015e8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080015e8": "send_data_via_i2_c_080015e8",
                "HAL_GetTick": "get_current_tick",
                "I2C_WaitOnMasterAddressFlagUntilTimeout": "wait_on_master_addr_flag",
                "I2C_WaitOnTXEFlagUntilTimeout": "wait_for_txe_flag",
                "iVar1": "start_time",
                "iVar2": "current_time",
                "param_1": "i2c_device",
                "param_2": "register_address",
                "param_3": "data",
                "param_4": "flag",
                "param_5": "timeout",
                "ppuVar4": "i2c_device_ptr",
                "puVar3": "i2c_reg",
                "uVar5": "temp_register_address",
                "uVar6": "data_temp"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080016f4": {
            "additional_data": {
                "FUN_0800115c": {
                    "check_status": 1,
                    "get_flag_status": 1,
                    "get_status": 1,
                    "get_tick": 1,
                    "handle_device_error": 1,
                    "initialize": 2,
                    "initialize_data": 1,
                    "initialize_device": 3
                },
                "FUN_080016f4": {
                    "check_and_reset_flag": 1,
                    "check_communication_status": 1,
                    "check_condition_and_update": 1,
                    "check_for_timeout": 1,
                    "check_if_timeout_expired": 1,
                    "check_input_status": 1,
                    "check_status": 1,
                    "check_termination_condition": 1,
                    "check_time_and_status": 2,
                    "check_timeout": 13,
                    "check_timeout_and_process": 1,
                    "check_timeout_and_set_flag": 2,
                    "check_timeout_and_set_flags": 1,
                    "check_timeout_and_status": 1,
                    "check_transmission_status": 1,
                    "handle_timeout": 1,
                    "process_data": 1
                },
                "HAL_GetTick": {
                    "get_current_time": 6,
                    "get_tick_count": 1
                },
                "iVar1": {
                    "start_tick": 4,
                    "start_tick_count": 1,
                    "start_ticks": 1,
                    "start_time": 24,
                    "starting_time": 1
                },
                "iVar2": {
                    "current_data": 8,
                    "current_device": 1,
                    "current_device_address": 1,
                    "current_element": 3,
                    "current_input": 1,
                    "current_item": 3,
                    "current_status_data": 1,
                    "current_ticks": 1,
                    "current_transmission": 1,
                    "current_value": 6,
                    "current_var": 2,
                    "data_value": 1,
                    "element": 1,
                    "element_address": 1
                },
                "param_1": {
                    "array": 2,
                    "data": 14,
                    "data_array": 1,
                    "data_ptr": 4,
                    "data_structure": 1,
                    "device": 1,
                    "device_data": 1,
                    "input_array": 2,
                    "input_data": 1,
                    "pointer": 1,
                    "pointer_array": 1,
                    "status_data": 1,
                    "transmission_buffer": 1
                },
                "param_2": {
                    "threshold": 1,
                    "time_limit": 1,
                    "timeout": 28,
                    "timeout_threshold": 1
                }
            },
            "called": [
                "FUN_0800115c"
            ],
            "calling": [
                "FUN_08001938"
            ],
            "code": "\nundefined4 check_timeout_and_set_flag_080016f4(int *data,uint timeout)\n\n{\n  int start_time;\n  int current_data;\n  \n  start_time = get_current_time();\n  while( true ) {\n    current_data = *data;\n    if ((*(uint *)(current_data + 0x14) & 0x40) != 0) {\n      return 0;\n    }\n    if (*(int *)(current_data + 0x14) << 0x1b < 0) break;\n    if ((timeout == 0) || (current_data = get_current_time(), timeout < (uint)(current_data - start_time))) {\n      data[0xe] = data[0xe] | 0x20;\n      *(undefined *)((int)data + 0x35) = 0x20;\n      *(undefined *)(data + 0xd) = 0;\n      return 3;\n    }\n  }\n  *(uint *)(current_data + 0x14) = *(uint *)(current_data + 0x14) & 0xffffffef;\n  data[0xe] = 0;\n  *(undefined *)(data + 0xd) = 0;\n  *(undefined *)((int)data + 0x35) = 0x20;\n  return 1;\n}\n\n",
            "current_name": "check_timeout_and_set_flag_080016f4",
            "entrypoint": "0x080016f4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080016f4": "check_timeout_and_set_flag_080016f4",
                "HAL_GetTick": "get_current_time",
                "iVar1": "start_time",
                "iVar2": "current_data",
                "param_1": "data",
                "param_2": "timeout"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001754": {
            "additional_data": {
                "0": {
                    "constant_value5": 1,
                    "new_value2": 1
                },
                "0x0": {
                    "null_pointer": 1
                },
                "0x186a0": {
                    "i2c_limit": 1
                },
                "0x186a1": {
                    "another_limit": 1
                },
                "0x19": {
                    "divider4": 1
                },
                "0x20": {
                    "flag_value2": 1,
                    "new_value1": 1
                },
                "0x24": {
                    "flag_value": 1,
                    "initialized_value": 1
                },
                "0x35": {
                    "is_initialized": 1
                },
                "0x36": {
                    "new_value3": 1
                },
                "0x8000": {
                    "constant_value2": 1,
                    "special_value1": 1
                },
                "0xc000": {
                    "constant_value3": 1,
                    "special_value2": 1
                },
                "0xfff": {
                    "bit_mask1": 1,
                    "constant_value": 1
                },
                "0xfffffffe": {
                    "and_mask": 1,
                    "bit_mask": 1
                },
                "1": {
                    "constant_value4": 1,
                    "minimum_value": 1
                },
                "1000": {
                    "divider2": 1
                },
                "1000000": {
                    "divider1": 1
                },
                "3": {
                    "divider3": 1
                },
                "300": {
                    "default_limit": 1
                },
                "4": {
                    "minimum_bit_value": 1
                },
                "FUN_08001754": {
                    "configure_i2_c": 3,
                    "init_i2_c": 2,
                    "initialize_i2_c": 21,
                    "initialize_i2_c_device": 1,
                    "initialize_i2_c_hardware": 1,
                    "initialize_i2_c_parameters": 1,
                    "initialize_i2_c_peripheral": 2
                },
                "FUN_08002220": {
                    "check_condition": 1,
                    "func1": 1,
                    "get_pclk1_freq": 3,
                    "some_sub_function": 1
                },
                "FUN_08004d48": {
                    "another_sub_function": 1,
                    "calculate_divisor": 1,
                    "func2": 1,
                    "handle_divisor": 1,
                    "initialize_i2_c_parameters": 1,
                    "update_config": 1
                },
                "HAL_I2C_MspInit": {
                    "initialize_i2_c": 4,
                    "initialize_i2_c_hardware": 6,
                    "initialize_i2_c_periph": 6,
                    "initialize_i2_c_peripheral": 5,
                    "initialize_i2_c_pins": 4,
                    "initialize_i2_crcc": 1
                },
                "HAL_RCC_GetPCLK1Freq": {
                    "get_apb1_clock_frequency": 1,
                    "get_pclk1_freq": 3,
                    "get_pclk1_frequency": 10,
                    "get_peripheral_clock_frequency": 1
                },
                "param_1": {
                    "config": 2,
                    "config_params": 4,
                    "data": 1,
                    "device": 1,
                    "i2c_config": 3,
                    "i2c_handle": 1,
                    "i2c_params": 7,
                    "i2c_pointer": 2,
                    "i2c_ptr": 1,
                    "i2c_settings": 2,
                    "param": 1,
                    "parameters": 3,
                    "params": 1,
                    "peripheral_data": 1
                },
                "ptr_param_1": {
                    "params": 1
                },
                "puVar1": {
                    "i2c_param1_deref_divided": 1
                },
                "puVar3": {
                    "config": 1,
                    "config_array": 1,
                    "config_base": 1,
                    "config_data": 1,
                    "config_param_ptr": 1,
                    "config_ptr": 2,
                    "config_value_array": 1,
                    "device_config": 1,
                    "device_ptr": 1,
                    "i2c_config_params": 1,
                    "i2c_config_ptr": 1,
                    "i2c_handle_ptr": 1,
                    "i2c_param1": 3,
                    "i2c_pointer1": 1,
                    "i2c_pointer_content": 1,
                    "i2c_reg": 1,
                    "i2c_reg_ptr": 1,
                    "i2c_register": 1,
                    "i2c_settings_ptr": 1,
                    "param": 1,
                    "param1": 2,
                    "param1_ptr": 1,
                    "param_ptr": 1,
                    "peripheral_pointer": 1,
                    "ptr1": 1,
                    "ptr_u_var3": 1,
                    "settings": 1
                },
                "puVar4": {
                    "buffer_size": 1,
                    "config_data2": 1,
                    "config_ptr1": 1,
                    "data_reg": 1,
                    "i2c_config_ptr": 1,
                    "i2c_param2": 3,
                    "i2c_params1": 1,
                    "i2c_pointer2": 1,
                    "limit": 1,
                    "max_config": 1,
                    "param1": 1,
                    "param1_index1": 1,
                    "param1_ptr": 2,
                    "param1_ptr1": 1,
                    "param2": 2,
                    "param_1_1": 1,
                    "pclk_config_array": 1,
                    "ptr1": 1,
                    "ptr2": 1,
                    "ptr_u_var4": 1,
                    "pu_var4": 4,
                    "size_threshold": 1,
                    "threshold": 1,
                    "var1": 1
                },
                "puVar5": {
                    "clock_parameters": 1,
                    "clock_source": 1,
                    "config_data3": 1,
                    "config_flags_or_regs": 1,
                    "config_ptr2": 1,
                    "ctrl_reg": 1,
                    "divider": 1,
                    "i2c_config_params7": 1,
                    "i2c_config_pointer": 1,
                    "i2c_config_ptr2": 1,
                    "i2c_param3": 3,
                    "i2c_params2": 1,
                    "i2c_pointer3": 1,
                    "param1_index7": 1,
                    "param1_ptr7": 1,
                    "param2": 1,
                    "param2_ptr": 1,
                    "param3": 2,
                    "param8": 1,
                    "param_1_7": 1,
                    "param_id_ptr": 1,
                    "ptr2": 1,
                    "ptr3": 1,
                    "ptr_u_var5": 1,
                    "pu_var5": 2,
                    "value5_array": 1,
                    "var2": 1
                },
                "uVar1": {
                    "i2c_param1_divided": 1,
                    "pclk1": 1,
                    "pclk1_freq": 1,
                    "pclk1_freq_low": 17,
                    "pclk1_freq_lower": 3,
                    "pclk1_frequency_lo": 1,
                    "pclk1_frequency_low": 3,
                    "pclk1_frequency_lower": 1,
                    "pclk1_low": 1,
                    "pclk_freq_low": 2
                },
                "uVar2": {
                    "pclk1_freq_high": 17,
                    "pclk1_freq_upper": 4,
                    "pclk1_frequency_hi": 1,
                    "pclk1_frequency_high": 3,
                    "pclk1_frequency_higher": 1,
                    "pclk1_high": 1,
                    "pclk1_high32_bits": 1,
                    "pclk1_upper": 1,
                    "pclk_freq_high": 2
                },
                "uVar6": {
                    "clock_divider": 2,
                    "div": 1,
                    "divider": 1,
                    "divisor": 3,
                    "freq_divisor": 1,
                    "frequency": 1,
                    "frequency_divisor": 2,
                    "pclk1_divided": 1,
                    "pclk1_divisor": 1,
                    "pclk1_freq_div": 1,
                    "pclk1_freq_divided": 2,
                    "pclk1_freq_divided_by_million": 1,
                    "pclk1_freq_in_m_hz": 3,
                    "pclk1_freq_m_hz": 1,
                    "pclk1_frequency_divided": 1,
                    "pclk1_frequency_in_m_hz": 1,
                    "pclk1_mhz": 1,
                    "scaled_freq": 1,
                    "u_var6": 4,
                    "uart_divisor": 1,
                    "us_div": 1
                },
                "uVar7": {
                    "clock_freq": 1,
                    "pclk1_freq": 21,
                    "pclk1_freq64bit": 1,
                    "pclk1_frequency": 3,
                    "pclk1_frequency_upper": 1,
                    "pclk_freq": 4
                }
            },
            "called": [
                "FUN_08002220",
                "FUN_08004d48"
            ],
            "calling": [
                "FUN_0800458c"
            ],
            "code": "\nundefined4 initialize_i2_c_peripheral_08001754(uint **i2c_params)\n\n{\n  uint pclk1_freq_low;\n  uint pclk1_freq_high;\n  uint *i2c_param1;\n  uint *pu_var4;\n  uint *i2c_param3;\n  uint u_var6;\n  undefined8 pclk1_freq;\n  \n  if (i2c_params != (uint **)0x0) {\n    if (*(char *)((int)i2c_params + 0x35) == '\\0') {\n      *(undefined *)(i2c_params + 0xd) = 0;\n      initialize_i2_c_periph();\n    }\n    *(undefined *)((int)i2c_params + 0x35) = 0x24;\n    **i2c_params = **i2c_params & 0xfffffffe;\n    pclk1_freq = get_pclk1_frequency();\n    pclk1_freq_high = (uint)((ulonglong)pclk1_freq >> 0x20);\n    pclk1_freq_low = (uint)pclk1_freq;\n    pu_var4 = i2c_params[1];\n    u_var6 = pclk1_freq_low / 1000000;\n    if ((uint *)0x186a0 < pu_var4) {\n      pclk1_freq_high = 300;\n    }\n    i2c_param1 = *i2c_params;\n    if ((uint *)0x186a0 < pu_var4) {\n      pclk1_freq_high = u_var6 * pclk1_freq_high;\n    }\n    i2c_param1[1] = u_var6;\n    if ((uint *)0x186a0 < pu_var4) {\n      u_var6 = pclk1_freq_high / 1000;\n    }\n    i2c_param1[8] = u_var6 + 1;\n    if (pu_var4 < (uint *)0x186a1) {\n      pclk1_freq_low = pclk1_freq_low / (uint)((int)pu_var4 << 1);\n      if ((pclk1_freq_low & 0xfff) < 4) {\n        pclk1_freq_low = 4;\n      }\n    }\n    else {\n      if (i2c_params[2] == (uint *)0x0) {\n        pclk1_freq_low = pclk1_freq_low / (uint)((int)pu_var4 * 3) | 0x8000;\n      }\n      else {\n        pclk1_freq_low = pclk1_freq_low / (uint)((int)pu_var4 * 0x19) | 0xc000;\n      }\n      if ((pclk1_freq_low & 0xfff) == 0) {\n        pclk1_freq_low = 1;\n      }\n    }\n    pu_var4 = i2c_params[8];\n    i2c_param3 = i2c_params[7];\n    i2c_param1[7] = pclk1_freq_low;\n    *i2c_param1 = (uint)i2c_param3 | (uint)pu_var4;\n    i2c_param1[2] = (uint)i2c_params[4] | (uint)i2c_params[3];\n    i2c_param1[3] = (uint)i2c_params[5] | (uint)i2c_params[6];\n    *i2c_param1 = *i2c_param1 | 1;\n    i2c_params[0xe] = (uint *)0x0;\n    *(undefined *)((int)i2c_params + 0x35) = 0x20;\n    *(undefined *)((int)i2c_params + 0x36) = 0;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "initialize_i2_c_peripheral_08001754",
            "entrypoint": "0x08001754",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001754": "initialize_i2_c_peripheral_08001754",
                "HAL_I2C_MspInit": "initialize_i2_c_periph",
                "HAL_RCC_GetPCLK1Freq": "get_pclk1_frequency",
                "param_1": "i2c_params",
                "puVar3": "i2c_param1",
                "puVar4": "pu_var4",
                "puVar5": "i2c_param3",
                "uVar1": "pclk1_freq_low",
                "uVar2": "pclk1_freq_high",
                "uVar6": "u_var6",
                "uVar7": "pclk1_freq"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001828": {
            "additional_data": {
                "FUN_0800115c": {
                    "hal_get_tick": 1,
                    "sub_function3": 1
                },
                "FUN_080014e2": {
                    "i2_c_wait_on_txe_flag_until_timeout": 1,
                    "sub_function2": 1
                },
                "FUN_08001530": {
                    "i2_c_request_memory_write": 1,
                    "sub_function1": 1
                },
                "FUN_08001828": {
                    "handle_i2_c_transfer": 1,
                    "perform_i2_c_communication": 1,
                    "perform_i2_c_request": 1,
                    "perform_i2_c_transaction": 2,
                    "perform_i2_c_transfer": 2,
                    "perform_i2_c_transmission": 1,
                    "perform_i2_c_write": 5,
                    "perform_i2_c_write_operation": 3,
                    "process_data": 3,
                    "send_data": 6,
                    "send_data_over_i2_c": 1,
                    "send_i2_c_data": 1,
                    "transfer_data": 1,
                    "write_data_to_i2_c_memory": 1
                },
                "HAL_GetTick": {
                    "get_current_tick": 1,
                    "get_current_time": 1,
                    "get_ticks": 1
                },
                "I2C_RequestMemoryWrite": {
                    "request_memory_write": 14,
                    "request_write": 1,
                    "write_data_to_i2_c": 1
                },
                "I2C_WaitOnTXEFlagUntilTimeout": {
                    "wait_for_txe_flag": 1,
                    "wait_for_txe_flag_until_timeout": 2,
                    "wait_on_flag": 1,
                    "wait_on_txe_flag": 1,
                    "wait_on_txe_flag_until_timeout": 11
                },
                "iVar1": {
                    "current_time": 1,
                    "start_tick": 6,
                    "start_ticks": 1,
                    "start_time": 23
                },
                "iVar2": {
                    "cur_time": 1,
                    "current_tick": 6,
                    "current_ticks": 1,
                    "current_time": 21,
                    "end_time": 1,
                    "new_time": 1
                },
                "param_1": {
                    "buffer": 1,
                    "data": 10,
                    "data_ptr": 1,
                    "device": 1,
                    "device_info": 1,
                    "i2c_buffer": 1,
                    "i2c_data": 6,
                    "i2c_device": 2,
                    "i2c_handle": 1,
                    "i2c_params": 1,
                    "input_pointer": 1,
                    "param_array": 1,
                    "parameter_array": 1,
                    "transaction_data": 2,
                    "transfer_params": 1
                },
                "param_2": {
                    "addr": 3,
                    "address": 9,
                    "arg1": 1,
                    "device_address": 2,
                    "mem_addr1": 1,
                    "param1": 3,
                    "param2": 3,
                    "reg_address": 1,
                    "register_address": 1,
                    "val1": 1,
                    "val2": 1,
                    "value1": 4,
                    "value_2": 1
                },
                "param_3": {
                    "arg2": 1,
                    "data": 1,
                    "data1": 2,
                    "mem_addr2": 1,
                    "memory_address": 2,
                    "param2": 3,
                    "param3": 3,
                    "reg": 6,
                    "reg_address": 1,
                    "register_address": 1,
                    "subaddr": 1,
                    "subaddress": 1,
                    "val2": 1,
                    "val3": 1,
                    "value": 1,
                    "value2": 4,
                    "value_3": 1
                },
                "param_4": {
                    "addrlen": 1,
                    "arg3": 1,
                    "data": 1,
                    "data2": 2,
                    "data_size": 1,
                    "len": 1,
                    "mem": 1,
                    "mem_addr3": 1,
                    "mem_address": 1,
                    "memory_address_size": 1,
                    "memory_size": 1,
                    "param3": 3,
                    "param4": 3,
                    "reg_byte": 1,
                    "reg_size": 2,
                    "register_size": 1,
                    "size": 1,
                    "subaddress_size": 1,
                    "val3": 1,
                    "val4": 1,
                    "value3": 4,
                    "value_4": 1
                },
                "param_5": {
                    "buffer": 13,
                    "bytes": 1,
                    "data": 13,
                    "data_array": 1,
                    "data_buffer": 2,
                    "data_pointer": 1
                },
                "param_6": {
                    "array_length": 1,
                    "buffer_size": 8,
                    "count": 1,
                    "data_len": 2,
                    "data_length": 3,
                    "data_size": 7,
                    "datalen": 1,
                    "length": 6,
                    "size": 2
                },
                "param_7": {
                    "arg4": 1,
                    "param4": 3,
                    "param7": 2,
                    "timeout": 23,
                    "val7": 1,
                    "value_7": 1
                },
                "puVar3": {
                    "current_data": 1,
                    "current_item": 1,
                    "data_pointer": 1,
                    "device": 2,
                    "device_ptr": 1,
                    "i2c_data": 3,
                    "i2c_data_ptr": 2,
                    "i2c_pointer": 1,
                    "i2c_ptr": 3,
                    "p_i2_c": 1,
                    "pointer_value": 1,
                    "ptr": 12,
                    "transaction": 1,
                    "transfer_buffer": 1
                },
                "uVar4": {
                    "data_value": 1,
                    "i2c_config": 1,
                    "item_value": 1,
                    "original_data": 1,
                    "status": 1,
                    "temp": 5,
                    "temp_value": 5,
                    "temp_var": 2,
                    "tmp_data": 1,
                    "tmp_value": 1,
                    "val": 1,
                    "value": 10,
                    "var": 1
                }
            },
            "called": [
                "FUN_08001530",
                "FUN_080014e2",
                "FUN_0800115c"
            ],
            "calling": [
                "FUN_0800403c"
            ],
            "code": "\nundefined4\nperform_i2_c_communication_08001828(uint **data,undefined4 address,undefined4 reg,undefined4 value3,byte *data,\n            short buffer_size,undefined4 timeout)\n\n{\n  int start_time;\n  int current_time;\n  uint *ptr;\n  uint value;\n  \n  if (*(char *)((int)data + 0x35) == ' ') {\n    if (data == (byte *)0x0) {\n      return 1;\n    }\n    if (buffer_size == 0) {\n      return 1;\n    }\n    start_time = get_current_tick();\n    do {\n      ptr = *data;\n      if ((~ptr[6] & 2) != 0) {\n        if (*(char *)(data + 0xd) == '\\x01') {\n          return 2;\n        }\n        value = *ptr;\n        *(undefined *)(data + 0xd) = 1;\n        *ptr = value & 0xfffff7ff;\n        *(undefined *)((int)data + 0x35) = 0x21;\n        *(undefined *)((int)data + 0x36) = 0x40;\n        data[0xe] = (uint *)0x0;\n        start_time = request_memory_write(data,address,reg,value3,timeout);\n        if (start_time != 0) {\n          *(undefined *)(data + 0xd) = 0;\n          if (data[0xe] == (uint *)0x4) {\n            return 1;\n          }\n          return 3;\n        }\n        goto LAB_080018e2;\n      }\n      current_time = get_current_tick();\n    } while ((uint)(current_time - start_time) < 0x2711);\n    *(undefined *)(data + 0xd) = 0;\n    *(undefined *)((int)data + 0x35) = 0x20;\n  }\n  return 2;\n  while (buffer_size != 0) {\nLAB_080018e2:\n    start_time = wait_on_txe_flag_until_timeout(data,timeout);\n    if (start_time != 0) goto LAB_080018ee;\n    ptr = *data;\n    ptr[4] = (uint)*data;\n    if ((int)(ptr[5] << 0x1d) < 0) {\n      if ((short)(buffer_size + -1) == 0) break;\n      buffer_size = buffer_size + -2;\n      ptr[4] = (uint)data[1];\n      data = data + 2;\n    }\n    else {\n      data = data + 1;\n      buffer_size = buffer_size + -1;\n    }\n  }\n  start_time = wait_on_txe_flag_until_timeout(data,timeout);\n  if (start_time == 0) {\n    **data = **data | 0x200;\n    *(undefined *)(data + 0xd) = 0;\n    *(undefined *)((int)data + 0x35) = 0x20;\n    *(undefined *)((int)data + 0x36) = 0;\n    return 0;\n  }\nLAB_080018ee:\n  if (data[0xe] == (uint *)0x4) {\n    **data = **data | 0x200;\n    return 1;\n  }\n  return 3;\n}\n\n",
            "current_name": "perform_i2_c_communication_08001828",
            "entrypoint": "0x08001828",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001828": "perform_i2_c_communication_08001828",
                "HAL_GetTick": "get_current_tick",
                "I2C_RequestMemoryWrite": "request_memory_write",
                "I2C_WaitOnTXEFlagUntilTimeout": "wait_on_txe_flag_until_timeout",
                "iVar1": "start_time",
                "iVar2": "current_time",
                "param_1": "data",
                "param_2": "address",
                "param_3": "reg",
                "param_4": "value3",
                "param_5": "data",
                "param_6": "buffer_size",
                "param_7": "timeout",
                "puVar3": "ptr",
                "uVar4": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001938": {
            "additional_data": {
                "FRE_ReadMemory": {
                    "read_sensor_data": 1
                },
                "FUN_08001938": {
                    "perform_data_transfer": 1,
                    "perform_i2_c_action": 1,
                    "perform_i2_c_communication": 4,
                    "perform_i2_c_operation": 1,
                    "perform_i2_c_read": 3,
                    "perform_i2_c_read_operation": 2,
                    "perform_i2_c_read_write": 1,
                    "perform_i2_c_transfer": 1,
                    "perform_memory_read": 1,
                    "process_data": 2,
                    "read_and_process_data": 4,
                    "read_from_i2_c": 1,
                    "read_i2_c_data": 1,
                    "read_i2_c_memory": 2
                },
                "HAL_GetTICK": {
                    "get_tick_count": 1
                },
                "HAL_GetTick": {
                    "get_current_tick": 1,
                    "get_current_time": 2,
                    "get_tick": 2,
                    "get_tick_count": 5,
                    "get_ticks": 1
                },
                "I2C_RequestMemoryRead": {
                    "request_memory_read": 14
                },
                "I2C_WaitOnRXNEFlagUntilTimeout": {
                    "wait_for_rxne_flag": 3,
                    "wait_on_rxne_flag": 1,
                    "wait_on_rxne_flag_until_timeout": 10
                },
                "bVar7": {
                    "check_value": 1,
                    "condition": 1,
                    "flag": 19,
                    "is_extended": 1,
                    "is_flag_set": 2,
                    "is_multi_byte_mode": 1,
                    "is_multi_byte_transfer": 1,
                    "is_negative": 2,
                    "is_true": 1,
                    "is_two_byte_data": 1,
                    "should_continue": 1
                },
                "disableIRQinterrupts": {
                    "disable_interrupts": 12,
                    "disable_irq": 2
                },
                "enableIRQinterrupts": {
                    "enable_interrupts": 12,
                    "enable_irq": 2
                },
                "iVar2": {
                    "current_time": 3,
                    "start_tick": 4,
                    "start_time": 20,
                    "tick_start": 4
                },
                "iVar3": {
                    "curr_time": 2,
                    "current_tick": 5,
                    "current_time": 18,
                    "start_time": 2,
                    "tick": 1,
                    "tick_current": 3
                },
                "param_1": {
                    "data": 5,
                    "data_buffer": 1,
                    "data_ptr": 4,
                    "i2c_address": 1,
                    "i2c_data": 10,
                    "i2c_params": 4,
                    "input_data": 1,
                    "input_params": 1,
                    "memory_data": 1,
                    "param_list": 1,
                    "params": 1,
                    "sensor_data": 1
                },
                "param_2": {
                    "addr": 1,
                    "address": 7,
                    "arg1": 6,
                    "mem_addr": 1,
                    "mem_address": 3,
                    "mem_read_params": 1,
                    "memory_address": 1,
                    "param1": 2,
                    "param2": 7,
                    "register": 1,
                    "size": 1
                },
                "param_3": {
                    "address": 1,
                    "arg2": 6,
                    "count": 1,
                    "data_address": 1,
                    "device_address": 1,
                    "length": 1,
                    "mem_address": 2,
                    "mem_address_size": 1,
                    "memory_address": 1,
                    "param2": 2,
                    "param3": 8,
                    "reg": 2,
                    "reg_addr": 1,
                    "register_address": 1,
                    "size": 1,
                    "subaddress": 1
                },
                "param_4": {
                    "arg3": 6,
                    "buffer": 1,
                    "data": 1,
                    "data_size": 1,
                    "dev_addr": 1,
                    "device_address": 1,
                    "dummy": 1,
                    "mem_add_size": 2,
                    "mem_type": 1,
                    "param3": 2,
                    "param4": 8,
                    "reg_size": 1,
                    "register_address": 1,
                    "register_size": 1,
                    "stop": 1,
                    "subaddress_size": 1,
                    "width": 1
                },
                "param_5": {
                    "buffer": 14,
                    "buffer_ptr": 1,
                    "data": 5,
                    "data_buffer": 3,
                    "output": 2,
                    "output_buffer": 1,
                    "output_data": 2,
                    "response_data": 1,
                    "result": 1,
                    "timeout": 1
                },
                "param_6": {
                    "buffer_size": 7,
                    "data_length": 4,
                    "data_size": 5,
                    "data_type": 1,
                    "length": 7,
                    "num_bytes": 1,
                    "num_elements": 1,
                    "output_size": 2,
                    "size": 3
                },
                "param_7": {
                    "timeout": 30,
                    "wait_time": 1
                },
                "puVar1": {
                    "current_byte": 3,
                    "current_data": 1,
                    "pointer1": 2,
                    "ptr": 6,
                    "ptr1": 12,
                    "temp_ptr": 5,
                    "temp_ptr1": 1,
                    "temp_var1": 1
                },
                "puVar4": {
                    "current_register": 1,
                    "data_ptr": 2,
                    "data_ptr2": 1,
                    "data_ptr_value": 1,
                    "i2c_control": 1,
                    "i2c_data": 1,
                    "i2c_flags": 1,
                    "i2c_reg": 2,
                    "i2c_status_register": 1,
                    "pointer2": 1,
                    "ptr": 3,
                    "ptr2": 11,
                    "ptr4": 1,
                    "temp_ptr2": 1,
                    "temp_var": 1,
                    "temp_var4": 1
                },
                "puVar6": {
                    "buffer_pointer": 1,
                    "buffer_ptr": 2,
                    "buffer_ptr2": 1,
                    "current_buffer": 1,
                    "data_ptr": 1,
                    "next_byte": 1,
                    "output_buffer": 1,
                    "output_ptr": 1,
                    "pointer2": 1,
                    "pointer3": 1,
                    "ptr2": 1,
                    "ptr3": 11,
                    "ptr6": 1,
                    "target_data": 1,
                    "temp_ptr": 1,
                    "temp_ptr2": 3,
                    "temp_ptr3": 1,
                    "temp_var6": 1
                },
                "uVar5": {
                    "control_value": 1,
                    "current_value": 1,
                    "data": 1,
                    "data_ptr_value_copy": 1,
                    "i2c_data_value": 1,
                    "i2c_reg_value": 1,
                    "original_data": 1,
                    "reg_value": 1,
                    "temp_value": 1,
                    "temp_var": 4,
                    "temp_var2": 1,
                    "temp_var5": 1,
                    "tmp": 1,
                    "value": 13,
                    "var1": 1,
                    "var5": 1
                }
            },
            "called": [
                "FUN_0800115c",
                "FUN_080015e8",
                "FUN_080016f4"
            ],
            "calling": [
                "FUN_0800407c",
                "FUN_080040b8"
            ],
            "code": "\nundefined4\nread_i2_c_data_08001938(uint **i2c_data,undefined4 param2,undefined4 param3,undefined4 param4,\n            undefined *buffer,ushort buffer_size,uint timeout)\n\n{\n  undefined *ptr1;\n  int start_time;\n  int current_time;\n  uint *ptr2;\n  uint value;\n  undefined *ptr3;\n  bool flag;\n  \n  if (*(char *)((int)i2c_data + 0x35) != ' ') {\n    return 2;\n  }\n  if (buffer == (undefined *)0x0) {\n    return 1;\n  }\n  if (buffer_size == 0) {\n    return 1;\n  }\n  start_time = get_tick_count();\n  while (ptr2 = *i2c_data, (~ptr2[6] & 2) == 0) {\n    current_time = get_tick_count();\n    if (10000 < (uint)(current_time - start_time)) {\n      *(undefined *)(i2c_data + 0xd) = 0;\n      *(undefined *)((int)i2c_data + 0x35) = 0x20;\n      return 2;\n    }\n  }\n  if (*(char *)(i2c_data + 0xd) == '\\x01') {\n    return 2;\n  }\n  value = *ptr2;\n  *(undefined *)(i2c_data + 0xd) = 1;\n  *ptr2 = value & 0xfffff7ff;\n  *(undefined *)((int)i2c_data + 0x35) = 0x22;\n  *(undefined *)((int)i2c_data + 0x36) = 0x40;\n  i2c_data[0xe] = (uint *)0x0;\n  start_time = request_memory_read(i2c_data,param2,param3,param4,timeout);\n  if (start_time != 0) {\n    *(undefined *)(i2c_data + 0xd) = 0;\n    if (i2c_data[0xe] == (uint *)0x4) {\n      return 1;\n    }\n    return 3;\n  }\n  ptr2 = *i2c_data;\n  value = *ptr2;\n  if (buffer_size == 1) {\n    *ptr2 = value & 0xfffffbff;\n    disable_interrupts();\n    **i2c_data = **i2c_data | 0x200;\n    enable_interrupts();\n    start_time = wait_on_rxne_flag_until_timeout(i2c_data,timeout);\n    if (start_time == 0) {\n      *buffer = (char)(*i2c_data)[4];\nLAB_08001ab8:\n      *(undefined *)((int)i2c_data + 0x35) = 0x20;\n      *(undefined *)((int)i2c_data + 0x36) = 0;\n      *(undefined *)(i2c_data + 0xd) = 0;\n      return 0;\n    }\nLAB_08001a18:\n    if (i2c_data[0xe] != (uint *)0x20) {\n      return 1;\n    }\n    return 3;\n  }\n  if (buffer_size == 2) {\n    *ptr2 = value | 0x800;\n    disable_interrupts();\n    **i2c_data = **i2c_data & 0xfffffbff;\n    enable_interrupts();\n  }\n  else {\n    *ptr2 = value | 0x400;\n    while (3 < buffer_size) {\n      start_time = wait_on_rxne_flag_until_timeout(i2c_data,timeout);\n      if (start_time != 0) goto LAB_08001a18;\n      *buffer = (char)(*i2c_data)[4];\n      ptr2 = *i2c_data;\n      flag = (int)(ptr2[5] << 0x1d) < 0;\n      if (flag) {\n        ptr2 = (uint *)ptr2[4];\n        ptr3 = buffer + 2;\n        buffer_size = buffer_size - 2;\n      }\n      else {\n        ptr3 = buffer + 1;\n        buffer_size = buffer_size - 1;\n      }\n      ptr1 = buffer + 1;\n      buffer = ptr3;\n      if (flag) {\n        *ptr1 = (char)ptr2;\n      }\n    }\n    if (buffer_size != 2) {\n      start_time = get_tick_count();\n      do {\n        ptr2 = *i2c_data;\n        do {\n          if ((int)(ptr2[5] << 0x1d) < 0) {\n            *ptr2 = *ptr2 & 0xfffffbff;\n            disable_interrupts();\n            *buffer = (char)(*i2c_data)[4];\n            start_time = get_tick_count();\n            goto LAB_08001b3a;\n          }\n        } while (timeout == 0xffffffff);\n      } while ((timeout != 0) && (current_time = get_tick_count(), (uint)(current_time - start_time) <= timeout));\n      goto LAB_08001afa;\n    }\n  }\n  start_time = get_tick_count();\n  do {\n    do {\n      if ((int)((*i2c_data)[5] << 0x1d) < 0) {\n        disable_interrupts();\n        ptr2 = *i2c_data;\n        *ptr2 = *ptr2 | 0x200;\n        *buffer = (char)ptr2[4];\n        enable_interrupts();\n        buffer[1] = (char)(*i2c_data)[4];\n        goto LAB_08001ab8;\n      }\n    } while (timeout == 0xffffffff);\n  } while ((timeout != 0) && (current_time = get_tick_count(), (uint)(current_time - start_time) <= timeout));\nLAB_08001afa:\n  *(undefined *)((int)i2c_data + 0x35) = 0x20;\n  *(undefined *)(i2c_data + 0xd) = 0;\n  return 3;\nLAB_08001b3a:\n  do {\n    ptr2 = *i2c_data;\n    do {\n      if ((int)(ptr2[5] << 0x1d) < 0) {\n        *ptr2 = *ptr2 | 0x200;\n        buffer[1] = (char)ptr2[4];\n        enable_interrupts();\n        buffer[2] = (char)(*i2c_data)[4];\n        goto LAB_08001ab8;\n      }\n    } while (timeout == 0xffffffff);\n  } while ((timeout != 0) && (current_time = get_tick_count(), (uint)(current_time - start_time) <= timeout));\n  goto LAB_08001afa;\n}\n\n",
            "current_name": "read_i2_c_data_08001938",
            "entrypoint": "0x08001938",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001938": "read_i2_c_data_08001938",
                "HAL_GetTick": "get_tick_count",
                "I2C_RequestMemoryRead": "request_memory_read",
                "I2C_WaitOnRXNEFlagUntilTimeout": "wait_on_rxne_flag_until_timeout",
                "bVar7": "flag",
                "disableIRQinterrupts": "disable_interrupts",
                "enableIRQinterrupts": "enable_interrupts",
                "iVar2": "start_time",
                "iVar3": "current_time",
                "param_1": "i2c_data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "buffer",
                "param_6": "buffer_size",
                "param_7": "timeout",
                "puVar1": "ptr1",
                "puVar4": "ptr2",
                "puVar6": "ptr3",
                "uVar5": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001b58": {
            "additional_data": {
                "0x10000": {
                    "special_condition_1": 1
                },
                "1": {
                    "special_condition_2": 1
                },
                "2": {
                    "special_condition_4": 1
                },
                "5": {
                    "special_condition_3": 1
                },
                "5000": {
                    "timeout_3": 1
                },
                "FUNC_08001168": {
                    "sub_function2": 1
                },
                "FUN_0800115c": {
                    "sub_function1": 1
                },
                "FUN_08001b58": {
                    "check_and_set_config": 1,
                    "check_conditions": 1,
                    "check_conditions_and_set_values": 1,
                    "check_config": 1,
                    "check_configuration": 1,
                    "check_inputs_and_delays": 1,
                    "check_status": 2,
                    "check_timers": 1,
                    "handle_data_processing": 1,
                    "handle_function": 1,
                    "initialize_device": 1,
                    "perform_operation": 2
                },
                "HAL_Delay": {
                    "delay": 1
                },
                "HAL_GetTick": {
                    "get_current_tick": 1,
                    "get_current_time": 2,
                    "get_millisecond": 1,
                    "get_tick": 2,
                    "get_time": 1
                },
                "LAB_08001c1e": {
                    "update_config": 1
                },
                "_DAT_40007000": {
                    "another_register": 1,
                    "controller_status": 1,
                    "register_update_config": 1,
                    "register_value4": 2,
                    "register_value_4": 1,
                    "status_register": 1,
                    "timer_register_2": 1
                },
                "_DAT_40021000": {
                    "config_register": 1,
                    "control": 1,
                    "control_register": 1,
                    "data_register": 2,
                    "register_config": 1,
                    "register_value2": 2,
                    "register_value_2": 1
                },
                "_DAT_40021004": {
                    "control_register": 1,
                    "register": 1,
                    "register_status": 1,
                    "register_value": 3,
                    "register_value1": 1,
                    "register_value_1": 1,
                    "system_status": 1
                },
                "_DAT_4002101c": {
                    "register_value3": 1
                },
                "_DAT_40021020": {
                    "data_register_3": 1,
                    "hardware_control": 1,
                    "register_value5": 2,
                    "timer_control_register": 1
                },
                "_DAT_40021024": {
                    "data_register_2": 1,
                    "register_update_status": 1,
                    "register_value3": 1,
                    "register_value_3": 1,
                    "status_register": 1,
                    "timer_register": 1
                },
                "iRam42420000": {
                    "config_param5": 1,
                    "flag1": 1,
                    "flag_1": 1,
                    "memory_1": 1,
                    "memory_variable_1": 1,
                    "var1": 1,
                    "variable1": 2,
                    "variable_1": 1
                },
                "iRam42420060": {
                    "var2": 1
                },
                "iRam42420480": {
                    "config_param6": 1,
                    "flag2": 1,
                    "flag_2": 1,
                    "memory_2": 1,
                    "memory_variable_2": 1,
                    "variable2": 2,
                    "variable_2": 1
                },
                "iVar1": {
                    "counter1": 1,
                    "counter_1": 2,
                    "counter_var_1": 1,
                    "iteration_var1": 1,
                    "iteration_variable1": 1,
                    "start_time": 1,
                    "temp_var1": 11,
                    "tick_start": 4,
                    "timeout_start": 1,
                    "value1": 2,
                    "var1": 1,
                    "variable1": 4
                },
                "iVar2": {
                    "counter2": 1,
                    "counter_2": 2,
                    "counter_var_2": 1,
                    "current_time": 1,
                    "iteration_var2": 1,
                    "iteration_variable2": 1,
                    "temp_var2": 11,
                    "tick_current": 3,
                    "tick_end": 1,
                    "timeout_current": 1,
                    "value2": 2,
                    "var2": 1,
                    "variable2": 4
                },
                "param_1": {
                    "array": 2,
                    "config": 3,
                    "config_array": 1,
                    "data": 1,
                    "device_config": 1,
                    "input": 1,
                    "input_array": 3,
                    "input_parameters": 1,
                    "input_params": 3,
                    "inputs": 1,
                    "parameter": 1,
                    "parameters": 9,
                    "params": 1,
                    "status": 1
                },
                "return": {
                    "return_value": 1
                },
                "uRam42420060": {
                    "config_param10": 1,
                    "flag": 1,
                    "flag3": 1,
                    "flag_3": 1,
                    "memory_3": 1,
                    "memory_condition": 1,
                    "variable3": 1,
                    "variable4": 1
                }
            },
            "called": [
                "FUN_0800115c",
                "FUN_08001168"
            ],
            "calling": [
                "FUN_08004514"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08001eec) */\n/* WARNING: Removing unreachable block (ram,0x08001ee8) */\n\n\nundefined4 check_conditions_and_set_values_08001b58(int *parameters)\n\n{\n  int temp_var1;\n  int temp_var2;\n  \n  if (*parameters << 0x1f < 0) {\n    if (((_DAT_40021004 & 0xc) == 4) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((int)(_DAT_40021004 << 0xf) < 0)))) {\n      if (((int)((_DAT_40021000 >> 0x11) << 0x1f) < 0) && (parameters[1] == 0)) {\n        return_value 1;\n      }\n    }\n    else {\n      temp_var1 = parameters[1];\n      if (temp_var1 == 0x10000) {\nupdate_config:\n        _DAT_40021000 = _DAT_40021000 | 0x10000;\n      }\n      else {\n        if (temp_var1 == 0) {\n          _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n          temp_var1 = get_tick();\n          while ((int)((_DAT_40021000 >> 0x11) << 0x1f) < 0) {\n            temp_var2 = get_tick();\n            if (100 < (uint)(temp_var2 - temp_var1)) {\n              return_value 3;\n            }\n          }\n          goto LAB_08001b64;\n        }\n        if (temp_var1 == 0x50000) {\n          _DAT_40021000 = _DAT_40021000 | 0x40000;\n          goto update_config;\n        }\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      temp_var1 = get_tick();\n      while (-1 < (int)((_DAT_40021000 >> 0x11) << 0x1f)) {\n        temp_var2 = get_tick();\n        if (100 < (uint)(temp_var2 - temp_var1)) {\n          return_value 3;\n        }\n      }\n    }\n  }\nLAB_08001b64:\n  if (*parameters << 0x1e < 0) {\n    if (((_DAT_40021004 & 0xc) == 0) ||\n       (((_DAT_40021004 & 0xc) == 8 && (-1 < (int)(_DAT_40021004 << 0xf))))) {\n      if (((int)((_DAT_40021000 >> 1) << 0x1f) < 0) && (parameters[4] != 1)) {\n        return_value 1;\n      }\n    }\n    else {\n      variable1 = parameters[4];\n      if (variable1 == 0) {\n        temp_var1 = get_tick();\n        while ((int)((_DAT_40021000 >> 1) << 0x1f) < 0) {\n          temp_var2 = get_tick();\n          if (2 < (uint)(temp_var2 - temp_var1)) {\n            return_value 3;\n          }\n        }\n        goto LAB_08001b6c;\n      }\n      variable1 = 1;\n      temp_var1 = get_tick();\n      while (-1 < (int)((_DAT_40021000 >> 1) << 0x1f)) {\n        temp_var2 = get_tick();\n        if (2 < (uint)(temp_var2 - temp_var1)) {\n          return_value 3;\n        }\n      }\n    }\n    _DAT_40021000 = parameters[5] << 3 | _DAT_40021000 & 0xffffff07;\n  }\nLAB_08001b6c:\n  if (*parameters << 0x1c < 0) {\n    variable2 = parameters[6];\n    if (variable2 == 0) {\n      temp_var1 = get_tick();\n      while ((int)((_DAT_40021024 >> 1) << 0x1f) < 0) {\n        temp_var2 = get_tick();\n        if (2 < (uint)(temp_var2 - temp_var1)) {\n          return_value 3;\n        }\n      }\n    }\n    else {\n      variable2 = 1;\n      temp_var1 = get_tick();\n      while (-1 < (int)((_DAT_40021024 >> 1) << 0x1f)) {\n        temp_var2 = get_tick();\n        if (2 < (uint)(temp_var2 - temp_var1)) {\n          return_value 3;\n        }\n      }\n      delay(1);\n    }\n  }\n  if (-1 < *parameters << 0x1d) goto LAB_08001bc2;\n  _DAT_4002101c = _DAT_4002101c | 0x10000000;\n  _DAT_40007000 = _DAT_40007000 | 0x100;\n  temp_var1 = get_tick();\n  while (-1 < (int)(_DAT_40007000 << 0x17)) {\n    temp_var2 = get_tick();\n    if (100 < (uint)(temp_var2 - temp_var1)) {\n      return_value 3;\n    }\n  }\n  temp_var1 = parameters[3];\n  if (temp_var1 == 1) {\nLAB_08001e1a:\n    _DAT_40021020 = _DAT_40021020 | 1;\n  }\n  else {\n    if (temp_var1 == 0) {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n      temp_var1 = get_tick();\n      while ((int)((_DAT_40021020 >> 1) << 0x1f) < 0) {\n        temp_var2 = get_tick();\n        if (5000 < (uint)(temp_var2 - temp_var1)) {\n          return_value 3;\n        }\n      }\n      goto LAB_08001bc2;\n    }\n    if (temp_var1 == 5) {\n      _DAT_40021020 = _DAT_40021020 | 4;\n      goto LAB_08001e1a;\n    }\n    _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n  }\n  temp_var1 = get_tick();\n  while (-1 < (int)((_DAT_40021020 >> 1) << 0x1f)) {\n    temp_var2 = get_tick();\n    if (5000 < (uint)(temp_var2 - temp_var1)) {\n      return_value 3;\n    }\n  }\nLAB_08001bc2:\n  if (parameters[7] == 0) {\n    return_value 0;\n  }\n  if ((_DAT_40021004 & 0xc) != 8) {\n    if (parameters[7] != 2) {\n      config_param10 = 0;\n      temp_var1 = get_tick();\n      do {\n        if (-1 < (int)((_DAT_40021000 >> 0x19) << 0x1f)) {\n          return_value 0;\n        }\n        temp_var2 = get_tick();\n      } while ((uint)(temp_var2 - temp_var1) < 3);\n      return_value 3;\n    }\n    config_param10 = 0;\n    temp_var1 = get_tick();\n    do {\n      if (-1 < (int)((_DAT_40021000 >> 0x19) << 0x1f)) {\n        if (parameters[8] == 0x10000) {\n          _DAT_40021004 = _DAT_40021004 & 0xfffdffff | parameters[2];\n        }\n        _DAT_40021004 = parameters[8] | parameters[9] | _DAT_40021004 & 0xffc2ffff;\n        config_param10 = 1;\n        temp_var1 = get_tick();\n        do {\n          if ((int)((_DAT_40021000 >> 0x19) << 0x1f) < 0) {\n            return_value 0;\n          }\n          temp_var2 = get_tick();\n        } while ((uint)(temp_var2 - temp_var1) < 3);\n        return_value 3;\n      }\n      temp_var2 = get_tick();\n    } while ((uint)(temp_var2 - temp_var1) < 3);\n    return_value 3;\n  }\n  return_value 1;\n}\n\n",
            "current_name": "check_conditions_and_set_values_08001b58",
            "entrypoint": "0x08001b58",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001b58": "check_conditions_and_set_values_08001b58",
                "HAL_Delay": "delay",
                "HAL_GetTick": "get_tick",
                "LAB_08001c1e": "update_config",
                "iRam42420000": "variable1",
                "iRam42420480": "variable2",
                "iVar1": "temp_var1",
                "iVar2": "temp_var2",
                "param_1": "parameters",
                "return": "return_value",
                "uRam42420060": "config_param10"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002008": {
            "additional_data": {
                "FUN_08002008": {
                    "calculate_clock_frequency": 12,
                    "calculate_clock_speed": 2,
                    "calculate_ivar2": 1,
                    "calculate_mcu_clock_frequency": 1,
                    "calculate_mpu9250_clock": 3,
                    "calculate_mpu9250_clock_frequency": 1,
                    "calculate_mpu9250_clock_speed": 2,
                    "calculate_mpu9250_frequency": 1,
                    "calculate_mpu_clock": 2,
                    "calculate_scan_rate": 1,
                    "calculate_sensor_frequency": 1,
                    "calculate_var": 1,
                    "get_clock_frequency": 1,
                    "get_clock_speed": 1,
                    "get_mpu_data_rate": 1
                },
                "_DAT_40021004": {
                    "clock_control_register": 1,
                    "register_value": 1
                },
                "iVar2": {
                    "calculated_clock": 1,
                    "clock_frequency": 5,
                    "clock_rate": 1,
                    "clock_speed": 1,
                    "final_clock": 1,
                    "final_frequency": 1,
                    "ivar2": 1,
                    "output_value": 1,
                    "result": 17,
                    "scan_rate": 1
                },
                "local_20": {
                    "address_values": 1,
                    "array": 1,
                    "array_of_values": 1,
                    "buffer": 1,
                    "clock_config": 2,
                    "clock_configurations": 1,
                    "clock_rate_table": 1,
                    "clock_settings": 1,
                    "configurations": 1,
                    "copy_array": 1,
                    "data": 1,
                    "data_array": 2,
                    "mpu_config_array": 1,
                    "original_data_array": 1,
                    "output_array": 1,
                    "prescaler_options": 1,
                    "register_array": 1,
                    "register_data": 1,
                    "register_values": 2,
                    "result_array": 1,
                    "sensor_data": 1,
                    "source_array": 2,
                    "source_data": 1,
                    "source_path_arr": 1,
                    "source_values": 2,
                    "values": 1
                },
                "local_24": {
                    "byte_array": 1,
                    "byte_values": 1,
                    "clock_config": 1,
                    "clock_divider": 1,
                    "clock_settings": 1,
                    "clock_speed": 1,
                    "clock_speed_arr": 1,
                    "clock_values": 1,
                    "config": 1,
                    "config_settings": 1,
                    "config_values": 1,
                    "constants": 1,
                    "data": 2,
                    "data_array": 1,
                    "data_rate_factor": 1,
                    "flag_array": 1,
                    "flags": 1,
                    "input_array": 1,
                    "input_data": 1,
                    "local_array": 1,
                    "local_values": 1,
                    "output_config": 1,
                    "output_values": 1,
                    "sample_rate_factors": 1,
                    "selected_clocks": 1,
                    "selected_prescaler": 1,
                    "sensor_params": 1,
                    "sensor_values": 1,
                    "settings": 1,
                    "status_flags": 1
                },
                "puVar4": {
                    "config_array_pointer": 1,
                    "config_pointer": 1,
                    "data_pointer": 8,
                    "data_ptr": 1,
                    "file_contents_ptr": 1,
                    "file_data": 1,
                    "file_paths": 1,
                    "file_pointer": 1,
                    "input_array": 1,
                    "pointer": 1,
                    "pointer1": 2,
                    "pointer_to_string": 1,
                    "registers_pointer": 1,
                    "sensor_data_pointer": 1,
                    "source_array": 1,
                    "source_array_pointer": 1,
                    "source_file_path": 1,
                    "source_path_ptr": 1,
                    "source_pointer": 1,
                    "source_values_ptr": 1,
                    "src_ptr": 1
                },
                "puVar6": {
                    "array_pointer": 1,
                    "buffer_pointer": 1,
                    "buffer_ptr": 1,
                    "config_pointer": 2,
                    "copy_to_prescaler_options": 1,
                    "data_pointer": 1,
                    "dest_ptr": 1,
                    "destination_array": 3,
                    "destination_array_pointer": 1,
                    "destination_array_ptr": 1,
                    "destination_pointer": 3,
                    "mpu_config_array_pointer": 1,
                    "new_clock_config": 1,
                    "new_config_pointer": 1,
                    "output_array": 1,
                    "pointer2": 2,
                    "pointer_to_register_data": 1,
                    "register_values_pointer": 1,
                    "result_pointer": 1,
                    "sensor_data_copy_pointer": 1,
                    "settings_pointer": 1,
                    "source_path_arr_ptr": 1,
                    "source_values_ptr_index": 1
                },
                "uVar1": {
                    "clock1": 1,
                    "clock_val1": 1,
                    "clock_value1": 1,
                    "config_value1": 2,
                    "current_value1": 1,
                    "data_value": 1,
                    "data_value_1": 1,
                    "element1": 1,
                    "first_element": 1,
                    "first_val": 1,
                    "first_value": 2,
                    "previous_value": 1,
                    "register_value1": 1,
                    "sensor_data1": 1,
                    "source_path1": 1,
                    "source_value1": 1,
                    "temp_value1": 1,
                    "value1": 10
                },
                "uVar3": {
                    "clock2": 1,
                    "clock_val2": 1,
                    "clock_value2": 1,
                    "config_value2": 2,
                    "current_value2": 1,
                    "data_value_2": 1,
                    "element2": 1,
                    "next_data_value": 1,
                    "next_value": 1,
                    "register_value2": 1,
                    "second_element": 1,
                    "second_val": 1,
                    "second_value": 2,
                    "sensor_data2": 1,
                    "source_path2": 1,
                    "source_value2": 1,
                    "temp_value2": 1,
                    "value2": 10
                },
                "uVar5": {
                    "calculated_frequency": 1,
                    "calculated_value": 1,
                    "calculation_result": 1,
                    "clock_divisor": 2,
                    "clock_freq": 1,
                    "clock_frequency": 11,
                    "clock_speed": 3,
                    "divider_value": 2,
                    "division_factor": 1,
                    "frequency": 4,
                    "frequency_divider": 1,
                    "frequency_factor": 1,
                    "sensor_frequency": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800209c"
            ],
            "code": "\n\n\nint calculate_mpu9250_clock_frequency_08002008(void)\n\n{\n  undefined4 value1;\n  int result;\n  undefined4 value2;\n  undefined4 *data_pointer;\n  uint clock_frequency;\n  undefined4 *destination_array;\n  byte data [4];\n  undefined4 register_values [5];\n  \n  data_pointer = &DAT_080072f0;\n  destination_array = register_values;\n  do {\n    value1 = *data_pointer;\n    value2 = data_pointer[1];\n    data_pointer = data_pointer + 2;\n    *destination_array = value1;\n    destination_array[1] = value2;\n    destination_array = destination_array + 2;\n  } while (data_pointer != (undefined4 *)\"../Src/MPU9250.c\");\n  data[0] = 1;\n  data[1] = 2;\n  if ((_DAT_40021004 & 0xc) == 8) {\n    if ((int)(_DAT_40021004 << 0xf) < 0) {\n      clock_frequency = 8000000 / data[(_DAT_40021004 & 0x20000) >> 0x11];\n    }\n    else {\n      clock_frequency = 4000000;\n    }\n    result = clock_frequency * *(byte *)((int)register_values + ((_DAT_40021004 & 0x3c0000) >> 0x12));\n  }\n  else {\n    result = 8000000;\n  }\n  return result;\n}\n\n",
            "current_name": "calculate_mpu9250_clock_frequency_08002008",
            "entrypoint": "0x08002008",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002008": "calculate_mpu9250_clock_frequency_08002008",
                "iVar2": "result",
                "local_20": "register_values",
                "local_24": "data",
                "puVar4": "data_pointer",
                "puVar6": "destination_array",
                "uVar1": "value1",
                "uVar3": "value2",
                "uVar5": "clock_frequency"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800209c": {
            "additional_data": {
                "DAT_200001bc": {
                    "sys_clock_div": 1,
                    "sys_clock_divisor": 3,
                    "sys_clock_freq": 1,
                    "sys_clock_freq_div": 1,
                    "sys_clock_frequency": 3,
                    "sys_clock_frequency_divisor": 1,
                    "sys_tick_duration": 1,
                    "sys_tick_frequency": 1,
                    "system_clock": 1,
                    "system_tick_value": 1
                },
                "FUN_08001104": {
                    "function1": 1,
                    "initialize_hardware": 1,
                    "sub_function1": 1
                },
                "FUN_0800115c": {
                    "function3": 1,
                    "get_system_tick": 1,
                    "initialize_sub_system": 1,
                    "sub_function3": 1
                },
                "FUN_08002008": {
                    "check_clock_set": 1,
                    "function2": 1,
                    "sub_function2": 2
                },
                "FUN_0800209c": {
                    "configure_clock": 1,
                    "init_and_configure_device": 1,
                    "init_system_clock": 2,
                    "initialize_clock": 1,
                    "initialize_sys_clock": 1,
                    "initialize_system": 14,
                    "initialize_system_clock": 10
                },
                "HAL_GetTick": {
                    "get_current_tick": 7,
                    "get_tick": 2,
                    "get_tick_count": 2,
                    "get_tick_value": 1,
                    "get_time_difference": 1
                },
                "HAL_InitTick": {
                    "init_tick": 1,
                    "initialize_sys_tick": 1,
                    "initialize_sys_tick_timer": 1,
                    "initialize_tick": 10,
                    "initialize_tick_counter": 1
                },
                "HAL_RCC_GetSysClockFreq": {
                    "get_sys_clock_freq": 1,
                    "get_sys_clock_frequency": 6,
                    "get_system_clock_frequency": 7
                },
                "LZCOUNT": {
                    "leading_zero_count": 4,
                    "leading_zeros_count": 4
                },
                "PTR_FUN_08001104": {
                    "sub_function": 1
                },
                "_DAT_40021000": {
                    "config_shift": 1
                },
                "_DAT_40021004": {
                    "config_status": 1
                },
                "_DAT_40022000": {
                    "sys_config": 1
                },
                "cVar1": {
                    "bool_1": 1,
                    "condition1": 1,
                    "flag1": 5,
                    "is_bit_set": 1,
                    "is_clock_enabled": 1,
                    "is_condition_true": 2,
                    "is_config_high": 1,
                    "is_divided_by8": 1,
                    "is_divisible_by8": 1,
                    "is_enable": 1,
                    "is_first_condition_true": 1,
                    "is_flag_set": 1,
                    "is_negative": 3,
                    "is_option1": 1,
                    "is_positive": 1,
                    "is_source_external": 1,
                    "is_sys_tick_enabled": 1,
                    "is_sys_time_initialized": 1,
                    "is_timer": 1,
                    "is_valid_config": 1,
                    "is_value1": 1,
                    "is_value1_set": 1,
                    "is_value_set": 1,
                    "option1": 1
                },
                "cVar2": {
                    "bool_2": 1,
                    "condition2": 1,
                    "flag2": 5,
                    "is_bit_set2": 1,
                    "is_clock_disabled": 1,
                    "is_condition_false": 2,
                    "is_condition_met": 1,
                    "is_config_low": 1,
                    "is_configured": 1,
                    "is_disable": 1,
                    "is_divisible": 1,
                    "is_divisible_by64": 1,
                    "is_hse": 1,
                    "is_hse_bypassed": 1,
                    "is_hse_enabled": 1,
                    "is_option2": 1,
                    "is_positive": 2,
                    "is_second_condition_true": 1,
                    "is_source_hse": 1,
                    "is_special_config": 1,
                    "is_tick_initialized": 1,
                    "is_value2": 1,
                    "is_value2_set": 1,
                    "is_zero": 1,
                    "option2": 1
                },
                "iVar3": {
                    "bit_shifted_value": 1,
                    "error_code": 1,
                    "flag": 1,
                    "is_negative": 1,
                    "left_shifted_config": 1,
                    "main_clock": 1,
                    "raw_sys_tick_value": 1,
                    "result": 1,
                    "shift_value": 1,
                    "shifted_value": 5,
                    "sys_clock_shift": 1,
                    "sys_tick_reload": 1,
                    "sys_tick_us": 1,
                    "sys_tick_value": 1,
                    "temp": 1,
                    "temp_var1": 2,
                    "tick": 2,
                    "tick_count": 1,
                    "tick_limit": 1,
                    "tick_offset": 1,
                    "tick_overflow": 1,
                    "tick_start": 1,
                    "tick_value": 3
                },
                "iVar5": {
                    "current_sys_tick_us": 1,
                    "current_tick": 14,
                    "current_time": 2,
                    "loop_value": 1,
                    "temp_var3": 2,
                    "tick": 1,
                    "tick_start": 2,
                    "tick_value": 8
                },
                "param_1": {
                    "array": 1,
                    "clock_config": 2,
                    "config": 8,
                    "config_data": 1,
                    "config_params": 8,
                    "configuration": 3,
                    "configurations": 1,
                    "flags": 1,
                    "param": 1,
                    "param_array": 2,
                    "sys_clock_config": 1,
                    "sys_config": 1,
                    "values": 1
                },
                "param_2": {
                    "clock_config_size": 1,
                    "clock_source": 9,
                    "config_flag": 1,
                    "config_length": 2,
                    "config_size": 5,
                    "count": 1,
                    "num_params": 2,
                    "param_count": 1,
                    "param_size": 1,
                    "param_value": 3,
                    "size": 1,
                    "source": 1,
                    "sys_tick_config": 1,
                    "system_clock_source": 1,
                    "value": 1
                },
                "uVar4": {
                    "clock_frequency": 1,
                    "clock_type": 1,
                    "config_data1": 1,
                    "config_id": 1,
                    "config_param1": 1,
                    "config_type": 3,
                    "config_value": 10,
                    "flag": 1,
                    "flag_value": 1,
                    "mode": 1,
                    "option": 1,
                    "param1_value": 1,
                    "param_value": 1,
                    "param_value1": 1,
                    "sys_clock": 1,
                    "temp_var2": 2,
                    "value": 2,
                    "value1": 1
                },
                "uVar6": {
                    "bit_shift": 1,
                    "bit_shifted_value2": 1,
                    "calculated_value": 1,
                    "clock_shift": 1,
                    "config_shift": 1,
                    "flag_value": 1,
                    "mask": 1,
                    "shift_value": 1,
                    "shifted_clock": 1,
                    "shifted_clock_freq": 1,
                    "shifted_config": 3,
                    "shifted_config_param": 1,
                    "shifted_config_value": 1,
                    "shifted_constant": 1,
                    "shifted_flag": 1,
                    "shifted_option": 1,
                    "shifted_sys_clock": 1,
                    "shifted_value": 8,
                    "shifted_value2": 1,
                    "sys_tick_value": 1,
                    "temp_var4": 2
                }
            },
            "called": [
                "FUN_08001104",
                "FUN_08002008",
                "FUN_0800115c"
            ],
            "calling": [
                "FUN_08004514"
            ],
            "code": "\n\n\nundefined4 initialize_system_clock_0800209c(uint *config,uint clock_source)\n\n{\n  char flag1;\n  char flag2;\n  int shifted_value;\n  uint config_value;\n  int current_tick;\n  uint shifted_value;\n  \n  if ((clock_source <= (_DAT_40022000 & 7)) ||\n     (_DAT_40022000 = _DAT_40022000 & 0xfffffff8 | clock_source, clock_source == (clock_source & 7))) {\n    if ((int)(*config << 0x1e) < 0) {\n      _DAT_40021004 = _DAT_40021004 & 0xffffff0f | config[2];\n    }\n    shifted_value = *config << 0x1f;\n    if (-1 < shifted_value) {\nLAB_080020ba:\n      if ((clock_source < (_DAT_40022000 & 7)) &&\n         (_DAT_40022000 = _DAT_40022000 & 0xfffffff8 | clock_source, clock_source != (clock_source & 7))) {\n        return 1;\n      }\n      if ((*config & 4) != 0) {\n        _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | config[3];\n      }\n      if ((int)(*config << 0x1c) < 0) {\n        _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | config[4] << 3;\n      }\n      config_value = get_system_clock_frequency();\n      DAT_200001bc = config_value >> (&DAT_08007361)[(_DAT_40021004 & 0xf0) >> 4];\n      initialize_tick(0);\n      return 0;\n    }\n    config_value = config[1];\n    if (config_value == 1) {\n      flag2 = '\\x01';\n      flag1 = '\\0';\n    }\n    else {\n      shifted_value = _DAT_40021000;\n      if (config_value == 2) goto LAB_08002176;\n      flag2 = '\\0';\n      flag1 = '\\x01';\n    }\n    shifted_value = (_DAT_40021000 >>\n            (leading_zero_count((uint)(byte)(flag1 << 6) << 0x18 | (uint)(byte)(flag2 << 6) << 8) & 0x1fU)) <<\n            0x1f;\n    if ((int)shifted_value < 0) {\nLAB_08002176:\n      _DAT_40021004 = _DAT_40021004 & 0xfffffffc | config_value;\n      shifted_value = get_current_tick(shifted_value,shifted_value);\n      if (config[1] == 1) {\n        do {\n          if ((_DAT_40021004 & 0xc) == 4) goto LAB_080020ba;\n          current_tick = get_current_tick();\n        } while ((uint)(current_tick - shifted_value) < 0x1389);\n      }\n      else if (config[1] == 2) {\n        do {\n          if ((_DAT_40021004 & 0xc) == 8) goto LAB_080020ba;\n          current_tick = get_current_tick();\n        } while ((uint)(current_tick - shifted_value) < 0x1389);\n      }\n      else {\n        do {\n          if ((_DAT_40021004 & 0xc) == 0) goto LAB_080020ba;\n          current_tick = get_current_tick();\n        } while ((uint)(current_tick - shifted_value) < 0x1389);\n      }\n      return 3;\n    }\n  }\n  return 1;\n}\n\n",
            "current_name": "initialize_system_clock_0800209c",
            "entrypoint": "0x0800209c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800209c": "initialize_system_clock_0800209c",
                "HAL_GetTick": "get_current_tick",
                "HAL_InitTick": "initialize_tick",
                "HAL_RCC_GetSysClockFreq": "get_system_clock_frequency",
                "LZCOUNT": "leading_zero_count",
                "cVar1": "flag1",
                "cVar2": "flag2",
                "iVar3": "shifted_value",
                "iVar5": "current_tick",
                "param_1": "config",
                "param_2": "clock_source",
                "uVar4": "config_value",
                "uVar6": "shifted_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002214": {
            "additional_data": {
                "DAT_200001bc": {
                    "dat_value": 3,
                    "data": 13,
                    "global_data": 2,
                    "global_variable": 3,
                    "result": 1
                },
                "FUN_08002214": {
                    "get_dat_200001bc": 1,
                    "get_dat_value": 4,
                    "get_data": 15,
                    "get_data_pointer": 1,
                    "get_data_value": 4,
                    "get_global_data": 2,
                    "get_global_variable": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_08001104",
                "FUN_08004514"
            ],
            "code": "\nundefined4 get_data_value_08002214(void)\n\n{\n  return DAT_200001bc;\n}\n\n",
            "current_name": "get_data_value_08002214",
            "entrypoint": "0x08002214",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002214": "get_data_value_08002214"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002220": {
            "additional_data": {
                "DATA_200001bc": {
                    "binary_data": 1
                },
                "DAT_08007371": {
                    "bit_mask_array": 1,
                    "bit_offsets": 1,
                    "bit_shift_table": 1,
                    "data_array": 3,
                    "lookup_table": 1,
                    "shift_table": 3,
                    "table": 1
                },
                "DAT_200001bc": {
                    "bit_data": 1,
                    "bitmask": 3,
                    "data": 10,
                    "data_register": 1,
                    "data_to_shift": 1,
                    "data_value": 10,
                    "shift_register": 1,
                    "shifted_value": 1,
                    "value": 1
                },
                "FUN_08002220": {
                    "calculate_shifted_value": 1,
                    "extract_bit_from_data": 2,
                    "extract_bits_from_data": 3,
                    "extract_data": 1,
                    "extracted_data": 2,
                    "extracted_value_from_binary": 1,
                    "get_bits_from_data": 1,
                    "get_right_shifted_value": 2,
                    "get_shifted_data": 1,
                    "get_shifted_value": 7,
                    "retrieve_shifted_data": 1,
                    "reversed_data_extraction": 1,
                    "shift_data_with_offset": 1,
                    "shift_right_by_index": 1,
                    "shift_value_based_on_condition": 1,
                    "shift_value_from_data": 1,
                    "shifted_data_lookup": 1,
                    "shifted_data_value": 1,
                    "shifted_value": 1,
                    "shifted_value_from_table": 1
                },
                "PTR_08007371": {
                    "lookup_table_pointer": 1
                },
                "_DAT_200001bc": {
                    "data": 1
                },
                "_DAT_40021004": {
                    "address_value": 1,
                    "binary_mask": 1,
                    "condition_value": 1,
                    "config_value": 1,
                    "control_value": 1,
                    "data": 3,
                    "data_mask": 1,
                    "data_register": 1,
                    "data_source": 1,
                    "data_value": 1,
                    "input": 1,
                    "input_data": 2,
                    "input_value": 6,
                    "mask_value": 1,
                    "offset": 2,
                    "selector": 1,
                    "shift_amount": 1,
                    "shift_value": 1,
                    "shifted_data": 1,
                    "shifted_value": 2,
                    "value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001754",
                "FUN_080025e8"
            ],
            "code": "\n\n\nuint get_right_shifted_value_08002220(void)\n\n{\n  return DAT_200001bc >> (&DAT_08007371)[(_DAT_40021004 & 0x700) >> 8];\n}\n\n",
            "current_name": "get_right_shifted_value_08002220",
            "entrypoint": "0x08002220",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002220": "get_right_shifted_value_08002220"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002250": {
            "additional_data": {
                "0x3800": {
                    "bit_mask": 2
                },
                "0xb": {
                    "bit_shift": 2
                },
                "DAT_08007371": {
                    "bit_mask": 1,
                    "bit_offsets": 2,
                    "bitmask": 1,
                    "data_arr": 1,
                    "data_array": 1,
                    "data_pointer": 1,
                    "lookup_table": 1,
                    "shift_table": 2
                },
                "DAT_200001bc": {
                    "bit_field": 1,
                    "bit_value": 1,
                    "bitmask": 1,
                    "data": 11,
                    "data2": 1,
                    "data_to_extract_bits": 1,
                    "data_to_shift": 2,
                    "data_value": 7,
                    "original_data": 1,
                    "original_value": 1,
                    "shifted_data": 1,
                    "shifted_value": 2,
                    "value": 1
                },
                "FUN_08002250": {
                    "extract_bit_from_value": 1,
                    "extract_bit_value": 1,
                    "extract_bits": 3,
                    "extract_bits_and_shift": 1,
                    "extract_bits_from_data": 2,
                    "extract_shifted_value": 1,
                    "extract_value_from_data": 1,
                    "extracted_bit_from_data": 1,
                    "extracted_bits_from_data": 2,
                    "extracted_data": 1,
                    "extracted_data_from_binary": 1,
                    "extracted_value_from_binary": 4,
                    "get_bit_value": 1,
                    "get_shifted_data": 1,
                    "get_shifted_value": 8,
                    "reverse_bits": 1,
                    "shifted_value": 1
                },
                "_DAT_40021004": {
                    "binary_data": 1,
                    "binary_mask": 1,
                    "binary_offset": 1,
                    "binary_value": 1,
                    "bit_field": 1,
                    "bit_mask": 2,
                    "data": 1,
                    "data1": 1,
                    "data_index": 1,
                    "data_mask": 3,
                    "data_offset": 1,
                    "data_value": 2,
                    "data_variable": 1,
                    "input_data": 1,
                    "input_value": 9,
                    "register_value": 1,
                    "shift_mask": 1,
                    "shifted_value": 2
                },
                "dataArray": {
                    "data_array": 1
                },
                "dataValue": {
                    "data": 1
                },
                "extractBits": {
                    "bits_to_extract": 1
                },
                "inputValue": {
                    "input": 1
                },
                "shiftedValue": {
                    "get_data_by_index": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080025e8"
            ],
            "code": "\n\n\nuint get_shifted_value_08002250(void)\n\n{\n  return DAT_200001bc >> (&DAT_08007371)[(_DAT_40021004 & 0x3800) >> 0xb];\n}\n\n",
            "current_name": "get_shifted_value_08002250",
            "entrypoint": "0x08002250",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002250": "get_shifted_value_08002250"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002280": {
            "additional_data": {
                "0x18": {
                    "offset_2": 1
                },
                "0x20": {
                    "offset_1": 1
                },
                "0x34": {
                    "offset_4": 1
                },
                "0x40012c00": {
                    "condition": 1,
                    "special_device_address": 1
                },
                "0xfffffcff": {
                    "mask5": 1
                },
                "0xfffffff7": {
                    "mask3": 1
                },
                "0xfffffffb": {
                    "mask4": 1
                },
                "0xfffffffd": {
                    "mask2": 1
                },
                "0xfffffffe": {
                    "mask1": 1
                },
                "4": {
                    "offset_3": 1
                },
                "FUN_08002280": {
                    "configure_device": 1,
                    "initialize_data": 1,
                    "update_config": 1,
                    "update_data": 3,
                    "update_flags": 1,
                    "update_flags_and_values": 2,
                    "update_param": 1,
                    "update_param_info": 1,
                    "update_parameter": 2,
                    "update_parameters": 5,
                    "update_params": 4,
                    "update_register_values": 1,
                    "update_registers": 1,
                    "update_settings": 3,
                    "update_values": 4
                },
                "param_1": {
                    "address": 1,
                    "base_address": 14,
                    "config_address": 1,
                    "data_address": 2,
                    "device_address": 1,
                    "function_base_address": 1,
                    "param1": 1,
                    "param_address": 2,
                    "param_base": 2,
                    "param_ptr": 1,
                    "register_address": 1,
                    "register_base": 1,
                    "settings": 1,
                    "settings_address": 2
                },
                "param_2": {
                    "config_values": 1,
                    "data": 1,
                    "data_array": 2,
                    "device_config": 1,
                    "input_data": 1,
                    "input_params": 1,
                    "input_values": 1,
                    "new_settings": 1,
                    "new_values": 1,
                    "param2": 1,
                    "param_array": 6,
                    "param_list": 1,
                    "param_values": 2,
                    "parameters": 1,
                    "register_values": 2,
                    "settings_data": 1,
                    "values": 7
                },
                "uVar1": {
                    "masked_value1": 1,
                    "modified_config": 1,
                    "modified_flag": 1,
                    "modified_value1": 1,
                    "new_config_value1": 1,
                    "new_value1": 2,
                    "updated_flag": 1,
                    "updated_flag_value": 1,
                    "updated_flags1": 2,
                    "updated_mask": 1,
                    "updated_value": 2,
                    "updated_value1": 13,
                    "updated_var1": 4
                },
                "uVar2": {
                    "current_value": 2,
                    "flag1": 1,
                    "initial_config_value": 1,
                    "masked_value2": 1,
                    "modified_value2": 1,
                    "new_value2": 1,
                    "old_value1": 1,
                    "original_param1": 1,
                    "original_value": 1,
                    "param2_modified": 1,
                    "updated_flags2": 1,
                    "updated_value1": 1,
                    "updated_value2": 13,
                    "updated_var2": 5
                },
                "uVar3": {
                    "config_value": 1,
                    "new_value": 4,
                    "original_param2": 1,
                    "original_param_value": 1,
                    "original_value": 1,
                    "param2_value": 1,
                    "param_value": 2,
                    "updated_value2": 1,
                    "updated_value3": 13,
                    "updated_var3": 4,
                    "value": 1,
                    "value1": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800245c"
            ],
            "code": "\nvoid update_flags_and_values_08002280(int base_address,uint *values)\n\n{\n  uint updated_value1;\n  uint updated_value2;\n  uint updated_value3;\n  \n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & 0xfffffffe;\n  updated_value2 = *(uint *)(base_address + 4);\n  updated_value3 = *values;\n  updated_value1 = *(uint *)(base_address + 0x20) & 0xfffffffd | values[2];\n  if (base_address == 0x40012c00) {\n    updated_value1 = (updated_value1 & 0xfffffff7 | values[3]) & 0xfffffffb;\n    updated_value2 = updated_value2 & 0xfffffcff | values[5] | values[6];\n  }\n  *(uint *)(base_address + 4) = updated_value2;\n  *(uint *)(base_address + 0x18) = *(uint *)(base_address + 0x18) & 0xffffff8c | updated_value3;\n  *(uint *)(base_address + 0x34) = values[1];\n  *(uint *)(base_address + 0x20) = updated_value1;\n  return;\n}\n\n",
            "current_name": "update_flags_and_values_08002280",
            "entrypoint": "0x08002280",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002280": "update_flags_and_values_08002280",
                "param_1": "base_address",
                "param_2": "values",
                "uVar1": "updated_value1",
                "uVar2": "updated_value2",
                "uVar3": "updated_value3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080022d0": {
            "additional_data": {
                "0x1c": {
                    "flag_register": 1
                },
                "0x20": {
                    "config_register": 1
                },
                "0x3c": {
                    "data_register": 1
                },
                "FUN_080022d0": {
                    "configure_memory_offsets": 1,
                    "set_configuration": 1,
                    "update_config": 2,
                    "update_configuration": 1,
                    "update_data": 3,
                    "update_param": 1,
                    "update_parameter": 2,
                    "update_parameters": 13,
                    "update_params": 5,
                    "update_register_values": 1,
                    "update_settings": 1
                },
                "param_1": {
                    "addr": 1,
                    "address": 5,
                    "base_address": 9,
                    "config_address": 3,
                    "config_ptr": 1,
                    "data_address": 3,
                    "memory_block_address": 1,
                    "param1": 1,
                    "param_address": 2,
                    "param_base": 2,
                    "param_base_address": 1,
                    "param_pointer": 1,
                    "settings_address": 1
                },
                "param_2": {
                    "config_array": 1,
                    "config_data": 2,
                    "config_values": 1,
                    "data": 1,
                    "data_array": 2,
                    "input_values": 1,
                    "param2": 1,
                    "param_array": 5,
                    "param_values": 4,
                    "parameters": 9,
                    "params": 2,
                    "register_values": 1,
                    "settings_data": 1
                },
                "uVar1": {
                    "modified_config_1": 1,
                    "modified_flag": 1,
                    "modified_memory_offset1": 1,
                    "modified_settings_1": 1,
                    "modified_value1": 1,
                    "updated_config1": 1,
                    "updated_first_parameter": 1,
                    "updated_u_var1": 1,
                    "updated_value1": 17,
                    "updated_var1": 4,
                    "var1": 1
                },
                "uVar2": {
                    "modified_config_2": 1,
                    "modified_memory_offset2": 1,
                    "modified_settings_2": 1,
                    "modified_value2": 1,
                    "updated_config2": 1,
                    "updated_second_parameter": 1,
                    "updated_u_var2": 1,
                    "updated_value2": 17,
                    "updated_var2": 4,
                    "value1": 1,
                    "var2": 1
                },
                "uVar3": {
                    "config_value": 1,
                    "new_value": 1,
                    "original_memory_offset": 1,
                    "param_value": 1,
                    "settings_value": 1,
                    "updated_config3": 1,
                    "updated_third_parameter": 1,
                    "updated_u_var3": 1,
                    "updated_value3": 16,
                    "updated_var3": 4,
                    "value2": 1,
                    "var3": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800245c"
            ],
            "code": "\nvoid update_parameters_080022d0(int base_address,uint *parameters)\n\n{\n  uint updated_value1;\n  uint updated_value2;\n  uint updated_value3;\n  \n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & 0xfffffeff;\n  updated_value2 = *(uint *)(base_address + 4);\n  updated_value3 = *parameters;\n  updated_value1 = *(uint *)(base_address + 0x20) & 0xfffffdff | parameters[2] << 8;\n  if (base_address == 0x40012c00) {\n    updated_value1 = (updated_value1 & 0xfffff7ff | parameters[3] << 8) & 0xfffffbff;\n    updated_value2 = updated_value2 & 0xffffcfff | (parameters[5] | parameters[6]) << 4;\n  }\n  *(uint *)(base_address + 4) = updated_value2;\n  *(uint *)(base_address + 0x1c) = *(uint *)(base_address + 0x1c) & 0xffffff8c | updated_value3;\n  *(uint *)(base_address + 0x3c) = parameters[1];\n  *(uint *)(base_address + 0x20) = updated_value1;\n  return;\n}\n\n",
            "current_name": "update_parameters_080022d0",
            "entrypoint": "0x080022d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080022d0": "update_parameters_080022d0",
                "param_1": "base_address",
                "param_2": "parameters",
                "uVar1": "updated_value1",
                "uVar2": "updated_value2",
                "uVar3": "updated_value3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002324": {
            "additional_data": {
                "0x40012c00": {
                    "constant_address": 1,
                    "default_address": 2,
                    "default_base_address": 1
                },
                "0xffff8cff": {
                    "bit_mask2": 1
                },
                "0xffffbfff": {
                    "bit_mask1": 1
                },
                "FUN_08002324": {
                    "update_config_data": 1,
                    "update_data": 5,
                    "update_param": 2,
                    "update_param_values": 2,
                    "update_parameter": 2,
                    "update_parameters": 12,
                    "update_params": 6,
                    "update_values": 1
                },
                "iVar2": {
                    "first_param": 2,
                    "input_var": 1,
                    "new_value2": 1,
                    "param1_value": 1,
                    "param2": 1,
                    "param2_value": 2,
                    "param_value2": 1,
                    "second_param_val": 1,
                    "second_value": 1,
                    "updated_var2": 2,
                    "value1": 6,
                    "value2": 10,
                    "var2": 2
                },
                "iVar3": {
                    "new_value3": 1,
                    "param2_index2": 1,
                    "param2_var": 1,
                    "param3": 1,
                    "param3_value": 2,
                    "param_value3": 1,
                    "second_param": 1,
                    "third_param": 1,
                    "third_param_val": 1,
                    "third_value": 1,
                    "updated_var3": 2,
                    "value2": 6,
                    "value3": 10,
                    "var3": 2
                },
                "iVar4": {
                    "constant": 2,
                    "constant_value": 5,
                    "default_address": 1,
                    "default_base_address": 1,
                    "default_param": 2,
                    "default_param_value": 2,
                    "default_val": 1,
                    "default_value": 7,
                    "default_var": 3,
                    "updated_var4": 2,
                    "value4": 3,
                    "var4": 2
                },
                "param_1": {
                    "address": 1,
                    "base_addr": 1,
                    "base_address": 9,
                    "config_data_address": 1,
                    "data_address": 5,
                    "param": 1,
                    "param1": 2,
                    "param_address": 5,
                    "param_ptr": 1,
                    "parameter": 1,
                    "parameter1": 2,
                    "parameter_address": 1,
                    "target_address": 1
                },
                "param_2": {
                    "config_values": 1,
                    "data_values": 1,
                    "input_params": 2,
                    "param2": 2,
                    "param_array": 9,
                    "param_values": 2,
                    "parameter2": 2,
                    "parameter_array": 1,
                    "parameters": 6,
                    "params": 2,
                    "params_array": 3
                },
                "uVar1": {
                    "adjusted_value": 1,
                    "first_param_val": 1,
                    "first_value": 1,
                    "flags": 3,
                    "mask": 1,
                    "new_value": 1,
                    "new_value1": 1,
                    "old_value": 1,
                    "original_value": 2,
                    "param1": 1,
                    "param1_value": 1,
                    "param_value": 1,
                    "param_value1": 1,
                    "updated_var1": 3,
                    "value1": 10,
                    "var1": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_0800245c"
            ],
            "code": "\nvoid update_parameters_08002324(int base_address,int *param_array)\n\n{\n  uint value1;\n  int value2;\n  int value3;\n  int default_value;\n  \n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & 0xffffefff;\n  value1 = *(uint *)(base_address + 4);\n  value2 = *param_array;\n  value3 = param_array[2];\n  default_value = 0x40012c00;\n  if (base_address == 0x40012c00) {\n    default_value = param_array[5];\n    value1 = value1 & 0xffffbfff;\n  }\n  if (base_address == 0x40012c00) {\n    value1 = value1 | default_value << 6;\n  }\n  *(uint *)(base_address + 4) = value1;\n  *(uint *)(base_address + 0x1c) = *(uint *)(base_address + 0x1c) & 0xffff8cff | value2 << 8;\n  *(int *)(base_address + 0x40) = param_array[1];\n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & 0xffffdfff | value3 << 0xc;\n  return;\n}\n\n",
            "current_name": "update_parameters_08002324",
            "entrypoint": "0x08002324",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002324": "update_parameters_08002324",
                "iVar2": "value2",
                "iVar3": "value3",
                "iVar4": "default_value",
                "param_1": "base_address",
                "param_2": "param_array",
                "uVar1": "value1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002368": {
            "additional_data": {
                "0x40000000": {
                    "memory_block_2": 1
                },
                "0x40000400": {
                    "memory_block_3": 1
                },
                "0x40000800": {
                    "memory_block_4": 1
                },
                "0x40012c00": {
                    "memory_block_1": 1
                },
                "FUN_08002368": {
                    "update_config": 1,
                    "update_data": 2,
                    "update_memory": 10,
                    "update_memory_values": 1,
                    "update_param1": 1,
                    "update_parameters": 9,
                    "update_params": 1,
                    "update_register_values": 1,
                    "update_registers": 3,
                    "update_status": 1,
                    "update_values": 1
                },
                "param_1": {
                    "config": 1,
                    "current_params": 1,
                    "data_input": 1,
                    "data_pointer": 1,
                    "input_array": 1,
                    "input_buffer": 1,
                    "input_data": 1,
                    "input_params": 6,
                    "mem_addr": 1,
                    "mem_ptr": 1,
                    "memory_address": 3,
                    "memory_location": 1,
                    "memory_pointer": 1,
                    "modified_register": 1,
                    "old_memory": 1,
                    "original_values": 1,
                    "reg1": 1,
                    "register1": 2,
                    "source": 2,
                    "target_memory": 2,
                    "target_params": 1
                },
                "param_2": {
                    "data": 3,
                    "data_block": 1,
                    "data_output": 1,
                    "data_pointer": 1,
                    "destination": 1,
                    "new_config": 1,
                    "new_data": 2,
                    "new_memory": 1,
                    "new_params": 5,
                    "new_values": 2,
                    "reg2": 1,
                    "register2": 2,
                    "register_values": 1,
                    "replacement_params": 1,
                    "source_buffer": 1,
                    "source_data": 1,
                    "source_memory": 2,
                    "source_params": 1,
                    "source_ptr": 1,
                    "updated_params": 1,
                    "values_to_update": 1
                },
                "uVar1": {
                    "current_value": 1,
                    "modified_value": 3,
                    "new_value": 3,
                    "reg_temp": 1,
                    "status": 1,
                    "target_value": 1,
                    "temp_value": 1,
                    "temp_var": 1,
                    "temp_var1": 1,
                    "updated_value": 18
                }
            },
            "called": [],
            "calling": [
                "FUN_080023d0"
            ],
            "code": "\nvoid update_memory_values_08002368(uint *input_params,uint *new_params)\n\n{\n  uint updated_value;\n  \n  updated_value = *input_params;\n  if (((((input_params == (uint *)0x40012c00) || (input_params == (uint *)0x40000000)) ||\n       (input_params == (uint *)0x40000400)) || (input_params == (uint *)0x40000800)) &&\n     (((updated_value = updated_value & 0xffffff8f | new_params[1], input_params == (uint *)0x40012c00 ||\n       (input_params == (uint *)0x40000000)) ||\n      ((input_params == (uint *)0x40000400 || (input_params == (uint *)0x40000800)))))) {\n    updated_value = updated_value & 0xfffffcff | new_params[3];\n  }\n  *input_params = updated_value;\n  input_params[0xb] = new_params[2];\n  input_params[10] = *new_params;\n  updated_value = 0x40012c00;\n  if (input_params == (uint *)0x40012c00) {\n    updated_value = new_params[4];\n  }\n  if (input_params == (uint *)0x40012c00) {\n    input_params[0xc] = updated_value;\n  }\n  input_params[5] = 1;\n  return;\n}\n\n",
            "current_name": "update_memory_values_08002368",
            "entrypoint": "0x08002368",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002368": "update_memory_values_08002368",
                "param_1": "input_params",
                "param_2": "new_params",
                "uVar1": "updated_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080023d0": {
            "additional_data": {
                "0": {
                    "success": 1
                },
                "1": {
                    "configured_flag": 1,
                    "error": 1
                },
                "2": {
                    "initialized_flag": 1
                },
                "FUNC_PTR_08002368": {
                    "configure_tim_pwm": 1
                },
                "FUNC_PTR_08004d8c": {
                    "initialize_tim_msp": 1
                },
                "FUN_08002368": {
                    "configure_pwm_base": 1,
                    "configure_pwm_timer": 2,
                    "configure_tim": 1,
                    "configure_tim_base": 4,
                    "configure_timer": 1,
                    "copy_uint_values": 1,
                    "initialize_timers": 1,
                    "set_pwm_base_config": 1,
                    "set_pwm_config": 2,
                    "set_pwm_configuration": 1
                },
                "FUN_080023d0": {
                    "configure_pwm": 1,
                    "init_pwm_timer": 1,
                    "initialize_pwm": 22,
                    "initialize_pwm_timer": 3,
                    "initialize_pwm_timers": 1,
                    "initialize_tim_pwm": 2,
                    "initialize_timer": 1
                },
                "FUN_08004d8c": {
                    "configure_flash_memory": 1,
                    "configure_gpio": 1,
                    "configure_pwm": 1,
                    "configure_tim_base2": 1,
                    "init_interrupt": 1,
                    "initialize_dma": 1,
                    "initialize_gpio": 3,
                    "initialize_int": 1,
                    "initialize_tim": 1,
                    "initialize_tim_base": 1,
                    "initialize_tim_pwm": 1,
                    "initialize_timer": 1,
                    "release_resources": 1
                },
                "HAL_TIM_PWM_MspInit": {
                    "init_pwm_hardware": 1,
                    "initialize_pwm": 1,
                    "initialize_pwm_gpio": 5,
                    "initialize_pwm_gpio_pins": 1,
                    "initialize_pwm_hardware": 1,
                    "initialize_pwm_peripheral": 5,
                    "initialize_pwm_peripherals": 6,
                    "initialize_pwm_pins": 1,
                    "initialize_tim_msp": 1,
                    "initialize_tim_pwm": 2,
                    "initialize_tim_pwm_msp": 1
                },
                "Hal_TIM_PWM_MspInit": {
                    "initialize_pwm_peripherals": 1
                },
                "TIM_Base_SetConfig": {
                    "configure_pwm": 1,
                    "configure_timer": 3,
                    "set_pwm_config": 4,
                    "set_tim_base_config": 1,
                    "set_timer_config": 1,
                    "set_timer_configuration": 1
                },
                "int": {
                    "integer": 1
                },
                "param_1": {
                    "config": 12,
                    "config_data": 1,
                    "config_ptr": 1,
                    "config_struct": 2,
                    "dma_instance": 1,
                    "gpio": 1,
                    "gpio_config": 1,
                    "gpio_pins": 1,
                    "interrupt_handler": 1,
                    "param": 1,
                    "pwm_config": 2,
                    "pwm_params": 1,
                    "settings": 1,
                    "tim_base_config": 1,
                    "timer_config": 1,
                    "timer_handle": 1,
                    "timer_ptr": 1,
                    "timer_struct": 1
                },
                "param_2": {
                    "config": 1,
                    "config_data": 1,
                    "config_params": 1,
                    "config_registers": 1,
                    "dma_config": 1,
                    "extra_param": 1,
                    "pwm_config": 1,
                    "tim_param": 1,
                    "timer_ptr": 1,
                    "timers": 1
                },
                "ptr": {
                    "config_ptr": 1
                },
                "uint": {
                    "unsigned_int": 1
                }
            },
            "called": [
                "FUN_08002368",
                "FUN_08004d8c"
            ],
            "calling": [
                "FUN_0800458c"
            ],
            "code": "\nundefined4 initialize_pwm_timer_080023d0(undefined4 *config)\n\n{\n  if (config != (undefined4 *)0x0) {\n    if (*(char *)((integer)config + 0x39) == '\\0') {\n      *(undefined *)(config + 0xe) = 0;\n      initialize_pwm_peripherals();\n    }\n    *(undefined *)((integer)config + 0x39) = 2;\n    set_pwm_config(*config,config + 1);\n    *(undefined *)((integer)config + 0x39) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "initialize_pwm_timer_080023d0",
            "entrypoint": "0x080023d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080023d0": "initialize_pwm_timer_080023d0",
                "HAL_TIM_PWM_MspInit": "initialize_pwm_peripherals",
                "TIM_Base_SetConfig": "set_pwm_config",
                "int": "integer",
                "param_1": "config"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002404": {
            "additional_data": {
                "0x10": {
                    "offset_constant_5": 1
                },
                "0x18": {
                    "offset4": 1,
                    "offset_constant_3": 1
                },
                "0x20": {
                    "offset3": 1,
                    "offset_constant_1": 1
                },
                "0x38": {
                    "offset5": 1,
                    "offset_constant_4": 1
                },
                "0x4": {
                    "offset2": 1,
                    "offset_constant_2": 1
                },
                "0x40012c00": {
                    "constant_1": 1,
                    "constant_addr": 1,
                    "special_address": 1
                },
                "0x7f": {
                    "mask_constant_3": 1
                },
                "0xffff8cff": {
                    "mask6": 1,
                    "mask_constant_6": 1
                },
                "0xfffff3ff": {
                    "mask5": 1,
                    "mask_constant_5": 1
                },
                "0xffffff7f": {
                    "mask3": 1
                },
                "0xffffffbf": {
                    "mask4": 1,
                    "mask_constant_4": 1
                },
                "0xffffffdf": {
                    "mask2": 1,
                    "mask_constant_2": 1
                },
                "0xffffffef": {
                    "mask1": 1,
                    "mask_constant_1": 1
                },
                "2": {
                    "index_constant_1": 1,
                    "shift_val1": 1
                },
                "3": {
                    "index_constant_2": 1,
                    "shift_val2": 1
                },
                "5": {
                    "index_constant_3": 1,
                    "param_val1": 1
                },
                "6": {
                    "index_constant_4": 1,
                    "param_val2": 1
                },
                "8": {
                    "shift_constant_1": 1,
                    "shift_val3": 1
                },
                "FUN_08002404": {
                    "configure_hardware": 1,
                    "update_config": 2,
                    "update_configuration": 1,
                    "update_data": 4,
                    "update_flags_and_values": 1,
                    "update_param_values": 1,
                    "update_parameter_value": 1,
                    "update_parameter_values": 1,
                    "update_parameters": 7,
                    "update_params": 8,
                    "update_settings": 1,
                    "update_status": 1,
                    "update_values": 1
                },
                "iVar3": {
                    "config_value": 1,
                    "data_value": 1,
                    "input_data": 1,
                    "input_value": 8,
                    "new_value": 2,
                    "param3": 3,
                    "param_value": 8,
                    "parameter_value": 2,
                    "updated_var3": 1,
                    "value": 1,
                    "value_to_store": 1,
                    "value_to_write": 1
                },
                "param_1": {
                    "addr": 1,
                    "address": 2,
                    "base_address": 11,
                    "config_address": 4,
                    "data_address": 3,
                    "data_pointer": 1,
                    "function_address": 1,
                    "param_addr": 2,
                    "param_address": 1,
                    "parameter": 1,
                    "parameter_address": 1,
                    "settings_address": 1,
                    "status": 1
                },
                "param_2": {
                    "config_data": 3,
                    "config_values": 1,
                    "data": 1,
                    "data_array": 1,
                    "data_values": 1,
                    "input_params": 1,
                    "param_array": 3,
                    "param_values": 1,
                    "parameter_values": 1,
                    "parameters": 5,
                    "parameters_array": 1,
                    "params": 3,
                    "params_array": 4,
                    "settings_values": 1,
                    "values": 3
                },
                "uVar1": {
                    "config_flags": 1,
                    "modified_flag": 2,
                    "modified_flags": 1,
                    "modified_value1": 3,
                    "new_data1": 1,
                    "updated_config1": 1,
                    "updated_flag": 1,
                    "updated_flag1": 1,
                    "updated_flags1": 1,
                    "updated_status": 1,
                    "updated_value1": 16,
                    "updated_var1": 1
                },
                "uVar2": {
                    "config_data": 1,
                    "modified_value": 3,
                    "modified_value2": 3,
                    "new_data2": 1,
                    "updated_config2": 1,
                    "updated_flag2": 1,
                    "updated_flags2": 1,
                    "updated_value": 2,
                    "updated_value2": 16,
                    "updated_var2": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800245c"
            ],
            "code": "\nvoid update_params_08002404(int base_address,int *parameters)\n\n{\n  uint updated_value1;\n  uint updated_value2;\n  int input_value;\n  \n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & 0xffffffef;\n  updated_value2 = *(uint *)(base_address + 4);\n  input_value = *parameters;\n  updated_value1 = *(uint *)(base_address + 0x20) & 0xffffffdf | parameters[2] << 4;\n  if (base_address == 0x40012c00) {\n    updated_value1 = (updated_value1 & 0xffffff7f | parameters[3] << 4) & 0xffffffbf;\n    updated_value2 = updated_value2 & 0xfffff3ff | (parameters[5] | parameters[6]) << 2;\n  }\n  *(uint *)(base_address + 4) = updated_value2;\n  *(uint *)(base_address + 0x18) = *(uint *)(base_address + 0x18) & 0xffff8cff | input_value << 8;\n  *(int *)(base_address + 0x38) = parameters[1];\n  *(uint *)(base_address + 0x20) = updated_value1;\n  return;\n}\n\n",
            "current_name": "update_params_08002404",
            "entrypoint": "0x08002404",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002404": "update_params_08002404",
                "iVar3": "input_value",
                "param_1": "base_address",
                "param_2": "parameters",
                "uVar1": "updated_value1",
                "uVar2": "updated_value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800245c": {
            "additional_data": {
                "FUN_0800245c": {
                    "configure_output_capture": 1,
                    "configure_output_compare": 3,
                    "configure_pwm": 1,
                    "configure_tim_oc": 3,
                    "configure_tim_output_compare": 1,
                    "configure_timer": 2,
                    "configure_timer_channel": 1,
                    "configure_timer_output": 3,
                    "configure_timer_output_channel": 5,
                    "configure_timers": 1,
                    "initialize_output_compare": 1,
                    "initialize_timer_channel": 1,
                    "set_and_configure_timer_output": 1,
                    "set_output_compare_config": 1,
                    "set_tim_oc_config": 1,
                    "set_tim_output_compare_config": 1,
                    "set_timer_config": 1,
                    "set_timer_output_configuration": 2,
                    "update_timer_configuration": 1
                },
                "TIM_OC1_SetConfig": {
                    "configure_timer_output_channel1": 1,
                    "set_config1": 1,
                    "set_timer_oc1_config": 1
                },
                "TIM_OC2_SetConfig": {
                    "configure_timer_output_channel2": 1,
                    "set_config2": 1,
                    "set_timer_oc2_config": 1
                },
                "TIM_OC3_SetConfig": {
                    "configure_timer_output_channel3": 1,
                    "set_config3": 1,
                    "set_timer_oc3_config": 1
                },
                "TIM_OC4_SetConfig": {
                    "configure_timer_output_channel4": 1,
                    "set_config4": 1,
                    "set_timer_oc4_config": 1
                },
                "extraout_r1": {
                    "additional_output1": 1,
                    "extra1": 3,
                    "extra_out1": 1,
                    "extra_out_1": 1,
                    "extra_output1": 2,
                    "extra_var_1": 1,
                    "extraout1": 1,
                    "extraout_1": 1,
                    "extraout_r1": 2,
                    "oc1_ptr": 1,
                    "oc_config1": 1,
                    "result1": 1,
                    "temp": 2,
                    "temp1": 8,
                    "temp_1": 1,
                    "temp_val": 1,
                    "tmp1": 1,
                    "var1": 2
                },
                "extraout_r1_00": {
                    "additional_output2": 1,
                    "extra2": 3,
                    "extra_out2": 1,
                    "extra_out_2": 1,
                    "extra_output2": 2,
                    "extra_var_2": 1,
                    "extraout2": 1,
                    "extraout_2": 1,
                    "extraout_r1_00": 2,
                    "oc2_ptr": 1,
                    "oc_config2": 1,
                    "result2": 1,
                    "temp2": 10,
                    "temp_2": 1,
                    "temp_val_2": 1,
                    "tmp2": 1,
                    "var2": 2
                },
                "extraout_r1_01": {
                    "additional_output3": 1,
                    "extra3": 3,
                    "extra_out3": 1,
                    "extra_out_3": 1,
                    "extra_output3": 2,
                    "extra_var_3": 1,
                    "extraout3": 1,
                    "extraout_3": 1,
                    "extraout_r1_01": 2,
                    "oc3_ptr": 1,
                    "oc_config3": 1,
                    "result3": 1,
                    "temp3": 10,
                    "temp_3": 1,
                    "temp_val_3": 1,
                    "tmp3": 1,
                    "var3": 2
                },
                "extraout_r1_02": {
                    "additional_output4": 1,
                    "extra4": 3,
                    "extra_out4": 1,
                    "extra_out_4": 1,
                    "extra_output4": 2,
                    "extra_var_4": 1,
                    "extraout4": 1,
                    "extraout_4": 1,
                    "extraout_r1_02": 2,
                    "oc4_ptr": 1,
                    "oc_config4": 1,
                    "result4": 1,
                    "temp4": 10,
                    "temp_4": 1,
                    "temp_val_4": 1,
                    "tmp4": 1,
                    "var4": 2
                },
                "iVar1": {
                    "capture_value": 1,
                    "config_value": 1,
                    "config_value2": 1,
                    "input_value": 1,
                    "oc2_value": 1,
                    "oc_value": 1,
                    "temp1": 1,
                    "temp5": 4,
                    "temp_1": 1,
                    "temp_5": 1,
                    "temp_int1": 1,
                    "temp_var1": 5,
                    "temp_var_1": 2,
                    "tmp5": 1,
                    "value": 4,
                    "value1": 1,
                    "var1": 1,
                    "var5": 1,
                    "variable1": 2
                },
                "iVar3": {
                    "config_address": 1,
                    "config_ptr": 1,
                    "config_value": 2,
                    "current_timer": 1,
                    "oc_config_data": 1,
                    "temp2": 1,
                    "temp_2": 1,
                    "temp_var2": 2,
                    "tim_handle": 1,
                    "timer": 3,
                    "timer_address": 1,
                    "timer_channel_var": 1,
                    "timer_config": 3,
                    "timer_config_address": 1,
                    "timer_data": 1,
                    "timer_instance": 5,
                    "timer_var": 1,
                    "var3": 1,
                    "var6": 1,
                    "variable3": 2
                },
                "param_1": {
                    "channel_config": 1,
                    "config": 7,
                    "config_data": 1,
                    "output_compare": 1,
                    "output_parameters": 1,
                    "pwm_config": 1,
                    "timer_channel": 2,
                    "timer_config": 13,
                    "timer_output_config": 2,
                    "timer_struct": 1
                },
                "param_2": {
                    "param2": 1,
                    "param_2": 30
                },
                "param_3": {
                    "capture_channel": 1,
                    "channel": 7,
                    "channel_type": 1,
                    "config_type": 1,
                    "mode": 1,
                    "oc_channel": 3,
                    "oc_config": 1,
                    "output_channel": 9,
                    "output_compare": 1,
                    "param3": 1,
                    "param_3": 3,
                    "timer_mode": 1,
                    "timer_output_channel": 1
                },
                "uVar2": {
                    "combined_value": 1,
                    "config_bits": 2,
                    "config_data": 1,
                    "config_value": 5,
                    "flag_var": 1,
                    "mask": 1,
                    "new_config_value": 1,
                    "oc_config_status": 1,
                    "temp_3": 1,
                    "temp_uint1": 1,
                    "temp_var2": 1,
                    "updated_config": 1,
                    "updated_value": 8,
                    "updated_var": 2,
                    "var2": 1,
                    "var7": 1,
                    "variable2": 2
                }
            },
            "called": [
                "FUN_08002404",
                "FUN_080022d0",
                "FUN_08002280",
                "FUN_08002324"
            ],
            "calling": [
                "FUN_0800458c"
            ],
            "code": "\nvoid configure_timer_output_channel_0800245c(int *timer_config,undefined4 param_2,undefined4 output_channel)\n\n{\n  int temp1;\n  int temp2;\n  int temp3;\n  int temp4;\n  int temp_var1;\n  uint updated_value;\n  int timer_instance;\n  \n  if (*(char *)(timer_config + 0xe) == '\\x01') {\n    return;\n  }\n  *(undefined *)((int)timer_config + 0x39) = 2;\n  *(undefined *)(timer_config + 0xe) = 1;\n  switch(output_channel) {\n  case 0:\n    set_config1(*timer_config);\n    timer_instance = *timer_config;\n    updated_value = *(uint *)(temp1 + 0x10);\n    *(uint *)(timer_instance + 0x18) = *(uint *)(timer_instance + 0x18) | 8;\n    *(uint *)(timer_instance + 0x18) = *(uint *)(timer_instance + 0x18) & 0xfffffffb;\n    updated_value = *(uint *)(timer_instance + 0x18) | updated_value;\n    break;\n  default:\n    goto switchD_0800247a_caseD_1;\n  case 4:\n    configure_timer_output_channel_0800245c2(*timer_config);\n    timer_instance = *timer_config;\n    temp_var1 = *(int *)(temp2 + 0x10);\n    *(uint *)(timer_instance + 0x18) = *(uint *)(timer_instance + 0x18) | 0x800;\n    *(uint *)(timer_instance + 0x18) = *(uint *)(timer_instance + 0x18) & 0xfffffbff;\n    updated_value = *(uint *)(timer_instance + 0x18) | temp_var1 << 8;\n    break;\n  case 8:\n    configure_timer_output_channel_0800245c3(*timer_config);\n    timer_instance = *timer_config;\n    updated_value = *(uint *)(temp3 + 0x10);\n    *(uint *)(timer_instance + 0x1c) = *(uint *)(timer_instance + 0x1c) | 8;\n    *(uint *)(timer_instance + 0x1c) = *(uint *)(timer_instance + 0x1c) & 0xfffffffb;\n    updated_value = *(uint *)(timer_instance + 0x1c) | updated_value;\n    goto LAB_080024fa;\n  case 0xc:\n    set_timer_oc4_config(*timer_config);\n    timer_instance = *timer_config;\n    temp_var1 = *(int *)(temp4 + 0x10);\n    *(uint *)(timer_instance + 0x1c) = *(uint *)(timer_instance + 0x1c) | 0x800;\n    *(uint *)(timer_instance + 0x1c) = *(uint *)(timer_instance + 0x1c) & 0xfffffbff;\n    updated_value = *(uint *)(timer_instance + 0x1c) | temp_var1 << 8;\nLAB_080024fa:\n    *(uint *)(timer_instance + 0x1c) = updated_value;\n    goto switchD_0800247a_caseD_1;\n  }\n  *(uint *)(timer_instance + 0x18) = updated_value;\nswitchD_0800247a_caseD_1:\n  *(undefined *)((int)timer_config + 0x39) = 1;\n  *(undefined *)(timer_config + 0xe) = 0;\n  return;\n}\n\n",
            "current_name": "configure_timer_output_channel_0800245c",
            "entrypoint": "0x0800245c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800245c": "configure_timer_output_channel_0800245c",
                "TIM_OC1_SetConfig": "set_config1",
                "TIM_OC2_SetConfig": "configure_timer_output_channel2",
                "TIM_OC3_SetConfig": "configure_timer_output_channel3",
                "TIM_OC4_SetConfig": "set_timer_oc4_config",
                "extraout_r1": "temp1",
                "extraout_r1_00": "temp2",
                "extraout_r1_01": "temp3",
                "extraout_r1_02": "temp4",
                "iVar1": "temp_var1",
                "iVar3": "timer_instance",
                "param_1": "timer_config",
                "param_3": "output_channel",
                "uVar2": "updated_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002520": {
            "additional_data": {
                "FUN_08002520": {
                    "clear_bit_and_shift": 3,
                    "clear_bit_and_shift_in": 1,
                    "clear_bit_and_shift_left": 3,
                    "clear_bit_and_shift_or": 2,
                    "clear_bit_in_memory": 1,
                    "modify_bit": 1,
                    "set_bit": 1,
                    "set_bit_at_position": 1,
                    "set_bit_with_value": 1,
                    "update_bit": 5,
                    "update_bit_in_u_int": 1,
                    "update_bit_in_value": 1,
                    "update_bit_value": 5,
                    "update_bitfield": 1,
                    "update_bits": 2,
                    "update_bitwise_value": 2
                },
                "param_1": {
                    "address": 1,
                    "array_base": 2,
                    "base_addr": 1,
                    "base_address": 19,
                    "data": 6,
                    "data_pointer": 1,
                    "memory_address": 1
                },
                "param_2": {
                    "bit_index": 7,
                    "bit_pos": 1,
                    "bit_position": 22,
                    "position": 1
                },
                "param_3": {
                    "bit_value": 9,
                    "new_bit_value": 2,
                    "new_value": 13,
                    "value": 4,
                    "value_to_insert": 1,
                    "value_to_set": 1,
                    "value_to_shift": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08002538"
            ],
            "code": "\nvoid update_bit_in_value_08002520(int base_address,uint bit_position,int new_value)\n\n{\n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & ~(1 << (bit_position & 0xff));\n  *(uint *)(base_address + 0x20) = new_value << (bit_position & 0xff) | *(uint *)(base_address + 0x20);\n  return;\n}\n\n",
            "current_name": "update_bit_in_value_08002520",
            "entrypoint": "0x08002520",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002520": "update_bit_in_value_08002520",
                "param_1": "base_address",
                "param_2": "bit_position",
                "param_3": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002538": {
            "additional_data": {
                "FUN_08002520": {
                    "set_tim_c_cx_channel_cmd": 1
                },
                "FUN_08002538": {
                    "configure_and_enable_channel": 1,
                    "configure_and_enable_tim_ccx_channel": 1,
                    "configure_and_enable_timer_channel": 1,
                    "configure_c_cx_channel": 2,
                    "configure_channel": 1,
                    "configure_tim_c_cx": 1,
                    "configure_tim_c_cx_channel": 2,
                    "configure_tim_channel": 1,
                    "configure_tim_pwm": 1,
                    "configure_timer_channel": 2,
                    "initialize_channel": 3,
                    "initialize_hardware": 1,
                    "initialize_tim_c_cx_channel": 2,
                    "initialize_tim_channel": 2,
                    "initialize_timer": 5,
                    "initialize_timer_channel": 2,
                    "initialize_timers": 2,
                    "setup_and_enable_timer": 1
                },
                "TIM_CCxChannelCmd": {
                    "configure_timer_channel": 1,
                    "set_channel_command": 1,
                    "set_timer_channel_command": 1
                },
                "param_1": {
                    "channel_address_ptr": 1,
                    "channel_config": 1,
                    "channel_pointer": 5,
                    "channel_ptr": 4,
                    "config_array": 1,
                    "hardware_settings": 1,
                    "p_timer": 1,
                    "pointer_to_register": 1,
                    "tim_ccx_channel_ptr": 1,
                    "timer": 1,
                    "timer_address": 2,
                    "timer_array": 1,
                    "timer_channel": 1,
                    "timer_channel_pointer": 2,
                    "timer_channel_ptr_ptr": 1,
                    "timer_config": 2,
                    "timer_params": 1,
                    "timer_pointer": 2,
                    "timer_registers": 2
                },
                "param_2": {
                    "ccr_value": 1,
                    "channel": 8,
                    "channel_cmd": 2,
                    "channel_command": 4,
                    "channel_config": 1,
                    "channel_id": 1,
                    "channel_number": 1,
                    "channel_value": 1,
                    "config_value": 1,
                    "configuration_value": 1,
                    "input_data": 1,
                    "param": 1,
                    "param_value": 7,
                    "timer_command": 1
                },
                "puVar2": {
                    "channel_address": 1,
                    "channel_data": 3,
                    "channel_pointer": 1,
                    "channel_pointer_value": 1,
                    "channel_ptr": 3,
                    "channel_ptr_value": 1,
                    "channel_val": 1,
                    "config_ptr": 1,
                    "current_channel": 1,
                    "current_timer": 1,
                    "current_timer_params": 1,
                    "current_value": 1,
                    "register_value": 1,
                    "tim_ccx_channel": 1,
                    "timer_address": 2,
                    "timer_base_address": 1,
                    "timer_channel_address": 1,
                    "timer_channel_pointer": 1,
                    "timer_channel_ptr": 2,
                    "timer_ptr": 3,
                    "timer_reg": 1,
                    "timer_register": 1,
                    "timer_register_ptr": 1
                },
                "uRam40012c44": {
                    "channel_flag": 1,
                    "special_value": 1,
                    "tim_ccx_channel_condition": 1,
                    "timer_flag": 1
                },
                "uVar1": {
                    "ccr_value": 1,
                    "channel_address": 1,
                    "channel_config": 3,
                    "channel_value": 2,
                    "config_value": 1,
                    "configured_value": 1,
                    "default_register_value": 1,
                    "default_value": 3,
                    "desired_value": 2,
                    "modified_channel_value": 1,
                    "new_ccr_value": 1,
                    "new_config_value": 1,
                    "new_param_value": 1,
                    "new_value": 2,
                    "register_value": 1,
                    "timer_control_value": 1,
                    "timer_value": 5,
                    "uart_flag": 1,
                    "updated_value": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_08002520"
            ],
            "calling": [
                "FUN_08003ff4"
            ],
            "code": "\nundefined4 initialize_timer_channel_08002538(uint **channel_pointer,undefined4 channel)\n\n{\n  uint timer_value;\n  uint *channel_ptr;\n  \n  set_channel_command(*channel_pointer,channel,1);\n  channel_ptr = *channel_pointer;\n  timer_value = 0x40012c00;\n  if (channel_ptr == (uint *)0x40012c00) {\n    timer_value = tim_ccx_channel_condition | 0x8000;\n  }\n  if (channel_ptr == (uint *)0x40012c00) {\n    channel_ptr[0x11] = timer_value;\n  }\n  *channel_ptr = *channel_ptr | 1;\n  return 0;\n}\n\n",
            "current_name": "initialize_timer_channel_08002538",
            "entrypoint": "0x08002538",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002538": "initialize_timer_channel_08002538",
                "TIM_CCxChannelCmd": "set_channel_command",
                "param_1": "channel_pointer",
                "param_2": "channel",
                "puVar2": "channel_ptr",
                "uRam40012c44": "tim_ccx_channel_condition",
                "uVar1": "timer_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002564": {
            "additional_data": {
                "DAT_": {
                    "unchanged": 1
                },
                "FUN_08002564": {
                    "calculate_checksum": 2,
                    "check_and_set_flag": 1,
                    "check_and_update_data": 1,
                    "check_and_update_flag": 2,
                    "check_and_update_param": 1,
                    "check_status_and_set_data": 1,
                    "decode_and_update_flags": 1,
                    "initialize_data": 1,
                    "initialize_flag_and_calculate_sum": 1,
                    "initialize_flags": 1,
                    "initialize_param": 1,
                    "process_data": 1,
                    "process_input": 1,
                    "update_and_check_value": 1,
                    "update_and_reset_flag": 1,
                    "update_data": 2,
                    "update_flags_and_values": 1,
                    "update_param_and_return": 1,
                    "update_param_and_return_status": 3,
                    "update_param_with_check": 1,
                    "update_status": 1,
                    "update_values": 1,
                    "validate_and_set_flag": 1,
                    "validate_and_set_parameters": 1,
                    "validate_and_update_state": 1,
                    "verify_data": 1
                },
                "PTR_": {
                    "unchanged": 1
                },
                "char_value": {
                    "flag": 1
                },
                "param_1": {
                    "array": 2,
                    "data": 4,
                    "data_buffer": 1,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "flag_array": 1,
                    "flag_pointer": 1,
                    "flag_ptr": 1,
                    "flags": 1,
                    "flags_array": 1,
                    "input_array": 2,
                    "input_data": 1,
                    "input_params": 1,
                    "param_array": 8,
                    "pointer_to_state": 1,
                    "status": 1,
                    "status_pointer": 1,
                    "values_1": 1
                },
                "param_2": {
                    "array_ptr": 1,
                    "bitwise_array": 1,
                    "bitwise_data": 1,
                    "checksum_array": 1,
                    "data": 4,
                    "data_array": 3,
                    "data_pointer": 2,
                    "flag_array": 1,
                    "flags": 2,
                    "flags_array": 1,
                    "mask_pointer": 1,
                    "param_values": 1,
                    "pointer_to_data": 1,
                    "uint_array": 3,
                    "update_array": 1,
                    "values": 4,
                    "values_2": 1,
                    "values_array": 2
                },
                "uVar1": {
                    "result": 16,
                    "return_val": 1,
                    "return_value": 5,
                    "status": 6
                }
            },
            "called": [],
            "calling": [
                "FUN_0800458c"
            ],
            "code": "\nundefined4 update_param_and_return_status_08002564(int *param_array,uint *data)\n\n{\n  undefined4 result;\n  \n  result = 2;\n  if (*(char *)(param_array + 0xe) != '\\x01') {\n    *(undefined *)((int)param_array + 0x39) = 2;\n    *(uint *)(*param_array + 0x44) =\n         *data | data[1] | data[2] | data[3] | data[4] | data[5] | data[6];\n    *(undefined *)((int)param_array + 0x39) = 1;\n    result = 0;\n    *(undefined *)(param_array + 0xe) = 0;\n  }\n  return result;\n}\n\n",
            "current_name": "update_param_and_return_status_08002564",
            "entrypoint": "0x08002564",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002564": "update_param_and_return_status_08002564",
                "param_1": "param_array",
                "param_2": "data",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080025a4": {
            "additional_data": {
                "FUN_080025a4": {
                    "adjust_data_storage": 1,
                    "apply_permissions": 2,
                    "configure_device": 1,
                    "initialize_registers": 1,
                    "reverse_and_set_flags": 1,
                    "reverse_conditions_and_update": 1,
                    "set_bits_in_memory": 1,
                    "set_flag_and_values": 1,
                    "set_permissions": 1,
                    "update_and_reset_flags": 2,
                    "update_config": 2,
                    "update_configuration": 1,
                    "update_flags": 2,
                    "update_flags_and_status": 1,
                    "update_flags_and_values": 1,
                    "update_flags_if_not_set": 1,
                    "update_memory_values": 1,
                    "update_parameters": 2,
                    "update_permissions": 6,
                    "update_settings": 1,
                    "validate_and_update_flags": 1
                },
                "iVar3": {
                    "address": 3,
                    "array_base": 2,
                    "base_addr": 1,
                    "base_address": 3,
                    "block_address": 1,
                    "config_ptr": 1,
                    "data": 1,
                    "data_value": 1,
                    "device_ptr": 1,
                    "first_elem": 1,
                    "first_param": 1,
                    "first_value": 2,
                    "initial_value": 1,
                    "permission": 1,
                    "ptr": 6,
                    "ptr_config": 1,
                    "ptr_data": 1,
                    "ptr_to_permission": 1,
                    "register_value": 1,
                    "temp2": 1
                },
                "param_1": {
                    "array": 2,
                    "array_ptr": 1,
                    "config": 3,
                    "data": 1,
                    "data_pointer": 1,
                    "device": 1,
                    "device_config": 1,
                    "flag_array": 1,
                    "flags": 1,
                    "input_data": 1,
                    "input_params": 1,
                    "memory": 1,
                    "memory_block": 1,
                    "param_array": 3,
                    "params": 1,
                    "permission_array": 2,
                    "permissions": 5,
                    "permissions_array": 1,
                    "pointer_to_data": 1,
                    "register_ptr": 1,
                    "settings": 1
                },
                "param_2": {
                    "bitmask": 2,
                    "data_ptr": 1,
                    "flag_array": 1,
                    "flag_params": 1,
                    "flags": 2,
                    "mask": 2,
                    "mask_array": 1,
                    "options": 1,
                    "param_values": 1,
                    "permissions": 1,
                    "pointer_to_values": 1,
                    "register_values": 1,
                    "value_array": 2,
                    "value_pointer": 1,
                    "value_ptr": 1,
                    "values": 10,
                    "values_array": 1,
                    "values_to_update": 1
                },
                "uVar1": {
                    "bitmask1": 2,
                    "data2": 1,
                    "first_flag": 1,
                    "first_mask_value": 1,
                    "first_value": 3,
                    "flag_value1": 1,
                    "input_flag1": 1,
                    "mask_value_2": 1,
                    "masked_bits": 1,
                    "new_value2": 1,
                    "old_value": 1,
                    "option1": 1,
                    "permission1": 1,
                    "second_value": 1,
                    "temp1": 1,
                    "value1": 11,
                    "value2": 1,
                    "value_1": 1
                },
                "uVar2": {
                    "result": 15,
                    "result_code": 1,
                    "return_val": 2,
                    "return_value": 10,
                    "status": 3
                },
                "uVar4": {
                    "bitmask0": 1,
                    "bitmask2": 1,
                    "data1": 1,
                    "flag_value": 1,
                    "flag_value2": 1,
                    "input_flag2": 1,
                    "mask": 1,
                    "mask_value": 3,
                    "new_mask": 1,
                    "new_value1": 1,
                    "option2": 1,
                    "permission0": 1,
                    "second_flag": 1,
                    "second_param": 1,
                    "second_value": 2,
                    "value0": 3,
                    "value1": 1,
                    "value2": 8,
                    "value_2": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800458c"
            ],
            "code": "\nundefined4 update_permissions_080025a4(int *permissions,uint *values)\n\n{\n  uint value1;\n  undefined4 result;\n  int ptr;\n  uint value2;\n  \n  result = 2;\n  if (*(char *)(permissions + 0xe) != '\\x01') {\n    *(undefined *)((int)permissions + 0x39) = 2;\n    ptr = *permissions;\n    value2 = *values;\n    value1 = values[1];\n    *(uint *)(ptr + 4) = *(uint *)(ptr + 4) & 0xffffff8f;\n    *(uint *)(ptr + 4) = *(uint *)(ptr + 4) | value2;\n    *(uint *)(ptr + 8) = *(uint *)(ptr + 8) & 0xffffff7f;\n    *(uint *)(ptr + 8) = *(uint *)(ptr + 8) | value1;\n    *(undefined *)((int)permissions + 0x39) = 1;\n    result = 0;\n    *(undefined *)(permissions + 0xe) = 0;\n  }\n  return result;\n}\n\n",
            "current_name": "update_permissions_080025a4",
            "entrypoint": "0x080025a4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080025a4": "update_permissions_080025a4",
                "iVar3": "ptr",
                "param_1": "permissions",
                "param_2": "values",
                "uVar1": "value1",
                "uVar2": "result",
                "uVar4": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080025e8": {
            "additional_data": {
                "FUN_080025e8": {
                    "calculate_clock": 1,
                    "calculate_clocks": 1,
                    "calculate_configuration": 1,
                    "calculate_frequency": 1,
                    "calculate_parameter": 1,
                    "configure_device": 1,
                    "configure_peripheral": 1,
                    "improve_code": 2,
                    "initialize_hardware": 1,
                    "initialize_settings": 1,
                    "set_clock_settings": 1,
                    "update_and_calculate_values": 1,
                    "update_clock_config": 2,
                    "update_clock_configuration": 1,
                    "update_config": 1,
                    "update_configuration": 5,
                    "update_configuration_settings": 1,
                    "update_configurations": 1,
                    "update_parameter": 1,
                    "update_parameters": 1,
                    "update_pclk_config": 1,
                    "update_periph_config": 1,
                    "update_register_values": 1,
                    "update_registers": 1
                },
                "iVar1": {
                    "freq1": 1,
                    "frequency": 2,
                    "frequency1": 1,
                    "frequency_1": 1,
                    "pclk1_freq": 1,
                    "pclk2_freq": 1,
                    "pclk_freq": 22,
                    "pclk_freq1": 2
                },
                "iVar2": {
                    "adjusted_freq": 2,
                    "adjusted_pclk2_freq": 1,
                    "adjusted_pclk_freq": 5,
                    "adjusted_value": 1,
                    "calculated_offset": 1,
                    "calculated_value": 1,
                    "calculated_value1": 1,
                    "calculation": 2,
                    "calculation1": 2,
                    "calibrated_value": 1,
                    "freq2": 1,
                    "frequency2": 1,
                    "frequency_2": 1,
                    "multiplier": 2,
                    "offset": 1,
                    "pclk_adjusted": 1,
                    "pclk_freq2": 2,
                    "pclk_multiplier": 1,
                    "result": 2,
                    "temp": 1,
                    "temp_var1": 1
                },
                "iVar4": {
                    "adjusted_divider": 1,
                    "adjusted_freq": 1,
                    "adjusted_freq2": 1,
                    "adjusted_offset": 1,
                    "adjusted_value": 1,
                    "adjusted_value1": 1,
                    "calc_result1": 1,
                    "calc_value": 1,
                    "calculated_val1": 1,
                    "calculated_value3": 1,
                    "calculation1": 3,
                    "calculation2": 1,
                    "calculation3": 1,
                    "calculation_1": 1,
                    "new_div1": 1,
                    "new_value1": 1,
                    "offset1": 1,
                    "offset_value": 1,
                    "result": 1,
                    "result1": 1,
                    "sub_result1": 1,
                    "temp_var1": 1,
                    "temp_var3": 1,
                    "tmp_var1": 1,
                    "value1": 5
                },
                "iVar5": {
                    "calculation2": 1,
                    "calculation_2": 1,
                    "div1": 1,
                    "div_value": 1,
                    "divider": 2,
                    "divisor": 2,
                    "param1_val": 1,
                    "param1_value": 11,
                    "param_value": 1,
                    "pclk2_freq": 1,
                    "settings_element1": 1,
                    "temp_var1": 1,
                    "temp_var2": 1,
                    "temp_var4": 1,
                    "tmp_var2": 1,
                    "value2": 4
                },
                "iVar6": {
                    "base_addr": 3,
                    "base_address": 17,
                    "config_address": 1,
                    "current_param_val": 1,
                    "data_ptr": 1,
                    "device_base_address": 1,
                    "hardware_ptr": 1,
                    "memory_address": 1,
                    "param1_deref_value": 1,
                    "peripheral_base_addr": 1,
                    "ptr_value": 1,
                    "register_address": 1,
                    "settings_element0": 1
                },
                "param_1": {
                    "clock_config": 1,
                    "clock_data": 1,
                    "clock_params": 1,
                    "config": 2,
                    "config_data": 3,
                    "config_params": 6,
                    "config_settings": 1,
                    "configuration": 2,
                    "device_config": 1,
                    "input_array": 2,
                    "input_values": 1,
                    "param": 1,
                    "param_array": 1,
                    "parameters": 4,
                    "peripheral_config": 1,
                    "register_info": 1,
                    "settings": 2
                },
                "uVar3": {
                    "adjusted_freq1": 1,
                    "adjusted_pclk2_freq": 1,
                    "calc_freq": 1,
                    "calc_result": 1,
                    "calculated_value": 1,
                    "calculated_value2": 1,
                    "calculation": 2,
                    "calculation1": 1,
                    "calculation2": 2,
                    "clock_value": 1,
                    "div_result": 1,
                    "divided_pclk_freq": 1,
                    "divided_value": 1,
                    "divisor": 2,
                    "freq3": 1,
                    "freq_div": 1,
                    "freq_ratio1": 1,
                    "frequency3": 1,
                    "frequency_3": 1,
                    "mask": 1,
                    "multiplier": 1,
                    "pclk_div": 1,
                    "temp2": 1,
                    "temp_value": 2,
                    "temp_var": 1,
                    "temp_var2": 1,
                    "tmp_value": 1
                }
            },
            "called": [
                "FUN_08002250",
                "FUN_08002220"
            ],
            "calling": [
                "FUN_08002724"
            ],
            "code": "\nvoid update_configuration_settings_080025e8(int *config_params)\n\n{\n  int pclk_freq;\n  int adjusted_pclk_freq;\n  uint divisor;\n  int value1;\n  int param1_value;\n  int base_address;\n  \n  base_address = *config_params;\n  divisor = config_params[4];\n  *(uint *)(base_address + 0x10) = *(uint *)(base_address + 0x10) & 0xffffcfff | config_params[3];\n  *(uint *)(base_address + 0xc) = config_params[2] | divisor | config_params[5] | *(uint *)(base_address + 0xc) & 0xffffe9f3;\n  *(uint *)(base_address + 0x14) = *(uint *)(base_address + 0x14) & 0xfffffcff | config_params[6];\n  if (base_address == 0x40013800) {\n    pclk_freq = HAL_RCC_GetPCLK2Freq();\n    value1 = (int)(((ulonglong)(uint)(pclk_freq * 0x19) / (ulonglong)(uint)(config_params[1] << 2)) / 100);\n    pclk_freq = HAL_RCC_GetPCLK2Freq();\n    param1_value = config_params[1];\n    adjusted_pclk_freq = HAL_RCC_GetPCLK2Freq();\n    adjusted_pclk_freq = (uint)(pclk_freq * 0x19) / (uint)(param1_value << 2) +\n            (int)(((ulonglong)(uint)(adjusted_pclk_freq * 0x19) / (ulonglong)(uint)(config_params[1] << 2)) / 100) *\n            -100;\n    pclk_freq = HAL_RCC_GetPCLK2Freq();\n    divisor = (uint)(pclk_freq * 0x19) / (uint)(config_params[1] << 2);\n    pclk_freq = HAL_RCC_GetPCLK2Freq();\n  }\n  else {\n    pclk_freq = HAL_RCC_GetPCLK1Freq();\n    value1 = (int)(((ulonglong)(uint)(pclk_freq * 0x19) / (ulonglong)(uint)(config_params[1] << 2)) / 100);\n    pclk_freq = HAL_RCC_GetPCLK1Freq();\n    param1_value = config_params[1];\n    adjusted_pclk_freq = HAL_RCC_GetPCLK1Freq();\n    adjusted_pclk_freq = (uint)(pclk_freq * 0x19) / (uint)(param1_value << 2) +\n            (int)(((ulonglong)(uint)(adjusted_pclk_freq * 0x19) / (ulonglong)(uint)(config_params[1] << 2)) / 100) *\n            -100;\n    pclk_freq = HAL_RCC_GetPCLK1Freq();\n    divisor = (uint)(pclk_freq * 0x19) / (uint)(config_params[1] << 2);\n    pclk_freq = HAL_RCC_GetPCLK1Freq();\n  }\n  *(uint *)(base_address + 8) =\n       (((divisor + (int)(((ulonglong)(uint)(pclk_freq * 0x19) / (ulonglong)(uint)(config_params[1] << 2)) / 100\n                       ) * -100) * 0x10 + 0x32) / 100 & 0xf | (adjusted_pclk_freq * 0x10 + 0x32U) / 100 & 0xf0) +\n       value1 * 0x10;\n  return;\n}\n\n",
            "current_name": "update_configuration_settings_080025e8",
            "entrypoint": "0x080025e8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080025e8": "update_configuration_settings_080025e8",
                "iVar1": "pclk_freq",
                "iVar2": "adjusted_pclk_freq",
                "iVar4": "value1",
                "iVar5": "param1_value",
                "iVar6": "base_address",
                "param_1": "config_params",
                "uVar3": "divisor"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002724": {
            "additional_data": {
                "FUN_080025e8": {
                    "check_uart_configuration": 1,
                    "configure_uart": 3,
                    "function_b": 1,
                    "initialize_additional_uart_dependencies": 1,
                    "initialize_uart": 1,
                    "initialize_uart_configuration": 1,
                    "initialize_uart_instance": 1,
                    "initialize_uart_pins": 1,
                    "set_uart_config": 1,
                    "uart_set_config": 1
                },
                "FUN_08002724": {
                    "init_uart": 1,
                    "initialize_uart": 27,
                    "initialize_uart_connection": 1,
                    "initialize_uart_device": 2
                },
                "FUN_08004e7c": {
                    "function_a": 1,
                    "initialize_additional_uart_settings": 1,
                    "initialize_uart_parameters": 1,
                    "initialize_uart_peripheral": 1,
                    "initialize_uart_peripherals": 3,
                    "process_uart_data": 1,
                    "reset_uart_configuration": 1,
                    "set_uart_config_physical_layer": 1,
                    "set_uart_flags": 1,
                    "uart_msp_init": 1
                },
                "HAL_UART_MspInit": {
                    "initialize_uart_dependencies": 1,
                    "initialize_uart_hardware": 1,
                    "initialize_uart_peripheral": 1,
                    "initialize_uart_peripherals": 7,
                    "initialize_uart_physical_layer": 1
                },
                "UART_SetConfig": {
                    "configure_uart": 6,
                    "set_uart_config": 2,
                    "set_uart_configuration": 3
                },
                "iVar1": {
                    "device_address": 1,
                    "device_handle": 1,
                    "uart_address": 7,
                    "uart_base_address": 6,
                    "uart_handle": 11,
                    "uart_handle_temp": 1,
                    "uart_instance": 1,
                    "uart_ptr": 1,
                    "uart_value": 1,
                    "uart_variable": 1
                },
                "param_1": {
                    "device": 1,
                    "device_config": 1,
                    "uart_config": 13,
                    "uart_handle": 4,
                    "uart_instance": 9,
                    "uart_params": 1,
                    "uart_pointer": 1,
                    "uart_settings": 1
                }
            },
            "called": [
                "FUN_08004e7c",
                "FUN_080025e8"
            ],
            "calling": [
                "FUN_0800458c"
            ],
            "code": "\nundefined4 initialize_uart_device_08002724(int *uart_config)\n\n{\n  int uart_handle;\n  \n  if (uart_config != (int *)0x0) {\n    if (*(char *)((int)uart_config + 0x39) == '\\0') {\n      *(undefined *)(uart_config + 0xe) = 0;\n      initialize_uart_peripherals();\n    }\n    *(undefined *)((int)uart_config + 0x39) = 2;\n    *(uint *)(*uart_config + 0xc) = *(uint *)(*uart_config + 0xc) & 0xffffdfff;\n    configure_uart(uart_config);\n    uart_handle = *uart_config;\n    *(uint *)(uart_handle + 0x10) = *(uint *)(uart_handle + 0x10) & 0xffffb7ff;\n    *(uint *)(uart_handle + 0x14) = *(uint *)(uart_handle + 0x14) & 0xffffffd5;\n    *(uint *)(uart_handle + 0xc) = *(uint *)(uart_handle + 0xc) | 0x2000;\n    uart_config[0xf] = 0;\n    *(undefined *)((int)uart_config + 0x39) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "initialize_uart_device_08002724",
            "entrypoint": "0x08002724",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002724": "initialize_uart_device_08002724",
                "HAL_UART_MspInit": "initialize_uart_peripherals",
                "UART_SetConfig": "configure_uart",
                "iVar1": "uart_handle",
                "param_1": "uart_config"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800290a": {
            "called": [],
            "calling": [
                "FUN_0800299a"
            ],
            "code": "\nvoid FUNC_0800290a(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800290a",
            "entrypoint": "0x0800290a",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800290a": "FUNC_0800290a"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800290c": {
            "additional_data": {
                "DAT_0800290c": {
                    "invalid_value": 1
                },
                "FUN_0800290c": {
                    "decode_and_update_data": 2,
                    "decode_and_update_flags": 1,
                    "decode_data": 2,
                    "extract_and_process_data": 1,
                    "parse_data": 1,
                    "parse_input_data": 1,
                    "process_binary_data": 2,
                    "process_data": 18,
                    "process_input": 1
                },
                "HAL_UART_RxCpltCallback": {
                    "handle_callback": 2,
                    "handle_rx_complete": 3,
                    "handle_uart_completion": 1
                },
                "Hal_UART_RxcpltCallback": {
                    "handle_uart_callback": 1
                },
                "bVar1": {
                    "byte_val": 2,
                    "byte_value": 19,
                    "byte_var": 1,
                    "decoded_byte": 1,
                    "temp_byte": 6,
                    "temp_flag": 1
                },
                "bVar8": {
                    "bool_val": 1,
                    "bool_value": 2,
                    "bool_var": 1,
                    "check_flag": 1,
                    "check_value": 1,
                    "condition": 1,
                    "condition_flag": 1,
                    "condition_status": 1,
                    "flag": 2,
                    "is_char2": 1,
                    "is_char_not2": 1,
                    "is_condition": 1,
                    "is_condition_met": 7,
                    "is_condition_true": 5,
                    "is_different": 1,
                    "is_true": 1,
                    "is_type2": 1,
                    "is_var8": 1,
                    "result_bool": 1
                },
                "iVar2": {
                    "address": 1,
                    "array_value": 2,
                    "base": 1,
                    "base_addr": 1,
                    "data_offset": 2,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "first_element": 1,
                    "function_pointer": 1,
                    "function_result": 1,
                    "function_return_value": 1,
                    "index": 1,
                    "input_ptr": 1,
                    "offset": 1,
                    "ptr": 4,
                    "ptr_data": 4,
                    "ptr_val": 1,
                    "ptr_value": 1,
                    "value": 1,
                    "var1": 3
                },
                "param_1": {
                    "binary_data": 1,
                    "data": 18,
                    "data_array": 3,
                    "data_buffer": 1,
                    "input_array": 3,
                    "input_buffer": 1,
                    "input_data": 4
                },
                "puVar6": {
                    "array_ptr1": 1,
                    "buffer": 1,
                    "curr_pointer": 1,
                    "data_ptr": 1,
                    "data_ptr_ushort": 1,
                    "decoded_data": 1,
                    "output_data": 1,
                    "pointer1": 2,
                    "ptr1": 1,
                    "ptr_dest": 1,
                    "ptr_short1": 1,
                    "ptr_value1": 2,
                    "ushort_pointer": 6,
                    "ushort_pointer1": 2,
                    "ushort_ptr": 4,
                    "ushort_ptr1": 5
                },
                "puVar7": {
                    "array_ptr2": 1,
                    "new_buffer": 1,
                    "new_pointer": 1,
                    "new_ushort_pointer": 1,
                    "next_decoded_data": 1,
                    "next_ptr": 1,
                    "next_ushort_pointer": 1,
                    "output_data_ptr": 1,
                    "pointer2": 2,
                    "ptr2": 1,
                    "ptr_short2": 1,
                    "ptr_value2": 2,
                    "temp_ptr_dest": 1,
                    "updated_data_ptr_ushort": 1,
                    "updated_ushort_pointer": 3,
                    "updated_ushort_ptr": 3,
                    "ushort_pointer2": 3,
                    "ushort_ptr2": 6
                },
                "sVar5": {
                    "count": 8,
                    "counter": 10,
                    "decremented_short": 1,
                    "iteration": 1,
                    "iteration_count": 1,
                    "loop_counter": 2,
                    "short_val": 1,
                    "short_value": 1,
                    "temp_short": 4,
                    "updated_short_value": 1,
                    "var4": 1
                },
                "uVar3": {
                    "bitmask": 1,
                    "flags": 1,
                    "mask": 4,
                    "modified_val": 1,
                    "new_value": 2,
                    "result": 2,
                    "temp_u_int": 1,
                    "temp_uint": 3,
                    "temp_value": 3,
                    "temp_var": 2,
                    "uint_val": 1,
                    "unsigned_value": 1,
                    "update_value": 1,
                    "updated_bitmask": 1,
                    "updated_value": 3,
                    "value": 1,
                    "var2": 3
                },
                "uVar4": {
                    "decoded_value": 1,
                    "int_value": 1,
                    "mask_val": 1,
                    "secondary_value": 1,
                    "temp_u_int2": 1,
                    "temp_uint2": 2,
                    "temp_uint32": 1,
                    "temp_val": 1,
                    "temp_value": 6,
                    "temp_value2": 1,
                    "temp_var": 1,
                    "temp_var1": 1,
                    "temp_var2": 1,
                    "undefined4_val": 1,
                    "undefined_value": 1,
                    "updated_value": 1,
                    "user_data": 1,
                    "value": 5,
                    "var3": 3
                }
            },
            "called": [
                "FUN_08004c30"
            ],
            "calling": [
                "FUN_0800299a"
            ],
            "code": "\nundefined4 process_binary_data_0800290c(int *data)\n\n{\n  byte byte_value;\n  int ptr_data;\n  uint mask;\n  undefined4 temp_value;\n  short counter;\n  ushort *ushort_pointer;\n  ushort *ushort_ptr2;\n  bool is_condition_met;\n  \n  if ((*(byte *)((int)data + 0x39) & 0xef) != 0x22) {\n    return 2;\n  }\n  ptr_data = *data;\n  ushort_pointer = (ushort *)data[10];\n  if (data[2] == 0x1000) {\n    if (data[4] == 0) {\n      ushort_ptr2 = ushort_pointer + 1;\n      *ushort_pointer = (ushort)((uint)(*(int *)(ptr_data + 4) << 0x17) >> 0x17);\n    }\n    else {\n      ushort_ptr2 = (ushort *)((int)ushort_pointer + 1);\n      *ushort_pointer = (ushort)*(int *)(ptr_data + 4) & 0xff;\n    }\n    data[10] = (int)ushort_ptr2;\n  }\n  else {\n    if (data[4] == 0) {\n      byte_value = (byte)*(undefined4 *)(ptr_data + 4);\n      data[10] = (int)ushort_pointer + 1;\n    }\n    else {\n      temp_value = *(undefined4 *)(ptr_data + 4);\n      data[10] = (int)ushort_pointer + 1;\n      byte_value = (byte)temp_value & 0x7f;\n    }\n    *(byte *)ushort_pointer = byte_value;\n  }\n  counter = *(short *)((int)data + 0x2e) + -1;\n  *(short *)((int)data + 0x2e) = counter;\n  if (counter == 0) {\n    ptr_data = *data;\n    *(uint *)(ptr_data + 0xc) = *(uint *)(ptr_data + 0xc) & 0xffffffdf;\n    is_condition_met = *(char *)((int)data + 0x39) != '2';\n    if (is_condition_met) {\n      mask = *(uint *)(ptr_data + 0xc) & 0xfffffeff;\n    }\n    else {\n      ptr_data = 0x12;\n      mask = 0x32;\n    }\n    if (is_condition_met) {\n      *(uint *)(ptr_data + 0xc) = mask;\n      mask = *(uint *)(ptr_data + 0x14) & 0xfffffffe;\n    }\n    if (is_condition_met) {\n      *(uint *)(ptr_data + 0x14) = mask;\n      ptr_data = 1;\n    }\n    *(char *)((int)data + 0x39) = (char)ptr_data;\n    handle_rx_complete();\n  }\n  return 0;\n}\n\n",
            "current_name": "process_binary_data_0800290c",
            "entrypoint": "0x0800290c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800290c": "process_binary_data_0800290c",
                "HAL_UART_RxCpltCallback": "handle_rx_complete",
                "bVar1": "byte_value",
                "bVar8": "is_condition_met",
                "iVar2": "ptr_data",
                "param_1": "data",
                "puVar6": "ushort_pointer",
                "puVar7": "ushort_ptr2",
                "sVar5": "counter",
                "uVar3": "mask",
                "uVar4": "temp_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002998": {
            "called": [],
            "calling": [
                "FUN_0800299a"
            ],
            "code": "\nvoid FUNC_08002998(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08002998",
            "entrypoint": "0x08002998",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08002998": "FUNC_08002998"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800299a": {
            "additional_data": {
                "FUNC_0800290a": {
                    "function_a": 1
                },
                "FUNC_08002998": {
                    "function_b": 1
                },
                "FUN_0800290c": {
                    "adjust_parameter": 1
                },
                "FUN_0800299a": {
                    "check_and_handle_uart_data": 1,
                    "check_and_process_data": 1,
                    "check_and_process_input": 1,
                    "extract_data": 1,
                    "handle_data": 1,
                    "handle_param1": 1,
                    "handle_received_data": 2,
                    "handle_uart_data": 1,
                    "process_data": 19,
                    "process_input_data": 1,
                    "receive_and_process_data": 1
                },
                "HAL_UART_ErrorCallback": {
                    "error_callback": 1,
                    "handle_error": 9,
                    "handle_uart_error": 1
                },
                "HAL_UART_TxCpltCallback": {
                    "handle_complete": 1,
                    "handle_transmission": 2,
                    "handle_transmission_complete": 1,
                    "handle_transmit_complete": 2,
                    "handle_tx_complete": 2,
                    "handle_uart_tx_complete": 1,
                    "transmit_complete": 1,
                    "tx_complete_callback": 1
                },
                "HUART_ErrorCallback": {
                    "handle_error": 1
                },
                "UART_Receive_IT": {
                    "receive_data": 11
                },
                "bVar8": {
                    "bool_value": 1,
                    "check": 1,
                    "check_flag": 1,
                    "condition": 9,
                    "flag": 1,
                    "flag1": 1,
                    "flag2": 2,
                    "flag3": 1,
                    "is_flag2_set": 1,
                    "is_flag_set": 2,
                    "is_negative": 2,
                    "is_set": 1,
                    "is_true": 3,
                    "var8": 5
                },
                "param_1": {
                    "data": 21,
                    "data_array": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "input_data": 2,
                    "input_params": 1,
                    "param_array": 1,
                    "parameter": 1,
                    "parameters": 1,
                    "uart_data": 1
                },
                "puVar4": {
                    "data_ptr": 1,
                    "data_ptr2": 1,
                    "pointer": 9,
                    "pointer1": 8,
                    "pointer_var4": 1,
                    "ptr": 2,
                    "ptr1": 1,
                    "temp_pointer": 2,
                    "temp_ptr": 1,
                    "temp_ptr1": 1,
                    "temp_var": 1,
                    "var4": 3
                },
                "puVar6": {
                    "current_data": 2,
                    "current_pointer": 1,
                    "data_ptr": 1,
                    "pointer": 1,
                    "pointer2": 11,
                    "pointer_var6": 1,
                    "ptr": 3,
                    "ptr2": 2,
                    "ptr_data": 2,
                    "ptr_to_input_data": 1,
                    "ptr_var1": 1,
                    "temp": 1,
                    "temp_pointer": 1,
                    "temp_pointer2": 1,
                    "var6": 2
                },
                "sVar2": {
                    "count": 8,
                    "counter": 16,
                    "short_value": 1,
                    "value2": 1,
                    "var2": 5
                },
                "uVar1": {
                    "first_value": 5,
                    "flag1": 1,
                    "input_size": 1,
                    "temp_var1": 1,
                    "value1": 18,
                    "var1": 5
                },
                "uVar3": {
                    "first_element": 1,
                    "flag": 2,
                    "param_value": 1,
                    "second_value": 1,
                    "value1": 3,
                    "value2": 17,
                    "value3": 1,
                    "var3": 5
                },
                "uVar5": {
                    "byte_val": 1,
                    "byte_value": 2,
                    "flag": 9,
                    "new_flag": 3,
                    "new_value": 4,
                    "status": 1,
                    "temp_flag": 1,
                    "temp_value": 1,
                    "temp_var2": 1,
                    "undefined_var": 1,
                    "value3": 1,
                    "value4": 1,
                    "var5": 5
                },
                "uVar7": {
                    "bool_val": 1,
                    "bool_value": 1,
                    "check": 1,
                    "flag": 10,
                    "flag2": 11,
                    "value3": 1,
                    "value5": 1,
                    "var7": 5
                }
            },
            "called": [
                "FUN_0800290c",
                "FUN_0800290a",
                "FUN_08002998"
            ],
            "calling": [],
            "code": "\nvoid check_and_process_data_0800299a(uint **data)\n\n{\n  uint value1;\n  short counter;\n  uint value2;\n  uint *pointer;\n  undefined flag;\n  uint *pointer2;\n  uint flag2;\n  bool condition;\n  \n  pointer2 = *data;\n  value2 = *pointer2;\n  value1 = pointer2[3];\n  if ((value2 & 0xf) == 0) {\n    if (((int)(value2 << 0x1a) < 0) && ((int)(value1 << 0x1a) < 0)) {\n      receive_data();\n      return;\n    }\n  }\n  else {\n    flag2 = pointer2[5] & 1;\n    if ((flag2 != 0) || ((value1 & 0x120) != 0)) {\n      pointer2 = (uint *)(value2 << 0x1f);\n      if ((int)pointer2 < 0) {\n        condition = (int)(value1 << 0x17) < 0;\n        if (condition) {\n          pointer2 = (uint *)((uint)data[0xf] | 1);\n        }\n        if (condition) {\n          data[0xf] = pointer2;\n        }\n      }\n      if (((int)(value2 << 0x1d) < 0) && (flag2 != 0)) {\n        data[0xf] = (uint *)((uint)data[0xf] | 2);\n      }\n      if (((int)(value2 << 0x1e) < 0) && (flag2 != 0)) {\n        data[0xf] = (uint *)((uint)data[0xf] | 4);\n      }\n      if (((int)(value2 << 0x1c) < 0) && (flag2 != 0)) {\n        data[0xf] = (uint *)((uint)data[0xf] | 8);\n      }\n      if (data[0xf] == (uint *)0x0) {\n        return;\n      }\n      if (((int)(value2 << 0x1a) < 0) && ((int)(value1 << 0x1a) < 0)) {\n        receive_data(data);\n      }\n      pointer2 = *data;\n      if ((-1 < (int)data[0xf] << 0x1c) && ((pointer2[5] & 0x40) == 0)) {\n        handle_error(data);\n        data[0xf] = (uint *)0x0;\n        return;\n      }\n      pointer2[3] = pointer2[3] & 0xfffffedf;\n      pointer2[5] = pointer2[5] & 0xfffffffe;\n      *(undefined *)((int)data + 0x39) = 1;\n      handle_error(data);\n      return;\n    }\n  }\n  if (((int)(value2 << 0x18) < 0) && ((int)(value1 << 0x18) < 0)) {\n    if ((*(byte *)((int)data + 0x39) & 0xdf) == 0x12) {\n      pointer = data[8];\n      if (data[2] == (uint *)0x1000) {\n        pointer2[1] = *(ushort *)pointer & 0x1ff;\n        if (data[4] == (uint *)0x0) {\n          pointer = (uint *)((int)pointer + 2);\n        }\n        else {\n          pointer = (uint *)((int)pointer + 1);\n        }\n        data[8] = pointer;\n      }\n      else {\n        data[8] = (uint *)((int)pointer + 1);\n        pointer2[1] = (uint)*(byte *)pointer;\n      }\n      counter = *(short *)((int)data + 0x26) + -1;\n      *(short *)((int)data + 0x26) = counter;\n      if (counter == 0) {\n        pointer2[3] = pointer2[3] & 0xffffff7f;\n        pointer2[3] = pointer2[3] | 0x40;\n        return;\n      }\n    }\n  }\n  else if (((int)(value2 << 0x19) < 0) && ((int)(value1 << 0x19) < 0)) {\n    pointer2[3] = pointer2[3] & 0xffffffbf;\n    if (*(char *)((int)data + 0x39) == '2') {\n      flag = 0x22;\n    }\n    else {\n      flag = 1;\n    }\n    *(undefined *)((int)data + 0x39) = flag;\n    handle_tx_complete(data);\n  }\n  return;\n}\n\n",
            "current_name": "check_and_process_data_0800299a",
            "entrypoint": "0x0800299a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800299a": "check_and_process_data_0800299a",
                "HAL_UART_ErrorCallback": "handle_error",
                "HAL_UART_TxCpltCallback": "handle_tx_complete",
                "UART_Receive_IT": "receive_data",
                "bVar8": "condition",
                "param_1": "data",
                "puVar4": "pointer",
                "puVar6": "pointer2",
                "sVar2": "counter",
                "uVar1": "value1",
                "uVar3": "value2",
                "uVar5": "flag",
                "uVar7": "flag2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ad0": {
            "additional_data": {
                "0x10": {
                    "data2": 1
                },
                "0x19": {
                    "register_address3": 1,
                    "register_address_4": 1
                },
                "0x1a": {
                    "register_address5": 1,
                    "register_address_7": 1
                },
                "0x1b": {
                    "register_address6": 1,
                    "register_address_8": 1
                },
                "0x1c": {
                    "data3": 1,
                    "register_address_9": 1
                },
                "0x1d": {
                    "register_address4": 1,
                    "register_address_6": 1
                },
                "0x6b": {
                    "register_address1": 1,
                    "register_address_2": 1
                },
                "0x6c": {
                    "register_address2": 1,
                    "register_address_3": 1
                },
                "0x75": {
                    "register_address": 1,
                    "register_address_1": 1
                },
                "0x80": {
                    "data1": 1,
                    "value_1": 1
                },
                "0xd0": {
                    "device_address": 2
                },
                "FUB_08002ad0": {
                    "initialize_mpu9250": 1
                },
                "FUN_08002ad0": {
                    "configure_mpu9250": 3,
                    "init_mpu9250": 1,
                    "initialize_mpu9250": 24,
                    "initialize_mpu9250_sensor": 2
                },
                "FUN_0800403c": {
                    "i2_c_read_byte": 5
                },
                "FUN_0800407c": {
                    "i2_c_write_byte": 5
                },
                "I2C_ReadByte": {
                    "read_byte_from_i2_c": 14,
                    "read_byte_via_i2_c": 1,
                    "read_i2_c_byte": 2,
                    "read_mpu9250_register": 1
                },
                "I2C_WriteByte": {
                    "write_byte_to_i2_c": 14,
                    "write_byte_via_i2_c": 1,
                    "write_i2_c_byte": 2,
                    "write_mpu9250_register": 1
                },
                "param_1": {
                    "addr": 1,
                    "address": 6,
                    "byte_address": 1,
                    "dev_address": 1,
                    "device_address": 6,
                    "param1": 4,
                    "register_address": 1,
                    "unused": 1,
                    "unused_param1": 2,
                    "unused_param_1": 1
                },
                "param_2": {
                    "data": 1,
                    "param2": 4,
                    "reg": 2,
                    "register": 5,
                    "register_address": 8,
                    "unused": 1,
                    "unused_param2": 2,
                    "unused_param_2": 1
                },
                "param_3": {
                    "data": 8,
                    "data_value": 1,
                    "filename": 1,
                    "param3": 4,
                    "register_data": 1,
                    "unused": 1,
                    "unused_param3": 2,
                    "unused_param_3": 1,
                    "value": 5
                },
                "param_4": {
                    "data_length": 1,
                    "length": 8,
                    "line_number": 1,
                    "num_bytes": 2,
                    "param4": 4,
                    "register_count": 1,
                    "unused": 1,
                    "unused_param4": 2,
                    "unused_param_4": 1,
                    "wait": 1,
                    "write_size": 2
                }
            },
            "called": [
                "FUN_0800403c",
                "FUN_0800407c"
            ],
            "calling": [
                "FUN_08002ea0"
            ],
            "code": "\nvoid initialize_mpu9250_sensor_08002ad0(void)\n\n{\n  read_byte_from_i2_c(0xd0,0x75,\"../Src/MPU9250.c\",0x3b);\n  write_byte_to_i2_c(0xd0,0x6b,0x80,1);\n  write_byte_to_i2_c(0xd0,0x6b,1);\n  write_byte_to_i2_c(0xd0,0x6c,0,1);\n  write_byte_to_i2_c(0xd0,0x19,0,1);\n  write_byte_to_i2_c(0xd0,0x1d,3,1);\n  write_byte_to_i2_c(0xd0,0x1a,3,1);\n  write_byte_to_i2_c(0xd0,0x1b,0x10,1);\n  write_byte_to_i2_c(0xd0,0x1c,8,1);\n  return;\n}\n\n",
            "current_name": "initialize_mpu9250_sensor_08002ad0",
            "entrypoint": "0x08002ad0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002ad0": "initialize_mpu9250_sensor_08002ad0",
                "I2C_ReadByte": "read_byte_from_i2_c",
                "I2C_WriteByte": "write_byte_to_i2_c"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002b48": {
            "additional_data": {
                "0x38000000": {
                    "floating_point_constant2": 1
                },
                "0x3b": {
                    "register_address": 2
                },
                "0x40800000": {
                    "floating_point_constant1": 1
                },
                "0x58": {
                    "line_number": 1
                },
                "0xd0": {
                    "i2_c_address": 1
                },
                "0xffff0000": {
                    "bit_mask": 1
                },
                "6": {
                    "byte_count": 1,
                    "data_length": 1
                },
                "D0": {
                    "device_address": 1
                },
                "DAT_200002d0": {
                    "acceleration_scaled_x": 1,
                    "converted_float1": 1,
                    "final_data1": 1,
                    "final_value1": 1,
                    "float_value1": 1,
                    "processed_data1": 1,
                    "result1": 8,
                    "result_var1": 1,
                    "sensor_data_converted1": 1
                },
                "DAT_200002d4": {
                    "acceleration_scaled_y": 1,
                    "converted_float2": 1,
                    "final_data2": 1,
                    "final_value2": 1,
                    "float_value2": 1,
                    "processed_data2": 1,
                    "result2": 8,
                    "result_var2": 1,
                    "sensor_data_converted2": 1
                },
                "DAT_200002d8": {
                    "acceleration_scaled_z": 1,
                    "converted_float3": 1,
                    "final_data3": 1,
                    "final_value3": 1,
                    "float_value3": 1,
                    "processed_data3": 1,
                    "result3": 8,
                    "result_var3": 1,
                    "sensor_data_converted3": 1
                },
                "DAT_200002f4": {
                    "acceleration_data_byte0": 1,
                    "combined_bytes2": 1,
                    "combined_bytes_reversed": 1,
                    "combined_data2": 1,
                    "combined_low_data": 1,
                    "combined_value2": 1,
                    "concatenated_bytes2": 1,
                    "concatenated_data2": 2,
                    "converted_data2": 3,
                    "filtered_data8_bit": 1,
                    "lower_byte": 1,
                    "sensor_data_concat_low": 1,
                    "upper_byte": 1
                },
                "DAT_200002f6": {
                    "acceleration_data_byte1": 1,
                    "combined_bytes": 2,
                    "combined_bytes1": 1,
                    "combined_data1": 1,
                    "combined_high_data": 1,
                    "combined_value1": 1,
                    "concatenated_bytes1": 1,
                    "concatenated_data1": 2,
                    "converted_data1": 3,
                    "filtered_data16_bit": 1,
                    "lower_byte": 1,
                    "sensor_data_concat": 1
                },
                "DAT_200002f8": {
                    "combined_bytes3": 1,
                    "combined_bytes_with_mask": 1,
                    "combined_data3": 1,
                    "combined_input_data": 1,
                    "combined_value3": 1,
                    "concatenated_bytes3": 1,
                    "concatenated_data3": 2,
                    "converted_data3": 3,
                    "filtered_data16_bit_mask": 1,
                    "high_byte_concat": 1,
                    "masked_byte": 2,
                    "masked_sensor_data_byte0": 1
                },
                "FUN_08000c44": {
                    "calculate_checksum": 1,
                    "function1": 1,
                    "read_from_i2_c": 1,
                    "read_i2_c_value": 1
                },
                "FUN_08000cec": {
                    "calculate_value": 1,
                    "function3": 1,
                    "multiply_floats": 1,
                    "perform_calculation": 1
                },
                "FUN_08002b48": {
                    "initialize_imu": 1,
                    "initialize_mpu9250": 3,
                    "read_accelerometer_data": 2,
                    "read_and_calculate_sensor_data": 1,
                    "read_and_convert_data": 1,
                    "read_and_convert_mpu9250_data": 1,
                    "read_and_convert_mpu_data": 1,
                    "read_and_convert_sensor_data": 1,
                    "read_and_convert_values": 1,
                    "read_and_process_data": 1,
                    "read_and_process_sensor_data": 5,
                    "read_and_store_sensor_data": 1,
                    "read_data_and_calculate_values": 1,
                    "read_mpu9250_data": 5,
                    "read_mpu9250_values": 1,
                    "read_mpu_data": 1,
                    "read_sensor_data": 3,
                    "update_sensor_data": 1
                },
                "FUN_080040e8": {
                    "calculate_float_product": 1,
                    "calculate_float_sum": 1,
                    "function2": 1,
                    "initialize_variables": 1
                },
                "I2C_ReadByteArray": {
                    "read_data_from_sensor": 1,
                    "read_imu_data": 1
                },
                "VAR_200002f4": {
                    "concatenated_data2": 1
                },
                "VAR_200002f6": {
                    "concatenated_data1": 1
                },
                "VAR_200002f8": {
                    "concatenated_data3": 1
                },
                "iVar2": {
                    "accel_x": 1,
                    "byte2": 1,
                    "converted_byte2": 1,
                    "converted_data1": 1,
                    "converted_data2": 3,
                    "converted_value1": 2,
                    "converted_value2": 3,
                    "converted_var2": 1,
                    "filtered_data16_bit_signed_mask": 1,
                    "first_value": 1,
                    "high_byte": 2,
                    "high_nibble": 1,
                    "high_word_value": 1,
                    "input_data_int": 1,
                    "int_value2": 3,
                    "int_var2": 1,
                    "low_byte": 1,
                    "masked_sensor_data_raw": 1,
                    "sensor_data2_int": 1,
                    "sensor_data_low_byte": 1,
                    "word_value": 1
                },
                "iVar3": {
                    "accel_y": 1,
                    "acceleration_data_raw": 1,
                    "byte1": 1,
                    "byte_value": 1,
                    "converted_byte1": 1,
                    "converted_data1": 3,
                    "converted_data2": 1,
                    "converted_value1": 3,
                    "converted_value2": 2,
                    "converted_var3": 1,
                    "filtered_data16_bit_signed": 1,
                    "high_byte": 1,
                    "high_byte_value": 1,
                    "high_data_int": 1,
                    "int_value1": 3,
                    "int_var1": 1,
                    "low_byte": 2,
                    "low_nibble": 1,
                    "second_value": 1,
                    "sensor_data1_int": 1,
                    "sensor_data_high_byte": 1
                },
                "in_r3": {
                    "accelerometer_data": 1,
                    "config_flags": 1,
                    "data_mask": 1,
                    "input": 1,
                    "input_data": 7,
                    "input_flag": 1,
                    "input_val": 1,
                    "input_value": 10,
                    "masked_input": 1,
                    "sensor_data": 6,
                    "status": 1
                },
                "local_14": {
                    "accel_data2": 1,
                    "byte_array2": 5,
                    "converted_flag": 1,
                    "filtered_data": 1,
                    "high_byte_mask": 1,
                    "high_word": 2,
                    "low_byte_data": 1,
                    "masked_data": 1,
                    "masked_input": 2,
                    "masked_input_data": 1,
                    "masked_sensor_data": 2,
                    "masked_status": 1,
                    "masked_value": 3,
                    "read_data2": 2,
                    "sensor_data2": 2,
                    "sensor_data_low": 1,
                    "sensor_mask": 1,
                    "temp2": 1,
                    "temp_mask": 1,
                    "temp_var2": 1
                },
                "local_18": {
                    "accel_data1": 1,
                    "acceleration_data": 1,
                    "byte_array": 4,
                    "byte_array1": 6,
                    "byte_array_data": 1,
                    "byte_array_result": 1,
                    "data1": 1,
                    "data_array": 1,
                    "high_byte": 2,
                    "high_byte_data": 2,
                    "raw_data": 1,
                    "read_data": 1,
                    "read_data1": 2,
                    "sensor_data1": 2,
                    "sensor_data_high": 1,
                    "sensor_value": 1,
                    "temp1": 1,
                    "temp_byte": 1,
                    "temp_var1": 1
                },
                "param_1": {
                    "input_val": 1
                },
                "uVar1": {
                    "conversion_factor": 1,
                    "converted_data": 1,
                    "converted_float": 2,
                    "converted_value": 4,
                    "float_result": 1,
                    "float_value": 8,
                    "float_var": 1,
                    "high_float": 1,
                    "multiplier": 1,
                    "scaled_value": 1,
                    "sensor_value": 1
                }
            },
            "called": [
                "FUN_08000c44",
                "FUN_080040e8",
                "FUN_08000cec"
            ],
            "calling": [
                "FUN_08002f28"
            ],
            "code": "\nvoid read_and_process_sensor_data_08002b48(void)\n\n{\n  undefined4 float_value;\n  uint input_value;\n  int converted_data2;\n  int int_value1;\n  undefined4 byte_array1;\n  undefined4 byte_array2;\n  \n  byte_array1 = 0;\n  byte_array2 = input_value & 0xffff0000;\n  read_imu_data(0xd0,0x3b,&byte_array1,6,\"../Src/MPU9250.c\",0x58);\n  DAT_200002f6 = CONCAT11(byte_array1._2_1_,byte_array1._3_1_);\n  DAT_200002f4 = CONCAT11((undefined)byte_array1,byte_array1._1_1_);\n  DAT_200002f8 = CONCAT11((undefined)byte_array2,byte_array2._1_1_);\n  int_value1 = (int)DAT_200002f6;\n  converted_data2 = (int)DAT_200002f8;\n  float_value = __floatsisf();\n  float_value = __aeabi_fmul(float_value,0x40800000);\n  DAT_200002d0 = __aeabi_fmul(float_value,0x38000000);\n  float_value = __floatsisf(int_value1);\n  float_value = __aeabi_fmul(float_value,0x40800000);\n  DAT_200002d4 = __aeabi_fmul(float_value,0x38000000);\n  float_value = __floatsisf(converted_data2);\n  float_value = __aeabi_fmul(float_value,0x40800000);\n  DAT_200002d8 = __aeabi_fmul(float_value,0x38000000);\n  return;\n}\n\n",
            "current_name": "read_and_process_sensor_data_08002b48",
            "entrypoint": "0x08002b48",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002b48": "read_and_process_sensor_data_08002b48",
                "I2C_ReadByteArray": "read_imu_data",
                "iVar2": "converted_data2",
                "iVar3": "int_value1",
                "in_r3": "input_value",
                "local_14": "byte_array2",
                "local_18": "byte_array1",
                "uVar1": "float_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002bf0": {
            "additional_data": {
                "DAT_20000000": {
                    "acceleration_x_offset": 1,
                    "constant1": 3
                },
                "DAT_20000004": {
                    "constant2": 3,
                    "gyro_x_offset": 1
                },
                "DAT_20000008": {
                    "constant3": 3,
                    "gyro_y_offset": 1
                },
                "DAT_200002be": {
                    "accel_config_register_value2": 1,
                    "acceleration_data_byte2": 1,
                    "acceleration_x_msb": 1,
                    "combined_accel_data_copy": 1,
                    "combined_bytes2": 1,
                    "combined_sensor_data2": 1,
                    "concatenated_byte2": 1,
                    "concatenated_value2": 1,
                    "converted_data2": 1,
                    "result2": 1,
                    "sensor_data2": 1,
                    "sensor_data3": 1,
                    "sensor_data_concat2": 2,
                    "temperature_low_byte": 1
                },
                "DAT_200002c0": {
                    "accel_config_register_value": 1,
                    "acceleration_data_byte": 1,
                    "acceleration_y": 1,
                    "combined_accel_data": 1,
                    "combined_bytes1": 1,
                    "combined_sensor_data1": 1,
                    "concatenated_byte1": 1,
                    "concatenated_value1": 1,
                    "converted_data1": 1,
                    "result1": 1,
                    "sensor_data1": 2,
                    "sensor_data_concat1": 2,
                    "temperature_high_byte": 1
                },
                "DAT_200002c2": {
                    "combined_bytes3": 1,
                    "combined_gyro_data": 1,
                    "combined_sensor_data3": 1,
                    "concatenated_byte3": 1,
                    "concatenated_value3": 1,
                    "converted_data3": 1,
                    "gyro_config_register_value": 1,
                    "gyro_data_byte": 1,
                    "gyro_high_byte": 1,
                    "gyro_y": 1,
                    "result3": 1,
                    "sensor_data2": 1,
                    "sensor_data3": 1,
                    "sensor_data_concat3": 1,
                    "sensor_data_half_word_concat": 1
                },
                "DAT_200002c4": {
                    "accel_converted_value": 1,
                    "accel_x_converted": 1,
                    "acceleration_x_scaled": 1,
                    "calculated_value1": 2,
                    "converted_temperature": 1,
                    "final_result1": 2,
                    "processed_acceleration_data1": 1,
                    "processed_data1": 2,
                    "processed_value1": 1,
                    "result1": 4
                },
                "DAT_200002c8": {
                    "accel_converted_value2": 1,
                    "accel_y_converted": 1,
                    "calculated_value2": 2,
                    "converted_gyro": 1,
                    "final_result2": 2,
                    "gyro_x_scaled": 1,
                    "processed_acceleration_data2": 1,
                    "processed_data2": 2,
                    "processed_value2": 1,
                    "result2": 4
                },
                "DAT_200002cc": {
                    "accel_z_converted": 1,
                    "calculated_value3": 2,
                    "converted_gyro_high_precision": 1,
                    "final_result3": 2,
                    "gyro_converted_value": 1,
                    "gyro_y_scaled": 1,
                    "processed_data3": 2,
                    "processed_gyro_data": 1,
                    "processed_value3": 1,
                    "result3": 4
                },
                "FUN_08000ad8": {
                    "calculate_acceleration": 1,
                    "calculate_offset": 1,
                    "calculate_second_value": 1,
                    "calculate_value2": 1,
                    "perform_calculation_b": 1,
                    "perform_float_multiplication": 1,
                    "process_data": 1,
                    "read_and_combine_data": 1,
                    "write_register": 1
                },
                "FUN_08000c44": {
                    "calculate_combined_data": 1,
                    "calculate_first_value": 1,
                    "calculate_temperature": 1,
                    "calculate_value1": 1,
                    "convert_byte_to_unsigned": 1,
                    "convert_to_float": 2,
                    "multiply_float": 1,
                    "perform_calculation_a": 1
                },
                "FUN_08000cec": {
                    "apply_correction": 1,
                    "calculate_third_value": 1,
                    "calculate_value3": 1,
                    "extract_sensor_data": 1,
                    "multiply_and_subtract_values": 1,
                    "perform_calculation_c": 1,
                    "perform_float_subtraction": 1,
                    "read_register": 1,
                    "subtract_float": 1
                },
                "FUN_08002bf0": {
                    "initialize_mpu9250": 1,
                    "read_and_calculate_mpu_data": 2,
                    "read_and_calculate_sensor_data": 3,
                    "read_and_calculate_values": 2,
                    "read_and_convert_mpu9250_data": 1,
                    "read_and_process_mpu9250_data": 1,
                    "read_and_process_mpu_data": 1,
                    "read_and_process_sensor_data": 4,
                    "read_mpu9250_data": 1,
                    "read_sensor_data": 15
                },
                "FUN_080040e8": {
                    "initialize_data": 1,
                    "perform_subtraction": 1,
                    "post_process_data": 1,
                    "process_data": 2,
                    "set_delay": 1,
                    "update_mpu_registers": 1,
                    "update_sensor_value": 1,
                    "write_to_memory": 1
                },
                "I2C_ReadByteArray": {
                    "read_byte_array": 3,
                    "read_byte_array_from_i2_c": 7,
                    "read_mpu9250_registers": 1,
                    "read_sensor_data": 1,
                    "read_sensor_data_byte_array": 1,
                    "read_sensor_data_from_i2_c": 1
                },
                "__aeabi_fmul": {
                    "float_multiplication": 1,
                    "floating_point_multiplication": 1,
                    "multiply_float": 2
                },
                "__aeabi_fsub": {
                    "float_subtraction": 1,
                    "floating_point_subtraction": 1,
                    "subtract_float": 2
                },
                "__floatsisf": {
                    "convert_to_float": 2,
                    "convert_to_int_to_float": 1,
                    "int_value_to_float": 1
                },
                "iVar2": {
                    "accel_y": 1,
                    "acceleration_x": 1,
                    "accelerometer_value": 1,
                    "combined_bytes3_as_int": 1,
                    "converted_data2": 1,
                    "converted_sensor_data2": 2,
                    "converted_sensor_data_byte": 1,
                    "converted_value2": 2,
                    "data_byte2": 1,
                    "gyro": 1,
                    "gyro_config_value": 1,
                    "gyro_data1": 1,
                    "gyroscope_value": 1,
                    "high_value": 1,
                    "low_byte": 1,
                    "sensor_data2": 1,
                    "sensor_data2_int": 2,
                    "sensor_data_half_word_concat_integer": 1,
                    "sensor_value2": 1,
                    "temp_int": 1
                },
                "iVar3": {
                    "accel_config_value": 1,
                    "accel_data1": 1,
                    "accel_x": 1,
                    "accelerometer_value": 1,
                    "combined_bytes1_as_int": 1,
                    "converted_data1": 1,
                    "converted_sensor_data1": 2,
                    "converted_sensor_data_byte2": 1,
                    "converted_value1": 2,
                    "data_byte1": 1,
                    "gyro_x": 1,
                    "high_byte": 1,
                    "low_value": 1,
                    "sensor_data1": 1,
                    "sensor_data1_int": 2,
                    "sensor_data_concat1_integer": 1,
                    "sensor_value1": 1,
                    "temp_int2": 1,
                    "temperature": 1,
                    "temperature_value": 1
                },
                "local_1c": {
                    "acceleration_data": 1,
                    "accelerometer_data": 1,
                    "byte_array2": 2,
                    "data_buffer_part": 1,
                    "gyro_byte": 1,
                    "gyro_config": 1,
                    "gyro_data": 5,
                    "gyroscope_data": 2,
                    "low_byte": 1,
                    "other_data_bytes": 1,
                    "sensor_data2": 6,
                    "sensor_data_byte": 1,
                    "sensor_data_byte2": 1,
                    "sensor_data_half_word": 1,
                    "sensor_data_short": 1,
                    "sensor_status": 1,
                    "status": 1,
                    "temp": 1,
                    "temp_data": 1,
                    "temp_value2": 1
                },
                "local_20": {
                    "accel_config": 1,
                    "accel_data": 2,
                    "acceleration_data": 4,
                    "accelerometer_data": 1,
                    "buffer": 1,
                    "byte_array": 2,
                    "data_buffer": 1,
                    "high_byte": 1,
                    "sensor_data": 4,
                    "sensor_data1": 5,
                    "sensor_data_byte": 3,
                    "sensor_data_bytes": 2,
                    "temp_value1": 1,
                    "temperature_byte": 1,
                    "temperature_data": 2
                },
                "param_1": {
                    "address": 2,
                    "device_address": 1,
                    "sensor_type": 1,
                    "sensor_value1": 1
                },
                "param_2": {
                    "address": 1,
                    "register": 2,
                    "register_address": 1,
                    "sensor_value2": 1
                },
                "param_3": {
                    "buffer": 3,
                    "data": 1,
                    "some_data": 1
                },
                "param_4": {
                    "byte_count": 1,
                    "data_size": 1,
                    "sensor_value3": 1,
                    "size": 2
                },
                "uVar1": {
                    "accel_z": 1,
                    "calculated_value": 1,
                    "conversion_factor": 2,
                    "converted_float": 3,
                    "converted_value": 5,
                    "float_val": 1,
                    "float_value": 1,
                    "float_value1": 1,
                    "floating_point_value": 1,
                    "multiplier": 1,
                    "scale_factor": 1,
                    "scaled_value": 3,
                    "scaling_factor": 1
                }
            },
            "called": [
                "FUN_08000c44",
                "FUN_08000ad8",
                "FUN_080040e8",
                "FUN_08000cec"
            ],
            "calling": [
                "FUN_08002f28"
            ],
            "code": "\nvoid read_and_process_sensor_data_08002bf0(void)\n\n{\n  undefined4 converted_value;\n  int sensor_data2_int;\n  int sensor_data1_int;\n  undefined4 sensor_data1;\n  undefined2 sensor_data2;\n  \n  sensor_data1 = 0;\n  sensor_data2 = 0;\n  read_byte_array_from_i2_c(0xd0,0x43,&sensor_data1,6,\"../Src/MPU9250.c\",0x7b);\n  DAT_200002c0 = CONCAT11(sensor_data1._2_1_,sensor_data1._3_1_);\n  DAT_200002be = CONCAT11((undefined)sensor_data1,sensor_data1._1_1_);\n  DAT_200002c2 = CONCAT11((undefined)sensor_data2,sensor_data2._1_1_);\n  sensor_data1_int = (int)DAT_200002c0;\n  sensor_data2_int = (int)DAT_200002c2;\n  converted_value = convert_to_float();\n  converted_value = multiply_float(converted_value,0x447a0000);\n  converted_value = multiply_float(converted_value,0x38000000);\n  DAT_200002c4 = subtract_float(converted_value,DAT_20000000);\n  converted_value = convert_to_float(sensor_data1_int);\n  converted_value = multiply_float(converted_value,0x447a0000);\n  converted_value = multiply_float(converted_value,0x38000000);\n  DAT_200002c8 = subtract_float(converted_value,DAT_20000004);\n  converted_value = convert_to_float(sensor_data2_int);\n  converted_value = multiply_float(converted_value,0x447a0000);\n  converted_value = multiply_float(converted_value,0x38000000);\n  DAT_200002cc = subtract_float(converted_value,DAT_20000008);\n  return;\n}\n\n",
            "current_name": "read_and_process_sensor_data_08002bf0",
            "entrypoint": "0x08002bf0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002bf0": "read_and_process_sensor_data_08002bf0",
                "I2C_ReadByteArray": "read_byte_array_from_i2_c",
                "__aeabi_fmul": "multiply_float",
                "__aeabi_fsub": "subtract_float",
                "__floatsisf": "convert_to_float",
                "iVar2": "sensor_data2_int",
                "iVar3": "sensor_data1_int",
                "local_1c": "sensor_data2",
                "local_20": "sensor_data1",
                "uVar1": "converted_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002cb0": {
            "additional_data": {
                "0x10": {
                    "register5_address": 1
                },
                "0x16": {
                    "data3": 1
                },
                "0x18": {
                    "device3_address": 1,
                    "device_address2": 1
                },
                "0x22": {
                    "address2": 1,
                    "data1": 1
                },
                "0x37": {
                    "address1": 1,
                    "register1_address": 1
                },
                "0x3b800000": {
                    "constant2": 1
                },
                "0x3f800000": {
                    "constant3": 1
                },
                "0x6a": {
                    "address3": 1,
                    "register2_address": 1
                },
                "0x80": {
                    "constant1": 1
                },
                "0xb": {
                    "address4": 1,
                    "register3_address": 1
                },
                "0xd0": {
                    "device2_address": 1,
                    "device_address": 1
                },
                "0xf": {
                    "data2": 1
                },
                "10": {
                    "address5": 1,
                    "register4_address": 1
                },
                "DAT_200002e8": {
                    "acceleration_x": 1,
                    "result1": 1
                },
                "DAT_200002ec": {
                    "acceleration_y": 1,
                    "result2": 1
                },
                "DAT_200002f0": {
                    "acceleration_z": 1,
                    "result3": 1
                },
                "FUN_08000adc": {
                    "combine_values": 1,
                    "i2_c_write_byte_array": 1,
                    "i2c_read_byte_array": 1,
                    "read_byte1": 1,
                    "read_data_with_params": 1
                },
                "FUN_08000c44": {
                    "calculate1": 1,
                    "calculate_offset": 1,
                    "convert_to_unsigned": 1,
                    "get_sensor_data": 1,
                    "read_data": 1
                },
                "FUN_08000cec": {
                    "combine_values_unsigned": 1,
                    "convert_sensor_data": 1,
                    "read_byte_array1": 1,
                    "read_data_with_params2": 1
                },
                "FUN_08002cb0": {
                    "configure_mpu9250": 3,
                    "initialize_imu": 2,
                    "initialize_mpu9250": 23,
                    "initialize_sensor_data": 1,
                    "load_mpu9250_data": 1,
                    "update_mpu9250_data": 1
                },
                "FUN_0800403c": {
                    "i2_c_write_byte": 1,
                    "i2c_write_byte": 1,
                    "initialize_i2_c": 1,
                    "write_byte": 1,
                    "write_byte1": 1
                },
                "FUN_0800407c": {
                    "calculate_result": 1,
                    "i2_c_read_byte": 1,
                    "i2c_read_byte": 1,
                    "read_byte": 1,
                    "write_byte2": 1
                },
                "FUN_080040e8": {
                    "convert_to_float": 1,
                    "enable_i2_c": 1,
                    "i2_c_read_byte_array": 1,
                    "write_byte3": 1,
                    "write_multiple_bytes": 1
                },
                "I2C_ReadByte": {
                    "read_byte": 11,
                    "read_byte_from_i2_c": 5,
                    "read_byte_i2_c": 1,
                    "read_i2_c_byte": 6
                },
                "I2C_ReadByteArray": {
                    "read_byte_array": 3,
                    "read_byte_array_from_i2_c": 2,
                    "read_byte_array_i2_c": 1,
                    "read_i2_c_byte_array": 4
                },
                "I2C_WriteByte": {
                    "write_byte": 11,
                    "write_byte_i2_c": 1,
                    "write_byte_to_i2_c": 5,
                    "write_i2_c_byte": 5,
                    "write_i2_c_byte2": 1
                },
                "I2C_WriteByteArray": {
                    "write_byte_array": 8,
                    "write_byte_array_i2_c": 1,
                    "write_byte_array_to_i2_c": 5,
                    "write_i2_c_byte_array": 5
                },
                "__addsf3": {
                    "add_float": 9,
                    "add_floats": 11,
                    "float_add": 4
                },
                "__aeabi_fmul": {
                    "float_multiply": 5,
                    "multiply_float": 10,
                    "multiply_floats": 9
                },
                "__floatsisf": {
                    "convert_int_to_float": 8,
                    "convert_to_float": 9,
                    "convert_to_int32_to_float": 1,
                    "float_to_int": 1,
                    "float_to_single": 2,
                    "int_to_float": 2,
                    "to_int": 1
                },
                "local_c": {
                    "converted_data": 1,
                    "data": 1,
                    "i2c_data": 1,
                    "local_data": 3,
                    "local_param": 3,
                    "local_sensor_value": 1,
                    "local_var": 4,
                    "local_var_c": 1,
                    "local_variable": 6,
                    "local_variable1": 2,
                    "local_variable_c": 1,
                    "raw_data": 1,
                    "sensor_data": 3,
                    "sensor_reading": 1,
                    "temp_value": 1,
                    "temperature_readings": 1
                },
                "param_1": {
                    "device_address": 1,
                    "param1": 27,
                    "param_1": 1,
                    "param_a": 1,
                    "param_write_byte1": 1
                },
                "param_2": {
                    "clk_div": 1,
                    "param2": 27,
                    "param_2": 1,
                    "param_b": 1,
                    "param_write_byte2": 1
                },
                "param_3": {
                    "gyro_config": 1,
                    "param3": 27,
                    "param_3": 1,
                    "param_c": 1,
                    "param_write_byte3": 1
                },
                "param_4": {
                    "accel_config": 1,
                    "data": 2,
                    "param4": 24,
                    "param_4": 1,
                    "param_d": 1,
                    "param_read_byte": 1,
                    "sensor_value": 1
                },
                "uVar1": {
                    "scaled_data": 1
                }
            },
            "called": [
                "FUN_08000c44",
                "FUN_0800403c",
                "FUN_0800407c",
                "FUN_08000adc",
                "FUN_080040e8",
                "FUN_08000cec"
            ],
            "calling": [
                "FUN_08002ea0"
            ],
            "code": "\nvoid initialize_mpu9250_08002cb0(undefined4 param1,undefined4 param2,undefined4 param3,uint param4)\n\n{\n  undefined4 scaled_data;\n  uint local_variable;\n  \n  local_variable = param4;\n  write_byte(0xd0,0x37,0x22,1,param1,param2,param3);\n  write_byte(0xd0,0x6a,1);\n  read_byte(0x18,0,\"../Src/MPU9250.c\",0xad);\n  write_byte(0x18,0xb,1);\n  write_byte(0x18,10,0,1);\n  write_byte(0x18,10,0xf,1);\n  read_i2_c_byte_array(0x18,0x10,&local_variable,3,\"../Src/MPU9250.c\",0xb6);\n  scaled_data = convert_to_float((local_variable & 0xff) - 0x80);\n  scaled_data = multiply_float(scaled_data,0x3b800000);\n  DAT_200002e8 = add_floats(scaled_data,0x3f800000);\n  scaled_data = convert_to_float((local_variable >> 8 & 0xff) - 0x80);\n  scaled_data = multiply_float(scaled_data,0x3b800000);\n  DAT_200002ec = add_floats(scaled_data,0x3f800000);\n  scaled_data = convert_to_float((local_variable >> 0x10 & 0xff) - 0x80);\n  scaled_data = multiply_float(scaled_data,0x3b800000);\n  DAT_200002f0 = add_floats(scaled_data,0x3f800000);\n  write_byte(0x18,10,0,1);\n  write_byte(0x18,10,0x16,1);\n  return;\n}\n\n",
            "current_name": "initialize_mpu9250_08002cb0",
            "entrypoint": "0x08002cb0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002cb0": "initialize_mpu9250_08002cb0",
                "I2C_ReadByte": "read_byte",
                "I2C_ReadByteArray": "read_i2_c_byte_array",
                "I2C_WriteByte": "write_byte",
                "__addsf3": "add_floats",
                "__aeabi_fmul": "multiply_float",
                "__floatsisf": "convert_to_float",
                "local_c": "local_variable",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "scaled_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002d88": {
            "additional_data": {
                "DAT_2000001c": {
                    "acceleration_scaling_factor": 1,
                    "byte_5": 1,
                    "const1": 1,
                    "constant1": 2,
                    "constant_1": 1,
                    "conversion_ratio_1": 1,
                    "data_multiplier": 1,
                    "float_constant1": 1,
                    "float_constant_1": 1,
                    "multiplier": 1
                },
                "DAT_20000020": {
                    "accel_x_offset": 1,
                    "const3": 1,
                    "constant2": 2,
                    "constant3": 1,
                    "constant_3": 1,
                    "float_constant3": 1,
                    "float_constant_4": 1,
                    "float_var2": 1,
                    "offset1": 1,
                    "offset_x": 2,
                    "sub_const_1": 1,
                    "value2": 1
                },
                "DAT_20000024": {
                    "accel_y_offset": 1,
                    "const6": 1,
                    "constant4": 1,
                    "constant5": 1,
                    "constant6": 1,
                    "constant_5": 1,
                    "float_constant6": 1,
                    "float_constant_6": 1,
                    "float_var5": 1,
                    "offset2": 1,
                    "offset_y": 2,
                    "sub_const_2": 1,
                    "value5": 1
                },
                "DAT_20000028": {
                    "accel_z_offset": 1,
                    "const9": 1,
                    "constant6": 1,
                    "constant8": 1,
                    "constant9": 1,
                    "constant_7": 1,
                    "float_constant9": 1,
                    "float_constant_8": 1,
                    "float_var8": 1,
                    "offset3": 1,
                    "offset_z": 2,
                    "sub_const_3": 1,
                    "value8": 1
                },
                "DAT_2000002c": {
                    "accel_x_sensitivity": 1,
                    "const4": 1,
                    "constant3": 2,
                    "constant4": 1,
                    "factor1": 1,
                    "float_constant4": 1,
                    "float_var3": 1,
                    "gain_x": 1,
                    "scaling_factor_x": 1,
                    "value3": 1
                },
                "DAT_20000030": {
                    "accel_y_sensitivity": 1,
                    "const7": 1,
                    "constant5": 1,
                    "constant6": 1,
                    "constant7": 1,
                    "factor2": 1,
                    "float_constant7": 1,
                    "float_var6": 1,
                    "gain_y": 1,
                    "scaling_factor_y": 1,
                    "value6": 1
                },
                "DAT_20000034": {
                    "accel_z_sensitivity": 1,
                    "const10": 1,
                    "constant10": 1,
                    "constant7": 1,
                    "constant9": 1,
                    "factor3": 1,
                    "float_constant10": 1,
                    "float_var9": 1,
                    "gain_z": 1,
                    "scaling_factor_z": 1,
                    "value9": 1
                },
                "DAT_200002b8": {
                    "accel_data_store": 1,
                    "accel_z_bytes": 1,
                    "acceleration_ymsb": 1,
                    "byte3": 2,
                    "byte_value3": 1,
                    "byte_var3": 1,
                    "combined_word": 1,
                    "data_value": 1,
                    "local_data": 1,
                    "register_data_copy": 1,
                    "sensor_reading": 1,
                    "value2": 1,
                    "var7": 1,
                    "x": 1
                },
                "DAT_200002ba": {
                    "accel_x_bytes": 1,
                    "acceleration_xmsb": 1,
                    "byte1": 3,
                    "byte6": 1,
                    "byte_value1": 1,
                    "byte_var1": 1,
                    "combined_data1": 1,
                    "concat1": 1,
                    "concatenated_byte_1": 1,
                    "converted_data_1_store": 1,
                    "high_byte": 1,
                    "var5": 1,
                    "x_low_byte": 1
                },
                "DAT_200002bc": {
                    "accel_y_bytes": 1,
                    "acceleration_xlsb": 1,
                    "byte2": 3,
                    "byte7": 1,
                    "byte_value2": 1,
                    "byte_var2": 1,
                    "combined_data2": 1,
                    "concat2": 1,
                    "concatenated_byte_2": 1,
                    "converted_data_2_store": 1,
                    "low_byte": 1,
                    "var6": 1,
                    "x_high_byte": 1
                },
                "DAT_200002dc": {
                    "accel_x_value": 1,
                    "converted_acceleration_x": 1,
                    "float_result3": 1,
                    "result1": 9,
                    "result_1": 2,
                    "result_x": 1
                },
                "DAT_200002e0": {
                    "accel_y_value": 1,
                    "converted_acceleration_y": 1,
                    "float_result4": 1,
                    "result2": 9,
                    "result_2": 2,
                    "result_y": 1
                },
                "DAT_200002e4": {
                    "accel_z_value": 1,
                    "converted_acceleration_z": 1,
                    "float_result5": 1,
                    "result3": 9,
                    "result_3": 2,
                    "result_z": 1
                },
                "DAT_200002e8": {
                    "accel_x_scale": 1,
                    "const2": 1,
                    "constant1": 1,
                    "constant2": 1,
                    "constant_2": 1,
                    "conversion_ratio_2": 1,
                    "float_constant2": 1,
                    "float_var1": 1,
                    "multiplier1": 1,
                    "multiplier_x": 1,
                    "value1": 1
                },
                "DAT_200002ec": {
                    "accel_y_scale": 1,
                    "acceleration_y_multiplier": 1,
                    "const5": 1,
                    "constant4": 1,
                    "constant5": 1,
                    "constant_4": 1,
                    "conversion_ratio_3": 1,
                    "float_constant5": 1,
                    "float_var4": 1,
                    "multiplier2": 1,
                    "multiplier_y": 1,
                    "value4": 1
                },
                "DAT_200002f0": {
                    "accel_z_scale": 1,
                    "acceleration_z_multiplier": 1,
                    "const8": 1,
                    "constant7": 1,
                    "constant8": 1,
                    "constant_6": 1,
                    "conversion_ratio_4": 1,
                    "float_constant8": 1,
                    "float_var7": 1,
                    "multiplier3": 1,
                    "multiplier_z": 1,
                    "value7": 1
                },
                "DAT_200013bb": {
                    "accel_overflow_count": 1,
                    "acceleration_count": 1,
                    "counter": 7,
                    "counter1": 1,
                    "data_valid_count": 1,
                    "global_counter": 1,
                    "overflow_counter": 1,
                    "sensor_count_1": 1
                },
                "DAt_200002e8": {
                    "float_constant_3": 1
                },
                "DAt_200002ec": {
                    "float_constant_5": 1
                },
                "DAt_200002f0": {
                    "float_constant_7": 1
                },
                "FUN_08000ad8": {
                    "convert_result_to_float": 1,
                    "float_multiply": 1,
                    "float_to_int_conversion": 1,
                    "multiply_values": 1
                },
                "FUN_08000c44": {
                    "i2c_read_byte": 1,
                    "read_byte": 2,
                    "read_i2c_byte": 1
                },
                "FUN_08000cec": {
                    "convert_result_to_float": 1,
                    "float_subtract": 1,
                    "float_subtraction": 1,
                    "multiply_values2": 1
                },
                "FUN_08002d88": {
                    "calculate_sensor_data": 2,
                    "process_mpu9250_data": 1,
                    "process_mpu_data": 1,
                    "process_sensor_data": 3,
                    "read_accelerometer_data": 2,
                    "read_and_calculate_data": 1,
                    "read_and_calculate_values": 1,
                    "read_and_process_mpu9250_data": 1,
                    "read_and_process_mpu_data": 1,
                    "read_and_process_sensor_data": 1,
                    "read_and_update_mpu9250_data": 1,
                    "read_imu_data": 2,
                    "read_mpu9250_data": 2,
                    "read_mpu_data": 3,
                    "read_sensor_data": 9
                },
                "FUN_0800407c": {
                    "i2c_read_byte_array": 1,
                    "read_byte_array": 2,
                    "read_i2c_byte_array": 1
                },
                "FUN_080040e8": {
                    "float_multiplication": 1,
                    "float_subtract": 1,
                    "multiply_and_subtract": 1,
                    "subtract_values": 1
                },
                "I2C_ReadByte": {
                    "read_byte": 2
                },
                "I2C_ReadByteArray": {
                    "read_byte_array": 2
                },
                "__aeabi_fmul": {
                    "float_multiplication": 1,
                    "float_multiply": 1
                },
                "__aeabi_fsub": {
                    "float_subtract": 1,
                    "float_subtraction": 1
                },
                "__floatsisf": {
                    "integer_to_float": 1,
                    "to_float": 1
                },
                "iVar1": {
                    "byte_count": 1,
                    "byte_data": 2,
                    "byte_value": 3,
                    "int2": 1,
                    "read_byte_result": 1,
                    "read_result": 9,
                    "read_status": 3,
                    "result": 3,
                    "result1": 1,
                    "status": 5
                },
                "iVar4": {
                    "accel_x": 1,
                    "acceleration_z": 1,
                    "byte3": 1,
                    "byte_to_int": 1,
                    "byte_var": 1,
                    "converted_data_3": 1,
                    "first_byte": 1,
                    "float_int_var": 1,
                    "i_var4": 1,
                    "int1": 2,
                    "int_result": 1,
                    "int_value": 1,
                    "int_var": 1,
                    "integer_var": 1,
                    "integer_x_acceleration": 1,
                    "reg_value": 1,
                    "result2": 1,
                    "result3": 1,
                    "temp3": 2,
                    "temp_int1": 1,
                    "temp_integer": 1,
                    "temp_result": 1,
                    "temp_var3": 1,
                    "value_3": 1,
                    "variable3": 1,
                    "x_value": 1
                },
                "local_19": {
                    "integer_z_acceleration": 1
                },
                "local_20": {
                    "integer_y_acceleration": 1
                },
                "local_22": {
                    "boolean_data": 1,
                    "byte4": 1,
                    "byte5": 5,
                    "byte_4": 1,
                    "byte_val": 1,
                    "byte_var2": 1,
                    "condition": 1,
                    "data6": 1,
                    "data_status": 1,
                    "data_validity": 1,
                    "extracted_value": 1,
                    "flag": 5,
                    "gyro_z_data": 1,
                    "local_byte3": 1,
                    "overflow": 1,
                    "read_byte_status": 1,
                    "status_byte": 1,
                    "temp_var_5": 1,
                    "var7": 1,
                    "z_acceleration": 1
                },
                "local_23": {
                    "acceleration_z": 1,
                    "byte2": 1,
                    "byte3": 1,
                    "byte4": 6,
                    "byte_1": 1,
                    "byte_2": 1,
                    "data2": 1,
                    "data5": 1,
                    "gyro_y_data": 1,
                    "local_byte2": 1,
                    "temp_var_4": 1,
                    "undefined_var4": 1,
                    "unused": 1,
                    "var4": 1,
                    "var6": 1,
                    "y_acceleration": 1
                },
                "local_24": {
                    "acceleration_y": 1,
                    "byte1": 1,
                    "byte2": 1,
                    "byte3": 6,
                    "byte_2": 1,
                    "byte_3": 1,
                    "data1": 1,
                    "data4": 1,
                    "gyro_x_data": 1,
                    "local_byte1": 1,
                    "temp_var_3": 1,
                    "undefined_var3": 1,
                    "unused": 1,
                    "var3": 1,
                    "var5": 1,
                    "x_acceleration": 1
                },
                "local_25": {
                    "byte1": 1,
                    "byte2": 1,
                    "low_byte": 1
                },
                "local_26": {
                    "byte0": 1,
                    "byte1": 1,
                    "high_byte": 1
                },
                "local_28": {
                    "accel_data": 3,
                    "accel_gyro_data": 1,
                    "accel_x_data": 1,
                    "acceleration": 2,
                    "acceleration_data": 1,
                    "acceleration_x": 1,
                    "accelerometer_data": 1,
                    "buffer": 1,
                    "config_data": 1,
                    "data": 2,
                    "data1": 2,
                    "data_array": 1,
                    "data_buf": 1,
                    "data_value": 1,
                    "first_word": 1,
                    "register_data": 1,
                    "register_value": 2,
                    "result": 1,
                    "sensor_data": 3,
                    "value": 1,
                    "value1": 1
                },
                "param_1": {
                    "address": 2,
                    "address_1": 1,
                    "arg1": 3,
                    "data_addr": 1,
                    "device_address": 2,
                    "i2c_bus": 1,
                    "input1": 1,
                    "param1": 13,
                    "param_1": 4,
                    "param_address": 1,
                    "sensor_address": 1,
                    "var1": 1
                },
                "param_2": {
                    "address_2": 1,
                    "arg2": 3,
                    "device_address": 1,
                    "i2c_address": 1,
                    "input2": 1,
                    "param2": 13,
                    "param_2": 4,
                    "param_offset": 1,
                    "register": 2,
                    "register_address": 2,
                    "size": 1,
                    "var2": 1
                },
                "param_3": {
                    "address_3": 1,
                    "arg3": 3,
                    "data": 1,
                    "data_buffer": 1,
                    "data_length": 1,
                    "file_path": 1,
                    "i2c_data": 1,
                    "input3": 1,
                    "param3": 13,
                    "param_3": 4,
                    "param_pointer": 1,
                    "register_address": 1,
                    "register_value": 1,
                    "var3": 1
                },
                "param_4": {
                    "address_4": 1,
                    "arg4": 3,
                    "data": 1,
                    "data_buffer": 1,
                    "data_ready": 1,
                    "data_size": 1,
                    "input4": 1,
                    "offset": 1,
                    "param": 1,
                    "param4": 13,
                    "param_4": 4,
                    "param_data": 1,
                    "read_status": 1,
                    "var4": 1
                },
                "uStack_21": {
                    "byte6": 1,
                    "byte_value": 1,
                    "extracted_param": 1,
                    "high_byte": 2,
                    "high_byte_of_param4": 1,
                    "status": 1,
                    "temp_var4": 1,
                    "u_stack_var3": 1,
                    "upper_byte": 1
                },
                "uStack_25": {
                    "accel_z_data": 1,
                    "byte1": 1,
                    "byte2": 4,
                    "byte_0": 1,
                    "data3": 1,
                    "high_byte": 1,
                    "low_byte2": 1,
                    "msb": 1,
                    "stack_byte2": 1,
                    "temp_var_2": 1,
                    "u_stack_var2": 1,
                    "undefined_var2": 1,
                    "unused": 1,
                    "var2": 1
                },
                "uStack_26": {
                    "accel_y_data": 1,
                    "byte1": 4,
                    "byte2": 1,
                    "byte_1": 1,
                    "data2": 1,
                    "low_byte": 1,
                    "low_byte1": 1,
                    "lsb": 1,
                    "stack_byte1": 1,
                    "temp_var_1": 1,
                    "u_stack_var1": 1,
                    "undefined_var1": 1,
                    "unused": 1,
                    "var1": 1
                },
                "uVar2": {
                    "accel_conversion_factor": 1,
                    "acceleration_factor": 1,
                    "acceleration_multiplier": 1,
                    "acceleration_x": 1,
                    "converted_data_1": 1,
                    "converted_result": 1,
                    "float1": 2,
                    "float_result": 1,
                    "float_result1": 1,
                    "float_value": 3,
                    "float_value1": 1,
                    "float_var_1": 1,
                    "multiplier": 1,
                    "result1": 2,
                    "result3": 1,
                    "temp": 1,
                    "temp1": 2,
                    "temp_float": 1,
                    "temp_float1": 1,
                    "temp_var1": 1,
                    "temp_var9": 1,
                    "value_1": 1,
                    "variable1": 1
                },
                "uVar2_store": {
                    "mul_temp_var_1": 1
                },
                "uVar2_store_2": {
                    "mul_temp_var_2": 1
                },
                "uVar3": {
                    "acceleration_y": 1,
                    "constant_value": 1,
                    "conversion_factor": 3,
                    "conversion_multiplier": 1,
                    "converted_data_2": 1,
                    "float2": 2,
                    "float_result2": 1,
                    "float_value2": 2,
                    "float_var_2": 1,
                    "floating_point_value": 1,
                    "gyro_conversion_factor": 1,
                    "mul_value": 1,
                    "result2": 2,
                    "result4": 1,
                    "scalar": 1,
                    "temp2": 2,
                    "temp_float2": 1,
                    "temp_var10": 1,
                    "temp_var2": 1,
                    "temperature_factor": 1,
                    "value_2": 1,
                    "variable2": 1
                },
                "uVar3_store": {
                    "mul_temp_var_3": 1
                }
            },
            "called": [
                "FUN_08000c44",
                "FUN_0800407c",
                "FUN_08000ad8",
                "FUN_080040e8",
                "FUN_08000cec"
            ],
            "calling": [
                "FUN_08002f28"
            ],
            "code": "\nvoid read_and_process_sensor_data_08002d88(undefined4 param1,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int read_result;\n  undefined4 float_value;\n  undefined4 conversion_factor;\n  int int1;\n  undefined2 sensor_data;\n  undefined byte1;\n  undefined byte2;\n  undefined byte3;\n  undefined byte4;\n  byte flag;\n  undefined high_byte;\n  \n  high_byte = (undefined)((uint)param4 >> 0x18);\n  sensor_data = 0;\n  byte1 = 0;\n  byte2 = 0;\n  byte3 = 0;\n  byte4 = 0;\n  flag = 0;\n  read_result = read_byte(0x18,2,\"../Src/MPU9250.c\",0xd7,param1,param2);\n  if (read_result << 0x1f < 0) {\n    read_byte_array(0x18,3,&sensor_data,7,\"../Src/MPU9250.c\",0xda);\n    conversion_factor = DAT_2000001c;\n    if ((int)((uint)flag << 0x1c) < 0) {\n      DAT_200013bb = DAT_200013bb + 1;\n    }\n    else {\n      DAT_200002ba = CONCAT11(byte2,byte1);\n      DAT_200002bc = CONCAT11(byte4,byte3);\n      int1 = (int)DAT_200002ba;\n      read_result = (int)DAT_200002bc;\n      DAT_200002b8 = sensor_data;\n      float_value = to_float();\n      float_value = float_multiplication(float_value,conversion_factor);\n      float_value = float_multiplication(float_value,DAT_200002e8);\n      float_value = float_subtract(float_value,DAT_20000020);\n      DAT_200002dc = float_multiplication(float_value,DAT_2000002c);\n      float_value = to_float(int1);\n      float_value = float_multiplication(float_value,conversion_factor);\n      float_value = float_multiplication(float_value,DAT_200002ec);\n      float_value = float_subtract(float_value,DAT_20000024);\n      DAT_200002e0 = float_multiplication(float_value,DAT_20000030);\n      float_value = to_float(read_result);\n      conversion_factor = float_multiplication(float_value,conversion_factor);\n      conversion_factor = float_multiplication(conversion_factor,DAT_200002f0);\n      conversion_factor = float_subtract(conversion_factor,DAT_20000028);\n      DAT_200002e4 = float_multiplication(conversion_factor,DAT_20000034);\n    }\n  }\n  return;\n}\n\n",
            "current_name": "read_and_process_sensor_data_08002d88",
            "entrypoint": "0x08002d88",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002d88": "read_and_process_sensor_data_08002d88",
                "I2C_ReadByte": "read_byte",
                "I2C_ReadByteArray": "read_byte_array",
                "__aeabi_fmul": "float_multiplication",
                "__aeabi_fsub": "float_subtract",
                "__floatsisf": "to_float",
                "iVar1": "read_result",
                "iVar4": "int1",
                "local_22": "flag",
                "local_23": "byte4",
                "local_24": "byte3",
                "local_28": "sensor_data",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uStack_21": "high_byte",
                "uStack_25": "byte2",
                "uStack_26": "byte1",
                "uVar2": "float_value",
                "uVar3": "conversion_factor"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ea0": {
            "additional_data": {
                "AK8963_Init": {
                    "initialize_ak8963": 16
                },
                "FUN_08002ad0": {
                    "initialize_mpu9250": 1,
                    "initialize_mpu9250_helper": 1,
                    "initialize_sensor1": 1
                },
                "FUN_08002cb0": {
                    "initialize_ak8963_helper": 1,
                    "initialize_sensor4": 1,
                    "initialize_sensors": 1
                },
                "FUN_08002ea0": {
                    "initialize_imu": 1,
                    "initialize_imu_sensors": 1,
                    "initialize_mpu_and_ak": 1,
                    "initialize_sensor": 9,
                    "initialize_sensor_data": 1,
                    "initialize_sensor_system": 1,
                    "initialize_sensors": 17
                },
                "FUN_08003314": {
                    "helper_function1": 1,
                    "initialize_sensor2": 1,
                    "set_madgwick_delta": 1
                },
                "FUN_08003320": {
                    "helper_function2": 1,
                    "initialize_sensor3": 1,
                    "set_madgwick_delta": 1
                },
                "MPU9250_Init": {
                    "initialize_mpu9250": 16
                },
                "MadgwickSetBeta": {
                    "configure_madgwick_beta": 1,
                    "set_madgwick_beta": 15
                },
                "MadgwickSetDelta": {
                    "configure_madgwick_delta": 1,
                    "set_madgwick_delta": 15
                },
                "extraout_r1": {
                    "extra_out1": 1,
                    "extra_out_result": 1,
                    "extra_out_variable": 1,
                    "extra_output": 1,
                    "extra_output1": 1,
                    "extra_param": 1,
                    "extra_return_value": 1,
                    "some_return_value": 1,
                    "temp1": 2,
                    "temp_var": 2,
                    "temp_var1": 1,
                    "unassigned_value": 1,
                    "undefined5": 1,
                    "unused_extra_out": 1,
                    "unused_variable1": 1
                },
                "param_1": {
                    "arg1": 15,
                    "config_param1": 1,
                    "init_param1": 2,
                    "param1": 3,
                    "sensors_param": 1,
                    "undefined1": 1,
                    "unused_1": 1,
                    "unused_param1": 6
                },
                "param_2": {
                    "arg2": 15,
                    "config_param2": 1,
                    "init_param2": 2,
                    "param2": 3,
                    "param_2": 1,
                    "undefined2": 1,
                    "unused_2": 1,
                    "unused_param2": 6
                },
                "param_3": {
                    "arg3": 15,
                    "config_param3": 1,
                    "init_param3": 2,
                    "param3": 3,
                    "param_3": 1,
                    "param_for_init": 1,
                    "sensor_data1": 1,
                    "undefined3": 1,
                    "unused_3": 1,
                    "unused_param3": 4
                },
                "param_4": {
                    "arg4": 15,
                    "config_param4": 1,
                    "init_param4": 2,
                    "param4": 3,
                    "param_4": 1,
                    "param_for_setup": 1,
                    "sensor_data2": 1,
                    "undefined4": 1,
                    "unused_4": 1,
                    "unused_param4": 4
                }
            },
            "called": [
                "FUN_08002ad0",
                "FUN_08003314",
                "FUN_08003320",
                "FUN_08002cb0"
            ],
            "calling": [
                "FUN_08004194"
            ],
            "code": "\nvoid initialize_imu_sensors_08002ea0(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  undefined4 temp_var;\n  \n  initialize_mpu9250();\n  initialize_ak8963();\n  set_madgwick_beta(0x3f19999a);\n  set_madgwick_delta(0,temp_var,arg3,arg4);\n  return;\n}\n\n",
            "current_name": "initialize_imu_sensors_08002ea0",
            "entrypoint": "0x08002ea0",
            "imported": false,
            "improved": true,
            "renaming": {
                "AK8963_Init": "initialize_ak8963",
                "FUN_08002ea0": "initialize_imu_sensors_08002ea0",
                "MPU9250_Init": "initialize_mpu9250",
                "MadgwickSetBeta": "set_madgwick_beta",
                "MadgwickSetDelta": "set_madgwick_delta",
                "extraout_r1": "temp_var",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ec0": {
            "additional_data": {
                "DAT_2000000c": {
                    "updated_value": 1
                },
                "DAT_20000010": {
                    "value_1": 1
                },
                "DAT_2000024c": {
                    "constant_value_1": 1
                },
                "FUN_08002ec0": {
                    "calculate_new_value": 3,
                    "calculate_result": 6,
                    "calculate_sum": 16,
                    "calculate_sum_of_floats": 1,
                    "calculate_sum_of_multiplications": 1,
                    "calculate_sum_of_products": 2,
                    "calculate_updated_value": 1,
                    "update_float_values": 1
                },
                "__addsf3": {
                    "add_floats": 1
                },
                "__aeabi_fmul": {
                    "multiply_floats": 2
                },
                "__aeabi_fsub": {
                    "subtract_floats": 2
                },
                "param_1": {
                    "arg1": 1,
                    "input1": 8,
                    "input_1": 5,
                    "input_value1": 1,
                    "input_variable_1": 1,
                    "operand1": 1,
                    "value1": 1,
                    "value_1": 1
                },
                "param_2": {
                    "arg2": 1,
                    "input2": 8,
                    "input_2": 5,
                    "input_value2": 1,
                    "input_variable_2": 1,
                    "operand2": 1,
                    "value2": 1,
                    "value_2": 1
                },
                "param_3": {
                    "arg3": 1,
                    "constant1": 3,
                    "constant_1": 1,
                    "input3": 3,
                    "input_3": 5,
                    "input_value3": 1,
                    "input_variable_3": 1,
                    "multiplier": 1,
                    "param3": 1,
                    "unused": 1,
                    "value3": 1
                },
                "param_4": {
                    "arg4": 1,
                    "constant2": 3,
                    "constant_2": 1,
                    "input4": 3,
                    "input_4": 5,
                    "input_value4": 1,
                    "input_variable_4": 1,
                    "param4": 1,
                    "result": 1,
                    "unused": 1,
                    "value4": 1
                },
                "uVar1": {
                    "difference": 16,
                    "difference_from_1": 1,
                    "difference_variable": 1,
                    "operand1_inverse": 1,
                    "result1": 2,
                    "result_1": 2,
                    "subtracted_value": 5,
                    "subtraction_result": 1,
                    "temp1": 2
                },
                "uVar2": {
                    "constant": 1,
                    "constant1": 5,
                    "constant_1": 1,
                    "constant_factor": 1,
                    "factor": 1,
                    "factor_1": 1,
                    "first_operand": 1,
                    "multiplication_result1": 1,
                    "multiplication_variable_1": 1,
                    "multiplied_value1": 3,
                    "multiplied_value_1": 2,
                    "multiplier1": 2,
                    "product1": 2,
                    "product_1": 2,
                    "result2": 1,
                    "result_2": 2,
                    "temp1": 1,
                    "temp2": 2,
                    "value1": 1
                },
                "uVar3": {
                    "constant2": 5,
                    "constant_2": 1,
                    "factor_2": 1,
                    "multiplication_result2": 1,
                    "multiplication_variable_2": 1,
                    "multiplied_value2": 3,
                    "multiplied_value_2": 2,
                    "multiplier2": 2,
                    "product": 1,
                    "product2": 2,
                    "product_2": 2,
                    "result3": 1,
                    "result_3": 2,
                    "second_operand": 1,
                    "temp2": 1,
                    "temp3": 2,
                    "value": 1,
                    "value2": 1,
                    "variable_factor": 1
                }
            },
            "called": [
                "FUN_08000ad8",
                "FUN_08000adc",
                "FUN_08000cec"
            ],
            "calling": [
                "FUN_08002f28",
                "FUN_08004a84"
            ],
            "code": "\nvoid calculate_sum_of_products_08002ec0(void)\n\n{\n  undefined4 difference;\n  undefined4 constant1;\n  undefined4 constant2;\n  \n  constant1 = DAT_2000024c;\n  constant2 = DAT_20000010;\n  difference = subtract_floats(0x3f800000,DAT_20000010);\n  constant1 = multiply_floats(difference,constant1);\n  constant2 = multiply_floats(constant2,DAT_2000000c);\n  DAT_2000000c = add_floats(constant2,constant1);\n  return;\n}\n\n",
            "current_name": "calculate_sum_of_products_08002ec0",
            "entrypoint": "0x08002ec0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002ec0": "calculate_sum_of_products_08002ec0",
                "__addsf3": "add_floats",
                "__aeabi_fmul": "multiply_floats",
                "__aeabi_fsub": "subtract_floats",
                "uVar1": "difference",
                "uVar2": "constant1",
                "uVar3": "constant2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ed4": {
            "additional_data": {
                "FUN_08002ed4": {
                    "calculate_combined_value": 1,
                    "calculate_float_sum": 1,
                    "calculate_result": 2,
                    "calculate_sum": 18,
                    "calculate_sum_multiply": 1,
                    "calculate_sum_of_multiplication": 1,
                    "calculate_sum_of_products": 3,
                    "calculate_updated_value": 2,
                    "calculate_weighted_average": 1,
                    "compute_sum": 1
                },
                "__addsf3": {
                    "add": 1
                },
                "__aeabi_fmul": {
                    "multiply": 1
                },
                "__aeabi_fsub": {
                    "subtract": 1
                },
                "uRam20000014": {
                    "input2": 1,
                    "input_value2": 1,
                    "input_value_2": 2,
                    "multiplication_value": 1,
                    "value2": 2,
                    "value_2": 3
                },
                "uRam20000018": {
                    "input1": 1,
                    "input_value1": 1,
                    "input_value_1": 2,
                    "subtraction_value": 1,
                    "value1": 2,
                    "value_1": 3
                },
                "uVar1": {
                    "difference": 16,
                    "difference_from_1": 2,
                    "difference_from_one": 2,
                    "first_difference": 1,
                    "inverse_difference": 2,
                    "negative_difference": 1,
                    "result1": 2,
                    "result_diff": 1,
                    "subtracted_value": 1,
                    "subtraction_result": 1,
                    "updated_value1": 1
                },
                "uVar2": {
                    "base_value": 1,
                    "constant": 9,
                    "constant1": 1,
                    "constant_1": 1,
                    "constant_factor": 1,
                    "constant_subtracted_from_1": 1,
                    "constant_value": 5,
                    "data1": 1,
                    "initial_value": 3,
                    "input_value": 1,
                    "multiplied_value1": 1,
                    "multiplier1": 3,
                    "result2": 1,
                    "updated_value2": 1
                },
                "uVar3": {
                    "constant2": 1,
                    "constant_value": 1,
                    "data2": 1,
                    "multiplication_result": 2,
                    "multiplied_value": 3,
                    "multiplied_value2": 1,
                    "multiplier": 10,
                    "multiplier2": 3,
                    "product": 4,
                    "product_factor": 1,
                    "result3": 1,
                    "second_difference": 1,
                    "updated_value3": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08002f28",
                "FUN_08004a84"
            ],
            "code": "\nvoid calculate_sum_of_products_08002ed4(void)\n\n{\n  undefined4 difference;\n  undefined4 constant;\n  undefined4 multiplier;\n  \n  constant = DAT_20000248;\n  multiplier = value_1;\n  difference = subtract(0x3f800000,value_1);\n  constant = multiply(difference,constant);\n  multiplier = multiply(multiplier,value_2);\n  value_2 = __addsf3(multiplier,constant);\n  return;\n}\n\n",
            "current_name": "calculate_sum_of_products_08002ed4",
            "entrypoint": "0x08002ed4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002ed4": "calculate_sum_of_products_08002ed4",
                "__aeabi_fmul": "multiply",
                "__aeabi_fsub": "subtract",
                "uRam20000014": "value_2",
                "uRam20000018": "value_1",
                "uVar1": "difference",
                "uVar2": "constant",
                "uVar3": "multiplier"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ee8": {
            "additional_data": {
                "FUN_08000ad8": {
                    "apply_operation_1": 1,
                    "calculate_result1": 1,
                    "perform_operation1": 1
                },
                "FUN_08000adc": {
                    "apply_operation_2": 1,
                    "calculate_result2": 1,
                    "perform_operation2": 1
                },
                "FUN_08001028": {
                    "check_condition1": 1,
                    "check_condition_1": 1,
                    "is_greater_than_threshold": 1
                },
                "FUN_08001050": {
                    "check_condition2": 1,
                    "check_condition_2": 1,
                    "is_less_than_threshold": 1
                },
                "FUN_08002ee8": {
                    "adjust_float_value": 8,
                    "adjust_number_based_on_comparison": 1,
                    "adjust_value": 3,
                    "adjust_value_based_on_conditions": 1,
                    "adjust_value_based_on_threshold": 8,
                    "adjust_value_if_needed": 1,
                    "adjust_value_within_range": 1,
                    "process_float": 1,
                    "update_floating_point_value": 1,
                    "update_value": 1,
                    "update_value_based_on_comparison": 1,
                    "update_value_based_on_condition": 1,
                    "update_value_based_on_conditions": 1,
                    "update_value_if_needed": 1
                },
                "__addsf3": {
                    "add_floats": 1,
                    "add_to_float": 1,
                    "addition_function": 1,
                    "increase_value": 1
                },
                "__aeabi_fcmpge": {
                    "compare_floats_greater_or_equal": 1,
                    "compare_floats_greater_than_or_equal": 1
                },
                "__aeabi_fcmplt": {
                    "compare_floats_less_than": 2
                },
                "__aeabi_fsub": {
                    "decrease_value": 1,
                    "subtract_floats": 1,
                    "subtract_from_float": 1,
                    "subtraction_function": 1
                },
                "iVar2": {
                    "cmp_result": 1,
                    "compare_result": 4,
                    "comparison_result": 22,
                    "is_equal_or_less": 1,
                    "is_greater_or_less": 2,
                    "is_greater_than_threshold": 1
                },
                "param_1": {
                    "input_value": 1,
                    "value1": 1
                },
                "param_2": {
                    "threshold": 1,
                    "value2": 1
                },
                "param_3": {
                    "param3": 1,
                    "undefined_var": 1
                },
                "param_4": {
                    "another_param": 1,
                    "param4": 1
                },
                "uVar1": {
                    "current_value": 7,
                    "data_variable": 1,
                    "float_value": 2,
                    "input_value": 1,
                    "number": 1,
                    "original_float_value": 1,
                    "original_value": 8,
                    "value": 10
                }
            },
            "called": [
                "FUN_08000ad8",
                "FUN_08000adc",
                "FUN_08001028",
                "FUN_08001050"
            ],
            "calling": [
                "FUN_08002f28",
                "FUN_08004a84"
            ],
            "code": "\nvoid adjust_value_based_on_threshold_08002ee8(void)\n\n{\n  undefined4 value;\n  int comparison_result;\n  \n  value = DAT_20000250;\n  comparison_result = compare_floats_greater_than_or_equal(DAT_20000250,0xc3340000);\n  if ((comparison_result != 0) && (comparison_result = compare_floats_less_than(value,0x42b40000), comparison_result != 0)) {\n    add_floats(value,0x42b40000);\n    return;\n  }\n  decrease_value(value,0x43870000);\n  return;\n}\n\n",
            "current_name": "adjust_value_based_on_threshold_08002ee8",
            "entrypoint": "0x08002ee8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002ee8": "adjust_value_based_on_threshold_08002ee8",
                "__addsf3": "add_floats",
                "__aeabi_fcmpge": "compare_floats_greater_than_or_equal",
                "__aeabi_fcmplt": "compare_floats_less_than",
                "__aeabi_fsub": "decrease_value",
                "iVar2": "comparison_result",
                "uVar1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002f28": {
            "additional_data": {
                "AHRS_GetPitch": {
                    "calculate_pitch": 3,
                    "get_pitch": 10,
                    "get_pitch_angle": 2
                },
                "AHRS_GetRoll": {
                    "calculate_roll": 3,
                    "get_roll": 10,
                    "get_roll_angle": 2
                },
                "AHRS_GetYaw": {
                    "calculate_yaw": 3,
                    "get_yaw": 8,
                    "get_yaw_angle": 1
                },
                "AK8963_ReadData": {
                    "read_ak8963_data": 1,
                    "read_magnetometer": 1,
                    "read_magnetometer_data": 13
                },
                "DAT_20000248": {
                    "az": 1,
                    "quaternion": 1,
                    "result": 1
                },
                "DAT_20000254": {
                    "current_micros": 1,
                    "current_time": 8,
                    "previous_micros_2": 1
                },
                "DAT_20000258": {
                    "previous_micros": 2,
                    "previous_time": 8
                },
                "DAT_200002b8": {
                    "accel_offset_x": 1,
                    "param8": 1,
                    "roll_offset": 1,
                    "some_variable_7": 1,
                    "value10": 1,
                    "var5": 1,
                    "yaw_4": 1
                },
                "DAT_200002ba": {
                    "accel_offset_z": 1,
                    "param10": 1,
                    "pitch_offset": 1,
                    "some_variable_8": 1,
                    "value11": 1,
                    "var6": 1,
                    "yaw_scaled": 1
                },
                "DAT_200002bc": {
                    "mag_offset_y": 1,
                    "param11": 1,
                    "some_variable_9": 1,
                    "value12": 1,
                    "var7": 1,
                    "yaw_offset": 1,
                    "yaw_scaled_2": 1
                },
                "DAT_200002be": {
                    "calibrated_roll": 1,
                    "param1": 1,
                    "roll_scaled": 1,
                    "roll_scaled_2": 1,
                    "some_variable_4": 1,
                    "value7": 1,
                    "var1": 1
                },
                "DAT_200002c0": {
                    "calibrated_yaw": 1,
                    "param3": 1,
                    "pitch_scaled": 1,
                    "roll_4": 1,
                    "some_variable_5": 1,
                    "value8": 1
                },
                "DAT_200002c2": {
                    "gyro_offset_y": 1,
                    "param6": 1,
                    "roll_5": 1,
                    "some_variable_6": 1,
                    "value9": 1,
                    "var3": 1,
                    "yaw_scaled": 1
                },
                "DAT_200002c4": {
                    "accel_y": 1,
                    "data5": 1,
                    "gx": 1,
                    "param5": 1
                },
                "DAT_200002c8": {
                    "accel_x": 1,
                    "data4": 1,
                    "param4": 1,
                    "q3": 1
                },
                "DAT_200002cc": {
                    "accel_z": 1,
                    "data6": 1,
                    "gy": 1,
                    "param6": 1
                },
                "DAT_200002d0": {
                    "data2": 1,
                    "param2": 1,
                    "q1": 2
                },
                "DAT_200002d4": {
                    "data1": 1,
                    "param1": 1,
                    "q0": 2
                },
                "DAT_200002d8": {
                    "data3": 1,
                    "param3": 1,
                    "q2": 2
                },
                "DAT_200002dc": {
                    "data7": 1,
                    "gyro_x": 1,
                    "gz": 1,
                    "param7": 1
                },
                "DAT_200002e0": {
                    "ax": 1,
                    "data8": 1,
                    "gyro_y": 1,
                    "param8": 1
                },
                "DAT_200002e4": {
                    "ay": 1,
                    "data9": 1,
                    "gyro_z": 1,
                    "param9": 1
                },
                "DAT_200002f4": {
                    "param1": 1,
                    "roll": 1,
                    "roll_int": 1,
                    "roll_raw": 1,
                    "some_variable_1": 1
                },
                "DAT_200002f6": {
                    "param3": 1,
                    "pitch_raw_2": 1,
                    "some_variable_2": 1,
                    "yaw": 1,
                    "yaw_int": 1
                },
                "DAT_200002f8": {
                    "param2": 1,
                    "pitch": 1,
                    "pitch_int": 1,
                    "pitch_raw": 1,
                    "some_variable_3": 1
                },
                "DAT_20001395": {
                    "roll_angle": 1,
                    "roll_data": 1,
                    "roll_pitch": 2,
                    "roll_pitch_angles": 1
                },
                "DAT_20001399": {
                    "converted_yaw": 1,
                    "converted_yaw_angle": 1,
                    "yaw": 1,
                    "yaw_angle": 2,
                    "yaw_angle_int": 1,
                    "yaw_data": 2,
                    "yaw_deg": 1,
                    "yaw_in_degrees": 1,
                    "yaw_value": 1
                },
                "DAT_2000142c": {
                    "accel_z": 1,
                    "acceleration_z": 1,
                    "pitch_scaled_2": 1,
                    "result3": 1,
                    "roll_angle_decimal": 1,
                    "roll_pitch": 1,
                    "yaw": 3,
                    "yaw_data": 1
                },
                "DAT_20001430": {
                    "magnetometer_x": 1,
                    "some_value_1": 1,
                    "temp_data1": 1,
                    "unknown1": 2,
                    "value1": 1
                },
                "DAT_20001434": {
                    "gyro_offset_x": 1,
                    "magnetometer_z": 1,
                    "param4": 1,
                    "roll_3": 1,
                    "sensor_data3": 1,
                    "some_value_3": 1,
                    "temp_data3": 1,
                    "unknown3": 2,
                    "value3": 1
                },
                "DAT_20001438": {
                    "accel_offset_y": 1,
                    "gyro_offset_y": 1,
                    "param7": 1,
                    "sensor_data5": 1,
                    "some_value_5": 1,
                    "temp_data5": 1,
                    "unknown5": 2,
                    "value5": 1,
                    "yaw_2": 1
                },
                "DAT_2000143a": {
                    "gyro_offset_z": 1,
                    "mag_offset_x": 1,
                    "param9": 1,
                    "sensor_data6": 1,
                    "some_value_6": 1,
                    "temp_data6": 1,
                    "unknown6": 2,
                    "value6": 1,
                    "yaw_3": 1
                },
                "FUN_08000c3c": {
                    "calculate_divisor": 1,
                    "calculate_time_difference": 1,
                    "convert_micros_to_seconds": 1,
                    "convert_milliseconds": 1,
                    "convert_milliseconds_to_seconds": 1,
                    "convert_to_milliseconds": 1,
                    "convert_to_ms": 1,
                    "divide": 1,
                    "divide_by100": 3,
                    "float_to_unsigned_int": 3,
                    "function5": 1,
                    "micros_to_seconds": 1,
                    "normalize_data": 1,
                    "normalize_time_difference": 1
                },
                "FUN_08000cec": {
                    "divide_floats": 1,
                    "function7": 1,
                    "madgwick_quaternion_update": 1,
                    "quaternion_update": 5,
                    "update_madgwick_filter": 1,
                    "update_madgwick_quaternion": 4,
                    "update_quaternion": 5
                },
                "FUN_08000e54": {
                    "calculate_pitch": 5,
                    "convert_float_to_int": 2,
                    "convert_radians": 1,
                    "convert_to_milli_gyro": 1,
                    "convert_to_radian": 1,
                    "float_to_integer": 1,
                    "float_to_unsigned_int2": 1,
                    "function11": 1,
                    "get_pitch": 2,
                    "get_roll_pitch": 1,
                    "update_pitch": 2
                },
                "FUN_08001078": {
                    "calculate_delta_time": 7,
                    "calculate_elapsed_time": 1,
                    "calculate_microseconds": 1,
                    "calculate_time_difference": 3,
                    "function4": 1,
                    "get_time_difference": 1,
                    "micros": 1,
                    "micros_to_millis": 2,
                    "micros_to_milliseconds": 1
                },
                "FUN_08002b48": {
                    "function6": 1,
                    "initialize_madgwick_filter": 1,
                    "madgwick_set_delta": 1,
                    "reset_madgwick_filter": 1,
                    "set_delta": 7,
                    "set_delta_time": 2,
                    "set_madgwick_delta": 4,
                    "update_quaternion": 1
                },
                "FUN_08002bf0": {
                    "ak8963_read_data": 1,
                    "function3": 1,
                    "read_ak8963_data": 2,
                    "read_mag_data": 3,
                    "read_magnet_data": 2,
                    "read_magnetometer_data": 9
                },
                "FUN_08002d88": {
                    "ahrs_get_roll": 1,
                    "convert_float_to_int": 1,
                    "convert_quaternion_to_euler": 1,
                    "convert_to_degrees": 3,
                    "convert_to_milli_g": 1,
                    "convert_to_unsigned_int": 1,
                    "function8": 1,
                    "normalize_input": 1,
                    "set_delta": 1,
                    "set_output_data": 1,
                    "set_roll": 1,
                    "set_sensor_values": 1,
                    "update_data_variables": 1,
                    "update_sensor_data": 1,
                    "update_sensor_data_fields": 1,
                    "update_variables": 1
                },
                "FUN_08002ec0": {
                    "function2": 1,
                    "mpu9250_read_gyro_data": 1,
                    "read_gyro_data": 15,
                    "read_gyroscope_data": 1
                },
                "FUN_08002ed4": {
                    "__aeabi_f2iz": 1,
                    "calculate_yaw": 5,
                    "function12": 1,
                    "get_attitude": 1,
                    "get_error": 1,
                    "get_pitch": 3,
                    "get_yaw": 2,
                    "get_yaw_pitch": 1,
                    "update_pitch": 1,
                    "update_yaw": 2
                },
                "FUN_08002ee8": {
                    "ahrs_get_yaw": 1,
                    "calculate_roll": 5,
                    "convert_yaw_to_degrees": 1,
                    "function10": 1,
                    "get_roll": 6,
                    "get_yaw": 1,
                    "set_yaw": 1,
                    "update_roll": 2
                },
                "FUN_08002f28": {
                    "process_sensor_data": 7,
                    "sensor_data_processing": 5,
                    "sensor_data_update": 1,
                    "update_ahrs_data": 1,
                    "update_sensor_data": 17
                },
                "FUN_08003320": {
                    "mpu9250_read_accel_data": 1,
                    "read_accel_data": 14,
                    "read_acceleration_data": 1,
                    "read_accelerometer_data": 1
                },
                "FUN_08003330": {
                    "ahrs_get_pitch": 1,
                    "convert_euler_to_degrees": 1,
                    "convert_quaternion": 1,
                    "convert_to_degrees": 1,
                    "convert_to_integer": 4,
                    "function9": 1,
                    "set_pitch": 1,
                    "update_madgwick_set_data": 1,
                    "update_output_data": 1,
                    "update_quaternion": 2,
                    "update_quaternion_data": 1,
                    "update_quaternion_with_delta": 1,
                    "update_sensor_data_values": 1,
                    "update_sensor_values": 1
                },
                "MPU9250_ReadAccelData": {
                    "read_accel_data": 1,
                    "read_accelerometer": 1,
                    "read_accelerometer_data": 13
                },
                "MPU9250_ReadGyroData": {
                    "read_gyro_data": 9,
                    "read_gyroscope": 1,
                    "read_gyroscope_data": 5
                },
                "MadgwickQuaternionUpdate": {
                    "calculate_quaternion_update": 1,
                    "update_madgwick_quaternion": 1,
                    "update_quaternion": 9,
                    "update_quaternion_using_madgwick": 1,
                    "update_quaternion_using_madgwick_filter": 1
                },
                "MadgwickSetDelta": {
                    "set_delta": 7,
                    "set_delta_for_madgwick": 1,
                    "set_delta_time": 1,
                    "set_delta_value_for_madgwick_filter": 1,
                    "set_sensor_delta": 1,
                    "set_update_rate": 1,
                    "update_madgwick_delta": 1,
                    "update_madgwick_set_delta": 1
                },
                "_DAT_2000142a": {
                    "accel_x": 1,
                    "acceleration_x": 1,
                    "result1": 1,
                    "roll": 5,
                    "roll_angle": 1,
                    "roll_data": 1,
                    "roll_scaled": 1
                },
                "_DAT_2000142c": {
                    "yaw": 1
                },
                "_DAT_2000142e": {
                    "accel_y": 1,
                    "acceleration_y": 1,
                    "pitch": 5,
                    "pitch_angle": 1,
                    "pitch_data": 1,
                    "pitch_scaled": 1,
                    "result2": 1
                },
                "_DAT_20001430": {
                    "roll": 1,
                    "sensor_data1": 1
                },
                "_DAT_20001432": {
                    "calibrated_pitch": 1,
                    "magnetometer_y": 1,
                    "param2": 1,
                    "roll_2": 1,
                    "sensor_data2": 1,
                    "some_value_2": 1,
                    "temp_data2": 1,
                    "unknown2": 2,
                    "value2": 1,
                    "var2": 1
                },
                "_DAT_20001436": {
                    "gyro_offset_x": 1,
                    "gyro_offset_z": 1,
                    "param5": 1,
                    "sensor_data4": 1,
                    "some_value_4": 1,
                    "temp_data4": 1,
                    "unknown4": 2,
                    "value4": 1,
                    "var4": 1,
                    "yaw": 1
                },
                "__aeabi_f2iz": {
                    "convert_float_to_int": 1,
                    "float_to_integer_conversion": 1
                },
                "__aeabi_fdiv": {
                    "calculate_delta_time": 1,
                    "convert_to_seconds": 1,
                    "divide_float": 1,
                    "divide_floats": 1,
                    "float_division": 1
                },
                "__aeabi_fmul": {
                    "float_multiplication": 1,
                    "multiply_float": 1,
                    "multiply_floats": 2
                },
                "__floatunsisf": {
                    "calculate_elapsed_time": 1,
                    "calculate_time_difference": 2,
                    "convert_to_float": 3,
                    "unsigned_int_to_float": 1
                },
                "micros": {
                    "get_current_micros": 1,
                    "get_time": 1
                },
                "ptr_FUN_08003320": {
                    "function1": 1
                },
                "uVar1": {
                    "elapsed_time": 2,
                    "time_diff": 1,
                    "time_difference": 4
                }
            },
            "called": [
                "FUN_08003320",
                "FUN_08002ec0",
                "FUN_08002bf0",
                "FUN_08001078",
                "FUN_08000c3c",
                "FUN_08002b48",
                "FUN_08000cec",
                "FUN_08002d88",
                "FUN_08004f60",
                "FUN_08003330",
                "FUN_08002ee8",
                "FUN_08000e54",
                "FUN_08002ed4"
            ],
            "calling": [
                "FUN_0800411c"
            ],
            "code": "\n\n\nvoid sensor_data_update_08002f28(void)\n\n{\n  undefined4 time_difference;\n  \n  read_accelerometer_data();\n  read_gyro_data();\n  read_magnetometer_data();\n  DAT_20000258 = get_time();\n  time_difference = convert_to_float(DAT_20000258 - DAT_20000254);\n  calculate_delta_time(time_difference,0x447a0000);\n  set_delta();\n  DAT_20000254 = DAT_20000258;\n  update_quaternion\n            (DAT_200002d4 + -0x80000000,DAT_200002d0 + -0x80000000,DAT_200002d8,DAT_200002c8,\n             DAT_200002c4,DAT_200002cc + -0x80000000,DAT_200002dc,DAT_200002e0,DAT_200002e4,\n             &DAT_20000248);\n  _DAT_2000142a = (undefined2)((uint)(int)DAT_200002f4 / 100);\n  _DAT_2000142e = (undefined2)((uint)(int)DAT_200002f8 / 100);\n  DAT_2000142c = (undefined2)((uint)(int)DAT_200002f6 / 100);\n  DAT_20001430 = DAT_200002be;\n  _DAT_20001432 = DAT_200002c0;\n  DAT_20001434 = DAT_200002c2;\n  _DAT_20001436 = DAT_200002b8;\n  DAT_20001438 = DAT_200002ba;\n  DAT_2000143a = DAT_200002bc;\n  time_difference = get_roll();\n  multiply_floats(time_difference,0x41200000);\n  DAT_20001395._0_2_ = float_to_integer_conversion();\n  time_difference = get_pitch();\n  multiply_floats(time_difference,0x41200000);\n  DAT_20001395._2_2_ = float_to_integer_conversion();\n  get_yaw();\n  DAT_20001399 = float_to_integer_conversion();\n  return;\n}\n\n",
            "current_name": "sensor_data_update_08002f28",
            "entrypoint": "0x08002f28",
            "imported": false,
            "improved": true,
            "renaming": {
                "AHRS_GetPitch": "get_pitch",
                "AHRS_GetRoll": "get_roll",
                "AHRS_GetYaw": "get_yaw",
                "AK8963_ReadData": "read_magnetometer_data",
                "FUN_08002f28": "sensor_data_update_08002f28",
                "MPU9250_ReadAccelData": "read_accelerometer_data",
                "MPU9250_ReadGyroData": "read_gyro_data",
                "MadgwickQuaternionUpdate": "update_quaternion",
                "MadgwickSetDelta": "set_delta",
                "__aeabi_f2iz": "float_to_integer_conversion",
                "__aeabi_fdiv": "calculate_delta_time",
                "__aeabi_fmul": "multiply_floats",
                "__floatunsisf": "convert_to_float",
                "micros": "get_time",
                "uVar1": "time_difference"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003034": {
            "additional_data": {
                "FUN_08003034": {
                    "convert_bytes_to_u_int": 1,
                    "convert_i2_c_bytes": 1,
                    "convert_local_cto_result": 1,
                    "convert_local_to_uint": 1,
                    "decode_i2_c_data": 2,
                    "get_i2_c_read_bytes": 1,
                    "get_i2_c_read_bytes_result": 1,
                    "i2_c_read_and_concat_bytes": 1,
                    "i2_c_read_multiple_bytes": 1,
                    "read_bytes_from_i2_c": 2,
                    "read_i2_c_bytes": 8,
                    "read_i2_c_bytes_and_concat": 1,
                    "read_i2_c_data": 4,
                    "read_i2c_bytes": 1,
                    "read_m5611_data": 1,
                    "read_sensor_data": 3,
                    "reverse_concatenate_bytes": 1
                },
                "I2C_ReadBytes": {
                    "read_bytes": 1,
                    "read_i2_c_bytes": 4
                },
                "local_c": {
                    "byte_concatenated": 1,
                    "byte_value": 1,
                    "converted_bytes": 2,
                    "converted_value": 2,
                    "data": 2,
                    "decoded_data": 1,
                    "merged_data": 1,
                    "output_buffer": 1,
                    "read_data": 1,
                    "read_result": 1,
                    "received_data": 1,
                    "result": 12,
                    "sensor_data": 1,
                    "status": 1,
                    "temp_data": 1
                },
                "param_1": {
                    "address": 2,
                    "arg1": 9,
                    "byte1": 1,
                    "data_first_param": 1,
                    "dev_addr": 1,
                    "device": 1,
                    "device_address": 3,
                    "dummy_param_1": 1,
                    "param1": 2,
                    "param_1": 1,
                    "register_address": 1,
                    "sensor_data": 1,
                    "unused_param": 2,
                    "unused_param1": 3,
                    "unused_param_1": 2
                },
                "param_2": {
                    "address": 1,
                    "arg2": 9,
                    "byte2": 1,
                    "data_second_param": 1,
                    "device_address": 1,
                    "dummy_param_2": 1,
                    "offset": 2,
                    "param2": 4,
                    "param_2": 2,
                    "reg_addr_h": 1,
                    "sensor_address": 1,
                    "unused_param": 2,
                    "unused_param2": 3,
                    "unused_param_2": 2
                },
                "param_3": {
                    "arg3": 8,
                    "buffer": 4,
                    "callback": 1,
                    "callback_function": 1,
                    "data": 1,
                    "data_buffer": 1,
                    "data_ptr": 1,
                    "data_third_param": 1,
                    "dummy_param_3": 1,
                    "file_path": 1,
                    "file_source_info": 1,
                    "filename": 1,
                    "input_buffer": 1,
                    "length": 1,
                    "output_buffer_size": 1,
                    "param3": 4,
                    "result_buffer": 1,
                    "sensor_data": 1
                },
                "param_4": {
                    "arg4": 8,
                    "control_value": 1,
                    "count": 1,
                    "data": 3,
                    "data_buffer": 1,
                    "data_fourth_param": 1,
                    "data_length": 1,
                    "device_index": 1,
                    "i2c_buffer": 1,
                    "i2c_data": 1,
                    "num_bytes": 1,
                    "offset": 1,
                    "output_buffer": 1,
                    "output_value": 1,
                    "param4": 5,
                    "param_4": 1,
                    "size": 2
                }
            },
            "called": [
                "FUN_080040b8"
            ],
            "calling": [
                "FUN_0800411c"
            ],
            "code": "\nuint read_bytes_from_i2_c_08003034(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  undefined4 result;\n  \n  result = arg4;\n  read_i2_c_bytes(0xee,0,&result,3,\"../Src/MS5611.c\",0x8c,arg3);\n  return (uint)CONCAT12((undefined)result,CONCAT11(result._1_1_,result._2_1_));\n}\n\n",
            "current_name": "read_bytes_from_i2_c_08003034",
            "entrypoint": "0x08003034",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003034": "read_bytes_from_i2_c_08003034",
                "I2C_ReadBytes": "read_i2_c_bytes",
                "local_c": "result",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003068": {
            "additional_data": {
                "DAT_200002fc": {
                    "data": 7,
                    "data_value": 1,
                    "data_variable": 1,
                    "default_value": 1,
                    "global_data": 1,
                    "global_variable": 3,
                    "internal_variable": 1
                },
                "FUN_08003068": {
                    "get_dat_value": 2,
                    "get_data": 7,
                    "get_data_ptr": 1,
                    "get_data_value": 13,
                    "get_data_variable": 1,
                    "get_default_value": 1,
                    "get_global_data": 1,
                    "get_global_value": 1,
                    "get_global_variable": 3,
                    "get_internal_variable": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004a30"
            ],
            "code": "\nundefined4 get_data_value_08003068(void)\n\n{\n  return DAT_200002fc;\n}\n\n",
            "current_name": "get_data_value_08003068",
            "entrypoint": "0x08003068",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003068": "get_data_value_08003068"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003298": {
            "additional_data": {
                "D0000038": {
                    "delay_time": 1
                },
                "D6_20000038": {
                    "sensor_status": 1
                },
                "D6_2000025c": {
                    "sensor_data": 1
                },
                "D6_20000300": {
                    "sensor_values": 1
                },
                "DAT_20000038": {
                    "data": 2,
                    "data1": 2,
                    "data_1": 2,
                    "data_size": 1,
                    "device_config": 1,
                    "sensor_data": 2,
                    "sensor_data_count": 1
                },
                "DAT_2000025c": {
                    "data2": 2,
                    "data_2": 1,
                    "data_array": 1,
                    "sensor_data": 4,
                    "sensor_data_array": 1,
                    "sensor_readings": 1
                },
                "DAT_20000300": {
                    "buffer": 1,
                    "data3": 2,
                    "data_3": 1,
                    "data_array": 1,
                    "data_buffer": 1,
                    "sensor_results": 1,
                    "temp_array": 1
                },
                "FUN_08003298": {
                    "initialize_ms5611": 1,
                    "initialize_sensor": 8,
                    "read_and_store_data": 1,
                    "read_and_store_ms5611_data": 1,
                    "read_ms5611_data": 2,
                    "read_ms5611_sensor_data": 4,
                    "read_sensor_data": 14
                },
                "I2C_ReadByteArray": {
                    "read_array_from_i2_c": 1,
                    "read_byte_array": 1,
                    "read_byte_array_from_i2_c": 10,
                    "read_data": 1,
                    "read_from_device": 1,
                    "read_i2_c_byte_array": 3
                },
                "I2C_WriteByte": {
                    "send_command": 1,
                    "write_byte": 1,
                    "write_byte_to_i2_c": 10,
                    "write_i2_c_byte": 3,
                    "write_to_device": 1,
                    "write_to_i2_c": 1
                },
                "PTR_0800403c": {
                    "sub_function1": 1
                },
                "PTR_080040e8": {
                    "sub_function2": 1
                },
                "delay_ms": {
                    "delay_in_milliseconds": 1,
                    "delay_milliseconds": 12
                },
                "iVar1": {
                    "counter": 5,
                    "index": 16,
                    "int_iterator": 1,
                    "iteration": 2,
                    "iteration_count": 1,
                    "loop_counter": 1
                },
                "local_1b": {
                    "byte2": 14,
                    "byte_b": 1,
                    "data_byte2": 1,
                    "data_high": 1,
                    "data_low": 1,
                    "low_byte": 2,
                    "part2": 1,
                    "second_byte": 3,
                    "sensor_data_byte2": 1,
                    "temp_low_byte": 1,
                    "undefined": 1
                },
                "local_1c": {
                    "byte1": 14,
                    "byte_a": 1,
                    "data_byte1": 1,
                    "data_high": 1,
                    "data_low": 1,
                    "first_byte": 3,
                    "high_byte": 2,
                    "part1": 1,
                    "sensor_data_byte1": 1,
                    "temp_high_byte": 1,
                    "undefined": 1
                },
                "param_1": {
                    "param1": 5,
                    "undefined4_1": 1,
                    "unused_param": 1
                },
                "param_2": {
                    "param2": 5,
                    "undefined4_2": 1,
                    "unused_param": 1
                },
                "param_3": {
                    "param3": 5,
                    "undefined_3": 1,
                    "unused_param": 1
                },
                "param_4": {
                    "int_4": 1,
                    "param4": 5,
                    "unused_param": 1
                }
            },
            "called": [
                "FUN_0800403c",
                "FUN_08004f64",
                "FUN_080040e8"
            ],
            "calling": [
                "FUN_08004194"
            ],
            "code": "\nvoid read_ms5611_sensor_data_08003298(void)\n\n{\n  int index;\n  undefined byte1;\n  undefined byte2;\n  \n  index = 0;\n  write_byte_to_i2_c(0xee,0x1e,1);\n  delay_milliseconds(10);\n  DAT_20000038 = 8;\n  do {\n    byte1 = 0;\n    byte2 = 0;\n    read_byte_array_from_i2_c(0xee,index + 0xa0U & 0xffff,&byte1,2,\"../Src/MS5611.c\",0x7c);\n    *(ushort *)((int)&DAT_2000025c + index) = CONCAT11(byte1,byte2);\n    index = index + 2;\n  } while (index != 0x10);\n  index = 0;\n  do {\n    (&DAT_20000300)[index] = 0;\n    index = index + 1;\n  } while (index != 0x14);\n  return;\n}\n\n",
            "current_name": "read_ms5611_sensor_data_08003298",
            "entrypoint": "0x08003298",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003298": "read_ms5611_sensor_data_08003298",
                "I2C_ReadByteArray": "read_byte_array_from_i2_c",
                "I2C_WriteByte": "write_byte_to_i2_c",
                "delay_ms": "delay_milliseconds",
                "iVar1": "index",
                "local_1b": "byte2",
                "local_1c": "byte1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003314": {
            "additional_data": {
                "DAT_2000035c": {
                    "data": 1,
                    "data_pointer": 1,
                    "data_value": 1,
                    "global_parameter": 2,
                    "global_value": 3,
                    "global_variable": 1,
                    "initialized_value": 3,
                    "new_dat": 1,
                    "param_value": 2,
                    "parameter_value": 2
                },
                "FUN_08003314": {
                    "assign_param_to_data": 1,
                    "initialize_data": 1,
                    "initialize_param": 2,
                    "initialize_parameter": 1,
                    "initialize_value": 2,
                    "save_parameter": 1,
                    "set_dat_2000035c": 1,
                    "set_dat_value": 1,
                    "set_data": 1,
                    "set_data_parameter": 1,
                    "set_data_pointer": 1,
                    "set_data_value": 1,
                    "set_global_param": 1,
                    "set_global_parameter": 3,
                    "set_global_value": 1,
                    "set_global_variable": 6,
                    "set_param": 3,
                    "set_parameter": 2
                },
                "param_1": {
                    "data": 2,
                    "data_parameter": 1,
                    "input_parameter": 1,
                    "input_value": 1,
                    "new_param": 3,
                    "new_parameter": 1,
                    "new_value": 6,
                    "parameter": 1,
                    "value": 14
                },
                "param_2": {
                    "new_parameter_name_2": 1,
                    "new_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08002ea0"
            ],
            "code": "\nvoid set_global_variable_08003314(undefined4 value)\n\n{\n  DAT_2000035c = value;\n  return;\n}\n\n",
            "current_name": "set_global_variable_08003314",
            "entrypoint": "0x08003314",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003314": "set_global_variable_08003314",
                "param_1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003320": {
            "additional_data": {
                "DAT_20000360": {
                    "dat_variable": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "global_param": 2,
                    "global_parameter": 1,
                    "global_value": 1,
                    "global_variable": 4,
                    "param_value": 2,
                    "parameter_one": 1,
                    "parameter_storage": 1,
                    "stored_parameter": 1
                },
                "FUN_08003320": {
                    "initialize_data": 4,
                    "initialize_global_variable": 1,
                    "initialize_param": 1,
                    "initialize_parameter": 2,
                    "initialize_parameter_value": 1,
                    "set_dat_20000360": 1,
                    "set_dat_variable": 1,
                    "set_data": 1,
                    "set_global_param": 2,
                    "set_global_parameter": 4,
                    "set_global_variable": 2,
                    "set_initial_value": 1,
                    "set_param": 5,
                    "set_param_value": 1,
                    "set_parameter": 2,
                    "store_parameter": 2
                },
                "param_1": {
                    "data": 2,
                    "data_value": 2,
                    "global_param": 1,
                    "initial_value": 1,
                    "input_param": 1,
                    "input_value": 1,
                    "new_param": 2,
                    "new_value": 8,
                    "parameter": 1,
                    "parameter_value": 1,
                    "value": 11
                }
            },
            "called": [],
            "calling": [
                "FUN_08002f28",
                "FUN_08002ea0"
            ],
            "code": "\nvoid set_global_param_08003320(undefined4 value)\n\n{\n  DAT_20000360 = value;\n  return;\n}\n\n",
            "current_name": "set_global_param_08003320",
            "entrypoint": "0x08003320",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003320": "set_global_param_08003320",
                "param_1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003330": {
            "additional_data": {
                "FUN_08003330": {
                    "calculate_angles": 1,
                    "calculate_coordinate": 1,
                    "calculate_coordinates": 23,
                    "calculate_descriptive_statistics": 1,
                    "calculate_distance": 1,
                    "calculate_distances": 1,
                    "calculate_square_root": 1
                },
                "iVar19": {
                    "ab_origin_dot_abac_cross_product": 1,
                    "calculate12": 1,
                    "d17": 1,
                    "distance3": 1,
                    "f3": 1,
                    "is_angle1_zero": 1,
                    "is_third_point_zero": 1,
                    "is_x3_zero": 1,
                    "is_zero3": 1,
                    "lift_force_x": 1,
                    "mul7": 1,
                    "multiply11": 1,
                    "result1": 1,
                    "result18": 1,
                    "result19": 1,
                    "result3": 1,
                    "temp10": 1,
                    "temp11": 1,
                    "temp16": 1,
                    "temp18": 2,
                    "temp19": 1,
                    "temp7": 1,
                    "temp8": 1,
                    "temp_comparison2": 1
                },
                "iVar26": {
                    "check2": 1,
                    "comparison2": 1,
                    "distance4": 1,
                    "is_angle2_zero": 1,
                    "is_distance_zero": 1,
                    "is_equal3": 1,
                    "is_x4_zero": 1,
                    "is_zero3": 3,
                    "is_zero4": 1,
                    "is_zero_z": 1,
                    "mul13": 1,
                    "res3": 1,
                    "result25": 1,
                    "result26": 1,
                    "result3": 1,
                    "result4": 1,
                    "result_y": 1,
                    "temp14": 1,
                    "temp17": 1,
                    "temp23": 1,
                    "temp25": 2,
                    "temp26": 1
                },
                "iVar28": {
                    "a_plus_b": 1
                },
                "iVar3": {
                    "a_zero": 1,
                    "ab_origin": 1,
                    "check1": 1,
                    "comparison": 1,
                    "comparison1": 1,
                    "comparison_result": 2,
                    "comparison_result1": 1,
                    "first_check": 1,
                    "is_equal1": 1,
                    "is_equal_zero1": 1,
                    "is_first_point_zero": 1,
                    "is_length1_zero": 1,
                    "is_velocity_zero": 1,
                    "is_x1_zero": 1,
                    "is_zero": 1,
                    "is_zero1": 4,
                    "is_zero_x": 1,
                    "res1": 1,
                    "result1": 2,
                    "result3": 1,
                    "temp3": 1,
                    "x1_plus_x2": 1,
                    "z1_sqr": 1,
                    "z1_zero": 1
                },
                "iVar30": {
                    "ab_origin_dot_2": 1,
                    "is_angle3_zero": 1,
                    "is_zero4": 3,
                    "is_zero5": 1,
                    "length_squared2": 1,
                    "mul17": 1,
                    "result29": 1,
                    "result30": 1,
                    "result4": 1,
                    "result_angle": 1,
                    "rotation_matrix_x": 1,
                    "temp10": 1,
                    "temp18": 2,
                    "temp21": 1,
                    "temp24": 1,
                    "temp27": 1,
                    "temp29": 2,
                    "temp30": 1,
                    "tmp4": 1
                },
                "iVar31": {
                    "d_zero": 1
                },
                "iVar32": {
                    "inv_d_squared": 1
                },
                "iVar33": {
                    "inv_d_squared": 1,
                    "is_zero": 1
                },
                "iVar34": {
                    "is_zero2": 1
                },
                "iVar5": {
                    "is_equal_zero2": 1
                },
                "iVar8": {
                    "2b": 1,
                    "acbc_cross_product": 1,
                    "b_double": 1,
                    "calculate1": 1,
                    "distance2": 1,
                    "force_y": 1,
                    "is_equal2": 1,
                    "is_length3_zero": 1,
                    "is_x2_zero": 1,
                    "is_zero2": 4,
                    "is_zero_y": 1,
                    "length5": 1,
                    "res2": 1,
                    "result2": 2,
                    "result7": 1,
                    "result8": 1,
                    "temp5": 1,
                    "temp7": 2,
                    "temp8": 1,
                    "temp_comparison": 1,
                    "twice_distance2": 1,
                    "x2doubled": 1,
                    "y3_sqr": 1,
                    "z1_plus_z1": 1
                },
                "param_1": {
                    "angle1": 1,
                    "coord1": 1,
                    "coordinate1": 1,
                    "coordinate_x": 1,
                    "input1": 3,
                    "length": 1,
                    "time": 1,
                    "value1": 2,
                    "x1": 18,
                    "x_1": 2
                },
                "param_10": {
                    "coordinates": 7,
                    "coordinates_result": 1,
                    "output": 2,
                    "output_array": 3,
                    "result": 13,
                    "result_array": 3,
                    "result_coordinates": 2
                },
                "param_2": {
                    "angle2": 1,
                    "coord2": 1,
                    "coordinate2": 1,
                    "coordinate_y": 1,
                    "input2": 3,
                    "value2": 2,
                    "width": 1,
                    "x2": 6,
                    "x_2": 1,
                    "x_acceleration": 1,
                    "y1": 12,
                    "y_1": 1
                },
                "param_3": {
                    "angle3": 1,
                    "coord3": 1,
                    "coordinate3": 1,
                    "coordinate_z": 1,
                    "height": 1,
                    "input3": 3,
                    "value3": 2,
                    "x2": 1,
                    "x3": 5,
                    "x_3": 1,
                    "y1": 1,
                    "y_acceleration": 1,
                    "z1": 11,
                    "z_1": 1
                },
                "param_4": {
                    "a1": 1,
                    "input4": 3,
                    "length1": 1,
                    "mass": 1,
                    "param4": 1,
                    "parameter1": 1,
                    "prev_coord1": 1,
                    "rotation_a": 1,
                    "value4": 2,
                    "x": 1,
                    "x2": 9,
                    "x4": 1,
                    "x_2": 1,
                    "y1": 4,
                    "y2": 2,
                    "y_1": 1
                },
                "param_5": {
                    "b1": 1,
                    "initial_velocity_x": 1,
                    "input5": 3,
                    "length2": 1,
                    "param5": 1,
                    "parameter2": 1,
                    "prev_coord2": 1,
                    "rotation_b": 1,
                    "value5": 1,
                    "x3": 1,
                    "x5": 1,
                    "y": 1,
                    "y2": 13,
                    "y_2": 2,
                    "z1": 1
                },
                "param_6": {
                    "c1": 1,
                    "initial_velocity_y": 1,
                    "input6": 3,
                    "length3": 1,
                    "param6": 1,
                    "parameter3": 1,
                    "prev_coord3": 1,
                    "rotation_c": 1,
                    "value6": 1,
                    "x6": 1,
                    "y3": 5,
                    "y_3": 1,
                    "z": 1,
                    "z2": 10,
                    "z_2": 1
                },
                "param_7": {
                    "a": 3,
                    "coordinate4": 1,
                    "drag_coefficient": 1,
                    "input7": 3,
                    "param7": 1,
                    "scale_x": 1,
                    "theta": 1,
                    "v1": 1,
                    "value5": 1,
                    "value7": 1,
                    "x2": 2,
                    "x3": 7,
                    "x4": 1,
                    "x_3": 1,
                    "y1": 1,
                    "z1": 4,
                    "z_1": 1
                },
                "param_8": {
                    "b": 3,
                    "coordinate5": 1,
                    "gravity": 1,
                    "input8": 3,
                    "param8": 1,
                    "phi": 1,
                    "scale_y": 1,
                    "v2": 1,
                    "value6": 1,
                    "value8": 1,
                    "y2": 3,
                    "y3": 7,
                    "y4": 1,
                    "y_3": 1,
                    "z2": 4,
                    "z_2": 1
                },
                "param_9": {
                    "air_density": 1,
                    "c": 3,
                    "coordinate6": 1,
                    "input9": 3,
                    "param9": 1,
                    "psi": 1,
                    "scale_z": 1,
                    "v3": 1,
                    "value7": 1,
                    "value9": 1,
                    "x5": 1,
                    "y3": 1,
                    "z2": 2,
                    "z3": 11,
                    "z_3": 2
                },
                "uVar1": {
                    "a_squared": 1,
                    "ab_squared": 1,
                    "d1": 1,
                    "distance1": 3,
                    "length1": 1,
                    "length_squared": 1,
                    "length_squared1": 1,
                    "result1": 3,
                    "square_sum1": 1,
                    "sum1": 1,
                    "temp1": 4,
                    "temp_var1": 1,
                    "velocity_squared": 1,
                    "x1_sqr": 1,
                    "x1_sqrd": 1,
                    "x1_square": 1,
                    "x1_squared": 3,
                    "x_squared": 3
                },
                "uVar10": {
                    "a_times_c": 2,
                    "ac_dot_bcab_cross_product": 1,
                    "angle2_tangent": 1,
                    "calculate3": 1,
                    "d8": 1,
                    "distance8": 1,
                    "distance_y1_y2": 1,
                    "dot_product1": 1,
                    "initial_velocity_y_squared": 1,
                    "inverse_y": 1,
                    "length6": 1,
                    "multiply2": 1,
                    "result9": 1,
                    "sum8": 1,
                    "temp1": 1,
                    "temp10": 1,
                    "temp2": 1,
                    "temp6": 1,
                    "temp7": 1,
                    "temp8": 1,
                    "temp9": 2,
                    "temp_var10": 1,
                    "x1_times_y1": 1,
                    "x1z1_squared": 1,
                    "z2_sqrd": 1
                },
                "uVar100": {
                    "b_times_input7_times_root_b": 1
                },
                "uVar101": {
                    "b_times_input7_times_root_b": 1
                },
                "uVar102": {
                    "input7_times_root_b": 1
                },
                "uVar103": {
                    "b_times_input8_times_root_b": 1
                },
                "uVar104": {
                    "b_times_input9_times_root_b": 1
                },
                "uVar105": {
                    "e_squared": 1
                },
                "uVar106": {
                    "e_squared": 1
                },
                "uVar107": {
                    "input9_times_root_b": 1
                },
                "uVar108": {
                    "input7_times_root_b": 1
                },
                "uVar109": {
                    "input8_times_root_b": 1
                },
                "uVar11": {
                    "a_times_b": 1,
                    "a_times_y": 1,
                    "ab_dot_acbc_cross_product": 1,
                    "angle3_tangent": 1,
                    "calculate4": 1,
                    "d9": 1,
                    "distance9": 1,
                    "distance_z1_z2": 1,
                    "dot_product2": 1,
                    "inverse_z": 1,
                    "length7": 1,
                    "multiply3": 1,
                    "normal_force_x": 1,
                    "result10": 1,
                    "sum9": 1,
                    "temp10": 2,
                    "temp11": 1,
                    "temp2": 1,
                    "temp3": 1,
                    "temp7": 1,
                    "temp8": 1,
                    "temp9": 1,
                    "temp_var11": 1,
                    "x1_times_y2": 1,
                    "x1z1y1z1_sum": 1,
                    "z3_sqrd": 1
                },
                "uVar110": {
                    "e_zero": 1
                },
                "uVar111": {
                    "a_times_input8_times_root_b": 1
                },
                "uVar112": {
                    "c_times_input9_times_root_b": 1
                },
                "uVar113": {
                    "a_times_input9_times_root_b": 1
                },
                "uVar114": {
                    "c_times_input8_times_root_b": 1
                },
                "uVar115": {
                    "c_times_input7_times_root_b": 1
                },
                "uVar116": {
                    "input7_times_root_b": 1
                },
                "uVar117": {
                    "input8_times_root_b": 1
                },
                "uVar118": {
                    "input9_times_root_b": 1
                },
                "uVar119": {
                    "a_times_input7_times_root_b": 1
                },
                "uVar12": {
                    "a_times_c": 1,
                    "a_times_z": 1,
                    "angle1_sine": 1,
                    "bc_dot_abac_cross_product": 1,
                    "calculate5": 1,
                    "d10": 1,
                    "distance10": 1,
                    "distance_squared": 1,
                    "dot_product3": 1,
                    "length8": 1,
                    "multiply4": 1,
                    "normal_force_y": 1,
                    "product_x": 1,
                    "result11": 1,
                    "sum10": 1,
                    "temp1": 1,
                    "temp10": 1,
                    "temp11": 2,
                    "temp12": 1,
                    "temp3": 1,
                    "temp4": 1,
                    "temp8": 1,
                    "temp9": 1,
                    "temp_var12": 1,
                    "x1_times_y3": 1,
                    "x1z1x2_sum": 1
                },
                "uVar120": {
                    "e_zero": 1
                },
                "uVar121": {
                    "input8_times_root_b": 1
                },
                "uVar122": {
                    "input8_times_root_b": 1
                },
                "uVar123": {
                    "input8_times_root_b": 1
                },
                "uVar124": {
                    "input7_times_root_b": 1
                },
                "uVar125": {
                    "input7_times_root_b": 1
                },
                "uVar126": {
                    "input7_times_root_b": 1
                },
                "uVar127": {
                    "input7_times_root_b": 1
                },
                "uVar128": {
                    "e_zero": 1
                },
                "uVar129": {
                    "input9_times_root_b": 1
                },
                "uVar13": {
                    "ab_dot_bcab_cross_product": 1,
                    "angle1_cosine": 1,
                    "b_times_c": 1,
                    "b_times_x": 1,
                    "calculate6": 1,
                    "d11": 1,
                    "distance11": 1,
                    "length9": 1,
                    "mul1": 1,
                    "multiply5": 1,
                    "normal_force_total": 1,
                    "product_y": 1,
                    "result12": 1,
                    "sum11": 1,
                    "temp1": 1,
                    "temp10": 1,
                    "temp11": 1,
                    "temp12": 2,
                    "temp13": 1,
                    "temp2": 1,
                    "temp4": 1,
                    "temp5": 1,
                    "temp9": 1,
                    "temp_var13": 1,
                    "x2_times_y1": 1,
                    "x2z1_squared": 1
                },
                "uVar130": {
                    "input9_times_root_b": 1
                },
                "uVar131": {
                    "a_root_b": 1
                },
                "uVar132": {
                    "b_root_b": 1
                },
                "uVar133": {
                    "e_squared": 1
                },
                "uVar134": {
                    "input9_times_root_b": 1
                },
                "uVar135": {
                    "input9_times_root_b": 1
                },
                "uVar136": {
                    "input9_times_root_b": 1
                },
                "uVar137": {
                    "a_times_b": 1
                },
                "uVar138": {
                    "c_times_root_b": 1
                },
                "uVar139": {
                    "a_times_b_double": 1
                },
                "uVar14": {
                    "a_times_b": 1,
                    "ac_dot_abac_cross_product": 1,
                    "angle2_sine": 1,
                    "b_times_z": 1,
                    "calculate7": 1,
                    "centripetal_force_x": 1,
                    "d12": 1,
                    "distance12": 1,
                    "length10": 1,
                    "mul2": 1,
                    "multiply6": 1,
                    "product_z": 1,
                    "result13": 1,
                    "sum12": 1,
                    "temp10": 1,
                    "temp11": 1,
                    "temp12": 1,
                    "temp13": 2,
                    "temp14": 1,
                    "temp2": 1,
                    "temp3": 1,
                    "temp5": 1,
                    "temp6": 1,
                    "temp_var14": 1,
                    "x2_times_y2": 1,
                    "x2z1y2z1_sum": 1
                },
                "uVar140": {
                    "c_times_root_b": 1
                },
                "uVar141": {
                    "b_times_c_times_root_b": 1
                },
                "uVar142": {
                    "b_times_c_times_root_b": 1
                },
                "uVar143": {
                    "e_zero": 1
                },
                "uVar144": {
                    "c_times_root_b": 1
                },
                "uVar145": {
                    "input9_times_root_b": 1
                },
                "uVar146": {
                    "input9_times_root_b": 1
                },
                "uVar147": {
                    "input8_times_root_b": 1
                },
                "uVar148": {
                    "input7_times_root_b": 1
                },
                "uVar149": {
                    "e_zero": 1
                },
                "uVar15": {
                    "angle2_cosine": 1,
                    "b_squared": 2,
                    "bc_dot_acbc_cross_product": 1,
                    "calculate8": 1,
                    "centripetal_force_y": 1,
                    "d13": 1,
                    "distance13": 1,
                    "length11": 1,
                    "mul3": 1,
                    "multiply7": 1,
                    "result14": 1,
                    "sum13": 1,
                    "temp11": 1,
                    "temp12": 1,
                    "temp13": 1,
                    "temp14": 2,
                    "temp15": 1,
                    "temp3": 1,
                    "temp4": 1,
                    "temp6": 1,
                    "temp7": 1,
                    "temp_var15": 1,
                    "temp_x": 1,
                    "x2_times_y3": 1,
                    "y2_squared": 1
                },
                "uVar150": {
                    "input8_times_root_b": 1
                },
                "uVar151": {
                    "input8_times_root_b": 1
                },
                "uVar152": {
                    "input9_times_root_b": 1
                },
                "uVar153": {
                    "input8_times_root_b": 1
                },
                "uVar154": {
                    "input8_times_root_b": 1
                },
                "uVar155": {
                    "input9_times_root_b": 1
                },
                "uVar156": {
                    "input9_times_root_b": 1
                },
                "uVar157": {
                    "e_zero": 1
                },
                "uVar158": {
                    "a_times_root_b": 1
                },
                "uVar159": {
                    "c_times_root_b": 1
                },
                "uVar16": {
                    "ac_squared_dot_abac_squared": 1,
                    "angle3_sine": 1,
                    "c_squared": 1,
                    "calculate9": 1,
                    "centripetal_force_total": 1,
                    "d14": 1,
                    "distance14": 1,
                    "length12": 1,
                    "mul4": 1,
                    "multiply8": 1,
                    "result15": 1,
                    "sum14": 1,
                    "temp12": 1,
                    "temp13": 1,
                    "temp14": 1,
                    "temp15": 2,
                    "temp16": 1,
                    "temp4": 1,
                    "temp5": 1,
                    "temp7": 1,
                    "temp8": 1,
                    "temp_var16": 1,
                    "temp_y": 1,
                    "y2_squared": 1,
                    "y2z1_squared": 1,
                    "y_squared": 1
                },
                "uVar160": {
                    "b_times_root_b": 1
                },
                "uVar161": {
                    "b_times_root_b": 1
                },
                "uVar162": {
                    "c_times_root_b": 1
                },
                "uVar163": {
                    "input7_times_root_b": 1
                },
                "uVar164": {
                    "input7_times_root_b": 1
                },
                "uVar165": {
                    "c_times_root_b": 1
                },
                "uVar166": {
                    "b_double_times_root_b": 1
                },
                "uVar167": {
                    "a_double": 1
                },
                "uVar168": {
                    "input7_times_root_b": 1
                },
                "uVar169": {
                    "input7_times_root_b": 1
                },
                "uVar17": {
                    "ab_squared_dot_acbc_squared": 1,
                    "angle3_cosine": 1,
                    "calculate10": 1,
                    "d15": 1,
                    "distance15": 1,
                    "f1": 1,
                    "input7_times_root_b": 1,
                    "mul5": 1,
                    "multiply9": 1,
                    "result16": 1,
                    "sum15": 1,
                    "temp1": 1,
                    "temp13": 1,
                    "temp14": 1,
                    "temp15": 1,
                    "temp16": 2,
                    "temp17": 1,
                    "temp5": 1,
                    "temp6": 1,
                    "temp8": 1,
                    "temp9": 1,
                    "temp_var17": 1,
                    "temp_z": 1,
                    "thrust_x": 1,
                    "y2z1y2z1_sum": 1,
                    "y3_squared": 1
                },
                "uVar170": {
                    "a_double": 1
                },
                "uVar171": {
                    "a_times_root_b": 1
                },
                "uVar172": {
                    "b_times_root_b": 1
                },
                "uVar173": {
                    "input9_times_root_b": 1
                },
                "uVar174": {
                    "a_double": 1
                },
                "uVar175": {
                    "c_times_root_b": 1
                },
                "uVar176": {
                    "c_times_root_b": 1
                },
                "uVar177": {
                    "input9_times_root_b": 1
                },
                "uVar178": {
                    "input9_times_root_b": 1
                },
                "uVar179": {
                    "input9_times_root_b": 1
                },
                "uVar18": {
                    "bc_squared_dot_bcab_squared": 1,
                    "calculate11": 1,
                    "d16": 1,
                    "denominator_x": 1,
                    "distance16": 1,
                    "f2": 1,
                    "input8_times_root_b": 1,
                    "inverse_x1": 1,
                    "mul6": 1,
                    "multiply10": 1,
                    "result17": 1,
                    "sqrt_result": 1,
                    "sum16": 1,
                    "temp10": 1,
                    "temp14": 1,
                    "temp15": 1,
                    "temp16": 1,
                    "temp17": 2,
                    "temp18": 1,
                    "temp2": 1,
                    "temp6": 1,
                    "temp7": 1,
                    "temp9": 1,
                    "temp_var18": 1,
                    "thrust_y": 1,
                    "z1_squared": 1
                },
                "uVar180": {
                    "a_double": 1
                },
                "uVar181": {
                    "e_squared": 1
                },
                "uVar182": {
                    "input8_times_root_b": 1
                },
                "uVar183": {
                    "input7_times_root_b": 1
                },
                "uVar184": {
                    "input8_times_root_b": 1
                },
                "uVar185": {
                    "input7_times_root_b": 1
                },
                "uVar186": {
                    "input8_times_root_b": 1
                },
                "uVar187": {
                    "input9_times_root_b": 1
                },
                "uVar188": {
                    "input9_times_root_b": 1
                },
                "uVar189": {
                    "e_squared": 1
                },
                "uVar19": {
                    "denominator_y": 1,
                    "input9_times_root_b": 1,
                    "temp3": 1
                },
                "uVar190": {
                    "input8_times_root_b": 1
                },
                "uVar191": {
                    "input9_times_root_b": 1
                },
                "uVar192": {
                    "inv_denom": 1
                },
                "uVar193": {
                    "inv_denom": 1
                },
                "uVar194": {
                    "input9_times_root_b": 1
                },
                "uVar195": {
                    "input8_times_root_b": 1
                },
                "uVar196": {
                    "input7_times_root_b": 1
                },
                "uVar197": {
                    "input7_times_root_b": 1
                },
                "uVar198": {
                    "input8_times_root_b": 1
                },
                "uVar199": {
                    "input8_times_root_b": 1
                },
                "uVar2": {
                    "a_squared_plus_b": 1,
                    "ac_squared": 1,
                    "d2": 1,
                    "distance2": 3,
                    "length2": 1,
                    "length_squared2": 1,
                    "result1": 1,
                    "result2": 3,
                    "square_sum2": 1,
                    "sum2": 1,
                    "temp2": 4,
                    "temp_var2": 1,
                    "velocity_squared_y": 1,
                    "x1y1_squared_sum": 1,
                    "x2_sqrd": 1,
                    "x2_squared": 2,
                    "x_result": 1,
                    "y1_sqr": 1,
                    "y1_square": 1,
                    "y_squared": 2
                },
                "uVar20": {
                    "a_times_input7_times_root_b": 1,
                    "ac_origin_dot_acbc_cross_product": 1,
                    "angle1_mult": 1,
                    "calculate13": 1,
                    "d18": 1,
                    "denominator_z": 1,
                    "distance17": 1,
                    "f4": 1,
                    "inverse_x2": 1,
                    "lift_force_y": 1,
                    "m3": 1,
                    "mul8": 1,
                    "multiply12": 1,
                    "result19": 1,
                    "result2": 1,
                    "temp1": 1,
                    "temp11": 1,
                    "temp12": 1,
                    "temp15": 1,
                    "temp17": 2,
                    "temp19": 2,
                    "temp20": 1,
                    "temp4": 1,
                    "temp8": 1,
                    "temp9": 1,
                    "temp_var20": 1,
                    "x2y3z1_sum": 1
                },
                "uVar200": {
                    "input9_times_root_b": 1
                },
                "uVar201": {
                    "input8_times_root_b": 1
                },
                "uVar202": {
                    "input9_times_root_b": 1
                },
                "uVar203": {
                    "input9_times_root_b": 1
                },
                "uVar204": {
                    "input8_times_root_b": 1
                },
                "uVar205": {
                    "input9_times_root_b": 1
                },
                "uVar206": {
                    "input9_times_root_b": 1
                },
                "uVar207": {
                    "input9_times_root_b": 1
                },
                "uVar208": {
                    "input7_times_root_b": 1
                },
                "uVar209": {
                    "input7_times_root_b": 1
                },
                "uVar21": {
                    "a_times_input8_times_root_b": 1,
                    "angle2_mult": 1,
                    "bc_origin_dot_bcab_cross_product": 1,
                    "calculate14": 1,
                    "d19": 1,
                    "distance18": 1,
                    "f5": 1,
                    "inverse_x3": 1,
                    "lift_force_total": 1,
                    "mul9": 1,
                    "multiply13": 1,
                    "result20": 1,
                    "result3": 1,
                    "temp10": 1,
                    "temp12": 1,
                    "temp13": 1,
                    "temp16": 1,
                    "temp18": 2,
                    "temp2": 1,
                    "temp20": 2,
                    "temp21": 1,
                    "temp5": 1,
                    "temp9": 1,
                    "temp_var21": 1,
                    "xy_squared_term": 1
                },
                "uVar210": {
                    "input9_times_root_b": 1
                },
                "uVar211": {
                    "input7_times_root_b": 1
                },
                "uVar212": {
                    "input7_times_root_b": 1
                },
                "uVar213": {
                    "input9_times_root_b": 1
                },
                "uVar214": {
                    "input9_times_root_b": 1
                },
                "uVar215": {
                    "input9_times_root_b": 1
                },
                "uVar216": {
                    "e_squared": 1
                },
                "uVar217": {
                    "input7_times_root_b": 1
                },
                "uVar218": {
                    "b_times_root_b": 1
                },
                "uVar219": {
                    "input8_times_root_b": 1
                },
                "uVar22": {
                    "ab_origin_dot_bcab_cross_product": 1,
                    "angle3_mult": 1,
                    "c_times_input9_times_root_b": 1,
                    "calculate15": 1,
                    "d20": 1,
                    "distance19": 1,
                    "friction_x": 1,
                    "inverse_y1": 1,
                    "mul10": 1,
                    "multiply14": 1,
                    "result21": 1,
                    "result4": 1,
                    "temp10": 1,
                    "temp11": 1,
                    "temp13": 1,
                    "temp14": 1,
                    "temp17": 1,
                    "temp19": 2,
                    "temp21": 2,
                    "temp22": 1,
                    "temp3": 1,
                    "temp6": 1,
                    "temp_var22": 1,
                    "xy_term": 1
                },
                "uVar220": {
                    "input8_times_root_b": 1
                },
                "uVar221": {
                    "input8_times_root_b": 1
                },
                "uVar222": {
                    "input7_times_root_b": 1
                },
                "uVar223": {
                    "input7_times_root_b": 1
                },
                "uVar224": {
                    "input9_times_root_b": 1
                },
                "uVar225": {
                    "input8_times_root_b": 1
                },
                "uVar226": {
                    "input9_times_root_b": 1
                },
                "uVar227": {
                    "input8_times_root_b": 1
                },
                "uVar228": {
                    "input8_times_root_b": 1
                },
                "uVar229": {
                    "input9_times_root_b": 1
                },
                "uVar23": {
                    "a_times_b_double": 1,
                    "angle1_sum": 1,
                    "bc_origin_dot_abac_cross_product": 1,
                    "calculate16": 1,
                    "d21": 1,
                    "distance20": 1,
                    "friction_y": 1,
                    "inverse_y2": 1,
                    "mul11": 1,
                    "multiply15": 1,
                    "result22": 1,
                    "result5": 1,
                    "temp11": 1,
                    "temp12": 1,
                    "temp14": 1,
                    "temp15": 1,
                    "temp18": 1,
                    "temp20": 2,
                    "temp22": 2,
                    "temp23": 1,
                    "temp4": 1,
                    "temp7": 1,
                    "temp_var23": 1,
                    "x2z1y3z1_sum": 1
                },
                "uVar230": {
                    "input7_times_root_b": 1
                },
                "uVar231": {
                    "a_times_root_b": 1
                },
                "uVar232": {
                    "c_times_root_b": 1
                },
                "uVar233": {
                    "c_times_root_b": 1
                },
                "uVar234": {
                    "input7_times_root_b": 1
                },
                "uVar235": {
                    "input7_times_root_b": 1
                },
                "uVar236": {
                    "input7_times_root_b": 1
                },
                "uVar237": {
                    "e_zero": 1
                },
                "uVar238": {
                    "d_root_b": 1
                },
                "uVar239": {
                    "e_zero": 1
                },
                "uVar24": {
                    "a_times_root_b": 1,
                    "angle2_sum": 1,
                    "bc_origin_dot_bc": 1,
                    "calculate17": 1,
                    "d22": 1,
                    "distance21": 1,
                    "friction_total": 1,
                    "inverse_y3": 1,
                    "mul12": 1,
                    "multiply16": 1,
                    "result23": 1,
                    "result6": 1,
                    "temp12": 1,
                    "temp13": 1,
                    "temp15": 1,
                    "temp16": 1,
                    "temp19": 1,
                    "temp21": 2,
                    "temp23": 2,
                    "temp24": 1,
                    "temp5": 1,
                    "temp8": 1,
                    "temp_var24": 1,
                    "y3_squared": 1
                },
                "uVar240": {
                    "f_squared": 1
                },
                "uVar241": {
                    "input9_times_root_b": 1
                },
                "uVar242": {
                    "input8_times_root_b": 1
                },
                "uVar243": {
                    "input7_times_root_b": 1
                },
                "uVar244": {
                    "f_zero": 1
                },
                "uVar245": {
                    "b_times_a_times_inv_f": 1
                },
                "uVar246": {
                    "input9_times_inv_f": 1
                },
                "uVar247": {
                    "input9_times_a_times_inv_f": 1
                },
                "uVar248": {
                    "b_times_a_times_inv_f": 1
                },
                "uVar249": {
                    "input9_times_b_times_inv_f": 1
                },
                "uVar25": {
                    "ab_origin_dot_ab": 1,
                    "angle3_sum": 1,
                    "c_times_input8_times_root_b": 1,
                    "calculate18": 1,
                    "d23": 1,
                    "distance22": 1,
                    "result24": 1,
                    "result7": 1,
                    "result_x": 1,
                    "temp13": 1,
                    "temp14": 1,
                    "temp16": 1,
                    "temp17": 1,
                    "temp20": 1,
                    "temp22": 2,
                    "temp24": 2,
                    "temp25": 1,
                    "temp6": 1,
                    "temp9": 1,
                    "temp_var25": 1,
                    "tmp0": 1,
                    "yxy_squared_term": 1
                },
                "uVar250": {
                    "a_times_inv_f": 1
                },
                "uVar251": {
                    "a_times_inv_f": 1
                },
                "uVar252": {
                    "input9_times_a_times_inv_f": 1
                },
                "uVar253": {
                    "input7_times_inv_f": 1
                },
                "uVar254": {
                    "input7_times_inv_f": 1
                },
                "uVar255": {
                    "input7_times_inv_f": 1
                },
                "uVar256": {
                    "b_times_inv_f": 1
                },
                "uVar257": {
                    "input7_times_a_times_inv_f": 1
                },
                "uVar258": {
                    "input9_times_a_times_inv_f": 1
                },
                "uVar259": {
                    "input9_times_inv_f": 1
                },
                "uVar26": {
                    "ac_origin_dot_bc": 1,
                    "d_squared": 1,
                    "temp10": 1
                },
                "uVar260": {
                    "input8_times_inv_f": 1
                },
                "uVar261": {
                    "input8_times_inv_f": 1
                },
                "uVar262": {
                    "input8_times_inv_f": 1
                },
                "uVar263": {
                    "input8_times_inv_f": 1
                },
                "uVar264": {
                    "input8_times_inv_f": 1
                },
                "uVar265": {
                    "input8_times_inv_f": 1
                },
                "uVar266": {
                    "input9_times_inv_f": 1
                },
                "uVar267": {
                    "input9_times_inv_f": 1
                },
                "uVar268": {
                    "input9_times_inv_f": 1
                },
                "uVar269": {
                    "input9_times_inv_f": 1
                },
                "uVar27": {
                    "ac_origin_dot_ac": 1,
                    "angle1_radians": 1,
                    "d24": 1,
                    "d_flag": 1,
                    "distance23": 1,
                    "distance_square1": 1,
                    "divide1": 1,
                    "m2": 1,
                    "mul14": 1,
                    "result26": 1,
                    "result4": 1,
                    "result8": 1,
                    "scale_matrix_x": 1,
                    "temp11": 1,
                    "temp15": 2,
                    "temp18": 1,
                    "temp21": 1,
                    "temp23": 1,
                    "temp24": 1,
                    "temp26": 2,
                    "temp27": 1,
                    "temp7": 1,
                    "temp_var27": 1,
                    "tmp1": 1,
                    "x_velocity_squared": 1,
                    "xy_sum": 1
                },
                "uVar270": {
                    "input9_times_inv_f": 1
                },
                "uVar271": {
                    "input9_times_inv_f": 1
                },
                "uVar272": {
                    "input9_times_inv_f": 1
                },
                "uVar273": {
                    "input9_times_inv_f": 1
                },
                "uVar274": {
                    "input9_times_inv_f": 1
                },
                "uVar275": {
                    "b_times_inv_f": 1
                },
                "uVar276": {
                    "input9_times_inv_f": 1
                },
                "uVar277": {
                    "input9_times_inv_f": 1
                },
                "uVar278": {
                    "input9_times_inv_f": 1
                },
                "uVar279": {
                    "input9_times_inv_f": 1
                },
                "uVar28": {
                    "a": 1,
                    "ac_origin_dot_ab": 1,
                    "angle2_radians": 1,
                    "d25": 1,
                    "distance24": 1,
                    "distance_square2": 1,
                    "divide2": 1,
                    "mul15": 1,
                    "result27": 1,
                    "result5": 1,
                    "result9": 1,
                    "scale_matrix_y": 1,
                    "temp12": 1,
                    "temp16": 2,
                    "temp19": 1,
                    "temp22": 1,
                    "temp24": 1,
                    "temp25": 1,
                    "temp27": 2,
                    "temp28": 1,
                    "temp8": 1,
                    "temp_var28": 1,
                    "tmp2": 1,
                    "y_velocity_squared": 1,
                    "yz_squared_term": 1
                },
                "uVar280": {
                    "input8_times_inv_f": 1
                },
                "uVar281": {
                    "input8_times_inv_f": 1
                },
                "uVar282": {
                    "input8_times_inv_f": 1
                },
                "uVar283": {
                    "input8_times_inv_f": 1
                },
                "uVar284": {
                    "input8_times_inv_f": 1
                },
                "uVar285": {
                    "input8_times_inv_f": 1
                },
                "uVar286": {
                    "input8_times_inv_f": 1
                },
                "uVar287": {
                    "input8_times_inv_f": 1
                },
                "uVar288": {
                    "input8_times_inv_f": 1
                },
                "uVar289": {
                    "input8_times_inv_f": 1
                },
                "uVar29": {
                    "a_squared_times_inv_d": 1,
                    "ab_origin_dot_bc": 1,
                    "angle3_radians": 1,
                    "b": 1,
                    "d26": 1,
                    "distance25": 1,
                    "distance_square3": 1,
                    "divide3": 1,
                    "mul16": 1,
                    "result10": 1,
                    "result28": 1,
                    "result6": 1,
                    "result_total": 1,
                    "scale_matrix_z": 1,
                    "temp13": 1,
                    "temp17": 2,
                    "temp20": 1,
                    "temp23": 1,
                    "temp25": 1,
                    "temp26": 1,
                    "temp28": 2,
                    "temp29": 1,
                    "temp9": 1,
                    "temp_var29": 1,
                    "tmp3": 1,
                    "yz_term": 1
                },
                "uVar290": {
                    "input8_times_inv_f": 1
                },
                "uVar291": {
                    "input8_times_inv_f": 1
                },
                "uVar292": {
                    "e_squared_root_b": 1
                },
                "uVar293": {
                    "e_squared_root_b": 1
                },
                "uVar294": {
                    "e_squared_root_b": 1
                },
                "uVar295": {
                    "f_zero": 1
                },
                "uVar296": {
                    "input9_times_root_b": 1
                },
                "uVar297": {
                    "e_squared_root_b": 1
                },
                "uVar298": {
                    "e_squared_root_b": 1
                },
                "uVar299": {
                    "g_squared": 1
                },
                "uVar30": {
                    "b_squared_times_inv_d": 1,
                    "temp14": 1
                },
                "uVar300": {
                    "g_zero": 1
                },
                "uVar301": {
                    "input9_times_root_b": 1
                },
                "uVar302": {
                    "input9_times_root_b": 1
                },
                "uVar303": {
                    "a_times_input8_times_root_b": 1
                },
                "uVar304": {
                    "input9_times_root_b": 1
                },
                "uVar305": {
                    "input8_times_root_b": 1
                },
                "uVar306": {
                    "input8_times_root_b": 1
                },
                "uVar307": {
                    "input7_times_root_b": 1
                },
                "uVar308": {
                    "input7_times_root_b": 1
                },
                "uVar309": {
                    "a_times_root_b": 1
                },
                "uVar31": {
                    "ac_origin_dot_2": 1,
                    "asin_res": 1,
                    "asin_result": 2,
                    "d27": 1,
                    "result1": 2,
                    "result7": 1,
                    "result_x": 1,
                    "result_x_direction": 1,
                    "sin_result": 1,
                    "temp1": 4,
                    "temp11": 1,
                    "temp19": 2,
                    "temp25": 1,
                    "temp28": 1,
                    "temp30": 2,
                    "temp31": 1,
                    "temp_fixed_1": 1,
                    "temp_var31": 1,
                    "tmp5": 1
                },
                "uVar310": {
                    "c_times_input8_times_root_b": 1
                },
                "uVar311": {
                    "a_times_root_b": 1
                },
                "uVar312": {
                    "input9_times_root_b": 1
                },
                "uVar313": {
                    "a_times_root_b": 1
                },
                "uVar314": {
                    "input7_times_root_b": 1
                },
                "uVar315": {
                    "input7_times_root_b": 1
                },
                "uVar316": {
                    "input7_times_root_b": 1
                },
                "uVar317": {
                    "input7_times_root_b": 1
                },
                "uVar318": {
                    "input8_times_root_b": 1
                },
                "uVar319": {
                    "f_zero": 1
                },
                "uVar32": {
                    "atan2_result": 2,
                    "atan_res": 1,
                    "atan_result": 1,
                    "bc_origin_dot_2": 1,
                    "d28": 1,
                    "result2": 2,
                    "result8": 1,
                    "result_y": 1,
                    "result_y_direction": 1,
                    "temp12": 1,
                    "temp2": 4,
                    "temp20": 2,
                    "temp26": 1,
                    "temp29": 1,
                    "temp31": 2,
                    "temp32": 1,
                    "temp_fixed_2": 1,
                    "temp_var32": 1,
                    "tmp6": 1
                },
                "uVar320": {
                    "c_times_root_b": 1
                },
                "uVar321": {
                    "c_times_root_b": 1
                },
                "uVar322": {
                    "e_zero": 1
                },
                "uVar323": {
                    "e_zero": 1
                },
                "uVar324": {
                    "input9_times_root_b": 1
                },
                "uVar325": {
                    "input9_times_root_b": 1
                },
                "uVar326": {
                    "input9_times_root_b": 1
                },
                "uVar327": {
                    "input9_times_root_b": 1
                },
                "uVar33": {
                    "temp21": 1
                },
                "uVar34": {
                    "a_times_b": 1,
                    "temp22": 1
                },
                "uVar35": {
                    "inv_d_squared": 1,
                    "temp15": 1
                },
                "uVar36": {
                    "c_times_input9_times_b": 1,
                    "temp16": 1
                },
                "uVar37": {
                    "input8_times_c_times_inv_d": 1,
                    "temp17": 1
                },
                "uVar38": {
                    "input9_times_a_times_inv_d": 1,
                    "temp18": 1
                },
                "uVar39": {
                    "a_times_b": 1,
                    "temp19": 1
                },
                "uVar4": {
                    "a_times_b": 1,
                    "bc_squared": 1,
                    "c_squared": 1,
                    "d3": 1,
                    "distance1": 1,
                    "distance3": 3,
                    "drag_force_x": 1,
                    "length1_squared": 1,
                    "length3": 1,
                    "result3": 1,
                    "square_sum3": 1,
                    "sum3": 1,
                    "temp1": 2,
                    "temp3": 3,
                    "temp4": 1,
                    "temp_var4": 1,
                    "width_squared": 1,
                    "x2_sqr": 1,
                    "x2_square": 1,
                    "x2_squared": 1,
                    "x3_sqrd": 1,
                    "x3_squared": 1,
                    "y1_squared": 1,
                    "y_squared": 1
                },
                "uVar40": {
                    "b_times_c_times_inv_d": 1,
                    "temp20": 1
                },
                "uVar41": {
                    "input9_times_inv_d": 1,
                    "temp21": 1
                },
                "uVar42": {
                    "input8_times_inv_d": 1,
                    "temp22": 1
                },
                "uVar43": {
                    "input7_times_inv_d": 1,
                    "temp23": 1
                },
                "uVar44": {
                    "input9_times_a_times_inv_d": 1,
                    "temp24": 1
                },
                "uVar45": {
                    "input7_times_c_times_inv_d": 1,
                    "temp25": 1
                },
                "uVar46": {
                    "input8_times_b_times_inv_d": 1,
                    "temp26": 1
                },
                "uVar47": {
                    "input9_times_b_times_inv_d": 1,
                    "temp27": 1
                },
                "uVar48": {
                    "input8_times_a_times_inv_d": 1,
                    "temp28": 1
                },
                "uVar49": {
                    "input8_times_a_times_inv_d": 1,
                    "temp29": 1
                },
                "uVar5": {
                    "b_squared": 1,
                    "bc_origin": 1,
                    "c_squared": 1,
                    "d4": 1,
                    "distance2": 1,
                    "distance4": 2,
                    "drag_force_y": 1,
                    "length2_squared": 1,
                    "result2": 1,
                    "result4": 1,
                    "square_sum4": 1,
                    "sum4": 1,
                    "temp2": 2,
                    "temp4": 3,
                    "temp5": 1,
                    "temp_var5": 1,
                    "x2y2_squared_sum": 1,
                    "x4_squared": 1,
                    "y1_sqrd": 1,
                    "y2_sqr": 1,
                    "y2_square": 1,
                    "y2_squared": 1,
                    "y_result": 1
                },
                "uVar50": {
                    "input7_times_a_times_inv_d": 1,
                    "temp30": 1
                },
                "uVar51": {
                    "input9_times_inv_d": 1,
                    "temp31": 1
                },
                "uVar52": {
                    "input9_times_inv_d": 1,
                    "temp32": 1
                },
                "uVar53": {
                    "input9_times_inv_d": 1,
                    "temp33": 1
                },
                "uVar54": {
                    "a_times_a_times_inv_d": 1,
                    "temp34": 1
                },
                "uVar55": {
                    "b_times_a_times_inv_d": 1,
                    "temp35": 1
                },
                "uVar56": {
                    "c_times_inv_d": 1,
                    "temp36": 1
                },
                "uVar57": {
                    "input7_times_inv_d": 1,
                    "temp37": 1
                },
                "uVar58": {
                    "input7_times_inv_d": 1,
                    "temp38": 1
                },
                "uVar59": {
                    "input7_times_inv_d": 1,
                    "temp39": 1
                },
                "uVar6": {
                    "ac_origin": 1,
                    "c_squared": 1,
                    "d5": 1,
                    "distance3": 1,
                    "distance5": 2,
                    "drag_force_total": 1,
                    "height_squared": 1,
                    "length3_squared": 1,
                    "length4": 1,
                    "result5": 1,
                    "square_sum5": 1,
                    "sum5": 1,
                    "temp3": 2,
                    "temp5": 3,
                    "temp6": 1,
                    "temp_var6": 1,
                    "x3_squared": 1,
                    "x5_squared": 1,
                    "xy": 1,
                    "y1_plus_y2": 1,
                    "y2_sqrd": 1,
                    "z2_sqr": 1,
                    "z2_square": 1,
                    "z_squared": 1
                },
                "uVar60": {
                    "input7_times_inv_d": 1,
                    "temp40": 1
                },
                "uVar61": {
                    "input9_times_inv_d": 1
                },
                "uVar62": {
                    "input9_times_inv_d": 1
                },
                "uVar63": {
                    "inv_d_squared": 1
                },
                "uVar64": {
                    "input8_times_b_times_inv_d": 1
                },
                "uVar65": {
                    "b_times_inv_d": 1
                },
                "uVar66": {
                    "input8_times_c_times_inv_d": 1
                },
                "uVar67": {
                    "inv_d_squared": 1
                },
                "uVar68": {
                    "input8_times_c_times_inv_d": 1
                },
                "uVar69": {
                    "a_times_root_b": 1
                },
                "uVar7": {
                    "abac_cross_product": 1,
                    "b_zero": 1,
                    "d6": 1,
                    "distance1": 1,
                    "distance6": 2,
                    "force_x": 1,
                    "is_equal_zero3": 1,
                    "is_length2_zero": 1,
                    "result3": 1,
                    "result6": 1,
                    "square_sum6": 1,
                    "sum6": 1,
                    "sum_of_distances": 1,
                    "temp4": 2,
                    "temp6": 3,
                    "temp7": 1,
                    "temp_var7": 1,
                    "x3_sqr": 1,
                    "x3y3_squared_sum": 1,
                    "x6_squared": 1,
                    "xz": 1,
                    "y3_sqrd": 1,
                    "z1_squared": 1,
                    "z_result": 1
                },
                "uVar70": {
                    "b_times_c_times_inv_d": 1
                },
                "uVar71": {
                    "b_times_c_times_inv_d": 1
                },
                "uVar72": {
                    "input9_times_b_times_inv_d": 1
                },
                "uVar73": {
                    "a_times_root_b": 1
                },
                "uVar74": {
                    "c_times_input7_times_inv_d": 1
                },
                "uVar75": {
                    "c_times_input8_times_inv_d": 1
                },
                "uVar76": {
                    "c_times_input9_times_inv_d": 1
                },
                "uVar77": {
                    "input8_times_inv_d": 1
                },
                "uVar78": {
                    "input8_times_inv_d": 1
                },
                "uVar79": {
                    "input8_times_inv_d": 1
                },
                "uVar80": {
                    "input7_times_root_b": 1
                },
                "uVar81": {
                    "input8_times_root_b": 1
                },
                "uVar82": {
                    "c_times_input9_times_root_b": 1
                },
                "uVar83": {
                    "a_times_root_b": 1
                },
                "uVar84": {
                    "a_times_root_b": 1
                },
                "uVar85": {
                    "input7_times_root_b": 1
                },
                "uVar86": {
                    "input7_times_root_b": 1
                },
                "uVar87": {
                    "a_times_b": 1
                },
                "uVar88": {
                    "b_times_input9_times_root_b": 1
                },
                "uVar89": {
                    "c_times_input8_times_root_b": 1
                },
                "uVar9": {
                    "2a": 1,
                    "angle1_tangent": 1,
                    "bcab_cross_product": 1,
                    "c_zero": 1,
                    "calculate2": 1,
                    "d7": 1,
                    "distance7": 1,
                    "distance_x1_x2": 1,
                    "initial_velocity_x_squared": 1,
                    "inverse_x": 1,
                    "is_equal_zero4": 1,
                    "m1": 1,
                    "multiply1": 1,
                    "result8": 1,
                    "sum7": 1,
                    "temp1": 1,
                    "temp5": 1,
                    "temp6": 1,
                    "temp7": 1,
                    "temp8": 2,
                    "temp9": 1,
                    "temp_var9": 1,
                    "twice_distance1": 1,
                    "x3doubled": 1,
                    "y1_squared": 1,
                    "z1_sqrd": 1,
                    "z3_sqr": 1
                },
                "uVar90": {
                    "b_times_input7_times_root_b": 1
                },
                "uVar91": {
                    "input8_times_root_b": 1
                },
                "uVar92": {
                    "input7_times_root_b": 1
                },
                "uVar93": {
                    "input9_times_root_b": 1
                },
                "uVar94": {
                    "b_times_input8_times_root_b": 1
                },
                "uVar95": {
                    "a_times_input9_times_root_b": 1
                },
                "uVar96": {
                    "a_times_input8_times_root_b": 1
                },
                "uVar97": {
                    "a_times_input7_times_root_b": 1
                },
                "uVar98": {
                    "b_times_input9_times_root_b": 1
                },
                "uVar99": {
                    "d_times_root_b": 1
                }
            },
            "called": [
                "FUN_080058fc",
                "FUN_08005bc8",
                "FUN_08001014",
                "FUN_08000ad8",
                "FUN_08000428",
                "FUN_08000adc",
                "FUN_080004d0",
                "FUN_08000e54",
                "FUN_08000a30",
                "FUN_08000cec",
                "FUN_08005854",
                "FUN_08000724"
            ],
            "calling": [
                "FUN_08002f28"
            ],
            "code": "\nvoid calculate_coordinates_08003330(undefined4 x1,undefined4 y1,undefined4 z1,undefined4 x2,\n                 undefined4 y2,undefined4 z2,undefined4 x3,undefined4 y3,\n                 undefined4 z3,undefined4 *result)\n\n{\n  undefined4 temp1;\n  undefined4 temp2;\n  int is_zero1;\n  undefined4 temp3;\n  undefined4 temp4;\n  undefined4 temp5;\n  undefined4 temp6;\n  int is_zero2;\n  undefined4 temp8;\n  undefined4 a_times_c;\n  undefined4 temp10;\n  undefined4 temp11;\n  undefined4 temp12;\n  undefined4 temp13;\n  undefined4 temp14;\n  undefined4 temp15;\n  undefined4 temp16;\n  undefined4 temp17;\n  int temp18;\n  undefined4 temp17;\n  undefined4 temp20;\n  undefined4 temp21;\n  undefined4 temp22;\n  undefined4 temp23;\n  undefined4 temp22;\n  int is_zero3;\n  undefined4 temp26;\n  undefined4 temp27;\n  undefined4 temp17;\n  int is_zero4;\n  undefined8 temp1;\n  undefined8 temp2;\n  \n  temp17 = DAT_20000048;\n  temp27 = DAT_20000044;\n  is_zero4 = DAT_20000040;\n  temp26 = DAT_2000003c;\n  temp1 = __aeabi_fmul(x1,x1);\n  temp2 = __aeabi_fmul(y1);\n  temp1 = __addsf3(temp1,temp2);\n  temp2 = __aeabi_fmul(z1);\n  __addsf3(temp1,temp2);\n  __aeabi_f2d();\n  sqrt();\n  temp1 = __truncdfsf2();\n  is_zero1 = __aeabi_fcmpeq(temp1,0);\n  if (is_zero1 == 0) {\n    temp2 = __aeabi_fmul(x3);\n    temp3 = __aeabi_fmul(y3);\n    temp2 = __addsf3(temp2,temp3);\n    temp3 = __aeabi_fmul(z3);\n    __addsf3(temp2,temp3);\n    __aeabi_f2d();\n    sqrt();\n    temp2 = __truncdfsf2();\n    is_zero1 = __aeabi_fcmpeq(temp2,0);\n    if (is_zero1 == 0) {\n      temp1 = __aeabi_f2d(x2);\n      __muldf3((int)temp1,(int)((ulonglong)temp1 >> 0x20),0xa2529d39,0x3f91df46);\n      temp3 = __truncdfsf2();\n      temp1 = __aeabi_f2d(y2);\n      __muldf3((int)temp1,(int)((ulonglong)temp1 >> 0x20),0xa2529d39,0x3f91df46);\n      temp4 = __truncdfsf2();\n      temp1 = __aeabi_f2d(z2);\n      __muldf3((int)temp1,(int)((ulonglong)temp1 >> 0x20),0xa2529d39,0x3f91df46);\n      temp5 = __truncdfsf2();\n      is_zero1 = __addsf3(temp26);\n      temp6 = __addsf3(is_zero4);\n      is_zero2 = __addsf3(temp27,temp27);\n      temp8 = __addsf3(temp17,temp17);\n      a_times_c = __aeabi_fmul(temp26);\n      temp10 = __aeabi_fmul(temp26,is_zero4);\n      temp11 = __aeabi_fmul(temp26,temp27);\n      temp12 = __aeabi_fmul(is_zero4);\n      temp13 = __aeabi_fmul(is_zero4,temp17);\n      temp14 = __aeabi_fmul(temp27,temp27);\n      temp15 = __aeabi_fmul(temp17,temp17);\n      temp1 = __aeabi_fdiv(0x3f800000,temp1);\n      temp2 = __aeabi_fdiv(0x3f800000,temp2);\n      temp16 = __aeabi_fmul(x3,temp2);\n      temp17 = __aeabi_fmul(y3,temp2);\n      temp2 = __aeabi_fmul(z3,temp2);\n      temp18 = __aeabi_fmul(is_zero1,temp16);\n      temp17 = __aeabi_fmul(is_zero1,temp17);\n      temp20 = __aeabi_fmul(is_zero1,temp2);\n      temp21 = __aeabi_fmul(temp6,temp16);\n      temp22 = __aeabi_fmul(a_times_c,temp16);\n      temp23 = __aeabi_fmul(temp17,temp17);\n      temp22 = __aeabi_fsub(temp22,temp23);\n      temp23 = __aeabi_fmul(temp27,temp20);\n      temp22 = __addsf3(temp22,temp23);\n      temp23 = __aeabi_fmul(temp12,temp16);\n      temp22 = __addsf3(temp22,temp23);\n      temp23 = __aeabi_fmul(temp6,temp17);\n      temp23 = __aeabi_fmul(temp23,temp27);\n      temp22 = __addsf3(temp22,temp23);\n      temp23 = __aeabi_fmul(temp6,temp2);\n      temp23 = __aeabi_fmul(temp23,temp17);\n      temp22 = __addsf3(temp22,temp23);\n      temp23 = __aeabi_fmul(temp14,temp16);\n      temp22 = __aeabi_fsub(temp22,temp23);\n      temp23 = __aeabi_fmul(temp15,temp16);\n      temp22 = __aeabi_fsub(temp22,temp23);\n      temp23 = __aeabi_fmul(temp17,temp18);\n      temp22 = __aeabi_fmul(a_times_c,temp17);\n      temp23 = __addsf3(temp23,temp22);\n      temp20 = __aeabi_fmul(is_zero4,temp20);\n      temp20 = __aeabi_fsub(temp23,temp20);\n      temp23 = __aeabi_fmul(temp27,temp21);\n      temp20 = __addsf3(temp20,temp23);\n      temp23 = __aeabi_fmul(temp12,temp17);\n      temp20 = __aeabi_fsub(temp20,temp23);\n      temp23 = __aeabi_fmul(temp14,temp17);\n      temp20 = __addsf3(temp20,temp23);\n      temp23 = __aeabi_fmul(is_zero2,temp2);\n      temp23 = __aeabi_fmul(temp23,temp17);\n      temp20 = __addsf3(temp20,temp23);\n      temp23 = __aeabi_fmul(temp15,temp17);\n      temp20 = __aeabi_fsub(temp20,temp23);\n      temp22 = __aeabi_fmul(temp22,temp22);\n      temp20 = __aeabi_fmul(temp20,temp20);\n      __addsf3(temp22,temp20);\n      __aeabi_f2d();\n      sqrt();\n      is_zero3 = __truncdfsf2();\n      temp20 = __aeabi_fmul(temp18 + -0x80000000,temp27);\n      temp17 = __aeabi_fmul(is_zero4,temp17);\n      temp17 = __addsf3(temp20,temp17);\n      a_times_c = __aeabi_fmul(a_times_c,temp2);\n      a_times_c = __addsf3(temp17,a_times_c);\n      temp17 = __aeabi_fmul(temp17,temp21);\n      a_times_c = __addsf3(a_times_c,temp17);\n      temp17 = __aeabi_fmul(temp12,temp2);\n      a_times_c = __aeabi_fsub(a_times_c,temp17);\n      temp17 = __aeabi_fmul(is_zero2,temp17);\n      temp17 = __aeabi_fmul(temp17,temp17);\n      a_times_c = __addsf3(a_times_c,temp17);\n      temp17 = __aeabi_fmul(temp14,temp2);\n      a_times_c = __aeabi_fsub(a_times_c,temp17);\n      temp17 = __aeabi_fmul(temp15,temp2);\n      a_times_c = __addsf3(a_times_c,temp17);\n      temp17 = __addsf3(a_times_c,a_times_c);\n      temp20 = __addsf3(temp13);\n      temp21 = __aeabi_fmul(temp27,is_zero1);\n      temp20 = __aeabi_fsub(temp20,temp21);\n      temp21 = __aeabi_fmul(x1,temp1);\n      temp20 = __aeabi_fsub(temp20,temp21);\n      temp21 = __aeabi_fmul(temp17,is_zero2);\n      temp22 = __addsf3(temp10);\n      temp21 = __addsf3(temp21,temp22);\n      temp22 = __aeabi_fmul(y1,temp1);\n      temp21 = __aeabi_fsub(temp21,temp22);\n      temp22 = __aeabi_fmul(temp27,a_times_c);\n      temp23 = __aeabi_fsub(0x3f000000,temp14);\n      temp15 = __aeabi_fsub(temp23,temp15);\n      temp15 = __aeabi_fmul(temp15,is_zero3);\n      temp23 = __aeabi_fsub(temp13,temp11);\n      temp23 = __aeabi_fmul(temp23,a_times_c);\n      temp15 = __addsf3(temp15,temp23);\n      temp15 = __aeabi_fsub(temp15,temp16);\n      temp16 = __aeabi_fmul(is_zero4,a_times_c);\n      temp23 = __aeabi_fmul(is_zero4,temp27);\n      temp22 = __aeabi_fmul(temp26,temp17);\n      temp23 = __aeabi_fsub(temp23,temp22);\n      temp23 = __aeabi_fmul(temp23,is_zero3);\n      temp22 = __aeabi_fmul(temp27,temp17);\n      temp10 = __addsf3(temp22,temp10);\n      temp10 = __aeabi_fmul(temp10,a_times_c);\n      temp10 = __addsf3(temp23,temp10);\n      temp10 = __aeabi_fsub(temp10,temp17);\n      temp17 = __aeabi_fmul(temp27,is_zero3);\n      temp23 = __aeabi_fsub(0x3f000000,temp12);\n      temp23 = __aeabi_fsub(temp23,temp14);\n      temp23 = __aeabi_fmul(temp23,a_times_c);\n      temp11 = __addsf3(temp11,temp13);\n      temp11 = __aeabi_fmul(temp11,is_zero3);\n      temp11 = __addsf3(temp23,temp11);\n      temp2 = __aeabi_fsub(temp11,temp2);\n      temp11 = __aeabi_fmul(is_zero2 + -0x80000000,temp20);\n      temp13 = __aeabi_fmul(temp6,temp21);\n      temp11 = __addsf3(temp11,temp13);\n      temp13 = __aeabi_fmul(temp22,temp15);\n      temp11 = __aeabi_fsub(temp11,temp13);\n      temp13 = __aeabi_fmul(temp17,is_zero3 + -0x80000000);\n      temp13 = __addsf3(temp13,temp16);\n      temp13 = __aeabi_fmul(temp13,temp10);\n      temp11 = __addsf3(temp11,temp13);\n      temp13 = __aeabi_fmul(temp17,temp2);\n      temp11 = __addsf3(temp11,temp13);\n      temp12 = __addsf3(temp12);\n      temp12 = __aeabi_fsub(0x3f800000,temp12);\n      temp13 = __addsf3(temp14);\n      temp12 = __aeabi_fsub(temp12,temp13);\n      temp1 = __aeabi_fmul(z1,temp1);\n      temp1 = __aeabi_fsub(temp12,temp1);\n      temp12 = __aeabi_fmul(temp17,a_times_c);\n      a_times_c = __aeabi_fmul(temp26,a_times_c);\n      temp13 = __aeabi_fmul(temp8,temp20);\n      temp14 = __aeabi_fmul(is_zero1,temp21);\n      temp13 = __addsf3(temp13,temp14);\n      temp14 = __aeabi_fmul(is_zero4,0x40800000);\n      temp14 = __aeabi_fmul(temp14,temp1);\n      temp13 = __aeabi_fsub(temp13,temp14);\n      temp14 = __aeabi_fmul(temp15,temp12);\n      temp13 = __addsf3(temp13,temp14);\n      temp14 = __addsf3(temp17,a_times_c);\n      temp14 = __aeabi_fmul(temp14,temp10);\n      temp13 = __addsf3(temp13,temp14);\n      temp14 = __aeabi_fmul(temp17,is_zero3);\n      temp17 = __aeabi_fmul(is_zero4,temp17);\n      temp14 = __aeabi_fsub(temp14,temp17);\n      temp14 = __aeabi_fmul(temp14,temp2);\n      temp13 = __addsf3(temp13,temp14);\n      temp18 = __addsf3(is_zero3,is_zero3);\n      temp14 = __aeabi_fmul(is_zero4,is_zero3);\n      temp17 = __aeabi_fmul(is_zero1 + -0x80000000,temp20);\n      temp8 = __aeabi_fmul(temp8,temp21);\n      temp8 = __addsf3(temp17,temp8);\n      temp17 = __aeabi_fmul(temp27,0x40800000);\n      temp1 = __aeabi_fmul(temp17,temp1);\n      temp1 = __aeabi_fsub(temp8,temp1);\n      temp8 = __aeabi_fmul(temp27,temp18 + -0x80000000);\n      temp8 = __aeabi_fsub(temp8,a_times_c);\n      temp8 = __aeabi_fmul(temp8,temp15);\n      temp1 = __addsf3(temp1,temp8);\n      temp8 = __addsf3(temp12,temp14);\n      temp8 = __aeabi_fmul(temp8,temp10);\n      temp1 = __addsf3(temp1,temp8);\n      temp8 = __aeabi_fmul(temp26,is_zero3);\n      a_times_c = __aeabi_fmul(temp27,temp17);\n      temp8 = __aeabi_fsub(temp8,a_times_c);\n      temp8 = __aeabi_fmul(temp8,temp2);\n      temp8 = __addsf3(temp1,temp8);\n      temp1 = __aeabi_fmul(temp6,temp20);\n      temp6 = __aeabi_fmul(is_zero2,temp21);\n      temp1 = __addsf3(temp1,temp6);\n      temp6 = __aeabi_fmul(temp17,temp18 + -0x80000000);\n      temp6 = __addsf3(temp6,temp16);\n      temp6 = __aeabi_fmul(temp6,temp15);\n      temp1 = __addsf3(temp1,temp6);\n      temp6 = __aeabi_fmul(temp26,is_zero3 + -0x80000000);\n      temp6 = __addsf3(temp6,temp22);\n      temp6 = __aeabi_fmul(temp6,temp10);\n      temp1 = __addsf3(temp1,temp6);\n      temp2 = __aeabi_fmul(temp2,temp14);\n      temp6 = __addsf3(temp1,temp2);\n      temp1 = __aeabi_fmul(temp11);\n      temp2 = __aeabi_fmul(temp13);\n      temp1 = __addsf3(temp1,temp2);\n      temp2 = __aeabi_fmul(temp8,temp8);\n      temp1 = __addsf3(temp1,temp2);\n      temp2 = __aeabi_fmul(temp6,temp6);\n      __addsf3(temp1,temp2);\n      __aeabi_f2d();\n      sqrt();\n      temp1 = __truncdfsf2();\n      a_times_c = __aeabi_fdiv(0x3f800000,temp1);\n      temp1 = DAT_2000035c;\n      temp2 = __aeabi_fmul(is_zero4 + -0x80000000,temp3);\n      temp10 = __aeabi_fmul(temp27,temp4);\n      temp2 = __aeabi_fsub(temp2,temp10);\n      temp10 = __aeabi_fmul(temp17,temp5);\n      temp2 = __aeabi_fsub(temp2,temp10);\n      temp10 = __aeabi_fmul(temp2,0x3f000000);\n      temp11 = __aeabi_fmul(temp11,a_times_c);\n      temp2 = DAT_20000360;\n      temp11 = __aeabi_fmul(temp11,temp1);\n      temp10 = __aeabi_fsub(temp10,temp11);\n      temp2 = __aeabi_fmul(temp10,temp2);\n      temp10 = __addsf3(temp2,temp26);\n      temp11 = __aeabi_fmul(temp26,temp3);\n      temp12 = __aeabi_fmul(temp27,temp5);\n      temp2 = DAT_20000360;\n      temp11 = __addsf3(temp11,temp12);\n      temp12 = __aeabi_fmul(temp17,temp4);\n      temp11 = __aeabi_fsub(temp11,temp12);\n      temp11 = __aeabi_fmul(temp11,0x3f000000);\n      temp12 = __aeabi_fmul(temp13,a_times_c);\n      temp12 = __aeabi_fmul(temp12,temp1);\n      temp11 = __aeabi_fsub(temp11,temp12);\n      temp2 = __aeabi_fmul(temp11,temp2);\n      temp11 = __addsf3(temp2,is_zero4);\n      temp2 = DAT_20000360;\n      temp12 = __aeabi_fmul(temp26,temp4);\n      temp13 = __aeabi_fmul(is_zero4,temp5);\n      temp12 = __aeabi_fsub(temp12,temp13);\n      temp13 = __aeabi_fmul(temp17,temp3);\n      temp12 = __addsf3(temp12,temp13);\n      temp12 = __aeabi_fmul(temp12,0x3f000000);\n      temp8 = __aeabi_fmul(temp8,a_times_c);\n      temp8 = __aeabi_fmul(temp8,temp1);\n      temp8 = __aeabi_fsub(temp12,temp8);\n      temp2 = __aeabi_fmul(temp8,temp2);\n      temp2 = __addsf3(temp2,temp27);\n      temp26 = __aeabi_fmul(temp26,temp5);\n      temp4 = __aeabi_fmul(is_zero4,temp4);\n      temp26 = __addsf3(temp26,temp4);\n      temp27 = __aeabi_fmul(temp27,temp3);\n      temp26 = __aeabi_fsub(temp26,temp27);\n      temp27 = __aeabi_fmul(temp26,0x3f000000);\n      temp26 = __aeabi_fmul(temp6,a_times_c);\n      temp1 = __aeabi_fmul(temp26,temp1);\n      temp26 = DAT_20000360;\n      temp27 = __aeabi_fsub(temp27,temp1);\n      temp26 = __aeabi_fmul(temp27,temp26);\n      temp26 = __addsf3(temp26,temp17);\n      temp27 = __aeabi_fmul(temp10,temp10);\n      temp17 = __aeabi_fmul(temp11,temp11);\n      temp27 = __addsf3(temp27,temp17);\n      temp17 = __aeabi_fmul(temp2,temp2);\n      temp27 = __addsf3(temp27,temp17);\n      temp17 = __aeabi_fmul(temp26,temp26);\n      __addsf3(temp27,temp17);\n      __aeabi_f2d();\n      sqrt();\n      temp27 = __truncdfsf2();\n      temp27 = __aeabi_fdiv(0x3f800000,temp27);\n      temp17 = __aeabi_fmul(temp10,temp27);\n      DAT_2000003c = temp17;\n      is_zero4 = __aeabi_fmul(temp11,temp27);\n      DAT_20000040 = is_zero4;\n      temp1 = __aeabi_fmul(temp2,temp27);\n      DAT_20000044 = temp1;\n      DAT_20000048 = __aeabi_fmul(temp26,temp27);\n      temp26 = __aeabi_fmul(is_zero4,DAT_20000048);\n      temp27 = __aeabi_fmul(temp17,temp1);\n      temp26 = __aeabi_fsub(temp26,temp27);\n      __addsf3(temp26,temp26);\n      __aeabi_f2d();\n      temp1 = asin();\n      temp1 = __muldf3((int)temp1,(int)((ulonglong)temp1 >> 0x20),0,0x40668000);\n      __divdf3((int)temp1,(int)((ulonglong)temp1 >> 0x20),0x54442d18,0x400921fb);\n      temp26 = __truncdfsf2();\n      *result = temp26;\n      is_zero4 = DAT_20000040;\n      temp26 = DAT_2000003c;\n      temp27 = __aeabi_fmul(DAT_2000003c,DAT_2000003c);\n      temp17 = __aeabi_fmul(is_zero4,is_zero4);\n      temp17 = __aeabi_fsub(temp27,temp17);\n      temp27 = DAT_20000044;\n      temp1 = __aeabi_fmul(DAT_20000044,DAT_20000044);\n      temp1 = __aeabi_fsub(temp17,temp1);\n      temp17 = DAT_20000048;\n      temp2 = __aeabi_fmul(DAT_20000048,DAT_20000048);\n      __addsf3(temp1,temp2);\n      temp1 = __aeabi_f2d();\n      temp26 = __aeabi_fmul(temp26,is_zero4);\n      temp27 = __aeabi_fmul(temp27,temp17);\n      temp26 = __addsf3(temp26,temp27);\n      __addsf3(temp26,temp26);\n      temp2 = __aeabi_f2d();\n      temp1 = atan2((int)temp2,(int)((ulonglong)temp2 >> 0x20),(int)temp1,\n                     (int)((ulonglong)temp1 >> 0x20));\n      temp1 = __muldf3((int)temp1,(int)((ulonglong)temp1 >> 0x20),0,0x40668000);\n      __divdf3((int)temp1,(int)((ulonglong)temp1 >> 0x20),0x54442d18,0x400921fb);\n      temp26 = __truncdfsf2();\n      result[1] = temp26;\n      is_zero4 = DAT_20000040;\n      temp26 = DAT_2000003c;\n      temp27 = __aeabi_fmul(DAT_2000003c,DAT_2000003c);\n      temp17 = __aeabi_fmul(is_zero4,is_zero4);\n      temp17 = __addsf3(temp27,temp17);\n      temp27 = DAT_20000044;\n      temp1 = __aeabi_fmul(DAT_20000044,DAT_20000044);\n      temp1 = __aeabi_fsub(temp17,temp1);\n      temp17 = DAT_20000048;\n      temp2 = __aeabi_fmul(DAT_20000048,DAT_20000048);\n      __aeabi_fsub(temp1,temp2);\n      temp1 = __aeabi_f2d();\n      temp27 = __aeabi_fmul(is_zero4,temp27);\n      temp26 = __aeabi_fmul(temp26,temp17);\n      temp26 = __addsf3(temp27,temp26);\n      __addsf3(temp26,temp26);\n      temp2 = __aeabi_f2d();\n      temp1 = atan2((int)temp2,(int)((ulonglong)temp2 >> 0x20),(int)temp1,\n                     (int)((ulonglong)temp1 >> 0x20));\n      temp1 = __muldf3((int)temp1,(int)((ulonglong)temp1 >> 0x20),0,0x40668000);\n      __divdf3((int)temp1,(int)((ulonglong)temp1 >> 0x20),0x54442d18,0x400921fb);\n      temp26 = __truncdfsf2();\n      result[2] = temp26;\n    }\n  }\n  return;\n}\n\n",
            "current_name": "calculate_coordinates_08003330",
            "entrypoint": "0x08003330",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003330": "calculate_coordinates_08003330",
                "iVar19": "temp18",
                "iVar26": "is_zero3",
                "iVar3": "is_zero1",
                "iVar30": "is_zero4",
                "iVar8": "is_zero2",
                "param_1": "x1",
                "param_10": "result",
                "param_2": "y1",
                "param_3": "z1",
                "param_4": "x2",
                "param_5": "y2",
                "param_6": "z2",
                "param_7": "x3",
                "param_8": "y3",
                "param_9": "z3",
                "uVar1": "temp1",
                "uVar10": "a_times_c",
                "uVar11": "temp10",
                "uVar12": "temp11",
                "uVar13": "temp12",
                "uVar14": "temp13",
                "uVar15": "temp14",
                "uVar16": "temp15",
                "uVar17": "temp16",
                "uVar18": "temp17",
                "uVar2": "temp2",
                "uVar20": "temp17",
                "uVar21": "temp20",
                "uVar22": "temp21",
                "uVar23": "temp22",
                "uVar24": "temp23",
                "uVar25": "temp22",
                "uVar27": "temp26",
                "uVar28": "temp27",
                "uVar29": "temp17",
                "uVar31": "temp1",
                "uVar32": "temp2",
                "uVar4": "temp3",
                "uVar5": "temp4",
                "uVar6": "temp5",
                "uVar7": "temp6",
                "uVar9": "temp8"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003eb0": {
            "additional_data": {
                "CONCAT44": {
                    "combine": 1,
                    "combine_integers": 1,
                    "combine_values": 4,
                    "combine_with_one": 1,
                    "concatenate": 2,
                    "concatenate_44": 1,
                    "concatenate_long_long": 1,
                    "concatenate_param": 1,
                    "concatenate_to64_bits": 1,
                    "concatenate_to_64_bits": 1,
                    "concatenate_to_long_long": 1,
                    "concatenate_values": 3,
                    "join_values": 1
                },
                "DAT_20000280": {
                    "flag": 1,
                    "some_flag": 1
                },
                "FUN_08003eb0": {
                    "bitwise_shift": 1,
                    "convert_to64_bit": 2,
                    "convert_to_long_long": 2,
                    "convert_to_unsigned_long_long": 2,
                    "expand_param_to64_bits": 1,
                    "extend_param": 1,
                    "modify_param": 1,
                    "perform_left_shift": 1,
                    "shift_and_concatenate": 1,
                    "shift_left_64": 2,
                    "shift_left_long_long": 1,
                    "shift_left_long_to_high_bits": 1,
                    "shift_left_or_interrupt": 2,
                    "shift_left_or_software_interrupt": 1,
                    "shift_left_param_64": 1,
                    "shift_left_param_to_high_bits": 1,
                    "shift_left_with_condition": 1,
                    "shift_param_into_longlong": 1,
                    "shift_param_left": 1,
                    "shift_param_to_high_bits": 1,
                    "shift_parameter": 1,
                    "shift_parameter_left": 3,
                    "shift_uint64_left": 1,
                    "shift_value_to_high_bits": 1
                },
                "ULONG_LONG_CONSTANT": {
                    "shift_amount": 1
                },
                "param_1": {
                    "input": 5,
                    "input_number": 1,
                    "input_param": 3,
                    "input_value": 20,
                    "shifted_input": 1,
                    "value": 1
                },
                "param_2": {
                    "unused_parameter": 1
                },
                "param_n": {
                    "unused_parameter": 1
                },
                "return": {
                    "output": 1
                },
                "return_value": {
                    "result": 1
                },
                "software_interrupt": {
                    "call_software_interrupt": 1,
                    "execute_interrupt": 1,
                    "interrupt": 3,
                    "invoke_interrupt": 1,
                    "perform_system_call": 1,
                    "trigger_exception": 1,
                    "trigger_hardware_interrupt": 1,
                    "trigger_interrupt": 2,
                    "trigger_software_interrupt": 4
                },
                "ulonglong": {
                    "unsigned_long_long": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_080041ae"
            ],
            "code": "\nlonglong shift_value_to_high_bits_08003eb0(uint input_value)\n\n{\n  if (DAT_20000280 == 0) {\n    trigger_software_interrupt(0x3f);\n    output combine_values(input_value,1);\n  }\n  output (unsigned_long_long)input_value << 0x20;\n}\n\n",
            "current_name": "shift_value_to_high_bits_08003eb0",
            "entrypoint": "0x08003eb0",
            "imported": false,
            "improved": true,
            "renaming": {
                "CONCAT44": "combine_values",
                "FUN_08003eb0": "shift_value_to_high_bits_08003eb0",
                "param_1": "input_value",
                "return": "output",
                "software_interrupt": "trigger_software_interrupt",
                "ulonglong": "unsigned_long_long"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003ec8": {
            "additional_data": {
                "0x802": {
                    "offset": 1
                },
                "0x804": {
                    "counter_address": 1
                },
                "FUN_08003ec8": {
                    "increment_and_store": 15,
                    "increment_and_store_value": 7,
                    "increment_and_write": 2,
                    "increment_counter": 2,
                    "increment_counter_and_store_value": 1,
                    "increment_counter_and_update_data": 1,
                    "update_and_store_value": 1,
                    "update_data": 1,
                    "update_short_value": 1
                },
                "param_1": {
                    "array_base_address": 2,
                    "array_ptr": 1,
                    "base_address": 19,
                    "buffer": 1,
                    "counter": 1,
                    "counter_address": 1,
                    "data": 1,
                    "data_address": 3,
                    "memory_address": 2
                },
                "param_2": {
                    "data": 4,
                    "new_data": 1,
                    "new_value": 4,
                    "value": 18,
                    "value_to_store": 4
                },
                "short": {
                    "counter_value": 1,
                    "short_value": 4
                },
                "short_1": {
                    "counter": 1
                },
                "undefined": {
                    "undefined_value": 3
                },
                "undefined4": {
                    "return_value": 2
                },
                "ushort": {
                    "index": 1,
                    "ushort_data": 1
                },
                "ushortPtr_1": {
                    "counter": 1
                },
                "ushortPtr_2": {
                    "index": 1
                },
                "ushort_1": {
                    "index": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004c30"
            ],
            "code": "\nreturn_value increment_counter_and_store_value_08003ec8(int base_address,undefined_value value)\n\n{\n  *(short_value *)(base_address + 0x804) = *(short_value *)(base_address + 0x804) + 1;\n  *(undefined_value *)(base_address + (uint)*(ushort_data *)(base_address + 0x802)) = value;\n  *(ushort_data *)(base_address + 0x802) = *(short_value *)(base_address + 0x802) + 1U & 0x7ff;\n  return 1;\n}\n\n",
            "current_name": "increment_counter_and_store_value_08003ec8",
            "entrypoint": "0x08003ec8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003ec8": "increment_counter_and_store_value_08003ec8",
                "param_1": "base_address",
                "param_2": "value",
                "short": "short_value",
                "undefined": "undefined_value",
                "undefined4": "return_value",
                "ushort": "ushort_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003f3c": {
            "additional_data": {
                "0x2000": {
                    "pin_3": 1,
                    "pin_mask_3": 1
                },
                "0x4000": {
                    "pin_2": 1,
                    "pin_mask_2": 1
                },
                "0x40011000": {
                    "gpio_port": 1,
                    "gpio_port_address": 1
                },
                "0x8000": {
                    "pin_1": 1,
                    "pin_mask_1": 1
                },
                "FUN_08003f3c": {
                    "set_gpio_flags": 2,
                    "set_gpio_function": 1,
                    "set_gpio_pin": 1,
                    "set_gpio_pin_state": 1,
                    "set_gpio_pins": 14,
                    "set_gpio_pins_based_on_params": 1,
                    "set_gpio_state": 1,
                    "set_gpio_states": 1,
                    "write_gpio_pins": 1,
                    "write_gpio_status": 1,
                    "write_gpio_values": 1,
                    "write_pin_function": 1,
                    "write_pin_states": 1,
                    "write_pin_status": 2,
                    "write_pins": 1,
                    "write_pins_based_on_params": 1
                },
                "HAL_GPIO_WritePin": {
                    "set_gpio_pin": 1,
                    "write_pin": 1
                },
                "param_1": {
                    "flag1": 2,
                    "is_param1_zero": 4,
                    "is_pin_1_high": 1,
                    "pin1_state": 4,
                    "pin1_status": 3,
                    "pin1_value": 2,
                    "pin_1_state": 3,
                    "pin_1_value": 4,
                    "pin_state1": 1,
                    "pin_value1": 2,
                    "pin_value_1": 1,
                    "status_pin1": 1,
                    "value1": 1,
                    "value_1": 2
                },
                "param_2": {
                    "flag2": 2,
                    "is_param2_zero": 4,
                    "is_pin_2_high": 1,
                    "pin2_state": 4,
                    "pin2_status": 3,
                    "pin2_value": 2,
                    "pin_2_state": 3,
                    "pin_2_value": 4,
                    "pin_state2": 1,
                    "pin_value2": 2,
                    "pin_value_2": 1,
                    "status_pin2": 1,
                    "value2": 1,
                    "value_2": 2
                },
                "param_3": {
                    "flag3": 2,
                    "is_param3_zero": 4,
                    "is_pin_3_high": 1,
                    "pin3_state": 4,
                    "pin3_status": 3,
                    "pin3_value": 2,
                    "pin_3_state": 3,
                    "pin_3_value": 4,
                    "pin_state3": 1,
                    "pin_value3": 2,
                    "pin_value_3": 1,
                    "status_pin3": 1,
                    "value3": 1,
                    "value_3": 2
                }
            },
            "called": [
                "FUN_08001424"
            ],
            "calling": [
                "FUN_08004a84",
                "FUN_08004028"
            ],
            "code": "\nvoid set_gpio_pins_based_on_params_08003f3c(int pin_1_value,int pin_2_value,int is_param3_zero)\n\n{\n  set_gpio_pin(0x40011000,0x8000,pin_1_value == 0);\n  set_gpio_pin(0x40011000,0x4000,pin_2_value == 0);\n  set_gpio_pin(0x40011000,0x2000,is_param3_zero == 0);\n  return;\n}\n\n",
            "current_name": "set_gpio_pins_based_on_params_08003f3c",
            "entrypoint": "0x08003f3c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003f3c": "set_gpio_pins_based_on_params_08003f3c",
                "HAL_GPIO_WritePin": "set_gpio_pin",
                "param_1": "pin_1_value",
                "param_2": "pin_2_value",
                "param_3": "is_param3_zero"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003fc4": {
            "additional_data": {
                "0x40": {
                    "offset": 1
                },
                "DAT_200014c8": {
                    "base_address": 6,
                    "data": 2,
                    "data_address": 1,
                    "data_block": 4,
                    "data_buffer": 2,
                    "global_data": 3,
                    "handle_memory": 1,
                    "memory_address": 1,
                    "memory_base_address": 1
                },
                "FUN_08003fc4": {
                    "save_parameter_to_memory": 1,
                    "set_function_parameter": 1,
                    "set_global_parameter": 2,
                    "set_global_value": 2,
                    "set_handle_parameter": 1,
                    "set_param": 2,
                    "set_param_at_offset": 2,
                    "set_param_in_memory": 1,
                    "set_param_value": 9,
                    "set_parameter": 4,
                    "set_parameter_value": 1,
                    "store_parameter_at_offset": 1,
                    "store_parameter_in_memory": 1,
                    "update_parameter": 2,
                    "update_parameter_value": 1
                },
                "PTR_": {
                    "unchanged": 1
                },
                "PTR_X": {
                    "x": 1
                },
                "new_variable_name_1": {
                    "value_address": 1
                },
                "param_1": {
                    "handle": 1,
                    "new_param": 1,
                    "new_parameter": 1,
                    "new_value": 4,
                    "param": 1,
                    "parameter": 3,
                    "value": 20
                }
            },
            "called": [],
            "calling": [
                "FUN_080041c4",
                "FUN_0800426c"
            ],
            "code": "\nvoid set_param_value_08003fc4(undefined4 value)\n\n{\n  *(undefined4 *)(DAT_200014c8 + 0x40) = value;\n  return;\n}\n\n",
            "current_name": "set_param_value_08003fc4",
            "entrypoint": "0x08003fc4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003fc4": "set_param_value_08003fc4",
                "param_1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003fd0": {
            "additional_data": {
                "0x3c": {
                    "offset": 1
                },
                "DAT_200014c8": {
                    "base_address": 1,
                    "data_block": 1,
                    "data_buffer": 1,
                    "data_memory": 1,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "global_data": 2,
                    "memory_address": 3,
                    "memory_block": 3,
                    "memory_location": 2,
                    "memory_offset": 1,
                    "param_storage": 1,
                    "param_value": 1,
                    "ptr_data": 1,
                    "user_data": 1
                },
                "FUN_08003fd0": {
                    "set_function_parameter": 2,
                    "set_global_parameter": 2,
                    "set_param": 4,
                    "set_param_in_memory": 2,
                    "set_param_value": 14,
                    "set_parameter": 1,
                    "set_pointer_parameter": 1,
                    "set_pointer_value": 1,
                    "set_user_data": 1,
                    "store_parameter_in_memory": 2,
                    "store_parameter_to_memory": 1
                },
                "param_1": {
                    "new_value": 5,
                    "parameter": 2,
                    "value": 24
                }
            },
            "called": [],
            "calling": [
                "FUN_080041c4",
                "FUN_0800426c"
            ],
            "code": "\nvoid set_param_value_08003fd0(undefined4 value)\n\n{\n  *(undefined4 *)(DAT_200014c8 + 0x3c) = value;\n  return;\n}\n\n",
            "current_name": "set_param_value_08003fd0",
            "entrypoint": "0x08003fd0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003fd0": "set_param_value_08003fd0",
                "param_1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003fdc": {
            "additional_data": {
                "0x38": {
                    "offset": 1
                },
                "DAT_200015f8": {
                    "data": 2,
                    "data_buffer": 2,
                    "data_structure": 1,
                    "global_data": 1,
                    "memory_address": 3,
                    "memory_base_address": 1,
                    "memory_block": 1,
                    "memory_location": 1
                },
                "FUN_08003fdc": {
                    "set_global_value": 1,
                    "set_memory_location": 1,
                    "set_memory_value": 1,
                    "set_param": 6,
                    "set_param_value": 13,
                    "set_parameter": 1,
                    "set_parameter_in_data_structure": 1,
                    "set_parameter_in_memory": 1,
                    "set_parameter_value": 1,
                    "set_stored_parameter": 1,
                    "store_parameter": 1,
                    "store_parameter_in_memory": 3
                },
                "param1Pointer": {
                    "value_pointer": 1
                },
                "param_1": {
                    "new_param": 1,
                    "new_value": 5,
                    "parameter": 3,
                    "parameter_value": 2,
                    "value": 20
                }
            },
            "called": [],
            "calling": [
                "FUN_080041c4",
                "FUN_0800426c"
            ],
            "code": "\nvoid set_param_value_08003fdc(undefined4 value)\n\n{\n  *(undefined4 *)(DAT_200015f8 + 0x38) = value;\n  return;\n}\n\n",
            "current_name": "set_param_value_08003fdc",
            "entrypoint": "0x08003fdc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003fdc": "set_param_value_08003fdc",
                "param_1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003fe8": {
            "additional_data": {
                "0x3c": {
                    "offset": 1
                },
                "DAT_20001540": {
                    "data_1": 1,
                    "data_array": 1,
                    "data_block": 3,
                    "data_buffer": 3,
                    "data_pointer": 1,
                    "data_structure": 1,
                    "memory_block": 2,
                    "parameter_list": 3
                },
                "FUN_08003fe8": {
                    "save_param_to_memory": 1,
                    "set_config_parameter_value": 1,
                    "set_function_parameter": 1,
                    "set_global_value": 1,
                    "set_param": 3,
                    "set_param_one": 1,
                    "set_param_to_global_variable": 1,
                    "set_param_value": 10,
                    "set_parameter_value": 7,
                    "set_pointer_in_data": 1,
                    "store_parameter_in_memory": 1,
                    "store_parameter_value": 2,
                    "update_parameter_in_memory": 1
                },
                "PTR_08003fe8": {
                    "function_pointer": 1,
                    "pointer_to_function": 1
                },
                "param_1": {
                    "new_param": 1,
                    "new_value": 8,
                    "param": 1,
                    "parameter": 1,
                    "parameter_value": 1,
                    "value": 19
                }
            },
            "called": [],
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "code": "\nvoid set_param_value_08003fe8(undefined4 value)\n\n{\n  *(undefined4 *)(DAT_20001540 + 0x3c) = value;\n  return;\n}\n\n",
            "current_name": "set_param_value_08003fe8",
            "entrypoint": "0x08003fe8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003fe8": "set_param_value_08003fe8",
                "param_1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003ff4": {
            "additional_data": {
                "DAT_200014c8": {
                    "pwm_channel3": 2,
                    "pwm_timer_3": 1,
                    "timer3": 7,
                    "timer_3": 1,
                    "timer_channel3": 1
                },
                "DAT_20001540": {
                    "pwm_channel2": 2,
                    "pwm_timer_2": 1,
                    "timer2": 7,
                    "timer_2": 1,
                    "timer_channel2": 1
                },
                "DAT_200015f8": {
                    "pwm_channel1": 2,
                    "pwm_timer_1": 1,
                    "timer1": 7,
                    "timer_1": 1,
                    "timer_channel1": 1
                },
                "FUN_08002538": {
                    "assign_pointer": 1,
                    "configure_pwm_channel": 1,
                    "extract_param": 1,
                    "find_param": 1,
                    "get_pwm_control": 1,
                    "get_pwm_parameters": 1,
                    "get_timer": 1,
                    "initialize_pwm": 1,
                    "initialize_pwm_timer": 1,
                    "param_processing": 1,
                    "process_data": 2,
                    "process_input_parameters": 1,
                    "process_parameter": 1,
                    "process_parameters": 1,
                    "process_pwm_parameters": 1,
                    "set_pwm_duty_cycle": 1,
                    "set_pwm_frequency": 2,
                    "update_tim_configuration": 1
                },
                "FUN_08003ff4": {
                    "initialize_pwm": 6,
                    "initialize_pwm_modules": 1,
                    "start_pwm": 7,
                    "start_pwm_channels": 5,
                    "start_pwm_timers": 11
                },
                "F_08003ff4": {
                    "initialize_pwm_timers": 1
                },
                "HAL_TIM_PWM_Start": {
                    "hal_start_pwm": 1,
                    "start_pwm": 4,
                    "start_pwm_timer": 5,
                    "start_tim_pwm": 1
                },
                "param_1": {
                    "channel_ptr_list": 1,
                    "data_array": 1,
                    "data_param": 1,
                    "input_data": 3,
                    "input_parameters": 1,
                    "input_pointer": 1,
                    "p_param": 2,
                    "p_param1": 1,
                    "p_parameter": 1,
                    "p_parameters": 1,
                    "p_params": 1,
                    "p_pwm_param": 1,
                    "p_timer_array": 1,
                    "param": 3,
                    "param_array": 1,
                    "pointer_array": 1,
                    "pwm_array": 1,
                    "pwm_timers": 1,
                    "timer_array": 2,
                    "timer_configurations": 1,
                    "timer_data": 1,
                    "timer_pointers": 1,
                    "timers": 1
                },
                "param_2": {
                    "additional_parameter": 1,
                    "arg": 1,
                    "config_count": 1,
                    "control_value": 1,
                    "flag": 1,
                    "frequency": 2,
                    "p_value": 1,
                    "param": 4,
                    "param2": 2,
                    "param_2": 1,
                    "param_code": 1,
                    "param_value": 6,
                    "parameter_value": 1,
                    "status": 1,
                    "timer_count": 1,
                    "value": 4
                }
            },
            "called": [
                "FUN_08002538"
            ],
            "calling": [
                "FUN_08004028"
            ],
            "code": "\nvoid start_pwm_timers_08003ff4(void)\n\n{\n  start_pwm_timer(&DAT_200015f8,4);\n  start_pwm_timer(&DAT_20001540,8);\n  start_pwm_timer(&DAT_200014c8,8);\n  start_pwm_timer(&DAT_200014c8,0xc);\n  return;\n}\n\n",
            "current_name": "start_pwm_timers_08003ff4",
            "entrypoint": "0x08003ff4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003ff4": "start_pwm_timers_08003ff4",
                "HAL_TIM_PWM_Start": "start_pwm_timer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004028": {
            "additional_data": {
                "FUN_08004028": {
                    "blink_le_ds": 2,
                    "blink_led_sequence": 1,
                    "init_led_sequence": 1,
                    "initialize_and_blink_le_ds": 5,
                    "initialize_and_blink_led": 1,
                    "initialize_le_ds": 11,
                    "initialize_le_ds_and_blink": 1,
                    "initialize_le_ds_and_toggle": 1,
                    "initialize_led": 1,
                    "initialize_led_sequence": 4,
                    "initialize_leds": 1,
                    "perform_led_animation": 1,
                    "toggle_led_sequence": 1
                },
                "PWM_Init": {
                    "initialize_pwm": 6
                },
                "Peripherals_Init": {
                    "initialize_peripherals": 6
                },
                "delay_ms": {
                    "delay_milliseconds": 7,
                    "pause_milliseconds": 1
                },
                "iVar1": {
                    "count": 3,
                    "counter": 2,
                    "iteration_count": 7,
                    "loop_count": 8,
                    "loop_counter": 5,
                    "num_repeats": 1,
                    "remaining_iterations": 1,
                    "sequence_count": 1
                },
                "toggleLED": {
                    "blink_led": 2,
                    "change_led_state": 1,
                    "toggle_le_ds": 1,
                    "toggle_led": 2,
                    "toggle_led_state": 2
                }
            },
            "called": [
                "FUN_0800458c",
                "FUN_08003ff4",
                "FUN_08004f64",
                "FUN_08003f3c"
            ],
            "calling": [
                "FUN_08004194"
            ],
            "code": "\nvoid initialize_le_ds_and_blink_08004028(void)\n\n{\n  int loop_count;\n  \n  initialize_peripherals();\n  initialize_pwm();\n  loop_count = 3;\n  do {\n    blink_led(1,0);\n    delay_milliseconds(100);\n    blink_led(0,1);\n    delay_milliseconds(100);\n    blink_led(0,0,1);\n    delay_milliseconds(100);\n    loop_count = loop_count + -1;\n  } while (loop_count != 0);\n  blink_led(1,1);\n  return;\n}\n\n",
            "current_name": "initialize_le_ds_and_blink_08004028",
            "entrypoint": "0x08004028",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004028": "initialize_le_ds_and_blink_08004028",
                "PWM_Init": "initialize_pwm",
                "Peripherals_Init": "initialize_peripherals",
                "delay_ms": "delay_milliseconds",
                "iVar1": "loop_count",
                "toggleLED": "blink_led"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800403c": {
            "additional_data": {
                "FUN_0800403c": {
                    "write_data": 2,
                    "write_data_and_delay": 4,
                    "write_data_to_i2_c": 11,
                    "write_data_to_i2_c_device": 1,
                    "write_data_to_i2c": 1,
                    "write_data_with_delay": 4,
                    "write_i2_c_data": 1,
                    "write_i2_c_memory": 1,
                    "write_i2_c_with_delay": 1,
                    "write_i2c_data": 2,
                    "write_to_i2c": 2
                },
                "FrequentlyUsedFunction": {
                    "send_i2_c_data": 1
                },
                "HAL_I2C_Mem_Write": {
                    "i2c_mem_write": 1,
                    "write_data": 1,
                    "write_data_to_i2_c": 1,
                    "write_to_i2_c": 3,
                    "write_to_i2_c_memory": 1
                },
                "_Error_Handler": {
                    "handle_error": 7
                },
                "delay_ms": {
                    "delay": 1,
                    "delay_in_milliseconds": 1,
                    "delay_milliseconds": 5
                },
                "iVar1": {
                    "error_code": 1,
                    "result": 6,
                    "status": 1,
                    "write_result": 10,
                    "write_status": 4
                },
                "local_14": {
                    "buffer": 1,
                    "data_buffer": 4,
                    "data_to_write": 2,
                    "local_buffer": 1,
                    "write_buffer": 17,
                    "write_data": 3,
                    "write_data_buffer": 1
                },
                "param_1": {
                    "address": 1,
                    "device_address": 29,
                    "i2c_device_address": 1
                },
                "param_2": {
                    "mem_address": 3,
                    "memory_address": 8,
                    "register": 1,
                    "register_address": 19
                },
                "param_3": {
                    "data": 27,
                    "data_byte": 1,
                    "value": 1,
                    "write_data": 2
                },
                "param_4": {
                    "delay_enabled": 7,
                    "delay_flag": 23,
                    "delay_required": 1
                }
            },
            "called": [
                "FUN_08001828",
                "FUN_08004f64",
                "FUN_08004490"
            ],
            "calling": [
                "FUN_0800411c",
                "FUN_08002ad0",
                "FUN_08002cb0",
                "FUN_08003298"
            ],
            "code": "\nvoid write_data_to_i2_c_device_0800403c(undefined4 device_address,undefined4 register_address,undefined data,int delay_flag)\n\n{\n  int write_result;\n  undefined write_buffer [8];\n  \n  write_buffer[0] = data;\n  write_result = write_to_i2_c(&DAT_20001504,device_address,register_address,1,write_buffer,1,200);\n  if (write_result != 0) {\n    handle_error(\"../Src/i2c.c\",0x1b);\n  }\n  if (delay_flag != 0) {\n    delay_milliseconds(0x32);\n  }\n  return;\n}\n\n",
            "current_name": "write_data_to_i2_c_device_0800403c",
            "entrypoint": "0x0800403c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800403c": "write_data_to_i2_c_device_0800403c",
                "HAL_I2C_Mem_Write": "write_to_i2_c",
                "_Error_Handler": "handle_error",
                "delay_ms": "delay_milliseconds",
                "iVar1": "write_result",
                "local_14": "write_buffer",
                "param_1": "device_address",
                "param_2": "register_address",
                "param_3": "data",
                "param_4": "delay_flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800407c": {
            "additional_data": {
                "FUN_0800407c": {
                    "read_data_from_i2_c": 1,
                    "read_from_i2_c": 2,
                    "read_i2_c_data": 4,
                    "read_i2_c_mem": 4,
                    "read_i2_c_memory": 7,
                    "read_i2c_byte": 2,
                    "read_i2c_data": 7,
                    "read_i2c_memory": 3,
                    "read_memory_value": 1
                },
                "iVar1": {
                    "read_result": 5,
                    "read_status": 1,
                    "result": 1,
                    "status": 1
                },
                "local_14": {
                    "buffer": 1,
                    "data": 8,
                    "data_buffer": 9,
                    "data_read": 1,
                    "read_buffer": 4,
                    "read_data": 6,
                    "read_data_buffer": 1,
                    "read_value": 1
                },
                "param_1": {
                    "device_addr": 1,
                    "device_address": 30
                },
                "param_2": {
                    "mem_addr": 1,
                    "mem_address": 5,
                    "memory_address": 15,
                    "register_address": 10
                },
                "param_3": {
                    "error_handle_param1": 1,
                    "error_handler1": 1,
                    "error_handler_param1": 9,
                    "error_handler_param_1": 12,
                    "error_handler_parameter_1": 1,
                    "error_param1": 1,
                    "error_param_1": 4,
                    "handler_param_1": 1,
                    "param_3": 1
                },
                "param_4": {
                    "error_handle_param2": 1,
                    "error_handler2": 1,
                    "error_handler_param2": 9,
                    "error_handler_param_2": 12,
                    "error_handler_parameter_2": 1,
                    "error_param2": 1,
                    "error_param_2": 4,
                    "handler_param_2": 1,
                    "param_4": 1
                }
            },
            "called": [
                "FUN_08001938",
                "FUN_08004490"
            ],
            "calling": [
                "FUN_08002ad0",
                "FUN_08002cb0",
                "FUN_080040e8",
                "FUN_08002d88"
            ],
            "code": "\nundefined read_i2_c_mem_0800407c(undefined4 device_address,undefined4 memory_address,undefined4 error_handler_param_1,undefined4 error_handler_param_2)\n\n{\n  int read_result;\n  undefined data_buffer [8];\n  \n  data_buffer[0] = 0;\n  read_result = HAL_I2C_Mem_Read(&DAT_20001504,device_address,memory_address,1,data_buffer,1,200);\n  if (read_result != 0) {\n    _Error_Handler(error_handler_param_1,error_handler_param_2);\n  }\n  return data_buffer[0];\n}\n\n",
            "current_name": "read_i2_c_mem_0800407c",
            "entrypoint": "0x0800407c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800407c": "read_i2_c_mem_0800407c",
                "iVar1": "read_result",
                "local_14": "data_buffer",
                "param_1": "device_address",
                "param_2": "memory_address",
                "param_3": "error_handler_param_1",
                "param_4": "error_handler_param_2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080040b8": {
            "additional_data": {
                "FUN_080040b8": {
                    "perform_i2_c_read_operation": 1,
                    "read_and_handle_i2_c_data": 2,
                    "read_and_handle_i2_c_memory": 1,
                    "read_data_from_i2_c": 5,
                    "read_data_from_i2_c_memory": 2,
                    "read_from_i2_c": 1,
                    "read_from_i2_c_memory": 1,
                    "read_i2_c_data": 4,
                    "read_i2_c_memory": 11,
                    "read_i2c_mem_and_handle_error": 1,
                    "read_sensor_data": 2
                },
                "HAL_I2C_Mem_Read": {
                    "read_i2_c_mem": 1,
                    "read_i2_c_memory": 1
                },
                "_Error_Handler": {
                    "handle_error": 2
                },
                "iVar1": {
                    "operation_status": 1,
                    "read_result": 14,
                    "read_status": 6,
                    "result": 2
                },
                "param_1": {
                    "device_address": 28,
                    "i2c_address": 1,
                    "memory_address": 1,
                    "sensor_address": 1
                },
                "param_2": {
                    "data_buffer": 1,
                    "data_register": 1,
                    "mem_address": 5,
                    "memory_address": 16,
                    "register_address": 8
                },
                "param_3": {
                    "buffer": 2,
                    "data": 6,
                    "data_buffer": 6,
                    "data_buffer_size": 1,
                    "data_length": 1,
                    "data_size": 1,
                    "mem_address_size": 4,
                    "memory_address_size": 4,
                    "memory_size": 4,
                    "register_size": 2
                },
                "param_4": {
                    "buffer": 1,
                    "buffer_length": 1,
                    "buffer_size": 3,
                    "data": 2,
                    "data_buffer": 11,
                    "data_length": 1,
                    "data_size": 8,
                    "p_data": 2,
                    "register_address": 1,
                    "size": 1
                },
                "param_5": {
                    "error_handler": 2,
                    "error_handler1": 4,
                    "error_handler_callback": 1,
                    "error_handler_func": 2,
                    "error_handler_func1": 1,
                    "error_handler_function": 2,
                    "error_handler_param1": 18,
                    "error_param_1": 1
                },
                "param_6": {
                    "error_handler2": 4,
                    "error_handler_arg": 1,
                    "error_handler_data": 2,
                    "error_handler_func2": 1,
                    "error_handler_param2": 18,
                    "error_handler_parameter": 2,
                    "error_param": 1,
                    "error_param_2": 1,
                    "error_parameter": 1
                }
            },
            "called": [
                "FUN_08001938",
                "FUN_08004490"
            ],
            "calling": [
                "FUN_08003034"
            ],
            "code": "\nvoid read_data_from_i2_c_memory_080040b8(undefined4 device_address,undefined4 memory_address,undefined4 data_buffer,undefined4 data_buffer,\n                 undefined4 error_handler_param1,undefined4 error_handler_param2)\n\n{\n  int read_result;\n  \n  read_result = read_i2_c_mem(&DAT_20001504,device_address,memory_address,1,data_buffer,data_buffer,200,data_buffer);\n  if (read_result != 0) {\n    handle_error(error_handler_param1,error_handler_param2);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "read_data_from_i2_c_memory_080040b8",
            "entrypoint": "0x080040b8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080040b8": "read_data_from_i2_c_memory_080040b8",
                "HAL_I2C_Mem_Read": "read_i2_c_mem",
                "_Error_Handler": "handle_error",
                "iVar1": "read_result",
                "param_1": "device_address",
                "param_2": "memory_address",
                "param_3": "data_buffer",
                "param_4": "data_buffer",
                "param_5": "error_handler_param1",
                "param_6": "error_handler_param2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080040e8": {
            "additional_data": {
                "FUN_080040e8": {
                    "copy_from_i2_c": 1,
                    "copy_i2_c_data": 2,
                    "extract_bytes": 1,
                    "extract_data": 1,
                    "i2c_read_and_save_data": 1,
                    "read_and_copy_bytes": 1,
                    "read_and_copy_bytes_from_i2_c": 1,
                    "read_and_store_bytes": 7,
                    "read_and_store_data": 3,
                    "read_and_store_i2_c_bytes": 6,
                    "read_and_store_i2_c_data": 2,
                    "read_and_store_i2c_bytes": 1,
                    "read_bytes_from_i2c": 1,
                    "read_data_from_i2_c": 1,
                    "read_i2_c_data": 2
                },
                "iVar2": {
                    "byte_index": 2,
                    "i": 13,
                    "index": 16
                },
                "iVar4": {
                    "file_descriptor": 2,
                    "file_index": 1,
                    "file_line": 1,
                    "file_line_number": 2,
                    "i": 1,
                    "i2c_line_number": 1,
                    "index": 3,
                    "line": 1,
                    "line_no": 1,
                    "line_number": 12,
                    "line_size": 1,
                    "offset": 1,
                    "some_variable": 1,
                    "source_file_line": 2,
                    "source_index": 1
                },
                "param_1": {
                    "dev_address": 1,
                    "device": 5,
                    "device_address": 17,
                    "device_handle": 1,
                    "i2c_address": 1,
                    "i2c_controller": 1,
                    "i2c_device": 1,
                    "i2c_port": 3,
                    "port": 1
                },
                "param_2": {
                    "address": 1,
                    "base": 1,
                    "base_address": 12,
                    "data_address": 1,
                    "offset": 1,
                    "register_address": 10,
                    "start_address": 5
                },
                "param_3": {
                    "buffer": 3,
                    "buffer_address": 4,
                    "buffer_pointer": 1,
                    "buffer_size": 1,
                    "data_address": 4,
                    "data_buffer": 7,
                    "data_ptr": 1,
                    "dest": 1,
                    "dest_address": 1,
                    "destination": 1,
                    "destination_array": 1,
                    "destination_buffer": 2,
                    "output_address": 1,
                    "output_buffer": 2,
                    "target_address": 1
                },
                "param_4": {
                    "buffer_size": 3,
                    "byte_count": 2,
                    "count": 1,
                    "data_length": 5,
                    "data_size": 2,
                    "length": 4,
                    "num_bytes": 12,
                    "num_bytes_to_read": 1,
                    "size": 1
                },
                "puVar3": {
                    "buffer": 2,
                    "buffer_ptr": 3,
                    "byte_storage": 1,
                    "current_byte": 1,
                    "current_data_address": 1,
                    "current_data_ptr": 1,
                    "data_buffer": 1,
                    "data_pointer": 2,
                    "data_ptr": 3,
                    "dest": 2,
                    "dest_pointer": 1,
                    "dest_ptr": 5,
                    "next_byte_ptr": 1,
                    "output": 1,
                    "output_buffer_ptr": 1,
                    "output_pointer": 1,
                    "p_buffer": 2,
                    "ptr": 2
                },
                "uVar1": {
                    "byte": 6,
                    "byte_data": 2,
                    "byte_read": 5,
                    "byte_value": 3,
                    "data": 2,
                    "data_byte": 3,
                    "read_byte": 7,
                    "read_byte_result": 1
                }
            },
            "called": [
                "FUN_0800407c"
            ],
            "calling": [
                "FUN_08002cb0",
                "FUN_08002bf0",
                "FUN_08003298",
                "FUN_08002b48",
                "FUN_08002d88"
            ],
            "code": "\nvoid read_and_store_i2_c_bytes_080040e8(undefined4 device_address,int base_address,int data_buffer,int num_bytes)\n\n{\n  undefined read_byte;\n  int index;\n  undefined *dest_ptr;\n  int line_number;\n  \n  dest_ptr = (undefined *)(data_buffer + -1);\n  line_number = num_bytes;\n  for (index = 0; index < num_bytes; index = index + 1) {\n    read_byte = I2C_ReadByte(device_address,base_address + index & 0xffff,\"../Src/i2c.c\",0x4c,line_number);\n    dest_ptr = dest_ptr + 1;\n    *dest_ptr = read_byte;\n  }\n  return;\n}\n\n",
            "current_name": "read_and_store_i2_c_bytes_080040e8",
            "entrypoint": "0x080040e8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080040e8": "read_and_store_i2_c_bytes_080040e8",
                "iVar2": "index",
                "iVar4": "line_number",
                "param_1": "device_address",
                "param_2": "base_address",
                "param_3": "data_buffer",
                "param_4": "num_bytes",
                "puVar3": "dest_ptr",
                "uVar1": "read_byte"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800411c": {
            "additional_data": {
                "AHRS_ComputeAngles": {
                    "calculate_ahrs_angles": 1,
                    "compute_angles": 1
                },
                "DAT_20000038": {
                    "device_address": 1,
                    "i2_c_address": 1,
                    "var17": 1
                },
                "DAT_2000025e": {
                    "constant_e": 1,
                    "var6": 1,
                    "var7": 1
                },
                "DAT_20000260": {
                    "constant_d": 1,
                    "var5": 1,
                    "var6": 1
                },
                "DAT_20000262": {
                    "constant_f": 1,
                    "var5": 1,
                    "var7": 1
                },
                "DAT_20000264": {
                    "constant_c": 1,
                    "var4": 2
                },
                "DAT_20000266": {
                    "constant_a": 1,
                    "var2": 2
                },
                "DAT_20000268": {
                    "constant_b": 1,
                    "var3": 2
                },
                "DAT_2000026c": {
                    "var8": 2
                },
                "DAT_20000270": {
                    "adc_value": 1,
                    "var1": 2
                },
                "DAT_20000274": {
                    "flag2": 2,
                    "pid_update_flag": 1
                },
                "DAT_20000275": {
                    "ahrs_compute_flag": 1,
                    "flag1": 2
                },
                "DAT_20000278": {
                    "data_read_last_time": 1,
                    "var16": 1
                },
                "DAT_2000027c": {
                    "data_update_last_time": 1,
                    "last_msp_send_time": 1,
                    "var15": 1
                },
                "DAT_2000028c": {
                    "last_ahrs_compute_time": 1,
                    "last_update1": 1,
                    "prev_time_ahrs": 1
                },
                "DAT_20000290": {
                    "last_msp_update_time": 1,
                    "last_update3": 1,
                    "prev_time_msp": 1
                },
                "DAT_20000294": {
                    "last_pid_update_time": 1,
                    "last_update2": 1,
                    "prev_time_pid": 1
                },
                "DAT_200002fc": {
                    "var11": 1,
                    "var13": 1
                },
                "DAT_2000034c": {
                    "var12": 1
                },
                "DAT_20000350": {
                    "var11": 1
                },
                "DAT_20000354": {
                    "var9": 2
                },
                "DAT_20000358": {
                    "var10": 2
                },
                "DAT_200014ab": {
                    "new_variable": 1,
                    "var12": 1,
                    "var14": 1
                },
                "FUN_08000168": {
                    "calculate1": 1,
                    "calculate_angle": 5,
                    "calculate_angle_error": 1,
                    "calculate_angles": 1,
                    "calculate_desired_altitude": 1,
                    "calculate_desired_value": 1,
                    "calculate_ff_term": 1,
                    "calculate_first_term": 1,
                    "calculate_multiplier": 1,
                    "calculate_pid": 1,
                    "calculate_pid_constants": 1,
                    "calculate_power": 1,
                    "calculate_proportional_term": 1,
                    "calculate_square_product": 1,
                    "calculate_value": 3,
                    "calculate_value1": 1,
                    "calculate_variance": 1,
                    "compute1": 1,
                    "ms5611_calculate": 1,
                    "msp_send_motor": 1,
                    "multiply_and_shift": 1,
                    "pow": 1
                },
                "FUN_08000428": {
                    "__aeabi_fdiv": 3,
                    "__cmpeqdf2": 1,
                    "__muldf3": 1,
                    "abs_diff": 1,
                    "calculate": 1,
                    "calculate7": 1,
                    "calculate_acceleration": 1,
                    "calculate_fourth_term": 1,
                    "calculate_other_value": 1,
                    "calculate_pid": 1,
                    "calculate_result": 1,
                    "calculate_setpoint": 1,
                    "calculate_square_product2": 1,
                    "calculate_threshold": 1,
                    "calculate_time": 1,
                    "calculate_value2": 1,
                    "calculate_value4": 1,
                    "calculate_value7": 1,
                    "floatsisf": 1,
                    "ms5611_read_adc": 2,
                    "multiply_and_shift3": 1,
                    "pow": 4
                },
                "FUN_080004d0": {
                    "calculate3": 1,
                    "calculate_d_term": 1,
                    "calculate_gain": 1,
                    "calculate_power": 2,
                    "calculate_result": 1,
                    "calculate_value2": 1,
                    "calculate_value4": 1,
                    "calculate_variance": 1,
                    "carry": 1,
                    "msp_send_altitude": 9,
                    "msp_send_attitude": 1,
                    "msp_send_pid": 1,
                    "msp_send_raw_imu": 3,
                    "pow": 2,
                    "pow_function": 1,
                    "sub_multiply": 1
                },
                "FUN_08000a30": {
                    "aeabi_fdiv": 1,
                    "ahrs_write_byte": 1,
                    "calculate5": 1,
                    "calculate_derivative_term": 1,
                    "calculate_error": 1,
                    "calculate_integral": 1,
                    "calculate_speed": 2,
                    "calculate_square": 1,
                    "calculate_value": 1,
                    "calculate_value3": 1,
                    "calculate_value5": 1,
                    "carry4": 1,
                    "check_range": 1,
                    "limit_integral_term": 1,
                    "millis": 5,
                    "ms5611_read_adc": 3,
                    "msp_send_motor": 1,
                    "msp_send_pid": 1,
                    "pow": 1,
                    "sborrow4": 2
                },
                "FUN_08000adc": {
                    "calculate2": 1,
                    "calculate_acceleration": 1,
                    "calculate_adc": 1,
                    "calculate_altitude": 2,
                    "calculate_angle": 1,
                    "calculate_division": 1,
                    "calculate_error": 1,
                    "calculate_integral_term": 1,
                    "calculate_multiplier": 1,
                    "calculate_offset": 1,
                    "calculate_p_term": 1,
                    "calculate_pressure": 1,
                    "calculate_second_term": 1,
                    "calculate_second_value": 1,
                    "calculate_throttle": 3,
                    "calculate_value": 2,
                    "calculate_value2": 1,
                    "compute2": 1,
                    "ms5611_compensate_pressure": 1,
                    "ms5611_read_adc": 2,
                    "msp_send_attitude": 1,
                    "multiply_and_shift2": 1,
                    "multiply_value": 1
                },
                "FUN_08000c44": {
                    "__subdf3": 1,
                    "aeabi_fdiv": 1,
                    "apply_deadband": 1,
                    "calculate6": 1,
                    "calculate_clamp": 1,
                    "calculate_delay": 1,
                    "calculate_limit": 1,
                    "calculate_some_value": 1,
                    "calculate_value6": 1,
                    "carry4": 1,
                    "i2_c_write_byte": 5,
                    "limit_derivative_term": 1,
                    "millis": 3,
                    "ms5611_read_adc": 1,
                    "ms5611_read_byte": 1,
                    "msp_send_pid": 1,
                    "msp_send_raw_imu": 2,
                    "pow": 2,
                    "sborrow4": 1
                },
                "FUN_08000e54": {
                    "__addsf3": 4,
                    "__aeabi_f2d": 2,
                    "__aeabi_fdiv": 1,
                    "__floatsisf": 1,
                    "__truncdfsf2": 1,
                    "aeabi_fdiv": 2,
                    "calculate10": 1,
                    "calculate_axis": 1,
                    "calculate_derivative": 1,
                    "calculate_desired_yaw": 1,
                    "calculate_difference": 1,
                    "calculate_param": 1,
                    "calculate_value9": 1,
                    "i2_c_read_byte": 1,
                    "i2_c_write_byte2": 1,
                    "millis": 1,
                    "ms5611_read_adc": 1,
                    "ms5611_read_adc2": 1,
                    "multiply_and_shift_value": 1,
                    "pid_update": 1,
                    "pow": 1
                },
                "FUN_08001078": {
                    "calculate_value3": 1,
                    "filter_and_convert": 1,
                    "limit_output": 1,
                    "millis": 1,
                    "millis_to_seconds": 1,
                    "ms5611_read_adc": 1,
                    "ms5611_reset": 1,
                    "msp_send_attitude": 17,
                    "msp_send_motor": 1,
                    "msp_send_raw_imu": 1,
                    "pow": 2
                },
                "FUN_08002f28": {
                    "calculate_i_term": 1,
                    "i2_c_write_byte": 3,
                    "ms5611_read_adc": 1,
                    "msp_send_altitude": 1,
                    "msp_send_motor": 18,
                    "msp_send_status": 1,
                    "pid_update": 2,
                    "write_byte_i2c": 1
                },
                "FUN_08003034": {
                    "__addsf3": 4,
                    "__aeabi_f2iz": 1,
                    "__floatsisf": 1,
                    "__muldf3": 1,
                    "__subdf3": 2,
                    "aeabi_f2iz": 1,
                    "calculate8": 1,
                    "calculate_another_value": 1,
                    "calculate_desired_pitch": 1,
                    "calculate_value": 1,
                    "calculate_value8": 1,
                    "convert_microseconds_to_milliseconds": 1,
                    "convert_units": 1,
                    "i2_c_write_byte": 1,
                    "millis": 4,
                    "ms5611_read_adc": 4,
                    "pow": 1
                },
                "FUN_0800403c": {
                    "delayed_function_call": 1,
                    "i2_c_write_byte": 1,
                    "millis_difference": 1,
                    "pid_update": 18,
                    "update_ahrs": 1,
                    "update_pid": 5,
                    "update_state1": 1
                },
                "FUN_0800411c": {
                    "control_loop": 1,
                    "main_function": 1,
                    "process_data": 4,
                    "update_and_send_data": 2,
                    "update_controller": 1,
                    "update_drone_control_system": 1,
                    "update_drone_status": 1,
                    "update_flight_control": 1,
                    "update_flight_control_system": 1,
                    "update_flight_controller": 2,
                    "update_flight_controls": 1,
                    "update_loop": 1,
                    "update_main_loop": 1,
                    "update_sensor_data": 2,
                    "update_sensors": 1,
                    "update_sensors_and_actuators": 1,
                    "update_sensors_and_communication": 1,
                    "update_sensors_and_data": 1,
                    "update_sensors_and_send_data": 3,
                    "update_system_state": 2,
                    "update_system_status": 1
                },
                "FUN_08004348": {
                    "i2_c_write_byte": 2,
                    "millis": 1,
                    "ms5611_read_adc": 3,
                    "msp_send_altitude": 5,
                    "msp_send_attitude": 2,
                    "msp_send_motor": 1,
                    "msp_send_pid": 9,
                    "msp_send_raw_imu": 2,
                    "read_adc": 1,
                    "send_msp_motor": 1,
                    "update_calculated_values": 1
                },
                "FUN_08004384": {
                    "__addsf3": 1,
                    "__aeabi_f2iz": 2,
                    "__aeabi_fdiv": 1,
                    "__divsf3": 1,
                    "__muldf3": 1,
                    "__subdf3": 2,
                    "__truncdfsf2": 1,
                    "add": 1,
                    "aeabi_f2d": 1,
                    "calculate2": 1,
                    "calculate_value2": 1,
                    "i2_c_write_bit": 1,
                    "i2_c_write_byte": 1,
                    "i2_c_write_byte3": 1,
                    "millis": 2,
                    "msp_send_motor2": 1,
                    "msp_send_pid": 1,
                    "msp_send_raw_imu": 1,
                    "send_data": 1,
                    "send_msppid": 1,
                    "update_pid_setpoint": 1
                },
                "FUN_080043bc": {
                    "__floatsisf": 2,
                    "__muldf3": 1,
                    "__subdf3": 1,
                    "calculate_third_term": 1,
                    "i2_c_write_byte": 3,
                    "millis": 4,
                    "ms5611_read_adc": 2,
                    "ms5611_write_byte": 1,
                    "msp_send": 1,
                    "msp_send_altitude": 2,
                    "msp_send_attitude": 1,
                    "msp_send_motor": 1,
                    "msp_send_pid": 2,
                    "msp_send_raw_imu": 2,
                    "pid_update": 1,
                    "send_msr_raw_imu": 1,
                    "send_raw_imu": 1,
                    "truncate": 1
                },
                "FUN_080043f0": {
                    "msp_send_ident": 24,
                    "pid_update": 1,
                    "send_ident_status": 1,
                    "send_ident_status_motor": 1,
                    "send_msp_ident_status": 1
                },
                "FUN_08004410": {
                    "__aeabi_f2d": 1,
                    "__divdf3": 1,
                    "__subdf3": 2,
                    "__truncdfsf2": 1,
                    "add": 1,
                    "calculate_product": 1,
                    "i2_c_read_byte": 1,
                    "i2_c_write_byte": 6,
                    "millis": 1,
                    "ms5611_read_adc": 1,
                    "msp_send_altitude": 1,
                    "msp_send_attitude": 1,
                    "msp_send_pid": 2,
                    "msp_send_raw_imu": 2,
                    "pow": 3,
                    "send_msppid": 1,
                    "send_pid": 1,
                    "update_pid_values": 1
                },
                "FUN_08004434": {
                    "msp_send_ident": 1,
                    "msp_send_status": 24,
                    "send_attitude_altitude_raw_imu": 1,
                    "send_motor_attitude_altitude": 1,
                    "send_msp_attitude_altitude": 1
                },
                "FUN_08004458": {
                    "ahrs_compute_angles": 27,
                    "update_ahrs_angles": 1
                },
                "FUN_08004a84": {
                    "__aeabi_f2iz": 2,
                    "__aeabi_fdiv": 2,
                    "__muldf3": 2,
                    "__truncdfsf2": 3,
                    "aeabi_fdiv": 1,
                    "calculate9": 1,
                    "calculate_desired_roll": 1,
                    "calculate_error": 1,
                    "i2_c_write_byte": 1,
                    "i2_c_write_byte2": 1,
                    "millis": 4,
                    "ms5611_write_adc": 1,
                    "msp_send_altitude": 1,
                    "msp_send_data": 1,
                    "msp_send_pid": 1,
                    "msp_send_raw_imu": 1,
                    "multiply_and_shift4": 1,
                    "pow": 1
                },
                "FUN_08005900": {
                    "aeabi_f2d": 1,
                    "binary_conversion": 1,
                    "calculate4": 1,
                    "calculate_difference": 1,
                    "calculate_pow": 1,
                    "calculate_power": 2,
                    "i2_c_write_byte": 1,
                    "msp_send_altitude": 1,
                    "msp_send_pid": 3,
                    "msp_send_raw_imu": 9,
                    "muldf3": 1,
                    "pow": 2,
                    "pow_function": 3,
                    "power_function": 1
                },
                "I2C_WriteByte": {
                    "write_byte_to_i2_c": 1,
                    "write_data_to_i2_c_device": 1
                },
                "MS5611_ReadADC": {
                    "read_adc": 1,
                    "read_pressure_sensor_adc": 1
                },
                "MSP_SendAltitude": {
                    "send_altitude": 1,
                    "send_altitude_data": 1
                },
                "MSP_SendAttitude": {
                    "send_attitude": 1,
                    "send_attitude_data": 1
                },
                "MSP_SendIdent": {
                    "send_ident_data": 1,
                    "send_identification": 1
                },
                "MSP_SendMotor": {
                    "send_motor_data": 2
                },
                "MSP_SendPID": {
                    "send_pid": 1,
                    "send_pid_data": 1
                },
                "MSP_SendRawIMU": {
                    "send_raw_imu": 1,
                    "send_raw_imu_data": 1
                },
                "MSP_SendStatus": {
                    "send_status": 1,
                    "send_status_data": 1
                },
                "PID_Update": {
                    "update_pid": 2
                },
                "millis": {
                    "get_current_time": 1,
                    "get_millisecond_time": 1
                }
            },
            "called": [
                "FUN_08004458",
                "FUN_0800403c",
                "FUN_080043f0",
                "FUN_08004f5c",
                "FUN_08004434",
                "FUN_08000168",
                "FUN_08000adc",
                "FUN_08002f28",
                "FUN_08001078",
                "FUN_080004d0",
                "FUN_08005900",
                "FUN_08004348",
                "FUN_08000a30",
                "FUN_08000c44",
                "FUN_080043bc",
                "FUN_08000428",
                "FUN_08004410",
                "FUN_08003034",
                "FUN_08004a84",
                "FUN_08000e54",
                "FUN_08004384"
            ],
            "calling": [
                "FUN_080041ae"
            ],
            "code": "\nvoid update_sensors_and_send_data_0800411c(void)\n\n{\n  undefined4 *puVar1;\n  longlong lVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  int iVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  undefined4 *puVar13;\n  undefined4 unaff_r4;\n  int iVar14;\n  int iVar15;\n  bool bVar16;\n  undefined8 uVar17;\n  \n  iVar8 = get_millisecond_time();\n  if (1 < (uint)(iVar8 - DAT_2000028c)) {\n    DAT_2000028c = get_millisecond_time();\n    compute_angles();\n  }\n  iVar8 = get_millisecond_time();\n  if (2 < (uint)(iVar8 - DAT_20000294)) {\n    DAT_20000294 = get_millisecond_time();\n    update_pid();\n  }\n  iVar8 = get_millisecond_time();\n  if (3 < (uint)(iVar8 - DAT_20000290)) {\n    DAT_20000290 = get_millisecond_time();\n    send_ident_data();\n    send_status();\n    send_motor_data();\n    send_attitude_data();\n    send_altitude();\n    send_raw_imu();\n    send_pid_data();\n  }\n  if ((DAT_20000275 != '\\0') && (DAT_20000274 != '\\0')) {\n    iVar15 = DAT_20000270 + (uint)DAT_20000266 * -0x100;\n    uVar9 = (uint)((longlong)(int)(uint)DAT_20000268 * (longlong)iVar15) >> 0x17 |\n            (int)((ulonglong)((longlong)(int)(uint)DAT_20000268 * (longlong)iVar15) >> 0x20) << 9;\n    uVar10 = (uint)((longlong)(int)(uint)DAT_20000264 * (longlong)iVar15 >> 7);\n    uVar11 = uVar10 + (uint)DAT_20000260 * 0x10000;\n    uVar4 = (uint)((ulonglong)((longlong)(int)(uint)DAT_20000262 * (longlong)iVar15) >> 8);\n    iVar8 = uVar9 + 2000;\n    uVar5 = uVar4 + (uint)DAT_2000025e * 0x8000;\n    bVar16 = (int)uVar9 < 0;\n    if (1999 < iVar8) {\n      uVar9 = 0;\n    }\n    uVar3 = uVar9;\n    if (bVar16 != SBORROW4(iVar8,2000)) {\n      iVar14 = uVar9 * uVar9 * 5;\n      uVar9 = iVar14 >> 2;\n      uVar3 = iVar14 >> 1;\n    }\n    uVar12 = uVar11 - uVar3;\n    lVar2 = (ulonglong)(uVar5 - uVar9) * (ulonglong)DAT_2000026c;\n    iVar14 = DAT_2000026c *\n             ((((int)((longlong)(int)(uint)DAT_20000262 * (longlong)iVar15 >> 0x28) +\n               (uint)CARRY4(uVar4,(uint)DAT_2000025e * 0x8000)) - ((int)uVar9 >> 0x1f)) -\n             (uint)(uVar5 < uVar9)) + (int)((ulonglong)lVar2 >> 0x20);\n    uVar4 = (uint)lVar2 >> 0x15 | iVar14 * 0x800;\n    uVar6 = __floatsisf(uVar4 - uVar12 >> 0xf |\n                        (((iVar14 >> 0x15) -\n                         ((((int)((longlong)(int)(uint)DAT_20000264 * (longlong)iVar15 >> 0x27) +\n                           (uint)CARRY4(uVar10,(uint)DAT_20000260 * 0x10000)) - ((int)uVar3 >> 0x1f)\n                          ) - (uint)(uVar11 < uVar3))) - (uint)(uVar4 < uVar12)) * 0x20000);\n    uVar6 = __aeabi_fdiv(uVar6,0x42c80000);\n    DAT_20000354 = uVar6;\n    uVar7 = __floatsisf(iVar8);\n    DAT_20000358 = __aeabi_fdiv(uVar7,0x42c80000);\n    __aeabi_fdiv(uVar6,0x447d5000);\n    uVar17 = __aeabi_f2d();\n    uVar17 = pow((int)uVar17,(int)((ulonglong)uVar17 >> 0x20),0x60000000,0x3fc85b95);\n    uVar17 = __subdf3(0,0x3ff00000,(int)uVar17,(int)((ulonglong)uVar17 >> 0x20));\n    __muldf3((int)uVar17,(int)((ulonglong)uVar17 >> 0x20),0,0x40e5a540);\n    uVar6 = __truncdfsf2();\n    uVar7 = 0;\n    puVar13 = &DAT_20000300;\n    DAT_20000350 = uVar6;\n    do {\n      puVar1 = puVar13 + 1;\n      *puVar13 = *puVar1;\n      uVar7 = __addsf3(uVar7);\n      puVar13 = puVar1;\n    } while (puVar1 != &DAT_2000034c);\n    DAT_2000034c = uVar6;\n    uVar6 = __addsf3(uVar7,uVar6);\n    DAT_200002fc = __aeabi_fdiv(uVar6,0x41a00000);\n    iVar8 = __aeabi_f2iz();\n    DAT_200014ab = iVar8 * 100;\n    DAT_20000275 = '\\0';\n    DAT_20000274 = '\\0';\n    write_byte_to_i2_c(0xee,DAT_20000038 + 0x50,1);\n    DAT_2000027c = get_millisecond_time();\n  }\n  iVar8 = get_millisecond_time();\n  if (((10 < (uint)(iVar8 - DAT_2000027c)) && (DAT_20000275 == '\\0')) && (DAT_20000274 == '\\0')) {\n    DAT_20000270 = read_adc();\n    DAT_20000275 = '\\x01';\n    write_byte_to_i2_c(0xee,DAT_20000038 + 0x40,1,0,unaff_r4);\n    DAT_20000278 = get_millisecond_time();\n  }\n  iVar8 = get_millisecond_time();\n  if (((10 < (uint)(iVar8 - DAT_20000278)) && (DAT_20000275 != '\\0')) && (DAT_20000274 == '\\0')) {\n    DAT_2000026c = read_adc();\n    DAT_20000274 = '\\x01';\n  }\n  return;\n}\n\n",
            "current_name": "update_sensors_and_send_data_0800411c",
            "entrypoint": "0x0800411c",
            "imported": false,
            "improved": true,
            "renaming": {
                "AHRS_ComputeAngles": "compute_angles",
                "FUN_0800411c": "update_sensors_and_send_data_0800411c",
                "I2C_WriteByte": "write_byte_to_i2_c",
                "MS5611_ReadADC": "read_adc",
                "MSP_SendAltitude": "send_altitude",
                "MSP_SendAttitude": "send_attitude_data",
                "MSP_SendIdent": "send_ident_data",
                "MSP_SendMotor": "send_motor_data",
                "MSP_SendPID": "send_pid_data",
                "MSP_SendRawIMU": "send_raw_imu",
                "MSP_SendStatus": "send_status",
                "PID_Update": "update_pid",
                "millis": "get_millisecond_time"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004194": {
            "additional_data": {
                "Devices_Init": {
                    "": 1,
                    "init_devices": 1,
                    "initialize_devices": 7,
                    "initialize_devices_init": 1
                },
                "FUN_08002ea0": {
                    "configure_imu": 1,
                    "imu_init": 7,
                    "imu_init_subfunction": 1,
                    "init_imu": 1,
                    "initialize": 1,
                    "initialize_component_b": 1,
                    "initialize_devices_sub3": 1,
                    "initialize_imu": 7,
                    "initialize_ms5611": 2,
                    "set_sensor_parameters": 2,
                    "sub_function_with_params": 1,
                    "unknown_function": 1
                },
                "FUN_08003298": {
                    "configure_imu": 1,
                    "devices_init": 7,
                    "display_initialization": 1,
                    "init_devices": 1,
                    "initialize_component_a": 1,
                    "initialize_devices": 5,
                    "initialize_devices_sub1": 1,
                    "initialize_devices_subfunction": 1,
                    "initialize_serial": 5,
                    "perform_devices_init": 1,
                    "some_sub_function": 1,
                    "unknown_function": 1
                },
                "FUN_08004028": {
                    "configure_system": 1,
                    "init_ms5611": 1,
                    "initialize_component_c": 1,
                    "initialize_devices_sub4": 1,
                    "initialize_ms5611": 9,
                    "initialize_variables": 1,
                    "ms5611_init": 7,
                    "ms5611_init_subfunction": 1,
                    "perform_system_check": 1,
                    "some_important_initialization": 1,
                    "unknown_function": 1,
                    "yet_another_sub_function": 1
                },
                "FUN_08004194": {
                    "initialize_devices": 13,
                    "initialize_hardware": 2,
                    "initialize_peripherals": 1,
                    "initialize_system": 15
                },
                "FUN_08004c70": {
                    "another_sub_function": 1,
                    "configure_serial": 1,
                    "get_initial_value": 2,
                    "get_result_value": 1,
                    "get_sensor_data": 2,
                    "get_serial_begin": 1,
                    "get_serial_begin_status": 1,
                    "get_serial_begin_value": 1,
                    "get_serial_data": 1,
                    "initialize_devices_sub2": 1,
                    "initialize_imu": 2,
                    "initialize_serial": 1,
                    "serial_begin": 7,
                    "serial_begin_subfunction": 1,
                    "start_serial_communication": 1,
                    "unknown_function": 1,
                    "unused_function": 1
                },
                "IMU_Init": {
                    "": 1,
                    "initialize_imu": 10
                },
                "MS5611_Init": {
                    "": 1,
                    "initialize_ms5611": 10
                },
                "initializeDevices": {
                    "init_flag": 1,
                    "initialize_devices": 1
                },
                "initializeIMU": {
                    "imu_flag": 1,
                    "initialize_imu": 1
                },
                "initializeMS5611": {
                    "initialize_ms5611": 1,
                    "ms5611_flag": 1
                },
                "initializeSerialCommunication": {
                    "initialize_serial_communication": 1,
                    "serial_flag": 1
                },
                "initializeSystem": {
                    "": 1,
                    "initialize_system": 1
                },
                "newParam1": {
                    "param1": 1
                },
                "newParam2": {
                    "param2": 1
                },
                "newParam3": {
                    "param3": 1
                },
                "newParam4": {
                    "param4": 1
                },
                "new_variable_name_1": {
                    "sensor_flag": 1
                },
                "new_variable_name_10": {
                    "system_param3": 1
                },
                "new_variable_name_11": {
                    "system_param4": 1
                },
                "new_variable_name_12": {
                    "system_param5": 1
                },
                "new_variable_name_13": {
                    "system_param6": 1
                },
                "new_variable_name_14": {
                    "system_param7": 1
                },
                "new_variable_name_15": {
                    "system_param8": 1
                },
                "new_variable_name_16": {
                    "system_param9": 1
                },
                "new_variable_name_17": {
                    "system_param10": 1
                },
                "new_variable_name_2": {
                    "command_flag": 1
                },
                "new_variable_name_3": {
                    "sensor_data": 1
                },
                "new_variable_name_4": {
                    "sensor_param1": 1
                },
                "new_variable_name_5": {
                    "sensor_param2": 1
                },
                "new_variable_name_6": {
                    "sensor_param3": 1
                },
                "new_variable_name_7": {
                    "sensor_param4": 1
                },
                "new_variable_name_8": {
                    "system_param1": 1
                },
                "new_variable_name_9": {
                    "system_param2": 1
                },
                "param_1": {
                    "new_param1": 1,
                    "param1": 3,
                    "unknown_param1": 1
                },
                "param_2": {
                    "new_param2": 1,
                    "param2": 3,
                    "unknown_param2": 1
                },
                "param_3": {
                    "new_param3": 1,
                    "param3": 3,
                    "unknown_param3": 1
                },
                "param_4": {
                    "new_param4": 1,
                    "param4": 3,
                    "unknown_param4": 1
                },
                "serialBegin": {
                    "": 1,
                    "initialize_serial": 5,
                    "initialize_serial_communication": 5
                }
            },
            "called": [
                "FUN_08003298",
                "FUN_08004c70",
                "FUN_08002ea0",
                "FUN_08004028"
            ],
            "calling": [
                "FUN_080041ae"
            ],
            "code": "\nvoid initialize_system_08004194(void)\n\n{\n  initialize_devices();\n  initialize_serial();\n  initialize_imu();\n  initialize_ms5611();\n  DAT_200000f4 = 1;\n  DAT_20000150 = 1;\n  DAT_200001ac = 0xffffffff;\n  DAT_20000098 = 1;\n  DAT_200000c8 = 0x44bb8000;\n  DAT_20000124 = 0x44b54000;\n  DAT_20000180 = 0x44fa0000;\n  DAT_2000006c = 0;\n  DAT_200000ac = 0x408ccccd;\n  DAT_200000b0 = 0x3ca3d70a;\n  DAT_200000b4 = 0x438c0000;\n  DAT_200000b8 = 0x40900000;\n  DAT_200000bc = 0x3ca3d70a;\n  DAT_200000c0 = 0x43b40000;\n  DAT_20000108 = 0x40733333;\n  DAT_2000010c = 0x3ca3d70a;\n  DAT_20000110 = 0x43820000;\n  DAT_20000114 = 0x40733333;\n  DAT_20000118 = 0x3ca3d70a;\n  DAT_2000011c = 0x43a00000;\n  DAT_20000164 = 0x40400000;\n  DAT_20000168 = 0x3c23d70a;\n  DAT_2000016c = 0x438c0000;\n  DAT_20000170 = 0;\n  DAT_20000174 = 0;\n  DAT_20000178 = 0;\n  DAT_20000050 = 0x41200000;\n  DAT_20000054 = 0;\n  DAT_20000058 = 0;\n  DAT_2000005c = 0;\n  DAT_20000060 = 0;\n  DAT_20000064 = 0;\n  return;\n}\n\n",
            "current_name": "initialize_system_08004194",
            "entrypoint": "0x08004194",
            "imported": false,
            "improved": true,
            "renaming": {
                "Devices_Init": "initialize_devices",
                "FUN_08004194": "initialize_system_08004194",
                "IMU_Init": "initialize_imu",
                "MS5611_Init": "initialize_ms5611",
                "serialBegin": "initialize_serial"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080041ae": {
            "additional_data": {
                "FUN_0800114c": {
                    "debug": 1,
                    "execute": 1,
                    "execute_function": 1,
                    "execute_task_scheduler": 1,
                    "handle_interrupt": 1,
                    "increment_system_tick": 1,
                    "increment_tick": 5,
                    "increment_time": 1,
                    "initialize": 3,
                    "initialize_hal": 1,
                    "initialize_system": 3,
                    "initialize_tick": 1,
                    "perform_action": 5,
                    "perform_additional_setup": 1,
                    "perform_task2": 1,
                    "reboot": 1,
                    "tick": 2,
                    "update_system_time": 1
                },
                "FUN_08003eb0": {
                    "calculate": 5,
                    "calculate_checksum": 3,
                    "calculate_result": 2,
                    "calculate_something": 2,
                    "calculate_tick_count": 1,
                    "calculate_time": 1,
                    "calculate_value": 8,
                    "perform_operation": 1,
                    "perform_task": 1,
                    "process_data": 5,
                    "process_input": 1,
                    "process_parameter": 1
                },
                "FUN_0800411c": {
                    "initialize": 8,
                    "initialize_forkserver": 5,
                    "initialize_process": 1,
                    "perform_setup": 1,
                    "perform_task1": 1,
                    "setup": 10,
                    "setup_forkserver": 1,
                    "setup_func": 1,
                    "setup_task_scheduler": 2
                },
                "FUN_08004194": {
                    "cleanup": 7,
                    "execute_task": 1,
                    "finalize_execution": 1,
                    "handle_tick": 1,
                    "increment_tick": 1,
                    "initialize_forkserver": 1,
                    "initialize_system": 1,
                    "manage_tasks": 1,
                    "perform_task": 2,
                    "perform_task3": 1,
                    "print_results": 1,
                    "schedule_task": 2,
                    "schedule_tasks": 2,
                    "setup": 1,
                    "setup_environment": 1,
                    "start_forkserver": 3,
                    "task_scheduler": 3,
                    "task_scheduling": 1
                },
                "FUN_080041ae": {
                    "continuous_execution": 3,
                    "continuous_task": 1,
                    "continuous_task_execution": 4,
                    "continuous_task_scheduler": 1,
                    "execute_main_loop": 1,
                    "execute_task_scheduler": 1,
                    "initialize_program": 1,
                    "main_loop": 4,
                    "run_application": 2,
                    "run_continuous_task": 2,
                    "run_forever": 1,
                    "run_infinite_loop": 1,
                    "run_main_loop": 2,
                    "run_program": 1,
                    "run_task_scheduler": 5,
                    "start_continuous_task": 1
                },
                "HAL_IncTick": {
                    "increment_tick": 4
                },
                "fun_0800411c": {
                    "setup": 1
                },
                "param_1": {
                    "data": 1,
                    "input": 1
                },
                "setup": {
                    "initialize": 1,
                    "setup_environment": 1
                },
                "startForkserver": {
                    "initialize_fork_server": 1,
                    "start_forkserver": 1
                },
                "taskScheduler": {
                    "execute_tasks": 2,
                    "schedule_tasks": 2
                }
            },
            "called": [
                "FUN_0800411c",
                "FUN_08003eb0",
                "FUN_0800114c",
                "FUN_08004194"
            ],
            "calling": [
                "FUN_08004f68"
            ],
            "code": "\nvoid continuous_task_execution_080041ae(void)\n\n{\n  initialize_fork_server(0);\n  initialize();\n  do {\n    increment_tick();\n    schedule_tasks();\n  } while( true );\n}\n\n",
            "current_name": "continuous_task_execution_080041ae",
            "entrypoint": "0x080041ae",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080041ae": "continuous_task_execution_080041ae",
                "HAL_IncTick": "increment_tick",
                "setup": "initialize",
                "startForkserver": "initialize_fork_server",
                "taskScheduler": "schedule_tasks"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080041c4": {
            "additional_data": {
                "FUN_080041c4": {
                    "disable_all_motors": 2,
                    "initialize_motors": 2,
                    "reset_motors": 1,
                    "stop_all_motors": 3,
                    "stop_motors": 23
                },
                "Motor1_SetPWM": {
                    "set_motor1_pwm": 1
                },
                "Motor2_SetPWM": {
                    "set_motor2_pwm": 1
                },
                "Motor3_SetPWM": {
                    "set_motor3_pwm": 1
                },
                "Motor4_SetPWM": {
                    "set_motor4_pwm": 1
                },
                "extraout_r1": {
                    "return_val": 1,
                    "unused_extraout_r1": 1
                },
                "param_1": {
                    "arg1": 1,
                    "param1": 1,
                    "param_1": 1,
                    "unneeded_param_1": 1,
                    "unused": 1,
                    "unused1": 2,
                    "unused_param": 1,
                    "unused_param1": 14,
                    "unused_param_1": 8,
                    "unused_parameter1": 1
                },
                "param_2": {
                    "arg2": 1,
                    "param2": 1,
                    "param_2": 1,
                    "unneeded_param_2": 1,
                    "unused": 1,
                    "unused2": 2,
                    "unused_param": 1,
                    "unused_param2": 14,
                    "unused_param_2": 8,
                    "unused_parameter2": 1
                },
                "param_3": {
                    "arg3": 1,
                    "motor3_param": 1,
                    "param3": 1,
                    "param_3": 1,
                    "unneeded_param_3": 1,
                    "unused": 1,
                    "unused3": 2,
                    "unused_param": 1,
                    "unused_param3": 13,
                    "unused_param_3": 8,
                    "unused_parameter3": 1
                },
                "param_4": {
                    "arg4": 1,
                    "motor4_param": 1,
                    "param4": 1,
                    "param_4": 1,
                    "unneeded_param_4": 1,
                    "unused": 1,
                    "unused4": 2,
                    "unused_param": 1,
                    "unused_param4": 13,
                    "unused_param_4": 8,
                    "unused_parameter4": 1
                }
            },
            "called": [
                "FUN_08003fc4",
                "FUN_08003fe8",
                "FUN_08003fdc",
                "FUN_08003fd0"
            ],
            "calling": [
                "FUN_08004a84"
            ],
            "code": "\nvoid stop_all_motors_080041c4(undefined4 unused_param1,undefined4 unused_param2,undefined4 unused_param3,undefined4 unused_param4)\n\n{\n  undefined4 return_val;\n  \n  set_motor1_pwm(0);\n  set_motor2_pwm(0);\n  set_motor3_pwm(0);\n  set_motor4_pwm(0,return_val,unused_param3,unused_param4);\n  return;\n}\n\n",
            "current_name": "stop_all_motors_080041c4",
            "entrypoint": "0x080041c4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080041c4": "stop_all_motors_080041c4",
                "Motor1_SetPWM": "set_motor1_pwm",
                "Motor2_SetPWM": "set_motor2_pwm",
                "Motor3_SetPWM": "set_motor3_pwm",
                "Motor4_SetPWM": "set_motor4_pwm",
                "extraout_r1": "return_val",
                "param_1": "unused_param1",
                "param_2": "unused_param2",
                "param_3": "unused_param3",
                "param_4": "unused_param4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800426c": {
            "additional_data": {
                "DAT_20000298": {
                    "data4": 1,
                    "output4": 1
                },
                "DAT_2000029c": {
                    "data3": 1,
                    "output3": 1
                },
                "DAT_200002a0": {
                    "data1": 1,
                    "output1": 1
                },
                "DAT_200002a4": {
                    "data2": 1,
                    "output2": 1
                },
                "DAT_200013e3": {
                    "updated_data4": 1
                },
                "FUN_0800426c": {
                    "calculate_motor_pwm": 2,
                    "control_motors": 7,
                    "motor_control": 1,
                    "update_motor_pulse_width": 1,
                    "update_motor_pw_ms": 1,
                    "update_motor_pwm": 9,
                    "update_motor_setpoints": 1,
                    "update_motor_speeds": 1,
                    "update_pwm_values": 4
                },
                "Motor1_SetPWM": {
                    "set_motor1_pwm": 1,
                    "set_pwm_motor1": 1
                },
                "Motor2_SetPWM": {
                    "set_motor2_pwm": 1,
                    "set_pwm_motor2": 1
                },
                "Motor3_SetPWM": {
                    "set_motor3_pwm": 1,
                    "set_pwm_motor3": 1
                },
                "Motor4_SetPWM": {
                    "set_motor4_pwm": 1,
                    "set_pwm_motor4": 1
                },
                "_DAT_200013dd": {
                    "updated_data1": 1
                },
                "_DAT_200013df": {
                    "updated_data2": 1
                },
                "_DAT_200013e1": {
                    "updated_data3": 1
                },
                "param_1": {
                    "a": 1,
                    "input1": 14,
                    "input_1": 1,
                    "motor1_val": 1,
                    "param1": 1,
                    "parameter_1": 1,
                    "pulse_width1": 1,
                    "speed": 1,
                    "speed1": 3,
                    "speed_1": 1,
                    "value1": 6
                },
                "param_2": {
                    "acceleration": 1,
                    "b": 1,
                    "input2": 14,
                    "input_2": 1,
                    "motor2_val": 1,
                    "param2": 1,
                    "parameter_2": 1,
                    "pulse_width2": 1,
                    "speed2": 3,
                    "speed_2": 1,
                    "value2": 6
                },
                "param_3": {
                    "c": 1,
                    "input3": 14,
                    "input_3": 1,
                    "motor3_val": 1,
                    "param3": 1,
                    "param_3": 1,
                    "parameter_3": 1,
                    "pulse_width3": 1,
                    "speed3": 3,
                    "speed_3": 1,
                    "value3": 6
                },
                "param_4": {
                    "d": 1,
                    "input4": 14,
                    "input_4": 1,
                    "motor4_val": 1,
                    "param4": 1,
                    "param_4": 1,
                    "parameter_4": 1,
                    "pulse_width4": 1,
                    "speed4": 3,
                    "speed_4": 1,
                    "value4": 6
                },
                "uVar1": {
                    "calculated_value1": 1,
                    "diff1": 1,
                    "result1": 14,
                    "result_1": 1,
                    "sub1": 2,
                    "sub1_result": 1,
                    "sub_result1": 1,
                    "subtracted_value1": 1,
                    "subtraction_result1": 1,
                    "temp1": 8
                },
                "uVar2": {
                    "add1": 2,
                    "add1_result": 1,
                    "add_result1": 1,
                    "added_value1": 1,
                    "addition_result1": 1,
                    "calculated_value2": 1,
                    "result2": 14,
                    "result_2": 1,
                    "sum1": 1,
                    "temp2": 8
                },
                "uVar3": {
                    "calculated_value3": 1,
                    "diff2": 1,
                    "result3": 14,
                    "result_3": 1,
                    "sub2": 2,
                    "sub2_result": 1,
                    "sub_result2": 1,
                    "subtracted_value2": 1,
                    "subtraction_result2": 1,
                    "temp3": 8
                },
                "uVar4": {
                    "calculated_value4": 1,
                    "conversion_result1": 1,
                    "f2iz1": 1,
                    "f2iz_result1": 1,
                    "int_result1": 1,
                    "int_speed1": 1,
                    "int_value1": 1,
                    "integer1": 1,
                    "integer_value1": 1,
                    "result1": 2,
                    "result4": 10,
                    "result_4": 1,
                    "temp4": 7,
                    "u_var4": 1,
                    "value1": 1
                },
                "uVar5": {
                    "calculated_value5": 1,
                    "conversion_result2": 1,
                    "f2iz2": 1,
                    "f2iz_result2": 1,
                    "int_result2": 1,
                    "int_speed2": 1,
                    "int_value2": 1,
                    "integer2": 1,
                    "integer_value2": 1,
                    "result2": 2,
                    "result5": 10,
                    "result_5": 1,
                    "temp5": 7,
                    "u_var5": 1,
                    "value2": 1
                },
                "uVar6": {
                    "calculated_value6": 1,
                    "conversion_result3": 1,
                    "f2iz3": 1,
                    "f2iz_result3": 1,
                    "int_result3": 1,
                    "int_speed3": 1,
                    "int_value3": 1,
                    "integer3": 1,
                    "integer_value3": 1,
                    "result3": 2,
                    "result6": 10,
                    "result_6": 1,
                    "temp6": 7,
                    "u_var6": 1,
                    "value3": 1
                },
                "uVar7": {
                    "calculated_value7": 1,
                    "conversion_result4": 1,
                    "f2iz4": 1,
                    "f2iz_result4": 1,
                    "int_result4": 1,
                    "int_speed4": 1,
                    "int_value4": 1,
                    "integer4": 1,
                    "integer_value4": 1,
                    "result4": 2,
                    "result7": 10,
                    "result_7": 1,
                    "temp7": 7,
                    "u_var7": 1,
                    "value4": 1
                }
            },
            "called": [
                "FUN_08000ad8",
                "FUN_08003fc4",
                "FUN_08003fe8",
                "FUN_08000adc",
                "FUN_08001078",
                "FUN_08003fdc",
                "FUN_08003fd0"
            ],
            "calling": [
                "FUN_08004a84"
            ],
            "code": "\n\n\nvoid update_motor_pwm_0800426c(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  undefined4 result3;\n  uint result4;\n  uint result5;\n  uint result6;\n  uint result7;\n  \n  result1 = __aeabi_fsub();\n  result2 = __addsf3(input1,input2);\n  result3 = __aeabi_fsub(result1,input3);\n  result3 = __addsf3(result3,input4);\n  __aeabi_fsub(result3,0x447a0000);\n  result4 = __aeabi_f2iz();\n  result3 = __aeabi_fsub(result2,input3);\n  result3 = __aeabi_fsub(result3,input4);\n  __aeabi_fsub(result3,0x447a0000);\n  result5 = __aeabi_f2iz();\n  result1 = __addsf3(result1,input3);\n  result1 = __aeabi_fsub(result1,input4);\n  __aeabi_fsub(result1,0x447a0000);\n  result6 = __aeabi_f2iz();\n  result1 = __addsf3(input3,result2);\n  result1 = __addsf3(result1,input4);\n  __aeabi_fsub(result1,0x447a0000);\n  result7 = __aeabi_f2iz();\n  if (999 < (int)result7) {\n    result7 = 1000;\n  }\n  if (999 < (int)result6) {\n    result6 = 1000;\n  }\n  if (999 < (int)result5) {\n    result5 = 1000;\n  }\n  if (999 < (int)result4) {\n    result4 = 1000;\n  }\n  DAT_200002a0 = result5 & ~((int)result5 >> 0x1f);\n  DAT_200002a4 = result4 & ~((int)result4 >> 0x1f);\n  DAT_2000029c = result6 & ~((int)result6 >> 0x1f);\n  DAT_20000298 = result7 & ~((int)result7 >> 0x1f);\n  set_motor1_pwm();\n  set_motor2_pwm(DAT_2000029c);\n  set_pwm_motor3(DAT_200002a0);\n  set_pwm_motor4(DAT_200002a4);\n  _DAT_200013dd = (short)DAT_20000298 + 1000;\n  DAT_200013df = (short)DAT_2000029c + 1000;\n  _DAT_200013e1 = (short)DAT_200002a0 + 1000;\n  DAT_200013e3 = (short)DAT_200002a4 + 1000;\n  return;\n}\n\n",
            "current_name": "update_motor_pwm_0800426c",
            "entrypoint": "0x0800426c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800426c": "update_motor_pwm_0800426c",
                "Motor1_SetPWM": "set_motor1_pwm",
                "Motor2_SetPWM": "set_motor2_pwm",
                "Motor3_SetPWM": "set_pwm_motor3",
                "Motor4_SetPWM": "set_pwm_motor4",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3",
                "uVar4": "result4",
                "uVar5": "result5",
                "uVar6": "result6",
                "uVar7": "result7"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004300": {
            "additional_data": {
                "FUN_08004300": {
                    "print_and_calc_checksum": 2,
                    "print_and_calculate_checksum": 6,
                    "print_and_checksum": 3,
                    "print_and_xor": 5,
                    "print_and_xor_bytes": 2,
                    "print_and_xor_checksum": 5,
                    "print_checksum": 1,
                    "print_data_with_checksum": 5,
                    "reverse_and_print_data": 1
                },
                "param_1": {
                    "checksum": 6,
                    "checksum_seed": 2,
                    "checksum_value": 1,
                    "data_length": 1,
                    "hash": 1,
                    "input_param": 1,
                    "input_value": 7,
                    "key": 4,
                    "param1": 1,
                    "seed": 1,
                    "shift_value": 1,
                    "value": 1,
                    "xor_key": 1,
                    "xor_value": 2
                },
                "param_2": {
                    "buffer": 1,
                    "byte_array": 1,
                    "data": 22,
                    "data_array": 3,
                    "data_buffer": 3
                },
                "param_3": {
                    "buffer_length": 2,
                    "buffer_size": 2,
                    "byte_count": 1,
                    "data_length": 15,
                    "data_size": 2,
                    "length": 7,
                    "size": 1
                },
                "pbVar2": {
                    "current_byte": 27
                },
                "uVar1": {
                    "checksum": 16,
                    "checksum_byte": 1,
                    "checksum_result": 3,
                    "checksum_xor": 1,
                    "xor_checksum": 1,
                    "xor_result": 2,
                    "xor_value": 1,
                    "xored_result": 1,
                    "xored_value": 1
                }
            },
            "called": [
                "FUN_08004c18",
                "FUN_08004c8c"
            ],
            "calling": [
                "FUN_08004458",
                "FUN_080043f0",
                "FUN_08004434",
                "FUN_080043bc",
                "FUN_08004410",
                "FUN_08004348",
                "FUN_08004384"
            ],
            "code": "\nvoid print_and_xor_checksum_08004300(uint input_value,byte *data,uint data_length)\n\n{\n  uint checksum;\n  byte *current_byte;\n  \n  serialPrint(&DAT_0800732e);\n  serialWrite(data_length & 0xff);\n  checksum = data_length & 0xff ^ input_value;\n  serialWrite(input_value);\n  for (current_byte = data; (int)current_byte - (int)data < (int)data_length; current_byte = current_byte + 1) {\n    serialWrite(*current_byte);\n    checksum = checksum ^ *current_byte;\n  }\n  serialWrite(checksum);\n  return;\n}\n\n",
            "current_name": "print_and_xor_checksum_08004300",
            "entrypoint": "0x08004300",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004300": "print_and_xor_checksum_08004300",
                "param_1": "input_value",
                "param_2": "data",
                "param_3": "data_length",
                "pbVar2": "current_byte",
                "uVar1": "checksum"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004348": {
            "additional_data": {
                "FUN_08004348": {
                    "send_frame": 7,
                    "send_frame_data": 3,
                    "send_frame_to_device": 1,
                    "send_frame_to_msp": 20
                },
                "MSP_SendFrame": {
                    "send_frame_data": 1,
                    "send_frame_to_msp": 1
                },
                "local_10": {
                    "frame_address": 1,
                    "frame_data": 12,
                    "frame_header": 1,
                    "frame_id": 7,
                    "frame_length": 1,
                    "frame_size": 3,
                    "frame_type": 2,
                    "msp_frame_id": 1
                },
                "local_c": {
                    "masked_arg2": 1,
                    "masked_data_size": 2,
                    "masked_frame": 1,
                    "masked_frame_count": 1,
                    "masked_frame_length": 1,
                    "masked_frame_size": 6,
                    "masked_input": 1,
                    "masked_input2": 1,
                    "masked_param": 1,
                    "masked_param2": 9,
                    "masked_param_2": 2,
                    "masked_param_size": 1,
                    "param_2_copy": 1
                },
                "param_1": {
                    "arg1": 3,
                    "arg_1": 1,
                    "device_id": 1,
                    "flags": 1,
                    "input1": 1,
                    "param1": 11,
                    "param_1": 6,
                    "param_unused": 1,
                    "status": 1,
                    "undefined4_param": 1,
                    "undefined_1": 1,
                    "undefined_param": 2,
                    "undefined_parameter": 1
                },
                "param_2": {
                    "arg2": 1,
                    "data_size": 2,
                    "frame": 1,
                    "frame_count": 1,
                    "frame_data": 10,
                    "frame_size": 7,
                    "input2": 1,
                    "input_value": 1,
                    "packet_size": 1,
                    "param2": 5,
                    "uint_param": 1
                },
                "param_3": {
                    "arg2": 1,
                    "arg3": 2,
                    "arg_3": 1,
                    "data": 1,
                    "frame_data": 2,
                    "frame_length": 1,
                    "frame_size": 1,
                    "input3": 1,
                    "param3": 11,
                    "param_3": 6,
                    "param_size": 1,
                    "undefined4_param_2": 1,
                    "undefined_2": 1,
                    "undefined_param": 1
                },
                "uStack_8": {
                    "arg3": 1,
                    "arg3_copy": 1,
                    "arg_3_": 1,
                    "input3": 1,
                    "masked_data": 1,
                    "masked_frame_data": 1,
                    "param": 1,
                    "param3": 1,
                    "param3_copy": 7,
                    "param3_stack": 1,
                    "param_3": 5,
                    "param_3_copy": 2,
                    "param_stack_8": 1,
                    "param_unused": 1,
                    "undefined_var": 1
                }
            },
            "called": [
                "FUN_08004300"
            ],
            "calling": [
                "FUN_0800411c"
            ],
            "code": "\n\n\nvoid send_frame_to_msp_08004348(undefined4 param1,uint frame_data,undefined4 param3)\n\n{\n  undefined4 frame_data;\n  uint masked_param2;\n  undefined4 param3_copy;\n  \n  _DAT_20001423 = 0x40003e9;\n  _DAT_20001427 = 0;\n  DAT_20001429 = 0;\n  frame_data = 0x40003e9;\n  masked_param2 = frame_data & 0xff000000;\n  param3_copy = param3;\n  send_frame_to_msp_08004348(100,&frame_data,7);\n  return;\n}\n\n",
            "current_name": "send_frame_to_msp_08004348",
            "entrypoint": "0x08004348",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004348": "send_frame_to_msp_08004348",
                "MSP_SendFrame": "send_frame_to_msp",
                "local_10": "frame_data",
                "local_c": "masked_param2",
                "param_1": "param1",
                "param_2": "frame_data",
                "param_3": "param3",
                "uStack_8": "param3_copy"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004384": {
            "additional_data": {
                "DAT_200013c3": {
                    "variable_2": 1
                },
                "FUN_08004384": {
                    "send_data": 1,
                    "send_data_frame": 5,
                    "send_data_to_msp": 1,
                    "send_frame": 7,
                    "send_frame_and_handle_response": 1,
                    "send_frame_and_set_values": 1,
                    "send_frame_data": 1,
                    "send_frame_message": 1,
                    "send_frame_to_msp": 10,
                    "send_frame_with_data": 1,
                    "send_frame_with_params": 2
                },
                "_DAT_200013b9": {
                    "header_constant_2": 1
                },
                "_DAT_200013bd": {
                    "header_constant_1": 1
                },
                "_DAT_200013c1": {
                    "variable_1": 1
                },
                "local_14": {
                    "address": 1,
                    "control_word": 1,
                    "data": 1,
                    "data_ptr": 1,
                    "frame": 2,
                    "frame_buffer": 1,
                    "frame_data": 6,
                    "frame_header": 3,
                    "frame_num": 1,
                    "frame_type_copy": 1,
                    "frame_value": 1,
                    "frame_variable1": 1,
                    "frame_variable_1": 1,
                    "header": 1,
                    "local_frame_id": 1,
                    "msp_address": 1,
                    "msp_data": 1,
                    "previous_frame_data": 1,
                    "response_length": 1,
                    "some_variable": 1,
                    "status": 1,
                    "temp_var1": 1,
                    "var1": 1
                },
                "local_c": {
                    "filtered_data": 1,
                    "filtered_flags": 1,
                    "frame_header": 1,
                    "frame_variable_3": 1,
                    "mask": 1,
                    "masked_arg4": 1,
                    "masked_data": 3,
                    "masked_flag": 1,
                    "masked_flags": 10,
                    "masked_frame_size": 1,
                    "masked_param4": 7,
                    "masked_sender_id": 1,
                    "temp_var3": 1,
                    "var3": 1
                },
                "param_1": {
                    "arg1": 3,
                    "data": 3,
                    "data_length": 1,
                    "data_ptr": 1,
                    "data_type": 1,
                    "frame_config": 1,
                    "frame_data": 2,
                    "frame_id": 2,
                    "frame_param_1": 1,
                    "frame_type": 5,
                    "param1": 7,
                    "param_1": 1,
                    "param_type": 1,
                    "payload": 1,
                    "response_buffer": 1
                },
                "param_2": {
                    "arg2": 3,
                    "buffer": 4,
                    "data_buffer": 2,
                    "data_ptr": 1,
                    "frame_buffer": 1,
                    "frame_data": 3,
                    "frame_param_2": 1,
                    "frame_ptr": 1,
                    "param2": 7,
                    "param_2": 1,
                    "param_array": 1,
                    "param_value": 1,
                    "unused_param": 1
                },
                "param_3": {
                    "arg3": 3,
                    "buffer_length": 1,
                    "buffer_size": 1,
                    "data_length": 1,
                    "data_size": 1,
                    "frame_param_3": 1,
                    "frame_size": 4,
                    "length": 1,
                    "param3": 7,
                    "param_3": 2,
                    "param_count": 1,
                    "param_size": 1,
                    "size": 2,
                    "unused_param_2": 1
                },
                "param_4": {
                    "arg4": 3,
                    "control_flags": 1,
                    "data": 1,
                    "flags": 8,
                    "frame_data": 3,
                    "frame_flag": 1,
                    "frame_flags": 2,
                    "frame_length": 1,
                    "frame_param_4": 1,
                    "frame_size": 1,
                    "param4": 7,
                    "param_flags": 1,
                    "sender_id": 1
                },
                "uStack_10": {
                    "another_variable": 1,
                    "constant": 2,
                    "constant1": 1,
                    "constant_value": 3,
                    "control": 1,
                    "default_frame_header": 1,
                    "frame_data2": 1,
                    "frame_flag": 2,
                    "frame_flag_copy": 1,
                    "frame_footer": 1,
                    "frame_id": 1,
                    "frame_length": 1,
                    "frame_variable2": 1,
                    "frame_variable_2": 1,
                    "local_flags": 1,
                    "msp_data_2": 1,
                    "msp_offset": 1,
                    "padding": 1,
                    "previous_frame_type": 1,
                    "response_command": 1,
                    "stack_flag": 1,
                    "stack_header": 1,
                    "stack_value": 1,
                    "stack_var": 1,
                    "temp_var2": 1,
                    "temp_word": 1,
                    "var2": 1
                }
            },
            "called": [
                "FUN_08004300"
            ],
            "calling": [
                "FUN_0800411c"
            ],
            "code": "\n\n\nvoid send_frame_to_msp_08004384(undefined4 param1,undefined4 param2,undefined4 param3,uint flags)\n\n{\n  undefined4 frame_data;\n  undefined4 constant_value;\n  uint masked_flags;\n  \n  _DAT_200013bd = 0x2a0007;\n  frame_data = _DAT_200013b9;\n  constant_value = 0x2a0007;\n  _DAT_200013c1 = 0;\n  DAT_200013c3 = 0;\n  masked_flags = flags & 0xff000000;\n  MSP_SendFrame(0x65,&frame_data,0xb,0,param1);\n  return;\n}\n\n",
            "current_name": "send_frame_to_msp_08004384",
            "entrypoint": "0x08004384",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004384": "send_frame_to_msp_08004384",
                "local_14": "frame_data",
                "local_c": "masked_flags",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "flags",
                "uStack_10": "constant_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080043bc": {
            "additional_data": {
                "FUN_08004300": {
                    "prepare_frame_data": 1,
                    "process_data": 2,
                    "send_data": 3
                },
                "FUN_080043bc": {
                    "send_data": 3,
                    "send_data_frame": 1,
                    "send_data_packet": 1,
                    "send_frame": 2,
                    "send_frame_data": 14,
                    "send_frame_to_msp": 4,
                    "send_frame_with_data": 4,
                    "send_frame_with_local_data": 1,
                    "send_modified_frame": 1
                },
                "local_1c": {
                    "address_buffer": 1,
                    "counter": 1,
                    "frame_array": 2,
                    "frame_data": 3,
                    "frame_header": 1,
                    "frame_headers": 1,
                    "frame_index": 1,
                    "frame_indices": 1,
                    "frame_info": 3,
                    "frame_lengths": 2,
                    "frame_meta_data": 1,
                    "index_array": 3,
                    "input_data": 1,
                    "length_array": 1,
                    "loop_counter": 1,
                    "meta_data": 1,
                    "packet_header": 1,
                    "temp_array": 1,
                    "temp_buffer": 3,
                    "temporary_buffer": 1,
                    "temporary_storage": 1
                },
                "local_24": {
                    "copied_data": 4,
                    "data_array": 2,
                    "data_buffer": 7,
                    "data_copy": 1,
                    "destination_data": 1,
                    "frame_data": 13,
                    "modified_data": 1,
                    "packet_data": 1,
                    "param_array": 1
                },
                "param_1": {
                    "data_index": 1,
                    "data_length": 1,
                    "data_type": 1,
                    "frame_id": 1,
                    "frame_identifier": 1,
                    "frame_index": 1,
                    "frame_type": 5,
                    "source_address": 1
                },
                "param_2": {
                    "data": 7,
                    "data_buffer": 3,
                    "frame_data": 2
                },
                "param_3": {
                    "buffer_size": 1,
                    "data_length": 6,
                    "data_size": 4,
                    "frame_length": 1
                },
                "puVar3": {
                    "current_frame_data": 1,
                    "data_buffer_ptr": 1,
                    "dest_data": 1,
                    "dest_ptr": 1,
                    "destination": 2,
                    "destination_data": 1,
                    "destination_ptr": 1,
                    "frame_data_ptr": 2,
                    "local_array_ptr": 1,
                    "local_data": 1,
                    "local_data_pointer": 1,
                    "local_data_ptr": 1,
                    "param_array_index": 1,
                    "pointer_to_destination_data": 1,
                    "temp_ptr_1": 1
                },
                "puVar4": {
                    "current_frame_header": 1,
                    "data_array_ptr": 1,
                    "data_index": 1,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "frame_index_ptr": 1,
                    "pointer_to_source_data": 1,
                    "source": 2,
                    "source_data": 2,
                    "source_data_ptr": 1,
                    "source_ptr": 2,
                    "src_data": 1,
                    "temp_ptr_2": 1
                },
                "uVar1": {
                    "param1": 1,
                    "part1": 1,
                    "temp1": 3,
                    "temp_1": 2,
                    "temp_value": 1,
                    "temp_value1": 2,
                    "temp_value_1": 1,
                    "temp_var1": 1,
                    "value1": 2
                },
                "uVar2": {
                    "next_temp_value": 1,
                    "param2": 1,
                    "part2": 1,
                    "temp2": 3,
                    "temp_2": 2,
                    "temp_value2": 2,
                    "temp_value_2": 1,
                    "temp_var2": 1,
                    "value2": 2
                }
            },
            "called": [
                "FUN_08004300"
            ],
            "calling": [
                "FUN_0800411c"
            ],
            "code": "\nvoid send_frame_with_local_data_080043bc(void)\n\n{\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 *frame_data_ptr;\n  undefined4 *data_ptr;\n  undefined4 frame_data [2];\n  undefined2 index_array [6];\n  \n  data_ptr = (undefined4 *)&DAT_2000142a;\n  frame_data_ptr = frame_data;\n  do {\n    temp1 = *data_ptr;\n    temp2 = data_ptr[1];\n    data_ptr = data_ptr + 2;\n    *frame_data_ptr = temp1;\n    frame_data_ptr[1] = temp2;\n    frame_data_ptr = frame_data_ptr + 2;\n  } while (data_ptr != (undefined4 *)&DAT_2000143a);\n  *(undefined2 *)frame_data_ptr = DAT_2000143a;\n  MSP_SendFrame(0x66,frame_data,0x12);\n  return;\n}\n\n",
            "current_name": "send_frame_with_local_data_080043bc",
            "entrypoint": "0x080043bc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080043bc": "send_frame_with_local_data_080043bc",
                "local_1c": "index_array",
                "local_24": "frame_data",
                "puVar3": "frame_data_ptr",
                "puVar4": "data_ptr",
                "uVar1": "temp1",
                "uVar2": "temp2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080043f0": {
            "additional_data": {
                "FUN_080043f0": {
                    "send_data": 1,
                    "send_data_frame": 3,
                    "send_frame": 5,
                    "send_frame_data": 4,
                    "send_frame_to_msp": 18
                },
                "auStack_8": {
                    "additional_data": 1,
                    "array_param": 1,
                    "aux_stack": 1,
                    "auxiliary_data": 2,
                    "data_array": 1,
                    "data_list": 1,
                    "frame_buffer": 2,
                    "frame_data": 6,
                    "frame_data_array": 1,
                    "frame_parameters": 2,
                    "frame_params": 5,
                    "frame_payload": 1,
                    "msp_array": 2,
                    "msp_params": 1,
                    "other_params": 1,
                    "values_array": 1
                },
                "local_10": {
                    "data1": 3,
                    "data_1": 2,
                    "data_3": 1,
                    "data_num": 1,
                    "frame_buffer1": 1,
                    "frame_data": 1,
                    "frame_data1": 1,
                    "frame_header": 5,
                    "frame_start": 3,
                    "msp_address": 3,
                    "msp_data1": 3,
                    "msp_data_1": 1,
                    "msp_value1": 2,
                    "msp_value_1": 1,
                    "source_port": 1,
                    "value1": 1
                },
                "param_1": {
                    "arg1": 11,
                    "data1": 1,
                    "data_1": 1,
                    "data_pointer": 1,
                    "data_size": 1,
                    "frame_type": 1,
                    "input_param1": 1,
                    "input_param_1": 1,
                    "param1": 4,
                    "param_1": 2,
                    "source": 1,
                    "source_ip": 1,
                    "unknown1": 1,
                    "unused": 1,
                    "unused_param": 2,
                    "unused_param_1": 1
                },
                "param_2": {
                    "arg2": 10,
                    "buffer": 2,
                    "data": 2,
                    "data2": 1,
                    "data_buffer": 2,
                    "destination_ip": 1,
                    "frame_data": 1,
                    "input_param2": 1,
                    "input_param_2": 1,
                    "param2": 4,
                    "param_2": 1,
                    "unknown2": 1,
                    "unused": 1,
                    "unused_param": 2,
                    "unused_param_2": 1
                },
                "param_3": {
                    "arg3": 11,
                    "buffer_size": 1,
                    "data3": 1,
                    "data_2": 1,
                    "data_size": 1,
                    "frame_data": 5,
                    "frame_type": 1,
                    "input_param3": 1,
                    "input_param_3": 1,
                    "param3": 4,
                    "param_3": 1,
                    "payload": 1,
                    "size": 1,
                    "unknown3": 1
                },
                "uStack_c": {
                    "data2": 3,
                    "data_2": 2,
                    "data_4": 1,
                    "data_type": 1,
                    "destination_port": 1,
                    "frame_buffer2": 1,
                    "frame_data": 3,
                    "frame_data2": 1,
                    "frame_end": 3,
                    "frame_footer": 2,
                    "frame_size": 1,
                    "msp_data": 1,
                    "msp_data2": 3,
                    "msp_data_2": 1,
                    "msp_value": 2,
                    "msp_value2": 2,
                    "msp_value_2": 1,
                    "value2": 1
                }
            },
            "called": [
                "FUN_08004300"
            ],
            "calling": [
                "FUN_0800411c"
            ],
            "code": "\n\n\nvoid send_frame_to_msp_080043f0(undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  undefined4 frame_header;\n  undefined4 frame_end;\n  undefined4 frame_data [2];\n  \n  frame_header = _DAT_200013dd;\n  frame_end = _DAT_200013e1;\n  frame_data[0] = arg3;\n  MSP_SendFrame(0x68,&frame_header,8,frame_data);\n  return;\n}\n\n",
            "current_name": "send_frame_to_msp_080043f0",
            "entrypoint": "0x080043f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080043f0": "send_frame_to_msp_080043f0",
                "auStack_8": "frame_data",
                "local_10": "frame_header",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "uStack_c": "frame_end"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004410": {
            "additional_data": {
                "FUN_08004410": {
                    "send_data": 2,
                    "send_data_frame": 2,
                    "send_data_packet": 1,
                    "send_frame": 6,
                    "send_frame_data": 6,
                    "send_frame_over_msp": 1,
                    "send_frame_to_device": 1,
                    "send_frame_to_msp": 11,
                    "send_frame_with_data": 1
                },
                "MSP_SendFrame": {
                    "send_frame_to_msp": 1
                },
                "local_10": {
                    "constant_value": 3,
                    "constant_value_1": 1,
                    "data1": 2,
                    "data4": 1,
                    "data_start": 1,
                    "device_config": 1,
                    "frame_data": 4,
                    "frame_header": 2,
                    "frame_id": 1,
                    "frame_type": 1,
                    "header": 1,
                    "header_data": 1,
                    "local_data1": 1,
                    "local_value": 1,
                    "msp_data": 1,
                    "msp_data_1": 1,
                    "some_data": 1,
                    "some_variable": 1,
                    "source_address": 1
                },
                "local_c": {
                    "combined_data": 1,
                    "combined_param": 2,
                    "concatenated_data": 5,
                    "concatenated_value": 1,
                    "constant_value_2": 1,
                    "data2": 2,
                    "data5": 1,
                    "data_to_be_sent": 1,
                    "formatted_data": 1,
                    "frame_data": 3,
                    "frame_header": 1,
                    "frame_id": 1,
                    "header_value": 1,
                    "local_data2": 1,
                    "modified_source_address": 1,
                    "msp_data_2": 1,
                    "param2_with_high_bits": 1,
                    "processed_param2": 1
                },
                "param_1": {
                    "arg1": 5,
                    "data1": 2,
                    "device_id": 1,
                    "frame_id": 1,
                    "frame_type": 1,
                    "network_id": 1,
                    "param1": 5,
                    "param_1": 1,
                    "socket": 1,
                    "some_param": 1,
                    "unused": 6,
                    "unused_param": 6
                },
                "param_2": {
                    "arg2": 4,
                    "buffer": 1,
                    "data": 7,
                    "data2": 2,
                    "data_ptr": 1,
                    "data_to_be_sent": 1,
                    "frame_data": 6,
                    "packed_data": 1,
                    "param2": 5,
                    "param2_converted": 1,
                    "param_2": 1,
                    "source_address": 1
                },
                "param_3": {
                    "arg3": 4,
                    "data": 1,
                    "data3": 2,
                    "data_length": 2,
                    "data_size": 1,
                    "frame_length": 2,
                    "frame_size": 5,
                    "length": 7,
                    "param3": 6,
                    "param_3": 1
                },
                "uStack_8": {
                    "arg3": 2,
                    "arg3_copy": 1,
                    "data3": 2,
                    "data6": 1,
                    "data_length": 1,
                    "data_param": 1,
                    "frame_length": 2,
                    "frame_size": 1,
                    "local_data3": 1,
                    "msp_data_3": 1,
                    "param3_copy": 2,
                    "param3_stack": 1,
                    "param_3_copy": 1,
                    "stack_data": 2,
                    "stack_variable": 1,
                    "unused": 4,
                    "unused_stack": 1,
                    "unused_variable": 1
                }
            },
            "called": [
                "FUN_08004300"
            ],
            "calling": [
                "FUN_0800411c"
            ],
            "code": "\nvoid send_frame_to_msp_08004410(undefined4 unused_param,undefined4 data,undefined4 length)\n\n{\n  undefined4 frame_data;\n  undefined4 concatenated_data;\n  undefined4 unused;\n  \n  frame_data = DAT_20001395;\n  concatenated_data = CONCAT22((short)((uint)data >> 0x10),DAT_20001399);\n  unused = length;\n  send_frame_to_msp_08004410(0x6c,&frame_data,6);\n  return;\n}\n\n",
            "current_name": "send_frame_to_msp_08004410",
            "entrypoint": "0x08004410",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004410": "send_frame_to_msp_08004410",
                "MSP_SendFrame": "send_frame_to_msp",
                "local_10": "frame_data",
                "local_c": "concatenated_data",
                "param_1": "unused_param",
                "param_2": "data",
                "param_3": "length",
                "uStack_8": "unused"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004434": {
            "additional_data": {
                "FUN_08004300": {
                    "send_frame": 1
                },
                "FUN_08004434": {
                    "send_data_frame": 2,
                    "send_data_to_msp": 2,
                    "send_frame": 8,
                    "send_frame_to_msp": 17,
                    "send_frame_with_data": 1
                },
                "local_10": {
                    "config_value": 1,
                    "constant_data": 1,
                    "data1": 1,
                    "destination_address": 1,
                    "frame_address": 1,
                    "frame_content": 1,
                    "frame_data": 3,
                    "frame_header": 2,
                    "frame_type": 1,
                    "local_var1": 1,
                    "msp_address": 3,
                    "msp_config": 1,
                    "msp_config_value": 1,
                    "msp_data": 3,
                    "msp_frame_header": 1,
                    "msp_value": 1
                },
                "local_c": {
                    "combined_value": 1,
                    "concat_value": 2,
                    "concatenated_data": 2,
                    "concatenated_param": 1,
                    "concatenated_value": 4,
                    "data2": 1,
                    "frame_data": 3,
                    "frame_header": 1,
                    "frame_info": 1,
                    "frame_length": 1,
                    "frame_payload": 1,
                    "local_var2": 1,
                    "msp_config": 1,
                    "msp_frame_data": 1,
                    "msp_param": 1,
                    "updated_data": 1
                },
                "param_1": {
                    "": 1,
                    "address": 1,
                    "arg1": 2,
                    "frame_type": 2,
                    "input_data": 1,
                    "param1": 3,
                    "undefined1": 1,
                    "unk_param_1": 1,
                    "unknown_param_1": 1,
                    "unused": 9,
                    "unused_param": 6,
                    "unused_param1": 3
                },
                "param_2": {
                    "arg2": 2,
                    "data": 10,
                    "data_ptr": 1,
                    "data_value": 1,
                    "frame_data": 6,
                    "frame_data_length": 1,
                    "input_data": 1,
                    "input_param": 1,
                    "param2": 4,
                    "source_address": 1,
                    "source_data": 1,
                    "undefined2": 1,
                    "unk_param_2": 1
                },
                "param_3": {
                    "arg3": 2,
                    "data": 1,
                    "data_len": 1,
                    "data_length": 1,
                    "frame_data": 1,
                    "frame_length": 3,
                    "frame_size": 5,
                    "length": 7,
                    "param3": 4,
                    "size": 3,
                    "undefined3": 1,
                    "unk_param_3": 1,
                    "unused_param2": 1
                },
                "uStack_8": {
                    "data3": 1,
                    "frame_data": 2,
                    "frame_length": 1,
                    "frame_param": 1,
                    "frame_size": 3,
                    "frame_type": 4,
                    "local_var3": 1,
                    "param3_value": 1,
                    "param_3": 1,
                    "param_value": 1,
                    "stack_data": 1,
                    "stack_variable": 1,
                    "unused": 1,
                    "unused_param2": 1,
                    "unused_variable": 2
                }
            },
            "called": [
                "FUN_08004300"
            ],
            "calling": [
                "FUN_0800411c"
            ],
            "code": "\nvoid send_frame_to_msp_08004434(undefined4 unused,undefined4 data,undefined4 length)\n\n{\n  undefined4 msp_address;\n  undefined4 concatenated_value;\n  undefined4 frame_type;\n  \n  msp_address = DAT_200014ab;\n  concatenated_value = CONCAT22((short)((uint)data >> 0x10),DAT_200014af);\n  frame_type = length;\n  MSP_SendFrame(0x6d,&msp_address,6);\n  return;\n}\n\n",
            "current_name": "send_frame_to_msp_08004434",
            "entrypoint": "0x08004434",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004434": "send_frame_to_msp_08004434",
                "local_10": "msp_address",
                "local_c": "concatenated_value",
                "param_1": "unused",
                "param_2": "data",
                "param_3": "length",
                "uStack_8": "frame_type"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004458": {
            "additional_data": {
                "FUN_08004300": {
                    "process_data": 1,
                    "process_frame": 1
                },
                "FUN_08004458": {
                    "send_data": 5,
                    "send_data_frame": 2,
                    "send_data_packet": 1,
                    "send_frame": 7,
                    "send_frame_and_copy_data": 1,
                    "send_frame_data": 9,
                    "send_frame_to_msp": 1,
                    "send_frame_with_local_values": 1,
                    "send_frames": 1,
                    "send_local_data_frame": 1,
                    "send_modified_frame": 1,
                    "send_updated_data": 1
                },
                "local_24": {
                    "address_array": 1,
                    "buffer": 3,
                    "buffer_b": 1,
                    "buffer_data": 1,
                    "data_array_2": 1,
                    "data_buffer": 1,
                    "frame_array": 2,
                    "frame_buffer": 1,
                    "frame_data": 2,
                    "frame_ids": 1,
                    "frame_indices": 1,
                    "frame_metadata": 1,
                    "frame_size": 1,
                    "frame_values": 1,
                    "modified_indices": 1,
                    "source": 1,
                    "source_array": 1,
                    "source_data": 1,
                    "src_array": 1,
                    "src_buffer": 1,
                    "temp_array_2": 1,
                    "temp_buffer": 1,
                    "temp_data": 2,
                    "unused_array": 1,
                    "updated_data_info": 1
                },
                "local_30": {
                    "buffer": 1,
                    "buffer_a": 1,
                    "copied_data": 1,
                    "data_array": 4,
                    "data_chunk": 1,
                    "data_packet": 1,
                    "dest_array": 2,
                    "dest_buffer": 1,
                    "destination": 1,
                    "frame_buffer": 2,
                    "frame_data": 10,
                    "frame_data_array": 1,
                    "modified_data": 2,
                    "temp_array": 1,
                    "updated_data": 1
                },
                "param_1": {
                    "data": 1,
                    "data_type": 1,
                    "frame_id": 5,
                    "frame_type": 4,
                    "param1": 3,
                    "param_a": 1
                },
                "param_2": {
                    "buffer": 1,
                    "data": 7,
                    "data_buffer": 1,
                    "frame_data": 1,
                    "param2": 3,
                    "param_b": 1,
                    "response_buffer": 1
                },
                "param_3": {
                    "buffer_size": 1,
                    "data_length": 7,
                    "frame_length": 1,
                    "length": 1,
                    "param3": 3,
                    "param_c": 1,
                    "size": 1
                },
                "puVar1": {
                    "buffer_ptr": 1,
                    "current_element": 1,
                    "current_frame_data": 1,
                    "data_ptr": 1,
                    "dest": 1,
                    "dest_array": 1,
                    "dest_array_ptr": 1,
                    "dest_buffer": 1,
                    "dest_ptr": 6,
                    "destination": 5,
                    "destination_data": 1,
                    "dst_ptr": 1,
                    "frame_data_ptr": 1,
                    "packet_ptr_src": 1,
                    "source": 1,
                    "src_ptr": 1,
                    "updated_data_ptr1": 1
                },
                "puVar2": {
                    "data_ptr": 3,
                    "dest_ptr": 1,
                    "destination": 1,
                    "original_data_ptr": 1,
                    "packet_ptr_dst": 1,
                    "source": 5,
                    "source_array": 1,
                    "source_array_ptr": 1,
                    "source_buffer": 1,
                    "source_data": 2,
                    "source_element": 1,
                    "src": 1,
                    "src_ptr": 7
                },
                "puVar4": {
                    "current_buffer_ptr": 1,
                    "current_destination": 1,
                    "dest_ptr": 8,
                    "dest_ptr2": 1,
                    "dest_ptr_2": 2,
                    "dest_ptr_prev": 1,
                    "dest_ptr_temp": 2,
                    "destination_element": 1,
                    "destination_iter": 1,
                    "dst_ptr2": 1,
                    "frame_ptr": 1,
                    "new_data_ptr": 1,
                    "packet_ptr_src_temp": 1,
                    "source_ptr": 1,
                    "src_ptr_copy": 1,
                    "target_frame_data": 1,
                    "updated_data_ptr2": 1
                },
                "puVar5": {
                    "current_data_ptr": 1,
                    "current_ptr": 1,
                    "current_source": 1,
                    "current_source_data": 1,
                    "dest_ptr_copy": 1,
                    "destination_ptr": 1,
                    "original_ptr": 1,
                    "packet_ptr_dst_temp": 1,
                    "source_iter": 1,
                    "source_pointer": 1,
                    "source_ptr": 3,
                    "src_ptr": 5,
                    "src_ptr2": 2,
                    "src_ptr_2": 2,
                    "src_ptr_prev": 1,
                    "src_ptr_temp": 2,
                    "temp_ptr": 1
                },
                "uRam200013b3": {
                    "ram_var": 1
                },
                "uVar3": {
                    "temp": 9,
                    "temp_data": 1,
                    "temp_val": 2,
                    "temp_value": 7,
                    "temp_var": 4,
                    "temp_variable": 3
                }
            },
            "called": [
                "FUN_08004300"
            ],
            "calling": [
                "FUN_0800411c"
            ],
            "code": "\nvoid send_frame_and_copy_data_08004458(void)\n\n{\n  undefined4 *dest_ptr;\n  undefined4 *src_ptr;\n  undefined4 temp;\n  undefined4 *dest_ptr;\n  undefined4 *src_ptr;\n  undefined4 frame_data [3];\n  undefined2 buffer [10];\n  \n  dest_ptr = frame_data;\n  src_ptr = &DAT_2000139b;\n  do {\n    src_ptr = src_ptr;\n    dest_ptr = dest_ptr;\n    temp = src_ptr[1];\n    *dest_ptr = *src_ptr;\n    dest_ptr[1] = temp;\n    dest_ptr = dest_ptr + 2;\n    src_ptr = src_ptr + 2;\n  } while (src_ptr + 2 != (undefined4 *)0x200013b3);\n  dest_ptr[2] = ram_var;\n  *(undefined2 *)(dest_ptr + 3) = *(undefined2 *)(src_ptr + 3);\n  MSP_SendFrame(0x70,frame_data,0x1e);\n  return;\n}\n\n",
            "current_name": "send_frame_and_copy_data_08004458",
            "entrypoint": "0x08004458",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004458": "send_frame_and_copy_data_08004458",
                "local_24": "buffer",
                "local_30": "frame_data",
                "puVar1": "dest_ptr",
                "puVar2": "src_ptr",
                "puVar4": "dest_ptr",
                "puVar5": "src_ptr",
                "uRam200013b3": "ram_var",
                "uVar3": "temp"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004490": {
            "additional_data": {
                "FUN_08004490": {
                    "error_handler": 2,
                    "error_handling": 10,
                    "error_handling_function": 2,
                    "error_handling_loop": 2,
                    "handle_error": 11,
                    "print_error": 1,
                    "print_error_message": 1,
                    "toggle_error_led": 1,
                    "toggle_gpio_error": 1
                },
                "HAL_GPIO_TogglePin": {
                    "toggle_gpio_pin": 1,
                    "toggle_gpio_pin_state": 1,
                    "toggle_gpio_state": 3,
                    "toggle_pin": 1,
                    "toggle_pin_state": 2
                },
                "HAL_GPIO_WritePin": {
                    "set_gpio_pin": 1,
                    "set_gpio_pin_state": 1,
                    "set_gpio_state": 2,
                    "set_pin_state": 2,
                    "toggle_gpio_state": 1,
                    "write_pin": 1
                },
                "delay_ms": {
                    "delay_milliseconds": 8
                },
                "param_1": {
                    "device": 1,
                    "error_code": 19,
                    "error_description": 2,
                    "error_flag": 1,
                    "error_source": 1,
                    "error_type": 7
                },
                "param_2": {
                    "error_line": 8,
                    "error_line_number": 1,
                    "line_number": 22
                },
                "serialInt": {
                    "print_integer": 8
                },
                "serialPrint": {
                    "print_error_message": 7,
                    "print_string": 1
                },
                "serialWrite": {
                    "write_new_line": 2,
                    "write_newline": 1,
                    "write_serial": 2,
                    "write_to_serial": 3
                }
            },
            "called": [
                "FUN_08004cac",
                "FUN_08004c18",
                "FUN_08004f64",
                "FUN_08004c8c",
                "FUN_08001424",
                "FUN_0800142e"
            ],
            "calling": [
                "FUN_0800458c",
                "FUN_0800403c",
                "FUN_08004514",
                "FUN_0800407c",
                "FUN_080040b8"
            ],
            "code": "\nvoid error_handling_function_08004490(undefined4 error_code,undefined4 line_number)\n\n{\n  set_pin_state(0x40011000,0x4000,1);\n  set_pin_state(0x40011000,0x8000,0);\n  set_pin_state(0x40011000,0x2000,0);\n  do {\n    toggle_gpio_state(0x40011000,0x4000);\n    toggle_gpio_state(0x40011000,0x8000);\n    toggle_gpio_state(0x40011000,0x2000);\n    print_error_message(\"Error with \");\n    print_error_message(error_code);\n    print_error_message(\" at line: \");\n    print_integer(line_number);\n    write_to_serial(10);\n    delay_milliseconds(500);\n  } while( true );\n}\n\n",
            "current_name": "error_handling_function_08004490",
            "entrypoint": "0x08004490",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004490": "error_handling_function_08004490",
                "HAL_GPIO_TogglePin": "toggle_gpio_state",
                "HAL_GPIO_WritePin": "set_pin_state",
                "delay_ms": "delay_milliseconds",
                "param_1": "error_code",
                "param_2": "line_number",
                "serialInt": "print_integer",
                "serialPrint": "print_error_message",
                "serialWrite": "write_to_serial"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004514": {
            "additional_data": {
                "FUN_08001194": {
                    "initialize_oscillator": 1
                },
                "FUN_08001214": {
                    "set_priority": 1
                },
                "FUN_08001240": {
                    "set_sys_tick_config": 1
                },
                "FUN_08001b58": {
                    "error_handler": 1
                },
                "FUN_0800209c": {
                    "configure_clock": 1
                },
                "FUN_08002214": {
                    "get_hclk_freq": 1
                },
                "FUN_08004490": {
                    "set_priority": 1
                },
                "FUN_08004514": {
                    "configure_peripherals": 1,
                    "initialize_clock": 5,
                    "initialize_hardware": 2,
                    "initialize_peripherals": 1,
                    "initialize_system": 22
                },
                "HAL_NVIC_SetPriority": {
                    "set_priority": 2
                },
                "HAL_RCC_ClockConfig": {
                    "configure_clock": 2
                },
                "HAL_RCC_GetHCLKFreq": {
                    "get_hclk_freq": 1,
                    "get_hclk_frequency": 1
                },
                "HAL_RCC_OscConfig": {
                    "configure_oscillator": 2
                },
                "HAL_SYSTICK_CLKSourceConfig": {
                    "configure_sys_tick_clk_source": 1,
                    "configure_sys_tick_clock_source": 1
                },
                "HAL_SYSTICK_Config": {
                    "configure_sys_tick": 2
                },
                "_Error_Handler": {
                    "handle_error": 2
                },
                "iVar1": {
                    "config_status": 1,
                    "error": 1,
                    "error_code": 1,
                    "error_handler_status": 1,
                    "error_status": 1,
                    "osc_config_result": 2,
                    "osc_status": 1,
                    "oscillator_config_result": 2,
                    "oscillator_config_ret_val": 1,
                    "oscillator_config_status": 1,
                    "oscillator_error": 1,
                    "oscillator_function_return": 1,
                    "oscillator_status": 1,
                    "rcc_status": 1,
                    "result": 7,
                    "result1": 1,
                    "return_value": 1,
                    "return_value1": 1,
                    "status": 1
                },
                "iVar4": {
                    "clock_config": 2,
                    "clock_config_error": 1,
                    "clock_config_result": 5,
                    "clock_config_ret_val": 1,
                    "clock_config_status_temp": 1,
                    "clock_config_value": 2,
                    "clock_source": 2,
                    "clock_status": 2,
                    "config_result": 2,
                    "config_status_2": 1,
                    "return_value2": 1,
                    "sys_tick_status": 1
                },
                "local_10": {
                    "ahb_prescaler": 1,
                    "clk_osc_freq": 1,
                    "config_param4": 2,
                    "error_status": 1,
                    "flag4": 1,
                    "flash_latency": 1,
                    "hclk_prescaler": 1,
                    "local_variable4": 1,
                    "osc_mode": 1,
                    "osc_pwr_mode": 1,
                    "oscillator_config_data4": 1,
                    "oscillator_division": 1,
                    "oscillator_status": 1,
                    "pll_source": 1,
                    "pllp_config": 1,
                    "pllp_divider": 1,
                    "priority": 1,
                    "sys_tick_config": 1,
                    "sys_tick_priority": 3,
                    "systick_config_param4": 1,
                    "trace_system": 1,
                    "val4": 1,
                    "value4": 2,
                    "var4": 1,
                    "voltage_range": 1
                },
                "local_14": {
                    "apb1_prescaler": 1,
                    "clk_osc_voltage": 1,
                    "clock_config_source": 1,
                    "clock_source": 1,
                    "config_param3": 2,
                    "error_delay": 1,
                    "error_handler": 1,
                    "flag3": 1,
                    "internal_voltage_scale": 1,
                    "local_variable3": 1,
                    "main_source": 1,
                    "osc_state": 1,
                    "osc_voltage": 1,
                    "oscillator_config_data3": 1,
                    "oscillator_voltage_scale": 1,
                    "plln_config": 1,
                    "plln_multiplier": 1,
                    "priority_group": 1,
                    "rcc_adc_prescaler": 1,
                    "sys_tick_clk_source": 1,
                    "system_clock": 1,
                    "systick_config_param3": 1,
                    "val3": 1,
                    "value2": 1,
                    "value3": 2,
                    "var3": 1
                },
                "local_1c": {
                    "clk_osc_bypass": 1,
                    "clock_speed": 1,
                    "config_number": 1,
                    "config_param2": 2,
                    "flag2": 1,
                    "flash_latency": 1,
                    "local_variable2": 1,
                    "osc_source": 1,
                    "osc_type": 1,
                    "osc_value": 1,
                    "osc_voltage": 1,
                    "oscillator_bypass": 1,
                    "oscillator_config": 1,
                    "oscillator_config_data2": 1,
                    "oscillator_config_size": 1,
                    "oscillator_frequency": 2,
                    "oscillator_mode": 1,
                    "oscillator_value": 1,
                    "pllm_divider": 1,
                    "rcc_config": 1,
                    "sys_tick_clock_source": 1,
                    "system_clock_source": 1,
                    "systick_config_param2": 1,
                    "val2": 1,
                    "value2": 2,
                    "var2": 1,
                    "voltage_scale": 1
                },
                "local_20": {
                    "clk_osc_type": 1,
                    "config_flag": 1,
                    "config_param1": 2,
                    "enable_oscillator": 1,
                    "enable_power_control": 1,
                    "flag1": 1,
                    "flash_latency": 1,
                    "hsi_divider": 1,
                    "local_variable1": 1,
                    "osc_mode": 1,
                    "osc_type": 2,
                    "osc_window": 1,
                    "oscillator_config_data1": 1,
                    "oscillator_config_index": 1,
                    "oscillator_enable": 1,
                    "oscillator_type": 4,
                    "power_config": 1,
                    "prescaler_value": 1,
                    "reset_type": 1,
                    "sys_tick_config": 1,
                    "systick_config_param1": 1,
                    "val1": 1,
                    "value1": 3,
                    "var1": 1
                },
                "local_30": {
                    "array": 1,
                    "clk_osc_config": 1,
                    "clock_config_array": 1,
                    "clock_config_params": 1,
                    "config_array": 1,
                    "config_params": 1,
                    "osc_config": 6,
                    "osc_config_array": 1,
                    "osc_config_params": 1,
                    "osc_init_struct": 1,
                    "oscillator_config": 5,
                    "oscillator_config_array": 1,
                    "oscillator_config_data": 1,
                    "oscillator_params": 1,
                    "param6": 1,
                    "param_array": 1,
                    "parameters": 1,
                    "rcc_osc_config": 2
                },
                "local_34": {
                    "apb2_config": 1,
                    "apb2_prescaler": 1,
                    "c5": 1,
                    "clk_config_temp": 1,
                    "clock_config3": 1,
                    "clock_config_data2": 1,
                    "clock_config_param4": 1,
                    "clock_config_result2": 1,
                    "clock_config_return": 1,
                    "clock_config_status2": 1,
                    "clock_freq": 1,
                    "clock_source2": 1,
                    "configured_clock": 1,
                    "error2": 1,
                    "error_handler2": 1,
                    "flash_wait_state2": 1,
                    "hclk_result": 1,
                    "i_var2": 1,
                    "i_var4": 1,
                    "param5": 2,
                    "rcc_clkout1source": 1,
                    "rcc_status": 1,
                    "sys_tick_config": 1,
                    "sys_tick_config_error": 1,
                    "system_clock": 1,
                    "systick_preemption_priority": 1,
                    "variable4": 1
                },
                "local_38": {
                    "apb1_config": 1,
                    "apb1_prescaler": 1,
                    "c4": 1,
                    "clk_config": 1,
                    "clock_config": 1,
                    "clock_config2": 1,
                    "clock_config_data": 1,
                    "clock_config_param1": 1,
                    "clock_config_param3": 1,
                    "clock_config_value": 1,
                    "clock_configuration": 1,
                    "clock_div": 1,
                    "clock_divisor": 1,
                    "clock_freq": 1,
                    "clock_slave_config": 1,
                    "clock_source": 2,
                    "clock_speed": 1,
                    "core_clock": 1,
                    "flash_wait_state": 1,
                    "param4": 2,
                    "parameter2": 2,
                    "rcc_clkout0source": 1,
                    "source_clk": 1,
                    "sys_clock_config": 1,
                    "systick_reload_value": 1,
                    "variable3": 1
                },
                "local_3c": {
                    "ahb_config": 1,
                    "ahb_prescaler": 1,
                    "c3": 1,
                    "clk_status_temp": 1,
                    "clksys_failure_tick": 1,
                    "clock_config1": 1,
                    "clock_config_error": 1,
                    "clock_config_param2": 1,
                    "clock_config_result": 1,
                    "clock_config_status": 1,
                    "clock_freq": 1,
                    "error1": 1,
                    "error_code": 1,
                    "error_handler1": 1,
                    "error_handler_result": 1,
                    "error_handler_ret_val": 1,
                    "error_param": 1,
                    "error_status": 2,
                    "error_value": 1,
                    "i_var1": 2,
                    "oscillator_status": 1,
                    "param3": 3,
                    "rcc_error": 1,
                    "rcc_oscillator_status": 1,
                    "sys_clock_status": 1,
                    "variable2": 1
                },
                "local_40": {
                    "c2": 1,
                    "clk_divider": 1,
                    "clk_status": 1,
                    "clock": 1,
                    "clock_config_param": 1,
                    "clock_config_param1": 1,
                    "clock_config_param2": 1,
                    "clock_config_status": 1,
                    "clock_source": 5,
                    "clock_source_status": 1,
                    "clock_speed": 1,
                    "clock_type": 3,
                    "hclk_prescaler": 1,
                    "i_var": 2,
                    "oscillator_type": 2,
                    "param2": 3,
                    "pllsource": 1,
                    "rcc_config_result": 1,
                    "sys_clock_freq": 1,
                    "sysclk_source": 1,
                    "variable1": 1
                },
                "local_44": {
                    "c1": 1,
                    "clock_master_config": 1,
                    "clock_source": 1,
                    "error_code": 1,
                    "error_flag": 2,
                    "error_handler_flag": 1,
                    "error_interrupt": 1,
                    "error_mask": 1,
                    "flash_latency": 1,
                    "gpio_afr": 1,
                    "gpio_port": 1,
                    "oscillator_type": 2,
                    "param1": 3,
                    "parameter1": 2,
                    "peripheral_clock": 1,
                    "power_mode": 1,
                    "prescaler_value": 1,
                    "rcc_osc_type": 1,
                    "rcc_oscillator_type": 1,
                    "source_clk_freq": 1,
                    "systick_priority": 1,
                    "timeout": 1,
                    "timeout_value": 1,
                    "tmr_delay": 1,
                    "volatile_reg": 1
                },
                "local_c": {
                    "clk_osc_clock_source": 1,
                    "clock_config": 1,
                    "clock_frequency": 2,
                    "clock_msi_config": 1,
                    "clock_source_config": 1,
                    "config_param5": 2,
                    "flag5": 1,
                    "hsi_value": 1,
                    "local_variable5": 1,
                    "osc_ovr": 1,
                    "oscillator_config_data5": 1,
                    "oscillator_frequency": 1,
                    "oscillator_rcc_value": 1,
                    "pll_configuration": 1,
                    "pllm_config": 1,
                    "plln": 1,
                    "pllr_divider": 1,
                    "rcc_clk_init": 1,
                    "rcc_config": 2,
                    "sys_tick_clk_source": 1,
                    "systick_config_param5": 1,
                    "val5": 1,
                    "value3": 1,
                    "value5": 2,
                    "var5": 1
                },
                "uVar2": {
                    "freq": 1,
                    "frequency": 2,
                    "hclk_freq": 12,
                    "hclk_frequency": 9,
                    "return_value3": 1,
                    "sys_tick_freq": 2
                },
                "uVar3": {
                    "counter": 1,
                    "error_handler_line": 1,
                    "error_handler_param": 1,
                    "error_line": 2,
                    "error_location": 2,
                    "error_message": 1,
                    "error_offset": 1,
                    "file_code": 1,
                    "file_error_line": 1,
                    "file_line": 3,
                    "file_line_number": 1,
                    "file_name": 1,
                    "index": 1,
                    "line_number": 7,
                    "loop_count": 1,
                    "loop_index": 1
                }
            },
            "called": [
                "FUN_08001194",
                "FUN_0800209c",
                "FUN_08002214",
                "FUN_08001b58",
                "FUN_08001240",
                "FUN_08004490",
                "FUN_08001214"
            ],
            "calling": [
                "FUN_0800458c"
            ],
            "code": "\nvoid initialize_system_08004514(void)\n\n{\n  int result;\n  uint hclk_freq;\n  undefined4 line_number;\n  int clock_config_result;\n  undefined4 param1;\n  int clock_source;\n  int param3;\n  undefined4 parameter2;\n  int param5;\n  undefined4 osc_config [4];\n  undefined4 oscillator_type;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 sys_tick_priority;\n  undefined4 rcc_config;\n  \n  oscillator_type = 1;\n  value2 = 0x10;\n  clock_config_result = 2;\n  sys_tick_priority = 0;\n  osc_config[0] = 2;\n  value3 = 2;\n  rcc_config = 0x380000;\n  result = configure_oscillator(osc_config);\n  if (result == 0) goto LAB_08004540;\n  line_number = 0x3c;\n  while( true ) {\n    result = handle_error(\"../Src/peripherals.c\",line_number);\nLAB_08004540:\n    param1 = 0xf;\n    parameter2 = 0x400;\n    clock_source = clock_config_result;\n    param3 = result;\n    param5 = result;\n    clock_config_result = configure_clock(&param1,clock_config_result);\n    if (clock_config_result == 0) break;\n    line_number = 0x49;\n  }\n  hclk_freq = get_hclk_freq();\n  configure_sys_tick(hclk_freq / 1000);\n  configure_sys_tick_clock_source(4);\n  set_priority(0xffffffff,0,0);\n  return;\n}\n\n",
            "current_name": "initialize_system_08004514",
            "entrypoint": "0x08004514",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004514": "initialize_system_08004514",
                "HAL_NVIC_SetPriority": "set_priority",
                "HAL_RCC_ClockConfig": "configure_clock",
                "HAL_RCC_GetHCLKFreq": "get_hclk_freq",
                "HAL_RCC_OscConfig": "configure_oscillator",
                "HAL_SYSTICK_CLKSourceConfig": "configure_sys_tick_clock_source",
                "HAL_SYSTICK_Config": "configure_sys_tick",
                "_Error_Handler": "handle_error",
                "iVar1": "result",
                "iVar4": "clock_config_result",
                "local_10": "sys_tick_priority",
                "local_14": "value3",
                "local_1c": "value2",
                "local_20": "oscillator_type",
                "local_30": "osc_config",
                "local_34": "param5",
                "local_38": "parameter2",
                "local_3c": "param3",
                "local_40": "clock_source",
                "local_44": "param1",
                "local_c": "rcc_config",
                "uVar2": "hclk_freq",
                "uVar3": "line_number"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800458c": {
            "additional_data": {
                "0x40010800": {
                    "gpio_port_c": 1
                },
                "0x40011000": {
                    "gpio_port_g": 1
                },
                "0x40021018": {
                    "gpio_port_cfr": 1
                },
                "DAT_200014c8": {
                    "htim4": 1,
                    "pwm_tim_handle4": 1,
                    "pwm_timer5_handle": 1,
                    "tim10": 1,
                    "tim2_handle": 1,
                    "tim_handle": 1,
                    "tim_handle4": 4,
                    "tim_pwm4_port": 1,
                    "tim_pwm4_register": 1,
                    "tim_pwm_config17": 1,
                    "tim_pwm_handle4": 1,
                    "tim_register17": 1,
                    "timer7_handle": 1,
                    "timer_handle4": 1
                },
                "DAT_200014cc": {
                    "pwm_timer5_prescaler": 1,
                    "tim11": 1,
                    "tim2_prescaler": 1,
                    "tim4_prescaler": 1,
                    "tim_counter_mode": 1,
                    "tim_prescaler": 1,
                    "tim_prescaler4": 2,
                    "tim_prescaler_value4": 1,
                    "tim_pwm4_prescaler": 1,
                    "tim_pwm4_register": 1,
                    "tim_pwm_config18": 1,
                    "tim_register18": 1,
                    "timer4_init_status": 1,
                    "timer7_prescaler": 1
                },
                "DAT_200014d0": {
                    "pwm_timer5_channel": 1,
                    "tim13": 1,
                    "tim2_init_status": 1,
                    "tim4_period": 1,
                    "tim_clock_division": 1,
                    "tim_clock_division4": 1,
                    "tim_init_result4": 1,
                    "tim_prescaler": 1,
                    "tim_pwm4_period": 1,
                    "tim_pwm_channel4": 1,
                    "tim_pwm_config20": 1,
                    "tim_register20": 1,
                    "timer7_prescaler3": 1,
                    "timer_prescaler4": 1
                },
                "DAT_200014d4": {
                    "pwm_timer5_frequency": 1,
                    "tim12": 1,
                    "tim2_period": 1,
                    "tim4_counter_mode": 1,
                    "tim_period": 2,
                    "tim_period4": 2,
                    "tim_pwm4_first_channel": 1,
                    "tim_pwm4_register": 1,
                    "tim_pwm_config19": 1,
                    "tim_register19": 1,
                    "timer7_prescaler2": 1,
                    "timer_period4": 1
                },
                "DAT_200014d8": {
                    "pwm_timer5_pulse": 1,
                    "tim14": 1,
                    "tim2_sync_config_status": 1,
                    "tim4_clock_division": 1,
                    "tim_clock_division": 1,
                    "tim_counter_mode4": 1,
                    "tim_pwm4_register": 1,
                    "tim_pwm4_second_channel": 1,
                    "tim_pwm_config21": 1,
                    "tim_register21": 1,
                    "tim_repetition_counter": 1,
                    "timer4_channel8_init_status": 1,
                    "timer7_prescaler4": 1
                },
                "DAT_20001504": {
                    "i2_c1_base_address": 1,
                    "i2_c_handle": 2,
                    "i2c1": 1,
                    "i2c_address": 2,
                    "i2c_config1": 1,
                    "i2c_device": 1,
                    "i2c_device_address": 2,
                    "i2c_handle": 3,
                    "i2c_port": 1,
                    "i2c_register1": 2
                },
                "DAT_20001508": {
                    "i2_c1_timing": 1,
                    "i2_c_own_address1": 1,
                    "i2_c_timing": 1,
                    "i2c2": 1,
                    "i2c_clock_speed": 3,
                    "i2c_config2": 1,
                    "i2c_frequency": 1,
                    "i2c_memory_address": 1,
                    "i2c_register2": 2,
                    "i2c_speed": 2,
                    "i2c_timeout": 2,
                    "i2c_timing": 1
                },
                "DAT_2000150c": {
                    "i2_c1_error_handler": 1,
                    "i2_c_digital_filter": 1,
                    "i2c4": 1,
                    "i2c_config4": 1,
                    "i2c_duty_cycle": 1,
                    "i2c_error_callback": 1,
                    "i2c_error_code": 1,
                    "i2c_init_status": 1,
                    "i2c_own_address": 1,
                    "i2c_own_address1": 2,
                    "i2c_register4": 2,
                    "uart_baud_rate": 2,
                    "uart_handle": 1,
                    "uart_handle_init_structure": 1
                },
                "DAT_20001510": {
                    "i2_c1_tx_complete_handler": 1,
                    "i2_c_timing": 1,
                    "i2c5": 1,
                    "i2c_abort_cplt_callback": 1,
                    "i2c_addressing_mode": 2,
                    "i2c_config5": 1,
                    "i2c_error_code": 1,
                    "i2c_error_code1": 1,
                    "i2c_own_address1": 1,
                    "i2c_own_address2": 1,
                    "i2c_register5": 2,
                    "timer1_prescaler": 1,
                    "uart_handle": 1,
                    "uart_tx_pin": 1,
                    "uart_word_length": 1
                },
                "DAT_20001514": {
                    "i2_c1_timeout": 1,
                    "i2_c_analog_filter": 1,
                    "i2_c_rise_time": 1,
                    "i2c3": 1,
                    "i2c_clock_speed": 3,
                    "i2c_config3": 1,
                    "i2c_duty_cycle": 1,
                    "i2c_register3": 2,
                    "i2c_timeout": 5,
                    "i2c_timing": 1
                },
                "DAT_20001518": {
                    "i2_c1_rx_complete_handler": 1,
                    "i2_c_timeout": 1,
                    "i2c6": 1,
                    "i2c_config6": 1,
                    "i2c_dual_address0": 1,
                    "i2c_dual_address_mode": 1,
                    "i2c_error_code2": 1,
                    "i2c_own_address2": 2,
                    "i2c_own_address_mode": 1,
                    "i2c_register6": 2,
                    "tim_pwm_handle": 1,
                    "timer1_period": 1,
                    "timer_period": 1,
                    "uart_device": 1,
                    "uart_rx_pin": 1
                },
                "DAT_2000151c": {
                    "i2_c1_mem_addresses": 1,
                    "i2_c_own_address2": 1,
                    "i2c7": 1,
                    "i2c_config7": 1,
                    "i2c_dual_address_mode": 2,
                    "i2c_error_code3": 1,
                    "i2c_general_call_mode": 1,
                    "i2c_own_address1": 1,
                    "i2c_own_address2": 1,
                    "i2c_register7": 2,
                    "tim_pwm_channel_handle": 1,
                    "timer1_clock_division": 1,
                    "timer_prescaler": 1,
                    "uart_gpio_pin": 1,
                    "uart_speed": 1
                },
                "DAT_20001520": {
                    "i2_c_own_address2_mask": 1,
                    "i2c8": 1,
                    "i2c_address_size": 1,
                    "i2c_config8": 1,
                    "i2c_error_code4": 1,
                    "i2c_general_call_mode": 2,
                    "i2c_no_stretch_mode": 1,
                    "i2c_own_address1": 1,
                    "i2c_register8": 2,
                    "pwm_channel": 1,
                    "pwm_timer1_handle": 1,
                    "tim_ic_handle": 1,
                    "timer2_prescaler": 1,
                    "uart1_base_address": 1,
                    "uart_init_status": 1
                },
                "DAT_20001524": {
                    "i2_c_dual_address_mode": 1,
                    "i2c9": 1,
                    "i2c_addressing_mode": 1,
                    "i2c_analog_filter": 1,
                    "i2c_config9": 1,
                    "i2c_error_code5": 1,
                    "i2c_no_stretch_mode": 2,
                    "i2c_register9": 2,
                    "i2c_smbus": 1,
                    "pwm_prescaler": 1,
                    "pwm_timer2_handle": 1,
                    "tim_ic_channel_handle": 1,
                    "timer2_period": 1,
                    "uart1_baud_rate": 1,
                    "uart_error_code": 1
                },
                "DAT_20001540": {
                    "htim1": 1,
                    "pwm_timer6_handle": 1,
                    "tim4_handle": 1,
                    "tim6": 1,
                    "tim_handle": 1,
                    "tim_handle3": 4,
                    "tim_pwm3_port": 1,
                    "tim_pwm3_register": 1,
                    "tim_pwm_config13": 1,
                    "tim_pwm_handle3": 1,
                    "tim_register13": 1,
                    "timer6_handle": 1,
                    "timer_handle3": 1
                },
                "DAT_20001544": {
                    "pwm_timer6_channel": 1,
                    "tim1_counter_mode": 1,
                    "tim4_prescaler": 1,
                    "tim7": 1,
                    "tim_counter_mode": 1,
                    "tim_period": 1,
                    "tim_prescaler3": 1,
                    "tim_pwm3_prescaler": 1,
                    "tim_pwm3_register": 1,
                    "tim_pwm_channel3": 1,
                    "tim_pwm_config14": 1,
                    "tim_register14": 1,
                    "timer3_init_status": 1,
                    "timer6_prescaler2": 1
                },
                "DAT_20001548": {
                    "pwm_timer6_pulse": 1,
                    "tim1_period": 1,
                    "tim4_init_status": 1,
                    "tim8": 1,
                    "tim_clock_division": 1,
                    "tim_init_result3": 1,
                    "tim_period": 1,
                    "tim_period3": 1,
                    "tim_pwm3_first_channel": 1,
                    "tim_pwm_config15": 1,
                    "tim_register15": 1,
                    "timer3_channel8_init_status": 1,
                    "timer6_prescaler3": 1
                },
                "DAT_2000154c": {
                    "pwm_tim_handle3": 1,
                    "tim1_prescaler": 1,
                    "tim4_period": 1,
                    "tim_period2": 1,
                    "tim_prescaler": 1,
                    "tim_prescaler3": 1,
                    "tim_pulse": 1,
                    "tim_pulse_value": 1,
                    "tim_pwm3_period": 1,
                    "tim_pwm3_register": 1,
                    "tim_pwm_config12": 1,
                    "tim_register12": 1,
                    "timer6_prescaler": 1,
                    "timer_period3": 1
                },
                "DAT_20001550": {
                    "pwm_timer6_oc_polarity": 1,
                    "tim1_clock_division": 1,
                    "tim4_sync_config_status": 1,
                    "tim9": 1,
                    "tim_clock_division": 1,
                    "tim_clock_division3": 1,
                    "tim_pwm3_register": 1,
                    "tim_pwm3_second_channel": 1,
                    "tim_pwm_config16": 1,
                    "tim_register16": 1,
                    "tim_repetition_counter": 1,
                    "timer6_prescaler4": 1
                },
                "DAT_2000157c": {
                    "huart": 1,
                    "uart1": 1,
                    "uart1_handle": 2,
                    "uart_config1": 1,
                    "uart_handle": 9,
                    "uart_port": 1,
                    "uart_register1": 2
                },
                "DAT_20001580": {
                    "uart1_baud_rate": 2,
                    "uart2": 1,
                    "uart_baud_rate": 5,
                    "uart_baud_rate2": 1,
                    "uart_baudrate": 1,
                    "uart_config2": 1,
                    "uart_register2": 1
                },
                "DAT_20001584": {
                    "tim1_init_status": 1,
                    "timer2_period2": 1,
                    "uart1_stop_bits": 1,
                    "uart4": 1,
                    "uart_config4": 1,
                    "uart_error_callback": 1,
                    "uart_error_code": 1,
                    "uart_init_result": 1,
                    "uart_register4": 1,
                    "uart_stop_bits": 3
                },
                "DAT_20001588": {
                    "tim1_sync_config_status": 1,
                    "timer2_clock_division2": 1,
                    "uart1_parity": 1,
                    "uart5": 1,
                    "uart_abort_cplt_callback": 1,
                    "uart_config5": 1,
                    "uart_error_code1": 1,
                    "uart_parity": 3,
                    "uart_register5": 1,
                    "uart_transfer_result": 1
                },
                "DAT_2000158c": {
                    "tim1_deactivation_delay_status": 1,
                    "timer3_prescaler": 1,
                    "uart1_hardware_flow_control": 1,
                    "uart6": 1,
                    "uart_abort_receive_cplt_callback": 1,
                    "uart_config6": 1,
                    "uart_error_code2": 1,
                    "uart_mode": 3,
                    "uart_receive_result": 1,
                    "uart_register6": 1
                },
                "DAT_20001590": {
                    "tim1_prescaler": 1,
                    "timer2_prescaler2": 1,
                    "uart1_word_length": 1,
                    "uart3": 1,
                    "uart_config3": 1,
                    "uart_register3": 1,
                    "uart_stop_bits": 1,
                    "uart_word_length": 5
                },
                "DAT_20001594": {
                    "tim1_masterclock_div_status": 1,
                    "timer3_prescaler2": 1,
                    "uart1_mode": 1,
                    "uart7": 1,
                    "uart_abort_transmit_cplt_callback": 1,
                    "uart_config7": 1,
                    "uart_error_code3": 1,
                    "uart_hardware_flow_control": 2,
                    "uart_hw_flow_ctl": 1,
                    "uart_register7": 1,
                    "uart_transmit_result": 1
                },
                "DAT_20001598": {
                    "tim1_slot1_signaling_status": 1,
                    "timer3_prescaler3": 1,
                    "uart1_clock_prescaler": 1,
                    "uart8": 1,
                    "uart_abort_error_callback": 1,
                    "uart_config8": 1,
                    "uart_error_code4": 1,
                    "uart_error_result": 1,
                    "uart_one_bit_sampling": 1,
                    "uart_over_sampling": 1,
                    "uart_register8": 1,
                    "uart_timeout": 1
                },
                "DAT_200015bc": {
                    "htim3": 1,
                    "pwm_tim_handle": 1,
                    "pwm_timer3_handle": 1,
                    "tim8_handle": 1,
                    "tim_handle": 3,
                    "tim_handle1": 2,
                    "tim_pwm1_register": 1,
                    "tim_pwm_config1": 1,
                    "tim_pwm_handle1": 1,
                    "tim_pwm_port": 1,
                    "tim_register1": 1,
                    "timer4": 1,
                    "timer4_handle": 1,
                    "timer_handle1": 1
                },
                "DAT_200015c0": {
                    "pwm_timer3_channel": 1,
                    "tim3_counter_mode": 1,
                    "tim8_prescaler": 1,
                    "tim_counter_mode": 1,
                    "tim_period": 2,
                    "tim_pwm_channel1": 1,
                    "tim_pwm_config3": 1,
                    "tim_pwm_prescaler": 1,
                    "tim_register3": 1,
                    "timer4_prescaler2": 1,
                    "timer_prescaler1": 1
                },
                "DAT_200015c4": {
                    "pwm_timer3_pulse": 1,
                    "tim3_period": 1,
                    "tim_clock_division": 2,
                    "tim_period": 1,
                    "tim_pwm_config4": 1,
                    "tim_pwm_first_channel": 1,
                    "tim_register4": 1,
                    "timer1_init_status": 1,
                    "timer4_prescaler3": 1
                },
                "DAT_200015c8": {
                    "pwm_timer3_frequency": 1,
                    "tim3_prescaler": 1,
                    "tim8_period": 1,
                    "tim_prescaler": 4,
                    "tim_prescaler_value": 1,
                    "tim_pwm_config2": 1,
                    "tim_pwm_period": 1,
                    "tim_register2": 1,
                    "timer4_prescaler": 1,
                    "timer_period1": 1
                },
                "DAT_200015cc": {
                    "pwm_timer3_oc_polarity": 1,
                    "tim3_clock_division": 1,
                    "tim8_init_status": 1,
                    "tim_capture_compare_channel1": 1,
                    "tim_channel1_result": 1,
                    "tim_clock_division": 1,
                    "tim_counter_mode": 1,
                    "tim_pwm_config5": 1,
                    "tim_pwm_second_channel": 1,
                    "tim_register5": 1,
                    "tim_repetition_counter": 1,
                    "timer1_channel1_init_status": 1,
                    "timer4_prescaler4": 1
                },
                "DAT_200015d0": {
                    "pwm_timer3_oc_idle_state": 1,
                    "tim3_repetition_counter": 1,
                    "tim8_sync_config_status": 1,
                    "tim_auto_reload_preload": 1,
                    "tim_automatic_output": 1,
                    "tim_pwm_config6": 1,
                    "tim_pwm_third_channel": 1,
                    "tim_register6": 1,
                    "tim_repetition_counter": 1,
                    "timer1_channel2_init_status": 1,
                    "timer4_prescaler5": 1
                },
                "DAT_200015d4": {
                    "tim_init_result": 1
                },
                "DAT_200015f8": {
                    "htim2": 1,
                    "pwm_tim_handle2": 1,
                    "pwm_timer4_handle": 1,
                    "tim1": 1,
                    "tim16_handle": 1,
                    "tim_handle": 1,
                    "tim_handle2": 4,
                    "tim_pwm2_port": 1,
                    "tim_pwm2_register": 1,
                    "tim_pwm_config7": 1,
                    "tim_pwm_handle2": 1,
                    "tim_register7": 1,
                    "timer5_handle": 1,
                    "timer_handle2": 1
                },
                "DAT_200015fc": {
                    "pwm_timer4_channel": 1,
                    "tim16_prescaler": 1,
                    "tim2_counter_mode": 1,
                    "tim3": 1,
                    "tim_counter_mode": 1,
                    "tim_period": 1,
                    "tim_period2": 1,
                    "tim_pwm2_prescaler": 1,
                    "tim_pwm_config9": 1,
                    "tim_register9": 1,
                    "timer5_prescaler2": 1,
                    "timer_prescaler2": 1
                },
                "DAT_20001600": {
                    "pwm_timer4_pulse": 1,
                    "tim16_init_status": 1,
                    "tim2_period": 1,
                    "tim4": 1,
                    "tim_clock_division": 1,
                    "tim_clock_division2": 1,
                    "tim_period": 1,
                    "tim_pwm2_first_channel": 1,
                    "tim_pwm_config10": 1,
                    "tim_register10": 1,
                    "timer2_init_status": 1,
                    "timer5_prescaler3": 1
                },
                "DAT_20001604": {
                    "pwm_timer4_frequency": 1,
                    "tim16_period": 1,
                    "tim2": 1,
                    "tim2_prescaler": 1,
                    "tim_prescaler": 2,
                    "tim_prescaler2": 2,
                    "tim_prescaler_value2": 1,
                    "tim_pwm2_period": 1,
                    "tim_pwm_config8": 1,
                    "tim_register8": 1,
                    "timer5_prescaler": 1,
                    "timer_period2": 1
                },
                "DAT_20001608": {
                    "pwm_timer4_oc_polarity": 1,
                    "tim16_sync_config_status": 1,
                    "tim2_clock_division": 1,
                    "tim5": 1,
                    "tim_clock_division": 1,
                    "tim_counter_mode2": 1,
                    "tim_init_result2": 1,
                    "tim_pwm2_second_channel": 1,
                    "tim_pwm_config11": 1,
                    "tim_register11": 1,
                    "tim_repetition_counter": 1,
                    "timer2_channel4_init_status": 1,
                    "timer5_prescaler4": 1
                },
                "Error_Handler": {
                    "handle_error": 2
                },
                "FUN_08001128": {
                    "enable_interrupts": 1,
                    "function1": 1,
                    "function6": 1,
                    "get_interrupt_priority": 1,
                    "init_tim_msp_post_init": 1,
                    "initialize_function2": 1,
                    "initialize_param5": 1,
                    "initialize_periph10": 2,
                    "initialize_tim_pwm": 1,
                    "initialize_uart": 1,
                    "sub_function_j": 1,
                    "unknown_function10": 1
                },
                "FUN_08001264": {
                    "configure_interrupts": 1,
                    "configure_timer_sync": 1,
                    "function2": 1,
                    "function7": 1,
                    "init_tim_pwm_config_channel": 1,
                    "initialize_function3": 1,
                    "initialize_param6": 1,
                    "initialize_periph11": 2,
                    "initialize_tim_pwm2": 1,
                    "set_interrupt_priority": 1,
                    "sub_function_k": 1,
                    "unknown_function11": 1
                },
                "FUN_08001424": {
                    "configure_nvic": 1,
                    "function5": 1,
                    "init_tim_ex_master_config_sync": 1,
                    "init_timer_pwm": 1,
                    "initialize_gpio_pwm": 1,
                    "initialize_param4": 1,
                    "initialize_periph9": 2,
                    "initialize_set_function": 1,
                    "set_tim1_channel_pulse": 1,
                    "sub_function_i": 1,
                    "tim_msp_init": 1,
                    "unknown_function9": 1
                },
                "FUN_08001754": {
                    "configure_hal": 1,
                    "i2c_init": 1,
                    "init_hal": 1,
                    "initialize_ddram": 1,
                    "initialize_i2_c_param": 1,
                    "initialize_i2_c_peripheral": 1,
                    "initialize_periph1": 2,
                    "initialize_timer": 1,
                    "sub_function_a": 1,
                    "unknown_function1": 1
                },
                "FUN_080023d0": {
                    "configure_system_clock": 1,
                    "configure_timer_function1": 1,
                    "init_system_clock": 1,
                    "initialize_cram": 1,
                    "initialize_gpio_param": 1,
                    "initialize_periph2": 2,
                    "sub_function_b": 1,
                    "uart_init": 1,
                    "unknown_function2": 1
                },
                "FUN_0800245c": {
                    "config_tim_break_dead_time": 1,
                    "configure_timer_function7": 1,
                    "function4": 1,
                    "initialize_param3": 1,
                    "initialize_periph8": 2,
                    "initialize_pwm2": 1,
                    "initialize_tim1_pwm_channel": 1,
                    "post_init_timer": 1,
                    "set_interrupt_group_priority": 1,
                    "sub_function_h": 1,
                    "tim_channel_config3": 1,
                    "unknown_function8": 1
                },
                "FUN_08002564": {
                    "configure_interrupt": 1,
                    "configure_timer_function5": 1,
                    "configure_uart": 1,
                    "init_uart": 1,
                    "initialize_param1": 1,
                    "initialize_periph6": 2,
                    "initialize_uart_peripheral": 1,
                    "sub_function_f": 1,
                    "tim_channel_config1": 1,
                    "unknown_function6": 1
                },
                "FUN_080025a4": {
                    "configure_pwm": 1,
                    "configure_timer_pwm": 1,
                    "function3": 1,
                    "init_tim_pwm_init": 1,
                    "initialize_function4": 1,
                    "initialize_param7": 1,
                    "initialize_periph12": 2,
                    "initialize_tim4and8_pwm_channels": 1,
                    "set_interrupt_group_priority": 1,
                    "sub_function_l": 1,
                    "unknown_function12": 1
                },
                "FUN_08002724": {
                    "configure_gpio": 1,
                    "configure_timer_function2": 1,
                    "init_gpio": 1,
                    "initialize_periph3": 2,
                    "initialize_timpwm_param": 1,
                    "initialize_vram": 1,
                    "sub_function_c": 1,
                    "tim_pwm_init": 1,
                    "unknown_function3": 1
                },
                "FUN_08004490": {
                    "configure_timer_break_dead_time": 1,
                    "configure_timer_function6": 1,
                    "function3": 1,
                    "init_tim_pwm": 1,
                    "initialize_param2": 1,
                    "initialize_periph7": 2,
                    "initialize_pwm": 1,
                    "set_interrupt_priority": 1,
                    "sub_function_g": 1,
                    "tim_channel_config2": 1,
                    "unknown_function7": 1
                },
                "FUN_08004514": {
                    "configure_i2_c": 1,
                    "configure_timer_function3": 1,
                    "disable_interrupts": 1,
                    "function1": 1,
                    "init_i2_c": 1,
                    "initialize": 1,
                    "initialize_periph4": 2,
                    "some_function": 1,
                    "sub_function_d": 1,
                    "unknown_function4": 1
                },
                "FUN_0800458c": {
                    "initialize_periph": 1,
                    "initialize_periphals": 2,
                    "initialize_peripherals": 28
                },
                "FUN_0800463a": {
                    "handle_init_error": 1
                },
                "FUN_08004e14": {
                    "another_function": 1,
                    "configure_timer_function4": 1,
                    "enable_interrupts": 1,
                    "error_handler": 1,
                    "function2": 1,
                    "handle_error": 1,
                    "initialize_param": 1,
                    "initialize_periph5": 2,
                    "pwm_config_function": 1,
                    "sub_function_e": 1,
                    "unknown_function5": 1
                },
                "HAL_GPIO_Init": {
                    "configure_gpio": 1,
                    "gpio_init": 1,
                    "init_gpio": 1,
                    "initialize_gpio": 10,
                    "initialize_gpio_pin": 2
                },
                "HAL_GPIO_WritePin": {
                    "gpio_write_pin": 1,
                    "set_gpio_output_pin": 1,
                    "set_gpio_pin_state": 3,
                    "set_gpio_pin_value": 1,
                    "write_gpio": 1,
                    "write_gpio_pin": 3,
                    "write_pin": 4,
                    "write_pin_to_gpio": 1
                },
                "HAL_I2C_Init": {
                    "i2c_init": 1,
                    "init_i2c": 1,
                    "initialize_i2_c": 8,
                    "initialize_i2c": 1
                },
                "HAL_Init": {
                    "hardware_abstraction_layer_init": 1,
                    "initialize_hal": 6,
                    "initialize_hardware": 4,
                    "initialize_hardware_abstract_layer": 3,
                    "initialize_hardware_abstraction_layer": 1
                },
                "HAL_TIMEx_ConfigBreakDeadTime": {
                    "configure_tim_break_dead_time": 1
                },
                "HAL_TIMEx_MasterConfigSynchronization": {
                    "config_tim_pwm_master_sync": 1,
                    "configure_master_sync": 1,
                    "configure_pwm1": 1,
                    "configure_pwm_synchronization": 1,
                    "configure_pwm_timer": 1,
                    "configure_tim_master_config_sync": 1,
                    "configure_tim_pwm1_master_sync": 1,
                    "configure_tim_synchronization": 1,
                    "configure_timpwm_synchronization": 1,
                    "synchronize_tim_master_config": 1,
                    "tim_master_config_sync": 1
                },
                "HAL_TIM_MUX_MspPostInit": {
                    "post_initialize_tim_mux": 1
                },
                "HAL_TIM_MspPostInit": {
                    "initialize_pwm_post": 1,
                    "initialize_pwm_timer_gpio": 1,
                    "initialize_tim": 1,
                    "initialize_tim4_post_init": 1,
                    "initialize_tim_msp_post_init2": 1,
                    "post_init_tim": 1,
                    "post_initialize_tim": 2,
                    "post_initialize_tim3": 1,
                    "post_initialize_tim_pwm1": 1,
                    "post_initialize_timer": 1,
                    "timer_msp_post_init": 1
                },
                "HAL_TIM_PWM_ConfigChannel": {
                    "config_tim_pwm_channel": 1,
                    "configure_pwm2_channel": 1,
                    "configure_pwm_channel": 2,
                    "configure_tim2_channel": 1,
                    "configure_tim_pwm1_channel": 1,
                    "configure_tim_pwm_channel": 2,
                    "configure_timpwm_channel": 1
                },
                "HAL_TIM_PWM_Init": {
                    "init_tim_pwm": 1,
                    "initialize_pwm": 2,
                    "initialize_pwm1": 1,
                    "initialize_pwm_timer": 2,
                    "initialize_tim1in_pw_mmode": 1,
                    "initialize_tim_pwm": 2,
                    "initialize_tim_pwm1": 1,
                    "initialize_timpwm": 1,
                    "timer_pwm_init": 1
                },
                "HAL_UART_Init": {
                    "init_uart": 1,
                    "initialize_uart": 10,
                    "uart_init": 1
                },
                "PTR_FUN_08001754": {
                    "ptr_function1": 1
                },
                "PTR_FUN_080023d0": {
                    "ptr_function2": 1
                },
                "PTR_FUN_08002564": {
                    "ptr_function4": 1
                },
                "PTR_FUN_080025a4": {
                    "ptr_function5": 1
                },
                "PTR_FUN_08002724": {
                    "ptr_function3": 1
                },
                "SystemClock_Config": {
                    "configure_system_clock": 14,
                    "system_clock_config": 1
                },
                "_DAT_40021018": {
                    "gpio_mode_register": 1,
                    "gpio_pin1": 1,
                    "gpio_pin_0x40021018": 1,
                    "gpio_pin_config": 2,
                    "gpio_port_config1": 1,
                    "gpio_port_configuration": 2,
                    "gpio_port_g_afr0": 1,
                    "gpio_portb_moder": 1,
                    "gpio_register": 1,
                    "gpio_register1": 1,
                    "register_value": 1
                },
                "_Error_Handler": {
                    "error_handler": 3,
                    "handle_error": 6
                },
                "iVar1": {
                    "error_code": 5,
                    "init_result": 2,
                    "init_result1": 1,
                    "init_status": 1,
                    "result": 4,
                    "status": 2
                },
                "iVar3": {
                    "clock_config_result": 1,
                    "clock_source": 1,
                    "config_value": 3,
                    "counter": 2,
                    "flag": 1,
                    "initial_value": 3,
                    "some_index": 1,
                    "timer_prescaler": 1,
                    "value": 1
                },
                "local_1c": {
                    "break_dead_time_config": 1,
                    "break_dead_time_result": 1,
                    "channel15": 2,
                    "channel_init": 1,
                    "gpio_config": 1,
                    "gpio_config6": 2,
                    "gpio_init_value6": 1,
                    "gpio_reg7": 1,
                    "lock_status": 1,
                    "prescaler": 1,
                    "pwm_config_value": 1,
                    "tim3_pwm_config1_13": 1,
                    "tim_break_dead_time": 1,
                    "tim_pwm_break_dead_time": 1,
                    "timer15": 1,
                    "timer_config_result2": 1,
                    "timer_var11": 1
                },
                "local_20": {
                    "break_dead_time": 4,
                    "break_dead_time_config": 1,
                    "channel14": 2,
                    "gpio_config": 1,
                    "gpio_config7": 1,
                    "gpio_reg6": 1,
                    "pwm_config": 1,
                    "tim3_pwm_config1_12": 1,
                    "tim_break_dead_time": 1,
                    "tim_pwm_break_dead_time": 1,
                    "time_config_value": 1,
                    "timer14": 1,
                    "timer_config_result": 1,
                    "timer_var10": 1
                },
                "local_24": {
                    "break_dead_time": 1,
                    "break_dead_time_config": 1,
                    "channel13": 2,
                    "channel_init": 1,
                    "gpio_config": 1,
                    "gpio_config3": 1,
                    "gpio_config5": 1,
                    "gpio_init_result4": 1,
                    "gpio_init_value5": 1,
                    "gpio_reg5": 1,
                    "period": 1,
                    "tim3_pwm_config1_11": 1,
                    "tim_break_dead_time": 1,
                    "tim_pwm_channel": 1,
                    "timer13": 1,
                    "timer_break_dead_time_config_result": 1,
                    "timer_config": 1,
                    "timer_var9": 1
                },
                "local_28": {
                    "channel12": 2,
                    "channel_init": 1,
                    "gpio_config": 2,
                    "gpio_config4": 1,
                    "gpio_config5": 1,
                    "gpio_init_pin": 1,
                    "gpio_init_result3": 1,
                    "gpio_init_value4": 1,
                    "gpio_mode": 1,
                    "gpio_reg4": 1,
                    "gpio_var3": 1,
                    "master_config": 1,
                    "pulse": 1,
                    "tim3_pwm_config1_10": 1,
                    "tim_break_dead_time": 1,
                    "tim_pwm_channel": 1,
                    "timer12": 1
                },
                "local_2c": {
                    "channel11": 2,
                    "channel_init": 1,
                    "dead_time": 1,
                    "gpio_alternate_function": 1,
                    "gpio_config": 2,
                    "gpio_config3": 1,
                    "gpio_config4": 1,
                    "gpio_init_pin": 1,
                    "gpio_init_result2": 1,
                    "gpio_init_value3": 1,
                    "gpio_reg3": 1,
                    "gpio_var2": 1,
                    "prescaler": 1,
                    "tim3_pwm_config1_9": 1,
                    "tim_break_dead_time": 1,
                    "tim_pwm_channel": 1,
                    "timer11": 1
                },
                "local_30": {
                    "channel10": 2,
                    "channel_init": 1,
                    "gpio_config": 2,
                    "gpio_config1": 1,
                    "gpio_config2": 1,
                    "gpio_init_pin": 1,
                    "gpio_init_result": 1,
                    "gpio_init_value2": 1,
                    "gpio_pin": 2,
                    "gpio_reg2": 1,
                    "gpio_var1": 1,
                    "mode": 1,
                    "tim3_pwm_config1_8": 1,
                    "tim_break_dead_time": 1,
                    "tim_pwm_channel": 1,
                    "timer10": 1
                },
                "local_34": {
                    "channel9": 2,
                    "channel_init": 1,
                    "gpio_config": 3,
                    "gpio_config1": 1,
                    "gpio_config2": 1,
                    "gpio_config_value": 1,
                    "gpio_init_pin": 1,
                    "gpio_init_value1": 1,
                    "gpio_pin": 1,
                    "gpio_reg1": 1,
                    "tim3_pwm_config1_7": 1,
                    "tim_break_dead_time": 1,
                    "tim_pwm_channel": 1,
                    "timer9": 1
                },
                "local_38": {
                    "channel6": 1,
                    "channel8": 2,
                    "channel_init_result5": 1,
                    "config_value6": 1,
                    "gpio_value6": 1,
                    "pwm_config": 1,
                    "pwm_config6": 1,
                    "pwm_init_status": 1,
                    "tim": 1,
                    "tim3_pwm_config1_6": 1,
                    "tim_pwm_channel": 1,
                    "tim_pwm_channel6": 1,
                    "timer8": 2,
                    "timer_config7": 1,
                    "timer_init_value8": 1,
                    "timer_pwm_config_result6": 1,
                    "timer_var8": 1
                },
                "local_3c": {
                    "channel5": 1,
                    "channel7": 2,
                    "channel_init_result4": 1,
                    "config_value5": 1,
                    "gpio_value5": 1,
                    "pwm_config": 1,
                    "pwm_config5": 1,
                    "pwm_init_status": 1,
                    "tim": 1,
                    "tim3_pwm_config1_5": 1,
                    "tim_pwm_channel": 1,
                    "tim_pwm_channel5": 1,
                    "timer7": 2,
                    "timer_config6": 1,
                    "timer_init_value7": 1,
                    "timer_pwm_config_result5": 1,
                    "timer_var7": 1
                },
                "local_40": {
                    "channel4": 1,
                    "channel6": 2,
                    "channel_init_result3": 1,
                    "config_value4": 1,
                    "gpio_value4": 1,
                    "pwm_config": 1,
                    "pwm_config4": 1,
                    "pwm_init_status": 1,
                    "tim": 1,
                    "tim3_pwm_config1_4": 1,
                    "tim_pwm_channel": 1,
                    "tim_pwm_channel4": 1,
                    "timer6": 2,
                    "timer_config5": 1,
                    "timer_init_value6": 1,
                    "timer_pwm_config_result4": 1,
                    "timer_var6": 1
                },
                "local_48": {
                    "channel3": 1,
                    "channel5": 2,
                    "channel_init_result2": 1,
                    "config_value3": 1,
                    "gpio_value3": 1,
                    "pwm_config": 1,
                    "pwm_config3": 1,
                    "pwm_init_status": 1,
                    "tim": 1,
                    "tim3_pwm_config1_3": 1,
                    "tim_pwm_channel": 1,
                    "tim_pwm_channel3": 1,
                    "timer5": 2,
                    "timer_config4": 1,
                    "timer_init_value5": 1,
                    "timer_pwm_config_result3": 1,
                    "timer_var5": 1
                },
                "local_4c": {
                    "channel2": 1,
                    "channel4": 2,
                    "channel_init_result": 1,
                    "config_value2": 1,
                    "gpio_value2": 1,
                    "pwm_config": 1,
                    "pwm_config2": 1,
                    "pwm_init_status": 1,
                    "tim": 1,
                    "tim3_pwm_config1_2": 1,
                    "tim_pwm_channel": 1,
                    "tim_pwm_channel2": 1,
                    "timer4": 2,
                    "timer_config3": 1,
                    "timer_init_value4": 1,
                    "timer_pwm_config_result2": 1,
                    "timer_var4": 1
                },
                "local_50": {
                    "channel1": 1,
                    "channel3": 2,
                    "channel_config": 1,
                    "config_value1": 1,
                    "gpio_value1": 1,
                    "pwm_config": 1,
                    "pwm_config1": 1,
                    "pwm_frequency": 1,
                    "tim": 1,
                    "tim3_pwm_config1": 1,
                    "tim_pwm_channel": 1,
                    "tim_pwm_channel1": 1,
                    "timer3": 2,
                    "timer_config2": 1,
                    "timer_init_value3": 1,
                    "timer_pwm_config_result1": 1,
                    "timer_var3": 1
                },
                "local_54": {
                    "channel2": 2,
                    "htim_slave": 1,
                    "init_result2": 1,
                    "master_sync": 1,
                    "tim": 1,
                    "tim3_init_result2": 1,
                    "tim_pwm_channel": 1,
                    "timer2": 2,
                    "timer_config1": 1,
                    "timer_config2": 1,
                    "timer_config_result": 1,
                    "timer_init_result2": 1,
                    "timer_init_status": 1,
                    "timer_init_value2": 1,
                    "timer_value2": 1,
                    "timer_var2": 1,
                    "uart_init_result": 1
                },
                "local_58": {
                    "channel1": 2,
                    "htim_master": 1,
                    "i2c_init_result": 1,
                    "init_result1": 1,
                    "pwm_config": 1,
                    "tim": 1,
                    "tim3_init_result": 1,
                    "tim_pwm_channel": 1,
                    "timer1": 2,
                    "timer_config1": 1,
                    "timer_init_result": 2,
                    "timer_init_result1": 1,
                    "timer_init_value1": 1,
                    "timer_master_config": 1,
                    "timer_value1": 1,
                    "timer_var1": 1
                },
                "uVar2": {
                    "error_code": 10,
                    "error_flag": 1,
                    "error_handler_index": 1,
                    "error_index": 1,
                    "error_line_number": 1,
                    "loop_counter": 1,
                    "loop_index": 1,
                    "loop_variable": 1
                }
            },
            "called": [
                "FUN_08001754",
                "FUN_080023d0",
                "FUN_08002724",
                "FUN_08004514",
                "FUN_08004e14",
                "FUN_08002564",
                "FUN_08004490",
                "FUN_0800245c",
                "FUN_08001424",
                "FUN_08001128",
                "FUN_08001264",
                "FUN_080025a4"
            ],
            "calling": [
                "FUN_08004028"
            ],
            "code": "\n\n\nvoid initialize_peripherals_0800458c(void)\n\n{\n  int error_code;\n  undefined4 error_code;\n  int initial_value;\n  int timer_init_result;\n  int timer2;\n  int timer3;\n  int timer4;\n  int timer5;\n  int timer6;\n  int timer7;\n  int channel8;\n  int gpio_config;\n  int gpio_config;\n  int gpio_config;\n  int channel12;\n  int channel13;\n  undefined4 break_dead_time;\n  int gpio_config6;\n  \n  initialize_hal();\n  configure_system_clock();\n  initial_value = 2;\n  _DAT_40021018 = _DAT_40021018 | 0x1c;\n  write_pin(0x40011000,0xe000,0,_DAT_40021018 & 8);\n  write_pin(0x40010800,0x20,0);\n  gpio_config = 0xe000;\n  gpio_config = 1;\n  channel12 = 2;\n  initialize_gpio(0x40011000,&gpio_config);\n  gpio_config = 0x20;\n  gpio_config = 1;\n  channel12 = 2;\n  initialize_gpio(0x40010800,&gpio_config);\n  DAT_20001504 = 0x40005400;\n  DAT_20001508 = 400000;\n  DAT_20001514 = 0x4000;\n  DAT_2000150c = 0;\n  DAT_20001510 = 0;\n  DAT_20001518 = 0;\n  DAT_2000151c = 0;\n  DAT_20001520 = 0;\n  DAT_20001524 = 0;\n  error_code = initialize_i2_c();\n  if (error_code == 0) goto LAB_0800463a;\n  error_code = 0x6b;\n  while( true ) {\n    while( true ) {\n      while( true ) {\n        while( true ) {\n          while( true ) {\n            while( true ) {\n              while( true ) {\n                while( true ) {\n                  while( true ) {\n                    while( true ) {\n                      while( true ) {\n                        while( true ) {\n                          while( true ) {\n                            while( true ) {\n                              while( true ) {\n                                while( true ) {\n                                  error_code = handle_error(\"../Src/peripherals.c\",error_code);\nLAB_0800463a:\n                                  DAT_2000157c = 0x40013800;\n                                  DAT_20001580 = 0x1c200;\n                                  DAT_20001590 = 0xc;\n                                  DAT_20001584 = error_code;\n                                  DAT_20001588 = error_code;\n                                  DAT_2000158c = error_code;\n                                  DAT_20001594 = error_code;\n                                  DAT_20001598 = error_code;\n                                  error_code = initialize_uart(&DAT_2000157c);\n                                  if (error_code == 0) break;\n                                  error_code = 0x151;\n                                }\n                                DAT_200015bc = 0x40012c00;\n                                DAT_200015c8 = 1000;\n                                DAT_200015c0 = initial_value;\n                                DAT_200015c4 = error_code;\n                                DAT_200015cc = error_code;\n                                DAT_200015d0 = error_code;\n                                error_code = initialize_tim_pwm(&DAT_200015bc);\n                                if (error_code == 0) break;\n                                error_code = 0x88;\n                              }\n                              timer_init_result = error_code;\n                              timer2 = error_code;\n                              error_code = configure_pwm_synchronization(&DAT_200015bc,&timer_init_result)\n                              ;\n                              if (error_code == 0) break;\n                              error_code = 0x8f;\n                            }\n                            timer3 = 0x60;\n                            timer4 = error_code;\n                            timer5 = error_code;\n                            timer6 = error_code;\n                            timer7 = error_code;\n                            channel8 = error_code;\n                            error_code = configure_pwm_channel(&DAT_200015bc,&timer3,0xc);\n                            if (error_code == 0) break;\n                            error_code = 0x9a;\n                          }\n                          break_dead_time = 0x2000;\n                          gpio_config = error_code;\n                          gpio_config = error_code;\n                          gpio_config = error_code;\n                          channel12 = error_code;\n                          channel13 = error_code;\n                          gpio_config6 = error_code;\n                          error_code = configure_tim_break_dead_time(&DAT_200015bc,&gpio_config);\n                          if (error_code == 0) break;\n                          error_code = 0xa6;\n                        }\n                        post_initialize_tim(&DAT_200015bc);\n                        DAT_200015f8 = 0x40000000;\n                        DAT_20001604 = 1000;\n                        DAT_200015fc = initial_value;\n                        DAT_20001600 = error_code;\n                        DAT_20001608 = error_code;\n                        error_code = initialize_tim_pwm(&DAT_200015f8);\n                        if (error_code == 0) break;\n                        error_code = 0xc3;\n                      }\n                      timer3 = error_code;\n                      timer4 = error_code;\n                      error_code = configure_pwm_synchronization(&DAT_200015f8,&timer3);\n                      if (error_code == 0) break;\n                      error_code = 0xca;\n                    }\n                    gpio_config = 0x60;\n                    gpio_config = error_code;\n                    gpio_config = error_code;\n                    channel13 = error_code;\n                    error_code = configure_pwm_channel(&DAT_200015f8,&gpio_config,4);\n                    if (error_code == 0) break;\n                    error_code = 0xd3;\n                  }\n                  post_initialize_tim(&DAT_200015f8);\n                  DAT_2000154c = 1000;\n                  DAT_20001540 = 0x40000400;\n                  DAT_20001544 = initial_value;\n                  DAT_20001548 = error_code;\n                  DAT_20001550 = error_code;\n                  error_code = initialize_tim_pwm();\n                  if (error_code == 0) break;\n                  error_code = 0xf0;\n                }\n                timer3 = 0;\n                timer4 = 0;\n                error_code = configure_pwm_synchronization(&DAT_20001540,&timer3);\n                if (error_code == 0) break;\n                error_code = 0xf7;\n              }\n              gpio_config = 0x60;\n              gpio_config = error_code;\n              gpio_config = error_code;\n              channel13 = error_code;\n              error_code = configure_pwm_channel(&DAT_20001540,&gpio_config,8);\n              if (error_code == 0) break;\n              error_code = 0x100;\n            }\n            initial_value = configure_pwm_channel(&DAT_20001540,&gpio_config,0xc);\n            if (initial_value == 0) break;\n            error_code = 0x105;\n          }\n          post_initialize_tim(&DAT_20001540);\n          DAT_200014c8 = 0x40000800;\n          DAT_200014cc = 2;\n          DAT_200014d4 = 1000;\n          DAT_200014d0 = initial_value;\n          DAT_200014d8 = initial_value;\n          error_code = initialize_tim_pwm(&DAT_200014c8);\n          if (error_code == 0) break;\n          error_code = 0x122;\n        }\n        timer3 = error_code;\n        timer4 = error_code;\n        error_code = configure_pwm_synchronization(&DAT_200014c8,&timer3);\n        if (error_code == 0) break;\n        error_code = 0x129;\n      }\n      gpio_config = 0x60;\n      gpio_config = error_code;\n      gpio_config = error_code;\n      channel13 = error_code;\n      error_code = configure_pwm_channel(&DAT_200014c8,&gpio_config,8);\n      if (error_code == 0) break;\n      error_code = 0x132;\n    }\n    error_code = configure_pwm_channel(&DAT_200014c8,&gpio_config,0xc);\n    if (error_code == 0) break;\n    error_code = 0x137;\n  }\n  post_initialize_tim(&DAT_200014c8);\n  return;\n}\n\n",
            "current_name": "initialize_peripherals_0800458c",
            "entrypoint": "0x0800458c",
            "imported": false,
            "improved": true,
            "renaming": {
                "Error_Handler": "handle_error",
                "FUN_0800458c": "initialize_peripherals_0800458c",
                "HAL_GPIO_Init": "initialize_gpio",
                "HAL_GPIO_WritePin": "write_pin",
                "HAL_I2C_Init": "initialize_i2_c",
                "HAL_Init": "initialize_hal",
                "HAL_TIMEx_ConfigBreakDeadTime": "configure_tim_break_dead_time",
                "HAL_TIMEx_MasterConfigSynchronization": "configure_pwm_synchronization",
                "HAL_TIM_MspPostInit": "post_initialize_tim",
                "HAL_TIM_PWM_ConfigChannel": "configure_pwm_channel",
                "HAL_TIM_PWM_Init": "initialize_tim_pwm",
                "HAL_UART_Init": "initialize_uart",
                "SystemClock_Config": "configure_system_clock",
                "_Error_Handler": "handle_error",
                "iVar1": "error_code",
                "iVar3": "initial_value",
                "local_1c": "gpio_config6",
                "local_20": "break_dead_time",
                "local_24": "channel13",
                "local_28": "channel12",
                "local_2c": "gpio_config",
                "local_30": "gpio_config",
                "local_34": "gpio_config",
                "local_38": "channel8",
                "local_3c": "timer7",
                "local_40": "timer6",
                "local_48": "timer5",
                "local_4c": "timer4",
                "local_50": "timer3",
                "local_54": "timer2",
                "local_58": "timer_init_result",
                "uVar2": "error_code"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800483c": {
            "additional_data": {
                "FAN_0800483c": {
                    "calculate_parameter_values": 1
                },
                "FUN_0800483c": {
                    "calculate_new_values": 3,
                    "calculate_result": 6,
                    "calculate_results": 1,
                    "calculate_value": 2,
                    "calculate_values": 18
                },
                "__addsf3": {
                    "add_floats": 1
                },
                "__aeabi_fcmpgt": {
                    "compare_floats_greater": 1
                },
                "__aeabi_fcmplt": {
                    "compare_floats_less": 1
                },
                "__aeabi_fdiv": {
                    "divide_floats": 1
                },
                "__aeabi_fmul": {
                    "multiply_floats": 1
                },
                "__aeabi_fsub": {
                    "subtract_floats": 1
                },
                "__floatsisf": {
                    "convert_int_to_float": 1
                },
                "iVar3": {
                    "temp1": 1,
                    "temp3": 3,
                    "temp_var1": 2,
                    "temp_var3": 2,
                    "value1": 10,
                    "value3": 3,
                    "value_1": 1,
                    "var1": 3,
                    "var3": 4,
                    "variable1": 1,
                    "variable_1": 1
                },
                "iVar4": {
                    "result1": 1,
                    "temp1": 2,
                    "temp2": 1,
                    "temp4": 1,
                    "temp_var2": 2,
                    "temp_var4": 2,
                    "value2": 10,
                    "value4": 3,
                    "value_2": 1,
                    "var2": 2,
                    "var4": 4,
                    "variable2": 1,
                    "variable_2": 1
                },
                "iVar5": {
                    "temp2": 2,
                    "temp3": 1,
                    "temp5": 1,
                    "temp_var3": 2,
                    "temp_var5": 2,
                    "value3": 10,
                    "value5": 3,
                    "value_3": 1,
                    "var2": 1,
                    "var3": 2,
                    "var5": 4,
                    "variable3": 1,
                    "variable_3": 1
                },
                "param_1": {
                    "array": 2,
                    "data": 2,
                    "input": 3,
                    "input_array": 10,
                    "input_params": 3,
                    "inputs": 2,
                    "parameters": 3,
                    "params": 3,
                    "values": 3
                },
                "uVar1": {
                    "added_values": 1,
                    "result1": 19,
                    "result_1": 2,
                    "sum_result": 1,
                    "temp1": 3,
                    "temp_result1": 1,
                    "temp_var1": 3,
                    "temp_var4": 1
                },
                "uVar2": {
                    "mul_result": 1,
                    "multiplied_values": 1,
                    "result2": 19,
                    "result_2": 2,
                    "temp2": 3,
                    "temp_result2": 1,
                    "temp_var2": 3,
                    "temp_var5": 1
                }
            },
            "called": [
                "FUN_08000c44",
                "FUN_08000ad8",
                "FUN_08000adc",
                "FUN_08000e54",
                "FUN_08001028",
                "FUN_08001064",
                "FUN_08000cec"
            ],
            "calling": [
                "FUN_08004a84"
            ],
            "code": "\nvoid calculate_new_values_0800483c(int *input_array)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  int value1;\n  int value2;\n  int value3;\n  \n  value2 = input_array[0xc];\n  result1 = add_floats(input_array[7],input_array[9]);\n  value2 = subtract_floats(result1,value2);\n  input_array[10] = value2;\n  if (*input_array == 3) {\n    value2 = compare_floats_greater(input_array[10],0);\n    if (value2 == 0) {\n      value2 = compare_floats_less(input_array[10],0xc3340000);\n    }\n    else {\n      value2 = compare_floats_greater(input_array[10],0x43340000);\n    }\n    if (value2 != 0) {\n      value3 = input_array[10];\n      result1 = multiply_floats(input_array[10],0x43b40000);\n      value2 = compare_floats_greater(input_array[10],0);\n      value1 = input_array[10];\n      if (value2 == 0) {\n        value1 = value1 + -0x80000000;\n      }\n      result1 = divide_floats(result1,value1);\n      value2 = subtract_floats(value3,result1);\n      input_array[10] = value2;\n    }\n  }\n  value3 = input_array[2];\n  value1 = input_array[3];\n  value2 = multiply_floats(input_array[1],input_array[10]);\n  input_array[0xe] = value2;\n  value2 = add_floats(input_array[10],input_array[0xf]);\n  input_array[0xf] = value2;\n  value2 = compare_floats_less(input_array[0xf],0xc3fa0000);\n  if (value2 == 0) {\n    value2 = compare_floats_greater(input_array[0xf],0x43fa0000);\n    if (value2 == 0) {\n      value2 = input_array[0xf];\n    }\n    else {\n      value2 = 0x43fa0000;\n    }\n  }\n  else {\n    value2 = -0x3c060000;\n  }\n  input_array[0xf] = value2;\n  value2 = subtract_floats(input_array[0xc],input_array[0xd]);\n  input_array[0x10] = value2;\n  value2 = input_array[0xe];\n  result1 = multiply_floats(value3,input_array[0xf]);\n  result1 = add_floats(result1,value2);\n  result2 = multiply_floats(value1,input_array[0x10]);\n  value2 = subtract_floats(result1,result2);\n  input_array[0x12] = value2;\n  result1 = convert_int_to_float(input_array[0x13]);\n  value2 = compare_floats_less(input_array[0x12],0xc3fa0000);\n  if (value2 == 0) {\n    value2 = compare_floats_greater(input_array[0x12],0x43fa0000);\n    if (value2 == 0) {\n      value2 = input_array[0x12];\n    }\n    else {\n      value2 = 0x43fa0000;\n    }\n  }\n  else {\n    value2 = -0x3c060000;\n  }\n  value2 = multiply_floats(value2,result1);\n  input_array[0x12] = value2;\n  input_array[0xd] = input_array[0xc];\n  input_array[0xb] = input_array[10];\n  input_array[0x15] = input_array[0x14];\n  return;\n}\n\n",
            "current_name": "calculate_new_values_0800483c",
            "entrypoint": "0x0800483c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800483c": "calculate_new_values_0800483c",
                "__addsf3": "add_floats",
                "__aeabi_fcmpgt": "compare_floats_greater",
                "__aeabi_fcmplt": "compare_floats_less",
                "__aeabi_fdiv": "divide_floats",
                "__aeabi_fmul": "multiply_floats",
                "__aeabi_fsub": "subtract_floats",
                "__floatsisf": "convert_int_to_float",
                "iVar3": "value1",
                "iVar4": "value2",
                "iVar5": "value3",
                "param_1": "input_array",
                "uVar1": "result1",
                "uVar2": "result2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004a30": {
            "additional_data": {
                "0x42c80000": {
                    "conversion_factor": 1
                },
                "DAT_20000068": {
                    "alt1": 1,
                    "altitude1": 2,
                    "altitude_result": 1,
                    "altitude_result1": 1,
                    "altitude_value1": 2,
                    "calculated_altitude1": 1,
                    "converted_altitude1": 1,
                    "current_altitude": 1,
                    "filtered_altitude1": 3,
                    "filtered_altitude_value1": 1,
                    "filtered_altitude_var1": 1,
                    "initial_altitude": 1,
                    "processed_data1": 1,
                    "result1": 1,
                    "scaled_altitude1": 1,
                    "unfiltered_altitude": 1
                },
                "DAT_2000007c": {
                    "alt2": 1,
                    "altitude2": 2,
                    "altitude_result2": 1,
                    "altitude_value2": 2,
                    "calculated_altitude2": 1,
                    "converted_altitude2": 1,
                    "filtered_altitude": 1,
                    "filtered_altitude2": 3,
                    "filtered_altitude_result": 1,
                    "filtered_altitude_value2": 1,
                    "filtered_altitude_var2": 1,
                    "previous_altitude": 1,
                    "processed_data2": 1,
                    "result2": 1,
                    "scaled_altitude2": 1,
                    "updated_altitude": 1
                },
                "DAT_20000094": {
                    "calculated_altitude": 1,
                    "data2": 1,
                    "final_altitude": 9,
                    "final_altitude_value": 1,
                    "output_altitude": 1,
                    "recorded_altitude": 1,
                    "updated_altitude": 2,
                    "updated_default_altitude": 2
                },
                "DAT_20000285": {
                    "first_time_flag": 1,
                    "flag1": 1,
                    "is_altitude_available": 7,
                    "is_altitude_data_valid": 1,
                    "is_altitude_enabled": 1,
                    "is_altitude_initialized": 1,
                    "is_altitude_set": 1,
                    "is_altitude_valid": 2,
                    "is_condition_met1": 1,
                    "is_flag_set": 1,
                    "is_initialized": 2,
                    "is_value1_set": 1
                },
                "DAT_20000288": {
                    "altitude": 1,
                    "altitude_value": 1,
                    "altitudexyz": 1,
                    "data": 1,
                    "data1": 1,
                    "default_altitude": 14,
                    "default_filtered_altitude": 1
                },
                "DAT_200002a8": {
                    "flag2": 1,
                    "is_altitude_filter_set": 1,
                    "is_altitude_filtered": 1,
                    "is_altitude_set": 8,
                    "is_altitude_updated": 1,
                    "is_condition_met2": 1,
                    "is_data_processed": 1,
                    "is_filtered_altitude_calculated": 1,
                    "is_filtered_altitude_set": 1,
                    "is_first_altitude": 1,
                    "is_first_altitude_recorded": 1,
                    "is_value2_set": 1,
                    "update_flag": 1
                },
                "FUN_08000cec": {
                    "calculate_filtered_altitude": 1
                },
                "FUN_08003068": {
                    "calculate_altitude": 2,
                    "calculate_filtered_altitude": 1,
                    "get_altitude": 2,
                    "get_filtered_altitude": 13,
                    "get_pressure_data": 1
                },
                "FUN_08004a30": {
                    "calculate_altitude": 12,
                    "calculate_altitude_data": 1,
                    "calculate_filtered_altitude": 5,
                    "update_altitude": 3,
                    "update_altitude_data": 5,
                    "update_altitude_value": 1,
                    "update_filtered_altitude": 4
                },
                "MS5611_GetFilteredAltitude": {
                    "get_filtered_altitude": 13
                },
                "__aeabi_fmul": {
                    "multiply_float": 5
                },
                "param_1": {
                    "altitude": 3,
                    "altitude1": 2,
                    "altitude_param1": 3,
                    "input1": 5,
                    "input_param1": 2,
                    "input_value1": 1,
                    "param1": 2,
                    "pressure": 1
                },
                "param_2": {
                    "altitude2": 2,
                    "altitude_param2": 3,
                    "filter_value": 1,
                    "input2": 5,
                    "input_param2": 2,
                    "input_value2": 1,
                    "param2": 2,
                    "pressure": 1,
                    "temperature": 1,
                    "threshold": 1
                },
                "param_3": {
                    "altitude_param3": 3,
                    "input3": 5,
                    "input_param3": 2,
                    "input_value3": 1,
                    "param3": 2,
                    "param_3": 1,
                    "unknown": 1,
                    "unknown_param": 2,
                    "value1": 1
                },
                "param_4": {
                    "altitude_param4": 3,
                    "input4": 5,
                    "input_param4": 2,
                    "input_value4": 1,
                    "param4": 2,
                    "param_4": 1,
                    "unknown": 1,
                    "unknown_param": 1,
                    "unknown_param2": 1,
                    "value": 1,
                    "value2": 1
                },
                "uVar1": {
                    "altitude": 3,
                    "filtered_altitude": 27,
                    "result": 1
                }
            },
            "called": [
                "FUN_08003068",
                "FUN_08000cec"
            ],
            "calling": [
                "FUN_08004a84"
            ],
            "code": "\nvoid calculate_filtered_altitude_08004a30(void)\n\n{\n  undefined4 filtered_altitude;\n  \n  if (DAT_20000285 != '\\0') {\n    if (DAT_200002a8 == '\\0') {\n      filtered_altitude = get_filtered_altitude();\n      DAT_20000068 = multiply_float(filtered_altitude,0x42c80000);\n      DAT_200002a8 = '\\x01';\n    }\n    else {\n      filtered_altitude = get_filtered_altitude();\n      DAT_2000007c = multiply_float(filtered_altitude,0x42c80000);\n    }\n  }\n  if (DAT_20000285 == '\\0') {\n    if (DAT_200002a8 != '\\0') {\n      DAT_200002a8 = DAT_20000285;\n    }\n    DAT_20000094 = DAT_20000288;\n  }\n  return;\n}\n\n",
            "current_name": "calculate_filtered_altitude_08004a30",
            "entrypoint": "0x08004a30",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004a30": "calculate_filtered_altitude_08004a30",
                "MS5611_GetFilteredAltitude": "get_filtered_altitude",
                "__aeabi_fmul": "multiply_float",
                "uVar1": "filtered_altitude"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004a84": {
            "additional_data": {
                "AHRS_GetPitch": {
                    "get_pitch": 10,
                    "get_pitch_angle": 1
                },
                "AHRS_GetRoll": {
                    "get_roll": 10,
                    "get_roll_angle": 1
                },
                "AHRS_GetYaw": {
                    "get_yaw": 10,
                    "get_yaw_angle": 1
                },
                "DAT_2000004c": {
                    "air_pid": 1
                },
                "DAT_20000050": {
                    "speed9": 1
                },
                "DAT_20000054": {
                    "speed10": 1
                },
                "DAT_20000058": {
                    "speed11": 1
                },
                "DAT_20000094": {
                    "previous_pitch": 1
                },
                "DAT_200000a8": {
                    "altitude_pid": 1
                },
                "DAT_200000ac": {
                    "speed1": 1
                },
                "DAT_200000b0": {
                    "speed2": 1
                },
                "DAT_200000d8": {
                    "pitch": 1
                },
                "DAT_200000f0": {
                    "motor_speed1": 1
                },
                "DAT_20000104": {
                    "pitch_pid": 1
                },
                "DAT_20000108": {
                    "speed3": 1
                },
                "DAT_2000010c": {
                    "speed4": 1
                },
                "DAT_20000110": {
                    "speed5": 1
                },
                "DAT_20000134": {
                    "roll": 1
                },
                "DAT_2000014c": {
                    "motor_speed2": 1
                },
                "DAT_20000160": {
                    "roll_pid": 1
                },
                "DAT_20000164": {
                    "speed6": 1
                },
                "DAT_20000168": {
                    "speed7": 1
                },
                "DAT_2000016c": {
                    "speed8": 1
                },
                "DAT_20000190": {
                    "yaw": 1
                },
                "DAT_200001a8": {
                    "motor_speed3": 1
                },
                "DAT_20000284": {
                    "stop_motors_flag": 1
                },
                "DAT_20000285": {
                    "flag": 1
                },
                "DAT_20000288": {
                    "current_pitch": 1
                },
                "FUN_08000adc": {
                    "calculate_altitude": 1,
                    "calculate_unssfsi": 1,
                    "compare_float": 2,
                    "compare_float_greater_than": 4,
                    "compare_float_vals": 1,
                    "compare_float_values1": 1,
                    "compare_floats": 3,
                    "compare_floats_with_threshold": 2,
                    "compare_floats_within_range": 1,
                    "compare_greater_than": 1,
                    "fix_unsfsi": 1,
                    "pid_compute": 1,
                    "pid_update_altitude": 1
                },
                "FUN_08000cec": {
                    "__aeabi_fcmpgt": 1,
                    "calculate_speed": 1,
                    "calculate_unssfsi": 1,
                    "compare_float_less_than": 4,
                    "compare_float_values2": 1,
                    "compare_floats": 1,
                    "compare_floats_outside_range": 1,
                    "compare_floats_with_threshold": 1,
                    "compare_floats_with_threshold2": 1,
                    "compare_unsigned": 2,
                    "compute_with_multiplication": 1,
                    "fix_float": 1,
                    "fix_unsfsi_with_param": 1,
                    "increment_value_with_check": 1,
                    "multiply_float_vals": 1
                },
                "FUN_08001028": {
                    "__addsf3": 1,
                    "check_another_flag": 1,
                    "check_condition": 2,
                    "check_dat_20000284": 1,
                    "check_data_validity": 1,
                    "check_flag": 3,
                    "check_flag2": 1,
                    "check_level": 1,
                    "check_motor_status": 1,
                    "check_pid_enabled": 1,
                    "is_dat_20000284_false": 1,
                    "is_data_valid": 1,
                    "is_false": 1,
                    "is_motor_state_valid": 1,
                    "is_motor_stopped": 1,
                    "is_positive": 1,
                    "is_sensor_data_valid": 1
                },
                "FUN_08001064": {
                    "check_ahrs_data": 1,
                    "check_condition": 2,
                    "check_dat_20000285": 1,
                    "check_flag": 5,
                    "check_level": 1,
                    "check_pid_enabled": 1,
                    "is_ahrs_valid": 1,
                    "is_dat_20000285_true": 1,
                    "is_data_valid": 1,
                    "is_flag_set": 1,
                    "is_motor_running": 1,
                    "is_positive": 1,
                    "is_true": 1,
                    "toggle_led": 1
                },
                "FUN_080010c4": {
                    "__aeabi_fcmplt": 1,
                    "ahrs_get_yaw": 1,
                    "calculate_new_value": 1,
                    "calculate_unsigned": 1,
                    "compute_speed": 1,
                    "constrain_value": 1,
                    "convert_float_to_int": 1,
                    "convert_float_to_uint": 1,
                    "convert_float_to_unsigned_int": 1,
                    "convert_to_fixed_point": 1,
                    "convert_to_floating_point": 1,
                    "convert_to_unsigned": 1,
                    "extract_int": 1,
                    "fix_float_to_unsigned_int": 2,
                    "fix_number": 1,
                    "fix_unsigned": 1,
                    "fix_unsigned_float": 1,
                    "fixunssfsi": 1,
                    "get_speed": 1
                },
                "FUN_08002ec0": {
                    "ahrs_get_pitch": 3,
                    "get_pitch": 1,
                    "init_ahrs": 1,
                    "initialize_ahrs": 10,
                    "initialize_pitch": 1,
                    "initialize_position": 1,
                    "reset_ahrs_data": 1,
                    "update_pitch": 2
                },
                "FUN_08002ed4": {
                    "__addsf3": 1,
                    "compute_pid_speed": 1,
                    "compute_yaw_distribute": 1,
                    "distribute_motor_speeds": 1,
                    "distribute_speed": 1,
                    "fixunssfsi": 1,
                    "initialize_motor": 2,
                    "motor_compute": 1,
                    "motor_stop": 1,
                    "motor_stop_all": 5,
                    "stop_all_motors": 1,
                    "stop_motors": 1,
                    "toggle_led": 1,
                    "update_data": 1,
                    "update_yaw_pid": 1
                },
                "FUN_08002ee8": {
                    "ahrs_get_roll": 1,
                    "compute_altitude_pid": 1,
                    "compute_pid_speed": 1,
                    "convert_float_to_unsigned_int": 1,
                    "fixunssfsi": 1,
                    "initialize_pid": 1,
                    "motor_distribute_speed": 2,
                    "motor_start": 1,
                    "motor_stop_all": 3,
                    "stop_all_motors": 1,
                    "stop_motor": 2,
                    "stop_motors": 1,
                    "toggle_led": 1,
                    "update_data": 1,
                    "update_motor_state": 1,
                    "update_roll_pid": 1
                },
                "FUN_08003f3c": {
                    "ahrs_get_yaw": 1,
                    "compare_less_than": 1,
                    "compute_pid_altitude": 1,
                    "motor_distribute_speed": 5,
                    "motor_stop_all": 5,
                    "pid_update_altitude": 1,
                    "stop_motors": 2,
                    "toggle_led": 3,
                    "toggle_led1": 1
                },
                "FUN_080041c4": {
                    "ahrs_get_yaw": 2,
                    "compute_roll_pid": 1,
                    "compute_yaw": 1,
                    "motor_stop_all": 2,
                    "pid_compute": 3,
                    "stop_motors": 1,
                    "toggle_led": 8,
                    "update_yaw": 1
                },
                "FUN_0800426c": {
                    "ahrs_get_roll": 2,
                    "compute_pid": 1,
                    "compute_pitch_pid": 1,
                    "compute_roll": 1,
                    "distribute_speed_to_motors": 1,
                    "pid_compute": 1,
                    "toggle_le_ds": 1,
                    "toggle_led": 11,
                    "update_roll": 1
                },
                "FUN_0800483c": {
                    "compute_pid": 1,
                    "compute_yaw_pid": 1,
                    "motor_distribute_speed": 4,
                    "pid_compute": 5,
                    "pid_update": 1,
                    "pid_update_altitude": 4,
                    "stop_motors": 1,
                    "update_altitude": 2,
                    "update_altitude_pid": 1
                },
                "FUN_08004a30": {
                    "ahrs_get_pitch": 1,
                    "distribute_motor_speed": 1,
                    "distribute_speed": 1,
                    "fixunssfsi": 1,
                    "motor_distribute_speed": 1,
                    "motor_stop_all": 4,
                    "stop_motors": 2,
                    "toggle_led": 1,
                    "update_altitude": 2,
                    "update_dat_20000094": 1,
                    "update_data": 1,
                    "update_motor_speed": 1,
                    "update_motor_speeds": 2,
                    "update_pitch_pid": 1
                },
                "FUN_08004a84": {
                    "calculate_pitch_roll_and_yaw": 1,
                    "calculate_pitch_roll_yaw": 2,
                    "compute_and_control_motors": 1,
                    "control_loop": 1,
                    "improve_code": 1,
                    "process_ahrs_data": 1,
                    "process_sensor_data": 3,
                    "update_ahrs_and_pid": 1,
                    "update_ahrs_data": 4,
                    "update_altitude_and_perform_actions": 1,
                    "update_and_control_motors": 1,
                    "update_flight_controls": 1,
                    "update_flight_data": 7,
                    "update_pitch_roll_yaw": 1,
                    "update_sensor_data": 3,
                    "update_sensor_data_and_compute_pid": 2
                },
                "Motor_DistributeSpeed": {
                    "distribute_motor_speed": 10,
                    "distribute_speed": 3
                },
                "Motor_StopAll": {
                    "stop_all_motors": 13
                },
                "PID_Compute": {
                    "compute_pid": 12
                },
                "PID_UpdateAltitude": {
                    "update_altitude": 9,
                    "update_altitude_pid": 3
                },
                "__addsf3": {
                    "add_float": 8,
                    "add_floats": 2,
                    "add_single_float": 1,
                    "add_single_float3": 1
                },
                "__aeabi_fcmpgt": {
                    "compare_float_greater": 1,
                    "compare_float_greater_than": 2,
                    "compare_greater": 2,
                    "compare_greater_than": 3,
                    "float_greater_than": 1,
                    "greater_than": 1,
                    "is_greater_than": 2
                },
                "__aeabi_fcmplt": {
                    "compare_float_less": 1,
                    "compare_float_less_than": 2,
                    "compare_less": 2,
                    "compare_less_than": 3,
                    "float_less_than": 1,
                    "is_less_than": 2,
                    "less_than": 1
                },
                "__aeabi_fmul": {
                    "float_multiply": 1,
                    "multiply_float": 6,
                    "multiply_floats": 4,
                    "multiply_single_float": 1
                },
                "__fixunssfsi": {
                    "convert_float_to_int_unsigned": 1,
                    "convert_float_to_unsigned_int": 4,
                    "convert_to_unsigned_int": 3,
                    "fix_unsigned_single_float_to_int": 1,
                    "float_to_u_int": 1,
                    "float_to_unsigned_int": 2
                },
                "addSingleFloat": {
                    "add_single_float": 1
                },
                "computePID": {
                    "compute_pid": 1
                },
                "convertToUnsignedInt": {
                    "convert_to_unsigned_int": 1
                },
                "distributeSpeed": {
                    "distribute_speed": 1
                },
                "getPitch": {
                    "get_pitch": 1
                },
                "getRoll": {
                    "get_roll": 1
                },
                "getYaw": {
                    "get_yaw": 1
                },
                "iVar1": {
                    "comparison_result": 2
                },
                "isGreaterThan": {
                    "is_greater_than": 1
                },
                "isLessThan": {
                    "is_less_than": 1
                },
                "multiplySingleFloat": {
                    "multiply_single_float": 1
                },
                "param_1": {
                    "pitch": 1
                },
                "param_2": {
                    "roll": 1
                },
                "param_3": {
                    "yaw": 1
                },
                "param_4": {
                    "altitude": 1
                },
                "stopAllMotors": {
                    "stop_all_motors": 1
                },
                "toggleLED": {
                    "toggle_led": 10,
                    "toggle_led_state": 2
                },
                "updateAltitude": {
                    "update_altitude": 1
                },
                "updateFlightData": {
                    "update_flight_data": 1
                }
            },
            "called": [
                "FUN_08002ec0",
                "FUN_0800426c",
                "FUN_080041c4",
                "FUN_0800483c",
                "FUN_08000adc",
                "FUN_08003f3c",
                "FUN_08001064",
                "FUN_08000cec",
                "FUN_080010c4",
                "FUN_08004a30",
                "FUN_08002ee8",
                "FUN_08001028",
                "FUN_08002ed4"
            ],
            "calling": [
                "FUN_0800411c"
            ],
            "code": "\nvoid update_flight_data_08004a84(void)\n\n{\n  int comparison_result;\n  \n  DAT_200000d8 = get_pitch();\n  DAT_20000134 = get_roll();\n  DAT_20000190 = get_yaw();\n  update_altitude();\n  comparison_result = compare_greater_than(DAT_200000d8,0);\n  if (comparison_result == 0) {\n    comparison_result = compare_less_than(DAT_200000d8,0xc2a00000);\n  }\n  else {\n    comparison_result = compare_greater_than(DAT_200000d8,0x42a00000);\n  }\n  if (comparison_result == 0) {\n    comparison_result = compare_greater_than(DAT_20000134,0);\n    if (comparison_result == 0) {\n      comparison_result = compare_less_than(DAT_20000134,0xc2a00000);\n    }\n    else {\n      comparison_result = compare_greater_than(DAT_20000134,0x42a00000);\n    }\n    if (comparison_result == 0) {\n      toggle_led(1,1);\n      compute_pid(&DAT_200000a8);\n      compute_pid(&DAT_20000104);\n      compute_pid(&DAT_20000160);\n      if (DAT_20000285 != '\\0') {\n        compute_pid(&DAT_2000004c);\n        add_float(DAT_20000094,0x44bb8000);\n      }\n      DAT_20000094 = DAT_20000288;\n      if (DAT_20000284 == '\\0') {\n        stop_all_motors();\n      }\n      else {\n        distribute_motor_speed(DAT_20000288,DAT_200000f0,DAT_2000014c,DAT_200001a8);\n      }\n      multiply_float(DAT_200000ac,0x437f0000);\n      DAT_2000139b._3_1_ = convert_float_to_unsigned_int();\n      multiply_float(DAT_200000b0,0x437f0000);\n      DAT_2000139f._0_1_ = convert_float_to_unsigned_int();\n      multiply_float(DAT_20000108,0x437f0000);\n      DAT_2000139b._0_1_ = convert_float_to_unsigned_int();\n      multiply_float(DAT_2000010c,0x437f0000);\n      DAT_2000139b._1_1_ = convert_float_to_unsigned_int();\n      multiply_float(DAT_20000110,0x437f0000);\n      DAT_2000139b._2_1_ = convert_float_to_unsigned_int();\n      multiply_float(DAT_20000164,0x437f0000);\n      DAT_2000139f._2_1_ = convert_float_to_unsigned_int();\n      multiply_float(DAT_20000168,0x437f0000);\n      DAT_2000139f._3_1_ = convert_float_to_unsigned_int();\n      multiply_float(DAT_2000016c,0x437f0000);\n      DAT_200013a3._0_1_ = convert_float_to_unsigned_int();\n      multiply_float(DAT_20000050,0x437f0000);\n      DAT_200013a3._1_1_ = convert_float_to_unsigned_int();\n      multiply_float(DAT_20000054,0x437f0000);\n      DAT_200013a3._2_1_ = convert_float_to_unsigned_int();\n      multiply_float(DAT_20000058,0x437f0000);\n      DAT_200013a3._3_1_ = convert_float_to_unsigned_int();\n      return;\n    }\n  }\n  stop_all_motors();\n  toggle_led(0,1);\n  return;\n}\n\n",
            "current_name": "update_flight_data_08004a84",
            "entrypoint": "0x08004a84",
            "imported": false,
            "improved": true,
            "renaming": {
                "AHRS_GetPitch": "get_pitch",
                "AHRS_GetRoll": "get_roll",
                "AHRS_GetYaw": "get_yaw",
                "FUN_08004a84": "update_flight_data_08004a84",
                "Motor_DistributeSpeed": "distribute_motor_speed",
                "Motor_StopAll": "stop_all_motors",
                "PID_Compute": "compute_pid",
                "PID_UpdateAltitude": "update_altitude",
                "__addsf3": "add_float",
                "__aeabi_fcmpgt": "compare_greater_than",
                "__aeabi_fcmplt": "compare_less_than",
                "__aeabi_fmul": "multiply_float",
                "__fixunssfsi": "convert_float_to_unsigned_int",
                "iVar1": "comparison_result",
                "toggleLED": "toggle_led"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004c18": {
            "additional_data": {
                "DAT_2000157c": {
                    "array": 1,
                    "array1": 1,
                    "data2": 1,
                    "data_array": 1,
                    "data_ptr": 2,
                    "ptr2": 1,
                    "register_array": 2,
                    "register_array1": 1,
                    "registers": 1,
                    "tick_data": 1,
                    "timer_ptr": 1
                },
                "DAT_20001584": {
                    "condition1": 1,
                    "const_value": 1,
                    "constant": 3,
                    "constant1": 2,
                    "constant_1": 1,
                    "constant_value": 1,
                    "constant_value1": 2,
                    "limit_value": 1,
                    "value1": 1
                },
                "DAT_2000158c": {
                    "additional_flag": 1,
                    "condition": 2,
                    "condition2": 1,
                    "const_flag": 1,
                    "constant2": 3,
                    "constant_2": 1,
                    "constant_value2": 2,
                    "is_zero": 1,
                    "value2": 1
                },
                "DAT_200015a0": {
                    "char4": 2,
                    "char_value4": 1,
                    "character4": 1,
                    "control_flag3": 1,
                    "flag4": 3,
                    "flag_1": 1,
                    "unused": 1,
                    "unused2": 1,
                    "value1": 1,
                    "variable1": 1
                },
                "DAT_200015a2": {
                    "char5": 1,
                    "count": 1,
                    "counter": 5,
                    "counter3": 1,
                    "flag5": 1,
                    "flag_2": 1,
                    "loop_counter": 1,
                    "value2": 1,
                    "variable2": 1
                },
                "DAT_200015b4": {
                    "another_flag": 1,
                    "char2": 2,
                    "char_value2": 1,
                    "character2": 1,
                    "control_flag1": 1,
                    "flag": 4,
                    "flag2": 3
                },
                "DAT_200015b5": {
                    "char1": 2,
                    "char_value1": 1,
                    "character": 1,
                    "character1": 1,
                    "control_character": 1,
                    "data_flag": 1,
                    "flag1": 3,
                    "input_char": 1,
                    "option": 1,
                    "state": 1
                },
                "DAT_200015b8": {
                    "char3": 2,
                    "char_value3": 1,
                    "character3": 1,
                    "control_flag2": 1,
                    "counter": 1,
                    "flag3": 3,
                    "temp": 1,
                    "unused": 2,
                    "yet_another_flag": 1
                },
                "DAT_20001636": {
                    "data": 3,
                    "data1": 2,
                    "data_buffer": 1,
                    "data_value": 1,
                    "input_data": 2,
                    "input_data_array": 1,
                    "input_flags": 1,
                    "input_value": 1,
                    "param_struct": 1
                },
                "FUN_0800115c": {
                    "initialize_device": 1
                },
                "FUN_08004c18": {
                    "analyze_binary": 1,
                    "check_and_process_input": 1,
                    "check_and_update_data": 1,
                    "check_data": 1,
                    "check_data_validity": 1,
                    "decode_and_process_string": 1,
                    "execute_operation": 1,
                    "process_data": 18,
                    "process_input": 3,
                    "validate_input": 2
                },
                "HAL_GetTick": {
                    "get_current_tick": 1,
                    "get_tick": 3,
                    "get_tick_count": 1,
                    "get_tick_value": 1,
                    "get_time": 1,
                    "get_timestamp": 1
                },
                "iVar2": {
                    "counter1": 2,
                    "current_tick": 1,
                    "index_var1": 1,
                    "interval_start": 1,
                    "iteration_count1": 1,
                    "start_tick": 2,
                    "start_ticks": 1,
                    "start_time": 13,
                    "tick_start": 4,
                    "timestamp1": 1,
                    "var2": 2,
                    "variable1": 2
                },
                "iVar3": {
                    "counter2": 2,
                    "current_tick": 3,
                    "current_ticks": 1,
                    "current_time": 8,
                    "elapsed_tick": 1,
                    "end_time": 5,
                    "index_var2": 1,
                    "interval_end": 1,
                    "iteration_count2": 1,
                    "tick_current": 2,
                    "tick_end": 1,
                    "timestamp2": 1,
                    "var3": 2,
                    "variable2": 2
                },
                "param_1": {
                    "data": 1,
                    "input": 17,
                    "input_data": 9,
                    "input_string": 1,
                    "input_value": 2,
                    "operation_type": 1
                },
                "piVar1": {
                    "data_pointer": 1,
                    "int_array": 1,
                    "int_pointer": 2,
                    "pointer": 6,
                    "pointer1": 2,
                    "pointer_var1": 8,
                    "ptr": 5,
                    "ptr1": 4,
                    "ptr_data": 1,
                    "var1": 1
                },
                "puVar4": {
                    "data_pointer": 6,
                    "data_ptr": 7,
                    "input_data": 2,
                    "input_ptr": 1,
                    "pointer2": 2,
                    "pointer_var2": 2,
                    "pointer_var4": 3,
                    "ptr2": 2,
                    "ptr_data2": 1,
                    "ushort_pointer": 2,
                    "ushort_ptr": 3
                }
            },
            "called": [
                "FUN_0800115c"
            ],
            "calling": [
                "FUN_08004300",
                "FUN_08004c8c",
                "FUN_08004490"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800289e) */\n\nundefined4 process_data_08004c18(undefined input)\n\n{\n  int *pointer_var1;\n  int start_time;\n  int current_time;\n  ushort *data_ptr;\n  \n  DAT_20001636._0_1_ = input;\n  data_ptr = &DAT_20001636;\n  if (((DAT_200015b5 != '\\x01') && (DAT_200015b5 != '\\\"')) || (DAT_200015b4 == '\\x01')) {\n    return 2;\n  }\n  DAT_200015b4 = 1;\n  DAT_200015b8 = 0;\n  DAT_200015a0 = 1;\n  if (DAT_200015b5 == '\\\"') {\n    DAT_200015b5 = '2';\n  }\n  else {\n    DAT_200015b5 = '\\x12';\n  }\n  DAT_200015a2 = 1;\nLAB_080027c4:\n  do {\n    if (DAT_200015a2 == 0) {\n      start_time = get_tick();\n      do {\n        if (*DAT_2000157c << 0x19 < 0) {\n          if (DAT_200015b5 == '2') {\n            DAT_200015b5 = 0x22;\n          }\n          else {\n            DAT_200015b5 = 1;\n          }\n          DAT_200015b4 = 0;\n          return 0;\n        }\n        current_time = get_tick();\n      } while ((uint)(current_time - start_time) < 6);\nLAB_0800281c:\n      pointer_var1 = DAT_2000157c;\n      DAT_2000157c[3] = DAT_2000157c[3] & 0xffffff7f;\n      pointer_var1[3] = pointer_var1[3] & 0xffffffdf;\n      pointer_var1[3] = pointer_var1[3] & 0xfffffeff;\n      pointer_var1[5] = pointer_var1[5] & 0xfffffffe;\n      DAT_200015b5 = 1;\n      DAT_200015b4 = 0;\n      return 3;\n    }\n    DAT_200015a2 = DAT_200015a2 + -1;\n    if (DAT_20001584 == 0x1000) {\n      start_time = get_tick();\n      while (-1 < *DAT_2000157c << 0x18) {\n        current_time = get_tick();\n        if (5 < (uint)(current_time - start_time)) goto LAB_0800281c;\n      }\n      DAT_2000157c[1] = *data_ptr & 0x1ff;\n      if (DAT_2000158c == 0) {\n        data_ptr = data_ptr + 1;\n        goto LAB_080027c4;\n      }\n    }\n    else {\n      start_time = get_tick();\n      while (-1 < *DAT_2000157c << 0x18) {\n        current_time = get_tick();\n        if (5 < (uint)(current_time - start_time)) goto LAB_0800281c;\n      }\n      DAT_2000157c[1] = (uint)*(byte *)data_ptr;\n    }\n    data_ptr = (ushort *)((int)data_ptr + 1);\n  } while( true );\n}\n\n",
            "current_name": "process_data_08004c18",
            "entrypoint": "0x08004c18",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004c18": "process_data_08004c18",
                "HAL_GetTick": "get_tick",
                "iVar2": "start_time",
                "iVar3": "current_time",
                "param_1": "input",
                "piVar1": "pointer_var1",
                "puVar4": "data_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004c30": {
            "additional_data": {
                "CB_Write": {
                    "write_data": 10,
                    "write_data_to_buffer": 1,
                    "write_data_to_cb": 1,
                    "write_data_to_memory": 1,
                    "write_to_buffer": 4,
                    "write_to_cb": 2,
                    "write_to_memory": 1
                },
                "CW_Write": {
                    "write_data": 1,
                    "write_status": 1
                },
                "DAT_20000364": {
                    "buffer": 2,
                    "buffer_1": 1,
                    "buffer_data": 2,
                    "cb_data": 1,
                    "cb_start": 1,
                    "constant1": 1,
                    "data1": 4,
                    "data_address": 2,
                    "data_buffer": 3,
                    "data_buffer1": 1,
                    "data_ptr": 1,
                    "memory_address1": 1,
                    "memory_location1": 1,
                    "write_address": 1,
                    "write_buffer": 1
                },
                "DAT_2000157c": {
                    "config": 1,
                    "config_var1": 2,
                    "data3": 1,
                    "data_address": 1,
                    "data_offset": 1,
                    "data_ptr2": 1,
                    "flag_addr_1": 1,
                    "flag_address": 1,
                    "flag_var1": 1,
                    "global_var_1": 1,
                    "i_var": 1,
                    "memory_location3": 1,
                    "ptr1": 1,
                    "settings_address": 2,
                    "settings_ptr": 1,
                    "settings_var_1": 1,
                    "some_memory_address": 1,
                    "var1": 5
                },
                "DAT_200015a4": {
                    "address": 1,
                    "config_var7": 1,
                    "data_buffer3": 1,
                    "data_pointer2": 1,
                    "data_ptr": 3,
                    "data_ptr3": 1,
                    "data_ptr_2": 1,
                    "global_var_7": 1,
                    "memory_address3": 1,
                    "modified_data_address": 1,
                    "pointer1": 1,
                    "pointer_to_memory": 1,
                    "pointer_var": 1,
                    "ptr2": 1,
                    "ptr_data": 1,
                    "status6": 1,
                    "temp_buffer": 1,
                    "temp_var4": 1,
                    "var2": 2,
                    "var4": 1,
                    "var5": 1
                },
                "DAT_200015a8": {
                    "config_var5": 1,
                    "flag4": 6,
                    "flag_2": 1,
                    "flag_4": 3,
                    "flag_var5": 1,
                    "global_var_5": 1,
                    "status4": 1,
                    "temp_var2": 1,
                    "temporary_value2": 1,
                    "value2": 1,
                    "value4": 2,
                    "var2": 1,
                    "var3": 1,
                    "variable2": 3
                },
                "DAT_200015aa": {
                    "config_var6": 1,
                    "flag5": 6,
                    "flag_3": 1,
                    "flag_5": 3,
                    "flag_var6": 1,
                    "global_var_6": 1,
                    "status5": 1,
                    "temp_var3": 1,
                    "temporary_value3": 1,
                    "value3": 1,
                    "value5": 2,
                    "var3": 1,
                    "var4": 1,
                    "variable3": 3
                },
                "DAT_200015b4": {
                    "char_value2": 1,
                    "condition2": 7,
                    "config_var3": 1,
                    "flag": 1,
                    "flag2": 6,
                    "flag_2": 3,
                    "flag_var3": 1,
                    "global_var_3": 1,
                    "status2": 1,
                    "value2": 2
                },
                "DAT_200015b5": {
                    "char_value1": 1,
                    "condition1": 7,
                    "config_var2": 1,
                    "flag1": 6,
                    "flag_1": 3,
                    "flag_var2": 1,
                    "global_var_2": 1,
                    "status1": 1,
                    "type_flag": 1,
                    "value1": 2
                },
                "DAT_200015b8": {
                    "config_var4": 1,
                    "flag3": 6,
                    "flag_1": 1,
                    "flag_3": 3,
                    "flag_var4": 1,
                    "global_var_4": 1,
                    "status3": 1,
                    "temp_var1": 1,
                    "temporary_value1": 1,
                    "value1": 1,
                    "value3": 2,
                    "var1": 1,
                    "var2": 1,
                    "variable1": 3
                },
                "DAT_20001634": {
                    "buffer_2": 1,
                    "cb_end": 1,
                    "constant2": 1,
                    "data2": 4,
                    "data_buffer": 1,
                    "data_buffer2": 1,
                    "data_size": 1,
                    "data_to_write": 2,
                    "memory_address2": 1,
                    "memory_location2": 1,
                    "new_data": 2,
                    "new_data_value": 1,
                    "source_data": 1,
                    "write_address": 1,
                    "write_data": 3,
                    "write_data_buffer": 1
                },
                "FUN_08003ec8": {
                    "perform_operation": 1,
                    "process_data": 1,
                    "processing_function": 1
                },
                "FUN_08004c30": {
                    "check_and_initialize": 1,
                    "check_and_modify_data": 2,
                    "check_and_modify_settings": 2,
                    "check_and_process_data": 3,
                    "check_and_set_flags": 1,
                    "check_and_update_data": 1,
                    "check_and_update_parameters": 1,
                    "check_and_update_settings": 1,
                    "check_and_write_data": 1,
                    "check_data_and_update_flags": 1,
                    "check_data_validity": 1,
                    "check_if_valid_parameter_ptr": 1,
                    "check_param_and_write_data": 1,
                    "check_param_value": 1,
                    "check_write_status": 1,
                    "process_data": 8,
                    "write_data_if_valid": 2
                },
                "iVar1": {
                    "flag": 1,
                    "i_var": 1,
                    "result": 7,
                    "return_value": 5,
                    "temp_var": 14,
                    "temp_variable": 1
                },
                "param_1": {
                    "data": 8,
                    "data_pointer": 3,
                    "data_ptr": 4,
                    "input": 2,
                    "input_array": 2,
                    "input_data": 4,
                    "input_param": 2,
                    "param1": 1,
                    "param_array": 1,
                    "settings": 2,
                    "status": 1
                },
                "param_2": {
                    "param2": 1
                }
            },
            "called": [
                "FUN_08003ec8"
            ],
            "calling": [
                "FUN_0800290c"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08002902) */\n\nint * check_and_process_data_08004c30(int *data)\n\n{\n  int temp_var;\n  \n  if (*data != 0x40013800) {\n    return data;\n  }\n  write_data(&DAT_20000364,DAT_20001634);\n  temp_var = DAT_2000157c;\n  if (((DAT_200015b5 == '\\x01') || (DAT_200015b5 == '\\x12')) && (DAT_200015b4 != '\\x01')) {\n    DAT_200015b8 = 0;\n    DAT_200015a8 = 1;\n    DAT_200015aa = 1;\n    DAT_200015b4 = 0;\n    if (DAT_200015b5 == '\\x12') {\n      DAT_200015b5 = 0x32;\n    }\n    else {\n      DAT_200015b5 = 0x22;\n    }\n    DAT_200015a4 = &DAT_20001634;\n    *(uint *)(DAT_2000157c + 0xc) = *(uint *)(DAT_2000157c + 0xc) | 0x100;\n    *(uint *)(temp_var + 0x14) = *(uint *)(temp_var + 0x14) | 1;\n    *(uint *)(temp_var + 0xc) = *(uint *)(temp_var + 0xc) | 0x20;\n    return (int *)0x0;\n  }\n  return (int *)0x2;\n}\n\n",
            "current_name": "check_and_process_data_08004c30",
            "entrypoint": "0x08004c30",
            "imported": false,
            "improved": true,
            "renaming": {
                "CB_Write": "write_data",
                "FUN_08004c30": "check_and_process_data_08004c30",
                "iVar1": "temp_var",
                "param_1": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004c64": {
            "additional_data": {
                "DAT_20000364": {
                    "data_array": 2
                },
                "DAT_20000b64": {
                    "count1": 1,
                    "data1": 9,
                    "parameter_1": 1,
                    "variable1": 2
                },
                "DAT_20000b66": {
                    "count2": 1,
                    "data2": 9,
                    "parameter_2": 1,
                    "variable2": 2
                },
                "DAT_20000b68": {
                    "count3": 1,
                    "data3": 9,
                    "parameter_3": 1,
                    "variable3": 2
                },
                "FUN_08004c64": {
                    "initialize_array": 2,
                    "initialize_data": 26,
                    "initialize_memory": 1,
                    "initialize_parameters": 1,
                    "initialize_variables": 1
                },
                "iVar1": {
                    "counter": 5,
                    "i": 1,
                    "index": 24,
                    "iteration_count": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004c70"
            ],
            "code": "\nvoid initialize_data_08004c64(void)\n\n{\n  int index;\n  \n  index = 0;\n  DAT_20000b64 = 0;\n  DAT_20000b66 = 0;\n  DAT_20000b68 = 0;\n  do {\n    (&DAT_20000364)[index] = 0;\n    index = index + 1;\n  } while (index != 0x800);\n  return;\n}\n\n",
            "current_name": "initialize_data_08004c64",
            "entrypoint": "0x08004c64",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004c64": "initialize_data_08004c64",
                "iVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004c70": {
            "additional_data": {
                "0x01": {
                    "byte_value2": 1
                },
                "0x08002902": {
                    "unreachable_block": 2
                },
                "0x12": {
                    "byte_value1": 1
                },
                "0x22": {
                    "byte_value4": 1,
                    "serial_data2": 1
                },
                "0x32": {
                    "byte_value3": 1,
                    "serial_data1": 1
                },
                "DAT_2000157c": {
                    "communication_address": 1,
                    "communication_data": 1,
                    "communication_settings": 1,
                    "constant_data1": 1,
                    "data1": 1,
                    "data_address1": 1,
                    "data_pointer": 1,
                    "data_ptr": 3,
                    "data_var1": 2,
                    "data_variable": 1,
                    "data_variable1": 2,
                    "serial_config": 1,
                    "serial_data_pointer": 2,
                    "serial_params": 1,
                    "serial_status": 1,
                    "status": 1,
                    "var1": 1
                },
                "DAT_200015a4": {
                    "address": 1,
                    "buffer": 3,
                    "buffer_pointer": 2,
                    "buffer_ptr": 2,
                    "data_buffer": 1,
                    "data_pointer": 4,
                    "data_pointer2": 1,
                    "data_ptr2": 1,
                    "data_var2": 1,
                    "data_var7": 1,
                    "data_variable2": 1,
                    "destination": 1,
                    "pointer1": 2,
                    "serial_data": 1
                },
                "DAT_200015a8": {
                    "bool_value1": 1,
                    "byte2_flag": 1,
                    "data_var5": 1,
                    "flag1": 5,
                    "flag2": 2,
                    "flag3": 2,
                    "flag4": 1,
                    "flag_variable4": 1,
                    "initialized_flag2": 1,
                    "is_initialized": 1,
                    "serial_flag2": 1,
                    "setting2": 1,
                    "status_value": 1,
                    "value1": 1,
                    "value_a": 1,
                    "variable2": 1
                },
                "DAT_200015aa": {
                    "bool_value2": 1,
                    "byte3_flag": 1,
                    "control_value": 1,
                    "data_var6": 1,
                    "flag2": 5,
                    "flag3": 2,
                    "flag4": 2,
                    "flag5": 1,
                    "flag_variable5": 1,
                    "initialized_flag3": 1,
                    "is_connected": 1,
                    "serial_flag3": 1,
                    "setting3": 1,
                    "value2": 1,
                    "value_b": 1,
                    "variable3": 1
                },
                "DAT_200015b4": {
                    "character2": 1,
                    "condition_byte2": 1,
                    "condition_flag": 1,
                    "constant_data3": 1,
                    "data_var3": 1,
                    "flag": 6,
                    "flag1": 1,
                    "flag2": 2,
                    "flag_byte": 2,
                    "flag_variable2": 1,
                    "serial_byte2": 2,
                    "serial_status2": 1,
                    "status_flag2": 1,
                    "value2": 1
                },
                "DAT_200015b5": {
                    "character1": 1,
                    "condition": 1,
                    "condition_byte1": 1,
                    "constant_data2": 1,
                    "data_flag": 1,
                    "data_var2": 1,
                    "flag1": 2,
                    "flag_variable1": 1,
                    "input_byte": 1,
                    "input_data": 1,
                    "serial_byte1": 2,
                    "serial_data": 1,
                    "serial_mode": 1,
                    "serial_status": 1,
                    "serial_status1": 1,
                    "status_byte": 2,
                    "status_flag": 1,
                    "status_flag1": 1,
                    "value1": 1
                },
                "DAT_200015b8": {
                    "byte1_flag": 1,
                    "counter": 5,
                    "counter1": 2,
                    "data_var4": 1,
                    "error_code": 1,
                    "flag1": 2,
                    "flag2": 1,
                    "flag3": 1,
                    "flag_variable3": 1,
                    "initialized_flag": 1,
                    "initialized_flag1": 1,
                    "reset_value": 1,
                    "serial_flag1": 1,
                    "setting1": 1,
                    "temp_value": 1,
                    "variable1": 1
                },
                "DAT_200015c4": {
                    "constant_data4": 1
                },
                "DAT_20001634": {
                    "buffer": 2,
                    "buffer_data": 1,
                    "constant": 1,
                    "constant_data5": 1,
                    "constant_value": 1,
                    "data": 1,
                    "data1": 1,
                    "data_address": 1,
                    "data_var3": 1,
                    "data_var8": 1,
                    "data_variable2": 1,
                    "data_variable3": 1,
                    "default_buffer": 1,
                    "default_data": 2,
                    "default_serial_data": 1,
                    "new_data": 1,
                    "source": 1,
                    "temp_buffer": 1,
                    "variable4": 1
                },
                "FUN_08004c64": {
                    "clear_serial_buffer": 1,
                    "flush_serial_buffer": 1,
                    "flush_serial_data": 1,
                    "initialize": 1,
                    "initialize_subfunctions": 1,
                    "reset_settings": 1
                },
                "FUN_08004c70": {
                    "check_and_initialize": 1,
                    "check_serial_communication": 1,
                    "initialize_communication": 6,
                    "initialize_serial_communication": 13,
                    "perform_serial_operation": 1,
                    "process_data": 5,
                    "process_serial_data": 3
                },
                "iVar1": {
                    "communication_settings": 1,
                    "communication_status": 1,
                    "counter": 1,
                    "data": 3,
                    "data_address": 1,
                    "data_counter": 1,
                    "data_index": 1,
                    "data_offset": 2,
                    "data_pointer": 2,
                    "data_variable": 2,
                    "selected_index": 1,
                    "serial_data": 2,
                    "serial_data_address": 1,
                    "serial_data_port": 1,
                    "serial_device_address": 1,
                    "serial_port_address": 1,
                    "serial_port_settings": 1,
                    "status": 2,
                    "temp": 1,
                    "temp_var": 1,
                    "temp_variable": 2,
                    "variable1": 1
                },
                "serialFlush": {
                    "clear_serial_buffer": 3,
                    "flush_serial": 4,
                    "flush_serial_buffer": 5,
                    "flush_serial_data": 10
                }
            },
            "called": [
                "FUN_08004c64"
            ],
            "calling": [
                "FUN_08004194"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08002902) */\n\nundefined4 initialize_serial_communication_08004c70(void)\n\n{\n  int data;\n  \n  flush_serial_data();\n  data = DAT_2000157c;\n  if (((DAT_200015b5 == '\\x01') || (DAT_200015b5 == '\\x12')) && (DAT_200015b4 != '\\x01')) {\n    DAT_200015b8 = 0;\n    DAT_200015a8 = 1;\n    DAT_200015aa = 1;\n    DAT_200015b4 = 0;\n    if (DAT_200015b5 == '\\x12') {\n      DAT_200015b5 = 0x32;\n    }\n    else {\n      DAT_200015b5 = 0x22;\n    }\n    DAT_200015a4 = &DAT_20001634;\n    *(uint *)(DAT_2000157c + 0xc) = *(uint *)(DAT_2000157c + 0xc) | 0x100;\n    *(uint *)(data + 0x14) = *(uint *)(data + 0x14) | 1;\n    *(uint *)(data + 0xc) = *(uint *)(data + 0xc) | 0x20;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "current_name": "initialize_serial_communication_08004c70",
            "entrypoint": "0x08004c70",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004c70": "initialize_serial_communication_08004c70",
                "iVar1": "data",
                "serialFlush": "flush_serial_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004c8c": {
            "additional_data": {
                "FUNK_08004c8c": {
                    "print_string": 1
                },
                "FUN_08004c8c": {
                    "print_serial_string": 4,
                    "print_string": 23,
                    "write_serial_data": 1,
                    "write_serial_string": 1,
                    "write_string": 1
                },
                "param_1": {
                    "data": 1,
                    "input_string": 2,
                    "message": 2,
                    "str": 3,
                    "string": 21,
                    "string_to_print": 2
                },
                "puVar2": {
                    "current_char": 28,
                    "current_character": 3
                },
                "serialWrite": {
                    "write_character": 1
                },
                "uVar1": {
                    "data_length": 1,
                    "length": 4,
                    "message_length": 2,
                    "str_length": 2,
                    "string_length": 21
                }
            },
            "called": [
                "FUN_08004c18",
                "FUN_08000150"
            ],
            "calling": [
                "FUN_08004cac",
                "FUN_08004300",
                "FUN_08004490"
            ],
            "code": "\nvoid print_serial_string_08004c8c(undefined *string)\n\n{\n  uint string_length;\n  undefined *current_char;\n  \n  current_char = string;\n  while( true ) {\n    string_length = strlen(string);\n    if (string_length <= (uint)((int)current_char - (int)string)) break;\n    write_character(*current_char);\n    current_char = current_char + 1;\n  }\n  return;\n}\n\n",
            "current_name": "print_serial_string_08004c8c",
            "entrypoint": "0x08004c8c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004c8c": "print_serial_string_08004c8c",
                "param_1": "string",
                "puVar2": "current_char",
                "serialWrite": "write_character",
                "uVar1": "string_length"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004cac": {
            "additional_data": {
                "FUN_08004c8c": {
                    "clear_buffer": 1,
                    "print": 2,
                    "print_char_array": 1,
                    "print_data": 5,
                    "print_output_buffer": 1,
                    "print_serial": 3,
                    "print_serial_message": 1,
                    "print_serialized": 1,
                    "print_string": 2,
                    "print_to_serial": 3,
                    "serial_print": 8,
                    "serial_print_data": 1
                },
                "FUN_08004cac": {
                    "print_and_serial_print": 15,
                    "print_and_serialize": 3,
                    "print_converted_value": 1,
                    "print_formatted_data": 2,
                    "print_formatted_value": 3,
                    "print_param_to_serial": 1,
                    "print_param_with_prefix": 1,
                    "print_parameter_in_hex": 1,
                    "print_parameter_value": 1,
                    "print_value": 2,
                    "print_with_serial": 1
                },
                "FUN_08004ffc": {
                    "convert_value_to_char_array": 1,
                    "format_and_print": 1,
                    "format_data": 4,
                    "format_input_data": 2,
                    "format_message": 1,
                    "format_param": 1,
                    "format_print": 1,
                    "format_string": 12,
                    "format_string_and_print": 1,
                    "format_value": 2,
                    "formatted_print": 1,
                    "print_with_param_and_format": 1
                },
                "FUN_08004ffd": {
                    "format_data": 1
                },
                "param_1": {
                    "buffer": 2,
                    "char_array": 1,
                    "data": 7,
                    "input": 2,
                    "input_data": 3,
                    "input_value": 3,
                    "message": 3,
                    "message_buffer": 1,
                    "output_buffer": 1,
                    "param": 1,
                    "prefix": 1,
                    "str": 1,
                    "string": 1,
                    "string_array": 1,
                    "string_to_print": 1,
                    "value": 2
                },
                "param_2": {
                    "arg1": 4,
                    "format": 1,
                    "format_offset": 1,
                    "format_string": 2,
                    "param1": 2,
                    "param2": 4,
                    "param_2": 2,
                    "param_format": 1,
                    "parameter1": 1,
                    "placeholder1": 1,
                    "string": 2,
                    "value1": 1
                },
                "param_3": {
                    "arg1": 4,
                    "arg2": 4,
                    "param2": 2,
                    "param3": 4,
                    "param_3": 4,
                    "param_offset1": 1,
                    "parameter2": 1,
                    "placeholder2": 1,
                    "value2": 1
                },
                "param_4": {
                    "arg2": 4,
                    "arg3": 4,
                    "param3": 2,
                    "param4": 4,
                    "param_4": 4,
                    "param_offset2": 1,
                    "parameter3": 1,
                    "placeholder3": 1,
                    "value3": 1
                }
            },
            "called": [
                "FUN_08004ffc",
                "FUN_08004c8c"
            ],
            "calling": [
                "FUN_08004490"
            ],
            "code": "\nvoid print_and_serial_print_08004cac(undefined4 data)\n\n{\n  siprintf(&DAT_20001636,&DAT_0800735e,data);\n  serialPrint(&DAT_20001636);\n  return;\n}\n\n",
            "current_name": "print_and_serial_print_08004cac",
            "entrypoint": "0x08004cac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004cac": "print_and_serial_print_08004cac",
                "param_1": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004ccc": {
            "additional_data": {
                "0xfffffff4": {
                    "interrupt1": 2
                },
                "0xfffffff5": {
                    "interrupt2": 2
                },
                "0xfffffff6": {
                    "interrupt3": 2
                },
                "0xfffffffb": {
                    "interrupt4": 2
                },
                "0xfffffffc": {
                    "interrupt5": 2
                },
                "0xfffffffe": {
                    "interrupt6": 2
                },
                "0xffffffff": {
                    "interrupt7": 2
                },
                "FUN_08001170": {
                    "configure_interrupt": 1,
                    "configure_interrupt_priorities_helper2": 1,
                    "configure_interrupt_priority": 1,
                    "configure_interrupt_priority2": 1,
                    "configure_interrupt_priority_single": 1,
                    "configure_unused_interrupt_priority": 1,
                    "disable_interrupt": 3,
                    "disable_irq": 1,
                    "reset_interrupt_priority": 1,
                    "set_priority_all": 2,
                    "set_priority_only": 1
                },
                "FUN_08001194": {
                    "configure_interrupt_priorities_helper": 1,
                    "configure_interrupt_priority": 6,
                    "configure_interrupt_priority1": 1,
                    "initialize_irq": 1,
                    "set_interrupt_priority": 1,
                    "set_priority": 4
                },
                "FUN_08004ccc": {
                    "configure_interrupt_priorities": 15,
                    "configure_nvic_priorities": 1,
                    "initialize_interrupt_priorities": 6,
                    "initialize_interrupts": 2,
                    "initialize_priority": 1,
                    "initialize_priority_settings": 1,
                    "set_interrupt_priority": 1,
                    "set_priority_and_grouping": 1,
                    "set_priority_group_and_levels": 1,
                    "set_priority_group_and_priorities": 1,
                    "update_priority_settings": 1
                },
                "HAL_NVIC_SetPriority": {
                    "set_interrupt_priority": 10,
                    "set_priority": 2
                },
                "HAL_NVIC_SetPriorityGrouping": {
                    "set_interrupt_priority_grouping": 9,
                    "set_priority_grouping": 6
                },
                "_DAT_40021018": {
                    "interrupt_control_register": 2,
                    "interrupt_flag": 1,
                    "interrupt_flags": 2,
                    "priority_flags": 1
                },
                "param_1": {
                    "arg1": 2,
                    "grouping": 1,
                    "grouping_method": 1,
                    "interrupt": 2,
                    "interrupt1": 1,
                    "interrupt_priority": 1,
                    "irq_param": 1,
                    "p1": 1,
                    "param1": 7,
                    "param_1": 1,
                    "param_a": 1,
                    "priority1": 5,
                    "priority_group": 1,
                    "priority_grouping": 3,
                    "priority_grouping_value": 1,
                    "unknown_param1": 1,
                    "value1": 1
                },
                "param_2": {
                    "arg2": 2,
                    "interrupt2": 1,
                    "irq_param_2": 1,
                    "p2": 1,
                    "param2": 12,
                    "param_2": 2,
                    "param_b": 1,
                    "priority": 1,
                    "priority2": 5,
                    "priority_group": 3,
                    "unknown_param2": 1,
                    "value2": 1
                },
                "param_3": {
                    "arg3": 2,
                    "interrupt3": 1,
                    "irq_param_3": 1,
                    "p3": 1,
                    "param3": 12,
                    "param_3": 2,
                    "param_c": 1,
                    "preempt_priority": 1,
                    "priority": 1,
                    "priority3": 5,
                    "register_value": 1,
                    "sub_priority": 1,
                    "unknown_param3": 1,
                    "value3": 1
                }
            },
            "called": [
                "FUN_08001194",
                "FUN_08001170"
            ],
            "calling": [
                "FUN_08001128"
            ],
            "code": "\n\n\nvoid configure_interrupt_priorities_08004ccc(undefined4 param1,undefined4 param2,undefined4 param3)\n\n{\n  _DAT_40021018 = _DAT_40021018 | 1;\n  set_interrupt_priority_grouping(3,param2,_DAT_40021018,1,param1,1,param3);\n  set_interrupt_priority(0xfffffff4,0);\n  set_interrupt_priority(0xfffffff5,0);\n  set_interrupt_priority(0xfffffff6,0);\n  set_interrupt_priority(0xfffffffb,0);\n  set_interrupt_priority(0xfffffffc,0);\n  set_interrupt_priority(0xfffffffe,0);\n  set_interrupt_priority(0xffffffff,0);\n  return;\n}\n\n",
            "current_name": "configure_interrupt_priorities_08004ccc",
            "entrypoint": "0x08004ccc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004ccc": "configure_interrupt_priorities_08004ccc",
                "HAL_NVIC_SetPriority": "set_interrupt_priority",
                "HAL_NVIC_SetPriorityGrouping": "set_interrupt_priority_grouping",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004d48": {
            "additional_data": {
                "FUN_08004d48": {
                    "configure_gpio": 1,
                    "init_gpio": 1,
                    "initialize_gpio": 28,
                    "initialize_gpio_if_parameter_matches": 1
                },
                "HAL_GPIO_Init": {
                    "configure_gpio": 2
                },
                "_DAT_4002101c": {
                    "gpio_control_register": 2
                },
                "local_14": {
                    "gpio_alternate_function": 1,
                    "gpio_cfg_parameter2": 1,
                    "gpio_config2": 7,
                    "gpio_config_2": 5,
                    "gpio_config_mode": 1,
                    "gpio_config_param2": 2,
                    "gpio_config_register2": 1,
                    "gpio_config_value2": 1,
                    "gpio_configuration_2": 1,
                    "gpio_init2": 1,
                    "gpio_init_mode": 1,
                    "gpio_init_var2": 1,
                    "gpio_mode": 1,
                    "gpio_parameter2": 1,
                    "gpio_pin": 1,
                    "gpio_pin_mode": 1,
                    "gpio_speed": 2,
                    "gpio_value_2": 1,
                    "pin_config": 1
                },
                "local_18": {
                    "gpio_cfg_parameter1": 1,
                    "gpio_config": 1,
                    "gpio_config1": 7,
                    "gpio_config_1": 5,
                    "gpio_config_param1": 2,
                    "gpio_config_register1": 1,
                    "gpio_config_value": 3,
                    "gpio_configuration": 1,
                    "gpio_configuration_1": 1,
                    "gpio_init1": 1,
                    "gpio_init_value": 1,
                    "gpio_init_var1": 1,
                    "gpio_mode": 2,
                    "gpio_parameter1": 1,
                    "gpio_pin_config": 2,
                    "gpio_value_1": 1
                },
                "param_1": {
                    "address": 1,
                    "base_address": 1,
                    "config_ptr": 1,
                    "data_ptr": 1,
                    "gpio_address": 8,
                    "gpio_base_address": 2,
                    "gpio_byte_ptr": 1,
                    "gpio_config": 1,
                    "gpio_config_ptr": 1,
                    "gpio_input": 1,
                    "gpio_param": 2,
                    "gpio_pin": 4,
                    "gpio_pointer": 4,
                    "gpio_port": 1,
                    "input_address": 1,
                    "ptr_to_value": 1
                },
                "param_2": {
                    "another_param": 1,
                    "gpio_config": 1,
                    "gpio_value": 1,
                    "init_value": 1,
                    "param": 5,
                    "param2": 6,
                    "param_2": 7,
                    "param_second": 1,
                    "param_two": 1,
                    "param_value": 4,
                    "unused_param": 1,
                    "value": 2
                }
            },
            "called": [
                "FUN_08001264"
            ],
            "calling": [
                "FUN_08001754"
            ],
            "code": "\n\n\nvoid initialize_gpio_if_parameter_matches_08004d48(int *gpio_address,undefined4 param_2)\n\n{\n  undefined4 gpio_config1;\n  undefined4 gpio_config2;\n  \n  if (*gpio_address == 0x40005400) {\n    gpio_config1 = 0xc0;\n    gpio_config2 = 0x12;\n    configure_gpio(0x40010c00,&gpio_config1,0x40005400,3,gpio_address,param_2);\n    _DAT_4002101c = _DAT_4002101c | 0x200000;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_gpio_if_parameter_matches_08004d48",
            "entrypoint": "0x08004d48",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004d48": "initialize_gpio_if_parameter_matches_08004d48",
                "HAL_GPIO_Init": "configure_gpio",
                "local_14": "gpio_config2",
                "local_18": "gpio_config1",
                "param_1": "gpio_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004d8c": {
            "additional_data": {
                "FUN_08004d8c": {
                    "process_parameter": 1,
                    "set_flag_based_on_value": 1,
                    "set_flags_based_on_value": 2,
                    "update_configuration": 1,
                    "update_control_registers": 2,
                    "update_data": 1,
                    "update_data_flags": 5,
                    "update_flag": 1,
                    "update_flags": 5,
                    "update_memory_permission": 1,
                    "update_memory_registers": 1,
                    "update_memory_status": 1,
                    "update_register_flags": 1,
                    "update_registers": 1,
                    "update_settings": 4,
                    "update_status": 1,
                    "update_status_flags": 2
                },
                "_DAT_40021018": {
                    "data1": 1,
                    "memory_status_register1": 1
                },
                "_DAT_4002101c": {
                    "data2": 1,
                    "memory_status_register2": 1
                },
                "iVar1": {
                    "config_value": 1,
                    "current_flag_value": 1,
                    "current_status": 1,
                    "current_value": 1,
                    "data_flag_value": 1,
                    "data_value": 3,
                    "flag": 1,
                    "flag_value": 4,
                    "input_value": 1,
                    "register_value": 1,
                    "temp_value": 1,
                    "value": 15
                },
                "param_1": {
                    "config_ptr": 1,
                    "data": 1,
                    "data_flag_ptr": 1,
                    "data_input": 1,
                    "data_pointer": 1,
                    "data_ptr": 3,
                    "flag": 1,
                    "flag_pointer": 1,
                    "flag_ptr": 1,
                    "input_ptr": 1,
                    "input_value": 1,
                    "memory_address": 1,
                    "memory_status": 1,
                    "parameter": 1,
                    "register": 1,
                    "register_address": 1,
                    "register_value": 1,
                    "settings": 4,
                    "status": 1,
                    "status_flag": 1,
                    "status_value": 1,
                    "value": 5
                }
            },
            "called": [],
            "calling": [
                "FUN_080023d0"
            ],
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nvoid update_data_flags_08004d8c(int *value)\n\n{\n  int value;\n  \n  value = *value;\n  if (value == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 | 0x800;\n  }\n  else if (value == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c | 1;\n  }\n  else if (value == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c | 2;\n  }\n  else if (value == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c | 4;\n  }\n  return;\n}\n\n",
            "current_name": "update_data_flags_08004d8c",
            "entrypoint": "0x08004d8c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004d8c": "update_data_flags_08004d8c",
                "iVar1": "value",
                "param_1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004e14": {
            "additional_data": {
                "0x300": {
                    "config3": 1
                },
                "0x40000000": {
                    "pin_2": 1
                },
                "0x40000400": {
                    "pin_3": 1
                },
                "0x40000800": {
                    "pin_4": 1
                },
                "0x40010800": {
                    "gpio_2": 1
                },
                "0x40010c00": {
                    "gpio_1": 1
                },
                "0x40012c00": {
                    "pin_1": 1
                },
                "0x800": {
                    "config1": 1
                },
                "2": {
                    "config4": 1
                },
                "3": {
                    "config2": 1
                },
                "FUN_08004e14": {
                    "initialize_gpio": 30,
                    "initialize_gpio_pin": 1
                },
                "HAL_GPIO_Init": {
                    "initialize_gpio_pin": 1,
                    "set_gpio": 1
                },
                "iVar2": {
                    "config_value": 2,
                    "data_value": 2,
                    "gpio_config_value": 1,
                    "gpio_pin": 1,
                    "gpio_value": 8,
                    "input": 1,
                    "input_value": 4,
                    "pin_value": 4,
                    "pin_value_check": 1,
                    "value": 6
                },
                "local_14": {
                    "constant_3": 1,
                    "gpio_config2": 1,
                    "gpio_pad_config_a": 1,
                    "local14": 4,
                    "local_14": 3,
                    "local_var": 2,
                    "local_var1": 7,
                    "local_variable1": 5,
                    "local_variable_1": 1,
                    "local_variable_14": 1,
                    "speed": 1,
                    "temp_var1": 1,
                    "unknown_var1": 1,
                    "unused_var": 1,
                    "unused_var1": 1
                },
                "local_18": {
                    "gpio_config": 3,
                    "gpio_config1": 1,
                    "gpio_configuration": 1,
                    "gpio_mode": 3,
                    "gpio_pin": 3,
                    "gpio_pin_mode": 1,
                    "mode": 3,
                    "mode_value": 1,
                    "pin_config": 8,
                    "pin_mode": 7
                },
                "local_c": {
                    "alternate_function": 1,
                    "constant3": 1,
                    "constant_4": 1,
                    "gpio_pad_config_c": 1,
                    "local_c": 7,
                    "local_flag": 1,
                    "local_var2": 2,
                    "local_var3": 7,
                    "local_variable3": 5,
                    "local_variable_c": 1,
                    "temp_var3": 1,
                    "unknown_var3": 1,
                    "unused_var3": 2
                },
                "param_1": {
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "gpio_address": 1,
                    "gpio_config": 8,
                    "gpio_config_ptr": 1,
                    "gpio_configuration": 1,
                    "gpio_pin": 3,
                    "gpio_pin_ptr": 1,
                    "gpio_ptr": 1,
                    "input": 2,
                    "input_data": 1,
                    "input_param": 1,
                    "input_value": 1,
                    "input_values": 1,
                    "p_value": 1,
                    "pin": 1,
                    "pin_number": 1,
                    "pin_value": 1,
                    "status": 1
                },
                "param_2": {
                    "address_param": 1,
                    "constant1": 1,
                    "constant_1": 1,
                    "param1": 1,
                    "param2": 19,
                    "param_2": 4,
                    "pin_config": 1,
                    "pin_config_a": 1,
                    "value": 1
                },
                "param_3": {
                    "constant2": 1,
                    "constant_2": 1,
                    "default_config": 1,
                    "param2": 1,
                    "param3": 18,
                    "param_3": 3,
                    "parameter3": 1,
                    "pin_config": 1,
                    "pin_config_b": 1,
                    "pin_mode": 1,
                    "value_param": 1
                },
                "uStack_10": {
                    "gpio_config3": 1,
                    "gpio_pad_config_b": 1,
                    "local_var2": 7,
                    "local_variable2": 5,
                    "local_variable_10": 1,
                    "local_variable_2": 1,
                    "param3_copy": 3,
                    "pull_direction": 1,
                    "stack_10": 1,
                    "stack_param": 1,
                    "stack_value": 1,
                    "stack_var": 1,
                    "temp_var2": 1,
                    "u_stack_10": 1,
                    "unknown_var2": 1,
                    "unused_var2": 2
                },
                "uVar1": {
                    "base_address": 2,
                    "gpio_address": 4,
                    "gpio_alternate_function": 1,
                    "gpio_base": 2,
                    "gpio_base_address": 8,
                    "gpio_config": 3,
                    "gpio_config_address": 1,
                    "gpio_config_val": 1,
                    "gpio_function": 1,
                    "gpio_pin": 1,
                    "gpio_port": 4,
                    "port_config": 1
                }
            },
            "called": [
                "FUN_08001264"
            ],
            "calling": [
                "FUN_0800458c"
            ],
            "code": "\nvoid initialize_gpio_pin_08004e14(int *gpio_config,undefined4 param2,undefined4 param3)\n\n{\n  undefined4 gpio_base_address;\n  int gpio_value;\n  undefined4 pin_config;\n  undefined4 local_var1;\n  undefined4 local_var2;\n  undefined4 local_c;\n  \n  gpio_value = *gpio_config;\n  if (gpio_value == 0x40012c00) {\n    pin_config = 0x800;\n  }\n  else {\n    if (gpio_value != 0x40000000) {\n      if (gpio_value == 0x40000400) {\n        pin_config = 3;\n      }\n      else {\n        if (gpio_value != 0x40000800) {\n          return;\n        }\n        pin_config = 0x300;\n      }\n      gpio_base_address = 0x40010c00;\n      goto LAB_08004e2e;\n    }\n    pin_config = 2;\n  }\n  gpio_base_address = 0x40010800;\nLAB_08004e2e:\n  local_c = 2;\n  local_var1 = 2;\n  local_var2 = param3;\n  set_gpio(gpio_base_address,&pin_config);\n  return;\n}\n\n",
            "current_name": "initialize_gpio_pin_08004e14",
            "entrypoint": "0x08004e14",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004e14": "initialize_gpio_pin_08004e14",
                "HAL_GPIO_Init": "set_gpio",
                "iVar2": "gpio_value",
                "local_14": "local_var1",
                "local_18": "pin_config",
                "param_1": "gpio_config",
                "param_2": "param2",
                "param_3": "param3",
                "uStack_10": "local_var2",
                "uVar1": "gpio_base_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004e7c": {
            "additional_data": {
                "FUN_08004e7c": {
                    "initialize_gpio": 20,
                    "initialize_gpio_interrupt": 9,
                    "initialize_gpio_interrupts": 1,
                    "initialize_peripheral_components": 1
                },
                "HAL_GPIO_Init": {
                    "configure_gpio": 1,
                    "initialize_gpio": 1
                },
                "HAL_NVIC_EnableIRQ": {
                    "enable_interrupt": 1,
                    "enable_irq": 1
                },
                "HAL_NVIC_SetPriority": {
                    "set_interrupt_priority": 1,
                    "set_priority": 1
                },
                "_DAT_40021018": {
                    "gpio_register": 1
                },
                "local_10": {
                    "another_value": 1,
                    "gpio_config3": 8,
                    "gpio_config_3": 1,
                    "gpio_config_c": 1,
                    "gpio_configuration3": 1,
                    "gpio_configuration_3": 1,
                    "gpio_init_config3": 1,
                    "gpio_init_data3": 1,
                    "gpio_init_param3": 1,
                    "gpio_init_struct3": 2,
                    "gpio_params3": 1,
                    "pin_config3": 1,
                    "pin_configuration_c": 1,
                    "pin_pull": 1,
                    "pin_type": 1,
                    "priority_config": 1,
                    "pull_config": 1,
                    "unused2": 1,
                    "unused_gpio_init_param1": 1
                },
                "local_14": {
                    "gpio_config2": 8,
                    "gpio_config_2": 1,
                    "gpio_config_b": 1,
                    "gpio_configuration2": 2,
                    "gpio_configuration_2": 1,
                    "gpio_init_config2": 1,
                    "gpio_init_data2": 1,
                    "gpio_init_param2": 1,
                    "gpio_init_struct2": 3,
                    "gpio_init_struct_params": 1,
                    "gpio_params2": 1,
                    "init_structure_param2": 1,
                    "input_pin_config": 1,
                    "pin_config": 1,
                    "pin_config2": 1,
                    "pin_configuration_b": 1,
                    "pin_mode": 2,
                    "pin_mode_speed": 1,
                    "some_value": 1,
                    "unused1": 1
                },
                "local_18": {
                    "gpio_config": 2,
                    "gpio_config1": 8,
                    "gpio_config_1": 1,
                    "gpio_config_a": 1,
                    "gpio_configuration1": 2,
                    "gpio_configuration_1": 1,
                    "gpio_init_config1": 1,
                    "gpio_init_data1": 1,
                    "gpio_init_param1": 1,
                    "gpio_init_struct": 4,
                    "gpio_init_struct1": 1,
                    "gpio_params1": 1,
                    "init_structure_param1": 1,
                    "output_pin_config": 1,
                    "pin_config": 2,
                    "pin_config1": 1,
                    "pin_configuration_a": 1,
                    "pin_mode": 1
                },
                "local_c": {
                    "gpio_config4": 7,
                    "gpio_config_4": 1,
                    "gpio_config_d": 1,
                    "gpio_configuration3": 1,
                    "gpio_configuration4": 1,
                    "gpio_configuration_4": 1,
                    "gpio_init_config4": 1,
                    "gpio_init_data4": 1,
                    "gpio_init_param4": 1,
                    "gpio_init_struct3": 1,
                    "gpio_init_struct4": 2,
                    "gpio_params4": 1,
                    "init_structure_param3": 1,
                    "interrupt_pin_config": 1,
                    "irq_config": 1,
                    "pin_config4": 1,
                    "pin_configuration_d": 1,
                    "pin_pull": 1,
                    "pin_speed": 2,
                    "unused3": 1,
                    "unused_gpio_init_param2": 1,
                    "unused_variable": 1,
                    "yet_another_value": 1
                },
                "param_1": {
                    "address": 1,
                    "config_flag": 1,
                    "config_param": 1,
                    "data": 1,
                    "gpio_address": 10,
                    "gpio_base_address": 2,
                    "gpio_config": 1,
                    "gpio_configuration": 1,
                    "gpio_input": 1,
                    "gpio_param": 1,
                    "gpio_pin": 1,
                    "gpio_ptr": 2,
                    "input": 1,
                    "input_param": 1,
                    "input_parameter": 1,
                    "input_value": 1,
                    "p_gpio_config": 1,
                    "ptr_value": 1
                }
            },
            "called": [
                "FUN_08001194",
                "FUN_080011fc",
                "FUN_08001264"
            ],
            "calling": [
                "FUN_08002724"
            ],
            "code": "\n\n\nvoid initialize_gpio_interrupt_08004e7c(int *gpio_address)\n\n{\n  undefined4 gpio_config1;\n  undefined4 gpio_config2;\n  undefined4 gpio_config3;\n  undefined4 gpio_config4;\n  \n  if (*gpio_address == 0x40013800) {\n    _DAT_40021018 = _DAT_40021018 | 0x4000;\n    gpio_config1 = 0x200;\n    gpio_config2 = 2;\n    gpio_config4 = 3;\n    configure_gpio(0x40010800,&gpio_config1);\n    gpio_config1 = 0x400;\n    gpio_config2 = 0;\n    gpio_config3 = 0;\n    configure_gpio(0x40010800,&gpio_config1);\n    set_priority(0x25,0,0);\n    enable_irq(0x25);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_gpio_interrupt_08004e7c",
            "entrypoint": "0x08004e7c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004e7c": "initialize_gpio_interrupt_08004e7c",
                "HAL_GPIO_Init": "configure_gpio",
                "HAL_NVIC_EnableIRQ": "enable_irq",
                "HAL_NVIC_SetPriority": "set_priority",
                "local_10": "gpio_config3",
                "local_14": "gpio_config2",
                "local_18": "gpio_config1",
                "local_c": "gpio_config4",
                "param_1": "gpio_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004f10": {
            "additional_data": {
                "FUN_08004f10": {
                    "configure_hardware": 1,
                    "configure_memory": 1,
                    "configure_system": 1,
                    "initialize_device": 2,
                    "initialize_hardware": 5,
                    "initialize_hardware_components": 1,
                    "initialize_memory": 6,
                    "initialize_peripheral": 2,
                    "initialize_peripheral_registers": 3,
                    "initialize_register_values": 1,
                    "initialize_registers": 8
                },
                "_DAT_40021000": {
                    "config_reg1": 1,
                    "configuration_register1": 1,
                    "control_register": 4,
                    "control_register1": 4,
                    "control_register_1": 1,
                    "device_configuration_register": 1,
                    "hardware_component_reg1": 1,
                    "hardware_control_reg": 1,
                    "hardware_register1": 1,
                    "memory_address": 1,
                    "memory_control_register1": 1,
                    "memory_flag": 1,
                    "peripheral_register0": 1,
                    "peripheral_register1": 2,
                    "reg1": 1,
                    "register1": 3,
                    "register_1": 1,
                    "register_a": 1,
                    "system_config_reg": 1
                },
                "_DAT_40021004": {
                    "config_reg2": 1,
                    "configuration_register2": 1,
                    "control_register2": 4,
                    "control_register_2": 1,
                    "data_register": 3,
                    "device_control_register": 1,
                    "hardware_component_reg2": 1,
                    "hardware_config_reg": 1,
                    "hardware_register2": 1,
                    "mask_register": 1,
                    "memory_config": 1,
                    "memory_control_register2": 1,
                    "other_config_reg": 1,
                    "peripheral_register1": 1,
                    "peripheral_register2": 2,
                    "reg2": 1,
                    "register2": 3,
                    "register_2": 1,
                    "register_b": 1,
                    "status_register": 1
                },
                "_DAT_40021008": {
                    "address_register": 1,
                    "config_reg3": 1,
                    "configuration_register": 2,
                    "control_register": 1,
                    "data_register": 2,
                    "data_register1": 1,
                    "device_status_register": 1,
                    "hardware_component_reg3": 1,
                    "hardware_register3": 1,
                    "hardware_setup_reg": 1,
                    "initialize_value": 1,
                    "interrupt_config_reg": 1,
                    "interrupt_priority_register": 1,
                    "interrupt_register": 1,
                    "memory_address": 1,
                    "memory_base": 1,
                    "memory_configuration_register": 1,
                    "memory_value1": 1,
                    "peripheral_register2": 1,
                    "peripheral_register3": 2,
                    "reg3": 1,
                    "register3": 3,
                    "register_3": 1,
                    "register_c": 1
                },
                "_DAT_e000ed08": {
                    "config_reg4": 1,
                    "data_register2": 1,
                    "exception_handling_register": 1,
                    "hardware_component_reg4": 1,
                    "hardware_register4": 1,
                    "interrupt_config": 2,
                    "interrupt_control_reg": 1,
                    "interrupt_mask_register": 1,
                    "interrupt_priority_register": 1,
                    "interrupt_register": 4,
                    "memory_config_reg": 1,
                    "memory_register": 1,
                    "memory_value2": 1,
                    "peripheral_register3": 1,
                    "peripheral_register4": 2,
                    "reg4": 1,
                    "register4": 3,
                    "register_4": 1,
                    "register_d": 1,
                    "system_control_register": 3
                },
                "original_variable_name_1": {
                    "reg_value1": 1
                },
                "original_variable_name_2": {
                    "reg_value2": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004f68"
            ],
            "code": "\n\n\nvoid initialize_peripheral_registers_08004f10(void)\n\n{\n  _DAT_40021000 = _DAT_40021000 & 0xfef2ffff | 1;\n  _DAT_40021004 = _DAT_40021004 & 0xf8800000;\n  _DAT_40021008 = 0x9f0000;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "current_name": "initialize_peripheral_registers_08004f10",
            "entrypoint": "0x08004f10",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004f10": "initialize_peripheral_registers_08004f10"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004f5c": {
            "called": [
                "FUN_0800115c"
            ],
            "calling": [
                "FUN_0800411c"
            ],
            "code": "\nundefined4 HAL_GetTick(void)\n\n{\n  return DAT_20000244;\n}\n\n",
            "current_name": "FUN_08004f5c",
            "entrypoint": "0x08004f5c",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_08004f60": {
            "called": [
                "FUN_0800115c"
            ],
            "calling": [
                "FUN_08002f28"
            ],
            "code": "\nundefined4 HAL_GetTick(void)\n\n{\n  return DAT_20000244;\n}\n\n",
            "current_name": "FUN_08004f60",
            "entrypoint": "0x08004f60",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_08004f64": {
            "called": [
                "FUN_08001168"
            ],
            "calling": [
                "FUN_0800403c",
                "FUN_08003298",
                "FUN_08004490",
                "FUN_08004028"
            ],
            "code": "\nvoid HAL_Delay(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUN_08004f64",
            "entrypoint": "0x08004f64",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_08004f68": {
            "additional_data": {
                "FUN_080041ae": {
                    "initialize_destination_array": 1,
                    "reverse_data": 1
                },
                "FUN_08004f10": {
                    "initialize_libc_array": 1,
                    "initialize_system": 1
                },
                "FUN_08004f68": {
                    "copy_and_initialize_memory": 1,
                    "copy_data_and_initialize": 2,
                    "copy_data_from_source_to_destination": 1,
                    "copy_memory_and_initialize": 1,
                    "extract_values_and_initialize": 1,
                    "initialize_and_execute": 2,
                    "initialize_application": 3,
                    "initialize_data": 1,
                    "initialize_memory": 4,
                    "initialize_memory_and_call_main": 2,
                    "initialize_memory_and_execute": 1,
                    "initialize_memory_and_jump": 1,
                    "initialize_program": 2,
                    "initialize_system": 9
                },
                "FUN_08004fb4": {
                    "clear_destination_array": 1,
                    "initialize_to_zero": 1
                },
                "UNRECOVERED_JUMPTABLE": {
                    "function_pointer": 1,
                    "interrupt_handler": 1,
                    "jmp_table": 2,
                    "jump_table": 24,
                    "jumptable": 1,
                    "jumptable_function": 1,
                    "unrecovered_jump_table": 1
                },
                "iVar1": {
                    "counter": 4,
                    "i": 1,
                    "index": 21,
                    "iterator": 1,
                    "offset": 4
                },
                "puVar2": {
                    "data_pointer": 9,
                    "data_ptr": 1,
                    "destination_array_pointer": 1,
                    "pointer": 5,
                    "ptr": 14,
                    "ptr_to_data": 1
                }
            },
            "called": [
                "FUN_080041ae",
                "FUN_08004fb4",
                "FUN_08004f10"
            ],
            "calling": [],
            "code": "\nvoid initialize_system_08004f68(void)\n\n{\n  int index;\n  undefined4 *ptr;\n  code *jump_table;\n  \n  for (index = 0; (undefined4 *)(index + 0x20000000) < &DAT_20000228; index = index + 4) {\n    *(undefined4 *)(index + 0x20000000) = *(undefined4 *)(index + 0x8007448);\n  }\n  for (ptr = &DAT_20000228; ptr < &DAT_200016a0; ptr = ptr + 1) {\n    *ptr = 0;\n  }\n  SystemInit();\n  __libc_init_array();\n  jump_table = (code *)0x8004f9a;\n  main();\n                    /* WARNING: Could not recover jumptable at 0x08004f9a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)();\n  return;\n}\n\n",
            "current_name": "initialize_system_08004f68",
            "entrypoint": "0x08004f68",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004f68": "initialize_system_08004f68",
                "UNRECOVERED_JUMPTABLE": "jump_table",
                "iVar1": "index",
                "puVar2": "ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004fb4": {
            "additional_data": {
                "FUNC_080072d4": {
                    "do_something": 2,
                    "execute_sub_function": 1,
                    "function_a": 1,
                    "initialize_data": 1,
                    "initialize_sub_function": 1,
                    "perform_operation": 1,
                    "perform_task": 1,
                    "process_data": 1,
                    "sub_function_1": 2,
                    "sub_function_a": 1,
                    "subfunction_a": 1,
                    "subsequent_action": 1
                },
                "FUN_08000134": {
                    "another_function": 1,
                    "function_b": 1,
                    "initiate": 1,
                    "perform_action": 2,
                    "process_parameters": 1,
                    "sub_function_2": 2,
                    "sub_function_b": 1,
                    "subfunction_b": 1
                },
                "FUN_08004fb4": {
                    "execute_all_functions": 1,
                    "execute_function_array": 1,
                    "execute_function_list": 1,
                    "execute_function_queue": 1,
                    "execute_functions": 17,
                    "execute_init_functions": 1,
                    "execute_initialization": 1,
                    "execute_sub_functions": 3,
                    "execute_subfunctions": 4,
                    "initialize_and_execute_functions": 1
                },
                "PTR_08007440": {
                    "function_pointers": 1
                },
                "iVar1": {
                    "counter": 7,
                    "i": 1,
                    "index": 13,
                    "iteration_count": 4,
                    "iteration_counter": 1,
                    "iteration_index": 1,
                    "iterator": 1,
                    "loop_index": 1,
                    "sub_function_index": 1
                },
                "param_1": {
                    "action_param1": 1,
                    "arg1": 1,
                    "input_1": 1,
                    "input_param1": 1,
                    "parameter1": 1
                },
                "param_2": {
                    "action_param2": 1,
                    "arg2": 1,
                    "input_2": 1,
                    "input_param2": 1,
                    "parameter2": 1
                }
            },
            "called": [
                "FUN_080072d4",
                "FUN_08000134"
            ],
            "calling": [
                "FUN_08004f68"
            ],
            "code": "\nvoid execute_sub_functions_08004fb4(void)\n\n{\n  int index;\n  \n  for (index = 0; index != 0; index = index + 1) {\n    (*(code *)(&DAT_08007440)[index])();\n  }\n  _init();\n  for (index = 0; index != 1; index = index + 1) {\n    (*(code *)(&DAT_08007440)[index])();\n  }\n  return;\n}\n\n",
            "current_name": "execute_sub_functions_08004fb4",
            "entrypoint": "0x08004fb4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004fb4": "execute_sub_functions_08004fb4",
                "iVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004ffc": {
            "additional_data": {
                "FUN_08004ffc": {
                    "format_and_set_value": 1,
                    "format_and_store_string": 1,
                    "print_and_clear_buffer": 2,
                    "print_and_clear_string": 5,
                    "print_and_initialize": 1,
                    "print_and_reset": 2,
                    "print_and_reset_data": 1,
                    "print_and_reset_string": 2,
                    "print_and_update_value": 1,
                    "print_formatted_data": 1,
                    "print_formatted_message": 1,
                    "print_formatted_output": 1,
                    "print_formatted_string": 3,
                    "print_message": 3,
                    "print_message_to_buffer": 1,
                    "print_param1_and_reset": 2,
                    "print_string": 2,
                    "print_to_buffer": 1
                },
                "local_64": {
                    "buffer_length_copy": 1,
                    "current_max_length": 1,
                    "current_size": 1,
                    "int_variable_2": 1,
                    "local_var5": 2,
                    "local_var_4": 1,
                    "max_chars_2": 1,
                    "max_int2": 1,
                    "max_int3": 1,
                    "max_int_value": 1,
                    "max_length": 1,
                    "max_length_2": 2,
                    "max_length_copy": 1,
                    "max_message": 1,
                    "max_param_size": 1,
                    "max_pos": 1,
                    "max_string_length": 1,
                    "max_value": 1,
                    "max_value2": 4,
                    "max_value3": 1,
                    "max_value_copy": 1,
                    "string_length": 1,
                    "temp_max_size": 1,
                    "temp_value": 1,
                    "variable4": 1
                },
                "local_68": {
                    "buffer_pointer": 1,
                    "buffer_ptr": 1,
                    "copy_of_string_buffer": 1,
                    "current_buffer": 7,
                    "current_buffer_ptr": 1,
                    "current_message": 1,
                    "current_position": 3,
                    "current_ptr": 2,
                    "current_string": 5,
                    "local_var4": 2,
                    "output_string_copy": 1,
                    "output_string_ptr": 1,
                    "string_ptr": 3,
                    "string_start": 1
                },
                "local_6a": {
                    "buffer_length": 1,
                    "buffer_size": 1,
                    "constant2": 1,
                    "default_param3": 1,
                    "flag_value": 1,
                    "format_padding": 1,
                    "init_value": 1,
                    "initial_buffer_value": 1,
                    "limit": 1,
                    "local_var3": 2,
                    "local_var_3": 1,
                    "max_buffer_size": 1,
                    "max_chars": 1,
                    "max_int2": 1,
                    "max_param_value": 1,
                    "max_short_value": 1,
                    "max_ushort": 1,
                    "max_value2": 1,
                    "min_length": 1,
                    "param2": 1,
                    "param_5": 1,
                    "short_buffer_length": 1,
                    "short_value": 4,
                    "temporary": 1,
                    "unknown_value": 1,
                    "variable3": 1
                },
                "local_6c": {
                    "buffer_length": 4,
                    "buffer_size": 12,
                    "constant1": 1,
                    "default_length": 1,
                    "format_length": 2,
                    "length": 1,
                    "local_var2": 2,
                    "local_var_2": 1,
                    "output_length": 1,
                    "size_value": 1,
                    "string_length": 4
                },
                "local_70": {
                    "int_variable": 1,
                    "local_var": 1,
                    "local_var1": 2,
                    "local_var_1": 1,
                    "max_buffer_length": 1,
                    "max_buffer_size": 1,
                    "max_font_size": 1,
                    "max_int": 1,
                    "max_int1": 1,
                    "max_length": 7,
                    "max_size": 2,
                    "max_value": 9,
                    "max_value1": 2
                },
                "local_78": {
                    "buffer": 4,
                    "buffer_array": 1,
                    "buffer_list": 1,
                    "buffer_ptrs": 1,
                    "formatted_buffer": 1,
                    "formatted_string": 1,
                    "local_array": 3,
                    "local_buffer": 2,
                    "local_data_array": 1,
                    "local_strings": 1,
                    "message_buffer": 1,
                    "output_string": 2,
                    "output_string_ptr_array": 1,
                    "pointer_array": 1,
                    "print_buffer": 1,
                    "string_array": 5,
                    "string_buffer": 2,
                    "temp_buffer": 1
                },
                "param_1": {
                    "buffer": 6,
                    "data_array": 1,
                    "data_buffer": 1,
                    "input_string": 6,
                    "message": 5,
                    "message_buffer": 1,
                    "output_string": 1,
                    "param": 1,
                    "string": 6,
                    "string_buffer": 1,
                    "string_param": 1,
                    "text": 1
                },
                "param_2": {
                    "arg1": 1,
                    "data_size": 1,
                    "format_option": 1,
                    "format_param": 1,
                    "format_specifier": 1,
                    "int_param": 2,
                    "int_param_1": 1,
                    "int_value": 1,
                    "integer1": 1,
                    "length": 9,
                    "max_length": 1,
                    "param2": 1,
                    "param_2": 4,
                    "size": 2,
                    "value1": 3,
                    "value_1": 1
                },
                "param_3": {
                    "arg2": 1,
                    "buffer": 3,
                    "buffer_size": 1,
                    "bytes": 1,
                    "data_1": 1,
                    "font_size": 1,
                    "int_param2": 1,
                    "int_param_2": 2,
                    "integer2": 1,
                    "param3": 1,
                    "param_3": 8,
                    "unused_param1": 1,
                    "value2": 3,
                    "value_2": 1,
                    "variable1": 2
                },
                "param_4": {
                    "arg3": 1,
                    "data_2": 1,
                    "extra_data": 1,
                    "flag": 1,
                    "int_param3": 1,
                    "int_param_3": 2,
                    "integer3": 1,
                    "max_chars": 1,
                    "offset": 1,
                    "other_params": 1,
                    "param4": 1,
                    "param_4": 8,
                    "placeholder": 1,
                    "unused_param2": 1,
                    "value3": 3,
                    "value_3": 1,
                    "variable2": 2
                },
                "uStack_4": {
                    "int_stack_var_3": 1,
                    "local_var8": 1,
                    "param4_copy": 1,
                    "param_4": 1,
                    "param_4_copy": 2,
                    "stack_4": 1,
                    "stack_value3": 1,
                    "stack_variable3": 1,
                    "unused_param2": 1
                },
                "uStack_8": {
                    "int_stack_var_2": 1,
                    "local_var7": 1,
                    "param3_copy": 1,
                    "param_3": 1,
                    "param_3_copy": 2,
                    "stack_8": 1,
                    "stack_value2": 1,
                    "stack_variable2": 1,
                    "unused_param1": 1
                },
                "uStack_c": {
                    "format_param": 1,
                    "int_stack_var": 1,
                    "local_var6": 1,
                    "param2_copy": 1,
                    "param_2": 1,
                    "param_2_copy": 2,
                    "stack_c": 1,
                    "stack_value1": 1,
                    "stack_variable1": 1
                }
            },
            "called": [
                "FUN_080050fc"
            ],
            "calling": [
                "FUN_08004cac"
            ],
            "code": "\nvoid print_and_clear_string_08004ffc(undefined *string,undefined4 length,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined *string_array [2];\n  undefined4 max_value;\n  undefined2 buffer_size;\n  undefined2 short_value;\n  undefined *current_buffer;\n  undefined4 max_value2;\n  undefined4 param_2_copy;\n  undefined4 param_3_copy;\n  undefined4 param_4_copy;\n  \n  buffer_size = 0x208;\n  max_value = 0x7fffffff;\n  max_value2 = 0x7fffffff;\n  short_value = 0xffff;\n  string_array[0] = string;\n  current_buffer = string;\n  param_2_copy = length;\n  param_3_copy = param_3;\n  param_4_copy = param_4;\n  _svfiprintf_r(DAT_200001c0,string_array,length);\n  *string_array[0] = 0;\n  return;\n}\n\n",
            "current_name": "print_and_clear_string_08004ffc",
            "entrypoint": "0x08004ffc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004ffc": "print_and_clear_string_08004ffc",
                "local_64": "max_value2",
                "local_68": "current_buffer",
                "local_6a": "short_value",
                "local_6c": "buffer_size",
                "local_70": "max_value",
                "local_78": "string_array",
                "param_1": "string",
                "param_2": "length",
                "uStack_4": "param_4_copy",
                "uStack_8": "param_3_copy",
                "uStack_c": "param_2_copy"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005044": {
            "additional_data": {
                "FUN_08005044": {
                    "expand_and_copy_array": 1,
                    "expand_and_copy_buffer": 1,
                    "expand_and_copy_data": 5,
                    "improve_and_copy_data": 1,
                    "reallocate_and_copy": 1,
                    "resize_and_copy": 1,
                    "resize_and_copy_buffer": 1,
                    "resize_and_copy_data": 10,
                    "update_array": 1,
                    "update_buffer": 1,
                    "update_payload": 1
                },
                "FUN_08005630": {
                    "copy_data_backward": 1,
                    "copy_data_offset": 1,
                    "copy_data_with_offset": 1,
                    "initialize_data": 1
                },
                "FUN_08005646": {
                    "copy_data": 3,
                    "copy_data_forward": 1
                },
                "FUN_0800567c": {
                    "allocate_buffer": 1,
                    "allocate_memory": 2,
                    "malloc_or_free": 1
                },
                "FUN_08005714": {
                    "calculate_new_buffer_size": 1,
                    "check_buffer": 1,
                    "realloc_buffer": 1,
                    "reallocate_buffer": 1
                },
                "FUN_080057d0": {
                    "check_negative_data": 1,
                    "expand_buffer": 1,
                    "reallocate_memory": 2
                },
                "LAB_0800508a": {
                    "allocation_failed": 1,
                    "error_handling": 2
                },
                "_free_r": {
                    "free_memory": 8
                },
                "_malloc_r": {
                    "allocate_memory": 8
                },
                "_realloc_r": {
                    "reallocate_memory": 8
                },
                "iVar1": {
                    "alloc_result": 1,
                    "allocated_buffer": 2,
                    "allocated_memory": 2,
                    "allocation_result": 7,
                    "memory_allocation": 1,
                    "new_allocation": 1,
                    "new_buffer": 4,
                    "new_buffer_ptr": 1,
                    "new_data_addr": 1,
                    "new_data_pointer": 1,
                    "new_data_ptr": 1,
                    "new_memory_block": 1,
                    "new_pointer": 1,
                    "new_ptr": 1,
                    "new_size": 1,
                    "result": 4,
                    "source_ptr_offset": 1
                },
                "iVar4": {
                    "buffer_offset": 2,
                    "copy_offset": 1,
                    "data_offset": 3,
                    "destination_ptr_offset": 1,
                    "difference": 2,
                    "offset": 19,
                    "payload_offset": 1,
                    "shifted_offset": 1,
                    "size_difference": 1
                },
                "memcpy": {
                    "copy_memory": 2
                },
                "memmove": {
                    "move_memory": 2
                },
                "param_1": {
                    "dest_ptr": 1,
                    "error": 2,
                    "error_code": 9,
                    "error_flag": 3,
                    "error_status": 1,
                    "out_buffer": 1,
                    "out_pointer": 1,
                    "output": 2,
                    "output_buffer": 3,
                    "output_code": 1,
                    "result": 3,
                    "results": 1,
                    "status": 2,
                    "status_pointer": 1
                },
                "param_2": {
                    "array": 2,
                    "buffer": 6,
                    "buffer_info": 2,
                    "buffer_params": 1,
                    "data": 7,
                    "data_buffer": 4,
                    "data_info": 1,
                    "input": 1,
                    "input_buffer": 3,
                    "input_data": 1,
                    "memory_block": 1,
                    "payload": 1,
                    "src_ptr": 1
                },
                "param_3": {
                    "buffer": 1,
                    "data": 13,
                    "data_to_copy": 1,
                    "input": 1,
                    "input_buffer": 1,
                    "input_data": 3,
                    "source": 5,
                    "source_data": 5,
                    "src_data": 1
                },
                "param_4": {
                    "buffer_length": 1,
                    "copy_length": 1,
                    "data_length": 2,
                    "data_size": 2,
                    "input_length": 2,
                    "input_size": 1,
                    "length": 10,
                    "size": 9,
                    "source_length": 1,
                    "source_size": 1,
                    "src_data_size": 1
                },
                "uVar2": {
                    "adjusted_buffer_length": 1,
                    "expanded_length": 3,
                    "expanded_size": 2,
                    "max_length": 1,
                    "max_size": 1,
                    "new_buffer_size": 3,
                    "new_data_length": 2,
                    "new_data_size": 1,
                    "new_length": 7,
                    "new_size": 8,
                    "required_length": 1,
                    "target_size": 1
                },
                "uVar3": {
                    "available_size": 1,
                    "buffer_length": 1,
                    "buffer_size": 2,
                    "current_length": 6,
                    "current_size": 7,
                    "data_length": 4,
                    "data_size": 1,
                    "existing_buffer_size": 1,
                    "existing_size": 1,
                    "old_length": 1,
                    "original_buffer_length": 1,
                    "original_buffer_size": 1,
                    "original_size": 1,
                    "previous_size": 1,
                    "remaining_size": 1,
                    "source_ptr_end": 1
                }
            },
            "called": [
                "FUN_08005646",
                "FUN_08005630",
                "FUN_08005714",
                "FUN_0800567c",
                "FUN_080057d0"
            ],
            "calling": [
                "FUN_080050fc"
            ],
            "code": "\nundefined4 resize_and_copy_data_08005044(undefined4 *error_code,int *data,undefined4 data,uint length)\n\n{\n  int allocation_result;\n  uint new_size;\n  uint current_size;\n  int offset;\n  \n  current_size = data[2];\n  if ((current_size <= length) && ((*(ushort *)(data + 3) & 0x480) != 0)) {\n    offset = *data - data[4];\n    current_size = (uint)(data[5] * 3) / 2;\n    new_size = length + 1 + offset;\n    if (current_size < new_size) {\n      current_size = new_size;\n    }\n    if ((int)((uint)*(ushort *)(data + 3) << 0x15) < 0) {\n      allocation_result = allocate_memory(error_code,current_size);\n      if (allocation_result == 0) {\nerror_handling:\n        *error_code = 0xc;\n        *(ushort *)(data + 3) = *(ushort *)(data + 3) | 0x40;\n        return 0xffffffff;\n      }\n      copy_memory(allocation_result,data[4],offset);\n      *(ushort *)(data + 3) = *(ushort *)(data + 3) & 0xfb7f | 0x80;\n    }\n    else {\n      allocation_result = reallocate_memory(error_code,data[4],current_size);\n      if (allocation_result == 0) {\n        free_memory(error_code,data[4]);\n        goto error_handling;\n      }\n    }\n    data[4] = allocation_result;\n    *data = allocation_result + offset;\n    data[5] = current_size;\n    data[2] = current_size - offset;\n    current_size = length;\n  }\n  if (length <= current_size) {\n    current_size = length;\n  }\n  move_memory(*data,data,current_size);\n  data[2] = data[2] - current_size;\n  *data = current_size + *data;\n  return 0;\n}\n\n",
            "current_name": "resize_and_copy_data_08005044",
            "entrypoint": "0x08005044",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005044": "resize_and_copy_data_08005044",
                "LAB_0800508a": "error_handling",
                "_free_r": "free_memory",
                "_malloc_r": "allocate_memory",
                "_realloc_r": "reallocate_memory",
                "iVar1": "allocation_result",
                "iVar4": "offset",
                "memcpy": "copy_memory",
                "memmove": "move_memory",
                "param_1": "error_code",
                "param_2": "data",
                "param_3": "data",
                "param_4": "length",
                "uVar2": "new_size",
                "uVar3": "current_size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080050fc": {
            "additional_data": {
                "0x18": {
                    "shift_amount1": 1
                },
                "0x19": {
                    "shift_amount2": 1
                },
                "0x1b": {
                    "shift_amount3": 1
                },
                "0x1c": {
                    "shift_amount4": 1
                },
                "0x20": {
                    "space": 1
                },
                "0x25": {
                    "percent_sign": 1
                },
                "0x2a": {
                    "asterisk": 1
                },
                "0x2b": {
                    "plus": 1
                },
                "0x2d": {
                    "comma": 1
                },
                "0x2e": {
                    "dot": 1
                },
                "0x30": {
                    "zero": 1
                },
                "DAT_08007379": {
                    "dat_08007379": 1,
                    "letters": 1
                },
                "DAT_0800737f": {
                    "dat_0800737f": 1,
                    "modifiers": 1
                },
                "FUN_08005044": {
                    "handle_width": 1,
                    "parse_precision": 1
                },
                "FUN_080050fc": {
                    "execute_printf": 1,
                    "format_and_print": 3,
                    "format_and_print_string": 1,
                    "parse_and_format_string": 1,
                    "parse_format_string": 7,
                    "parse_printf_format": 2,
                    "parse_printf_format_string": 1,
                    "print_formatted_output": 1,
                    "print_formatted_string": 2,
                    "process_format_string": 4,
                    "process_string": 1,
                    "reverse_and_print": 2
                },
                "FUN_080053d4": {
                    "parse_modifiers": 1,
                    "process_specifier": 1
                },
                "FUN_08005614": {
                    "expand_specifier": 1,
                    "transform_string": 1
                },
                "FUN_08005714": {
                    "count_flags": 1,
                    "parse_width": 1
                },
                "__assert_func": {
                    "assert_func": 1
                },
                "__libc_start_main": {
                    "libc_start_main": 1
                },
                "__muldi3": {
                    "muldi3": 1
                },
                "__printf_i": {
                    "printf_i": 1
                },
                "__sscanf_r": {
                    "sscanf_r": 1
                },
                "__ssputs_r": {
                    "custom_string_put": 1,
                    "implement_s_sputs_r": 1,
                    "print_string": 2,
                    "puts": 1,
                    "safe_string_print": 1,
                    "safe_string_put": 1,
                    "safe_string_puts": 1,
                    "ssputs_r": 1,
                    "write_string": 1
                },
                "_malloc_r": {
                    "allocate_memory": 2,
                    "custom_malloc": 1,
                    "implement_malloc_r": 1,
                    "malloc": 1,
                    "malloc_r": 1,
                    "safe_heap_allocation": 1,
                    "safe_malloc": 1
                },
                "_printf_i": {
                    "custom_printf": 1,
                    "handle_integer_conversion": 1,
                    "printf": 1,
                    "printf_int": 1,
                    "safe_integer_formatting": 1,
                    "safe_printf": 1,
                    "safe_printf_i": 1
                },
                "_sprintf_i": {
                    "print_integer": 1
                },
                "bVar4": {
                    "bool_var": 2,
                    "digit_found": 1,
                    "flag": 4,
                    "found": 1,
                    "found_digit": 1,
                    "found_number": 1,
                    "has_digits": 1,
                    "is_digit": 3,
                    "is_found": 1,
                    "is_integer": 1,
                    "is_number": 7,
                    "is_numeric": 3,
                    "is_true": 2,
                    "is_valid": 1,
                    "number_found": 1
                },
                "iVar1": {
                    "allocation_result": 3,
                    "buffer_length": 1,
                    "count_var": 1,
                    "index": 4,
                    "index1": 1,
                    "index_1": 2,
                    "integer_var1": 1,
                    "length": 4,
                    "malloc_result": 1,
                    "result": 6,
                    "return_value1": 1,
                    "size": 2,
                    "status": 1,
                    "temp_int1": 1,
                    "temp_var1": 1
                },
                "iVar2": {
                    "bytes_written": 1,
                    "index2": 1,
                    "index_2": 2,
                    "integer_var2": 1,
                    "length": 2,
                    "num_chars": 1,
                    "result": 7,
                    "result_code": 1,
                    "result_length": 1,
                    "result_var": 1,
                    "return_value": 1,
                    "return_value2": 1,
                    "ssputs_result": 6,
                    "string_copy_result": 1,
                    "substring_length": 1,
                    "temp_int2": 1,
                    "temp_var2": 1
                },
                "local_30": {
                    "argument_size": 1,
                    "buffer_size": 1,
                    "conversion_character": 1,
                    "flag4": 1,
                    "format_func": 1,
                    "length_modifier": 1,
                    "local_value5": 1,
                    "local_var_11": 1,
                    "mem_pointer": 1,
                    "null_character": 1,
                    "number_4": 1,
                    "padding_specifier": 1,
                    "pointer_flag": 1,
                    "precision_flag": 1,
                    "precision_ptr": 1,
                    "precision_start": 1,
                    "printf_result": 1,
                    "ptr_pointer2": 1,
                    "temp_var7": 1,
                    "tmp3": 1,
                    "unused_var": 1,
                    "width": 1,
                    "zero": 2,
                    "zero_char": 2,
                    "zero_flag": 4
                },
                "local_45": {
                    "alignment_flag": 1,
                    "alternate_form_flag": 1,
                    "byte_3": 1,
                    "flag": 1,
                    "flag3": 1,
                    "flag_char": 1,
                    "flag_character": 2,
                    "flag_hash": 1,
                    "flag_specifier": 1,
                    "flag_zero": 1,
                    "hash": 2,
                    "hash_char": 1,
                    "hash_flag": 4,
                    "local_byte1": 1,
                    "local_byte4": 1,
                    "local_var_10": 1,
                    "modifier": 1,
                    "padding_character": 1,
                    "plus_sign_flag": 1,
                    "prefix": 1,
                    "sign": 1,
                    "sign_char": 1,
                    "space_flag": 1,
                    "space_or_plus_flag": 1,
                    "zero_flag": 1
                },
                "local_6e": {
                    "b_flag": 1,
                    "byte_2": 1,
                    "char_specifier2": 1,
                    "constant2": 1,
                    "default_precision": 1,
                    "dot_char": 1,
                    "flag2": 1,
                    "flag_plus": 2,
                    "flag_sign": 1,
                    "hash_flag": 1,
                    "local_byte3": 1,
                    "local_var_9": 1,
                    "plus": 2,
                    "plus_char": 1,
                    "plus_character": 1,
                    "plus_flag": 7,
                    "precision_specifier": 1,
                    "signed_format": 1,
                    "space_flag": 1,
                    "star": 1,
                    "zero_padding": 2
                },
                "local_6f": {
                    "byte_1": 1,
                    "c_flag": 1,
                    "char_specifier1": 1,
                    "constant1": 1,
                    "default_padding": 1,
                    "default_width": 1,
                    "flag1": 1,
                    "flag_space": 3,
                    "hex_format": 1,
                    "local_byte2": 1,
                    "local_var_8": 1,
                    "percent": 1,
                    "percent_char": 1,
                    "plus_flag": 1,
                    "space": 2,
                    "space_char": 1,
                    "space_character": 1,
                    "space_flag": 7,
                    "space_padding": 1,
                    "star_flag": 1,
                    "width_specifier": 1
                },
                "local_70": {
                    "character": 1,
                    "conversion": 1,
                    "conversion_specifier": 15,
                    "conversion_type": 1,
                    "format_char": 1,
                    "local_byte": 1,
                    "local_byte1": 1,
                    "local_var_7": 1,
                    "specifier": 8
                },
                "local_74": {
                    "bytes_written": 2,
                    "formatted_length": 1,
                    "local_value4": 1,
                    "local_var_6": 1,
                    "num_chars_written": 2,
                    "output_length": 3,
                    "total_bytes": 2,
                    "total_bytes_written": 1,
                    "total_chars": 2,
                    "total_chars_written": 1,
                    "total_length": 9,
                    "total_output_size": 1,
                    "total_size": 4
                },
                "local_7c": {
                    "arg_index": 1,
                    "arg_width": 2,
                    "field_width": 7,
                    "is_negative": 1,
                    "length": 1,
                    "local_value3": 1,
                    "local_var_5": 1,
                    "number": 1,
                    "number_3": 1,
                    "param": 1,
                    "precision": 2,
                    "star_width_value": 1,
                    "temp": 1,
                    "temp_var6": 1,
                    "tmp2": 1,
                    "width": 7
                },
                "local_80": {
                    "format": 1,
                    "int_value": 1,
                    "leading_char": 1,
                    "length_modifier": 1,
                    "local_value2": 1,
                    "local_var_4": 1,
                    "number_2": 1,
                    "padding": 1,
                    "precision": 2,
                    "precision_value": 1,
                    "specifier": 1,
                    "temp_2": 1,
                    "temp_var": 2,
                    "temp_var5": 1,
                    "tmp1": 1,
                    "unused": 1,
                    "urgency": 1,
                    "width": 10,
                    "zero_pad": 1
                },
                "local_84": {
                    "local_value1": 1,
                    "local_var_3": 1,
                    "number_1": 1,
                    "precision": 21,
                    "temp_var4": 1,
                    "width": 4,
                    "width_value": 1
                },
                "local_88": {
                    "bit_flags": 1,
                    "bitmask": 1,
                    "flag_bitmask": 1,
                    "flag_mask": 1,
                    "flags": 20,
                    "format_flags": 1,
                    "length_flags": 1,
                    "local_flag": 1,
                    "local_var_2": 1,
                    "modifiers": 1,
                    "specifier_flags": 1
                },
                "local_8c": {
                    "additional_int_stack_ptr": 1,
                    "address_list": 1,
                    "allocation_data": 1,
                    "arg_list": 1,
                    "arg_list_pointer": 1,
                    "arg_ptr": 1,
                    "args_counter": 1,
                    "args_ptr_stack": 1,
                    "current_argument": 1,
                    "flags": 1,
                    "format_data_ptr": 1,
                    "local_int_pointer": 1,
                    "local_param_memory": 1,
                    "local_pointer": 2,
                    "local_pointer_var": 1,
                    "local_ptr": 2,
                    "local_var_1": 1,
                    "local_var_pointer": 1,
                    "next_arg_ptr": 1,
                    "num_fields_pointer": 1,
                    "output_size": 1,
                    "param_4_ptr": 1,
                    "ptr": 1,
                    "ptr_buffer": 1,
                    "size_pointer": 1,
                    "temp_output_array": 1
                },
                "malloc_r": {
                    "safe_malloc": 1
                },
                "memchr": {
                    "find_char": 1,
                    "find_character": 3
                },
                "param_1": {
                    "arg1": 1,
                    "buffer": 1,
                    "error": 1,
                    "error_code": 2,
                    "error_message": 1,
                    "error_msg": 1,
                    "mem_allocator": 1,
                    "mem_manager": 1,
                    "mem_pool": 1,
                    "memory_manager": 2,
                    "output_buffer": 1,
                    "param_1": 1,
                    "param_buffer": 1,
                    "param_list": 1,
                    "param_list_start": 1,
                    "param_pointer": 4,
                    "param_ptr": 4,
                    "param_settings": 1,
                    "return_value": 1,
                    "stdio_stream": 1
                },
                "param_2": {
                    "arg2": 1,
                    "arg_list_start": 1,
                    "array_ptr": 1,
                    "data": 1,
                    "flags": 1,
                    "format_args": 1,
                    "format_specifier": 3,
                    "format_specifier_list": 1,
                    "format_specifiers": 1,
                    "format_str": 1,
                    "format_string": 4,
                    "input_array": 1,
                    "int_array": 2,
                    "integers": 1,
                    "num_list": 1,
                    "param_2": 1,
                    "param_buffer": 1,
                    "pointer": 1,
                    "printf_args": 1,
                    "specifier": 1,
                    "string_length": 2
                },
                "param_3": {
                    "arg_list": 1,
                    "arg_str": 1,
                    "byte_array": 2,
                    "format": 2,
                    "format_specifier": 1,
                    "format_str": 1,
                    "format_string": 14,
                    "format_string_copy": 1,
                    "param_format": 1,
                    "str": 2,
                    "string": 1,
                    "string_ptr": 1
                },
                "param_4": {
                    "allocation_size": 1,
                    "arg4": 1,
                    "arg_list": 3,
                    "arg_ptr": 1,
                    "args": 1,
                    "argument_list": 1,
                    "buffer": 1,
                    "dynamic_memory_ptr": 1,
                    "flags": 1,
                    "format_data": 1,
                    "heap_pointer": 1,
                    "int_pointer": 1,
                    "int_ptr": 1,
                    "malloc_flag": 1,
                    "mem_size": 1,
                    "output_array": 1,
                    "output_buffer": 1,
                    "output_size": 1,
                    "param_4": 2,
                    "param_memory": 2,
                    "ptr": 1,
                    "size": 1,
                    "size_list": 1,
                    "variables": 1
                },
                "pbVar5": {
                    "byte_pointer1": 1,
                    "byte_pointer_1": 1,
                    "byte_pointer_var1": 1,
                    "byte_pointer_var5": 1,
                    "byte_ptr": 1,
                    "byte_ptr1": 1,
                    "byte_ptr_1": 2,
                    "char_pointer": 1,
                    "curr_char": 2,
                    "curr_char_ptr": 1,
                    "current_byte": 1,
                    "current_char": 7,
                    "current_char_ptr": 2,
                    "current_character": 1,
                    "format": 1,
                    "pointer": 1,
                    "ptr": 2,
                    "ptr1": 1
                },
                "pbVar6": {
                    "byte_pointer2": 1,
                    "byte_pointer_2": 1,
                    "byte_pointer_var2": 1,
                    "byte_pointer_var6": 1,
                    "byte_ptr2": 1,
                    "byte_ptr_2": 2,
                    "current_byte": 1,
                    "current_byte2": 1,
                    "current_char": 2,
                    "current_pointer": 1,
                    "current_ptr": 1,
                    "format_ptr": 1,
                    "last_char": 1,
                    "next_char": 5,
                    "next_char_ptr": 1,
                    "next_character": 1,
                    "ptr": 1,
                    "ptr2": 1,
                    "start_char": 3,
                    "string_end_ptr": 1
                },
                "piVar3": {
                    "additional_int": 1,
                    "arg_list_pointer": 1,
                    "arg_ptr": 1,
                    "args_ptr": 1,
                    "current_argument_ptr": 1,
                    "int_pointer_2": 1,
                    "int_pointer_var3": 1,
                    "iterator": 2,
                    "local_pointer": 1,
                    "next_param": 1,
                    "param": 1,
                    "param_2_counter": 1,
                    "pi_var3": 1,
                    "pointer": 2,
                    "pointer1": 1,
                    "pointer_var": 1,
                    "ptr": 3,
                    "ptr_pointer": 1,
                    "temp_ptr": 4,
                    "temp_var": 2
                },
                "unaff_r9": {
                    "malloc_result": 2,
                    "max_width": 1,
                    "num_fields": 1,
                    "printf_result": 5,
                    "printing_result": 1,
                    "result": 1,
                    "return_val": 1,
                    "sscanf_result": 1,
                    "temp": 3,
                    "temp1": 1,
                    "temp_1": 1,
                    "temp_reg_var": 1,
                    "temp_var3": 1,
                    "temporary_var1": 1,
                    "tmp_var": 1,
                    "unaff_arg": 1,
                    "unaff_param": 1,
                    "unaff_r9": 5,
                    "unaffected_r9": 1
                }
            },
            "called": [
                "FUN_08005614",
                "FUN_08005714",
                "FUN_08005044",
                "FUN_080053d4"
            ],
            "calling": [
                "FUN_08004ffc"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08005294) */\n\nint parse_and_format_string_080050fc(undefined4 *param_ptr,int *format_string,byte *format_string,int *arg_list)\n\n{\n  int result;\n  int result;\n  int *temp_ptr;\n  bool is_number;\n  byte *current_char;\n  byte *next_char;\n  int printf_result;\n  int *local_pointer;\n  uint flags;\n  int precision;\n  undefined4 width;\n  int width;\n  int total_length;\n  byte conversion_specifier;\n  undefined space_flag;\n  undefined plus_flag;\n  undefined hash_flag;\n  undefined4 zero_flag;\n  \n  local_pointer = arg_list;\n  if (((int)((uint)*(ushort *)(format_string + 3) << 0x18) < 0) && (format_string[4] == 0)) {\n    result = allocate_memory(param_ptr,0x40);\n    *format_string = result;\n    format_string[4] = result;\n    if (result == 0) {\n      *param_ptr = 0xc;\n      return -1;\n    }\n    format_string[5] = 0x40;\n  }\n  total_length = 0;\n  space_flag = 0x20;\n  plus_flag = 0x30;\n  current_char = format_string;\nLAB_08005146:\n  next_char = current_char;\n  if (*next_char != 0) goto LAB_080051ca;\n  goto LAB_08005150;\nLAB_080051ca:\n  current_char = next_char + 1;\n  if (*next_char != 0x25) goto LAB_08005146;\nLAB_08005150:\n  result = (int)next_char - (int)format_string;\n  if (result != 0) {\n    result = print_string(param_ptr,format_string,format_string,result);\n    if (result == -1) {\nLAB_080052ac:\n      if ((int)((uint)*(ushort *)(format_string + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return total_length;\n    }\n    total_length = total_length + result;\n  }\n  if (*next_char == 0) goto LAB_080052ac;\n  flags = 0;\n  width = 0;\n  precision = -1;\n  width = 0;\n  hash_flag = 0;\n  zero_flag = 0;\n  current_char = next_char + 1;\n  while( true ) {\n    result = find_character(&DAT_08007379,*current_char);\n    format_string = current_char + 1;\n    if (result == 0) break;\n    flags = 1 << (result + 0xf7ff8c87U & 0xff) | flags;\n    current_char = format_string;\n  }\n  if ((int)(flags << 0x1b) < 0) {\n    hash_flag = 0x20;\n  }\n  if ((int)(flags << 0x1c) < 0) {\n    hash_flag = 0x2b;\n  }\n  if (*current_char == 0x2a) {\n    temp_ptr = local_pointer + 1;\n    result = *local_pointer;\n    local_pointer = temp_ptr;\n    if (result < 0) {\n      width = -result;\n      flags = flags | 2;\n      goto LAB_080051fc;\n    }\n  }\n  else {\n    is_number = false;\n    result = width;\n    format_string = current_char;\n    while( true ) {\n      if (9 < *format_string - 0x30) break;\n      result = result * 10 + (*format_string - 0x30);\n      is_number = true;\n      format_string = format_string + 1;\n    }\n    if (!is_number) goto LAB_080051fc;\n  }\n  width = result;\nLAB_080051fc:\n  if (*format_string == 0x2e) {\n    if (format_string[1] == 0x2a) {\n      format_string = format_string + 2;\n      temp_ptr = local_pointer + 1;\n      precision = *local_pointer;\n      local_pointer = temp_ptr;\n      if (precision < 0) {\n        precision = -1;\n      }\n    }\n    else {\n      is_number = false;\n      result = 0;\n      precision = 0;\n      while( true ) {\n        format_string = format_string + 1;\n        if (9 < *format_string - 0x30) break;\n        result = result * 10 + (*format_string - 0x30);\n        is_number = true;\n      }\n      if (is_number) {\n        precision = result;\n      }\n    }\n  }\n  result = find_character(&DAT_0800737f,*format_string,3);\n  if (result != 0) {\n    format_string = format_string + 1;\n    flags = flags | 0x40 << (result + 0xf7ff8c81U & 0xff);\n  }\n  conversion_specifier = *format_string;\n  format_string = format_string + 1;\n  result = find_character(\"efgEFG\",conversion_specifier,6);\n  if (result == 0) {\n    printf_result = safe_printf_i(param_ptr,&flags,format_string,0x8005045,&local_pointer);\n    if (printf_result == -1) goto LAB_080052ac;\n  }\n  else {\n    local_pointer = (int *)(((int)local_pointer + 7U & 0xfffffff8) + 8);\n  }\n  total_length = total_length + printf_result;\n  current_char = format_string;\n  goto LAB_08005146;\n}\n\n",
            "current_name": "parse_and_format_string_080050fc",
            "entrypoint": "0x080050fc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080050fc": "parse_and_format_string_080050fc",
                "__ssputs_r": "print_string",
                "_malloc_r": "allocate_memory",
                "_printf_i": "safe_printf_i",
                "bVar4": "is_number",
                "iVar1": "result",
                "iVar2": "result",
                "local_30": "zero_flag",
                "local_45": "hash_flag",
                "local_6e": "plus_flag",
                "local_6f": "space_flag",
                "local_70": "conversion_specifier",
                "local_74": "total_length",
                "local_7c": "width",
                "local_80": "width",
                "local_84": "precision",
                "local_88": "flags",
                "local_8c": "local_pointer",
                "malloc_r": "safe_malloc",
                "memchr": "find_character",
                "param_1": "param_ptr",
                "param_2": "format_string",
                "param_3": "format_string",
                "param_4": "arg_list",
                "pbVar5": "current_char",
                "pbVar6": "next_char",
                "piVar3": "temp_ptr",
                "unaff_r9": "printf_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080052e4": {
            "additional_data": {
                "FUN_080052e4": {
                    "calculate_buffer_size": 1,
                    "calculate_output_length": 1,
                    "decode_and_process_data": 2,
                    "extract_and_modify": 1,
                    "extract_data": 1,
                    "extract_information": 1,
                    "parse_data": 2,
                    "process_data": 15,
                    "update_param_arrays": 1,
                    "validate_and_process_data": 1
                },
                "bVar5": {
                    "check_condition": 1,
                    "check_flag": 1,
                    "condition": 2,
                    "conditional_check": 1,
                    "flag": 5,
                    "is_4_or_not": 1,
                    "is_condition_met": 4,
                    "is_condition_true": 2,
                    "is_flag_set": 2,
                    "is_negative": 1,
                    "is_non_zero": 1,
                    "is_nonzero": 1,
                    "is_set": 1,
                    "is_special_case": 1,
                    "is_true": 3,
                    "is_valid": 1,
                    "is_zero": 2,
                    "is_zero_flag": 1
                },
                "iVar1": {
                    "counter": 2,
                    "counter1": 3,
                    "counter_1": 1,
                    "i": 2,
                    "index": 11,
                    "index1": 5,
                    "index_1": 1,
                    "iteration": 1,
                    "loop_counter": 1,
                    "loop_counter_1": 1,
                    "loop_index": 1,
                    "loop_index1": 2
                },
                "iVar2": {
                    "callback_result": 3,
                    "counter2": 1,
                    "counter_2": 1,
                    "index2": 5,
                    "index_2": 1,
                    "j": 2,
                    "loop_counter_2": 1,
                    "loop_index2": 1,
                    "loop_result": 1,
                    "result": 13,
                    "return_value": 2
                },
                "param_1": {
                    "a": 1,
                    "data": 3,
                    "input": 14,
                    "input1": 1,
                    "input_data": 1,
                    "input_param": 5,
                    "input_param_1": 1,
                    "input_val": 1,
                    "input_value": 3,
                    "param1": 1
                },
                "param_2": {
                    "array": 1,
                    "data": 12,
                    "data_array": 9,
                    "header": 1,
                    "info_array": 1,
                    "input": 1,
                    "input2": 1,
                    "input_array": 2,
                    "input_param_2": 1,
                    "param_a": 1,
                    "params_1": 1
                },
                "param_3": {
                    "max_size": 1,
                    "output": 9,
                    "output1": 1,
                    "output_count": 1,
                    "output_length": 2,
                    "output_param": 2,
                    "output_param_1": 1,
                    "output_size": 7,
                    "output_val": 1,
                    "output_value": 2,
                    "param_b": 1,
                    "params_2": 1,
                    "result": 2
                },
                "param_4": {
                    "additional_data": 1,
                    "additional_param": 1,
                    "arg": 1,
                    "b": 1,
                    "constant_value": 1,
                    "extra_param": 2,
                    "input3": 1,
                    "input_flag": 1,
                    "input_param_3": 1,
                    "param": 9,
                    "param4": 3,
                    "param_4": 4,
                    "param_a": 1,
                    "secondary_input": 1,
                    "some_value": 1,
                    "temp_param": 1,
                    "unused": 1
                },
                "param_5": {
                    "callback": 17,
                    "callback_func": 6,
                    "callback_function": 7,
                    "data_processing_func": 1
                },
                "uVar3": {
                    "max_data_size": 1,
                    "max_length": 2,
                    "max_output_length": 1,
                    "max_size": 10,
                    "max_val": 1,
                    "max_value": 13,
                    "maximum_size": 1,
                    "maximum_value": 1,
                    "temp_var1": 1
                },
                "uVar4": {
                    "additional_size": 2,
                    "count": 3,
                    "counter": 1,
                    "extra_length": 1,
                    "extra_offset": 1,
                    "extra_size": 1,
                    "increment": 2,
                    "new_value": 2,
                    "offset": 8,
                    "size": 1,
                    "temp_size": 1,
                    "temp_val": 1,
                    "temp_value": 2,
                    "temp_var2": 1,
                    "temporary_value": 1,
                    "u_var4": 1,
                    "var_10": 1,
                    "write_size": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080053d4"
            ],
            "code": "\nundefined4\ndecode_and_process_data_080052e4(undefined4 input,uint *data,uint *output,undefined4 param,code *callback)\n\n{\n  int index;\n  int result;\n  uint max_value;\n  uint offset;\n  bool flag;\n  \n  max_value = data[4];\n  if ((int)data[4] < (int)data[2]) {\n    max_value = data[2];\n  }\n  *output = max_value;\n  if (*(char *)((int)data + 0x43) != '\\0') {\n    *output = max_value + 1;\n  }\n  if ((int)(*data << 0x1a) < 0) {\n    *output = *output + 2;\n  }\n  if ((*data & 6) == 0) {\n    for (index = 0; index < (int)(data[3] - *output); index = index + 1) {\n      result = (*callback)(input,param,(int)data + 0x19,1);\n      if (result == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  max_value = (uint)*(byte *)((int)data + 0x43);\n  if (max_value != 0) {\n    max_value = 1;\n  }\n  offset = max_value;\n  if ((int)(*data << 0x1a) < 0) {\n    *(undefined *)((int)data + max_value + 0x43) = 0x30;\n    offset = max_value + 2;\n    *(undefined *)((int)data + max_value + 0x44) = *(undefined *)((int)data + 0x45);\n  }\n  index = (*callback)(input,param,(int)data + 0x43,offset);\n  if (index != -1) {\n    max_value = data[3];\n    flag = (*data & 6) != 4;\n    if (flag) {\n      max_value = 0;\n    }\n    offset = 0;\n    if (!flag) {\n      max_value = max_value - *output;\n    }\n    if (!flag) {\n      max_value = max_value & ~((int)max_value >> 0x1f);\n    }\n    if ((int)data[4] < (int)data[2]) {\n      max_value = max_value + (data[2] - data[4]);\n    }\n    while( true ) {\n      if (max_value == offset) {\n        return 0;\n      }\n      index = (*callback)(input,param,(int)data + 0x1a,1);\n      if (index == -1) break;\n      offset = offset + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "decode_and_process_data_080052e4",
            "entrypoint": "0x080052e4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080052e4": "decode_and_process_data_080052e4",
                "bVar5": "flag",
                "iVar1": "index",
                "iVar2": "result",
                "param_1": "input",
                "param_2": "data",
                "param_3": "output",
                "param_4": "param",
                "param_5": "callback",
                "uVar3": "max_value",
                "uVar4": "offset"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080053d4": {
            "additional_data": {
                "FUN_080052e4": {
                    "printf_common_wrapper": 1
                },
                "FUN_080053d4": {
                    "format_and_print": 2,
                    "formatted_print": 2,
                    "print_and_convert": 2,
                    "print_formatted": 1,
                    "print_formatted_data": 5,
                    "print_formatted_message": 1,
                    "print_formatted_output": 7,
                    "print_formatted_string": 8,
                    "print_formatted_text": 2,
                    "print_formatted_value": 1
                },
                "FUN_08005614": {
                    "filter_chars": 1
                },
                "_printf_common": {
                    "printf_common": 2
                },
                "bVar1": {
                    "arg_byte": 1,
                    "byte_val": 6,
                    "byte_value": 6,
                    "char_value": 1,
                    "first_argument_byte": 1,
                    "first_byte": 1,
                    "first_char": 3,
                    "flag": 2,
                    "format_char": 3,
                    "format_flag": 1,
                    "format_type": 2,
                    "indicator": 1,
                    "type": 1,
                    "value": 1
                },
                "iVar2": {
                    "format_result": 1,
                    "i": 3,
                    "idx": 1,
                    "index": 7,
                    "index_var": 1,
                    "int_val": 1,
                    "int_value1": 1,
                    "int_var_2": 1,
                    "loop_counter": 1,
                    "loop_var": 2,
                    "printf_result": 1,
                    "result": 8,
                    "return_value": 1,
                    "status": 1
                },
                "iVar4": {
                    "char_count": 1,
                    "char_result": 1,
                    "chr_result": 1,
                    "inner_loop_var": 1,
                    "inner_result": 1,
                    "int_val2": 1,
                    "int_value2": 1,
                    "int_var_4": 1,
                    "j": 2,
                    "loop_var": 1,
                    "output_result": 2,
                    "print_result": 2,
                    "printf_result": 1,
                    "putc_result": 1,
                    "result": 8,
                    "return_value": 1,
                    "temp_result": 1,
                    "tmp": 1,
                    "write_result": 2
                },
                "local_24": {
                    "alignment": 1,
                    "args_written": 1,
                    "char_count": 1,
                    "local_arr": 2,
                    "local_array": 4,
                    "local_buffer": 1,
                    "local_data": 1,
                    "local_values": 1,
                    "local_variables": 1,
                    "local_vars": 2,
                    "num_written_chars": 1,
                    "output_len": 1,
                    "output_length": 1,
                    "print_args": 1,
                    "print_lengths": 1,
                    "result": 1,
                    "result_array": 1,
                    "size_arr": 1,
                    "size_array": 1,
                    "temp_array": 2,
                    "temp_buffer": 1
                },
                "memchr": {
                    "find_null": 1,
                    "find_null_byte": 1
                },
                "param_1": {
                    "arg1": 1,
                    "format": 2,
                    "format_specifier": 4,
                    "format_str": 2,
                    "format_string": 17,
                    "output_format": 1,
                    "output_stream": 1,
                    "param": 1,
                    "param1": 1,
                    "stream": 1
                },
                "param_2": {
                    "arg": 1,
                    "arg_list": 5,
                    "arg_pointer": 1,
                    "arglist": 1,
                    "args": 10,
                    "arguments": 4,
                    "data": 1,
                    "flags": 1,
                    "format_spec": 1,
                    "format_string": 2,
                    "input": 1,
                    "message": 1,
                    "output_args": 1,
                    "value": 1
                },
                "param_3": {
                    "arg1": 1,
                    "arg2": 1,
                    "arg_cnt": 1,
                    "arg_count": 1,
                    "args": 1,
                    "args_count": 3,
                    "args_size": 1,
                    "buffer_length": 1,
                    "buffer_size": 2,
                    "field_width": 1,
                    "n": 1,
                    "num_args": 3,
                    "output_nums": 1,
                    "param3": 1,
                    "param_3": 1,
                    "readonly_arg": 1,
                    "stream": 1,
                    "width": 9
                },
                "param_4": {
                    "arg2": 1,
                    "arg_function": 1,
                    "format_func": 1,
                    "func": 1,
                    "func_ptr": 1,
                    "out_func": 4,
                    "output_function": 5,
                    "param4": 1,
                    "param_4": 1,
                    "print_chr": 1,
                    "print_func": 1,
                    "print_func_ptr": 1,
                    "print_function": 8,
                    "putc_func": 1,
                    "stream": 1,
                    "write_func": 1,
                    "write_function": 1
                },
                "param_5": {
                    "arg3": 2,
                    "arg_list": 1,
                    "arg_list_ptr": 1,
                    "arg_pointer": 1,
                    "arg_ptr": 6,
                    "arg_ptr_out": 1,
                    "argptr": 1,
                    "args_ptr": 1,
                    "arguments": 1,
                    "data_ptr": 1,
                    "err_args": 1,
                    "out_arg": 1,
                    "out_arg1": 1,
                    "out_args": 2,
                    "output": 1,
                    "output_array": 1,
                    "output_context": 1,
                    "param5": 1,
                    "param_5": 1,
                    "param_ptr": 1,
                    "pp_arg": 1,
                    "print_arguments": 1,
                    "print_data": 1,
                    "stream": 1
                },
                "pcVar11": {
                    "char_pointer2": 1,
                    "char_ptr2": 1,
                    "cur_ptr": 1,
                    "current_char": 2,
                    "current_digit": 2,
                    "current_ptr": 1,
                    "dest_ptr": 1,
                    "formatted_string": 1,
                    "formatted_value": 1,
                    "hex_string": 1,
                    "output": 1,
                    "output_ptr": 5,
                    "output_str": 1,
                    "output_string": 1,
                    "output_value": 1,
                    "print_result_temp": 1,
                    "ptr_to_string": 1,
                    "result_str": 1,
                    "str_end": 1,
                    "str_ptr": 3,
                    "temp_ptr": 1,
                    "write_location": 1
                },
                "pcVar12": {
                    "buffer": 2,
                    "char_pointer3": 1,
                    "char_ptr3": 1,
                    "current_char": 1,
                    "final_ptr": 1,
                    "format": 1,
                    "format_buffer": 1,
                    "format_ptr": 1,
                    "format_str": 1,
                    "formatted_message": 1,
                    "formatted_str": 2,
                    "formatted_string": 2,
                    "formatted_string_end": 1,
                    "output": 5,
                    "output_end": 1,
                    "output_string": 3,
                    "ptr_char": 1,
                    "ptr_output": 1,
                    "str_buffer": 1,
                    "str_ptr": 1,
                    "str_start": 1
                },
                "pcVar5": {
                    "char_pointer1": 1,
                    "char_ptr": 2,
                    "charset": 2,
                    "digit_chars": 2,
                    "digit_set": 1,
                    "digit_str": 1,
                    "digit_string": 1,
                    "digits": 3,
                    "hex_characters": 2,
                    "hex_chars": 8,
                    "hex_digits": 4,
                    "hex_table": 1,
                    "hex_upper": 1,
                    "print_buffer": 1
                },
                "ppcVar8": {
                    "char_pointer_pointer": 1,
                    "char_ptr_ptr": 1,
                    "ppc_arg": 1,
                    "print_arg_char_ptr": 1,
                    "str_ptr_ptr": 1,
                    "string_ptr_ptr": 1
                },
                "ppuVar7": {
                    "data_ptr_ptr": 1,
                    "pp_arg_value": 1,
                    "print_arg_ptr": 1,
                    "ptr_ptr": 2,
                    "uint_pointer2": 1
                },
                "puVar3": {
                    "arg_data": 1,
                    "arg_ptr": 4,
                    "arg_ptr_temp": 1,
                    "arg_value": 1,
                    "argptr_current": 1,
                    "current_argument": 1,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "data_ptr_2": 1,
                    "output_ptr": 1,
                    "p": 1,
                    "param_ptr": 1,
                    "print_arg": 1,
                    "ptr": 8,
                    "ptr_var": 2,
                    "temp_ptr": 2,
                    "uint_pointer1": 1
                },
                "uVar10": {
                    "arg1": 1,
                    "arg_length": 2,
                    "arg_value": 1,
                    "arg_width": 1,
                    "copy_var": 1,
                    "current_value": 1,
                    "dividend": 1,
                    "len": 2,
                    "length": 3,
                    "num": 1,
                    "num_value": 1,
                    "original_width": 1,
                    "size": 1,
                    "str_length": 1,
                    "temp": 3,
                    "temp_len": 1,
                    "temp_length": 1,
                    "uint_val3": 1,
                    "uint_value3": 1,
                    "val2": 1,
                    "value": 2,
                    "value2": 1
                },
                "uVar6": {
                    "base": 26,
                    "base_val": 1,
                    "format_flag": 1,
                    "uint_val": 1,
                    "uint_value1": 1
                },
                "uVar9": {
                    "arg_value": 2,
                    "argument": 1,
                    "data_value": 1,
                    "flag_value": 1,
                    "len": 1,
                    "length": 4,
                    "num": 3,
                    "num_chars_written": 1,
                    "output_length": 1,
                    "print_length": 1,
                    "result": 1,
                    "temp": 1,
                    "uint_val2": 1,
                    "uint_value2": 1,
                    "val": 1,
                    "val1": 1,
                    "value": 6,
                    "value1": 1
                }
            },
            "called": [
                "FUN_080052e4",
                "FUN_08005614"
            ],
            "calling": [
                "FUN_080050fc"
            ],
            "code": "\nuint print_formatted_string_080053d4(undefined4 format_string,uint *args,undefined4 width,code *print_function,uint **arg_ptr)\n\n{\n  byte byte_val;\n  int result;\n  uint *ptr;\n  int result;\n  char *hex_chars;\n  uint base;\n  uint **ptr_ptr;\n  char **string_ptr_ptr;\n  uint value;\n  uint temp;\n  char *output_ptr;\n  char *output;\n  uint local_array [2];\n  \n  byte_val = *(byte *)(args + 6);\n  output = (char *)((int)args + 0x43);\n  if (byte_val != 0x6e) {\n    if (byte_val < 0x6f) {\n      if (byte_val != 99) {\n        if (byte_val < 100) {\n          if (byte_val == 0) goto LAB_0800558e;\n          if (byte_val != 0x58) goto LAB_08005404;\n          *(undefined *)((int)args + 0x45) = 0x58;\n          hex_chars = \"0123456789ABCDEF\";\nLAB_0800551e:\n          base = *args;\n          ptr = *arg_ptr;\n          *arg_ptr = ptr + 1;\n          if (((base & 0x80) == 0) && ((int)(base << 0x19) < 0)) {\n            value = (uint)*(ushort *)ptr;\n          }\n          else {\n            value = *ptr;\n          }\n          if ((int)(base << 0x1f) < 0) {\n            *args = base | 0x20;\n          }\n          if (value == 0) {\n            *args = *args & 0xffffffdf;\n          }\n          base = 0x10;\nLAB_080054b4:\n          *(undefined *)((int)args + 0x43) = 0;\n        }\n        else {\n          if ((byte_val != 100) && (byte_val != 0x69)) goto LAB_08005404;\n          value = *args;\n          ptr = *arg_ptr;\n          if ((value & 0x80) == 0) {\n            *arg_ptr = ptr + 1;\n            if ((value & 0x40) == 0) goto LAB_08005424;\n            value = (uint)(short)*(ushort *)ptr;\n          }\n          else {\n            *arg_ptr = ptr + 1;\nLAB_08005424:\n            value = *ptr;\n          }\n          if ((int)value < 0) {\n            value = -value;\n            *(undefined *)((int)args + 0x43) = 0x2d;\n          }\n          hex_chars = \"0123456789ABCDEF\";\n          base = 10;\n        }\n        temp = args[1];\n        args[2] = temp;\n        output_ptr = output;\n        if ((int)temp < 0) {\n          if (value != 0) goto LAB_08005552;\nLAB_08005600:\n          *(char *)((int)args + 0x42) = *hex_chars;\n          output_ptr = (char *)((int)args + 0x42);\n        }\n        else {\n          *args = *args & 0xfffffffb;\n          if (value == 0) {\n            if (temp != 0) goto LAB_08005600;\n          }\n          else {\nLAB_08005552:\n            do {\n              temp = value / base;\n              output_ptr = output_ptr + -1;\n              *output_ptr = hex_chars[value - base * temp];\n              value = temp;\n            } while (temp != 0);\n          }\n        }\n        if (((base == 8) && ((int)(*args << 0x1f) < 0)) && ((int)args[1] <= (int)args[4]))\n        {\n          output_ptr[-1] = '0';\n          output_ptr = output_ptr + -1;\n        }\n        args[4] = (int)output - (int)output_ptr;\n        output = output_ptr;\n        goto LAB_080054fa;\n      }\n      ptr = *arg_ptr;\n      *arg_ptr = ptr + 1;\n      *(char *)((int)args + 0x42) = (char)*ptr;\nLAB_08005464:\n      output = (char *)((int)args + 0x42);\n      value = 1;\n    }\n    else {\n      if (byte_val != 0x73) {\n        if (byte_val < 0x74) {\n          if (byte_val == 0x6f) {\nLAB_0800548a:\n            value = *args;\n            ptr = *arg_ptr;\n            if ((value & 0x80) == 0) {\n              *arg_ptr = ptr + 1;\n              if ((value & 0x40) == 0) goto LAB_08005498;\n              value = (uint)*(ushort *)ptr;\n            }\n            else {\n              *arg_ptr = ptr + 1;\nLAB_08005498:\n              value = *ptr;\n            }\n            if (byte_val == 0x6f) {\n              base = 8;\n            }\n            else {\n              base = 10;\n            }\n            hex_chars = \"0123456789ABCDEF\";\n            goto LAB_080054b4;\n          }\n          if (byte_val == 0x70) {\n            *args = *args | 0x20;\nLAB_0800544a:\n            hex_chars = \"0123456789abcdef\";\n            *(undefined *)((int)args + 0x45) = 0x78;\n            goto LAB_0800551e;\n          }\n        }\n        else {\n          if (byte_val == 0x75) goto LAB_0800548a;\n          if (byte_val == 0x78) goto LAB_0800544a;\n        }\nLAB_08005404:\n        *(byte *)((int)args + 0x42) = byte_val;\n        goto LAB_08005464;\n      }\n      string_ptr_ptr = (char **)*arg_ptr;\n      *arg_ptr = (uint *)(string_ptr_ptr + 1);\n      output = *string_ptr_ptr;\n      result = find_null(output,0,args[1]);\n      if (result != 0) {\n        args[1] = result - (int)output;\n      }\n      value = args[1];\n    }\n    args[4] = value;\n    *(undefined *)((int)args + 0x43) = 0;\n    goto LAB_080054fa;\n  }\n  value = *args;\n  ptr_ptr = (uint **)*arg_ptr;\n  base = args[5];\n  if ((value & 0x80) == 0) {\n    *arg_ptr = (uint *)(ptr_ptr + 1);\n    ptr = *ptr_ptr;\n    if ((value & 0x40) == 0) goto LAB_0800557a;\n    *(short *)ptr = (short)base;\n  }\n  else {\n    *arg_ptr = (uint *)(ptr_ptr + 1);\n    ptr = *ptr_ptr;\nLAB_0800557a:\n    *ptr = base;\n  }\nLAB_0800558e:\n  args[4] = 0;\nLAB_080054fa:\n  result = printf_common(format_string,args,local_array,width,print_function);\n  if ((result == -1) || (result = (*print_function)(format_string,width,output,args[4]), result == -1)) {\nLAB_0800550e:\n    value = 0xffffffff;\n  }\n  else {\n    if ((int)(*args << 0x1e) < 0) {\n      for (result = 0; result < (int)(args[3] - local_array[0]); result = result + 1) {\n        result = (*print_function)(format_string,width,(int)args + 0x19,1);\n        if (result == -1) goto LAB_0800550e;\n      }\n    }\n    value = args[3];\n    if ((int)args[3] < (int)local_array[0]) {\n      value = local_array[0];\n    }\n  }\n  return value;\n}\n\n",
            "current_name": "print_formatted_string_080053d4",
            "entrypoint": "0x080053d4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080053d4": "print_formatted_string_080053d4",
                "_printf_common": "printf_common",
                "bVar1": "byte_val",
                "iVar2": "result",
                "iVar4": "result",
                "local_24": "local_array",
                "memchr": "find_null",
                "param_1": "format_string",
                "param_2": "args",
                "param_3": "width",
                "param_4": "print_function",
                "param_5": "arg_ptr",
                "pcVar11": "output_ptr",
                "pcVar12": "output",
                "pcVar5": "hex_chars",
                "ppcVar8": "string_ptr_ptr",
                "ppuVar7": "ptr_ptr",
                "puVar3": "ptr",
                "uVar10": "temp",
                "uVar6": "base",
                "uVar9": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005614": {
            "additional_data": {
                "FUN_08005614": {
                    "find_character": 18,
                    "find_character_in_string": 2,
                    "find_character_index": 2,
                    "find_character_position": 2,
                    "find_first_occurrence": 7
                },
                "param_1": {
                    "input_string": 5,
                    "str": 4,
                    "string": 22
                },
                "param_2": {
                    "char_to_find": 1,
                    "character": 21,
                    "target": 1,
                    "target_char": 3,
                    "target_character": 5
                },
                "param_3": {
                    "length": 20,
                    "str_length": 1,
                    "string_length": 10
                },
                "pcVar1": {
                    "current": 2,
                    "current_char": 9,
                    "current_char_pointer": 1,
                    "current_character": 6,
                    "current_pointer": 2,
                    "current_position": 6,
                    "pointer": 1,
                    "string_pointer": 1
                },
                "pcVar2": {
                    "current_character": 3,
                    "found_char": 3,
                    "found_character": 1,
                    "next": 2,
                    "next_char": 6,
                    "next_char_pointer": 1,
                    "next_character": 5,
                    "next_pointer": 1,
                    "next_position": 6
                }
            },
            "called": [],
            "calling": [
                "FUN_080050fc",
                "FUN_080053d4"
            ],
            "code": "\nchar * find_character_index_08005614(char *string,char character,int length)\n\n{\n  char *current_char;\n  char *next_char;\n  \n  current_char = string;\n  do {\n    next_char = current_char;\n    if (next_char == string + length) {\n      return (char *)0x0;\n    }\n    current_char = next_char + 1;\n  } while (*next_char != character);\n  return next_char;\n}\n\n",
            "current_name": "find_character_index_08005614",
            "entrypoint": "0x08005614",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005614": "find_character_index_08005614",
                "param_1": "string",
                "param_2": "character",
                "param_3": "length",
                "pcVar1": "current_char",
                "pcVar2": "next_char"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005630": {
            "additional_data": {
                "FUN_08005630": {
                    "copy_and_shift": 2,
                    "copy_array": 3,
                    "copy_array_to_pointer": 1,
                    "copy_buffer": 2,
                    "copy_data": 19,
                    "copy_data_to_buffer": 1,
                    "copy_memory": 1,
                    "copy_to_destination": 1,
                    "memcpy_from_source_to_destination": 1
                },
                "param_1": {
                    "array_length": 1,
                    "array_start_index": 1,
                    "base_address": 1,
                    "buffer_start_index": 2,
                    "data_destination": 1,
                    "dest": 1,
                    "dest_address": 2,
                    "dest_index": 3,
                    "dest_offset": 1,
                    "dest_start": 1,
                    "destination": 4,
                    "destination_offset": 1,
                    "dst_address": 1,
                    "dst_offset": 1,
                    "dst_size": 1,
                    "source_start_index": 1,
                    "src_array_size": 1,
                    "start_address": 1,
                    "start_index": 3,
                    "start_offset": 1,
                    "starting_index": 1,
                    "target_addr": 1
                },
                "param_2": {
                    "data_source": 1,
                    "source": 9,
                    "source_addr": 1,
                    "source_address": 2,
                    "source_array": 4,
                    "source_buffer": 1,
                    "source_data": 5,
                    "src": 1,
                    "src_address": 1,
                    "src_array": 1,
                    "src_buffer": 1,
                    "src_data": 3,
                    "src_start": 1
                },
                "param_3": {
                    "array_length": 2,
                    "buffer_length": 1,
                    "buffer_size": 1,
                    "data_length": 3,
                    "data_size": 3,
                    "dest_array_size": 1,
                    "length": 6,
                    "num_bytes": 2,
                    "num_elements": 1,
                    "size": 6,
                    "source_length": 1,
                    "source_size": 2,
                    "src_size": 2
                },
                "puVar1": {
                    "current_byte": 1,
                    "dest_array_end": 1,
                    "dest_end": 4,
                    "dest_end_index": 1,
                    "dest_end_ptr": 1,
                    "dest_ptr": 2,
                    "destination": 1,
                    "destination_pointer": 1,
                    "end": 1,
                    "end_address": 2,
                    "end_data": 1,
                    "end_of_source": 2,
                    "end_of_src": 1,
                    "end_source": 1,
                    "last_buffer_element": 1,
                    "last_source_element": 1,
                    "source_buffer_end": 1,
                    "source_end": 5,
                    "source_end_ptr": 1,
                    "src_end": 1
                },
                "puVar2": {
                    "buffer_ptr": 1,
                    "current_destination": 1,
                    "dest": 2,
                    "dest_array_last": 1,
                    "dest_buffer_ptr": 1,
                    "dest_curr_ptr": 1,
                    "dest_data": 1,
                    "dest_end": 1,
                    "dest_end_ptr": 1,
                    "dest_pointer": 1,
                    "dest_ptr": 2,
                    "dest_ptr_offset": 1,
                    "destination": 2,
                    "destination_data": 1,
                    "destination_end": 2,
                    "destination_ptr": 1,
                    "dst_end": 1,
                    "dst_pointer": 1,
                    "end_of_destination": 1,
                    "end_of_dst": 1,
                    "end_target": 1,
                    "last_destination_element": 1,
                    "source_pointer": 1,
                    "src_end": 1,
                    "src_ptr": 1,
                    "temp_address": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005044",
                "FUN_080057d0"
            ],
            "code": "\nvoid copy_data_to_buffer_08005630(int destination,undefined *source,int size)\n\n{\n  undefined *source_end;\n  undefined *dest;\n  \n  dest = (undefined *)(destination + -1);\n  source_end = source + size;\n  for (; source != source_end; source = source + 1) {\n    dest = dest + 1;\n    *dest = *source;\n  }\n  return;\n}\n\n",
            "current_name": "copy_data_to_buffer_08005630",
            "entrypoint": "0x08005630",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005630": "copy_data_to_buffer_08005630",
                "param_1": "destination",
                "param_2": "source",
                "param_3": "size",
                "puVar1": "source_end",
                "puVar2": "dest"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005646": {
            "additional_data": {
                "FUN_08005646": {
                    "copy_and_reverse": 12,
                    "copy_and_shift": 7,
                    "copy_and_shift_data": 1,
                    "copy_and_shift_elements": 1,
                    "copy_array": 1,
                    "copy_data_range": 1,
                    "copy_memory": 4,
                    "copy_within_range": 1,
                    "reverse_and_copy": 1,
                    "reverse_copy": 1,
                    "reverse_copy_memory": 1
                },
                "param_1": {
                    "dest": 15,
                    "dest_ptr": 1,
                    "destination": 13,
                    "source": 2
                },
                "param_1_temp": {
                    "dest_temp": 1
                },
                "param_2": {
                    "current_src": 1,
                    "destination": 2,
                    "source": 13,
                    "src": 14,
                    "src_ptr": 1
                },
                "param_2_temp": {
                    "src_temp": 1
                },
                "param_3": {
                    "count": 2,
                    "length": 21,
                    "num_bytes": 1,
                    "size": 7
                },
                "puVar1": {
                    "dest_end": 6,
                    "dest_end_ptr": 1,
                    "end": 3,
                    "end_address": 2,
                    "end_of_source": 1,
                    "end_pointer": 2,
                    "end_ptr": 6,
                    "source_end": 1,
                    "src_end": 9
                }
            },
            "called": [],
            "calling": [
                "FUN_08005044"
            ],
            "code": "\nvoid reverse_and_copy_08005646(undefined *dest,undefined *src,int length)\n\n{\n  undefined *src_end;\n  \n  src_end = src + length;\n  if ((src < dest) && (dest < src_end)) {\n    dest = dest + length;\n    length = length - (int)src_end;\n    while (src_end + length != (undefined *)0x0) {\n      src_end = src_end + -1;\n      dest = dest + -1;\n      *dest = *src_end;\n    }\n    return;\n  }\n  dest = dest + -1;\n  for (; src != src_end; src = src + 1) {\n    dest = dest + 1;\n    *dest = *src;\n  }\n  return;\n}\n\n",
            "current_name": "reverse_and_copy_08005646",
            "entrypoint": "0x08005646",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005646": "reverse_and_copy_08005646",
                "param_1": "dest",
                "param_2": "src",
                "param_3": "length",
                "puVar1": "src_end"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800567c": {
            "additional_data": {
                "DAT_200002ac": {
                    "allocated_memory": 1,
                    "first_node": 1,
                    "first_ptr": 1,
                    "global_list": 1,
                    "global_ptr": 1,
                    "global_var": 1
                },
                "FUNC_0800583c": {
                    "function1": 1,
                    "function_1": 2
                },
                "FUNC_0800583e": {
                    "function2": 1,
                    "function_2": 2
                },
                "FUN_0800567c": {
                    "allocate_and_lock_memory": 1,
                    "allocate_memory": 15,
                    "allocate_memory_and_lock": 1,
                    "allocate_memory_block": 1,
                    "insert_into_linked_list": 1,
                    "process_data": 1,
                    "rearrange_data": 1,
                    "reorganize_data": 1,
                    "update_data_structure": 2,
                    "update_linked_list": 1,
                    "update_list": 1
                },
                "__malloc_lock": {
                    "acquire_lock": 2,
                    "lock_memory": 2,
                    "lock_memory_allocation": 3
                },
                "__malloc_unlock": {
                    "release_lock": 2,
                    "unlock_memory": 2,
                    "unlock_memory_allocation": 3
                },
                "extraout_r1": {
                    "allocate_status": 1,
                    "extra_out": 1,
                    "extra_output": 4,
                    "extra_output_r1": 1,
                    "extra_result": 4,
                    "extra_var": 1,
                    "next": 1,
                    "ppi_var1": 1,
                    "ppi_var6": 1,
                    "ptr_to_next": 1,
                    "temp": 3,
                    "temp1": 2,
                    "temp_ptr": 1,
                    "temp_ptr1": 1,
                    "temp_var1": 1
                },
                "param_1": {
                    "array": 1,
                    "data_ptr": 1,
                    "error_code": 3,
                    "list_head": 1,
                    "lock": 1,
                    "lock_status": 3,
                    "output_param": 1,
                    "ptr_to_error_flag": 1,
                    "result": 16,
                    "status": 2,
                    "status_code": 1
                },
                "param_2": {
                    "data_size": 2,
                    "input_param_1": 1,
                    "length": 2,
                    "pointer_size": 1,
                    "size": 25
                },
                "param_3": {
                    "arg3": 7,
                    "arg_3": 1,
                    "extra_size": 1,
                    "input_param_2": 1,
                    "param": 1,
                    "param1": 2,
                    "param3": 3,
                    "param_3": 4,
                    "ptr1": 1,
                    "source": 1,
                    "unused1": 2,
                    "unused_param": 1,
                    "value1": 1,
                    "var1": 1,
                    "var3": 3,
                    "var_1": 1
                },
                "param_4": {
                    "arg4": 7,
                    "arg_4": 1,
                    "destination": 1,
                    "input_param_3": 1,
                    "lock": 1,
                    "param2": 2,
                    "param4": 3,
                    "param_4": 4,
                    "param_5": 1,
                    "ptr2": 1,
                    "unused2": 2,
                    "unused_param": 1,
                    "value2": 1,
                    "var2": 1,
                    "var4": 3,
                    "var_2": 1
                },
                "piVar3": {
                    "entry": 1,
                    "pointer_c": 1,
                    "pointer_var": 1,
                    "ptr": 3,
                    "ptr3": 1,
                    "temp": 1,
                    "temp3": 1,
                    "temp4": 2,
                    "temp_pointer": 2,
                    "temp_pointer3": 1,
                    "temp_ptr": 2,
                    "temp_ptr3": 1,
                    "temp_value": 1,
                    "temp_var": 6,
                    "temp_var1": 1,
                    "temp_var3": 1,
                    "temp_var4": 1,
                    "temp_var_1": 1,
                    "temp_variable": 1,
                    "var3": 1,
                    "var_3": 1
                },
                "ppiVar1": {
                    "curr": 1,
                    "curr_ptr": 1,
                    "current": 2,
                    "current_block": 1,
                    "current_node": 1,
                    "current_pointer": 2,
                    "next_entry_ptr": 1,
                    "pointer_a": 1,
                    "ppi_var7": 1,
                    "prev_ptr": 1,
                    "prev_ptr1": 1,
                    "previous_pointer_1": 1,
                    "ptr1": 1,
                    "ptr_1": 1,
                    "temp1": 1,
                    "temp2": 2,
                    "temp_pointer1": 1,
                    "temp_ptr1": 6,
                    "temp_ptr2": 1,
                    "temp_ptr_1": 1,
                    "temp_var2": 1,
                    "var1": 1,
                    "var1_ptr": 1
                },
                "ppiVar2": {
                    "curr_ptr": 1,
                    "current_entry_ptr": 1,
                    "current_pointer": 1,
                    "next": 1,
                    "next_block": 1,
                    "next_node": 1,
                    "next_ptr": 1,
                    "pointer_b": 1,
                    "ppi_var8": 1,
                    "prev": 1,
                    "prev_ptr2": 1,
                    "previous_pointer": 1,
                    "ptr2": 1,
                    "ptr_2": 1,
                    "temp": 1,
                    "temp2": 1,
                    "temp3": 2,
                    "temp_pointer": 1,
                    "temp_pointer2": 1,
                    "temp_ptr2": 6,
                    "temp_ptr3": 1,
                    "temp_ptr_2": 1,
                    "temp_var3": 1,
                    "var2": 1,
                    "var2_ptr": 1
                },
                "ppiVar4": {
                    "pointer_d": 1,
                    "ppi_var9": 1,
                    "prev": 1,
                    "prev_block": 1,
                    "prev_entry_ptr": 1,
                    "prev_node": 1,
                    "prev_ptr": 1,
                    "prev_ptr4": 1,
                    "previous": 1,
                    "previous_pointer": 1,
                    "previous_pointer_2": 1,
                    "ptr4": 1,
                    "ptr_4": 1,
                    "temp4": 1,
                    "temp5": 2,
                    "temp_pointer2": 1,
                    "temp_pointer4": 1,
                    "temp_ptr": 1,
                    "temp_ptr1": 1,
                    "temp_ptr3": 4,
                    "temp_ptr4": 3,
                    "temp_ptr_3": 1,
                    "temp_var5": 1,
                    "var4": 1,
                    "var4_ptr": 1
                },
                "ppiVar5": {
                    "allocated_memory": 1,
                    "new_block": 1,
                    "new_entry_ptr": 1,
                    "new_node": 4,
                    "new_pointer": 3,
                    "new_ptr": 3,
                    "node": 1,
                    "pointer_e": 1,
                    "ppi_var10": 1,
                    "ptr5": 1,
                    "ptr_5": 1,
                    "ptr_to_store": 1,
                    "temp5": 1,
                    "temp6": 1,
                    "temp_pointer5": 1,
                    "temp_ptr4": 1,
                    "temp_ptr5": 3,
                    "temp_ptr_4": 1,
                    "temp_var6": 1,
                    "updated_ptr": 1,
                    "var5": 1,
                    "var5_ptr": 1
                }
            },
            "called": [
                "FUN_0800583c",
                "FUN_0800583e"
            ],
            "calling": [
                "FUN_08005044",
                "FUN_080057d0"
            ],
            "code": "\nvoid allocate_memory_and_lock_0800567c(undefined4 *result,int size,undefined4 arg3,undefined4 arg4)\n\n{\n  int **extra_result;\n  int **temp_ptr1;\n  int **temp_ptr2;\n  int *temp_var;\n  int **temp_ptr3;\n  int **new_node;\n  \n  if (size == 0) {\n    return;\n  }\n  new_node = (int **)(size + -4);\n  if (*(int *)(size + -4) < 0) {\n    new_node = (int **)((int)new_node + *(int *)(size + -4));\n  }\n  lock_memory_allocation();\n  temp_ptr2 = (int **)&DAT_200002ac;\n  if (DAT_200002ac == (int **)0x0) {\n    new_node[1] = (int *)0x0;\n    temp_ptr1 = extra_result;\n    DAT_200002ac = new_node;\n  }\n  else {\n    temp_ptr2 = DAT_200002ac;\n    if (new_node < DAT_200002ac) {\n      temp_ptr1 = (int **)*new_node;\n      temp_ptr2 = (int **)((int)new_node + (int)temp_ptr1);\n      if (DAT_200002ac == temp_ptr2) {\n        temp_var = *DAT_200002ac;\n        DAT_200002ac = (int **)DAT_200002ac[1];\n        temp_ptr2 = (int **)((int)temp_var + (int)temp_ptr1);\n        *new_node = (int *)temp_ptr2;\n      }\n      new_node[1] = (int *)DAT_200002ac;\n      DAT_200002ac = new_node;\n    }\n    else {\n      do {\n        temp_ptr3 = temp_ptr2;\n        temp_ptr2 = (int **)temp_ptr3[1];\n        if (temp_ptr2 == (int **)0x0) break;\n      } while (temp_ptr2 <= new_node);\n      temp_ptr1 = (int **)*temp_ptr3;\n      if ((int **)((int)temp_ptr3 + (int)temp_ptr1) == new_node) {\n        temp_ptr1 = (int **)((int)temp_ptr1 + (int)*new_node);\n        *temp_ptr3 = (int *)temp_ptr1;\n        if (temp_ptr2 == (int **)((int)temp_ptr3 + (int)temp_ptr1)) {\n          temp_var = *temp_ptr2;\n          temp_ptr2 = (int **)temp_ptr2[1];\n          temp_ptr1 = (int **)((int)temp_ptr1 + (int)temp_var);\n          *temp_ptr3 = (int *)temp_ptr1;\n          temp_ptr3[1] = (int *)temp_ptr2;\n        }\n      }\n      else if (new_node < (int **)((int)temp_ptr3 + (int)temp_ptr1)) {\n        *result = 0xc;\n      }\n      else {\n        temp_ptr1 = (int **)((int)new_node + (int)*new_node);\n        if (temp_ptr2 == temp_ptr1) {\n          temp_var = *temp_ptr2;\n          temp_ptr2 = (int **)temp_ptr2[1];\n          temp_ptr1 = (int **)((int)temp_var + (int)*new_node);\n          *new_node = (int *)temp_ptr1;\n        }\n        new_node[1] = (int *)temp_ptr2;\n        temp_ptr3[1] = (int *)new_node;\n      }\n    }\n  }\n  unlock_memory_allocation(result,temp_ptr1,temp_ptr2,arg4);\n  return;\n}\n\n",
            "current_name": "allocate_memory_and_lock_0800567c",
            "entrypoint": "0x0800567c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800567c": "allocate_memory_and_lock_0800567c",
                "__malloc_lock": "lock_memory_allocation",
                "__malloc_unlock": "unlock_memory_allocation",
                "extraout_r1": "extra_result",
                "param_1": "result",
                "param_2": "size",
                "param_3": "arg3",
                "param_4": "arg4",
                "piVar3": "temp_var",
                "ppiVar1": "temp_ptr1",
                "ppiVar2": "temp_ptr2",
                "ppiVar4": "temp_ptr3",
                "ppiVar5": "new_node"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005714": {
            "additional_data": {
                "DAT_200002ac": {
                    "first_block": 5,
                    "free_block_list": 1,
                    "free_list": 1,
                    "free_list_head": 1,
                    "head": 2,
                    "head_ptr": 1,
                    "heap_start": 3
                },
                "DAT_200002b0": {
                    "brk": 1,
                    "brk_offset": 1,
                    "brk_point": 1,
                    "brk_pointer": 1,
                    "brk_ptr": 1,
                    "brk_value": 1,
                    "end_heap": 1,
                    "heap_end": 4,
                    "heap_top": 1,
                    "last_block": 1,
                    "sbrk_result": 1
                },
                "FUNC_0800583c": {
                    "initialize": 1
                },
                "FUNC_0800583e": {
                    "deallocate_memory": 1
                },
                "FUN_08005714": {
                    "allocate_memory": 25,
                    "allocate_memory_block": 5,
                    "dynamic_memory_allocation": 1
                },
                "FUN_0800581c": {
                    "allocate_more_memory": 1
                },
                "__malloc_lock": {
                    "acquire_lock": 1,
                    "lock": 2,
                    "lock_memory": 2
                },
                "__malloc_unlock": {
                    "release_lock": 1,
                    "unlock": 2,
                    "unlock_memory": 2
                },
                "_sbrk_r": {
                    "allocate_heap": 1,
                    "extend_heap": 1,
                    "increase_heap": 1,
                    "increase_heap_size": 1,
                    "sbrk": 1
                },
                "iVar2": {
                    "alloc_size": 1,
                    "block_diff": 2,
                    "block_size": 2,
                    "chunk_size": 1,
                    "difference": 2,
                    "offset": 3,
                    "remaining_size": 7,
                    "remaining_space": 12,
                    "space_left": 1
                },
                "param_1": {
                    "buffer": 1,
                    "buffer_size": 1,
                    "error_code": 4,
                    "output_ptr": 1,
                    "ptr_size": 1,
                    "ptr_to_size": 1,
                    "result": 3,
                    "size": 8,
                    "size_pointer": 1,
                    "size_ptr": 9
                },
                "param_2": {
                    "alignment": 8,
                    "requested_size": 2,
                    "size": 21
                },
                "puVar1": {
                    "current": 1,
                    "current_block": 22,
                    "current_chunk": 4,
                    "current_node": 1,
                    "current_ptr": 1,
                    "free_block": 1,
                    "temp_pointer": 1
                },
                "puVar3": {
                    "block": 2,
                    "current_pointer": 1,
                    "iterator": 1,
                    "next_block": 3,
                    "next_chunk": 1,
                    "prev_block": 4,
                    "prev_chunk": 1,
                    "previous": 1,
                    "previous_block": 13,
                    "previous_chunk": 2,
                    "previous_node": 1,
                    "previous_ptr": 1
                },
                "puVar5": {
                    "block_to_split": 1,
                    "inserted_chunk": 1,
                    "last_block": 3,
                    "last_free_block": 1,
                    "new_block": 9,
                    "new_chunk": 1,
                    "new_node": 1,
                    "new_ptr": 1,
                    "next_block": 1,
                    "next_chunk": 1,
                    "prev_pointer": 1,
                    "previous_block": 6,
                    "previous_block_next": 2,
                    "previous_chunk": 1,
                    "previous_offset": 1
                },
                "uVar4": {
                    "block_diff": 3,
                    "block_difference": 4,
                    "block_size": 2,
                    "block_size_diff": 2,
                    "block_size_difference": 1,
                    "chunk_difference": 2,
                    "difference": 10,
                    "free_space": 1,
                    "remaining_size": 1,
                    "remaining_space": 2,
                    "size_diff": 2,
                    "space_difference": 1
                },
                "uVar6": {
                    "adjusted_size": 1,
                    "aligned_size": 4,
                    "alloc_size": 1,
                    "allocated_memory": 2,
                    "allocated_size": 14,
                    "block_size": 2,
                    "final_block": 1,
                    "required_size": 1,
                    "total_size": 5
                }
            },
            "called": [
                "FUN_0800583c",
                "FUN_0800581c",
                "FUN_0800583e"
            ],
            "calling": [
                "FUN_080050fc",
                "FUN_08005044",
                "FUN_080057d0"
            ],
            "code": "\nuint allocate_memory_block_08005714(undefined4 *size_ptr,uint size)\n\n{\n  uint *current_block;\n  int remaining_space;\n  uint *previous_block;\n  uint difference;\n  uint *new_block;\n  uint allocated_size;\n  \n  allocated_size = (size + 3 & 0xfffffffc) + 8;\n  if (allocated_size < 0xc) {\n    allocated_size = 0xc;\n  }\n  if (((int)allocated_size < 0) || (allocated_size < size)) {\n    *size_ptr = 0xc;\n  }\n  else {\n    lock_memory();\n    current_block = DAT_200002ac;\n    new_block = DAT_200002ac;\n    while (previous_block = current_block, previous_block != (uint *)0x0) {\n      difference = *previous_block - allocated_size;\n      if (-1 < (int)difference) {\n        if (difference < 0xc) {\n          if (new_block == previous_block) {\n            current_block = (uint *)new_block[1];\n            DAT_200002ac = current_block;\n          }\n          else {\n            current_block = (uint *)previous_block[1];\n          }\n          if (new_block != previous_block) {\n            new_block[1] = (uint)current_block;\n            new_block = previous_block;\n          }\n        }\n        else {\n          *previous_block = difference;\n          *(uint *)((int)previous_block + difference) = allocated_size;\n          new_block = (uint *)((int)previous_block + difference);\n        }\n        goto LAB_08005778;\n      }\n      new_block = previous_block;\n      current_block = (uint *)previous_block[1];\n    }\n    if (DAT_200002b0 == 0) {\n      DAT_200002b0 = allocate_heap(size_ptr);\n    }\n    current_block = (uint *)allocate_heap(size_ptr,allocated_size);\n    if ((current_block != (uint *)0xffffffff) &&\n       ((new_block = (uint *)((int)current_block + 3U & 0xfffffffc), current_block == new_block ||\n        (remaining_space = allocate_heap(size_ptr,(int)new_block - (int)current_block), remaining_space != -1)))) {\n      *new_block = allocated_size;\nLAB_08005778:\n      unlock(size_ptr);\n      allocated_size = (int)new_block + 0xbU & 0xfffffff8;\n      remaining_space = allocated_size - (int)(new_block + 1);\n      if (remaining_space != 0) {\n        *(int *)((int)new_block + remaining_space) = -remaining_space;\n        return allocated_size;\n      }\n      return allocated_size;\n    }\n    *size_ptr = 0xc;\n    unlock(size_ptr);\n  }\n  return 0;\n}\n\n",
            "current_name": "allocate_memory_block_08005714",
            "entrypoint": "0x08005714",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005714": "allocate_memory_block_08005714",
                "__malloc_lock": "lock_memory",
                "__malloc_unlock": "unlock",
                "_sbrk_r": "allocate_heap",
                "iVar2": "remaining_space",
                "param_1": "size_ptr",
                "param_2": "size",
                "puVar1": "current_block",
                "puVar3": "previous_block",
                "puVar5": "new_block",
                "uVar4": "difference",
                "uVar6": "allocated_size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080057d0": {
            "additional_data": {
                "FUN_08005630": {
                    "copy_memory": 2
                },
                "FUN_0800567c": {
                    "free_memory": 2
                },
                "FUN_08005714": {
                    "get_usable_size": 1,
                    "malloc_usable_size": 1
                },
                "FUN_080057d0": {
                    "allocate_and_copy_memory": 3,
                    "allocate_memory": 2,
                    "allocate_memory_and_copy_data": 1,
                    "allocate_or_copy_buffer": 1,
                    "allocate_or_copy_memory": 9,
                    "copy_and_free": 1,
                    "data_transfer": 1,
                    "improved_memory_operation": 1,
                    "memory_allocation_and_copy": 1,
                    "memory_realloc": 1,
                    "process_data": 1,
                    "process_memory": 1,
                    "reallocate_buffer": 1,
                    "reallocate_memory": 2,
                    "rearrange_memory": 1,
                    "resize_buffer": 1,
                    "resize_memory_block": 3
                },
                "FUN_08005840": {
                    "malloc_memory": 2
                },
                "_free_r": {
                    "free_memory": 3,
                    "release_memory": 1
                },
                "_malloc_r": {
                    "allocate_memory": 4
                },
                "_malloc_usable_size_r": {
                    "get_usable_size": 4
                },
                "iVar1": {
                    "allocated_memory": 3,
                    "allocated_ptr": 1,
                    "dest": 1,
                    "destination": 1,
                    "destination_data": 1,
                    "new_address": 1,
                    "new_block": 3,
                    "new_buffer": 2,
                    "new_memory": 2,
                    "new_pointer": 1,
                    "result": 15
                },
                "memcpy": {
                    "copy_memory": 4
                },
                "param_1": {
                    "allocator": 1,
                    "arg1": 5,
                    "buffer": 1,
                    "context": 6,
                    "mem_context": 1,
                    "memory_allocator": 1,
                    "memory_block": 1,
                    "memory_context": 1,
                    "memory_manager": 1,
                    "param": 1,
                    "param_ptr": 1,
                    "param_size": 1,
                    "pointer": 1,
                    "ptr": 7,
                    "ptr_func": 1,
                    "size": 1
                },
                "param_2": {
                    "data": 2,
                    "existing_buffer": 1,
                    "input_data": 1,
                    "old_block": 3,
                    "old_buffer": 1,
                    "old_memory": 1,
                    "old_ptr": 1,
                    "size": 1,
                    "source": 8,
                    "source_data": 2,
                    "source_memory": 1,
                    "source_pointer": 1,
                    "source_ptr": 1,
                    "src": 5,
                    "src_buffer": 1,
                    "src_ptr": 1
                },
                "param_3": {
                    "extra1": 1,
                    "input_size": 1,
                    "new_size": 8,
                    "size": 14,
                    "size_of_source": 1,
                    "source_size": 4,
                    "src_size": 2
                },
                "param_4": {
                    "additional_size": 1,
                    "arg4": 5,
                    "destination_size": 2,
                    "dst_ptr": 1,
                    "extra": 2,
                    "extra2": 1,
                    "extra_param": 8,
                    "other_param": 1,
                    "param_4": 10
                },
                "uVar2": {
                    "available_size": 1,
                    "buffer_size": 1,
                    "current_size": 1,
                    "old_size": 2,
                    "usable_size": 26
                }
            },
            "called": [
                "FUN_08005630",
                "FUN_08005714",
                "FUN_0800567c",
                "FUN_08005840"
            ],
            "calling": [
                "FUN_08005044"
            ],
            "code": "\nint allocate_or_copy_memory_080057d0(undefined4 ptr,int source,uint size,undefined4 param_4)\n\n{\n  int result;\n  uint usable_size;\n  \n  if (source != 0) {\n    if (size == 0) {\n      free_memory();\n      result = 0;\n    }\n    else {\n      usable_size = get_usable_size();\n      result = source;\n      if ((usable_size < size) && (result = allocate_memory(ptr,size), result != 0)) {\n        copy_memory(result,source,size);\n        free_memory(ptr,source);\n      }\n    }\n    return result;\n  }\n  result = allocate_memory(ptr,size,size,param_4);\n  return result;\n}\n\n",
            "current_name": "allocate_or_copy_memory_080057d0",
            "entrypoint": "0x080057d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080057d0": "allocate_or_copy_memory_080057d0",
                "_free_r": "free_memory",
                "_malloc_r": "allocate_memory",
                "_malloc_usable_size_r": "get_usable_size",
                "iVar1": "result",
                "memcpy": "copy_memory",
                "param_1": "ptr",
                "param_2": "source",
                "param_3": "size",
                "uVar2": "usable_size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800581c": {
            "additional_data": {
                "FUN_0800581c": {
                    "allocate_memory": 23,
                    "check_and_allocate_memory": 1,
                    "initialize_memory": 6,
                    "initialize_memory_allocation": 1
                },
                "FUN_080072b8": {
                    "initialize_memory": 1,
                    "process_result": 1,
                    "reverse_data": 2
                },
                "_sbrk": {
                    "request_memory": 1
                },
                "iVar1": {
                    "allocated_address": 4,
                    "allocated_memory": 7,
                    "allocated_size": 1,
                    "allocation_result": 11,
                    "memory_address": 2,
                    "memory_ptr": 2,
                    "result": 3
                },
                "param_1": {
                    "memory_address": 1,
                    "memory_location": 1,
                    "memory_pointer": 2,
                    "memory_ptr": 1,
                    "output": 1,
                    "output_address": 2,
                    "output_pointer": 1,
                    "output_ptr": 1,
                    "output_value": 1,
                    "result": 13,
                    "result_pointer": 2,
                    "result_ptr": 5
                },
                "param_2": {
                    "allocation_size": 3,
                    "amount": 1,
                    "bytes_to_allocate": 1,
                    "memory_size": 1,
                    "size": 25
                }
            },
            "called": [
                "FUN_080072b8"
            ],
            "calling": [
                "FUN_08005714"
            ],
            "code": "\nvoid check_and_allocate_memory_0800581c(int *result,undefined4 size)\n\n{\n  int allocation_result;\n  \n  DAT_2000169c = 0;\n  allocation_result = request_memory(size);\n  if ((allocation_result == -1) && (DAT_2000169c != 0)) {\n    *result = DAT_2000169c;\n  }\n  return;\n}\n\n",
            "current_name": "check_and_allocate_memory_0800581c",
            "entrypoint": "0x0800581c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800581c": "check_and_allocate_memory_0800581c",
                "_sbrk": "request_memory",
                "iVar1": "allocation_result",
                "param_1": "result",
                "param_2": "size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800583c": {
            "called": [],
            "calling": [
                "FUN_08005714",
                "FUN_0800567c"
            ],
            "code": "\nvoid FUNC_0800583c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800583c",
            "entrypoint": "0x0800583c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800583c": "FUNC_0800583c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800583e": {
            "called": [],
            "calling": [
                "FUN_08005714",
                "FUN_0800567c"
            ],
            "code": "\nvoid FUNC_0800583e(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800583e",
            "entrypoint": "0x0800583e",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800583e": "FUNC_0800583e"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08005840": {
            "additional_data": {
                "FUN_08005840": {
                    "calculate_adjusted_value": 2,
                    "calculate_final_value": 1,
                    "calculate_modified_value": 1,
                    "calculate_new_value": 4,
                    "calculate_result": 11,
                    "calculate_sum": 11,
                    "calculate_value": 1
                },
                "iVar1": {
                    "adjusted_value": 3,
                    "current_index": 1,
                    "modified_value": 1,
                    "new_index": 2,
                    "new_value": 1,
                    "next_index": 1,
                    "result": 12,
                    "sum": 10
                },
                "param_1": {
                    "arg1": 3,
                    "input": 3,
                    "input_1": 1,
                    "input_flag": 1,
                    "input_one": 1,
                    "input_param": 1,
                    "input_value": 4,
                    "param1": 1,
                    "param_1": 1,
                    "ptr": 1,
                    "result": 6,
                    "start_index": 1,
                    "start_value": 1,
                    "unused_parameter": 1,
                    "value": 4,
                    "value1": 1
                },
                "param_2": {
                    "arg2": 3,
                    "array": 3,
                    "array_addr": 1,
                    "array_address": 1,
                    "array_index": 6,
                    "array_start": 1,
                    "base_value": 1,
                    "current_offset": 1,
                    "data": 3,
                    "data_pointer": 1,
                    "input": 5,
                    "input_2": 1,
                    "input_two": 1,
                    "input_value": 1,
                    "start_index": 1,
                    "value2": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080057d0"
            ],
            "code": "\nint calculate_final_value_08005840(undefined4 result,int array_index)\n\n{\n  int result;\n  \n  result = *(int *)(array_index + -4) + -4;\n  if (*(int *)(array_index + -4) < 0) {\n    result = result + *(int *)(array_index + result);\n  }\n  return result;\n}\n\n",
            "current_name": "calculate_final_value_08005840",
            "entrypoint": "0x08005840",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005840": "calculate_final_value_08005840",
                "iVar1": "result",
                "param_1": "result",
                "param_2": "array_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005854": {
            "additional_data": {
                "DAT_0800737e": {
                    "data_2": 1
                },
                "DAT_080073ac": {
                    "data_1": 1
                },
                "DAT_20000224": {
                    "constant_value": 2
                },
                "FUNC_0800708c": {
                    "check_nan": 1,
                    "error_handling": 1,
                    "function_b": 1,
                    "handle_nan": 1
                },
                "FUN_080009f0": {
                    "check_compatibility": 1,
                    "check_error": 2,
                    "function_g": 1
                },
                "FUN_08000a04": {
                    "compare_values": 2,
                    "compare_with_threshold": 1,
                    "function_d": 1
                },
                "FUN_08005854": {
                    "calculate_arc_sine": 1,
                    "calculate_asin": 27,
                    "calculate_asin_error": 1,
                    "calculate_inverse_sine": 1,
                    "calculate_sine_in_radians": 1
                },
                "FUN_08005c70": {
                    "calculate_fabs": 1,
                    "function_f": 1,
                    "get_nan_value": 1,
                    "perform_operation": 1
                },
                "FUN_0800709e": {
                    "evaluate_asin": 1,
                    "function_a": 1,
                    "get_errno": 1,
                    "get_nan": 1
                },
                "FUN_080070a4": {
                    "calculate_nan": 1,
                    "function_c": 1,
                    "get_abs_value": 1,
                    "get_nan": 1
                },
                "FUN_080072ac": {
                    "function_e": 1,
                    "handle_error": 1,
                    "set_errno": 2
                },
                "__aeabi_dcmpgt": {
                    "compare_absolute_value_to_constant": 1
                },
                "__errno": {
                    "get_error_number": 1
                },
                "__unorddf2": {
                    "compare_two_values": 1
                },
                "fabs": {
                    "absolute_value_of_value": 1
                },
                "iVar1": {
                    "compare_result_flag": 1,
                    "comparison": 1,
                    "comparison_result": 14,
                    "comparison_result2": 1,
                    "comparison_result_2": 5,
                    "result": 1
                },
                "local_28": {
                    "compare_result": 4,
                    "comparison_failure": 1,
                    "comparison_flag": 1,
                    "comparison_result": 8,
                    "comparison_result_nan_err": 1,
                    "comparison_result_unorddf2": 1,
                    "comparison_value": 2,
                    "err_code": 1,
                    "error_code": 2,
                    "fabs_result_compare": 1,
                    "isnan_result": 1,
                    "unorddf2_result": 2,
                    "unordered_comparison": 1,
                    "unordered_result": 3,
                    "unordered_value": 1
                },
                "local_30": {
                    "computed_value": 1,
                    "local_nan": 2,
                    "local_result": 1,
                    "na_n": 1,
                    "na_n_result": 1,
                    "nan_result": 1,
                    "nan_val": 1,
                    "nan_value": 5,
                    "output": 2,
                    "output_nan": 1,
                    "output_value": 1,
                    "result": 6,
                    "result_nan": 6,
                    "result_value": 1
                },
                "local_38": {
                    "angle_in_radians_3": 1,
                    "angle_sin_copy2": 1,
                    "arg1_copy_2": 1,
                    "dup_input_param_1": 1,
                    "input1_3": 1,
                    "input1_copy": 1,
                    "input_1_copy": 1,
                    "input_1_copy2": 1,
                    "input_value_1_copy_2": 1,
                    "local_input_x": 1,
                    "local_var_5": 1,
                    "local_x_copy": 1,
                    "param1_copy2": 1,
                    "param_1_copy2": 1,
                    "param_1_copy_2": 4,
                    "param_x": 1,
                    "temp_3": 1,
                    "temp_param3": 1,
                    "temp_value_3": 2,
                    "value_5": 1,
                    "x2": 1,
                    "x3": 1,
                    "x_copy2": 3
                },
                "local_40": {
                    "abs_input_param_1": 1,
                    "angle_in_radians_2": 1,
                    "angle_sin_copy": 1,
                    "arg1_copy": 1,
                    "input1_2": 1,
                    "input1_copy": 1,
                    "input_1_copy": 1,
                    "input_1_temp": 1,
                    "input_value_1_copy": 1,
                    "local_input_x": 1,
                    "local_var_3": 1,
                    "local_x": 2,
                    "param1_copy": 1,
                    "param_1_copy": 5,
                    "param_x": 1,
                    "temp_1": 1,
                    "temp_param1": 1,
                    "temp_value_1": 2,
                    "value_3": 1,
                    "x1": 1,
                    "x2": 1,
                    "x_copy": 3
                },
                "local_44": {
                    "callback_function": 1,
                    "err_msg": 1,
                    "err_str": 1,
                    "error_message": 7,
                    "error_string": 2,
                    "error_type": 1,
                    "local_pointer": 1,
                    "local_ptr": 1,
                    "local_string": 1,
                    "local_var_2": 1,
                    "math_err_msg": 1,
                    "math_error_type": 1,
                    "matherr_function_ptr": 1,
                    "matherr_name": 2,
                    "matherr_pointer": 1,
                    "matherr_ptr": 1,
                    "matherr_str": 1,
                    "message": 2,
                    "pointer": 2,
                    "pointer_1": 1
                },
                "local_48": {
                    "callback_result": 1,
                    "err_code": 1,
                    "err_code1": 1,
                    "error_code": 6,
                    "error_flag": 3,
                    "flag": 5,
                    "flag_1": 1,
                    "local_flag": 3,
                    "local_var_1": 1,
                    "math_err_flag": 1,
                    "matherr_arg": 1,
                    "matherr_flag": 2,
                    "matherr_id": 1,
                    "matherr_value": 1,
                    "return_value": 1
                },
                "matherr": {
                    "handle_math_error": 1
                },
                "nan": {
                    "get_nan": 1
                },
                "param_1": {
                    "angle_in_radians": 1,
                    "angle_sin": 1,
                    "input1": 3,
                    "input_1": 5,
                    "input_param1": 1,
                    "input_param_1": 2,
                    "input_val_1": 1,
                    "input_value_1": 1,
                    "input_x": 2,
                    "num1": 1,
                    "value1": 1,
                    "value_1": 3,
                    "value_x": 1,
                    "x": 8
                },
                "param_2": {
                    "angle_cos": 1,
                    "input2": 3,
                    "input_2": 5,
                    "input_param2": 1,
                    "input_param_2": 2,
                    "input_val_2": 1,
                    "input_value_2": 1,
                    "input_y": 2,
                    "num2": 1,
                    "unknown_param": 1,
                    "value2": 1,
                    "value_2": 3,
                    "value_y": 1,
                    "y": 8
                },
                "piVar3": {
                    "err_num_ptr": 1,
                    "err_ptr": 1,
                    "errno_pointer2": 1,
                    "errno_ptr": 3,
                    "errno_ptr2": 1,
                    "errno_ptr_2": 4,
                    "errno_return": 1,
                    "errno_val_ptr": 2,
                    "errno_value": 2,
                    "errno_value_pointer": 2,
                    "errno_value_ptr": 1,
                    "error_code_ptr": 1,
                    "error_pointer": 1,
                    "error_ptr": 1
                },
                "pivar3": {
                    "errno_value": 1
                },
                "puVar2": {
                    "err_num_ptr": 1,
                    "errno_pointer": 5,
                    "errno_ptr": 13
                },
                "uStack_34": {
                    "angle_cos_copy2": 1,
                    "arg2_copy_2": 1,
                    "input2_3": 1,
                    "input2_copy": 1,
                    "input_2_copy": 1,
                    "input_2_copy2": 1,
                    "input_param_2_dup": 1,
                    "input_value_2_copy_2": 1,
                    "local_input_y": 1,
                    "local_var_6": 1,
                    "local_y_copy": 1,
                    "param2_copy2": 1,
                    "param_2_copy2": 1,
                    "param_2_copy_2": 4,
                    "param_y": 1,
                    "temp_4": 1,
                    "temp_param4": 1,
                    "temp_value_4": 2,
                    "unknown_param_3": 1,
                    "value_6": 1,
                    "y2": 1,
                    "y3": 1,
                    "y_copy2": 3
                },
                "uStack_3c": {
                    "angle_cos_copy": 1,
                    "arg2_copy": 1,
                    "dup_input_param_2": 1,
                    "input2_2": 1,
                    "input2_copy": 1,
                    "input_2_copy": 1,
                    "input_2_temp": 1,
                    "input_value_2_copy": 1,
                    "local_input_y": 1,
                    "local_var_4": 1,
                    "local_y": 2,
                    "param2_copy": 1,
                    "param_2_copy": 5,
                    "param_y": 1,
                    "temp_2": 1,
                    "temp_param2": 1,
                    "temp_value_2": 2,
                    "unknown_param_2": 1,
                    "value_4": 1,
                    "y1": 1,
                    "y2": 1,
                    "y_copy": 3
                },
                "uVar4": {
                    "asin_result": 9,
                    "asin_value": 1,
                    "inverse_sine_result": 1,
                    "result": 8,
                    "result_asin": 11
                },
                "uVar5": {
                    "abs_input": 1,
                    "abs_result": 1,
                    "abs_val": 1,
                    "abs_value": 5,
                    "absolute": 1,
                    "absolute_val": 1,
                    "absolute_value": 15,
                    "fabs_result": 4,
                    "value_abs": 1
                }
            },
            "called": [
                "FUN_0800709e",
                "FUN_0800708c",
                "FUN_080070a4",
                "FUN_08000a04",
                "FUN_080072ac",
                "FUN_08005c70",
                "FUN_080009f0"
            ],
            "calling": [
                "FUN_08003330"
            ],
            "code": "\nundefined8 calculate_asin_error_08005854(undefined4 x,undefined4 y)\n\n{\n  int comparison_result;\n  undefined4 *errno_ptr;\n  int *errno_ptr_2;\n  undefined8 result_asin;\n  undefined8 absolute_value;\n  undefined4 error_code;\n  undefined *error_message;\n  undefined4 param_1_copy;\n  undefined4 param_2_copy;\n  undefined4 param_1_copy_2;\n  undefined4 param_2_copy_2;\n  undefined8 result_nan;\n  int comparison_result;\n  \n  result_asin = __ieee754_asin();\n  if (DAT_20000224 == -1) {\n    return result_asin;\n  }\n  comparison_result = compare_two_values(x,y,x,y);\n  if (comparison_result != 0) {\n    return result_asin;\n  }\n  absolute_value = absolute_value_of_value(x,y);\n  comparison_result = compare_absolute_value_to_constant((int)absolute_value,(int)((ulonglong)absolute_value >> 0x20),0,0x3ff00000);\n  if (comparison_result == 0) {\n    return result_asin;\n  }\n  error_code = 1;\n  error_message = &DAT_080073ac;\n  param_1_copy = x;\n  param_2_copy = y;\n  param_1_copy_2 = x;\n  param_2_copy_2 = y;\n  result_nan = get_nan(&DAT_0800737e);\n  if (DAT_20000224 != '\\x02') {\n    comparison_result = handle_math_error(&error_code);\n    if (comparison_result != 0) goto LAB_080058d0;\n  }\n  errno_ptr = (undefined4 *)get_error_number();\n  *errno_ptr = 0x21;\nLAB_080058d0:\n  if (comparison_result != 0) {\n    errno_ptr_2 = (int *)get_error_number();\n    *errno_ptr_2 = comparison_result;\n  }\n  return result_nan;\n}\n\n",
            "current_name": "calculate_asin_error_08005854",
            "entrypoint": "0x08005854",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005854": "calculate_asin_error_08005854",
                "__aeabi_dcmpgt": "compare_absolute_value_to_constant",
                "__errno": "get_error_number",
                "__unorddf2": "compare_two_values",
                "fabs": "absolute_value_of_value",
                "iVar1": "comparison_result",
                "local_28": "comparison_result",
                "local_30": "result_nan",
                "local_38": "param_1_copy_2",
                "local_40": "param_1_copy",
                "local_44": "error_message",
                "local_48": "error_code",
                "matherr": "handle_math_error",
                "nan": "get_nan",
                "param_1": "x",
                "param_2": "y",
                "piVar3": "errno_ptr_2",
                "puVar2": "errno_ptr",
                "uStack_34": "param_2_copy_2",
                "uStack_3c": "param_2_copy",
                "uVar4": "result_asin",
                "uVar5": "absolute_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080058fc": {
            "called": [
                "FUN_08006070"
            ],
            "calling": [
                "FUN_08003330"
            ],
            "code": "\nundefined8 __ieee754_atan2(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  undefined4 uVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  uint uVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  \n  uVar5 = param_4 & 0x7fffffff;\n  if ((0x7ff00000 < (uVar5 | (-param_3 | param_3) >> 0x1f)) ||\n     (uVar3 = param_2 & 0x7fffffff, 0x7ff00000 < (uVar3 | (-param_1 | param_1) >> 0x1f))) {\n    uVar6 = __aeabi_dadd(param_1,param_2,param_3,param_4,param_4);\n    return uVar6;\n  }\n  if ((param_4 + 0xc0100000 | param_3) == 0) {\n    uVar6 = atan();\n    return uVar6;\n  }\n  uVar2 = (int)param_4 >> 0x1e & 2U | param_2 >> 0x1f;\n  if ((param_1 | uVar3) == 0) {\n    if (uVar2 == 2) {\n      return 0x400921fb54442d18;\n    }\n    if (uVar2 != 3) {\n      return CONCAT44(param_2,param_1);\n    }\nLAB_0800613e:\n    uVar6 = 0xc00921fb54442d18;\n  }\n  else {\n    if ((param_3 | uVar5) != 0) {\n      if (uVar5 == 0x7ff00000) {\n        if (uVar3 == 0x7ff00000) {\n          if (uVar2 == 2) {\n            return 0x4002d97c7f3321d2;\n          }\n          if (uVar2 == 3) {\n            return 0xc002d97c7f3321d2;\n          }\n          if (uVar2 != 1) {\n            return 0x3fe921fb54442d18;\n          }\n          return 0xbfe921fb54442d18;\n        }\n        if (uVar2 == 2) {\n          return 0x400921fb54442d18;\n        }\n        if (uVar2 != 3) {\n          if (uVar2 != 1) {\n            return 0;\n          }\n          return 0x8000000000000000;\n        }\n        goto LAB_0800613e;\n      }\n      if (uVar3 != 0x7ff00000) {\n        iVar4 = (int)(uVar3 - uVar5) >> 0x14;\n        if (iVar4 < 0x3d) {\n          if (((int)param_4 < 0) && (iVar4 + 0x3c < 0 != SCARRY4(iVar4,0x3c))) {\n            uVar6 = 0;\n          }\n          else {\n            __divdf3(param_1,param_2);\n            fabs();\n            uVar6 = atan();\n          }\n        }\n        else {\n          uVar6 = 0x3ff921fb54442d18;\n        }\n        iVar4 = (int)((ulonglong)uVar6 >> 0x20);\n        uVar1 = (undefined4)uVar6;\n        if (uVar2 == 1) {\n          return CONCAT44(iVar4 + -0x80000000,uVar1);\n        }\n        if (uVar2 == 2) {\n          uVar7 = __subdf3(uVar1,iVar4,0x33145c07,0x3ca1a626);\n          uVar6 = 0x400921fb54442d18;\n        }\n        else {\n          if (uVar2 == 0) {\n            return uVar6;\n          }\n          uVar6 = __subdf3(uVar1,iVar4,0x33145c07,0x3ca1a626);\n          uVar7 = 0x400921fb54442d18;\n        }\n        uVar6 = __subdf3((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),(int)uVar7,\n                         (int)((ulonglong)uVar7 >> 0x20));\n        return uVar6;\n      }\n    }\n    if ((int)param_2 < 0) {\n      uVar6 = 0xbff921fb54442d18;\n    }\n    else {\n      uVar6 = 0x3ff921fb54442d18;\n    }\n  }\n  return uVar6;\n}\n\n",
            "current_name": "FUN_080058fc",
            "entrypoint": "0x080058fc",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_08005900": {
            "additional_data": {
                "DAT_080073b1": {
                    "math_error_string": 1
                },
                "DAT_20000224": {
                    "error_mode": 1
                },
                "FUN_08005900": {
                    "calculate_exponent": 2,
                    "calculate_exponential": 1,
                    "calculate_pow": 9,
                    "calculate_power": 14,
                    "power_function": 1
                },
                "cVar1": {
                    "character": 2,
                    "character_var": 2,
                    "check_value": 1,
                    "comparison_flag": 1,
                    "comparison_result": 1,
                    "comparison_var": 1,
                    "condition1": 1,
                    "condition_variable": 1,
                    "constant_1": 1,
                    "constant_value": 1,
                    "data_check": 1,
                    "data_flag": 2,
                    "flag": 8,
                    "is_error": 1,
                    "is_negative": 2,
                    "option": 1,
                    "result": 1,
                    "special_case": 1,
                    "temp": 1
                },
                "iVar2": {
                    "comparison": 2,
                    "comparison_result": 5,
                    "int_var": 2,
                    "integer_var": 1,
                    "result": 19,
                    "temp_integer": 1
                },
                "iVar5": {
                    "another_int_var": 1,
                    "check_result": 3,
                    "comparison": 1,
                    "finite_check": 1,
                    "finite_res": 1,
                    "finite_result": 13,
                    "int_var2": 1,
                    "integer_var1": 1,
                    "is_finite": 1,
                    "is_finite_result": 1,
                    "result2": 2,
                    "temp_integer2": 1,
                    "temp_result": 2,
                    "tmp_result": 1
                },
                "local_30": {
                    "comparison_result": 1,
                    "errno_check": 1,
                    "errno_value": 1,
                    "error": 2,
                    "error_code": 5,
                    "error_flag": 1,
                    "error_num": 2,
                    "error_number": 1,
                    "error_status": 1,
                    "error_temp": 1,
                    "error_val": 1,
                    "error_value": 1,
                    "final_result_2": 1,
                    "local_comparison": 1,
                    "local_comparison_result": 1,
                    "local_int": 1,
                    "local_int_var": 1,
                    "local_result3": 1,
                    "local_var8": 1,
                    "math_err_code": 1,
                    "math_error": 1,
                    "matherr_result": 1,
                    "result_errno": 1,
                    "temp_integer3": 1,
                    "var8": 1
                },
                "local_38": {
                    "final_power": 1,
                    "final_result": 5,
                    "final_result_1": 1,
                    "local_result": 1,
                    "local_result2": 1,
                    "local_result_var": 1,
                    "local_var7": 1,
                    "output": 1,
                    "result": 2,
                    "result5": 1,
                    "result_power": 1,
                    "result_temp": 1,
                    "result_value": 2,
                    "return_val": 2,
                    "return_value": 7,
                    "temp_result2": 1,
                    "value": 1,
                    "var7": 1
                },
                "local_40": {
                    "base_2_copy": 1,
                    "base_copy2": 1,
                    "exp1": 1,
                    "exp1_copy": 3,
                    "exp1_temp": 1,
                    "exp_1_copy": 1,
                    "exponent1_copy": 2,
                    "exponent1_temp": 1,
                    "exponent_1_copy": 3,
                    "local_40": 1,
                    "local_arg3": 1,
                    "local_exponent_1": 1,
                    "local_input3": 1,
                    "local_param3_var": 1,
                    "local_param_3": 1,
                    "local_value3": 1,
                    "local_var3": 1,
                    "local_var5": 1,
                    "original_left": 1,
                    "param3_copy": 1,
                    "param_3_copy": 2,
                    "param_copy3": 1,
                    "power_num1_temp": 1,
                    "temp_exponent_1": 1,
                    "var5": 1
                },
                "local_48": {
                    "base1": 1,
                    "base1_copy": 5,
                    "base1_temp": 2,
                    "base_1_copy": 4,
                    "base_copy": 2,
                    "base_num1_temp": 1,
                    "local_48": 1,
                    "local_arg1": 1,
                    "local_base_1": 1,
                    "local_input1": 1,
                    "local_param1_var": 1,
                    "local_param_1": 1,
                    "local_value1": 1,
                    "local_var1": 1,
                    "local_var3": 1,
                    "original_base": 1,
                    "param1_copy": 1,
                    "param_1_copy": 2,
                    "param_copy1": 1,
                    "temp_base_1": 1,
                    "var3": 1
                },
                "local_4c": {
                    "err_msg": 1,
                    "errcode": 1,
                    "error_message": 3,
                    "error_message_ptr": 1,
                    "error_msg": 4,
                    "error_msg_ptr": 2,
                    "error_str": 1,
                    "error_string": 1,
                    "local_pointer": 2,
                    "local_undefined_var": 1,
                    "local_var2": 1,
                    "math_err_arg": 1,
                    "matherr_reason": 1,
                    "message": 2,
                    "message_address": 1,
                    "msg": 1,
                    "pointer1": 1,
                    "ptr_flag": 2,
                    "return_message": 1,
                    "status_msg": 1,
                    "undefined_pointer2": 1,
                    "var2": 1
                },
                "local_50": {
                    "calculate_flag": 1,
                    "case_flag": 1,
                    "error_code": 3,
                    "flag": 4,
                    "flag1": 2,
                    "flag_1": 1,
                    "flag_value": 1,
                    "is_error": 1,
                    "local_flag1": 1,
                    "local_flag_var": 1,
                    "local_result1": 1,
                    "local_var1": 1,
                    "math_err_type": 1,
                    "matherr_flag": 1,
                    "power_flag": 1,
                    "power_type": 1,
                    "return_code1": 1,
                    "return_value": 2,
                    "status": 3,
                    "type": 2,
                    "var1": 1
                },
                "param_1": {
                    "base": 6,
                    "base1": 8,
                    "base_1": 8,
                    "base_num1": 1,
                    "base_value": 1,
                    "input1": 4,
                    "input_1": 1,
                    "power_base": 1,
                    "value1": 1
                },
                "param_2": {
                    "base2": 8,
                    "base_2": 8,
                    "base_num2": 1,
                    "exponent": 6,
                    "exponent_value": 1,
                    "input2": 4,
                    "input_2": 1,
                    "power_exponent": 1,
                    "value2": 1
                },
                "param_3": {
                    "arg1": 1,
                    "base2": 1,
                    "base_2": 1,
                    "exp1": 4,
                    "exp_1": 1,
                    "exponent1": 4,
                    "exponent_1": 7,
                    "input3": 4,
                    "input_3": 1,
                    "left": 1,
                    "other_base_value": 1,
                    "param_3": 3,
                    "power_num1": 1,
                    "value3": 1
                },
                "param_4": {
                    "arg2": 1,
                    "exp2": 4,
                    "exp_2": 1,
                    "exponent2": 5,
                    "exponent_2": 8,
                    "input4": 4,
                    "input_4": 1,
                    "other_exponent_value": 1,
                    "param_4": 3,
                    "power_num2": 1,
                    "right": 1,
                    "value4": 1
                },
                "piVar3": {
                    "errno_pointer": 2,
                    "errno_ptr": 10,
                    "error_code": 1,
                    "error_pointer": 1,
                    "error_ptr": 7,
                    "int_pointer": 1,
                    "int_pointer_var": 1,
                    "integer_pointer": 1,
                    "pointer": 1,
                    "pointer_var": 1,
                    "ptr": 2,
                    "ptr_result": 2
                },
                "puVar4": {
                    "errno": 1,
                    "errno_address": 2,
                    "errno_pointer": 1,
                    "errno_ptr": 6,
                    "errno_ptr2": 1,
                    "errno_ptr4": 1,
                    "errno_val_ptr": 1,
                    "errno_value_ptr": 2,
                    "error_code_ptr": 2,
                    "error_num_ptr": 1,
                    "error_ptr": 1,
                    "math_errno_pointer": 1,
                    "matherr_result_ptr": 1,
                    "pointer": 1,
                    "pointer2": 1,
                    "pointer_var1": 1,
                    "ptr": 1,
                    "ptr2": 1,
                    "ptr_errno": 2,
                    "undefined4_pointer_var": 1,
                    "undefined_pointer": 1
                },
                "uStack_3c": {
                    "exp2": 1,
                    "exp2_copy": 3,
                    "exp2_temp": 1,
                    "exp_2_copy": 1,
                    "exponent2_copy": 2,
                    "exponent2_temp": 1,
                    "exponent_2_copy": 4,
                    "exponent_copy2": 1,
                    "local_3c": 1,
                    "local_arg4": 1,
                    "local_exponent_2": 1,
                    "local_input4": 1,
                    "local_param4_var": 1,
                    "local_param_4": 1,
                    "local_value4": 1,
                    "local_var4": 1,
                    "local_var6": 1,
                    "param4_copy": 1,
                    "param_4_copy": 2,
                    "param_copy4": 1,
                    "power_num2_temp": 1,
                    "temp_exponent_2": 1,
                    "var6": 1
                },
                "uStack_44": {
                    "base2": 1,
                    "base2_copy": 5,
                    "base2_temp": 2,
                    "base_2_copy": 4,
                    "base_num2_temp": 1,
                    "exponent_copy": 2,
                    "local_44": 1,
                    "local_arg2": 1,
                    "local_base_2": 1,
                    "local_input2": 1,
                    "local_param2_var": 1,
                    "local_param_2": 1,
                    "local_value2": 1,
                    "local_var2": 1,
                    "local_var4": 1,
                    "param2_copy": 1,
                    "param_2_copy": 2,
                    "param_copy2": 1,
                    "temp_base_2": 1,
                    "var4": 1
                },
                "uVar6": {
                    "base_1_high": 1,
                    "high_bits": 1,
                    "output1": 1,
                    "pow1": 1,
                    "pow_1": 1,
                    "pow_high": 2,
                    "pow_high_32": 1,
                    "power1": 2,
                    "power_1": 1,
                    "power_result1": 1,
                    "power_upper": 2,
                    "power_upper_part": 1,
                    "result1": 1,
                    "result3": 1,
                    "result_high": 1,
                    "result_upper": 4,
                    "result_upper_part": 1,
                    "sub_pow_1": 1,
                    "temp1": 1,
                    "u_var6": 1,
                    "undefined4_var": 1,
                    "unsigned_var1": 1,
                    "upper32_bits": 1,
                    "upper_bits": 2
                },
                "uVar7": {
                    "another_undefined4_var": 1,
                    "base_1_low": 1,
                    "low_bits": 1,
                    "lower32_bits": 1,
                    "lower_bits": 2,
                    "output2": 1,
                    "pow2": 1,
                    "pow_2": 1,
                    "pow_low": 2,
                    "pow_low_32": 1,
                    "power2": 2,
                    "power_2": 1,
                    "power_lower": 2,
                    "power_lower_part": 1,
                    "power_result2": 1,
                    "result2": 1,
                    "result4": 1,
                    "result_low": 1,
                    "result_lower": 4,
                    "result_lower_part": 1,
                    "sub_pow_2": 1,
                    "temp2": 1,
                    "u_var7": 1,
                    "unsigned_var2": 1
                },
                "uVar8": {
                    "final_result": 1,
                    "output3": 1,
                    "pow_result": 2,
                    "pow_result_1": 2,
                    "power": 6,
                    "power_result3": 1,
                    "power_result_upper": 1,
                    "result": 6,
                    "result1": 3,
                    "result3": 1,
                    "result5": 1,
                    "result8": 1,
                    "result_1": 1,
                    "result_high": 1,
                    "result_high_32": 1,
                    "undefined8_var": 1,
                    "unsigned_var3": 1
                },
                "uVar9": {
                    "another_undefined8_var": 1,
                    "output4": 1,
                    "pow_result_2": 2,
                    "power_result_lower": 1,
                    "result2": 3,
                    "result4": 1,
                    "result6": 1,
                    "result9": 1,
                    "result_2": 1,
                    "result_low": 1,
                    "result_low_32": 1,
                    "rint_result": 5,
                    "rint_value": 1,
                    "rounded_power": 2,
                    "rounded_result": 1,
                    "temp_result": 2,
                    "unsigned_var4": 1
                }
            },
            "called": [
                "FUN_0800709e",
                "FUN_080009b4",
                "FUN_08006228",
                "FUN_08000a04",
                "FUN_08007092",
                "FUN_080004d0",
                "FUN_080072ac",
                "FUN_080009a0",
                "FUN_080070b0",
                "FUN_08000724"
            ],
            "calling": [
                "FUN_0800411c"
            ],
            "code": "\nundefined8 calculate_power_08005900(undefined4 base1,undefined4 base2,undefined4 exponent_1,undefined4 exponent_2)\n\n{\n  char flag;\n  int result;\n  int *errno_ptr;\n  undefined4 *errno_ptr;\n  int finite_result;\n  undefined4 result_upper;\n  undefined4 result_lower;\n  undefined8 power;\n  undefined8 rint_result;\n  undefined4 flag;\n  undefined *error_msg;\n  undefined4 base1_copy;\n  undefined4 base2_copy;\n  undefined4 exponent_1_copy;\n  undefined4 exponent_2_copy;\n  undefined8 return_value;\n  int error_code;\n  \n  power = __ieee754_pow();\n  flag = DAT_20000224;\n  result_upper = (undefined4)((ulonglong)power >> 0x20);\n  result_lower = (undefined4)power;\n  if (DAT_20000224 == -1) {\n    return power;\n  }\n  result = __unorddf2(exponent_1,exponent_2,exponent_1,exponent_2);\n  if (result != 0) {\n    return power;\n  }\n  result = __unorddf2(base1,base2,base1,base2);\n  base1_copy = base1;\n  base2_copy = base2;\n  exponent_1_copy = exponent_1;\n  exponent_2_copy = exponent_2;\n  if (result == 0) {\n    result = __aeabi_dcmpeq(base1,base2,0,0);\n    if (result != 0) {\n      result = __aeabi_dcmpeq(exponent_1,exponent_2,0,0);\n      if (result != 0) {\n        flag = 1;\n        error_msg = &DAT_080073b1;\n        return_value = 0;\n        error_code = 0;\n        if (flag != '\\0') {\n          return_value = 0x3ff0000000000000;\n          goto LAB_080059d0;\n        }\n        goto LAB_08005978;\n      }\n      result = finite(exponent_1,exponent_2);\n      if (result == 0) {\n        return power;\n      }\n      result = __aeabi_dcmplt(exponent_1,exponent_2,0,0);\n      if (result == 0) {\n        return power;\n      }\n      flag = 1;\n      error_msg = &DAT_080073b1;\n      error_code = 0;\n      if (DAT_20000224 == '\\0') goto LAB_08005a22;\n      return_value = 0xfff0000000000000;\n      error_code = 0;\n      flag = DAT_20000224;\nLAB_08005a32:\n      if (flag != '\\x02') goto LAB_08005978;\n      goto LAB_08005a34;\n    }\n    result = finite(result_lower,result_upper);\n    if (((result != 0) || (finite_result = finite(base1,base2), finite_result == 0)) ||\n       (finite_result = finite(exponent_1,exponent_2), finite_result == 0)) {\n      result = __aeabi_dcmpeq(result_lower,result_upper,0,0);\n      if (result == 0) {\n        return power;\n      }\n      result = finite(base1,base2);\n      if (result == 0) {\n        return power;\n      }\n      result = finite(exponent_1,exponent_2);\n      if (result == 0) {\n        return power;\n      }\n      flag = 4;\n      error_msg = &DAT_080073b1;\n      error_code = 0;\n      return_value._0_4_ = 0;\n      return_value._4_4_ = 0;\n      goto LAB_08005afa;\n    }\n    error_code = __unorddf2(result_lower,result_upper);\n    flag = DAT_20000224;\n    if (error_code != 0) {\n      error_msg = &DAT_080073b1;\n      flag = 1;\n      error_code = result;\n      if (DAT_20000224 != '\\0') {\n        return_value = __divdf3(0,0,0,0);\n        goto LAB_08005a32;\n      }\nLAB_08005a22:\n      error_msg = &DAT_080073b1;\n      flag = 1;\n      return_value = 0;\n      goto LAB_08005978;\n    }\n    error_msg = &DAT_080073b1;\n    flag = 3;\n    if (DAT_20000224 == '\\0') {\n      return_value._0_4_ = 0xe0000000;\n      return_value._4_4_ = 0x47efffff;\n      result = __aeabi_dcmplt(base1,base2,0,0);\n      if (result != 0) {\n        power = __muldf3(exponent_1,exponent_2,0,0x3fe00000);\n        rint_result = rint();\n        result = __aeabi_dcmpeq((int)power,(int)((ulonglong)power >> 0x20),(int)rint_result,\n                               (int)((ulonglong)rint_result >> 0x20));\n        if (result == 0) {\n          return_value._0_4_ = 0xe0000000;\n          return_value._4_4_ = 0xc7efffff;\n        }\n        goto LAB_08005afa;\n      }\nLAB_08005b98:\n      result = matherr(&flag);\n      if (result != 0) goto LAB_080059d0;\n    }\n    else {\n      return_value._0_4_ = 0;\n      return_value._4_4_ = 0x7ff00000;\n      result = __aeabi_dcmplt(base1,base2,0,0);\n      if (result != 0) {\n        power = __muldf3(exponent_1,exponent_2,0,0x3fe00000);\n        rint_result = rint();\n        result = __aeabi_dcmpeq((int)power,(int)((ulonglong)power >> 0x20),(int)rint_result,\n                               (int)((ulonglong)rint_result >> 0x20));\n        if (result == 0) {\n          return_value._0_4_ = 0;\n          return_value._4_4_ = 0xfff00000;\n        }\n      }\nLAB_08005afa:\n      if (DAT_20000224 != '\\x02') goto LAB_08005b98;\n    }\n    errno_ptr = (undefined4 *)__errno();\n    result_lower = 0x22;\n  }\n  else {\n    result = __aeabi_dcmpeq(exponent_1,exponent_2,0,0);\n    if (result == 0) {\n      return power;\n    }\n    flag = 1;\n    error_msg = &DAT_080073b1;\n    return_value = 0x3ff0000000000000;\n    error_code = 0;\n    if (flag == '\\x02') {\n      return 0x3ff0000000000000;\n    }\nLAB_08005978:\n    result = matherr(&flag);\n    if (result != 0) goto LAB_080059d0;\nLAB_08005a34:\n    errno_ptr = (undefined4 *)__errno();\n    result_lower = 0x21;\n  }\n  *errno_ptr = result_lower;\nLAB_080059d0:\n  if (error_code != 0) {\n    errno_ptr = (int *)__errno();\n    *errno_ptr = error_code;\n  }\n  return return_value;\n}\n\n",
            "current_name": "calculate_power_08005900",
            "entrypoint": "0x08005900",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005900": "calculate_power_08005900",
                "cVar1": "flag",
                "iVar2": "result",
                "iVar5": "finite_result",
                "local_30": "error_code",
                "local_38": "return_value",
                "local_40": "exponent_1_copy",
                "local_48": "base1_copy",
                "local_4c": "error_msg",
                "local_50": "flag",
                "param_1": "base1",
                "param_2": "base2",
                "param_3": "exponent_1",
                "param_4": "exponent_2",
                "piVar3": "errno_ptr",
                "puVar4": "errno_ptr",
                "uStack_3c": "exponent_2_copy",
                "uStack_44": "base2_copy",
                "uVar6": "result_upper",
                "uVar7": "result_lower",
                "uVar8": "power",
                "uVar9": "rint_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005bc8": {
            "additional_data": {
                "DAT_080073b5": {
                    "constant_value_2": 1,
                    "error_msg": 1
                },
                "DAT_20000224": {
                    "constant_value": 2,
                    "some_constant": 1,
                    "status_constant": 1,
                    "toggle_decimal": 1
                },
                "FUN_08000724": {
                    "perform_another_operation": 1,
                    "perform_complex_operation": 1,
                    "perform_error_handling": 1
                },
                "FUN_080009b4": {
                    "check_condition": 2,
                    "check_flag": 1
                },
                "FUN_08000a04": {
                    "perform_operation": 2,
                    "process_input": 1
                },
                "FUN_08005bc8": {
                    "calculate_division": 1,
                    "calculate_result": 2,
                    "calculate_sqrt": 4,
                    "calculate_square_root": 24
                },
                "FUN_08006c0c": {
                    "calculate": 1,
                    "calculate_sqrt_sub_function": 1,
                    "perform_division": 1
                },
                "FUN_0800709e": {
                    "get_constant": 1,
                    "get_random_number": 1,
                    "initialize_flag": 1
                },
                "FUN_080072ac": {
                    "set_errno": 1,
                    "set_error": 1,
                    "set_error_code": 1
                },
                "__aeabi_dcmplt": {
                    "check_if_less_than": 1,
                    "check_less_than": 1,
                    "compare_absolute_values": 1,
                    "compare_less_than": 1
                },
                "__divdf3": {
                    "calculate_division": 2,
                    "divide": 1,
                    "perform_division": 1
                },
                "__errno": {
                    "get_error_number": 2
                },
                "__ieee754_sqrt": {
                    "calculate_sqrt": 2,
                    "calculate_square_root": 1
                },
                "__unorddf2": {
                    "check_not_nan": 1,
                    "check_unordered": 1,
                    "compare_numbers": 1,
                    "compare_values": 1
                },
                "cVar1": {
                    "character_var1": 1,
                    "check_flag": 1,
                    "condition": 1,
                    "constant": 1,
                    "constant_flag": 1,
                    "constant_value": 2,
                    "constant_variable": 1,
                    "control_flag": 1,
                    "data": 1,
                    "data_flag": 1,
                    "error_flag": 1,
                    "flag": 8,
                    "flag_2": 1,
                    "flag_variable": 1,
                    "math_err_type": 1,
                    "math_error_flag": 1,
                    "status": 3
                },
                "iVar2": {
                    "check_result": 1,
                    "comparison": 2,
                    "comparison_flag": 3,
                    "comparison_result": 9,
                    "comparison_result_2": 2,
                    "comparison_value": 1,
                    "integer_var2": 1,
                    "is_less_than": 2
                },
                "local_30": {
                    "compare_result": 1,
                    "comparison_err": 1,
                    "comparison_error": 3,
                    "comparison_result": 11,
                    "error": 2,
                    "error_code": 8,
                    "error_flag": 1,
                    "error_value": 1,
                    "local_variable8": 1,
                    "unordered_result": 1
                },
                "local_38": {
                    "dividend": 2,
                    "error": 1,
                    "error_code": 1,
                    "error_result": 1,
                    "final_result": 5,
                    "local_variable7": 1,
                    "math_err": 1,
                    "math_error": 1,
                    "math_error_result": 2,
                    "math_result": 1,
                    "matherr_result": 1,
                    "output": 3,
                    "output_result": 1,
                    "result": 2,
                    "result_copy": 1,
                    "result_value": 1,
                    "return_value": 3,
                    "square_root_result": 1,
                    "temporary_result": 1
                },
                "local_40": {
                    "duplicate_argument_1": 1,
                    "input_1_copy2": 1,
                    "input_1_copy_2": 3,
                    "local_numerator2": 1,
                    "local_value_3": 1,
                    "local_var_5": 1,
                    "local_variable5": 1,
                    "local_variable_5": 2,
                    "num1_copy": 1,
                    "num_3": 1,
                    "numerator_copy2": 1,
                    "param_1_copy2": 1,
                    "param_1_copy_2": 1,
                    "temp1": 1,
                    "temp3": 1,
                    "temp_1": 1,
                    "temp_3": 1,
                    "temp_input3": 1,
                    "temp_input_1": 2,
                    "temp_number3": 1,
                    "temp_param_3": 1,
                    "value1_copy2": 2,
                    "value1_copy_2": 1,
                    "value_4": 1,
                    "variable5": 1
                },
                "local_48": {
                    "argument_1": 1,
                    "copy_input_1": 1,
                    "input_1_copy": 4,
                    "local_numerator": 1,
                    "local_value_1": 1,
                    "local_var_3": 1,
                    "local_variable3": 1,
                    "local_variable_3": 2,
                    "num1_copy": 1,
                    "num_1": 1,
                    "numerator_copy": 1,
                    "param_1_copy": 1,
                    "param_1_copy_1": 1,
                    "temp1": 1,
                    "temp_1": 1,
                    "temp_input1": 1,
                    "temp_input_1": 1,
                    "temp_number1": 1,
                    "temp_param_1": 1,
                    "value1_copy": 4,
                    "value_1": 1,
                    "value_2": 1,
                    "variable3": 1
                },
                "local_4c": {
                    "divisor": 1,
                    "error_message": 3,
                    "flag_address": 1,
                    "flag_pointer": 1,
                    "flag_ptr": 1,
                    "local_string": 1,
                    "local_var_2": 1,
                    "local_variable2": 1,
                    "local_variable_2": 2,
                    "math_err_msg": 1,
                    "matherr_argument_2": 1,
                    "message": 6,
                    "message_ptr": 1,
                    "message_string": 1,
                    "pointer": 2,
                    "ptr": 1,
                    "status_message": 1,
                    "str_ptr": 1,
                    "string_ptr": 2,
                    "variable2": 1
                },
                "local_50": {
                    "dividend": 1,
                    "error_code": 2,
                    "flag": 10,
                    "flag_1": 1,
                    "flag_value": 1,
                    "flag_variable": 1,
                    "local_value": 1,
                    "local_var_1": 1,
                    "local_variable1": 1,
                    "local_variable_1": 2,
                    "math_error": 1,
                    "matherr_argument_1": 1,
                    "result": 2,
                    "status": 1,
                    "status_flag": 2,
                    "value_1": 1,
                    "variable1": 1
                },
                "matherr": {
                    "handle_math_error": 4
                },
                "param_1": {
                    "input1": 1,
                    "input_1": 13,
                    "input_a": 1,
                    "input_param_1": 2,
                    "input_value_1": 2,
                    "num1": 3,
                    "number1": 1,
                    "numerator": 2,
                    "value1": 4,
                    "value_1": 1
                },
                "param_2": {
                    "denominator": 2,
                    "input2": 1,
                    "input_2": 13,
                    "input_b": 1,
                    "input_param_2": 2,
                    "input_value_2": 2,
                    "num2": 3,
                    "number2": 1,
                    "value2": 4,
                    "value_2": 1
                },
                "piVar3": {
                    "errno_pointer": 1,
                    "errno_ptr": 7,
                    "errno_ptr2": 1,
                    "errno_value": 1,
                    "error_code_ptr": 1,
                    "error_pointer": 3,
                    "error_ptr": 5,
                    "pointer_var3": 1
                },
                "puVar4": {
                    "errno_pointer": 4,
                    "errno_ptr": 8,
                    "errno_result": 1,
                    "errno_val": 1,
                    "errno_value": 1,
                    "errno_value_ptr": 1,
                    "error_num": 1,
                    "matherr_ptr": 1,
                    "matherr_result_ptr": 2,
                    "pointer_var4": 1
                },
                "uStack_3c": {
                    "denominator_copy2": 1,
                    "duplicate_argument_2": 1,
                    "input_2_copy2": 1,
                    "input_2_copy_2": 3,
                    "local_denominator2": 1,
                    "local_value_4": 1,
                    "local_var_6": 1,
                    "local_variable6": 1,
                    "local_variable_6": 2,
                    "num_4": 1,
                    "param_2_copy2": 1,
                    "param_2_copy_2": 1,
                    "temp2": 1,
                    "temp4": 1,
                    "temp_2": 1,
                    "temp_4": 1,
                    "temp_input4": 1,
                    "temp_input_2": 2,
                    "temp_number4": 1,
                    "temp_param_4": 1,
                    "value2_copy2": 2,
                    "value2_copy_2": 1,
                    "value_5": 1,
                    "variable6": 1
                },
                "uStack_44": {
                    "argument_2": 1,
                    "copy_input_2": 1,
                    "denominator_copy": 1,
                    "input_2_copy": 4,
                    "local_denominator": 1,
                    "local_value_2": 1,
                    "local_var_4": 1,
                    "local_variable4": 1,
                    "local_variable_4": 2,
                    "num_2": 1,
                    "param_2_copy": 1,
                    "param_2_copy_1": 1,
                    "temp2": 1,
                    "temp_2": 1,
                    "temp_input2": 1,
                    "temp_input_2": 1,
                    "temp_number2": 1,
                    "temp_param_2": 1,
                    "value2_copy": 4,
                    "value_2": 1,
                    "value_3": 1,
                    "variable4": 1
                },
                "uVar5": {
                    "result": 25,
                    "sqrt_result": 1
                }
            },
            "called": [
                "FUN_0800709e",
                "FUN_080009b4",
                "FUN_08000a04",
                "FUN_08006c0c",
                "FUN_080072ac",
                "FUN_08000724"
            ],
            "calling": [
                "FUN_08003330"
            ],
            "code": "\nundefined8 calculate_square_root_08005bc8(undefined4 input_1,undefined4 input_2)\n\n{\n  char flag;\n  int comparison_result;\n  int *errno_ptr;\n  undefined4 *errno_ptr;\n  undefined8 result;\n  undefined4 flag;\n  undefined *message;\n  undefined4 input_1_copy;\n  undefined4 input_2_copy;\n  undefined4 input_1_copy_2;\n  undefined4 input_2_copy_2;\n  undefined8 final_result;\n  int comparison_result;\n  \n  result = calculate_sqrt();\n  flag = DAT_20000224;\n  if (DAT_20000224 == -1) {\n    return result;\n  }\n  comparison_result = compare_values(input_1,input_2,input_1,input_2);\n  if (comparison_result != 0) {\n    return result;\n  }\n  comparison_result = compare_absolute_values(input_1,input_2,0,0);\n  if (comparison_result == 0) {\n    return result;\n  }\n  flag = 1;\n  message = &DAT_080073b5;\n  input_1_copy = input_1;\n  input_2_copy = input_2;\n  input_1_copy_2 = input_1;\n  input_2_copy_2 = input_2;\n  if (flag == '\\0') {\n    final_result = 0;\nLAB_08005c26:\n    comparison_result = handle_math_error(&flag);\n    if (comparison_result != 0) goto LAB_08005c2e;\n  }\n  else {\n    final_result = calculate_division(0,0,0,0);\n    if (flag != '\\x02') goto LAB_08005c26;\n  }\n  errno_ptr = (undefined4 *)get_error_number();\n  *errno_ptr = 0x21;\nLAB_08005c2e:\n  if (comparison_result != 0) {\n    errno_ptr = (int *)get_error_number();\n    *errno_ptr = comparison_result;\n  }\n  return final_result;\n}\n\n",
            "current_name": "calculate_square_root_08005bc8",
            "entrypoint": "0x08005bc8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005bc8": "calculate_square_root_08005bc8",
                "__aeabi_dcmplt": "compare_absolute_values",
                "__divdf3": "calculate_division",
                "__errno": "get_error_number",
                "__ieee754_sqrt": "calculate_sqrt",
                "__unorddf2": "compare_values",
                "cVar1": "flag",
                "iVar2": "comparison_result",
                "local_30": "comparison_result",
                "local_38": "final_result",
                "local_40": "input_1_copy_2",
                "local_48": "input_1_copy",
                "local_4c": "message",
                "local_50": "flag",
                "matherr": "handle_math_error",
                "param_1": "input_1",
                "param_2": "input_2",
                "piVar3": "errno_ptr",
                "puVar4": "errno_ptr",
                "uStack_3c": "input_2_copy_2",
                "uStack_44": "input_2_copy",
                "uVar5": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005c70": {
            "additional_data": {
                "FUNC_0800708c": {
                    "function1": 1
                },
                "FUN_08000168": {
                    "function2": 1
                },
                "FUN_0800016c": {
                    "function4": 1
                },
                "FUN_080004d0": {
                    "function3": 1
                },
                "FUN_08000724": {
                    "function6": 1
                },
                "FUN_080009f0": {
                    "function7": 1
                },
                "FUN_08005c70": {
                    "calculate": 3,
                    "calculate_floating_point_value": 1,
                    "calculate_function": 4,
                    "calculate_inverse_square_root": 1,
                    "calculate_polynomial": 2,
                    "calculate_polynomial_approximation": 1,
                    "calculate_power": 2,
                    "calculate_result": 5,
                    "calculate_something": 1,
                    "calculate_sqrt": 1,
                    "calculate_sqrt_division": 1,
                    "calculate_square_root": 8
                },
                "FUN_08006c0c": {
                    "function5": 1
                },
                "__aeabi_dadd": {
                    "add": 1,
                    "floating_point_add": 1
                },
                "__aeabi_dcmpgt": {
                    "greater_than": 1
                },
                "__divdf3": {
                    "divide": 1,
                    "floating_point_divide": 1
                },
                "__ieee754_sqrt": {
                    "square_root": 2
                },
                "__muldf3": {
                    "multiply": 1,
                    "multiply_floats": 1
                },
                "__subdf3": {
                    "floating_point_subtract": 1,
                    "subtract": 1
                },
                "fabs": {
                    "absolute_value": 2
                },
                "iVar1": {
                    "compare_result": 1,
                    "comparison": 4,
                    "comparison_result": 21,
                    "i_var": 1,
                    "temp_var_12": 1
                },
                "iVar2": {
                    "comparison": 1,
                    "comparison_result": 1
                },
                "param_1": {
                    "a": 1,
                    "base": 2,
                    "input1": 15,
                    "input_1": 7,
                    "input_param1": 1,
                    "input_value_1": 1,
                    "integer_part": 1,
                    "numerator": 1,
                    "x": 2
                },
                "param_2": {
                    "b": 1,
                    "denominator": 1,
                    "exponent": 2,
                    "fractional_part": 1,
                    "input2": 15,
                    "input_2": 7,
                    "input_param2": 1,
                    "input_value_2": 1,
                    "y": 2
                },
                "uVar1": {
                    "input2_copy": 1,
                    "result": 4,
                    "temp1": 1,
                    "temp_var1": 1,
                    "temp_var_1": 2
                },
                "uVar10": {
                    "intermediate_result2": 1,
                    "output2": 1,
                    "result2": 2,
                    "result_2": 3,
                    "result_var2": 1,
                    "temp1": 1,
                    "temp3": 1,
                    "temp6": 2,
                    "temp7": 4,
                    "temp8": 1,
                    "temp9": 2,
                    "temp_8": 1,
                    "temp_result1": 4,
                    "temp_result_1": 1,
                    "temp_var10": 2,
                    "temp_var_10": 3
                },
                "uVar11": {
                    "intermediate_result3": 1,
                    "output3": 1,
                    "result3": 2,
                    "result_3": 3,
                    "result_var3": 1,
                    "temp10": 2,
                    "temp2": 1,
                    "temp4": 1,
                    "temp7": 2,
                    "temp8": 4,
                    "temp9": 1,
                    "temp_9": 1,
                    "temp_result2": 4,
                    "temp_result_2": 1,
                    "temp_var11": 2,
                    "temp_var_11": 3
                },
                "uVar12": {
                    "div_var1": 1,
                    "temp11": 1,
                    "temp8": 1
                },
                "uVar13": {
                    "div_var2": 1,
                    "temp12": 1
                },
                "uVar14": {
                    "mul_var1": 1,
                    "temp13": 1
                },
                "uVar15": {
                    "mul_var2": 1,
                    "temp14": 1
                },
                "uVar16": {
                    "mul_var3": 1,
                    "temp15": 1
                },
                "uVar17": {
                    "mul_var4": 1,
                    "temp16": 1
                },
                "uVar18": {
                    "mul_var5": 1,
                    "temp17": 1
                },
                "uVar19": {
                    "mul_var6": 1,
                    "temp18": 1
                },
                "uVar2": {
                    "mul_result1": 1,
                    "result1": 2,
                    "temp1": 9,
                    "temp2": 1,
                    "temp3": 1,
                    "temp_1": 3,
                    "temp_value1": 1,
                    "temp_var1": 1,
                    "temp_var2": 3,
                    "temp_var_1": 1,
                    "temp_var_2": 4,
                    "var1": 1
                },
                "uVar20": {
                    "mul_var7": 1,
                    "temp19": 1
                },
                "uVar21": {
                    "mul_var8": 1,
                    "temp20": 1
                },
                "uVar22": {
                    "mul_var9": 1,
                    "temp21": 1
                },
                "uVar23": {
                    "mul_var10": 1,
                    "temp22": 1
                },
                "uVar24": {
                    "mul_var11": 1,
                    "temp23": 1
                },
                "uVar25": {
                    "mul_var12": 1
                },
                "uVar26": {
                    "mul_var13": 1
                },
                "uVar27": {
                    "mul_var14": 1
                },
                "uVar28": {
                    "sqrt_var1": 1
                },
                "uVar29": {
                    "sqrt_var2": 1
                },
                "uVar3": {
                    "abs_result1": 1,
                    "mul_result2": 1,
                    "result2": 1,
                    "temp1": 2,
                    "temp2": 9,
                    "temp3": 1,
                    "temp4": 1,
                    "temp_2": 3,
                    "temp_value2": 1,
                    "temp_var2": 1,
                    "temp_var3": 3,
                    "temp_var_2": 1,
                    "temp_var_3": 4,
                    "var2": 1
                },
                "uVar30": {
                    "sqrt_var3": 1
                },
                "uVar31": {
                    "sqrt_var4": 1
                },
                "uVar32": {
                    "sqrt_var5": 1
                },
                "uVar33": {
                    "sqrt_var6": 1
                },
                "uVar34": {
                    "sqrt_var7": 1
                },
                "uVar35": {
                    "sqrt_var8": 1
                },
                "uVar36": {
                    "sqrt_var9": 1
                },
                "uVar37": {
                    "sqrt_var10": 1
                },
                "uVar38": {
                    "sqrt_var11": 1
                },
                "uVar39": {
                    "sqrt_var12": 1
                },
                "uVar4": {
                    "abs_result2": 1,
                    "mul_result3": 1,
                    "result3": 1,
                    "temp2": 2,
                    "temp3": 9,
                    "temp4": 1,
                    "temp5": 1,
                    "temp_3": 3,
                    "temp_value3": 1,
                    "temp_var3": 1,
                    "temp_var4": 3,
                    "temp_var_3": 1,
                    "temp_var_4": 4,
                    "var3": 1
                },
                "uVar40": {
                    "sqrt_var13": 1
                },
                "uVar41": {
                    "sqrt_var14": 1
                },
                "uVar42": {
                    "sqrt_var15": 1
                },
                "uVar43": {
                    "sqrt_var16": 1
                },
                "uVar44": {
                    "sqrt_var17": 1
                },
                "uVar45": {
                    "sqrt_var18": 1
                },
                "uVar46": {
                    "sqrt_var19": 1
                },
                "uVar47": {
                    "sqrt_var20": 1
                },
                "uVar48": {
                    "sqrt_var21": 1
                },
                "uVar49": {
                    "sqrt_var22": 1
                },
                "uVar5": {
                    "mul_result4": 1,
                    "result4": 1,
                    "temp1": 1,
                    "temp3": 2,
                    "temp4": 9,
                    "temp5": 1,
                    "temp6": 1,
                    "temp_4": 3,
                    "temp_value4": 1,
                    "temp_var4": 1,
                    "temp_var5": 3,
                    "temp_var_4": 1,
                    "temp_var_5": 4,
                    "var4": 1
                },
                "uVar50": {
                    "sqrt_var23": 1
                },
                "uVar51": {
                    "sqrt_var24": 1
                },
                "uVar52": {
                    "sqrt_var25": 1
                },
                "uVar53": {
                    "sqrt_var26": 1
                },
                "uVar6": {
                    "mul_var1": 1,
                    "result5": 1,
                    "temp1": 1,
                    "temp2": 1,
                    "temp4": 2,
                    "temp5": 9,
                    "temp6": 1,
                    "temp7": 1,
                    "temp_5": 3,
                    "temp_value5": 1,
                    "temp_var6": 3,
                    "temp_var_5": 1,
                    "temp_var_6": 4,
                    "var5": 1
                },
                "uVar7": {
                    "mul_var2": 1,
                    "result6": 1,
                    "temp2": 1,
                    "temp3": 1,
                    "temp5": 2,
                    "temp6": 9,
                    "temp7": 1,
                    "temp8": 1,
                    "temp_6": 3,
                    "temp_value6": 1,
                    "temp_var7": 3,
                    "temp_var_6": 1,
                    "temp_var_7": 4,
                    "var6": 1
                },
                "uVar8": {
                    "abs_input2": 2,
                    "abs_value": 1,
                    "absolute_b": 1,
                    "exponent_masked": 1,
                    "fractional_part_mask": 1,
                    "input_2_masked": 1,
                    "mask": 2,
                    "masked_input2": 1,
                    "masked_input_2": 1,
                    "modified_input2": 1,
                    "positive_value_2": 1,
                    "temp": 1,
                    "temp4": 1,
                    "temp6": 1,
                    "temp7": 3,
                    "temp8": 1,
                    "temp_7": 2,
                    "temp_input2": 1,
                    "temp_var8": 2,
                    "temp_var_8": 2,
                    "unsigned_input2": 2,
                    "updated_param2": 1
                },
                "uVar9": {
                    "final_result": 1,
                    "intermediate_result": 1,
                    "output": 1,
                    "output1": 1,
                    "result": 16,
                    "result1": 2,
                    "result_1": 3,
                    "result_var1": 1,
                    "temp5": 1,
                    "temp8": 1,
                    "temp_var9": 1,
                    "temp_var_9": 1
                }
            },
            "called": [
                "FUN_0800708c",
                "FUN_08000168",
                "FUN_080004d0",
                "FUN_0800016c",
                "FUN_08006c0c",
                "FUN_08000724",
                "FUN_080009f0"
            ],
            "calling": [
                "FUN_08005854"
            ],
            "code": "\nundefined8 calculate_inverse_square_root_08005c70(uint input1,uint input2)\n\n{\n  int comparison_result;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  undefined4 temp5;\n  undefined4 temp6;\n  uint temp7;\n  undefined8 result;\n  undefined8 temp_result1;\n  undefined8 temp_result2;\n  \n  result = CONCAT44(input2,input1);\n  temp7 = input2 & 0x7fffffff;\n  if (temp7 < 0x3ff00000) {\n    if (temp7 < 0x3fe00000) {\n      if (0x3e3fffff < temp7) {\n        temp_result1 = multiply(input1,input2,input1,input2);\n        temp6 = (undefined4)((ulonglong)temp_result1 >> 0x20);\n        temp5 = (undefined4)temp_result1;\n        temp_result1 = multiply(temp5,temp6,0xdfdf709,0x3f023de1);\n        temp_result1 = floating_point_add((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),0x7501b288,0x3f49efe0);\n        temp_result1 = multiply((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),temp5,temp6);\n        temp_result1 = floating_point_subtract((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),0xb5688f3b,0x3fa48228);\n        temp_result1 = multiply((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),temp5,temp6);\n        temp_result1 = floating_point_add((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),0xe884455,0x3fc9c155);\n        temp_result1 = multiply((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),temp5,temp6);\n        temp_result1 = floating_point_subtract((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),0x3eb6f7d,0x3fd4d612);\n        temp_result1 = multiply((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),temp5,temp6);\n        temp_result1 = floating_point_add((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),0x55555555,0x3fc55555);\n        temp_result1 = multiply((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),temp5,temp6);\n        temp_result2 = multiply(temp5,temp6,0xb12e9282,0x3fb3b8c5);\n        temp_result2 = floating_point_subtract((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),0x1b8d0159,0x3fe6066c);\n        temp_result2 = multiply((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),temp5,temp6);\n        temp_result2 = floating_point_add((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),0x9c598ac8,0x40002ae5);\n        temp_result2 = multiply((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),temp5,temp6);\n        temp_result2 = floating_point_subtract((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),0x1c8a2d4b,0x40033a27);\n        temp_result2 = multiply((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),temp5,temp6);\n        temp_result2 = floating_point_add((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),0,0x3ff00000);\n        temp_result1 = floating_point_divide((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),(int)temp_result2,\n                          (int)((ulonglong)temp_result2 >> 0x20));\n        temp_result1 = multiply((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),input1,input2);\n        goto LAB_08005cba;\n      }\n      temp_result1 = floating_point_add(input1,input2,0x8800759c,0x7e37e43c);\n      comparison_result = greater_than((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),0,0x3ff00000);\n      if (comparison_result != 0) {\n        return result;\n      }\n    }\n    result = absolute_value(input1,input2);\n    result = floating_point_subtract(0,0x3ff00000,(int)result,(int)((ulonglong)result >> 0x20));\n    result = multiply((int)result,(int)((ulonglong)result >> 0x20),0,0x3fe00000);\n    temp1 = (undefined4)((ulonglong)result >> 0x20);\n    temp5 = (undefined4)result;\n    result = multiply(temp5,temp1,0xdfdf709,0x3f023de1);\n    result = floating_point_add((int)result,(int)((ulonglong)result >> 0x20),0x7501b288,0x3f49efe0);\n    result = multiply((int)result,(int)((ulonglong)result >> 0x20),temp5,temp1);\n    result = floating_point_subtract((int)result,(int)((ulonglong)result >> 0x20),0xb5688f3b,0x3fa48228);\n    result = multiply((int)result,(int)((ulonglong)result >> 0x20),temp5,temp1);\n    result = floating_point_add((int)result,(int)((ulonglong)result >> 0x20),0xe884455,0x3fc9c155);\n    result = multiply((int)result,(int)((ulonglong)result >> 0x20),temp5,temp1);\n    result = floating_point_subtract((int)result,(int)((ulonglong)result >> 0x20),0x3eb6f7d,0x3fd4d612);\n    result = multiply((int)result,(int)((ulonglong)result >> 0x20),temp5,temp1);\n    result = floating_point_add((int)result,(int)((ulonglong)result >> 0x20),0x55555555,0x3fc55555);\n    result = multiply((int)result,(int)((ulonglong)result >> 0x20),temp5,temp1);\n    temp2 = (undefined4)((ulonglong)result >> 0x20);\n    temp_result1 = multiply(temp5,temp1,0xb12e9282,0x3fb3b8c5);\n    temp_result1 = floating_point_subtract((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),0x1b8d0159,0x3fe6066c);\n    temp_result1 = multiply((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),temp5,temp1);\n    temp_result1 = floating_point_add((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),0x9c598ac8,0x40002ae5);\n    temp_result1 = multiply((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),temp5,temp1);\n    temp_result1 = floating_point_subtract((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),0x1c8a2d4b,0x40033a27);\n    temp_result1 = multiply((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),temp5,temp1);\n    temp_result1 = floating_point_add((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),0,0x3ff00000);\n    temp3 = (undefined4)((ulonglong)temp_result1 >> 0x20);\n    temp_result2 = square_root(temp5,temp1);\n    temp4 = (undefined4)((ulonglong)temp_result2 >> 0x20);\n    temp6 = (undefined4)temp_result2;\n    if (temp7 < 0x3fef3333) {\n      result = floating_point_divide((int)result,temp2,(int)temp_result1,temp3);\n      temp_result1 = floating_point_add(temp6,temp4,temp6,temp4);\n      result = multiply((int)result,(int)((ulonglong)result >> 0x20),(int)temp_result1,\n                       (int)((ulonglong)temp_result1 >> 0x20));\n      temp_result1 = multiply(0,temp4,0,temp4);\n      temp_result1 = floating_point_subtract(temp5,temp1,(int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20));\n      temp_result2 = floating_point_add(temp6,temp4,0,temp4);\n      temp_result1 = floating_point_divide((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),(int)temp_result2,\n                        (int)((ulonglong)temp_result2 >> 0x20));\n      temp5 = (undefined4)((ulonglong)temp_result1 >> 0x20);\n      temp_result1 = floating_point_add((int)temp_result1,temp5,(int)temp_result1,temp5);\n      temp_result1 = floating_point_subtract(0x33145c07,0x3c91a626,(int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20));\n      result = floating_point_subtract((int)result,(int)((ulonglong)result >> 0x20),(int)temp_result1,\n                       (int)((ulonglong)temp_result1 >> 0x20));\n      temp_result1 = floating_point_add(0,temp4,0,temp4);\n      temp_result1 = floating_point_subtract(0x54442d18,0x3fe921fb,(int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20));\n      result = floating_point_subtract((int)result,(int)((ulonglong)result >> 0x20),(int)temp_result1,\n                       (int)((ulonglong)temp_result1 >> 0x20));\n      temp5 = 0x3fe921fb;\n    }\n    else {\n      result = floating_point_divide((int)result,temp2,(int)temp_result1,temp3);\n      result = multiply((int)result,(int)((ulonglong)result >> 0x20),temp6,temp4);\n      result = floating_point_add((int)result,(int)((ulonglong)result >> 0x20),temp6,temp4);\n      temp5 = (undefined4)((ulonglong)result >> 0x20);\n      result = floating_point_add((int)result,temp5,(int)result,temp5);\n      result = floating_point_subtract((int)result,(int)((ulonglong)result >> 0x20),0x33145c07,0x3c91a626);\n      temp5 = 0x3ff921fb;\n    }\n    result = floating_point_subtract(0x54442d18,temp5,(int)result,(int)((ulonglong)result >> 0x20));\n    if ((int)input2 < 1) {\n      result = CONCAT44((int)((ulonglong)result >> 0x20) + -0x80000000,(int)result);\n    }\n  }\n  else {\n    if ((temp7 + 0xc0100000 | input1) != 0) {\n      result = floating_point_subtract(input1,input2,input1,input2);\n      temp5 = (undefined4)((ulonglong)result >> 0x20);\n      result = floating_point_divide((int)result,temp5,(int)result,temp5);\n      return result;\n    }\n    result = multiply(input1,input2,0x54442d18,0x3ff921fb);\n    temp_result1 = multiply(input1,input2,0x33145c07,0x3c91a626);\nLAB_08005cba:\n    result = floating_point_add((int)result,(int)((ulonglong)result >> 0x20),(int)temp_result1,\n                         (int)((ulonglong)temp_result1 >> 0x20));\n  }\n  return result;\n}\n\n",
            "current_name": "calculate_inverse_square_root_08005c70",
            "entrypoint": "0x08005c70",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005c70": "calculate_inverse_square_root_08005c70",
                "__aeabi_dadd": "floating_point_add",
                "__aeabi_dcmpgt": "greater_than",
                "__divdf3": "floating_point_divide",
                "__ieee754_sqrt": "square_root",
                "__muldf3": "multiply",
                "__subdf3": "floating_point_subtract",
                "fabs": "absolute_value",
                "iVar1": "comparison_result",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "result",
                "uVar10": "temp_result1",
                "uVar11": "temp_result2",
                "uVar2": "temp1",
                "uVar3": "temp2",
                "uVar4": "temp3",
                "uVar5": "temp4",
                "uVar6": "temp5",
                "uVar7": "temp6",
                "uVar8": "temp7",
                "uVar9": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006070": {
            "additional_data": {
                "FUN_08006070": {
                    "calculate": 2,
                    "calculate_arctan": 1,
                    "calculate_atan": 1,
                    "calculate_new_value": 1,
                    "calculate_result": 16,
                    "calculate_trigonometric_value": 1,
                    "calculate_value": 5,
                    "perform_calculation": 1,
                    "resolve_function_result": 1
                },
                "iVar4": {
                    "condition": 1,
                    "difference": 3,
                    "result4": 13,
                    "result_4": 5,
                    "result_var4": 2,
                    "result_var_4": 1,
                    "subtract_result": 1,
                    "temp4": 1,
                    "temp_4": 2,
                    "temp_var3": 1,
                    "x_shifted": 1
                },
                "param_1": {
                    "a": 1,
                    "input1": 12,
                    "input_1": 8,
                    "input_param1": 2,
                    "num1": 2,
                    "value1": 3,
                    "value_1": 1,
                    "x": 2
                },
                "param_2": {
                    "b": 1,
                    "input2": 12,
                    "input_2": 8,
                    "input_param2": 2,
                    "num2": 2,
                    "value2": 3,
                    "value_2": 1,
                    "y": 2
                },
                "param_3": {
                    "c": 1,
                    "input3": 12,
                    "input_3": 8,
                    "input_param3": 2,
                    "num3": 2,
                    "value3": 3,
                    "value_3": 1,
                    "z": 2
                },
                "param_4": {
                    "d": 1,
                    "input4": 12,
                    "input_4": 8,
                    "input_param4": 2,
                    "num4": 2,
                    "value4": 3,
                    "value_4": 1,
                    "w": 2
                },
                "uVar1": {
                    "result": 2,
                    "result1": 14,
                    "result_1": 5,
                    "result_low": 1,
                    "result_lower": 1,
                    "result_var1": 2,
                    "result_var_1": 1,
                    "temp1": 1,
                    "temp_1": 2,
                    "temporary_var1": 1
                },
                "uVar2": {
                    "flag": 2,
                    "result2": 13,
                    "result_2": 5,
                    "result_var2": 2,
                    "result_var_2": 1,
                    "shift": 1,
                    "shift_value": 1,
                    "shifted_inputs": 1,
                    "shifted_params": 1,
                    "temp2": 1,
                    "temp_2": 2,
                    "temp_var1": 1
                },
                "uVar3": {
                    "input2_filtered": 1,
                    "masked_input2": 1,
                    "masked_param2": 1,
                    "param_2_unsigned": 1,
                    "result2": 1,
                    "result3": 13,
                    "result_3": 5,
                    "result_var3": 2,
                    "result_var_3": 1,
                    "temp3": 1,
                    "temp_3": 2,
                    "temp_var2": 1,
                    "y_abs": 1
                },
                "uVar5": {
                    "input4_filtered": 1,
                    "mask": 1,
                    "masked_input4": 1,
                    "masked_input_4": 1,
                    "masked_param4": 1,
                    "masked_param_4": 1,
                    "param_4_unsigned": 1,
                    "result5": 11,
                    "result_5": 4,
                    "result_var5": 2,
                    "result_var_5": 1,
                    "temp5": 1,
                    "temp_5": 2,
                    "temp_var4": 1,
                    "val1": 1,
                    "w_abs": 1
                },
                "uVar6": {
                    "final_result": 12,
                    "final_result_1": 1,
                    "output": 5,
                    "output1": 2,
                    "result": 6,
                    "result1": 1,
                    "result6": 1,
                    "result_var6": 1,
                    "return_value": 1
                },
                "uVar7": {
                    "additional_result": 2,
                    "final_result_2": 1,
                    "intermediate_result": 5,
                    "output2": 5,
                    "result2": 2,
                    "result7": 2,
                    "result_5": 1,
                    "result_6": 1,
                    "result_var7": 1,
                    "subtraction_result": 2,
                    "temp_6": 2,
                    "temp_result": 3,
                    "temp_var": 1,
                    "temp_var5": 1,
                    "val2": 1
                }
            },
            "called": [
                "FUN_0800708c",
                "FUN_08000168",
                "FUN_08006d68",
                "FUN_0800016c",
                "FUN_08000724"
            ],
            "calling": [
                "FUN_080058fc"
            ],
            "code": "\nundefined8 calculate_result_08006070(uint input1,uint input2,uint input3,uint input4)\n\n{\n  undefined4 result1;\n  uint result2;\n  uint result3;\n  int result4;\n  uint result5;\n  undefined8 final_result;\n  undefined8 intermediate_result;\n  \n  result5 = input4 & 0x7fffffff;\n  if ((0x7ff00000 < (result5 | (-input3 | input3) >> 0x1f)) ||\n     (result3 = input2 & 0x7fffffff, 0x7ff00000 < (result3 | (-input1 | input1) >> 0x1f))) {\n    final_result = __aeabi_dadd(input1,input2,input3,input4,input4);\n    return final_result;\n  }\n  if ((input4 + 0xc0100000 | input3) == 0) {\n    final_result = atan();\n    return final_result;\n  }\n  result2 = (int)input4 >> 0x1e & 2U | input2 >> 0x1f;\n  if ((input1 | result3) == 0) {\n    if (result2 == 2) {\n      return 0x400921fb54442d18;\n    }\n    if (result2 != 3) {\n      return CONCAT44(input2,input1);\n    }\nLAB_0800613e:\n    final_result = 0xc00921fb54442d18;\n  }\n  else {\n    if ((input3 | result5) != 0) {\n      if (result5 == 0x7ff00000) {\n        if (result3 == 0x7ff00000) {\n          if (result2 == 2) {\n            return 0x4002d97c7f3321d2;\n          }\n          if (result2 == 3) {\n            return 0xc002d97c7f3321d2;\n          }\n          if (result2 != 1) {\n            return 0x3fe921fb54442d18;\n          }\n          return 0xbfe921fb54442d18;\n        }\n        if (result2 == 2) {\n          return 0x400921fb54442d18;\n        }\n        if (result2 != 3) {\n          if (result2 != 1) {\n            return 0;\n          }\n          return 0x8000000000000000;\n        }\n        goto LAB_0800613e;\n      }\n      if (result3 != 0x7ff00000) {\n        result4 = (int)(result3 - result5) >> 0x14;\n        if (result4 < 0x3d) {\n          if (((int)input4 < 0) && (result4 + 0x3c < 0 != SCARRY4(result4,0x3c))) {\n            final_result = 0;\n          }\n          else {\n            __divdf3(input1,input2);\n            fabs();\n            final_result = atan();\n          }\n        }\n        else {\n          final_result = 0x3ff921fb54442d18;\n        }\n        result4 = (int)((ulonglong)final_result >> 0x20);\n        result1 = (undefined4)final_result;\n        if (result2 == 1) {\n          return CONCAT44(result4 + -0x80000000,result1);\n        }\n        if (result2 == 2) {\n          intermediate_result = __subdf3(result1,result4,0x33145c07,0x3ca1a626);\n          final_result = 0x400921fb54442d18;\n        }\n        else {\n          if (result2 == 0) {\n            return final_result;\n          }\n          final_result = __subdf3(result1,result4,0x33145c07,0x3ca1a626);\n          intermediate_result = 0x400921fb54442d18;\n        }\n        final_result = __subdf3((int)final_result,(int)((ulonglong)final_result >> 0x20),(int)intermediate_result,\n                         (int)((ulonglong)intermediate_result >> 0x20));\n        return final_result;\n      }\n    }\n    if ((int)input2 < 0) {\n      final_result = 0xbff921fb54442d18;\n    }\n    else {\n      final_result = 0x3ff921fb54442d18;\n    }\n  }\n  return final_result;\n}\n\n",
            "current_name": "calculate_result_08006070",
            "entrypoint": "0x08006070",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006070": "calculate_result_08006070",
                "iVar4": "result4",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3",
                "uVar5": "result5",
                "uVar6": "final_result",
                "uVar7": "intermediate_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006228": {
            "additional_data": {
                "DAT_080073c0": {
                    "data1": 1
                },
                "DAT_080073c4": {
                    "data2": 1
                },
                "DAT_080073e0": {
                    "data3": 1
                },
                "DAT_080073e4": {
                    "data4": 1
                },
                "FUNC_08000168": {
                    "convert_to_unsigned_int": 1
                },
                "FUNC_0800708c": {
                    "process_na_n": 1
                },
                "FUN_08000168": {
                    "add_double_precision": 1,
                    "function2": 1,
                    "is_signaling_na_n": 1
                },
                "FUN_0800016c": {
                    "function6": 1,
                    "multiply_floats": 1,
                    "normalize_addend": 1,
                    "normalize_denormal": 1
                },
                "FUN_08000404": {
                    "function3": 1,
                    "get_na_n": 1,
                    "set_not_a_number64": 1,
                    "square_root": 1
                },
                "FUN_080004d0": {
                    "function7": 1,
                    "get_subnormal": 1,
                    "normalize_multiplier": 1,
                    "subtract_unsigned_ints": 1
                },
                "FUN_080006c0": {
                    "get_significand_length": 1
                },
                "FUN_08000724": {
                    "calculate_short_division": 1,
                    "function10": 1,
                    "multiply_unsigned_ints": 1,
                    "normalize_negative_addend": 1
                },
                "FUN_080009c8": {
                    "function8": 1,
                    "is_positive": 1,
                    "is_quotient_zero": 1,
                    "is_zero": 1
                },
                "FUN_080009f0": {
                    "function11": 1,
                    "is_infinity": 1,
                    "is_negative": 1,
                    "is_quotient_negative": 1
                },
                "FUN_08006228": {
                    "calculate": 2,
                    "calculate_division": 1,
                    "calculate_exponent": 1,
                    "calculate_exponential": 1,
                    "calculate_floating_point": 8,
                    "calculate_floating_point_number": 2,
                    "calculate_floating_point_result": 1,
                    "calculate_floating_point_value": 2,
                    "calculate_result": 1,
                    "compute_floating_point": 1,
                    "compute_floating_point_division": 1,
                    "compute_floating_point_number": 1,
                    "floating_point_division": 1,
                    "floating_point_operation": 1,
                    "reverse_calculate_float": 1
                },
                "FUN_08006c0c": {
                    "function9": 1,
                    "square_root": 1,
                    "subtract_unsigned_long_ints": 1
                },
                "FUN_0800708c": {
                    "function1": 1,
                    "multiply_double_precision": 1
                },
                "FUN_080070a4": {
                    "function4": 1,
                    "get_floating_point_constant": 1,
                    "initialize_values": 1,
                    "process_infinity": 1
                },
                "FUN_080071c0": {
                    "function5": 1,
                    "normalize": 1,
                    "normalize_quotient": 1,
                    "subtract_floats": 1
                },
                "__aeabi_dadd": {
                    "add": 1
                },
                "__aeabi_i2d": {
                    "integer_to_double_conversion": 1
                },
                "__divdf3": {
                    "divide": 1
                },
                "__ieee754_sqrt": {
                    "square_root": 1
                },
                "__muldf3": {
                    "multiply": 1
                },
                "__subdf3": {
                    "subtract": 1
                },
                "extraout_r1": {
                    "exponent2": 1,
                    "extra_result1": 2,
                    "extraout_r1": 1,
                    "overflow_check": 1,
                    "result2": 1,
                    "result3": 2,
                    "result_3": 1,
                    "temp": 1,
                    "temp2": 1,
                    "temp3": 3,
                    "temp5": 1,
                    "temp7": 1,
                    "temp_var3": 1,
                    "tmp_var2": 1
                },
                "extraout_r1_00": {
                    "exponent4": 1,
                    "extra_result2": 1,
                    "extra_temporary1": 1,
                    "extraout_r1_00": 1,
                    "result6": 2,
                    "result_6": 1,
                    "temp24": 1,
                    "temp3": 2,
                    "temp5": 1,
                    "temp6": 3,
                    "temp8": 1,
                    "tmp_var5": 1
                },
                "extraout_r1_01": {
                    "exponent5": 1,
                    "extra_result3": 1,
                    "extra_temporary2": 1,
                    "extraout_r1_01": 1,
                    "result7": 2,
                    "result_7": 1,
                    "temp25": 1,
                    "temp4": 2,
                    "temp6": 1,
                    "temp7": 3,
                    "temp9": 1,
                    "tmp_var6": 1
                },
                "extraout_r1_02": {
                    "exponent6": 1,
                    "extra_result4": 1,
                    "extra_temporary3": 1,
                    "extraout_r1_02": 1,
                    "result8": 2,
                    "result_8": 1,
                    "temp10": 1,
                    "temp26": 1,
                    "temp5": 2,
                    "temp7": 1,
                    "temp8": 3,
                    "tmp_var7": 1
                },
                "extraout_r1_03": {
                    "exponent7": 1,
                    "extra_result5": 1,
                    "extra_temporary4": 1,
                    "extraout_r1_03": 1,
                    "result9": 2,
                    "result_9": 1,
                    "temp11": 1,
                    "temp27": 1,
                    "temp6": 2,
                    "temp8": 1,
                    "temp9": 3,
                    "tmp_var8": 1
                },
                "fabs": {
                    "absolute_value": 1
                },
                "func_Func_0800708c": {
                    "initialize_random_number_generator": 1
                },
                "iVar10": {
                    "abs_input_3_shift": 1,
                    "counter3": 1,
                    "helper5": 1,
                    "i_var10": 2,
                    "index3": 1,
                    "iter_number": 1,
                    "local_var3": 1,
                    "loop_counter3": 1,
                    "new_scale_factor": 1,
                    "remainder_upper": 1,
                    "result14": 1,
                    "shift_amount": 1,
                    "shift_count": 1,
                    "temp12": 2,
                    "temp14": 2,
                    "temp15": 1,
                    "temp19": 1,
                    "temp22": 1,
                    "temp6": 1,
                    "temp_6": 1,
                    "temp_k": 1,
                    "temp_var10": 1,
                    "temp_var16": 1,
                    "temp_var5": 1,
                    "tmp_var13": 1,
                    "total_offset": 1
                },
                "iVar5": {
                    "condition1": 1,
                    "counter": 1,
                    "counter1": 1,
                    "divide_exact": 1,
                    "i_var5": 1,
                    "index": 1,
                    "int_value1": 1,
                    "integer1": 1,
                    "local_var1": 1,
                    "loop_counter1": 1,
                    "offset": 1,
                    "overflow": 1,
                    "result12": 1,
                    "shift": 1,
                    "shifted_exponent": 2,
                    "temp10": 1,
                    "temp17": 1,
                    "temp4": 1,
                    "temp7": 2,
                    "temp8": 1,
                    "temp9": 1,
                    "temp_1": 1,
                    "temp_i": 1,
                    "temp_var1": 1,
                    "temp_var11": 1,
                    "temp_var5": 1,
                    "tmp_var9": 1
                },
                "iVar6": {
                    "case_value": 1,
                    "condition2": 1,
                    "counter2": 1,
                    "i_var6": 2,
                    "index": 1,
                    "index2": 1,
                    "int_value2": 1,
                    "integer2": 1,
                    "local_var2": 1,
                    "loop_counter2": 1,
                    "remainder_lower": 1,
                    "result13": 1,
                    "shift": 1,
                    "table_index": 1,
                    "temp10": 1,
                    "temp11": 1,
                    "temp13": 1,
                    "temp18": 1,
                    "temp5": 1,
                    "temp8": 2,
                    "temp9": 1,
                    "temp_2": 1,
                    "temp_j": 1,
                    "temp_var12": 1,
                    "temp_var2": 1,
                    "temp_var6": 1,
                    "tmp_var10": 1
                },
                "lVar18": {
                    "combined_vars4": 1,
                    "l_var18": 2,
                    "local_variable5": 1,
                    "long_long_value1": 1,
                    "long_result1": 1,
                    "long_temp": 1,
                    "long_value": 1,
                    "mul_result": 1,
                    "result11": 1,
                    "result5": 1,
                    "temp12": 1,
                    "temp16": 2,
                    "temp19": 2,
                    "temp22": 2,
                    "temp3": 1,
                    "temp5": 1,
                    "temp_14": 1,
                    "temp_7": 1,
                    "temp_var18": 1,
                    "temp_var3": 1,
                    "temp_var6": 1,
                    "temp_var8": 1,
                    "total_shift": 1
                },
                "lVar19": {
                    "local_var5": 1
                },
                "local_54": {
                    "bit_shifts": 1,
                    "comparison_result": 1,
                    "flag_4": 1,
                    "local_index": 1,
                    "local_int1": 1,
                    "local_result3": 1,
                    "local_result4": 1,
                    "local_var4": 3,
                    "local_variable4": 3,
                    "local_variable54": 1,
                    "multiplier": 1,
                    "num_of_bits": 1,
                    "output4": 1,
                    "power": 1,
                    "result_13": 1,
                    "scale_factor": 1,
                    "shift": 3,
                    "shift_count": 1,
                    "temp12": 1,
                    "temp24": 1,
                    "temp3": 1,
                    "temp49": 1,
                    "temp8": 1,
                    "temp_var11": 1
                },
                "local_64": {
                    "abs_combined_numerator_upper": 1,
                    "denormalized_mantissa": 1,
                    "dividend_lo": 1,
                    "flag_3": 1,
                    "high_fraction_part": 1,
                    "input_exponent_and_sign": 1,
                    "local_result2": 1,
                    "local_result3": 3,
                    "local_var3": 3,
                    "local_variable3": 3,
                    "local_variable64": 1,
                    "output3": 1,
                    "quotient_bits_high": 1,
                    "result_12": 1,
                    "return_value3": 1,
                    "temp2": 1,
                    "temp20": 1,
                    "temp23": 1,
                    "temp37": 1,
                    "temp_low": 1,
                    "temp_var10": 1,
                    "temp_var2": 1,
                    "temp_variable2": 1,
                    "u_var4_prime": 1
                },
                "local_68": {
                    "abs_combined_numerator_lower": 1,
                    "absquotient_bits": 1,
                    "approximation": 1,
                    "dividend_hi": 1,
                    "flag_2": 1,
                    "input_significand": 1,
                    "local_result1": 1,
                    "local_result2": 3,
                    "local_var2": 3,
                    "local_variable2": 3,
                    "local_variable68": 1,
                    "low_fraction_part": 1,
                    "output2": 1,
                    "result_11": 1,
                    "return_value2": 1,
                    "temp1": 1,
                    "temp19": 1,
                    "temp22": 1,
                    "temp36": 1,
                    "temp_high": 1,
                    "temp_var1": 1,
                    "temp_var9": 1,
                    "temp_variable1": 1,
                    "u_var3_prime": 1
                },
                "local_70": {
                    "check_exponent_value": 1,
                    "classification": 4,
                    "exception": 1,
                    "flag": 2,
                    "flag_1": 1,
                    "local_result": 1,
                    "local_result1": 3,
                    "local_var1": 3,
                    "local_variable1": 3,
                    "output1": 1,
                    "quotient_sign": 1,
                    "result": 1,
                    "result_10": 1,
                    "return_value": 2,
                    "special_case": 2,
                    "special_value": 1,
                    "temp_var8": 1,
                    "type": 1
                },
                "longlong": {
                    "int64_t": 1
                },
                "nan": {
                    "not_a_number": 1
                },
                "param_1": {
                    "a": 1,
                    "coeff1": 1,
                    "dividend": 1,
                    "exponent": 1,
                    "input1": 8,
                    "input_1": 2,
                    "input_value1": 1,
                    "input_value_1": 1,
                    "mantissa": 1,
                    "numerator": 1,
                    "numerator_1": 1,
                    "sign": 5,
                    "sign_bit": 3,
                    "sign_data": 1,
                    "significand": 1,
                    "value1": 2
                },
                "param_2": {
                    "b": 1,
                    "coeff2": 1,
                    "denominator": 1,
                    "divisor": 1,
                    "exponent": 9,
                    "exponent_and_sign": 1,
                    "exponent_data": 1,
                    "fraction": 1,
                    "input2": 8,
                    "input_2": 2,
                    "input_value2": 1,
                    "input_value_2": 1,
                    "numerator_2": 1,
                    "value2": 2
                },
                "param_3": {
                    "auxiliary": 1,
                    "c": 1,
                    "coeff3": 1,
                    "denominator_1": 1,
                    "fraction": 1,
                    "fraction_high": 1,
                    "input3": 8,
                    "input_3": 2,
                    "input_value3": 1,
                    "input_value_3": 1,
                    "mantissa_data": 1,
                    "mantissa_high": 3,
                    "mantissa_low": 1,
                    "mantissa_part1": 1,
                    "mask1": 1,
                    "sign_bit1": 1,
                    "significand2": 1,
                    "significand_high": 1,
                    "value3": 2,
                    "width": 1
                },
                "param_4": {
                    "coeff4": 1,
                    "d": 1,
                    "denominator_2": 1,
                    "exponent_and_sign2": 1,
                    "flags": 1,
                    "fraction_low": 1,
                    "fraction_lsb": 1,
                    "input4": 8,
                    "input_4": 2,
                    "input_value4": 1,
                    "input_value_4": 1,
                    "mantissa_high": 1,
                    "mantissa_low": 3,
                    "mantissa_part2": 1,
                    "mask2": 1,
                    "mode": 1,
                    "sign": 1,
                    "sign_bit2": 1,
                    "significand_low": 1,
                    "value4": 2
                },
                "scalbn": {
                    "multiply_by_power_of_2": 1
                },
                "temp21": {
                    "temp23": 1
                },
                "uVar1": {
                    "added_lower_bits": 1,
                    "fraction_mask": 1,
                    "left_significand": 1,
                    "quotient_bits": 1,
                    "result": 2,
                    "result1": 7,
                    "result_1": 2,
                    "sign": 1,
                    "sign1": 1,
                    "sign_and_exponent": 1,
                    "sign_mask": 2,
                    "sign_msb": 1,
                    "temp1": 5,
                    "temp_var1": 2,
                    "upper_part_of_result": 1
                },
                "uVar10": {
                    "added_lower_bits": 1
                },
                "uVar100": {
                    "local_var79": 1
                },
                "uVar101": {
                    "local_var80": 1
                },
                "uVar102": {
                    "local_var81": 1
                },
                "uVar103": {
                    "local_var82": 1
                },
                "uVar104": {
                    "local_var83": 1
                },
                "uVar105": {
                    "local_var84": 1
                },
                "uVar106": {
                    "local_var85": 1
                },
                "uVar107": {
                    "local_var86": 1
                },
                "uVar108": {
                    "local_var87": 1
                },
                "uVar109": {
                    "local_var88": 1
                },
                "uVar11": {
                    "abs_input4": 1,
                    "abs_numerator2": 1,
                    "absdividend": 1,
                    "exponent_inf_na_n": 1,
                    "flags1": 1,
                    "nan_or_infinity": 1,
                    "normalized_exponent": 1,
                    "normalized_input_4": 1,
                    "output": 3,
                    "remainder": 1,
                    "result": 7,
                    "result5": 1,
                    "return_value": 1,
                    "temp1": 1,
                    "temp13": 2,
                    "temp15": 1,
                    "temp_7": 1,
                    "temp_var17": 1,
                    "temporary_value": 1,
                    "u_var11": 1
                },
                "uVar110": {
                    "local_var89": 1
                },
                "uVar111": {
                    "local_var90": 1
                },
                "uVar112": {
                    "local_var91": 1
                },
                "uVar113": {
                    "local_var92": 1
                },
                "uVar114": {
                    "local_var93": 1
                },
                "uVar115": {
                    "local_var94": 1
                },
                "uVar116": {
                    "local_var95": 1
                },
                "uVar117": {
                    "local_var96": 1
                },
                "uVar118": {
                    "local_var97": 1
                },
                "uVar119": {
                    "local_var98": 1
                },
                "uVar12": {
                    "abs_combined_numerator_upper": 1,
                    "absdivisor": 1,
                    "exponent_nan": 1,
                    "fractional_part": 1,
                    "helper6": 1,
                    "new_sign": 1,
                    "result10": 2,
                    "result4": 1,
                    "result6": 1,
                    "result7": 1,
                    "result_high": 1,
                    "temp10": 1,
                    "temp13": 2,
                    "temp14": 2,
                    "temp16": 2,
                    "temp2": 1,
                    "temp6": 1,
                    "temp8": 1,
                    "temp_8": 1,
                    "temp_var12": 1,
                    "temp_var18": 1,
                    "temp_var2": 1,
                    "tmp_var14": 1,
                    "u_var12": 1,
                    "undefined4_5": 1
                },
                "uVar120": {
                    "local_var99": 1
                },
                "uVar121": {
                    "local_var100": 1
                },
                "uVar122": {
                    "local_var101": 1
                },
                "uVar123": {
                    "local_var102": 1
                },
                "uVar124": {
                    "local_var103": 1
                },
                "uVar125": {
                    "local_var104": 1
                },
                "uVar126": {
                    "local_var105": 1
                },
                "uVar127": {
                    "local_var106": 1
                },
                "uVar128": {
                    "local_var107": 1
                },
                "uVar129": {
                    "local_var108": 1
                },
                "uVar13": {
                    "added_lower_bits": 1,
                    "fraction_mantissa": 1,
                    "fractional_part2": 1,
                    "helper7": 1,
                    "new_exponent": 1,
                    "result11": 2,
                    "result5": 1,
                    "result7": 1,
                    "result8": 1,
                    "result_low": 1,
                    "temp11": 1,
                    "temp14": 2,
                    "temp15": 2,
                    "temp17": 2,
                    "temp3": 1,
                    "temp7": 1,
                    "temp9": 1,
                    "temp_9": 1,
                    "temp_var13": 1,
                    "temp_var19": 1,
                    "temp_var3": 1,
                    "tmp_var15": 1,
                    "u_var13": 2,
                    "undefined4_6": 1
                },
                "uVar130": {
                    "local_var109": 1
                },
                "uVar131": {
                    "local_var110": 1
                },
                "uVar132": {
                    "local_var111": 1
                },
                "uVar133": {
                    "local_var112": 1
                },
                "uVar134": {
                    "local_var113": 1
                },
                "uVar135": {
                    "local_var114": 1
                },
                "uVar136": {
                    "local_var115": 1
                },
                "uVar137": {
                    "local_var116": 1
                },
                "uVar138": {
                    "local_var117": 1
                },
                "uVar139": {
                    "local_var118": 1
                },
                "uVar14": {
                    "combined_numerator_result": 1,
                    "exponent_mantissa": 1,
                    "helper8": 1,
                    "result": 3,
                    "result1": 1,
                    "result12": 2,
                    "result6": 1,
                    "result8": 1,
                    "result9": 1,
                    "temp1": 1,
                    "temp10": 1,
                    "temp12": 1,
                    "temp15": 2,
                    "temp16": 1,
                    "temp18": 2,
                    "temp4": 1,
                    "temp8": 1,
                    "temp_10": 1,
                    "temp_3": 1,
                    "temp_var14": 1,
                    "temp_var4": 1,
                    "tmp_var16": 1,
                    "u_var14": 2
                },
                "uVar140": {
                    "local_var119": 1
                },
                "uVar141": {
                    "local_var120": 1
                },
                "uVar142": {
                    "local_var121": 1
                },
                "uVar143": {
                    "local_var122": 1
                },
                "uVar144": {
                    "local_var123": 1
                },
                "uVar145": {
                    "local_var124": 1
                },
                "uVar146": {
                    "local_var125": 1
                },
                "uVar147": {
                    "local_var126": 1
                },
                "uVar148": {
                    "local_var127": 1
                },
                "uVar149": {
                    "local_var128": 1
                },
                "uVar15": {
                    "combined_input": 2,
                    "combined_numerator": 1,
                    "combined_vars1": 1,
                    "floating_point": 1,
                    "helper9": 1,
                    "result13": 2,
                    "result2": 2,
                    "result7": 1,
                    "result9": 1,
                    "temp11": 1,
                    "temp13": 1,
                    "temp16": 2,
                    "temp17": 1,
                    "temp19": 2,
                    "temp2": 1,
                    "temp5": 1,
                    "temp9": 1,
                    "temp_11": 1,
                    "temp_4": 1,
                    "temp_result": 1,
                    "temp_var5": 1,
                    "tmp_var17": 1,
                    "u_var15": 2
                },
                "uVar150": {
                    "local_var129": 1
                },
                "uVar151": {
                    "local_var130": 1
                },
                "uVar152": {
                    "local_var131": 1
                },
                "uVar153": {
                    "local_var132": 1
                },
                "uVar154": {
                    "local_var133": 1
                },
                "uVar155": {
                    "local_var134": 1
                },
                "uVar156": {
                    "local_var135": 1
                },
                "uVar157": {
                    "local_var136": 1
                },
                "uVar158": {
                    "local_var137": 1
                },
                "uVar159": {
                    "local_var138": 1
                },
                "uVar16": {
                    "combined_vars2": 1,
                    "multiplication_result1": 1,
                    "normalized_mantissa": 1,
                    "product": 1,
                    "result10": 2,
                    "result14": 2,
                    "result3": 2,
                    "result8": 1,
                    "temp10": 1,
                    "temp12": 1,
                    "temp14": 1,
                    "temp17": 2,
                    "temp18": 1,
                    "temp20": 2,
                    "temp3": 1,
                    "temp6": 1,
                    "temp_12": 1,
                    "temp_5": 1,
                    "temp_result2": 1,
                    "temp_var16": 1,
                    "temp_var6": 1,
                    "tmp_var18": 1,
                    "u_var16": 2
                },
                "uVar160": {
                    "local_var139": 1
                },
                "uVar161": {
                    "local_var140": 1
                },
                "uVar162": {
                    "local_var141": 1
                },
                "uVar163": {
                    "local_var142": 1
                },
                "uVar164": {
                    "local_var143": 1
                },
                "uVar165": {
                    "local_var144": 1
                },
                "uVar166": {
                    "local_var145": 1
                },
                "uVar167": {
                    "local_var146": 1
                },
                "uVar168": {
                    "local_var147": 1
                },
                "uVar169": {
                    "local_var148": 1
                },
                "uVar17": {
                    "combined_denominator_result": 1,
                    "combined_vars3": 1,
                    "multiplication_result2": 1,
                    "result11": 2,
                    "result15": 2,
                    "result4": 2,
                    "result9": 1,
                    "rounded_mantissa": 1,
                    "temp11": 1,
                    "temp13": 1,
                    "temp15": 1,
                    "temp18": 2,
                    "temp19": 1,
                    "temp21": 2,
                    "temp4": 1,
                    "temp7": 1,
                    "temp_13": 1,
                    "temp_6": 1,
                    "temp_result3": 1,
                    "temp_var17": 1,
                    "temp_var7": 1,
                    "tmp_var19": 1,
                    "u_var17": 2
                },
                "uVar170": {
                    "local_var149": 1
                },
                "uVar171": {
                    "local_var150": 1
                },
                "uVar172": {
                    "local_var151": 1
                },
                "uVar173": {
                    "local_var152": 1
                },
                "uVar174": {
                    "local_var153": 1
                },
                "uVar175": {
                    "local_var154": 1
                },
                "uVar176": {
                    "local_var155": 1
                },
                "uVar177": {
                    "local_var156": 1
                },
                "uVar178": {
                    "local_var157": 1
                },
                "uVar179": {
                    "local_var158": 1
                },
                "uVar18": {
                    "local_var4": 1
                },
                "uVar180": {
                    "local_var159": 1
                },
                "uVar181": {
                    "local_var160": 1
                },
                "uVar182": {
                    "local_var161": 1
                },
                "uVar183": {
                    "local_var162": 1
                },
                "uVar184": {
                    "local_var163": 1
                },
                "uVar185": {
                    "local_var164": 1
                },
                "uVar186": {
                    "local_var165": 1
                },
                "uVar187": {
                    "local_var166": 1
                },
                "uVar188": {
                    "local_var167": 1
                },
                "uVar189": {
                    "local_var168": 1
                },
                "uVar19": {
                    "abs_combined_numerator": 1,
                    "abs_input": 1,
                    "abs_value": 1,
                    "combined_input64": 1,
                    "combined_vars5": 1,
                    "fp_result": 1,
                    "local_variable6": 1,
                    "long_long_temp": 1,
                    "long_long_value2": 1,
                    "result16": 1,
                    "result6": 1,
                    "temp": 1,
                    "temp14": 1,
                    "temp17": 1,
                    "temp20": 2,
                    "temp23": 2,
                    "temp6": 1,
                    "temp_15": 1,
                    "temp_8": 1,
                    "temp_result4": 1,
                    "temp_var19": 1,
                    "temp_var7": 1,
                    "temp_var9": 1,
                    "tmp_var20": 1,
                    "u_var19": 2,
                    "unsigned_long_result1": 1
                },
                "uVar190": {
                    "local_var169": 1
                },
                "uVar191": {
                    "local_var170": 1
                },
                "uVar192": {
                    "local_var171": 1
                },
                "uVar193": {
                    "local_var172": 1
                },
                "uVar194": {
                    "local_var173": 1
                },
                "uVar195": {
                    "local_var174": 1
                },
                "uVar196": {
                    "local_var175": 1
                },
                "uVar197": {
                    "local_var176": 1
                },
                "uVar198": {
                    "local_var177": 1
                },
                "uVar199": {
                    "local_var178": 1
                },
                "uVar2": {
                    "abs_denom": 1,
                    "divisor_bits": 1,
                    "exponent1": 1,
                    "exponent_mask": 2,
                    "extraout_r1": 1,
                    "fraction_msb": 1,
                    "lower_part_of_result": 1,
                    "mul_result_abs_lower": 1,
                    "result": 1,
                    "result2": 7,
                    "result_2": 2,
                    "right_significand": 1,
                    "sign_and_exponent2": 1,
                    "temp1": 1,
                    "temp2": 5,
                    "temp_var2": 2,
                    "tmp_var1": 1
                },
                "uVar20": {
                    "combined_vars6": 1,
                    "local_variable7": 1,
                    "multiplication_result3": 1,
                    "result10": 1,
                    "result12": 2,
                    "result16": 1,
                    "result17": 1,
                    "result7": 1,
                    "scaled_mantissa": 1,
                    "subtractor": 1,
                    "temp": 1,
                    "temp15": 1,
                    "temp18": 1,
                    "temp2": 1,
                    "temp21": 2,
                    "temp24": 2,
                    "temp7": 1,
                    "temp8": 1,
                    "temp_16": 1,
                    "temp_9": 1,
                    "temp_result5": 1,
                    "temp_var10": 1,
                    "temp_var20": 1,
                    "tmp_var21": 1,
                    "u_var20": 2
                },
                "uVar200": {
                    "local_var179": 1
                },
                "uVar201": {
                    "local_var180": 1
                },
                "uVar202": {
                    "local_var181": 1
                },
                "uVar203": {
                    "local_var182": 1
                },
                "uVar204": {
                    "local_var183": 1
                },
                "uVar205": {
                    "local_var184": 1
                },
                "uVar206": {
                    "local_var185": 1
                },
                "uVar207": {
                    "local_var186": 1
                },
                "uVar208": {
                    "local_var187": 1
                },
                "uVar209": {
                    "local_var188": 1
                },
                "uVar21": {
                    "local_var8": 1
                },
                "uVar210": {
                    "local_var189": 1
                },
                "uVar211": {
                    "local_var190": 1
                },
                "uVar212": {
                    "local_var191": 1
                },
                "uVar213": {
                    "local_var192": 1
                },
                "uVar214": {
                    "local_var193": 1
                },
                "uVar215": {
                    "local_var194": 1
                },
                "uVar216": {
                    "local_var195": 1
                },
                "uVar217": {
                    "local_var196": 1
                },
                "uVar218": {
                    "local_var197": 1
                },
                "uVar219": {
                    "local_var198": 1
                },
                "uVar22": {
                    "local_var9": 1
                },
                "uVar220": {
                    "local_var199": 1
                },
                "uVar221": {
                    "local_var200": 1
                },
                "uVar222": {
                    "local_var201": 1
                },
                "uVar223": {
                    "local_var202": 1
                },
                "uVar224": {
                    "local_var203": 1
                },
                "uVar225": {
                    "local_var204": 1
                },
                "uVar226": {
                    "local_var205": 1
                },
                "uVar227": {
                    "local_var206": 1
                },
                "uVar228": {
                    "local_var207": 1
                },
                "uVar229": {
                    "local_var208": 1
                },
                "uVar23": {
                    "local_var10": 1
                },
                "uVar230": {
                    "local_var209": 1
                },
                "uVar231": {
                    "local_var210": 1
                },
                "uVar232": {
                    "local_var211": 1
                },
                "uVar233": {
                    "local_var212": 1
                },
                "uVar234": {
                    "local_var213": 1
                },
                "uVar235": {
                    "local_var214": 1
                },
                "uVar236": {
                    "local_var215": 1
                },
                "uVar237": {
                    "local_var216": 1
                },
                "uVar238": {
                    "local_var217": 1
                },
                "uVar239": {
                    "local_var218": 1
                },
                "uVar24": {
                    "local_var11": 1
                },
                "uVar240": {
                    "local_var219": 1
                },
                "uVar241": {
                    "local_var220": 1
                },
                "uVar242": {
                    "local_var221": 1
                },
                "uVar243": {
                    "local_var222": 1
                },
                "uVar244": {
                    "local_var223": 1
                },
                "uVar245": {
                    "local_var224": 1
                },
                "uVar246": {
                    "local_var225": 1
                },
                "uVar247": {
                    "local_var226": 1
                },
                "uVar248": {
                    "local_var227": 1
                },
                "uVar249": {
                    "local_var228": 1
                },
                "uVar25": {
                    "local_var12": 1
                },
                "uVar250": {
                    "local_var229": 1
                },
                "uVar251": {
                    "local_var230": 1
                },
                "uVar252": {
                    "local_var231": 1
                },
                "uVar253": {
                    "local_var232": 1
                },
                "uVar254": {
                    "local_var233": 1
                },
                "uVar255": {
                    "local_var234": 1
                },
                "uVar26": {
                    "local_var13": 1
                },
                "uVar27": {
                    "local_var14": 1
                },
                "uVar28": {
                    "local_var15": 1
                },
                "uVar29": {
                    "local_var16": 1
                },
                "uVar3": {
                    "added_upper_bits": 1,
                    "exponent_shifted": 1,
                    "extraout_r1": 1,
                    "fraction_lsb_mask": 1,
                    "fraction_mask1": 1,
                    "helper1": 1,
                    "result3": 2,
                    "result4": 2,
                    "result_3": 1,
                    "result_4": 1,
                    "sign2": 1,
                    "sign_and_exponent3": 1,
                    "temp1": 2,
                    "temp3": 3,
                    "temp4": 3,
                    "temp_var3": 1,
                    "temp_var4": 1,
                    "temporary1": 1,
                    "tmp_var3": 1,
                    "u_var3": 1,
                    "undefined4_1": 1
                },
                "uVar30": {
                    "local_var17": 1
                },
                "uVar31": {
                    "local_var18": 1
                },
                "uVar32": {
                    "local_var19": 1
                },
                "uVar33": {
                    "local_var20": 1
                },
                "uVar34": {
                    "local_var21": 1
                },
                "uVar35": {
                    "local_var22": 1
                },
                "uVar36": {
                    "local_var23": 1
                },
                "uVar37": {
                    "local_var24": 1
                },
                "uVar38": {
                    "local_var25": 1
                },
                "uVar39": {
                    "local_var26": 1
                },
                "uVar4": {
                    "abs_product_upper": 1,
                    "exponent3": 1,
                    "fraction_mask2": 1,
                    "helper2": 1,
                    "nan_constant": 1,
                    "result4": 2,
                    "result5": 2,
                    "result_4": 1,
                    "result_5": 1,
                    "sign_and_exponent4": 1,
                    "sign_mask": 1,
                    "temp2": 2,
                    "temp4": 3,
                    "temp5": 3,
                    "temp_var4": 1,
                    "temporary2": 1,
                    "tmp_var4": 1,
                    "u_var4": 2,
                    "undefined4_2": 1
                },
                "uVar40": {
                    "local_var27": 1
                },
                "uVar44": {
                    "local_var28": 1
                },
                "uVar45": {
                    "local_var29": 1
                },
                "uVar46": {
                    "local_var30": 1
                },
                "uVar47": {
                    "local_var31": 1
                },
                "uVar49": {
                    "local_var32": 1
                },
                "uVar5": {
                    "local_var6": 1,
                    "temp4": 1
                },
                "uVar50": {
                    "local_var33": 1
                },
                "uVar51": {
                    "local_var34": 1
                },
                "uVar52": {
                    "local_var35": 1
                },
                "uVar53": {
                    "local_var36": 1
                },
                "uVar55": {
                    "local_var37": 1
                },
                "uVar56": {
                    "local_var38": 1
                },
                "uVar57": {
                    "local_var39": 1
                },
                "uVar58": {
                    "local_var40": 1
                },
                "uVar59": {
                    "local_var41": 1
                },
                "uVar6": {
                    "local_var7": 1
                },
                "uVar60": {
                    "local_var42": 1
                },
                "uVar61": {
                    "local_var43": 1
                },
                "uVar62": {
                    "local_var44": 1
                },
                "uVar63": {
                    "local_var45": 1
                },
                "uVar64": {
                    "local_var46": 1
                },
                "uVar65": {
                    "local_var47": 1
                },
                "uVar66": {
                    "local_var48": 1
                },
                "uVar67": {
                    "local_var49": 1
                },
                "uVar68": {
                    "local_var50": 1
                },
                "uVar69": {
                    "local_var51": 1
                },
                "uVar7": {
                    "addend1": 1,
                    "helper3": 1,
                    "na_n": 1,
                    "remainder": 1,
                    "result3": 2,
                    "result5": 1,
                    "sign_extended": 1,
                    "temp1": 1,
                    "temp10": 2,
                    "temp11": 1,
                    "temp12": 1,
                    "temp5": 2,
                    "temp6": 1,
                    "temp9": 2,
                    "temp_1": 1,
                    "temp_3": 1,
                    "temp_var": 1,
                    "temp_var13": 1,
                    "temp_var3": 1,
                    "temp_var7": 1,
                    "tmp_var11": 1,
                    "u_var7": 1,
                    "undefined4_3": 1
                },
                "uVar70": {
                    "local_var52": 1
                },
                "uVar71": {
                    "local_var53": 1
                },
                "uVar72": {
                    "local_var54": 1
                },
                "uVar73": {
                    "local_var55": 1
                },
                "uVar74": {
                    "local_var56": 1
                },
                "uVar75": {
                    "local_var57": 1
                },
                "uVar76": {
                    "local_var58": 1
                },
                "uVar77": {
                    "local_var59": 1
                },
                "uVar78": {
                    "local_var60": 1
                },
                "uVar79": {
                    "local_var61": 1
                },
                "uVar8": {
                    "abs_exponent": 2,
                    "abs_input2": 1,
                    "abs_input_2": 1,
                    "abs_numerator": 1,
                    "adjusted_input2": 1,
                    "exponent_unbiased": 1,
                    "mul_result_abs_upper": 1,
                    "normalized_divisor_bits": 1,
                    "normalized_exponent": 2,
                    "normalized_input_2": 1,
                    "positive_input1": 1,
                    "processed_input2": 1,
                    "shifted_fraction": 1,
                    "temp10": 2,
                    "temp11": 2,
                    "temp12": 1,
                    "temp13": 1,
                    "temp2": 1,
                    "temp_4": 1,
                    "temp_var14": 1,
                    "truncated_exponent": 1,
                    "u_var8": 2,
                    "unsigned_result1": 1
                },
                "uVar80": {
                    "local_var62": 1
                },
                "uVar81": {
                    "local_var63": 1
                },
                "uVar82": {
                    "local_var64": 1
                },
                "uVar83": {
                    "local_var65": 1
                },
                "uVar84": {
                    "local_var66": 1
                },
                "uVar85": {
                    "local_var67": 1
                },
                "uVar86": {
                    "local_var68": 1
                },
                "uVar87": {
                    "local_var69": 1
                },
                "uVar88": {
                    "local_var70": 1
                },
                "uVar89": {
                    "local_var71": 1
                },
                "uVar9": {
                    "exponent_mask": 1,
                    "helper4": 1,
                    "lower_part_of_mantissa": 1,
                    "remainder": 1,
                    "remainder_upper": 1,
                    "result4": 1,
                    "result6": 1,
                    "temp11": 2,
                    "temp12": 2,
                    "temp13": 1,
                    "temp14": 1,
                    "temp3": 1,
                    "temp6": 1,
                    "temp7": 1,
                    "temp_2": 1,
                    "temp_5": 1,
                    "temp_var1": 1,
                    "temp_var15": 1,
                    "temp_var4": 1,
                    "temp_var9": 1,
                    "tmp_var12": 1,
                    "u_var9": 2,
                    "undefined4_4": 1
                },
                "uVar90": {
                    "local_var72": 1
                },
                "uVar91": {
                    "local_var73": 1
                },
                "uVar92": {
                    "local_var74": 1
                },
                "uVar93": {
                    "local_var75": 1
                },
                "uVar94": {
                    "local_var76": 1
                },
                "uVar95": {
                    "local_var77": 1
                },
                "uVar99": {
                    "local_var78": 1
                },
                "ulonglong": {
                    "uint64_t": 1
                },
                "undefine8": {
                    "uint64_t": 1
                },
                "undefined4": {
                    "uint32_t": 1
                }
            },
            "called": [
                "FUN_0800708c",
                "FUN_08000168",
                "FUN_08000404",
                "FUN_080070a4",
                "FUN_080071c0",
                "FUN_0800016c",
                "FUN_080004d0",
                "FUN_080009c8",
                "FUN_08006c0c",
                "FUN_08000724",
                "FUN_080009f0"
            ],
            "calling": [
                "FUN_08005900"
            ],
            "code": "\nuint calculate_floating_point_value_08006228(uint input1,uint exponent,uint input3,uint input4)\n\n{\n  uint32_t result1;\n  uint result2;\n  uint temp3;\n  uint32_t temp4;\n  uint32_t temp4;\n  uint32_t temp6;\n  uint32_t temp7;\n  uint temp8;\n  uint32_t temp9;\n  int temp7;\n  int i_var6;\n  uint32_t temp10;\n  uint abs_exponent;\n  uint32_t temp12;\n  int temp12;\n  uint result;\n  uint32_t temp13;\n  uint32_t temp17;\n  undefined8 result;\n  undefined8 u_var15;\n  undefined8 temp20;\n  undefined8 result15;\n  int64_t temp22;\n  uint64_t temp20;\n  undefined8 temp24;\n  uint classification;\n  uint32_t local_variable2;\n  uint32_t local_variable3;\n  int local_variable4;\n  \n  u_var15 = CONCAT44(exponent,input1);\n  result = input4 & 0x7fffffff;\n  if ((result | input3) == 0) {\n    return 0;\n  }\n  abs_exponent = exponent & 0x7fffffff;\n  if (abs_exponent < 0x7ff00001) {\n    if (abs_exponent == 0x7ff00000) {\n      if (input1 == 0) {\n        if (0x7ff00000 < result) goto LAB_08006278;\nLAB_08006262:\n        if ((result != 0x7ff00000) || (input3 == 0)) {\n          if (-1 < (int)exponent) goto LAB_0800632a;\n          if (result < 0x43400000) {\n            if (result < 0x3ff00000) {\nLAB_0800632a:\n              classification = 0;\n              goto LAB_080062ba;\n            }\n            temp7 = ((int)result >> 0x14) + -0x3ff;\n            if (0x14 < temp7) {\n              result2 = input3 >> (0x34U - temp7 & 0xff);\n              if (input3 == result2 << (0x34U - temp7 & 0xff)) {\n                classification = 2 - (result2 & 1);\n                goto LAB_080062ba;\n              }\n              goto LAB_0800632a;\n            }\n            if (input3 == 0) {\n              result2 = (int)result >> (0x14U - temp7 & 0xff);\n              if (result == result2 << (0x14U - temp7 & 0xff)) {\n                classification = 2 - (result2 & 1);\n              }\n              else {\n                classification = 0;\n              }\n              goto LAB_0800630c;\n            }\n            classification = 0;\n          }\n          else {\n            classification = 2;\nLAB_080062ba:\n            if (input3 == 0) {\n              if (result == 0x7ff00000) {\n                if ((abs_exponent + 0xc0100000 | input1) == 0) {\n                  return 0;\n                }\n                if (0x3fefffff < abs_exponent) {\n                  if ((int)input4 < 0) {\n                    return 0;\n                  }\n                  return 0;\n                }\n                if (-1 < (int)input4) {\n                  return 0;\n                }\n                return 0;\n              }\nLAB_0800630c:\n              if (result == 0x3ff00000) {\n                if (-1 < (int)input4) {\n                  return input1;\n                }\n                result = 0x3ff0000000000000;\n                goto LAB_08006320;\n              }\n              if (input4 == 0x40000000) goto LAB_0800634a;\n              if ((input4 == 0x3fe00000) && (-1 < (int)exponent)) {\n                result = square_root(input1,exponent);\n                return result;\n              }\n            }\n          }\n          result = absolute_value(input1,exponent);\n          temp13 = (uint32_t)((uint64_t)result >> 0x20);\n          result1 = (uint32_t)result;\n          temp20 = CONCAT44(exponent,result1) & 0x7fffffffffffffff;\n          if ((input1 == 0) && ((abs_exponent == 0 || ((exponent & 0x3fffffff) == 0x3ff00000)))) {\n            if ((int)input4 < 0) {\n              result = divide(0,0x3ff00000,result1,temp13);\n            }\n            if (-1 < (int)exponent) {\n              return (uint)result;\n            }\n            if ((classification | abs_exponent + 0xc0100000) != 0) {\n              return (uint)result;\n            }\n          }\n          else {\n            result2 = 0xffffffff - ((int)exponent >> 0x1f);\n            result = u_var15;\n            if ((classification | result2) != 0) {\n              if (result < 0x41e00001) {\n                local_variable4 = 0;\n                if (abs_exponent < 0x100000) {\n                  temp20 = multiply();\n                  local_variable4 = -0x35;\n                }\n                result = (uint)(temp20 >> 0x20);\n                result1 = (uint32_t)temp20;\n                local_variable4 = ((int)result >> 0x14) + -0x3ff + local_variable4;\n                result = result & 0xfffff;\n                abs_exponent = result | 0x3ff00000;\n                if (result < 0x3988f) {\nLAB_08006628:\n                  temp7 = 0;\n                }\n                else {\n                  if (0xbb679 < result) {\n                    abs_exponent = abs_exponent - 0x100000;\n                    local_variable4 = local_variable4 + 1;\n                    goto LAB_08006628;\n                  }\n                  temp7 = 1;\n                }\n                i_var6 = temp7 * 8;\n                temp10 = (&DAT_080073c0)[temp7 * 2];\n                temp12 = (&DAT_080073c4)[temp7 * 2];\n                u_var15 = subtract(result1,abs_exponent,temp10,temp12);\n                temp17 = (uint32_t)((uint64_t)u_var15 >> 0x20);\n                result = __aeabi_dadd(result1,abs_exponent,temp10,temp12);\n                result = divide(0,0x3ff00000,(int)result,(int)((uint64_t)result >> 0x20));\n                temp4 = (uint32_t)((uint64_t)result >> 0x20);\n                temp20 = multiply((int)u_var15,temp17,(int)result,temp4);\n                temp4 = (uint32_t)((uint64_t)temp20 >> 0x20);\n                temp13 = (uint32_t)temp20;\n                temp20 = multiply(0,temp4);\n                u_var15 = subtract((int)u_var15,temp17,(int)temp20,(int)((uint64_t)temp20 >> 0x20));\n                temp20 = subtract(0,((int)abs_exponent >> 1 | 0x20000000U) + 0x80000 + temp7 * 0x40000,\n                                  temp10,temp12);\n                temp20 = subtract(result1,abs_exponent,(int)temp20,(int)((uint64_t)temp20 >> 0x20));\n                temp20 = multiply((int)temp20,(int)((uint64_t)temp20 >> 0x20),0,temp4);\n                u_var15 = subtract((int)u_var15,(int)((uint64_t)u_var15 >> 0x20),(int)temp20,\n                                  (int)((uint64_t)temp20 >> 0x20));\n                u_var15 = multiply((int)u_var15,(int)((uint64_t)u_var15 >> 0x20),(int)result,temp4);\n                temp17 = (uint32_t)((uint64_t)u_var15 >> 0x20);\n                result = multiply(temp13,temp4);\n                temp4 = (uint32_t)((uint64_t)result >> 0x20);\n                result1 = (uint32_t)result;\n                result = multiply(result1,temp4,0x4a454eef,0x3fca7e28);\n                result = __aeabi_dadd((int)result,(int)((uint64_t)result >> 0x20),0x93c9db65,\n                                      0x3fcd864a);\n                result = multiply((int)result,(int)((uint64_t)result >> 0x20),result1,temp4);\n                result = __aeabi_dadd((int)result,(int)((uint64_t)result >> 0x20),0xa91d4101,\n                                      0x3fd17460);\n                result = multiply((int)result,(int)((uint64_t)result >> 0x20),result1,temp4);\n                result = __aeabi_dadd((int)result,(int)((uint64_t)result >> 0x20),0x518f264d,\n                                      0x3fd55555);\n                result = multiply((int)result,(int)((uint64_t)result >> 0x20),result1,temp4);\n                result = __aeabi_dadd((int)result,(int)((uint64_t)result >> 0x20),0xdb6fabff,\n                                      0x3fdb6db6);\n                result = multiply((int)result,(int)((uint64_t)result >> 0x20),result1,temp4);\n                result = __aeabi_dadd((int)result,(int)((uint64_t)result >> 0x20),0x33333303,\n                                      0x3fe33333);\n                temp20 = multiply(result1,temp4,result1,temp4);\n                result = multiply((int)result,(int)((uint64_t)result >> 0x20),(int)temp20,\n                                  (int)((uint64_t)temp20 >> 0x20));\n                temp20 = __aeabi_dadd(temp13,temp4,0,temp4);\n                temp20 = multiply((int)temp20,(int)((uint64_t)temp20 >> 0x20),(int)u_var15,temp17);\n                result = __aeabi_dadd((int)temp20,(int)((uint64_t)temp20 >> 0x20),(int)result,\n                                      (int)((uint64_t)result >> 0x20));\n                result1 = (uint32_t)((uint64_t)result >> 0x20);\n                temp20 = multiply(0,temp4,0,temp4);\n                temp4 = (uint32_t)((uint64_t)temp20 >> 0x20);\n                result15 = __aeabi_dadd((int)temp20,temp4,0,0x40080000);\n                __aeabi_dadd((int)result15,(int)((uint64_t)result15 >> 0x20),(int)result,result1);\n                result15 = multiply(0,temp4,0,temp6);\n                temp10 = (uint32_t)((uint64_t)result15 >> 0x20);\n                temp24 = subtract(0,temp6,0,0x40080000);\n                temp20 = subtract((int)temp24,(int)((uint64_t)temp24 >> 0x20),(int)temp20,temp4);\n                result = subtract((int)result,result1,(int)temp20,(int)((uint64_t)temp20 >> 0x20));\n                result = multiply((int)result,(int)((uint64_t)result >> 0x20),temp13,temp4);\n                u_var15 = multiply((int)u_var15,temp17,0,temp6);\n                result = __aeabi_dadd((int)result,(int)((uint64_t)result >> 0x20),(int)u_var15,\n                                      (int)((uint64_t)u_var15 >> 0x20));\n                result1 = (uint32_t)((uint64_t)result >> 0x20);\n                __aeabi_dadd((int)result15,temp10,(int)result,result1);\n                u_var15 = multiply(0,temp7,0xe0000000,0x3feec709);\n                temp20 = subtract(0,temp7,(int)result15,temp10);\n                result = subtract((int)result,result1,(int)temp20,(int)((uint64_t)temp20 >> 0x20));\n                result = multiply((int)result,(int)((uint64_t)result >> 0x20),0xdc3a03fd,0x3feec709\n                                 );\n                temp20 = multiply(0,temp7,0x145b01f5,0xbe3e2fe0);\n                result = __aeabi_dadd((int)result,(int)((uint64_t)result >> 0x20),(int)temp20,\n                                      (int)((uint64_t)temp20 >> 0x20));\n                result = __aeabi_dadd((int)result,(int)((uint64_t)result >> 0x20),\n                                      *(uint32_t *)(&DAT_080073e0 + i_var6),\n                                      *(uint32_t *)(&DAT_080073e4 + i_var6));\n                temp20 = integer_to_double_conversion(local_variable4);\n                result1 = (uint32_t)((uint64_t)temp20 >> 0x20);\n                temp13 = *(uint32_t *)(&DAT_080073d0 + i_var6);\n                temp17 = *(uint32_t *)(&DAT_080073d4 + i_var6);\n                result15 = __aeabi_dadd((int)u_var15,(int)((uint64_t)u_var15 >> 0x20),(int)result,\n                                      (int)((uint64_t)result >> 0x20));\n                result15 = __aeabi_dadd((int)result15,(int)((uint64_t)result15 >> 0x20),temp13,temp17);\n                __aeabi_dadd((int)result15,(int)((uint64_t)result15 >> 0x20),(int)temp20,result1);\n                temp20 = subtract(0,temp8,(int)temp20,result1);\n                temp22 = subtract((int)temp20,(int)((uint64_t)temp20 >> 0x20),temp13,temp17);\n                result = temp8;\n              }\n              else {\n                if (0x43f00000 < result) {\n                  if (abs_exponent < 0x3ff00000) goto LAB_080063fa;\nLAB_08006418:\n                  if ((int)input4 < 1) {\n                    return 0;\n                  }\nLAB_08006400:\n                  input1 = 0x8800759c;\n                  exponent = 0x7e37e43c;\n                  u_var15 = 0x7e37e43c8800759c;\n                  goto LAB_0800634a;\n                }\n                if (abs_exponent < 0x3fefffff) {\nLAB_080063fa:\n                  if (-1 < (int)input4) {\n                    return 0;\n                  }\n                  goto LAB_08006400;\n                }\n                if (0x3ff00000 < abs_exponent) goto LAB_08006418;\n                u_var15 = subtract(result1,temp13,0,0x3ff00000);\n                temp13 = (uint32_t)((uint64_t)u_var15 >> 0x20);\n                result1 = (uint32_t)u_var15;\n                u_var15 = multiply(result1,temp13,0x60000000,0x3ff71547);\n                result = multiply(result1,temp13,0xf85ddf44,0x3e54ae0b);\n                temp20 = multiply(result1,temp13,0,0x3fd00000);\n                temp20 = subtract(0x55555555,0x3fd55555,(int)temp20,(int)((uint64_t)temp20 >> 0x20)\n                                 );\n                temp20 = multiply((int)temp20,(int)((uint64_t)temp20 >> 0x20),result1,temp13);\n                temp20 = subtract(0,0x3fe00000,(int)temp20,(int)((uint64_t)temp20 >> 0x20));\n                result15 = multiply(result1,temp13,result1,temp13);\n                temp20 = multiply((int)temp20,(int)((uint64_t)temp20 >> 0x20),(int)result15,\n                                  (int)((uint64_t)result15 >> 0x20));\n                temp20 = multiply((int)temp20,(int)((uint64_t)temp20 >> 0x20),0x652b82fe,0x3ff71547\n                                 );\n                result = subtract((int)result,(int)((uint64_t)result >> 0x20),(int)temp20,\n                                  (int)((uint64_t)temp20 >> 0x20));\n                __aeabi_dadd((int)u_var15,(int)((uint64_t)u_var15 >> 0x20),(int)result,\n                             (int)((uint64_t)result >> 0x20));\n                temp22 = (uint64_t)temp3 << 0x20;\n                result = temp3;\n              }\n              u_var15 = subtract((int)temp22,(int)((uint64_t)temp22 >> 0x20),(int)u_var15,\n                                (int)((uint64_t)u_var15 >> 0x20));\n              u_var15 = subtract((int)result,(int)((uint64_t)result >> 0x20),(int)u_var15,\n                                (int)((uint64_t)u_var15 >> 0x20));\n              if ((classification - 1 | result2) == 0) {\n                exponent = 0xbff00000;\n              }\n              else {\n                exponent = 0x3ff00000;\n              }\n              classification = 0;\n              result = subtract(input3,input4,0,input4);\n              result = multiply((int)result,(int)((uint64_t)result >> 0x20),0,result);\n              u_var15 = multiply((int)u_var15,(int)((uint64_t)u_var15 >> 0x20),input3,input4);\n              u_var15 = __aeabi_dadd((int)result,(int)((uint64_t)result >> 0x20),(int)u_var15,\n                                    (int)((uint64_t)u_var15 >> 0x20));\n              temp17 = (uint32_t)((uint64_t)u_var15 >> 0x20);\n              result1 = (uint32_t)u_var15;\n              u_var15 = multiply(0,result,0,input4);\n              temp4 = (uint32_t)((uint64_t)u_var15 >> 0x20);\n              temp13 = (uint32_t)u_var15;\n              temp22 = __aeabi_dadd(result1,temp17,temp13,temp4);\n              abs_exponent = (uint)((uint64_t)temp22 >> 0x20);\n              result = (uint)temp22;\n              if (0x408fffffffffffff < temp22) {\n                if ((abs_exponent + 0xbf700000 | result) == 0) {\n                  result = __aeabi_dadd(result1,temp17,0x652b82fe,0x3c971547);\n                  temp20 = subtract(result,abs_exponent,temp13,temp4);\n                  temp7 = __aeabi_dcmpgt((int)result,(int)((uint64_t)result >> 0x20),(int)temp20,\n                                         (int)((uint64_t)temp20 >> 0x20));\n                  if (temp7 == 0) goto LAB_08006968;\n                }\n                u_var15 = multiply(0,exponent,0x8800759c,0x7e37e43c);\n                input1 = 0x8800759c;\n                exponent = 0x7e37e43c;\n                goto LAB_0800634a;\n              }\n              if ((abs_exponent & 0x7fffffff) < 0x4090cc00) {\nLAB_08006968:\n                if ((abs_exponent & 0x7fffffff) < 0x3fe00001) {\n                  temp7 = 0;\n                }\n                else {\n                  abs_exponent = (0x100000 >> (((int)(abs_exponent & 0x7fffffff) >> 0x14) - 0x3feU & 0xff)) +\n                          abs_exponent;\n                  result = (abs_exponent * 2 >> 0x15) - 0x3ff;\n                  temp7 = (int)(abs_exponent & 0xfffff | 0x100000) >> (0x14 - result & 0xff);\n                  if (temp22 < 0) {\n                    temp7 = -temp7;\n                  }\n                  u_var15 = subtract(temp13,temp4,0,abs_exponent & ~(0xfffff >> (result & 0xff)));\n                }\n                local_variable3 = (uint32_t)((uint64_t)u_var15 >> 0x20);\n                local_variable2 = (uint32_t)u_var15;\n                __aeabi_dadd(local_variable2,local_variable3,result1,temp17);\n                u_var15 = multiply(0,temp9,0,0x3fe62e43);\n                temp13 = (uint32_t)((uint64_t)u_var15 >> 0x20);\n                result = subtract(0,temp9,local_variable2,local_variable3);\n                result = subtract(result1,temp17,(int)result,(int)((uint64_t)result >> 0x20));\n                result = multiply((int)result,(int)((uint64_t)result >> 0x20),0xfefa39ef,0x3fe62e42\n                                 );\n                temp20 = multiply(0,temp9,0xca86c39,0xbe205c61);\n                result = __aeabi_dadd((int)result,(int)((uint64_t)result >> 0x20),(int)temp20,\n                                      (int)((uint64_t)temp20 >> 0x20));\n                temp17 = (uint32_t)((uint64_t)result >> 0x20);\n                temp20 = __aeabi_dadd((int)u_var15,temp13,(int)result,temp17);\n                temp4 = (uint32_t)((uint64_t)temp20 >> 0x20);\n                result1 = (uint32_t)temp20;\n                u_var15 = subtract(result1,temp4,(int)u_var15,temp13);\n                u_var15 = subtract((int)result,temp17,(int)u_var15,(int)((uint64_t)u_var15 >> 0x20));\n                temp17 = (uint32_t)((uint64_t)u_var15 >> 0x20);\n                result = multiply(result1,temp4,result1,temp4);\n                temp4 = (uint32_t)((uint64_t)result >> 0x20);\n                temp13 = (uint32_t)result;\n                result = multiply(temp13,temp4,0x72bea4d0,0x3e663769);\n                result = subtract((int)result,(int)((uint64_t)result >> 0x20),0xc5d26bf1,0x3ebbbd41\n                                 );\n                result = multiply((int)result,(int)((uint64_t)result >> 0x20),temp13,temp4);\n                result = __aeabi_dadd((int)result,(int)((uint64_t)result >> 0x20),0xaf25de2c,\n                                      0x3f11566a);\n                result = multiply((int)result,(int)((uint64_t)result >> 0x20),temp13,temp4);\n                result = subtract((int)result,(int)((uint64_t)result >> 0x20),0x16bebd93,0x3f66c16c\n                                 );\n                result = multiply((int)result,(int)((uint64_t)result >> 0x20),temp13,temp4);\n                result = __aeabi_dadd((int)result,(int)((uint64_t)result >> 0x20),0x5555553e,\n                                      0x3fc55555);\n                result = multiply((int)result,(int)((uint64_t)result >> 0x20),temp13,temp4);\n                result = subtract(result1,temp4,(int)result,(int)((uint64_t)result >> 0x20));\n                temp13 = (uint32_t)((uint64_t)result >> 0x20);\n                temp20 = multiply(result1,temp4,(int)result,temp13);\n                result = subtract((int)result,temp13,0,0x40000000);\n                result = divide((int)temp20,(int)((uint64_t)temp20 >> 0x20),(int)result,\n                                  (int)((uint64_t)result >> 0x20));\n                temp20 = multiply(result1,temp4,(int)u_var15,temp17);\n                u_var15 = __aeabi_dadd((int)temp20,(int)((uint64_t)temp20 >> 0x20),(int)u_var15,\n                                      temp17);\n                u_var15 = subtract((int)result,(int)((uint64_t)result >> 0x20),(int)u_var15,\n                                  (int)((uint64_t)u_var15 >> 0x20));\n                u_var15 = subtract((int)u_var15,(int)((uint64_t)u_var15 >> 0x20),result1,temp4);\n                result = subtract(0,0x3ff00000,(int)u_var15,(int)((uint64_t)u_var15 >> 0x20));\n                i_var6 = (int)((uint64_t)result >> 0x20);\n                temp12 = i_var6 + temp7 * 0x100000;\n                u_var15 = CONCAT44(temp12,(int)result);\n                input1 = classification;\n                if (temp12 < 0x100000) {\n                  u_var15 = multiply_by_power_of_2((int)result,i_var6,temp7);\n                }\n              }\n              else {\n                if ((abs_exponent + 0x3f6f3400 | result) == 0) {\n                  result = subtract(result,abs_exponent,temp13,temp4);\n                  temp7 = __aeabi_dcmple(result1,temp17,(int)result,(int)((uint64_t)result >> 0x20));\n                  if (temp7 == 0) goto LAB_08006968;\n                }\n                u_var15 = multiply(0,exponent,0xc2f8f359,0x1a56e1f);\n                input1 = 0xc2f8f359;\n                exponent = 0x1a56e1f;\n              }\nLAB_0800634a:\n              result = multiply((int)u_var15,(int)((uint64_t)u_var15 >> 0x20),input1,exponent);\n              return result;\n            }\n          }\n          result1 = (uint32_t)((uint64_t)result >> 0x20);\n          result = subtract((int)result,result1,(int)result,result1);\n          u_var15 = result;\nLAB_08006320:\n          result = divide((int)result,(int)((uint64_t)result >> 0x20),(int)u_var15,\n                            (int)((uint64_t)u_var15 >> 0x20));\n          return result;\n        }\n      }\n    }\n    else if (result < 0x7ff00001) goto LAB_08006262;\n  }\n  if ((abs_exponent + 0xc0100000 | input1) == 0) {\n    return 0;\n  }\nLAB_08006278:\n  result = not_a_number(&DAT_0800737e);\n  return result;\n}\n\n",
            "current_name": "calculate_floating_point_value_08006228",
            "entrypoint": "0x08006228",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006228": "calculate_floating_point_value_08006228",
                "__aeabi_i2d": "integer_to_double_conversion",
                "__divdf3": "divide",
                "__ieee754_sqrt": "square_root",
                "__muldf3": "multiply",
                "__subdf3": "subtract",
                "extraout_r1": "temp3",
                "extraout_r1_00": "temp6",
                "extraout_r1_01": "temp7",
                "extraout_r1_02": "temp8",
                "extraout_r1_03": "temp9",
                "fabs": "absolute_value",
                "iVar10": "temp12",
                "iVar5": "temp7",
                "iVar6": "i_var6",
                "lVar18": "temp22",
                "local_54": "local_variable4",
                "local_64": "local_variable3",
                "local_68": "local_variable2",
                "local_70": "classification",
                "longlong": "int64_t",
                "nan": "not_a_number",
                "param_1": "input1",
                "param_2": "exponent",
                "param_3": "input3",
                "param_4": "input4",
                "scalbn": "multiply_by_power_of_2",
                "uVar1": "result1",
                "uVar11": "result",
                "uVar12": "temp13",
                "uVar13": "temp17",
                "uVar14": "result",
                "uVar15": "u_var15",
                "uVar16": "temp20",
                "uVar17": "result15",
                "uVar19": "temp20",
                "uVar2": "result2",
                "uVar20": "temp24",
                "uVar3": "temp4",
                "uVar4": "temp4",
                "uVar7": "temp10",
                "uVar8": "abs_exponent",
                "uVar9": "temp12",
                "ulonglong": "uint64_t",
                "undefined4": "uint32_t"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006c0c": {
            "additional_data": {
                "0x3fe00000": {
                    "constant_6": 1
                },
                "0x40000000": {
                    "constant_4": 1
                },
                "0x7ff00000": {
                    "constant_1": 1
                },
                "0x7fffffff": {
                    "constant_2": 1
                },
                "0x80000000": {
                    "constant_5": 1
                },
                "CONCAT44": {
                    "concatenate": 1,
                    "concatenate_64bit": 1
                },
                "FUN_08006c0c": {
                    "calculate_double": 2,
                    "calculate_double_precision": 2,
                    "calculate_float_product_and_addition": 1,
                    "calculate_floating_point": 7,
                    "calculate_floating_point_product": 3,
                    "calculate_floating_point_sum": 1,
                    "calculate_multiply_and_add": 1,
                    "calculate_product": 3,
                    "calculate_product_and_addition": 1,
                    "calculate_product_and_sum": 5,
                    "calculate_product_sum": 3,
                    "multiply_and_add": 2
                },
                "__aeabi_dadd": {
                    "add_double": 2,
                    "add_doubles": 1
                },
                "__divdf3": {
                    "divide_double": 2,
                    "divide_doubles": 1
                },
                "__muldf3": {
                    "multiply_double": 2,
                    "multiply_doubles": 1
                },
                "__subdf3": {
                    "subtract_double": 2,
                    "subtract_doubles": 1
                },
                "iVar10": {
                    "bit_count": 1,
                    "bit_count2": 1,
                    "count": 4,
                    "count3": 1,
                    "counter": 2,
                    "counter3": 1,
                    "counter_var1": 1,
                    "index": 1,
                    "iteration": 1,
                    "loop_count3": 1,
                    "loop_counter": 2,
                    "loop_counter1": 1,
                    "loop_variable_3": 1,
                    "temp10": 2,
                    "temp8": 1,
                    "temp9": 4,
                    "temp_10": 2,
                    "temp_shift_count": 1,
                    "temp_var_10": 1,
                    "temporary": 1
                },
                "iVar3": {
                    "count1": 1,
                    "counter1": 1,
                    "exponent": 5,
                    "exponent_shift": 1,
                    "loop_variable_1": 1,
                    "shift": 4,
                    "shift1": 1,
                    "shift_amount": 3,
                    "shift_amount1": 1,
                    "shift_count": 4,
                    "shift_val": 1,
                    "temp2": 4,
                    "temp_3": 2,
                    "temp_var_3": 1
                },
                "iVar4": {
                    "bit_shift": 1,
                    "count2": 1,
                    "counter": 1,
                    "counter2": 1,
                    "denormal_shift": 1,
                    "divisor": 1,
                    "exponent": 1,
                    "loop_count1": 1,
                    "loop_variable_2": 1,
                    "shift_amount": 1,
                    "shift_amount2": 1,
                    "shift_amount_copy": 1,
                    "shift_count": 2,
                    "temp2": 1,
                    "temp3": 5,
                    "temp4": 2,
                    "temp_4": 2,
                    "temp_shift": 1,
                    "temp_shift_count": 1,
                    "temp_var1": 1,
                    "temp_var2": 1,
                    "temp_var4": 1,
                    "temp_var_4": 1
                },
                "iVar7": {
                    "accumulated_value": 1,
                    "biased_exponent": 1,
                    "bit_count": 1,
                    "exponent": 2,
                    "exponent1": 1,
                    "int_result": 1,
                    "loop_count2": 1,
                    "remainder": 1,
                    "result": 4,
                    "result_high": 1,
                    "sum": 6,
                    "sum1": 1,
                    "temp5": 1,
                    "temp6": 4,
                    "temp7": 1,
                    "temp_7": 2,
                    "temp_var_7": 1
                },
                "param_1": {
                    "dividend": 1,
                    "input1": 8,
                    "input_1": 6,
                    "input_value1": 1,
                    "mantissa": 1,
                    "multiplier": 3,
                    "num1": 2,
                    "number1": 2,
                    "numerator": 2,
                    "operand1": 2,
                    "value1": 2
                },
                "param_2": {
                    "denominator": 2,
                    "divisor": 1,
                    "exponent": 1,
                    "input2": 8,
                    "input_2": 6,
                    "input_value2": 1,
                    "multiplicand": 3,
                    "num2": 2,
                    "number2": 2,
                    "operand2": 2,
                    "value2": 2
                },
                "uVar1": {
                    "quotient": 1,
                    "quotient1": 1,
                    "quotient_high": 1,
                    "result1": 10,
                    "result_1": 1,
                    "result_low": 1,
                    "result_var1": 1,
                    "temp": 2,
                    "temp1": 7,
                    "temp_1": 2,
                    "temp_var1": 3,
                    "temp_var_1": 1
                },
                "uVar11": {
                    "counter_var2": 1,
                    "shifted_num": 1,
                    "temp": 2,
                    "temp10": 4,
                    "temp11": 2,
                    "temp2": 1,
                    "temp3": 3,
                    "temp4": 2,
                    "temp6": 1,
                    "temp7": 1,
                    "temp8": 1,
                    "temp9": 1,
                    "temp_11": 2,
                    "temp_3": 1,
                    "temp_numerator": 1,
                    "temp_significand": 1,
                    "temp_sum": 1,
                    "temp_var11": 2,
                    "temp_var5": 1,
                    "temp_var7": 1,
                    "temp_var_11": 1
                },
                "uVar12": {
                    "final_output": 1,
                    "final_result": 8,
                    "output": 3,
                    "output_value": 1,
                    "result": 14,
                    "result2": 1,
                    "result3": 1,
                    "result_double": 1
                },
                "uVar2": {
                    "mask": 1,
                    "power_of_two": 1,
                    "remainder": 2,
                    "remainder1": 1,
                    "result2": 3,
                    "result_2": 1,
                    "temp1": 7,
                    "temp2": 7,
                    "temp_2": 2,
                    "temp_value": 1,
                    "temp_var1": 1,
                    "temp_var2": 2,
                    "temp_var_2": 1
                },
                "uVar5": {
                    "mantissa1": 1,
                    "quotient": 2,
                    "shifted_numerator": 1,
                    "shifted_param1": 1,
                    "temp1": 2,
                    "temp2": 2,
                    "temp3": 3,
                    "temp4": 5,
                    "temp5": 2,
                    "temp_1": 1,
                    "temp_5": 2,
                    "temp_dividend": 1,
                    "temp_num": 1,
                    "temp_operand1": 1,
                    "temp_shift": 1,
                    "temp_var2": 1,
                    "temp_var3": 1,
                    "temp_var5": 2,
                    "temp_var_5": 1
                },
                "uVar6": {
                    "bits_to_shift": 1,
                    "mantissa2": 1,
                    "power": 1,
                    "remainder": 2,
                    "shifted_number": 1,
                    "shifted_param2": 1,
                    "temp2": 2,
                    "temp3": 1,
                    "temp4": 3,
                    "temp5": 5,
                    "temp6": 2,
                    "temp_2": 1,
                    "temp_6": 2,
                    "temp_operand2": 1,
                    "temp_quotient": 1,
                    "temp_result": 1,
                    "temp_var3": 1,
                    "temp_var4": 1,
                    "temp_var6": 2,
                    "temp_var_6": 1
                },
                "uVar8": {
                    "bit_mask": 1,
                    "carry": 1,
                    "divisor": 1,
                    "exponent2": 1,
                    "final_quotient": 1,
                    "fraction": 1,
                    "high_bits": 1,
                    "mantissa": 2,
                    "output_1": 1,
                    "remainder": 1,
                    "result2": 2,
                    "sign": 1,
                    "significand": 1,
                    "sum2": 1,
                    "temp5": 1,
                    "temp6": 2,
                    "temp7": 4,
                    "temp8": 1,
                    "temp_8": 2,
                    "temp_var3": 1,
                    "temp_var5": 1,
                    "temp_var8": 2,
                    "temp_var_8": 1
                },
                "uVar9": {
                    "mask": 7,
                    "output_2": 1,
                    "sign": 1,
                    "temp": 2,
                    "temp3": 1,
                    "temp5": 1,
                    "temp6": 1,
                    "temp7": 2,
                    "temp8": 4,
                    "temp9": 2,
                    "temp_9": 2,
                    "temp_exponent": 1,
                    "temp_var4": 2,
                    "temp_var6": 1,
                    "temp_var9": 2,
                    "temp_var_9": 1
                }
            },
            "called": [
                "FUN_08000168",
                "FUN_0800016c",
                "FUN_080004d0",
                "FUN_08000724"
            ],
            "calling": [
                "FUN_08005bc8",
                "FUN_08006228",
                "FUN_08005c70"
            ],
            "code": "\nundefined8 calculate_floating_point_product_08006c0c(uint input1,uint input2)\n\n{\n  undefined4 result1;\n  uint temp2;\n  int exponent;\n  int temp3;\n  uint temp4;\n  uint temp5;\n  int sum;\n  uint temp7;\n  uint mask;\n  int count;\n  uint temp10;\n  undefined8 result;\n  \n  if ((~input2 & 0x7ff00000) == 0) {\n    result = multiply_double(input1,input2,input1,input2);\n    result = add_double(input1,input2,(int)result,(int)((ulonglong)result >> 0x20));\n    return result;\n  }\n  if ((int)input2 < 1) {\n    if ((input2 & 0x7fffffff | input1) == 0) {\n      return concatenate_64bit(input2,input1);\n    }\n    if (input2 != 0) {\n      result = subtract_double(input1,input2,input1,input2);\n      result1 = (undefined4)((ulonglong)result >> 0x20);\n      result = divide_double((int)result,result1,(int)result,result1);\n      return result;\n    }\n  }\n  exponent = (int)input2 >> 0x14;\n  if (exponent == 0) {\n    while (input2 == 0) {\n      exponent = exponent + -0x15;\n      input2 = input1 >> 0xb;\n      input1 = input1 << 0x15;\n    }\n    temp2 = 0;\n    for (; -1 < (int)(input2 << 0xb); input2 = input2 << 1) {\n      temp2 = temp2 + 1;\n    }\n    exponent = exponent - (temp2 - 1);\n    input2 = input2 | input1 >> (0x20 - temp2 & 0xff);\n    input1 = input1 << (temp2 & 0xff);\n  }\n  sum = 0;\n  temp2 = input2 & 0xfffff | 0x100000;\n  if ((exponent + -0x3ff) * -0x80000000 < 0) {\n    temp2 = temp2 * 2 - ((int)input1 >> 0x1f);\n    input1 = input1 << 1;\n  }\n  temp2 = temp2 * 2 - ((int)input1 >> 0x1f);\n  temp3 = 0x16;\n  temp4 = 0;\n  temp7 = 0x200000;\n  input1 = input1 << 1;\n  do {\n    count = temp4 + temp7;\n    if (count <= (int)temp2) {\n      temp2 = temp2 - count;\n      temp4 = count + temp7;\n      sum = sum + temp7;\n    }\n    temp3 = temp3 + -1;\n    temp2 = temp2 * 2 - ((int)input1 >> 0x1f);\n    temp7 = temp7 >> 1;\n    input1 = input1 << 1;\n  } while (temp3 != 0);\n  count = 0x20;\n  mask = 0x80000000;\n  temp7 = 0;\n  temp3 = 0;\n  do {\n    temp10 = mask + temp3;\n    temp5 = temp4;\n    if (((int)temp4 < (int)temp2) || ((temp2 == temp4 && (temp10 <= input1)))) {\n      temp3 = temp10 + mask;\n      if (((int)temp10 < 0) && (-1 < temp3)) {\n        temp5 = temp4 + 1;\n      }\n      temp2 = temp2 - temp4;\n      if (input1 < temp10) {\n        temp2 = temp2 - 1;\n      }\n      input1 = input1 - temp10;\n      temp7 = temp7 + mask;\n    }\n    temp2 = temp2 * 2 - ((int)input1 >> 0x1f);\n    count = count + -1;\n    input1 = input1 << 1;\n    mask = mask >> 1;\n    temp4 = temp5;\n  } while (count != 0);\n  if ((input1 | temp2) != 0) {\n    if (temp7 == 0xffffffff) {\n      sum = sum + 1;\n      temp7 = 0;\n    }\n    else {\n      temp7 = temp7 + 1 & 0xfffffffe;\n    }\n  }\n  temp7 = temp7 >> 1;\n  if (sum << 0x1f < 0) {\n    temp7 = temp7 | 0x80000000;\n  }\n  return concatenate_64bit((sum >> 1) + 0x3fe00000 + (exponent + -0x3ff >> 1) * 0x100000,temp7);\n}\n\n",
            "current_name": "calculate_floating_point_product_08006c0c",
            "entrypoint": "0x08006c0c",
            "imported": false,
            "improved": true,
            "renaming": {
                "CONCAT44": "concatenate_64bit",
                "FUN_08006c0c": "calculate_floating_point_product_08006c0c",
                "__aeabi_dadd": "add_double",
                "__divdf3": "divide_double",
                "__muldf3": "multiply_double",
                "__subdf3": "subtract_double",
                "iVar10": "count",
                "iVar3": "exponent",
                "iVar4": "temp3",
                "iVar7": "sum",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "result1",
                "uVar11": "temp10",
                "uVar12": "result",
                "uVar2": "temp2",
                "uVar5": "temp4",
                "uVar6": "temp5",
                "uVar8": "temp7",
                "uVar9": "mask"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006d68": {
            "additional_data": {
                "F1": {
                    "calculate_value": 1
                },
                "FUN_08006d68": {
                    "calculate": 1,
                    "calculate_polynomial": 1,
                    "calculate_result": 4,
                    "calculate_sqrt": 1,
                    "calculate_square": 3,
                    "calculate_square_root": 17,
                    "calculate_value": 2
                },
                "aeabi_dadd": {
                    "add": 1
                },
                "aeabi_dcmpgt": {
                    "compare": 1
                },
                "divdf3": {
                    "divide": 1
                },
                "fabs": {
                    "absolute": 1
                },
                "iVar1": {
                    "comparison": 3,
                    "comparison_result": 23,
                    "comparison_var": 1,
                    "condition": 2,
                    "temp_var": 1
                },
                "muldf3": {
                    "multiply": 1
                },
                "param_1": {
                    "input1": 17,
                    "input_1": 3,
                    "input_int": 1,
                    "input_integer": 1,
                    "input_param1": 3,
                    "input_value1": 1,
                    "int_input": 1,
                    "num1": 3,
                    "value1": 1
                },
                "param_2": {
                    "input2": 17,
                    "input_2": 3,
                    "input_float": 1,
                    "input_param2": 3,
                    "input_uint": 1,
                    "input_value2": 1,
                    "num2": 3,
                    "uint_input": 1,
                    "value2": 1
                },
                "param_3": {
                    "input3": 14,
                    "input_3": 3,
                    "input_param3": 3,
                    "input_value3": 1,
                    "num3": 3,
                    "param3": 1,
                    "param_3": 1,
                    "uint_param3": 1,
                    "unused_parameter1": 1,
                    "value3": 1
                },
                "param_4": {
                    "input4": 14,
                    "input_4": 3,
                    "input_param4": 3,
                    "input_value4": 1,
                    "num4": 3,
                    "param4": 1,
                    "param_4": 1,
                    "uint_param4": 1,
                    "unused_parameter2": 1,
                    "value4": 1
                },
                "subdf3": {
                    "subtract": 1
                },
                "uVar1": {
                    "combined_param": 1,
                    "temp13": 1
                },
                "uVar10": {
                    "calculation_result2": 1,
                    "final_result_high": 1,
                    "output_var2": 1,
                    "result2": 2,
                    "result_float_2": 1,
                    "result_high": 1,
                    "result_high_final": 1,
                    "result_low": 1,
                    "temp": 5,
                    "temp5": 1,
                    "temp6": 1,
                    "temp7": 1,
                    "temp_result": 9,
                    "temp_result1": 1,
                    "temp_result_1": 1,
                    "u_var10": 1
                },
                "uVar11": {
                    "temp_result2": 1
                },
                "uVar2": {
                    "abs_value_low": 1,
                    "int_part": 1,
                    "lower_part1": 1,
                    "result1": 4,
                    "result1_1": 1,
                    "result1_low": 1,
                    "result1_lower": 1,
                    "result_integer_1": 1,
                    "result_low": 3,
                    "result_var1": 1,
                    "temp1": 8,
                    "temp12": 1,
                    "temp_1": 1,
                    "temp_2": 1,
                    "temp_var1": 2,
                    "temp_var_1": 1,
                    "value1": 1
                },
                "uVar3": {
                    "abs_value_high": 1,
                    "frac_part": 1,
                    "result1_2": 1,
                    "result1_high": 1,
                    "result1_upper": 1,
                    "result2": 4,
                    "result_high": 3,
                    "result_integer_2": 1,
                    "result_var2": 1,
                    "temp11": 1,
                    "temp2": 8,
                    "temp_2": 1,
                    "temp_3": 1,
                    "temp_var2": 2,
                    "temp_var_2": 1,
                    "upper_part1": 1,
                    "value2": 1
                },
                "uVar4": {
                    "lower_part2": 1,
                    "result2_1": 1,
                    "result2_low": 1,
                    "result2_lower": 1,
                    "result3": 3,
                    "result_integer_3": 1,
                    "result_var3": 1,
                    "temp1": 3,
                    "temp10": 1,
                    "temp3": 8,
                    "temp_1": 1,
                    "temp_3": 1,
                    "temp_4": 1,
                    "temp_low": 2,
                    "temp_var3": 2,
                    "temp_var_3": 1,
                    "value3": 1
                },
                "uVar5": {
                    "result2_2": 1,
                    "result2_high": 1,
                    "result2_upper": 1,
                    "result4": 3,
                    "result_integer_4": 1,
                    "result_var4": 1,
                    "temp2": 3,
                    "temp4": 8,
                    "temp9": 1,
                    "temp_2": 1,
                    "temp_4": 1,
                    "temp_5": 1,
                    "temp_high": 2,
                    "temp_var4": 2,
                    "temp_var_4": 1,
                    "upper_part2": 1,
                    "value4": 1
                },
                "uVar6": {
                    "lower_part3": 1,
                    "mul_low": 2,
                    "result3_1": 1,
                    "result3_low": 1,
                    "result3_lower": 1,
                    "result5": 3,
                    "result_integer_5": 1,
                    "result_var5": 1,
                    "temp3": 3,
                    "temp5": 8,
                    "temp8": 1,
                    "temp_3": 1,
                    "temp_5": 1,
                    "temp_6": 1,
                    "temp_var5": 2,
                    "temp_var_5": 1,
                    "value5": 1
                },
                "uVar7": {
                    "mul_high": 2,
                    "result3_2": 1,
                    "result3_high": 1,
                    "result3_upper": 1,
                    "result6": 3,
                    "result_integer_6": 1,
                    "result_var6": 1,
                    "temp4": 3,
                    "temp6": 8,
                    "temp7": 1,
                    "temp_4": 1,
                    "temp_6": 1,
                    "temp_7": 1,
                    "temp_var6": 2,
                    "temp_var_6": 1,
                    "upper_part3": 1,
                    "value6": 1
                },
                "uVar8": {
                    "abs_input": 1,
                    "abs_input2": 4,
                    "abs_input_uint": 1,
                    "absolute_value": 2,
                    "input_float_unsigned": 1,
                    "modified_input2": 1,
                    "modified_input_param2": 1,
                    "nonneg_input2": 1,
                    "num2_positive": 1,
                    "positive_input2": 1,
                    "positive_input_2": 1,
                    "positive_num2": 1,
                    "positive_param2": 1,
                    "temp": 1,
                    "temp7": 3,
                    "temp_7": 1,
                    "temp_value": 2,
                    "temp_var_7": 1,
                    "u_var8": 1,
                    "unsigned_input2": 1,
                    "unsigned_num2": 1,
                    "unsigned_var": 1
                },
                "uVar9": {
                    "calculation_result1": 1,
                    "final_result": 4,
                    "final_result_low": 1,
                    "output_var1": 1,
                    "result": 15,
                    "result1": 2,
                    "result2": 1,
                    "result_float_1": 1,
                    "result_high": 1,
                    "result_low": 1,
                    "result_low_final": 1,
                    "u_var9": 1
                }
            },
            "called": [
                "FUN_0800708c",
                "FUN_08000168",
                "FUN_080004d0",
                "FUN_0800016c",
                "FUN_08000724",
                "FUN_080009f0"
            ],
            "calling": [
                "FUN_08006070"
            ],
            "code": "\nundefined8 calculate_square_root_08006d68(int input1,uint input2,undefined4 input3,undefined4 input4)\n\n{\n  int comparison_result;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  undefined4 temp5;\n  undefined4 temp6;\n  uint abs_input2;\n  undefined8 result;\n  undefined8 temp_result;\n  \n  result = CONCAT44(input2,input1);\n  abs_input2 = input2 & 0x7fffffff;\n  if (abs_input2 < 0x44100000) {\n    if (abs_input2 < 0x3fdc0000) {\n      if (abs_input2 < 0x3e200000) {\n        temp_result = __aeabi_dadd(input1,input2,0x8800759c,0x7e37e43c,input4);\n        comparison_result = __compare((int)temp_result,(int)((ulonglong)temp_result >> 0x20),0,0x3ff00000);\n        if (comparison_result != 0) {\n          return result;\n        }\n      }\n      comparison_result = -1;\n    }\n    else {\n      result = absolute();\n      temp2 = (undefined4)((ulonglong)result >> 0x20);\n      temp1 = (undefined4)result;\n      if (abs_input2 < 0x3ff30000) {\n        if (abs_input2 < 0x3fe60000) {\n          result = __aeabi_dadd(temp1,temp2,temp1,temp2);\n          result = __subtract((int)result,(int)((ulonglong)result >> 0x20),0,0x3ff00000);\n          temp_result = __aeabi_dadd(temp1,temp2,0,0x40000000);\n          result = __divide((int)result,(int)((ulonglong)result >> 0x20),(int)temp_result,\n                           (int)((ulonglong)temp_result >> 0x20));\n          comparison_result = 0;\n        }\n        else {\n          result = __subtract(temp1,temp2,0,0x3ff00000);\n          temp_result = __aeabi_dadd(temp1,temp2,0,0x3ff00000);\n          result = __divide((int)result,(int)((ulonglong)result >> 0x20),(int)temp_result,\n                           (int)((ulonglong)temp_result >> 0x20));\n          comparison_result = 1;\n        }\n      }\n      else if (abs_input2 < 0x40038000) {\n        result = __subtract(temp1,temp2,0,0x3ff80000);\n        temp_result = __multiply(temp1,temp2,0,0x3ff80000);\n        temp_result = __aeabi_dadd((int)temp_result,(int)((ulonglong)temp_result >> 0x20),0,0x3ff00000);\n        result = __divide((int)result,(int)((ulonglong)result >> 0x20),(int)temp_result,\n                         (int)((ulonglong)temp_result >> 0x20));\n        comparison_result = 2;\n      }\n      else {\n        result = __divide(0,0xbff00000,temp1,temp2);\n        comparison_result = 3;\n      }\n    }\n    temp6 = (undefined4)((ulonglong)result >> 0x20);\n    temp5 = (undefined4)result;\n    result = __multiply(temp5,temp6,temp5,temp6);\n    temp3 = (undefined4)((ulonglong)result >> 0x20);\n    temp1 = (undefined4)result;\n    result = __multiply(temp1,temp3,temp1,temp3);\n    temp4 = (undefined4)((ulonglong)result >> 0x20);\n    temp2 = (undefined4)result;\n    result = __multiply(temp2,temp4,0xe322da11,0x3f90ad3a);\n    result = __aeabi_dadd((int)result,(int)((ulonglong)result >> 0x20),0x24760deb,0x3fa97b4b);\n    result = __multiply((int)result,(int)((ulonglong)result >> 0x20),temp2,temp4);\n    result = __aeabi_dadd((int)result,(int)((ulonglong)result >> 0x20),0xa0d03d51,0x3fb10d66);\n    result = __multiply((int)result,(int)((ulonglong)result >> 0x20),temp2,temp4);\n    result = __aeabi_dadd((int)result,(int)((ulonglong)result >> 0x20),0xc54c206e,0x3fb745cd);\n    result = __multiply((int)result,(int)((ulonglong)result >> 0x20),temp2,temp4);\n    result = __aeabi_dadd((int)result,(int)((ulonglong)result >> 0x20),0x920083ff,0x3fc24924);\n    result = __multiply((int)result,(int)((ulonglong)result >> 0x20),temp2,temp4);\n    result = __aeabi_dadd((int)result,(int)((ulonglong)result >> 0x20),0x5555550d,0x3fd55555);\n    result = __multiply((int)result,(int)((ulonglong)result >> 0x20),temp1,temp3);\n    temp1 = (undefined4)((ulonglong)result >> 0x20);\n    temp_result = __multiply(temp2,temp4,0x2c6a6c2f,0xbfa2b444);\n    temp_result = __subtract((int)temp_result,(int)((ulonglong)temp_result >> 0x20),0x52defd9a,0x3fadde2d);\n    temp_result = __multiply((int)temp_result,(int)((ulonglong)temp_result >> 0x20),temp2,temp4);\n    temp_result = __subtract((int)temp_result,(int)((ulonglong)temp_result >> 0x20),0xaf749a6d,0x3fb3b0f2);\n    temp_result = __multiply((int)temp_result,(int)((ulonglong)temp_result >> 0x20),temp2,temp4);\n    temp_result = __subtract((int)temp_result,(int)((ulonglong)temp_result >> 0x20),0xfe231671,0x3fbc71c6);\n    temp_result = __multiply((int)temp_result,(int)((ulonglong)temp_result >> 0x20),temp2,temp4);\n    temp_result = __subtract((int)temp_result,(int)((ulonglong)temp_result >> 0x20),0x9998ebc4,0x3fc99999);\n    temp_result = __multiply((int)temp_result,(int)((ulonglong)temp_result >> 0x20),temp2,temp4);\n    temp2 = (undefined4)((ulonglong)temp_result >> 0x20);\n    if (comparison_result == -1) {\n      result = __aeabi_dadd((int)result,temp1,(int)temp_result,temp2);\n      result = __multiply((int)result,(int)((ulonglong)result >> 0x20),temp5,temp6);\n      result = __subtract(temp5,temp6,(int)result,(int)((ulonglong)result >> 0x20));\n    }\n    else {\n      result = __aeabi_dadd((int)result,temp1,(int)temp_result,temp2);\n      result = __multiply((int)result,(int)((ulonglong)result >> 0x20),temp5,temp6);\n      comparison_result = comparison_result * 8;\n      result = __subtract((int)result,(int)((ulonglong)result >> 0x20),\n                       *(undefined4 *)(&UNK_08007410 + comparison_result),*(undefined4 *)(&UNK_08007414 + comparison_result)\n                      );\n      result = __subtract((int)result,(int)((ulonglong)result >> 0x20),temp5,temp6);\n      result = __subtract(*(undefined4 *)(&UNK_080073f0 + comparison_result),*(undefined4 *)(&UNK_080073f4 + comparison_result)\n                       ,(int)result,(int)((ulonglong)result >> 0x20));\n      if ((int)input2 < 0) {\n        result = CONCAT44((int)((ulonglong)result >> 0x20) + -0x80000000,(int)result);\n      }\n    }\n  }\n  else if ((abs_input2 < 0x7ff00001) && ((abs_input2 != 0x7ff00000 || (input1 == 0)))) {\n    if ((int)input2 < 1) {\n      result = 0xbff921fb54442d18;\n    }\n    else {\n      result = 0x3ff921fb54442d18;\n    }\n  }\n  else {\n    result = __aeabi_dadd(input1,input2,input1,input2,input4);\n  }\n  return result;\n}\n\n",
            "current_name": "calculate_square_root_08006d68",
            "entrypoint": "0x08006d68",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006d68": "calculate_square_root_08006d68",
                "aeabi_dcmpgt": "compare",
                "divdf3": "divide",
                "fabs": "absolute",
                "iVar1": "comparison_result",
                "muldf3": "multiply",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "subdf3": "subtract",
                "uVar1": "temp13",
                "uVar10": "temp_result",
                "uVar2": "temp1",
                "uVar3": "temp2",
                "uVar4": "temp3",
                "uVar5": "temp4",
                "uVar6": "temp5",
                "uVar7": "temp6",
                "uVar8": "abs_input2",
                "uVar9": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800708c": {
            "called": [],
            "calling": [
                "FUN_08006070",
                "FUN_08006d68",
                "FUN_08006228",
                "FUN_08005854",
                "FUN_08005c70"
            ],
            "code": "\nvoid FUNC_0800708c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800708c",
            "entrypoint": "0x0800708c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800708c": "FUNC_0800708c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08007092": {
            "additional_data": {
                "DAT_": {
                    "dat_": 1
                },
                "FUN_08007092": {
                    "addition_with_shift": 1,
                    "apply_mask": 1,
                    "calculate_bit_position": 1,
                    "calculate_bitwise_shift": 1,
                    "calculate_offset": 1,
                    "calculate_positive_bit_count": 1,
                    "calculate_shift": 1,
                    "calculate_shifted_bit": 2,
                    "calculate_shifted_bit_count": 1,
                    "calculate_shifted_value": 1,
                    "calculate_value_from_param": 1,
                    "clear_bit_from_msb": 1,
                    "convert_unsigned_integer": 1,
                    "extract_bit": 2,
                    "extract_bit_range": 1,
                    "get_bitwise_result": 1,
                    "get_most_significant_bit": 1,
                    "get_sign_bit": 3,
                    "get_sign_bit_set_count": 1,
                    "get_sign_bit_value": 1,
                    "reverse_bits": 2,
                    "reverse_bitwise_operation": 1,
                    "set_highest_bit_and_shift_right": 1,
                    "set_highest_bit_to1": 1,
                    "set_upper_bit": 1,
                    "sign_bit_extension": 1
                },
                "PTR_": {
                    "ptr_": 1
                },
                "local_var_1": {
                    "bitwise_or_result": 1
                },
                "local_var_2": {
                    "shifted_result": 1
                },
                "param_1": {
                    "arg1": 1,
                    "base_address": 1,
                    "bits_to_reverse": 1,
                    "first_input": 1,
                    "flag": 4,
                    "input": 2,
                    "input_constant": 1,
                    "input_flag": 7,
                    "input_param": 1,
                    "input_value": 5,
                    "param_flag": 1,
                    "status": 1,
                    "status_flag": 2,
                    "undefined_parameter": 1,
                    "value": 1,
                    "value1": 1
                },
                "param_2": {
                    "arg2": 1,
                    "bit_mask": 2,
                    "bit_pattern": 2,
                    "bitmask": 3,
                    "bits": 1,
                    "data": 1,
                    "input": 1,
                    "input_number": 1,
                    "input_value": 6,
                    "mask": 2,
                    "number": 1,
                    "offset": 1,
                    "original_bits": 1,
                    "second_input": 1,
                    "unsigned_int": 1,
                    "value": 5,
                    "value2": 1
                },
                "param_3": {
                    "new_bit": 1,
                    "result": 4,
                    "shift_amount": 1,
                    "shifted_value": 2
                },
                "param_4": {
                    "ones_complement": 1
                },
                "param_5": {
                    "shift_amount": 1
                },
                "result": {
                    "cleared_bit": 1,
                    "new_offset": 1
                },
                "return": {
                    "bit_position": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005900"
            ],
            "code": "\nuint get_sign_bit_set_count_08007092(undefined4 input_flag,uint input_value)\n\n{\n  bit_position (input_value | 0x80000000) + 0x100000 >> 0x1f;\n}\n\n",
            "current_name": "get_sign_bit_set_count_08007092",
            "entrypoint": "0x08007092",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007092": "get_sign_bit_set_count_08007092",
                "param_1": "input_flag",
                "param_2": "input_value",
                "return": "bit_position"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800709e": {
            "additional_data": {
                "0": {
                    "success_code": 1
                },
                "DAT_FUN_0800709e": {
                    "": 1
                },
                "FUN_0800709e": {
                    "do_nothing": 1,
                    "get_default_value": 1,
                    "get_error_code": 1,
                    "get_zero": 1,
                    "initialize": 16,
                    "initialize_application": 3,
                    "initialize_data": 1,
                    "initialize_function": 1,
                    "initialize_program": 3,
                    "initialize_system": 1,
                    "initialize_value": 1,
                    "return_zero": 1
                },
                "PTR_FUN_0800709e": {
                    "": 1
                },
                "PTR_param_1": {
                    "parameter_1": 1
                },
                "PTR_param_2": {
                    "parameter_2": 1
                },
                "RET_0800709e": {
                    "status": 1
                },
                "original_parameter_name_1": {
                    "parameter_1": 1
                },
                "original_variable_name_1": {
                    "count": 1,
                    "counter": 1
                },
                "original_variable_name_2": {
                    "result": 1
                },
                "return": {
                    "result": 2
                },
                "return_0": {
                    "result": 1
                },
                "undefined4": {
                    "int": 2,
                    "void": 13
                }
            },
            "called": [],
            "calling": [
                "FUN_08005bc8",
                "FUN_08005900",
                "FUN_08005854"
            ],
            "code": "\nvoid initialize_application_0800709e(void)\n\n{\n  result 0;\n}\n\n",
            "current_name": "initialize_application_0800709e",
            "entrypoint": "0x0800709e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800709e": "initialize_application_0800709e",
                "return": "result",
                "undefined4": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080070a4": {
            "additional_data": {
                "0x7ff8000000000000": {
                    "infinity": 8,
                    "positive_infinity": 1
                },
                "DAT_XXXXXXXX": {
                    "new_name": 1
                },
                "FUN_080070a4": {
                    "get_default_nan_value": 1,
                    "get_floating_point_infinity": 1,
                    "get_infinite_value": 1,
                    "get_infinity": 19,
                    "get_infinity_value": 6,
                    "get_maximum_double_value": 1,
                    "get_nan_value": 1,
                    "get_positive_infinity": 1
                },
                "PTR_XXXXXXXX": {
                    "new_name": 1
                },
                "return": {
                    "result": 1
                },
                "return_value": {
                    "infinite_value": 1
                },
                "undefined8": {
                    "double": 12
                }
            },
            "called": [],
            "calling": [
                "FUN_08006228",
                "FUN_08005854"
            ],
            "code": "\ndouble get_infinity_value_080070a4(void)\n\n{\n  result 0x7ff8000000000000;\n}\n\n",
            "current_name": "get_infinity_value_080070a4",
            "entrypoint": "0x080070a4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080070a4": "get_infinity_value_080070a4",
                "return": "result",
                "undefined8": "double"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080070b0": {
            "additional_data": {
                "FUN_08000168": {
                    "add": 1
                },
                "FUN_0800016c": {
                    "subtract": 1
                },
                "FUN_080070b0": {
                    "calculate": 1,
                    "calculate_dadd": 1,
                    "calculate_double_addition": 1,
                    "calculate_result": 16,
                    "calculate_square_root": 1,
                    "calculate_sum": 3,
                    "calculate_updated_value": 1,
                    "perform_calculation": 2
                },
                "iVar1": {
                    "constant3": 1,
                    "index": 10,
                    "negative_mult": 1,
                    "result1": 1,
                    "shift": 2,
                    "shift_amount": 1,
                    "shift_count": 1,
                    "shift_estimation": 1,
                    "shift_value": 1,
                    "shifted_index": 1,
                    "shifted_input2": 1,
                    "shifted_input_2_sign": 1,
                    "shifted_param2": 1,
                    "shifted_sign": 1,
                    "temp_var1": 1,
                    "temp_var_1": 1,
                    "temp_var_7": 1,
                    "var7": 1
                },
                "param_1": {
                    "input1": 15,
                    "input_1": 4,
                    "input_a": 3,
                    "input_param1": 1,
                    "input_param_1": 1,
                    "input_value1": 1,
                    "input_value_1": 4,
                    "num1": 2
                },
                "param_2": {
                    "input2": 15,
                    "input_2": 4,
                    "input_b": 3,
                    "input_param2": 1,
                    "input_param_2": 1,
                    "input_value2": 1,
                    "input_value_2": 4,
                    "num2": 2
                },
                "param_3": {
                    "factor": 1,
                    "input3": 15,
                    "input_3": 4,
                    "input_c": 3,
                    "input_param3": 1,
                    "input_param_3": 1,
                    "input_value3": 1,
                    "input_value_3": 4,
                    "num3": 1
                },
                "uVar1": {
                    "constant": 1,
                    "tmp": 1
                },
                "uVar2": {
                    "array1_value": 1,
                    "buffer1": 1,
                    "constant1": 2,
                    "constant_a": 1,
                    "first_value": 2,
                    "result1": 1,
                    "result2": 1,
                    "shifted_input_2_var1": 1,
                    "some_data": 1,
                    "some_data1": 1,
                    "temp_1": 1,
                    "temp_var1": 1,
                    "temp_var2": 1,
                    "temp_var_1": 3,
                    "temp_var_2": 1,
                    "value1": 5,
                    "value_a": 1,
                    "var1": 4,
                    "var_1": 1,
                    "variable_1": 1
                },
                "uVar3": {
                    "adjusted_param2": 1,
                    "input2_copy": 1,
                    "modified_b": 1,
                    "modified_input2": 3,
                    "modified_input_b": 1,
                    "modified_param2": 1,
                    "modified_value": 1,
                    "result": 1,
                    "result1": 1,
                    "result3": 1,
                    "temp": 1,
                    "temp1": 3,
                    "temp_2": 1,
                    "temp_input2": 2,
                    "temp_var3": 1,
                    "temp_var_2": 3,
                    "temp_var_3": 1,
                    "u_var1": 1,
                    "updated_b": 1,
                    "updated_input2": 1,
                    "updated_input_2": 1,
                    "updated_input_value_2": 1,
                    "var2": 1,
                    "var_2": 1
                },
                "uVar4": {
                    "buffer2": 1,
                    "constant2": 2,
                    "constant_b": 1,
                    "more_data": 1,
                    "result2": 2,
                    "result4": 1,
                    "second_value": 2,
                    "shifted_input_2_var2": 1,
                    "some_data2": 1,
                    "temp_3": 1,
                    "temp_var2": 1,
                    "temp_var4": 1,
                    "temp_var_3": 3,
                    "temp_var_4": 1,
                    "value2": 5,
                    "value_b": 1,
                    "var2": 3,
                    "var3": 1,
                    "var_3": 1,
                    "variable_2": 1
                },
                "uVar5": {
                    "adjusted_value": 1,
                    "masked_input": 1,
                    "modified_input": 2,
                    "modified_input1": 1,
                    "modified_param1": 1,
                    "modified_result": 1,
                    "result": 1,
                    "result3": 1,
                    "result5": 1,
                    "temp1": 1,
                    "temp2": 3,
                    "temp_4": 1,
                    "temp_result": 2,
                    "temp_var3": 1,
                    "temp_var5": 1,
                    "temp_var_4": 3,
                    "temp_var_5": 1,
                    "updated_a": 1,
                    "updated_input1": 1,
                    "updated_input_1": 1,
                    "updated_input_value": 1,
                    "updated_temp": 1,
                    "updated_value": 1,
                    "var4": 1,
                    "var_4": 1
                },
                "uVar6": {
                    "diff_shifted_input_2": 1,
                    "difference": 13,
                    "exponent": 1,
                    "result6": 1,
                    "shift_amount": 1,
                    "shifted_and_adjusted_value": 1,
                    "shifted_result": 1,
                    "shifted_value": 1,
                    "temp2": 1,
                    "temp3": 2,
                    "temp_5": 1,
                    "temp_var6": 1,
                    "temp_var_5": 3,
                    "temp_var_6": 1,
                    "var5": 1,
                    "var_5": 1
                },
                "uVar6_2": {
                    "adjusted_value2": 1
                },
                "uVar7": {
                    "mask": 1,
                    "result7": 1,
                    "shift_result": 1,
                    "shifted_b": 1,
                    "shifted_bits": 5,
                    "shifted_input2": 4,
                    "shifted_input_2": 1,
                    "shifted_input_value_2": 1,
                    "shifted_num": 2,
                    "shifted_param2": 1,
                    "shifted_right": 1,
                    "shifted_value": 2,
                    "temp4": 2,
                    "temp_6": 1,
                    "temp_var7": 1,
                    "temp_var_6": 3,
                    "temp_var_7": 1,
                    "var6": 1,
                    "var_6": 1
                },
                "uVar8": {
                    "array2_value": 1,
                    "final_result": 3,
                    "result": 25,
                    "result8": 1,
                    "temp_result": 1
                },
                "uVar9": {
                    "tmp2": 1
                }
            },
            "called": [
                "FUN_08000168",
                "FUN_0800016c"
            ],
            "calling": [
                "FUN_08005900"
            ],
            "code": "\nundefined8 calculate_result_080070b0(uint input1,uint input2,undefined4 input3)\n\n{\n  int index;\n  undefined4 value1;\n  uint modified_input2;\n  undefined4 value2;\n  uint temp_var_4;\n  uint difference;\n  uint shifted_bits;\n  undefined8 result;\n  \n  shifted_bits = (input2 << 1) >> 0x15;\n  difference = shifted_bits - 0x3ff;\n  modified_input2 = input2;\n  if ((int)difference < 0x14) {\n    if ((int)difference < 0) {\n      if ((input2 & 0x7fffffff | input1) == 0) {\n        return CONCAT44(input2,input1);\n      }\n      modified_input2 = input2 & 0xfffff | input1;\n      index = ((int)input2 >> 0x1f) * -8;\n      value1 = *(undefined4 *)(&DAT_08007430 + index);\n      value2 = *(undefined4 *)(&DAT_08007434 + index);\n      result = __aeabi_dadd(input1,(-modified_input2 | modified_input2) >> 0xc & 0x80000 | input2 & 0xfffe0000,value1,\n                           value2,input1,input2,input3);\n      result = __subdf3((int)result,(int)((ulonglong)result >> 0x20),value1,value2);\n      return CONCAT44((uint)((ulonglong)result >> 0x20) & 0x7fffffff | input2 & 0x80000000,\n                      (int)result);\n    }\n    shifted_bits = 0xfffff >> (difference & 0xff);\n    if ((input2 & shifted_bits | input1) == 0) {\n      return CONCAT44(input2,input1);\n    }\n    shifted_bits = shifted_bits >> 1;\n    temp_var_4 = input2 & shifted_bits | input1;\n    if (temp_var_4 != 0) {\n      if (difference == 0x13) {\n        temp_var_4 = 0x80000000;\n      }\n      else {\n        temp_var_4 = 0;\n      }\n      modified_input2 = 0x40000 >> (difference & 0xff) | input2 & ~shifted_bits;\n    }\n  }\n  else {\n    if (0x33 < (int)difference) {\n      if (difference != 0x400) {\n        return CONCAT44(input2,input1);\n      }\n      result = __aeabi_dadd();\n      return result;\n    }\n    shifted_bits = shifted_bits - 0x413;\n    difference = 0xffffffff >> (shifted_bits & 0xff);\n    if ((input1 & difference) == 0) {\n      return CONCAT44(input2,input1);\n    }\n    difference = difference >> 1;\n    temp_var_4 = input1;\n    if ((input1 & difference) != 0) {\n      temp_var_4 = 0x40000000 >> (shifted_bits & 0xff) | input1 & ~difference;\n    }\n  }\n  index = ((int)input2 >> 0x1f) * -8;\n  value1 = *(undefined4 *)(&DAT_08007430 + index);\n  value2 = *(undefined4 *)(&DAT_08007434 + index);\n  result = __aeabi_dadd(temp_var_4,modified_input2,value1,value2,input1,input2,input3);\n  result = __subdf3((int)result,(int)((ulonglong)result >> 0x20),value1,value2);\n  return result;\n}\n\n",
            "current_name": "calculate_result_080070b0",
            "entrypoint": "0x080070b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080070b0": "calculate_result_080070b0",
                "iVar1": "index",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "uVar2": "value1",
                "uVar3": "modified_input2",
                "uVar4": "value2",
                "uVar5": "temp_var_4",
                "uVar6": "difference",
                "uVar7": "shifted_bits",
                "uVar8": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080071c0": {
            "additional_data": {
                "0x100000": {
                    "constant6": 1,
                    "constant_8": 1,
                    "shift_value": 2
                },
                "0x1a56e1f": {
                    "constant_2": 1,
                    "copysign2": 1,
                    "mantissa_high_default": 1,
                    "sign_bit_higher": 1
                },
                "0x35": {
                    "constant7": 1,
                    "constant_5": 1,
                    "overflow_value": 1,
                    "threshold_value2": 1
                },
                "0x36": {
                    "adjusted_overflow_value": 1,
                    "constant3": 1,
                    "constant_4": 1,
                    "threshold_value3": 1
                },
                "0x3c900000": {
                    "constant8": 1,
                    "constant_9": 1,
                    "default_value": 1,
                    "mantissa_high_fallback": 1,
                    "offset_float_value": 1
                },
                "0x43500000": {
                    "constant1": 1
                },
                "0x7e37e43c": {
                    "constant1": 1,
                    "constant10": 1,
                    "constant_11": 1,
                    "infinity_sign_bit_higher": 1,
                    "mantissa_high_negative": 1,
                    "special_case2": 1
                },
                "0x7ff": {
                    "constant4": 1,
                    "constant_6": 1,
                    "max_range": 1,
                    "max_value": 1
                },
                "0x800fffff": {
                    "constant5": 1,
                    "constant_7": 1,
                    "mask_value": 2
                },
                "0x8800759c": {
                    "constant2": 1,
                    "constant9": 1,
                    "constant_10": 1,
                    "infinity_sign_bit_lower": 1,
                    "mantissa_low_negative": 1,
                    "special_case1": 1
                },
                "0xc2f8f359": {
                    "constant_1": 1,
                    "copysign1": 1,
                    "mantissa_low_default": 1,
                    "sign_bit_lower": 1
                },
                "0xc351": {
                    "check_value": 1,
                    "constant2": 1,
                    "constant_3": 1,
                    "threshold_value1": 1
                },
                "CONCAT44": {
                    "combine_integers": 1,
                    "concatenate": 1,
                    "concatenate_values": 1
                },
                "COPY_SIGN": {
                    "copy_sign": 1
                },
                "COPY_SIGN_MASK": {
                    "copy_sign_mask": 1
                },
                "FUNC_0800729c": {
                    "function1": 1,
                    "helper_func1": 1,
                    "helper_func_1": 1,
                    "helper_function_1": 1,
                    "some_function": 1,
                    "some_function1": 1,
                    "subfunction_1": 1
                },
                "FUN_0800016c": {
                    "copy_sign": 1,
                    "function3": 1,
                    "helper_func3": 1,
                    "helper_func_3": 1,
                    "helper_function3": 1,
                    "helper_function_3": 1,
                    "some_function3": 1,
                    "sub_function3": 1,
                    "subfunction_3": 1,
                    "unknown_func_3": 1
                },
                "FUN_080004d0": {
                    "calculate_muldf3": 1,
                    "function2": 1,
                    "helper_func2": 1,
                    "helper_func_2": 1,
                    "helper_function2": 1,
                    "helper_function_2": 1,
                    "some_function2": 1,
                    "sub_function2": 1,
                    "subfunction_2": 1,
                    "unknown_func_2": 1
                },
                "FUN_080071c0": {
                    "calculate": 4,
                    "calculate_division": 1,
                    "calculate_exponential": 1,
                    "calculate_float_product": 1,
                    "calculate_float_value": 1,
                    "calculate_product": 12,
                    "calculate_product_and_exponent": 1,
                    "calculate_product_and_operation": 1,
                    "calculate_product_with_conditions": 1,
                    "calculate_result": 3,
                    "compute_result": 1,
                    "multiply_and_copy": 1
                },
                "FUN_0800729c": {
                    "helper_function1": 1,
                    "sub_function1": 1,
                    "unknown_func_1": 1
                },
                "LAB_080071ec": {
                    "check_difference": 1,
                    "check_exponent": 1,
                    "fallback_label": 1,
                    "label1": 1
                },
                "LAB_08007210": {
                    "handle_infinity": 1,
                    "handle_special_cases": 1,
                    "handle_zero_shift": 1,
                    "label2": 1
                },
                "LAB_0800722e": {
                    "calculate_final_result": 1,
                    "label3": 1,
                    "multiply_result": 1,
                    "return_product_label": 1
                },
                "SCARRY4": {
                    "carry_check": 1,
                    "check_overflow": 1,
                    "is_carry_set": 1,
                    "is_signed_overflow": 1,
                    "is_subtraction_carry": 1,
                    "is_subtraction_overflow": 1,
                    "is_sum_overflow": 1,
                    "signed_carries": 1,
                    "signed_carry": 2,
                    "signed_carry_check": 2
                },
                "__aeabi_dadd": {
                    "add": 4,
                    "add_double": 4,
                    "add_double_float": 2,
                    "add_double_precision_float": 1,
                    "add_doubles": 1,
                    "add_float": 1,
                    "add_floats": 1,
                    "add_numbers": 1,
                    "double_addition": 1
                },
                "__muldf3": {
                    "multiply": 5,
                    "multiply_double": 3,
                    "multiply_double_float": 2,
                    "multiply_double_precision": 1,
                    "multiply_double_precision_float": 1,
                    "multiply_doubles": 1,
                    "multiply_float": 1,
                    "multiply_floats": 1,
                    "multiply_numbers": 1
                },
                "concat44": {
                    "concatenate": 1,
                    "create_double_from_parts": 1
                },
                "concate44": {
                    "concatenate": 1
                },
                "copysign": {
                    "apply_sign": 1,
                    "copy_sign": 10,
                    "copy_sign_float": 1,
                    "copy_sign_floats": 1,
                    "copy_signature": 1,
                    "create_signed_double": 1,
                    "create_with_sign": 1
                },
                "iVar3": {
                    "added_value": 1,
                    "combined_exponent": 1,
                    "exponent_sum": 1,
                    "final_power": 1,
                    "power_sum": 1,
                    "result2": 1,
                    "result_2": 3,
                    "result_exp": 1,
                    "result_exponent": 1,
                    "resultant_exponent": 1,
                    "shifted_result": 1,
                    "sum": 11,
                    "sum_exponent": 1,
                    "sum_of_exponent": 1,
                    "sum_of_exponent_shiftedparam2": 1,
                    "temp_value_2": 1,
                    "total_exp": 1
                },
                "param_1": {
                    "a": 1,
                    "base": 1,
                    "dividend": 1,
                    "input1": 12,
                    "input_1": 5,
                    "input_number1": 1,
                    "input_param1": 1,
                    "input_param_1": 1,
                    "input_value_1": 1,
                    "num1": 3,
                    "number": 1,
                    "number1": 1,
                    "operand1": 1,
                    "x": 1
                },
                "param_2": {
                    "b": 1,
                    "divisor": 1,
                    "exponent": 2,
                    "input2": 12,
                    "input_2": 5,
                    "input_number2": 1,
                    "input_param2": 1,
                    "input_param_2": 1,
                    "input_value_2": 1,
                    "num2": 3,
                    "number2": 1,
                    "operand2": 1,
                    "y": 1
                },
                "param_3": {
                    "addition_value": 1,
                    "c": 1,
                    "calculation_param_3": 1,
                    "condition": 1,
                    "exp": 1,
                    "exp_offset": 1,
                    "exponent": 9,
                    "flag": 1,
                    "input3": 3,
                    "input_param3": 1,
                    "mod": 1,
                    "offset": 1,
                    "operation_count": 1,
                    "power": 3,
                    "shift": 1,
                    "shift_amount": 2,
                    "shift_value": 1,
                    "sum_exponent": 1
                },
                "param_4": {
                    "calculation_param_4": 1,
                    "constant": 5,
                    "control": 1,
                    "d": 1,
                    "input4": 3,
                    "input_param4": 1,
                    "operation_mode": 1,
                    "param_4": 7,
                    "parameter4": 1,
                    "placeholder": 2,
                    "preset_value": 1,
                    "round_mode": 1,
                    "rounding_mode": 1,
                    "undefined": 1,
                    "unknown": 1,
                    "unused": 2,
                    "unused_param": 1
                },
                "uVar1": {
                    "divided_shift": 1,
                    "exponent_shifted": 2,
                    "normalized_exp": 1,
                    "shift_amount": 1,
                    "shift_count": 1,
                    "shifted": 1,
                    "shifted_bit": 1,
                    "shifted_bits": 2,
                    "shifted_count": 1,
                    "shifted_divisor": 1,
                    "shifted_exponent": 1,
                    "shifted_input": 2,
                    "shifted_input2": 6,
                    "shifted_input_2": 2,
                    "shifted_number": 1,
                    "shifted_param_2": 1,
                    "shifted_value": 6
                },
                "uVar2": {
                    "c1": 1,
                    "constant1": 1,
                    "float_part1": 1,
                    "high_bits": 1,
                    "mantissa_low": 1,
                    "normalized_low": 1,
                    "part1": 1,
                    "product_lower": 1,
                    "res1": 1,
                    "result1": 8,
                    "result_1": 4,
                    "result_hi": 1,
                    "result_low": 3,
                    "result_reg1": 1,
                    "significand_low": 1,
                    "temp1": 1,
                    "temp_value_1": 1,
                    "value_1": 1,
                    "var1": 1
                },
                "uVar3": {
                    "sum_exp_offset": 1,
                    "temp": 1
                },
                "uVar4": {
                    "c2": 1,
                    "constant2": 1,
                    "constant_1": 1,
                    "float_part2": 1,
                    "low_bits": 1,
                    "mantissa_high": 1,
                    "part2": 1,
                    "product_higher": 1,
                    "res2": 1,
                    "result2": 7,
                    "result3": 1,
                    "result_2": 1,
                    "result_3": 2,
                    "result_high": 3,
                    "result_lo": 1,
                    "result_low": 1,
                    "result_reg2": 1,
                    "significand_high": 1,
                    "temp2": 1,
                    "temp_value_3": 1,
                    "value_2": 1,
                    "var2": 1
                },
                "uVar5": {
                    "divisor_high": 1,
                    "high_bits": 3,
                    "high_bits_of_input": 1,
                    "high_part": 1,
                    "high_part_of_result": 1,
                    "high_word_of_input": 1,
                    "input2_high": 1,
                    "mantissa_high_shifted": 1,
                    "part1_shifted": 1,
                    "product_high": 1,
                    "result_hi_temp": 1,
                    "result_high": 1,
                    "result_high_shifted": 1,
                    "result_high_temp": 1,
                    "shifted_result": 2,
                    "shifted_result1": 1,
                    "temp": 1,
                    "temp1": 1,
                    "temp_value_4": 1,
                    "upper32_bits": 1,
                    "upper32bits": 1,
                    "upper32bits_param1": 1,
                    "upper_bits": 3,
                    "upper_bits_input1": 1,
                    "upper_number": 1,
                    "upper_part": 1
                },
                "uVar6": {
                    "concatenated_numbers": 1,
                    "concatenated_result": 1,
                    "final_result": 1,
                    "output": 3,
                    "product": 4,
                    "product_and_operation": 1,
                    "product_result": 1,
                    "result": 18,
                    "temp2": 1
                },
                "uVar7": {
                    "copysign_const1": 1
                },
                "ulonglong": {
                    "long_long": 1
                }
            },
            "called": [
                "FUN_0800729c",
                "FUN_080004d0",
                "FUN_0800016c"
            ],
            "calling": [
                "FUN_08006228"
            ],
            "code": "\nundefined8 calculate_product_with_conditions_080071c0(uint input1,uint input2,int exponent,undefined4 param_4)\n\n{\n  uint shifted_value;\n  undefined4 result1;\n  int sum;\n  undefined4 result2;\n  uint upper_bits;\n  undefined8 result;\n  \n  result = concatenate(input2,input1);\n  shifted_value = (input2 << 1) >> 0x15;\n  if (shifted_value == 0) {\n    if ((input2 & 0x7fffffff | input1) == 0) {\n      return result;\n    }\n    result = multiply(input1,input2,0,0x43500000);\n    if (-0xc351 < exponent) {\n      shifted_value = ((uint)((int)((long_long)result >> 0x20) << 1) >> 0x15) - 0x36;\n      goto handle_infinity;\n    }\nlabel1:\n    result1 = 0xc2f8f359;\n    result2 = 0x1a56e1f;\n  }\n  else {\n    if (shifted_value == 0x7ff) {\n      result = add_double(input1,input2,input1,input2,param_4);\n      return result;\n    }\nhandle_infinity:\n    upper_bits = (uint)((long_long)result >> 0x20);\n    result1 = (undefined4)result;\n    sum = shifted_value + exponent;\n    if (sum < 0x7ff) {\n      if (0 < sum) {\n        return concatenate(upper_bits & 0x800fffff | sum * 0x100000,result1);\n      }\n      if (sum + 0x35 < 0 == signed_carry_check(sum,0x35)) {\n        result = concatenate(upper_bits & 0x800fffff | (sum + 0x36) * 0x100000,result1);\n        result1 = 0;\n        result2 = 0x3c900000;\n        goto calculate_final_result;\n      }\n      if (exponent < 0xc351) {\n        result = copy_sign(0xc2f8f359,0x1a56e1f,result1,upper_bits);\n        goto label1;\n      }\n    }\n    result = copy_sign(0x8800759c,0x7e37e43c,result1,upper_bits);\n    result1 = 0x8800759c;\n    result2 = 0x7e37e43c;\n  }\ncalculate_final_result:\n  result = multiply((int)result,(int)((long_long)result >> 0x20),result1,result2);\n  return result;\n}\n\n",
            "current_name": "calculate_product_with_conditions_080071c0",
            "entrypoint": "0x080071c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "CONCAT44": "concatenate",
                "FUN_080071c0": "calculate_product_with_conditions_080071c0",
                "LAB_080071ec": "label1",
                "LAB_08007210": "handle_infinity",
                "LAB_0800722e": "calculate_final_result",
                "SCARRY4": "signed_carry_check",
                "__aeabi_dadd": "add_double",
                "__muldf3": "multiply",
                "copysign": "copy_sign",
                "iVar3": "sum",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "exponent",
                "uVar1": "shifted_value",
                "uVar2": "result1",
                "uVar4": "result2",
                "uVar5": "upper_bits",
                "uVar6": "result",
                "ulonglong": "long_long"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800729c": {
            "called": [],
            "calling": [
                "FUN_080071c0"
            ],
            "code": "\nvoid FUNC_0800729c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800729c",
            "entrypoint": "0x0800729c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800729c": "FUNC_0800729c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080072ac": {
            "additional_data": {
                "DAT_200001c0": {
                    "constant_value": 1,
                    "current_data": 1,
                    "data": 15,
                    "data_from_memory": 1,
                    "data_value": 5,
                    "global_variable": 1
                },
                "FUN_080072ac": {
                    "get_constant_value": 1,
                    "get_current_data": 1,
                    "get_data": 15,
                    "get_data_from_global_variable": 1,
                    "get_data_from_memory": 2,
                    "get_data_value": 9,
                    "get_global_variable": 1,
                    "get_initial_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005bc8",
                "FUN_08005900",
                "FUN_08005854"
            ],
            "code": "\nundefined4 get_data_value_080072ac(void)\n\n{\n  return DAT_200001c0;\n}\n\n",
            "current_name": "get_data_value_080072ac",
            "entrypoint": "0x080072ac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080072ac": "get_data_value_080072ac"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080072b8": {
            "additional_data": {
                "DAT_200002b4": {
                    "current_address": 1,
                    "current_memory_ptr": 1,
                    "current_pointer": 7,
                    "current_ptr": 1,
                    "current_value_ptr": 1,
                    "data_pointer": 6,
                    "data_ptr": 2,
                    "pointer": 6
                },
                "DAT_200016a0": {
                    "default_data_pointer": 2,
                    "default_pointer": 2,
                    "default_ptr": 1,
                    "default_value": 1,
                    "initial_address": 1,
                    "initial_data": 1,
                    "initial_pointer": 1,
                    "initial_value": 1
                },
                "FUN_080072b8": {
                    "add_offset": 1,
                    "add_offset_to_memory": 1,
                    "add_offset_to_pointer": 4,
                    "add_parameter_value_to_memory": 1,
                    "add_value_to_data_pointer": 1,
                    "increase_pointer_by_value": 1,
                    "increment_data_pointer": 1,
                    "increment_pointer": 8,
                    "update_address": 1,
                    "update_data": 2,
                    "update_data_pointer": 2,
                    "update_pointer": 7,
                    "update_pointer_offset": 1
                },
                "param_1": {
                    "amount": 4,
                    "increment": 4,
                    "increment_amount": 2,
                    "increment_value": 3,
                    "offset": 12,
                    "value": 3,
                    "value_to_add": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_0800581c"
            ],
            "code": "\nvoid update_data_pointer_080072b8(int offset)\n\n{\n  if (DAT_200002b4 == (undefined *)0x0) {\n    DAT_200002b4 = &DAT_200016a0;\n  }\n  DAT_200002b4 = DAT_200002b4 + offset;\n  return;\n}\n\n",
            "current_name": "update_data_pointer_080072b8",
            "entrypoint": "0x080072b8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080072b8": "update_data_pointer_080072b8",
                "param_1": "offset"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080072d4": {
            "called": [],
            "calling": [
                "FUN_08000110",
                "FUN_08004fb4",
                "FUN_08000134"
            ],
            "code": "\nvoid FUNC_080072d4(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080072d4",
            "entrypoint": "0x080072d4",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080072d4": "FUNC_080072d4"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080072e0": {
            "called": [],
            "calling": [],
            "code": "\nvoid FUNC_080072e0(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080072e0",
            "entrypoint": "0x080072e0",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080072e0": "FUNC_080072e0"
            },
            "skipped": true,
            "tags": []
        }
    },
    "layers": [
        [
            "FUN_08000110",
            "FUN_08000134",
            "FUN_08000150",
            "FUN_08000168",
            "FUN_0800016c",
            "FUN_08000404",
            "FUN_08000428",
            "FUN_080006ac",
            "FUN_08000892",
            "FUN_08000904",
            "FUN_08000980",
            "FUN_08000990",
            "FUN_080009a0",
            "FUN_080009b4",
            "FUN_080009c8",
            "FUN_080009f0",
            "FUN_08000a04",
            "FUN_08000a30",
            "FUN_08000ad8",
            "FUN_08000adc",
            "FUN_08000c3c",
            "FUN_08000c44",
            "FUN_08000cec",
            "FUN_08000e54",
            "FUN_08000f9c",
            "FUN_08000ffc",
            "FUN_08001004",
            "FUN_08001014",
            "FUN_08001028",
            "FUN_08001050",
            "FUN_08001064",
            "FUN_08001078",
            "FUN_080010c4",
            "FUN_08001104",
            "FUN_08001128",
            "FUN_0800114c",
            "FUN_0800115c",
            "FUN_08001170",
            "FUN_08001194",
            "FUN_080011fc",
            "FUN_08001214",
            "FUN_08001240",
            "FUN_08001264",
            "FUN_08001424",
            "FUN_0800142e",
            "FUN_08001436",
            "FUN_08001460",
            "FUN_080014e2",
            "FUN_08001530",
            "FUN_080015e8",
            "FUN_080016f4",
            "FUN_08001754",
            "FUN_08001828",
            "FUN_08001938",
            "FUN_08001b58",
            "FUN_08002008",
            "FUN_0800209c",
            "FUN_08002214",
            "FUN_08002220",
            "FUN_08002250",
            "FUN_08002280",
            "FUN_080022d0",
            "FUN_08002324",
            "FUN_08002368",
            "FUN_080023d0",
            "FUN_08002404",
            "FUN_0800245c",
            "FUN_08002520",
            "FUN_08002538",
            "FUN_08002564",
            "FUN_080025a4",
            "FUN_080025e8",
            "FUN_08002724",
            "FUN_0800290c",
            "FUN_0800299a",
            "FUN_08002ad0",
            "FUN_08002b48",
            "FUN_08002bf0",
            "FUN_08002cb0",
            "FUN_08002d88",
            "FUN_08002ea0",
            "FUN_08002ec0",
            "FUN_08002ed4",
            "FUN_08002ee8",
            "FUN_08002f28",
            "FUN_08003034",
            "FUN_08003068",
            "FUN_08003298",
            "FUN_08003314",
            "FUN_08003320",
            "FUN_08003330",
            "FUN_08003eb0",
            "FUN_08003ec8",
            "FUN_08003f3c",
            "FUN_08003fc4",
            "FUN_08003fd0",
            "FUN_08003fdc",
            "FUN_08003fe8",
            "FUN_08003ff4",
            "FUN_08004028",
            "FUN_0800403c",
            "FUN_0800407c",
            "FUN_080040b8",
            "FUN_080040e8",
            "FUN_0800411c",
            "FUN_08004194",
            "FUN_080041ae",
            "FUN_080041c4",
            "FUN_0800426c",
            "FUN_08004300",
            "FUN_08004348",
            "FUN_08004384",
            "FUN_080043bc",
            "FUN_080043f0",
            "FUN_08004410",
            "FUN_08004434",
            "FUN_08004458",
            "FUN_08004490",
            "FUN_08004514",
            "FUN_0800458c",
            "FUN_0800483c",
            "FUN_08004a30",
            "FUN_08004a84",
            "FUN_08004c18",
            "FUN_08004c30",
            "FUN_08004c64",
            "FUN_08004c70",
            "FUN_08004c8c",
            "FUN_08004cac",
            "FUN_08004ccc",
            "FUN_08004d48",
            "FUN_08004d8c",
            "FUN_08004e14",
            "FUN_08004e7c",
            "FUN_08004f10",
            "FUN_08004f68",
            "FUN_08004fb4",
            "FUN_08004ffc",
            "FUN_08005044",
            "FUN_080050fc",
            "FUN_080052e4",
            "FUN_080053d4",
            "FUN_08005614",
            "FUN_08005630",
            "FUN_08005646",
            "FUN_0800567c",
            "FUN_08005714",
            "FUN_080057d0",
            "FUN_0800581c",
            "FUN_08005840",
            "FUN_08005854",
            "FUN_08005900",
            "FUN_08005bc8",
            "FUN_08005c70",
            "FUN_08006070",
            "FUN_08006228",
            "FUN_08006c0c",
            "FUN_08006d68",
            "FUN_08007092",
            "FUN_0800709e",
            "FUN_080070a4",
            "FUN_080070b0",
            "FUN_080071c0",
            "FUN_080072ac",
            "FUN_080072b8"
        ],
        [
            "FUN_080004d0",
            "FUN_08000724"
        ]
    ],
    "locked_functions": [],
    "used_tokens": 772946
}