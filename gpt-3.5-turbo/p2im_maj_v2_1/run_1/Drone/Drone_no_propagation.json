{
    "functions": {
        "FUN_08000110": {
            "additional_data": {
                "DAT_20000228": {
                    "data_flag": 1,
                    "flag": 12,
                    "flag_variable": 2,
                    "initialized_flag": 1,
                    "is_data_initialized": 1
                },
                "FUN_08000110": {
                    "initialize_data": 2,
                    "initialize_data_if_needed": 1,
                    "initialize_flag": 17,
                    "initialize_flag_and_return": 1,
                    "initialize_flag_if_needed": 1,
                    "initialize_flag_if_not_set": 1,
                    "initialize_flag_if_zero": 1,
                    "set_flag_and_return": 1,
                    "set_flag_if_not_set": 1,
                    "set_flag_if_unset": 1,
                    "update_data": 1,
                    "update_flag": 1,
                    "update_flag_if_unset": 1,
                    "update_flag_if_zero": 1
                },
                "param_1": {
                    "data_to_be_updated": 1,
                    "flag_value": 1,
                    "input": 11,
                    "input_data": 1,
                    "input_param": 3,
                    "input_parameter": 1,
                    "input_value": 9,
                    "return_value": 1,
                    "value": 3
                }
            },
            "called": [
                "FUN_080072d4"
            ],
            "calling": [],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800011c) */\n\nundefined4 initialize_flag_and_return_08000110(undefined4 input)\n\n{\n  if ((char)DAT_20000228 == '\\0') {\n    DAT_20000228._0_1_ = '\\x01';\n  }\n  return input;\n}\n\n",
            "current_name": "initialize_flag_and_return_08000110",
            "entrypoint": "0x08000110",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000110": "initialize_flag_and_return_08000110",
                "param_1": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000134": {
            "additional_data": {
                "FUN_08000134": {
                    "combine_values": 1,
                    "concatenate_integers": 4,
                    "concatenate_parameters": 8,
                    "concatenate_params": 7,
                    "concatenate_uint64": 1,
                    "concatenate_values": 10
                },
                "param_1": {
                    "first_integer": 3,
                    "first_param": 3,
                    "first_parameter": 9,
                    "first_value": 2,
                    "input1": 3,
                    "lower_half": 1,
                    "parameter1": 1,
                    "value1": 8,
                    "value_1": 1
                },
                "param_2": {
                    "input2": 3,
                    "parameter2": 1,
                    "second_integer": 3,
                    "second_param": 3,
                    "second_parameter": 9,
                    "second_value": 2,
                    "upper_half": 1,
                    "value2": 8,
                    "value_2": 1
                }
            },
            "called": [
                "FUN_080072d4"
            ],
            "calling": [
                "FUN_08004fb4"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800013a) */\n\nundefined8 concatenate_values_08000134(undefined4 first_parameter,undefined4 second_parameter)\n\n{\n  return CONCAT44(second_parameter,first_parameter);\n}\n\n",
            "current_name": "concatenate_values_08000134",
            "entrypoint": "0x08000134",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000134": "concatenate_values_08000134",
                "param_1": "first_parameter",
                "param_2": "second_parameter"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000150": {
            "additional_data": {
                "FUN_08000150": {
                    "extract_last_character": 1,
                    "find_end_of_line": 1,
                    "find_end_of_string": 10,
                    "find_null_terminated_string": 2,
                    "find_null_terminator": 2,
                    "find_string_end": 1,
                    "find_string_length": 6,
                    "get_end_of_string": 1,
                    "get_length_of_string": 1,
                    "get_null_terminated_string": 1,
                    "get_string_length": 3,
                    "get_terminating_character_index": 1,
                    "reverse_string": 1
                },
                "cVar1": {
                    "char_value": 1,
                    "character": 1,
                    "current_char": 16,
                    "current_char_value": 3,
                    "current_character": 7,
                    "current_character_value": 1
                },
                "param_1": {
                    "input_string": 18,
                    "str": 7,
                    "string": 6
                },
                "pcVar2": {
                    "current_char": 1,
                    "current_char_ptr": 1,
                    "current_character": 1,
                    "next_char": 15,
                    "next_char_pointer": 1,
                    "next_char_ptr": 4,
                    "next_character": 7,
                    "next_character_pointer": 1
                },
                "pcVar3": {
                    "char_ptr": 1,
                    "current_char": 7,
                    "current_char_pointer": 1,
                    "current_char_ptr": 3,
                    "current_character": 3,
                    "current_character_pointer": 1,
                    "current_pos": 2,
                    "current_position": 3,
                    "current_ptr": 2,
                    "current_string_position": 1,
                    "next_char": 1,
                    "next_char_ptr": 1,
                    "next_character": 1,
                    "str_ptr": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004c8c"
            ],
            "code": "\nchar * find_end_of_string_08000150(char *input_string)\n\n{\n  char current_char;\n  char *next_char;\n  char *current_char;\n  \n  current_char = input_string;\n  do {\n    next_char = current_char + 1;\n    current_char = *current_char;\n    current_char = next_char;\n  } while (current_char != '\\0');\n  return next_char + (-1 - (int)input_string);\n}\n\n",
            "current_name": "find_end_of_string_08000150",
            "entrypoint": "0x08000150",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000150": "find_end_of_string_08000150",
                "cVar1": "current_char",
                "param_1": "input_string",
                "pcVar2": "next_char",
                "pcVar3": "current_char"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000168": {
            "additional_data": {
                "FUN_08000168": {
                    "calculate": 3,
                    "calculate_and_return": 1,
                    "calculate_checksum": 1,
                    "calculate_product": 2,
                    "calculate_result": 4,
                    "calculate_shifted_sum": 1,
                    "calculate_sum": 1,
                    "calculate_unsigned_division": 2,
                    "calculate_unsigned_long": 1,
                    "calculate_unsigned_sum": 1,
                    "compute_result": 1,
                    "optimized_function": 1,
                    "perform_arithmetic_operation": 1,
                    "perform_bitwise_operation": 1,
                    "perform_calculation": 1,
                    "reverse_binary": 1,
                    "reverse_bits": 1,
                    "reverse_bits_and_shift": 1,
                    "reverse_calculation": 1,
                    "reversed_code": 1
                },
                "bVar13": {
                    "carry1": 1,
                    "check1": 1,
                    "comparison_result1": 1,
                    "condition1": 5,
                    "flag1": 5,
                    "flag_1": 1,
                    "flag_3": 1,
                    "is_condition1": 2,
                    "is_condition_true1": 1,
                    "is_condition_true_1": 1,
                    "is_equal": 1,
                    "is_negative1": 1,
                    "is_true": 1,
                    "is_zero": 5,
                    "is_zero_difference": 1,
                    "overflow": 1,
                    "temp13": 1,
                    "var13": 1
                },
                "bVar14": {
                    "b_condition1": 1,
                    "carry2": 1,
                    "check2": 1,
                    "check_condition": 1,
                    "comparison_result2": 1,
                    "condition": 1,
                    "condition2": 5,
                    "condition_a": 1,
                    "flag2": 5,
                    "flag_1": 1,
                    "flag_2": 1,
                    "is_condition2": 2,
                    "is_condition_true2": 1,
                    "is_condition_true_2": 1,
                    "is_equal": 1,
                    "is_false": 1,
                    "is_negative": 3,
                    "is_zero_or_equal": 1,
                    "temp14": 1,
                    "var14": 1
                },
                "bVar15": {
                    "borrow_flag": 1,
                    "carry": 2,
                    "carry_overflow": 1,
                    "check3": 1,
                    "check_condition2": 1,
                    "condition3": 6,
                    "condition_b": 1,
                    "flag3": 5,
                    "flag_2": 1,
                    "flag_3": 1,
                    "is_carry": 2,
                    "is_condition3": 2,
                    "is_condition_true3": 1,
                    "is_condition_true_3": 1,
                    "is_less": 1,
                    "is_negative2": 1,
                    "overflow_flag": 1,
                    "temp15": 1,
                    "var15": 1
                },
                "bVar2": {
                    "bit": 1,
                    "byte_var1": 1,
                    "carry": 3,
                    "carry1": 2,
                    "carry_bit": 2,
                    "carry_flag": 5,
                    "flag": 1,
                    "temp2": 2,
                    "temp_5": 1,
                    "var2": 1
                },
                "iVar1": {
                    "bit_shift1": 1,
                    "divisor_shifted": 1,
                    "int_var1": 2,
                    "result_shifted_1": 1,
                    "shift": 1,
                    "shift1": 1,
                    "shift_amount1": 1,
                    "shift_amount_1": 1,
                    "shift_count1": 1,
                    "shift_distance_2": 1,
                    "shift_right_count": 1,
                    "shifted_input4_divided_by21": 1,
                    "shifted_output": 1,
                    "shifted_value": 1,
                    "temp1": 2,
                    "temp10": 1,
                    "temp5": 2,
                    "temp_4": 1,
                    "temp_var2": 1,
                    "var1": 1
                },
                "iVar8": {
                    "bit_shift2": 1,
                    "int_var2": 2,
                    "msb_bit": 1,
                    "result_shifted_2": 1,
                    "shift": 2,
                    "shift1": 1,
                    "shift2": 1,
                    "shift_amount": 3,
                    "shift_amount2": 1,
                    "shift_amount_2": 1,
                    "shift_count": 1,
                    "shift_count2": 1,
                    "shift_distance": 1,
                    "shift_left_count": 1,
                    "shift_temp": 1,
                    "shifted_input2_divided_by21": 1,
                    "shifted_param2": 1,
                    "temp11": 1,
                    "temp6": 4,
                    "temp8": 2,
                    "temp_11": 1,
                    "var8": 1
                },
                "param_1": {
                    "a": 1,
                    "data1": 1,
                    "dividend": 2,
                    "input1": 18,
                    "input_1": 7,
                    "input_val1": 1,
                    "num1": 1
                },
                "param_2": {
                    "b": 1,
                    "data2": 1,
                    "divisor": 2,
                    "input2": 18,
                    "input_2": 7,
                    "input_val2": 1,
                    "num2": 1
                },
                "param_3": {
                    "c": 1,
                    "data3": 1,
                    "input3": 18,
                    "input_3": 7,
                    "input_val3": 1,
                    "num3": 1,
                    "quotient": 2
                },
                "param_4": {
                    "d": 1,
                    "data4": 1,
                    "input4": 18,
                    "input_4": 7,
                    "input_val4": 1,
                    "num4": 1,
                    "remainder": 2
                },
                "uVar1": {
                    "bitwise_result": 1
                },
                "uVar10": {
                    "count": 1,
                    "input1_copy": 1,
                    "input_1_shifted": 1,
                    "partial_sum2": 1,
                    "result2": 4,
                    "result_low": 1,
                    "shifted_input2": 1,
                    "temp1": 1,
                    "temp10": 2,
                    "temp2": 4,
                    "temp3": 1,
                    "temp5": 1,
                    "temp6": 2,
                    "temp7": 1,
                    "temp8": 2,
                    "temp_1": 2,
                    "temp_value3": 1,
                    "temp_var_7": 1,
                    "updated_input_1": 1,
                    "var10": 1
                },
                "uVar11": {
                    "diff": 1,
                    "difference": 4,
                    "remainder_temp": 1,
                    "result": 1,
                    "result3": 4,
                    "result_low": 1,
                    "shifted_sum2": 1,
                    "temp11": 2,
                    "temp2": 1,
                    "temp3": 4,
                    "temp4": 1,
                    "temp7": 1,
                    "temp8": 1,
                    "temp9": 2,
                    "temp_2": 2,
                    "temp_result": 1,
                    "temp_value4": 1,
                    "temp_var_8": 1,
                    "var11": 1
                },
                "uVar12": {
                    "normalized_result": 1,
                    "positive_result": 1,
                    "result2": 1,
                    "result4": 4,
                    "result_high": 1,
                    "shifted_difference": 1,
                    "temp": 1,
                    "temp10": 2,
                    "temp12": 2,
                    "temp3": 1,
                    "temp4": 4,
                    "temp5": 1,
                    "temp6": 1,
                    "temp7": 1,
                    "temp8": 1,
                    "temp9": 1,
                    "temp_3": 2,
                    "temp_shifted": 1,
                    "temp_value5": 1,
                    "temp_var1": 1,
                    "temp_var_9": 1,
                    "var12": 1
                },
                "uVar13": {
                    "temp_4": 1
                },
                "uVar3": {
                    "carry": 4,
                    "carry1": 1,
                    "result1": 2,
                    "shifted_input_2": 1,
                    "sum": 1,
                    "sum1": 2,
                    "temp": 1,
                    "temp1": 9,
                    "temp3": 2,
                    "temp6": 1,
                    "temp7": 1,
                    "temp_1": 1,
                    "temp_6": 1,
                    "temp_value6": 1,
                    "temp_var_1": 1,
                    "var3": 1
                },
                "uVar4": {
                    "carry2": 1,
                    "partial_sum1": 1,
                    "result2": 2,
                    "result_high": 1,
                    "result_low": 3,
                    "result_part1": 1,
                    "shifted_result_1": 1,
                    "temp1": 1,
                    "temp2": 9,
                    "temp4": 2,
                    "temp7": 1,
                    "temp8": 1,
                    "temp_2": 1,
                    "temp_7": 1,
                    "temp_value7": 1,
                    "temp_var3": 1,
                    "temp_var_2": 1,
                    "var4": 1
                },
                "uVar5": {
                    "carry3": 1,
                    "carry_temp": 1,
                    "result3": 2,
                    "result_high": 1,
                    "result_part2": 1,
                    "shifted_result_2": 1,
                    "shifted_sum1": 1,
                    "sum2": 1,
                    "sum_low": 1,
                    "temp": 1,
                    "temp2": 1,
                    "temp3": 9,
                    "temp5": 2,
                    "temp8": 1,
                    "temp9": 1,
                    "temp_3": 1,
                    "temp_8": 1,
                    "temp_value8": 1,
                    "temp_var_3": 1,
                    "var5": 1
                },
                "uVar6": {
                    "input_2_shifted": 1,
                    "input_2_temp": 1,
                    "modified_input4": 1,
                    "modified_input_4": 2,
                    "param4_xor": 1,
                    "result1": 3,
                    "result4": 1,
                    "result_1": 1,
                    "result_high": 1,
                    "sum_high": 1,
                    "temp1": 3,
                    "temp4": 9,
                    "temp6": 2,
                    "temp_val1": 1,
                    "temp_value1": 1,
                    "temp_var_4": 1,
                    "var6": 1
                },
                "uVar7": {
                    "input_1_temp": 1,
                    "input_3_shifted": 1,
                    "modified_input2": 1,
                    "multiplicand_low": 1,
                    "param2_masked": 1,
                    "result2": 1,
                    "result5": 1,
                    "result_2": 1,
                    "shifted_result1": 1,
                    "temp10": 1,
                    "temp2": 1,
                    "temp3": 1,
                    "temp5": 9,
                    "temp7": 2,
                    "temp9": 1,
                    "temp_4": 1,
                    "temp_9": 1,
                    "temp_val2": 1,
                    "temp_value9": 1,
                    "temp_var_5": 1,
                    "var7": 1
                },
                "uVar8": {
                    "temp_10": 1
                },
                "uVar9": {
                    "carry_shifted": 1,
                    "input_2_shifted": 1,
                    "mask": 1,
                    "modified_input_2": 1,
                    "multiplicand": 1,
                    "param2_shifted": 1,
                    "quotient_temp": 1,
                    "result1": 4,
                    "shift2": 1,
                    "shifted_input1": 1,
                    "shifted_input2": 1,
                    "shifted_input_1": 1,
                    "shifted_input_2": 1,
                    "sum2": 1,
                    "temp1": 3,
                    "temp2": 2,
                    "temp4": 1,
                    "temp6": 1,
                    "temp7": 2,
                    "temp9": 2,
                    "temp_value2": 1,
                    "temp_var_6": 1,
                    "var9": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005c70",
                "FUN_08006d68",
                "FUN_08006070",
                "FUN_08006c0c",
                "FUN_08006228",
                "FUN_0800411c",
                "FUN_080070b0"
            ],
            "code": "\nulonglong calculate_result_08000168(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int temp1;\n  byte carry_flag;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  int temp6;\n  uint result1;\n  uint temp2;\n  uint difference;\n  uint result4;\n  bool is_zero;\n  bool flag2;\n  bool condition3;\n  \n  temp4 = input4 ^ 0x80000000;\n  result1 = input2 << 1;\n  input4 = input4 << 1;\n  is_zero = ((input2 ^ temp4) & 0x7fffffff) == 0;\n  flag2 = is_zero && input1 == input3;\n  if (!is_zero || input1 != input3) {\n    flag2 = (result1 | input1) == 0;\n  }\n  if (!flag2) {\n    flag2 = (input4 | input3) == 0;\n  }\n  temp6 = (int)result1 >> 0x15;\n  if (!flag2) {\n    flag2 = temp6 == -1;\n  }\n  temp1 = (int)input4 >> 0x15;\n  if (!flag2) {\n    flag2 = temp1 == -1;\n  }\n  if (flag2) {\n    if (temp6 == -1 || temp1 == -1) {\n      result1 = temp4;\n      difference = input3;\n      if (temp6 == -1) {\n        result1 = input2;\n        difference = input1;\n      }\n      if (temp6 != -1 || temp1 != -1) {\n        input3 = difference;\n        temp4 = result1;\n      }\n      flag2 = (difference | result1 << 0xc) == 0;\n      if (flag2) {\n        flag2 = (input3 | temp4 << 0xc) == 0;\n      }\n      if (flag2) {\n        flag2 = result1 == temp4;\n      }\n      if (!flag2) {\n        result1 = result1 | 0x80000;\n      }\n      return CONCAT44(result1,difference);\n    }\n    if (((input2 ^ temp4) & 0x7fffffff) != 0 || input1 != input3) {\n      if ((result1 | input1) == 0) {\n        input1 = input3;\n        input2 = temp4;\n      }\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != temp4) {\n      return 0;\n    }\n    if (result1 >> 0x15 == 0) {\n      flag2 = (input1 & 0x80000000) != 0;\n      temp4 = input2 * 2 + (uint)flag2;\n      if (CARRY4(input2,input2) || CARRY4(input2 * 2,(uint)flag2)) {\n        temp4 = temp4 | 0x80000000;\n      }\n      return CONCAT44(temp4,input1 << 1);\n    }\n    if (result1 < 0xffc00000) {\n      return CONCAT44(input2 + 0x100000,input1);\n    }\n    input2 = input2 & 0x80000000;\nLAB_080003ac:\n    return (ulonglong)(input2 | 0x7ff00000) << 0x20;\n  }\n  result1 = result1 >> 0x15;\n  input4 = input4 >> 0x15;\n  difference = input4 - result1;\n  flag2 = difference != 0;\n  if (input4 < result1) {\n    difference = -difference;\n  }\n  temp2 = input1;\n  temp5 = input2;\n  if (flag2 && result1 <= input4) {\n    result1 = result1 + difference;\n    temp2 = input3;\n    temp5 = temp4;\n    input3 = input1;\n    temp4 = input2;\n  }\n  if (0x36 < difference) {\n    return CONCAT44(temp5,temp2);\n  }\n  temp2 = temp5 & 0xfffff | 0x100000;\n  if ((temp5 & 0x80000000) != 0) {\n    flag2 = temp2 != 0;\n    temp2 = -temp2;\n    temp2 = -temp2 - (uint)flag2;\n  }\n  temp5 = temp4 & 0xfffff | 0x100000;\n  if ((temp4 & 0x80000000) != 0) {\n    flag2 = input3 != 0;\n    input3 = -input3;\n    temp5 = -temp5 - (uint)flag2;\n  }\n  if (result1 == difference) {\n    temp5 = temp5 ^ 0x100000;\n    if (result1 == 0) {\n      temp2 = temp2 ^ 0x100000;\n      result1 = 1;\n    }\n    else {\n      difference = difference - 1;\n    }\n  }\n  temp4 = -difference + 0x20;\n  if ((int)difference < 0x21) {\n    result4 = input3 << (temp4 & 0xff);\n    input3 = input3 >> (difference & 0xff);\n    temp1 = temp2 + input3;\n    temp3 = temp5 << (temp4 & 0xff);\n    temp4 = temp1 + temp3;\n    temp2 = temp2 + CARRY4(temp2,input3) + ((int)temp5 >> (difference & 0xff)) +\n            (uint)CARRY4(temp1,temp3);\n  }\n  else {\n    result4 = temp5 << (-difference + 0x40 & 0xff);\n    if (input3 != 0) {\n      result4 = result4 | 2;\n    }\n    temp5 = (int)temp5 >> (difference - 0x20 & 0xff);\n    temp4 = temp2 + temp5;\n    temp2 = temp2 + ((int)temp5 >> 0x1f) + (uint)CARRY4(temp2,temp5);\n  }\n  input2 = temp2 & 0x80000000;\n  difference = temp2;\n  if ((int)temp2 < 0) {\n    flag2 = result4 == 0;\n    result4 = -result4;\n    difference = -temp4;\n    temp4 = -(uint)!flag2 - temp4;\n    difference = -(uint)(flag2 <= difference) - temp2;\n  }\n  if (0xfffff < difference) {\n    temp2 = result1 - 1;\n    if (0x1fffff < difference) {\n      temp2 = difference & 1;\n      difference = difference >> 1;\n      carry_flag = (byte)temp4;\n      temp4 = (uint)(temp2 != 0) << 0x1f | temp4 >> 1;\n      result4 = (uint)(carry_flag & 1) << 0x1f | result4 >> 1;\n      temp2 = result1;\n      if (0xffbfffff < result1 * 0x200000) goto LAB_080003ac;\n    }\nLAB_08000278:\n    flag2 = 0x7fffffff < result4;\n    if (result4 == 0x80000000) {\n      flag2 = (temp4 & 1) != 0;\n    }\n    return CONCAT44(difference + temp2 * 0x100000 + (uint)CARRY4(temp4,(uint)flag2) | input2,\n                    temp4 + flag2);\n  }\n  is_zero = (result4 & 0x80000000) != 0;\n  result4 = result4 << 1;\n  temp2 = temp4 * 2;\n  flag2 = CARRY4(temp4,temp4);\n  temp4 = temp4 * 2 + (uint)is_zero;\n  difference = difference * 2 + (uint)(flag2 || CARRY4(temp2,(uint)is_zero));\n  temp2 = result1 - 2;\n  if ((difference & 0x100000) != 0) goto LAB_08000278;\n  temp5 = temp4;\n  result1 = difference;\n  if (difference == 0) {\n    temp5 = 0;\n    result1 = temp4;\n  }\n  temp6 = LZCOUNT(result1);\n  if (difference == 0) {\n    temp6 = temp6 + 0x20;\n  }\n  difference = temp6 - 0xb;\n  condition3 = SBORROW4(difference,0x20);\n  temp4 = temp6 - 0x2b;\n  flag2 = (int)temp4 < 0;\n  is_zero = temp4 == 0;\n  if ((int)difference < 0x20) {\n    condition3 = SCARRY4(temp4,0xc);\n    temp6 = temp6 + -0x1f;\n    flag2 = temp6 < 0;\n    is_zero = temp6 == 0;\n    temp4 = difference;\n    if (!is_zero && flag2 == condition3) {\n      temp5 = result1 << (difference & 0xff);\n      result1 = result1 >> (0xcU - temp6 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (is_zero || flag2 != condition3) {\n    result4 = 0x20 - temp4;\n  }\n  result1 = result1 << (temp4 & 0xff);\n  if (is_zero || flag2 != condition3) {\n    result1 = result1 | temp5 >> (result4 & 0xff);\n  }\n  if (is_zero || flag2 != condition3) {\n    temp5 = temp5 << (temp4 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)difference <= (int)temp2) {\n    return CONCAT44(result1 + (temp2 - difference) * 0x100000 | input2,temp5);\n  }\n  temp4 = ~(temp2 - difference);\n  if ((int)temp4 < 0x1f) {\n    temp6 = temp4 - 0x13;\n    if (temp6 != 0 && temp6 < 0 == SCARRY4(temp4 - 0x1f,0xc)) {\n      return CONCAT44(temp2,temp5 >> (0x20 - (0xcU - temp6) & 0xff) | result1 << (0xcU - temp6 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    temp4 = temp4 + 1;\n    return CONCAT44(input2 | result1 >> (temp4 & 0xff),\n                    temp5 >> (temp4 & 0xff) | result1 << (0x20 - temp4 & 0xff));\n  }\n  return CONCAT44(temp2,result1 >> (temp4 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "current_name": "calculate_result_08000168",
            "entrypoint": "0x08000168",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000168": "calculate_result_08000168",
                "bVar13": "is_zero",
                "bVar14": "flag2",
                "bVar15": "condition3",
                "bVar2": "carry_flag",
                "iVar1": "temp1",
                "iVar8": "temp6",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "bitwise_result",
                "uVar10": "temp2",
                "uVar11": "difference",
                "uVar12": "result4",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar5": "temp3",
                "uVar6": "temp4",
                "uVar7": "temp5",
                "uVar9": "result1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800016c": {
            "additional_data": {
                "FUN_0800016c": {
                    "calculate": 1,
                    "calculate_64bit_result": 1,
                    "calculate_combined_value": 1,
                    "calculate_concatenated_values": 1,
                    "calculate_concatenation": 1,
                    "calculate_integer": 1,
                    "calculate_result": 2,
                    "calculate_sum_and_shift": 1,
                    "calculate_unsigned_division": 1,
                    "calculate_unsigned_multiply_and_shift": 1,
                    "compute_sum": 1,
                    "perform_arithmetic": 1,
                    "perform_arithmetic_operation": 3,
                    "process_inputs": 1,
                    "reverse_binary_arithmetic": 1,
                    "reverse_binary_func": 1,
                    "reverse_binary_math": 1,
                    "reverse_bits": 3,
                    "reverse_bits_and_add": 1
                },
                "LZCOUNT": {
                    "leading_zero_count": 1
                },
                "bVar13": {
                    "carry3": 1,
                    "carry_flag1": 1,
                    "compare_result1": 1,
                    "condition1": 3,
                    "flag1": 3,
                    "flag2": 1,
                    "flag_1": 2,
                    "is_condition_true1": 1,
                    "is_equal": 5,
                    "is_input2_and4_equal": 1,
                    "is_negative": 1,
                    "is_same_sign": 1,
                    "is_sum_zero": 1,
                    "is_zero": 1,
                    "is_zero1": 1,
                    "same_sign": 1,
                    "temp_13": 1,
                    "temp_var_11": 1
                },
                "bVar14": {
                    "carry2": 1,
                    "carry_flag2": 1,
                    "compare_result2": 1,
                    "condition1": 1,
                    "condition2": 3,
                    "flag2": 3,
                    "flag3": 1,
                    "flag_2": 2,
                    "is_condition_true2": 1,
                    "is_equal": 1,
                    "is_same": 1,
                    "is_shifted_input2_and_input1_zero": 1,
                    "is_zero": 6,
                    "is_zero2": 1,
                    "is_zero_and_equal": 1,
                    "temp_14": 1,
                    "temp_var_12": 1
                },
                "bVar15": {
                    "bool6": 1,
                    "borrow_flag": 2,
                    "compare_result3": 1,
                    "condition2": 1,
                    "condition3": 2,
                    "flag3": 3,
                    "flag4": 1,
                    "flag_3": 2,
                    "is_carry": 3,
                    "is_condition_true3": 1,
                    "is_greater": 1,
                    "is_negative": 3,
                    "is_overflow": 2,
                    "is_temp_less_than0x20": 1,
                    "temp_15": 1,
                    "temp_var_13": 1
                },
                "bVar2": {
                    "carry": 10,
                    "carry1": 3,
                    "carry_bit": 2,
                    "carry_flag": 2,
                    "flag1": 1,
                    "is_negative": 1,
                    "temp2": 1,
                    "temp_2": 2
                },
                "iVar1": {
                    "bit_shifted_a": 1,
                    "input_4_shifted_bits": 1,
                    "iterator1": 1,
                    "shift": 1,
                    "shift1": 5,
                    "shift4": 1,
                    "shift_amount": 1,
                    "shift_amount_1": 1,
                    "shift_right1": 2,
                    "shifted_input2": 2,
                    "shifted_input4_sign": 1,
                    "shifted_input_2": 4,
                    "shifted_num2": 1,
                    "temp1": 1,
                    "temp_1": 2
                },
                "iVar6": {
                    "bit_shifted_c": 1,
                    "input_2_shifted_bits": 1,
                    "iterator2": 1,
                    "shift2": 6,
                    "shift5": 1,
                    "shift_amount": 1,
                    "shift_amount2": 1,
                    "shift_amount_2": 1,
                    "shift_count1": 1,
                    "shift_right2": 2,
                    "shifted_input2_sign": 1,
                    "shifted_input4": 2,
                    "shifted_input_4": 4,
                    "shifted_num4": 1,
                    "temp_6": 2,
                    "temp_var_4": 1
                },
                "param_1": {
                    "a": 2,
                    "dividend": 1,
                    "input1": 12,
                    "input_1": 8,
                    "multiplier": 1,
                    "num1": 4
                },
                "param_2": {
                    "b": 2,
                    "divisor": 1,
                    "input2": 12,
                    "input_2": 8,
                    "multiplicand": 1,
                    "num2": 4
                },
                "param_3": {
                    "c": 2,
                    "input3": 12,
                    "input_3": 8,
                    "multiplicand2": 1,
                    "num3": 4,
                    "quotient": 1
                },
                "param_4": {
                    "d": 2,
                    "input4": 12,
                    "input_4": 8,
                    "multiplier2": 1,
                    "num4": 4,
                    "remainder": 1
                },
                "uVar10": {
                    "abs_difference": 1,
                    "diff": 2,
                    "difference": 4,
                    "final_result_2": 1,
                    "input_diff_abs": 1,
                    "result8": 1,
                    "result_3": 1,
                    "result_hi": 1,
                    "shifted_result1": 1,
                    "shifted_result_2": 1,
                    "temp2": 1,
                    "temp4": 1,
                    "temp5": 2,
                    "temp6": 1,
                    "temp7": 2,
                    "temp_10": 2,
                    "temp_5": 1,
                    "temp_result2": 1,
                    "temp_var2": 1,
                    "temp_var_8": 1,
                    "upper_difference": 1
                },
                "uVar11": {
                    "bit32_shifted_sum1": 1,
                    "bitwise_op": 1,
                    "carry2": 1,
                    "carry_bit": 2,
                    "carry_result2": 1,
                    "carry_temp": 1,
                    "num1_copy": 1,
                    "result": 1,
                    "result10": 1,
                    "temp1": 1,
                    "temp2": 1,
                    "temp4": 1,
                    "temp5": 1,
                    "temp6": 2,
                    "temp7": 1,
                    "temp8": 2,
                    "temp_11": 2,
                    "temp_3": 2,
                    "temp_6": 1,
                    "temp_result": 1,
                    "temp_result1": 1,
                    "temp_var3": 1,
                    "temp_var_9": 1
                },
                "uVar12": {
                    "bit32_shifted_sum2": 1,
                    "bitwise_op2": 1,
                    "carry": 1,
                    "carry3": 1,
                    "carry_temp2": 1,
                    "num2_copy": 1,
                    "result": 1,
                    "result7": 1,
                    "result_lower_2": 1,
                    "shifted_difference": 1,
                    "temp2": 1,
                    "temp3": 1,
                    "temp5": 1,
                    "temp6": 1,
                    "temp7": 2,
                    "temp8": 1,
                    "temp9": 2,
                    "temp_12": 2,
                    "temp_4": 1,
                    "temp_7": 1,
                    "temp_result2": 2,
                    "temp_result_2": 1,
                    "temp_var4": 1,
                    "temp_var_10": 1
                },
                "uVar3": {
                    "result1": 5,
                    "result11": 1,
                    "result_1": 2,
                    "result_lower_1": 1,
                    "shift_result1": 1,
                    "shifted_input1": 1,
                    "shifted_num": 1,
                    "shifted_sum1": 1,
                    "sum1": 1,
                    "temp1": 7,
                    "temp3": 1,
                    "temp_1": 2,
                    "temp_3": 2,
                    "temp_var_1": 1
                },
                "uVar4": {
                    "carry_result1": 1,
                    "result12": 1,
                    "result2": 4,
                    "result_2": 2,
                    "result_upper_1": 1,
                    "shifted_c": 1,
                    "shifted_input2": 1,
                    "shifted_num2": 1,
                    "shifted_product1": 1,
                    "shifted_sum1": 1,
                    "temp2": 7,
                    "temp4": 1,
                    "temp_2": 2,
                    "temp_4": 2,
                    "temp_var_2": 1
                },
                "uVar5": {
                    "input_2": 1,
                    "lower_1": 1,
                    "num5": 1,
                    "result2": 1,
                    "result3": 3,
                    "result6": 1,
                    "result_3": 1,
                    "shift_result2": 1,
                    "shifted_input3": 1,
                    "shifted_sum2": 1,
                    "sum2": 1,
                    "temp1": 1,
                    "temp3": 7,
                    "temp_3": 1,
                    "temp_5": 2,
                    "temp_input2": 1,
                    "temp_result_1": 1,
                    "temp_var_3": 1
                },
                "uVar7": {
                    "bit_shifted_b": 1,
                    "divisor_shifted": 1,
                    "input_2_shifted": 1,
                    "shift_result": 1,
                    "shifted_by1_input_2": 1,
                    "shifted_input1": 1,
                    "shifted_input2": 5,
                    "shifted_input2_1": 1,
                    "shifted_input_2": 3,
                    "shifted_num1": 1,
                    "shifted_num2": 1,
                    "shifted_product2": 1,
                    "temp1": 1,
                    "temp2": 1,
                    "temp3": 1,
                    "temp4": 3,
                    "temp_1": 1,
                    "temp_7": 2,
                    "temp_var_5": 1
                },
                "uVar8": {
                    "dividend_shifted": 1,
                    "input_1": 1,
                    "result": 1,
                    "result5": 1,
                    "result_part1": 1,
                    "shifted_by1_input_4": 1,
                    "shifted_input1": 1,
                    "shifted_input3": 1,
                    "shifted_input4": 1,
                    "shifted_input4_1": 1,
                    "shifted_input_4": 3,
                    "temp": 1,
                    "temp2": 1,
                    "temp3": 1,
                    "temp4": 1,
                    "temp5": 3,
                    "temp8": 1,
                    "temp_2": 1,
                    "temp_8": 2,
                    "temp_input1": 1,
                    "temp_result": 1,
                    "temp_var1": 1,
                    "temp_var_6": 1
                },
                "uVar9": {
                    "dividend_shifted": 1,
                    "final_result_1": 1,
                    "input_4_shifted": 1,
                    "lower_2": 1,
                    "result2": 1,
                    "result9": 1,
                    "result_2": 1,
                    "result_lo": 1,
                    "result_part2": 1,
                    "shifted_input4": 4,
                    "shifted_num4": 1,
                    "shifted_result2": 1,
                    "shifted_result_4": 1,
                    "shifted_sum2": 1,
                    "temp1": 1,
                    "temp3": 1,
                    "temp4": 1,
                    "temp5": 1,
                    "temp6": 2,
                    "temp_4": 1,
                    "temp_9": 2,
                    "temp_result": 1,
                    "temp_var_7": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005c70",
                "FUN_08006d68",
                "FUN_08006070",
                "FUN_08006c0c",
                "FUN_08006228",
                "FUN_080070b0",
                "FUN_080071c0"
            ],
            "code": "\nulonglong calculate_64bit_result_0800016c(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int shift1;\n  byte carry;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  int shift2;\n  uint shifted_input2;\n  uint shifted_input_4;\n  uint shifted_input4;\n  uint difference;\n  uint carry_bit;\n  uint temp_result2;\n  bool is_equal;\n  bool is_zero;\n  bool is_carry;\n  \n  shifted_input2 = input2 << 1;\n  shifted_input4 = input4 << 1;\n  is_equal = ((input2 ^ input4) & 0x7fffffff) == 0;\n  is_zero = is_equal && input1 == input3;\n  if (!is_equal || input1 != input3) {\n    is_zero = (shifted_input2 | input1) == 0;\n  }\n  if (!is_zero) {\n    is_zero = (shifted_input4 | input3) == 0;\n  }\n  shift2 = (int)shifted_input2 >> 0x15;\n  if (!is_zero) {\n    is_zero = shift2 == -1;\n  }\n  shift1 = (int)shifted_input4 >> 0x15;\n  if (!is_zero) {\n    is_zero = shift1 == -1;\n  }\n  if (is_zero) {\n    if (shift2 == -1 || shift1 == -1) {\n      shifted_input4 = input4;\n      shifted_input2 = input3;\n      if (shift2 == -1) {\n        shifted_input4 = input2;\n        shifted_input2 = input1;\n      }\n      if (shift2 != -1 || shift1 != -1) {\n        input3 = shifted_input2;\n        input4 = shifted_input4;\n      }\n      is_zero = (shifted_input2 | shifted_input4 << 0xc) == 0;\n      if (is_zero) {\n        is_zero = (input3 | input4 << 0xc) == 0;\n      }\n      if (is_zero) {\n        is_zero = shifted_input4 == input4;\n      }\n      if (!is_zero) {\n        shifted_input4 = shifted_input4 | 0x80000;\n      }\n      return CONCAT44(shifted_input4,shifted_input2);\n    }\n    if (((input2 ^ input4) & 0x7fffffff) != 0 || input1 != input3) {\n      if ((shifted_input2 | input1) == 0) {\n        input1 = input3;\n        input2 = input4;\n      }\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != input4) {\n      return 0;\n    }\n    if (shifted_input2 >> 0x15 == 0) {\n      is_zero = (input1 & 0x80000000) != 0;\n      shifted_input4 = input2 * 2 + (uint)is_zero;\n      if (CARRY4(input2,input2) || CARRY4(input2 * 2,(uint)is_zero)) {\n        shifted_input4 = shifted_input4 | 0x80000000;\n      }\n      return CONCAT44(shifted_input4,input1 << 1);\n    }\n    if (shifted_input2 < 0xffc00000) {\n      return CONCAT44(input2 + 0x100000,input1);\n    }\n    input2 = input2 & 0x80000000;\nLAB_080003ac:\n    return (ulonglong)(input2 | 0x7ff00000) << 0x20;\n  }\n  shifted_input2 = shifted_input2 >> 0x15;\n  shifted_input4 = shifted_input4 >> 0x15;\n  difference = shifted_input4 - shifted_input2;\n  is_zero = difference != 0;\n  if (shifted_input4 < shifted_input2) {\n    difference = -difference;\n  }\n  shifted_input_4 = input1;\n  temp3 = input2;\n  if (is_zero && shifted_input2 <= shifted_input4) {\n    shifted_input2 = shifted_input2 + difference;\n    shifted_input_4 = input3;\n    temp3 = input4;\n    input3 = input1;\n    input4 = input2;\n  }\n  if (0x36 < difference) {\n    return CONCAT44(temp3,shifted_input_4);\n  }\n  shifted_input4 = temp3 & 0xfffff | 0x100000;\n  if ((temp3 & 0x80000000) != 0) {\n    is_zero = shifted_input_4 != 0;\n    shifted_input_4 = -shifted_input_4;\n    shifted_input4 = -shifted_input4 - (uint)is_zero;\n  }\n  temp3 = input4 & 0xfffff | 0x100000;\n  if ((input4 & 0x80000000) != 0) {\n    is_zero = input3 != 0;\n    input3 = -input3;\n    temp3 = -temp3 - (uint)is_zero;\n  }\n  if (shifted_input2 == difference) {\n    temp3 = temp3 ^ 0x100000;\n    if (shifted_input2 == 0) {\n      shifted_input4 = shifted_input4 ^ 0x100000;\n      shifted_input2 = 1;\n    }\n    else {\n      difference = difference - 1;\n    }\n  }\n  temp_result2 = -difference + 0x20;\n  if ((int)difference < 0x21) {\n    carry_bit = input3 << (temp_result2 & 0xff);\n    input3 = input3 >> (difference & 0xff);\n    temp1 = shifted_input_4 + input3;\n    temp2 = temp3 << (temp_result2 & 0xff);\n    temp_result2 = temp1 + temp2;\n    shifted_input4 = shifted_input4 + CARRY4(shifted_input_4,input3) + ((int)temp3 >> (difference & 0xff)) +\n            (uint)CARRY4(temp1,temp2);\n  }\n  else {\n    carry_bit = temp3 << (-difference + 0x40 & 0xff);\n    if (input3 != 0) {\n      carry_bit = carry_bit | 2;\n    }\n    temp3 = (int)temp3 >> (difference - 0x20 & 0xff);\n    temp_result2 = shifted_input_4 + temp3;\n    shifted_input4 = shifted_input4 + ((int)temp3 >> 0x1f) + (uint)CARRY4(shifted_input_4,temp3);\n  }\n  input2 = shifted_input4 & 0x80000000;\n  difference = shifted_input4;\n  if ((int)shifted_input4 < 0) {\n    is_zero = carry_bit == 0;\n    carry_bit = -carry_bit;\n    difference = -temp_result2;\n    temp_result2 = -(uint)!is_zero - temp_result2;\n    difference = -(uint)(is_zero <= difference) - shifted_input4;\n  }\n  if (0xfffff < difference) {\n    shifted_input_4 = shifted_input2 - 1;\n    if (0x1fffff < difference) {\n      shifted_input4 = difference & 1;\n      difference = difference >> 1;\n      carry = (byte)temp_result2;\n      temp_result2 = (uint)(shifted_input4 != 0) << 0x1f | temp_result2 >> 1;\n      carry_bit = (uint)(carry & 1) << 0x1f | carry_bit >> 1;\n      shifted_input_4 = shifted_input2;\n      if (0xffbfffff < shifted_input2 * 0x200000) goto LAB_080003ac;\n    }\nLAB_08000278:\n    is_zero = 0x7fffffff < carry_bit;\n    if (carry_bit == 0x80000000) {\n      is_zero = (temp_result2 & 1) != 0;\n    }\n    return CONCAT44(difference + shifted_input_4 * 0x100000 + (uint)CARRY4(temp_result2,(uint)is_zero) | input2,\n                    temp_result2 + is_zero);\n  }\n  is_equal = (carry_bit & 0x80000000) != 0;\n  carry_bit = carry_bit << 1;\n  shifted_input_4 = temp_result2 * 2;\n  is_zero = CARRY4(temp_result2,temp_result2);\n  temp_result2 = temp_result2 * 2 + (uint)is_equal;\n  difference = difference * 2 + (uint)(is_zero || CARRY4(shifted_input_4,(uint)is_equal));\n  shifted_input_4 = shifted_input2 - 2;\n  if ((difference & 0x100000) != 0) goto LAB_08000278;\n  temp3 = temp_result2;\n  shifted_input2 = difference;\n  if (difference == 0) {\n    temp3 = 0;\n    shifted_input2 = temp_result2;\n  }\n  shift2 = leading_zero_count(shifted_input2);\n  if (difference == 0) {\n    shift2 = shift2 + 0x20;\n  }\n  temp_result2 = shift2 - 0xb;\n  is_carry = SBORROW4(temp_result2,0x20);\n  difference = shift2 - 0x2b;\n  is_zero = (int)difference < 0;\n  is_equal = difference == 0;\n  if ((int)temp_result2 < 0x20) {\n    is_carry = SCARRY4(difference,0xc);\n    shift2 = shift2 + -0x1f;\n    is_zero = shift2 < 0;\n    is_equal = shift2 == 0;\n    difference = temp_result2;\n    if (!is_equal && is_zero == is_carry) {\n      temp3 = shifted_input2 << (temp_result2 & 0xff);\n      shifted_input2 = shifted_input2 >> (0xcU - shift2 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (is_equal || is_zero != is_carry) {\n    carry_bit = 0x20 - difference;\n  }\n  shifted_input2 = shifted_input2 << (difference & 0xff);\n  if (is_equal || is_zero != is_carry) {\n    shifted_input2 = shifted_input2 | temp3 >> (carry_bit & 0xff);\n  }\n  if (is_equal || is_zero != is_carry) {\n    temp3 = temp3 << (difference & 0xff);\n  }\nLAB_080002f0:\n  if ((int)temp_result2 <= (int)shifted_input_4) {\n    return CONCAT44(shifted_input2 + (shifted_input_4 - temp_result2) * 0x100000 | input2,temp3);\n  }\n  difference = ~(shifted_input_4 - temp_result2);\n  if ((int)difference < 0x1f) {\n    shift2 = difference - 0x13;\n    if (shift2 != 0 && shift2 < 0 == SCARRY4(difference - 0x1f,0xc)) {\n      return CONCAT44(shifted_input4,temp3 >> (0x20 - (0xcU - shift2) & 0xff) | shifted_input2 << (0xcU - shift2 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    difference = difference + 1;\n    return CONCAT44(input2 | shifted_input2 >> (difference & 0xff),\n                    temp3 >> (difference & 0xff) | shifted_input2 << (0x20 - difference & 0xff));\n  }\n  return CONCAT44(shifted_input4,shifted_input2 >> (difference - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "current_name": "calculate_64bit_result_0800016c",
            "entrypoint": "0x0800016c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800016c": "calculate_64bit_result_0800016c",
                "LZCOUNT": "leading_zero_count",
                "bVar13": "is_equal",
                "bVar14": "is_zero",
                "bVar15": "is_carry",
                "bVar2": "carry",
                "iVar1": "shift1",
                "iVar6": "shift2",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar10": "difference",
                "uVar11": "carry_bit",
                "uVar12": "temp_result2",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar5": "temp3",
                "uVar7": "shifted_input2",
                "uVar8": "shifted_input_4",
                "uVar9": "shifted_input4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000404": {
            "additional_data": {
                "0x13": {
                    "boundary4": 1
                },
                "0x1e": {
                    "boundary3": 1
                },
                "0x433": {
                    "boundary1": 1
                },
                "0x80000000ffffffff": {
                    "max_u_int64": 1
                },
                "CONCAT44": {
                    "concatenate64": 1
                },
                "FUN_08000404": {
                    "binary_to_decimal": 1,
                    "bit_shift_and_concat": 1,
                    "bitwise_shift": 4,
                    "bitwise_shift_and_concatenate": 1,
                    "calculate_shifted_value": 2,
                    "decode_and_shift_bits": 1,
                    "extract_bits": 1,
                    "reverse_and_shift_bits": 2,
                    "reverse_bits": 10,
                    "reverse_bits_and_shift": 3,
                    "reverse_unsigned_integer": 1,
                    "shift_and_combine": 1,
                    "shift_and_combine_bits": 1,
                    "shift_and_concat": 1,
                    "shift_and_concatenate": 1
                },
                "LAB_080002f0": {
                    "end_loop": 1,
                    "perform_shift": 1,
                    "shift_operation": 1
                },
                "LZCOUNT": {
                    "leading_zero_count": 2
                },
                "SCARRY4": {
                    "signed_carry": 1
                },
                "bVar7": {
                    "comp1": 1,
                    "is_equal_zero": 1,
                    "is_leading_zero": 1,
                    "is_leading_zero_negative": 1,
                    "is_negative": 15,
                    "is_negative_shift": 2,
                    "is_negative_shift_amount_negative": 1,
                    "is_positive": 1,
                    "is_shift_less_than_zero": 1,
                    "is_zero": 1,
                    "is_zero_shift": 1,
                    "leading_zero_flag": 2,
                    "less_than_zero": 1,
                    "no_shift": 1,
                    "non_negative": 1
                },
                "bVar8": {
                    "comp2": 1,
                    "equals_zero": 1,
                    "has_leading_zeroes": 1,
                    "is_greater_than_zero": 1,
                    "is_leading_zero_zero": 1,
                    "is_negative_shift_amount_zero": 1,
                    "is_shift_equal_to_zero": 1,
                    "is_shift_negative": 1,
                    "is_shifted_bit_count_zero": 1,
                    "is_zero": 15,
                    "is_zero_or_negative": 1,
                    "is_zero_shift": 2,
                    "leading_zero_equal_flag": 1,
                    "no_shift_zero": 1,
                    "zero_flag": 1,
                    "zero_leading_zeros": 1
                },
                "bVar9": {
                    "carry": 2,
                    "carry_flag": 4,
                    "carry_overflow": 1,
                    "check_shift": 1,
                    "has_carry": 1,
                    "has_overflow": 1,
                    "is_borrow": 1,
                    "is_carry": 4,
                    "is_carry_set": 2,
                    "is_negative_carry": 1,
                    "is_overflow": 3,
                    "is_shift_borrow": 1,
                    "is_shift_higher_than31": 1,
                    "no_shift_carry": 1,
                    "overflow": 5,
                    "overflow_flag": 1,
                    "sub_overflow": 1
                },
                "iVar4": {
                    "bit_count": 2,
                    "bits_to_shift": 1,
                    "ivar": 1,
                    "leading_zero_count": 1,
                    "leading_zeroes": 3,
                    "leading_zeros": 20,
                    "least_significant_bit": 1,
                    "lzcount_result": 1,
                    "number_of_shifts": 1
                },
                "in_r12": {
                    "complement": 1,
                    "leading_bits": 1,
                    "mask": 3,
                    "remaining_bits": 19,
                    "remaining_shift": 4,
                    "shift_remaining": 1,
                    "temp": 1,
                    "temp_value": 1
                },
                "new_parameter_name": {
                    "bit_count": 1
                },
                "new_variable_name": {
                    "old_variable_name": 1,
                    "remaining_shift": 1
                },
                "param_1": {
                    "input": 20,
                    "input_num": 1,
                    "input_number": 2,
                    "input_param": 1,
                    "input_value": 5,
                    "number": 2
                },
                "uVar1": {
                    "bit_count": 3,
                    "bit_count_positive": 1,
                    "bits_to_shift_right": 1,
                    "count": 3,
                    "count1": 1,
                    "count_leading_zeros": 1,
                    "count_ones": 1,
                    "leading_zeros_count": 1,
                    "positive_num": 1,
                    "result": 3,
                    "shift_amount": 5,
                    "shifted_number": 2,
                    "shifted_value": 6,
                    "temp_var1": 1,
                    "zero_count": 1
                },
                "uVar2": {
                    "abs_input": 14,
                    "abs_num": 1,
                    "abs_value": 3,
                    "absolute_value": 3,
                    "adjusted_number": 1,
                    "bit_count": 1,
                    "positive_input": 1,
                    "shifted_number": 1,
                    "shifted_sign_and_value": 1,
                    "temp": 1,
                    "temp_value1": 1,
                    "temp_var": 1,
                    "temp_var1": 1,
                    "tmp1": 1
                },
                "uVar3": {
                    "bit_shift_amount": 1,
                    "count2": 1,
                    "remaining_bits": 1,
                    "shift": 2,
                    "shift_amount": 18,
                    "shift_count": 3,
                    "shifted_bits": 1,
                    "shifted_number": 1,
                    "temp_var2": 1,
                    "tmp2": 1
                },
                "uVar5": {
                    "adjusted_bit_count": 1,
                    "adjusted_shift": 4,
                    "adjusted_shift_amount": 1,
                    "bit_shifted1": 1,
                    "final_shift": 1,
                    "normalized_shift": 1,
                    "required_bits": 1,
                    "result_lshift": 1,
                    "shift_amount": 1,
                    "shift_amt": 1,
                    "shift_value": 1,
                    "shift_value1": 1,
                    "shifted_amount": 1,
                    "shifted_bit_count": 1,
                    "shifted_bits": 1,
                    "shifted_value": 2,
                    "shifted_value_plus_constant": 1,
                    "target_bit_count": 1,
                    "total_bits": 6,
                    "total_shift": 3
                },
                "uVar6": {
                    "input_sign": 2,
                    "is_negative": 3,
                    "shifted_sign": 1,
                    "sign": 1,
                    "sign_bit": 24
                },
                "uVar7": {
                    "shifted_input": 2,
                    "shifted_result": 1
                },
                "uVar8": {
                    "shifted_output": 1,
                    "shifted_result": 1
                },
                "uVar9": {
                    "shifted_result2": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08006228"
            ],
            "code": "\nulonglong reverse_and_shift_bits_08000404(uint input)\n\n{\n  uint shifted_value;\n  uint abs_input;\n  uint shift_amount;\n  int leading_zeros;\n  uint total_bits;\n  uint sign_bit;\n  uint remaining_bits;\n  bool is_negative;\n  bool is_zero;\n  bool overflow;\n  \n  if (input == 0) {\n    return 0;\n  }\n  sign_bit = input & 0x80000000;\n  abs_input = input;\n  if ((int)sign_bit < 0) {\n    abs_input = -input;\n  }\n  shifted_value = 0;\n  leading_zeros = leading_zero_count(abs_input);\n  total_bits = leading_zeros + 0x15;\n  overflow = SBORROW4(total_bits,0x20);\n  shift_amount = leading_zeros - 0xb;\n  is_negative = (int)shift_amount < 0;\n  is_zero = shift_amount == 0;\n  if (total_bits < 0x20) {\n    overflow = signed_carry(shift_amount,0xc);\n    is_negative = false;\n    is_zero = leading_zeros + 1 == 0;\n    shift_amount = total_bits;\n    if (!is_zero && overflow == false) {\n      shifted_value = abs_input << total_bits;\n      abs_input = abs_input >> (0xcU - (leading_zeros + 1) & 0xff);\n      goto shift_operation;\n    }\n  }\n  if (is_zero || is_negative != overflow) {\n    remaining_bits = 0x20 - shift_amount;\n  }\n  abs_input = abs_input << (shift_amount & 0xff);\n  if (is_zero || is_negative != overflow) {\n    abs_input = abs_input | 0U >> (remaining_bits & 0xff);\n  }\n  if (is_zero || is_negative != overflow) {\n    shifted_value = 0 << (shift_amount & 0xff);\n  }\nshift_operation:\n  if (total_bits < 0x433) {\n    return concatenate64(abs_input + (0x432 - total_bits) * 0x100000 | sign_bit,shifted_value);\n  }\n  shift_amount = ~(0x432 - total_bits);\n  if (0x1e < (int)shift_amount) {\n    return concatenate64(input,abs_input >> (shift_amount - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  leading_zeros = shift_amount - 0x13;\n  if (leading_zeros == 0 || leading_zeros < 0 != signed_carry(shift_amount - 0x1f,0xc)) {\n    shift_amount = shift_amount + 1;\n    return concatenate64(sign_bit | abs_input >> (shift_amount & 0xff),\n                    shifted_value >> (shift_amount & 0xff) | abs_input << (0x20 - shift_amount & 0xff));\n  }\n  return concatenate64(input,shifted_value >> (0x20 - (0xcU - leading_zeros) & 0xff) | abs_input << (0xcU - leading_zeros & 0xff))\n         & 0x80000000ffffffff;\n}\n\n",
            "current_name": "reverse_and_shift_bits_08000404",
            "entrypoint": "0x08000404",
            "imported": false,
            "improved": true,
            "renaming": {
                "CONCAT44": "concatenate64",
                "FUN_08000404": "reverse_and_shift_bits_08000404",
                "LAB_080002f0": "shift_operation",
                "LZCOUNT": "leading_zero_count",
                "SCARRY4": "signed_carry",
                "bVar7": "is_negative",
                "bVar8": "is_zero",
                "bVar9": "overflow",
                "iVar4": "leading_zeros",
                "in_r12": "remaining_bits",
                "param_1": "input",
                "uVar1": "shifted_value",
                "uVar2": "abs_input",
                "uVar3": "shift_amount",
                "uVar5": "total_bits",
                "uVar6": "sign_bit"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000428": {
            "additional_data": {
                "FUN_08000428": {
                    "reverse_binary_code": 1,
                    "reverse_bits": 20,
                    "reverse_bits_with_mask": 1,
                    "reverse_shift": 1,
                    "reversed_bits": 1
                },
                "bVar10": {
                    "carry_overflow": 2,
                    "check3": 2,
                    "compare_result3": 1,
                    "flag3": 1,
                    "is_bit_count_negative": 1,
                    "is_bit_difference_less_than_zero": 1,
                    "is_carry": 5,
                    "is_leading_zero": 1,
                    "is_leading_zeros_negative": 1,
                    "is_negative": 5,
                    "is_negative_shift": 1,
                    "is_overflow": 1,
                    "is_positive": 1,
                    "is_range_negative": 1,
                    "is_shift_negative": 1,
                    "is_shifted": 1,
                    "is_sign_less_than_zero": 1,
                    "less_than26_bits": 1,
                    "overflow": 1,
                    "temp_bool": 1,
                    "temp_bool3": 1
                },
                "bVar8": {
                    "check1": 2,
                    "compare_result1": 1,
                    "flag1": 1,
                    "is_bit_count_equal": 1,
                    "is_count_zero": 1,
                    "is_less": 1,
                    "is_less_than": 1,
                    "is_less_than32": 1,
                    "is_negative": 8,
                    "is_negative_shift": 2,
                    "is_positive": 1,
                    "is_zero": 6,
                    "less_than32_bits": 1,
                    "positive_bit_range": 1,
                    "shifted_remainder": 1,
                    "should_shift": 1,
                    "temp_bool1": 1
                },
                "bVar9": {
                    "check2": 2,
                    "compare_result2": 1,
                    "flag2": 1,
                    "is_all_zero": 1,
                    "is_conditional_mask_zero": 1,
                    "is_equal": 2,
                    "is_ff000000": 1,
                    "is_flag_set": 1,
                    "is_flag_zero": 2,
                    "is_full": 1,
                    "is_mask_full": 1,
                    "is_mask_zero": 4,
                    "is_masked": 1,
                    "is_nonzero_mask": 1,
                    "is_zero": 10,
                    "temp_bool2": 1
                },
                "iVar6": {
                    "bit_count": 7,
                    "count": 6,
                    "count_var": 1,
                    "leading_zeroes": 1,
                    "leading_zeros": 6,
                    "lzcount_result": 1,
                    "num_bits": 1,
                    "number_of_bits": 1,
                    "number_of_leading_zeros": 1,
                    "shift_amount": 2,
                    "shift_count": 2,
                    "shifted_result": 1,
                    "trailing_zeros": 1
                },
                "in_r12": {
                    "bit_shift_amount": 1,
                    "constant": 1,
                    "extra_shift": 1,
                    "in_r12": 1,
                    "inverted_count": 1,
                    "mask": 2,
                    "remainder": 1,
                    "remaining": 1,
                    "remaining_bits": 13,
                    "remaining_shift": 3,
                    "shifted_value4": 1,
                    "temp": 1,
                    "temp3": 1,
                    "temp_value": 1,
                    "temp_var": 1
                },
                "new_param_name_n": {
                    "unused_param_n": 1
                },
                "param_1": {
                    "input": 25,
                    "input_number": 2,
                    "input_value": 3,
                    "value": 1
                },
                "param_2": {
                    "arg1": 3,
                    "param2": 3,
                    "seed": 1,
                    "shift_1": 1,
                    "size1": 1,
                    "unused": 3,
                    "unused1": 1,
                    "unused_param": 1,
                    "unused_param1": 2,
                    "unused_parameter": 1
                },
                "param_3": {
                    "arg2": 3,
                    "flag": 1,
                    "param3": 3,
                    "shift_2": 1,
                    "size2": 1,
                    "unused": 3,
                    "unused2": 1,
                    "unused_param": 1,
                    "unused_param2": 2,
                    "unused_parameter": 1
                },
                "param_4": {
                    "arg3": 3,
                    "condition": 1,
                    "conditional_mask": 1,
                    "constant": 1,
                    "flag": 5,
                    "flag_value": 1,
                    "mask": 14,
                    "mask_value": 1,
                    "param4": 3,
                    "unused_param3": 1
                },
                "uVar1": {
                    "additional_bit": 1,
                    "bit31": 3,
                    "bit31_mask": 2,
                    "bit31_set": 1,
                    "flag": 1,
                    "flag1": 1,
                    "high_bit": 5,
                    "high_bit_mask": 1,
                    "highest_bit": 1,
                    "is_negative": 1,
                    "mask_shifted": 1,
                    "msb": 1,
                    "msb_flag": 1,
                    "msb_shift": 1,
                    "shifted_value1": 1,
                    "sign_bit": 5,
                    "sign_extension": 3,
                    "upper_bit": 1
                },
                "uVar2": {
                    "input": 1,
                    "output": 1,
                    "result": 5,
                    "result_high": 1,
                    "result_lower_part": 1,
                    "result_var1": 1,
                    "shifted_input": 6,
                    "temp": 5,
                    "temp1": 4,
                    "temp_value1": 1,
                    "temp_var1": 2,
                    "u_var": 1,
                    "val1": 1,
                    "var1": 1
                },
                "uVar3": {
                    "bit63": 1,
                    "bit_pattern": 1,
                    "combined": 1,
                    "combined_result": 1,
                    "combined_values": 1,
                    "concatenated_value": 1,
                    "flag2": 1,
                    "masked_result": 1,
                    "output_high": 1,
                    "res": 1,
                    "result": 9,
                    "result1": 3,
                    "result_high": 3,
                    "result_low": 1,
                    "result_part1": 1,
                    "result_upper": 1,
                    "result_upper_part": 1,
                    "result_var2": 1
                },
                "uVar4": {
                    "bit_shift": 1,
                    "shift": 2,
                    "shift_amount": 5,
                    "shift_count": 2,
                    "shift_value": 1,
                    "shifted": 1,
                    "shifted_bits": 3,
                    "shifted_input": 9,
                    "shifted_input2": 1,
                    "shifted_input_adjusted": 1,
                    "shifted_value": 1,
                    "shifted_value2": 1,
                    "temp2": 1,
                    "val2": 1,
                    "var2": 1
                },
                "uVar5": {
                    "bits": 1,
                    "double_input": 1,
                    "doubled_input": 1,
                    "input_times_2": 1,
                    "multiplied_value": 1,
                    "shifted_input": 6,
                    "shifted_input3": 1,
                    "shifted_input_by_one": 1,
                    "shifted_input_normalized": 1,
                    "shifted_input_with_sign": 1,
                    "shifted_mask": 1,
                    "shifted_value": 1,
                    "shifted_value3": 1,
                    "temp": 5,
                    "temp2": 3,
                    "temp_input": 2,
                    "temp_var2": 1,
                    "twice_input": 1,
                    "var3": 1
                },
                "uVar7": {
                    "adjusted_count": 1,
                    "adjusted_shift_amount": 1,
                    "bit_count2": 1,
                    "bit_difference": 1,
                    "bit_range": 1,
                    "decremented_zeros": 1,
                    "diff": 2,
                    "masked_input": 1,
                    "normalized_bit_count": 1,
                    "shift_amount": 10,
                    "shift_sub_amount": 1,
                    "shift_value": 1,
                    "shifted_amount": 1,
                    "shifted_bits": 1,
                    "shifted_result": 2,
                    "temp": 1,
                    "temp3": 1,
                    "temp_result": 1,
                    "tmp": 1,
                    "u_var7": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003330",
                "FUN_0800411c"
            ],
            "code": "\nulonglong reverse_bits_with_mask_08000428(uint input,undefined4 param2,undefined4 unused,uint mask)\n\n{\n  uint high_bit;\n  uint shifted_input;\n  uint result;\n  uint shifted_input;\n  uint shifted_input;\n  int bit_count;\n  uint shift_amount;\n  uint remaining_bits;\n  bool is_negative;\n  bool is_zero;\n  bool is_carry;\n  \n  shifted_input = input << 1;\n  is_zero = shifted_input == 0;\n  high_bit = (uint)((input & 0x80000000) != 0) << 0x1f;\n  shifted_input = (uint)((int)shifted_input >> 3) >> 1;\n  result = high_bit | shifted_input;\n  input = input << 0x1d;\n  if (!is_zero) {\n    mask = shifted_input & 0xff000000;\n    is_zero = mask == 0;\n  }\n  if (!is_zero) {\n    is_zero = mask == 0xff000000;\n  }\n  if (!is_zero) {\n    return CONCAT44(result,input) ^ 0x3800000000000000;\n  }\n  if (shifted_input == 0 || mask == 0xff000000) {\n    return CONCAT44(result,input);\n  }\n  shifted_input = input;\n  shifted_input = shifted_input;\n  if (shifted_input == 0) {\n    shifted_input = 0;\n    shifted_input = input;\n  }\n  bit_count = LZCOUNT(shifted_input);\n  if (shifted_input == 0) {\n    bit_count = bit_count + 0x20;\n  }\n  shift_amount = bit_count - 0xb;\n  is_carry = SBORROW4(shift_amount,0x20);\n  shifted_input = bit_count - 0x2b;\n  is_zero = (int)shifted_input < 0;\n  is_negative = shifted_input == 0;\n  if ((int)shift_amount < 0x20) {\n    is_carry = SCARRY4(shifted_input,0xc);\n    bit_count = bit_count + -0x1f;\n    is_zero = bit_count < 0;\n    is_negative = bit_count == 0;\n    shifted_input = shift_amount;\n    if (!is_negative && is_zero == is_carry) {\n      shifted_input = shifted_input << (shift_amount & 0xff);\n      shifted_input = shifted_input >> (0xcU - bit_count & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (is_negative || is_zero != is_carry) {\n    remaining_bits = 0x20 - shifted_input;\n  }\n  shifted_input = shifted_input << (shifted_input & 0xff);\n  if (is_negative || is_zero != is_carry) {\n    shifted_input = shifted_input | shifted_input >> (remaining_bits & 0xff);\n  }\n  if (is_negative || is_zero != is_carry) {\n    shifted_input = shifted_input << (shifted_input & 0xff);\n  }\nLAB_080002f0:\n  if ((int)shift_amount < 0x381) {\n    return CONCAT44(shifted_input + (0x380 - shift_amount) * 0x100000 | high_bit,shifted_input);\n  }\n  shifted_input = ~(0x380 - shift_amount);\n  if ((int)shifted_input < 0x1f) {\n    bit_count = shifted_input - 0x13;\n    if (bit_count != 0 && bit_count < 0 == SCARRY4(shifted_input - 0x1f,0xc)) {\n      return CONCAT44(result,shifted_input >> (0x20 - (0xcU - bit_count) & 0xff) | shifted_input << (0xcU - bit_count & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    shifted_input = shifted_input + 1;\n    return CONCAT44(high_bit | shifted_input >> (shifted_input & 0xff),\n                    shifted_input >> (shifted_input & 0xff) | shifted_input << (0x20 - shifted_input & 0xff));\n  }\n  return CONCAT44(result,shifted_input >> (shifted_input - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "current_name": "reverse_bits_with_mask_08000428",
            "entrypoint": "0x08000428",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000428": "reverse_bits_with_mask_08000428",
                "bVar10": "is_carry",
                "bVar8": "is_negative",
                "bVar9": "is_zero",
                "iVar6": "bit_count",
                "in_r12": "remaining_bits",
                "param_1": "input",
                "param_2": "param2",
                "param_3": "unused",
                "param_4": "mask",
                "uVar1": "high_bit",
                "uVar2": "shifted_input",
                "uVar3": "result",
                "uVar4": "shifted_input",
                "uVar5": "shifted_input",
                "uVar7": "shift_amount"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080004d0": {
            "additional_data": {
                "FUN_080004d0": {
                    "calculate": 1,
                    "calculate_exponent": 1,
                    "calculate_float": 1,
                    "calculate_floating_point": 2,
                    "calculate_product": 5,
                    "calculate_result": 14,
                    "calculate_sum": 2,
                    "calculate_value": 1,
                    "calculation_function": 1,
                    "compute_exponential": 1,
                    "perform_calculation": 1
                },
                "bVar10": {
                    "bit_check2": 1,
                    "bool2": 2,
                    "carry": 1,
                    "check2": 1,
                    "compare_flag": 1,
                    "cond2": 1,
                    "flag2": 14,
                    "is_carry": 1,
                    "is_greater1": 1,
                    "is_greater_than": 1,
                    "is_negative": 2,
                    "is_negative1": 2,
                    "is_true2": 1,
                    "is_zero2": 1,
                    "temp_bool_2": 1
                },
                "bVar11": {
                    "bit_check3": 1,
                    "bit_mask_flag": 1,
                    "bool3": 2,
                    "check3": 1,
                    "cond3": 1,
                    "flag2": 1,
                    "flag3": 13,
                    "is_negative": 1,
                    "is_negative1": 2,
                    "is_negative2": 2,
                    "is_overflow": 2,
                    "is_sub_overflow": 1,
                    "is_true3": 1,
                    "subtraction_overflow": 1,
                    "temp_bool_3": 1
                },
                "bVar9": {
                    "bit_check1": 1,
                    "bool1": 2,
                    "check1": 1,
                    "cond1": 1,
                    "flag1": 15,
                    "is_equal": 1,
                    "is_true1": 1,
                    "is_zero": 5,
                    "is_zero1": 3,
                    "temp_bool_1": 1
                },
                "iVar5": {
                    "result5": 3,
                    "sum": 7,
                    "sum1": 1,
                    "sum_bits": 1,
                    "sum_exponents": 1,
                    "temp3": 10,
                    "temp4": 1,
                    "temp5": 3,
                    "temp_int_1": 1,
                    "temp_var3": 1,
                    "var3": 1,
                    "z": 1
                },
                "lVar2": {
                    "partial_product": 1,
                    "product2": 2,
                    "product_upper": 1,
                    "result2": 10,
                    "result_64_2": 1,
                    "temp": 7,
                    "temp1": 1,
                    "temp2": 5,
                    "temp_var": 2,
                    "temporary64": 1
                },
                "param_1": {
                    "a": 1,
                    "arg1": 1,
                    "exponent_part": 1,
                    "first_param": 1,
                    "input1": 19,
                    "input_param1": 2,
                    "input_param_1": 1,
                    "param1": 2,
                    "value1": 3
                },
                "param_2": {
                    "arg2": 1,
                    "b": 1,
                    "input2": 19,
                    "input_param2": 2,
                    "input_param_2": 1,
                    "param2": 2,
                    "second_param": 1,
                    "significand_part": 1,
                    "value2": 3
                },
                "param_3": {
                    "arg3": 1,
                    "c": 1,
                    "exponent_part2": 1,
                    "input3": 19,
                    "input_param3": 2,
                    "input_param_3": 1,
                    "param3": 2,
                    "third_param": 1,
                    "value3": 3
                },
                "param_4": {
                    "arg4": 1,
                    "d": 1,
                    "fourth_param": 1,
                    "input4": 19,
                    "input_param4": 2,
                    "input_param_4": 1,
                    "param4": 2,
                    "significand_part2": 1,
                    "value4": 3
                },
                "uVar1": {
                    "product1": 2,
                    "product_low": 2,
                    "product_lower": 1,
                    "result": 8,
                    "result1": 11,
                    "result_64_1": 1,
                    "result_upper": 1,
                    "temp1": 5
                },
                "uVar12": {
                    "combined_input": 9,
                    "combined_inputs": 4,
                    "combined_params": 3,
                    "combined_values": 2,
                    "concat_var": 1,
                    "concatenated": 1,
                    "concatenated_input": 1,
                    "concatenated_value": 1,
                    "input": 1,
                    "input_param_2_1_combined": 1,
                    "product": 3,
                    "result": 2,
                    "temp10": 2
                },
                "uVar3": {
                    "first_half": 1,
                    "high_bits1": 1,
                    "mask": 1,
                    "mask1": 2,
                    "param2_high": 1,
                    "result1": 1,
                    "result3": 3,
                    "result_exponent": 1,
                    "result_upper_temp": 1,
                    "temp1": 10,
                    "temp2": 1,
                    "temp3": 3,
                    "temp_32_1": 1,
                    "temp_var1": 1,
                    "upper_bits1": 1,
                    "var1": 1,
                    "x": 1
                },
                "uVar4": {
                    "high_bits2": 1,
                    "input_param2_upper": 1,
                    "mask2": 3,
                    "param2_bits": 1,
                    "param_2_mask": 1,
                    "result4": 3,
                    "second_half": 1,
                    "temp2": 10,
                    "temp3": 1,
                    "temp4": 3,
                    "temp_32_2": 1,
                    "temp_exponent": 1,
                    "temp_var2": 1,
                    "upper_bits2": 1,
                    "var2": 1,
                    "y": 1
                },
                "uVar6": {
                    "carry": 1,
                    "diff": 1,
                    "difference1": 1,
                    "remainder": 1,
                    "result6": 3,
                    "temp": 1,
                    "temp1": 3,
                    "temp3": 1,
                    "temp4": 10,
                    "temp5": 1,
                    "temp6": 3,
                    "temp_32_3": 1,
                    "temp_result": 1,
                    "temp_var4": 1,
                    "var4": 1,
                    "w": 1
                },
                "uVar7": {
                    "bit_mask": 1,
                    "difference2": 1,
                    "lower_bits": 1,
                    "lower_value": 1,
                    "m": 1,
                    "mask": 2,
                    "result7": 1,
                    "sum_bits2": 1,
                    "temp": 1,
                    "temp2": 1,
                    "temp3": 1,
                    "temp5": 6,
                    "temp6": 5,
                    "temp7": 1,
                    "temp8": 3,
                    "temp_32_5": 1,
                    "temp_result": 1,
                    "temp_var6": 1,
                    "var5": 1
                },
                "uVar8": {
                    "carry_bits": 1,
                    "lower_bits": 1,
                    "mask2": 1,
                    "n": 1,
                    "result": 1,
                    "result1": 1,
                    "result8": 1,
                    "result9": 1,
                    "temp2": 1,
                    "temp3": 1,
                    "temp4": 1,
                    "temp6": 5,
                    "temp7": 5,
                    "temp8": 1,
                    "temp9": 3,
                    "temp_32_6": 1,
                    "temp_result": 1,
                    "temp_result_low": 1,
                    "temp_var7": 1,
                    "upper_value": 1,
                    "var6": 1
                },
                "unaff_r5": {
                    "high_bits3": 1,
                    "input_param4_upper": 1,
                    "mask3": 1,
                    "param4_bits": 1,
                    "result3": 1,
                    "result7": 2,
                    "sum2": 1,
                    "temp2": 1,
                    "temp4": 1,
                    "temp5": 5,
                    "temp6": 1,
                    "temp7": 4,
                    "temp_32_4": 1,
                    "temp_value": 1,
                    "temp_var5": 1,
                    "unaffected": 1,
                    "v": 1
                }
            },
            "called": [
                "FUN_080006ac"
            ],
            "calling": [
                "FUN_08005c70",
                "FUN_08006d68",
                "FUN_08006c0c",
                "FUN_08003330",
                "FUN_08005900",
                "FUN_08006228",
                "FUN_0800411c",
                "FUN_080071c0"
            ],
            "code": "\nulonglong calculate_result_080004d0(undefined4 input1,uint input2,uint input3,uint input4)\n\n{\n  ulonglong result1;\n  longlong result2;\n  uint temp1;\n  uint temp2;\n  int temp3;\n  uint temp4;\n  uint temp5;\n  uint temp5;\n  uint temp7;\n  bool flag1;\n  bool flag2;\n  bool flag3;\n  ulonglong combined_input;\n  \n  combined_input = CONCAT44(input2,input1);\n  temp5 = 0x7ff;\n  temp2 = input2 >> 0x14 & 0x7ff;\n  flag1 = temp2 == 0;\n  if (!flag1) {\n    temp5 = input4 >> 0x14 & 0x7ff;\n    flag1 = temp5 == 0;\n  }\n  if (!flag1) {\n    flag1 = temp2 == 0x7ff;\n  }\n  if (!flag1) {\n    flag1 = temp5 == 0x7ff;\n  }\n  if (flag1) {\n    combined_input = FUN_080006ac();\n  }\n  temp1 = (uint)(combined_input >> 0x20);\n  temp3 = temp2 + temp5;\n  temp2 = temp1 ^ input4;\n  temp1 = temp1 & ~(temp5 << 0x15);\n  input4 = input4 & ~(temp5 << 0x15);\n  flag1 = ((uint)combined_input | temp1 << 0xc) == 0;\n  if (!flag1) {\n    flag1 = (input3 | input4 << 0xc) == 0;\n  }\n  temp1 = temp1 | 0x100000;\n  input4 = input4 | 0x100000;\n  if (flag1) {\n    input3 = (uint)combined_input | input3;\n    input4 = (temp2 & 0x80000000 | temp1) ^ input4;\n    temp2 = temp5 >> 1;\n    flag3 = SBORROW4(temp3,temp2);\n    temp4 = temp3 - temp2;\n    flag1 = temp4 == 0;\n    temp1 = temp4;\n    if (!flag1 && (int)temp2 <= temp3) {\n      flag3 = SBORROW4(temp5,temp4);\n      temp1 = temp5 - temp4;\n      flag1 = temp5 == temp4;\n    }\n    if (!flag1 && (int)temp1 < 0 == flag3) {\n      input4 = input4 | temp4 * 0x100000;\n    }\n    if (!flag1 && (int)temp1 < 0 == flag3) {\n      return CONCAT44(input4,input3);\n    }\n    input4 = input4 | 0x100000;\n    temp5 = 0;\n    flag3 = SBORROW4(temp4,1);\n    temp4 = temp4 - 1;\n    flag1 = temp4 == 0;\n    temp2 = temp4;\n  }\n  else {\n    result1 = (combined_input & 0xffffffff) * (ulonglong)input3;\n    combined_input = (combined_input & 0xffffffff) * (ulonglong)input4 +\n             (ulonglong)temp1 * (ulonglong)input3 + (result1 >> 0x20);\n    temp7 = (uint)combined_input;\n    result2 = (ulonglong)temp1 * (ulonglong)input4 + (combined_input >> 0x20);\n    temp5 = (uint)result2;\n    temp1 = (uint)((ulonglong)result2 >> 0x20);\n    if ((int)result1 != 0) {\n      temp7 = temp7 | 1;\n    }\n    temp4 = (temp3 + -0x3ff) - (uint)(temp1 < 0x200);\n    if (temp1 < 0x200) {\n      flag1 = (temp7 & 0x80000000) != 0;\n      temp7 = temp7 << 1;\n      result2 = CONCAT44(temp1 * 2 + (uint)(CARRY4(temp5,temp5) || CARRY4(temp5 * 2,(uint)flag1)),\n                       temp5 * 2 + (uint)flag1);\n    }\n    input4 = temp2 & 0x80000000 | (int)((ulonglong)result2 >> 0x20) << 0xb | (uint)result2 >> 0x15;\n    input3 = (uint)result2 << 0xb | temp7 >> 0x15;\n    temp5 = temp7 * 0x800;\n    flag2 = 0xfc < temp4;\n    flag3 = SBORROW4(temp4,0xfd);\n    temp1 = temp4 - 0xfd;\n    flag1 = temp1 == 0;\n    temp2 = temp1;\n    if (flag2 && !flag1) {\n      flag2 = 0x6ff < temp1;\n      flag3 = SBORROW4(temp1,0x700);\n      temp2 = temp4 - 0x7fd;\n      flag1 = temp1 == 0x700;\n    }\n    if (!flag2 || flag1) {\n      flag1 = 0x7fffffff < temp5;\n      if (temp5 == 0x80000000) {\n        flag1 = (temp7 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(input4 + temp4 * 0x100000 + (uint)CARRY4(input3,(uint)flag1),input3 + flag1\n                     );\n    }\n  }\n  if (!flag1 && (int)temp2 < 0 == flag3) {\n    return (ulonglong)(input4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  flag2 = SCARRY4(temp4,0x36);\n  flag1 = (int)(temp4 + 0x36) < 0;\n  flag3 = temp4 == 0xffffffca;\n  if (flag3 || flag1 != flag2) {\n    input3 = 0;\n  }\n  if (flag3 || flag1 != flag2) {\n    input4 = input4 & 0x80000000;\n  }\n  if (flag3 || flag1 != flag2) {\n    return CONCAT44(input4,input3);\n  }\n  temp2 = -temp4;\n  temp1 = temp2 - 0x20;\n  if (0x1f < (int)temp2) {\n    temp4 = input3 >> (temp1 & 0xff) | input4 << (0x20 - temp1 & 0xff);\n    temp2 = (input4 >> (temp1 & 0xff) & ~((input4 & 0x80000000) >> (temp1 & 0xff))) -\n            ((int)temp4 >> 0x1f);\n    if ((temp5 | input3 << (0x20 - temp1 & 0xff) | temp4 << 1) == 0) {\n      temp2 = temp2 & ~(temp4 >> 0x1f);\n    }\n    return CONCAT44(input4,temp2) & 0x80000000ffffffff;\n  }\n  temp3 = temp2 - 0x14;\n  if (temp3 == 0 || temp3 < 0 != SCARRY4(temp1,0xc)) {\n    temp7 = input3 << (temp4 + 0x20 & 0xff);\n    temp1 = input3 >> (temp2 & 0xff) | input4 << (temp4 + 0x20 & 0xff);\n    temp4 = temp1 + -((int)temp7 >> 0x1f);\n    if ((temp5 | temp7 << 1) == 0) {\n      temp4 = temp4 & ~(temp7 >> 0x1f);\n    }\n    return CONCAT44((input4 & 0x80000000) +\n                    ((input4 & 0x7fffffff) >> (temp2 & 0xff)) +\n                    (uint)CARRY4(temp1,-((int)temp7 >> 0x1f)),temp4);\n  }\n  temp2 = 0xc - temp3;\n  temp4 = input3 << (temp2 & 0xff);\n  temp2 = input3 >> (0x20 - temp2 & 0xff) | input4 << (temp2 & 0xff);\n  temp1 = temp2 + -((int)temp4 >> 0x1f);\n  if ((temp5 | temp4 << 1) == 0) {\n    temp1 = temp1 & ~(temp4 >> 0x1f);\n  }\n  return CONCAT44((input4 & 0x80000000) + (uint)CARRY4(temp2,-((int)temp4 >> 0x1f)),temp1);\n}\n\n",
            "current_name": "calculate_result_080004d0",
            "entrypoint": "0x080004d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080004d0": "calculate_result_080004d0",
                "bVar10": "flag2",
                "bVar11": "flag3",
                "bVar9": "flag1",
                "iVar5": "temp3",
                "lVar2": "result2",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result1",
                "uVar12": "combined_input",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar6": "temp4",
                "uVar7": "temp5",
                "uVar8": "temp7",
                "unaff_r5": "temp5"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080006ac": {
            "additional_data": {
                "FUN_080006ac": {
                    "bitwise_operations": 1,
                    "calculate_bitwise": 1,
                    "calculate_bitwise_operation": 1,
                    "calculate_bitwise_operations": 1,
                    "calculate_bitwise_result": 2,
                    "calculate_bitwise_xor": 2,
                    "calculate_checksum": 1,
                    "calculate_result": 2,
                    "calculate_xor": 2,
                    "calculate_xor_and_shift": 1,
                    "calculate_xor_result": 1,
                    "calculate_xor_shift": 1,
                    "extract_bitwise_operation": 2,
                    "reverse_and_bitwise": 1,
                    "reverse_and_compress": 1,
                    "reverse_bits": 6,
                    "shift_and_check": 1
                },
                "bVar4": {
                    "check": 1,
                    "check_result": 1,
                    "condition": 1,
                    "flag": 2,
                    "flag1": 1,
                    "is_zero": 23
                },
                "in_12": {
                    "constant1": 1
                },
                "in_r12": {
                    "": 1,
                    "bit3": 1,
                    "bit_5": 1,
                    "bit_e": 1,
                    "constant": 2,
                    "constant_1": 1,
                    "constant_2": 1,
                    "constant_value": 1,
                    "input_r12": 1,
                    "mask": 2,
                    "register12": 1,
                    "temp2": 2,
                    "temp5": 3,
                    "temp_2": 1,
                    "temp_5": 1,
                    "temp_b": 1,
                    "temp_bit_5": 1,
                    "temp_reg2": 1,
                    "temp_var2": 1,
                    "temp_var5": 1,
                    "temp_var_5": 1,
                    "tmp5": 1,
                    "var2": 2
                },
                "param_1": {
                    "first_param": 1,
                    "input1": 15,
                    "input_1": 11,
                    "input_a": 2,
                    "input_var1": 1,
                    "value1": 1
                },
                "param_2": {
                    "input2": 14,
                    "input_2": 11,
                    "input_b": 2,
                    "input_var2": 1,
                    "result2": 1,
                    "second_param": 1,
                    "value2": 1
                },
                "param_3": {
                    "input3": 14,
                    "input_3": 11,
                    "input_c": 2,
                    "input_var3": 1,
                    "result3": 1,
                    "third_param": 1,
                    "value3": 1
                },
                "param_4": {
                    "fourth_param": 1,
                    "input4": 14,
                    "input_4": 11,
                    "input_d": 2,
                    "input_var4": 1,
                    "result4": 1,
                    "value4": 1
                },
                "return": {
                    "result": 1
                },
                "return_val": {
                    "result": 1
                },
                "return_value": {
                    "result": 1
                },
                "uVar1": {
                    "bit1": 6,
                    "bit_1": 4,
                    "bit_a": 2,
                    "first_var": 1,
                    "temp2": 4,
                    "temp_1": 3,
                    "temp_3": 1,
                    "temp_bit": 1,
                    "temp_bit_1": 1,
                    "temp_var1": 1,
                    "temp_var3": 1,
                    "temp_var_1": 1,
                    "temp_var_6": 1,
                    "tmp2": 1,
                    "updated_input1": 1,
                    "var3": 1
                },
                "uVar2": {
                    "bit2": 3,
                    "bit3": 1,
                    "bit_2": 2,
                    "bit_3": 2,
                    "bit_b": 1,
                    "bit_c": 1,
                    "mask": 1,
                    "masked_input4": 1,
                    "second_var": 1,
                    "temp1": 1,
                    "temp3": 4,
                    "temp_2": 1,
                    "temp_3": 2,
                    "temp_4": 1,
                    "temp_bit": 1,
                    "temp_bit_3": 1,
                    "temp_var3": 1,
                    "temp_var4": 1,
                    "temp_var_2": 1,
                    "temp_var_7": 1,
                    "tmp3": 1,
                    "var4": 1
                },
                "uVar3": {
                    "bit3": 3,
                    "bit4": 1,
                    "bit_3": 2,
                    "bit_4": 2,
                    "bit_c": 1,
                    "bit_d": 1,
                    "result": 1,
                    "result1": 1,
                    "temp4": 4,
                    "temp_3": 1,
                    "temp_4": 2,
                    "temp_5": 1,
                    "temp_bit": 1,
                    "temp_bit_4": 1,
                    "temp_var5": 1,
                    "temp_var6": 1,
                    "temp_var_3": 1,
                    "temp_var_8": 1,
                    "third_var": 1,
                    "tmp4": 1,
                    "updated_input2": 1,
                    "var5": 1
                },
                "uVar5": {
                    "": 1,
                    "temp6": 1,
                    "temp_5": 1
                },
                "unaff_r4": {
                    "": 1,
                    "bit2": 3,
                    "bit_2": 2,
                    "bit_b": 1,
                    "constant_1": 1,
                    "constant_2": 1,
                    "non_constant_value": 1,
                    "register4": 1,
                    "temp1": 6,
                    "temp_1": 1,
                    "temp_2": 2,
                    "temp_a": 1,
                    "temp_bit_2": 1,
                    "temp_reg1": 1,
                    "temp_var1": 1,
                    "temp_var2": 1,
                    "temp_var_2": 1,
                    "tmp1": 1,
                    "unaffected_r4": 1,
                    "var1": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_080004d0"
            ],
            "code": "\nulonglong reverse_bits_080006ac(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint bit1;\n  uint temp1;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  bool is_zero;\n  \n  temp3 = temp5 & input4 >> 0x14;\n  if (temp1 != temp5 && temp3 != temp5) {\n    is_zero = (input1 | input2 << 1) == 0;\n    if (!is_zero) {\n      is_zero = (input3 | input4 << 1) == 0;\n    }\n    if (is_zero) {\n      result (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n    }\n    if (temp1 == 0) {\n      temp4 = input2 & 0x80000000;\n      do {\n        bit1 = input1 & 0x80000000;\n        input1 = input1 << 1;\n        input2 = input2 * 2 + (uint)(bit1 != 0);\n      } while ((input2 & 0x100000) == 0);\n      input2 = input2 | temp4;\n      if (temp3 != 0) {\n        result CONCAT44(input2,input1);\n      }\n    }\n    do {\n      temp3 = input3 & 0x80000000;\n      input3 = input3 << 1;\n      input4 = input4 * 2 + (uint)(temp3 != 0);\n    } while ((input4 & 0x100000) == 0);\n    result CONCAT44(input2,input1);\n  }\n  is_zero = (input1 | input2 << 1) == 0;\n  if (is_zero) {\n    input2 = input4;\n    input1 = input3;\n  }\n  if (!is_zero) {\n    is_zero = (input3 | input4 << 1) == 0;\n  }\n  temp4 = input2;\n  if (((!is_zero) && ((temp1 != temp5 || ((input1 | input2 << 0xc) == 0)))) &&\n     ((temp3 != temp5 || (input1 = input3, temp4 = input4, (input3 | input4 << 0xc) == 0)))) {\n    result (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  result CONCAT44(temp4,input1) | 0x7ff8000000000000;\n}\n\n",
            "current_name": "reverse_bits_080006ac",
            "entrypoint": "0x080006ac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080006ac": "reverse_bits_080006ac",
                "bVar4": "is_zero",
                "in_r12": "temp5",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "return": "result",
                "uVar1": "bit1",
                "uVar2": "temp3",
                "uVar3": "temp4",
                "unaff_r4": "temp1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000724": {
            "additional_data": {
                "FUN_08000724": {
                    "binary_to_float": 1,
                    "calculate_double": 1,
                    "calculate_double_precision": 1,
                    "calculate_float": 1,
                    "calculate_float_value": 1,
                    "calculate_floating_point": 11,
                    "calculate_floating_point_value": 2
                },
                "bVar14": {
                    "bool1": 2,
                    "check": 1,
                    "condition1": 7,
                    "condition_flag": 1,
                    "flag1": 9,
                    "flag_1": 2,
                    "is_equal_exponent": 1,
                    "is_exponent_zero": 1,
                    "is_zero": 5,
                    "is_zero_difference": 1,
                    "temp_bool_1": 1
                },
                "bVar15": {
                    "bool2": 2,
                    "check_equal": 1,
                    "condition2": 7,
                    "flag2": 9,
                    "flag_2": 2,
                    "is_equal": 3,
                    "is_equal_difference": 1,
                    "is_equal_result": 1,
                    "is_negative": 1,
                    "is_zero": 1,
                    "is_zero_or_negative": 1,
                    "temp_bool_2": 1,
                    "temp_flag": 1
                },
                "bVar16": {
                    "bool3": 2,
                    "carry": 1,
                    "check_overflow": 1,
                    "condition3": 6,
                    "flag3": 8,
                    "flag4": 1,
                    "flag_3": 2,
                    "is_carry": 2,
                    "is_carrying": 1,
                    "is_negative": 1,
                    "is_negative_difference": 1,
                    "is_overflow": 2,
                    "overflow": 1,
                    "overflow_flag": 1,
                    "temp_bool_3": 1
                },
                "bVar17": {
                    "borrow": 2,
                    "carry_flag": 1,
                    "condition4": 1,
                    "flag4": 1,
                    "is_carry": 1,
                    "is_overflow": 1,
                    "is_unsigned_carry": 1
                },
                "iVar8": {
                    "diff_exponents": 1,
                    "difference": 6,
                    "difference_a_b": 1,
                    "exponent_diff": 2,
                    "exponent_difference": 3,
                    "temp13": 1,
                    "temp8": 10,
                    "temp_8": 3,
                    "temp_var8": 2,
                    "var8": 1,
                    "variable8": 1
                },
                "param_1": {
                    "bits1": 2,
                    "exponent": 1,
                    "fractional_part": 1,
                    "input1": 9,
                    "input_param": 2,
                    "input_param1": 2,
                    "input_param_1": 2,
                    "input_parameter_1": 1,
                    "integer_bits_and_sign": 1,
                    "sign": 7,
                    "sign_bit": 3
                },
                "param_2": {
                    "bits2": 2,
                    "bitwise_param": 1,
                    "exp": 1,
                    "exponent": 6,
                    "exponent_and_sign": 1,
                    "exponent_bits": 3,
                    "fraction_bits": 1,
                    "input2": 9,
                    "input_param2": 2,
                    "input_param_2": 2,
                    "input_parameter_2": 1,
                    "significand": 1,
                    "value1": 1
                },
                "param_3": {
                    "bits3": 2,
                    "combined_bits": 1,
                    "exponent_bits_and_sign_a": 1,
                    "floating_parameter1": 1,
                    "frac_high": 1,
                    "input3": 9,
                    "input_param3": 2,
                    "input_param_3": 2,
                    "input_parameter_3": 1,
                    "mantissa1": 2,
                    "mantissa_bits_1": 1,
                    "mantissa_high": 3,
                    "mantissa_part_a": 1,
                    "other_bits": 1,
                    "shift_param": 1,
                    "significant_bits": 1,
                    "value2": 1
                },
                "param_4": {
                    "bits4": 2,
                    "carry_param": 1,
                    "exponent_bits_and_sign_b": 1,
                    "floating_parameter2": 1,
                    "frac_low": 1,
                    "fraction_bits": 2,
                    "input4": 9,
                    "input_param4": 2,
                    "input_param_4": 2,
                    "input_parameter_4": 1,
                    "mantissa2": 2,
                    "mantissa_bits_2": 1,
                    "mantissa_low": 3,
                    "mantissa_part_b": 1,
                    "other_bits2": 1,
                    "value3": 1
                },
                "uVar1": {
                    "carry": 2,
                    "exponent1": 2,
                    "exponent_bit_mask": 1,
                    "exponent_bits": 1,
                    "frac_high_shifted": 1,
                    "fraction_bits_a": 1,
                    "overflow_bit": 1,
                    "temp1": 14,
                    "temp2": 1,
                    "temp_1": 3,
                    "temp_var1": 2,
                    "var1": 1,
                    "variable1": 1
                },
                "uVar10": {
                    "adjusted_exp": 1,
                    "adjusted_exponent": 1,
                    "adjusted_shifted_mant": 1,
                    "exponent_bits1": 1,
                    "exponent_normalized": 1,
                    "exponent_temp": 1,
                    "mantissa2_msb": 1,
                    "other_bits_temp1": 1,
                    "result_bits": 1,
                    "result_value_low": 1,
                    "second_mantissa_low": 1,
                    "temp10": 2,
                    "temp11": 9,
                    "temp8": 2,
                    "temp9": 1,
                    "temp_10": 1,
                    "temp_11": 2,
                    "temp_var10": 1,
                    "var11": 1,
                    "variable11": 1
                },
                "uVar11": {
                    "adjusted_fraction": 1,
                    "exponent_temp": 1,
                    "lower_bits_result": 1,
                    "mantissa1_bits": 1,
                    "normalized_frac": 1,
                    "result_1": 1,
                    "result_fractional_part": 1,
                    "result_mantissa_part_a": 1,
                    "result_value": 2,
                    "second_mantissa_high": 1,
                    "shifted_mantissa": 1,
                    "significant_bits1": 1,
                    "temp10": 1,
                    "temp11": 2,
                    "temp12": 9,
                    "temp9": 1,
                    "temp_11": 1,
                    "temp_12": 2,
                    "var12": 1,
                    "variable12": 1
                },
                "uVar12": {
                    "difference": 1,
                    "mantissa_difference": 1,
                    "other_bits_temp2": 1,
                    "remainder": 1,
                    "remainder_absolute": 1,
                    "result_2": 1,
                    "result_fraction": 1,
                    "rounding": 1,
                    "significant_bits2": 1,
                    "subtracted_mant": 1,
                    "subtraction_result": 1,
                    "temp10": 1,
                    "temp11": 1,
                    "temp12": 2,
                    "temp13": 9,
                    "temp_12": 1,
                    "temp_13": 2,
                    "temp_value": 1,
                    "temp_var12": 1,
                    "var13": 1,
                    "variable13": 1
                },
                "uVar13": {
                    "biased_exp": 1,
                    "carry": 1,
                    "condition": 1,
                    "exponent_and_sign_temp": 1,
                    "exponent_mask": 1,
                    "infinity_bits": 1,
                    "mask": 1,
                    "max_exponent": 2,
                    "max_value": 1,
                    "overflow_bit": 1,
                    "special_bits": 1,
                    "temp11": 1,
                    "temp12": 1,
                    "temp13": 1,
                    "temp14": 9,
                    "temp_13": 1,
                    "temp_14": 2,
                    "temp_var13": 1,
                    "var14": 1,
                    "variable14": 1,
                    "zero": 1
                },
                "uVar15": {
                    "temp7": 1
                },
                "uVar16": {
                    "temp8": 1
                },
                "uVar17": {
                    "combined_params": 1,
                    "combined_vars": 1,
                    "merged_bits": 1,
                    "output": 2,
                    "output_float_value": 1,
                    "result": 11,
                    "temp9": 1,
                    "temp_14": 1,
                    "temp_15": 1,
                    "value": 1,
                    "variable15": 1
                },
                "uVar18": {
                    "combined_value": 1,
                    "final_sign": 1,
                    "fractional_part": 1,
                    "result": 2,
                    "result_sign": 1,
                    "round_bits": 1
                },
                "uVar19": {
                    "exponent_result": 1,
                    "fractional_part_a": 1,
                    "result": 1,
                    "result_mantissa_high": 1
                },
                "uVar2": {
                    "exponent": 1,
                    "exponent2": 2,
                    "frac_low_shifted": 1,
                    "fraction_bit_mask": 1,
                    "fraction_bits_b": 1,
                    "is_zero": 1,
                    "sign_is_zero": 1,
                    "temp2": 14,
                    "temp6": 1,
                    "temp_2": 3,
                    "temp_bits": 1,
                    "temp_var2": 2,
                    "var2": 1,
                    "variable2": 1
                },
                "uVar20": {
                    "fractional_part_b": 1,
                    "result_mantissa_low": 1
                },
                "uVar21": {
                    "exponent_part": 1
                },
                "uVar22": {
                    "exponent_part_a": 1
                },
                "uVar23": {
                    "exponent_part_b": 1
                },
                "uVar3": {
                    "exponent": 1,
                    "exponent3": 1,
                    "exponent_bits_and_sign_a_shifted": 1,
                    "exponent_bits_value": 1,
                    "frac_high_shifted_mask": 1,
                    "mantissa1_shifted": 1,
                    "mantissa_low_bits": 1,
                    "shifted_bits": 1,
                    "shifted_exponent": 1,
                    "temp1": 1,
                    "temp3": 14,
                    "temp_3": 3,
                    "temp_var3": 2,
                    "var3": 1,
                    "variable3": 1
                },
                "uVar4": {
                    "exponent4": 1,
                    "exponent_bits_and_sign_b_shifted": 1,
                    "exponent_shifted": 1,
                    "frac_low_shifted_mask": 1,
                    "fraction": 1,
                    "mant_lower": 1,
                    "mantissa_high_bits": 1,
                    "significant_bits_value": 1,
                    "temp3": 1,
                    "temp4": 14,
                    "temp_4": 3,
                    "temp_shift": 1,
                    "temp_var4": 2,
                    "var4": 1,
                    "variable4": 1
                },
                "uVar5": {
                    "difference": 1,
                    "exponent": 1,
                    "lower_bits1": 1,
                    "mant_upper": 1,
                    "mantissa2_shifted": 1,
                    "mantissa_high_bit": 1,
                    "shift_amount": 1,
                    "shifted_exponent": 1,
                    "temp14": 1,
                    "temp4": 1,
                    "temp5": 13,
                    "temp_5": 3,
                    "temp_var5": 2,
                    "u_var5": 1,
                    "var5": 1,
                    "variable5": 1
                },
                "uVar6": {
                    "iter": 1,
                    "lower_bits2": 1,
                    "mantissa_low_bit": 1,
                    "remainder": 1,
                    "rounding_bit": 1,
                    "shifted_fraction": 1,
                    "shifted_mant": 1,
                    "temp1": 1,
                    "temp5": 2,
                    "temp6": 13,
                    "temp_6": 3,
                    "temp_var6": 2,
                    "u_var6": 1,
                    "var6": 1,
                    "variable6": 1
                },
                "uVar7": {
                    "abs_sign": 1,
                    "exponent_bits": 1,
                    "exponent_is_zero": 1,
                    "flags": 1,
                    "lower_bits3": 1,
                    "result": 1,
                    "result_sign": 1,
                    "result_sign_and_exponent": 1,
                    "result_sign_exponent": 1,
                    "temp6": 1,
                    "temp7": 13,
                    "temp_7": 3,
                    "temp_var7": 2,
                    "u_var7": 1,
                    "var7": 1,
                    "variable7": 1
                },
                "uVar9": {
                    "adjusted_exponent": 1,
                    "adjusted_shifted_exponent": 1,
                    "exponent": 1,
                    "exponent1": 1,
                    "exponent_diff": 1,
                    "exponent_shifted_normalized": 1,
                    "exponent_sum": 2,
                    "fractional_temp": 1,
                    "power_of_two": 1,
                    "result_exponent": 1,
                    "result_value_high": 1,
                    "shifted_diff": 1,
                    "temp7": 1,
                    "temp8": 1,
                    "temp9": 11,
                    "temp_9": 3,
                    "var9": 1,
                    "variable9": 1
                },
                "unaff_r5": {
                    "exponent2": 3,
                    "exponent_bits_2": 1,
                    "mantissa2_bits": 1,
                    "mantissa2_shifted_normalized": 1,
                    "other_bits_temp": 1,
                    "second_exponent": 1,
                    "temp10": 9,
                    "temp12": 1,
                    "temp_10": 2,
                    "temp_var9": 1,
                    "unaffected_var": 1,
                    "unknown_r5": 1,
                    "var10": 1,
                    "variable10": 1
                }
            },
            "called": [
                "FUN_08000892"
            ],
            "calling": [
                "FUN_08005c70",
                "FUN_08006d68",
                "FUN_08005bc8",
                "FUN_08006070",
                "FUN_08006c0c",
                "FUN_08003330",
                "FUN_08005900",
                "FUN_08006228"
            ],
            "code": "\nulonglong calculate_floating_point_value_08000724(undefined4 input1,uint input2,uint input3,uint input4)\n\n{\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  int temp8;\n  uint temp9;\n  uint temp10;\n  uint temp11;\n  uint temp12;\n  uint temp13;\n  uint temp14;\n  bool flag1;\n  bool flag2;\n  bool flag3;\n  undefined8 result;\n  \n  result = CONCAT44(input2,input1);\n  temp14 = 0x7ff;\n  temp7 = input2 >> 0x14 & 0x7ff;\n  flag1 = temp7 == 0;\n  if (!flag1) {\n    temp10 = input4 >> 0x14 & 0x7ff;\n    flag1 = temp10 == 0;\n  }\n  if (!flag1) {\n    flag1 = temp7 == 0x7ff;\n  }\n  if (!flag1) {\n    flag1 = temp10 == 0x7ff;\n  }\n  if (flag1) {\n    result = FUN_08000892();\n  }\n  temp9 = (uint)((ulonglong)result >> 0x20);\n  temp12 = (uint)result;\n  temp8 = temp7 - temp10;\n  if ((input3 | input4 << 0xc) == 0) {\n    temp7 = (temp9 ^ input4) & 0x80000000 | temp9 & 0xfffff;\n    flag3 = SCARRY4(temp8,temp14 >> 1);\n    temp9 = temp8 + (temp14 >> 1);\n    flag1 = (int)temp9 < 0;\n    flag2 = temp9 == 0;\n    if (!flag2 && flag1 == flag3) {\n      flag3 = SBORROW4(temp14,temp9);\n      flag1 = (int)(temp14 - temp9) < 0;\n      flag2 = temp14 == temp9;\n    }\n    if (!flag2 && flag1 == flag3) {\n      temp7 = temp7 | temp9 * 0x100000;\n    }\n    if (!flag2 && flag1 == flag3) {\n      return CONCAT44(temp7,temp12);\n    }\n    temp7 = temp7 | 0x100000;\n    temp14 = 0;\n    flag2 = SBORROW4(temp9,1);\n    temp9 = temp9 - 1;\n    flag1 = temp9 == 0;\n    temp3 = temp9;\n  }\n  else {\n    temp3 = (input4 << 0xc) >> 4 | 0x10000000 | input3 >> 0x18;\n    temp14 = input3 << 8;\n    temp11 = (temp9 << 0xc) >> 4 | 0x10000000 | temp12 >> 0x18;\n    temp12 = temp12 * 0x100;\n    temp7 = (temp9 ^ input4) & 0x80000000;\n    flag1 = temp3 <= temp11;\n    if (temp11 == temp3) {\n      flag1 = temp14 <= temp12;\n    }\n    temp8 = temp8 + (uint)flag1;\n    temp9 = temp8 + 0x3fd;\n    if (flag1 == false) {\n      temp3 = temp3 >> 1;\n      temp14 = (uint)((input3 >> 0x18 & 1) != 0) << 0x1f | temp14 >> 1;\n    }\n    temp13 = temp12 - temp14;\n    temp11 = (temp11 - temp3) - (uint)(temp12 < temp14);\n    temp4 = temp3 >> 1;\n    temp1 = (uint)((temp3 & 1) != 0) << 0x1f | temp14 >> 1;\n    temp12 = 0x100000;\n    temp3 = 0x80000;\n    while( true ) {\n      flag1 = temp1 <= temp13;\n      if (temp4 < temp11 || temp11 - temp4 < (uint)flag1) {\n        temp13 = temp13 - temp1;\n        temp12 = temp12 | temp3;\n        temp11 = (temp11 - temp4) - (uint)!flag1;\n      }\n      temp5 = temp4 >> 1;\n      temp1 = (uint)((temp4 & 1) != 0) << 0x1f | temp1 >> 1;\n      flag2 = temp1 <= temp13;\n      flag1 = temp11 - temp5 < (uint)flag2;\n      temp14 = temp11;\n      if (temp5 < temp11 || flag1) {\n        temp13 = temp13 - temp1;\n        temp14 = (temp11 - temp5) - (uint)!flag2;\n      }\n      if (temp5 < temp11 || flag1) {\n        temp12 = temp12 | temp3 >> 1;\n      }\n      temp11 = temp4 >> 2;\n      temp2 = (uint)((temp5 & 1) != 0) << 0x1f | temp1 >> 1;\n      flag2 = temp2 <= temp13;\n      flag1 = temp14 - temp11 < (uint)flag2;\n      temp5 = temp14;\n      if (temp11 < temp14 || flag1) {\n        temp13 = temp13 - temp2;\n        temp5 = (temp14 - temp11) - (uint)!flag2;\n      }\n      if (temp11 < temp14 || flag1) {\n        temp12 = temp12 | temp3 >> 2;\n      }\n      temp6 = temp4 >> 3;\n      temp1 = (uint)((temp11 & 1) != 0) << 0x1f | temp2 >> 1;\n      flag2 = temp1 <= temp13;\n      flag1 = temp5 - temp6 < (uint)flag2;\n      temp11 = temp5;\n      if (temp6 < temp5 || flag1) {\n        temp13 = temp13 - temp1;\n        temp11 = (temp5 - temp6) - (uint)!flag2;\n      }\n      if (temp6 < temp5 || flag1) {\n        temp12 = temp12 | temp3 >> 3;\n      }\n      temp14 = temp11 | temp13;\n      if (temp14 == 0) break;\n      temp11 = temp11 << 4 | temp13 >> 0x1c;\n      temp13 = temp13 << 4;\n      temp4 = temp4 & 0xfffffff8 | temp1 >> 0x1d;\n      temp1 = (temp2 >> 1) << 3;\n      temp3 = temp3 >> 4;\n      if (temp3 == 0) {\n        temp6 = temp4;\n        if ((temp7 & 0x100000) != 0) goto LAB_08000842;\n        temp7 = temp7 | temp12;\n        temp12 = 0;\n        temp3 = 0x80000000;\n      }\n    }\n    if ((temp7 & 0x100000) == 0) {\n      temp7 = temp7 | temp12;\n      temp12 = 0;\n    }\nLAB_08000842:\n    flag3 = 0xfc < temp9;\n    flag2 = SBORROW4(temp9,0xfd);\n    temp4 = temp8 + 0x300;\n    flag1 = temp4 == 0;\n    temp3 = temp4;\n    if (flag3 && !flag1) {\n      flag3 = 0x6ff < temp4;\n      flag2 = SBORROW4(temp4,0x700);\n      temp3 = temp8 - 0x400;\n      flag1 = temp4 == 0x700;\n    }\n    if (!flag3 || flag1) {\n      flag1 = temp6 <= temp11;\n      if (temp11 == temp6) {\n        flag1 = temp1 <= temp13;\n      }\n      if (temp11 == temp6 && temp13 == temp1) {\n        flag1 = (temp12 & 1) != 0;\n      }\n      return CONCAT44(temp7 + temp9 * 0x100000 + (uint)CARRY4(temp12,(uint)flag1),temp12 + flag1);\n    }\n  }\n  if (!flag1 && (int)temp3 < 0 == flag2) {\n    return (ulonglong)(temp7 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  flag3 = SCARRY4(temp9,0x36);\n  flag1 = (int)(temp9 + 0x36) < 0;\n  flag2 = temp9 == 0xffffffca;\n  if (flag2 || flag1 != flag3) {\n    temp12 = 0;\n  }\n  if (flag2 || flag1 != flag3) {\n    temp7 = temp7 & 0x80000000;\n  }\n  if (flag2 || flag1 != flag3) {\n    return CONCAT44(temp7,temp12);\n  }\n  temp3 = -temp9;\n  temp11 = temp3 - 0x20;\n  if (0x1f < (int)temp3) {\n    temp3 = temp12 >> (temp11 & 0xff) | temp7 << (0x20 - temp11 & 0xff);\n    temp9 = (temp7 >> (temp11 & 0xff) & ~((temp7 & 0x80000000) >> (temp11 & 0xff))) -\n            ((int)temp3 >> 0x1f);\n    if ((temp14 | temp12 << (0x20 - temp11 & 0xff) | temp3 << 1) == 0) {\n      temp9 = temp9 & ~(temp3 >> 0x1f);\n    }\n    return CONCAT44(temp7,temp9) & 0x80000000ffffffff;\n  }\n  temp8 = temp3 - 0x14;\n  if (temp8 != 0 && temp8 < 0 == SCARRY4(temp11,0xc)) {\n    temp9 = 0xc - temp8;\n    temp3 = temp12 << (temp9 & 0xff);\n    temp12 = temp12 >> (0x20 - temp9 & 0xff) | temp7 << (temp9 & 0xff);\n    temp9 = temp12 + -((int)temp3 >> 0x1f);\n    if ((temp14 | temp3 << 1) == 0) {\n      temp9 = temp9 & ~(temp3 >> 0x1f);\n    }\n    return CONCAT44((temp7 & 0x80000000) + (uint)CARRY4(temp12,-((int)temp3 >> 0x1f)),temp9);\n  }\n  temp11 = temp12 << (temp9 + 0x20 & 0xff);\n  temp12 = temp12 >> (temp3 & 0xff) | temp7 << (temp9 + 0x20 & 0xff);\n  temp9 = temp12 + -((int)temp11 >> 0x1f);\n  if ((temp14 | temp11 << 1) == 0) {\n    temp9 = temp9 & ~(temp11 >> 0x1f);\n  }\n  return CONCAT44((temp7 & 0x80000000) +\n                  ((temp7 & 0x7fffffff) >> (temp3 & 0xff)) +\n                  (uint)CARRY4(temp12,-((int)temp11 >> 0x1f)),temp9);\n}\n\n",
            "current_name": "calculate_floating_point_value_08000724",
            "entrypoint": "0x08000724",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000724": "calculate_floating_point_value_08000724",
                "bVar14": "flag1",
                "bVar15": "flag2",
                "bVar16": "flag3",
                "iVar8": "temp8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "temp1",
                "uVar10": "temp11",
                "uVar11": "temp12",
                "uVar12": "temp13",
                "uVar13": "temp14",
                "uVar17": "result",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6",
                "uVar7": "temp7",
                "uVar9": "temp9",
                "unaff_r5": "temp10"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000892": {
            "additional_data": {
                "F1_08000892": {
                    "calculate_result": 1
                },
                "FUN_08000892": {
                    "calculate_double": 1,
                    "calculate_double_ieee754": 1,
                    "calculate_double_precision": 2,
                    "calculate_double_precision_value": 1,
                    "calculate_exponent": 1,
                    "calculate_floating_point_number": 1,
                    "calculate_floating_point_value": 2,
                    "convert_int_to_double": 1,
                    "convert_to_double": 2,
                    "decode_float": 1,
                    "decode_value": 2,
                    "extract_float_bits": 1,
                    "extracted_binary_function": 1,
                    "process_values": 1,
                    "reverse_binary_operation": 2,
                    "reverse_bits": 3,
                    "reverse_bitwise_operations": 1,
                    "reverse_extracted_code": 1
                },
                "LAB_080006c8": {
                    "return_case_2": 1
                },
                "LAB_08000704": {
                    "return_case_1": 1
                },
                "bVar4": {
                    "check": 2,
                    "condition_check": 1,
                    "flag": 3,
                    "has_zero_value": 1,
                    "is_zero": 18,
                    "is_zero_check": 1,
                    "temp6": 3,
                    "temp_var6": 1
                },
                "in_r12": {
                    "base_mask": 1,
                    "bit_5": 1,
                    "bit_mask": 1,
                    "comparison_var2": 1,
                    "constant": 4,
                    "constant1": 2,
                    "constant_2": 1,
                    "constant_param": 1,
                    "constant_value": 1,
                    "exponent_check": 1,
                    "mask": 3,
                    "shift_bits": 1,
                    "temp2": 5,
                    "temp4": 1,
                    "temp5": 3,
                    "temp_2": 1,
                    "temp_3": 1,
                    "temp_5": 1,
                    "temp_var5": 1
                },
                "param_1": {
                    "base": 1,
                    "float1": 1,
                    "input1": 10,
                    "input_1": 9,
                    "input_param1": 1,
                    "input_value_1": 1,
                    "mantissa1": 1,
                    "num1": 2,
                    "result_2": 1,
                    "sign": 1,
                    "uint1": 1,
                    "value1": 1,
                    "value_1": 1
                },
                "param_2": {
                    "exponent": 2,
                    "float2": 1,
                    "input2": 10,
                    "input_2": 9,
                    "input_param2": 1,
                    "input_value_2": 1,
                    "mantissa2": 1,
                    "num2": 2,
                    "temp_2": 1,
                    "uint2": 1,
                    "value2": 1,
                    "value_2": 1
                },
                "param_3": {
                    "exponent1": 1,
                    "float3": 1,
                    "fraction_part": 1,
                    "input3": 10,
                    "input_3": 9,
                    "input_param3": 1,
                    "input_value_3": 1,
                    "num3": 2,
                    "result_3": 1,
                    "special_case_1": 1,
                    "uint3": 1,
                    "value3": 1,
                    "value_3": 1
                },
                "param_4": {
                    "exponent2": 1,
                    "float4": 1,
                    "hidden_bit": 1,
                    "input4": 10,
                    "input_4": 9,
                    "input_param4": 1,
                    "input_value_4": 1,
                    "num4": 2,
                    "special_case_2": 1,
                    "temp_3": 1,
                    "uint4": 1,
                    "value4": 1,
                    "value_4": 1
                },
                "uVar1": {
                    "base_sign_bit": 1,
                    "bit1": 7,
                    "bit_1": 5,
                    "bit_check_1": 1,
                    "bit_mask": 1,
                    "bit_shift_result1": 1,
                    "result3": 1,
                    "temp1": 3,
                    "temp2": 2,
                    "temp3": 1,
                    "temp_1": 2,
                    "temp_2": 1,
                    "temp_5": 1,
                    "temp_input_1": 1,
                    "temp_var1": 2
                },
                "uVar2": {
                    "bit2": 4,
                    "bit3": 2,
                    "bit_2": 2,
                    "bit_3": 1,
                    "bit_check_2": 1,
                    "bit_shift_result2": 1,
                    "reference_2": 1,
                    "result1": 1,
                    "shifted_hidden_bit": 1,
                    "shifted_special_case_2": 1,
                    "shifted_value": 1,
                    "temp2": 2,
                    "temp3": 5,
                    "temp4": 1,
                    "temp_1": 1,
                    "temp_2": 1,
                    "temp_3": 3,
                    "temp_var2": 1,
                    "temp_var3": 1
                },
                "uVar3": {
                    "bit3": 3,
                    "bit4": 2,
                    "bit_3": 1,
                    "bit_4": 1,
                    "decoded_exponent": 1,
                    "exponent_copy": 1,
                    "multiplied_value": 1,
                    "output_2": 1,
                    "result2": 1,
                    "result_1": 1,
                    "temp": 1,
                    "temp3": 2,
                    "temp4": 5,
                    "temp5": 1,
                    "temp_2": 1,
                    "temp_3": 1,
                    "temp_4": 3,
                    "temp_value": 1,
                    "temp_var3": 1,
                    "temp_var4": 1,
                    "updated_input2": 1
                },
                "uVar4": {
                    "temp_6": 1
                },
                "unaff_r4": {
                    "base_copy": 1,
                    "bit2": 2,
                    "bit_2": 1,
                    "compare": 1,
                    "comparison_var1": 1,
                    "condition_1": 1,
                    "constant2": 1,
                    "constant_1": 1,
                    "flag": 1,
                    "input_value_5": 1,
                    "reference_1": 1,
                    "result": 1,
                    "sign_check": 1,
                    "temp1": 8,
                    "temp2": 2,
                    "temp_1": 2,
                    "temp_2": 1,
                    "temp_input_2": 1,
                    "temp_var2": 1,
                    "temp_var4": 1,
                    "unknown_float": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08000724"
            ],
            "code": "\nulonglong calculate_double_precision_value_08000892(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint bit1;\n  uint temp1;\n  uint temp3;\n  uint temp4;\n  uint temp2;\n  bool is_zero;\n  \n  temp3 = temp2 & input4 >> 0x14;\n  temp4 = input2;\n  if (temp1 != temp2 || temp3 != temp2) {\n    if (temp1 == temp2) {\n      if (((input1 | input2 << 0xc) == 0) && (input1 = input3, temp4 = input4, temp3 != temp2)\n         ) {\nreturn_case_1:\n        return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (temp3 == temp2) {\n      input1 = input3;\n      temp4 = input4;\n      if ((input3 | input4 << 0xc) == 0) {\nreturn_case_2:\n        return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      is_zero = (input1 | input2 << 1) == 0;\n      if (!is_zero) {\n        is_zero = (input3 | input4 << 1) == 0;\n      }\n      if (!is_zero) {\n        if (temp1 == 0) {\n          temp4 = input2 & 0x80000000;\n          do {\n            bit1 = input1 & 0x80000000;\n            input1 = input1 << 1;\n            input2 = input2 * 2 + (uint)(bit1 != 0);\n          } while ((input2 & 0x100000) == 0);\n          input2 = input2 | temp4;\n          if (temp3 != 0) {\n            return CONCAT44(input2,input1);\n          }\n        }\n        do {\n          temp4 = input3 & 0x80000000;\n          input3 = input3 << 1;\n          input4 = input4 * 2 + (uint)(temp4 != 0);\n        } while ((input4 & 0x100000) == 0);\n        return CONCAT44(input2,input1);\n      }\n      if ((input1 | input2 << 1) != 0) goto return_case_1;\n      if ((input3 | input4 << 1) != 0) goto return_case_2;\n    }\n  }\n  return CONCAT44(temp4,input1) | 0x7ff8000000000000;\n}\n\n",
            "current_name": "calculate_double_precision_value_08000892",
            "entrypoint": "0x08000892",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000892": "calculate_double_precision_value_08000892",
                "LAB_080006c8": "return_case_2",
                "LAB_08000704": "return_case_1",
                "bVar4": "is_zero",
                "in_r12": "temp2",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "bit1",
                "uVar2": "temp3",
                "uVar3": "temp4",
                "unaff_r4": "temp1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000904": {
            "additional_data": {
                "0x15": {
                    "shift_bits": 1
                },
                "FUN_08000904": {
                    "check_conditions": 2,
                    "check_different_numbers": 1,
                    "check_equal_params": 1,
                    "check_equality": 9,
                    "check_equality_and_bits": 1,
                    "check_equality_and_comparison": 2,
                    "check_equality_or_zero": 1,
                    "check_equality_with_conditions": 1,
                    "check_equivalence": 1,
                    "check_parameters": 5,
                    "check_params": 2,
                    "check_params_and_compare": 1,
                    "check_params_equality": 1,
                    "compare_and_set": 1,
                    "compare_params_and_return_result": 1,
                    "compare_values": 1
                },
                "bVar2": {
                    "are_conditions_zero": 1,
                    "are_inputs_zero": 1,
                    "are_params_zero": 1,
                    "are_values_zero": 1,
                    "check_result": 1,
                    "has_zero": 1,
                    "is_equal": 2,
                    "is_null": 1,
                    "is_zero": 21,
                    "params_zero": 1
                },
                "bVar3": {
                    "compare_result": 1,
                    "final_result": 1,
                    "is_condition_met": 1,
                    "is_greater": 1,
                    "is_greater_or_equal": 1,
                    "is_less_equal": 1,
                    "is_less_or_equal": 3,
                    "is_less_than": 2,
                    "is_less_than_or_equal": 2,
                    "is_less_than_zero": 1,
                    "is_lower": 1,
                    "is_negative": 13,
                    "is_positive": 1,
                    "is_result_negative": 1,
                    "is_second_param_less_or_equal_first_param": 1
                },
                "param_1": {
                    "a": 1,
                    "condition1": 1,
                    "first_param": 3,
                    "first_value": 1,
                    "input1": 3,
                    "input_1": 1,
                    "num1": 1,
                    "value1": 18,
                    "value_1": 1,
                    "value_a": 1
                },
                "param_2": {
                    "b": 1,
                    "condition2": 1,
                    "input2": 3,
                    "input_2": 1,
                    "num2": 1,
                    "second_param": 3,
                    "second_value": 1,
                    "value2": 18,
                    "value_2": 1,
                    "value_b": 1
                },
                "param_3": {
                    "c": 1,
                    "condition3": 1,
                    "input3": 3,
                    "input_3": 1,
                    "num3": 1,
                    "third_param": 3,
                    "third_value": 1,
                    "value3": 18,
                    "value_3": 1,
                    "value_c": 1
                },
                "param_4": {
                    "condition4": 1,
                    "d": 1,
                    "fourth_param": 3,
                    "fourth_value": 1,
                    "input4": 3,
                    "input_4": 1,
                    "num4": 1,
                    "shifted_param4": 1,
                    "value4": 17,
                    "value_4": 1,
                    "value_d": 1
                },
                "return": {
                    "result": 2
                },
                "uVar1": {
                    "bitwise_xor": 1,
                    "bitwise_xor_result": 1,
                    "result": 13,
                    "result_xor": 1,
                    "temp1": 1,
                    "temp_value": 1,
                    "value_difference": 1,
                    "xor_result": 12
                }
            },
            "called": [],
            "calling": [
                "FUN_08000990"
            ],
            "code": "\nuint check_equality_and_comparison_08000904(uint value1,uint value2,uint value3,uint value4)\n\n{\n  uint result;\n  bool is_zero;\n  bool is_negative;\n  \n  if (((int)(value2 << 1) >> 0x15 == -1 || (int)(value4 << 1) >> 0x15 == -1) &&\n     ((((int)(value2 << 1) >> 0x15 == -1 && ((value1 | value2 << 0xc) != 0)) ||\n      (((int)(value4 << 1) >> 0x15 == -1 && ((value3 | value4 << 0xc) != 0)))))) {\n    result 1;\n  }\n  is_zero = (value1 | value2 << 1) == 0;\n  if (is_zero) {\n    is_zero = (value3 | value4 << 1) == 0;\n  }\n  if (!is_zero) {\n    is_zero = value2 == value4;\n  }\n  if (is_zero) {\n    is_zero = value1 == value3;\n  }\n  if (!is_zero) {\n    result = value2 ^ value4;\n    is_zero = result == 0;\n    if (-1 < (int)result) {\n      is_zero = value2 == value4;\n    }\n    is_negative = -1 < (int)result && value4 <= value2;\n    if (is_zero) {\n      is_negative = value3 <= value1;\n    }\n    value4 = (int)value4 >> 0x1f;\n    if (!is_negative) {\n      value4 = ~value4;\n    }\n    result value4 | 1;\n  }\n  result 0;\n}\n\n",
            "current_name": "check_equality_and_comparison_08000904",
            "entrypoint": "0x08000904",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000904": "check_equality_and_comparison_08000904",
                "bVar2": "is_zero",
                "bVar3": "is_negative",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "return": "result",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000980": {
            "additional_data": {
                "FUN_08000980": {
                    "call_function_with_reordered_params": 1,
                    "call_sub_functions": 1,
                    "execute_code": 1,
                    "execute_func": 1,
                    "execute_function": 20,
                    "execute_process": 1,
                    "execute_task": 1,
                    "initialize_function": 1,
                    "process_data": 3
                },
                "FUN_08000990": {
                    "call_sub_func": 1,
                    "call_sub_function": 5,
                    "call_subfunction": 2,
                    "execute_sub_function": 2,
                    "process_data": 6,
                    "process_subfunction": 1,
                    "process_task": 1,
                    "reverse_data": 1,
                    "sub_function": 3
                },
                "param_1": {
                    "arg1": 12,
                    "data1": 2,
                    "input1": 5,
                    "input_1": 2,
                    "input_param1": 1,
                    "input_param_1": 4,
                    "input_parameter_1": 1,
                    "param1": 1,
                    "param_a": 1,
                    "reordered_param_1": 1,
                    "task_param1": 1
                },
                "param_1_subFunction": {
                    "sub_function_param1": 1
                },
                "param_2": {
                    "arg2": 12,
                    "data2": 2,
                    "input2": 5,
                    "input_2": 2,
                    "input_param2": 1,
                    "input_param_2": 4,
                    "input_parameter_2": 1,
                    "param2": 1,
                    "param_b": 1,
                    "reordered_param_2": 1,
                    "task_param2": 1
                },
                "param_3": {
                    "arg3": 12,
                    "data3": 1,
                    "input3": 4,
                    "input_3": 2,
                    "input_param3": 1,
                    "input_param_3": 3,
                    "input_parameter_3": 1,
                    "output1": 1,
                    "output_param_1": 1,
                    "param1": 1,
                    "param3": 1,
                    "param_c": 1,
                    "reordered_param_3": 1,
                    "task_param3": 1
                },
                "param_4": {
                    "arg4": 12,
                    "data4": 1,
                    "input4": 4,
                    "input_4": 2,
                    "input_param4": 1,
                    "input_param_4": 3,
                    "input_parameter_4": 1,
                    "output2": 1,
                    "output_param_2": 1,
                    "param2": 1,
                    "param4": 1,
                    "param_d": 1,
                    "reordered_param_4": 1,
                    "task_param4": 1
                }
            },
            "called": [
                "FUN_08000990"
            ],
            "calling": [
                "FUN_080009f0"
            ],
            "code": "\nvoid execute_function_08000980(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  FUN_08000990(arg3,arg4,arg1,arg2);\n  return;\n}\n\n",
            "current_name": "execute_function_08000980",
            "entrypoint": "0x08000980",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000980": "execute_function_08000980",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000990": {
            "additional_data": {
                "FUN_08000904": {
                    "execute_helper": 1,
                    "execute_helper_function": 1,
                    "execute_sub_function": 2,
                    "execute_sub_task": 1,
                    "helper_function": 1,
                    "perform_action": 1,
                    "perform_calculation": 2,
                    "perform_computation": 1,
                    "perform_initialization": 1,
                    "perform_operation": 13,
                    "process_data": 3
                },
                "FUN_08000904_param_1": {
                    "param_1": 1
                },
                "FUN_08000904_param_2": {
                    "param_2": 1
                },
                "FUN_08000904_param_3": {
                    "param_3": 1
                },
                "FUN_08000904_param_4": {
                    "param_4": 1
                },
                "FUN_08000990": {
                    "execute_and_return": 5,
                    "execute_function": 6,
                    "initialize": 13,
                    "initialize_and_return": 1,
                    "initialize_function": 3,
                    "initialize_program": 1,
                    "initialize_system": 1,
                    "perform_task": 1
                },
                "param_1": {
                    "argument": 1,
                    "initial_value": 1,
                    "input": 7,
                    "input_data": 1,
                    "input_param": 5,
                    "input_parameter": 2,
                    "input_value": 10,
                    "param_a": 1,
                    "result": 1,
                    "task_param": 1,
                    "value1": 1
                },
                "param_2": {
                    "arg1": 1,
                    "helper_param_1": 1,
                    "operand1": 1,
                    "operand_1": 1,
                    "param1": 1,
                    "param2": 2,
                    "param_b": 1,
                    "parameter_2": 2,
                    "sub_func_param1": 1,
                    "sub_task_param1": 1,
                    "value2": 1,
                    "value_2": 1
                },
                "param_3": {
                    "arg2": 1,
                    "helper_param_2": 1,
                    "operand2": 1,
                    "operand_2": 1,
                    "param2": 1,
                    "param3": 2,
                    "param_c": 1,
                    "parameter_3": 2,
                    "sub_func_param2": 1,
                    "sub_task_param2": 1,
                    "value3": 1,
                    "value_3": 1
                },
                "param_4": {
                    "arg3": 1,
                    "helper_param_3": 1,
                    "operand3": 1,
                    "operand_3": 1,
                    "param3": 1,
                    "param4": 2,
                    "param_d": 1,
                    "parameter_4": 2,
                    "sub_func_param3": 1,
                    "sub_task_param3": 1,
                    "value4": 1,
                    "value_4": 1
                }
            },
            "called": [
                "FUN_08000904"
            ],
            "calling": [
                "FUN_080009c8",
                "FUN_080009b4",
                "FUN_08000980",
                "FUN_080009a0"
            ],
            "code": "\nundefined4 initialize_function_08000990(undefined4 input_value)\n\n{\n  FUN_08000904();\n  return input_value;\n}\n\n",
            "current_name": "initialize_function_08000990",
            "entrypoint": "0x08000990",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000990": "initialize_function_08000990",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080009a0": {
            "additional_data": {
                "FUN_080009a0": {
                    "check_if_char_is_not_null": 2,
                    "check_if_function_executed_successfully": 1,
                    "check_if_initialized": 4,
                    "check_if_non_zero": 1,
                    "check_if_nonzero": 1,
                    "check_if_not_null": 6,
                    "check_if_not_zero": 1,
                    "check_if_null_character": 1,
                    "check_if_string_present": 1,
                    "check_if_valid_input": 1,
                    "check_if_zero": 2,
                    "check_if_zr_is_not_null": 1,
                    "check_if_zr_not_empty": 1,
                    "check_non_zero": 1,
                    "check_nonzero": 1,
                    "check_return_value": 1,
                    "is_non_zero_value": 1,
                    "is_parameter_value_not_null": 1,
                    "is_zero_not_equal": 1,
                    "is_zero_not_null": 1,
                    "is_zr_nonzero": 1
                },
                "in_ZR": {
                    "char_value": 1,
                    "check_result": 1,
                    "check_status": 1,
                    "input_char": 1,
                    "input_character": 2,
                    "is_initialized": 4,
                    "is_not_null": 2,
                    "is_not_zero": 1,
                    "is_string_present": 1,
                    "is_zero": 1,
                    "is_zero_result": 2,
                    "parameter_value": 1,
                    "result": 9,
                    "return_value": 1,
                    "user_input": 1,
                    "value": 1,
                    "zr": 1
                }
            },
            "called": [
                "FUN_08000990"
            ],
            "calling": [
                "FUN_08005900"
            ],
            "code": "\nbool check_if_char_is_not_null_080009a0(void)\n\n{\n  char result;\n  \n  FUN_08000990();\n  return result != '\\0';\n}\n\n",
            "current_name": "check_if_char_is_not_null_080009a0",
            "entrypoint": "0x080009a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080009a0": "check_if_char_is_not_null_080009a0",
                "in_ZR": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080009b4": {
            "additional_data": {
                "FUN_08000990": {
                    "initialize_cy": 2
                },
                "FUN_080009b4": {
                    "check_cy_equal_zero": 1,
                    "check_end_of_input": 1,
                    "check_if_cy_is_null": 1,
                    "check_if_end_of_string_reached": 1,
                    "check_if_input_is_empty": 2,
                    "check_if_input_is_null": 3,
                    "check_if_null": 1,
                    "check_if_null_byte": 1,
                    "check_if_null_terminated": 5,
                    "check_if_string_empty": 2,
                    "check_if_string_is_empty": 1,
                    "check_null_terminated": 1,
                    "check_null_termination": 4,
                    "check_null_terminator": 1,
                    "is_cy_null": 3,
                    "is_first_character_null": 1,
                    "is_input_null": 1,
                    "is_null_terminator_present": 1
                },
                "in_CY": {
                    "char_to_check": 1,
                    "cy": 4,
                    "cy_input": 1,
                    "input_char": 9,
                    "input_character": 15,
                    "termination_character": 1
                }
            },
            "called": [
                "FUN_08000990"
            ],
            "calling": [
                "FUN_08005bc8",
                "FUN_08005900"
            ],
            "code": "\nbool check_if_null_terminated_080009b4(void)\n\n{\n  char input_character;\n  \n  FUN_08000990();\n  return input_character == '\\0';\n}\n\n",
            "current_name": "check_if_null_terminated_080009b4",
            "entrypoint": "0x080009b4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080009b4": "check_if_null_terminated_080009b4",
                "in_CY": "input_character"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080009c8": {
            "additional_data": {
                "BOOL_1": {
                    "condition1": 1
                },
                "BOOL_2": {
                    "condition2": 1
                },
                "FUN_08000990": {
                    "check_flags": 1,
                    "handle_data": 1,
                    "initialize_check": 1,
                    "initialize_counter": 1,
                    "initialize_cy": 1,
                    "initialize_flags": 2,
                    "initialize_function": 1,
                    "initialize_parameters": 1,
                    "initialize_value": 1,
                    "initialize_vars": 1,
                    "perform_computation": 1,
                    "perform_initial_checks": 1,
                    "process_data": 1,
                    "update_status": 1
                },
                "FUN_080009c8": {
                    "check_carry_and_zero": 2,
                    "check_carry_or_zero": 1,
                    "check_carry_or_zero_flag": 1,
                    "check_carry_zero": 1,
                    "check_conditions": 5,
                    "check_conditions_and_return": 1,
                    "check_cy_and_zr": 7,
                    "check_cy_and_zr_flags": 2,
                    "check_cy_and_zr_status": 1,
                    "check_cy_zr": 2,
                    "check_flags": 1,
                    "check_for_zero": 1,
                    "check_for_zero_flags": 1,
                    "check_in_zr_or_cy": 1,
                    "check_sw_flags": 1,
                    "check_zero_or_carry": 1,
                    "check_zero_or_carry_flag": 1,
                    "execute_function": 1
                },
                "in_CY": {
                    "carry": 1,
                    "carry_flag": 19,
                    "is_carry": 2
                },
                "in_ZR": {
                    "is_zero": 2,
                    "zero": 1,
                    "zero_flag": 18,
                    "zero_result_flag": 1
                }
            },
            "called": [
                "FUN_08000990"
            ],
            "calling": [
                "FUN_08006228"
            ],
            "code": "\nbool check_cy_and_zr_flags_080009c8(void)\n\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  \n  FUN_08000990();\n  return !(bool)carry_flag || (bool)zero_flag;\n}\n\n",
            "current_name": "check_cy_and_zr_flags_080009c8",
            "entrypoint": "0x080009c8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080009c8": "check_cy_and_zr_flags_080009c8",
                "in_CY": "carry_flag",
                "in_ZR": "zero_flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080009f0": {
            "additional_data": {
                "FUN_08000980": {
                    "call_sub_function": 1,
                    "initialize_cy": 1,
                    "initialize_parameters": 1,
                    "initialize_sub_functions": 1,
                    "initialize_values": 1,
                    "initialize_variables": 1
                },
                "FUN_080009f0": {
                    "check_if_char_is_null": 1,
                    "check_if_cy_is_null": 2,
                    "check_if_empty": 2,
                    "check_if_in_c_string": 1,
                    "check_if_in_cy_is_null": 1,
                    "check_if_input_is_null": 1,
                    "check_if_input_is_zero": 1,
                    "check_if_null": 1,
                    "check_if_null_terminated": 4,
                    "check_null_terminated": 1,
                    "check_null_termination": 2,
                    "check_string_end": 1,
                    "is_cy_null": 3,
                    "is_input_empty": 1,
                    "is_null_terminated": 2,
                    "is_null_terminated_string": 1,
                    "is_null_termination": 1,
                    "is_null_terminator": 1,
                    "is_null_terminator_present": 2,
                    "is_string_empty": 2
                },
                "in_CY": {
                    "character": 3,
                    "cy": 1,
                    "cy_character": 1,
                    "cy_value": 1,
                    "end_character": 1,
                    "input_char": 8,
                    "input_character": 14,
                    "input_chars": 1,
                    "null_terminator_found": 1
                }
            },
            "called": [
                "FUN_08000980"
            ],
            "calling": [
                "FUN_08005c70",
                "FUN_08006d68",
                "FUN_08005854",
                "FUN_08006228"
            ],
            "code": "\nbool check_if_in_cy_is_null_080009f0(void)\n\n{\n  char input_character;\n  \n  FUN_08000980();\n  return input_character == '\\0';\n}\n\n",
            "current_name": "check_if_in_cy_is_null_080009f0",
            "entrypoint": "0x080009f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080009f0": "check_if_in_cy_is_null_080009f0",
                "in_CY": "input_character"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000a04": {
            "additional_data": {
                "FUN_08000a04": {
                    "check_conditions": 6,
                    "check_parameters": 14,
                    "check_parameters_valid": 1,
                    "check_parameters_validity": 1,
                    "check_params": 2,
                    "check_params_validity": 3,
                    "is_invalid_params": 1,
                    "is_valid_input": 1,
                    "is_valid_params": 2
                },
                "param_1": {
                    "data1": 1,
                    "input1": 8,
                    "input_1": 6,
                    "input_value_1": 1,
                    "num1": 1,
                    "param1": 1,
                    "value1": 8,
                    "value_1": 4,
                    "x": 1
                },
                "param_2": {
                    "flag1": 1,
                    "input2": 8,
                    "input_2": 6,
                    "input_value_2": 1,
                    "num2": 1,
                    "param2": 1,
                    "shift1": 1,
                    "shift_1": 1,
                    "value2": 7,
                    "value_2": 3,
                    "y": 1
                },
                "param_2_shifted": {
                    "shifted_value_2": 1
                },
                "param_3": {
                    "data2": 1,
                    "input3": 8,
                    "input_3": 6,
                    "input_value_3": 1,
                    "num3": 1,
                    "param3": 1,
                    "value2": 1,
                    "value3": 7,
                    "value_2": 1,
                    "value_3": 3,
                    "z": 1
                },
                "param_4": {
                    "flag2": 1,
                    "input4": 8,
                    "input_4": 6,
                    "input_value_4": 1,
                    "num4": 1,
                    "param4": 1,
                    "shift2": 1,
                    "shift_2": 1,
                    "value4": 7,
                    "value_4": 3,
                    "w": 1
                },
                "param_4_shifted": {
                    "shifted_value_4": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005bc8",
                "FUN_08005854",
                "FUN_08005900"
            ],
            "code": "\nundefined4 check_parameters_validity_08000a04(uint value1,int input2,uint input3,int input4)\n\n{\n  if ((((input2 << 1) >> 0x15 != -1) || ((value1 | input2 << 0xc) == 0)) &&\n     (((input4 << 1) >> 0x15 != -1 || ((input3 | input4 << 0xc) == 0)))) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "check_parameters_validity_08000a04",
            "entrypoint": "0x08000a04",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000a04": "check_parameters_validity_08000a04",
                "param_1": "value1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000a30": {
            "additional_data": {
                "0x100000": {
                    "bit": 1
                },
                "0x18": {
                    "shift_amount": 1
                },
                "0x1d": {
                    "shift_amount2": 1
                },
                "0x1fc00000": {
                    "limit5": 1
                },
                "0x1fffff": {
                    "bit_mask2": 1
                },
                "0x20": {
                    "bit_size": 1
                },
                "0x200000": {
                    "limit4": 1
                },
                "0x2e00000": {
                    "limit7": 1
                },
                "0x40000000": {
                    "bit_mask": 1
                },
                "0x70000000": {
                    "limit1": 1
                },
                "0x7f800000": {
                    "positive_infinity": 1
                },
                "0x7fc00000": {
                    "nan": 1,
                    "positive_infinity": 1
                },
                "0x7fffffff": {
                    "max_int": 1
                },
                "0x80000000": {
                    "negative_infinity": 1
                },
                "0x8fe00000": {
                    "limit3": 1
                },
                "0x90000000": {
                    "limit2": 1
                },
                "0x92e00000": {
                    "limit6": 1
                },
                "0xff": {
                    "mask": 1
                },
                "FUN_08000a30": {
                    "binary_to_float_conversion": 1,
                    "calculate": 1,
                    "calculate_float": 10,
                    "calculate_float_value": 2,
                    "calculate_floating_point": 6,
                    "convert_to_float": 5,
                    "decode_float": 1,
                    "float_to_uint": 1,
                    "process_number": 1,
                    "reverse_bits": 2
                },
                "SCARRY4": {
                    "check_carry": 1,
                    "is_carry": 2,
                    "is_carry_set": 1,
                    "is_overflow": 3,
                    "scarry4": 2,
                    "signed_overflow": 1
                },
                "bVar4": {
                    "check1": 2,
                    "is_special_case": 1,
                    "is_zero": 28
                },
                "bVar5": {
                    "check2": 2,
                    "is_above_threshold": 1,
                    "is_in_range": 2,
                    "is_less_than": 8,
                    "is_less_than70000000": 2,
                    "is_less_than_threshold": 6,
                    "is_safe": 1,
                    "is_small": 5,
                    "is_small_value": 1,
                    "less_than": 1,
                    "less_than_max": 1,
                    "less_than_threshold": 1
                },
                "in_r12": {
                    "additional_scale": 1,
                    "adjusted_shift_amount": 1,
                    "adjusted_shifted_mask": 1,
                    "adjusted_value": 1,
                    "alternative_sum": 1,
                    "alternative_u_int": 1,
                    "boundary_value": 1,
                    "calculation": 1,
                    "check_value": 1,
                    "conditional_sum": 1,
                    "constant": 2,
                    "constant_1fc00000": 1,
                    "in_r12": 1,
                    "modified_double_int_value": 1,
                    "modified_value2": 1,
                    "overflow_check": 1,
                    "temp3": 5,
                    "temp_value": 5,
                    "temp_var": 1,
                    "temp_var1": 2,
                    "upper_bound": 1
                },
                "param_1": {
                    "float_value": 2,
                    "input": 5,
                    "input1": 3,
                    "input_float": 7,
                    "input_integer": 1,
                    "input_value": 5,
                    "input_value1": 1,
                    "input_value_1": 1,
                    "mantissa": 1,
                    "number1": 2,
                    "uint1": 1,
                    "value": 1,
                    "value1": 1
                },
                "param_2": {
                    "bit_mask": 1,
                    "exponent": 1,
                    "input2": 3,
                    "input_bits": 2,
                    "input_integer": 2,
                    "input_unsigned_int": 1,
                    "input_value2": 1,
                    "input_value_2": 1,
                    "int_value": 1,
                    "mask": 1,
                    "mode": 1,
                    "multiplier": 7,
                    "number2": 2,
                    "rounding_mode": 1,
                    "scale_factor": 1,
                    "shift_amount": 1,
                    "shift_count": 1,
                    "uint2": 1,
                    "value": 1,
                    "value2": 1
                },
                "uVar1": {
                    "result": 29,
                    "result_float": 1,
                    "rounded_value": 1
                },
                "uVar2": {
                    "double_input_bits": 1,
                    "double_int_value": 1,
                    "double_multiplier": 4,
                    "double_scale": 1,
                    "doubled_multiplier": 1,
                    "doubled_value": 1,
                    "multiplied_by_two": 2,
                    "multiplied_u_int": 1,
                    "multiplied_value": 2,
                    "multiplier2": 2,
                    "scaled_exponent": 1,
                    "shifted_bits": 1,
                    "shifted_mask": 2,
                    "shifted_value": 2,
                    "temp": 2,
                    "temp1": 6,
                    "twice_input_value2": 1
                },
                "uVar3": {
                    "added_u_int": 1,
                    "added_value": 1,
                    "adjusted_double_input_bits": 1,
                    "adjusted_mask": 1,
                    "adjusted_multiplier": 1,
                    "adjusted_value": 2,
                    "extra_scale": 1,
                    "modified_multiplier": 1,
                    "modified_multiplier2": 1,
                    "modified_value": 2,
                    "new_shifted_value": 1,
                    "result_integer": 1,
                    "result_temp": 1,
                    "scaled_exponent_plus_constant": 1,
                    "sum": 3,
                    "temp": 3,
                    "temp2": 6,
                    "u_var3": 1,
                    "updated_multiplier": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08003330",
                "FUN_0800411c"
            ],
            "code": "\nuint calculate_float_value_08000a30(uint input_float,uint multiplier)\n\n{\n  uint result;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  bool is_zero;\n  bool is_less_than;\n  \n  temp1 = multiplier * 2;\n  is_less_than = temp1 < 0x70000000;\n  temp2 = temp1 + 0x90000000;\n  result = temp2;\n  if (!is_less_than) {\n    temp3 = temp1 + 0x8fe00000;\n    result = temp3;\n  }\n  is_zero = result == 0;\n  if (!is_less_than && temp2 >= 0x200000) {\n    is_zero = temp3 == 0x1fc00000;\n  }\n  if (((is_less_than || temp2 < 0x200000) || 0x1fc00000 < temp3) || is_zero) {\n    if ((multiplier & 0x40000000) != 0) {\n      if (((int)temp1 >> 0x15 == -1) && ((input_float | multiplier << 0xc) != 0)) {\n        return 0x7fc00000;\n      }\n      return multiplier & 0x80000000 | 0x7f800000;\n    }\n    if ((int)(temp1 + 0x92e00000) < 0 != is_overflow(temp2,0x2e00000)) {\n      return multiplier & 0x80000000;\n    }\n    temp1 = 0x18 - (temp1 + 0x92e00000 >> 0x15);\n    result = input_float >> (temp1 & 0xff);\n    if (input_float << (0x20 - temp1 & 0xff) != 0) {\n      result = result | 1;\n    }\n    temp2 = multiplier & 0x1fffff | 0x100000;\n    input_float = result | temp2 << (0x20 - temp1 & 0xff);\n    temp2 = (temp2 >> (temp1 & 0xff)) << 1;\n  }\n  result = (multiplier & 0x80000000 | input_float >> 0x1d) + temp2 * 4 + (uint)(0x7fffffff < input_float * 8);\n  if (input_float * 8 == 0x80000000) {\n    result = result & 0xfffffffe;\n  }\n  return result;\n}\n\n",
            "current_name": "calculate_float_value_08000a30",
            "entrypoint": "0x08000a30",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000a30": "calculate_float_value_08000a30",
                "SCARRY4": "is_overflow",
                "bVar4": "is_zero",
                "bVar5": "is_less_than",
                "in_r12": "temp3",
                "param_1": "input_float",
                "param_2": "multiplier",
                "uVar1": "result",
                "uVar2": "temp1",
                "uVar3": "temp2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000ad8": {
            "additional_data": {
                "FUN_08000ad8": {
                    "calculate_divide_rounded": 1,
                    "calculate_exponential": 1,
                    "calculate_float": 11,
                    "calculate_float_addition": 1,
                    "calculate_floating_point": 1,
                    "calculate_square_root": 1,
                    "calculate_updated_float": 2,
                    "calculate_updated_value": 1,
                    "calculate_x": 1,
                    "calculation_function": 1,
                    "decode_unsigned_integer": 1,
                    "multiply_and_shift": 1,
                    "perform_arithmetic": 2,
                    "perform_calculation": 1,
                    "perform_unsigned_arithmetic": 1,
                    "reverse_bits": 2,
                    "reverse_bits_and_calculate": 1
                },
                "LZCOUNT": {
                    "leading_zero_count": 1
                },
                "bVar8": {
                    "bool_check": 1,
                    "check": 1,
                    "comparison": 1,
                    "comparison_result": 1,
                    "condition": 1,
                    "flag": 3,
                    "is_boundary_case": 1,
                    "is_condition_met": 4,
                    "is_equal": 10,
                    "is_true": 4,
                    "is_zero": 3,
                    "lower_bit_one": 1
                },
                "iVar1": {
                    "dividend_sign_bit": 1,
                    "high_byte_mask": 1,
                    "left_shift": 1,
                    "left_shifted": 1,
                    "left_shifted_input1": 1,
                    "msb_shifted": 1,
                    "msb_shifted_input1": 1,
                    "numerator_shift": 1,
                    "shift1": 3,
                    "shift_amount": 3,
                    "shift_param1": 1,
                    "shift_value": 1,
                    "shifted_float_val": 1,
                    "shifted_input": 2,
                    "shifted_input1": 3,
                    "shifted_input1_high_byte": 1,
                    "shifted_num1": 2,
                    "shifted_num_1": 1,
                    "shifted_operand": 1,
                    "shifted_value1": 1,
                    "sign_a": 1,
                    "temp_var6": 1
                },
                "iVar2": {
                    "denominator_shift": 1,
                    "divisor_sign_bit": 1,
                    "high_byte_result": 1,
                    "left_shifted_input2": 1,
                    "msb_shifted_cmp": 1,
                    "msb_shifted_input2": 1,
                    "right_shift": 1,
                    "right_shifted": 1,
                    "shift2": 3,
                    "shift_amount2": 1,
                    "shift_param2": 1,
                    "shift_value_temp": 1,
                    "shifted_flag": 1,
                    "shifted_input2": 3,
                    "shifted_input2_high_byte": 1,
                    "shifted_int_val": 1,
                    "shifted_mask": 1,
                    "shifted_num2": 2,
                    "shifted_num_2": 1,
                    "shifted_operand_2": 1,
                    "shifted_value": 1,
                    "shifted_value2": 1,
                    "sign_b": 1,
                    "temp_var7": 1,
                    "temporary_variable": 1
                },
                "param_1": {
                    "base": 1,
                    "dividend": 2,
                    "input": 4,
                    "input1": 6,
                    "input_float": 3,
                    "input_float1": 1,
                    "input_num_1": 1,
                    "input_number": 1,
                    "input_value": 4,
                    "input_value1": 1,
                    "input_value_1": 1,
                    "num1": 3,
                    "numerator": 1,
                    "result_sign": 1
                },
                "param_2": {
                    "bit_mask": 1,
                    "denominator": 1,
                    "divisor": 2,
                    "exponent": 1,
                    "flag": 1,
                    "input2": 7,
                    "input_bits": 1,
                    "input_flag": 2,
                    "input_float2": 1,
                    "input_int1": 1,
                    "input_mask": 1,
                    "input_num_2": 1,
                    "input_value2": 1,
                    "input_value_2": 1,
                    "mask": 4,
                    "num2": 3,
                    "operand": 1
                },
                "param_3": {
                    "current_result": 1,
                    "data_type": 1,
                    "flag": 1,
                    "float_value": 1,
                    "input3": 6,
                    "input_int2": 1,
                    "input_param_3": 1,
                    "input_value_3": 1,
                    "mask": 1,
                    "param": 1,
                    "param3": 2,
                    "param_3": 1,
                    "rounding_mode": 1,
                    "shift": 1,
                    "shift_value": 1,
                    "undefined": 1,
                    "unknown": 2,
                    "unknown1": 1,
                    "unspecified": 1,
                    "unused": 1,
                    "unused_param": 1,
                    "var1": 1
                },
                "param_4": {
                    "comparison_value": 1,
                    "input4": 5,
                    "input_exponent": 1,
                    "input_int3": 1,
                    "input_param_4": 1,
                    "input_value_4": 1,
                    "mask": 2,
                    "param4": 2,
                    "param_4": 1,
                    "previous_result": 1,
                    "result": 3,
                    "rounding_mode": 1,
                    "shift": 3,
                    "shift_amount": 1,
                    "shift_value": 1,
                    "shifted_input2": 1,
                    "unknown2": 2,
                    "var2": 1
                },
                "uVar3": {
                    "abs_a": 1,
                    "bitwise_xor": 1,
                    "bitwise_xor_1": 1,
                    "divisor_complement": 1,
                    "flipped_flag": 1,
                    "flipped_input2": 3,
                    "flipped_mask": 1,
                    "input1_negated": 1,
                    "input_bit_negated": 1,
                    "input_float_msb_set": 1,
                    "input_xor": 1,
                    "input_xor_mask": 1,
                    "modified_input2": 1,
                    "negated_bits": 1,
                    "numerator_xor": 1,
                    "result": 1,
                    "result_1": 2,
                    "shifted_value1": 1,
                    "temp1": 4,
                    "temp_float_val": 1,
                    "temp_shifted_result": 1,
                    "temp_var1": 2,
                    "temp_var_1": 1,
                    "xor_result": 1
                },
                "uVar4": {
                    "abs_b": 1,
                    "abs_input1_shifted": 1,
                    "abs_num1": 1,
                    "bitwise_xor_2": 1,
                    "denominator_xor": 1,
                    "flipped_input": 1,
                    "flipped_input1": 3,
                    "input_float_msb": 1,
                    "masked_xor": 1,
                    "remainder": 1,
                    "result_2": 2,
                    "result_bit_negated": 1,
                    "rounding_bits": 1,
                    "shifted_input_xor_mask": 1,
                    "shifted_value2": 1,
                    "temp1": 2,
                    "temp2": 4,
                    "temp_float_val2": 1,
                    "temp_result": 1,
                    "temp_value": 1,
                    "temp_var2": 2,
                    "temp_var_2": 1,
                    "temporary_variable_2": 1
                },
                "uVar5": {
                    "abs_num1": 1,
                    "abs_result": 1,
                    "dividend_shifted": 1,
                    "input1_shifted": 1,
                    "left_shifted_input": 1,
                    "left_shifted_result": 1,
                    "modified_input_float": 1,
                    "numerator_shifted": 1,
                    "result": 4,
                    "result1": 2,
                    "result_1": 1,
                    "result_value": 1,
                    "shifted_input": 1,
                    "shifted_input1": 3,
                    "shifted_input_float": 1,
                    "shifted_input_number": 1,
                    "shifted_input_shifted": 1,
                    "shifted_input_val": 1,
                    "temp2": 1,
                    "temp3": 1,
                    "temp_result_1": 1,
                    "temp_var3": 1,
                    "temp_var_3": 1,
                    "updated_float_val": 1,
                    "val1": 1
                },
                "uVar6": {
                    "bits_difference": 1,
                    "condition": 1,
                    "count": 1,
                    "final_result": 1,
                    "final_shifted_input1": 1,
                    "final_value": 1,
                    "iteration": 1,
                    "loop_count": 1,
                    "ones_count": 1,
                    "original_result": 1,
                    "result": 1,
                    "result1": 1,
                    "result2": 1,
                    "result_2": 1,
                    "shift_amount": 1,
                    "shift_count": 2,
                    "shifted_amount": 1,
                    "shifted_input_sum": 1,
                    "subtract_result_abs": 1,
                    "sum": 1,
                    "temp3": 1,
                    "temp4": 1,
                    "temp_int_val": 1,
                    "temp_result": 1,
                    "temp_result_2": 1,
                    "temp_var4": 1,
                    "temp_var_4": 1,
                    "updated_input1": 1,
                    "updated_shifted_input": 1,
                    "val2": 1
                },
                "uVar7": {
                    "abs_diff": 1,
                    "diff": 1,
                    "diff_shift": 1,
                    "difference": 17,
                    "difference_count": 1,
                    "difference_shift": 1,
                    "num_left_shifts": 1,
                    "shift_diff": 1,
                    "shift_difference": 2,
                    "shift_value": 1,
                    "shifted_input_difference": 1,
                    "temp5": 1,
                    "temp_var5": 1,
                    "temp_var_5": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08002ec0",
                "FUN_08002d88",
                "FUN_0800426c",
                "FUN_08002ee8",
                "FUN_0800483c",
                "FUN_08003330",
                "FUN_08002bf0"
            ],
            "code": "\nuint calculate_updated_float_08000ad8(uint input1,uint input2,undefined4 input3,uint input4)\n\n{\n  int shift_amount;\n  int shift2;\n  uint temp1;\n  uint temp2;\n  uint result;\n  uint shift_count;\n  uint difference;\n  bool is_equal;\n  \n  temp1 = input2 ^ 0x80000000;\n  result = input1 << 1;\n  is_equal = result == 0;\n  if (!is_equal) {\n    input4 = input2 << 1;\n    is_equal = input4 == 0;\n  }\n  if (!is_equal) {\n    is_equal = result == input4;\n  }\n  shift_amount = (int)result >> 0x18;\n  if (!is_equal) {\n    is_equal = shift_amount == -1;\n  }\n  if (!is_equal) {\n    is_equal = (int)input4 >> 0x18 == -1;\n  }\n  if (is_equal) {\n    shift2 = (int)(input2 << 1) >> 0x18;\n    if (shift_amount == -1 || shift2 == -1) {\n      result = temp1;\n      if (shift_amount == -1) {\n        result = input1;\n      }\n      if (shift_amount != -1 || shift2 != -1) {\n        temp1 = result;\n      }\n      is_equal = (result & 0x7fffff) == 0;\n      if (is_equal) {\n        is_equal = (temp1 & 0x7fffff) == 0;\n      }\n      if (is_equal) {\n        is_equal = result == temp1;\n      }\n      if (!is_equal) {\n        result = result | 0x400000;\n      }\n      return result;\n    }\n    if (((input1 ^ temp1) & 0x7fffffff) != 0) {\n      if (result == 0) {\n        input1 = temp1;\n      }\n      return input1;\n    }\n    if (input1 != temp1) {\n      return 0;\n    }\n    if ((result & 0xff000000) == 0) {\n      temp1 = input1 << 1;\n      if ((input1 & 0x80000000) != 0) {\n        temp1 = temp1 | 0x80000000;\n      }\n      return temp1;\n    }\n    if (result < 0xfe000000) {\n      return input1 + 0x800000;\n    }\n    input1 = input1 & 0x80000000;\nLAB_08000c12:\n    return input1 | 0x7f800000;\n  }\n  result = result >> 0x18;\n  input4 = input4 >> 0x18;\n  difference = input4 - result;\n  is_equal = difference != 0;\n  shift_count = result;\n  if (is_equal && result <= input4) {\n    shift_count = result + difference;\n  }\n  if (is_equal && result <= input4) {\n    temp1 = temp1 ^ input1;\n  }\n  if (is_equal && result <= input4) {\n    input1 = input1 ^ temp1;\n  }\n  if (is_equal && result <= input4) {\n    temp1 = temp1 ^ input1;\n  }\n  if (input4 < result) {\n    difference = -difference;\n  }\n  if (0x19 < difference) {\n    return input1;\n  }\n  result = input1 & 0xffffff | 0x800000;\n  if ((input1 & 0x80000000) != 0) {\n    result = -result;\n  }\n  temp2 = temp1 & 0xffffff | 0x800000;\n  if ((temp1 & 0x80000000) != 0) {\n    temp2 = -temp2;\n  }\n  if (shift_count == difference) {\n    temp2 = temp2 ^ 0x800000;\n    if (shift_count == 0) {\n      result = result ^ 0x800000;\n      shift_count = 1;\n    }\n    else {\n      difference = difference - 1;\n    }\n  }\n  result = result + ((int)temp2 >> (difference & 0xff));\n  temp2 = temp2 << (0x20 - difference & 0xff);\n  input1 = result & 0x80000000;\n  if ((int)result < 0) {\n    is_equal = temp2 != 0;\n    temp2 = -temp2;\n    result = -result - (uint)is_equal;\n  }\n  if (result < 0x800000) {\n    temp1 = temp2 & 0x80000000;\n    temp2 = temp2 << 1;\n    result = result * 2 + (uint)(temp1 != 0);\n    temp1 = shift_count - 2;\n    if ((result & 0x800000) == 0) {\n      difference = leading_zero_count(result) - 8;\n      result = result << (difference & 0xff);\n      if ((int)temp1 < (int)difference) {\n        result = result >> (-(temp1 - difference) & 0xff);\n      }\n      else {\n        result = result + (temp1 - difference) * 0x800000;\n      }\n      return result | input1;\n    }\n  }\n  else {\n    temp1 = shift_count - 1;\n    if (0xffffff < result) {\n      temp1 = result & 1;\n      result = result >> 1;\n      temp2 = (uint)(temp1 != 0) << 0x1f | temp2 >> 1;\n      temp1 = shift_count;\n      if (0xfd < shift_count) goto LAB_08000c12;\n    }\n  }\n  result = result + temp1 * 0x800000 + (uint)(0x7fffffff < temp2);\n  if (temp2 == 0x80000000) {\n    result = result & 0xfffffffe;\n  }\n  return result | input1;\n}\n\n",
            "current_name": "calculate_updated_float_08000ad8",
            "entrypoint": "0x08000ad8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000ad8": "calculate_updated_float_08000ad8",
                "LZCOUNT": "leading_zero_count",
                "bVar8": "is_equal",
                "iVar1": "shift_amount",
                "iVar2": "shift2",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar5": "result",
                "uVar6": "shift_count",
                "uVar7": "difference"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000adc": {
            "additional_data": {
                "FUN_08000adc": {
                    "bitwise_arithmetic": 1,
                    "calculate_float": 10,
                    "calculate_float_value": 1,
                    "calculate_floating_point": 7,
                    "calculate_floating_point_value": 1,
                    "calculate_new_floating_point": 1,
                    "calculate_normalized_difference": 1,
                    "calculate_normalized_float": 1,
                    "float_to_binary": 1,
                    "perform_arithmetic": 1,
                    "perform_float_operation": 1,
                    "perform_floating_point_operation": 1,
                    "perform_unsigned_division": 1,
                    "reverse_float": 1,
                    "reversed_bitwise_operation": 1
                },
                "LZCOUNT": {
                    "count_leading_zeroes": 1,
                    "leading_zero_count": 3
                },
                "bVar7": {
                    "are_equal": 1,
                    "comparison_result": 1,
                    "equal_values": 1,
                    "is_condition_met": 1,
                    "is_condition_true": 1,
                    "is_equal": 11,
                    "is_equal_exponent": 1,
                    "is_equal_or_zero": 1,
                    "is_zero": 12,
                    "is_zero_bit": 1
                },
                "iVar1": {
                    "bit_shifted_num1": 1,
                    "dividend_shift": 1,
                    "exp1": 1,
                    "left_shifted_float": 1,
                    "left_shifting_count": 1,
                    "num_binary1_shifted": 1,
                    "shift": 1,
                    "shift1": 2,
                    "shift_amount": 2,
                    "shift_amount1": 1,
                    "shifted_input": 1,
                    "shifted_input1": 3,
                    "shifted_input_1": 2,
                    "shifted_input_a_upper": 1,
                    "shifted_mantissa_float1": 1,
                    "shifted_num1": 3,
                    "shifted_number1": 1,
                    "shifted_value1": 2,
                    "sign1": 2,
                    "sign_bit1": 1,
                    "sign_bit_dividend": 1,
                    "signed_temp1": 1
                },
                "iVar2": {
                    "bit_shifted_num2": 1,
                    "divisor_shift": 1,
                    "exp2": 1,
                    "num_binary1_shifted_msb": 1,
                    "right_shifted_float": 1,
                    "right_shifting_count": 1,
                    "second_shift": 1,
                    "second_shift_amount": 1,
                    "shift2": 2,
                    "shift_amount2": 2,
                    "shifted_input2": 4,
                    "shifted_input_2": 2,
                    "shifted_input_b_upper": 1,
                    "shifted_mantissa_float2": 1,
                    "shifted_num2": 3,
                    "shifted_number2": 1,
                    "shifted_value2": 2,
                    "sign2": 2,
                    "sign_bit2": 1,
                    "sign_bit_divisor": 1,
                    "signed_temp2": 1
                },
                "param_1": {
                    "dividend": 2,
                    "float1": 3,
                    "input1": 10,
                    "input_1": 2,
                    "input_a": 2,
                    "input_float1": 1,
                    "input_number1": 1,
                    "input_value1": 1,
                    "num1": 3,
                    "num_binary1": 1,
                    "number1": 2,
                    "result": 1,
                    "value1": 2
                },
                "param_2": {
                    "divisor": 2,
                    "float2": 3,
                    "input1": 1,
                    "input2": 10,
                    "input_2": 2,
                    "input_b": 2,
                    "input_float2": 1,
                    "input_number2": 1,
                    "input_value2": 1,
                    "num2": 3,
                    "num_binary2": 1,
                    "number2": 2,
                    "value2": 2
                },
                "param_3": {
                    "extra_param": 1,
                    "flag": 1,
                    "flags": 1,
                    "float3": 1,
                    "ignored": 1,
                    "input2": 1,
                    "input3": 7,
                    "input_3": 1,
                    "input_c": 2,
                    "input_flag": 1,
                    "input_value1": 1,
                    "input_var": 1,
                    "mode": 1,
                    "param3": 4,
                    "param_3": 2,
                    "precision": 1,
                    "quotient": 1,
                    "rounding_mode": 1,
                    "temp": 1,
                    "value1": 1
                },
                "param_4": {
                    "check_var": 1,
                    "exception_flags": 1,
                    "float4": 1,
                    "ignored": 1,
                    "input3": 1,
                    "input4": 7,
                    "input_4": 1,
                    "input_d": 2,
                    "input_value": 1,
                    "input_value2": 1,
                    "mask": 1,
                    "param4": 4,
                    "param_4": 2,
                    "remainder": 1,
                    "result": 3,
                    "rounding_mode": 1,
                    "shift_amount": 1,
                    "value2": 1
                },
                "uVar3": {
                    "abs_dividend": 1,
                    "dividend_sign": 1,
                    "fraction1": 1,
                    "input1_exp": 1,
                    "input1_sign_extension": 1,
                    "mantissa1": 3,
                    "mantissa_float2": 1,
                    "normalized_input1": 1,
                    "normalized_value1": 1,
                    "num_binary2_shifted": 1,
                    "positive_input_1": 1,
                    "result": 1,
                    "result1": 7,
                    "result_num": 1,
                    "rounded_value": 1,
                    "shifted_input_c": 1,
                    "shifted_num2": 1,
                    "shifted_output1": 1,
                    "shifted_result": 2,
                    "shifted_value_1": 1,
                    "temp_var1": 1
                },
                "uVar4": {
                    "abs_divisor": 1,
                    "bitwise_number1": 1,
                    "decimal1": 1,
                    "dividend_adjusted": 1,
                    "float1": 1,
                    "fraction2": 1,
                    "input1_extended": 1,
                    "mantissa2": 3,
                    "mantissa_float1": 1,
                    "normalized_input2": 1,
                    "normalized_number1": 1,
                    "normalized_value1": 1,
                    "normalized_value2": 1,
                    "num1_shifted": 1,
                    "num_binary2_shifted_msb": 1,
                    "positive_input_2": 1,
                    "result2": 1,
                    "result_exp": 1,
                    "shifted_input1": 1,
                    "shifted_input_a": 1,
                    "shifted_num1": 1,
                    "shifted_output2": 1,
                    "shifted_param1": 1,
                    "shifted_value_2": 1,
                    "temp1": 3,
                    "temp_num": 1,
                    "temp_var2": 1
                },
                "uVar5": {
                    "abs_diff_exp": 1,
                    "adjusted_shift_count": 1,
                    "comparison_num": 1,
                    "count1": 1,
                    "counter": 1,
                    "difference": 1,
                    "dividend_sign": 1,
                    "divisor_adjusted": 1,
                    "exp_difference": 1,
                    "exponent1": 3,
                    "exponent_float1": 1,
                    "float2": 1,
                    "input2_extended": 1,
                    "loop_counter": 1,
                    "normalized_number2": 1,
                    "normalized_shift": 1,
                    "normalized_value2": 1,
                    "num1_shift": 1,
                    "num_binary1_shifted_rev": 1,
                    "shifted_param2": 1,
                    "shifted_result": 1,
                    "temp1": 1,
                    "temp2": 3,
                    "temp_num2": 1,
                    "temp_value_1": 1,
                    "temp_var3": 1,
                    "u_var5": 1
                },
                "uVar6": {
                    "abs_difference": 1,
                    "count2": 1,
                    "diff": 2,
                    "diff_exp": 1,
                    "difference": 14,
                    "difference_num": 1,
                    "divisor_sign": 1,
                    "exponent2": 3,
                    "exponent_difference": 1,
                    "num2_shift": 1,
                    "temp2": 1,
                    "temp3": 1,
                    "temp_value_2": 1,
                    "temp_var4": 1,
                    "u_var6": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08002ec0",
                "FUN_08004a84",
                "FUN_0800426c",
                "FUN_08002cb0",
                "FUN_08002ee8",
                "FUN_0800483c",
                "FUN_08003330",
                "FUN_0800411c"
            ],
            "code": "\nuint calculate_normalized_float_08000adc(uint input1,uint input2,undefined4 input3,uint input4)\n\n{\n  int shifted_num1;\n  int shifted_input2;\n  uint result1;\n  uint temp1;\n  uint temp2;\n  uint difference;\n  bool is_zero;\n  \n  temp1 = input1 << 1;\n  is_zero = temp1 == 0;\n  if (!is_zero) {\n    input4 = input2 << 1;\n    is_zero = input4 == 0;\n  }\n  if (!is_zero) {\n    is_zero = temp1 == input4;\n  }\n  shifted_num1 = (int)temp1 >> 0x18;\n  if (!is_zero) {\n    is_zero = shifted_num1 == -1;\n  }\n  if (!is_zero) {\n    is_zero = (int)input4 >> 0x18 == -1;\n  }\n  if (is_zero) {\n    shifted_input2 = (int)(input2 << 1) >> 0x18;\n    if (shifted_num1 == -1 || shifted_input2 == -1) {\n      temp1 = input2;\n      if (shifted_num1 == -1) {\n        temp1 = input1;\n      }\n      if (shifted_num1 != -1 || shifted_input2 != -1) {\n        input2 = temp1;\n      }\n      is_zero = (temp1 & 0x7fffff) == 0;\n      if (is_zero) {\n        is_zero = (input2 & 0x7fffff) == 0;\n      }\n      if (is_zero) {\n        is_zero = temp1 == input2;\n      }\n      if (!is_zero) {\n        temp1 = temp1 | 0x400000;\n      }\n      return temp1;\n    }\n    if (((input1 ^ input2) & 0x7fffffff) != 0) {\n      if (temp1 == 0) {\n        input1 = input2;\n      }\n      return input1;\n    }\n    if (input1 != input2) {\n      return 0;\n    }\n    if ((temp1 & 0xff000000) == 0) {\n      temp1 = input1 << 1;\n      if ((input1 & 0x80000000) != 0) {\n        temp1 = temp1 | 0x80000000;\n      }\n      return temp1;\n    }\n    if (temp1 < 0xfe000000) {\n      return input1 + 0x800000;\n    }\n    input1 = input1 & 0x80000000;\nLAB_08000c12:\n    return input1 | 0x7f800000;\n  }\n  temp1 = temp1 >> 0x18;\n  input4 = input4 >> 0x18;\n  difference = input4 - temp1;\n  is_zero = difference != 0;\n  temp2 = temp1;\n  if (is_zero && temp1 <= input4) {\n    temp2 = temp1 + difference;\n  }\n  if (is_zero && temp1 <= input4) {\n    input2 = input2 ^ input1;\n  }\n  if (is_zero && temp1 <= input4) {\n    input1 = input1 ^ input2;\n  }\n  if (is_zero && temp1 <= input4) {\n    input2 = input2 ^ input1;\n  }\n  if (input4 < temp1) {\n    difference = -difference;\n  }\n  if (0x19 < difference) {\n    return input1;\n  }\n  temp1 = input1 & 0xffffff | 0x800000;\n  if ((input1 & 0x80000000) != 0) {\n    temp1 = -temp1;\n  }\n  result1 = input2 & 0xffffff | 0x800000;\n  if ((input2 & 0x80000000) != 0) {\n    result1 = -result1;\n  }\n  if (temp2 == difference) {\n    result1 = result1 ^ 0x800000;\n    if (temp2 == 0) {\n      temp1 = temp1 ^ 0x800000;\n      temp2 = 1;\n    }\n    else {\n      difference = difference - 1;\n    }\n  }\n  temp1 = temp1 + ((int)result1 >> (difference & 0xff));\n  result1 = result1 << (0x20 - difference & 0xff);\n  input1 = temp1 & 0x80000000;\n  if ((int)temp1 < 0) {\n    is_zero = result1 != 0;\n    result1 = -result1;\n    temp1 = -temp1 - (uint)is_zero;\n  }\n  if (temp1 < 0x800000) {\n    difference = result1 & 0x80000000;\n    result1 = result1 << 1;\n    temp1 = temp1 * 2 + (uint)(difference != 0);\n    difference = temp2 - 2;\n    if ((temp1 & 0x800000) == 0) {\n      temp2 = leading_zero_count(temp1) - 8;\n      temp1 = temp1 << (temp2 & 0xff);\n      if ((int)difference < (int)temp2) {\n        temp1 = temp1 >> (-(difference - temp2) & 0xff);\n      }\n      else {\n        temp1 = temp1 + (difference - temp2) * 0x800000;\n      }\n      return temp1 | input1;\n    }\n  }\n  else {\n    difference = temp2 - 1;\n    if (0xffffff < temp1) {\n      difference = temp1 & 1;\n      temp1 = temp1 >> 1;\n      result1 = (uint)(difference != 0) << 0x1f | result1 >> 1;\n      difference = temp2;\n      if (0xfd < temp2) goto LAB_08000c12;\n    }\n  }\n  temp1 = temp1 + difference * 0x800000 + (uint)(0x7fffffff < result1);\n  if (result1 == 0x80000000) {\n    temp1 = temp1 & 0xfffffffe;\n  }\n  return temp1 | input1;\n}\n\n",
            "current_name": "calculate_normalized_float_08000adc",
            "entrypoint": "0x08000adc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000adc": "calculate_normalized_float_08000adc",
                "LZCOUNT": "leading_zero_count",
                "bVar7": "is_zero",
                "iVar1": "shifted_num1",
                "iVar2": "shifted_input2",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar3": "result1",
                "uVar4": "temp1",
                "uVar5": "temp2",
                "uVar6": "difference"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000c3c": {
            "additional_data": {
                "FUN_08000c3c": {
                    "bitwise_shift_and_add": 1,
                    "calculate_hash": 1,
                    "calculate_modified_value": 1,
                    "calculate_new_value": 2,
                    "calculate_result": 1,
                    "calculate_shifted_number": 1,
                    "calculate_shifted_value": 2,
                    "calculate_some_value": 1,
                    "calculate_unsigned_value": 1,
                    "calculate_value": 2,
                    "calculation_function": 1,
                    "count_and_shift": 1,
                    "count_bits": 1,
                    "count_bits_with_offset": 1,
                    "decode_and_transform": 1,
                    "decode_number": 1,
                    "decode_uint": 2,
                    "decode_value": 1,
                    "descriptive_function_name": 1,
                    "process_value": 1,
                    "reverse_bits": 3,
                    "reverse_bitwise_operation": 1,
                    "reverse_var_calculation": 1
                },
                "iVar3": {
                    "base_multiplier": 1,
                    "base_value": 3,
                    "bias": 1,
                    "calculation": 1,
                    "calculation_result": 1,
                    "constant": 9,
                    "constant_offset": 4,
                    "constant_value": 4,
                    "initial_result": 1,
                    "offset": 5,
                    "result": 1
                },
                "param_1": {
                    "input": 12,
                    "input_number": 1,
                    "input_value": 14,
                    "number": 2,
                    "value": 2
                },
                "result": {
                    "output_value": 1
                },
                "uVar1": {
                    "count": 1,
                    "final_result": 1,
                    "leading_zero_count": 2,
                    "leading_zeroes": 8,
                    "leading_zeroes_count": 1,
                    "leading_zeros": 14,
                    "result": 4
                },
                "uVar12": {
                    "result": 1
                },
                "uVar1_1": {
                    "leading_zeros_minus_1": 1
                },
                "uVar1_2": {
                    "leading_zeros_shifted": 1
                },
                "uVar1_3": {
                    "leading_zeros_shifted_inv": 1
                },
                "uVar1_4": {
                    "leading_zeros_shifted_inv_overflow": 1
                },
                "uVar1_5": {
                    "value_shifted": 1
                },
                "uVar1_6": {
                    "value_shifted_inv": 1
                },
                "uVar1_7": {
                    "value_shifted_inv_overflow": 1
                },
                "uVar1_8": {
                    "value_masked": 1
                },
                "uVar1_normalized_result": {
                    "normalized_result": 1
                },
                "uVar1_normalized_result_bitmasked": {
                    "normalized_result_bitmasked": 1
                },
                "uVar1_shifted": {
                    "leading_zeros_shifted": 1,
                    "shifted_leading_zeros": 1
                },
                "uVar1_shifted_masked": {
                    "leading_zeros_shifted_masked": 1
                },
                "uVar1_shifted_masked_extended": {
                    "leading_zeros_shifted_masked_extended": 1
                },
                "uVar1_shifted_masked_extended_shifted": {
                    "leading_zeros_shifted_masked_extended_shifted": 1
                },
                "uVar1_shifted_masked_extended_shifted_masked": {
                    "leading_zeros_shifted_masked_extended_shifted_masked": 1
                },
                "uVar1_shifted_masked_extended_shifted_masked_shifted": {
                    "leading_zeros_shifted_masked_extended_shifted_masked_shifted": 1
                },
                "uVar1_shifted_masked_extended_shifted_masked_shifted_signed": {
                    "leading_zeros_shifted_masked_extended_shifted_masked_shifted_signed": 1
                },
                "uVar1_shifted_masked_extended_shifted_masked_shifted_signed_temp": {
                    "leading_zeros_shifted_masked_extended_shifted_masked_shifted_signed_temp": 1
                },
                "uVar1_shifted_masked_extended_shifted_masked_shifted_signed_temp_masked": {
                    "leading_zeros_shifted_masked_extended_shifted_masked_shifted_signed_temp_masked": 1
                },
                "uVar1_shifted_normalized": {
                    "normalized_shifted_leading_zeros": 1
                },
                "uVar1_shifted_normalized_bitmasked": {
                    "normalized_shifted_leading_zeros_bitmasked": 1
                },
                "uVar1_temp": {
                    "leading_zeros_temp": 1
                },
                "uVar2": {
                    "masked_value": 1,
                    "offset": 1,
                    "shift": 2,
                    "shift_amount": 23,
                    "shift_count": 1,
                    "shift_value": 1,
                    "shifted_input": 1,
                    "shifted_value": 1
                },
                "uVar2_1": {
                    "shifted_value": 1
                },
                "uVar2_bitmasked": {
                    "shift_amount_bitmasked": 1
                },
                "uVar2_masked": {
                    "shift_amount_masked": 1
                },
                "uVar2_positive": {
                    "shift_amount_positive": 1
                },
                "uVar2_positive_masked": {
                    "shift_amount_positive_masked": 1
                },
                "uVar2_positive_masked_extended": {
                    "shift_amount_positive_masked_extended": 1
                },
                "uVar2_shifted": {
                    "shift_amount_shifted": 1
                },
                "uVar2_shifted_extended": {
                    "extended_value": 1
                },
                "uVar2_shifted_extended_masked": {
                    "masked_extended_value": 1
                },
                "uVar2_shifted_signed_masked_extended_shifted_masked_shifted_signed": {
                    "shift_amount_shifted_signed_masked_extended_shifted_masked_shifted_signed": 1
                },
                "uVar2_shifted_signed_masked_extended_shifted_masked_shifted_signed_temp": {
                    "shift_amount_shifted_signed_masked_extended_shifted_masked_shifted_signed_temp": 1
                },
                "uVar2_shifted_signed_masked_extended_shifted_masked_shifted_signed_temp_masked": {
                    "shift_amount_shifted_signed_masked_extended_shifted_masked_shifted_signed_temp_masked": 1
                },
                "uVar2_signed": {
                    "shift_amount_signed": 1
                },
                "uVar2_signed_masked": {
                    "shift_amount_signed_masked": 1
                },
                "uVar2_signed_masked_extended": {
                    "shift_amount_signed_masked_extended": 1
                },
                "uVar2_temp": {
                    "shift_amount_temp": 1
                },
                "uVar2_unsigned_masked_extended_shifted_masked": {
                    "shift_amount_unsigned_masked_extended_shifted_masked": 1
                },
                "uVar4": {
                    "bit_check": 1,
                    "bit_shift_result": 1,
                    "bit_shifted_value": 1,
                    "bitwise_and_value": 1,
                    "bitwise_result": 1,
                    "carry": 4,
                    "check_value": 1,
                    "comparison_result": 3,
                    "conditional_value": 1,
                    "decoded_value": 1,
                    "mask": 6,
                    "mask_result": 1,
                    "masked_value": 1,
                    "shifted_bit": 1,
                    "shifted_zero": 1,
                    "sign_bit_check": 1,
                    "temp": 1,
                    "temp_result": 1,
                    "temp_value": 2,
                    "temp_variable": 1
                },
                "uVar4_max_value_check": {
                    "is_shifted_zero_max_value": 1
                },
                "uVar4_temp": {
                    "temp_variable_temp": 1
                },
                "uVar5": {
                    "masked_shift_amount": 1,
                    "result": 1,
                    "shifted_value": 1
                },
                "uVar6": {
                    "high_bits": 1,
                    "result": 1
                },
                "uVar7": {
                    "mask": 1,
                    "temp_result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08002f28"
            ],
            "code": "\nuint calculate_new_value_08000c3c(uint input_value)\n\n{\n  uint leading_zeros;\n  uint shift_amount;\n  int constant;\n  uint mask;\n  \n  if (input_value == 0) {\n    return 0;\n  }\n  leading_zeros = LZCOUNT(input_value);\n  shift_amount = leading_zeros - 8;\n  constant = shift_amount * -0x800000 + 0x4a800000;\n  if (7 < leading_zeros) {\n    mask = 0 << (shift_amount & 0xff);\n    leading_zeros = constant + (input_value << (shift_amount & 0xff)) +\n            (0U >> (0x20 - shift_amount & 0xff)) + (uint)(0x7fffffff < mask);\n    if (mask == 0x80000000) {\n      leading_zeros = leading_zeros & 0xfffffffe;\n    }\n    return leading_zeros;\n  }\n  shift_amount = input_value << leading_zeros + 0x18;\n  leading_zeros = constant + ((input_value >> (0x20 - (leading_zeros + 0x18) & 0xff)) - ((int)shift_amount >> 0x1f));\n  if ((shift_amount & 0x7fffffff) == 0) {\n    leading_zeros = leading_zeros & ~(shift_amount >> 0x1f);\n  }\n  return leading_zeros;\n}\n\n",
            "current_name": "calculate_new_value_08000c3c",
            "entrypoint": "0x08000c3c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000c3c": "calculate_new_value_08000c3c",
                "iVar3": "constant",
                "param_1": "input_value",
                "uVar1": "leading_zeros",
                "uVar2": "shift_amount",
                "uVar4": "mask"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000c44": {
            "additional_data": {
                "FUN_08000c44": {
                    "bitwise_operation": 1,
                    "calculate_abs_value_and_shift": 1,
                    "calculate_computed_value": 1,
                    "calculate_modified_value": 1,
                    "calculate_offset": 1,
                    "calculate_shifted_value": 1,
                    "calculate_unsigned": 1,
                    "count_bits": 4,
                    "count_bits_and_shift": 1,
                    "count_leading_zeros": 4,
                    "count_set_bits": 1,
                    "count_set_bits_and_compress": 1,
                    "decode_and_transform": 1,
                    "decode_unsigned_integer": 1,
                    "determine_bit_pattern": 1,
                    "parse_integer": 1,
                    "reverse_bits": 6,
                    "reverse_bitwise_arithmetic": 1,
                    "reverse_unsigned_integer": 1
                },
                "LZCOUNT": {
                    "count_leading_zeroes": 1,
                    "count_leading_zeros": 1
                },
                "cVar1": {
                    "bit_flag": 1
                },
                "iVar4": {
                    "adjusted_value": 1,
                    "base_offset": 1,
                    "compressed_number": 1,
                    "intermediate_result": 1,
                    "intermediate_value": 1,
                    "modified_value": 1,
                    "result": 23,
                    "result_offset": 1,
                    "transformed_value": 1
                },
                "param_1": {
                    "input": 17,
                    "input_number": 2,
                    "input_value": 9,
                    "number": 3
                },
                "uVar1": {
                    "bits_count": 1,
                    "count_of_set_bits": 1,
                    "leading_zeroes": 4,
                    "leading_zeroes_count": 1,
                    "leading_zeros": 20,
                    "num_bits": 2,
                    "num_set_bits": 1,
                    "zeros": 1
                },
                "uVar11": {
                    "high_bits_mask": 1
                },
                "uVar12": {
                    "lower_bits_mask": 1
                },
                "uVar13": {
                    "shifted_input": 1
                },
                "uVar14": {
                    "shifted_result": 1
                },
                "uVar2": {
                    "shift": 5,
                    "shift_amount": 19,
                    "shift_count": 2,
                    "shift_distance": 1,
                    "shift_offset": 1,
                    "shift_value": 2,
                    "shifted_value": 1
                },
                "uVar3": {
                    "input_sign": 1,
                    "is_negative": 6,
                    "neg_flag": 1,
                    "sign": 1,
                    "sign_bit": 18,
                    "sign_bit_check": 1,
                    "signed_bit": 1,
                    "signed_flag": 1,
                    "unsigned_flag": 1
                },
                "uVar4": {
                    "mask": 1,
                    "temp1": 1
                },
                "uVar5": {
                    "adjustment": 1,
                    "temp2": 1
                },
                "uVar6": {
                    "carry_bit": 1
                },
                "uVar7": {
                    "adjusted_result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08002b48",
                "FUN_08002d88",
                "FUN_08002cb0",
                "FUN_0800483c",
                "FUN_0800411c",
                "FUN_08002bf0"
            ],
            "code": "\nuint count_bits_and_shift_08000c44(uint input)\n\n{\n  uint leading_zeros;\n  uint shift_amount;\n  uint sign_bit;\n  int result;\n  \n  sign_bit = input & 0x80000000;\n  if ((int)sign_bit < 0) {\n    input = -input;\n  }\n  if (input == 0) {\n    return 0;\n  }\n  leading_zeros = count_leading_zeros(input);\n  shift_amount = leading_zeros - 8;\n  result = ((sign_bit | 0x4b000000) - 0x800000) + shift_amount * -0x800000;\n  if (7 < leading_zeros) {\n    leading_zeros = 0 << (shift_amount & 0xff);\n    sign_bit = result + (input << (shift_amount & 0xff)) +\n            (0U >> (0x20 - shift_amount & 0xff)) + (uint)(0x7fffffff < leading_zeros);\n    if (leading_zeros == 0x80000000) {\n      sign_bit = sign_bit & 0xfffffffe;\n    }\n    return sign_bit;\n  }\n  shift_amount = input << leading_zeros + 0x18;\n  sign_bit = result + ((input >> (0x20 - (leading_zeros + 0x18) & 0xff)) - ((int)shift_amount >> 0x1f));\n  if ((shift_amount & 0x7fffffff) == 0) {\n    sign_bit = sign_bit & ~(shift_amount >> 0x1f);\n  }\n  return sign_bit;\n}\n\n",
            "current_name": "count_bits_and_shift_08000c44",
            "entrypoint": "0x08000c44",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000c44": "count_bits_and_shift_08000c44",
                "LZCOUNT": "count_leading_zeros",
                "iVar4": "result",
                "param_1": "input",
                "uVar1": "leading_zeros",
                "uVar2": "shift_amount",
                "uVar3": "sign_bit"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000cec": {
            "additional_data": {
                "FUN_08000cec": {
                    "binary_arithmetic": 1,
                    "calculate_float": 13,
                    "calculate_float_binary_representation": 1,
                    "calculate_float_value": 4,
                    "calculate_floating_point": 4,
                    "calculate_floating_point_number": 1,
                    "calculate_floating_point_value": 2,
                    "compute_floating_point": 1,
                    "floating_point_addition": 1,
                    "perform_arithmetic_operation": 1
                },
                "bVar10": {
                    "borrow": 1,
                    "carry": 3,
                    "carry_flag": 1,
                    "check2": 4,
                    "is_borrow": 1,
                    "is_carry": 1,
                    "is_carry_flag": 1,
                    "is_negative": 9,
                    "is_negative1": 1,
                    "is_overflow": 4,
                    "is_shift_input2_zero": 1,
                    "is_shift_valid": 1,
                    "is_suboverflow": 1,
                    "is_zero2": 1,
                    "overflow_flag": 1
                },
                "bVar11": {
                    "overflow_flag": 1
                },
                "bVar12": {
                    "is_zero": 1
                },
                "bVar9": {
                    "check": 1,
                    "check1": 4,
                    "is_condition_true": 1,
                    "is_equal": 1,
                    "is_input1_valid": 1,
                    "is_shift_input1_zero": 1,
                    "is_zero": 13,
                    "is_zero1": 5,
                    "is_zero_a": 1,
                    "is_zero_check": 1,
                    "is_zero_check2": 1
                },
                "iVar4": {
                    "shifted_inputs_sum": 1,
                    "shifted_sum": 8,
                    "sum": 14,
                    "sum1": 1,
                    "sum_exponents": 1,
                    "sum_of_shifted_inputs": 1,
                    "sum_of_significands": 1,
                    "sum_shifted_vals": 1,
                    "temp1": 1
                },
                "iVar5": {
                    "count1": 1,
                    "diff": 5,
                    "diff_exponents": 1,
                    "diff_sign": 1,
                    "difference": 5,
                    "difference1": 1,
                    "offset": 1,
                    "shift_amount": 1,
                    "shift_amount1": 1,
                    "shift_diff": 1,
                    "shifted_diff": 2,
                    "shifted_inputs_diff": 1,
                    "shifted_sum": 3,
                    "shifted_sum_difference": 1,
                    "subtraction_result": 1,
                    "sum_diff": 2,
                    "sum_minus7f": 1,
                    "temp2": 1
                },
                "iVar6": {
                    "count2": 1
                },
                "iVar7": {
                    "abs_diff_exponents": 1,
                    "adjusted_diff": 1,
                    "clamped_diff": 1,
                    "compare1": 1,
                    "diff": 1,
                    "diff_temp": 1,
                    "difference": 1,
                    "difference2": 1,
                    "difference_abs": 1,
                    "difference_shifted": 1,
                    "exponent_difference": 1,
                    "loop_counter": 1,
                    "offset2": 1,
                    "remaining": 1,
                    "remaining_shift": 2,
                    "shift": 1,
                    "shift_amount2": 1,
                    "shift_count": 1,
                    "shift_difference": 2,
                    "shift_distance": 1,
                    "shifted_diff": 2,
                    "shifted_difference": 1,
                    "sum_diff2": 2,
                    "temp3": 1,
                    "u_var8_diff": 1
                },
                "iVar8": {
                    "boundary_check": 1
                },
                "lVar1": {
                    "multiply_result": 1,
                    "product": 7,
                    "product_long": 1,
                    "result": 1,
                    "temp_long_long": 1,
                    "temp_variable": 1
                },
                "lVar13": {
                    "multiplication_result": 1
                },
                "param_1": {
                    "input1": 13,
                    "input_a": 1,
                    "input_value1": 3,
                    "input_value_a": 1,
                    "num1": 3,
                    "number1": 1,
                    "operand1": 2,
                    "value1": 6,
                    "x": 1
                },
                "param_2": {
                    "input2": 13,
                    "input_b": 1,
                    "input_value2": 3,
                    "input_value_b": 1,
                    "num2": 3,
                    "number2": 1,
                    "operand2": 2,
                    "value2": 6,
                    "y": 1
                },
                "param_3": {
                    "flag1": 1,
                    "flags": 2,
                    "input3": 6,
                    "input_flag": 1,
                    "input_value3": 3,
                    "operand3": 1,
                    "param3": 5,
                    "shift_amount": 1,
                    "temp1": 2,
                    "undefined": 1,
                    "unused": 1,
                    "unused_param": 1,
                    "val3": 1,
                    "value3": 3,
                    "z": 1
                },
                "param_4": {
                    "bitshifted_value2": 1,
                    "carry": 2,
                    "diff_result": 1,
                    "flag2": 1,
                    "high_bits_b": 1,
                    "input3": 1,
                    "input4": 5,
                    "input_value4": 2,
                    "mask": 1,
                    "operand4": 1,
                    "param4": 4,
                    "shift_input2": 1,
                    "shifted_bits2": 1,
                    "shifted_value2": 1,
                    "temp2": 2,
                    "unused_param2": 1,
                    "val4": 1,
                    "value3": 1,
                    "value4": 2,
                    "w": 1
                },
                "uVar2": {
                    "float_result": 1,
                    "new_operand": 1,
                    "result": 27,
                    "result1": 1,
                    "result_a": 1
                },
                "uVar3": {
                    "bit_shift1": 1,
                    "bitshifted_value1": 1,
                    "exponent1": 1,
                    "first_value": 1,
                    "input1_shifted": 3,
                    "mask1": 1,
                    "num1_shifted": 1,
                    "operand1_shifted": 2,
                    "result_b": 1,
                    "shift": 1,
                    "shift1": 2,
                    "shift_count1": 2,
                    "shifted_bits1": 3,
                    "shifted_input1": 1,
                    "shifted_inputs_sum_normalized": 1,
                    "shifted_val1": 1,
                    "shifted_value": 1,
                    "shifted_value1": 1,
                    "shifted_value_a": 1,
                    "temp_result_shifted": 1,
                    "u_var3": 2,
                    "value1_shifted": 1,
                    "x_shift_right": 1
                },
                "uVar4": {
                    "shift_count2": 1
                },
                "uVar6": {
                    "l_var1_low": 1,
                    "low_bits_product": 1,
                    "lower": 1,
                    "lower_part": 1,
                    "lower_product": 2,
                    "multiplication_result": 2,
                    "multiplied_inputs": 1,
                    "multiplied_result": 2,
                    "multiply_lower_part": 1,
                    "operand1_times_operand2": 1,
                    "product": 4,
                    "product_as_u_int": 1,
                    "product_low": 3,
                    "product_lower": 1,
                    "product_of_significands": 1,
                    "result2": 1,
                    "result_lower": 1,
                    "temp1": 1,
                    "temp_result_2": 1,
                    "var1": 1
                },
                "uVar8": {
                    "adjusted_result": 1,
                    "bit_shift2": 1,
                    "bitwise_operation_result": 1,
                    "combined_value": 1,
                    "compare2": 1,
                    "exponent_adjusted_result": 1,
                    "extended_result": 1,
                    "final_result": 1,
                    "mantissa1": 1,
                    "modified_result": 1,
                    "num2_shifted": 1,
                    "overflow_shift": 1,
                    "result3": 1,
                    "result_shifted": 2,
                    "shifted_bits2": 2,
                    "shifted_input1": 1,
                    "shifted_input2": 1,
                    "shifted_inputs": 1,
                    "shifted_inputs_diff_normalized": 1,
                    "shifted_val2": 1,
                    "temp1": 1,
                    "temp_result": 4,
                    "temp_variable_result": 1,
                    "u_var8": 2,
                    "upper_product": 1
                },
                "uVar9": {
                    "temp2": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08002ec0",
                "FUN_08002b48",
                "FUN_08002d88",
                "FUN_08004a84",
                "FUN_08002cb0",
                "FUN_08004a30",
                "FUN_0800483c",
                "FUN_08003330",
                "FUN_08002f28",
                "FUN_08002bf0"
            ],
            "code": "\nuint calculate_float_value_08000cec(uint input1,uint input2,undefined4 input3,uint input4)\n\n{\n  longlong product;\n  uint result;\n  uint input1_shifted;\n  int sum;\n  int diff;\n  uint product;\n  int sum_diff2;\n  uint temp_result;\n  bool is_zero;\n  bool is_negative;\n  \n  input1_shifted = input1 >> 0x17 & 0xff;\n  is_zero = input1_shifted == 0;\n  if (!is_zero) {\n    input4 = input2 >> 0x17 & 0xff;\n    is_zero = input4 == 0;\n  }\n  if (!is_zero) {\n    is_zero = input1_shifted == 0xff;\n  }\n  if (!is_zero) {\n    is_zero = input4 == 0xff;\n  }\n  if (is_zero) {\n    input4 = input2 >> 0x17 & 0xff;\n    if (input1_shifted == 0xff || input4 == 0xff) {\n      is_zero = input1 == 0 || input1 == 0x80000000;\n      result = input2;\n      if (input1 != 0 && input1 != 0x80000000) {\n        is_zero = input2 == 0;\n        result = input1;\n      }\n      if (!is_zero) {\n        is_zero = input2 == 0x80000000;\n      }\n      temp_result = result;\n      if (((is_zero) || ((input1_shifted == 0xff && ((result & 0x7fffff) != 0)))) ||\n         ((input4 == 0xff && (temp_result = input2, (input2 & 0x7fffff) != 0)))) {\n        return temp_result | 0x7fc00000;\n      }\n      result = result ^ input2;\n      goto LAB_08000e3c;\n    }\n    is_zero = (input1 & 0x7fffffff) == 0;\n    if (!is_zero) {\n      is_zero = (input2 & 0x7fffffff) == 0;\n    }\n    if (is_zero) {\n      return (input1 ^ input2) & 0x80000000;\n    }\n    is_zero = input1_shifted == 0;\n    result = input1 & 0x80000000;\n    while( true ) {\n      if (is_zero) {\n        input1 = input1 << 1;\n        is_zero = (input1 & 0x800000) == 0;\n      }\n      if (!is_zero) break;\n      input1_shifted = input1_shifted - 1;\n    }\n    input1 = input1 | result;\n    is_zero = input4 == 0;\n    result = input2 & 0x80000000;\n    while( true ) {\n      if (is_zero) {\n        input2 = input2 << 1;\n        is_zero = (input2 & 0x800000) == 0;\n      }\n      if (!is_zero) break;\n      input4 = input4 - 1;\n    }\n    input2 = input2 | result;\n  }\n  sum = input1_shifted + input4;\n  temp_result = input1 ^ input2;\n  input1_shifted = input1 << 9;\n  is_zero = input1_shifted == 0;\n  if (!is_zero) {\n    input2 = input2 << 9;\n    is_zero = input2 == 0;\n  }\n  if (is_zero) {\n    if (input1_shifted == 0) {\n      input2 = input2 << 9;\n    }\n    result = temp_result & 0x80000000 | input1 & 0x7fffff | input2 >> 9;\n    is_negative = SBORROW4(sum,0x7f);\n    diff = sum + -0x7f;\n    is_zero = diff == 0;\n    sum_diff2 = diff;\n    if (!is_zero && 0x7e < sum) {\n      is_negative = SBORROW4(0xff,diff);\n      sum_diff2 = 0xff - diff;\n      is_zero = diff == 0xff;\n    }\n    if (!is_zero && sum_diff2 < 0 == is_negative) {\n      result = result | diff * 0x800000;\n    }\n    if (!is_zero && sum_diff2 < 0 == is_negative) {\n      return result;\n    }\n    result = result | 0x800000;\n    product = 0;\n    is_negative = SBORROW4(diff,1);\n    temp_result = sum - 0x80;\n    is_zero = temp_result == 0;\n    input1_shifted = temp_result;\n  }\n  else {\n    product = (ulonglong)(input1_shifted >> 5 | 0x8000000) * (ulonglong)(input2 >> 5 | 0x8000000);\n    product = (uint)product;\n    result = (uint)((ulonglong)product >> 0x20);\n    is_zero = result < 0x800000;\n    if (is_zero) {\n      result = result << 1;\n    }\n    if (is_zero) {\n      result = result | product >> 0x1f;\n      product = product << 1;\n    }\n    result = temp_result & 0x80000000 | result;\n    temp_result = (sum + -0x7f) - (uint)is_zero;\n    is_negative = SBORROW4(temp_result,0xfd);\n    is_zero = temp_result == 0xfd;\n    input1_shifted = temp_result - 0xfd;\n    if (temp_result < 0xfe) {\n      result = result + temp_result * 0x800000 + (uint)(0x7fffffff < product);\n      if (product == 0x80000000) {\n        result = result & 0xfffffffe;\n      }\n      return result;\n    }\n  }\n  if (is_zero || (int)input1_shifted < 0 != is_negative) {\n    is_zero = (int)(temp_result + 0x19) < 0;\n    if (temp_result == 0xffffffe7 || is_zero != SCARRY4(temp_result,0x19)) {\n      result = result & 0x80000000;\n    }\n    if (temp_result != 0xffffffe7 && is_zero == SCARRY4(temp_result,0x19)) {\n      input1_shifted = (result << 1) >> (-temp_result & 0xff);\n      temp_result = result << (temp_result + 0x20 & 0xff);\n      input1_shifted = ((uint)((result & 0x80000000) != 0) << 0x1f | input1_shifted >> 1) + (uint)((byte)input1_shifted & 1);\n      if ((product | temp_result << 1) == 0) {\n        input1_shifted = input1_shifted & ~(temp_result >> 0x1f);\n      }\n      return input1_shifted;\n    }\n    return result;\n  }\nLAB_08000e3c:\n  return result & 0x80000000 | 0x7f800000;\n}\n\n",
            "current_name": "calculate_float_value_08000cec",
            "entrypoint": "0x08000cec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000cec": "calculate_float_value_08000cec",
                "bVar10": "is_negative",
                "bVar9": "is_zero",
                "iVar4": "sum",
                "iVar5": "diff",
                "iVar7": "sum_diff2",
                "lVar1": "product",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar2": "result",
                "uVar3": "input1_shifted",
                "uVar6": "product",
                "uVar8": "temp_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000e54": {
            "additional_data": {
                "FUN_08000e54": {
                    "binary_to_float": 1,
                    "calculate_float": 11,
                    "calculate_float_value": 1,
                    "calculate_floating_point": 2,
                    "convert_float_to_unsigned_int": 1,
                    "convert_floating_point": 1,
                    "convert_to_float": 2,
                    "float_calculation": 1,
                    "float_to_ieee754": 1,
                    "floating_point_conversion": 2,
                    "improve_code": 1,
                    "perform_float_conversion": 1,
                    "reverse_float": 1,
                    "reverse_float_bits": 2,
                    "reverse_float_encryption": 1
                },
                "bVar7": {
                    "check_condition": 1,
                    "condition": 1,
                    "condition1": 7,
                    "condition_1": 1,
                    "condition_flag1": 1,
                    "flag1": 4,
                    "flag_variable1": 1,
                    "has_zero": 1,
                    "is_zero": 9,
                    "is_zero1": 3,
                    "is_zero_fraction1": 1,
                    "temp_bool_1": 1
                },
                "bVar8": {
                    "carry": 1,
                    "carry1": 1,
                    "check_condition2": 1,
                    "condition2": 7,
                    "condition_2": 1,
                    "condition_flag2": 1,
                    "flag2": 4,
                    "flag_variable2": 1,
                    "is_carry": 1,
                    "is_equal": 1,
                    "is_ff": 1,
                    "is_greater_than": 1,
                    "is_negative": 5,
                    "is_zero2": 2,
                    "is_zero_fraction2": 1,
                    "temp_bool1": 1,
                    "temp_bool_2": 1
                },
                "bVar9": {
                    "add_overflow": 1,
                    "carry": 2,
                    "carry2": 1,
                    "carry_flag": 3,
                    "condition3": 6,
                    "condition_3": 1,
                    "flag3": 4,
                    "flag_variable3": 1,
                    "is_borrow": 1,
                    "is_carried": 1,
                    "is_carry": 2,
                    "is_overflow": 2,
                    "is_smaller_than": 1,
                    "overflow": 1,
                    "signed_carry": 1,
                    "step_flag": 1,
                    "temp_bool2": 1,
                    "temp_bool_3": 1
                },
                "iVar3": {
                    "bit_difference": 2,
                    "byte_difference": 1,
                    "diff": 8,
                    "diff_temp": 1,
                    "difference": 7,
                    "exponent_diff": 1,
                    "exponent_difference": 2,
                    "operand_diff": 1,
                    "shift_difference": 1,
                    "temp1": 1,
                    "temp3": 2,
                    "temp_val_3": 1,
                    "temp_var3": 1,
                    "temp_variable3": 1,
                    "var3": 1
                },
                "iVar5": {
                    "adjusted_difference": 1,
                    "calc_temp2": 1,
                    "comparison_value": 1,
                    "expanded_exponent_difference": 1,
                    "new_exponent": 1,
                    "shift_result": 1,
                    "shifted_amount": 1,
                    "sum": 6,
                    "sum2": 1,
                    "sum_diff": 1,
                    "sum_exp_diff": 1,
                    "sum_plus127": 1,
                    "temp": 1,
                    "temp2": 2,
                    "temp3": 2,
                    "temp5": 2,
                    "temp_2": 1,
                    "temp_diff": 1,
                    "temp_val_5": 1,
                    "temp_var5": 1,
                    "temp_variable5": 1,
                    "tmp_var2": 1,
                    "var5": 1
                },
                "iVar6": {
                    "temp_var6": 1
                },
                "param_1": {
                    "binary1": 1,
                    "first_value": 1,
                    "float1": 5,
                    "float_value1": 2,
                    "input1": 8,
                    "input_1": 1,
                    "input_bit_pattern1": 1,
                    "input_float": 1,
                    "input_float1": 2,
                    "input_num_1": 1,
                    "input_value1": 3,
                    "num1": 2,
                    "operand1": 2,
                    "raw_float1": 1
                },
                "param_2": {
                    "binary2": 1,
                    "encryption_key": 1,
                    "float2": 5,
                    "float_value2": 2,
                    "input2": 8,
                    "input_2": 1,
                    "input_bit_pattern2": 1,
                    "input_float2": 2,
                    "input_num_2": 1,
                    "input_value2": 3,
                    "num2": 2,
                    "operand2": 2,
                    "raw_float2": 1,
                    "second_value": 1
                },
                "param_3": {
                    "flag": 3,
                    "ignored": 1,
                    "input3": 5,
                    "input_flag": 1,
                    "input_val": 1,
                    "input_value3": 1,
                    "param3": 9,
                    "param_3": 1,
                    "parameter3": 1,
                    "rounding_mode": 1,
                    "scale": 1,
                    "third_value": 1,
                    "undefined4_value": 1,
                    "unused_param": 1,
                    "val1": 1,
                    "var3": 1
                },
                "param_4": {
                    "auxiliary": 1,
                    "bits": 1,
                    "encryption_key_byte": 1,
                    "exponent": 1,
                    "exponent_bias": 1,
                    "flag2": 1,
                    "fourth_value": 1,
                    "input4": 5,
                    "input_bit_pattern3": 1,
                    "input_value3": 1,
                    "input_value4": 1,
                    "param4": 8,
                    "param_4": 1,
                    "parameter4": 1,
                    "shift_amount": 1,
                    "shift_val": 1,
                    "unused_param2": 1,
                    "val2": 1,
                    "var4": 1
                },
                "uVar1": {
                    "bit_mask1": 1,
                    "bitwise_shifted_input2": 1,
                    "dividend": 1,
                    "encrypted_float_byte": 1,
                    "extracted_bits_1": 1,
                    "first_bit2": 1,
                    "float_bits1": 2,
                    "input2_temp": 1,
                    "mult1": 1,
                    "normalized_input1": 1,
                    "output1": 1,
                    "quotient": 2,
                    "result": 1,
                    "result1": 1,
                    "rounded_fraction1": 1,
                    "shifted_operand2": 1,
                    "shifted_param2": 1,
                    "shifted_raw_float2": 1,
                    "sign_extended_input1": 1,
                    "significand1": 1,
                    "temp": 1,
                    "temp1": 3,
                    "temp_val_1": 1,
                    "temp_var1": 1,
                    "temp_variable1": 1,
                    "to_float1": 1,
                    "var1": 1
                },
                "uVar11": {
                    "const1": 1
                },
                "uVar12": {
                    "const2": 1
                },
                "uVar13": {
                    "const3": 1
                },
                "uVar2": {
                    "bit_mask2": 1,
                    "bit_shift_amount": 1,
                    "bitwise_shifted_input1": 1,
                    "divisor": 1,
                    "exponent1": 2,
                    "extracted_bits_2": 1,
                    "first_bit1": 1,
                    "float_bits2": 2,
                    "input1_temp": 1,
                    "input_float_byte": 1,
                    "mult2": 1,
                    "output2": 1,
                    "result2": 1,
                    "rounded_fraction2": 1,
                    "shifted_bits1": 1,
                    "shifted_input1": 1,
                    "shifted_operand1": 1,
                    "shifted_param1": 1,
                    "shifted_raw_float1": 1,
                    "sign_extended_input2": 1,
                    "significand2": 1,
                    "temp2": 3,
                    "temp_val_2": 1,
                    "temp_var2": 1,
                    "temp_variable2": 1,
                    "to_float2": 1,
                    "var2": 1
                },
                "uVar3": {
                    "shifted_fraction1": 1
                },
                "uVar4": {
                    "calc_temp": 1,
                    "exponent1_increment": 1,
                    "exponent2": 1,
                    "fraction_difference": 1,
                    "i_var_sum": 1,
                    "limit": 1,
                    "loop_counter": 1,
                    "remainder": 1,
                    "result": 1,
                    "shifted_difference": 1,
                    "shifted_input2": 1,
                    "shifted_num": 1,
                    "sum": 3,
                    "temp1": 2,
                    "temp2": 2,
                    "temp3": 1,
                    "temp4": 2,
                    "temp_1": 1,
                    "temp_shift_amount": 1,
                    "temp_val_4": 1,
                    "temp_var4": 1,
                    "temp_variable4": 1,
                    "tmp_var1": 1,
                    "upper_bits": 1,
                    "var4": 2
                },
                "uVar5": {
                    "shifted_fraction2": 1
                },
                "uVar6": {
                    "output": 1,
                    "result": 19,
                    "result_bit_pattern": 1,
                    "result_float": 1,
                    "result_fraction": 1,
                    "result_val": 1,
                    "temp": 1,
                    "temp4": 2,
                    "temp6": 1,
                    "temp_var6": 1,
                    "temp_variable6": 1,
                    "var6": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800483c",
                "FUN_08003330",
                "FUN_0800411c",
                "FUN_08002f28"
            ],
            "code": "\nuint calculate_float_value_08000e54(uint input1,uint input2,undefined4 param3,uint param4)\n\n{\n  uint temp1;\n  uint temp2;\n  int diff;\n  uint sum;\n  int sum;\n  uint result;\n  bool is_zero;\n  bool condition2;\n  bool condition3;\n  \n  temp2 = input1 >> 0x17 & 0xff;\n  is_zero = temp2 == 0;\n  if (!is_zero) {\n    param4 = input2 >> 0x17 & 0xff;\n    is_zero = param4 == 0;\n  }\n  if (!is_zero) {\n    is_zero = temp2 == 0xff;\n  }\n  if (!is_zero) {\n    is_zero = param4 == 0xff;\n  }\n  if (is_zero) {\n    param4 = input2 >> 0x17 & 0xff;\n    result = input1;\n    if (temp2 == 0xff) {\n      if (((input1 & 0x7fffff) != 0) || (result = input2, param4 == 0xff)) {\nLAB_08000e4a:\n        return result | 0x7fc00000;\n      }\n    }\n    else {\n      if (param4 == 0xff) {\n        result = input2;\n        if ((input2 & 0x7fffff) == 0) {\nLAB_08000e00:\n          return (input1 ^ input2) & 0x80000000;\n        }\n        goto LAB_08000e4a;\n      }\n      is_zero = (input1 & 0x7fffffff) == 0;\n      if (!is_zero) {\n        is_zero = (input2 & 0x7fffffff) == 0;\n      }\n      if (!is_zero) {\n        is_zero = temp2 == 0;\n        result = input1 & 0x80000000;\n        while( true ) {\n          if (is_zero) {\n            input1 = input1 << 1;\n            is_zero = (input1 & 0x800000) == 0;\n          }\n          if (!is_zero) break;\n          temp2 = temp2 - 1;\n        }\n        input1 = input1 | result;\n        is_zero = param4 == 0;\n        result = input2 & 0x80000000;\n        while( true ) {\n          if (is_zero) {\n            input2 = input2 << 1;\n            is_zero = (input2 & 0x800000) == 0;\n          }\n          if (!is_zero) break;\n          param4 = param4 - 1;\n        }\n        input2 = input2 | result;\n        goto LAB_08000e6c;\n      }\n      if ((input1 & 0x7fffffff) == 0) {\n        if ((input2 & 0x7fffffff) != 0) goto LAB_08000e00;\n        goto LAB_08000e4a;\n      }\n    }\n    input1 = input1 ^ input2;\n  }\n  else {\nLAB_08000e6c:\n    diff = temp2 - param4;\n    if (input2 << 9 == 0) {\n      input1 = (input1 ^ input2) & 0x80000000 | input1 & 0x7fffff;\n      condition3 = SCARRY4(diff,0x7f);\n      sum = diff + 0x7f;\n      is_zero = sum < 0;\n      condition2 = sum == 0;\n      if (!condition2 && is_zero == condition3) {\n        condition3 = SBORROW4(0xff,sum);\n        is_zero = 0xff - sum < 0;\n        condition2 = sum == 0xff;\n      }\n      if (!condition2 && is_zero == condition3) {\n        input1 = input1 | sum * 0x800000;\n      }\n      if (!condition2 && is_zero == condition3) {\n        return input1;\n      }\n      input1 = input1 | 0x800000;\n      temp2 = 0;\n      condition2 = SBORROW4(sum,1);\n      sum = diff + 0x7e;\n      is_zero = sum == 0;\n      result = sum;\n    }\n    else {\n      temp1 = (input2 << 9) >> 4 | 0x10000000;\n      temp2 = (input1 << 9) >> 4 | 0x10000000;\n      input1 = (input1 ^ input2) & 0x80000000;\n      is_zero = temp1 <= temp2;\n      if (!is_zero) {\n        temp2 = temp2 << 1;\n      }\n      sum = diff + 0x7d + (uint)is_zero;\n      result = 0x800000;\n      do {\n        if (temp1 <= temp2) {\n          temp2 = temp2 - temp1;\n          input1 = input1 | result;\n        }\n        is_zero = temp1 >> 1 <= temp2;\n        if (is_zero) {\n          temp2 = temp2 - (temp1 >> 1);\n        }\n        if (is_zero) {\n          input1 = input1 | result >> 1;\n        }\n        is_zero = temp1 >> 2 <= temp2;\n        if (is_zero) {\n          temp2 = temp2 - (temp1 >> 2);\n        }\n        if (is_zero) {\n          input1 = input1 | result >> 2;\n        }\n        is_zero = temp1 >> 3 <= temp2;\n        if (is_zero) {\n          temp2 = temp2 - (temp1 >> 3);\n        }\n        if (is_zero) {\n          input1 = input1 | result >> 3;\n        }\n        temp2 = temp2 * 0x10;\n        is_zero = temp2 == 0;\n        if (!is_zero) {\n          result = result >> 4;\n          is_zero = result == 0;\n        }\n      } while (!is_zero);\n      condition2 = SBORROW4(sum,0xfd);\n      is_zero = sum == 0xfd;\n      result = sum - 0xfd;\n      if (sum < 0xfe) {\n        input1 = input1 + sum * 0x800000 + (uint)(temp1 <= temp2);\n        if (temp2 - temp1 == 0) {\n          input1 = input1 & 0xfffffffe;\n        }\n        return input1;\n      }\n    }\n    if (is_zero || (int)result < 0 != condition2) {\n      is_zero = (int)(sum + 0x19) < 0;\n      if (sum == 0xffffffe7 || is_zero != SCARRY4(sum,0x19)) {\n        input1 = input1 & 0x80000000;\n      }\n      if (sum == 0xffffffe7 || is_zero != SCARRY4(sum,0x19)) {\n        return input1;\n      }\n      result = (input1 << 1) >> (-sum & 0xff);\n      sum = input1 << (sum + 0x20 & 0xff);\n      result = ((uint)((input1 & 0x80000000) != 0) << 0x1f | result >> 1) + (uint)((byte)result & 1);\n      if ((temp2 | sum << 1) == 0) {\n        result = result & ~(sum >> 0x1f);\n      }\n      return result;\n    }\n  }\n  return input1 & 0x80000000 | 0x7f800000;\n}\n\n",
            "current_name": "calculate_float_value_08000e54",
            "entrypoint": "0x08000e54",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000e54": "calculate_float_value_08000e54",
                "bVar7": "is_zero",
                "bVar8": "condition2",
                "bVar9": "condition3",
                "iVar3": "diff",
                "iVar5": "sum",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "uVar4": "sum",
                "uVar6": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000f9c": {
            "additional_data": {
                "FUN_08000f9c": {
                    "calculate_param": 1,
                    "calculate_param_result": 1,
                    "calculate_parameters": 1,
                    "calculate_parity_and_overflow": 1,
                    "calculate_result": 7,
                    "calculate_sign": 1,
                    "calculate_sum": 1,
                    "calculate_unsigned_integer": 2,
                    "check_input": 1,
                    "check_integer_overflow": 1,
                    "check_overflow": 6,
                    "check_overflow_and_boundary": 1,
                    "check_overflow_and_sign_change": 1,
                    "determine_sign_and_overflow": 1,
                    "multiplication_with_conditions": 1,
                    "multiplies_and_compares": 1,
                    "multiply_and_compare": 1,
                    "perform_arithmetic_operation": 1,
                    "perform_computation": 1
                },
                "bVar1": {
                    "is_combined_negative": 2,
                    "is_combined_values_negative": 1,
                    "is_combined_vars_negative": 1,
                    "is_negative": 22,
                    "is_negative_sum": 1,
                    "is_overflow": 2,
                    "is_positive": 1,
                    "is_xor_negative": 1
                },
                "bVar5": {
                    "is_combined_values_zero": 1,
                    "is_combined_vars_zero": 1,
                    "is_combined_zero": 3,
                    "is_zero": 24,
                    "is_zero_combination": 1,
                    "is_zero_result": 1
                },
                "combined_input_and_mask": {
                    "combined_input_and_mask": 1
                },
                "param_1": {
                    "first_integer": 1,
                    "input1": 5,
                    "input_1": 16,
                    "input_a": 1,
                    "input_param_1": 1,
                    "input_value_1": 2,
                    "num1": 1,
                    "number1": 3,
                    "value_1": 1
                },
                "param_1_bitwise_or_param_2": {
                    "combined_inputs_without_sign_bit": 1
                },
                "param_1_flipped_bit": {
                    "input_1_flipped_bit": 1
                },
                "param_1_minus_value_2_multiplied_by_negative_2": {
                    "value_1_minus_2_times_value_2": 1
                },
                "param_1_plus_param_2_times_minus_2": {
                    "input_1_plus_input_2_times_minus_2": 1
                },
                "param_1_right_shifted": {
                    "input_1_right_shifted": 1
                },
                "param_1_shifted": {
                    "shifted_value_1": 1
                },
                "param_1_times_2": {
                    "input_1_times_2": 1,
                    "input_1_times_negative_2": 1
                },
                "param_1_xor_param_2": {
                    "input_1_xor_input_2": 1,
                    "inputs_xor_result": 1,
                    "xor_values": 1
                },
                "param_2": {
                    "input2": 5,
                    "input_2": 16,
                    "input_b": 1,
                    "input_param_2": 1,
                    "input_value_2": 2,
                    "num2": 1,
                    "number2": 3,
                    "second_integer": 1,
                    "value_2": 1
                },
                "param_2_shifted": {
                    "shifted_value_2": 1
                },
                "return": {
                    "output": 1
                },
                "uVar2": {
                    "double_first_integer": 1,
                    "double_input1": 2,
                    "double_input_1": 3,
                    "double_input_a": 1,
                    "double_number1": 1,
                    "doubled_input_1": 4,
                    "doubled_input_value_1": 1,
                    "doubled_num1": 1,
                    "input1_times2": 1,
                    "input1_times_two": 1,
                    "input_1_doubled": 1,
                    "input_1_multiplied": 1,
                    "input_1_times_2": 2,
                    "input_1_x2": 1,
                    "number1_doubled": 1,
                    "number1_times_two": 1,
                    "param_1_double": 1,
                    "result_1": 1,
                    "shifted_input_1": 1,
                    "times_2_input_1": 1,
                    "twice_input1": 1,
                    "twice_input_1": 2,
                    "value_1_shifted": 1
                },
                "uVar3": {
                    "double_input2": 2,
                    "double_input_2": 3,
                    "double_input_b": 1,
                    "double_number2": 1,
                    "double_second_integer": 1,
                    "doubled_input_2": 4,
                    "doubled_input_value_2": 1,
                    "doubled_num2": 1,
                    "input2_times2": 1,
                    "input2_times_two": 1,
                    "input_2_doubled": 1,
                    "input_2_multiplied": 1,
                    "input_2_times_2": 2,
                    "input_2_x2": 1,
                    "number2_doubled": 1,
                    "number2_times_two": 1,
                    "param_2_double": 1,
                    "result_2": 1,
                    "shifted_input_2": 1,
                    "times_2_input_2": 1,
                    "twice_input2": 1,
                    "twice_input_2": 2,
                    "value_2_shifted": 1
                },
                "uVar4": {
                    "combination_result": 1,
                    "combined": 3,
                    "combined_input": 6,
                    "combined_input_and_mask": 1,
                    "combined_inputs": 6,
                    "combined_inputs_with_mask": 1,
                    "combined_integers": 1,
                    "combined_numbers": 2,
                    "combined_nums": 1,
                    "combined_param": 1,
                    "combined_result": 1,
                    "combined_values": 3,
                    "combined_variables": 1,
                    "combined_vars": 1,
                    "modified_input": 1,
                    "result_or": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001004"
            ],
            "code": "\nuint calculate_param_result_08000f9c(uint input_1,uint input_2)\n\n{\n  bool is_negative;\n  uint doubled_input_1;\n  uint doubled_input_2;\n  uint combined_input;\n  bool is_zero;\n  \n  doubled_input_1 = input_1 * 2;\n  doubled_input_2 = input_2 * 2;\n  if (((int)doubled_input_1 >> 0x18 == -1 || (int)doubled_input_2 >> 0x18 == -1) &&\n     ((((int)doubled_input_1 >> 0x18 == -1 && ((input_1 & 0x7fffff) != 0)) ||\n      (((int)doubled_input_2 >> 0x18 == -1 && ((input_2 & 0x7fffff) != 0)))))) {\n    output 1;\n  }\n  combined_input = doubled_input_1 | input_2 & 0x7fffffff;\n  is_zero = combined_input == 0;\n  if (!is_zero) {\n    combined_input = input_1 ^ input_2;\n    is_zero = combined_input == 0;\n  }\n  is_negative = -1 < (int)combined_input;\n  if (is_negative) {\n    input_1 = doubled_input_1 + input_2 * -2;\n    is_zero = input_1 == 0;\n  }\n  if ((is_negative && doubled_input_2 <= doubled_input_1) && !is_zero) {\n    input_1 = (int)input_2 >> 0x1f;\n  }\n  if (!is_negative || doubled_input_2 > doubled_input_1) {\n    input_1 = ~((int)input_2 >> 0x1f);\n  }\n  if (!is_zero) {\n    input_1 = input_1 | 1;\n  }\n  output input_1;\n}\n\n",
            "current_name": "calculate_param_result_08000f9c",
            "entrypoint": "0x08000f9c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000f9c": "calculate_param_result_08000f9c",
                "bVar1": "is_negative",
                "bVar5": "is_zero",
                "param_1": "input_1",
                "param_2": "input_2",
                "return": "output",
                "uVar2": "doubled_input_1",
                "uVar3": "doubled_input_2",
                "uVar4": "combined_input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000ffc": {
            "additional_data": {
                "FUN_08000ffc": {
                    "call_sub_functions": 1,
                    "convert_parameters": 1,
                    "copy_param_to_function": 1,
                    "copy_parameters": 3,
                    "execute_function": 14,
                    "initialize": 1,
                    "initialize_data": 1,
                    "initialize_function": 2,
                    "process_data": 1,
                    "reordered_parameters": 1
                },
                "FUN_08001004": {
                    "call_reordered_params": 1,
                    "call_sub_function": 2,
                    "copy_data": 4,
                    "copy_params_function": 1,
                    "execute_sub_function": 2,
                    "execute_subfunction": 1,
                    "perform_action": 1,
                    "perform_initialization": 1,
                    "perform_operation": 1,
                    "reverse_data": 1
                },
                "param_1": {
                    "arg1": 3,
                    "arg_1": 1,
                    "argument1": 1,
                    "data_pointer": 1,
                    "destination": 1,
                    "dst": 1,
                    "input1": 6,
                    "input_param": 7,
                    "input_param1": 2,
                    "input_param_1": 1,
                    "input_parameter": 1,
                    "input_parameter1": 1,
                    "param1": 1,
                    "parameter1": 1,
                    "reordered_param1": 1,
                    "source": 1,
                    "source_param": 1
                },
                "param_2": {
                    "arg2": 3,
                    "arg_2": 1,
                    "argument2": 1,
                    "destination": 1,
                    "destination_param": 1,
                    "initialization_value": 1,
                    "input2": 6,
                    "input_param2": 2,
                    "input_param_2": 1,
                    "input_parameter2": 1,
                    "output_param": 7,
                    "output_parameter": 1,
                    "param2": 1,
                    "parameter2": 1,
                    "reordered_param2": 1,
                    "source": 1,
                    "src": 1
                }
            },
            "called": [
                "FUN_08001004"
            ],
            "calling": [
                "FUN_08001050",
                "FUN_08001064"
            ],
            "code": "\nvoid execute_function_08000ffc(undefined4 input_param,undefined4 output_param)\n\n{\n  FUN_08001004(output_param,input_param);\n  return;\n}\n\n",
            "current_name": "execute_function_08000ffc",
            "entrypoint": "0x08000ffc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000ffc": "execute_function_08000ffc",
                "param_1": "input_param",
                "param_2": "output_param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001004": {
            "additional_data": {
                "CONCAT44": {
                    "concatenate_uint64": 1
                },
                "FUN_08000f9c": {
                    "combine_integers": 1,
                    "combine_numbers": 1,
                    "combine_params": 3,
                    "combine_values": 4,
                    "compute_result": 1,
                    "concatenate": 2,
                    "concatenate_params_helper": 1,
                    "concatenate_values": 3,
                    "join_parameters": 1,
                    "perform_additional_operation": 1,
                    "perform_concatenation": 4,
                    "perform_operation": 4,
                    "process_params": 1
                },
                "FUN_08000f9c_param_1": {
                    "concatenate_first_param": 1
                },
                "FUN_08000f9c_param_2": {
                    "concatenate_second_param": 1
                },
                "FUN_08001004": {
                    "combine_params": 2,
                    "concatenate_and_return": 2,
                    "concatenate_and_return_params": 1,
                    "concatenate_integers": 1,
                    "concatenate_param_values": 1,
                    "concatenate_parameters": 4,
                    "concatenate_params": 17,
                    "concatenate_values": 3
                },
                "param_1": {
                    "first_param": 6,
                    "first_parameter": 3,
                    "input1": 5,
                    "input_1": 1,
                    "input_param1": 3,
                    "integer1": 1,
                    "new_param1": 1,
                    "param1": 2,
                    "param_a": 2,
                    "parameter1": 1,
                    "val1": 1,
                    "value1": 3,
                    "value_1": 2
                },
                "param_2": {
                    "input2": 5,
                    "input_2": 1,
                    "input_param2": 3,
                    "integer2": 1,
                    "new_param2": 1,
                    "param2": 2,
                    "param_b": 2,
                    "parameter2": 1,
                    "second_param": 6,
                    "second_parameter": 3,
                    "val2": 1,
                    "value2": 3,
                    "value_2": 2
                },
                "param_3": {
                    "param1": 1
                },
                "param_4": {
                    "param2": 1
                },
                "uint": {
                    "unsigned_int": 1
                },
                "undefined4": {
                    "uint32": 1
                },
                "undefined8": {
                    "uint64": 1
                }
            },
            "called": [
                "FUN_08000f9c"
            ],
            "calling": [
                "FUN_08000ffc",
                "FUN_08001028",
                "FUN_08001014"
            ],
            "code": "\nuint64 concatenate_and_return_params_08001004(uint32 first_param,uint32 second_param)\n\n{\n  FUN_08000f9c();\n  return concatenate_uint64(second_param,first_param);\n}\n\n",
            "current_name": "concatenate_and_return_params_08001004",
            "entrypoint": "0x08001004",
            "imported": false,
            "improved": true,
            "renaming": {
                "CONCAT44": "concatenate_uint64",
                "FUN_08001004": "concatenate_and_return_params_08001004",
                "param_1": "first_param",
                "param_2": "second_param",
                "undefined4": "uint32",
                "undefined8": "uint64"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001014": {
            "additional_data": {
                "FUN_08001004": {
                    "initialize": 1,
                    "initialize_check": 1
                },
                "FUN_08001014": {
                    "check_if_char_not_null": 1,
                    "check_if_character_exists": 1,
                    "check_if_data_exists": 1,
                    "check_if_execution_success": 1,
                    "check_if_fun_called": 1,
                    "check_if_function_executed_successful": 1,
                    "check_if_function_executed_successfully": 1,
                    "check_if_function_succeeded": 1,
                    "check_if_function_successful": 1,
                    "check_if_in_zr_is_not_null": 1,
                    "check_if_initialized": 2,
                    "check_if_non_zero": 1,
                    "check_if_nonzero": 1,
                    "check_if_not_null": 1,
                    "check_if_zero": 1,
                    "check_in_zr": 1,
                    "check_input": 2,
                    "check_non_zero": 1,
                    "check_non_zero_char": 2,
                    "check_non_zero_value": 1,
                    "check_nonzero_return": 1,
                    "check_null_character": 1,
                    "check_return_value": 1,
                    "is_function_returning_nonzero": 1,
                    "is_input_not_null": 1,
                    "is_input_valid": 1,
                    "is_not_zero": 1,
                    "is_null_character": 1
                },
                "in_ZR": {
                    "char_value": 1,
                    "character": 1,
                    "data_exists": 1,
                    "execution_result": 1,
                    "input_char": 6,
                    "input_character": 3,
                    "is_in_zr_not_null": 1,
                    "is_initialized": 2,
                    "is_non_null": 1,
                    "is_success": 2,
                    "is_valid": 1,
                    "result": 9,
                    "return_value": 1,
                    "user_input": 1
                }
            },
            "called": [
                "FUN_08001004"
            ],
            "calling": [
                "FUN_08003330"
            ],
            "code": "\nbool check_non_zero_value_08001014(void)\n\n{\n  char result;\n  \n  FUN_08001004();\n  return result != '\\0';\n}\n\n",
            "current_name": "check_non_zero_value_08001014",
            "entrypoint": "0x08001014",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001014": "check_non_zero_value_08001014",
                "in_ZR": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001028": {
            "additional_data": {
                "FUN_08001004": {
                    "call_fun_08001004": 1,
                    "initialize_cy": 1,
                    "initialize_variables": 2
                },
                "FUN_08001028": {
                    "check_end_of_input": 1,
                    "check_if_in_cy_null": 1,
                    "check_if_in_cy_zero": 1,
                    "check_if_input_empty": 1,
                    "check_if_input_is_empty": 1,
                    "check_if_null_terminated": 7,
                    "check_if_string_empty": 2,
                    "check_null_termination": 7,
                    "is_cy_null": 5,
                    "is_cy_zero": 1,
                    "is_input_empty": 1,
                    "is_null_terminated": 1,
                    "is_string_empty": 2
                },
                "in_CY": {
                    "char_input": 1,
                    "character": 2,
                    "cy": 2,
                    "cy_char": 1,
                    "input_char": 12,
                    "input_character": 12,
                    "termination_flag": 1
                }
            },
            "called": [
                "FUN_08001004"
            ],
            "calling": [
                "FUN_08004a84",
                "FUN_08002ee8",
                "FUN_0800483c"
            ],
            "code": "\nbool check_if_in_cy_zero_08001028(void)\n\n{\n  char input_character;\n  \n  FUN_08001004();\n  return input_character == '\\0';\n}\n\n",
            "current_name": "check_if_in_cy_zero_08001028",
            "entrypoint": "0x08001028",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001028": "check_if_in_cy_zero_08001028",
                "in_CY": "input_character"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001050": {
            "additional_data": {
                "FUN_08000ffc": {
                    "call_function_with_params": 1,
                    "call_subfunction": 3,
                    "execute_func": 1,
                    "initialize_flags": 1,
                    "perform_some_operation": 1
                },
                "FUN_08001050": {
                    "check_and_return_result": 1,
                    "check_carry_and_zero": 4,
                    "check_conditions": 2,
                    "check_cy_and_zr": 8,
                    "check_cy_zr": 5,
                    "check_cy_zr_condition": 1,
                    "check_cy_zr_flags": 1,
                    "check_flags": 1,
                    "check_flags_and_return": 1,
                    "check_for_zero_result": 1,
                    "check_zero_flag": 1,
                    "check_zero_or_carry_flag": 1,
                    "check_zero_or_carry_flags": 1,
                    "is_cy_or_zr_set": 1,
                    "is_zero_flag_set_or_carry_flag_set": 1,
                    "is_zero_or_carry_flag_set": 1
                },
                "in_CY": {
                    "carry_flag": 17,
                    "carry_result": 1,
                    "carry_set": 1,
                    "has_carry": 1,
                    "is_carry": 1,
                    "is_carry_flag_set": 2,
                    "is_cy_set": 1
                },
                "in_ZR": {
                    "is_zero": 2,
                    "is_zero_flag_set": 2,
                    "is_zr_set": 1,
                    "zero_flag": 17,
                    "zero_result": 2
                },
                "param_1": {
                    "arg1": 2,
                    "first_param": 1,
                    "input_param1": 1,
                    "param_1": 1,
                    "undefined_param_1": 1,
                    "x": 1
                },
                "param_2": {
                    "arg2": 2,
                    "input_param2": 1,
                    "param_2": 1,
                    "second_param": 1,
                    "undefined_param_2": 1,
                    "y": 1
                }
            },
            "called": [
                "FUN_08000ffc"
            ],
            "calling": [
                "FUN_08002ee8"
            ],
            "code": "\nbool check_cy_and_zr_08001050(void)\n\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  \n  FUN_08000ffc();\n  return !(bool)carry_flag || (bool)zero_flag;\n}\n\n",
            "current_name": "check_cy_and_zr_08001050",
            "entrypoint": "0x08001050",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001050": "check_cy_and_zr_08001050",
                "in_CY": "carry_flag",
                "in_ZR": "zero_flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001064": {
            "additional_data": {
                "FUN_08000ffc": {
                    "do_something": 1,
                    "initialize_cy": 2,
                    "initialize_variables": 1,
                    "perform_initialization": 2
                },
                "FUN_08001064": {
                    "check_cy_is_null": 1,
                    "check_cy_null_08001064": 1,
                    "check_if_cy_equals_null": 1,
                    "check_if_cy_is_empty": 1,
                    "check_if_cy_is_null": 3,
                    "check_if_empty_string": 1,
                    "check_if_incy_null": 1,
                    "check_if_input_empty": 1,
                    "check_if_input_is_empty": 3,
                    "check_if_null_terminated": 3,
                    "check_if_null_terminator": 1,
                    "check_if_string_empty": 3,
                    "check_null_termination": 4,
                    "check_null_terminator": 1,
                    "is_cy_null": 4,
                    "is_in_cy_null": 1,
                    "is_null_terminated": 1
                },
                "in_CY": {
                    "c": 1,
                    "cy": 4,
                    "cy_character": 1,
                    "cy_input": 1,
                    "input_char": 12,
                    "input_char_cy": 1,
                    "input_character": 8,
                    "input_string": 1,
                    "status_indicator": 1,
                    "termination_character": 1
                }
            },
            "called": [
                "FUN_08000ffc"
            ],
            "calling": [
                "FUN_08004a84",
                "FUN_0800483c"
            ],
            "code": "\nbool check_if_cy_is_null_08001064(void)\n\n{\n  char input_char;\n  \n  FUN_08000ffc();\n  return input_char == '\\0';\n}\n\n",
            "current_name": "check_if_cy_is_null_08001064",
            "entrypoint": "0x08001064",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001064": "check_if_cy_is_null_08001064",
                "in_CY": "input_char"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001078": {
            "additional_data": {
                "DAT_C": {
                    "constant_data": 1
                },
                "FUN_08001078": {
                    "compute_value": 1,
                    "convert_param_to_signed_integer": 1,
                    "convert_to_fixed_point": 1,
                    "convert_to_int": 1,
                    "convert_to_signed": 1,
                    "convert_to_signed_integer": 3,
                    "convert_unsigned_to_signed": 1,
                    "decode_integer": 1,
                    "decode_number": 1,
                    "decode_uint": 1,
                    "decode_value": 1,
                    "extract_bit_value": 1,
                    "extract_bitfield": 1,
                    "extract_integer": 2,
                    "extract_integer_from_param": 1,
                    "extract_signed_integer": 1,
                    "extract_value": 1,
                    "extracted_value": 1,
                    "reverse_and_convert": 1,
                    "reverse_and_shift": 1,
                    "reverse_bits": 1,
                    "reverse_integer": 1,
                    "reverse_number": 2,
                    "reverse_param": 1,
                    "reverse_with_threshold": 1,
                    "reversed_value": 1
                },
                "PTR_C": {
                    "constant_pointer": 1
                },
                "param_1": {
                    "adjusted_num": 1,
                    "initial_value": 1,
                    "input": 7,
                    "input_number": 3,
                    "input_value": 12,
                    "masked_value": 1,
                    "negative_shifted_value": 1,
                    "number": 2,
                    "reset_value": 1,
                    "value": 2
                },
                "uVar1": {
                    "converted_value": 3,
                    "decoded_value": 1,
                    "result": 1,
                    "shifted": 2,
                    "shifted_bits": 1,
                    "shifted_input": 4,
                    "shifted_num": 1,
                    "shifted_number": 2,
                    "shifted_param": 1,
                    "shifted_val": 1,
                    "shifted_value": 13,
                    "shifted_value_upper_8bits": 1
                },
                "uVar2": {
                    "adjusted_offset": 1,
                    "calculation_result": 1,
                    "comparison": 1,
                    "difference": 16,
                    "difference_value": 1,
                    "offset": 2,
                    "remaining_shift": 1,
                    "shift_amount": 4,
                    "shift_count": 1,
                    "shift_diff": 1,
                    "shift_difference": 1,
                    "shifted_input": 1
                },
                "uVar3": {
                    "decoded_value": 1,
                    "extracted_bits": 1,
                    "result": 5,
                    "result_value": 1,
                    "shifted_and_masked_value": 1,
                    "shifted_val_divided": 1,
                    "shifted_value": 3,
                    "temp_value": 2
                },
                "uVar4": {
                    "mask": 1,
                    "masked_input": 1,
                    "msb_shifted": 1,
                    "result": 3,
                    "shifted_negative_value": 1,
                    "sign_extension": 1
                },
                "uVar5": {
                    "conditional": 1,
                    "is_negative": 1,
                    "result": 1
                },
                "uVar6": {
                    "shifted_value": 1
                },
                "uVar7": {
                    "sign": 1
                },
                "uVar8": {
                    "temp_result": 1
                },
                "uVar9": {
                    "temp": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800426c",
                "FUN_0800411c",
                "FUN_08002f28"
            ],
            "code": "\nuint convert_param_to_signed_integer_08001078(uint input_value)\n\n{\n  uint shifted_value;\n  uint difference;\n  \n  if (input_value << 1 < 0x7f000000) {\n    return 0;\n  }\n  shifted_value = (input_value << 1) >> 0x18;\n  difference = 0x9e - shifted_value;\n  if (shifted_value < 0x9f && difference != 0) {\n    shifted_value = (input_value << 8 | 0x80000000) >> (difference & 0xff);\n    if ((input_value & 0x80000000) != 0) {\n      shifted_value = -shifted_value;\n    }\n    return shifted_value;\n  }\n  if ((difference == 0xffffff9f) && ((input_value & 0x7fffff) != 0)) {\n    return 0;\n  }\n  input_value = input_value & 0x80000000;\n  if (input_value == 0) {\n    input_value = 0x7fffffff;\n  }\n  return input_value;\n}\n\n",
            "current_name": "convert_param_to_signed_integer_08001078",
            "entrypoint": "0x08001078",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001078": "convert_param_to_signed_integer_08001078",
                "param_1": "input_value",
                "uVar1": "shifted_value",
                "uVar2": "difference"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080010c4": {
            "additional_data": {
                "0x18": {
                    "byte_size": 1
                },
                "0x7f000000": {
                    "bit_check_limit": 1
                },
                "0x7fffff": {
                    "mask": 1
                },
                "0x80000000": {
                    "sign_bit": 1
                },
                "0x9e": {
                    "shift_amount": 1
                },
                "0xff": {
                    "byte_mask": 1
                },
                "0xffffff9f": {
                    "check_value": 1
                },
                "FUN_080010c4": {
                    "bitwise_shift": 1,
                    "bitwise_shift_conversion": 1,
                    "calculate_modified_value": 1,
                    "calculate_shifted_result": 1,
                    "calculate_shifted_value": 1,
                    "check_param": 1,
                    "check_unsigned_integer": 1,
                    "check_valid_value": 1,
                    "decode_param": 1,
                    "decode_unsigned_integer": 1,
                    "extract_bitfield": 1,
                    "extract_bits": 2,
                    "extract_bits_and_shift_right": 1,
                    "extracted_number": 1,
                    "reverse_and_shift": 2,
                    "reverse_and_shift_bits": 1,
                    "reverse_bits": 7,
                    "reverse_bitwise_operation": 1,
                    "reverse_integer": 1,
                    "reverse_shift": 1,
                    "reverse_shift_operation": 1,
                    "reversed_bits": 1
                },
                "param_1": {
                    "input": 12,
                    "input_num": 1,
                    "input_number": 2,
                    "input_value": 14,
                    "value": 2
                },
                "uVar1": {
                    "bit_count": 1,
                    "calculated_offset": 1,
                    "result": 4,
                    "shift_amount": 19,
                    "shift_count": 1,
                    "shifted_number": 1,
                    "shifted_value": 3,
                    "temp_variable": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004a84"
            ],
            "code": "\nuint reverse_and_shift_bits_080010c4(uint input_value)\n\n{\n  uint shift_amount;\n  \n  if (((input_value & 0x80000000) != 0) || (input_value << 1 < 0x7f000000)) {\n    return 0;\n  }\n  shift_amount = 0x9e - ((input_value << 1) >> 0x18);\n  if (-1 < (int)shift_amount) {\n    return (input_value << 8 | 0x80000000) >> (shift_amount & 0xff);\n  }\n  if ((shift_amount == 0xffffff9f) && ((input_value & 0x7fffff) != 0)) {\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "reverse_and_shift_bits_080010c4",
            "entrypoint": "0x080010c4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080010c4": "reverse_and_shift_bits_080010c4",
                "param_1": "input_value",
                "uVar1": "shift_amount"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001104": {
            "additional_data": {
                "FUN_08001104": {
                    "initialize_and_execute": 2,
                    "initialize_and_execute_operation": 1,
                    "initialize_and_process": 2,
                    "initialize_and_run_process": 1,
                    "initialize_and_send_data": 1,
                    "initialize_application": 2,
                    "initialize_components": 1,
                    "initialize_function": 1,
                    "initialize_process": 1,
                    "initialize_program": 3,
                    "initialize_system": 6,
                    "initialize_task": 1,
                    "print_and_stop": 1,
                    "process_data": 2,
                    "process_function": 1
                },
                "FUN_08001194": {
                    "do_something": 1,
                    "execute_system_operation": 1,
                    "execute_task": 2,
                    "handle_error": 1,
                    "init_process": 1,
                    "initialize_resources": 1,
                    "log_errors": 1,
                    "perform_action": 1,
                    "perform_operation": 2,
                    "perform_task": 1,
                    "print_error": 1,
                    "process_data": 1,
                    "send_message": 1,
                    "set_application_settings": 1,
                    "set_configuration": 2,
                    "set_parameters": 2,
                    "set_program_settings": 1,
                    "set_system_parameters": 1
                },
                "FUN_08001214": {
                    "adjust_value": 1,
                    "convert_milliseconds_to_seconds": 6,
                    "convert_return_value": 1,
                    "convert_seconds_to_milliseconds": 2,
                    "convert_time_in_milliseconds": 1,
                    "convert_time_to_seconds": 1,
                    "convert_to_milliseconds": 1,
                    "convert_to_seconds": 11,
                    "delay": 1,
                    "display_elapsed_time": 1,
                    "print_seconds": 1,
                    "print_time": 1,
                    "process_value": 1,
                    "set_delay": 1
                },
                "FUN_08002214": {
                    "get_current_time": 15,
                    "get_current_time_in_millis": 1,
                    "get_current_time_in_seconds": 1,
                    "get_current_timestamp": 3,
                    "get_current_value": 1,
                    "get_elapsed_seconds": 1,
                    "get_elapsed_time": 2,
                    "get_milliseconds": 1,
                    "get_return_value": 1,
                    "get_system_time": 1,
                    "get_timestamp": 2,
                    "retrieve_value": 1
                },
                "param_1": {
                    "arg": 1,
                    "argument": 1,
                    "config_param1": 1,
                    "data": 1,
                    "error_code": 1,
                    "initialization_value": 1,
                    "input": 1,
                    "input_param": 8,
                    "input_parameter": 4,
                    "input_value": 1,
                    "param": 1,
                    "param1": 2,
                    "process_id": 1,
                    "some_parameter": 1,
                    "status": 1,
                    "task_param": 1,
                    "time_in_milliseconds": 2,
                    "value": 1
                },
                "param_2": {
                    "config_param": 1,
                    "config_param2": 1,
                    "input": 1,
                    "input_value": 1,
                    "max_value": 1,
                    "message_id": 1,
                    "param2": 7,
                    "param_2": 2,
                    "parameter1": 1,
                    "resource_id": 1,
                    "task_param": 1
                },
                "param_3": {
                    "config_param3": 1,
                    "flag": 3,
                    "initial_value": 1,
                    "param3": 7,
                    "param_3": 2,
                    "parameter2": 1
                },
                "uVar1": {
                    "current_time": 3,
                    "current_timestamp": 1,
                    "elapsed_time": 1,
                    "milliseconds": 1,
                    "result": 2,
                    "result_of_function": 1,
                    "result_value": 1,
                    "return_value": 1,
                    "time_in_millis": 1,
                    "time_in_milliseconds": 6,
                    "time_in_ms": 1,
                    "time_in_seconds": 6,
                    "timestamp": 4
                }
            },
            "called": [
                "FUN_08001194",
                "FUN_08002214",
                "FUN_08001214"
            ],
            "calling": [
                "FUN_08001128",
                "FUN_0800209c"
            ],
            "code": "\nundefined4 initialize_system_08001104(undefined4 input_param)\n\n{\n  uint time_in_seconds;\n  \n  time_in_seconds = FUN_08002214();\n  FUN_08001214(time_in_seconds / 1000);\n  FUN_08001194(0xffffffff,input_param,0);\n  return 0;\n}\n\n",
            "current_name": "initialize_system_08001104",
            "entrypoint": "0x08001104",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001104": "initialize_system_08001104",
                "param_1": "input_param",
                "uVar1": "time_in_seconds"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001128": {
            "additional_data": {
                "DAT_40022000": {
                    "hardware_status": 1
                },
                "FUN_08001104": {
                    "clear_flag": 1,
                    "configure_settings": 1,
                    "enable_feature": 1,
                    "execute_function_with_flag": 1,
                    "initialize": 1,
                    "initialize_counter": 1,
                    "initialize_parameter": 1,
                    "initialize_variable": 3,
                    "reset_counter": 1,
                    "reset_flag": 1,
                    "reset_hardware": 1,
                    "reset_parameter": 1,
                    "reset_state": 1,
                    "reset_value": 3,
                    "set_config_value": 1,
                    "set_configuration": 2,
                    "set_flag": 2,
                    "set_flags": 1,
                    "set_initial_value": 1,
                    "set_mode": 3,
                    "set_parameter": 1,
                    "set_parameters": 1
                },
                "FUN_08001128": {
                    "configure_device": 1,
                    "enable_feature": 1,
                    "enable_interrupts": 1,
                    "initialize": 2,
                    "initialize_binary": 2,
                    "initialize_device": 5,
                    "initialize_flags": 1,
                    "initialize_hardware": 3,
                    "initialize_memory": 1,
                    "initialize_system": 5,
                    "initiate_system": 1,
                    "set_flag_and_call_functions": 3,
                    "set_flag_and_execute_functions": 1,
                    "set_flag_and_execute_tasks": 1,
                    "set_flag_and_invoke_functions": 1,
                    "update_configuration": 1,
                    "update_state": 1
                },
                "FUN_08001170": {
                    "configure": 1,
                    "configure_device": 3,
                    "configure_settings": 1,
                    "configure_state": 1,
                    "configure_system": 1,
                    "configure_timer": 1,
                    "execute_action": 1,
                    "execute_function_with_param": 1,
                    "execute_task": 2,
                    "initialize_system": 1,
                    "initialize_value": 1,
                    "perform_action": 3,
                    "perform_operation": 3,
                    "perform_task": 1,
                    "process_data": 1,
                    "set_flag": 1,
                    "set_hardware_mode": 1,
                    "set_mode": 5,
                    "set_option": 1
                },
                "FUN_08004ccc": {
                    "do_something": 1,
                    "execute_cleanup": 1,
                    "execute_command": 1,
                    "execute_complex_operation": 1,
                    "execute_final_task": 1,
                    "execute_function": 2,
                    "execute_operation": 1,
                    "execute_process": 1,
                    "execute_system_command": 1,
                    "execute_task": 5,
                    "execute_tasks": 1,
                    "handle_error": 1,
                    "perform_action": 2,
                    "perform_additional_processing": 1,
                    "perform_cleanup": 3,
                    "perform_operation": 2,
                    "perform_system_check": 2,
                    "perform_task": 2,
                    "start_process": 1
                },
                "_DAT_40022000": {
                    "device_flags": 1
                },
                "param_1": {
                    "action_code": 1,
                    "action_type": 1,
                    "config": 1,
                    "error_code": 1,
                    "flag": 1,
                    "flag_value": 2,
                    "mode": 2,
                    "option": 1,
                    "param": 1,
                    "reset_param": 1,
                    "reset_value": 1,
                    "task_id": 1,
                    "value": 1
                },
                "param_2": {
                    "state": 1,
                    "undefined_param": 1,
                    "unused_parameter": 1
                },
                "param_3": {
                    "counter": 1,
                    "undefined_param": 1,
                    "unused_parameter": 1
                }
            },
            "called": [
                "FUN_08001104",
                "FUN_08001170",
                "FUN_08004ccc"
            ],
            "calling": [
                "FUN_0800458c"
            ],
            "code": "\n\n\nundefined4 initialize_system_08001128(void)\n\n{\n  _DAT_40022000 = _DAT_40022000 | 0x10;\n  FUN_08001170(3);\n  FUN_08001104(0);\n  FUN_08004ccc();\n  return 0;\n}\n\n",
            "current_name": "initialize_system_08001128",
            "entrypoint": "0x08001128",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001128": "initialize_system_08001128"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800114c": {
            "additional_data": {
                "": {
                    "": 4
                },
                "DAT_20000244": {
                    "count": 1,
                    "counter": 16,
                    "data_counter": 3,
                    "data_value": 1,
                    "value": 1
                },
                "FUN_0800114c": {
                    "increment_count": 1,
                    "increment_counter": 20,
                    "increment_data_counter": 6,
                    "increment_data_value": 1,
                    "increment_global_counter": 2,
                    "increment_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080041ae"
            ],
            "code": "\nvoid increment_data_counter_0800114c(void)\n\n{\n  DAT_20000244 = DAT_20000244 + 1;\n  return;\n}\n\n",
            "current_name": "increment_data_counter_0800114c",
            "entrypoint": "0x0800114c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800114c": "increment_data_counter_0800114c"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800115c": {
            "additional_data": {
                "": {
                    "": 1
                },
                "DAT_20000244": {
                    "data": 8,
                    "data_from_file": 1,
                    "data_value": 8,
                    "global_variable": 3,
                    "global_variable_value": 1,
                    "result": 1
                },
                "FUN_0800115c": {
                    "get_dat_value": 2,
                    "get_data": 11,
                    "get_data_from_file": 1,
                    "get_data_from_memory": 1,
                    "get_data_value": 12,
                    "get_global_variable": 3,
                    "get_global_variable_value": 1
                },
                "return_value": {
                    "data": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080014e2",
                "FUN_080015e8",
                "FUN_08004c18",
                "FUN_08001828",
                "FUN_08001b58",
                "FUN_08001460",
                "FUN_08001938",
                "thunk_FUN_0800115c",
                "FUN_080016f4",
                "FUN_08001530",
                "thunk_FUN_0800115c",
                "FUN_0800209c"
            ],
            "code": "\nundefined4 get_data_value_0800115c(void)\n\n{\n  return DAT_20000244;\n}\n\n",
            "current_name": "get_data_value_0800115c",
            "entrypoint": "0x0800115c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800115c": "get_data_value_0800115c"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001168": {
            "called": [],
            "calling": [
                "FUN_08001b58",
                "thunk_FUN_08001168"
            ],
            "code": "\nvoid FUNC_08001168(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08001168",
            "entrypoint": "0x08001168",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08001168": "FUNC_08001168"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08001170": {
            "additional_data": {
                "0x5fa0000": {
                    "bitmask_b": 1
                },
                "0xf8ff": {
                    "bitmask_a": 1
                },
                "8": {
                    "shift": 1
                },
                "E000ED0C": {
                    "configuration_register": 1
                },
                "FUN_08001170": {
                    "configure_device": 1,
                    "configure_interrupt": 1,
                    "configure_memory": 1,
                    "configure_memory_access": 1,
                    "configure_memory_map": 1,
                    "configure_memory_protection": 5,
                    "configure_register": 2,
                    "configure_register_bits": 2,
                    "set_bitmask": 1,
                    "set_bitmask_in_register": 1,
                    "set_bits_in_register": 1,
                    "set_configuration": 1,
                    "set_configuration_bits": 1,
                    "set_e000_ed0_c_bits": 1,
                    "set_memory_address": 1,
                    "set_memory_configuration": 3,
                    "set_memory_protection": 1,
                    "set_parameter_bits": 1,
                    "set_register_bits": 2,
                    "update_control_register": 1,
                    "update_parameter_flags": 1,
                    "update_register_bits": 1
                },
                "_DAT_e000ed0c": {
                    "configuration_register": 1,
                    "control_register": 1,
                    "flags": 1,
                    "interrupt_config_register": 1,
                    "memory_address": 1,
                    "memory_config_register": 2,
                    "memory_configuration": 1,
                    "memory_configuration_register": 2,
                    "memory_control_register": 2,
                    "memory_map_register": 1,
                    "memory_protection_register": 3,
                    "memory_register": 1,
                    "register": 1,
                    "register_value": 12
                },
                "param_1": {
                    "access_mode": 1,
                    "access_permissions": 1,
                    "config_value": 2,
                    "configuration": 2,
                    "configuration_value": 1,
                    "device_state": 1,
                    "input": 2,
                    "input_data": 1,
                    "input_param": 2,
                    "input_value": 9,
                    "interrupt_mask": 1,
                    "mask": 1,
                    "page_permissions": 1,
                    "permissions": 1,
                    "protection_level": 1,
                    "value": 4
                }
            },
            "called": [],
            "calling": [
                "FUN_08004ccc",
                "FUN_08001128"
            ],
            "code": "\n\n\nvoid configure_memory_protection_08001170(uint input_value)\n\n{\n  _DAT_e000ed0c = _DAT_e000ed0c & 0xf8ff | 0x5fa0000 | (input_value & 7) << 8;\n  return;\n}\n\n",
            "current_name": "configure_memory_protection_08001170",
            "entrypoint": "0x08001170",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001170": "configure_memory_protection_08001170",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001194": {
            "additional_data": {
                "FUN_08001194": {
                    "extract_bits_and_store": 2,
                    "reverse_bits": 1,
                    "set_pixel": 1,
                    "store_data": 2,
                    "store_data_in_memory": 1,
                    "transfer_data_to_memory": 1,
                    "update_memory": 8,
                    "update_memory_location": 4,
                    "update_memory_value": 8,
                    "update_registers": 1,
                    "write_data_to_memory": 1,
                    "write_to_memory": 1
                },
                "param_1": {
                    "address": 14,
                    "address_offset": 2,
                    "data": 1,
                    "data1": 1,
                    "data_offset": 1,
                    "input": 1,
                    "input_value": 1,
                    "memory_address": 3,
                    "offset": 1,
                    "register1": 1,
                    "source_address": 1,
                    "value": 2,
                    "value1": 1,
                    "x": 1
                },
                "param_2": {
                    "data": 7,
                    "data1": 2,
                    "data2": 1,
                    "data_a": 1,
                    "data_to_store": 1,
                    "data_value1": 1,
                    "input_data": 1,
                    "input_value1": 2,
                    "mask": 4,
                    "mask_value": 1,
                    "register2": 1,
                    "value": 4,
                    "value1": 1,
                    "value2": 1,
                    "value_to_mask": 1,
                    "value_to_modify": 1,
                    "y": 1
                },
                "param_3": {
                    "bit_mask": 1,
                    "bits_to_transfer": 1,
                    "bitwise_value": 1,
                    "color": 1,
                    "data": 1,
                    "data2": 2,
                    "data3": 1,
                    "data_b": 1,
                    "data_value2": 1,
                    "flag": 1,
                    "input_value2": 2,
                    "mask": 11,
                    "register3": 1,
                    "update_mask": 1,
                    "value": 2,
                    "value2": 1,
                    "value3": 1,
                    "value_to_encode": 1
                },
                "uVar1": {
                    "data_to_store": 1,
                    "encoded_value": 1,
                    "extracted_bits": 1,
                    "masked_data": 1,
                    "masked_value": 3,
                    "pixel_value": 1,
                    "result": 2,
                    "shifted_data": 3,
                    "shifted_value": 5,
                    "transfer_value": 1,
                    "update_value": 1,
                    "updated_data": 1,
                    "updated_value": 9,
                    "value": 1
                },
                "uVar2": {
                    "address": 1,
                    "bit_offset": 1,
                    "mask_bits": 1,
                    "num_bits": 1,
                    "num_bits_to_shift": 2,
                    "shift": 3,
                    "shift_amount": 17,
                    "shift_amount1": 1,
                    "shift_count": 1,
                    "shifted_count": 1,
                    "shifted_value": 1,
                    "temp_var1": 1
                },
                "uVar3": {
                    "adjusted_shift_amount": 1,
                    "bit_mask_offset": 1,
                    "bit_offset": 1,
                    "bit_position": 1,
                    "bit_shift_amount": 1,
                    "destination_address": 1,
                    "effective_shift": 1,
                    "lower_bound": 2,
                    "mask": 1,
                    "mask_bits": 1,
                    "mask_shift": 1,
                    "mask_value": 1,
                    "masked_value": 1,
                    "offset": 4,
                    "shift_amount": 3,
                    "shift_amount2": 1,
                    "shifted_bits": 3,
                    "shifted_mask": 2,
                    "shifted_value": 3,
                    "temp_var": 1
                },
                "uVar4": {
                    "adjusted_bit_position": 1,
                    "adjusted_mask_offset": 1,
                    "adjusted_offset": 2,
                    "adjusted_shift": 1,
                    "adjusted_shift_amount_plus4": 1,
                    "adjusted_value": 1,
                    "condition": 1,
                    "effective_mask": 1,
                    "limit_value": 1,
                    "masked_value": 1,
                    "modified_shift": 1,
                    "modified_shift_amount": 1,
                    "new_bit_offset": 1,
                    "shift_amount3": 1,
                    "shifted_address": 1,
                    "shifted_amount": 1,
                    "shifted_bits": 1,
                    "shifted_bits_plus4": 1,
                    "shifted_byte_plus4": 1,
                    "shifted_mask": 1,
                    "shifted_offset": 1,
                    "shifted_value": 2,
                    "shifted_value_plus4": 1,
                    "temp_var": 1,
                    "temp_var2": 1,
                    "u_var4": 1,
                    "updated_shifted_value": 1,
                    "upper_bound": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08004514",
                "FUN_08004e7c",
                "FUN_08001104",
                "FUN_08004ccc"
            ],
            "code": "\n\n\nvoid update_memory_value_08001194(uint address,uint data,uint mask)\n\n{\n  undefined updated_value;\n  uint shift_amount;\n  uint offset;\n  uint shifted_value;\n  \n  offset = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  shift_amount = 7 - offset;\n  shifted_value = offset + 4;\n  if (3 < shift_amount) {\n    shift_amount = 4;\n  }\n  if (shifted_value < 7) {\n    offset = 0;\n  }\n  shift_amount = (1 << (shift_amount & 0xff)) - 1;\n  if (6 < shifted_value) {\n    offset = offset - 3;\n  }\n  updated_value = (undefined)\n          ((mask & (1 << (offset & 0xff)) - 1U | (data & shift_amount) << (offset & 0xff)) << 4);\n  if (-1 < (int)address) {\n    offset = address + 0xe000e100;\n  }\n  else {\n    shift_amount = 0xe000ed14;\n    offset = address & 0xf;\n  }\n  if (-1 < (int)address) {\n    *(undefined *)(offset + 0x300) = updated_value;\n  }\n  else {\n    *(undefined *)(shift_amount + offset) = updated_value;\n  }\n  return;\n}\n\n",
            "current_name": "update_memory_value_08001194",
            "entrypoint": "0x08001194",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001194": "update_memory_value_08001194",
                "param_1": "address",
                "param_2": "data",
                "param_3": "mask",
                "uVar1": "updated_value",
                "uVar2": "shift_amount",
                "uVar3": "offset",
                "uVar4": "shifted_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080011fc": {
            "additional_data": {
                "FUN_080011fc": {
                    "set_bit": 8,
                    "set_bit_at_index": 3,
                    "set_bit_at_position": 2,
                    "set_bit_in_array": 11,
                    "set_bit_in_memory": 3,
                    "set_bit_value": 3,
                    "store_bit_in_array": 1
                },
                "param_1": {
                    "bit_index": 9,
                    "bit_position": 6,
                    "index": 7,
                    "input": 4,
                    "input_number": 1,
                    "input_value": 3,
                    "position": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004e7c"
            ],
            "code": "\nvoid set_bit_in_array_080011fc(uint bit_index)\n\n{\n  *(int *)((bit_index >> 5) * 4 + -0x1fff1f00) = 1 << (bit_index & 0x1f);\n  return;\n}\n\n",
            "current_name": "set_bit_in_array_080011fc",
            "entrypoint": "0x080011fc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080011fc": "set_bit_in_array_080011fc",
                "param_1": "bit_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001214": {
            "additional_data": {
                "0": {
                    "unused": 1
                },
                "0xf0": {
                    "default_config": 1
                },
                "DAT_e000ed23": {
                    "config_register": 1,
                    "config_value": 2,
                    "constant": 1,
                    "constant_value": 6,
                    "flag": 3,
                    "initial_value": 2,
                    "magic_number": 1,
                    "memory_value": 2,
                    "modified_value_2": 1,
                    "register_2": 2,
                    "status": 3,
                    "status_code": 2,
                    "status_flag": 1,
                    "status_register": 1
                },
                "FUN_08001214": {
                    "initialize_data": 3,
                    "initialize_memory": 9,
                    "initialize_parameter": 1,
                    "initialize_values": 1,
                    "set_data_registers": 1,
                    "set_initial_values": 2,
                    "set_memory_config": 1,
                    "set_param_and_values": 1,
                    "set_param_values": 1,
                    "set_parameters": 5,
                    "set_registers": 1,
                    "set_value_and_flag": 1,
                    "update_configuration": 1,
                    "update_data_registers": 1,
                    "update_parameters": 1,
                    "update_registers": 1
                },
                "_DAT_e000e010": {
                    "bits": 1,
                    "constant_number": 1,
                    "constant_value": 1,
                    "control_value": 1,
                    "count": 1,
                    "counter": 1,
                    "data_size": 1,
                    "flag": 11,
                    "flag_register": 1,
                    "flag_variable": 2,
                    "initial_value": 1,
                    "mode": 1,
                    "modified_value_4": 1,
                    "register_4": 2,
                    "second_variable": 1,
                    "select_value": 1,
                    "third_offset": 1,
                    "third_value": 1,
                    "threshold": 1
                },
                "_DAT_e000e014": {
                    "adjusted_value": 1,
                    "base_address": 1,
                    "base_pointer": 1,
                    "data_address": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "data_register": 1,
                    "lower_limit": 2,
                    "memory_address": 4,
                    "memory_offset": 2,
                    "memory_pointer": 1,
                    "memory_size": 1,
                    "minus_one_offset": 1,
                    "modified_input": 2,
                    "modified_value": 1,
                    "modified_value_1": 1,
                    "register_1": 2,
                    "result": 2,
                    "stored_value": 1,
                    "updated_value": 4
                },
                "_DAT_e000e018": {
                    "additional_data": 1,
                    "additional_value": 1,
                    "counter": 9,
                    "counter_register": 1,
                    "data_flag": 1,
                    "first_variable": 1,
                    "flag": 1,
                    "initialized_variable": 1,
                    "modified_value_3": 1,
                    "offset": 3,
                    "register_3": 2,
                    "reset_value": 1,
                    "second_offset": 1,
                    "second_value": 1,
                    "unused": 1,
                    "unused_variable": 5
                },
                "param_1": {
                    "input": 1,
                    "input_param": 2,
                    "input_value": 9,
                    "memory_size": 1,
                    "size": 5,
                    "value": 13
                }
            },
            "called": [],
            "calling": [
                "FUN_08004514",
                "FUN_08001104"
            ],
            "code": "\n\n\nundefined4 initialize_memory_08001214(int value)\n\n{\n  if (value - 1U < 0x1000000) {\n    _DAT_e000e014 = value - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "initialize_memory_08001214",
            "entrypoint": "0x08001214",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001214": "initialize_memory_08001214",
                "param_1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001240": {
            "additional_data": {
                "FUN_08001240": {
                    "set_e000e010_bit": 1,
                    "set_flag": 8,
                    "set_flag_based_on_input": 1,
                    "set_flag_based_on_value": 1,
                    "set_flag_bit": 1,
                    "set_flag_if_equal": 1,
                    "set_flag_if_equals_four": 2,
                    "set_flag_if_param_equals_four": 1,
                    "set_flag_if_param_is_four": 1,
                    "set_flag_if_value_is_four": 1,
                    "set_permission_flag": 2,
                    "update_bits_in_register": 1,
                    "update_data": 1,
                    "update_flag": 4,
                    "update_flag_value": 2,
                    "update_register": 1,
                    "update_status_flag": 2
                },
                "_DAT_e000e010": {
                    "control_register": 2,
                    "flag": 7,
                    "flag_register": 7,
                    "flag_value": 1,
                    "register": 2,
                    "register_value": 4,
                    "status_flag": 2,
                    "status_register": 2
                },
                "param_1": {
                    "bits_to_update": 1,
                    "flag": 2,
                    "flag_value": 8,
                    "input": 2,
                    "input_value": 4,
                    "permission_index": 1,
                    "permission_value": 1,
                    "status": 3,
                    "value": 9
                }
            },
            "called": [],
            "calling": [
                "FUN_08004514"
            ],
            "code": "\n\n\nvoid set_flag_if_param_equals_four_08001240(int value)\n\n{\n  if (value == 4) {\n    _DAT_e000e010 = _DAT_e000e010 | 4;\n  }\n  else {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n  }\n  return;\n}\n\n",
            "current_name": "set_flag_if_param_equals_four_08001240",
            "entrypoint": "0x08001240",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001240": "set_flag_if_param_equals_four_08001240",
                "param_1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001258": {
            "called": [],
            "calling": [],
            "code": "\nvoid FUNC_08001258(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08001258",
            "entrypoint": "0x08001258",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08001258": "FUNC_08001258"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08001264": {
            "additional_data": {
                "FUN_08001264": {
                    "apply_settings": 1,
                    "configure_bits": 1,
                    "process_data": 1,
                    "process_params": 1,
                    "reverse_bits": 1,
                    "update_bit_mask": 1,
                    "update_bits": 4,
                    "update_bits_in_registers": 1,
                    "update_data": 1,
                    "update_flags": 7,
                    "update_flags_and_data": 1,
                    "update_flags_and_registers": 4,
                    "update_memory": 1,
                    "update_parameter_flags": 1,
                    "update_parameters": 1,
                    "update_params": 1,
                    "update_permissions": 1,
                    "update_settings": 1
                },
                "_DAT_40010400": {
                    "register1": 1,
                    "register2": 2,
                    "register_a": 1,
                    "register_b": 1
                },
                "_DAT_40010404": {
                    "register2": 1,
                    "register3": 2,
                    "register_b": 1,
                    "register_c": 1
                },
                "_DAT_40010408": {
                    "register3": 1,
                    "register4": 2,
                    "register_c": 1,
                    "register_d": 1
                },
                "_DAT_4001040c": {
                    "register4": 1,
                    "register5": 2,
                    "register_d": 1,
                    "register_e": 1
                },
                "_DAT_40021018": {
                    "flag_register": 1,
                    "register1": 2,
                    "register_a": 1,
                    "register_register": 1
                },
                "arrayA": {
                    "array_a_pointer": 1
                },
                "arrayAIndex": {
                    "array_a_index": 1
                },
                "arrayAIndex1": {
                    "array_a_index1_pointer": 1
                },
                "iVar4": {
                    "array_a_index1": 1,
                    "counter": 1,
                    "device_index": 1,
                    "index": 23,
                    "mode": 1,
                    "register_index": 3,
                    "var_index": 1
                },
                "iVar8": {
                    "bit_index": 5,
                    "bit_offset": 5,
                    "condition_index": 1,
                    "flag_index": 1,
                    "index": 1,
                    "inner_index": 2,
                    "modifier_index": 1,
                    "offset": 1,
                    "register_offset": 1,
                    "shift": 6,
                    "shift_amount": 3,
                    "shift_value": 1,
                    "sub_index": 2
                },
                "param_1": {
                    "array_a": 1,
                    "bit_array": 1,
                    "bit_array1": 1,
                    "bits_to_update": 2,
                    "flag_register": 1,
                    "flags": 4,
                    "flags1": 1,
                    "flags_array": 2,
                    "initial_flags": 1,
                    "input_bits": 1,
                    "input_data": 1,
                    "input_flags": 1,
                    "memory_array": 1,
                    "output": 3,
                    "output_array": 1,
                    "output_params": 3,
                    "permissions": 1,
                    "register1": 1,
                    "settings": 1,
                    "settings1": 1,
                    "source": 1,
                    "status_flags": 1
                },
                "param_2": {
                    "array_b": 1,
                    "bit_array2": 1,
                    "bit_values": 1,
                    "bits_to_check": 1,
                    "config_data": 1,
                    "data_array": 1,
                    "flag_array": 1,
                    "flags": 2,
                    "flags2": 1,
                    "input": 5,
                    "input_array": 1,
                    "input_params": 3,
                    "instruction": 1,
                    "mask": 2,
                    "mask_array": 1,
                    "mask_data": 1,
                    "mask_flags": 1,
                    "register2": 1,
                    "register_values": 1,
                    "registers": 1,
                    "settings2": 1,
                    "values": 1,
                    "values_array": 1
                },
                "uVar1": {
                    "bit_mask": 1,
                    "flag": 2,
                    "flag1": 1,
                    "flag_change": 1,
                    "flag_value": 2,
                    "input_bit": 1,
                    "mod_val": 1,
                    "new_bits1": 1,
                    "new_bits_value": 1,
                    "new_flag_value": 1,
                    "new_flags": 1,
                    "new_mask": 1,
                    "new_value": 5,
                    "output_bits": 1,
                    "output_data": 1,
                    "output_value": 2,
                    "result": 2,
                    "temp1": 1,
                    "updated_bits": 1,
                    "updated_flag": 1,
                    "updated_value": 3
                },
                "uVar2": {
                    "bit_check": 4,
                    "bit_flag": 1,
                    "bit_mask": 18,
                    "bit_value": 1,
                    "flag": 1,
                    "flag_check": 1,
                    "input_value": 1,
                    "mask": 2,
                    "mask_bit": 1,
                    "temp2": 1
                },
                "uVar3": {
                    "array_b_index1": 1,
                    "bit_value": 1,
                    "condition": 4,
                    "condition_value": 1,
                    "data_type": 1,
                    "data_value": 1,
                    "instruction": 1,
                    "instruction_value": 1,
                    "mask_value": 1,
                    "mode": 1,
                    "new_bits2": 1,
                    "opcode": 6,
                    "register_value": 1,
                    "temp3": 1,
                    "type": 1,
                    "value": 8
                },
                "uVar5": {
                    "array_b_index": 1,
                    "bit_array_index": 1,
                    "bit_counter": 1,
                    "bit_index": 7,
                    "bits_processed": 1,
                    "count": 2,
                    "counter": 2,
                    "i": 12,
                    "index": 2,
                    "iteration": 1,
                    "iterator": 1
                },
                "uVar6": {
                    "bit": 2,
                    "bit_flag": 1,
                    "bit_mask": 8,
                    "bit_position": 5,
                    "bit_shift": 4,
                    "current_bit": 1,
                    "mask": 4,
                    "shifted_bit": 2,
                    "shifted_mask": 1,
                    "temp": 2,
                    "temp_bit": 1
                },
                "uVar7": {
                    "check_value": 2,
                    "compare_value": 1,
                    "comparison_value": 6,
                    "condition": 1,
                    "condition2": 1,
                    "constant": 3,
                    "constant1": 1,
                    "constant_value": 1,
                    "else_flag": 1,
                    "expected_instruction": 1,
                    "expected_value": 1,
                    "flag": 1,
                    "floppy_disk_opcode": 1,
                    "match_condition": 1,
                    "matching_value": 1,
                    "special_mode": 1,
                    "special_opcode": 1,
                    "target_value": 2,
                    "temp": 1,
                    "type_mask": 1,
                    "type_value": 1,
                    "value_to_check": 1
                },
                "unaff_r10": {
                    "address": 1,
                    "array_a_index_pointer": 1,
                    "array_ptr": 1,
                    "bits_array": 1,
                    "current_flags": 1,
                    "current_memory": 1,
                    "current_settings": 1,
                    "destination": 1,
                    "modifier_array": 1,
                    "output": 2,
                    "output_address": 2,
                    "output_array": 1,
                    "output_flags": 1,
                    "output_ptr": 2,
                    "permissions_ptr": 1,
                    "register": 1,
                    "register_array": 1,
                    "register_pointer": 2,
                    "register_ptr": 1,
                    "result_pointer": 1,
                    "result_ptr": 1,
                    "target": 1,
                    "target_address": 1,
                    "target_flags": 1,
                    "target_param": 1,
                    "temp_array": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004d48",
                "FUN_08004e7c",
                "FUN_0800458c",
                "FUN_08004e14"
            ],
            "code": "\n\n\nvoid update_flags_and_registers_08001264(uint *flags,uint *input)\n\n{\n  uint new_value;\n  uint bit_mask;\n  uint value;\n  int index;\n  uint i;\n  uint bit_mask;\n  uint comparison_value;\n  uint *output_ptr;\n  int shift;\n  \n  new_value = 0;\n  i = 0;\n  do {\n    bit_mask = 1 << (i & 0xff);\n    bit_mask = bit_mask & *input;\n    if (bit_mask == bit_mask) {\n      value = input[1];\n      if (value == 0x12) {\n        new_value = input[3] + 0xc;\n      }\n      else if (value < 0x13) {\n        if (value == 2) {\n          new_value = input[3] + 8;\n        }\n        else if (value < 3) {\n          if (value == 0) goto LAB_080013be;\n          if (value == 1) {\n            new_value = input[3];\n          }\n        }\n        else if (value == 3) {\n          new_value = 0;\n        }\n        else if (value == 0x11) {\n          new_value = input[3] + 4;\n        }\n      }\n      else {\n        if (value != 0x10210000) {\n          if (value < 0x10210001) {\n            if (value != 0x10110000) {\n              comparison_value = 0x10120000;\nLAB_080013b8:\n              if (value != comparison_value) goto LAB_080012a8;\n            }\n          }\n          else if ((value != 0x10310000) && (value != 0x10320000)) {\n            comparison_value = 0x10220000;\n            goto LAB_080013b8;\n          }\n        }\nLAB_080013be:\n        new_value = input[2];\n        if (new_value == 0) {\n          new_value = 4;\n        }\n        else {\n          if (new_value == 1) {\n            flags[4] = bit_mask;\n          }\n          if (new_value != 1) {\n            flags[5] = bit_mask;\n          }\n          new_value = 8;\n        }\n      }\nLAB_080012a8:\n      if (bit_mask < 0x100) {\n        bit_mask = *flags;\n        value = i << 2;\n        output_ptr = flags;\n      }\n      else {\n        bit_mask = flags[1];\n        value = (i + 0x3ffffff8) * 4;\n      }\n      if (0xff < bit_mask) {\n        output_ptr = flags + 1;\n      }\n      *output_ptr = bit_mask & ~(0xf << (value & 0xff)) | new_value << (value & 0xff);\n      output_ptr = (uint *)input[1];\n      if (((uint)output_ptr & 0x10000000) != 0) {\n        _DAT_40021018 = _DAT_40021018 | 1;\n        shift = (i & 3) << 2;\n        if (flags == (uint *)0x40010800) {\n          index = 0;\n        }\n        else if (flags == (uint *)0x40010c00) {\n          index = 1;\n        }\n        else if (flags == (uint *)0x40011000) {\n          index = 2;\n        }\n        else if (flags == (uint *)0x40011400) {\n          index = 3;\n        }\n        else {\n          index = 4;\n        }\n        *(uint *)((i & 0xfffffffc) + 0x40010008) =\n             index << shift | *(uint *)((i & 0xfffffffc) + 0x40010008) & ~(0xf << shift);\n        if (((uint)output_ptr & 0x10000) == 0) {\n          _DAT_40010400 = _DAT_40010400 & ~bit_mask;\n        }\n        else {\n          _DAT_40010400 = _DAT_40010400 | bit_mask;\n        }\n        if (((uint)output_ptr & 0x20000) == 0) {\n          _DAT_40010404 = _DAT_40010404 & ~bit_mask;\n        }\n        else {\n          _DAT_40010404 = _DAT_40010404 | bit_mask;\n        }\n        if (((uint)output_ptr & 0x100000) == 0) {\n          _DAT_40010408 = _DAT_40010408 & ~bit_mask;\n        }\n        else {\n          _DAT_40010408 = _DAT_40010408 | bit_mask;\n        }\n        if (((uint)output_ptr & 0x200000) == 0) {\n          _DAT_4001040c = _DAT_4001040c & ~bit_mask;\n        }\n        else {\n          _DAT_4001040c = bit_mask | _DAT_4001040c;\n        }\n      }\n    }\n    i = i + 1;\n    if (i == 0x10) {\n      return;\n    }\n  } while( true );\n}\n\n",
            "current_name": "update_flags_and_registers_08001264",
            "entrypoint": "0x08001264",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001264": "update_flags_and_registers_08001264",
                "iVar4": "index",
                "iVar8": "shift",
                "param_1": "flags",
                "param_2": "input",
                "uVar1": "new_value",
                "uVar2": "bit_mask",
                "uVar3": "value",
                "uVar5": "i",
                "uVar6": "bit_mask",
                "uVar7": "comparison_value",
                "unaff_r10": "output_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001424": {
            "additional_data": {
                "FUN_08001424": {
                    "initialize_param": 1,
                    "set_param": 3,
                    "set_param_2_in_memory": 1,
                    "set_param_value": 12,
                    "set_parameter": 3,
                    "set_parameter_value": 3,
                    "set_value": 1,
                    "set_value_at_offset": 1,
                    "store_param2": 1,
                    "store_param_value": 1,
                    "store_parameter": 1,
                    "store_parameter_value": 1,
                    "store_shifted_value": 1,
                    "update_parameter": 1
                },
                "objectAddress": {
                    "object_pointer": 1
                },
                "param_1": {
                    "base_address": 23,
                    "object_address": 6,
                    "ptr": 1,
                    "target_address": 1
                },
                "param_2": {
                    "new_value": 1,
                    "shifted_param_value": 1,
                    "shifted_value": 6,
                    "updated_value": 2,
                    "value": 20,
                    "value_to_set": 1
                },
                "param_3": {
                    "condition": 2,
                    "condition_check": 1,
                    "flag": 6,
                    "is_address_shifted": 1,
                    "is_left_shift": 1,
                    "is_shifted": 15,
                    "shift_flag": 3,
                    "shift_value": 1,
                    "should_shift": 1
                },
                "value": {
                    "shifted_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004490",
                "FUN_0800458c",
                "FUN_08003f3c"
            ],
            "code": "\nvoid set_param_value_08001424(int base_address,int value,int is_shifted)\n\n{\n  if (is_shifted == 0) {\n    value = value << 0x10;\n  }\n  *(int *)(base_address + 0x10) = value;\n  return;\n}\n\n",
            "current_name": "set_param_value_08001424",
            "entrypoint": "0x08001424",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001424": "set_param_value_08001424",
                "param_1": "base_address",
                "param_2": "value",
                "param_3": "is_shifted"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800142e": {
            "additional_data": {
                "0xc": {
                    "offset": 1
                },
                "FUN_0800142e": {
                    "apply_xor": 4,
                    "bitwise_xor": 1,
                    "combine_and_store_values": 1,
                    "combine_values": 1,
                    "combine_with_exclusive_or": 1,
                    "modify_and_store": 1,
                    "modify_and_xor_values": 1,
                    "perform_xor": 1,
                    "update_param_xor": 1,
                    "xor_and_store": 2,
                    "xor_and_update": 1,
                    "xor_and_update_uint": 1,
                    "xor_operation": 2,
                    "xor_param_and_assign": 1,
                    "xor_param_and_memory": 1,
                    "xor_param_and_store": 1,
                    "xor_param_and_value": 1,
                    "xor_param_value_with_variable": 1,
                    "xor_param_with_global": 1,
                    "xor_param_with_local": 2,
                    "xor_param_with_memory": 1,
                    "xor_param_with_previous_value": 1,
                    "xor_param_with_var": 1,
                    "xor_parameter_and_value": 1,
                    "xor_values": 1
                },
                "local_1": {
                    "current_value": 1
                },
                "param_1": {
                    "address": 2,
                    "base_address": 5,
                    "buffer": 1,
                    "data": 1,
                    "data_address": 2,
                    "global_address": 1,
                    "input": 1,
                    "input_addr": 2,
                    "input_address": 6,
                    "input_pointer": 3,
                    "input_ptr": 1,
                    "input_value": 1,
                    "local_base_address": 1,
                    "memory_address": 2,
                    "target_address": 2
                },
                "param_2": {
                    "input_value": 4,
                    "new_param": 1,
                    "new_value": 3,
                    "operand": 1,
                    "param_value": 1,
                    "value": 11,
                    "value_to_combine": 1,
                    "value_to_xor": 3,
                    "xor_key": 1,
                    "xor_value": 5
                },
                "param_3": {
                    "result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004490"
            ],
            "code": "\nvoid apply_xor_0800142e(int input_address,uint value)\n\n{\n  *(uint *)(input_address + 0xc) = value ^ *(uint *)(input_address + 0xc);\n  return;\n}\n\n",
            "current_name": "apply_xor_0800142e",
            "entrypoint": "0x0800142e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800142e": "apply_xor_0800142e",
                "param_1": "input_address",
                "param_2": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001436": {
            "additional_data": {
                "0": {
                    "failure": 1
                },
                "0x14": {
                    "bitmask": 1,
                    "flag_offset": 1
                },
                "0x20": {
                    "default_flag_status": 1
                },
                "0x35": {
                    "status": 1
                },
                "0x400": {
                    "flag": 1,
                    "flag_mask": 2
                },
                "0xd": {
                    "flag_addr": 1
                },
                "0xe": {
                    "error_code": 1
                },
                "0xfffffbff": {
                    "flag_clear_mask": 2,
                    "flag_mask": 1
                },
                "1": {
                    "success": 1
                },
                "4": {
                    "result_value": 1
                },
                "FUN_08001436": {
                    "check_and_modify_flag": 1,
                    "check_and_modify_flags": 1,
                    "check_and_update_flags": 1,
                    "check_bit_and_set": 1,
                    "check_flag": 5,
                    "check_flag_enabled": 1,
                    "check_flag_status": 10,
                    "check_flagged_status": 1,
                    "clear_flag_and_set_values": 1,
                    "clear_flag_if_set": 4,
                    "reset_flag": 1,
                    "update_flag": 1,
                    "update_flag_if_set": 1,
                    "update_flags_and_values": 1,
                    "update_status": 1
                },
                "iVar1": {
                    "element": 1,
                    "first_element": 1,
                    "flag_status": 1,
                    "flag_value": 14,
                    "status_value": 1,
                    "value": 12,
                    "value_at_index": 1
                },
                "param_1": {
                    "array_pointer": 1,
                    "array_ptr": 1,
                    "data": 5,
                    "data_pointer": 1,
                    "flag": 4,
                    "flag_address": 1,
                    "flag_array": 2,
                    "flag_data": 1,
                    "flag_pointer": 3,
                    "flag_ptr": 4,
                    "input": 1,
                    "input_array": 5,
                    "memory_address": 1,
                    "status": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080014e2"
            ],
            "code": "\nundefined4 check_flag_status_08001436(int *data)\n\n{\n  int flag_value;\n  \n  flag_value = *data;\n  if ((*(uint *)(flag_value + 0x14) & 0x400) != 0) {\n    *(uint *)(flag_value + 0x14) = *(uint *)(flag_value + 0x14) & 0xfffffbff;\n    data[0xe] = 4;\n    *(undefined *)((int)data + 0x35) = 0x20;\n    *(undefined *)(data + 0xd) = 0;\n    return 1;\n  }\n  return 0;\n}\n\n",
            "current_name": "check_flag_status_08001436",
            "entrypoint": "0x08001436",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001436": "check_flag_status_08001436",
                "iVar1": "flag_value",
                "param_1": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001460": {
            "additional_data": {
                "FUN_08001460": {
                    "check_access": 4,
                    "check_access_rights": 1,
                    "check_and_update_flags": 1,
                    "check_condition": 3,
                    "check_input": 1,
                    "check_input_validity": 2,
                    "check_param": 2,
                    "check_parameter": 1,
                    "check_parameter_validity": 1,
                    "check_parameters": 5,
                    "check_params_and_set_flags": 1,
                    "check_permission": 2,
                    "check_permissions": 3,
                    "validate_input": 1,
                    "validate_param": 1,
                    "verify_input": 1
                },
                "iVar1": {
                    "base_value": 1,
                    "initial_time": 2,
                    "initial_value": 3,
                    "result": 1,
                    "result1": 2,
                    "start_time": 20,
                    "start_value": 2
                },
                "iVar2": {
                    "current_time": 20,
                    "current_value": 5,
                    "end_time": 2,
                    "new_value": 1,
                    "result2": 2,
                    "result_2": 1
                },
                "param_1": {
                    "array_ptr": 1,
                    "data": 5,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "input": 3,
                    "input_array": 1,
                    "input_data": 2,
                    "input_params": 1,
                    "param_array": 3,
                    "param_list": 2,
                    "parameter_array": 2,
                    "parameters": 2,
                    "params": 1,
                    "permissions": 2,
                    "pointer_list": 1,
                    "pointer_to_param": 1
                },
                "param_2": {
                    "filter_value": 1,
                    "flag": 23,
                    "flag1": 1,
                    "mode": 1,
                    "option": 1,
                    "permission_type": 2,
                    "permissions": 1
                },
                "param_3": {
                    "flag2": 1,
                    "max_time": 1,
                    "threshold": 1,
                    "time_limit": 3,
                    "timeout": 24
                },
                "puVar4": {
                    "array": 1,
                    "array_ptr": 3,
                    "current_array_element": 1,
                    "current_pointer": 2,
                    "data": 3,
                    "data_array": 2,
                    "data_pointer": 3,
                    "data_ptr": 3,
                    "input_ptr": 1,
                    "param_ptr": 1,
                    "params": 1,
                    "permission_array": 1,
                    "permission_data": 1,
                    "pointer": 1,
                    "pointer_to_struct": 1,
                    "ptr": 5,
                    "ptr_data": 1
                },
                "uVar3": {
                    "access": 2,
                    "access_value": 2,
                    "array_element": 1,
                    "array_value": 1,
                    "check_value": 1,
                    "compare_value": 1,
                    "comparison_value": 1,
                    "data_value": 1,
                    "flag": 1,
                    "mask": 1,
                    "permission_value": 2,
                    "selected_value": 1,
                    "temp_value": 1,
                    "value": 15
                }
            },
            "called": [
                "FUN_0800115c"
            ],
            "calling": [
                "FUN_080015e8",
                "FUN_08001530"
            ],
            "code": "\nundefined4 check_access_rights_08001460(uint **data,uint flag,uint timeout)\n\n{\n  int start_time;\n  int current_time;\n  uint value;\n  uint *ptr;\n  \n  start_time = FUN_0800115c();\n  do {\n    ptr = *data;\n    if ((flag << 8) >> 0x18 == 1) {\n      value = ptr[5];\n    }\n    else {\n      value = ptr[6];\n    }\n    if ((flag & 0xffff & ~value) == 0) {\n      return 0;\n    }\n    if ((int)(ptr[5] << 0x15) < 0) {\n      *ptr = *ptr | 0x200;\n      ptr[5] = ptr[5] & 0xfffffbff;\n      data[0xe] = (uint *)0x4;\n      *(undefined *)((int)data + 0x35) = 0x20;\n      *(undefined *)(data + 0xd) = 0;\n      return 1;\n    }\n  } while ((timeout == 0xffffffff) ||\n          ((timeout != 0 && (current_time = FUN_0800115c(), (uint)(current_time - start_time) <= timeout))));\n  *(undefined *)((int)data + 0x35) = 0x20;\n  *(undefined *)(data + 0xd) = 0;\n  return 3;\n}\n\n",
            "current_name": "check_access_rights_08001460",
            "entrypoint": "0x08001460",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001460": "check_access_rights_08001460",
                "iVar1": "start_time",
                "iVar2": "current_time",
                "param_1": "data",
                "param_2": "flag",
                "param_3": "timeout",
                "puVar4": "ptr",
                "uVar3": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080014e2": {
            "additional_data": {
                "F0": {
                    "var1": 1
                },
                "F1": {
                    "var2": 1
                },
                "FUM_0800115c": {
                    "get_current_value": 1
                },
                "FUN_0800115c": {
                    "get_current_time": 2,
                    "get_current_value": 1,
                    "get_duration": 1,
                    "get_end_time": 1,
                    "get_initial_value": 2,
                    "get_start_value": 1
                },
                "FUN_08001436": {
                    "check_array": 1,
                    "check_condition": 1,
                    "perform_operation": 1,
                    "process_data": 2,
                    "process_input_array": 1,
                    "process_param": 1
                },
                "FUN_080014e2": {
                    "check_and_modify_status": 1,
                    "check_and_modify_values": 1,
                    "check_and_process_data": 1,
                    "check_and_return_status": 1,
                    "check_condition_and_update": 1,
                    "check_conditions": 1,
                    "check_data_validity": 1,
                    "check_function": 1,
                    "check_function_validity": 2,
                    "check_if_valid": 3,
                    "check_param_condition": 1,
                    "check_parameter_validity": 2,
                    "check_pointer_valid": 1,
                    "check_process_status": 1,
                    "check_status": 4,
                    "check_validity": 7,
                    "validate_data": 1
                },
                "iVar1": {
                    "current_time": 1,
                    "current_value": 3,
                    "initial_value": 1,
                    "result1": 8,
                    "result_1": 1,
                    "return_value": 1,
                    "start_time": 4,
                    "start_value": 5,
                    "starting_time": 1,
                    "starting_value": 2,
                    "value1": 2,
                    "var1": 1
                },
                "iVar2": {
                    "is_finished": 1,
                    "result": 10,
                    "result2": 8,
                    "result_2": 1,
                    "result_value": 1,
                    "return_value": 5,
                    "sub_function_value": 1,
                    "value2": 2,
                    "var2": 1
                },
                "param_1": {
                    "array": 8,
                    "data": 4,
                    "data_array": 1,
                    "data_pointer": 1,
                    "function_params": 2,
                    "input_arr": 1,
                    "input_array": 8,
                    "param_array": 1,
                    "parameter": 1,
                    "parameter_array": 1,
                    "pointer": 2,
                    "process_status": 1
                },
                "param_2": {
                    "comparison_value": 1,
                    "flags": 1,
                    "input_value": 1,
                    "length": 2,
                    "limit": 8,
                    "max_iterations": 1,
                    "max_process_time": 1,
                    "max_value": 3,
                    "param_value": 2,
                    "parameter_value": 1,
                    "size": 3,
                    "threshold": 2,
                    "value": 5
                }
            },
            "called": [
                "FUN_0800115c",
                "FUN_08001436"
            ],
            "calling": [
                "FUN_080015e8",
                "FUN_08001828",
                "FUN_08001530"
            ],
            "code": "\nundefined4 check_function_validity_080014e2(int *array,uint limit)\n\n{\n  int result1;\n  int result;\n  \n  result1 = FUN_0800115c();\n  while( true ) {\n    if (*(int *)(*array + 0x14) << 0x18 < 0) {\n      return 0;\n    }\n    result = FUN_08001436(array);\n    if (result != 0) break;\n    if ((limit != 0xffffffff) &&\n       ((limit == 0 || (result = FUN_0800115c(), limit < (uint)(result - result1))))) {\n      array[0xe] = array[0xe] | 0x20;\n      *(undefined *)((int)array + 0x35) = 0x20;\n      *(undefined *)(array + 0xd) = 0;\n      return 3;\n    }\n  }\n  return 1;\n}\n\n",
            "current_name": "check_function_validity_080014e2",
            "entrypoint": "0x080014e2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080014e2": "check_function_validity_080014e2",
                "iVar1": "result1",
                "iVar2": "result",
                "param_1": "array",
                "param_2": "limit"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001530": {
            "additional_data": {
                "FUM_0800115c": {
                    "get_interval": 1
                },
                "FUN_0800115c": {
                    "get_difference": 1,
                    "get_end_value": 1,
                    "get_interval": 1
                },
                "FUN_08001460": {
                    "calculate": 1,
                    "perform_operation": 1,
                    "process_data": 1,
                    "process_params": 1
                },
                "FUN_080014e2": {
                    "check_condition": 1,
                    "check_status": 1,
                    "update_values": 1
                },
                "FUN_08001530": {
                    "configure_device": 1,
                    "mark_and_convert_data": 1,
                    "set_flag_and_process": 5,
                    "set_flag_and_process_data": 1,
                    "set_flag_and_update": 3,
                    "set_flags_and_check": 1,
                    "set_flags_and_process": 1,
                    "update_and_process_data": 1,
                    "update_flag_and_process": 1,
                    "update_flag_and_process_data": 2,
                    "update_flag_and_values": 1,
                    "update_flags": 1,
                    "update_flags_and_call_functions": 2,
                    "update_flags_and_check": 3,
                    "update_flags_and_execute": 3,
                    "update_flags_and_values": 1,
                    "update_permissions": 1,
                    "update_status": 1,
                    "update_values": 1
                },
                "iVar1": {
                    "error_code": 1,
                    "previous_value": 1,
                    "result": 11,
                    "result1": 8,
                    "return_value": 2,
                    "start": 2,
                    "start_index": 1,
                    "start_value": 3,
                    "temp_var1": 1
                },
                "iVar2": {
                    "comparison": 1,
                    "current_value": 1,
                    "duration": 1,
                    "end": 2,
                    "end_index": 1,
                    "end_value": 2,
                    "interval_difference": 1,
                    "new_value": 1,
                    "result": 1,
                    "result2": 10,
                    "temp": 2,
                    "temp_result": 3,
                    "temp_value": 1,
                    "temp_value3": 1,
                    "temp_var2": 1,
                    "value": 1
                },
                "param_1": {
                    "data": 5,
                    "data_ptr": 2,
                    "device_config": 1,
                    "flag_ptr": 1,
                    "flags": 1,
                    "input_array": 2,
                    "input_data": 1,
                    "input_params": 1,
                    "input_pointer": 4,
                    "input_ptr": 2,
                    "param_array": 1,
                    "pointer_array": 3,
                    "pointer_to_pointer": 4,
                    "ptr_array": 1,
                    "status": 1,
                    "value_ptr": 1
                },
                "param_2": {
                    "condition1": 1,
                    "config_value1": 1,
                    "flag": 2,
                    "flag1": 7,
                    "flag_1": 1,
                    "value": 1,
                    "value1": 15,
                    "value2": 1,
                    "value_1": 1,
                    "value_a": 1
                },
                "param_3": {
                    "condition2": 1,
                    "config_value2": 1,
                    "flag2": 7,
                    "flag_2": 1,
                    "mask": 1,
                    "value": 2,
                    "value2": 15,
                    "value3": 1,
                    "value_2": 1,
                    "value_b": 1
                },
                "param_4": {
                    "condition": 19,
                    "condition_flag": 2,
                    "flag": 5,
                    "flag1": 1,
                    "mode": 1,
                    "option": 1,
                    "param_check": 1,
                    "value4": 1
                },
                "param_5": {
                    "condition2": 1,
                    "flag": 2,
                    "flag2": 1,
                    "length": 1,
                    "param": 15,
                    "param5": 2,
                    "param_5": 3,
                    "param_value": 1,
                    "size": 2,
                    "value": 1,
                    "value3": 1,
                    "value5": 1
                },
                "ppuVar4": {
                    "current_ptr_ptr": 1,
                    "data_ptr": 1,
                    "data_ptr_copy": 1,
                    "data_ptr_ptr": 1,
                    "double_pointer": 2,
                    "flags_pointer": 1,
                    "input_data_ptr": 1,
                    "input_pointer_ptr": 1,
                    "output_pointer": 1,
                    "p_data_ptr": 1,
                    "p_device_config": 1,
                    "pointer2": 1,
                    "pointer_pointer": 1,
                    "pointer_to_pointer": 1,
                    "pointer_to_pointer_original": 1,
                    "pointer_to_pointer_pointer": 1,
                    "ptr_array": 1,
                    "ptr_data": 1,
                    "ptr_ptr": 4,
                    "ptr_ptr_array": 1,
                    "ptr_ptr_value": 1,
                    "status_ptr": 1,
                    "temp_array_ptr": 1,
                    "temp_flag_ptr": 1,
                    "temp_pointer1": 1,
                    "temp_pointer_array": 2
                },
                "puVar3": {
                    "current_array": 1,
                    "current_config": 1,
                    "current_data": 3,
                    "current_data_ptr": 1,
                    "current_element": 1,
                    "current_flag": 1,
                    "current_pointer": 3,
                    "current_ptr": 1,
                    "current_status": 1,
                    "data_value": 1,
                    "pointer": 5,
                    "pointer1": 1,
                    "ptr": 6,
                    "ptr_temp": 1,
                    "ptr_value": 1,
                    "temp_pointer": 2,
                    "temp_ptr": 1
                },
                "uVar5": {
                    "condition1_copy": 1,
                    "flag1_copy": 4,
                    "flag1_value": 1,
                    "flag_1_copy": 1,
                    "flag_value": 1,
                    "new_flag1": 1,
                    "new_value1": 1,
                    "stored_value1": 1,
                    "temp1": 1,
                    "temp_value1": 5,
                    "temp_var3": 1,
                    "u_value1": 1,
                    "val1": 1,
                    "value1": 2,
                    "value1_copy": 2,
                    "value1_original": 1,
                    "value3": 1,
                    "value_a_copy": 1,
                    "value_copy": 1,
                    "value_holder1": 1,
                    "value_temp_1": 1,
                    "var5": 1
                },
                "uVar6": {
                    "condition2_copy": 1,
                    "flag2_copy": 4,
                    "flag2_value": 1,
                    "flag_2_copy": 1,
                    "mask_copy": 1,
                    "new_flag2": 1,
                    "new_value2": 1,
                    "stored_value2": 1,
                    "temp2": 1,
                    "temp_value2": 5,
                    "temp_var4": 1,
                    "u_value2": 1,
                    "val2": 1,
                    "value": 1,
                    "value2": 2,
                    "value2_copy": 2,
                    "value2_original": 1,
                    "value4": 1,
                    "value_b_copy": 1,
                    "value_holder2": 1,
                    "value_temp_2": 1,
                    "var6": 1
                }
            },
            "called": [
                "FUN_080014e2",
                "FUN_0800115c",
                "FUN_08001460"
            ],
            "calling": [
                "FUN_08001828"
            ],
            "code": "\nundefined4 set_flag_and_process_data_08001530(uint **data,uint value1,uint value2,int condition,uint param)\n\n{\n  int result;\n  int result2;\n  uint *ptr;\n  uint **ptr_ptr;\n  uint temp_value1;\n  uint temp_value2;\n  \n  **data = **data | 0x100;\n  ptr_ptr = data;\n  temp_value1 = value1;\n  temp_value2 = value2;\n  result = FUN_0800115c();\n  do {\n    ptr = *data;\n    do {\n      if ((int)(ptr[5] << 0x1f) < 0) {\n        ptr[4] = value1 & 0xfe;\n        result = FUN_08001460(data,0x10002,param,ptr,ptr_ptr,temp_value1,temp_value2);\n        if (result == 0) {\n          result = FUN_080014e2(data,param,(*data)[5],(*data)[6]);\n          if (result == 0) {\n            ptr = *data;\n            if (condition == 1) {\nLAB_080015ca:\n              ptr[4] = value2 & 0xff;\n              return 0;\n            }\n            ptr[4] = value2 >> 8;\n            result = FUN_080014e2(data,param);\n            if (result == 0) {\n              ptr = *data;\n              goto LAB_080015ca;\n            }\n          }\n          if (data[0xe] != (uint *)0x4) {\n            return 3;\n          }\n          **data = **data | 0x200;\n        }\n        else if (data[0xe] != (uint *)0x4) {\n          return 3;\n        }\n        return 1;\n      }\n    } while (param == 0xffffffff);\n    if ((param == 0) || (result2 = FUN_0800115c(), param < (uint)(result2 - result))) {\n      *(undefined *)((int)data + 0x35) = 0x20;\n      *(undefined *)(data + 0xd) = 0;\n      return 3;\n    }\n  } while( true );\n}\n\n",
            "current_name": "set_flag_and_process_data_08001530",
            "entrypoint": "0x08001530",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001530": "set_flag_and_process_data_08001530",
                "iVar1": "result",
                "iVar2": "result2",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "condition",
                "param_5": "param",
                "ppuVar4": "ptr_ptr",
                "puVar3": "ptr",
                "uVar5": "temp_value1",
                "uVar6": "temp_value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080015e8": {
            "additional_data": {
                "FUN_0800115c": {
                    "get_current_time": 1
                },
                "FUN_08001460": {
                    "process_data": 1
                },
                "FUN_080014e2": {
                    "check_flag": 1
                },
                "FUN_080015e8": {
                    "decode_and_process_data": 1,
                    "improved_func": 1,
                    "initialize_and_check_flags": 1,
                    "initialize_flags": 2,
                    "perform_operation": 1,
                    "process_data": 7,
                    "set_flags_and_call_functions": 1,
                    "update_flags_and_execute": 1,
                    "update_flags_and_process_data": 1,
                    "update_flags_and_values": 1,
                    "update_permissions": 1,
                    "update_status": 1
                },
                "iVar1": {
                    "func_result": 1,
                    "result": 21,
                    "result1": 4,
                    "result_1": 3,
                    "return_value": 1,
                    "return_value1": 1
                },
                "iVar2": {
                    "current_result": 1,
                    "current_time": 3,
                    "current_val": 1,
                    "current_value": 1,
                    "elapsed_time": 1,
                    "result2": 4,
                    "result_2": 3,
                    "return_value2": 1,
                    "temp": 3,
                    "temp_result": 9,
                    "temp_return": 1,
                    "temp_var": 2,
                    "time_difference": 1
                },
                "param_1": {
                    "data": 6,
                    "data_pointer": 2,
                    "data_ptr": 2,
                    "flag_pointer": 2,
                    "input_array": 6,
                    "input_list": 1,
                    "input_params": 1,
                    "input_pointer": 2,
                    "input_ptr": 2,
                    "param_array": 4,
                    "param_pointer": 2,
                    "permissions": 1
                },
                "param_2": {
                    "flag": 1,
                    "flag1": 1,
                    "input1": 1,
                    "input_param1": 1,
                    "input_value_1": 2,
                    "mask": 1,
                    "num1": 1,
                    "param1": 1,
                    "param2": 1,
                    "value": 1,
                    "value1": 15,
                    "value_1": 5
                },
                "param_3": {
                    "count": 1,
                    "flag2": 1,
                    "input2": 1,
                    "input_param2": 1,
                    "input_value_2": 2,
                    "num2": 1,
                    "param2": 1,
                    "param3": 1,
                    "size": 1,
                    "value": 1,
                    "value2": 15,
                    "value_2": 5
                },
                "param_4": {
                    "condition": 10,
                    "flag": 13,
                    "flag3": 1,
                    "input_param3": 1,
                    "input_value_3": 2,
                    "mode": 1,
                    "param3": 1,
                    "param4": 2
                },
                "param_5": {
                    "counter": 1,
                    "flag4": 1,
                    "input_param4": 1,
                    "input_value_4": 2,
                    "limit": 6,
                    "param4": 1,
                    "param5": 2,
                    "threshold": 3,
                    "timeout": 13,
                    "value_3": 1
                },
                "ppuVar4": {
                    "array_ptr": 1,
                    "current_pointer": 1,
                    "data_ptr_ptr": 2,
                    "double_ptr": 1,
                    "flag_pointer_ptr": 1,
                    "output_pointer": 1,
                    "param_pointer_copy": 1,
                    "param_ptr": 1,
                    "pointer2": 1,
                    "pointer_of_pointer": 1,
                    "pointer_pointer": 1,
                    "pptr": 1,
                    "ptr_2": 2,
                    "ptr_array": 2,
                    "ptr_flag_pointer": 1,
                    "ptr_input_array_ptr": 1,
                    "ptr_pointer": 1,
                    "ptr_ptr": 4,
                    "ptr_ptr_data": 1,
                    "ptr_to_data": 1,
                    "ptr_to_param_array": 1,
                    "ptrptr": 2,
                    "ptrs": 1,
                    "temp_pointer2": 1
                },
                "puVar3": {
                    "current_data": 1,
                    "current_pointer": 1,
                    "current_ptr": 1,
                    "data": 1,
                    "data_pointer": 1,
                    "flag": 1,
                    "param": 1,
                    "pointer": 3,
                    "pointer1": 1,
                    "ptr": 12,
                    "ptr_1": 2,
                    "ptr_data": 1,
                    "ptr_flag": 1,
                    "ptr_input_array": 1,
                    "ptr_to_value": 1,
                    "ptr_value": 1,
                    "temp_pointer": 1
                },
                "uVar5": {
                    "input1_copy": 1,
                    "original_mask": 1,
                    "param_value1": 1,
                    "sub_value1": 1,
                    "temp1": 4,
                    "temp_1": 2,
                    "temp_flag1": 1,
                    "temp_value1": 5,
                    "temp_value_1": 3,
                    "tmp_value_1": 1,
                    "val1": 2,
                    "val_1": 1,
                    "value1_copy": 1,
                    "value1_temp": 1,
                    "value3": 1,
                    "value_3": 1,
                    "value_a": 1,
                    "var1": 2,
                    "var5": 1
                },
                "uVar6": {
                    "input2_copy": 1,
                    "original_value": 1,
                    "param_value2": 1,
                    "sub_value2": 1,
                    "temp2": 4,
                    "temp_2": 2,
                    "temp_flag2": 1,
                    "temp_value2": 5,
                    "temp_value_2": 3,
                    "tmp_value_2": 1,
                    "val2": 2,
                    "val_2": 1,
                    "value2_copy": 1,
                    "value2_temp": 1,
                    "value4": 1,
                    "value_4": 1,
                    "value_b": 1,
                    "var2": 2,
                    "var6": 1
                }
            },
            "called": [
                "FUN_080014e2",
                "FUN_0800115c",
                "FUN_08001460"
            ],
            "calling": [
                "FUN_08001938"
            ],
            "code": "\nundefined4 update_flags_and_process_data_080015e8(uint **data,uint value1,uint value2,int flag,uint timeout)\n\n{\n  int result;\n  int temp_result;\n  uint *ptr;\n  uint **ptr_ptr;\n  uint temp_value1;\n  uint temp_value2;\n  \n  ptr = *data;\n  *ptr = *ptr | 0x400;\n  *ptr = *ptr | 0x100;\n  ptr_ptr = data;\n  temp_value1 = value1;\n  temp_value2 = value2;\n  result = FUN_0800115c();\nLAB_0800160e:\n  ptr = *data;\n  while (-1 < (int)(ptr[5] << 0x1f)) {\n    if (timeout != 0xffffffff) goto code_r0x08001658;\n  }\n  ptr[4] = value1 & 0xfe;\n  result = FUN_08001460(data,0x10002,timeout,ptr,ptr_ptr,temp_value1,temp_value2);\n  if (result != 0) goto LAB_080016ba;\n  result = FUN_080014e2(data,timeout,(*data)[5],(*data)[6]);\n  if (result == 0) {\n    ptr = *data;\n    if (flag != 1) {\n      ptr[4] = value2 >> 8;\n      result = FUN_080014e2(data,timeout);\n      if (result != 0) goto LAB_08001642;\n      ptr = *data;\n    }\n    ptr[4] = value2 & 0xff;\n    result = FUN_080014e2(data,timeout);\n    if (result == 0) {\n      **data = **data | 0x100;\n      result = FUN_0800115c();\n      do {\n        do {\n          if ((int)((*data)[5] << 0x1f) < 0) {\n            (*data)[4] = value1 & 0xff | 1;\n            result = FUN_08001460(data,0x10002,timeout);\n            if (result == 0) {\n              return 0;\n            }\nLAB_080016ba:\n            if (data[0xe] != (uint *)0x4) {\n              return 3;\n            }\n            return 1;\n          }\n        } while (timeout == 0xffffffff);\n      } while ((timeout != 0) && (temp_result = FUN_0800115c(), (uint)(temp_result - result) <= timeout));\nLAB_0800165a:\n      *(undefined *)((int)data + 0x35) = 0x20;\n      *(undefined *)(data + 0xd) = 0;\n      return 3;\n    }\n  }\nLAB_08001642:\n  if (data[0xe] == (uint *)0x4) {\n    **data = **data | 0x200;\n    return 1;\n  }\n  return 3;\ncode_r0x08001658:\n  if ((timeout == 0) || (temp_result = FUN_0800115c(), timeout < (uint)(temp_result - result)))\n  goto LAB_0800165a;\n  goto LAB_0800160e;\n}\n\n",
            "current_name": "update_flags_and_process_data_080015e8",
            "entrypoint": "0x080015e8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080015e8": "update_flags_and_process_data_080015e8",
                "iVar1": "result",
                "iVar2": "temp_result",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "flag",
                "param_5": "timeout",
                "ppuVar4": "ptr_ptr",
                "puVar3": "ptr",
                "uVar5": "temp_value1",
                "uVar6": "temp_value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080016f4": {
            "additional_data": {
                "FUN_0800115c": {
                    "get_comparison_result": 1,
                    "get_current_time": 3,
                    "get_current_timestamp": 1,
                    "get_updated_value": 1
                },
                "FUN_080016f4": {
                    "check_access_rights": 1,
                    "check_and_adjust_permissions": 1,
                    "check_and_modify_flag": 1,
                    "check_and_modify_flags": 1,
                    "check_and_modify_status": 2,
                    "check_and_process_data": 1,
                    "check_and_update_flag": 1,
                    "check_and_update_flags": 1,
                    "check_flag_status": 1,
                    "check_flag_validity": 1,
                    "check_flags": 1,
                    "check_function": 1,
                    "check_function_validity": 2,
                    "check_input": 1,
                    "check_memory_access": 2,
                    "check_parameter": 1,
                    "check_parameter_validity": 2,
                    "check_status": 1,
                    "check_timer_validity": 1,
                    "execute_task": 1,
                    "process_data": 3,
                    "process_input": 1,
                    "validate_input": 1,
                    "validate_permissions": 1
                },
                "iVar1": {
                    "initial_value": 11,
                    "result1": 1,
                    "start_address": 2,
                    "start_time": 8,
                    "start_timestamp": 1,
                    "start_value": 8
                },
                "iVar2": {
                    "current_address": 2,
                    "current_elem": 1,
                    "current_element": 3,
                    "current_flag": 1,
                    "current_index": 2,
                    "current_item": 1,
                    "current_task": 1,
                    "current_timer": 1,
                    "current_value": 18,
                    "element": 1
                },
                "param_1": {
                    "access_struct": 1,
                    "array": 4,
                    "data": 2,
                    "data_array": 4,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "flag_array": 2,
                    "function_data": 2,
                    "input_array": 5,
                    "memory_access_data": 1,
                    "memory_address": 1,
                    "param_array": 1,
                    "parameter_list": 2,
                    "ptr": 1,
                    "status_array": 1,
                    "task_data": 1,
                    "timer": 1
                },
                "param_2": {
                    "access_length": 1,
                    "array_length": 3,
                    "array_size": 3,
                    "data_length": 1,
                    "data_size": 2,
                    "flag_length": 1,
                    "input_size": 2,
                    "length": 3,
                    "maximum_size": 1,
                    "memory_size": 1,
                    "parameter_size": 1,
                    "size": 7,
                    "size_limit": 1,
                    "time_limit": 2,
                    "timeout": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_0800115c"
            ],
            "calling": [
                "FUN_08001938"
            ],
            "code": "\nundefined4 check_and_process_data_080016f4(int *input_array,uint size)\n\n{\n  int initial_value;\n  int current_value;\n  \n  initial_value = FUN_0800115c();\n  while( true ) {\n    current_value = *input_array;\n    if ((*(uint *)(current_value + 0x14) & 0x40) != 0) {\n      return 0;\n    }\n    if (*(int *)(current_value + 0x14) << 0x1b < 0) break;\n    if ((size == 0) || (current_value = FUN_0800115c(), size < (uint)(current_value - initial_value))) {\n      input_array[0xe] = input_array[0xe] | 0x20;\n      *(undefined *)((int)input_array + 0x35) = 0x20;\n      *(undefined *)(input_array + 0xd) = 0;\n      return 3;\n    }\n  }\n  *(uint *)(current_value + 0x14) = *(uint *)(current_value + 0x14) & 0xffffffef;\n  input_array[0xe] = 0;\n  *(undefined *)(input_array + 0xd) = 0;\n  *(undefined *)((int)input_array + 0x35) = 0x20;\n  return 1;\n}\n\n",
            "current_name": "check_and_process_data_080016f4",
            "entrypoint": "0x080016f4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080016f4": "check_and_process_data_080016f4",
                "iVar1": "initial_value",
                "iVar2": "current_value",
                "param_1": "input_array",
                "param_2": "size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001754": {
            "additional_data": {
                "FUN_08001754": {
                    "convert_integer_to_flags": 1,
                    "initialize_configuration": 1,
                    "initialize_data": 6,
                    "initialize_data_structures": 1,
                    "initialize_param": 3,
                    "initialize_parameters": 10,
                    "initialize_params": 1,
                    "initialize_settings": 1,
                    "process_parameter": 1,
                    "process_params": 2,
                    "update_device_settings": 1,
                    "update_param_values": 1,
                    "update_parameters": 1,
                    "update_params_and_return_status": 1
                },
                "FUN_08002220": {
                    "another_function": 1,
                    "calculate_result": 1,
                    "calculate_value": 5,
                    "get_current_time": 1,
                    "get_execution_time": 1,
                    "get_random_number": 2,
                    "get_timestamp": 8
                },
                "FUN_08004d48": {
                    "do_something": 2,
                    "execute_function": 2,
                    "execute_sub_function": 1,
                    "initialize_device": 1,
                    "initialize_flags": 1,
                    "initialize_function": 1,
                    "initialize_memory": 1,
                    "initialize_settings": 1,
                    "initialize_variable": 1,
                    "modify_param_array": 1,
                    "perform_action": 4,
                    "perform_operation": 1,
                    "perform_task": 1,
                    "some_function": 1,
                    "update_parameter": 1
                },
                "param_1": {
                    "config": 1,
                    "data": 5,
                    "data_structures_ptr": 1,
                    "input_data": 1,
                    "integer_ptr": 1,
                    "param": 2,
                    "param_array": 1,
                    "param_list": 1,
                    "parameter": 1,
                    "parameters": 11,
                    "params": 4,
                    "settings": 2
                },
                "puVar3": {
                    "config_ptr": 1,
                    "data_pointer": 2,
                    "flags_ptr": 1,
                    "param1": 3,
                    "param1_ptr": 2,
                    "param1_var3": 1,
                    "param_array1": 1,
                    "param_pointer": 1,
                    "param_ptr": 1,
                    "param_ptr1": 2,
                    "param_ptr3": 1,
                    "parameters1": 1,
                    "pointer1": 2,
                    "pointer3": 1,
                    "ptr1": 6,
                    "ptr3": 1,
                    "ptr_param1": 1,
                    "setting_ptr": 1,
                    "settings_ptr": 1
                },
                "puVar4": {
                    "config_ptr1": 1,
                    "param1_ptr": 2,
                    "param1_var4": 1,
                    "param2": 3,
                    "param2_pointer": 1,
                    "param2_ptr": 2,
                    "param_array2": 1,
                    "param_ptr1": 1,
                    "param_ptr2": 2,
                    "param_ptr4": 1,
                    "parameters2": 1,
                    "pointer2": 2,
                    "pointer4": 1,
                    "pointer_var1": 1,
                    "ptr1": 1,
                    "ptr2": 6,
                    "ptr4": 1,
                    "ptr_param2": 1,
                    "secondary_data_pointer": 1
                },
                "puVar5": {
                    "another_data_pointer": 1,
                    "config_ptr2": 1,
                    "param1_var5": 1,
                    "param2_ptr": 2,
                    "param3": 3,
                    "param3_pointer": 1,
                    "param3_ptr": 2,
                    "param_array3": 1,
                    "param_ptr2": 1,
                    "param_ptr3": 2,
                    "param_ptr5": 1,
                    "parameters3": 1,
                    "pointer3": 2,
                    "pointer5": 1,
                    "pointer_var2": 1,
                    "ptr2": 1,
                    "ptr3": 6,
                    "ptr5": 1,
                    "ptr_param3": 1
                },
                "uVar1": {
                    "division_result1": 1,
                    "first_part": 1,
                    "first_value": 1,
                    "low_order_bits": 1,
                    "lower32_bits": 1,
                    "lower_bits": 1,
                    "lower_value": 1,
                    "quotient": 4,
                    "quotient1": 1,
                    "result1": 6,
                    "temp1": 5,
                    "upper_bits": 1,
                    "upper_part": 1,
                    "upper_pos": 1,
                    "value1": 2,
                    "var1": 2
                },
                "uVar2": {
                    "division_result2": 1,
                    "high_order_bits": 1,
                    "higher_bits": 1,
                    "lower_bits": 1,
                    "lower_part": 1,
                    "lower_pos": 1,
                    "quotient2": 1,
                    "remainder": 4,
                    "result2": 6,
                    "second_part": 1,
                    "second_value": 1,
                    "temp2": 5,
                    "upper32_bits": 1,
                    "upper_value": 1,
                    "value2": 2,
                    "var2": 2
                },
                "uVar6": {
                    "div_factor": 1,
                    "divided_pos": 1,
                    "divided_value": 2,
                    "dividend": 1,
                    "division_result": 7,
                    "division_result3": 1,
                    "divisor": 3,
                    "quotient3": 1,
                    "result": 1,
                    "scaled_value": 1,
                    "temp": 2,
                    "temp1": 1,
                    "temp3": 4,
                    "temp_value": 1,
                    "value3": 1,
                    "var6": 2
                },
                "uVar7": {
                    "divisor": 1,
                    "func_result": 2,
                    "function_output": 1,
                    "function_result": 7,
                    "result": 15,
                    "result2": 1,
                    "return_value": 1,
                    "temp2": 1,
                    "var7": 1
                }
            },
            "called": [
                "FUN_08004d48",
                "FUN_08002220"
            ],
            "calling": [
                "FUN_0800458c"
            ],
            "code": "\nundefined4 initialize_parameters_08001754(uint **parameters)\n\n{\n  uint result1;\n  uint result2;\n  uint *ptr1;\n  uint *ptr2;\n  uint *ptr3;\n  uint division_result;\n  undefined8 result;\n  \n  if (parameters != (uint **)0x0) {\n    if (*(char *)((int)parameters + 0x35) == '\\0') {\n      *(undefined *)(parameters + 0xd) = 0;\n      FUN_08004d48();\n    }\n    *(undefined *)((int)parameters + 0x35) = 0x24;\n    **parameters = **parameters & 0xfffffffe;\n    result = FUN_08002220();\n    result2 = (uint)((ulonglong)result >> 0x20);\n    result1 = (uint)result;\n    ptr2 = parameters[1];\n    division_result = result1 / 1000000;\n    if ((uint *)0x186a0 < ptr2) {\n      result2 = 300;\n    }\n    ptr1 = *parameters;\n    if ((uint *)0x186a0 < ptr2) {\n      result2 = division_result * result2;\n    }\n    ptr1[1] = division_result;\n    if ((uint *)0x186a0 < ptr2) {\n      division_result = result2 / 1000;\n    }\n    ptr1[8] = division_result + 1;\n    if (ptr2 < (uint *)0x186a1) {\n      result1 = result1 / (uint)((int)ptr2 << 1);\n      if ((result1 & 0xfff) < 4) {\n        result1 = 4;\n      }\n    }\n    else {\n      if (parameters[2] == (uint *)0x0) {\n        result1 = result1 / (uint)((int)ptr2 * 3) | 0x8000;\n      }\n      else {\n        result1 = result1 / (uint)((int)ptr2 * 0x19) | 0xc000;\n      }\n      if ((result1 & 0xfff) == 0) {\n        result1 = 1;\n      }\n    }\n    ptr2 = parameters[8];\n    ptr3 = parameters[7];\n    ptr1[7] = result1;\n    *ptr1 = (uint)ptr3 | (uint)ptr2;\n    ptr1[2] = (uint)parameters[4] | (uint)parameters[3];\n    ptr1[3] = (uint)parameters[5] | (uint)parameters[6];\n    *ptr1 = *ptr1 | 1;\n    parameters[0xe] = (uint *)0x0;\n    *(undefined *)((int)parameters + 0x35) = 0x20;\n    *(undefined *)((int)parameters + 0x36) = 0;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "initialize_parameters_08001754",
            "entrypoint": "0x08001754",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001754": "initialize_parameters_08001754",
                "param_1": "parameters",
                "puVar3": "ptr1",
                "puVar4": "ptr2",
                "puVar5": "ptr3",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar6": "division_result",
                "uVar7": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001828": {
            "additional_data": {
                "FUN_0800115c": {
                    "get_current_count": 1,
                    "get_current_time": 6,
                    "get_index": 1,
                    "get_initial_value": 2,
                    "get_start_time": 1,
                    "get_timer_value": 1
                },
                "FUN_080014e2": {
                    "check_data": 1,
                    "check_data_validity": 1,
                    "process_data": 1,
                    "process_input": 1,
                    "read_data": 1
                },
                "FUN_08001530": {
                    "perform_action": 1,
                    "perform_operation": 2,
                    "process_data": 3,
                    "process_data_block": 1,
                    "process_data_helper": 1,
                    "process_data_inner": 1,
                    "process_input": 1,
                    "process_sub_function": 1,
                    "process_subfunction": 1
                },
                "FUN_08001828": {
                    "analyze_data": 1,
                    "check_input": 2,
                    "decode_data": 1,
                    "parse_data": 1,
                    "parse_input": 1,
                    "process_data": 15,
                    "validate_input": 6
                },
                "LAB_080018e2": {
                    "loop_label": 1,
                    "start_loop": 1
                },
                "class_label": {
                    "class_value": 1
                },
                "iVar1": {
                    "first_call_result": 1,
                    "first_index": 2,
                    "func_result": 1,
                    "initial_value": 3,
                    "result": 8,
                    "result1": 2,
                    "result_1": 1,
                    "start": 1,
                    "start_count": 1,
                    "start_index": 1,
                    "start_time": 3,
                    "start_value": 2,
                    "var1": 5
                },
                "iVar2": {
                    "counter": 1,
                    "current": 1,
                    "current_count": 1,
                    "current_index": 1,
                    "current_time": 3,
                    "current_value": 1,
                    "end_value": 2,
                    "result2": 2,
                    "result_2": 1,
                    "second_call_result": 1,
                    "second_index": 2,
                    "secondary_value": 1,
                    "start_time": 1,
                    "temp": 5,
                    "temp_result": 2,
                    "temp_var": 1,
                    "var2": 5
                },
                "param_1": {
                    "array_ptr": 1,
                    "data": 14,
                    "data_ptr": 4,
                    "input": 1,
                    "input_array": 4,
                    "input_data": 4,
                    "input_ptr": 1,
                    "param_array": 1
                },
                "param_2": {
                    "arg1": 4,
                    "arg2": 1,
                    "input_param2": 1,
                    "param1": 6,
                    "param2": 4,
                    "param_2": 8,
                    "param_a": 1,
                    "param_size": 1,
                    "size": 1,
                    "value1": 2,
                    "value_1": 2
                },
                "param_3": {
                    "arg2": 4,
                    "arg3": 1,
                    "input_param3": 1,
                    "param2": 6,
                    "param3": 4,
                    "param_3": 8,
                    "param_addr": 1,
                    "param_b": 1,
                    "value1": 1,
                    "value2": 2,
                    "value_2": 2
                },
                "param_4": {
                    "arg3": 4,
                    "arg4": 1,
                    "input_param4": 1,
                    "param3": 6,
                    "param4": 4,
                    "param_4": 8,
                    "param_c": 1,
                    "param_val": 1,
                    "value2": 1,
                    "value3": 2,
                    "value_3": 2
                },
                "param_5": {
                    "array": 1,
                    "buffer": 7,
                    "byte_arr": 1,
                    "byte_array": 4,
                    "byte_data": 1,
                    "byte_ptr": 2,
                    "bytes": 2,
                    "data": 3,
                    "data_ptr": 1,
                    "input_bytes": 4,
                    "input_data": 5
                },
                "param_6": {
                    "array_length": 2,
                    "array_size": 1,
                    "buffer_length": 2,
                    "buffer_size": 3,
                    "byte_array_length": 1,
                    "byte_count": 9,
                    "data_length": 5,
                    "data_size": 1,
                    "input_length": 3,
                    "length": 3,
                    "num_bytes": 1
                },
                "param_7": {
                    "arg4": 4,
                    "arg7": 1,
                    "input_param7": 1,
                    "param4": 6,
                    "param7": 5,
                    "param_7": 8,
                    "param_d": 1,
                    "param_flag": 1,
                    "value4": 2,
                    "value_4": 2
                },
                "puVar3": {
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "param1_data": 1,
                    "pointer": 2,
                    "ptr": 17,
                    "ptr3": 1,
                    "ptr_data": 3,
                    "temp_pointer": 1,
                    "temp_ptr": 3,
                    "var_ptr": 1
                },
                "uVar4": {
                    "data_value": 2,
                    "temp": 2,
                    "temp_val": 1,
                    "temp_value": 3,
                    "temp_var": 5,
                    "value": 12,
                    "var3": 2,
                    "var4": 2,
                    "var_1": 1,
                    "var_value": 1
                }
            },
            "called": [
                "FUN_080014e2",
                "FUN_0800115c",
                "FUN_08001530"
            ],
            "calling": [
                "FUN_0800403c"
            ],
            "code": "\nundefined4\nprocess_data_08001828(uint **data,undefined4 param_2,undefined4 param_3,undefined4 param_4,byte *buffer,\n            short byte_count,undefined4 param_7)\n\n{\n  int result;\n  int var2;\n  uint *ptr;\n  uint value;\n  \n  if (*(char *)((int)data + 0x35) == ' ') {\n    if (buffer == (byte *)0x0) {\n      return 1;\n    }\n    if (byte_count == 0) {\n      return 1;\n    }\n    result = FUN_0800115c();\n    do {\n      ptr = *data;\n      if ((~ptr[6] & 2) != 0) {\n        if (*(char *)(data + 0xd) == '\\x01') {\n          return 2;\n        }\n        value = *ptr;\n        *(undefined *)(data + 0xd) = 1;\n        *ptr = value & 0xfffff7ff;\n        *(undefined *)((int)data + 0x35) = 0x21;\n        *(undefined *)((int)data + 0x36) = 0x40;\n        data[0xe] = (uint *)0x0;\n        result = FUN_08001530(data,param_2,param_3,param_4,param_7);\n        if (result != 0) {\n          *(undefined *)(data + 0xd) = 0;\n          if (data[0xe] == (uint *)0x4) {\n            return 1;\n          }\n          return 3;\n        }\n        goto loop_label;\n      }\n      var2 = FUN_0800115c();\n    } while ((uint)(var2 - result) < 0x2711);\n    *(undefined *)(data + 0xd) = 0;\n    *(undefined *)((int)data + 0x35) = 0x20;\n  }\n  return 2;\n  while (byte_count != 0) {\nloop_label:\n    result = FUN_080014e2(data,param_7);\n    if (result != 0) goto LAB_080018ee;\n    ptr = *data;\n    ptr[4] = (uint)*buffer;\n    if ((int)(ptr[5] << 0x1d) < 0) {\n      if ((short)(byte_count + -1) == 0) break;\n      byte_count = byte_count + -2;\n      ptr[4] = (uint)buffer[1];\n      buffer = buffer + 2;\n    }\n    else {\n      buffer = buffer + 1;\n      byte_count = byte_count + -1;\n    }\n  }\n  result = FUN_080014e2(data,param_7);\n  if (result == 0) {\n    **data = **data | 0x200;\n    *(undefined *)(data + 0xd) = 0;\n    *(undefined *)((int)data + 0x35) = 0x20;\n    *(undefined *)((int)data + 0x36) = 0;\n    return 0;\n  }\nLAB_080018ee:\n  if (data[0xe] == (uint *)0x4) {\n    **data = **data | 0x200;\n    return 1;\n  }\n  return 3;\n}\n\n",
            "current_name": "process_data_08001828",
            "entrypoint": "0x08001828",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001828": "process_data_08001828",
                "LAB_080018e2": "loop_label",
                "iVar1": "result",
                "iVar2": "var2",
                "param_1": "data",
                "param_5": "buffer",
                "param_6": "byte_count",
                "puVar3": "ptr",
                "uVar4": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001938": {
            "additional_data": {
                "FUN_0800115c": {
                    "get_timestamp": 1
                },
                "FUN_080015e8": {
                    "perform_operation": 1
                },
                "FUN_080016f4": {
                    "wait_for_completion": 1
                },
                "FUN_08001938": {
                    "check_and_process_data": 1,
                    "check_input_validity": 1,
                    "execute_operation": 2,
                    "execute_task": 1,
                    "process_binary": 1,
                    "process_data": 21
                },
                "bVar7": {
                    "bool_var": 1,
                    "bool_var7": 1,
                    "boolean_var": 1,
                    "condition": 7,
                    "flag": 10,
                    "flag1": 1,
                    "flag2": 1,
                    "is_negative": 5,
                    "is_positive": 1,
                    "is_true": 1,
                    "temp_var7": 1,
                    "var7": 1
                },
                "disableIRQinterrupts": {
                    "disable_interrupts": 1
                },
                "enableIRQinterrupts": {
                    "enable_interrupts": 1
                },
                "iVar2": {
                    "count1": 1,
                    "counter1": 3,
                    "counter_1": 1,
                    "current_time": 1,
                    "interval": 1,
                    "interval1": 1,
                    "start": 2,
                    "start_time": 16,
                    "temp_var2": 1,
                    "var1": 2,
                    "var2": 2
                },
                "iVar3": {
                    "count2": 1,
                    "counter2": 3,
                    "counter_2": 1,
                    "curr_time": 1,
                    "current": 2,
                    "current_time": 15,
                    "interval2": 1,
                    "new_interval": 1,
                    "previous_time": 1,
                    "temp_var3": 1,
                    "var2": 2,
                    "var3": 2
                },
                "param_1": {
                    "binary_data": 1,
                    "data": 20,
                    "data_pointer": 2,
                    "input": 1,
                    "input_parameters": 1,
                    "operation_params": 1,
                    "param_array": 1,
                    "parameter_array": 2,
                    "state": 1,
                    "task_params": 1
                },
                "param_2": {
                    "arg1": 3,
                    "input1": 1,
                    "param1": 7,
                    "param2": 12,
                    "param_2": 1,
                    "param_a": 1,
                    "size": 1,
                    "val1": 2,
                    "value1": 2,
                    "var2": 1
                },
                "param_3": {
                    "arg2": 3,
                    "count": 1,
                    "input2": 1,
                    "param2": 7,
                    "param3": 12,
                    "param_3": 1,
                    "param_b": 1,
                    "val2": 2,
                    "value2": 2,
                    "var3": 1
                },
                "param_4": {
                    "arg3": 3,
                    "input3": 1,
                    "param3": 7,
                    "param4": 12,
                    "param_4": 1,
                    "param_c": 1,
                    "val3": 2,
                    "value3": 2,
                    "var4": 1,
                    "var_10": 1
                },
                "param_5": {
                    "buffer": 13,
                    "data_pointer": 1,
                    "output": 7,
                    "output_buffer": 1,
                    "output_str": 1,
                    "param4": 1,
                    "param5": 2,
                    "param_data": 1,
                    "ptr1": 1,
                    "result": 2,
                    "user_input": 1
                },
                "param_6": {
                    "buffer_size": 1,
                    "count": 2,
                    "data_length": 1,
                    "flag": 1,
                    "input_length": 1,
                    "length": 15,
                    "num_iterations": 1,
                    "output_str_size": 1,
                    "param5": 1,
                    "param6": 1,
                    "param_count": 1,
                    "size": 5
                },
                "param_7": {
                    "delay": 1,
                    "param6": 1,
                    "param7": 1,
                    "param_limit": 1,
                    "time_threshold": 1,
                    "timeout": 24,
                    "var7": 1,
                    "wait_time": 1
                },
                "puVar1": {
                    "pointer1": 2,
                    "pointer_var1": 1,
                    "ptr": 4,
                    "ptr1": 18,
                    "ptr2": 1,
                    "temp1": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 1,
                    "temp_var1": 1,
                    "var1": 1
                },
                "puVar4": {
                    "current_state": 1,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "pointer2": 2,
                    "pointer_var": 1,
                    "pointer_var4": 1,
                    "ptr2": 16,
                    "ptr3": 1,
                    "ptr4": 1,
                    "ptr_data": 2,
                    "temp_var": 1,
                    "temp_var4": 1,
                    "var4": 1
                },
                "puVar6": {
                    "buffer_pointer": 1,
                    "buffer_ptr": 1,
                    "current_result": 1,
                    "pointer3": 2,
                    "pointer_var2": 1,
                    "pointer_var6": 1,
                    "ptr3": 16,
                    "ptr4": 1,
                    "ptr6": 1,
                    "ptr_buffer": 1,
                    "temp2": 1,
                    "temp_ptr": 1,
                    "temp_ptr2": 1,
                    "temp_var6": 1,
                    "var6": 1
                },
                "uVar5": {
                    "current_value": 1,
                    "temp": 1,
                    "temp_var5": 1,
                    "value": 16,
                    "value1": 1,
                    "var1": 4,
                    "var3": 2,
                    "var5": 4,
                    "variable_1": 1
                }
            },
            "called": [
                "FUN_080015e8",
                "FUN_0800115c",
                "FUN_080016f4"
            ],
            "calling": [
                "FUN_080040b8",
                "FUN_0800407c"
            ],
            "code": "\nundefined4\ncheck_and_process_data_08001938(uint **data,undefined4 param2,undefined4 param3,undefined4 param4,\n            undefined *buffer,ushort length,uint timeout)\n\n{\n  undefined *ptr1;\n  int start_time;\n  int current_time;\n  uint *ptr2;\n  uint value;\n  undefined *ptr3;\n  bool flag;\n  \n  if (*(char *)((int)data + 0x35) != ' ') {\n    return 2;\n  }\n  if (buffer == (undefined *)0x0) {\n    return 1;\n  }\n  if (length == 0) {\n    return 1;\n  }\n  start_time = FUN_0800115c();\n  while (ptr2 = *data, (~ptr2[6] & 2) == 0) {\n    current_time = FUN_0800115c();\n    if (10000 < (uint)(current_time - start_time)) {\n      *(undefined *)(data + 0xd) = 0;\n      *(undefined *)((int)data + 0x35) = 0x20;\n      return 2;\n    }\n  }\n  if (*(char *)(data + 0xd) == '\\x01') {\n    return 2;\n  }\n  value = *ptr2;\n  *(undefined *)(data + 0xd) = 1;\n  *ptr2 = value & 0xfffff7ff;\n  *(undefined *)((int)data + 0x35) = 0x22;\n  *(undefined *)((int)data + 0x36) = 0x40;\n  data[0xe] = (uint *)0x0;\n  start_time = FUN_080015e8(data,param2,param3,param4,timeout);\n  if (start_time != 0) {\n    *(undefined *)(data + 0xd) = 0;\n    if (data[0xe] == (uint *)0x4) {\n      return 1;\n    }\n    return 3;\n  }\n  ptr2 = *data;\n  value = *ptr2;\n  if (length == 1) {\n    *ptr2 = value & 0xfffffbff;\n    disable_interrupts();\n    **data = **data | 0x200;\n    enable_interrupts();\n    start_time = FUN_080016f4(data,timeout);\n    if (start_time == 0) {\n      *buffer = (char)(*data)[4];\nLAB_08001ab8:\n      *(undefined *)((int)data + 0x35) = 0x20;\n      *(undefined *)((int)data + 0x36) = 0;\n      *(undefined *)(data + 0xd) = 0;\n      return 0;\n    }\nLAB_08001a18:\n    if (data[0xe] != (uint *)0x20) {\n      return 1;\n    }\n    return 3;\n  }\n  if (length == 2) {\n    *ptr2 = value | 0x800;\n    disable_interrupts();\n    **data = **data & 0xfffffbff;\n    enable_interrupts();\n  }\n  else {\n    *ptr2 = value | 0x400;\n    while (3 < length) {\n      start_time = FUN_080016f4(data,timeout);\n      if (start_time != 0) goto LAB_08001a18;\n      *buffer = (char)(*data)[4];\n      ptr2 = *data;\n      flag = (int)(ptr2[5] << 0x1d) < 0;\n      if (flag) {\n        ptr2 = (uint *)ptr2[4];\n        ptr3 = buffer + 2;\n        length = length - 2;\n      }\n      else {\n        ptr3 = buffer + 1;\n        length = length - 1;\n      }\n      ptr1 = buffer + 1;\n      buffer = ptr3;\n      if (flag) {\n        *ptr1 = (char)ptr2;\n      }\n    }\n    if (length != 2) {\n      start_time = FUN_0800115c();\n      do {\n        ptr2 = *data;\n        do {\n          if ((int)(ptr2[5] << 0x1d) < 0) {\n            *ptr2 = *ptr2 & 0xfffffbff;\n            disable_interrupts();\n            *buffer = (char)(*data)[4];\n            start_time = FUN_0800115c();\n            goto LAB_08001b3a;\n          }\n        } while (timeout == 0xffffffff);\n      } while ((timeout != 0) && (current_time = FUN_0800115c(), (uint)(current_time - start_time) <= timeout));\n      goto LAB_08001afa;\n    }\n  }\n  start_time = FUN_0800115c();\n  do {\n    do {\n      if ((int)((*data)[5] << 0x1d) < 0) {\n        disable_interrupts();\n        ptr2 = *data;\n        *ptr2 = *ptr2 | 0x200;\n        *buffer = (char)ptr2[4];\n        enable_interrupts();\n        buffer[1] = (char)(*data)[4];\n        goto LAB_08001ab8;\n      }\n    } while (timeout == 0xffffffff);\n  } while ((timeout != 0) && (current_time = FUN_0800115c(), (uint)(current_time - start_time) <= timeout));\nLAB_08001afa:\n  *(undefined *)((int)data + 0x35) = 0x20;\n  *(undefined *)(data + 0xd) = 0;\n  return 3;\nLAB_08001b3a:\n  do {\n    ptr2 = *data;\n    do {\n      if ((int)(ptr2[5] << 0x1d) < 0) {\n        *ptr2 = *ptr2 | 0x200;\n        buffer[1] = (char)ptr2[4];\n        enable_interrupts();\n        buffer[2] = (char)(*data)[4];\n        goto LAB_08001ab8;\n      }\n    } while (timeout == 0xffffffff);\n  } while ((timeout != 0) && (current_time = FUN_0800115c(), (uint)(current_time - start_time) <= timeout));\n  goto LAB_08001afa;\n}\n\n",
            "current_name": "check_and_process_data_08001938",
            "entrypoint": "0x08001938",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001938": "check_and_process_data_08001938",
                "bVar7": "flag",
                "disableIRQinterrupts": "disable_interrupts",
                "enableIRQinterrupts": "enable_interrupts",
                "iVar2": "start_time",
                "iVar3": "current_time",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "buffer",
                "param_6": "length",
                "param_7": "timeout",
                "puVar1": "ptr1",
                "puVar4": "ptr2",
                "puVar6": "ptr3",
                "uVar5": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001b58": {
            "additional_data": {
                "FUNC_08001168": {
                    "initialize_configuration": 1
                },
                "FUN_0800115c": {
                    "get_current_time": 1,
                    "get_time": 2
                },
                "FUN_08001b58": {
                    "analyze_data": 1,
                    "check_and_update_configuration": 1,
                    "check_conditions": 7,
                    "check_configuration": 2,
                    "check_flags": 4,
                    "check_flags_and_conditions": 1,
                    "check_flags_and_parameters": 1,
                    "check_hardware_settings": 1,
                    "check_inputs": 1,
                    "check_status": 1,
                    "improved_code": 1,
                    "process_data": 2
                },
                "LAB_08001c1e": {
                    "label1": 1
                },
                "_DAT_40007000": {
                    "another_device_setting3": 1,
                    "flag4": 1,
                    "hardware_register_5": 1
                },
                "_DAT_40021000": {
                    "device_settings": 1,
                    "flag2": 1,
                    "hardware_register_2": 1
                },
                "_DAT_40021004": {
                    "device_flags": 1,
                    "flag1": 1,
                    "hardware_register_1": 1
                },
                "_DAT_4002101c": {
                    "another_device_setting2": 1,
                    "hardware_register_4": 1
                },
                "_DAT_40021020": {
                    "flag5": 1
                },
                "_DAT_40021024": {
                    "another_device_setting": 1,
                    "flag3": 1,
                    "hardware_register_3": 1
                },
                "iRam42420000": {
                    "another_variable1": 1,
                    "global_variable_1": 1,
                    "ram_var1": 1
                },
                "iRam42420480": {
                    "another_variable2": 1,
                    "global_variable_2": 1,
                    "ram_var2": 1
                },
                "iVar1": {
                    "count1": 2,
                    "index": 1,
                    "temp1": 3,
                    "temp_var1": 9,
                    "temp_variable_1": 3,
                    "value": 1,
                    "value1": 7,
                    "value_1": 1,
                    "var1": 2,
                    "variable1": 1,
                    "variable_1": 1
                },
                "iVar2": {
                    "count2": 2,
                    "next_index": 1,
                    "prev_value": 1,
                    "temp2": 3,
                    "temp_var2": 9,
                    "temp_variable_2": 3,
                    "value2": 7,
                    "value_2": 1,
                    "var2": 2,
                    "variable2": 1,
                    "variable_2": 1
                },
                "param_1": {
                    "arguments": 1,
                    "config": 1,
                    "configuration": 1,
                    "data": 2,
                    "flags": 4,
                    "flags_array": 1,
                    "hardware_settings": 1,
                    "input": 1,
                    "input_array": 4,
                    "input_data": 1,
                    "input_parameters": 1,
                    "input_params": 1,
                    "inputs": 3,
                    "parameter_array": 1,
                    "parameters": 5,
                    "params": 1,
                    "status_array": 1
                },
                "uRam42420060": {
                    "global_variable_3": 1,
                    "ram_var3": 1,
                    "some_variable": 1
                }
            },
            "called": [
                "FUN_08001168",
                "FUN_0800115c"
            ],
            "calling": [
                "FUN_08004514"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08001eec) */\n/* WARNING: Removing unreachable block (ram,0x08001ee8) */\n\n\nundefined4 check_flags_and_conditions_08001b58(int *parameters)\n\n{\n  int temp_var1;\n  int temp_var2;\n  \n  if (*parameters << 0x1f < 0) {\n    if (((_DAT_40021004 & 0xc) == 4) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((int)(_DAT_40021004 << 0xf) < 0)))) {\n      if (((int)((_DAT_40021000 >> 0x11) << 0x1f) < 0) && (parameters[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      temp_var1 = parameters[1];\n      if (temp_var1 == 0x10000) {\nlabel1:\n        _DAT_40021000 = _DAT_40021000 | 0x10000;\n      }\n      else {\n        if (temp_var1 == 0) {\n          _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n          temp_var1 = FUN_0800115c();\n          while ((int)((_DAT_40021000 >> 0x11) << 0x1f) < 0) {\n            temp_var2 = FUN_0800115c();\n            if (100 < (uint)(temp_var2 - temp_var1)) {\n              return 3;\n            }\n          }\n          goto LAB_08001b64;\n        }\n        if (temp_var1 == 0x50000) {\n          _DAT_40021000 = _DAT_40021000 | 0x40000;\n          goto label1;\n        }\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      temp_var1 = FUN_0800115c();\n      while (-1 < (int)((_DAT_40021000 >> 0x11) << 0x1f)) {\n        temp_var2 = FUN_0800115c();\n        if (100 < (uint)(temp_var2 - temp_var1)) {\n          return 3;\n        }\n      }\n    }\n  }\nLAB_08001b64:\n  if (*parameters << 0x1e < 0) {\n    if (((_DAT_40021004 & 0xc) == 0) ||\n       (((_DAT_40021004 & 0xc) == 8 && (-1 < (int)(_DAT_40021004 << 0xf))))) {\n      if (((int)((_DAT_40021000 >> 1) << 0x1f) < 0) && (parameters[4] != 1)) {\n        return 1;\n      }\n    }\n    else {\n      another_variable1 = parameters[4];\n      if (another_variable1 == 0) {\n        temp_var1 = FUN_0800115c();\n        while ((int)((_DAT_40021000 >> 1) << 0x1f) < 0) {\n          temp_var2 = FUN_0800115c();\n          if (2 < (uint)(temp_var2 - temp_var1)) {\n            return 3;\n          }\n        }\n        goto LAB_08001b6c;\n      }\n      another_variable1 = 1;\n      temp_var1 = FUN_0800115c();\n      while (-1 < (int)((_DAT_40021000 >> 1) << 0x1f)) {\n        temp_var2 = FUN_0800115c();\n        if (2 < (uint)(temp_var2 - temp_var1)) {\n          return 3;\n        }\n      }\n    }\n    _DAT_40021000 = parameters[5] << 3 | _DAT_40021000 & 0xffffff07;\n  }\nLAB_08001b6c:\n  if (*parameters << 0x1c < 0) {\n    another_variable2 = parameters[6];\n    if (another_variable2 == 0) {\n      temp_var1 = FUN_0800115c();\n      while ((int)((_DAT_40021024 >> 1) << 0x1f) < 0) {\n        temp_var2 = FUN_0800115c();\n        if (2 < (uint)(temp_var2 - temp_var1)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      another_variable2 = 1;\n      temp_var1 = FUN_0800115c();\n      while (-1 < (int)((_DAT_40021024 >> 1) << 0x1f)) {\n        temp_var2 = FUN_0800115c();\n        if (2 < (uint)(temp_var2 - temp_var1)) {\n          return 3;\n        }\n      }\n      FUNC_08001168(1);\n    }\n  }\n  if (-1 < *parameters << 0x1d) goto LAB_08001bc2;\n  _DAT_4002101c = _DAT_4002101c | 0x10000000;\n  _DAT_40007000 = _DAT_40007000 | 0x100;\n  temp_var1 = FUN_0800115c();\n  while (-1 < (int)(_DAT_40007000 << 0x17)) {\n    temp_var2 = FUN_0800115c();\n    if (100 < (uint)(temp_var2 - temp_var1)) {\n      return 3;\n    }\n  }\n  temp_var1 = parameters[3];\n  if (temp_var1 == 1) {\nLAB_08001e1a:\n    _DAT_40021020 = _DAT_40021020 | 1;\n  }\n  else {\n    if (temp_var1 == 0) {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n      temp_var1 = FUN_0800115c();\n      while ((int)((_DAT_40021020 >> 1) << 0x1f) < 0) {\n        temp_var2 = FUN_0800115c();\n        if (5000 < (uint)(temp_var2 - temp_var1)) {\n          return 3;\n        }\n      }\n      goto LAB_08001bc2;\n    }\n    if (temp_var1 == 5) {\n      _DAT_40021020 = _DAT_40021020 | 4;\n      goto LAB_08001e1a;\n    }\n    _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n  }\n  temp_var1 = FUN_0800115c();\n  while (-1 < (int)((_DAT_40021020 >> 1) << 0x1f)) {\n    temp_var2 = FUN_0800115c();\n    if (5000 < (uint)(temp_var2 - temp_var1)) {\n      return 3;\n    }\n  }\nLAB_08001bc2:\n  if (parameters[7] == 0) {\n    return 0;\n  }\n  if ((_DAT_40021004 & 0xc) != 8) {\n    if (parameters[7] != 2) {\n      global_variable_3 = 0;\n      temp_var1 = FUN_0800115c();\n      do {\n        if (-1 < (int)((_DAT_40021000 >> 0x19) << 0x1f)) {\n          return 0;\n        }\n        temp_var2 = FUN_0800115c();\n      } while ((uint)(temp_var2 - temp_var1) < 3);\n      return 3;\n    }\n    global_variable_3 = 0;\n    temp_var1 = FUN_0800115c();\n    do {\n      if (-1 < (int)((_DAT_40021000 >> 0x19) << 0x1f)) {\n        if (parameters[8] == 0x10000) {\n          _DAT_40021004 = _DAT_40021004 & 0xfffdffff | parameters[2];\n        }\n        _DAT_40021004 = parameters[8] | parameters[9] | _DAT_40021004 & 0xffc2ffff;\n        global_variable_3 = 1;\n        temp_var1 = FUN_0800115c();\n        do {\n          if ((int)((_DAT_40021000 >> 0x19) << 0x1f) < 0) {\n            return 0;\n          }\n          temp_var2 = FUN_0800115c();\n        } while ((uint)(temp_var2 - temp_var1) < 3);\n        return 3;\n      }\n      temp_var2 = FUN_0800115c();\n    } while ((uint)(temp_var2 - temp_var1) < 3);\n    return 3;\n  }\n  return 1;\n}\n\n",
            "current_name": "check_flags_and_conditions_08001b58",
            "entrypoint": "0x08001b58",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001b58": "check_flags_and_conditions_08001b58",
                "LAB_08001c1e": "label1",
                "iRam42420000": "another_variable1",
                "iRam42420480": "another_variable2",
                "iVar1": "temp_var1",
                "iVar2": "temp_var2",
                "param_1": "parameters",
                "uRam42420060": "global_variable_3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002008": {
            "additional_data": {
                "FUN_08002008": {
                    "calculate_clock_frequency": 11,
                    "calculate_mpu9250_clk": 1,
                    "calculate_mpu9250_clock": 4,
                    "calculate_mpu9250_clock_frequency": 4,
                    "calculate_mpu9250_clock_speed": 2,
                    "calculate_mpu_clock": 1,
                    "calculate_mpu_clock_speed": 1,
                    "calculate_mpu_sampling_rate": 1,
                    "get_mpu9250_clock_frequency": 1,
                    "get_mpu9250_clock_speed": 1,
                    "get_mpu9250_frequency": 1,
                    "get_mpu9250_sampling_rate": 1,
                    "get_mpu_sample_rate": 1,
                    "get_sampling_rate": 1
                },
                "iVar2": {
                    "clk_value": 1,
                    "clock_frequency": 8,
                    "clock_speed": 1,
                    "clock_value": 1,
                    "frequency": 1,
                    "mpu_clock": 1,
                    "result": 16,
                    "sample_rate": 1
                },
                "local_20": {
                    "address_array": 1,
                    "clock_configuration": 1,
                    "clock_data": 1,
                    "clock_prescaler_table": 1,
                    "clock_values": 1,
                    "config_array": 2,
                    "config_values": 1,
                    "data_array": 3,
                    "file_names": 1,
                    "file_paths": 1,
                    "input": 1,
                    "input_array": 2,
                    "local_array": 1,
                    "mpu9250_clock_data": 1,
                    "mpu9250_config_data": 1,
                    "mpu_config": 1,
                    "output_values": 1,
                    "register_settings": 1,
                    "register_values": 5,
                    "registers": 2,
                    "source_array": 1,
                    "source_file": 1
                },
                "local_24": {
                    "byte_array": 1,
                    "clock_bytes": 1,
                    "clock_config": 3,
                    "clock_configuration": 1,
                    "clock_divider": 1,
                    "clock_options": 1,
                    "clock_settings": 2,
                    "clock_speed_array": 1,
                    "clock_speed_data": 1,
                    "config_values": 1,
                    "configuration": 1,
                    "configured_settings": 1,
                    "data_buffer": 1,
                    "divider_array": 1,
                    "flag_array": 1,
                    "flags": 2,
                    "frequency": 1,
                    "input_config": 1,
                    "input_data": 1,
                    "input_values": 1,
                    "multiplier_array": 1,
                    "output": 1,
                    "output_array": 1,
                    "result_array": 1,
                    "sample_rates": 1,
                    "sampling_rates": 1,
                    "selected_modes": 1
                },
                "puVar4": {
                    "clock_config_ptr": 1,
                    "clock_path_ptr": 1,
                    "config_data_ptr": 1,
                    "config_ptr": 1,
                    "data_pointer": 4,
                    "file_path": 1,
                    "file_paths_ptr": 1,
                    "file_pointer": 1,
                    "file_ptr": 1,
                    "file_ptr1": 1,
                    "input_array": 1,
                    "pointer1": 2,
                    "pointer_to_config": 1,
                    "ptr_data": 1,
                    "ptr_settings_source": 1,
                    "ptr_to_data": 1,
                    "register_pointer": 3,
                    "register_ptr": 1,
                    "source": 1,
                    "source_data_pointer": 1,
                    "source_pointer": 3,
                    "source_ptr": 1
                },
                "puVar6": {
                    "array_ptr": 1,
                    "buffer_pointer": 1,
                    "clock_configuration_ptr": 1,
                    "clock_values_ptr": 1,
                    "config_data_ptr": 1,
                    "config_dest_ptr": 1,
                    "destination": 1,
                    "destination_array": 1,
                    "destination_data_pointer": 1,
                    "destination_pointer": 3,
                    "destination_ptr": 1,
                    "destination_register_pointer": 1,
                    "file_ptr2": 1,
                    "local_array_pointer": 1,
                    "new_array_pointer": 1,
                    "new_file_paths_ptr": 1,
                    "output_array": 1,
                    "output_pointer": 1,
                    "pointer2": 2,
                    "pointer_to_array": 1,
                    "ptr_local_data": 1,
                    "ptr_settings_destination": 1,
                    "ptr_to_clock_data": 1,
                    "register_pointer": 1,
                    "register_pointer2": 1,
                    "target_pointer": 1,
                    "value_ptr": 1
                },
                "uVar1": {
                    "clock_config_value": 1,
                    "clock_value1": 1,
                    "config1": 1,
                    "config_val1": 1,
                    "current_value": 2,
                    "data_value1": 1,
                    "file_path1": 1,
                    "first_register_value": 1,
                    "first_value": 4,
                    "reg_value1": 1,
                    "register_value1": 3,
                    "temp1": 1,
                    "temp_value1": 3,
                    "temp_var1": 1,
                    "value1": 8
                },
                "uVar3": {
                    "clock_config_value2": 1,
                    "clock_value2": 1,
                    "config2": 1,
                    "config_val2": 1,
                    "data_value2": 1,
                    "file_path2": 1,
                    "next_value": 2,
                    "reg_value2": 1,
                    "register_value2": 3,
                    "second_register_value": 1,
                    "second_value": 4,
                    "temp2": 1,
                    "temp_value2": 3,
                    "temp_var2": 1,
                    "value2": 8
                },
                "uVar5": {
                    "clk_rate": 1,
                    "clock_divider": 2,
                    "clock_divisor": 1,
                    "clock_freq": 1,
                    "clock_frequency": 9,
                    "clock_multiplier": 1,
                    "clock_speed": 3,
                    "divider": 3,
                    "divisor": 2,
                    "frequency": 1,
                    "multiplier": 1,
                    "sampling_rate": 3,
                    "target_clk": 1,
                    "temp_var3": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800209c"
            ],
            "code": "\n\n\nint calculate_mpu9250_clock_frequency_08002008(void)\n\n{\n  undefined4 value1;\n  int result;\n  undefined4 value2;\n  undefined4 *data_pointer;\n  uint clock_frequency;\n  undefined4 *destination_pointer;\n  byte clock_config [4];\n  undefined4 register_values [5];\n  \n  data_pointer = &DAT_080072f0;\n  destination_pointer = register_values;\n  do {\n    value1 = *data_pointer;\n    value2 = data_pointer[1];\n    data_pointer = data_pointer + 2;\n    *destination_pointer = value1;\n    destination_pointer[1] = value2;\n    destination_pointer = destination_pointer + 2;\n  } while (data_pointer != (undefined4 *)\"../Src/MPU9250.c\");\n  clock_config[0] = 1;\n  clock_config[1] = 2;\n  if ((_DAT_40021004 & 0xc) == 8) {\n    if ((int)(_DAT_40021004 << 0xf) < 0) {\n      clock_frequency = 8000000 / clock_config[(_DAT_40021004 & 0x20000) >> 0x11];\n    }\n    else {\n      clock_frequency = 4000000;\n    }\n    result = clock_frequency * *(byte *)((int)register_values + ((_DAT_40021004 & 0x3c0000) >> 0x12));\n  }\n  else {\n    result = 8000000;\n  }\n  return result;\n}\n\n",
            "current_name": "calculate_mpu9250_clock_frequency_08002008",
            "entrypoint": "0x08002008",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002008": "calculate_mpu9250_clock_frequency_08002008",
                "iVar2": "result",
                "local_20": "register_values",
                "local_24": "clock_config",
                "puVar4": "data_pointer",
                "puVar6": "destination_pointer",
                "uVar1": "value1",
                "uVar3": "value2",
                "uVar5": "clock_frequency"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800209c": {
            "additional_data": {
                "DAT_08007361": {
                    "lookup_table": 1
                },
                "DAT_200001bc": {
                    "data": 1,
                    "data_value": 1,
                    "output_data": 1,
                    "result": 1,
                    "updated_value": 1
                },
                "DAT_40021000": {
                    "config_register": 1
                },
                "DAT_40021004": {
                    "control_register": 1
                },
                "DAT_40022000": {
                    "constant1": 1,
                    "constant_value": 1
                },
                "FUN_08001104": {
                    "initialize": 1,
                    "perform_operation": 3,
                    "perform_some_operation": 1,
                    "print_message": 1
                },
                "FUN_0800115c": {
                    "calculate_difference": 2,
                    "calculate_duration": 1,
                    "get_result": 1,
                    "perform_operation": 1
                },
                "FUN_08002008": {
                    "calculate_checksum": 1,
                    "get_data": 1,
                    "get_data_value": 2,
                    "get_shifted_value": 1,
                    "get_updated_value": 1
                },
                "FUN_0800209c": {
                    "check_and_execute_operation": 1,
                    "check_and_process": 1,
                    "check_and_process_data": 2,
                    "check_and_update_memory_allocation": 1,
                    "check_and_update_permissions": 1,
                    "check_data_validity": 1,
                    "check_permissions": 1,
                    "handle_data": 1,
                    "process_data": 8,
                    "validate_and_execute_function": 2,
                    "validate_and_execute_operation": 2,
                    "validate_and_process_data": 2,
                    "validate_and_process_input": 1,
                    "validate_and_update_data": 1,
                    "validate_data": 1,
                    "validate_input": 1
                },
                "LZCOUNT": {
                    "leading_zero_count": 1
                },
                "_DAT_40021000": {
                    "constant2": 1,
                    "register3": 1
                },
                "_DAT_40021004": {
                    "register2": 1,
                    "updated_constant2": 1
                },
                "_DAT_40022000": {
                    "register1": 1,
                    "updated_constant1": 1
                },
                "cVar1": {
                    "bit_flag": 1,
                    "condition1": 2,
                    "condition_1": 2,
                    "first_case_true": 1,
                    "flag": 1,
                    "flag1": 12,
                    "flag_1": 3,
                    "has_flag1": 1,
                    "is_data_negative": 1,
                    "is_flag_1": 1,
                    "is_flag_set": 2,
                    "is_negative": 3,
                    "is_positive": 1
                },
                "cVar2": {
                    "bit_flag2": 1,
                    "condition2": 2,
                    "condition_2": 2,
                    "data_type": 1,
                    "flag2": 13,
                    "flag_2": 3,
                    "has_flag2": 1,
                    "is_flag_2": 1,
                    "is_flag_set_alt": 1,
                    "is_flag_unset": 1,
                    "is_positive": 1,
                    "is_zero": 3,
                    "second_case_true": 1
                },
                "iVar3": {
                    "bit_shift": 1,
                    "flag": 1,
                    "flag_check": 1,
                    "permission_flag": 1,
                    "result": 1,
                    "shift_amount": 3,
                    "shift_count": 3,
                    "shift_value": 1,
                    "shift_value1": 1,
                    "shifted": 1,
                    "shifted_data": 4,
                    "shifted_input": 1,
                    "shifted_length": 1,
                    "shifted_val": 1,
                    "shifted_value": 6,
                    "temp1": 3,
                    "temp_var3": 1
                },
                "iVar5": {
                    "comparison": 1,
                    "comparison_result": 2,
                    "comparison_value": 1,
                    "current_value": 1,
                    "loop_counter": 1,
                    "loop_var": 1,
                    "new_value": 1,
                    "result": 7,
                    "temp": 2,
                    "temp2": 2,
                    "temp3": 3,
                    "temp_val": 1,
                    "temp_value": 3,
                    "temp_var": 1,
                    "temp_var2": 1,
                    "temp_var5": 1,
                    "temp_variable2": 1,
                    "value2": 1
                },
                "param_1": {
                    "data": 8,
                    "data_array": 2,
                    "data_pointer": 2,
                    "data_ptr": 6,
                    "input": 2,
                    "input_array": 4,
                    "input_data": 2,
                    "input_values": 1,
                    "permission_data": 1,
                    "permissions": 1,
                    "pointer": 1,
                    "ptr": 1
                },
                "param_2": {
                    "data_length": 6,
                    "data_size": 4,
                    "input_length": 2,
                    "input_size": 1,
                    "input_value": 1,
                    "length": 3,
                    "permission": 1,
                    "size": 13
                },
                "uVar4": {
                    "first_value": 1,
                    "flag": 2,
                    "input_array_value": 1,
                    "input_value": 1,
                    "second_input": 1,
                    "switch_value": 1,
                    "temp1": 2,
                    "temp2": 3,
                    "temp_val": 2,
                    "temp_value": 1,
                    "temp_var1": 1,
                    "temp_var4": 1,
                    "temp_variable": 1,
                    "type": 1,
                    "u_var4": 1,
                    "value": 6,
                    "value1": 3,
                    "value_1": 2
                },
                "uVar6": {
                    "masked_data": 1,
                    "shift_amount": 1,
                    "shift_value2": 1,
                    "shifted_data": 1,
                    "shifted_data2": 1,
                    "shifted_input": 1,
                    "shifted_input_array_value": 1,
                    "shifted_mask": 1,
                    "shifted_val": 1,
                    "shifted_value": 11,
                    "temp": 1,
                    "temp3": 2,
                    "temp4": 3,
                    "temp_var6": 1,
                    "value2": 2,
                    "value_2": 2
                }
            },
            "called": [
                "FUN_0800115c",
                "FUN_08001104",
                "FUN_08002008"
            ],
            "calling": [
                "FUN_08004514"
            ],
            "code": "\n\n\nundefined4 validate_and_process_data_0800209c(uint *data,uint size)\n\n{\n  char flag1;\n  char flag2;\n  int shifted_value;\n  uint value;\n  int result;\n  uint shifted_value;\n  \n  if ((size <= (_DAT_40022000 & 7)) ||\n     (_DAT_40022000 = _DAT_40022000 & 0xfffffff8 | size, size == (size & 7))) {\n    if ((int)(*data << 0x1e) < 0) {\n      _DAT_40021004 = _DAT_40021004 & 0xffffff0f | data[2];\n    }\n    shifted_value = *data << 0x1f;\n    if (-1 < shifted_value) {\nLAB_080020ba:\n      if ((size < (_DAT_40022000 & 7)) &&\n         (_DAT_40022000 = _DAT_40022000 & 0xfffffff8 | size, size != (size & 7))) {\n        return 1;\n      }\n      if ((*data & 4) != 0) {\n        _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | data[3];\n      }\n      if ((int)(*data << 0x1c) < 0) {\n        _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | data[4] << 3;\n      }\n      value = FUN_08002008();\n      DAT_200001bc = value >> (&DAT_08007361)[(_DAT_40021004 & 0xf0) >> 4];\n      FUN_08001104(0);\n      return 0;\n    }\n    value = data[1];\n    if (value == 1) {\n      flag2 = '\\x01';\n      flag1 = '\\0';\n    }\n    else {\n      shifted_value = _DAT_40021000;\n      if (value == 2) goto LAB_08002176;\n      flag2 = '\\0';\n      flag1 = '\\x01';\n    }\n    shifted_value = (_DAT_40021000 >>\n            (leading_zero_count((uint)(byte)(flag1 << 6) << 0x18 | (uint)(byte)(flag2 << 6) << 8) & 0x1fU)) <<\n            0x1f;\n    if ((int)shifted_value < 0) {\nLAB_08002176:\n      _DAT_40021004 = _DAT_40021004 & 0xfffffffc | value;\n      shifted_value = FUN_0800115c(shifted_value,shifted_value);\n      if (data[1] == 1) {\n        do {\n          if ((_DAT_40021004 & 0xc) == 4) goto LAB_080020ba;\n          result = FUN_0800115c();\n        } while ((uint)(result - shifted_value) < 0x1389);\n      }\n      else if (data[1] == 2) {\n        do {\n          if ((_DAT_40021004 & 0xc) == 8) goto LAB_080020ba;\n          result = FUN_0800115c();\n        } while ((uint)(result - shifted_value) < 0x1389);\n      }\n      else {\n        do {\n          if ((_DAT_40021004 & 0xc) == 0) goto LAB_080020ba;\n          result = FUN_0800115c();\n        } while ((uint)(result - shifted_value) < 0x1389);\n      }\n      return 3;\n    }\n  }\n  return 1;\n}\n\n",
            "current_name": "validate_and_process_data_0800209c",
            "entrypoint": "0x0800209c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800209c": "validate_and_process_data_0800209c",
                "LZCOUNT": "leading_zero_count",
                "cVar1": "flag1",
                "cVar2": "flag2",
                "iVar3": "shifted_value",
                "iVar5": "result",
                "param_1": "data",
                "param_2": "size",
                "uVar4": "value",
                "uVar6": "shifted_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002214": {
            "additional_data": {
                "DAT_200001bc": {
                    "data": 11,
                    "data_value": 1,
                    "global_data": 1
                },
                "FUN_08002214": {
                    "get_dat_200001bc": 1,
                    "get_dat_value": 1,
                    "get_data": 13,
                    "get_data_value": 14,
                    "get_global_data": 1,
                    "get_global_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004514",
                "FUN_08001104"
            ],
            "code": "\nundefined4 get_data_value_08002214(void)\n\n{\n  return DAT_200001bc;\n}\n\n",
            "current_name": "get_data_value_08002214",
            "entrypoint": "0x08002214",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002214": "get_data_value_08002214"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002220": {
            "additional_data": {
                "0x700": {
                    "shift_mask": 1
                },
                "8": {
                    "shift_amount": 1
                },
                "DAT_08007371": {
                    "bit_mask": 1,
                    "bit_offsets": 1,
                    "bit_value_table": 1,
                    "data_array": 3,
                    "offset_table": 1,
                    "shift_array": 2,
                    "shift_table": 2
                },
                "DAT_200001bc": {
                    "bit_data": 1,
                    "bit_mask": 1,
                    "data": 9,
                    "data_value": 8,
                    "input_data": 1,
                    "input_value": 1,
                    "shift_value": 1,
                    "shifted_data": 1,
                    "shifted_value": 4,
                    "source_data": 1,
                    "stored_value": 1
                },
                "FUN_08002220": {
                    "calculate_shifted_value": 3,
                    "extract_bit": 2,
                    "extract_bit_from_data": 1,
                    "extract_bits": 5,
                    "extract_bits_from_data": 2,
                    "extracted_bits": 1,
                    "get_shifted_value": 11,
                    "reverse_bit_shift": 1,
                    "shift_data_by_index": 1,
                    "shift_right_bits": 1,
                    "shift_value_from_data": 1,
                    "shifted_value_by_offset": 1,
                    "shifted_value_from_data": 1
                },
                "FUN_08007371": {
                    "data": 1
                },
                "_DAT_40021004": {
                    "bit_mask": 2,
                    "constant": 1,
                    "control_data": 1,
                    "data": 2,
                    "data_address": 1,
                    "data_value": 2,
                    "filter": 1,
                    "index_mask": 1,
                    "input": 3,
                    "input_data": 3,
                    "input_value": 6,
                    "mask": 2,
                    "shift_mask": 2,
                    "shift_masked_value": 1,
                    "shift_value": 1,
                    "shifted_value": 1,
                    "value": 1
                },
                "bit_array": {
                    "bit_array": 1
                },
                "data": {
                    "bitstream": 1,
                    "data": 1,
                    "lookup_table": 1
                },
                "extract_bit": {
                    "get_bit_value": 2
                },
                "extract_bits": {
                    "extract_bits": 1
                },
                "filter": {
                    "filter": 1
                },
                "indexMask": {
                    "masked_index": 1
                },
                "input": {
                    "selection_mask": 1
                },
                "input_data": {
                    "data": 1
                },
                "lookup_table": {
                    "bit_values": 1
                },
                "mask": {
                    "bitmask": 1
                },
                "shiftDataByIndex": {
                    "result": 1
                },
                "shiftRightBits": {
                    "shift_right_bits": 1
                },
                "table": {
                    "bit_table": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080025e8",
                "FUN_08001754"
            ],
            "code": "\n\n\nuint get_shifted_value_08002220(void)\n\n{\n  return DAT_200001bc >> (&DAT_08007371)[(_DAT_40021004 & 0x700) >> 8];\n}\n\n",
            "current_name": "get_shifted_value_08002220",
            "entrypoint": "0x08002220",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002220": "get_shifted_value_08002220"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002250": {
            "additional_data": {
                "0x3800": {
                    "bit_mask": 2,
                    "bit_offset": 1,
                    "bit_position": 1,
                    "bitmask": 1,
                    "bits_mask": 1,
                    "shift_mask": 1
                },
                "0xb": {
                    "bit_shift": 2,
                    "bits_shift": 1,
                    "right_shift_amount": 1,
                    "shift_amount": 2
                },
                "DAT_08007371": {
                    "bit_array": 1,
                    "bit_shift_array": 1,
                    "bitmask_array": 1,
                    "data_array": 1,
                    "lookup_table": 2,
                    "offset_table": 1,
                    "shift_array": 1,
                    "shift_values": 2
                },
                "DAT_200001bc": {
                    "data": 12,
                    "data_value": 11,
                    "original_value": 1,
                    "result": 1,
                    "shifted_data": 1,
                    "shifted_value": 2,
                    "value": 1
                },
                "FUN_08002250": {
                    "bitwise_right_shift": 1,
                    "calculate_shifted_value": 1,
                    "extract_bit_from_data": 4,
                    "extract_bit_from_value": 2,
                    "extract_bits": 1,
                    "extract_shifted_data": 1,
                    "extracted_bit": 1,
                    "extracted_bits": 1,
                    "extracted_data": 3,
                    "extracted_value": 1,
                    "extracted_value_from_binary": 2,
                    "get_shifted_data": 1,
                    "get_shifted_value": 10,
                    "shifted_value_based_on_bits": 1,
                    "shifted_value_from_data": 1
                },
                "_DAT_40021004": {
                    "bitmask": 1,
                    "config_value": 1,
                    "data_offset": 1,
                    "data_pointer": 1,
                    "data_variable": 1,
                    "extracted_bitfield": 1,
                    "input": 1,
                    "input_data": 3,
                    "input_value": 6,
                    "mask": 4,
                    "masked_value": 2,
                    "shift_mask": 1,
                    "shift_operator": 1,
                    "shift_register": 1,
                    "shift_value": 1,
                    "shifted_data": 1,
                    "shifted_value": 2,
                    "value": 1
                },
                "dataArray": {
                    "data_array": 1
                },
                "extractedValue": {
                    "extracted_value": 1
                },
                "maskedValue": {
                    "masked_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080025e8"
            ],
            "code": "\n\n\nuint get_shifted_value_08002250(void)\n\n{\n  return DAT_200001bc >> (&DAT_08007371)[(_DAT_40021004 & 0x3800) >> 0xb];\n}\n\n",
            "current_name": "get_shifted_value_08002250",
            "entrypoint": "0x08002250",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002250": "get_shifted_value_08002250"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002280": {
            "additional_data": {
                "0x18": {
                    "other_data_offset": 1,
                    "values_address": 1
                },
                "0x20": {
                    "data_offset": 1,
                    "flags_address": 1
                },
                "0x34": {
                    "another_data_offset": 1,
                    "value_address": 1
                },
                "0x40012c00": {
                    "magic_value": 1,
                    "special_address": 1
                },
                "0xfffffcff": {
                    "preserve_flags": 1
                },
                "0xffffff8c": {
                    "clear_limited_flags": 1
                },
                "0xfffffff7": {
                    "set_flag1": 1
                },
                "0xfffffffb": {
                    "set_flag2": 1
                },
                "0xfffffffd": {
                    "clear_flag2": 1
                },
                "0xfffffffe": {
                    "clear_flag1": 1
                },
                "FUN_08002280": {
                    "configure_hardware": 1,
                    "initialize_data": 2,
                    "initialize_parameters": 1,
                    "update_configuration": 1,
                    "update_data": 4,
                    "update_flags_and_values": 4,
                    "update_memory": 1,
                    "update_parameters": 10,
                    "update_params": 2,
                    "update_register_values": 1,
                    "update_registers": 1,
                    "update_settings": 1,
                    "update_values": 2
                },
                "param_1": {
                    "address": 4,
                    "base_address": 11,
                    "config_address": 2,
                    "data_address": 4,
                    "data_offset": 1,
                    "function_address": 1,
                    "input": 1,
                    "param1": 2,
                    "param_1": 1,
                    "param_address": 1,
                    "register_address": 2,
                    "settings_address": 1
                },
                "param_2": {
                    "config_values": 2,
                    "data": 3,
                    "data_array": 3,
                    "input_data": 1,
                    "input_values": 2,
                    "new_data": 1,
                    "new_settings": 1,
                    "new_values": 2,
                    "param2": 2,
                    "param_2": 1,
                    "parameters": 5,
                    "params_array": 2,
                    "register_values": 2,
                    "values": 4
                },
                "uVar1": {
                    "flags1": 2,
                    "masked_data1": 1,
                    "modified_config1": 1,
                    "modified_flag": 1,
                    "modified_flags": 1,
                    "modified_offset": 1,
                    "modified_value": 1,
                    "modified_value1": 3,
                    "modified_value_1": 1,
                    "updated_address": 1,
                    "updated_flag1": 1,
                    "updated_flags": 1,
                    "updated_param1": 1,
                    "updated_register1": 1,
                    "updated_value1": 9,
                    "updated_var1": 5
                },
                "uVar2": {
                    "existing_value": 2,
                    "flags2": 2,
                    "modified_config2": 1,
                    "modified_value2": 3,
                    "modified_value_2": 1,
                    "old_value": 2,
                    "original_data1": 1,
                    "original_value": 2,
                    "updated_flag2": 1,
                    "updated_param2": 1,
                    "updated_register2": 1,
                    "updated_value2": 9,
                    "updated_var2": 5
                },
                "uVar3": {
                    "config_value": 1,
                    "input_value_1": 1,
                    "modified_value3": 1,
                    "new_value": 5,
                    "new_value1": 1,
                    "original_data2": 1,
                    "original_value": 2,
                    "param_value": 1,
                    "updated_flag3": 1,
                    "updated_param3": 1,
                    "updated_register3": 1,
                    "updated_value3": 8,
                    "updated_var3": 5,
                    "value": 1,
                    "value1": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800245c"
            ],
            "code": "\nvoid update_parameters_08002280(int base_address,uint *parameters)\n\n{\n  uint updated_value1;\n  uint updated_value2;\n  uint updated_value3;\n  \n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & 0xfffffffe;\n  updated_value2 = *(uint *)(base_address + 4);\n  updated_value3 = *parameters;\n  updated_value1 = *(uint *)(base_address + 0x20) & 0xfffffffd | parameters[2];\n  if (base_address == 0x40012c00) {\n    updated_value1 = (updated_value1 & 0xfffffff7 | parameters[3]) & 0xfffffffb;\n    updated_value2 = updated_value2 & 0xfffffcff | parameters[5] | parameters[6];\n  }\n  *(uint *)(base_address + 4) = updated_value2;\n  *(uint *)(base_address + 0x18) = *(uint *)(base_address + 0x18) & 0xffffff8c | updated_value3;\n  *(uint *)(base_address + 0x34) = parameters[1];\n  *(uint *)(base_address + 0x20) = updated_value1;\n  return;\n}\n\n",
            "current_name": "update_parameters_08002280",
            "entrypoint": "0x08002280",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002280": "update_parameters_08002280",
                "param_1": "base_address",
                "param_2": "parameters",
                "uVar1": "updated_value1",
                "uVar2": "updated_value2",
                "uVar3": "updated_value3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080022d0": {
            "additional_data": {
                "0x1c": {
                    "param_value2": 1,
                    "pointer_value3": 1,
                    "register2": 1
                },
                "0x20": {
                    "config_offset1": 1,
                    "mask2": 1,
                    "param_value1": 1,
                    "register1": 1
                },
                "0x3c": {
                    "param_value3": 1,
                    "pointer_value4": 1,
                    "register3": 1
                },
                "0x40012c00": {
                    "special_address": 1
                },
                "0xffffcfff": {
                    "mask5": 2,
                    "mask6": 1
                },
                "0xfffff7ff": {
                    "mask3": 2,
                    "mask4": 1
                },
                "0xfffffbff": {
                    "mask4": 2,
                    "mask5": 1
                },
                "0xfffffdff": {
                    "mask2": 2,
                    "mask3": 1
                },
                "0xfffffeff": {
                    "mask1": 3
                },
                "0xffffff8c": {
                    "mask6": 1,
                    "mask7": 1
                },
                "3": {
                    "special_offset1": 1
                },
                "4": {
                    "config_offset2": 1,
                    "pointer_value1": 1
                },
                "5": {
                    "special_offset2": 1
                },
                "6": {
                    "special_offset3": 1
                },
                "FUN_080022d0": {
                    "initialize_data": 1,
                    "initialize_parameters": 1,
                    "initialize_registers": 1,
                    "update_configuration": 2,
                    "update_data": 8,
                    "update_memory": 2,
                    "update_param": 1,
                    "update_param_values": 2,
                    "update_parameter": 2,
                    "update_parameters": 6,
                    "update_params": 1,
                    "update_register": 1,
                    "update_registers": 2,
                    "update_status": 1
                },
                "param_1": {
                    "address": 3,
                    "base_address": 13,
                    "config_address": 2,
                    "data_address": 5,
                    "memory_address": 2,
                    "param_address": 2,
                    "param_base_address": 1,
                    "register_base_address": 1,
                    "status_pointer": 1,
                    "target_address": 1
                },
                "param_2": {
                    "config_data": 2,
                    "data": 6,
                    "data_array": 2,
                    "data_values": 1,
                    "input_data": 2,
                    "input_values": 1,
                    "param_array": 4,
                    "param_values": 3,
                    "parameters": 4,
                    "params_array": 1,
                    "register_values": 2,
                    "values": 3
                },
                "uVar1": {
                    "modified_flag": 1,
                    "modified_value1": 3,
                    "new_register_value1": 1,
                    "updated_config_value": 1,
                    "updated_data1": 1,
                    "updated_field1": 1,
                    "updated_flags": 1,
                    "updated_register1": 1,
                    "updated_u_var1": 1,
                    "updated_value1": 17,
                    "updated_value_1": 1,
                    "updated_var1": 2
                },
                "uVar2": {
                    "current_value": 1,
                    "current_value1": 1,
                    "modified_value2": 3,
                    "new_register_value2": 1,
                    "temp_var1": 1,
                    "updated_data2": 1,
                    "updated_field2": 1,
                    "updated_register2": 1,
                    "updated_u_var2": 1,
                    "updated_value2": 16,
                    "updated_value_2": 1,
                    "updated_var2": 2,
                    "value1": 1
                },
                "uVar3": {
                    "config_value": 1,
                    "data_value": 1,
                    "input_data": 2,
                    "input_value": 1,
                    "new_register_value3": 1,
                    "new_value": 3,
                    "original_value": 2,
                    "temp_var2": 1,
                    "updated_field3": 1,
                    "updated_register3": 1,
                    "updated_u_var3": 1,
                    "updated_value3": 13,
                    "updated_var3": 2,
                    "value2": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800245c"
            ],
            "code": "\nvoid update_data_080022d0(int base_address,uint *data)\n\n{\n  uint updated_value1;\n  uint updated_value2;\n  uint updated_value3;\n  \n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & 0xfffffeff;\n  updated_value2 = *(uint *)(base_address + 4);\n  updated_value3 = *data;\n  updated_value1 = *(uint *)(base_address + 0x20) & 0xfffffdff | data[2] << 8;\n  if (base_address == 0x40012c00) {\n    updated_value1 = (updated_value1 & 0xfffff7ff | data[3] << 8) & 0xfffffbff;\n    updated_value2 = updated_value2 & 0xffffcfff | (data[5] | data[6]) << 4;\n  }\n  *(uint *)(base_address + 4) = updated_value2;\n  *(uint *)(base_address + 0x1c) = *(uint *)(base_address + 0x1c) & 0xffffff8c | updated_value3;\n  *(uint *)(base_address + 0x3c) = data[1];\n  *(uint *)(base_address + 0x20) = updated_value1;\n  return;\n}\n\n",
            "current_name": "update_data_080022d0",
            "entrypoint": "0x080022d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080022d0": "update_data_080022d0",
                "param_1": "base_address",
                "param_2": "data",
                "uVar1": "updated_value1",
                "uVar2": "updated_value2",
                "uVar3": "updated_value3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002324": {
            "additional_data": {
                "0x40012c00": {
                    "base_address_const": 1
                },
                "0xffff8cff": {
                    "other_flags_mask1": 1
                },
                "0xffffdfff": {
                    "flags_mask2": 1
                },
                "0xffffefff": {
                    "flags_mask1": 1
                },
                "FUN_08002324": {
                    "initialize_parameters": 1,
                    "modify_parameters": 2,
                    "update_config": 1,
                    "update_configurations": 1,
                    "update_data": 6,
                    "update_flags_and_values": 1,
                    "update_param": 1,
                    "update_param_data": 1,
                    "update_param_values": 1,
                    "update_parameters": 11,
                    "update_params": 5
                },
                "iVar2": {
                    "data2": 1,
                    "first_param": 1,
                    "first_param_value": 1,
                    "first_parameter": 1,
                    "new_value2": 1,
                    "param2_val": 1,
                    "param2_value": 2,
                    "param_value": 1,
                    "param_value1": 4,
                    "updated_value2": 1,
                    "value1": 7,
                    "value2": 6,
                    "value_2": 1,
                    "var2": 1,
                    "variable2": 1,
                    "variable_1": 1
                },
                "iVar3": {
                    "data3": 1,
                    "new_value3": 1,
                    "param2_value": 1,
                    "param3_val": 1,
                    "param3_value": 2,
                    "param_value2": 3,
                    "param_value3": 1,
                    "second_parameter": 1,
                    "third_param": 1,
                    "third_param_value": 1,
                    "updated_value3": 1,
                    "value2": 6,
                    "value3": 7,
                    "value_3": 1,
                    "var3": 1,
                    "variable3": 1,
                    "variable_2": 1
                },
                "iVar4": {
                    "constant": 3,
                    "constant_value": 9,
                    "default_addr": 2,
                    "default_address": 3,
                    "default_base": 1,
                    "default_base_address": 1,
                    "default_config_address": 1,
                    "default_param": 1,
                    "default_val": 1,
                    "default_value": 5,
                    "fixed_value": 1,
                    "updated_value4": 1,
                    "value4": 1,
                    "variable4": 1
                },
                "param_1": {
                    "base_addr": 1,
                    "base_address": 12,
                    "config_address": 1,
                    "configuration_address": 1,
                    "data_address": 4,
                    "data_offset": 1,
                    "data_ptr": 1,
                    "param": 1,
                    "param1": 1,
                    "param_addr": 3,
                    "param_address": 4,
                    "parameter1": 1
                },
                "param_2": {
                    "config_data": 2,
                    "data": 1,
                    "data_array": 1,
                    "data_values": 1,
                    "param_array": 6,
                    "param_data": 1,
                    "param_values": 3,
                    "parameter2": 1,
                    "parameters": 13,
                    "params_array": 2
                },
                "uVar1": {
                    "config_value": 2,
                    "data1": 1,
                    "flag": 2,
                    "flags": 3,
                    "mask": 1,
                    "new_value1": 1,
                    "old_flag": 1,
                    "original_value": 2,
                    "param1_val": 1,
                    "param1_value": 2,
                    "temp_var1": 1,
                    "updated_value": 1,
                    "updated_value1": 2,
                    "value": 1,
                    "value1": 6,
                    "value2": 1,
                    "value_1": 1,
                    "var1": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_0800245c"
            ],
            "code": "\nvoid update_parameters_08002324(int base_address,int *parameters)\n\n{\n  uint value1;\n  int value1;\n  int value3;\n  int constant_value;\n  \n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & 0xffffefff;\n  value1 = *(uint *)(base_address + 4);\n  value1 = *parameters;\n  value3 = parameters[2];\n  constant_value = 0x40012c00;\n  if (base_address == 0x40012c00) {\n    constant_value = parameters[5];\n    value1 = value1 & 0xffffbfff;\n  }\n  if (base_address == 0x40012c00) {\n    value1 = value1 | constant_value << 6;\n  }\n  *(uint *)(base_address + 4) = value1;\n  *(uint *)(base_address + 0x1c) = *(uint *)(base_address + 0x1c) & 0xffff8cff | value1 << 8;\n  *(int *)(base_address + 0x40) = parameters[1];\n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & 0xffffdfff | value3 << 0xc;\n  return;\n}\n\n",
            "current_name": "update_parameters_08002324",
            "entrypoint": "0x08002324",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002324": "update_parameters_08002324",
                "iVar2": "value1",
                "iVar3": "value3",
                "iVar4": "constant_value",
                "param_1": "base_address",
                "param_2": "parameters",
                "uVar1": "value1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002368": {
            "additional_data": {
                "FUN_08002368": {
                    "apply_settings": 1,
                    "update_configuration": 2,
                    "update_data": 4,
                    "update_memory": 9,
                    "update_memory_region": 1,
                    "update_memory_values": 3,
                    "update_param_values": 2,
                    "update_parameters": 5,
                    "update_params": 3,
                    "update_settings": 1
                },
                "param_1": {
                    "config_ptr": 1,
                    "configuration": 1,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "data_ptr1": 1,
                    "input_params": 3,
                    "memory": 2,
                    "memory_addr": 1,
                    "memory_address": 2,
                    "memory_block": 2,
                    "memory_block1": 1,
                    "memory_pointer_1": 1,
                    "memory_ptr": 2,
                    "memory_region_ptr": 1,
                    "old_memory_block": 1,
                    "old_params": 1,
                    "original_params": 1,
                    "param_array1": 2,
                    "parameters1": 1,
                    "settings": 1,
                    "settings_ptr": 1,
                    "target_params": 2
                },
                "param_2": {
                    "data": 4,
                    "data_block": 1,
                    "data_ptr": 2,
                    "data_ptr2": 1,
                    "memory_block2": 1,
                    "memory_pointer_2": 1,
                    "new_data_ptr": 2,
                    "new_memory_block": 1,
                    "new_params": 4,
                    "new_settings": 1,
                    "new_values": 2,
                    "param_array2": 2,
                    "parameters2": 1,
                    "source_data": 1,
                    "source_data_pointer": 1,
                    "source_params": 2,
                    "source_ptr": 1,
                    "update_ptr": 2,
                    "updated_params": 1
                },
                "uVar1": {
                    "new_setting_value": 1,
                    "new_value": 2,
                    "temp_value": 1,
                    "temp_var1": 2,
                    "updated_value": 24,
                    "updated_var1": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080023d0"
            ],
            "code": "\nvoid update_memory_values_08002368(uint *input_params,uint *data)\n\n{\n  uint updated_value;\n  \n  updated_value = *input_params;\n  if (((((input_params == (uint *)0x40012c00) || (input_params == (uint *)0x40000000)) ||\n       (input_params == (uint *)0x40000400)) || (input_params == (uint *)0x40000800)) &&\n     (((updated_value = updated_value & 0xffffff8f | data[1], input_params == (uint *)0x40012c00 ||\n       (input_params == (uint *)0x40000000)) ||\n      ((input_params == (uint *)0x40000400 || (input_params == (uint *)0x40000800)))))) {\n    updated_value = updated_value & 0xfffffcff | data[3];\n  }\n  *input_params = updated_value;\n  input_params[0xb] = data[2];\n  input_params[10] = *data;\n  updated_value = 0x40012c00;\n  if (input_params == (uint *)0x40012c00) {\n    updated_value = data[4];\n  }\n  if (input_params == (uint *)0x40012c00) {\n    input_params[0xc] = updated_value;\n  }\n  input_params[5] = 1;\n  return;\n}\n\n",
            "current_name": "update_memory_values_08002368",
            "entrypoint": "0x08002368",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002368": "update_memory_values_08002368",
                "param_1": "input_params",
                "param_2": "data",
                "uVar1": "updated_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080023d0": {
            "additional_data": {
                "DAT_0800239": {
                    "status": 1
                },
                "FUN_08002368": {
                    "execute_operation": 2,
                    "execute_tertiary_function": 1,
                    "manipulate_data": 1,
                    "perform_task": 1,
                    "process_data": 13,
                    "process_data2": 1,
                    "process_data_blocks": 1,
                    "process_data_section": 1,
                    "process_input": 1,
                    "process_parameters": 1,
                    "process_params": 1,
                    "process_status": 1,
                    "process_sub_data": 3,
                    "process_subdata": 1,
                    "process_values": 1,
                    "sub_process_function": 1
                },
                "FUN_080023d0": {
                    "check_and_modify_param": 1,
                    "check_and_update_data": 1,
                    "check_and_update_status": 2,
                    "improve_readability": 1,
                    "initialize_and_process": 1,
                    "initialize_data": 4,
                    "initialize_flag_and_call_function": 1,
                    "initialize_function": 1,
                    "process_data": 9,
                    "process_function": 1,
                    "process_input": 1,
                    "process_param": 1,
                    "process_parameter": 2,
                    "sanitize_param_and_process": 1,
                    "update_data": 2,
                    "update_parameter": 1,
                    "update_status": 1
                },
                "FUN_08004d8c": {
                    "cleanup": 1,
                    "cleanup_function": 1,
                    "execute_function": 1,
                    "execute_helper": 1,
                    "execute_secondary_function": 1,
                    "execute_task": 2,
                    "handle_error": 1,
                    "handle_reset": 1,
                    "initialize_data": 3,
                    "initialize_memory": 1,
                    "perform_action": 5,
                    "perform_cleanup": 2,
                    "perform_initialization": 3,
                    "perform_operation": 2,
                    "perform_task": 3,
                    "print_data": 1,
                    "reset_function": 1,
                    "update_status": 1
                },
                "char": {
                    "status": 1
                },
                "char1": {
                    "flag": 1
                },
                "char2": {
                    "status_flag": 1
                },
                "param_1": {
                    "data": 5,
                    "data_array": 1,
                    "data_pointer": 6,
                    "data_ptr": 3,
                    "input": 2,
                    "input_array": 2,
                    "input_data": 2,
                    "param": 4,
                    "parameter": 2,
                    "section1": 1,
                    "status": 2,
                    "status_array": 1
                },
                "param_2": {
                    "data_blocks_pointer": 1,
                    "destination_status": 1,
                    "next_data_pointer": 1,
                    "output_data": 1,
                    "output_pointer": 1,
                    "secondary_data_pointer": 1,
                    "section2": 1
                }
            },
            "called": [
                "FUN_08004d8c",
                "FUN_08002368"
            ],
            "calling": [
                "FUN_0800458c"
            ],
            "code": "\nundefined4 process_data_080023d0(undefined4 *data_pointer)\n\n{\n  if (data_pointer != (undefined4 *)0x0) {\n    if (*(status *)((int)data_pointer + 0x39) == '\\0') {\n      *(undefined *)(data_pointer + 0xe) = 0;\n      FUN_08004d8c();\n    }\n    *(undefined *)((int)data_pointer + 0x39) = 2;\n    FUN_08002368(*data_pointer,data_pointer + 1);\n    *(undefined *)((int)data_pointer + 0x39) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "process_data_080023d0",
            "entrypoint": "0x080023d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080023d0": "process_data_080023d0",
                "char": "status",
                "param_1": "data_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002404": {
            "additional_data": {
                "FUN_08002404": {
                    "modify_parameters": 1,
                    "update_data": 6,
                    "update_data_structure": 1,
                    "update_flags_and_parameters": 1,
                    "update_flags_and_values": 2,
                    "update_function_params": 1,
                    "update_memory": 2,
                    "update_param": 3,
                    "update_parameter": 2,
                    "update_parameters": 7,
                    "update_params": 4,
                    "update_params_and_values": 1
                },
                "iVar3": {
                    "data_value": 1,
                    "input_value": 8,
                    "int_value": 1,
                    "modifier": 1,
                    "param_value": 9,
                    "parameter_value": 2,
                    "updated_value3": 3,
                    "updated_var3": 2,
                    "value": 4
                },
                "iVar3_orig": {
                    "original_value": 1
                },
                "param_1": {
                    "address": 3,
                    "base_address": 12,
                    "data_address": 4,
                    "data_pointer": 1,
                    "data_structure_address": 1,
                    "function_address": 1,
                    "memory_address": 2,
                    "param": 2,
                    "param1": 1,
                    "param_address": 1,
                    "parameter1": 1,
                    "parameter_address": 1,
                    "pointer_1": 1
                },
                "param_2": {
                    "data_array": 1,
                    "data_values": 1,
                    "input_data": 2,
                    "param2": 1,
                    "param_arr": 1,
                    "param_array": 3,
                    "param_values": 1,
                    "parameter_values": 1,
                    "parameters": 11,
                    "params": 3,
                    "params_array": 2,
                    "pointer_2": 1,
                    "values": 2
                },
                "uVar1": {
                    "modified_data": 1,
                    "modified_flag1": 1,
                    "modified_flags": 2,
                    "modified_value1": 2,
                    "updated_data1": 1,
                    "updated_flag": 1,
                    "updated_flag1": 1,
                    "updated_flags1": 1,
                    "updated_value": 1,
                    "updated_value1": 17,
                    "updated_var1": 3
                },
                "uVar1_orig": {
                    "original_var1": 1
                },
                "uVar2": {
                    "modified_flag2": 1,
                    "modified_value": 2,
                    "modified_value2": 2,
                    "original_data": 1,
                    "original_value": 1,
                    "prev_value": 1,
                    "updated_data2": 1,
                    "updated_flag2": 1,
                    "updated_flags2": 1,
                    "updated_value2": 17,
                    "updated_var2": 3
                },
                "uVar2_orig": {
                    "original_var2": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800245c"
            ],
            "code": "\nvoid update_flags_and_parameters_08002404(int base_address,int *parameters)\n\n{\n  uint updated_value1;\n  uint updated_value2;\n  int param_value;\n  \n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & 0xffffffef;\n  updated_value2 = *(uint *)(base_address + 4);\n  param_value = *parameters;\n  updated_value1 = *(uint *)(base_address + 0x20) & 0xffffffdf | parameters[2] << 4;\n  if (base_address == 0x40012c00) {\n    updated_value1 = (updated_value1 & 0xffffff7f | parameters[3] << 4) & 0xffffffbf;\n    updated_value2 = updated_value2 & 0xfffff3ff | (parameters[5] | parameters[6]) << 2;\n  }\n  *(uint *)(base_address + 4) = updated_value2;\n  *(uint *)(base_address + 0x18) = *(uint *)(base_address + 0x18) & 0xffff8cff | param_value << 8;\n  *(int *)(base_address + 0x38) = parameters[1];\n  *(uint *)(base_address + 0x20) = updated_value1;\n  return;\n}\n\n",
            "current_name": "update_flags_and_parameters_08002404",
            "entrypoint": "0x08002404",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002404": "update_flags_and_parameters_08002404",
                "iVar3": "param_value",
                "param_1": "base_address",
                "param_2": "parameters",
                "uVar1": "updated_value1",
                "uVar2": "updated_value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800245c": {
            "additional_data": {
                "FUN_08002280": {
                    "perform_action_case0": 1,
                    "update_function_a": 1
                },
                "FUN_080022d0": {
                    "perform_action_case8": 1,
                    "update_function_c": 1
                },
                "FUN_08002324": {
                    "perform_action_case_c": 1,
                    "update_function_d": 1
                },
                "FUN_08002404": {
                    "perform_action_case4": 1,
                    "update_function_b": 1
                },
                "FUN_0800245c": {
                    "initialize_and_modify_data": 1,
                    "initialize_flag": 1,
                    "process_flag": 1,
                    "update_config": 1,
                    "update_configuration": 2,
                    "update_control_flags": 1,
                    "update_data": 1,
                    "update_flag": 2,
                    "update_flag_values": 2,
                    "update_flags": 2,
                    "update_flags_and_state": 1,
                    "update_flags_and_status": 2,
                    "update_flags_and_values": 1,
                    "update_parameter": 1,
                    "update_params_and_flags": 1,
                    "update_permissions": 2,
                    "update_settings": 2,
                    "update_state": 1,
                    "update_status": 4
                },
                "extraout_r1": {
                    "extra1": 3,
                    "extra_out1": 1,
                    "extra_out_1": 1,
                    "extra_output1": 1,
                    "extraout1": 3,
                    "extraout_r1": 1,
                    "out1": 3,
                    "result1": 3,
                    "result_1": 1,
                    "return_value1": 1,
                    "temp1": 9,
                    "temp_1": 3,
                    "var1": 1
                },
                "extraout_r1_00": {
                    "extra2": 3,
                    "extra_out2": 1,
                    "extra_out_2": 1,
                    "extra_output2": 1,
                    "extraout2": 3,
                    "extraout_r1_00": 1,
                    "out1_00": 1,
                    "out2": 2,
                    "result2": 3,
                    "result_2": 1,
                    "return_value2": 1,
                    "temp2": 9,
                    "temp_2": 3,
                    "var2": 1
                },
                "extraout_r1_01": {
                    "extra3": 3,
                    "extra_out3": 1,
                    "extra_out_3": 1,
                    "extra_output3": 1,
                    "extraout3": 3,
                    "extraout_r1_01": 1,
                    "out1_01": 1,
                    "out3": 2,
                    "result3": 3,
                    "result_3": 1,
                    "return_value3": 1,
                    "temp3": 9,
                    "temp_3": 3,
                    "var3": 1
                },
                "extraout_r1_02": {
                    "extra4": 3,
                    "extra_out4": 1,
                    "extra_out_4": 1,
                    "extra_output4": 1,
                    "extraout4": 3,
                    "extraout_r1_02": 1,
                    "out1_02": 1,
                    "out4": 2,
                    "result4": 3,
                    "result_4": 1,
                    "return_value4": 1,
                    "temp4": 9,
                    "temp_4": 3,
                    "var4": 1
                },
                "iVar1": {
                    "i_var": 2,
                    "i_var1": 1,
                    "int_result1": 1,
                    "int_var1": 1,
                    "temp5": 3,
                    "temp_5": 3,
                    "temp_var1": 8,
                    "value": 1,
                    "value1": 2,
                    "var1": 8,
                    "var_1": 1
                },
                "iVar3": {
                    "array_value": 1,
                    "config_address": 1,
                    "control_var": 1,
                    "data_ptr": 1,
                    "i_var2": 1,
                    "i_var3": 1,
                    "int_result2": 1,
                    "int_var2": 1,
                    "temp6": 1,
                    "temp_6": 1,
                    "temp_7": 1,
                    "temp_var2": 5,
                    "temp_var3": 2,
                    "updated_param": 1,
                    "updated_var2": 1,
                    "value2": 1,
                    "value3": 1,
                    "var2": 1,
                    "var3": 7,
                    "var_3": 1
                },
                "param_1": {
                    "array": 2,
                    "config": 3,
                    "control_data": 1,
                    "data": 6,
                    "flag_data": 1,
                    "flag_ptr": 1,
                    "flags_ptr": 1,
                    "input": 2,
                    "input_array": 3,
                    "p_flags": 1,
                    "param": 2,
                    "param_array": 1,
                    "permissions": 2,
                    "settings": 2,
                    "state": 1,
                    "status": 2
                },
                "param_2": {
                    "flag_1": 1,
                    "p_param2": 1,
                    "param1": 1,
                    "param2": 8,
                    "param_2": 15,
                    "param_flag": 1,
                    "unused_param2": 1,
                    "value1": 2,
                    "value_1": 1
                },
                "param_3": {
                    "action": 4,
                    "event_type": 1,
                    "flag": 2,
                    "flag_2": 1,
                    "flag_type": 2,
                    "option": 1,
                    "p_param3": 1,
                    "param2": 1,
                    "param3": 5,
                    "param_3": 8,
                    "param_value": 1,
                    "status": 1,
                    "value2": 2,
                    "value_2": 1
                },
                "uVar2": {
                    "combined_flags": 1,
                    "flags_value": 1,
                    "new_value": 1,
                    "result": 2,
                    "temp_6": 1,
                    "temp_var3": 1,
                    "updated_flag": 2,
                    "updated_value": 7,
                    "updated_var": 7,
                    "updated_var2": 1,
                    "value2": 1,
                    "var2": 5,
                    "var_2": 1
                }
            },
            "called": [
                "FUN_08002280",
                "FUN_080022d0",
                "FUN_08002404",
                "FUN_08002324"
            ],
            "calling": [
                "FUN_0800458c"
            ],
            "code": "\nvoid update_flags_and_status_0800245c(int *data,undefined4 param_2,undefined4 param_3)\n\n{\n  int temp1;\n  int temp2;\n  int temp3;\n  int temp4;\n  int temp_var1;\n  uint updated_value;\n  int var3;\n  \n  if (*(char *)(data + 0xe) == '\\x01') {\n    return;\n  }\n  *(undefined *)((int)data + 0x39) = 2;\n  *(undefined *)(data + 0xe) = 1;\n  switch(param_3) {\n  case 0:\n    FUN_08002280(*data);\n    var3 = *data;\n    updated_value = *(uint *)(temp1 + 0x10);\n    *(uint *)(var3 + 0x18) = *(uint *)(var3 + 0x18) | 8;\n    *(uint *)(var3 + 0x18) = *(uint *)(var3 + 0x18) & 0xfffffffb;\n    updated_value = *(uint *)(var3 + 0x18) | updated_value;\n    break;\n  default:\n    goto switchD_0800247a_caseD_1;\n  case 4:\n    FUN_08002404(*data);\n    var3 = *data;\n    temp_var1 = *(int *)(temp2 + 0x10);\n    *(uint *)(var3 + 0x18) = *(uint *)(var3 + 0x18) | 0x800;\n    *(uint *)(var3 + 0x18) = *(uint *)(var3 + 0x18) & 0xfffffbff;\n    updated_value = *(uint *)(var3 + 0x18) | temp_var1 << 8;\n    break;\n  case 8:\n    FUN_080022d0(*data);\n    var3 = *data;\n    updated_value = *(uint *)(temp3 + 0x10);\n    *(uint *)(var3 + 0x1c) = *(uint *)(var3 + 0x1c) | 8;\n    *(uint *)(var3 + 0x1c) = *(uint *)(var3 + 0x1c) & 0xfffffffb;\n    updated_value = *(uint *)(var3 + 0x1c) | updated_value;\n    goto LAB_080024fa;\n  case 0xc:\n    FUN_08002324(*data);\n    var3 = *data;\n    temp_var1 = *(int *)(temp4 + 0x10);\n    *(uint *)(var3 + 0x1c) = *(uint *)(var3 + 0x1c) | 0x800;\n    *(uint *)(var3 + 0x1c) = *(uint *)(var3 + 0x1c) & 0xfffffbff;\n    updated_value = *(uint *)(var3 + 0x1c) | temp_var1 << 8;\nLAB_080024fa:\n    *(uint *)(var3 + 0x1c) = updated_value;\n    goto switchD_0800247a_caseD_1;\n  }\n  *(uint *)(var3 + 0x18) = updated_value;\nswitchD_0800247a_caseD_1:\n  *(undefined *)((int)data + 0x39) = 1;\n  *(undefined *)(data + 0xe) = 0;\n  return;\n}\n\n",
            "current_name": "update_flags_and_status_0800245c",
            "entrypoint": "0x0800245c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800245c": "update_flags_and_status_0800245c",
                "extraout_r1": "temp1",
                "extraout_r1_00": "temp2",
                "extraout_r1_01": "temp3",
                "extraout_r1_02": "temp4",
                "iVar1": "temp_var1",
                "iVar3": "var3",
                "param_1": "data",
                "uVar2": "updated_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002520": {
            "additional_data": {
                "0x20": {
                    "data": 1
                },
                "FUN_08002520": {
                    "clear_bit_and_shift": 4,
                    "modify_bitwise_value": 1,
                    "set_bit": 2,
                    "update_bit": 10,
                    "update_bit_in_integer": 1,
                    "update_bit_in_memory": 2,
                    "update_bit_in_the_register": 1,
                    "update_bit_in_value": 2,
                    "update_bit_value": 2,
                    "update_bits": 2,
                    "update_bitwise_value": 4
                },
                "bitPosition": {
                    "bit_pos": 1,
                    "bit_position": 1
                },
                "bitValue": {
                    "bit_val": 1,
                    "bit_value": 1
                },
                "param_1": {
                    "address": 2,
                    "base_address": 19,
                    "data": 3,
                    "data_address": 1,
                    "data_ptr": 1,
                    "memory_address": 1,
                    "register_address": 1,
                    "target_address": 1,
                    "value_address": 2
                },
                "param_2": {
                    "bit_index": 4,
                    "bit_position": 27
                },
                "param_3": {
                    "bit_value": 10,
                    "data": 1,
                    "new_value": 17,
                    "value": 3
                },
                "param_4": {
                    "original_value": 1,
                    "value": 1,
                    "value_after_update": 1
                },
                "registerAddress": {
                    "reg_addr": 1
                },
                "uint": {
                    "unsigned_integer": 1
                },
                "value": {
                    "value": 1
                },
                "valueAddress": {
                    "value_address": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08002538"
            ],
            "code": "\nvoid update_bit_in_value_08002520(int base_address,unsigned_integer bit_position,int new_value)\n\n{\n  *(unsigned_integer *)(base_address + 0x20) = *(unsigned_integer *)(base_address + 0x20) & ~(1 << (bit_position & 0xff));\n  *(unsigned_integer *)(base_address + 0x20) = new_value << (bit_position & 0xff) | *(unsigned_integer *)(base_address + 0x20);\n  return;\n}\n\n",
            "current_name": "update_bit_in_value_08002520",
            "entrypoint": "0x08002520",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002520": "update_bit_in_value_08002520",
                "param_1": "base_address",
                "param_2": "bit_position",
                "param_3": "new_value",
                "uint": "unsigned_integer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002538": {
            "additional_data": {
                "0x40012c00": {
                    "default_flag_value": 1
                },
                "FUN_08002520": {
                    "apply_function": 1,
                    "change_flags": 1,
                    "configure_feature": 1,
                    "execute_function": 1,
                    "perform_action": 1,
                    "set_flag": 1,
                    "set_flags": 1
                },
                "FUN_08002538": {
                    "enable_feature": 1,
                    "enable_flag": 3,
                    "initialize_and_set_flag": 2,
                    "initialize_data": 1,
                    "initialize_flag_and_set_bits": 1,
                    "initialize_flags": 4,
                    "initialize_memory": 3,
                    "modify_flags_and_set_bit": 1,
                    "set_flag": 1,
                    "set_flag_and_value": 4,
                    "update_and_set_flag": 1,
                    "update_data": 1,
                    "update_flag_and_value": 1,
                    "update_flags_after_process": 1,
                    "update_flags_and_return_zero": 1,
                    "update_flags_and_status": 1,
                    "update_flags_and_values": 1,
                    "update_memory": 1,
                    "update_memory_state": 2
                },
                "param_1": {
                    "data": 2,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "feature_set": 1,
                    "flag_array": 1,
                    "flag_index": 1,
                    "flag_pointer": 3,
                    "flag_ptr": 1,
                    "input": 1,
                    "input_pointer": 1,
                    "int_value": 2,
                    "memory": 1,
                    "memory_address": 1,
                    "memory_handle": 1,
                    "memory_pointer": 2,
                    "memory_state": 1,
                    "p_ptr": 1,
                    "param": 1,
                    "param_one": 1,
                    "pointer": 4,
                    "pointer_to_pointer": 1,
                    "ptr_pointer": 1,
                    "ptr_to_data": 1
                },
                "param_2": {
                    "additional_parameter": 1,
                    "config_value": 2,
                    "flag": 6,
                    "flag_value": 3,
                    "initial_value": 1,
                    "new_value": 1,
                    "param_two": 1,
                    "param_value": 2,
                    "value": 13,
                    "value_to_update": 1
                },
                "param_3": {
                    "flag": 3,
                    "mode": 1,
                    "param3": 1,
                    "param_three": 1
                },
                "puVar2": {
                    "current_flag": 1,
                    "current_flag_ptr": 1,
                    "current_memory_address": 1,
                    "current_pointer": 2,
                    "current_value": 1,
                    "data": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "feature": 1,
                    "flag_value": 1,
                    "flag_value_ptr": 1,
                    "flags": 1,
                    "memory_pointer": 3,
                    "pointer": 3,
                    "pointer_to_value": 1,
                    "pointer_value": 1,
                    "ptr": 4,
                    "ptr_data": 1,
                    "ptr_to_object": 1,
                    "ptr_to_uint": 1,
                    "ptr_value": 2,
                    "temp_pointer": 1
                },
                "uRam40012c44": {
                    "global_var": 1
                },
                "uVar1": {
                    "base_value": 1,
                    "constant_value": 1,
                    "default_flag": 1,
                    "default_flag_value": 3,
                    "default_memory_value": 2,
                    "default_option": 1,
                    "default_value": 3,
                    "flag_value": 1,
                    "initial_value": 1,
                    "modified_value": 1,
                    "new_flag_value": 2,
                    "new_status": 1,
                    "new_value": 10,
                    "updated_value": 3
                }
            },
            "called": [
                "FUN_08002520"
            ],
            "calling": [
                "FUN_08003ff4"
            ],
            "code": "\nundefined4 set_flag_and_value_08002538(uint **pointer,undefined4 value)\n\n{\n  uint new_value;\n  uint *ptr;\n  \n  FUN_08002520(*pointer,value,1);\n  ptr = *pointer;\n  new_value = 0x40012c00;\n  if (ptr == (uint *)0x40012c00) {\n    new_value = global_var | 0x8000;\n  }\n  if (ptr == (uint *)0x40012c00) {\n    ptr[0x11] = new_value;\n  }\n  *ptr = *ptr | 1;\n  return 0;\n}\n\n",
            "current_name": "set_flag_and_value_08002538",
            "entrypoint": "0x08002538",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002538": "set_flag_and_value_08002538",
                "param_1": "pointer",
                "param_2": "value",
                "puVar2": "ptr",
                "uRam40012c44": "global_var",
                "uVar1": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002564": {
            "additional_data": {
                "FUN_08002564": {
                    "calculate_checksum": 2,
                    "check_and_set_values": 1,
                    "check_and_update_flag": 4,
                    "check_and_update_flags": 3,
                    "check_and_update_param": 1,
                    "check_and_update_status": 1,
                    "check_and_update_value": 1,
                    "extract_data_from_binary": 1,
                    "extract_uintegers_from_array": 1,
                    "handle_param": 1,
                    "initialize_data": 1,
                    "initialize_flag_and_sum": 1,
                    "initialize_param": 1,
                    "process_parameters": 1,
                    "set_flag_and_combine_values": 1,
                    "update_data": 1,
                    "update_flag_and_calculate_checksum": 1,
                    "update_flag_and_calculate_value": 1,
                    "update_flag_if_not_set": 1,
                    "update_parameter": 1,
                    "update_parameter_and_get_status": 1,
                    "validate_and_set_values": 1,
                    "validate_and_update": 1,
                    "validate_parameters": 1,
                    "verify_and_update_flags": 1
                },
                "param_1": {
                    "arguments": 1,
                    "array": 3,
                    "array_ptr": 1,
                    "config": 1,
                    "config_array": 1,
                    "data": 1,
                    "data_buffer": 1,
                    "data_ptr": 2,
                    "flag_array": 2,
                    "flags": 1,
                    "input_array": 8,
                    "input_params": 1,
                    "param_array": 5,
                    "parameter_list": 1,
                    "params": 1,
                    "status_ptr": 1
                },
                "param_2": {
                    "binary_ptr": 1,
                    "bit_array": 1,
                    "bit_mask": 1,
                    "bitmask_array": 2,
                    "checksum_array": 2,
                    "checksum_values": 1,
                    "data": 2,
                    "data_ptr": 1,
                    "flags": 1,
                    "flags_array": 2,
                    "param_data": 1,
                    "param_values": 2,
                    "uint_array": 1,
                    "uintegers": 1,
                    "uintegers_array": 1,
                    "update_array": 2,
                    "value_array": 2,
                    "value_list": 1,
                    "values": 5,
                    "values_array": 1
                },
                "uVar1": {
                    "result": 14,
                    "return_value": 9,
                    "status": 4
                }
            },
            "called": [],
            "calling": [
                "FUN_0800458c"
            ],
            "code": "\nundefined4 check_and_update_flag_08002564(int *input_array,uint *values)\n\n{\n  undefined4 result;\n  \n  result = 2;\n  if (*(char *)(input_array + 0xe) != '\\x01') {\n    *(undefined *)((int)input_array + 0x39) = 2;\n    *(uint *)(*input_array + 0x44) =\n         *values | values[1] | values[2] | values[3] | values[4] | values[5] | values[6];\n    *(undefined *)((int)input_array + 0x39) = 1;\n    result = 0;\n    *(undefined *)(input_array + 0xe) = 0;\n  }\n  return result;\n}\n\n",
            "current_name": "check_and_update_flag_08002564",
            "entrypoint": "0x08002564",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002564": "check_and_update_flag_08002564",
                "param_1": "input_array",
                "param_2": "values",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080025a4": {
            "additional_data": {
                "FUN_080025a4": {
                    "apply_permissions": 1,
                    "convert_and_update_flags": 1,
                    "initialize_flags": 1,
                    "initialize_parameter": 1,
                    "initialize_permissions": 1,
                    "set_configuration": 1,
                    "set_permission_bits": 1,
                    "set_permissions": 3,
                    "update_and_reset_flags": 1,
                    "update_configuration": 1,
                    "update_data": 1,
                    "update_flags": 2,
                    "update_flags_and_return": 1,
                    "update_flags_and_status": 2,
                    "update_flags_and_value": 1,
                    "update_flags_value": 1,
                    "update_permissions": 8,
                    "update_registers": 1,
                    "update_settings": 2
                },
                "iVar3": {
                    "address": 2,
                    "array_pointer": 1,
                    "base_address": 4,
                    "config_value": 1,
                    "data_address": 1,
                    "data_ptr": 1,
                    "data_value": 2,
                    "flag_value": 1,
                    "permissions": 1,
                    "pointer1": 1,
                    "ptr": 14,
                    "ptr_to_permissions": 1,
                    "register_index": 1
                },
                "param_1": {
                    "config": 1,
                    "config_pointer": 1,
                    "data": 1,
                    "data_pointer": 2,
                    "flag_ptr": 1,
                    "flags": 3,
                    "flags_array": 1,
                    "input": 1,
                    "param_array": 2,
                    "parameter1": 1,
                    "permission_data": 1,
                    "permissions": 10,
                    "permissions_array": 2,
                    "permissions_pointer": 1,
                    "register_array": 1,
                    "settings": 2
                },
                "param_2": {
                    "data_array": 1,
                    "data_ptr": 1,
                    "flag_pointer": 1,
                    "flags": 2,
                    "flags_pointer": 1,
                    "mask": 5,
                    "mask_data": 1,
                    "mask_pointer": 1,
                    "new_values": 1,
                    "parameter2": 1,
                    "settings": 1,
                    "status": 2,
                    "value_array": 2,
                    "values": 7,
                    "values_array": 2,
                    "values_pointer": 1,
                    "values_to_update": 1
                },
                "uVar1": {
                    "bitmask": 1,
                    "current_mask": 2,
                    "current_status": 1,
                    "data1": 1,
                    "first_mask": 2,
                    "flag1": 2,
                    "flag_value1": 1,
                    "mask": 1,
                    "mask1": 1,
                    "mask2": 1,
                    "new_value1": 2,
                    "status_value": 1,
                    "temp_var1": 1,
                    "updated_value1": 1,
                    "value1": 10,
                    "value2": 3
                },
                "uVar2": {
                    "result": 19,
                    "return_value": 11,
                    "status": 1
                },
                "uVar4": {
                    "data0": 1,
                    "flag2": 2,
                    "flag_value2": 1,
                    "mask0": 1,
                    "mask1": 1,
                    "mask_offset": 1,
                    "mask_value": 5,
                    "modified_value": 1,
                    "new_value": 1,
                    "new_value2": 2,
                    "updated_value2": 1,
                    "value": 1,
                    "value0": 3,
                    "value1": 3,
                    "value2": 6
                }
            },
            "called": [],
            "calling": [
                "FUN_0800458c"
            ],
            "code": "\nundefined4 update_permissions_080025a4(int *permissions,uint *values)\n\n{\n  uint value1;\n  undefined4 result;\n  int ptr;\n  uint value2;\n  \n  result = 2;\n  if (*(char *)(permissions + 0xe) != '\\x01') {\n    *(undefined *)((int)permissions + 0x39) = 2;\n    ptr = *permissions;\n    value2 = *values;\n    value1 = values[1];\n    *(uint *)(ptr + 4) = *(uint *)(ptr + 4) & 0xffffff8f;\n    *(uint *)(ptr + 4) = *(uint *)(ptr + 4) | value2;\n    *(uint *)(ptr + 8) = *(uint *)(ptr + 8) & 0xffffff7f;\n    *(uint *)(ptr + 8) = *(uint *)(ptr + 8) | value1;\n    *(undefined *)((int)permissions + 0x39) = 1;\n    result = 0;\n    *(undefined *)(permissions + 0xe) = 0;\n  }\n  return result;\n}\n\n",
            "current_name": "update_permissions_080025a4",
            "entrypoint": "0x080025a4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080025a4": "update_permissions_080025a4",
                "iVar3": "ptr",
                "param_1": "permissions",
                "param_2": "values",
                "uVar1": "value1",
                "uVar2": "result",
                "uVar4": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080025e8": {
            "additional_data": {
                "FUN_08002220": {
                    "calculate2": 1,
                    "calculate_value2": 4,
                    "get_another_random_value": 1,
                    "get_another_value": 1,
                    "get_other_random_value": 1,
                    "get_random_value2": 1,
                    "get_random_value_alt": 1,
                    "get_value2": 1
                },
                "FUN_08002250": {
                    "calculate1": 1,
                    "calculate_value1": 4,
                    "get_random_value": 3,
                    "get_random_value1": 1,
                    "get_some_value": 1,
                    "get_value1": 1
                },
                "FUN_080025e8": {
                    "calculate_and_set_values": 1,
                    "calculate_and_update_values": 1,
                    "update_configuration": 5,
                    "update_control_registers": 1,
                    "update_data": 6,
                    "update_function_data": 1,
                    "update_memory_address": 1,
                    "update_memory_values": 2,
                    "update_parameter_values": 1,
                    "update_parameters": 2,
                    "update_registers": 1,
                    "update_values": 8
                },
                "iVar1": {
                    "calculation1": 1,
                    "rand_value1": 1,
                    "random_value1": 3,
                    "random_var1": 1,
                    "result1": 17,
                    "result_1": 1,
                    "temp1": 1,
                    "temp_var1": 1,
                    "value1": 3,
                    "var5": 1,
                    "var6": 1
                },
                "iVar2": {
                    "calculation2": 1,
                    "rand_value2": 1,
                    "random_value2": 3,
                    "random_var2": 1,
                    "result2": 17,
                    "result_2": 1,
                    "temp2": 1,
                    "temp_var2": 1,
                    "value2": 3,
                    "var5": 1,
                    "var6": 1
                },
                "iVar4": {
                    "calc1": 1,
                    "calc_value1": 1,
                    "calculated_value1": 3,
                    "calculation1": 1,
                    "modified_result1": 1,
                    "new_value4": 1,
                    "random_var4": 1,
                    "result1": 4,
                    "result3": 1,
                    "result4": 10,
                    "result_3": 1,
                    "temp_var4": 1,
                    "updated_value1": 1,
                    "value1": 1,
                    "value4": 1,
                    "var3": 2
                },
                "iVar5": {
                    "calc2": 1,
                    "calc_value2": 1,
                    "calculated_value2": 1,
                    "calculation2": 1,
                    "input_value": 1,
                    "new_value5": 1,
                    "param1_value": 2,
                    "param_1_val_1": 1,
                    "parameter1": 1,
                    "random_var5": 1,
                    "result2": 3,
                    "result4": 1,
                    "result5": 10,
                    "temp_var5": 1,
                    "value2": 1,
                    "value5": 1,
                    "var1": 1,
                    "var4": 2
                },
                "iVar6": {
                    "address": 3,
                    "base_address": 7,
                    "current_address": 1,
                    "i_var6_value": 1,
                    "input_value": 1,
                    "memory_address": 3,
                    "memory_value": 1,
                    "new_value6": 1,
                    "param_value": 1,
                    "pointer": 1,
                    "ptr": 2,
                    "ptr_value": 3,
                    "target_address": 1,
                    "value": 2,
                    "var1": 2,
                    "var2": 1
                },
                "param_1": {
                    "config": 1,
                    "config_params": 2,
                    "configuration": 2,
                    "control_registers": 1,
                    "data": 4,
                    "data_ptr": 1,
                    "function_data": 1,
                    "input_array": 2,
                    "input_data": 2,
                    "input_values": 1,
                    "memory_address": 1,
                    "memory_pointer": 1,
                    "memory_records": 1,
                    "parameter": 1,
                    "parameter_array": 1,
                    "parameters": 5,
                    "registers": 1,
                    "values": 3
                },
                "uVar3": {
                    "calculation3": 1,
                    "param_1_val_4": 1,
                    "rand_value3": 1,
                    "random_value3": 3,
                    "random_var3": 1,
                    "result3": 16,
                    "temp3": 1,
                    "temp_var3": 1,
                    "value1": 1,
                    "value3": 3,
                    "var2": 2
                }
            },
            "called": [
                "FUN_08002220",
                "FUN_08002250"
            ],
            "calling": [
                "FUN_08002724"
            ],
            "code": "\nvoid update_memory_values_080025e8(int *parameters)\n\n{\n  int result1;\n  int result2;\n  uint result3;\n  int result4;\n  int result5;\n  int base_address;\n  \n  base_address = *parameters;\n  result3 = parameters[4];\n  *(uint *)(base_address + 0x10) = *(uint *)(base_address + 0x10) & 0xffffcfff | parameters[3];\n  *(uint *)(base_address + 0xc) = parameters[2] | result3 | parameters[5] | *(uint *)(base_address + 0xc) & 0xffffe9f3;\n  *(uint *)(base_address + 0x14) = *(uint *)(base_address + 0x14) & 0xfffffcff | parameters[6];\n  if (base_address == 0x40013800) {\n    result1 = FUN_08002250();\n    result4 = (int)(((ulonglong)(uint)(result1 * 0x19) / (ulonglong)(uint)(parameters[1] << 2)) / 100);\n    result1 = FUN_08002250();\n    result5 = parameters[1];\n    result2 = FUN_08002250();\n    result2 = (uint)(result1 * 0x19) / (uint)(result5 << 2) +\n            (int)(((ulonglong)(uint)(result2 * 0x19) / (ulonglong)(uint)(parameters[1] << 2)) / 100) *\n            -100;\n    result1 = FUN_08002250();\n    result3 = (uint)(result1 * 0x19) / (uint)(parameters[1] << 2);\n    result1 = FUN_08002250();\n  }\n  else {\n    result1 = FUN_08002220();\n    result4 = (int)(((ulonglong)(uint)(result1 * 0x19) / (ulonglong)(uint)(parameters[1] << 2)) / 100);\n    result1 = FUN_08002220();\n    result5 = parameters[1];\n    result2 = FUN_08002220();\n    result2 = (uint)(result1 * 0x19) / (uint)(result5 << 2) +\n            (int)(((ulonglong)(uint)(result2 * 0x19) / (ulonglong)(uint)(parameters[1] << 2)) / 100) *\n            -100;\n    result1 = FUN_08002220();\n    result3 = (uint)(result1 * 0x19) / (uint)(parameters[1] << 2);\n    result1 = FUN_08002220();\n  }\n  *(uint *)(base_address + 8) =\n       (((result3 + (int)(((ulonglong)(uint)(result1 * 0x19) / (ulonglong)(uint)(parameters[1] << 2)) / 100\n                       ) * -100) * 0x10 + 0x32) / 100 & 0xf | (result2 * 0x10 + 0x32U) / 100 & 0xf0) +\n       result4 * 0x10;\n  return;\n}\n\n",
            "current_name": "update_memory_values_080025e8",
            "entrypoint": "0x080025e8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080025e8": "update_memory_values_080025e8",
                "iVar1": "result1",
                "iVar2": "result2",
                "iVar4": "result4",
                "iVar5": "result5",
                "iVar6": "base_address",
                "param_1": "parameters",
                "uVar3": "result3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002724": {
            "additional_data": {
                "FUN_080025e8": {
                    "configure_device": 1,
                    "execute_function2": 1,
                    "execute_function_b": 1,
                    "execute_sub_function_b": 1,
                    "execute_task2": 1,
                    "execute_task_b": 1,
                    "handle_param": 1,
                    "modify_values": 1,
                    "operation_b": 1,
                    "perform_action_b": 1,
                    "process_data": 2,
                    "process_input": 2,
                    "process_param": 3,
                    "process_parameter": 1,
                    "update_data": 1,
                    "update_data_structure": 1,
                    "update_status": 1,
                    "update_values": 1,
                    "update_variable_ptr": 1
                },
                "FUN_08002724": {
                    "check_and_initialize_data": 1,
                    "check_and_set_flags": 1,
                    "check_and_update_flags": 3,
                    "check_and_update_param": 2,
                    "initialize_data": 4,
                    "initialize_data_structure": 2,
                    "initialize_device": 2,
                    "initialize_param": 1,
                    "initialize_parameter": 1,
                    "process_data": 1,
                    "process_param": 1,
                    "update_and_reset_param": 1,
                    "update_control_info": 1,
                    "validate_and_initialize": 1,
                    "validate_and_modify": 1,
                    "validate_and_set_variable": 1,
                    "validate_and_update": 2,
                    "validate_input": 1,
                    "validate_param": 2,
                    "validate_parameters": 1,
                    "verify_input": 1
                },
                "FUN_08004e7c": {
                    "execute_cleanup": 1,
                    "execute_function1": 1,
                    "execute_function_a": 1,
                    "execute_operation": 1,
                    "execute_sub_function_a": 1,
                    "execute_task1": 1,
                    "execute_task_a": 1,
                    "initialize_data": 2,
                    "initialize_flag": 1,
                    "initialize_function": 1,
                    "initialize_variable_ptr": 1,
                    "operation_a": 1,
                    "perform_action": 2,
                    "perform_action_a": 1,
                    "perform_additional_checks": 1,
                    "perform_cleanup": 1,
                    "perform_initialization": 2,
                    "perform_operation": 1,
                    "perform_update": 1,
                    "process_input": 1,
                    "reset_device": 1,
                    "update_data": 1
                },
                "PTR_int_39": {
                    "data_flag": 1
                },
                "iVar1": {
                    "data": 1,
                    "data_ptr": 1,
                    "device_value": 1,
                    "first_elem": 1,
                    "first_value": 1,
                    "flag": 1,
                    "index": 2,
                    "param_var": 1,
                    "pointer": 3,
                    "ptr_value": 1,
                    "temp": 2,
                    "temp_var": 10,
                    "temp_var1": 1,
                    "temp_variable": 1,
                    "var1": 1,
                    "variable_1": 1
                },
                "param_1": {
                    "control_info": 1,
                    "data": 3,
                    "data_pointer": 1,
                    "data_ptr": 3,
                    "data_struct": 1,
                    "data_structure": 1,
                    "device": 2,
                    "flags": 1,
                    "input_array": 4,
                    "input_data": 1,
                    "input_ptr": 1,
                    "param": 7,
                    "param_ptr": 1,
                    "parameter": 3,
                    "variable_ptr": 1
                }
            },
            "called": [
                "FUN_08004e7c",
                "FUN_080025e8"
            ],
            "calling": [
                "FUN_0800458c"
            ],
            "code": "\nundefined4 initialize_data_structure_08002724(int *param)\n\n{\n  int temp_var;\n  \n  if (param != (int *)0x0) {\n    if (*(char *)((int)param + 0x39) == '\\0') {\n      *(undefined *)(param + 0xe) = 0;\n      FUN_08004e7c();\n    }\n    *(undefined *)((int)param + 0x39) = 2;\n    *(uint *)(*param + 0xc) = *(uint *)(*param + 0xc) & 0xffffdfff;\n    FUN_080025e8(param);\n    temp_var = *param;\n    *(uint *)(temp_var + 0x10) = *(uint *)(temp_var + 0x10) & 0xffffb7ff;\n    *(uint *)(temp_var + 0x14) = *(uint *)(temp_var + 0x14) & 0xffffffd5;\n    *(uint *)(temp_var + 0xc) = *(uint *)(temp_var + 0xc) | 0x2000;\n    param[0xf] = 0;\n    *(undefined *)((int)param + 0x39) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "initialize_data_structure_08002724",
            "entrypoint": "0x08002724",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002724": "initialize_data_structure_08002724",
                "iVar1": "temp_var",
                "param_1": "param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800290a": {
            "called": [],
            "calling": [
                "FUN_0800299a"
            ],
            "code": "\nvoid FUNC_0800290a(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800290a",
            "entrypoint": "0x0800290a",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800290a": "FUNC_0800290a"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800290c": {
            "additional_data": {
                "FUN_0800290c": {
                    "analyze_data": 1,
                    "decode_and_modify_data": 1,
                    "decode_and_update": 1,
                    "decode_and_update_data": 1,
                    "decode_and_update_value": 1,
                    "decode_data": 1,
                    "extract_and_update_data": 1,
                    "extract_data": 1,
                    "parse_data": 1,
                    "parse_function": 1,
                    "process_data": 17,
                    "validate_and_process_data": 1
                },
                "FUN_08004c30": {
                    "cleanup_data": 1,
                    "execute_function": 1
                },
                "F_UNK_0800290c": {
                    "process_data": 1
                },
                "bVar1": {
                    "byte_flag": 1,
                    "byte_val": 3,
                    "byte_value": 16,
                    "byte_var": 1,
                    "flag_byte": 1,
                    "modified_byte": 1,
                    "temp_byte": 5,
                    "value": 2
                },
                "bVar8": {
                    "bool_value": 1,
                    "check_flag": 1,
                    "comparison_flag": 1,
                    "condition": 8,
                    "flag": 3,
                    "is_condition_met": 8,
                    "is_condition_true": 4,
                    "is_flag_set": 1,
                    "is_not2": 1,
                    "is_not_2": 1,
                    "is_true": 1,
                    "is_type2": 1
                },
                "iVar2": {
                    "address": 3,
                    "base_addr": 2,
                    "base_address": 4,
                    "data": 2,
                    "data_array_0": 1,
                    "data_type": 1,
                    "first_element": 1,
                    "function_ptr": 1,
                    "function_var": 1,
                    "original_value": 1,
                    "ptr": 4,
                    "ptr_data": 3,
                    "ptr_value": 1,
                    "temp_int": 1,
                    "value": 1,
                    "var1": 4
                },
                "param_1": {
                    "data": 20,
                    "data_array": 3,
                    "data_ptr": 1,
                    "input": 2,
                    "input_array": 3,
                    "input_data": 2
                },
                "puVar6": {
                    "data_pointer": 1,
                    "pointer1": 1,
                    "pointer_1": 1,
                    "ptr": 1,
                    "ptr1": 6,
                    "ptr_u_short": 1,
                    "ptr_ushort": 1,
                    "ushort_pointer": 7,
                    "ushort_pointer1": 1,
                    "ushort_ptr": 5,
                    "ushort_ptr1": 5,
                    "ushort_ptr_1": 1
                },
                "puVar7": {
                    "modified_ushort_pointer": 1,
                    "new_ushort_pointer": 1,
                    "new_ushort_ptr": 1,
                    "next_ptr": 1,
                    "next_ushort_ptr": 2,
                    "pointer2": 1,
                    "pointer_2": 1,
                    "ptr2": 6,
                    "temp_u_short": 1,
                    "updated_data_pointer": 1,
                    "updated_pointer": 1,
                    "updated_ptr_ushort": 1,
                    "updated_u_short_pointer": 1,
                    "updated_ushort_pointer": 2,
                    "updated_ushort_ptr": 2,
                    "ushort_pointer2": 1,
                    "ushort_pointer_2": 1,
                    "ushort_ptr2": 5,
                    "ushort_ptr_2": 1
                },
                "sVar5": {
                    "count": 11,
                    "count_value": 1,
                    "count_var": 1,
                    "counter": 10,
                    "decremented_value": 1,
                    "short_value": 1,
                    "temp_short": 4,
                    "var4": 2
                },
                "uVar3": {
                    "flag": 2,
                    "mask": 2,
                    "mask_value": 1,
                    "modified_bits": 1,
                    "modified_val": 1,
                    "new_value": 1,
                    "result": 4,
                    "temp_uint": 4,
                    "temp_value": 3,
                    "temp_variable": 1,
                    "uint_value": 1,
                    "updated_value": 4,
                    "updated_var": 1,
                    "value": 1,
                    "var2": 4
                },
                "uVar4": {
                    "extra_value": 1,
                    "int_value": 1,
                    "interpreted_value": 1,
                    "modified_value": 1,
                    "temp": 3,
                    "temp_uint2": 2,
                    "temp_undefined": 2,
                    "temp_val": 1,
                    "temp_value": 4,
                    "temp_value2": 1,
                    "temp_var": 2,
                    "temp_variable": 1,
                    "temp_variable_2": 1,
                    "unknown_value": 1,
                    "updated_var2": 1,
                    "value": 4,
                    "var3": 4
                }
            },
            "called": [
                "FUN_08004c30"
            ],
            "calling": [
                "FUN_0800299a"
            ],
            "code": "\nundefined4 validate_and_process_data_0800290c(int *data)\n\n{\n  byte byte_value;\n  int ptr;\n  uint updated_value;\n  undefined4 temp_value;\n  short count;\n  ushort *ushort_pointer;\n  ushort *ptr2;\n  bool is_condition_met;\n  \n  if ((*(byte *)((int)data + 0x39) & 0xef) != 0x22) {\n    return 2;\n  }\n  ptr = *data;\n  ushort_pointer = (ushort *)data[10];\n  if (data[2] == 0x1000) {\n    if (data[4] == 0) {\n      ptr2 = ushort_pointer + 1;\n      *ushort_pointer = (ushort)((uint)(*(int *)(ptr + 4) << 0x17) >> 0x17);\n    }\n    else {\n      ptr2 = (ushort *)((int)ushort_pointer + 1);\n      *ushort_pointer = (ushort)*(int *)(ptr + 4) & 0xff;\n    }\n    data[10] = (int)ptr2;\n  }\n  else {\n    if (data[4] == 0) {\n      byte_value = (byte)*(undefined4 *)(ptr + 4);\n      data[10] = (int)ushort_pointer + 1;\n    }\n    else {\n      temp_value = *(undefined4 *)(ptr + 4);\n      data[10] = (int)ushort_pointer + 1;\n      byte_value = (byte)temp_value & 0x7f;\n    }\n    *(byte *)ushort_pointer = byte_value;\n  }\n  count = *(short *)((int)data + 0x2e) + -1;\n  *(short *)((int)data + 0x2e) = count;\n  if (count == 0) {\n    ptr = *data;\n    *(uint *)(ptr + 0xc) = *(uint *)(ptr + 0xc) & 0xffffffdf;\n    is_condition_met = *(char *)((int)data + 0x39) != '2';\n    if (is_condition_met) {\n      updated_value = *(uint *)(ptr + 0xc) & 0xfffffeff;\n    }\n    else {\n      ptr = 0x12;\n      updated_value = 0x32;\n    }\n    if (is_condition_met) {\n      *(uint *)(ptr + 0xc) = updated_value;\n      updated_value = *(uint *)(ptr + 0x14) & 0xfffffffe;\n    }\n    if (is_condition_met) {\n      *(uint *)(ptr + 0x14) = updated_value;\n      ptr = 1;\n    }\n    *(char *)((int)data + 0x39) = (char)ptr;\n    FUN_08004c30();\n  }\n  return 0;\n}\n\n",
            "current_name": "validate_and_process_data_0800290c",
            "entrypoint": "0x0800290c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800290c": "validate_and_process_data_0800290c",
                "bVar1": "byte_value",
                "bVar8": "is_condition_met",
                "iVar2": "ptr",
                "param_1": "data",
                "puVar6": "ushort_pointer",
                "puVar7": "ptr2",
                "sVar5": "count",
                "uVar3": "updated_value",
                "uVar4": "temp_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002998": {
            "called": [],
            "calling": [
                "FUN_0800299a"
            ],
            "code": "\nvoid FUNC_08002998(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08002998",
            "entrypoint": "0x08002998",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08002998": "FUNC_08002998"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800299a": {
            "additional_data": {
                "FUNC_0800290a": {
                    "handle_third_condition": 1,
                    "initialize_data": 1,
                    "perform_action": 2,
                    "perform_operation": 2,
                    "process_data": 1,
                    "process_value": 1,
                    "sub_function_one": 1
                },
                "FUNC_0800290c": {
                    "do_something": 1,
                    "handle_error": 3,
                    "handle_negative_case": 1,
                    "handle_negative_values": 1
                },
                "FUNC_08002998": {
                    "cleanup": 1,
                    "do_another_thing": 1,
                    "execute_function": 2,
                    "execute_sub_function": 1,
                    "handle_second_condition": 1,
                    "perform_action": 3,
                    "perform_operation": 1,
                    "process_data_again": 1,
                    "reverse_operation2": 1,
                    "sub_function_three": 1
                },
                "FUN_0800290a": {
                    "process_task": 1
                },
                "FUN_0800290c": {
                    "execute_function": 1,
                    "handle_first_condition": 1,
                    "log_error": 1,
                    "perform_action": 1,
                    "process_data": 1,
                    "reverse_operation1": 1,
                    "sub_function_two": 1
                },
                "FUN_0800299a": {
                    "analyze_data": 4,
                    "analyze_function": 1,
                    "check_and_process_data": 2,
                    "process_data": 19,
                    "process_input": 1,
                    "process_params": 1
                },
                "bVar8": {
                    "bool_flag": 2,
                    "bool_var": 3,
                    "bool_variable": 1,
                    "check": 1,
                    "check_flag": 1,
                    "condition": 12,
                    "flag": 2,
                    "flag2": 1,
                    "is_flag2": 1,
                    "is_negative": 2,
                    "is_true": 1,
                    "var6": 1,
                    "var8": 2
                },
                "param_1": {
                    "data": 18,
                    "data_array": 2,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "input": 1,
                    "input_data": 3,
                    "input_params": 2,
                    "parameter_array": 1,
                    "params": 2
                },
                "puVar4": {
                    "pointer": 3,
                    "pointer1": 10,
                    "pointer_1": 2,
                    "pointer_var1": 1,
                    "pointer_variable": 1,
                    "ptr": 2,
                    "ptr1": 2,
                    "ptr_four": 1,
                    "ptr_value": 1,
                    "temp_ptr": 1,
                    "var2": 1,
                    "var4": 5
                },
                "puVar6": {
                    "current_data": 1,
                    "pointer2": 10,
                    "pointer_2": 1,
                    "pointer_var2": 1,
                    "pointer_variable_2": 1,
                    "ptr": 4,
                    "ptr1": 1,
                    "ptr2": 2,
                    "ptr_data": 2,
                    "ptr_input_data": 1,
                    "ptr_six": 1,
                    "ptr_to_input": 1,
                    "var4": 1,
                    "var6": 3
                },
                "sVar2": {
                    "count": 10,
                    "counter": 12,
                    "second_param": 1,
                    "second_value": 1,
                    "value_2": 1,
                    "var2": 5
                },
                "uVar1": {
                    "first_param": 3,
                    "first_value": 5,
                    "value1": 15,
                    "value_1": 2,
                    "var1": 5
                },
                "uVar3": {
                    "param_one": 1,
                    "second_value": 4,
                    "third_value": 1,
                    "value1": 1,
                    "value2": 15,
                    "value_2": 1,
                    "value_3": 1,
                    "var1": 1,
                    "var3": 5
                },
                "uVar5": {
                    "byte_value": 1,
                    "condition": 1,
                    "flag": 12,
                    "new_value": 2,
                    "temp": 1,
                    "temp_var": 1,
                    "u_value": 1,
                    "undefined_value": 1,
                    "undefined_var": 1,
                    "value3": 2,
                    "value_4": 1,
                    "var3": 1,
                    "var5": 5
                },
                "uVar7": {
                    "bool_value": 1,
                    "conditional_value": 1,
                    "flag": 9,
                    "flag2": 9,
                    "flag_2": 1,
                    "flag_two": 1,
                    "value4": 1,
                    "value_5": 1,
                    "var5": 1,
                    "var7": 5
                }
            },
            "called": [
                "FUN_0800290a",
                "FUN_0800290c",
                "FUN_08002998"
            ],
            "calling": [],
            "code": "\nvoid check_and_process_data_0800299a(uint **data)\n\n{\n  uint value1;\n  short counter;\n  uint value2;\n  uint *pointer1;\n  undefined flag;\n  uint *pointer2;\n  uint flag;\n  bool condition;\n  \n  pointer2 = *data;\n  value2 = *pointer2;\n  value1 = pointer2[3];\n  if ((value2 & 0xf) == 0) {\n    if (((int)(value2 << 0x1a) < 0) && ((int)(value1 << 0x1a) < 0)) {\n      FUN_0800290c();\n      return;\n    }\n  }\n  else {\n    flag = pointer2[5] & 1;\n    if ((flag != 0) || ((value1 & 0x120) != 0)) {\n      pointer2 = (uint *)(value2 << 0x1f);\n      if ((int)pointer2 < 0) {\n        condition = (int)(value1 << 0x17) < 0;\n        if (condition) {\n          pointer2 = (uint *)((uint)data[0xf] | 1);\n        }\n        if (condition) {\n          data[0xf] = pointer2;\n        }\n      }\n      if (((int)(value2 << 0x1d) < 0) && (flag != 0)) {\n        data[0xf] = (uint *)((uint)data[0xf] | 2);\n      }\n      if (((int)(value2 << 0x1e) < 0) && (flag != 0)) {\n        data[0xf] = (uint *)((uint)data[0xf] | 4);\n      }\n      if (((int)(value2 << 0x1c) < 0) && (flag != 0)) {\n        data[0xf] = (uint *)((uint)data[0xf] | 8);\n      }\n      if (data[0xf] == (uint *)0x0) {\n        return;\n      }\n      if (((int)(value2 << 0x1a) < 0) && ((int)(value1 << 0x1a) < 0)) {\n        FUN_0800290c(data);\n      }\n      pointer2 = *data;\n      if ((-1 < (int)data[0xf] << 0x1c) && ((pointer2[5] & 0x40) == 0)) {\n        FUNC_08002998(data);\n        data[0xf] = (uint *)0x0;\n        return;\n      }\n      pointer2[3] = pointer2[3] & 0xfffffedf;\n      pointer2[5] = pointer2[5] & 0xfffffffe;\n      *(undefined *)((int)data + 0x39) = 1;\n      FUNC_08002998(data);\n      return;\n    }\n  }\n  if (((int)(value2 << 0x18) < 0) && ((int)(value1 << 0x18) < 0)) {\n    if ((*(byte *)((int)data + 0x39) & 0xdf) == 0x12) {\n      pointer1 = data[8];\n      if (data[2] == (uint *)0x1000) {\n        pointer2[1] = *(ushort *)pointer1 & 0x1ff;\n        if (data[4] == (uint *)0x0) {\n          pointer1 = (uint *)((int)pointer1 + 2);\n        }\n        else {\n          pointer1 = (uint *)((int)pointer1 + 1);\n        }\n        data[8] = pointer1;\n      }\n      else {\n        data[8] = (uint *)((int)pointer1 + 1);\n        pointer2[1] = (uint)*(byte *)pointer1;\n      }\n      counter = *(short *)((int)data + 0x26) + -1;\n      *(short *)((int)data + 0x26) = counter;\n      if (counter == 0) {\n        pointer2[3] = pointer2[3] & 0xffffff7f;\n        pointer2[3] = pointer2[3] | 0x40;\n        return;\n      }\n    }\n  }\n  else if (((int)(value2 << 0x19) < 0) && ((int)(value1 << 0x19) < 0)) {\n    pointer2[3] = pointer2[3] & 0xffffffbf;\n    if (*(char *)((int)data + 0x39) == '2') {\n      flag = 0x22;\n    }\n    else {\n      flag = 1;\n    }\n    *(undefined *)((int)data + 0x39) = flag;\n    FUNC_0800290a(data);\n  }\n  return;\n}\n\n",
            "current_name": "check_and_process_data_0800299a",
            "entrypoint": "0x0800299a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800299a": "check_and_process_data_0800299a",
                "bVar8": "condition",
                "param_1": "data",
                "puVar4": "pointer1",
                "puVar6": "pointer2",
                "sVar2": "counter",
                "uVar1": "value1",
                "uVar3": "value2",
                "uVar5": "flag",
                "uVar7": "flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ad0": {
            "additional_data": {
                "FUN_08002ad0": {
                    "initialize_mpu9250": 31
                },
                "FUN_0800403c": {
                    "configure_mpu9250": 1,
                    "configure_mpu9250_registers": 1,
                    "configure_register": 4,
                    "configure_sensor": 6,
                    "set_parameter": 1,
                    "set_register": 1,
                    "set_register_value": 5,
                    "write_byte_to_register": 1,
                    "write_mpu9250_register": 1,
                    "write_register": 7,
                    "write_to_register_with_value": 1,
                    "write_with_delay": 1
                },
                "FUN_0800407c": {
                    "log_data": 2,
                    "log_debug_message": 1,
                    "log_error": 2,
                    "log_file_details": 1,
                    "log_file_info": 2,
                    "log_information": 1,
                    "log_initialization": 2,
                    "log_initialization_message": 1,
                    "log_message": 9,
                    "log_mpu9250_data": 1,
                    "print_debug_info": 1,
                    "print_debug_message": 1,
                    "print_error": 1,
                    "set_mpu9250_config": 1,
                    "write_log": 1,
                    "write_to_register": 3
                },
                "numBytes": {
                    "num_bytes_to_write": 1
                },
                "param_1": {
                    "address": 9,
                    "chip_select": 1,
                    "device_address": 2,
                    "param1": 1,
                    "port": 1,
                    "register_address": 4,
                    "target_address": 1
                },
                "param_2": {
                    "address": 1,
                    "data": 2,
                    "param2": 2,
                    "reg": 1,
                    "reg_address": 1,
                    "register": 1,
                    "register_address": 2,
                    "value": 9
                },
                "param_3": {
                    "data": 1,
                    "data_value": 1,
                    "file": 1,
                    "option": 1,
                    "optional_param": 1,
                    "param3": 5,
                    "param_3": 6,
                    "value": 3
                },
                "param_4": {
                    "byte_count": 1,
                    "count": 1,
                    "enable": 1,
                    "flag": 1,
                    "length": 2,
                    "line": 1,
                    "num_bytes": 1,
                    "param4": 5,
                    "param_4": 6
                },
                "registerAddress": {
                    "mpu9250_register": 1
                },
                "value": {
                    "configuration_value": 1
                }
            },
            "called": [
                "FUN_0800407c",
                "FUN_0800403c"
            ],
            "calling": [
                "FUN_08002ea0"
            ],
            "code": "\nvoid initialize_mpu9250_08002ad0(void)\n\n{\n  FUN_0800407c(0xd0,0x75,\"../Src/MPU9250.c\",0x3b);\n  FUN_0800403c(0xd0,0x6b,0x80,1);\n  FUN_0800403c(0xd0,0x6b,1);\n  FUN_0800403c(0xd0,0x6c,0,1);\n  FUN_0800403c(0xd0,0x19,0,1);\n  FUN_0800403c(0xd0,0x1d,3,1);\n  FUN_0800403c(0xd0,0x1a,3,1);\n  FUN_0800403c(0xd0,0x1b,0x10,1);\n  FUN_0800403c(0xd0,0x1c,8,1);\n  return;\n}\n\n",
            "current_name": "initialize_mpu9250_08002ad0",
            "entrypoint": "0x08002ad0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002ad0": "initialize_mpu9250_08002ad0"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002b48": {
            "additional_data": {
                "0x38000000": {
                    "mask3": 1,
                    "param2": 1
                },
                "0x3b": {
                    "constant2": 2,
                    "param2": 1
                },
                "0x40800000": {
                    "mask2": 1,
                    "param1": 1
                },
                "0x58": {
                    "line_number": 2,
                    "param4": 1,
                    "param5": 1
                },
                "0xd0": {
                    "constant1": 2,
                    "param1": 2
                },
                "0xffff0000": {
                    "mask1": 1
                },
                "6": {
                    "constant3": 2,
                    "param2": 1,
                    "param3": 1
                },
                "DAT_200002d0": {
                    "calculated_value1": 1,
                    "data4": 1,
                    "final_output1": 1,
                    "final_result1": 1,
                    "processed_data1": 1,
                    "processed_value1": 1,
                    "result1": 1,
                    "result3": 1,
                    "result_1": 1,
                    "result_value1": 1,
                    "result_var8": 1,
                    "var8": 1
                },
                "DAT_200002d4": {
                    "calculated_value2": 1,
                    "data5": 1,
                    "final_output2": 1,
                    "final_result2": 1,
                    "processed_data2": 1,
                    "processed_value2": 1,
                    "result2": 1,
                    "result4": 1,
                    "result_2": 1,
                    "result_value2": 1,
                    "result_var9": 1,
                    "var9": 1
                },
                "DAT_200002d8": {
                    "calculated_value3": 1,
                    "data6": 1,
                    "final_output3": 1,
                    "final_result3": 1,
                    "processed_data3": 1,
                    "processed_value3": 1,
                    "result3": 1,
                    "result5": 1,
                    "result_3": 1,
                    "result_value3": 1,
                    "result_var10": 1,
                    "var10": 1
                },
                "DAT_200002f4": {
                    "byte2": 1,
                    "byte_value2": 1,
                    "combined_first_half_value": 1,
                    "converted_output1_high": 1,
                    "data2": 3,
                    "data_value2": 1,
                    "mid_order_byte": 1,
                    "result1_concat_2": 1,
                    "result_var6": 1,
                    "temperature_byte1": 1,
                    "var4": 1
                },
                "DAT_200002f6": {
                    "byte1": 1,
                    "byte_value1": 1,
                    "combined_first_and_second_half_value": 1,
                    "converted_output1_low": 1,
                    "data1": 3,
                    "data_value1": 1,
                    "low_order_byte": 1,
                    "result1_concat": 1,
                    "result_var5": 1,
                    "temperature_high_byte": 1,
                    "var3": 1
                },
                "DAT_200002f8": {
                    "byte3": 1,
                    "byte_value3": 1,
                    "combined_second_half_value": 1,
                    "converted_output2_high": 1,
                    "data3": 3,
                    "data_value3": 1,
                    "high_order_byte": 1,
                    "input_byte1": 1,
                    "result2_concat_2": 1,
                    "result_var7": 1,
                    "var5": 1
                },
                "FUN_08000c44": {
                    "calculate_result": 1,
                    "calculate_value": 1,
                    "convert_value": 1,
                    "extract_data": 1,
                    "fetch_data": 1,
                    "function_c": 1,
                    "get_converted_value": 1,
                    "get_register_value": 1,
                    "get_result": 1,
                    "get_sensor_data": 1,
                    "get_sensor_value": 1,
                    "get_some_value": 1,
                    "get_value": 6,
                    "process_data": 1,
                    "process_value": 1,
                    "retrieve_value": 2
                },
                "FUN_08000cec": {
                    "apply_mask": 1,
                    "calculate_value": 9,
                    "compute_result": 1,
                    "compute_value": 1,
                    "function_b": 1,
                    "manipulate_data": 1,
                    "multiply": 1,
                    "perform_calculation": 2,
                    "perform_calculations": 1,
                    "perform_operation": 1,
                    "process_data": 1,
                    "process_sensor_data": 1
                },
                "FUN_08002b48": {
                    "configure_mpu9250": 1,
                    "initialize_mpu": 2,
                    "initialize_mpu9250": 27,
                    "initialize_sensor": 1
                },
                "FUN_080040e8": {
                    "call_sub_function": 1,
                    "execute_function": 2,
                    "extract_data": 1,
                    "function_a": 1,
                    "get_mpu9250_data": 1,
                    "get_values": 1,
                    "initialize_communication": 1,
                    "initialize_parameters": 1,
                    "initialize_register": 1,
                    "initialize_sensor": 1,
                    "perform_action": 1,
                    "perform_data_initialization": 1,
                    "perform_operation": 2,
                    "retrieve_sensor_data": 1,
                    "send_data": 1,
                    "set_mpu_value": 1,
                    "set_mpu_values": 1,
                    "write_register": 1,
                    "write_to_memory": 1,
                    "write_to_register": 1
                },
                "iVar2": {
                    "another_calculated_value": 1,
                    "byte3_to_int": 1,
                    "casted_result2": 1,
                    "converted_output2": 1,
                    "converted_value1": 1,
                    "converted_value2": 2,
                    "device_config2": 1,
                    "first_value": 1,
                    "high_byte": 1,
                    "high_order_byte_value": 1,
                    "input_low_byte": 1,
                    "int_var2": 1,
                    "low_byte": 1,
                    "result2_int": 2,
                    "result_var4": 1,
                    "second_int_value": 1,
                    "second_var_converted": 1,
                    "sensor_data2": 1,
                    "sensor_data_part2_int": 1,
                    "temp_var1": 1,
                    "value1": 1,
                    "value2": 2,
                    "value2_int": 1,
                    "var1": 1,
                    "var7": 1,
                    "variable2": 1
                },
                "iVar3": {
                    "byte1_to_int": 1,
                    "calculated_value": 1,
                    "casted_result1": 1,
                    "converted_output1": 1,
                    "converted_value1": 2,
                    "converted_value2": 1,
                    "device_config1": 1,
                    "first_int_value": 1,
                    "first_var_converted": 1,
                    "high_byte": 1,
                    "int_var1": 1,
                    "low_byte": 1,
                    "low_order_byte_value": 1,
                    "result1_int": 2,
                    "result_var3": 1,
                    "second_value": 1,
                    "sensor_data1": 1,
                    "sensor_data_part1_int": 1,
                    "temp_var2": 1,
                    "temperature_low_byte": 1,
                    "value1": 2,
                    "value1_int": 1,
                    "value2": 1,
                    "var2": 1,
                    "var6": 1,
                    "variable1": 1
                },
                "in_r3": {
                    "config_value": 1,
                    "input": 6,
                    "input_data": 3,
                    "input_flag": 3,
                    "input_mask": 1,
                    "input_value": 15,
                    "sensor_data": 1
                },
                "local_14": {
                    "data_b": 1,
                    "device_address": 1,
                    "lower_byte": 1,
                    "mask": 1,
                    "masked_input": 2,
                    "masked_value": 1,
                    "output2": 1,
                    "output_value2": 1,
                    "output_variable2": 1,
                    "result2": 6,
                    "result_mask": 1,
                    "result_var2": 1,
                    "second_half_value": 1,
                    "second_var": 1,
                    "sensor_data_part2": 1,
                    "temp2": 1,
                    "temp_value2": 3,
                    "temp_var2": 1,
                    "value2": 2,
                    "var2": 2
                },
                "local_18": {
                    "data_a": 1,
                    "device_config": 1,
                    "first_half_value": 1,
                    "first_var": 1,
                    "output1": 1,
                    "output_value1": 1,
                    "output_variable1": 1,
                    "register_concatenation": 1,
                    "register_value": 1,
                    "result": 2,
                    "result1": 6,
                    "result_var1": 1,
                    "sensor_data_part1": 1,
                    "temp1": 1,
                    "temp_value1": 3,
                    "temp_var1": 1,
                    "temperature": 1,
                    "upper_byte": 1,
                    "value1": 2,
                    "var1": 2
                },
                "param_1": {
                    "input1": 1,
                    "param1": 1
                },
                "param_2": {
                    "input2": 1,
                    "param2": 1
                },
                "param_3": {
                    "input3": 1,
                    "param3": 1
                },
                "param_4": {
                    "input4": 1,
                    "param4": 1
                },
                "uVar1": {
                    "calculated_value": 2,
                    "processed_value": 1,
                    "result": 13,
                    "temp": 2,
                    "temp_result": 1,
                    "temp_var": 2
                }
            },
            "called": [
                "FUN_080040e8",
                "FUN_08000cec",
                "FUN_08000c44"
            ],
            "calling": [
                "FUN_08002f28"
            ],
            "code": "\nvoid initialize_mpu9250_08002b48(void)\n\n{\n  undefined4 result;\n  uint input_value;\n  int result2_int;\n  int value1;\n  undefined4 result1;\n  undefined4 result2;\n  \n  result1 = 0;\n  result2 = input_value & 0xffff0000;\n  FUN_080040e8(0xd0,0x3b,&result1,6,\"../Src/MPU9250.c\",0x58);\n  DAT_200002f6 = CONCAT11(result1._2_1_,result1._3_1_);\n  DAT_200002f4 = CONCAT11((undefined)result1,result1._1_1_);\n  DAT_200002f8 = CONCAT11((undefined)result2,result2._1_1_);\n  value1 = (int)DAT_200002f6;\n  result2_int = (int)DAT_200002f8;\n  result = FUN_08000c44();\n  result = FUN_08000cec(result,0x40800000);\n  DAT_200002d0 = FUN_08000cec(result,0x38000000);\n  result = FUN_08000c44(value1);\n  result = FUN_08000cec(result,0x40800000);\n  DAT_200002d4 = FUN_08000cec(result,0x38000000);\n  result = FUN_08000c44(result2_int);\n  result = FUN_08000cec(result,0x40800000);\n  DAT_200002d8 = FUN_08000cec(result,0x38000000);\n  return;\n}\n\n",
            "current_name": "initialize_mpu9250_08002b48",
            "entrypoint": "0x08002b48",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002b48": "initialize_mpu9250_08002b48",
                "iVar2": "result2_int",
                "iVar3": "value1",
                "in_r3": "input_value",
                "local_14": "result2",
                "local_18": "result1",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002bf0": {
            "additional_data": {
                "0x43": {
                    "register_address": 1
                },
                "0x7b": {
                    "source_line": 1
                },
                "0xd0": {
                    "device_address": 1
                },
                "6": {
                    "byte_count": 1
                },
                "DAT_20000000": {
                    "calibration_data1": 1,
                    "constant1": 2,
                    "input_data1": 1,
                    "value4": 1
                },
                "DAT_20000004": {
                    "calibration_data2": 1,
                    "constant2": 2,
                    "input_data2": 1,
                    "value5": 1
                },
                "DAT_20000008": {
                    "calibration_data3": 1,
                    "constant3": 2,
                    "input_data3": 1,
                    "value6": 1
                },
                "DAT_200002be": {
                    "register_value2": 1,
                    "result2": 1,
                    "sensor_config_byte2": 1,
                    "sensor_config_data2": 1,
                    "source_data2": 1,
                    "value2": 1,
                    "variable3": 1
                },
                "DAT_200002c0": {
                    "register_value1": 1,
                    "result1": 1,
                    "sensor_config_byte1": 1,
                    "sensor_config_data1": 1,
                    "source_data1": 1,
                    "value1": 1,
                    "variable1": 1
                },
                "DAT_200002c2": {
                    "register_value3": 1,
                    "result3": 1,
                    "sensor_config_byte3": 1,
                    "sensor_config_data3": 1,
                    "source_data2_int": 1,
                    "value3": 1,
                    "variable2": 1
                },
                "DAT_200002c4": {
                    "calibrated_value1": 1,
                    "operation_result1": 1,
                    "result1": 2,
                    "result4": 1,
                    "stored_value1": 1,
                    "variable4": 1
                },
                "DAT_200002c8": {
                    "calibrated_value2": 1,
                    "operation_result2": 1,
                    "result2": 2,
                    "result5": 1,
                    "stored_value2": 1,
                    "variable5": 1
                },
                "DAT_200002cc": {
                    "calibrated_value3": 1,
                    "operation_result3": 1,
                    "result3": 2,
                    "result6": 1,
                    "stored_value3": 1,
                    "variable6": 1
                },
                "FUM_08002bf0": {
                    "initialize_mpu9250": 1
                },
                "FUN_08000ad8": {
                    "apply_function": 1,
                    "calculate_checksum": 2,
                    "calculate_result": 1,
                    "calculate_scaled_value": 1,
                    "calculate_value": 2,
                    "calculate_value_with_param_and_variable": 1,
                    "compute_value": 1,
                    "configure_sensor": 1,
                    "execute_operation": 1,
                    "initialize_dat_value": 1,
                    "perform_data_conversion": 1,
                    "perform_operation": 3,
                    "process_data": 5,
                    "process_data_value": 1,
                    "read_register": 1,
                    "read_sensor_data": 1,
                    "set_configuration": 1,
                    "store_conversion_result": 1,
                    "store_data": 2,
                    "store_result": 1,
                    "store_value": 1,
                    "write_register": 1
                },
                "FUN_08000c44": {
                    "calculate_checksum": 1,
                    "calculate_value_with_param": 1,
                    "get_calculated_value": 1,
                    "get_calibration_data": 1,
                    "get_config_value": 1,
                    "get_configuration_value": 1,
                    "get_current_value": 1,
                    "get_initial_value": 3,
                    "get_register_value": 1,
                    "get_sensor_data": 4,
                    "get_sensor_value": 1,
                    "get_value": 8,
                    "get_value_from_address": 1,
                    "get_variable": 1,
                    "initialize_data": 1,
                    "initialize_u_var_value": 1,
                    "initialize_variable": 1,
                    "initialize_variables": 1,
                    "prepare_data": 1
                },
                "FUN_08000cec": {
                    "apply_calibration": 1,
                    "calculate_checksum": 1,
                    "calculate_result": 1,
                    "calculate_value": 6,
                    "calculate_value_with_params": 1,
                    "combine_values": 4,
                    "concatenate_values": 1,
                    "manipulate_data": 1,
                    "modify_register": 2,
                    "perform_calculation": 3,
                    "perform_conversion": 1,
                    "perform_operation": 4,
                    "perform_operation_on_value": 1,
                    "process_data": 3,
                    "set_config_value": 1
                },
                "FUN_08002bf0": {
                    "initialize_mpu9250": 30
                },
                "FUN_080040e8": {
                    "configure_mpu9250": 2,
                    "configure_sensor": 3,
                    "get_values": 1,
                    "initialize_data": 1,
                    "initialize_sensor": 5,
                    "read_conversion_result": 1,
                    "read_data": 1,
                    "read_register": 1,
                    "read_sensor_data": 1,
                    "read_values_from_source_file": 1,
                    "send_command": 1,
                    "send_data": 2,
                    "send_data_to_mpu9250": 1,
                    "send_data_to_source": 1,
                    "send_initialization_command": 1,
                    "set_data": 1,
                    "set_values": 1,
                    "write_data": 1,
                    "write_data_to_memory": 1,
                    "write_register": 4
                },
                "iVar2": {
                    "c2_value": 1,
                    "converted_value1": 1,
                    "data1_int": 1,
                    "data_2_int": 1,
                    "gyro_config": 1,
                    "int_value1": 1,
                    "int_value2": 1,
                    "low_byte": 1,
                    "reg_value2": 1,
                    "second_data": 1,
                    "sensor_data2_int": 1,
                    "value1": 1
                },
                "iVar3": {
                    "accel_config": 1,
                    "c0_value": 1,
                    "converted_value2": 1,
                    "data2_int": 1,
                    "data_1_int": 1,
                    "first_data": 1,
                    "high_byte": 1,
                    "int_value2": 1,
                    "int_value3": 1,
                    "reg_value3": 1,
                    "sensor_data1_int": 1,
                    "value2": 1
                },
                "local_1c": {
                    "combined_value2": 3,
                    "conversion_result2": 1,
                    "data2": 6,
                    "data_2": 1,
                    "flag": 1,
                    "gyro_range": 1,
                    "other_value": 1,
                    "output_low_byte": 1,
                    "reg_value2": 1,
                    "result": 1,
                    "result2": 4,
                    "sensor_config": 1,
                    "sensor_config_data2": 1,
                    "sensor_data2": 1,
                    "temp2": 1,
                    "temp_data2": 1,
                    "temp_value": 1,
                    "value": 1,
                    "value2": 1
                },
                "local_20": {
                    "accel_range": 1,
                    "combined_value": 1,
                    "combined_value1": 2,
                    "configuration": 1,
                    "conversion_result1": 1,
                    "data": 1,
                    "data1": 6,
                    "data_1": 1,
                    "output_high_byte": 1,
                    "output_value": 1,
                    "reg_value": 1,
                    "register_value": 1,
                    "result1": 4,
                    "sensor_config_data1": 1,
                    "sensor_data": 1,
                    "sensor_data1": 1,
                    "status": 1,
                    "temp1": 1,
                    "temp_data1": 1,
                    "value1": 1
                },
                "param_1": {
                    "arg1": 1,
                    "command": 1,
                    "param1": 6,
                    "param6": 1,
                    "register_address": 2,
                    "value1": 2
                },
                "param_2": {
                    "address": 1,
                    "arg2": 1,
                    "param2": 6,
                    "param4": 1,
                    "register_value": 1,
                    "value1": 1,
                    "value2": 2
                },
                "param_3": {
                    "arg3": 1,
                    "output": 1,
                    "param3": 6,
                    "param_3": 1,
                    "result4": 1,
                    "value2": 1,
                    "value3": 2
                },
                "param_4": {
                    "arg4": 1,
                    "param4": 6,
                    "param5": 1,
                    "param_4": 1,
                    "size": 1,
                    "value3": 1,
                    "value4": 2
                },
                "uVar1": {
                    "result": 8
                }
            },
            "called": [
                "FUN_080040e8",
                "FUN_08000cec",
                "FUN_08000ad8",
                "FUN_08000c44"
            ],
            "calling": [
                "FUN_08002f28"
            ],
            "code": "\nvoid initialize_mpu9250_08002bf0(void)\n\n{\n  undefined4 result;\n  int reg_value2;\n  int c0_value;\n  undefined4 data1;\n  undefined2 data2;\n  \n  data1 = 0;\n  data2 = 0;\n  FUN_080040e8(0xd0,0x43,&data1,6,\"../Src/MPU9250.c\",0x7b);\n  DAT_200002c0 = CONCAT11(data1._2_1_,data1._3_1_);\n  DAT_200002be = CONCAT11((undefined)data1,data1._1_1_);\n  DAT_200002c2 = CONCAT11((undefined)data2,data2._1_1_);\n  c0_value = (int)DAT_200002c0;\n  reg_value2 = (int)DAT_200002c2;\n  result = FUN_08000c44();\n  result = FUN_08000cec(result,0x447a0000);\n  result = FUN_08000cec(result,0x38000000);\n  DAT_200002c4 = FUN_08000ad8(result,DAT_20000000);\n  result = FUN_08000c44(c0_value);\n  result = FUN_08000cec(result,0x447a0000);\n  result = FUN_08000cec(result,0x38000000);\n  DAT_200002c8 = FUN_08000ad8(result,DAT_20000004);\n  result = FUN_08000c44(reg_value2);\n  result = FUN_08000cec(result,0x447a0000);\n  result = FUN_08000cec(result,0x38000000);\n  DAT_200002cc = FUN_08000ad8(result,DAT_20000008);\n  return;\n}\n\n",
            "current_name": "initialize_mpu9250_08002bf0",
            "entrypoint": "0x08002bf0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002bf0": "initialize_mpu9250_08002bf0",
                "iVar2": "reg_value2",
                "iVar3": "c0_value",
                "local_1c": "data2",
                "local_20": "data1",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002cb0": {
            "additional_data": {
                "DAT_200002e8": {
                    "data1": 1,
                    "fixed_point1": 1,
                    "scale_factor_x": 1,
                    "value1": 1
                },
                "DAT_200002ec": {
                    "data2": 1,
                    "fixed_point2": 1,
                    "scale_factor_y": 1,
                    "value2": 1
                },
                "DAT_200002f0": {
                    "data3": 1,
                    "fixed_point3": 1,
                    "scale_factor_z": 1,
                    "value3": 1
                },
                "FUN_08000adc": {
                    "add_value": 1,
                    "add_values": 1,
                    "adjust_value": 1,
                    "apply_normalization": 1,
                    "apply_offset": 1,
                    "calculate_value3": 1,
                    "calculate_value_b": 1,
                    "convert_data": 2,
                    "convert_fixed_point": 1,
                    "convert_float": 1,
                    "convert_to_float": 1,
                    "convert_value": 3,
                    "divide_value": 1,
                    "function5": 1,
                    "normalize_value": 2,
                    "process_value": 2,
                    "scale_value": 1
                },
                "FUN_08000c44": {
                    "adjust_data": 1,
                    "adjust_value": 2,
                    "calculate_new_value": 1,
                    "calculate_offset": 3,
                    "calculate_value": 3,
                    "calculate_value1": 2,
                    "calculate_value_c": 1,
                    "convert_value": 1,
                    "function6": 1,
                    "modify_value": 1,
                    "normalize_data": 1,
                    "normalize_value": 3,
                    "process_value": 1,
                    "subtract128": 1,
                    "subtract_value": 3
                },
                "FUN_08000cec": {
                    "apply_transform": 1,
                    "calculate_offset": 1,
                    "calculate_value": 2,
                    "calculate_value2": 2,
                    "calculate_value_a": 1,
                    "convert_value": 3,
                    "function3": 1,
                    "modify_value": 1,
                    "multiply_fixed_point": 1,
                    "multiply_value": 2,
                    "multiply_values": 2,
                    "normalize_float": 1,
                    "normalize_value": 2,
                    "scale_data": 2,
                    "scale_value": 3
                },
                "FUN_08002cb0": {
                    "configure_mpu9250": 1,
                    "initialize_mpu": 2,
                    "initialize_mpu9250": 28
                },
                "FUN_0800403c": {
                    "configure_register": 1,
                    "configure_sensor": 1,
                    "execute_command": 1,
                    "function1": 1,
                    "read_sensor_data": 1,
                    "send_command": 4,
                    "send_config_command": 1,
                    "send_data": 6,
                    "send_data_to_function1": 1,
                    "send_instruction": 1,
                    "set_configuration_value": 1,
                    "set_mpu9250_register": 1,
                    "set_register_value": 2,
                    "setup_parameter": 1,
                    "write_data": 1,
                    "write_register": 1
                },
                "FUN_0800407c": {
                    "function4": 1,
                    "log_data": 1,
                    "log_message": 3,
                    "log_sensor_info": 1,
                    "print_debug_info": 5,
                    "print_debug_message": 1,
                    "print_error_message": 3,
                    "print_file": 3,
                    "print_file_details": 2,
                    "print_info": 1,
                    "print_message": 2,
                    "send_data_to_function2": 1,
                    "set_file_path": 1
                },
                "FUN_080040e8": {
                    "calculate_average": 1,
                    "calculate_configuration": 1,
                    "calculate_value": 5,
                    "configure_mpu9250": 1,
                    "configure_sensor": 2,
                    "function2": 1,
                    "process_data": 6,
                    "send_data_to_function3": 1,
                    "set_configuration_value": 1,
                    "set_mpu9250_register_values": 1,
                    "set_param_values": 1,
                    "set_register_value": 1,
                    "set_sensor_config": 1,
                    "update_values": 1,
                    "write_to_register": 1
                },
                "local_c": {
                    "config": 1,
                    "config_flags": 1,
                    "config_result": 1,
                    "config_value": 3,
                    "data": 1,
                    "extracted_data": 1,
                    "flag": 1,
                    "input": 1,
                    "input_parameter": 1,
                    "local_flags": 1,
                    "local_param": 1,
                    "local_param4": 1,
                    "local_var": 1,
                    "local_var1": 1,
                    "local_variable": 1,
                    "param4_copy": 1,
                    "param4_updated": 1,
                    "param_4": 1,
                    "param_copy": 2,
                    "sensor_config": 1,
                    "sensor_data": 1,
                    "temp": 2,
                    "value": 3,
                    "value_to_calculate": 1
                },
                "param_1": {
                    "arg1": 6,
                    "config_param1": 1,
                    "config_value1": 1,
                    "param1": 18,
                    "param_1": 2,
                    "sensor_address": 1,
                    "val": 1,
                    "value1": 1
                },
                "param_2": {
                    "arg1": 1,
                    "arg2": 6,
                    "config_param2": 1,
                    "config_value2": 1,
                    "param2": 18,
                    "param_2": 2,
                    "register_address": 1,
                    "value2": 1
                },
                "param_3": {
                    "arg2": 1,
                    "arg3": 6,
                    "config_param3": 1,
                    "config_value3": 1,
                    "data": 1,
                    "param3": 18,
                    "param_3": 2,
                    "value3": 1
                },
                "param_4": {
                    "arg3": 1,
                    "arg4": 2,
                    "config_data": 1,
                    "config_param4": 1,
                    "device_data": 1,
                    "flags": 1,
                    "param": 3,
                    "param4": 17,
                    "param_4": 2,
                    "value": 1,
                    "value4": 1
                },
                "uVar1": {
                    "calculated_value": 1,
                    "result": 8,
                    "temp_var1": 1
                }
            },
            "called": [
                "FUN_080040e8",
                "FUN_08000cec",
                "FUN_0800407c",
                "FUN_08000adc",
                "FUN_0800403c",
                "FUN_08000c44"
            ],
            "calling": [
                "FUN_08002ea0"
            ],
            "code": "\nvoid initialize_mpu9250_08002cb0(undefined4 param1,undefined4 param2,undefined4 param3,uint param4)\n\n{\n  undefined4 result;\n  uint config_value;\n  \n  config_value = param4;\n  FUN_0800403c(0xd0,0x37,0x22,1,param1,param2,param3);\n  FUN_0800403c(0xd0,0x6a,1);\n  FUN_0800407c(0x18,0,\"../Src/MPU9250.c\",0xad);\n  FUN_0800403c(0x18,0xb,1);\n  FUN_0800403c(0x18,10,0,1);\n  FUN_0800403c(0x18,10,0xf,1);\n  FUN_080040e8(0x18,0x10,&config_value,3,\"../Src/MPU9250.c\",0xb6);\n  result = FUN_08000c44((config_value & 0xff) - 0x80);\n  result = FUN_08000cec(result,0x3b800000);\n  DAT_200002e8 = FUN_08000adc(result,0x3f800000);\n  result = FUN_08000c44((config_value >> 8 & 0xff) - 0x80);\n  result = FUN_08000cec(result,0x3b800000);\n  DAT_200002ec = FUN_08000adc(result,0x3f800000);\n  result = FUN_08000c44((config_value >> 0x10 & 0xff) - 0x80);\n  result = FUN_08000cec(result,0x3b800000);\n  DAT_200002f0 = FUN_08000adc(result,0x3f800000);\n  FUN_0800403c(0x18,10,0,1);\n  FUN_0800403c(0x18,10,0x16,1);\n  return;\n}\n\n",
            "current_name": "initialize_mpu9250_08002cb0",
            "entrypoint": "0x08002cb0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002cb0": "initialize_mpu9250_08002cb0",
                "local_c": "config_value",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002d88": {
            "additional_data": {
                "DAT_2000001c": {
                    "constant1": 2,
                    "constant_1": 1,
                    "dat1": 1,
                    "data1": 2,
                    "data_var1": 1,
                    "global_var5": 1,
                    "variable1": 1
                },
                "DAT_20000020": {
                    "constant3": 2,
                    "constant_3": 1,
                    "dat3": 1,
                    "data6": 1,
                    "data7": 1,
                    "data_var7": 1,
                    "global_var7": 1,
                    "variable7": 1
                },
                "DAT_20000024": {
                    "constant5": 2,
                    "constant_6": 1,
                    "dat6": 1,
                    "data10": 1,
                    "data9": 1,
                    "data_var10": 1,
                    "global_var10": 1,
                    "variable10": 1
                },
                "DAT_20000028": {
                    "constant7": 2,
                    "constant_9": 1,
                    "dat9": 1,
                    "data12": 1,
                    "data13": 1,
                    "data_var13": 1,
                    "global_var13": 1,
                    "variable13": 1
                },
                "DAT_2000002c": {
                    "constant_4": 1
                },
                "DAT_20000030": {
                    "constant_7": 1
                },
                "DAT_200002b8": {
                    "data3": 1,
                    "data4": 1,
                    "data5": 1,
                    "data_var5": 1,
                    "flag": 1,
                    "global_var4": 2,
                    "local_var_2": 1,
                    "variable5": 1
                },
                "DAT_200002ba": {
                    "byte1": 1,
                    "byte_var_1": 1,
                    "data1": 1,
                    "data2": 1,
                    "data3": 1,
                    "data_var3": 1,
                    "global_var2": 2,
                    "variable3": 1
                },
                "DAT_200002bc": {
                    "byte2": 1,
                    "byte_var_2": 1,
                    "data2": 1,
                    "data3": 1,
                    "data4": 1,
                    "data_var4": 1,
                    "global_var3": 2,
                    "variable4": 1
                },
                "DAT_200002dc": {
                    "dat4": 1,
                    "data7": 1,
                    "data8": 1,
                    "data_var8": 1,
                    "global_var8": 1,
                    "result1": 1,
                    "result3": 1,
                    "result_1": 1,
                    "variable8": 1
                },
                "DAT_200002e0": {
                    "dat7": 1,
                    "data10": 1,
                    "data11": 1,
                    "data_var11": 1,
                    "global_var11": 1,
                    "result2": 1,
                    "result4": 1,
                    "result_2": 1,
                    "variable11": 1
                },
                "DAT_200002e4": {
                    "dat10": 1,
                    "data13": 1,
                    "data14": 1,
                    "data_var14": 1,
                    "global_var14": 1,
                    "result3": 1,
                    "result5": 1,
                    "result_3": 1,
                    "variable14": 1
                },
                "DAT_200002e8": {
                    "constant2": 2,
                    "constant_2": 1,
                    "dat2": 1,
                    "data5": 1,
                    "data6": 1,
                    "data_var6": 1,
                    "global_var6": 1,
                    "variable6": 1
                },
                "DAT_200002ec": {
                    "constant4": 2,
                    "constant_5": 1,
                    "dat5": 1,
                    "data8": 1,
                    "data9": 1,
                    "data_var9": 1,
                    "global_var9": 1,
                    "variable9": 1
                },
                "DAT_200002f0": {
                    "constant6": 2,
                    "constant_8": 1,
                    "dat8": 1,
                    "data11": 1,
                    "data12": 1,
                    "data_var12": 1,
                    "global_var12": 1,
                    "variable12": 1
                },
                "DAT_200013bb": {
                    "counter": 4,
                    "data2": 1,
                    "data_var2": 1,
                    "global_var1": 2,
                    "variable2": 1
                },
                "FUN_08000c44": {
                    "function1": 1
                },
                "FUN_08000cec": {
                    "function2": 1
                },
                "FUN_08002d88": {
                    "initialize_mpu9250": 26,
                    "process_mpu9250_data": 4,
                    "process_sensor_data": 1
                },
                "iVar1": {
                    "result": 15,
                    "result1": 1,
                    "return_value": 5,
                    "status": 7
                },
                "iVar4": {
                    "i_var4": 1,
                    "new_value3": 1,
                    "result4": 1,
                    "temp1": 1,
                    "temp2": 1,
                    "temp3": 3,
                    "temp4": 1,
                    "temp_var3": 12,
                    "temp_var4": 2,
                    "value": 3,
                    "var": 1,
                    "var3": 1
                },
                "local_22": {
                    "byte3": 1,
                    "byte5": 1,
                    "byte_data": 1,
                    "byte_val": 2,
                    "byte_value": 2,
                    "byte_var": 4,
                    "byte_variable": 2,
                    "condition": 1,
                    "flag": 5,
                    "is_negative": 1,
                    "local_var2": 1,
                    "local_var4": 1,
                    "local_var6": 1,
                    "local_variable4": 1,
                    "temp2": 1,
                    "temp_byte1": 1,
                    "value6": 1,
                    "var6": 2,
                    "var9": 1,
                    "variable3": 1
                },
                "local_23": {
                    "byte2": 1,
                    "byte4": 2,
                    "data3": 1,
                    "local_var2": 2,
                    "local_var3": 2,
                    "local_var5": 1,
                    "local_variable3": 1,
                    "temp4": 2,
                    "temp_4": 1,
                    "temp_var5": 1,
                    "undefined_var4": 1,
                    "unused_variable4": 1,
                    "value5": 1,
                    "var5": 2,
                    "var8": 1,
                    "variable2": 1
                },
                "local_24": {
                    "byte1": 1,
                    "byte3": 2,
                    "data2": 1,
                    "local_var1": 2,
                    "local_var2": 2,
                    "local_var4": 1,
                    "local_variable2": 1,
                    "temp3": 2,
                    "temp_3": 1,
                    "temp_var4": 1,
                    "undefined_var3": 1,
                    "unused_variable3": 1,
                    "value4": 1,
                    "var4": 2,
                    "var7": 1,
                    "variable1": 1
                },
                "local_28": {
                    "count": 1,
                    "counter": 4,
                    "data1": 1,
                    "error_code": 3,
                    "flag": 5,
                    "initialized_flag": 1,
                    "initialized_value": 1,
                    "local_var1": 4,
                    "local_var_1": 1,
                    "local_variable": 1,
                    "local_variable1": 1,
                    "status": 2,
                    "value1": 2,
                    "var1": 2,
                    "var4": 1,
                    "zero": 1
                },
                "nil": {
                    "nil": 1
                },
                "param_1": {
                    "arg1": 1,
                    "config_param_1": 1,
                    "input1": 1,
                    "param1": 28
                },
                "param_2": {
                    "arg2": 1,
                    "config_param_2": 1,
                    "input2": 1,
                    "param2": 28
                },
                "param_3": {
                    "arg3": 1,
                    "config_param_3": 1,
                    "input3": 1,
                    "param3": 28
                },
                "param_4": {
                    "arg4": 1,
                    "config_param_4": 1,
                    "input4": 1,
                    "param4": 28
                },
                "uStack_21": {
                    "byte_param": 1,
                    "byte_var": 1,
                    "high_byte": 1,
                    "unused_variable5": 1,
                    "upper_byte": 1
                },
                "uStack_25": {
                    "bit_shifted_param1": 1,
                    "byte2": 2,
                    "local_var3": 1,
                    "low_byte1": 1,
                    "param_val2": 1,
                    "stack_var2": 1,
                    "stack_variable2": 1,
                    "temp2": 2,
                    "temp_2": 1,
                    "undefined_var2": 1,
                    "unused_variable2": 1,
                    "value3": 1,
                    "var3": 2,
                    "var6": 1
                },
                "uStack_26": {
                    "bit_shifted_param4": 1,
                    "byte1": 2,
                    "local_var2": 1,
                    "low_byte2": 1,
                    "param_val1": 1,
                    "stack_var1": 1,
                    "stack_variable1": 1,
                    "temp1": 2,
                    "temp_1": 1,
                    "undefined_var1": 1,
                    "unused_variable1": 1,
                    "value2": 1,
                    "var2": 2,
                    "var5": 1
                },
                "uVar2": {
                    "new_value1": 1,
                    "result": 3,
                    "result1": 3,
                    "result2": 1,
                    "temp1": 4,
                    "temp_var": 1,
                    "temp_var1": 12,
                    "temp_var2": 2,
                    "var1": 1
                },
                "uVar3": {
                    "data": 1,
                    "new_value2": 1,
                    "result2": 3,
                    "result3": 1,
                    "temp": 2,
                    "temp2": 4,
                    "temp_var2": 13,
                    "temp_var3": 2,
                    "var2": 1
                }
            },
            "called": [
                "FUN_080040e8",
                "FUN_08000cec",
                "FUN_08000ad8",
                "FUN_0800407c",
                "FUN_08000c44"
            ],
            "calling": [
                "FUN_08002f28"
            ],
            "code": "\nvoid initialize_mpu9250_08002d88(undefined4 param1,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int result;\n  undefined4 temp_var1;\n  undefined4 temp_var2;\n  int temp_var3;\n  undefined2 flag;\n  undefined temp1;\n  undefined byte2;\n  undefined var4;\n  undefined var5;\n  byte flag;\n  undefined byte_var;\n  \n  byte_var = (undefined)((uint)param4 >> 0x18);\n  flag = 0;\n  temp1 = 0;\n  byte2 = 0;\n  var4 = 0;\n  var5 = 0;\n  flag = 0;\n  result = FUN_0800407c(0x18,2,\"../Src/MPU9250.c\",0xd7,param1,param2);\n  if (result << 0x1f < 0) {\n    FUN_080040e8(0x18,3,&flag,7,\"../Src/MPU9250.c\",0xda);\n    temp_var2 = DAT_2000001c;\n    if ((int)((uint)flag << 0x1c) < 0) {\n      DAT_200013bb = DAT_200013bb + 1;\n    }\n    else {\n      DAT_200002ba = CONCAT11(byte2,temp1);\n      DAT_200002bc = CONCAT11(var5,var4);\n      temp_var3 = (int)DAT_200002ba;\n      result = (int)DAT_200002bc;\n      DAT_200002b8 = flag;\n      temp_var1 = FUN_08000c44();\n      temp_var1 = FUN_08000cec(temp_var1,temp_var2);\n      temp_var1 = FUN_08000cec(temp_var1,DAT_200002e8);\n      temp_var1 = FUN_08000ad8(temp_var1,DAT_20000020);\n      DAT_200002dc = FUN_08000cec(temp_var1,DAT_2000002c);\n      temp_var1 = FUN_08000c44(temp_var3);\n      temp_var1 = FUN_08000cec(temp_var1,temp_var2);\n      temp_var1 = FUN_08000cec(temp_var1,DAT_200002ec);\n      temp_var1 = FUN_08000ad8(temp_var1,DAT_20000024);\n      DAT_200002e0 = FUN_08000cec(temp_var1,DAT_20000030);\n      temp_var1 = FUN_08000c44(result);\n      temp_var2 = FUN_08000cec(temp_var1,temp_var2);\n      temp_var2 = FUN_08000cec(temp_var2,DAT_200002f0);\n      temp_var2 = FUN_08000ad8(temp_var2,DAT_20000028);\n      DAT_200002e4 = FUN_08000cec(temp_var2,DAT_20000034);\n    }\n  }\n  return;\n}\n\n",
            "current_name": "initialize_mpu9250_08002d88",
            "entrypoint": "0x08002d88",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002d88": "initialize_mpu9250_08002d88",
                "iVar1": "result",
                "iVar4": "temp_var3",
                "local_22": "flag",
                "local_23": "var5",
                "local_24": "var4",
                "local_28": "flag",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uStack_21": "byte_var",
                "uStack_25": "byte2",
                "uStack_26": "temp1",
                "uVar2": "temp_var1",
                "uVar3": "temp_var2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ea0": {
            "additional_data": {
                "FUN_08002ad0": {
                    "initialize_component": 1,
                    "initialize_component1": 1,
                    "initialize_data": 1,
                    "initialize_function_a": 1,
                    "initialize_network": 1,
                    "initialize_resource": 1,
                    "initialize_resources": 2,
                    "initialize_something": 1,
                    "initialize_stage_1": 1,
                    "initialize_subsystem1": 1,
                    "initialize_subsystems": 1,
                    "initialize_system": 2,
                    "load_data": 1,
                    "load_dependencies": 1,
                    "load_resources": 1,
                    "perform_initialization": 6,
                    "perform_operation": 1,
                    "start_execution": 1
                },
                "FUN_08002cb0": {
                    "configure_settings": 1,
                    "configure_system": 3,
                    "connect_to_server": 1,
                    "do_preprocessing": 1,
                    "do_something": 2,
                    "execute_task": 1,
                    "initialize_component2": 1,
                    "initialize_components": 3,
                    "initialize_function_b": 1,
                    "initialize_resources": 1,
                    "initialize_stage_2": 1,
                    "initialize_subsystem2": 1,
                    "perform_action": 1,
                    "perform_initialization": 1,
                    "perform_task": 1,
                    "set_configuration": 1,
                    "setup_configuration": 2,
                    "setup_connections": 2
                },
                "FUN_08002ea0": {
                    "initialize": 4,
                    "initialize_and_execute": 1,
                    "initialize_and_process_data": 1,
                    "initialize_app": 2,
                    "initialize_application": 5,
                    "initialize_program": 15,
                    "initialize_system": 3
                },
                "FUN_08003314": {
                    "configure_network": 1,
                    "configure_settings": 3,
                    "configure_system": 1,
                    "initialize_config": 1,
                    "initialize_function_c": 1,
                    "set_configuration": 5,
                    "set_constant": 1,
                    "set_constant_value": 2,
                    "set_data_flag": 1,
                    "set_default_value": 2,
                    "set_system_config": 1,
                    "set_system_mode": 1,
                    "set_value": 3,
                    "set_variable": 1,
                    "update_configuration": 1
                },
                "FUN_08003320": {
                    "do_something": 1,
                    "execute_operation": 4,
                    "execute_process": 1,
                    "execute_system_function": 1,
                    "initialize_function_d": 1,
                    "initialize_stage_3": 1,
                    "initialize_subsystem3": 1,
                    "perform_action": 1,
                    "perform_task": 4,
                    "process_data": 8,
                    "set_initial_values": 2
                },
                "extraout_r1": {
                    "extra_result": 3,
                    "extra_var_1": 1,
                    "extra_variable": 1,
                    "output_value": 1,
                    "result": 1,
                    "result1": 2,
                    "unused_outparam_1": 1,
                    "unused_variable": 2,
                    "value": 1
                },
                "param_1": {
                    "arg1": 19,
                    "arg_1": 1,
                    "config_param": 1,
                    "param1": 2,
                    "param_1": 1,
                    "unused_param": 2,
                    "unused_param1": 1,
                    "unused_param_1": 3,
                    "unused_parameter1": 1
                },
                "param_2": {
                    "arg2": 19,
                    "arg_2": 1,
                    "param2": 2,
                    "param_2": 1,
                    "second_action_param": 1,
                    "unused_param": 2,
                    "unused_param2": 1,
                    "unused_param_2": 3,
                    "unused_parameter2": 1
                },
                "param_3": {
                    "arg3": 19,
                    "arg_3": 1,
                    "config_param": 1,
                    "param3": 2,
                    "third_action_param": 1,
                    "unused_param": 2,
                    "unused_param3": 1,
                    "unused_param_3": 3,
                    "unused_parameter3": 1
                },
                "param_4": {
                    "action_param_flag": 1,
                    "arg4": 18,
                    "arg_4": 1,
                    "config_param": 1,
                    "data_param": 1,
                    "param4": 2,
                    "unused_param": 2,
                    "unused_param4": 1,
                    "unused_param_4": 3,
                    "unused_parameter4": 1
                }
            },
            "called": [
                "FUN_08003320",
                "FUN_08002cb0",
                "FUN_08003314",
                "FUN_08002ad0"
            ],
            "calling": [
                "FUN_08004194"
            ],
            "code": "\nvoid initialize_program_08002ea0(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  undefined4 extra_result;\n  \n  FUN_08002ad0();\n  FUN_08002cb0();\n  FUN_08003314(0x3f19999a);\n  FUN_08003320(0,extra_result,arg3,arg4);\n  return;\n}\n\n",
            "current_name": "initialize_program_08002ea0",
            "entrypoint": "0x08002ea0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002ea0": "initialize_program_08002ea0",
                "extraout_r1": "extra_result",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ec0": {
            "additional_data": {
                "DAT_20000010": {
                    "constant2": 1
                },
                "DAT_2000024c": {
                    "constant1": 1
                },
                "FUN_08000ad8": {
                    "calculate_average": 1,
                    "calculate_first_value": 3,
                    "calculate_float_value": 1,
                    "calculate_product": 2,
                    "calculate_value": 3,
                    "calculate_value1": 3,
                    "get_modified_value": 1,
                    "get_value1": 1,
                    "multiply_values": 2,
                    "perform_operation1": 1,
                    "square": 1
                },
                "FUN_08000adc": {
                    "add": 1,
                    "add_numbers": 1,
                    "calculate_division": 1,
                    "calculate_final_result": 1,
                    "calculate_final_value": 1,
                    "calculate_int_value": 1,
                    "calculate_result": 1,
                    "calculate_sum": 1,
                    "calculate_value2": 3,
                    "get_value2": 1,
                    "perform_operation3": 1,
                    "store_result": 2,
                    "update_result": 1,
                    "update_value": 3
                },
                "FUN_08000cec": {
                    "add_values": 1,
                    "calculate_product": 1,
                    "calculate_ratio": 1,
                    "calculate_sum": 2,
                    "combine_values": 3,
                    "multiply": 1,
                    "multiply_numbers": 1,
                    "multiply_values": 1,
                    "perform_addition": 1,
                    "perform_calculation": 3,
                    "perform_operation": 3,
                    "perform_operation2": 1
                },
                "FUN_08002ec0": {
                    "calculate": 1,
                    "calculate_and_set_values": 1,
                    "calculate_and_update_values": 1,
                    "calculate_product": 1,
                    "calculate_result": 22,
                    "calculate_sum": 3,
                    "compute_result": 1,
                    "update_data": 1
                },
                "param_1": {
                    "float1": 1,
                    "input1": 1,
                    "operand1": 1,
                    "value1": 3
                },
                "param_2": {
                    "float2": 1,
                    "input2": 1,
                    "operand2": 1,
                    "value2": 3
                },
                "param_3": {
                    "input3": 1,
                    "param3": 1,
                    "unused": 1,
                    "value3": 2
                },
                "param_4": {
                    "input4": 1,
                    "param4": 1,
                    "unused": 1,
                    "value4": 2
                },
                "uVar1": {
                    "float_value": 1,
                    "result": 1,
                    "result1": 17,
                    "squared_value": 1,
                    "value1": 1
                },
                "uVar2": {
                    "constant": 2,
                    "constant1": 7,
                    "constant_value": 1,
                    "constant_value1": 1,
                    "float_constant": 1,
                    "initial_value2": 1,
                    "multiplier1": 1,
                    "parameter1": 1,
                    "result2": 3,
                    "temp_var1": 1,
                    "value2": 2
                },
                "uVar3": {
                    "constant2": 8,
                    "constant_value2": 1,
                    "initial_value": 1,
                    "initial_value3": 1,
                    "int_constant": 1,
                    "multiplier2": 1,
                    "param": 1,
                    "parameter2": 1,
                    "result3": 3,
                    "temp_var2": 1,
                    "value3": 2
                },
                "var_1": {
                    "result": 1
                },
                "var_2": {
                    "constant1": 1
                },
                "var_3": {
                    "constant2": 1
                }
            },
            "called": [
                "FUN_08000cec",
                "FUN_08000ad8",
                "FUN_08000adc"
            ],
            "calling": [
                "FUN_08004a84",
                "FUN_08002f28"
            ],
            "code": "\nvoid calculate_result_08002ec0(void)\n\n{\n  undefined4 result1;\n  undefined4 constant1;\n  undefined4 constant2;\n  \n  constant1 = DAT_2000024c;\n  constant2 = DAT_20000010;\n  result1 = FUN_08000ad8(0x3f800000,DAT_20000010);\n  constant1 = FUN_08000cec(result1,constant1);\n  constant2 = FUN_08000cec(constant2,DAT_2000000c);\n  DAT_2000000c = FUN_08000adc(constant2,constant1);\n  return;\n}\n\n",
            "current_name": "calculate_result_08002ec0",
            "entrypoint": "0x08002ec0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002ec0": "calculate_result_08002ec0",
                "uVar1": "result1",
                "uVar2": "constant1",
                "uVar3": "constant2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ed4": {
            "additional_data": {
                "FUN_08000ad8": {
                    "calculate": 1,
                    "calculate_float": 2,
                    "calculate_float_value": 1,
                    "calculate_some_value": 1,
                    "calculate_value": 3
                },
                "FUN_08000adc": {
                    "calculate_final_result": 1,
                    "calculate_result": 1,
                    "combine_values": 1,
                    "multiply": 1,
                    "multiply_values": 1,
                    "process_calculation": 1,
                    "update_memory": 1,
                    "update_ram_value": 1
                },
                "FUN_08000cec": {
                    "add": 1,
                    "add_values": 1,
                    "combine_values": 1,
                    "multiply_values": 1,
                    "perform_calculation": 1,
                    "perform_calculations": 1,
                    "perform_float_operations": 1,
                    "perform_operation": 1
                },
                "FUN_08002ed4": {
                    "calculate_and_set": 1,
                    "calculate_and_set_result": 1,
                    "calculate_and_store_result": 2,
                    "calculate_and_store_sum": 1,
                    "calculate_and_store_value": 1,
                    "calculate_and_update_ram": 1,
                    "calculate_and_update_ram_value": 1,
                    "calculate_and_update_value": 1,
                    "calculate_and_update_values": 1,
                    "calculate_final_result": 1,
                    "calculate_new_value": 1,
                    "calculate_product_sum": 2,
                    "calculate_ram_value": 2,
                    "calculate_result": 14
                },
                "uRam20000014": {
                    "data2": 1,
                    "float_value2": 1,
                    "output_value": 2,
                    "result_value": 1,
                    "updated_data": 1,
                    "value2": 2
                },
                "uRam20000018": {
                    "constant_value": 1,
                    "data": 1,
                    "data1": 1,
                    "float_value1": 1,
                    "input_value1": 2,
                    "value1": 2
                },
                "uVar1": {
                    "calculated_value1": 1,
                    "calculation_result": 1,
                    "converted_value": 1,
                    "float_val1": 1,
                    "input1": 2,
                    "result": 3,
                    "result1": 17,
                    "result_float": 1,
                    "result_value": 1,
                    "temp_result": 1,
                    "value1": 1
                },
                "uVar2": {
                    "constant": 5,
                    "constant1": 6,
                    "constant_value": 9,
                    "constant_value1": 1,
                    "data1": 1,
                    "initial_value": 1,
                    "initial_value1": 1,
                    "original_ram_value": 1,
                    "original_value": 3,
                    "temp1": 1,
                    "value2": 1
                },
                "uVar3": {
                    "comparison_value": 1,
                    "constant2": 6,
                    "constant_value": 2,
                    "constant_value2": 1,
                    "current_ram_value": 1,
                    "data": 1,
                    "data2": 1,
                    "data_value": 2,
                    "initial_value": 1,
                    "initial_value2": 1,
                    "input2": 2,
                    "input_value": 1,
                    "memory_value": 4,
                    "ram_value": 1,
                    "some_data": 1,
                    "temp2": 1,
                    "value": 2,
                    "value3": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004a84",
                "FUN_08002f28"
            ],
            "code": "\nvoid calculate_and_store_result_08002ed4(void)\n\n{\n  undefined4 result1;\n  undefined4 constant_value;\n  undefined4 constant2;\n  \n  constant_value = DAT_20000248;\n  constant2 = value1;\n  result1 = FUN_08000ad8(0x3f800000,value1);\n  constant_value = FUN_08000cec(result1,constant_value);\n  constant2 = FUN_08000cec(constant2,value2);\n  value2 = FUN_08000adc(constant2,constant_value);\n  return;\n}\n\n",
            "current_name": "calculate_and_store_result_08002ed4",
            "entrypoint": "0x08002ed4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002ed4": "calculate_and_store_result_08002ed4",
                "uRam20000014": "value2",
                "uRam20000018": "value1",
                "uVar1": "result1",
                "uVar2": "constant_value",
                "uVar3": "constant2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ee8": {
            "additional_data": {
                "FUN_08000ad8": {
                    "calculate_result1": 1,
                    "do_something_else": 1,
                    "execute_function_one": 1,
                    "fallback_action": 1,
                    "handle_error": 1,
                    "handle_invalid_data": 1,
                    "handle_success": 1,
                    "handle_valid_data": 1,
                    "perform_action1": 5,
                    "perform_action2": 4,
                    "perform_action_if_conditions_pass": 1,
                    "perform_operation_a": 1,
                    "process_data2": 1,
                    "process_data3": 1,
                    "process_data_without_condition": 1,
                    "process_error": 1,
                    "reverse_value": 1
                },
                "FUN_08000adc": {
                    "calculate_result2": 1,
                    "configure_connection": 1,
                    "do_something": 1,
                    "execute_action": 1,
                    "execute_function_two": 1,
                    "handle_invalid_data": 1,
                    "handle_valid_data": 1,
                    "perform_action": 1,
                    "perform_action1": 4,
                    "perform_action2": 5,
                    "perform_data_manipulation": 1,
                    "perform_operation_b": 1,
                    "process_data1": 1,
                    "process_data2": 1,
                    "process_data_with_condition": 1
                },
                "FUN_08001028": {
                    "another_check": 1,
                    "check_additional_conditions": 1,
                    "check_condition": 4,
                    "check_condition2": 3,
                    "check_condition_two": 1,
                    "check_data_availability": 1,
                    "check_data_consistency": 1,
                    "check_second_condition": 1,
                    "check_status": 1,
                    "check_value": 1,
                    "check_value2": 6,
                    "check_value_again": 1,
                    "is_connection_successful": 1,
                    "is_valid_value2": 1,
                    "validate_value": 1,
                    "verify_result": 1
                },
                "FUN_08001050": {
                    "check_condition": 3,
                    "check_condition1": 3,
                    "check_condition_one": 1,
                    "check_conditions": 1,
                    "check_data_validity": 2,
                    "check_first_condition": 1,
                    "check_validity": 2,
                    "check_value": 4,
                    "check_value1": 6,
                    "check_value_in_range": 1,
                    "is_valid_connection": 1,
                    "is_valid_value1": 1
                },
                "FUN_08002ee8": {
                    "check_and_execute_function": 1,
                    "check_connection": 1,
                    "execute_task": 1,
                    "perform_data_processing": 1,
                    "process_data": 23
                },
                "iVar2": {
                    "result": 10,
                    "result_check_condition1": 1
                },
                "param_1": {
                    "input_value": 1,
                    "value1": 1
                },
                "param_2": {
                    "constant_value": 1,
                    "value2": 1
                },
                "param_3": {
                    "param3": 1
                },
                "param_4": {
                    "param4": 1
                },
                "uVar1": {
                    "data": 7,
                    "data_value": 1,
                    "value1": 1
                }
            },
            "called": [
                "FUN_08001050",
                "FUN_08000ad8",
                "FUN_08001028",
                "FUN_08000adc"
            ],
            "calling": [
                "FUN_08004a84",
                "FUN_08002f28"
            ],
            "code": "\nvoid process_data_08002ee8(void)\n\n{\n  undefined4 data;\n  int result;\n  \n  data = DAT_20000250;\n  result = FUN_08001050(DAT_20000250,0xc3340000);\n  if ((result != 0) && (result = FUN_08001028(data,0x42b40000), result != 0)) {\n    FUN_08000adc(data,0x42b40000);\n    return;\n  }\n  FUN_08000ad8(data,0x43870000);\n  return;\n}\n\n",
            "current_name": "process_data_08002ee8",
            "entrypoint": "0x08002ee8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002ee8": "process_data_08002ee8",
                "iVar2": "result",
                "uVar1": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002f28": {
            "additional_data": {
                "DAT_20000248": {
                    "component_result": 1,
                    "game_status": 1
                },
                "DAT_20000254": {
                    "previous_data_pointer": 1,
                    "previous_game_data": 1,
                    "previous_value": 1
                },
                "DAT_20000258": {
                    "component1_data": 1,
                    "data_pointer1": 1,
                    "game_data": 1
                },
                "DAT_200002b8": {
                    "data4": 1
                },
                "DAT_200002ba": {
                    "data5": 1
                },
                "DAT_200002bc": {
                    "data6": 1
                },
                "DAT_200002be": {
                    "data1": 1
                },
                "DAT_200002c0": {
                    "data2": 1
                },
                "DAT_200002c2": {
                    "data3": 1
                },
                "DAT_200002c4": {
                    "component_c_value2": 1,
                    "enemy_type": 1,
                    "param5": 1
                },
                "DAT_200002c8": {
                    "component_c_value1": 1,
                    "enemy_count": 1,
                    "param4": 1
                },
                "DAT_200002cc": {
                    "component_c_value3": 1,
                    "enemy_x": 1,
                    "param6": 1
                },
                "DAT_200002d0": {
                    "component_a_value2": 1,
                    "param2": 1,
                    "player_y": 1
                },
                "DAT_200002d4": {
                    "component_a_value1": 1,
                    "param1": 1,
                    "player_x": 1
                },
                "DAT_200002d8": {
                    "component_d_value1": 1,
                    "param3": 1,
                    "player_health": 1
                },
                "DAT_200002dc": {
                    "component_d_value2": 1,
                    "enemy_y": 1,
                    "param7": 1
                },
                "DAT_200002e0": {
                    "component_d_value3": 1,
                    "enemy_health": 1,
                    "param8": 1
                },
                "DAT_200002e4": {
                    "component_d_value4": 1,
                    "enemy_damage": 1,
                    "param9": 1
                },
                "DAT_200002f4": {
                    "value1": 1
                },
                "DAT_200002f6": {
                    "value3": 1
                },
                "DAT_200002f8": {
                    "value2": 1
                },
                "DAT_20001395": {
                    "component_result2": 1,
                    "data7": 1
                },
                "DAT_20001399": {
                    "data8": 1,
                    "final_result": 1,
                    "final_score": 1
                },
                "DAT_2000142c": {
                    "component_c": 1,
                    "player_lives": 1
                },
                "DAT_20001430": {
                    "player_name": 1,
                    "variable1": 1
                },
                "DAT_20001434": {
                    "player_weapon": 1,
                    "variable3": 1
                },
                "DAT_20001438": {
                    "player_item": 1,
                    "variable5": 1
                },
                "DAT_2000143a": {
                    "player_power_up": 1,
                    "variable6": 1
                },
                "FUNC_08003320": {
                    "perform_pre_processing": 1
                },
                "FUN_08000c3c": {
                    "calculate_difference": 7,
                    "calculate_distance": 1,
                    "calculate_offset": 13,
                    "calculate_parameter": 1,
                    "calculate_value": 9
                },
                "FUN_08000cec": {
                    "adjust_value": 1,
                    "apply_effect": 1,
                    "apply_settings": 1,
                    "calculate_checksum": 3,
                    "calculate_rate": 1,
                    "calculate_result": 1,
                    "calculate_value1": 2,
                    "compute_result": 1,
                    "convert_to_float": 1,
                    "execute_function": 1,
                    "modify_parameter": 1,
                    "multiply_value": 1,
                    "perform_action_a": 1,
                    "perform_additional_operation": 1,
                    "perform_calculation": 1,
                    "perform_calculations": 1,
                    "perform_operation4": 1,
                    "perform_sixth_task": 1,
                    "process_data": 1,
                    "process_data_result": 1,
                    "set_config_value": 1,
                    "set_graphics_parameter": 1,
                    "set_result": 1,
                    "set_sensitivity": 1,
                    "update_value2": 1,
                    "update_value_and_return": 1,
                    "write_data_to_memory": 1
                },
                "FUN_08000e54": {
                    "perform_operation": 3,
                    "perform_operation1": 1,
                    "prepare_data": 1,
                    "print_data": 1,
                    "process_data": 1,
                    "send_data": 1,
                    "set_configuration": 1,
                    "set_flag": 1,
                    "set_input_values": 1,
                    "set_memory": 1,
                    "set_memory_value": 2,
                    "set_offset": 1,
                    "set_parameter": 2,
                    "set_system_parameter": 1,
                    "set_value": 2,
                    "set_values": 1,
                    "set_viewport": 1,
                    "update_game": 1,
                    "update_value": 7,
                    "write_value_to_memory": 1
                },
                "FUN_08001078": {
                    "calculate_result": 1,
                    "game_logic": 1,
                    "get_configuration": 1,
                    "get_current_status": 1,
                    "get_current_time": 1,
                    "get_current_value": 1,
                    "get_data": 2,
                    "get_data_value": 1,
                    "get_device_id": 1,
                    "get_final_value": 1,
                    "get_initial_value": 1,
                    "get_second_value": 1,
                    "get_sensor_data": 2,
                    "get_sensor_value2": 1,
                    "get_some_value": 1,
                    "get_system_status": 1,
                    "get_time": 1,
                    "get_value": 1,
                    "initialize_component7": 1,
                    "initialize_function8": 1,
                    "initialize_module_g": 1,
                    "perform_action_b": 1,
                    "perform_operation3": 1,
                    "query_graphics_status": 1,
                    "read_input": 1,
                    "retrieve_data": 2,
                    "retrieve_value": 1,
                    "retrieve_value2": 1
                },
                "FUN_0800115c": {
                    "calculate_offset": 1,
                    "get_base_address": 1,
                    "get_pressure_data": 1
                },
                "FUN_08002b48": {
                    "configure_hardware": 3,
                    "initialize_component1": 3,
                    "initialize_component_a": 4,
                    "initialize_components": 3,
                    "initialize_function1": 1,
                    "initialize_module1": 2,
                    "initialize_module_a": 2,
                    "initialize_step1": 2,
                    "initialize_subsystem": 1,
                    "initialize_subsystem1": 3,
                    "initialize_system": 1,
                    "load_data": 1,
                    "perform_first_task": 1,
                    "pre_initialization": 1,
                    "prepare_first_step": 1,
                    "setup_hardware": 1,
                    "setup_one": 1
                },
                "FUN_08002bf0": {
                    "configure_components": 1,
                    "configure_settings": 1,
                    "initialize_communication": 1,
                    "initialize_component2": 2,
                    "initialize_component3": 1,
                    "initialize_component_b": 4,
                    "initialize_components": 2,
                    "initialize_connections": 1,
                    "initialize_display": 1,
                    "initialize_function2": 1,
                    "initialize_graphics": 1,
                    "initialize_module2": 2,
                    "initialize_module_b": 1,
                    "initialize_module_c": 1,
                    "initialize_peripheral": 1,
                    "initialize_peripherals": 1,
                    "initialize_step2": 2,
                    "initialize_subsystem2": 2,
                    "initialize_subsystem3": 1,
                    "initialize_ui": 1,
                    "perform_second_task": 1,
                    "set_configuration": 1,
                    "setup_two": 1
                },
                "FUN_08002d88": {
                    "configure_components": 1,
                    "configure_hardware": 1,
                    "configure_registers": 1,
                    "configure_settings": 2,
                    "enable_interrupts": 1,
                    "initialize_audio": 2,
                    "initialize_component3": 2,
                    "initialize_component4": 1,
                    "initialize_component_c": 4,
                    "initialize_function3": 1,
                    "initialize_module3": 2,
                    "initialize_module_c": 1,
                    "initialize_module_d": 1,
                    "initialize_registers": 1,
                    "initialize_settings": 1,
                    "initialize_step3": 2,
                    "initialize_subsystem3": 2,
                    "initialize_subsystem4": 1,
                    "perform_third_task": 1,
                    "setup_configuration": 1,
                    "setup_data": 1,
                    "setup_three": 1
                },
                "FUN_08002ec0": {
                    "calculate_value": 1,
                    "evaluate_game_update": 1,
                    "fetch_info": 1,
                    "get_additional_parameter": 1,
                    "get_graphics_settings": 1,
                    "get_multiplier_2": 1,
                    "get_offset2": 1,
                    "get_other_value": 1,
                    "get_processed_data_value": 1,
                    "get_resolution": 1,
                    "get_sensor_value3": 1,
                    "get_third_value": 1,
                    "get_updated_value2": 1,
                    "get_value2": 1,
                    "initialize_audio": 1,
                    "initialize_component5": 1,
                    "initialize_component6": 1,
                    "initialize_component_d": 1,
                    "initialize_component_f": 1,
                    "initialize_function7": 1,
                    "initialize_miscellaneous": 1,
                    "initialize_module_f": 1,
                    "initialize_module_h": 1,
                    "initialize_peripheral": 1,
                    "obtain_data2": 1,
                    "perform_action_c": 1,
                    "retrieve_value3": 1
                },
                "FUN_08002ed4": {
                    "calculate_checksum": 2,
                    "calculate_pressure": 1,
                    "evaluate_game": 1,
                    "execute_action_c": 1,
                    "fetch_data": 1,
                    "get_another_parameter": 1,
                    "get_current_value": 1,
                    "get_first_value": 1,
                    "get_multiplier": 1,
                    "get_offset": 1,
                    "get_processed_data": 1,
                    "get_sensitivity": 1,
                    "get_sensor_value1": 1,
                    "get_sound_settings": 1,
                    "get_timestamp1": 1,
                    "get_updated_value": 2,
                    "get_value": 1,
                    "initialize_component5": 1,
                    "initialize_component6": 1,
                    "initialize_component_e": 1,
                    "initialize_function6": 1,
                    "initialize_graphics": 1,
                    "initialize_interface": 1,
                    "initialize_module_e": 1,
                    "initialize_module_f": 1,
                    "obtain_data": 1,
                    "process_data2": 1,
                    "read_sensor_data": 1,
                    "retrieve_value1": 1
                },
                "FUN_08002ee8": {
                    "collect_data": 1,
                    "enable_input": 1,
                    "execute_task": 1,
                    "finalize_game": 1,
                    "finalize_process": 1,
                    "get_timestamp2": 1,
                    "initialize_component7": 1,
                    "initialize_component8": 1,
                    "initialize_component_g": 1,
                    "initialize_module_g": 1,
                    "initialize_module_i": 1,
                    "perform_action": 1,
                    "perform_action2": 1,
                    "perform_action_c": 1,
                    "perform_action_d": 1,
                    "perform_post_processing": 1,
                    "perform_seventh_task": 1,
                    "perform_task": 1,
                    "post_process_data": 1,
                    "process_data": 2,
                    "process_data3": 1,
                    "process_data_2": 1,
                    "subsystem_action3": 1,
                    "update_system_state": 1,
                    "update_system_status": 1
                },
                "FUN_08002f28": {
                    "initialize": 1,
                    "initialize_application": 5,
                    "initialize_data": 3,
                    "initialize_function": 1,
                    "initialize_program": 7,
                    "initialize_system": 13
                },
                "FUN_08003320": {
                    "configure_sensors": 1,
                    "enable_data_logging": 1,
                    "enable_interrupts": 1,
                    "execute_action_a": 1,
                    "finalize_component_a": 1,
                    "finalize_operation": 1,
                    "initialize": 1,
                    "initialize_component2": 1,
                    "initialize_component4": 1,
                    "initialize_components": 1,
                    "initialize_function4": 1,
                    "initialize_module4": 2,
                    "initialize_module_b": 1,
                    "initialize_module_d": 1,
                    "initialize_network": 1,
                    "initialize_step4": 1,
                    "initialize_subsystem2": 1,
                    "initialize_subsystem4": 1,
                    "perform_action": 2,
                    "perform_action_a": 1,
                    "perform_fourth_task": 1,
                    "perform_operation": 1,
                    "perform_system_check": 1,
                    "render_scene": 1,
                    "render_screen": 1,
                    "set_flag": 1,
                    "subsystem_action1": 1,
                    "update_system": 1
                },
                "FUN_08003330": {
                    "configure_devices": 1,
                    "configure_logging_parameters": 1,
                    "configure_network": 1,
                    "configure_operation": 1,
                    "configure_settings": 1,
                    "configure_system": 2,
                    "configure_system_parameters": 1,
                    "draw_geometry": 1,
                    "execute_action_b": 1,
                    "initialize_config": 1,
                    "initialize_function5": 1,
                    "initialize_module5": 2,
                    "initialize_module_e": 1,
                    "initialize_step5": 1,
                    "initialize_subsystem5": 2,
                    "perform_action_b": 1,
                    "perform_fifth_task": 1,
                    "perform_operation2": 1,
                    "process_data": 3,
                    "subsystem_action2": 1
                },
                "_DAT_2000142a": {
                    "component_a": 1,
                    "player_score": 1
                },
                "_DAT_2000142e": {
                    "component_b": 1,
                    "player_level": 1
                },
                "_DAT_20001432": {
                    "player_color": 1,
                    "variable2": 1
                },
                "_DAT_20001436": {
                    "player_armor": 1,
                    "variable4": 1
                },
                "thunk_FUN_0800115c": {
                    "call_other_function": 1,
                    "fetch_game_data": 1,
                    "get_address": 1,
                    "get_base_address": 1,
                    "get_component4_data": 1,
                    "get_configuration_data": 1,
                    "get_configuration_value": 3,
                    "get_data": 1,
                    "get_device_info": 1,
                    "get_initial_value": 4,
                    "get_memory_address": 2,
                    "get_module_data": 1,
                    "get_system_info": 1,
                    "get_thunk_value": 3,
                    "get_version": 1,
                    "initialize_component_d": 2,
                    "initialize_data": 1,
                    "obtain_parameter": 1,
                    "thunk_function": 1
                },
                "uVar1": {
                    "result": 2,
                    "return_value": 2
                }
            },
            "called": [
                "FUN_08000cec",
                "FUN_08002b48",
                "FUN_08003320",
                "FUN_08000c3c",
                "thunk_FUN_0800115c",
                "FUN_08002ee8",
                "FUN_08002ed4",
                "FUN_08000e54",
                "FUN_08002bf0",
                "FUN_08002ec0",
                "FUN_08002d88",
                "FUN_08001078",
                "FUN_08003330"
            ],
            "calling": [
                "FUN_0800411c"
            ],
            "code": "\n\n\nvoid initialize_system_08002f28(void)\n\n{\n  undefined4 return_value;\n  \n  FUN_08002b48();\n  FUN_08002bf0();\n  FUN_08002d88();\n  DAT_20000258 = thunk_FUN_0800115c();\n  return_value = FUN_08000c3c(DAT_20000258 - DAT_20000254);\n  FUN_08000e54(return_value,0x447a0000);\n  FUN_08003320();\n  DAT_20000254 = DAT_20000258;\n  FUN_08003330(DAT_200002d4 + -0x80000000,DAT_200002d0 + -0x80000000,DAT_200002d8,DAT_200002c8,\n               DAT_200002c4,DAT_200002cc + -0x80000000,DAT_200002dc,DAT_200002e0,DAT_200002e4,\n               &DAT_20000248);\n  _DAT_2000142a = (undefined2)((uint)(int)DAT_200002f4 / 100);\n  _DAT_2000142e = (undefined2)((uint)(int)DAT_200002f8 / 100);\n  DAT_2000142c = (undefined2)((uint)(int)DAT_200002f6 / 100);\n  DAT_20001430 = DAT_200002be;\n  _DAT_20001432 = DAT_200002c0;\n  DAT_20001434 = DAT_200002c2;\n  _DAT_20001436 = DAT_200002b8;\n  DAT_20001438 = DAT_200002ba;\n  DAT_2000143a = DAT_200002bc;\n  return_value = FUN_08002ed4();\n  FUN_08000cec(return_value,0x41200000);\n  DAT_20001395._0_2_ = FUN_08001078();\n  return_value = FUN_08002ec0();\n  FUN_08000cec(return_value,0x41200000);\n  DAT_20001395._2_2_ = FUN_08001078();\n  FUN_08002ee8();\n  DAT_20001399 = FUN_08001078();\n  return;\n}\n\n",
            "current_name": "initialize_system_08002f28",
            "entrypoint": "0x08002f28",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002f28": "initialize_system_08002f28",
                "uVar1": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003034": {
            "additional_data": {
                "FUN_08003034": {
                    "convert_local_c_to_uint": 1,
                    "convert_local_c_to_unsigned_int": 1,
                    "convert_local_cto_u_int": 1,
                    "convert_local_variable_to_uint": 1,
                    "convert_param_to_u_int": 1,
                    "convert_to_unsigned_int": 2,
                    "decode_and_combine": 1,
                    "decode_concat": 1,
                    "decode_data": 2,
                    "decode_msb_to_uint": 1,
                    "decode_sensor_data": 2,
                    "decode_sensor_reading": 1,
                    "decode_unsigned_integer": 1,
                    "decompile_converted_function": 1,
                    "decompiled_function": 1,
                    "decompiled_to_uint": 1,
                    "extract_and_combine_bytes": 1,
                    "extract_byte_values": 1,
                    "extract_data_from_binary": 1,
                    "extract_least_significant_bytes": 1,
                    "extract_lsb_and_concatenate": 1,
                    "get_combined_values": 1,
                    "get_concatenated_values": 1,
                    "get_converted_value": 1,
                    "get_merged_values": 1,
                    "process_sensor_data": 1,
                    "read_sensor_data": 1,
                    "recombine_local_c": 1
                },
                "FUN_080040b8": {
                    "get_sensor_data": 1,
                    "print_debug_info": 1,
                    "process_data": 2,
                    "sub_function": 3
                },
                "local_c": {
                    "combined_bytes": 1,
                    "combined_data": 1,
                    "combined_result": 2,
                    "combined_values": 1,
                    "concatenated_bytes": 1,
                    "concatenated_lsb": 1,
                    "concatenated_result": 1,
                    "concatenated_value": 1,
                    "converted_local_c": 2,
                    "converted_result": 1,
                    "converted_unsigned_int": 1,
                    "converted_value": 4,
                    "decoded_data": 1,
                    "extracted_value": 1,
                    "merged_value": 1,
                    "output": 1,
                    "result": 7,
                    "return_value": 1,
                    "sensor_data": 1
                },
                "param_1": {
                    "arg1": 4,
                    "byte1": 1,
                    "code1": 1,
                    "converted_param1": 1,
                    "decoded_data_1": 1,
                    "input1": 3,
                    "input_1": 2,
                    "input_param1": 2,
                    "input_param_1": 2,
                    "param1": 4,
                    "param_1": 1,
                    "param_eeprom": 1,
                    "pressure": 1,
                    "pressure_param": 1,
                    "sample_rate": 1,
                    "unused_param1": 1,
                    "value1": 2,
                    "value_1": 1,
                    "value_param1": 1
                },
                "param_2": {
                    "arg2": 4,
                    "byte2": 1,
                    "code2": 1,
                    "converted_param2": 1,
                    "decoded_data_2": 1,
                    "humidity_param": 1,
                    "input2": 3,
                    "input_2": 2,
                    "input_param2": 2,
                    "input_param_2": 2,
                    "param2": 5,
                    "param_2": 1,
                    "param_calibration": 1,
                    "temperature": 1,
                    "unused_param2": 1,
                    "value2": 2,
                    "value_2": 1,
                    "value_param2": 1
                },
                "param_3": {
                    "arg3": 4,
                    "byte3": 1,
                    "converted_param3": 1,
                    "data1": 1,
                    "decoded_data_3": 1,
                    "file_path": 2,
                    "input3": 3,
                    "input_3": 2,
                    "input_param3": 2,
                    "input_param_3": 2,
                    "param3": 4,
                    "param_3": 2,
                    "param_file_path": 1,
                    "temperature_param": 1,
                    "value3": 2,
                    "value_3": 1,
                    "value_param3": 1
                },
                "param_4": {
                    "arg4": 4,
                    "byte4": 1,
                    "converted_param4": 1,
                    "data2": 1,
                    "decoded_data_4": 1,
                    "input": 1,
                    "input4": 3,
                    "input_4": 2,
                    "input_param": 1,
                    "input_param4": 2,
                    "input_param_4": 2,
                    "param4": 5,
                    "param_4": 1,
                    "param_data": 1,
                    "value": 1,
                    "value4": 2,
                    "value_4": 1,
                    "value_param4": 1
                }
            },
            "called": [
                "FUN_080040b8"
            ],
            "calling": [
                "FUN_0800411c"
            ],
            "code": "\nuint decode_sensor_data_08003034(undefined4 arg1,undefined4 param2,undefined4 arg3,undefined4 param4)\n\n{\n  undefined4 result;\n  \n  result = param4;\n  FUN_080040b8(0xee,0,&result,3,\"../Src/MS5611.c\",0x8c,arg3);\n  return (uint)CONCAT12((undefined)result,CONCAT11(result._1_1_,result._2_1_));\n}\n\n",
            "current_name": "decode_sensor_data_08003034",
            "entrypoint": "0x08003034",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003034": "decode_sensor_data_08003034",
                "local_c": "result",
                "param_1": "arg1",
                "param_2": "param2",
                "param_3": "arg3",
                "param_4": "param4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003068": {
            "additional_data": {
                "DAT_200002fc": {
                    "constant_value": 1,
                    "data": 11,
                    "data_buffer": 1,
                    "data_constant": 1,
                    "data_value": 1,
                    "global_data": 1,
                    "global_value": 1,
                    "global_variable": 3,
                    "result": 2
                },
                "FUN_08003068": {
                    "get_constant_value": 1,
                    "get_dat_value": 1,
                    "get_data": 13,
                    "get_data_constant": 1,
                    "get_data_from_memory": 1,
                    "get_data_value": 9,
                    "get_global_data": 1,
                    "get_global_value": 1,
                    "get_global_variable": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_08004a30"
            ],
            "code": "\nundefined4 get_data_value_08003068(void)\n\n{\n  return DAT_200002fc;\n}\n\n",
            "current_name": "get_data_value_08003068",
            "entrypoint": "0x08003068",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003068": "get_data_value_08003068"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003298": {
            "additional_data": {
                "DAT_20000038": {
                    "sensor_config": 1,
                    "sensor_count": 1,
                    "sensor_value": 1
                },
                "DAT_2000025c": {
                    "sensor_data_array": 1
                },
                "DAT_20000300": {
                    "sensor_status_array": 1
                },
                "FUNK_0800403c": {
                    "set_sensor_parameters": 1
                },
                "FUN_08003298": {
                    "initialize_data": 1,
                    "initialize_device_info": 1,
                    "initialize_ms5611": 4,
                    "initialize_ms5611_sensor": 5,
                    "initialize_sensor": 8,
                    "initialize_sensor_data": 9,
                    "initialize_sensors": 3
                },
                "FUN_0800403c": {
                    "configure_sensor": 3,
                    "send_command": 1,
                    "set_sensor_config": 1,
                    "set_sensor_parameters": 2
                },
                "FUN_080040e8": {
                    "read_data_from_sensor": 1,
                    "read_sensor_data": 6
                },
                "iVar1": {
                    "count": 1,
                    "counter": 9,
                    "i": 1,
                    "index": 13,
                    "iteration": 2,
                    "iteration_count": 1,
                    "iteration_index": 1,
                    "iterator": 1,
                    "loop_counter": 1
                },
                "local_1b": {
                    "byte0": 1,
                    "byte2": 6,
                    "higher_byte": 2,
                    "low_byte": 1,
                    "msb": 1,
                    "pressure_low_byte": 1,
                    "second_byte": 6,
                    "temp2": 4,
                    "temp_1b": 1,
                    "temp_byte2": 1,
                    "upper_byte": 5,
                    "value_hi": 1
                },
                "local_1c": {
                    "byte1": 7,
                    "first_byte": 6,
                    "high_byte": 1,
                    "lower_byte": 7,
                    "lsb": 1,
                    "pressure_high_byte": 1,
                    "temp1": 4,
                    "temp_1c": 1,
                    "temp_byte": 1,
                    "value_lo": 1
                },
                "param_1": {
                    "command_param": 1,
                    "param_a": 1,
                    "sensor_address": 1
                },
                "param_2": {
                    "address_param": 1,
                    "data_offset": 1,
                    "param_b": 1
                },
                "param_3": {
                    "data_buffer": 1,
                    "local_param": 1,
                    "param_c": 1
                },
                "param_4": {
                    "data_buffer_size": 1,
                    "length_param": 1,
                    "param_d": 1
                },
                "thunk_FUNC_08001168": {
                    "init_thunks": 1,
                    "initialize": 1,
                    "initialize_communication": 1,
                    "initialize_configuration": 1,
                    "initialize_something": 1,
                    "initialize_thunk": 1,
                    "initialize_thunks": 1,
                    "thunk_func": 1
                }
            },
            "called": [
                "FUN_080040e8",
                "FUN_0800403c",
                "thunk_FUN_08001168"
            ],
            "calling": [
                "FUN_08004194"
            ],
            "code": "\nvoid initialize_sensor_data_08003298(void)\n\n{\n  int index;\n  undefined byte1;\n  undefined byte2;\n  \n  index = 0;\n  FUN_0800403c(0xee,0x1e,1);\n  thunk_FUNC_08001168(10);\n  DAT_20000038 = 8;\n  do {\n    byte1 = 0;\n    byte2 = 0;\n    FUN_080040e8(0xee,index + 0xa0U & 0xffff,&byte1,2,\"../Src/MS5611.c\",0x7c);\n    *(ushort *)((int)&DAT_2000025c + index) = CONCAT11(byte1,byte2);\n    index = index + 2;\n  } while (index != 0x10);\n  index = 0;\n  do {\n    (&DAT_20000300)[index] = 0;\n    index = index + 1;\n  } while (index != 0x14);\n  return;\n}\n\n",
            "current_name": "initialize_sensor_data_08003298",
            "entrypoint": "0x08003298",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003298": "initialize_sensor_data_08003298",
                "iVar1": "index",
                "local_1b": "byte2",
                "local_1c": "byte1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003314": {
            "additional_data": {
                "DAT_2000035c": {
                    "dat_2000035c": 1,
                    "dat_variable": 1,
                    "data_pointer": 1,
                    "data_register": 1,
                    "data_storage": 1,
                    "data_value": 1,
                    "global_param": 1,
                    "global_parameter": 3,
                    "global_variable": 2,
                    "parameter": 1,
                    "stored_parameter": 1,
                    "stored_value": 1
                },
                "FUN_08003314": {
                    "initialize_global_variable": 2,
                    "initialize_parameter": 1,
                    "set_dat_2000035c": 2,
                    "set_dat_2000035c_param": 1,
                    "set_data": 2,
                    "set_data_pointer": 1,
                    "set_data_register": 1,
                    "set_data_value": 4,
                    "set_global_param": 1,
                    "set_global_parameter": 5,
                    "set_global_value": 2,
                    "set_global_variable": 3,
                    "set_param": 1,
                    "set_param_value": 1,
                    "set_parameter": 1,
                    "set_parameter_value": 1,
                    "store_parameter_value": 2
                },
                "param_1": {
                    "data": 2,
                    "new_data_value": 2,
                    "new_param": 3,
                    "new_parameter": 1,
                    "new_value": 11,
                    "parameter": 2,
                    "value": 10
                }
            },
            "called": [],
            "calling": [
                "FUN_08002ea0"
            ],
            "code": "\nvoid initialize_global_variable_08003314(undefined4 new_value)\n\n{\n  DAT_2000035c = new_value;\n  return;\n}\n\n",
            "current_name": "initialize_global_variable_08003314",
            "entrypoint": "0x08003314",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003314": "initialize_global_variable_08003314",
                "param_1": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003320": {
            "additional_data": {
                "DAT_20000360": {
                    "dat_value": 1,
                    "data": 2,
                    "data_pointer": 3,
                    "data_storage": 1,
                    "global_param": 1,
                    "global_parameter": 2,
                    "global_variable": 3,
                    "initialized_data": 1,
                    "parameter": 1,
                    "stored_value": 2
                },
                "FUN_08003320": {
                    "assign_param_to_data": 1,
                    "initialize_data": 3,
                    "initialize_global_data": 1,
                    "initialize_parameter": 2,
                    "set_dat_value": 1,
                    "set_data": 1,
                    "set_data_pointer": 3,
                    "set_global_data": 1,
                    "set_global_param": 1,
                    "set_global_parameter": 7,
                    "set_global_value": 1,
                    "set_global_variable": 2,
                    "set_param_value": 2,
                    "set_parameter": 2,
                    "store_param_value": 1,
                    "store_parameter": 2
                },
                "param_1": {
                    "data": 3,
                    "input_data": 2,
                    "input_param": 1,
                    "input_value": 1,
                    "new_data": 1,
                    "new_data_value": 1,
                    "new_param": 1,
                    "new_parameter": 1,
                    "new_parameter_1": 1,
                    "new_value": 4,
                    "param": 1,
                    "parameter_value": 1,
                    "value": 13
                },
                "return": {
                    "void": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08002f28",
                "FUN_08002ea0"
            ],
            "code": "\nvoid set_global_parameter_08003320(undefined4 value)\n\n{\n  DAT_20000360 = value;\n  void;\n}\n\n",
            "current_name": "set_global_parameter_08003320",
            "entrypoint": "0x08003320",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003320": "set_global_parameter_08003320",
                "param_1": "value",
                "return": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003330": {
            "additional_data": {
                "FUN_08003330": {
                    "parse_binary": 1,
                    "process_data": 2
                },
                "iVar19": {
                    "i_var19": 2,
                    "i_var4": 1,
                    "int_var": 1,
                    "loop_counter_3": 1,
                    "result17": 1,
                    "result18": 1,
                    "result19": 4,
                    "result3": 1,
                    "result9": 1,
                    "result_8": 1,
                    "temp17": 1,
                    "temp18": 1,
                    "temp19": 4,
                    "temp_1": 1,
                    "temp_var": 1,
                    "temp_var19": 2,
                    "temp_var3": 1,
                    "temp_var_3": 1,
                    "var19": 2,
                    "var3": 1,
                    "variable3": 1
                },
                "iVar26": {
                    "condition3": 1,
                    "i_var26": 2,
                    "i_var5": 1,
                    "loop_counter_4": 1,
                    "result10": 1,
                    "result25": 1,
                    "result26": 4,
                    "result4": 1,
                    "result_9": 1,
                    "status2": 1,
                    "temp24": 1,
                    "temp25": 1,
                    "temp26": 4,
                    "temp_2": 1,
                    "temp_var2": 1,
                    "temp_var26": 2,
                    "temp_var4": 1,
                    "temp_var_4": 1,
                    "var26": 2,
                    "var4": 1,
                    "variable4": 1
                },
                "iVar3": {
                    "condition": 1,
                    "condition1": 1,
                    "condition_1": 1,
                    "flag": 1,
                    "i_var1": 1,
                    "i_var3": 1,
                    "loop_counter": 1,
                    "result": 1,
                    "result1": 1,
                    "result3": 3,
                    "result7": 1,
                    "return_value": 2,
                    "status": 3,
                    "temp3": 3,
                    "temp5": 1,
                    "temp_var": 1,
                    "temp_var3": 2,
                    "temp_var_1": 1,
                    "var1": 1,
                    "var3": 2,
                    "variable1": 1
                },
                "iVar30": {
                    "condition4": 1,
                    "i_var30": 2,
                    "i_var6": 1,
                    "loop_counter_5": 1,
                    "result11": 1,
                    "result29": 1,
                    "result30": 4,
                    "result5": 1,
                    "result_10": 1,
                    "temp28": 1,
                    "temp30": 4,
                    "temp_3": 1,
                    "temp_var30": 2,
                    "temp_var5": 1,
                    "temp_var_5": 1,
                    "var30": 2,
                    "var5": 1,
                    "variable5": 1
                },
                "iVar8": {
                    "condition2": 1,
                    "condition_2": 1,
                    "i_var2": 1,
                    "i_var8": 2,
                    "int_value": 1,
                    "loop_counter_2": 1,
                    "result2": 1,
                    "result7": 1,
                    "result8": 5,
                    "result_7": 1,
                    "temp6": 1,
                    "temp7": 1,
                    "temp8": 4,
                    "temp_flag": 1,
                    "temp_var2": 1,
                    "temp_var8": 2,
                    "temp_var_2": 1,
                    "var2": 1,
                    "var8": 2,
                    "variable2": 1
                },
                "param_1": {
                    "arg1": 2,
                    "first_param": 1,
                    "input1": 9,
                    "input_1": 1,
                    "input_param1": 5,
                    "input_param_1": 3,
                    "param1": 6,
                    "param_1": 2,
                    "value1": 1
                },
                "param_10": {
                    "output": 3,
                    "output_array": 5,
                    "output_param": 2,
                    "output_params": 8,
                    "param_array": 2,
                    "result_array": 10
                },
                "param_2": {
                    "arg2": 2,
                    "input2": 9,
                    "input_2": 1,
                    "input_param2": 5,
                    "input_param_2": 3,
                    "param2": 6,
                    "param_2": 2,
                    "second_param": 1,
                    "value2": 1
                },
                "param_3": {
                    "arg3": 2,
                    "input3": 9,
                    "input_3": 1,
                    "input_param3": 5,
                    "input_param_3": 3,
                    "param3": 6,
                    "param_3": 2,
                    "third_param": 1,
                    "value3": 1
                },
                "param_4": {
                    "arg4": 2,
                    "fourth_param": 1,
                    "input4": 9,
                    "input_4": 1,
                    "input_param4": 5,
                    "input_param_4": 3,
                    "param4": 6,
                    "param_4": 2
                },
                "param_5": {
                    "arg5": 2,
                    "fifth_param": 1,
                    "input5": 9,
                    "input_5": 1,
                    "input_param5": 5,
                    "input_param_5": 3,
                    "param5": 6,
                    "param_5": 2
                },
                "param_6": {
                    "arg6": 2,
                    "input6": 9,
                    "input_6": 1,
                    "input_param6": 5,
                    "input_param_6": 3,
                    "param6": 5,
                    "param_6": 2,
                    "sixth_param": 1
                },
                "param_7": {
                    "arg7": 2,
                    "input7": 9,
                    "input_7": 1,
                    "input_param7": 5,
                    "input_param_7": 3,
                    "param7": 5,
                    "param_7": 2,
                    "seventh_param": 1,
                    "value7": 1
                },
                "param_8": {
                    "arg8": 2,
                    "eighth_param": 1,
                    "input8": 9,
                    "input_8": 1,
                    "input_param8": 5,
                    "input_param_8": 3,
                    "param8": 5,
                    "param_8": 2,
                    "value8": 1
                },
                "param_9": {
                    "arg9": 2,
                    "input9": 9,
                    "input_9": 1,
                    "input_param9": 5,
                    "input_param_9": 3,
                    "ninth_param": 1,
                    "param9": 5,
                    "param_9": 2,
                    "value9": 1
                },
                "uVar1": {
                    "result1": 14,
                    "result_1": 4,
                    "temp1": 8,
                    "temp_var1": 2,
                    "var1": 2
                },
                "uVar10": {
                    "result10": 9,
                    "result13": 1,
                    "result8": 2,
                    "result9": 1,
                    "result_12": 1,
                    "result_8": 3,
                    "temp10": 4,
                    "temp8": 4,
                    "temp9": 1,
                    "temp_var10": 2,
                    "var10": 2
                },
                "uVar11": {
                    "result10": 1,
                    "result11": 9,
                    "result14": 1,
                    "result9": 2,
                    "result_13": 1,
                    "result_9": 3,
                    "temp10": 1,
                    "temp11": 4,
                    "temp9": 4,
                    "temp_var11": 2,
                    "var11": 2
                },
                "uVar12": {
                    "result10": 2,
                    "result11": 1,
                    "result12": 9,
                    "result15": 1,
                    "result_10": 3,
                    "result_14": 1,
                    "temp10": 4,
                    "temp11": 1,
                    "temp12": 4,
                    "temp_var12": 2,
                    "var12": 2
                },
                "uVar13": {
                    "result11": 2,
                    "result12": 1,
                    "result13": 9,
                    "result16": 1,
                    "result_11": 3,
                    "result_15": 1,
                    "temp11": 4,
                    "temp12": 1,
                    "temp13": 4,
                    "temp_var13": 2,
                    "var13": 2
                },
                "uVar14": {
                    "result12": 2,
                    "result13": 1,
                    "result14": 9,
                    "result17": 1,
                    "result_12": 3,
                    "result_16": 1,
                    "temp12": 4,
                    "temp13": 1,
                    "temp14": 4,
                    "temp_var14": 2,
                    "var14": 2
                },
                "uVar15": {
                    "result13": 2,
                    "result14": 1,
                    "result15": 9,
                    "result18": 1,
                    "result_13": 3,
                    "result_17": 1,
                    "temp13": 4,
                    "temp14": 1,
                    "temp15": 4,
                    "temp_var15": 2,
                    "var15": 2
                },
                "uVar16": {
                    "result14": 2,
                    "result15": 1,
                    "result16": 9,
                    "result19": 1,
                    "result_14": 3,
                    "result_18": 1,
                    "temp14": 4,
                    "temp15": 1,
                    "temp16": 4,
                    "temp_var16": 2,
                    "var16": 2
                },
                "uVar17": {
                    "result15": 2,
                    "result16": 1,
                    "result17": 9,
                    "result20": 1,
                    "result_15": 3,
                    "result_19": 1,
                    "temp15": 4,
                    "temp16": 1,
                    "temp17": 4,
                    "temp_var17": 2,
                    "var17": 2
                },
                "uVar18": {
                    "result16": 2,
                    "result17": 1,
                    "result18": 9,
                    "result21": 1,
                    "result_16": 3,
                    "result_20": 1,
                    "temp16": 4,
                    "temp17": 1,
                    "temp18": 4,
                    "temp_var18": 2,
                    "var18": 2
                },
                "uVar2": {
                    "result2": 14,
                    "result_2": 4,
                    "temp2": 8,
                    "temp_var2": 2,
                    "var2": 2
                },
                "uVar20": {
                    "result17": 1,
                    "result18": 1,
                    "result19": 1,
                    "result20": 9,
                    "result22": 1,
                    "result_17": 3,
                    "result_21": 1,
                    "temp17": 3,
                    "temp18": 1,
                    "temp19": 1,
                    "temp20": 4,
                    "temp_var20": 2,
                    "var20": 2
                },
                "uVar21": {
                    "result18": 1,
                    "result19": 1,
                    "result20": 1,
                    "result21": 9,
                    "result23": 1,
                    "result_18": 3,
                    "result_22": 1,
                    "temp18": 3,
                    "temp19": 1,
                    "temp20": 1,
                    "temp21": 4,
                    "temp_var21": 2,
                    "var21": 2
                },
                "uVar22": {
                    "result19": 1,
                    "result20": 1,
                    "result21": 1,
                    "result22": 9,
                    "result24": 1,
                    "result_19": 3,
                    "result_23": 1,
                    "temp19": 3,
                    "temp20": 1,
                    "temp21": 1,
                    "temp22": 4,
                    "temp_var22": 2,
                    "var22": 2
                },
                "uVar23": {
                    "result20": 1,
                    "result21": 1,
                    "result22": 1,
                    "result23": 9,
                    "result25": 1,
                    "result_20": 3,
                    "result_24": 1,
                    "temp20": 3,
                    "temp21": 1,
                    "temp22": 1,
                    "temp23": 4,
                    "temp_var23": 2,
                    "var23": 2
                },
                "uVar24": {
                    "result21": 1,
                    "result22": 1,
                    "result23": 1,
                    "result24": 9,
                    "result26": 1,
                    "result_21": 3,
                    "result_25": 1,
                    "temp21": 3,
                    "temp22": 1,
                    "temp23": 1,
                    "temp24": 4,
                    "temp_var24": 2,
                    "var24": 2
                },
                "uVar25": {
                    "result22": 1,
                    "result23": 1,
                    "result24": 1,
                    "result25": 9,
                    "result27": 1,
                    "result_22": 3,
                    "result_26": 1,
                    "temp22": 3,
                    "temp23": 1,
                    "temp24": 1,
                    "temp25": 4,
                    "temp_var25": 2,
                    "var25": 2
                },
                "uVar27": {
                    "result23": 1,
                    "result24": 1,
                    "result26": 1,
                    "result27": 9,
                    "result28": 1,
                    "result_23": 3,
                    "result_27": 1,
                    "temp23": 3,
                    "temp25": 1,
                    "temp26": 1,
                    "temp27": 4,
                    "temp_var27": 2,
                    "var27": 2
                },
                "uVar28": {
                    "result24": 1,
                    "result25": 1,
                    "result27": 1,
                    "result28": 9,
                    "result29": 1,
                    "result_24": 3,
                    "result_28": 1,
                    "temp24": 3,
                    "temp26": 1,
                    "temp27": 1,
                    "temp28": 4,
                    "temp_var28": 2,
                    "var28": 2
                },
                "uVar29": {
                    "result25": 1,
                    "result26": 1,
                    "result28": 1,
                    "result29": 9,
                    "result30": 1,
                    "result_25": 3,
                    "result_29": 1,
                    "temp25": 3,
                    "temp27": 1,
                    "temp28": 1,
                    "temp29": 4,
                    "temp_var29": 2,
                    "var29": 2
                },
                "uVar31": {
                    "result26": 1,
                    "result27": 1,
                    "result30": 1,
                    "result31": 10,
                    "result_26": 3,
                    "result_30": 1,
                    "temp26": 3,
                    "temp29": 2,
                    "temp31": 4,
                    "temp_var31": 2,
                    "var31": 2
                },
                "uVar32": {
                    "result27": 1,
                    "result28": 1,
                    "result31": 1,
                    "result32": 10,
                    "result_27": 3,
                    "result_31": 1,
                    "temp27": 3,
                    "temp30": 2,
                    "temp32": 4,
                    "temp_var32": 2,
                    "var32": 2
                },
                "uVar4": {
                    "result3": 4,
                    "result4": 9,
                    "result_3": 4,
                    "temp1": 1,
                    "temp3": 4,
                    "temp4": 4,
                    "temp_var4": 2,
                    "var4": 2
                },
                "uVar5": {
                    "result4": 4,
                    "result5": 9,
                    "result_4": 4,
                    "temp2": 1,
                    "temp4": 4,
                    "temp5": 4,
                    "temp_var5": 2,
                    "var5": 2
                },
                "uVar6": {
                    "result5": 4,
                    "result6": 9,
                    "result_5": 4,
                    "temp3": 1,
                    "temp5": 4,
                    "temp6": 4,
                    "temp_var6": 2,
                    "var6": 2
                },
                "uVar7": {
                    "result6": 4,
                    "result7": 9,
                    "result_6": 4,
                    "temp4": 1,
                    "temp6": 4,
                    "temp7": 4,
                    "temp_var7": 2,
                    "var7": 2
                },
                "uVar9": {
                    "result12": 1,
                    "result7": 2,
                    "result8": 1,
                    "result9": 9,
                    "result_11": 1,
                    "result_7": 3,
                    "temp7": 4,
                    "temp8": 1,
                    "temp9": 4,
                    "temp_var9": 2,
                    "var9": 2
                }
            },
            "called": [
                "FUN_08000cec",
                "FUN_08000a30",
                "FUN_08000428",
                "FUN_08000ad8",
                "FUN_08005bc8",
                "FUN_080004d0",
                "FUN_08005854",
                "FUN_08000adc",
                "FUN_08000724",
                "thunk_FUN_08006070",
                "FUN_08000e54",
                "FUN_08001014"
            ],
            "calling": [
                "FUN_08002f28"
            ],
            "code": "\nvoid process_data_08003330(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4,\n                 undefined4 input5,undefined4 input6,undefined4 input7,undefined4 input8,\n                 undefined4 input9,undefined4 *result_array)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  int temp3;\n  undefined4 result4;\n  undefined4 result5;\n  undefined4 result6;\n  undefined4 result7;\n  int result8;\n  undefined4 result9;\n  undefined4 result10;\n  undefined4 result11;\n  undefined4 result12;\n  undefined4 result13;\n  undefined4 result14;\n  undefined4 result15;\n  undefined4 result16;\n  undefined4 result17;\n  undefined4 result18;\n  int temp19;\n  undefined4 result20;\n  undefined4 result21;\n  undefined4 result22;\n  undefined4 result23;\n  undefined4 result24;\n  undefined4 result25;\n  int result26;\n  undefined4 result27;\n  undefined4 result28;\n  undefined4 result29;\n  int temp30;\n  undefined8 result31;\n  undefined8 result32;\n  \n  result29 = DAT_20000048;\n  result28 = DAT_20000044;\n  temp30 = DAT_20000040;\n  result27 = DAT_2000003c;\n  result1 = FUN_08000cec(input1,input1);\n  result2 = FUN_08000cec(input2);\n  result1 = FUN_08000adc(result1,result2);\n  result2 = FUN_08000cec(input3);\n  FUN_08000adc(result1,result2);\n  FUN_08000428();\n  FUN_08005bc8();\n  result1 = FUN_08000a30();\n  temp3 = FUN_08001014(result1,0);\n  if (temp3 == 0) {\n    result2 = FUN_08000cec(input7);\n    result4 = FUN_08000cec(input8);\n    result2 = FUN_08000adc(result2,result4);\n    result4 = FUN_08000cec(input9);\n    FUN_08000adc(result2,result4);\n    FUN_08000428();\n    FUN_08005bc8();\n    result2 = FUN_08000a30();\n    temp3 = FUN_08001014(result2,0);\n    if (temp3 == 0) {\n      result31 = FUN_08000428(input4);\n      FUN_080004d0((int)result31,(int)((ulonglong)result31 >> 0x20),0xa2529d39,0x3f91df46);\n      result4 = FUN_08000a30();\n      result31 = FUN_08000428(input5);\n      FUN_080004d0((int)result31,(int)((ulonglong)result31 >> 0x20),0xa2529d39,0x3f91df46);\n      result5 = FUN_08000a30();\n      result31 = FUN_08000428(input6);\n      FUN_080004d0((int)result31,(int)((ulonglong)result31 >> 0x20),0xa2529d39,0x3f91df46);\n      result6 = FUN_08000a30();\n      temp3 = FUN_08000adc(result27);\n      result7 = FUN_08000adc(temp30);\n      result8 = FUN_08000adc(result28,result28);\n      result9 = FUN_08000adc(result29,result29);\n      result10 = FUN_08000cec(result27);\n      result11 = FUN_08000cec(result27,temp30);\n      result12 = FUN_08000cec(result27,result28);\n      result13 = FUN_08000cec(temp30);\n      result14 = FUN_08000cec(temp30,result29);\n      result15 = FUN_08000cec(result28,result28);\n      result16 = FUN_08000cec(result29,result29);\n      result1 = FUN_08000e54(0x3f800000,result1);\n      result2 = FUN_08000e54(0x3f800000,result2);\n      result17 = FUN_08000cec(input7,result2);\n      result18 = FUN_08000cec(input8,result2);\n      result2 = FUN_08000cec(input9,result2);\n      temp19 = FUN_08000cec(temp3,result17);\n      result20 = FUN_08000cec(temp3,result18);\n      result21 = FUN_08000cec(temp3,result2);\n      result22 = FUN_08000cec(result7,result17);\n      result23 = FUN_08000cec(result10,result17);\n      result24 = FUN_08000cec(result29,result20);\n      result23 = FUN_08000ad8(result23,result24);\n      result24 = FUN_08000cec(result28,result21);\n      result23 = FUN_08000adc(result23,result24);\n      result24 = FUN_08000cec(result13,result17);\n      result23 = FUN_08000adc(result23,result24);\n      result24 = FUN_08000cec(result7,result18);\n      result24 = FUN_08000cec(result24,result28);\n      result23 = FUN_08000adc(result23,result24);\n      result24 = FUN_08000cec(result7,result2);\n      result24 = FUN_08000cec(result24,result29);\n      result23 = FUN_08000adc(result23,result24);\n      result24 = FUN_08000cec(result15,result17);\n      result23 = FUN_08000ad8(result23,result24);\n      result24 = FUN_08000cec(result16,result17);\n      result23 = FUN_08000ad8(result23,result24);\n      result24 = FUN_08000cec(result29,temp19);\n      result25 = FUN_08000cec(result10,result18);\n      result24 = FUN_08000adc(result24,result25);\n      result21 = FUN_08000cec(temp30,result21);\n      result21 = FUN_08000ad8(result24,result21);\n      result24 = FUN_08000cec(result28,result22);\n      result21 = FUN_08000adc(result21,result24);\n      result24 = FUN_08000cec(result13,result18);\n      result21 = FUN_08000ad8(result21,result24);\n      result24 = FUN_08000cec(result15,result18);\n      result21 = FUN_08000adc(result21,result24);\n      result24 = FUN_08000cec(result8,result2);\n      result24 = FUN_08000cec(result24,result29);\n      result21 = FUN_08000adc(result21,result24);\n      result24 = FUN_08000cec(result16,result18);\n      result21 = FUN_08000ad8(result21,result24);\n      result23 = FUN_08000cec(result23,result23);\n      result21 = FUN_08000cec(result21,result21);\n      FUN_08000adc(result23,result21);\n      FUN_08000428();\n      FUN_08005bc8();\n      result26 = FUN_08000a30();\n      result21 = FUN_08000cec(temp19 + -0x80000000,result28);\n      result20 = FUN_08000cec(temp30,result20);\n      result20 = FUN_08000adc(result21,result20);\n      result10 = FUN_08000cec(result10,result2);\n      result10 = FUN_08000adc(result20,result10);\n      result20 = FUN_08000cec(result29,result22);\n      result10 = FUN_08000adc(result10,result20);\n      result20 = FUN_08000cec(result13,result2);\n      result10 = FUN_08000ad8(result10,result20);\n      result20 = FUN_08000cec(result8,result18);\n      result20 = FUN_08000cec(result20,result29);\n      result10 = FUN_08000adc(result10,result20);\n      result20 = FUN_08000cec(result15,result2);\n      result10 = FUN_08000ad8(result10,result20);\n      result20 = FUN_08000cec(result16,result2);\n      result10 = FUN_08000adc(result10,result20);\n      result20 = FUN_08000adc(result10,result10);\n      result21 = FUN_08000adc(result14);\n      result22 = FUN_08000cec(result28,temp3);\n      result21 = FUN_08000ad8(result21,result22);\n      result22 = FUN_08000cec(input1,result1);\n      result21 = FUN_08000ad8(result21,result22);\n      result22 = FUN_08000cec(result29,result8);\n      result23 = FUN_08000adc(result11);\n      result22 = FUN_08000adc(result22,result23);\n      result23 = FUN_08000cec(input2,result1);\n      result22 = FUN_08000ad8(result22,result23);\n      result23 = FUN_08000cec(result28,result10);\n      result24 = FUN_08000ad8(0x3f000000,result15);\n      result16 = FUN_08000ad8(result24,result16);\n      result16 = FUN_08000cec(result16,result26);\n      result24 = FUN_08000ad8(result14,result12);\n      result24 = FUN_08000cec(result24,result10);\n      result16 = FUN_08000adc(result16,result24);\n      result16 = FUN_08000ad8(result16,result17);\n      result17 = FUN_08000cec(temp30,result10);\n      result24 = FUN_08000cec(temp30,result28);\n      result25 = FUN_08000cec(result27,result29);\n      result24 = FUN_08000ad8(result24,result25);\n      result24 = FUN_08000cec(result24,result26);\n      result25 = FUN_08000cec(result28,result29);\n      result11 = FUN_08000adc(result25,result11);\n      result11 = FUN_08000cec(result11,result10);\n      result11 = FUN_08000adc(result24,result11);\n      result11 = FUN_08000ad8(result11,result18);\n      result18 = FUN_08000cec(result28,result26);\n      result24 = FUN_08000ad8(0x3f000000,result13);\n      result24 = FUN_08000ad8(result24,result15);\n      result24 = FUN_08000cec(result24,result10);\n      result12 = FUN_08000adc(result12,result14);\n      result12 = FUN_08000cec(result12,result26);\n      result12 = FUN_08000adc(result24,result12);\n      result2 = FUN_08000ad8(result12,result2);\n      result12 = FUN_08000cec(result8 + -0x80000000,result21);\n      result14 = FUN_08000cec(result7,result22);\n      result12 = FUN_08000adc(result12,result14);\n      result14 = FUN_08000cec(result23,result16);\n      result12 = FUN_08000ad8(result12,result14);\n      result14 = FUN_08000cec(result29,result26 + -0x80000000);\n      result14 = FUN_08000adc(result14,result17);\n      result14 = FUN_08000cec(result14,result11);\n      result12 = FUN_08000adc(result12,result14);\n      result14 = FUN_08000cec(result18,result2);\n      result12 = FUN_08000adc(result12,result14);\n      result13 = FUN_08000adc(result13);\n      result13 = FUN_08000ad8(0x3f800000,result13);\n      result14 = FUN_08000adc(result15);\n      result13 = FUN_08000ad8(result13,result14);\n      result1 = FUN_08000cec(input3,result1);\n      result1 = FUN_08000ad8(result13,result1);\n      result13 = FUN_08000cec(result29,result10);\n      result10 = FUN_08000cec(result27,result10);\n      result14 = FUN_08000cec(result9,result21);\n      result15 = FUN_08000cec(temp3,result22);\n      result14 = FUN_08000adc(result14,result15);\n      result15 = FUN_08000cec(temp30,0x40800000);\n      result15 = FUN_08000cec(result15,result1);\n      result14 = FUN_08000ad8(result14,result15);\n      result15 = FUN_08000cec(result16,result13);\n      result14 = FUN_08000adc(result14,result15);\n      result15 = FUN_08000adc(result18,result10);\n      result15 = FUN_08000cec(result15,result11);\n      result14 = FUN_08000adc(result14,result15);\n      result15 = FUN_08000cec(result29,result26);\n      result18 = FUN_08000cec(temp30,result20);\n      result15 = FUN_08000ad8(result15,result18);\n      result15 = FUN_08000cec(result15,result2);\n      result14 = FUN_08000adc(result14,result15);\n      temp19 = FUN_08000adc(result26,result26);\n      result15 = FUN_08000cec(temp30,result26);\n      result18 = FUN_08000cec(temp3 + -0x80000000,result21);\n      result9 = FUN_08000cec(result9,result22);\n      result9 = FUN_08000adc(result18,result9);\n      result18 = FUN_08000cec(result28,0x40800000);\n      result1 = FUN_08000cec(result18,result1);\n      result1 = FUN_08000ad8(result9,result1);\n      result9 = FUN_08000cec(result28,temp19 + -0x80000000);\n      result9 = FUN_08000ad8(result9,result10);\n      result9 = FUN_08000cec(result9,result16);\n      result1 = FUN_08000adc(result1,result9);\n      result9 = FUN_08000adc(result13,result15);\n      result9 = FUN_08000cec(result9,result11);\n      result1 = FUN_08000adc(result1,result9);\n      result9 = FUN_08000cec(result27,result26);\n      result10 = FUN_08000cec(result28,result20);\n      result9 = FUN_08000ad8(result9,result10);\n      result9 = FUN_08000cec(result9,result2);\n      result9 = FUN_08000adc(result1,result9);\n      result1 = FUN_08000cec(result7,result21);\n      result7 = FUN_08000cec(result8,result22);\n      result1 = FUN_08000adc(result1,result7);\n      result7 = FUN_08000cec(result29,temp19 + -0x80000000);\n      result7 = FUN_08000adc(result7,result17);\n      result7 = FUN_08000cec(result7,result16);\n      result1 = FUN_08000adc(result1,result7);\n      result7 = FUN_08000cec(result27,result26 + -0x80000000);\n      result7 = FUN_08000adc(result7,result23);\n      result7 = FUN_08000cec(result7,result11);\n      result1 = FUN_08000adc(result1,result7);\n      result2 = FUN_08000cec(result2,result15);\n      result7 = FUN_08000adc(result1,result2);\n      result1 = FUN_08000cec(result12);\n      result2 = FUN_08000cec(result14);\n      result1 = FUN_08000adc(result1,result2);\n      result2 = FUN_08000cec(result9,result9);\n      result1 = FUN_08000adc(result1,result2);\n      result2 = FUN_08000cec(result7,result7);\n      FUN_08000adc(result1,result2);\n      FUN_08000428();\n      FUN_08005bc8();\n      result1 = FUN_08000a30();\n      result10 = FUN_08000e54(0x3f800000,result1);\n      result1 = DAT_2000035c;\n      result2 = FUN_08000cec(temp30 + -0x80000000,result4);\n      result11 = FUN_08000cec(result28,result5);\n      result2 = FUN_08000ad8(result2,result11);\n      result11 = FUN_08000cec(result29,result6);\n      result2 = FUN_08000ad8(result2,result11);\n      result11 = FUN_08000cec(result2,0x3f000000);\n      result12 = FUN_08000cec(result12,result10);\n      result2 = DAT_20000360;\n      result12 = FUN_08000cec(result12,result1);\n      result11 = FUN_08000ad8(result11,result12);\n      result2 = FUN_08000cec(result11,result2);\n      result11 = FUN_08000adc(result2,result27);\n      result12 = FUN_08000cec(result27,result4);\n      result13 = FUN_08000cec(result28,result6);\n      result2 = DAT_20000360;\n      result12 = FUN_08000adc(result12,result13);\n      result13 = FUN_08000cec(result29,result5);\n      result12 = FUN_08000ad8(result12,result13);\n      result12 = FUN_08000cec(result12,0x3f000000);\n      result13 = FUN_08000cec(result14,result10);\n      result13 = FUN_08000cec(result13,result1);\n      result12 = FUN_08000ad8(result12,result13);\n      result2 = FUN_08000cec(result12,result2);\n      result12 = FUN_08000adc(result2,temp30);\n      result2 = DAT_20000360;\n      result13 = FUN_08000cec(result27,result5);\n      result14 = FUN_08000cec(temp30,result6);\n      result13 = FUN_08000ad8(result13,result14);\n      result14 = FUN_08000cec(result29,result4);\n      result13 = FUN_08000adc(result13,result14);\n      result13 = FUN_08000cec(result13,0x3f000000);\n      result9 = FUN_08000cec(result9,result10);\n      result9 = FUN_08000cec(result9,result1);\n      result9 = FUN_08000ad8(result13,result9);\n      result2 = FUN_08000cec(result9,result2);\n      result2 = FUN_08000adc(result2,result28);\n      result27 = FUN_08000cec(result27,result6);\n      result5 = FUN_08000cec(temp30,result5);\n      result27 = FUN_08000adc(result27,result5);\n      result28 = FUN_08000cec(result28,result4);\n      result27 = FUN_08000ad8(result27,result28);\n      result28 = FUN_08000cec(result27,0x3f000000);\n      result27 = FUN_08000cec(result7,result10);\n      result1 = FUN_08000cec(result27,result1);\n      result27 = DAT_20000360;\n      result28 = FUN_08000ad8(result28,result1);\n      result27 = FUN_08000cec(result28,result27);\n      result27 = FUN_08000adc(result27,result29);\n      result28 = FUN_08000cec(result11,result11);\n      result29 = FUN_08000cec(result12,result12);\n      result28 = FUN_08000adc(result28,result29);\n      result29 = FUN_08000cec(result2,result2);\n      result28 = FUN_08000adc(result28,result29);\n      result29 = FUN_08000cec(result27,result27);\n      FUN_08000adc(result28,result29);\n      FUN_08000428();\n      FUN_08005bc8();\n      result28 = FUN_08000a30();\n      result28 = FUN_08000e54(0x3f800000,result28);\n      result29 = FUN_08000cec(result11,result28);\n      DAT_2000003c = result29;\n      temp30 = FUN_08000cec(result12,result28);\n      DAT_20000040 = temp30;\n      result1 = FUN_08000cec(result2,result28);\n      DAT_20000044 = result1;\n      DAT_20000048 = FUN_08000cec(result27,result28);\n      result27 = FUN_08000cec(temp30,DAT_20000048);\n      result28 = FUN_08000cec(result29,result1);\n      result27 = FUN_08000ad8(result27,result28);\n      FUN_08000adc(result27,result27);\n      FUN_08000428();\n      result31 = FUN_08005854();\n      result31 = FUN_080004d0((int)result31,(int)((ulonglong)result31 >> 0x20),0,0x40668000);\n      FUN_08000724((int)result31,(int)((ulonglong)result31 >> 0x20),0x54442d18,0x400921fb);\n      result27 = FUN_08000a30();\n      *result_array = result27;\n      temp30 = DAT_20000040;\n      result27 = DAT_2000003c;\n      result28 = FUN_08000cec(DAT_2000003c,DAT_2000003c);\n      result29 = FUN_08000cec(temp30,temp30);\n      result29 = FUN_08000ad8(result28,result29);\n      result28 = DAT_20000044;\n      result1 = FUN_08000cec(DAT_20000044,DAT_20000044);\n      result1 = FUN_08000ad8(result29,result1);\n      result29 = DAT_20000048;\n      result2 = FUN_08000cec(DAT_20000048,DAT_20000048);\n      FUN_08000adc(result1,result2);\n      result31 = FUN_08000428();\n      result27 = FUN_08000cec(result27,temp30);\n      result28 = FUN_08000cec(result28,result29);\n      result27 = FUN_08000adc(result27,result28);\n      FUN_08000adc(result27,result27);\n      result32 = FUN_08000428();\n      result31 = thunk_FUN_08006070((int)result32,(int)((ulonglong)result32 >> 0x20),(int)result31,\n                                  (int)((ulonglong)result31 >> 0x20));\n      result31 = FUN_080004d0((int)result31,(int)((ulonglong)result31 >> 0x20),0,0x40668000);\n      FUN_08000724((int)result31,(int)((ulonglong)result31 >> 0x20),0x54442d18,0x400921fb);\n      result27 = FUN_08000a30();\n      result_array[1] = result27;\n      temp30 = DAT_20000040;\n      result27 = DAT_2000003c;\n      result28 = FUN_08000cec(DAT_2000003c,DAT_2000003c);\n      result29 = FUN_08000cec(temp30,temp30);\n      result29 = FUN_08000adc(result28,result29);\n      result28 = DAT_20000044;\n      result1 = FUN_08000cec(DAT_20000044,DAT_20000044);\n      result1 = FUN_08000ad8(result29,result1);\n      result29 = DAT_20000048;\n      result2 = FUN_08000cec(DAT_20000048,DAT_20000048);\n      FUN_08000ad8(result1,result2);\n      result31 = FUN_08000428();\n      result28 = FUN_08000cec(temp30,result28);\n      result27 = FUN_08000cec(result27,result29);\n      result27 = FUN_08000adc(result28,result27);\n      FUN_08000adc(result27,result27);\n      result32 = FUN_08000428();\n      result31 = thunk_FUN_08006070((int)result32,(int)((ulonglong)result32 >> 0x20),(int)result31,\n                                  (int)((ulonglong)result31 >> 0x20));\n      result31 = FUN_080004d0((int)result31,(int)((ulonglong)result31 >> 0x20),0,0x40668000);\n      FUN_08000724((int)result31,(int)((ulonglong)result31 >> 0x20),0x54442d18,0x400921fb);\n      result27 = FUN_08000a30();\n      result_array[2] = result27;\n    }\n  }\n  return;\n}\n\n",
            "current_name": "process_data_08003330",
            "entrypoint": "0x08003330",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003330": "process_data_08003330",
                "iVar19": "temp19",
                "iVar26": "result26",
                "iVar3": "temp3",
                "iVar30": "temp30",
                "iVar8": "result8",
                "param_1": "input1",
                "param_10": "result_array",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "input5",
                "param_6": "input6",
                "param_7": "input7",
                "param_8": "input8",
                "param_9": "input9",
                "uVar1": "result1",
                "uVar10": "result10",
                "uVar11": "result11",
                "uVar12": "result12",
                "uVar13": "result13",
                "uVar14": "result14",
                "uVar15": "result15",
                "uVar16": "result16",
                "uVar17": "result17",
                "uVar18": "result18",
                "uVar2": "result2",
                "uVar20": "result20",
                "uVar21": "result21",
                "uVar22": "result22",
                "uVar23": "result23",
                "uVar24": "result24",
                "uVar25": "result25",
                "uVar27": "result27",
                "uVar28": "result28",
                "uVar29": "result29",
                "uVar31": "result31",
                "uVar32": "result32",
                "uVar4": "result4",
                "uVar5": "result5",
                "uVar6": "result6",
                "uVar7": "result7",
                "uVar9": "result9"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003eb0": {
            "additional_data": {
                "0x3f": {
                    "exception_code": 1
                },
                "CONCAT44": {
                    "combine": 1,
                    "combine_input_and_one": 1,
                    "combine_integers": 1,
                    "combine_values": 5,
                    "combine_with_one": 1,
                    "concat_with_one": 1,
                    "concatenate": 2,
                    "concatenate_64bit": 2,
                    "concatenate_values": 3,
                    "concatenate_with_one": 1,
                    "concatenate_with_ones": 1
                },
                "FUN_08003eb0": {
                    "convert_to64_bit": 2,
                    "convert_to64_bits": 1,
                    "convert_to_high_word": 1,
                    "convert_to_long_long": 1,
                    "extend_and_shift": 1,
                    "left_shift_or_interrupt": 1,
                    "left_shift_or_return_param": 1,
                    "left_shift_param": 1,
                    "left_shift_param_64bit": 1,
                    "left_shift_param_or_interrupt": 1,
                    "reversed_param_or_shift": 1,
                    "shift_and_return_or_interrupt": 1,
                    "shift_left": 3,
                    "shift_left64_bits": 3,
                    "shift_left_64_bit": 1,
                    "shift_left_bits": 1,
                    "shift_left_by32": 1,
                    "shift_left_by_32": 1,
                    "shift_left_param_1": 1,
                    "shift_left_param_to_long_long": 1,
                    "shift_left_with_conditional_check": 1,
                    "shift_left_with_fallback": 1,
                    "shift_left_with_interrupt_check": 1,
                    "shift_param_to_high_bits": 2,
                    "shift_parameter_left": 1
                },
                "param_1": {
                    "input": 8,
                    "input_number": 1,
                    "input_value": 18,
                    "value": 4
                },
                "return": {
                    "result": 1
                },
                "return_value": {
                    "result": 1,
                    "shifted_value": 1
                },
                "software_interrupt": {
                    "call_software_interrupt": 1,
                    "interrupt": 1,
                    "interrupt_handler": 1,
                    "invoke_interrupt": 1,
                    "invoke_system_interrupt": 1,
                    "swi_call": 1,
                    "trigger_hardware_exception": 1,
                    "trigger_interrupt": 6,
                    "trigger_software_interrupt": 3
                },
                "ulonglong": {
                    "combined_value": 1,
                    "long_long": 1,
                    "uint64_t": 1,
                    "unsigned_long_long": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_080041ae"
            ],
            "code": "\nlonglong shift_left_with_interrupt_check_08003eb0(uint input_value)\n\n{\n  if (DAT_20000280 == 0) {\n    trigger_interrupt(0x3f);\n    result combine_values(input_value,1);\n  }\n  result (unsigned_long_long)input_value << 0x20;\n}\n\n",
            "current_name": "shift_left_with_interrupt_check_08003eb0",
            "entrypoint": "0x08003eb0",
            "imported": false,
            "improved": true,
            "renaming": {
                "CONCAT44": "combine_values",
                "FUN_08003eb0": "shift_left_with_interrupt_check_08003eb0",
                "param_1": "input_value",
                "return": "result",
                "software_interrupt": "trigger_interrupt",
                "ulonglong": "unsigned_long_long"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003ec8": {
            "additional_data": {
                "0x7ff": {
                    "max_index": 1
                },
                "0x802": {
                    "index_address": 2,
                    "offset_current_index": 1,
                    "offset_index": 1
                },
                "0x804": {
                    "counter_address": 2,
                    "offset_current_value": 2
                },
                "FUN_08003ec8": {
                    "increment_and_store": 12,
                    "increment_and_store_data": 1,
                    "increment_and_store_value": 11,
                    "increment_and_write_value": 1,
                    "increment_counter": 1,
                    "increment_counter_and_store_value": 2,
                    "update_data": 1,
                    "update_short_value": 1,
                    "update_value": 1
                },
                "newValue_1": {
                    "new_counter_value": 1
                },
                "param_1": {
                    "array": 2,
                    "array_address": 1,
                    "array_pointer": 1,
                    "base_address": 18,
                    "counter_address": 3,
                    "data_ptr": 2,
                    "memory_address": 4
                },
                "param_2": {
                    "data": 3,
                    "new_byte": 1,
                    "new_value": 6,
                    "value": 15,
                    "value_to_store": 6
                },
                "short": {
                    "short_value": 3
                },
                "shortValue_1": {
                    "counter": 1
                },
                "shortValue_2": {
                    "index": 1
                },
                "short_value_1": {
                    "count": 1
                },
                "undefined": {
                    "undefined_value": 1
                },
                "ushort": {
                    "unsigned_short_value": 2
                },
                "ushort_1": {
                    "counter_value": 1
                },
                "ushort_2": {
                    "index": 1
                },
                "ushort_3": {
                    "mask": 1
                },
                "ushort_value_1": {
                    "index": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004c30"
            ],
            "code": "\nundefined_value4 increment_counter_and_store_value_08003ec8(int base_address,undefined_value value)\n\n{\n  *(short_value *)(base_address + 0x804) = *(short_value *)(base_address + 0x804) + 1;\n  *(undefined_value *)(base_address + (uint)*(unsigned_short_value *)(base_address + 0x802)) = value;\n  *(unsigned_short_value *)(base_address + 0x802) = *(short_value *)(base_address + 0x802) + 1U & 0x7ff;\n  return 1;\n}\n\n",
            "current_name": "increment_counter_and_store_value_08003ec8",
            "entrypoint": "0x08003ec8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003ec8": "increment_counter_and_store_value_08003ec8",
                "param_1": "base_address",
                "param_2": "value",
                "short": "short_value",
                "undefined": "undefined_value",
                "ushort": "unsigned_short_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003f3c": {
            "additional_data": {
                "0x2000": {
                    "flag_3": 1
                },
                "0x4000": {
                    "flag_2": 1
                },
                "0x40011000": {
                    "flag_base": 1
                },
                "0x8000": {
                    "flag_1": 1
                },
                "FUN_08001424": {
                    "process_data": 1,
                    "process_input": 1,
                    "send_command": 1,
                    "set_flag": 3
                },
                "FUN_08003f3c": {
                    "check_flags": 1,
                    "check_parameters": 3,
                    "check_params": 2,
                    "initialize_flags": 19,
                    "initialize_params": 3,
                    "initialize_values": 1,
                    "update_settings": 1
                },
                "param_1": {
                    "address": 1,
                    "condition1": 1,
                    "first_param": 1,
                    "flag1": 19,
                    "flag1_value": 1,
                    "flag_1": 1,
                    "flag_value": 1,
                    "is_param1_zero": 2,
                    "size_param1": 1,
                    "value1": 3
                },
                "param_2": {
                    "condition2": 1,
                    "flag2": 19,
                    "flag2_value": 1,
                    "flag_2": 1,
                    "flag_mask": 1,
                    "is_param2_zero": 2,
                    "second_param": 1,
                    "size_param2": 1,
                    "value": 1,
                    "value2": 3
                },
                "param_3": {
                    "condition": 1,
                    "condition3": 1,
                    "flag3": 19,
                    "flag3_value": 1,
                    "flag_3": 1,
                    "is_param3_zero": 2,
                    "is_zero": 1,
                    "size_param3": 1,
                    "third_param": 1,
                    "value3": 3
                }
            },
            "called": [
                "FUN_08001424"
            ],
            "calling": [
                "FUN_08004a84",
                "FUN_08004028"
            ],
            "code": "\nvoid initialize_flags_08003f3c(int flag1,int flag2,int flag3)\n\n{\n  FUN_08001424(0x40011000,0x8000,flag1 == 0);\n  FUN_08001424(0x40011000,0x4000,flag2 == 0);\n  FUN_08001424(0x40011000,0x2000,flag3 == 0);\n  return;\n}\n\n",
            "current_name": "initialize_flags_08003f3c",
            "entrypoint": "0x08003f3c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003f3c": "initialize_flags_08003f3c",
                "param_1": "flag1",
                "param_2": "flag2",
                "param_3": "flag3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003fc4": {
            "additional_data": {
                "DAT_200014c8": {
                    "base_address": 4,
                    "data_block": 1,
                    "data_buffer": 1,
                    "global_data": 1,
                    "global_memory": 1,
                    "memory_address": 1,
                    "memory_base": 1,
                    "memory_location": 1,
                    "memory_offset": 1
                },
                "F": {
                    "set_param": 1
                },
                "FUN_08003fc4": {
                    "set_callback_parameter": 1,
                    "set_data_value": 1,
                    "set_global_parameter": 2,
                    "set_global_value": 1,
                    "set_param": 3,
                    "set_param1": 1,
                    "set_param_at_offset": 1,
                    "set_param_into_memory": 1,
                    "set_param_value": 9,
                    "set_parameter_in_memory": 1,
                    "set_parameter_value": 1,
                    "store_param_in_global": 1,
                    "store_param_in_memory": 2,
                    "store_parameter_at_memory_address": 1,
                    "store_parameter_in_memory": 4
                },
                "PTR_08003fc4": {
                    "pointer": 1
                },
                "param_1": {
                    "callback_value": 1,
                    "data": 1,
                    "input_value": 2,
                    "new_value": 5,
                    "param": 2,
                    "parameter": 3,
                    "value": 17
                },
                "value": {
                    "new_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "code": "\nvoid set_param_value_08003fc4(undefined4 value)\n\n{\n  *(undefined4 *)(DAT_200014c8 + 0x40) = value;\n  return;\n}\n\n",
            "current_name": "set_param_value_08003fc4",
            "entrypoint": "0x08003fc4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003fc4": "set_param_value_08003fc4",
                "param_1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003fd0": {
            "additional_data": {
                "0x3c": {
                    "offset": 1
                },
                "DAT_200014c8": {
                    "base_address": 1,
                    "data": 2,
                    "data_address": 1,
                    "data_block": 2,
                    "data_buffer": 2,
                    "global_data": 1,
                    "memory_address": 2,
                    "memory_block": 1,
                    "parameter_data": 1,
                    "target_pointer": 1
                },
                "FUN_08003fd0": {
                    "save_parameter_value": 1,
                    "set_global_param": 1,
                    "set_param": 7,
                    "set_param1": 1,
                    "set_param_at_offset": 1,
                    "set_param_in_memory": 1,
                    "set_param_offset": 1,
                    "set_param_to_data": 1,
                    "set_param_value": 4,
                    "set_parameter": 2,
                    "set_parameter_value": 3,
                    "set_pointer_value": 1,
                    "set_value_in_memory": 1,
                    "store_param_to_memory": 1,
                    "store_parameter_value": 3,
                    "store_value_at_offset": 1,
                    "update_parameter_value": 1
                },
                "param_1": {
                    "input_value": 1,
                    "new_value": 7,
                    "value": 23
                }
            },
            "called": [],
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "code": "\nvoid set_param_value_08003fd0(undefined4 value)\n\n{\n  *(undefined4 *)(DAT_200014c8 + 0x3c) = value;\n  return;\n}\n\n",
            "current_name": "set_param_value_08003fd0",
            "entrypoint": "0x08003fd0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003fd0": "set_param_value_08003fd0",
                "param_1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003fdc": {
            "additional_data": {
                "": {
                    "": 1
                },
                "0x38": {
                    "offset": 2
                },
                "DAT_200015f8": {
                    "data": 2,
                    "data_address": 1,
                    "data_buffer": 2,
                    "data_memory": 1,
                    "data_pointer": 1,
                    "global_data": 1,
                    "important_data": 1,
                    "memory_address": 3,
                    "memory_location": 1,
                    "memory_offset": 1,
                    "param_value_ptr": 1,
                    "parameter_data": 1
                },
                "FUN_08003fdc": {
                    "set_global_parameter": 1,
                    "set_important_value": 1,
                    "set_param": 4,
                    "set_param1": 1,
                    "set_param_value": 14,
                    "set_parameter_value": 2,
                    "set_pointer_to_value": 1,
                    "store_param_to_address": 1,
                    "store_parameter_in_memory": 3,
                    "store_parameter_value": 1,
                    "store_value_to_memory": 1,
                    "update_global_value": 1
                },
                "PTR_unknown": {
                    "unknown_pointer": 1
                },
                "VAR_200015f8": {
                    "data": 1
                },
                "new_variable_name_1": {
                    "new_value": 1
                },
                "param_1": {
                    "input_parameter": 1,
                    "new_param": 1,
                    "new_value": 5,
                    "param_value": 2,
                    "value": 22
                }
            },
            "called": [],
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "code": "\nvoid set_param_value_08003fdc(undefined4 value)\n\n{\n  *(undefined4 *)(DAT_200015f8 + 0x38) = value;\n  return;\n}\n\n",
            "current_name": "set_param_value_08003fdc",
            "entrypoint": "0x08003fdc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003fdc": "set_param_value_08003fdc",
                "param_1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003fe8": {
            "additional_data": {
                "DAT_20001540": {
                    "base_address": 1,
                    "data_address": 1,
                    "data_block": 1,
                    "data_buffer": 6,
                    "data_section": 1,
                    "global_data": 1,
                    "memory_address": 2,
                    "memory_block": 1,
                    "stored_data": 1
                },
                "FUN_08003fe8": {
                    "handle_parameter": 1,
                    "set_global_parameter": 1,
                    "set_main_pointer": 1,
                    "set_param": 2,
                    "set_param_value": 8,
                    "set_parameter": 2,
                    "set_parameter_at_offset": 1,
                    "set_parameter_value": 7,
                    "set_pointer_to_parameter": 1,
                    "set_stored_parameter": 1,
                    "store_parameter_at_address": 1,
                    "store_parameter_value": 1,
                    "update_memory_location": 1,
                    "update_parameter": 1,
                    "update_parameter_value": 2
                },
                "PTR_DAT_20001540_3c": {
                    "param_value_pointer": 1
                },
                "newValue": {
                    "value_to_set": 1
                },
                "param_1": {
                    "input_param": 1,
                    "new_param": 1,
                    "new_parameter": 1,
                    "new_value": 6,
                    "parameter": 2,
                    "value": 19
                }
            },
            "called": [],
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "code": "\nvoid set_param_value_08003fe8(undefined4 value)\n\n{\n  *(undefined4 *)(DAT_20001540 + 0x3c) = value;\n  return;\n}\n\n",
            "current_name": "set_param_value_08003fe8",
            "entrypoint": "0x08003fe8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003fe8": "set_param_value_08003fe8",
                "param_1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003ff4": {
            "additional_data": {
                "DAT_200014c8": {
                    "data3": 4,
                    "data_3": 2,
                    "data_block3": 1,
                    "data_structure3": 1
                },
                "DAT_20001540": {
                    "data2": 4,
                    "data_2": 2,
                    "data_block2": 1,
                    "data_structure2": 1
                },
                "DAT_200015f8": {
                    "data1": 4,
                    "data_1": 2,
                    "data_block1": 1,
                    "data_structure1": 1
                },
                "FUN_08002538": {
                    "copy_data": 1,
                    "fill_data_array": 1,
                    "initialize_chunk": 1,
                    "initialize_data_element": 1,
                    "initialize_memory": 1,
                    "modify_data": 1,
                    "process_data": 12,
                    "set_data": 3,
                    "set_memory": 1,
                    "set_parameters": 1,
                    "set_pointer_value": 1,
                    "update_data": 5
                },
                "FUN_08003ff4": {
                    "init_data_structures": 1,
                    "initialize_data": 28,
                    "initialize_data_structures": 2
                },
                "dataStruct": {
                    "data_struct": 1
                },
                "param_1": {
                    "data": 2,
                    "data_array": 3,
                    "data_arrays": 1,
                    "data_pointer": 14,
                    "data_pointers": 4,
                    "data_ptr": 3,
                    "data_struct": 1,
                    "pointer": 1,
                    "source": 1
                },
                "param_2": {
                    "array_length": 1,
                    "chunk_size": 1,
                    "data_length": 2,
                    "data_size": 2,
                    "length": 2,
                    "num_elements": 3,
                    "size": 18,
                    "value": 1
                },
                "size": {
                    "size": 1
                }
            },
            "called": [
                "FUN_08002538"
            ],
            "calling": [
                "FUN_08004028"
            ],
            "code": "\nvoid initialize_data_structures_08003ff4(void)\n\n{\n  FUN_08002538(&DAT_200015f8,4);\n  FUN_08002538(&DAT_20001540,8);\n  FUN_08002538(&DAT_200014c8,8);\n  FUN_08002538(&DAT_200014c8,0xc);\n  return;\n}\n\n",
            "current_name": "initialize_data_structures_08003ff4",
            "entrypoint": "0x08003ff4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003ff4": "initialize_data_structures_08003ff4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004028": {
            "additional_data": {
                "FUN_08003f3c": {
                    "call_subfunction": 1,
                    "control_device": 1,
                    "execute_operation": 1,
                    "perform_action": 1,
                    "perform_operation": 1,
                    "set_parameters": 1
                },
                "FUN_08003ff4": {
                    "initialize_something": 1,
                    "initialize_subfunction_1": 1,
                    "initialize_system": 3,
                    "setup_environment": 1
                },
                "FUN_08004028": {
                    "analyze_and_execute_operations": 1,
                    "execute_complex_algorithm": 1,
                    "execute_function": 1,
                    "execute_operations": 1,
                    "execute_repeated_sequence": 1,
                    "execute_reverse": 1,
                    "execute_reverse_operation": 2,
                    "execute_reverse_operations": 1,
                    "execute_reverse_sequence": 1,
                    "initialize_and_call_functions": 1,
                    "initialize_and_execute_function": 1,
                    "initialize_sequence": 1,
                    "perform_operation": 3,
                    "perform_operations": 2,
                    "run_function": 1,
                    "run_reverse_engine": 1,
                    "run_reverse_operation": 1,
                    "run_reverse_sequence": 1
                },
                "FUN_0800458c": {
                    "do_something_else": 1,
                    "execute_setup": 1,
                    "initialize": 1,
                    "initialize_subfunction_2": 1,
                    "load_data": 1,
                    "load_resources": 1
                },
                "iVar1": {
                    "count": 1,
                    "counter": 5,
                    "iteration_count": 19,
                    "iteration_counter": 1,
                    "iterations_left": 1,
                    "loop_counter": 2
                },
                "param_1": {
                    "input_1": 1
                },
                "param_2": {
                    "input_2": 1
                },
                "param_3": {
                    "input_3": 1
                },
                "thunk_FUNC_08001168": {
                    "delay": 1,
                    "delay_function": 1,
                    "execute_delay": 1,
                    "perform_operation": 1,
                    "thunk_function": 1,
                    "wait": 1
                }
            },
            "called": [
                "FUN_08003ff4",
                "FUN_0800458c",
                "thunk_FUN_08001168",
                "FUN_08003f3c"
            ],
            "calling": [
                "FUN_08004194"
            ],
            "code": "\nvoid execute_repeated_sequence_08004028(void)\n\n{\n  int iteration_count;\n  \n  FUN_0800458c();\n  FUN_08003ff4();\n  iteration_count = 3;\n  do {\n    FUN_08003f3c(1,0);\n    thunk_FUNC_08001168(100);\n    FUN_08003f3c(0,1);\n    thunk_FUNC_08001168(100);\n    FUN_08003f3c(0,0,1);\n    thunk_FUNC_08001168(100);\n    iteration_count = iteration_count + -1;\n  } while (iteration_count != 0);\n  FUN_08003f3c(1,1);\n  return;\n}\n\n",
            "current_name": "execute_repeated_sequence_08004028",
            "entrypoint": "0x08004028",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004028": "execute_repeated_sequence_08004028",
                "iVar1": "iteration_count"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800403c": {
            "additional_data": {
                "DAT_20001504": {
                    "data_pointer": 1
                },
                "FUNK_08001828": {
                    "send_i2_c_transfer": 1
                },
                "FUN_08001828": {
                    "execute_i2c_operation": 1,
                    "perform_i2_c_operation": 1,
                    "perform_i2_c_transaction": 1,
                    "perform_i2c_operation": 1,
                    "perform_i2c_operation_internal": 1,
                    "read_data_from_device": 1,
                    "read_i2_c_data": 2
                },
                "FUN_0800403c": {
                    "communicate_i2_c": 1,
                    "execute_i2c_operation": 2,
                    "i2c_transfer": 2,
                    "initialize_i2_c": 1,
                    "initialize_i2_c_communication": 1,
                    "initialize_i2c": 2,
                    "initialize_i2c_communication": 1,
                    "perform_i2_c_operation": 1,
                    "perform_i2_c_read": 1,
                    "perform_i2_c_transfer": 2,
                    "perform_i2c_operation": 2,
                    "perform_operation": 1,
                    "process_i2_c_data": 7,
                    "process_i2_c_operation": 1,
                    "process_i2_c_request": 1,
                    "process_i2c_data": 5
                },
                "FUN_08004490": {
                    "handle_error": 1,
                    "handle_i2c_error": 1,
                    "log_error": 5,
                    "log_error_message": 1,
                    "report_error": 1
                },
                "iVar1": {
                    "error_code": 1,
                    "result": 10
                },
                "local_14": {
                    "buffer": 19,
                    "byte_array": 1,
                    "byte_buffer": 1,
                    "data_buffer": 1,
                    "flag": 1,
                    "internal_buffer": 1,
                    "local_array": 1,
                    "local_buffer": 5
                },
                "param_1": {
                    "config_param_1": 1,
                    "config_ptr": 1,
                    "data_buffer": 2,
                    "data_pointer": 4,
                    "data_ptr": 7,
                    "device": 1,
                    "i2c_buffer": 1,
                    "i2c_config": 1,
                    "i2c_data": 4,
                    "i2c_data_ptr": 1,
                    "i2c_device": 1,
                    "input1": 1,
                    "input_parameter1": 1,
                    "input_params": 1,
                    "param1": 3
                },
                "param_2": {
                    "addr": 1,
                    "address": 3,
                    "address_ptr": 1,
                    "config_param_2": 1,
                    "config_ptr": 1,
                    "data_length": 1,
                    "input2": 1,
                    "input_parameter2": 1,
                    "length": 1,
                    "length_param": 1,
                    "mem_addr": 1,
                    "param1": 2,
                    "param2": 3,
                    "param_2": 2,
                    "param_length": 1,
                    "param_pointer": 2,
                    "param_ptr": 2,
                    "register_address": 1,
                    "size": 2,
                    "size_ptr": 2
                },
                "param_3": {
                    "byte_param": 1,
                    "byte_value": 2,
                    "data": 6,
                    "flag": 10,
                    "param2": 2,
                    "param3": 2,
                    "param_3": 2,
                    "param_byte": 1,
                    "param_value": 1,
                    "send_stop": 1,
                    "status": 2
                },
                "param_4": {
                    "callback_enabled": 1,
                    "condition": 2,
                    "enable_check": 1,
                    "enable_delay": 1,
                    "flag": 5,
                    "option": 2,
                    "param3": 2,
                    "param4": 3,
                    "param_4": 1,
                    "perform_thunks": 1,
                    "threshold": 1,
                    "thunk_flag": 7,
                    "thunk_value": 2,
                    "value": 1
                },
                "thunk_FUNC_08001168": {
                    "delay": 1,
                    "execute_function": 1,
                    "execute_thunk": 2,
                    "perform_action": 1,
                    "perform_thunk": 1,
                    "perform_thunk_operation": 1,
                    "thunk_function": 2
                }
            },
            "called": [
                "FUN_08001828",
                "FUN_08004490",
                "thunk_FUN_08001168"
            ],
            "calling": [
                "FUN_08003298",
                "FUN_08002cb0",
                "FUN_0800411c",
                "FUN_08002ad0"
            ],
            "code": "\nvoid process_i2_c_data_0800403c(undefined4 data_ptr,undefined4 param2,undefined flag,int thunk_flag)\n\n{\n  int result;\n  undefined buffer [8];\n  \n  buffer[0] = flag;\n  result = FUN_08001828(&DAT_20001504,data_ptr,param2,1,buffer,1,200);\n  if (result != 0) {\n    FUN_08004490(\"../Src/i2c.c\",0x1b);\n  }\n  if (thunk_flag != 0) {\n    thunk_FUNC_08001168(0x32);\n  }\n  return;\n}\n\n",
            "current_name": "process_i2_c_data_0800403c",
            "entrypoint": "0x0800403c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800403c": "process_i2_c_data_0800403c",
                "iVar1": "result",
                "local_14": "buffer",
                "param_1": "data_ptr",
                "param_2": "param2",
                "param_3": "flag",
                "param_4": "thunk_flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800407c": {
            "additional_data": {
                "FUN_08001938": {
                    "verify_data": 1
                },
                "FUN_0800407c": {
                    "check_and_call_function": 10,
                    "check_and_execute": 5,
                    "check_and_execute_action": 2,
                    "check_and_execute_function": 10,
                    "check_and_execute_operation": 1,
                    "check_status_and_call_function": 1,
                    "validate_and_execute": 1,
                    "verify_and_execute_function": 1
                },
                "FUN_08004490": {
                    "execute_operation": 1
                },
                "iVar1": {
                    "error_code": 1,
                    "status": 1
                },
                "local_14": {
                    "result": 17,
                    "result_array": 3,
                    "result_buffer": 2,
                    "result_variable": 1,
                    "return_value": 4,
                    "status": 1,
                    "status_variable": 1,
                    "success_flag": 1
                },
                "param_1": {
                    "array_ptr": 1,
                    "data": 3,
                    "data1": 1,
                    "data_array": 5,
                    "data_list": 1,
                    "data_pointer": 1,
                    "data_ptr": 6,
                    "data_structure_ptr": 1,
                    "function_array": 1,
                    "function_list": 1,
                    "function_param": 1,
                    "input_data": 2,
                    "input_param_1": 1,
                    "input_ptr": 1,
                    "param_1": 1,
                    "param_a": 1,
                    "parameter_1": 3
                },
                "param_2": {
                    "arg1": 2,
                    "data2": 1,
                    "input1": 1,
                    "input_1": 5,
                    "input_param1": 1,
                    "input_param_1": 1,
                    "input_param_2": 1,
                    "param1": 1,
                    "param_2": 4,
                    "param_a": 3,
                    "param_b": 1,
                    "param_value_1": 1,
                    "parameter_2": 4,
                    "value1": 2,
                    "value_1": 3
                },
                "param_3": {
                    "arg2": 2,
                    "output1": 2,
                    "output_1": 5,
                    "output_data": 2,
                    "output_param1": 2,
                    "output_param_1": 5,
                    "param2": 1,
                    "param_3": 2,
                    "param_b": 2,
                    "param_c": 1,
                    "param_value_2": 1,
                    "parameter_3": 3,
                    "result_param_1": 1,
                    "value2": 1,
                    "value_2": 1
                },
                "param_4": {
                    "arg3": 2,
                    "output2": 2,
                    "output_2": 5,
                    "output_param2": 2,
                    "output_param_2": 5,
                    "param3": 1,
                    "param_4": 3,
                    "param_b": 1,
                    "param_c": 2,
                    "param_d": 1,
                    "param_value_3": 1,
                    "parameter_4": 3,
                    "result_param_2": 1,
                    "value3": 1,
                    "value_3": 1
                }
            },
            "called": [
                "FUN_08001938",
                "FUN_08004490"
            ],
            "calling": [
                "FUN_080040e8",
                "FUN_08002d88",
                "FUN_08002cb0",
                "FUN_08002ad0"
            ],
            "code": "\nundefined check_and_execute_function_0800407c(undefined4 data_ptr,undefined4 input_1,undefined4 output_param_1,undefined4 output_2)\n\n{\n  int status;\n  undefined result [8];\n  \n  result[0] = 0;\n  status = FUN_08001938(&DAT_20001504,data_ptr,input_1,1,result,1,200);\n  if (status != 0) {\n    FUN_08004490(output_param_1,output_2);\n  }\n  return result[0];\n}\n\n",
            "current_name": "check_and_execute_function_0800407c",
            "entrypoint": "0x0800407c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800407c": "check_and_execute_function_0800407c",
                "iVar1": "status",
                "local_14": "result",
                "param_1": "data_ptr",
                "param_2": "input_1",
                "param_3": "output_param_1",
                "param_4": "output_2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080040b8": {
            "additional_data": {
                "FUN_08001938": {
                    "find_data_array": 1,
                    "get_data_result": 1
                },
                "FUN_080040b8": {
                    "check_and_call_function": 4,
                    "check_and_execute_action": 1,
                    "check_and_execute_function": 8,
                    "check_and_execute_operation": 1,
                    "check_and_execute_task": 1,
                    "check_and_perform_action": 3,
                    "check_and_process_data": 1,
                    "check_function": 1,
                    "check_result_and_execute": 1,
                    "execute_function": 1,
                    "process_data": 7,
                    "validate_and_call_function": 1
                },
                "FUN_08004490": {
                    "execute_task": 1,
                    "process_data": 1
                },
                "iVar1": {
                    "result": 26,
                    "result_code": 2,
                    "return_value": 1
                },
                "param_1": {
                    "array_pointer": 1,
                    "array_ptr": 2,
                    "data": 9,
                    "data_array": 2,
                    "data_list": 1,
                    "data_param": 1,
                    "data_pointer": 7,
                    "data_ptr": 1,
                    "data_structure": 1,
                    "param1": 6
                },
                "param_2": {
                    "input1": 4,
                    "input_1": 1,
                    "input_param_1": 1,
                    "param1": 4,
                    "param2": 10,
                    "param_a": 1,
                    "param_pointer": 1,
                    "size": 1,
                    "value1": 8
                },
                "param_3": {
                    "flag1": 1,
                    "input2": 4,
                    "input_2": 1,
                    "input_param_2": 1,
                    "param2": 4,
                    "param3": 11,
                    "param_b": 1,
                    "value2": 8
                },
                "param_4": {
                    "flag2": 1,
                    "input3": 4,
                    "input_param_3": 1,
                    "param3": 4,
                    "param4": 11,
                    "param_c": 1,
                    "value3": 4
                },
                "param_5": {
                    "action_param1": 1,
                    "output1": 3,
                    "output_1": 1,
                    "output_param_1": 1,
                    "param1": 7,
                    "param4": 4,
                    "param5": 11,
                    "param_5": 1,
                    "param_a": 1,
                    "param_d": 1
                },
                "param_6": {
                    "action_param2": 1,
                    "output2": 3,
                    "output_2": 1,
                    "output_param_2": 1,
                    "param2": 7,
                    "param5": 4,
                    "param6": 11,
                    "param_6": 1,
                    "param_b": 1,
                    "param_e": 1
                }
            },
            "called": [
                "FUN_08001938",
                "FUN_08004490"
            ],
            "calling": [
                "FUN_08003034"
            ],
            "code": "\nvoid check_and_execute_function_080040b8(undefined4 data,undefined4 param2,undefined4 param3,undefined4 param4,\n                 undefined4 param5,undefined4 param6)\n\n{\n  int result;\n  \n  result = FUN_08001938(&DAT_20001504,data,param2,1,param3,param4,200,param4);\n  if (result != 0) {\n    FUN_08004490(param5,param6);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "check_and_execute_function_080040b8",
            "entrypoint": "0x080040b8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080040b8": "check_and_execute_function_080040b8",
                "iVar1": "result",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "param_6": "param6"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080040e8": {
            "additional_data": {
                "FUN_080040e8": {
                    "copy_and_increment": 1,
                    "copy_bytes": 2,
                    "copy_bytes_to_destination": 2,
                    "copy_bytes_to_file": 1,
                    "copy_data": 4,
                    "copy_data_from_i2_c": 1,
                    "copy_data_from_i2c": 1,
                    "copy_data_from_source": 2,
                    "copy_data_to_array": 2,
                    "copy_data_to_buffer": 8,
                    "copy_data_to_pointer": 1,
                    "copy_i2_c_data": 1,
                    "copy_i2c_c_file": 1,
                    "copy_to_buffer": 1,
                    "fill_array": 1,
                    "write_bytes_to_i2_c": 1,
                    "write_file_contents": 1
                },
                "iVar2": {
                    "current_index": 3,
                    "i": 14,
                    "index": 13
                },
                "iVar4": {
                    "error_code": 1,
                    "file_index": 1,
                    "file_line_number": 1,
                    "file_offset": 4,
                    "filename": 1,
                    "i_var": 1,
                    "i_var4": 1,
                    "index": 1,
                    "line": 1,
                    "line_number": 8,
                    "loop_count": 1,
                    "offset": 1,
                    "source": 1,
                    "source_file_handle": 1,
                    "source_file_line_number": 1,
                    "source_index": 3,
                    "source_offset": 1,
                    "src": 1,
                    "start_position": 1
                },
                "param_1": {
                    "arg1": 1,
                    "buffer": 2,
                    "config": 1,
                    "data": 5,
                    "data_pointer": 1,
                    "dest": 1,
                    "dest_file_path": 1,
                    "destination": 1,
                    "destination_buffer": 1,
                    "device_address": 3,
                    "file_path": 1,
                    "param1": 2,
                    "ptr": 1,
                    "source": 3,
                    "source_address": 1,
                    "source_buffer": 2,
                    "source_data": 1,
                    "source_pointer": 1,
                    "value": 2
                },
                "param_2": {
                    "arg2": 1,
                    "base": 1,
                    "base_address": 3,
                    "buffer": 1,
                    "buffer_offset": 1,
                    "input_data": 1,
                    "offset": 7,
                    "param2": 1,
                    "source": 1,
                    "source_buffer": 1,
                    "source_file_offset": 1,
                    "source_index": 1,
                    "source_offset": 3,
                    "src": 1,
                    "start_address": 2,
                    "start_index": 3,
                    "start_offset": 2
                },
                "param_3": {
                    "array_size": 1,
                    "buffer": 3,
                    "buffer_end": 1,
                    "buffer_size": 3,
                    "data_buffer": 1,
                    "data_length": 1,
                    "data_pointer": 1,
                    "dest": 2,
                    "dest_array": 1,
                    "destination": 3,
                    "destination_address": 1,
                    "destination_array": 1,
                    "destination_buffer": 3,
                    "destination_length": 1,
                    "destination_offset": 1,
                    "destination_pointer": 1,
                    "file_size": 1,
                    "length": 2,
                    "source_address": 1,
                    "src_array": 1,
                    "target_address": 1
                },
                "param_4": {
                    "buffer_size": 3,
                    "byte_count": 1,
                    "copy_length": 1,
                    "copy_size": 1,
                    "count": 1,
                    "data_length": 3,
                    "data_size": 1,
                    "fill_size": 1,
                    "index": 1,
                    "length": 11,
                    "num_bytes": 2,
                    "num_elements": 3,
                    "number_of_bytes": 1,
                    "step": 1
                },
                "puVar3": {
                    "buffer_pointer": 1,
                    "buffer_ptr": 1,
                    "current_destination": 1,
                    "current_pointer": 1,
                    "data_pointer": 1,
                    "dest_ptr": 10,
                    "destination": 2,
                    "destination_pointer": 3,
                    "destination_ptr": 2,
                    "dst": 1,
                    "dst_array": 1,
                    "p_buffer": 2,
                    "p_dest": 2,
                    "ptr": 1,
                    "target_ptr": 1,
                    "write_ptr": 1
                },
                "uVar1": {
                    "byte": 3,
                    "byte_value": 1,
                    "copied_byte": 5,
                    "copied_data": 1,
                    "copied_value": 5,
                    "copy_result": 1,
                    "data": 5,
                    "data_byte": 3,
                    "element": 1,
                    "filled_value": 1,
                    "result": 1,
                    "return_value": 1,
                    "value": 2
                }
            },
            "called": [
                "FUN_0800407c"
            ],
            "calling": [
                "FUN_08002b48",
                "FUN_08002d88",
                "FUN_08003298",
                "FUN_08002cb0",
                "FUN_08002bf0"
            ],
            "code": "\nvoid copy_data_to_buffer_080040e8(undefined4 data,int offset,int buffer_size,int length)\n\n{\n  undefined data;\n  int i;\n  undefined *dest_ptr;\n  int line_number;\n  \n  dest_ptr = (undefined *)(buffer_size + -1);\n  line_number = length;\n  for (i = 0; i < length; i = i + 1) {\n    data = FUN_0800407c(data,offset + i & 0xffff,\"../Src/i2c.c\",0x4c,line_number);\n    dest_ptr = dest_ptr + 1;\n    *dest_ptr = data;\n  }\n  return;\n}\n\n",
            "current_name": "copy_data_to_buffer_080040e8",
            "entrypoint": "0x080040e8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080040e8": "copy_data_to_buffer_080040e8",
                "iVar2": "i",
                "iVar4": "line_number",
                "param_1": "data",
                "param_2": "offset",
                "param_3": "buffer_size",
                "param_4": "length",
                "puVar3": "dest_ptr",
                "uVar1": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800411c": {
            "additional_data": {
                "BVar16": {
                    "bool_var": 1
                },
                "DAT_20000038": {
                    "constant_one": 1,
                    "data25": 1,
                    "value7": 1,
                    "value9": 1,
                    "var10": 1
                },
                "DAT_2000025e": {
                    "data9": 2,
                    "data_six": 1,
                    "value7": 1,
                    "var7": 1
                },
                "DAT_20000260": {
                    "data8": 2,
                    "data_five": 1,
                    "value6": 1,
                    "var6": 1
                },
                "DAT_20000262": {
                    "data10": 2,
                    "data_seven": 1,
                    "value5": 1,
                    "var5": 1
                },
                "DAT_20000264": {
                    "data7": 2,
                    "data_four": 1,
                    "value4": 1,
                    "var4": 1
                },
                "DAT_20000266": {
                    "data5": 2,
                    "data_two": 1,
                    "value2": 1,
                    "var2": 1
                },
                "DAT_20000267": {
                    "data13": 1
                },
                "DAT_20000268": {
                    "data6": 2,
                    "data_three": 1,
                    "value3": 1,
                    "var3": 1
                },
                "DAT_2000026b": {
                    "data14": 1
                },
                "DAT_2000026c": {
                    "data12": 1,
                    "data_eight": 1,
                    "value3": 1,
                    "value8": 1,
                    "var8": 1
                },
                "DAT_2000026f": {
                    "data15": 1
                },
                "DAT_20000270": {
                    "data4": 2,
                    "data_one": 1,
                    "value1": 1,
                    "value5": 1,
                    "var1": 1
                },
                "DAT_20000273": {
                    "data16": 1
                },
                "DAT_20000274": {
                    "flag2": 5,
                    "flag_two": 1
                },
                "DAT_20000275": {
                    "flag1": 5,
                    "flag_one": 1
                },
                "DAT_20000278": {
                    "counter_four": 1,
                    "data26": 1,
                    "previous_tick_count5": 1,
                    "previous_time5": 1,
                    "value2": 1
                },
                "DAT_2000027c": {
                    "counter_five": 1,
                    "data24": 1,
                    "previous_tick_count4": 1,
                    "previous_time4": 1,
                    "value4": 1
                },
                "DAT_2000028c": {
                    "counter_one": 1,
                    "data1": 2,
                    "previous_tick_count1": 1,
                    "previous_time1": 1,
                    "previous_value1": 1
                },
                "DAT_20000290": {
                    "counter_three": 1,
                    "data11": 1,
                    "data3": 1,
                    "previous_tick_count3": 1,
                    "previous_time3": 1,
                    "previous_value3": 1
                },
                "DAT_20000294": {
                    "counter_two": 1,
                    "data2": 2,
                    "previous_tick_count2": 1,
                    "previous_time2": 1,
                    "previous_value2": 1
                },
                "DAT_200002fc": {
                    "data22": 1,
                    "result4": 2,
                    "result_five": 1
                },
                "DAT_20000300": {
                    "data1": 1,
                    "data20": 1,
                    "data_array": 1,
                    "some_data_array": 1
                },
                "DAT_2000034c": {
                    "data2": 1,
                    "data21": 1,
                    "data3": 1,
                    "result_four": 1,
                    "var9": 1
                },
                "DAT_20000350": {
                    "data19": 1,
                    "result3": 2,
                    "result_three": 1
                },
                "DAT_20000354": {
                    "data1": 1,
                    "data17": 1,
                    "result1": 2,
                    "result_one": 1
                },
                "DAT_20000358": {
                    "data18": 1,
                    "data2": 1,
                    "result2": 2,
                    "result_two": 1
                },
                "DAT_200014ab": {
                    "data23": 1,
                    "result5": 2,
                    "result_six": 1,
                    "value6": 1
                },
                "FUN_08000168": {
                    "calculate5": 1,
                    "calculate_operation_result": 1,
                    "calculate_result": 1,
                    "calculate_value14": 1,
                    "calculate_value2": 1,
                    "calculate_value5": 1,
                    "calculate_value9": 1,
                    "calculate_value_5": 1,
                    "calculate_value_e": 1,
                    "compute_result": 1,
                    "function15": 1,
                    "reverse_value3": 1
                },
                "FUN_08000428": {
                    "calculate3": 1,
                    "calculate_result": 1,
                    "calculate_value12": 1,
                    "calculate_value3": 1,
                    "calculate_value7": 1,
                    "calculate_value_3": 1,
                    "calculate_value_c": 1,
                    "execute_function4": 1,
                    "function13": 1,
                    "get_result": 1,
                    "perform_operation1": 1,
                    "reverse_value": 1
                },
                "FUN_080004d0": {
                    "calculate6": 1,
                    "calculate_result2": 1,
                    "calculate_value10": 1,
                    "calculate_value15": 1,
                    "calculate_value6": 1,
                    "calculate_value_6": 1,
                    "calculate_value_f": 1,
                    "execute_function2": 1,
                    "function16": 1,
                    "perform_operation3": 1,
                    "reverse_value4": 1,
                    "update_value": 1
                },
                "FUN_08000a30": {
                    "calculate8": 1,
                    "calculate_new_value4": 1,
                    "calculate_scalar": 1,
                    "calculate_value12": 1,
                    "calculate_value18": 1,
                    "calculate_value3": 1,
                    "calculate_value8": 1,
                    "calculate_value_9": 1,
                    "calculate_value_i": 1,
                    "compute_new_value": 1,
                    "function12": 1,
                    "perform_action10": 1
                },
                "FUN_08000adc": {
                    "calculate7": 1,
                    "calculate_new_value3": 1,
                    "calculate_value": 1,
                    "calculate_value11": 1,
                    "calculate_value16": 1,
                    "calculate_value2": 1,
                    "calculate_value7": 1,
                    "calculate_value_7": 1,
                    "calculate_value_g": 1,
                    "function17": 1,
                    "perform_operation4": 1,
                    "update_counter": 1
                },
                "FUN_08000c44": {
                    "calculate1": 1,
                    "calculate_new_value1": 1,
                    "calculate_square_root": 1,
                    "calculate_value": 1,
                    "calculate_value1": 1,
                    "calculate_value10": 1,
                    "calculate_value_1": 1,
                    "calculate_value_a": 1,
                    "execute_function5": 1,
                    "function24": 1,
                    "modify_value": 1,
                    "new_value_function1": 1
                },
                "FUN_08000e54": {
                    "calculate2": 1,
                    "calculate_new_value2": 1,
                    "calculate_value": 1,
                    "calculate_value11": 1,
                    "calculate_value2": 1,
                    "calculate_value_2": 1,
                    "calculate_value_b": 1,
                    "convert_to_fixed_point": 1,
                    "execute_function3": 1,
                    "function18": 1,
                    "new_value_function2": 1,
                    "normalize_value": 1
                },
                "FUN_08001078": {
                    "calculate9": 1,
                    "calculate_factor": 1,
                    "calculate_value13": 1,
                    "calculate_value19": 1,
                    "calculate_value3": 1,
                    "calculate_value_10": 1,
                    "calculate_value_j": 1,
                    "function21": 1,
                    "get_result_multiplier": 1,
                    "get_value2": 1,
                    "multiply_value": 1,
                    "perform_operation5": 1
                },
                "FUN_0800115c": {
                    "function26": 1,
                    "get_current_value": 1,
                    "get_tick_count": 1,
                    "get_time": 1,
                    "get_timer_value": 1
                },
                "FUN_08002f28": {
                    "function19": 1,
                    "initialize1": 1,
                    "perform_action1": 1,
                    "perform_task1": 1,
                    "process1": 1,
                    "reset_value1": 1,
                    "update_data2": 1,
                    "update_data_1": 1,
                    "update_data_one": 1,
                    "update_game_data_2": 1,
                    "update_threshold1": 1,
                    "update_value1": 2,
                    "update_variable1": 1,
                    "update_variable_a": 1
                },
                "FUN_08003034": {
                    "calculate_value17": 1,
                    "calculate_value_8": 1,
                    "calculate_value_h": 1,
                    "get_new_value": 1,
                    "get_random_number": 1,
                    "get_some_value": 2,
                    "get_time": 1,
                    "get_value": 3,
                    "initialize_value": 1
                },
                "FUN_0800403c": {
                    "do_something": 1,
                    "function28": 1,
                    "perform_action11": 1,
                    "perform_task5": 1,
                    "set_value": 1,
                    "thunk_function": 1,
                    "update_data_10": 1,
                    "update_game_state": 1,
                    "update_value": 1,
                    "update_value20": 1,
                    "update_value4": 1
                },
                "FUN_0800411c": {
                    "analyze_data": 1,
                    "calculate_result": 1,
                    "calculate_sensor_data": 1,
                    "execute_main_function": 1,
                    "execute_task": 1,
                    "extract_data": 1,
                    "initialize_processing": 1,
                    "initialize_system": 2,
                    "process_data": 3,
                    "update_configurations": 1,
                    "update_data": 2,
                    "update_game_data": 2,
                    "update_settings": 1
                },
                "FUN_08004348": {
                    "function23": 1,
                    "initialize3": 1,
                    "perform_action3": 1,
                    "perform_task7": 1,
                    "reset_value3": 1,
                    "subprocess1": 1,
                    "update_data4": 1,
                    "update_data_3": 1,
                    "update_data_three": 1,
                    "update_game_data_4": 1,
                    "update_threshold3": 1,
                    "update_value3": 1,
                    "update_values3": 1,
                    "update_variable3": 1,
                    "update_variable_c": 1
                },
                "FUN_08004384": {
                    "calculate_value": 2,
                    "calculate_value1": 1,
                    "calculate_value4": 1,
                    "execute_function1": 1,
                    "function4": 1,
                    "perform_action4": 1,
                    "sub_function1": 1,
                    "subprocess2": 1,
                    "update_data5": 1,
                    "update_data_4": 1,
                    "update_data_four": 1,
                    "update_game_data_5": 1,
                    "update_value4": 1,
                    "update_variable_d": 1
                },
                "FUN_080043bc": {
                    "calculate_value5": 1,
                    "calculate_value8": 1,
                    "function25": 1,
                    "perform_action8": 1,
                    "perform_task8": 1,
                    "process_data4": 1,
                    "reset_value5": 1,
                    "sub_function6": 1,
                    "subprocess6": 1,
                    "update_data9": 1,
                    "update_data_8": 1,
                    "update_data_eight": 1,
                    "update_game_data_9": 1,
                    "update_value8": 1,
                    "update_variable_h": 1
                },
                "FUN_080043f0": {
                    "calculate_value2": 1,
                    "calculate_value5": 1,
                    "function5": 1,
                    "perform_action5": 1,
                    "perform_task3": 1,
                    "process_data1": 1,
                    "sub_function3": 1,
                    "subprocess3": 1,
                    "update_data6": 1,
                    "update_data_5": 1,
                    "update_data_five": 1,
                    "update_game_data_6": 1,
                    "update_value1": 1,
                    "update_value5": 1,
                    "update_variable_e": 1
                },
                "FUN_08004410": {
                    "calculate_value3": 1,
                    "calculate_value6": 1,
                    "function27": 1,
                    "perform_action6": 1,
                    "perform_task9": 1,
                    "process_data2": 1,
                    "sub_function4": 1,
                    "subprocess4": 1,
                    "update_data7": 1,
                    "update_data_6": 1,
                    "update_data_six": 1,
                    "update_game_data_7": 1,
                    "update_value2": 1,
                    "update_value6": 1,
                    "update_variable_f": 1
                },
                "FUN_08004434": {
                    "calculate_value4": 1,
                    "calculate_value7": 1,
                    "function20": 1,
                    "perform_action7": 1,
                    "perform_task2": 1,
                    "process_data3": 1,
                    "reset_value4": 1,
                    "sub_function5": 1,
                    "subprocess5": 1,
                    "update_data8": 1,
                    "update_data_7": 1,
                    "update_data_seven": 1,
                    "update_game_data_8": 1,
                    "update_value7": 1,
                    "update_variable_g": 1
                },
                "FUN_08004458": {
                    "calculate_value6": 1,
                    "calculate_value9": 1,
                    "function22": 1,
                    "perform_action9": 1,
                    "perform_task6": 1,
                    "process_data5": 1,
                    "reset_value6": 1,
                    "sub_function7": 1,
                    "subprocess7": 1,
                    "update_data10": 1,
                    "update_data_9": 1,
                    "update_data_nine": 1,
                    "update_game_data_10": 1,
                    "update_value9": 1,
                    "update_variable_i": 1
                },
                "FUN_08004a84": {
                    "initialize2": 1,
                    "initialize_function2": 1,
                    "perform_action2": 1,
                    "perform_task4": 1,
                    "process2": 1,
                    "reset_value2": 1,
                    "update_data3": 1,
                    "update_data_2": 1,
                    "update_data_two": 1,
                    "update_game_data_3": 1,
                    "update_threshold2": 1,
                    "update_value2": 2,
                    "update_variable2": 1,
                    "update_variable_b": 1
                },
                "FUN_08005900": {
                    "calculate4": 1,
                    "calculate_new_result": 1,
                    "calculate_value13": 1,
                    "calculate_value4": 1,
                    "calculate_value8": 1,
                    "calculate_value_4": 1,
                    "calculate_value_d": 1,
                    "compute_value": 1,
                    "function14": 1,
                    "perform_operation2": 1,
                    "reverse_value2": 1
                },
                "IVar14": {
                    "temp_var8": 1
                },
                "IVar15": {
                    "temp_var9": 1
                },
                "IVar8": {
                    "count_var": 1
                },
                "LVar2": {
                    "long_var": 1
                },
                "PUVar1": {
                    "pointer1": 1
                },
                "PuVar13": {
                    "pointer2": 1
                },
                "UVar10": {
                    "temp_var5": 1
                },
                "UVar11": {
                    "temp_var6": 1
                },
                "UVar12": {
                    "temp_var7": 1
                },
                "UVar17": {
                    "result_var3": 1
                },
                "UVar3": {
                    "temp_var1": 1
                },
                "UVar4": {
                    "temp_var2": 1
                },
                "UVar5": {
                    "temp_var3": 1
                },
                "UVar6": {
                    "result_var1": 1
                },
                "UVar7": {
                    "result_var2": 1
                },
                "UVar9": {
                    "temp_var4": 1
                },
                "bVar16": {
                    "b_check": 1,
                    "bool_flag": 1,
                    "bool_value": 1,
                    "bool_var": 2,
                    "boolean_var": 1,
                    "boolean_variable": 1,
                    "comparison_result": 1,
                    "flag": 1,
                    "is_less": 1,
                    "is_negative": 4,
                    "temp_bool": 1
                },
                "calculateValue10": {
                    "calculate_value10": 1
                },
                "calculateValue11": {
                    "calculate_value11": 1
                },
                "calculateValue12": {
                    "calculate_value12": 1
                },
                "calculateValue13": {
                    "calculate_value13": 1
                },
                "calculateValue14": {
                    "calculate_value14": 1
                },
                "calculateValue15": {
                    "calculate_value15": 1
                },
                "calculateValue16": {
                    "calculate_value16": 1
                },
                "calculateValue17": {
                    "calculate_value17": 1
                },
                "calculateValue18": {
                    "calculate_value18": 1
                },
                "calculateValue19": {
                    "calculate_value19": 1
                },
                "calculateValue4": {
                    "calculate_value4": 1
                },
                "calculateValue5": {
                    "calculate_value5": 1
                },
                "calculateValue6": {
                    "calculate_value6": 1
                },
                "calculateValue7": {
                    "calculate_value7": 1
                },
                "calculateValue8": {
                    "calculate_value8": 1
                },
                "calculateValue9": {
                    "calculate_value9": 1
                },
                "calculate_value1": {
                    "calculate_value1": 1
                },
                "calculate_value10": {
                    "calculate_value10": 1
                },
                "calculate_value11": {
                    "calculate_value11": 1
                },
                "calculate_value12": {
                    "calculate_value12": 1
                },
                "calculate_value13": {
                    "calculate_value13": 1
                },
                "calculate_value2": {
                    "calculate_value2": 1
                },
                "calculate_value3": {
                    "calculate_value3": 1
                },
                "calculate_value4": {
                    "calculate_value4": 1
                },
                "calculate_value5": {
                    "calculate_value5": 1
                },
                "calculate_value6": {
                    "calculate_value6": 1
                },
                "calculate_value7": {
                    "calculate_value7": 1
                },
                "calculate_value8": {
                    "calculate_value8": 1
                },
                "calculate_value9": {
                    "calculate_value9": 1
                },
                "getTime": {
                    "get_time": 1
                },
                "get_current_value": {
                    "get_current_value": 1
                },
                "get_new_value": {
                    "get_new_value": 1
                },
                "iVar14": {
                    "calculation1": 1,
                    "counter6": 1,
                    "int_value2": 1,
                    "integer_variable2": 1,
                    "new_val": 1,
                    "result6": 1,
                    "sensor_value2": 1,
                    "temp2": 1,
                    "temp_index1": 1,
                    "temp_var6": 2,
                    "temp_variable6": 1,
                    "updated_var14": 1,
                    "value1": 1,
                    "var14": 1
                },
                "iVar15": {
                    "calculation2": 1,
                    "counter7": 1,
                    "ind": 1,
                    "int_value3": 1,
                    "integer_variable1": 1,
                    "result4": 1,
                    "sensor_value3": 1,
                    "temp1": 1,
                    "temp_index2": 1,
                    "temp_var7": 2,
                    "temp_variable7": 1,
                    "thunk_result2": 1,
                    "value2": 1,
                    "var15": 1
                },
                "iVar8": {
                    "counter1": 1,
                    "int_value1": 1,
                    "integer_variable3": 1,
                    "num_iterations": 1,
                    "result": 3,
                    "return_value": 1,
                    "sensor_value1": 1,
                    "temp_index3": 1,
                    "temp_var1": 1,
                    "thunk_result": 1,
                    "val": 1,
                    "value": 1,
                    "var8": 1
                },
                "improve_main_function": {
                    "main_function": 1
                },
                "index": {
                    "index": 1
                },
                "isTrue": {
                    "is_true": 1
                },
                "lVar2": {
                    "calculation8": 1,
                    "l_value": 1,
                    "long_value": 6,
                    "long_var": 1,
                    "long_variable": 1,
                    "product": 2,
                    "temp": 2,
                    "temp_value2": 1
                },
                "longValue": {
                    "long_value": 1
                },
                "new_value_function1": {
                    "new_value_function1": 1
                },
                "new_value_function2": {
                    "new_value_function2": 1
                },
                "pointer": {
                    "pointer": 1
                },
                "previousValue1": {
                    "prev_value1": 1
                },
                "previousValue2": {
                    "prev_value2": 1
                },
                "previousValue3": {
                    "prev_value3": 1
                },
                "puVar1": {
                    "pointer": 2,
                    "pointer1": 9,
                    "pointer_variable1": 1,
                    "ptr": 3
                },
                "puVar13": {
                    "pointer2": 8,
                    "pointer_variable2": 1,
                    "ptr1": 1,
                    "temp_pointer": 1,
                    "updated_pointer": 1
                },
                "result": {
                    "result": 1
                },
                "thunk_FUN_0800115c": {
                    "dummy_function": 1,
                    "get_counter": 1,
                    "get_current_value": 1,
                    "get_integer_value": 1,
                    "get_random_value": 1,
                    "get_some_value2": 1,
                    "get_thunk": 1,
                    "get_tick_count": 1,
                    "get_tick_count_thunk": 1,
                    "get_timestamp": 1,
                    "get_variable": 1
                },
                "thunk_FUN_0800115c_1": {
                    "get_timestamp": 1
                },
                "thunk_FUN_0800115c_2": {
                    "get_timestamp": 1
                },
                "thunk_FUN_0800115c_3": {
                    "get_timestamp": 1
                },
                "uDVar9": {
                    "u_temp1": 1
                },
                "uVar10": {
                    "calculation5": 1,
                    "counter3": 1,
                    "temp5": 1,
                    "temp_value6": 1,
                    "temp_var3": 1,
                    "temp_var9": 1,
                    "u_temp2": 1,
                    "uint_value7": 1,
                    "unsigned_variable8": 1,
                    "updated_var10": 1
                },
                "uVar11": {
                    "calculation6": 1,
                    "counter4": 1,
                    "temp6": 1,
                    "temp_value7": 1,
                    "temp_var10": 1,
                    "temp_var4": 1,
                    "u_result": 1,
                    "uint_value8": 1,
                    "unsigned_variable9": 1,
                    "updated_var11": 1
                },
                "uVar12": {
                    "calculation7": 1,
                    "counter5": 1,
                    "temp7": 1,
                    "temp_value8": 1,
                    "temp_var11": 1,
                    "temp_var5": 1,
                    "u_result2": 1,
                    "uint_value9": 1,
                    "unsigned_variable10": 1,
                    "updated_var12": 1
                },
                "uVar13": {
                    "temp_value9": 1
                },
                "uVar17": {
                    "calculation_result": 1,
                    "result": 2,
                    "result3": 2,
                    "result4": 1,
                    "result5": 1,
                    "return_value": 1,
                    "return_value2": 1,
                    "temp_var12": 1,
                    "u_return": 1,
                    "ulonglong_value": 1,
                    "unsigned_variable1": 1,
                    "updated_var17": 1,
                    "var17": 1
                },
                "uVar3": {
                    "calculation1": 1,
                    "temp1": 3,
                    "temp_var1": 1,
                    "temp_var3": 1,
                    "temp_variable1": 1,
                    "uint_value1": 1,
                    "unsigned_variable2": 1,
                    "val1": 1,
                    "value1": 2,
                    "var3": 3
                },
                "uVar4": {
                    "calculation2": 1,
                    "temp2": 2,
                    "temp_value3": 1,
                    "temp_var2": 1,
                    "temp_var4": 1,
                    "temp_variable2": 1,
                    "u_temp4": 1,
                    "uint_value2": 1,
                    "unsigned_variable3": 1,
                    "val2": 1,
                    "value2": 1,
                    "var4": 3
                },
                "uVar5": {
                    "calculation3": 1,
                    "temp3": 2,
                    "temp_value4": 1,
                    "temp_var3": 1,
                    "temp_var5": 1,
                    "temp_variable3": 1,
                    "u_val": 1,
                    "uint_value3": 1,
                    "unsigned_variable4": 1,
                    "val3": 1,
                    "value3": 1,
                    "var5": 3
                },
                "uVar6": {
                    "calculated_value1": 1,
                    "result1": 5,
                    "temp4": 1,
                    "temp_value10": 1,
                    "temp_var4": 1,
                    "temp_variable4": 1,
                    "uint_value4": 1,
                    "unsigned_variable5": 1,
                    "updated_value": 1,
                    "updated_var6": 1,
                    "var6": 1
                },
                "uVar7": {
                    "calculated_value2": 1,
                    "result2": 5,
                    "temp5": 1,
                    "temp_value11": 1,
                    "temp_var5": 1,
                    "temp_variable5": 1,
                    "uint_value5": 1,
                    "unsigned_variable6": 1,
                    "updated_value2": 1,
                    "updated_var7": 1,
                    "var7": 1
                },
                "uVar9": {
                    "calculation4": 1,
                    "counter2": 1,
                    "temp4": 1,
                    "temp_value5": 1,
                    "temp_var2": 1,
                    "temp_var8": 1,
                    "uint_value6": 1,
                    "unsigned_variable7": 1,
                    "updated_var9": 1
                },
                "unaff_r4": {
                    "result3": 1,
                    "temp_value1": 1,
                    "temp_var": 1,
                    "unaff_value": 1,
                    "unaffected_var": 1,
                    "unaffected_variable": 2
                },
                "updateValue1": {
                    "update_value1": 1
                },
                "updateValue2": {
                    "update_value2": 1
                },
                "updateValue20": {
                    "update_value20": 1
                },
                "updateValues3": {
                    "update_values3": 1
                },
                "update_threshold1": {
                    "update_threshold1": 1
                },
                "update_threshold2": {
                    "update_threshold2": 1
                },
                "update_threshold3": {
                    "update_threshold3": 1
                },
                "update_value": {
                    "update_value": 1
                },
                "value1": {
                    "value1": 1
                },
                "value2": {
                    "value2": 1
                },
                "value3": {
                    "value3": 1
                }
            },
            "called": [
                "FUN_08000168",
                "FUN_08004384",
                "FUN_080004d0",
                "FUN_08000adc",
                "FUN_08003034",
                "FUN_08000e54",
                "FUN_08002f28",
                "FUN_08004434",
                "FUN_08000a30",
                "FUN_080043f0",
                "FUN_08000428",
                "FUN_08004a84",
                "FUN_0800403c",
                "FUN_08001078",
                "FUN_08004458",
                "FUN_08005900",
                "FUN_08004348",
                "FUN_08000c44",
                "FUN_080043bc",
                "thunk_FUN_0800115c",
                "FUN_08004410"
            ],
            "calling": [
                "FUN_080041ae"
            ],
            "code": "\nvoid update_game_data_0800411c(void)\n\n{\n  undefined4 *pointer1;\n  longlong long_value;\n  uint temp1;\n  uint var4;\n  uint var5;\n  undefined4 result1;\n  undefined4 result2;\n  int result;\n  uint temp_var2;\n  uint uint_value7;\n  uint temp_var4;\n  uint uint_value9;\n  undefined4 *pointer2;\n  undefined4 unaffected_variable;\n  int temp_var6;\n  int temp_var7;\n  bool is_negative;\n  undefined8 result3;\n  \n  result = thunk_FUN_0800115c();\n  if (1 < (uint)(result - DAT_2000028c)) {\n    DAT_2000028c = thunk_FUN_0800115c();\n    FUN_08002f28();\n  }\n  result = thunk_FUN_0800115c();\n  if (2 < (uint)(result - DAT_20000294)) {\n    DAT_20000294 = thunk_FUN_0800115c();\n    FUN_08004a84();\n  }\n  result = thunk_FUN_0800115c();\n  if (3 < (uint)(result - DAT_20000290)) {\n    DAT_20000290 = thunk_FUN_0800115c();\n    FUN_08004348();\n    FUN_08004384();\n    FUN_080043f0();\n    FUN_08004410();\n    FUN_08004434();\n    FUN_080043bc();\n    FUN_08004458();\n  }\n  if ((DAT_20000275 != '\\0') && (DAT_20000274 != '\\0')) {\n    temp_var7 = DAT_20000270 + (uint)DAT_20000266 * -0x100;\n    temp_var2 = (uint)((longlong)(int)(uint)DAT_20000268 * (longlong)temp_var7) >> 0x17 |\n            (int)((ulonglong)((longlong)(int)(uint)DAT_20000268 * (longlong)temp_var7) >> 0x20) << 9;\n    uint_value7 = (uint)((longlong)(int)(uint)DAT_20000264 * (longlong)temp_var7 >> 7);\n    temp_var4 = uint_value7 + (uint)DAT_20000260 * 0x10000;\n    var4 = (uint)((ulonglong)((longlong)(int)(uint)DAT_20000262 * (longlong)temp_var7) >> 8);\n    result = temp_var2 + 2000;\n    var5 = var4 + (uint)DAT_2000025e * 0x8000;\n    is_negative = (int)temp_var2 < 0;\n    if (1999 < result) {\n      temp_var2 = 0;\n    }\n    temp1 = temp_var2;\n    if (is_negative != SBORROW4(result,2000)) {\n      temp_var6 = temp_var2 * temp_var2 * 5;\n      temp_var2 = temp_var6 >> 2;\n      temp1 = temp_var6 >> 1;\n    }\n    uint_value9 = temp_var4 - temp1;\n    long_value = (ulonglong)(var5 - temp_var2) * (ulonglong)DAT_2000026c;\n    temp_var6 = DAT_2000026c *\n             ((((int)((longlong)(int)(uint)DAT_20000262 * (longlong)temp_var7 >> 0x28) +\n               (uint)CARRY4(var4,(uint)DAT_2000025e * 0x8000)) - ((int)temp_var2 >> 0x1f)) -\n             (uint)(var5 < temp_var2)) + (int)((ulonglong)long_value >> 0x20);\n    var4 = (uint)long_value >> 0x15 | temp_var6 * 0x800;\n    result1 = FUN_08000c44(var4 - uint_value9 >> 0xf |\n                         (((temp_var6 >> 0x15) -\n                          ((((int)((longlong)(int)(uint)DAT_20000264 * (longlong)temp_var7 >> 0x27) +\n                            (uint)CARRY4(uint_value7,(uint)DAT_20000260 * 0x10000)) -\n                           ((int)temp1 >> 0x1f)) - (uint)(temp_var4 < temp1))) - (uint)(var4 < uint_value9)\n                         ) * 0x20000);\n    result1 = FUN_08000e54(result1,0x42c80000);\n    DAT_20000354 = result1;\n    result2 = FUN_08000c44(result);\n    DAT_20000358 = FUN_08000e54(result2,0x42c80000);\n    FUN_08000e54(result1,0x447d5000);\n    result3 = FUN_08000428();\n    result3 = FUN_08005900((int)result3,(int)((ulonglong)result3 >> 0x20),0x60000000,0x3fc85b95);\n    result3 = FUN_08000168(0,0x3ff00000,(int)result3,(int)((ulonglong)result3 >> 0x20));\n    FUN_080004d0((int)result3,(int)((ulonglong)result3 >> 0x20),0,0x40e5a540);\n    result1 = FUN_08000a30();\n    result2 = 0;\n    pointer2 = &DAT_20000300;\n    DAT_20000350 = result1;\n    do {\n      pointer1 = pointer2 + 1;\n      *pointer2 = *pointer1;\n      result2 = FUN_08000adc(result2);\n      pointer2 = pointer1;\n    } while (pointer1 != &DAT_2000034c);\n    DAT_2000034c = result1;\n    result1 = FUN_08000adc(result2,result1);\n    DAT_200002fc = FUN_08000e54(result1,0x41a00000);\n    result = FUN_08001078();\n    DAT_200014ab = result * 100;\n    DAT_20000275 = '\\0';\n    DAT_20000274 = '\\0';\n    FUN_0800403c(0xee,DAT_20000038 + 0x50,1);\n    DAT_2000027c = thunk_FUN_0800115c();\n  }\n  result = thunk_FUN_0800115c();\n  if (((10 < (uint)(result - DAT_2000027c)) && (DAT_20000275 == '\\0')) && (DAT_20000274 == '\\0')) {\n    DAT_20000270 = FUN_08003034();\n    DAT_20000275 = '\\x01';\n    FUN_0800403c(0xee,DAT_20000038 + 0x40,1,0,unaffected_variable);\n    DAT_20000278 = thunk_FUN_0800115c();\n  }\n  result = thunk_FUN_0800115c();\n  if (((10 < (uint)(result - DAT_20000278)) && (DAT_20000275 != '\\0')) && (DAT_20000274 == '\\0')) {\n    DAT_2000026c = FUN_08003034();\n    DAT_20000274 = '\\x01';\n  }\n  return;\n}\n\n",
            "current_name": "update_game_data_0800411c",
            "entrypoint": "0x0800411c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800411c": "update_game_data_0800411c",
                "bVar16": "is_negative",
                "iVar14": "temp_var6",
                "iVar15": "temp_var7",
                "iVar8": "result",
                "lVar2": "long_value",
                "puVar1": "pointer1",
                "puVar13": "pointer2",
                "uVar10": "uint_value7",
                "uVar11": "temp_var4",
                "uVar12": "uint_value9",
                "uVar13": "temp_value9",
                "uVar17": "result3",
                "uVar3": "temp1",
                "uVar4": "var4",
                "uVar5": "var5",
                "uVar6": "result1",
                "uVar7": "result2",
                "uVar9": "temp_var2",
                "unaff_r4": "unaffected_variable"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004194": {
            "additional_data": {
                "DAT_20000050": {
                    "constant19": 1,
                    "data_value19": 1,
                    "float19": 1,
                    "some_value23": 1,
                    "value4": 1
                },
                "DAT_20000054": {
                    "data_value20": 1,
                    "some_value24": 1,
                    "unused2": 1,
                    "unused4": 1,
                    "unused_variable5": 1
                },
                "DAT_20000058": {
                    "data_value21": 1,
                    "some_value25": 1,
                    "unused3": 1,
                    "unused5": 1,
                    "unused_variable6": 1
                },
                "DAT_2000005c": {
                    "data_value22": 1,
                    "some_value26": 1,
                    "unused4": 1,
                    "unused6": 1,
                    "unused_variable7": 1
                },
                "DAT_20000060": {
                    "data_value23": 1,
                    "some_value27": 1,
                    "unused5": 1,
                    "unused7": 1,
                    "unused_variable8": 1
                },
                "DAT_20000064": {
                    "data_value24": 1,
                    "some_value28": 1,
                    "unused6": 1,
                    "unused8": 1,
                    "unused_variable9": 1
                },
                "DAT_2000006c": {
                    "counter": 2,
                    "some_value4": 1,
                    "unused_variable1": 1
                },
                "DAT_20000098": {
                    "constant2": 1,
                    "data_flag4": 1,
                    "flag1": 1,
                    "game_flag4": 1,
                    "initialized_flag4": 1
                },
                "DAT_200000ac": {
                    "constant3": 1,
                    "constant4": 1,
                    "data_value4": 1,
                    "float4": 1,
                    "some_value5": 1
                },
                "DAT_200000b0": {
                    "constant4": 1,
                    "constant5": 1,
                    "data_value5": 1,
                    "float5": 1,
                    "some_value6": 1
                },
                "DAT_200000b4": {
                    "constant5": 1,
                    "constant6": 1,
                    "data_value6": 1,
                    "float6": 1,
                    "some_value7": 1
                },
                "DAT_200000b8": {
                    "constant6": 1,
                    "constant7": 1,
                    "data_value7": 1,
                    "float7": 1,
                    "some_value8": 1
                },
                "DAT_200000bc": {
                    "constant7": 1,
                    "constant8": 1,
                    "data_value8": 1,
                    "float8": 1,
                    "some_value9": 1
                },
                "DAT_200000c0": {
                    "constant8": 1,
                    "constant9": 1,
                    "data_value9": 1,
                    "float9": 1,
                    "some_value10": 1
                },
                "DAT_200000c8": {
                    "constant1": 1,
                    "data_value1": 1,
                    "float1": 1,
                    "some_value1": 1,
                    "value1": 1
                },
                "DAT_200000f4": {
                    "data_flag1": 1,
                    "flag1": 1,
                    "game_flag1": 1,
                    "game_started": 1,
                    "initialized_flag1": 1
                },
                "DAT_20000108": {
                    "constant10": 1,
                    "constant9": 1,
                    "data_value10": 1,
                    "float10": 1,
                    "some_value11": 1
                },
                "DAT_2000010c": {
                    "constant10": 1,
                    "constant11": 1,
                    "data_value11": 1,
                    "float11": 1,
                    "some_value12": 1
                },
                "DAT_20000110": {
                    "constant11": 1,
                    "constant12": 1,
                    "data_value12": 1,
                    "float12": 1,
                    "some_value13": 1
                },
                "DAT_20000114": {
                    "constant12": 1,
                    "constant13": 1,
                    "data_value13": 1,
                    "float13": 1,
                    "some_value14": 1
                },
                "DAT_20000118": {
                    "constant13": 1,
                    "constant14": 1,
                    "data_value14": 1,
                    "float14": 1,
                    "some_value15": 1
                },
                "DAT_2000011c": {
                    "constant14": 1,
                    "constant15": 1,
                    "data_value15": 1,
                    "float15": 1,
                    "some_value16": 1
                },
                "DAT_20000124": {
                    "constant2": 1,
                    "data_value2": 1,
                    "float2": 1,
                    "some_value2": 1,
                    "value2": 1
                },
                "DAT_20000150": {
                    "data_flag2": 1,
                    "flag2": 1,
                    "game_flag2": 1,
                    "game_initialized": 1,
                    "initialized_flag2": 1
                },
                "DAT_20000164": {
                    "constant15": 1,
                    "constant16": 1,
                    "data_value16": 1,
                    "float16": 1,
                    "some_value17": 1
                },
                "DAT_20000168": {
                    "constant16": 1,
                    "constant17": 1,
                    "data_value17": 1,
                    "float17": 1,
                    "some_value18": 1
                },
                "DAT_2000016c": {
                    "constant17": 1,
                    "constant18": 1,
                    "data_value18": 1,
                    "float18": 1,
                    "some_value19": 1
                },
                "DAT_20000170": {
                    "some_value20": 1,
                    "unused1": 2,
                    "unused_variable2": 1
                },
                "DAT_20000174": {
                    "some_value21": 1,
                    "unused2": 1,
                    "unused_variable3": 1
                },
                "DAT_20000178": {
                    "some_value22": 1,
                    "unused3": 1,
                    "unused_variable4": 1
                },
                "DAT_20000180": {
                    "constant3": 1,
                    "data_value3": 1,
                    "float3": 1,
                    "some_value3": 1,
                    "value3": 1
                },
                "DAT_200001ac": {
                    "constant1": 1,
                    "data_flag3": 1,
                    "game_flag3": 1,
                    "initialized_flag3": 1,
                    "some_value": 1
                },
                "FUN_08002ea0": {
                    "configure": 1,
                    "configure_d": 1,
                    "configure_input": 1,
                    "configure_setting4": 1,
                    "do_something_else": 1,
                    "function3": 4,
                    "init_audio": 1,
                    "initialize_component_c": 1,
                    "initialize_data4": 1,
                    "initialize_data_part3": 1,
                    "initialize_function3": 1,
                    "initialize_step3": 1,
                    "initialize_subsystem3": 2,
                    "initialize_variable4": 2,
                    "initialize_window": 1,
                    "perform_action3": 2,
                    "perform_task3": 1,
                    "perform_task4": 1,
                    "set_configuration": 1,
                    "step3": 1
                },
                "FUN_08003298": {
                    "clear_memory": 1,
                    "config_function": 1,
                    "configure_a": 1,
                    "configure_graphics": 1,
                    "configure_interrupts": 1,
                    "configure_memory": 1,
                    "configure_setting1": 1,
                    "initialize_data1": 1,
                    "initialize_data_part1": 1,
                    "initialize_graphics": 1,
                    "initialize_sub_component": 1,
                    "initialize_sub_function1": 1,
                    "initialize_sub_system": 1,
                    "initialize_subcomponent_a": 1,
                    "initialize_variable1": 2,
                    "initialize_variables": 1,
                    "perform_task1": 1,
                    "reset_values": 1,
                    "set_initial_values": 1,
                    "set_variable_defaults": 1
                },
                "FUN_08004028": {
                    "configure_b": 1,
                    "configure_setting2": 1,
                    "do_something": 2,
                    "function1": 4,
                    "init_first_component": 1,
                    "initialize_component_a": 2,
                    "initialize_components": 1,
                    "initialize_data2": 1,
                    "initialize_data_part2": 1,
                    "initialize_function1": 1,
                    "initialize_hardware": 1,
                    "initialize_networking": 1,
                    "initialize_step1": 1,
                    "initialize_sub_function2": 1,
                    "initialize_subcomponent_b": 1,
                    "initialize_subsystem1": 2,
                    "initialize_variable2": 2,
                    "load_data": 1,
                    "perform_action1": 2,
                    "perform_task1": 1,
                    "perform_task2": 1,
                    "step1": 1
                },
                "FUN_08004194": {
                    "initialize": 3,
                    "initialize_app": 1,
                    "initialize_application": 2,
                    "initialize_configuration": 1,
                    "initialize_data": 9,
                    "initialize_game_data": 2,
                    "initialize_global_data": 1,
                    "initialize_settings": 4,
                    "initialize_system": 5,
                    "initialize_variables": 2
                },
                "FUN_08004c70": {
                    "calculate_something": 1,
                    "calculate_value": 1,
                    "check_system_status": 1,
                    "configure_c": 1,
                    "configure_setting3": 1,
                    "function2": 4,
                    "get_current_time": 1,
                    "initialize_component_b": 2,
                    "initialize_data3": 1,
                    "initialize_function2": 1,
                    "initialize_graphics": 1,
                    "initialize_step2": 1,
                    "initialize_sub_function3": 1,
                    "initialize_subcomponent_c": 1,
                    "initialize_subsystem2": 2,
                    "initialize_task2": 1,
                    "initialize_variable3": 2,
                    "perform_action2": 2,
                    "perform_task3": 1,
                    "set_audio_settings": 1,
                    "setup_environment": 1,
                    "start_processing": 1,
                    "step2": 1
                },
                "configureSetting1": {
                    "configure_setting1": 1
                },
                "configureSetting2": {
                    "configure_setting2": 1
                },
                "configureSetting3": {
                    "configure_setting3": 1
                },
                "configureSetting4": {
                    "configure_setting4": 1
                },
                "initializeSettings": {
                    "initialize_settings": 1
                },
                "localVariable1": {
                    "flag1": 1
                },
                "localVariable10": {
                    "constant8": 1
                },
                "localVariable11": {
                    "constant9": 1
                },
                "localVariable12": {
                    "constant10": 1
                },
                "localVariable13": {
                    "constant11": 1
                },
                "localVariable14": {
                    "constant12": 1
                },
                "localVariable15": {
                    "constant13": 1
                },
                "localVariable16": {
                    "constant14": 1
                },
                "localVariable17": {
                    "constant15": 1
                },
                "localVariable18": {
                    "constant16": 1
                },
                "localVariable19": {
                    "constant17": 1
                },
                "localVariable2": {
                    "flag2": 1
                },
                "localVariable20": {
                    "constant18": 1
                },
                "localVariable21": {
                    "constant19": 1
                },
                "localVariable22": {
                    "constant20": 1
                },
                "localVariable23": {
                    "constant21": 1
                },
                "localVariable24": {
                    "constant22": 1
                },
                "localVariable25": {
                    "constant23": 1
                },
                "localVariable26": {
                    "constant24": 1
                },
                "localVariable27": {
                    "constant25": 1
                },
                "localVariable28": {
                    "constant26": 1
                },
                "localVariable29": {
                    "constant27": 1
                },
                "localVariable3": {
                    "constant1": 1
                },
                "localVariable30": {
                    "constant28": 1
                },
                "localVariable31": {
                    "constant29": 1
                },
                "localVariable32": {
                    "constant30": 1
                },
                "localVariable33": {
                    "constant31": 1
                },
                "localVariable34": {
                    "constant32": 1
                },
                "localVariable35": {
                    "constant33": 1
                },
                "localVariable36": {
                    "constant34": 1
                },
                "localVariable37": {
                    "constant35": 1
                },
                "localVariable38": {
                    "unused_variable1": 1
                },
                "localVariable39": {
                    "unused_variable2": 1
                },
                "localVariable4": {
                    "constant2": 1
                },
                "localVariable40": {
                    "unused_variable3": 1
                },
                "localVariable41": {
                    "unused_variable4": 1
                },
                "localVariable42": {
                    "unused_variable5": 1
                },
                "localVariable43": {
                    "unused_variable6": 1
                },
                "localVariable44": {
                    "unused_variable7": 1
                },
                "localVariable45": {
                    "unused_variable8": 1
                },
                "localVariable46": {
                    "unused_variable9": 1
                },
                "localVariable47": {
                    "unused_variable10": 1
                },
                "localVariable48": {
                    "unused_variable11": 1
                },
                "localVariable49": {
                    "unused_variable12": 1
                },
                "localVariable5": {
                    "constant3": 1
                },
                "localVariable50": {
                    "unused_variable13": 1
                },
                "localVariable51": {
                    "unused_variable14": 1
                },
                "localVariable52": {
                    "unused_variable15": 1
                },
                "localVariable6": {
                    "constant4": 1
                },
                "localVariable7": {
                    "constant5": 1
                },
                "localVariable8": {
                    "constant6": 1
                },
                "localVariable9": {
                    "constant7": 1
                },
                "param_1": {
                    "action3_param1": 1,
                    "param1": 3,
                    "task1_param1": 1,
                    "task3_param1": 1,
                    "unused_param1": 3
                },
                "param_2": {
                    "action3_param2": 1,
                    "param2": 3,
                    "task1_param2": 1,
                    "task3_param2": 1,
                    "unused_param2": 3
                },
                "param_3": {
                    "action3_param3": 1,
                    "param3": 3,
                    "task1_param3": 1,
                    "task3_param3": 1,
                    "unused_param3": 3
                },
                "param_4": {
                    "action3_param4": 1,
                    "param4": 3,
                    "task1_param4": 1,
                    "task3_param4": 1,
                    "unused_param4": 3
                }
            },
            "called": [
                "FUN_08003298",
                "FUN_08004028",
                "FUN_08004c70",
                "FUN_08002ea0"
            ],
            "calling": [
                "FUN_080041ae"
            ],
            "code": "\nvoid initialize_game_data_08004194(void)\n\n{\n  FUN_08004028();\n  FUN_08004c70();\n  FUN_08002ea0();\n  FUN_08003298();\n  DAT_200000f4 = 1;\n  DAT_20000150 = 1;\n  DAT_200001ac = 0xffffffff;\n  DAT_20000098 = 1;\n  DAT_200000c8 = 0x44bb8000;\n  DAT_20000124 = 0x44b54000;\n  DAT_20000180 = 0x44fa0000;\n  DAT_2000006c = 0;\n  DAT_200000ac = 0x408ccccd;\n  DAT_200000b0 = 0x3ca3d70a;\n  DAT_200000b4 = 0x438c0000;\n  DAT_200000b8 = 0x40900000;\n  DAT_200000bc = 0x3ca3d70a;\n  DAT_200000c0 = 0x43b40000;\n  DAT_20000108 = 0x40733333;\n  DAT_2000010c = 0x3ca3d70a;\n  DAT_20000110 = 0x43820000;\n  DAT_20000114 = 0x40733333;\n  DAT_20000118 = 0x3ca3d70a;\n  DAT_2000011c = 0x43a00000;\n  DAT_20000164 = 0x40400000;\n  DAT_20000168 = 0x3c23d70a;\n  DAT_2000016c = 0x438c0000;\n  DAT_20000170 = 0;\n  DAT_20000174 = 0;\n  DAT_20000178 = 0;\n  DAT_20000050 = 0x41200000;\n  DAT_20000054 = 0;\n  DAT_20000058 = 0;\n  DAT_2000005c = 0;\n  DAT_20000060 = 0;\n  DAT_20000064 = 0;\n  return;\n}\n\n",
            "current_name": "initialize_game_data_08004194",
            "entrypoint": "0x08004194",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004194": "initialize_game_data_08004194"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080041ae": {
            "additional_data": {
                "FUN_0800114c": {
                    "execute_function1": 1,
                    "execute_operation": 1,
                    "execute_some_code": 1,
                    "execute_task": 1,
                    "execute_task1": 2,
                    "execute_task_1": 1,
                    "perform_action": 3,
                    "perform_action_1": 1,
                    "perform_action_a": 1,
                    "perform_operation": 3,
                    "perform_operation_1": 1,
                    "perform_standard_operation": 1,
                    "perform_task": 7,
                    "perform_task1": 2,
                    "perform_task_1": 2,
                    "perform_task_a": 2,
                    "process_sub_function_a": 1
                },
                "FUN_08003eb0": {
                    "calculate_result": 5,
                    "calculate_total": 1,
                    "calculate_value": 7,
                    "compute_value": 1,
                    "get_default_value": 1,
                    "get_information": 1,
                    "initialize": 2,
                    "initialize_param": 2,
                    "initialize_param_value": 1,
                    "initialize_parameter": 1,
                    "initialize_value": 1,
                    "set_initial_value": 4,
                    "set_parameter": 2,
                    "set_value": 1
                },
                "FUN_0800411c": {
                    "cleanup": 4,
                    "cleanup_function": 1,
                    "execute_action_2": 1,
                    "execute_function2": 1,
                    "execute_function_c": 1,
                    "execute_instruction": 1,
                    "execute_step": 1,
                    "execute_task": 1,
                    "execute_task2": 1,
                    "execute_task3": 1,
                    "execute_task_2": 1,
                    "handle_event": 1,
                    "perform_action": 1,
                    "perform_action_b": 1,
                    "perform_additional_operation": 1,
                    "perform_operation": 1,
                    "perform_operation_2": 1,
                    "perform_task3": 2,
                    "perform_task_2": 1,
                    "perform_task_3": 1,
                    "perform_task_b": 2,
                    "update_state": 2,
                    "update_status": 2,
                    "update_system_status": 1
                },
                "FUN_08004194": {
                    "initialize": 10,
                    "initialize_data": 3,
                    "initialize_environment": 1,
                    "initialize_function_b": 1,
                    "initialize_system": 6,
                    "initialize_variables": 1,
                    "perform_initialization": 2,
                    "perform_setup": 1,
                    "perform_task2": 3,
                    "perform_task_2": 1,
                    "set_up_environment": 1,
                    "setup_function": 1
                },
                "FUN_080041ae": {
                    "execute": 1,
                    "execute_continuous_operations": 1,
                    "execute_forever": 1,
                    "execute_infinite_loop": 8,
                    "execute_loop": 1,
                    "execute_main_loop": 1,
                    "execute_repeatedly": 1,
                    "infinite_loop": 1,
                    "initialize_and_process_loop": 1,
                    "main_loop": 2,
                    "perform_continuous_function": 1,
                    "process_loop": 1,
                    "run_forever": 1,
                    "run_infinite_loop": 7,
                    "run_infinitely": 1,
                    "run_program": 2
                },
                "do": {
                    "while": 1
                },
                "param_1": {
                    "initial_value": 1,
                    "input_value": 5,
                    "number": 1,
                    "param": 1,
                    "value": 3
                },
                "while": {
                    "loop": 1
                }
            },
            "called": [
                "FUN_0800114c",
                "FUN_08004194",
                "FUN_0800411c",
                "FUN_08003eb0"
            ],
            "calling": [
                "entry"
            ],
            "code": "\nvoid execute_infinite_loop_080041ae(void)\n\n{\n  FUN_08003eb0(0);\n  FUN_08004194();\n  while {\n    FUN_0800114c();\n    FUN_0800411c();\n  } loop( true );\n}\n\n",
            "current_name": "execute_infinite_loop_080041ae",
            "entrypoint": "0x080041ae",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080041ae": "execute_infinite_loop_080041ae",
                "do": "while",
                "while": "loop"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080041c4": {
            "additional_data": {
                "FUN_08003fc4": {
                    "init_submodule1": 1,
                    "initialize_1": 1,
                    "initialize_component1": 2,
                    "initialize_first_component": 1,
                    "initialize_function1": 1,
                    "initialize_option_one": 1,
                    "initialize_part1": 1,
                    "initialize_step1": 1
                },
                "FUN_08003fd0": {
                    "init_submodule2": 1,
                    "initialize_2": 1,
                    "initialize_component2": 2,
                    "initialize_function2": 1,
                    "initialize_option_two": 1,
                    "initialize_part2": 1,
                    "initialize_second_component": 1,
                    "initialize_step2": 1
                },
                "FUN_08003fdc": {
                    "init_submodule3": 1,
                    "initialize_3": 1,
                    "initialize_component3": 2,
                    "initialize_function3": 1,
                    "initialize_option_three": 1,
                    "initialize_part3": 1,
                    "initialize_step3": 1,
                    "initialize_third_component": 1
                },
                "FUN_08003fe8": {
                    "configure_component": 1,
                    "configure_settings": 1,
                    "initialize_4": 1,
                    "initialize_component4": 1,
                    "initialize_fourth_component": 1,
                    "initialize_function4": 1,
                    "initialize_part4": 1,
                    "initialize_step4": 1,
                    "initialize_submodule4": 1
                },
                "FUN_080041c4": {
                    "execute_initialization": 2,
                    "initialize": 9,
                    "initialize_and_configure": 3,
                    "initialize_application": 3,
                    "initialize_component": 1,
                    "initialize_components": 5,
                    "initialize_stuff": 1,
                    "initialize_system": 7
                },
                "extraout_r1": {
                    "config_extra_output": 1,
                    "extra_output_param": 1,
                    "extra_result": 1,
                    "extra_return_value": 1,
                    "out_r1": 1,
                    "output1": 1,
                    "result": 1,
                    "result1": 3,
                    "return_value": 1,
                    "temp": 1,
                    "temp_result": 1,
                    "tmp_var": 1,
                    "unused5": 2,
                    "unused_extraout_r1": 1
                },
                "param_1": {
                    "arg1": 13,
                    "config_param1": 2,
                    "config_param_1": 1,
                    "init_param1": 1,
                    "param1": 3,
                    "unused": 1,
                    "unused1": 3,
                    "unused_param1": 3,
                    "unused_param_1": 1,
                    "unused_parameter1": 2
                },
                "param_2": {
                    "arg2": 13,
                    "config_param2": 2,
                    "config_param_2": 1,
                    "init_param2": 1,
                    "param2": 3,
                    "unused": 1,
                    "unused2": 3,
                    "unused_param2": 3,
                    "unused_param_2": 1,
                    "unused_parameter2": 2
                },
                "param_3": {
                    "arg3": 13,
                    "config_param3": 2,
                    "config_param_3": 1,
                    "init_param3": 1,
                    "param3": 3,
                    "param_1": 1,
                    "unused": 1,
                    "unused3": 3,
                    "unused_param3": 3,
                    "unused_param_3": 1,
                    "unused_parameter3": 2
                },
                "param_4": {
                    "arg4": 13,
                    "config_param4": 2,
                    "config_param_4": 1,
                    "init_param4": 1,
                    "param4": 3,
                    "param_2": 1,
                    "unused": 1,
                    "unused4": 3,
                    "unused_param4": 3,
                    "unused_param_4": 1,
                    "unused_parameter4": 2
                }
            },
            "called": [
                "FUN_08003fc4",
                "FUN_08003fd0",
                "FUN_08003fdc",
                "FUN_08003fe8"
            ],
            "calling": [
                "FUN_08004a84"
            ],
            "code": "\nvoid initialize_system_080041c4(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  undefined4 result1;\n  \n  FUN_08003fc4(0);\n  FUN_08003fd0(0);\n  FUN_08003fdc(0);\n  FUN_08003fe8(0,result1,arg3,arg4);\n  return;\n}\n\n",
            "current_name": "initialize_system_080041c4",
            "entrypoint": "0x080041c4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080041c4": "initialize_system_080041c4",
                "extraout_r1": "result1",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800426c": {
            "additional_data": {
                "DAT_20000298": {
                    "data4": 1,
                    "variable_d": 1
                },
                "DAT_2000029c": {
                    "data3": 1,
                    "variable_c": 1
                },
                "DAT_200002a0": {
                    "data1": 1,
                    "variable_a": 1
                },
                "DAT_200002a4": {
                    "data2": 1,
                    "variable_b": 1
                },
                "DAT_200013df": {
                    "final_data2": 1
                },
                "DAT_200013e3": {
                    "final_data4": 1
                },
                "FUN_08000ad8": {
                    "compute1": 1
                },
                "FUN_08000adc": {
                    "compute2": 1
                },
                "FUN_08001078": {
                    "compute3": 1
                },
                "FUN_08003fc4": {
                    "set_data1": 1
                },
                "FUN_08003fd0": {
                    "set_data3": 1
                },
                "FUN_08003fdc": {
                    "set_data2": 1
                },
                "FUN_08003fe8": {
                    "set_data4": 1
                },
                "FUN_0800426c": {
                    "calculate_and_store_values": 1,
                    "calculate_and_update_values": 1,
                    "calculate_results": 1,
                    "calculate_threshold_values": 1,
                    "calculate_values": 5,
                    "calculate_values_and_assign": 1,
                    "calculate_values_and_update": 1,
                    "improve_and_convert_to_descriptive_code": 1,
                    "improve_and_set_values": 1,
                    "initialize_data": 2,
                    "initialize_values": 2,
                    "initialize_variables": 1,
                    "process_data": 1,
                    "update_parameters_and_values": 1
                },
                "_DAT_200013dd": {
                    "final_data1": 1
                },
                "_DAT_200013e1": {
                    "final_data3": 1
                },
                "param_1": {
                    "arg1": 2,
                    "input1": 12,
                    "input_1": 2,
                    "input_param1": 5,
                    "input_param_1": 5,
                    "param1": 3,
                    "value1": 2
                },
                "param_2": {
                    "arg2": 2,
                    "input2": 12,
                    "input_2": 2,
                    "input_param2": 5,
                    "input_param_2": 5,
                    "param2": 3,
                    "value2": 2
                },
                "param_3": {
                    "arg3": 2,
                    "input3": 11,
                    "input_3": 2,
                    "input_param3": 5,
                    "input_param_3": 5,
                    "operand1": 1,
                    "param3": 3,
                    "value3": 2
                },
                "param_4": {
                    "arg4": 2,
                    "input4": 11,
                    "input_4": 2,
                    "input_param4": 5,
                    "input_param_4": 5,
                    "operand2": 1,
                    "param4": 3,
                    "value4": 2
                },
                "uVar1": {
                    "result1": 23,
                    "result_1": 7,
                    "result_var1": 1
                },
                "uVar2": {
                    "result2": 23,
                    "result_2": 7,
                    "result_var2": 1
                },
                "uVar3": {
                    "result3": 23,
                    "result_3": 7,
                    "result_var3": 1
                },
                "uVar4": {
                    "result4": 23,
                    "result_4": 7,
                    "result_var4": 1
                },
                "uVar5": {
                    "result5": 23,
                    "result_5": 7,
                    "result_var5": 1
                },
                "uVar6": {
                    "result6": 23,
                    "result_6": 7,
                    "result_var6": 1
                },
                "uVar7": {
                    "result7": 23,
                    "result_7": 7,
                    "result_var7": 1
                }
            },
            "called": [
                "FUN_08003fc4",
                "FUN_08003fd0",
                "FUN_08000ad8",
                "FUN_08001078",
                "FUN_08000adc",
                "FUN_08003fdc",
                "FUN_08003fe8"
            ],
            "calling": [
                "FUN_08004a84"
            ],
            "code": "\n\n\nvoid calculate_values_and_update_0800426c(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  undefined4 result3;\n  uint result4;\n  uint result5;\n  uint result6;\n  uint result7;\n  \n  result1 = FUN_08000ad8();\n  result2 = FUN_08000adc(input1,input2);\n  result3 = FUN_08000ad8(result1,input3);\n  result3 = FUN_08000adc(result3,input4);\n  FUN_08000ad8(result3,0x447a0000);\n  result4 = FUN_08001078();\n  result3 = FUN_08000ad8(result2,input3);\n  result3 = FUN_08000ad8(result3,input4);\n  FUN_08000ad8(result3,0x447a0000);\n  result5 = FUN_08001078();\n  result1 = FUN_08000adc(result1,input3);\n  result1 = FUN_08000ad8(result1,input4);\n  FUN_08000ad8(result1,0x447a0000);\n  result6 = FUN_08001078();\n  result1 = FUN_08000adc(input3,result2);\n  result1 = FUN_08000adc(result1,input4);\n  FUN_08000ad8(result1,0x447a0000);\n  result7 = FUN_08001078();\n  if (999 < (int)result7) {\n    result7 = 1000;\n  }\n  if (999 < (int)result6) {\n    result6 = 1000;\n  }\n  if (999 < (int)result5) {\n    result5 = 1000;\n  }\n  if (999 < (int)result4) {\n    result4 = 1000;\n  }\n  DAT_200002a0 = result5 & ~((int)result5 >> 0x1f);\n  DAT_200002a4 = result4 & ~((int)result4 >> 0x1f);\n  DAT_2000029c = result6 & ~((int)result6 >> 0x1f);\n  DAT_20000298 = result7 & ~((int)result7 >> 0x1f);\n  FUN_08003fc4();\n  FUN_08003fd0(DAT_2000029c);\n  FUN_08003fdc(DAT_200002a0);\n  FUN_08003fe8(DAT_200002a4);\n  _DAT_200013dd = (short)DAT_20000298 + 1000;\n  DAT_200013df = (short)DAT_2000029c + 1000;\n  _DAT_200013e1 = (short)DAT_200002a0 + 1000;\n  DAT_200013e3 = (short)DAT_200002a4 + 1000;\n  return;\n}\n\n",
            "current_name": "calculate_values_and_update_0800426c",
            "entrypoint": "0x0800426c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800426c": "calculate_values_and_update_0800426c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3",
                "uVar4": "result4",
                "uVar5": "result5",
                "uVar6": "result6",
                "uVar7": "result7"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004300": {
            "additional_data": {
                "FUN_08004300": {
                    "calculate_checksum": 11,
                    "calculate_xor_checksum": 1,
                    "compute_checksum": 1,
                    "decode_and_validate_data": 1,
                    "decode_data": 1,
                    "extract_and_xor": 2,
                    "extract_data": 1,
                    "process_data": 3,
                    "reverse_and_checksum": 2,
                    "reverse_and_hash": 1,
                    "reverse_and_xor": 1,
                    "reverse_byte_order": 1,
                    "reverse_code": 1
                },
                "param_1": {
                    "input": 1,
                    "input1": 2,
                    "input_checksum": 1,
                    "input_key": 3,
                    "input_param": 3,
                    "input_value": 7,
                    "key": 11,
                    "param": 1,
                    "seed": 1,
                    "value": 1
                },
                "param_2": {
                    "byte_array": 4,
                    "bytes": 1,
                    "data": 15,
                    "data_buffer": 2,
                    "input2": 1,
                    "input_array": 1,
                    "input_data": 6,
                    "input_string": 1
                },
                "param_3": {
                    "array_length": 2,
                    "array_size": 1,
                    "buffer_length": 1,
                    "data_length": 12,
                    "data_size": 3,
                    "input_length": 3,
                    "input_size": 1,
                    "length": 5,
                    "size": 3
                },
                "pbVar2": {
                    "curr_byte": 1,
                    "current_byte": 27,
                    "current_data_ptr": 1
                },
                "uVar1": {
                    "calculated_checksum": 1,
                    "checksum": 12,
                    "checksum_result": 1,
                    "computed_hash": 1,
                    "result": 12,
                    "xor_result": 1,
                    "xored_value": 1
                }
            },
            "called": [
                "FUN_08004c8c",
                "FUN_08004c18"
            ],
            "calling": [
                "FUN_080043f0",
                "FUN_08004384",
                "FUN_08004348",
                "FUN_08004458",
                "FUN_080043bc",
                "FUN_08004410",
                "FUN_08004434"
            ],
            "code": "\nvoid calculate_xor_checksum_08004300(uint key,byte *data,uint data_length)\n\n{\n  uint result;\n  byte *current_byte;\n  \n  FUN_08004c8c(&DAT_0800732e);\n  FUN_08004c18(data_length & 0xff);\n  result = data_length & 0xff ^ key;\n  FUN_08004c18(key);\n  for (current_byte = data; (int)current_byte - (int)data < (int)data_length; current_byte = current_byte + 1) {\n    FUN_08004c18(*current_byte);\n    result = result ^ *current_byte;\n  }\n  FUN_08004c18(result);\n  return;\n}\n\n",
            "current_name": "calculate_xor_checksum_08004300",
            "entrypoint": "0x08004300",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004300": "calculate_xor_checksum_08004300",
                "param_1": "key",
                "param_2": "data",
                "param_3": "data_length",
                "pbVar2": "current_byte",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004348": {
            "additional_data": {
                "FUN_08004300": {
                    "populate_data": 1,
                    "send_data": 1
                },
                "FUN_08004348": {
                    "initialize_data": 22,
                    "initialize_data_and_call_function": 1,
                    "initialize_data_structure": 1,
                    "initialize_function": 4,
                    "initialize_variables": 2,
                    "initialize_widget": 1
                },
                "local_10": {
                    "address": 1,
                    "buffer_address": 1,
                    "constant": 1,
                    "constant1": 1,
                    "constant_flag": 1,
                    "constant_value": 3,
                    "data": 1,
                    "data_address": 5,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "data_value": 4,
                    "data_value_1": 1,
                    "initial_value": 3,
                    "initialized_value": 1,
                    "local_var1": 2,
                    "local_variable1": 1,
                    "start_address": 1,
                    "widget_address": 1
                },
                "local_c": {
                    "filtered_flag": 1,
                    "filtered_flags": 1,
                    "local_var2": 2,
                    "local_variable2": 1,
                    "masked_arg2": 3,
                    "masked_data_size": 2,
                    "masked_flag": 1,
                    "masked_flags": 5,
                    "masked_input": 1,
                    "masked_input_value": 1,
                    "masked_length": 1,
                    "masked_param2": 7,
                    "masked_size": 2,
                    "masked_value": 3
                },
                "param_1": {
                    "arg1": 8,
                    "data_pointer": 1,
                    "flags": 1,
                    "input": 1,
                    "param1": 12,
                    "param_1": 3,
                    "status": 1,
                    "undefined": 1,
                    "unknown1": 1,
                    "unused_param": 2
                },
                "param_2": {
                    "arg2": 3,
                    "data_size": 4,
                    "flag": 2,
                    "flags": 6,
                    "initial_value": 1,
                    "input_value": 3,
                    "length": 1,
                    "param2": 10,
                    "value": 1
                },
                "param_3": {
                    "additional_value": 1,
                    "arg2": 1,
                    "arg3": 7,
                    "data": 1,
                    "param": 1,
                    "param3": 12,
                    "param_3": 3,
                    "unknown2": 1,
                    "unused_param": 1,
                    "unused_param_2": 1,
                    "value": 2
                },
                "uStack_8": {
                    "arg2": 1,
                    "arg3": 2,
                    "arg3_copy": 3,
                    "arg3_duplicate": 1,
                    "extra_value": 1,
                    "local_var3": 2,
                    "local_variable3": 1,
                    "param3_copy": 9,
                    "param_3": 1,
                    "stack_param": 1,
                    "stack_value": 3,
                    "unknown3": 1,
                    "unused_var": 1,
                    "unused_variable": 1
                }
            },
            "called": [
                "FUN_08004300"
            ],
            "calling": [
                "FUN_0800411c"
            ],
            "code": "\n\n\nvoid initialize_data_and_call_function_08004348(undefined4 param1,uint param2,undefined4 param3)\n\n{\n  undefined4 data_address;\n  uint masked_param2;\n  undefined4 param3_copy;\n  \n  _DAT_20001423 = 0x40003e9;\n  _DAT_20001427 = 0;\n  DAT_20001429 = 0;\n  data_address = 0x40003e9;\n  masked_param2 = param2 & 0xff000000;\n  param3_copy = param3;\n  FUN_08004300(100,&data_address,7);\n  return;\n}\n\n",
            "current_name": "initialize_data_and_call_function_08004348",
            "entrypoint": "0x08004348",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004348": "initialize_data_and_call_function_08004348",
                "local_10": "data_address",
                "local_c": "masked_param2",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "uStack_8": "param3_copy"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004384": {
            "additional_data": {
                "FUN_08004300": {
                    "process_data": 3
                },
                "FUN_08004384": {
                    "execute_function": 2,
                    "execute_process": 1,
                    "execute_task": 1,
                    "initialize": 1,
                    "initialize_and_call_function": 3,
                    "initialize_data": 9,
                    "initialize_function": 9,
                    "initialize_parameters": 1,
                    "initialize_variables": 1,
                    "perform_initialization": 1,
                    "process_data": 1,
                    "set_initial_values": 1
                },
                "local_14": {
                    "data": 2,
                    "data1": 1,
                    "data_address": 1,
                    "initialized_value": 2,
                    "local_var1": 2,
                    "local_var_1": 1,
                    "local_variable1": 1,
                    "local_variable_1": 1,
                    "temp1": 1,
                    "temp_val1": 1,
                    "temp_value1": 1,
                    "temp_var1": 4,
                    "temp_variable1": 2,
                    "value1": 6,
                    "var1": 2,
                    "var_a": 1,
                    "variable1": 1
                },
                "local_c": {
                    "local_var3": 2,
                    "local_var_3": 1,
                    "local_variable3": 1,
                    "local_variable_3": 1,
                    "masked_arg4": 3,
                    "masked_data": 1,
                    "masked_input": 1,
                    "masked_input_val4": 1,
                    "masked_param4": 6,
                    "masked_param_4": 1,
                    "masked_parameter": 1,
                    "masked_parameter4": 1,
                    "masked_value": 6,
                    "value3": 1,
                    "var3": 2,
                    "var_c": 1,
                    "variable3": 1
                },
                "param_1": {
                    "arg1": 8,
                    "input1": 5,
                    "input_param": 1,
                    "input_param1": 4,
                    "input_param_1": 2,
                    "input_parameter1": 1,
                    "input_val1": 1,
                    "input_value1": 1,
                    "param1": 4,
                    "param_1": 1,
                    "parameter1": 1,
                    "val1": 1,
                    "value1": 1
                },
                "param_2": {
                    "arg2": 8,
                    "input2": 5,
                    "input_param2": 4,
                    "input_param_2": 2,
                    "input_parameter2": 1,
                    "input_val2": 1,
                    "input_value2": 1,
                    "output_param": 1,
                    "param2": 4,
                    "param_2": 1,
                    "parameter2": 1,
                    "val2": 1,
                    "value2": 1
                },
                "param_3": {
                    "arg3": 8,
                    "buffer_size": 1,
                    "input3": 5,
                    "input_param3": 4,
                    "input_param_3": 2,
                    "input_parameter3": 1,
                    "input_val3": 1,
                    "input_value3": 1,
                    "param3": 4,
                    "param_3": 1,
                    "parameter3": 1,
                    "val3": 1,
                    "value3": 1
                },
                "param_4": {
                    "arg4": 7,
                    "data": 1,
                    "input4": 5,
                    "input_param4": 4,
                    "input_param_4": 2,
                    "input_parameter4": 1,
                    "input_val4": 1,
                    "input_value": 1,
                    "input_value4": 1,
                    "param4": 4,
                    "param_4": 1,
                    "parameter4": 1,
                    "val4": 1,
                    "value4": 1
                },
                "uStack_10": {
                    "data2": 1,
                    "flag": 1,
                    "initialized_stack": 1,
                    "local_var2": 2,
                    "local_var_2": 1,
                    "local_variable2": 1,
                    "local_variable_2": 1,
                    "stack_data": 2,
                    "stack_value": 1,
                    "temp2": 1,
                    "temp_val2": 1,
                    "temp_value2": 1,
                    "temp_var2": 4,
                    "temp_variable2": 2,
                    "value2": 6,
                    "var2": 2,
                    "var_b": 1,
                    "variable2": 1
                }
            },
            "called": [
                "FUN_08004300"
            ],
            "calling": [
                "FUN_0800411c"
            ],
            "code": "\n\n\nvoid initialize_and_call_function_08004384(undefined4 arg1,undefined4 arg2,undefined4 arg3,uint arg4)\n\n{\n  undefined4 value1;\n  undefined4 value2;\n  uint masked_value;\n  \n  _DAT_200013bd = 0x2a0007;\n  value1 = _DAT_200013b9;\n  value2 = 0x2a0007;\n  _DAT_200013c1 = 0;\n  DAT_200013c3 = 0;\n  masked_value = arg4 & 0xff000000;\n  FUN_08004300(0x65,&value1,0xb,0,arg1);\n  return;\n}\n\n",
            "current_name": "initialize_and_call_function_08004384",
            "entrypoint": "0x08004384",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004384": "initialize_and_call_function_08004384",
                "local_14": "value1",
                "local_c": "masked_value",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "uStack_10": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080043bc": {
            "additional_data": {
                "FUN_08004300": {
                    "process_data": 2
                },
                "FUN_080043bc": {
                    "copy_and_call_function": 12,
                    "copy_and_process_data": 2,
                    "copy_data": 1,
                    "copy_data_and_call_function": 15,
                    "extract_and_call_function": 1
                },
                "local_1c": {
                    "additional_data": 1,
                    "array_of_indices": 1,
                    "copied_addresses": 1,
                    "copied_data": 2,
                    "copied_data2": 1,
                    "copied_data_index": 1,
                    "copied_data_indices": 4,
                    "copied_indices": 2,
                    "copy_addresses": 1,
                    "empty_array": 1,
                    "extracted_lengths": 1,
                    "index_array": 1,
                    "placeholders": 1,
                    "processed_data": 1,
                    "temp_array": 1,
                    "temp_array2": 2,
                    "temp_buffer": 2,
                    "temp_data": 3,
                    "temporary_array": 1,
                    "temporary_buffer": 1,
                    "temporary_data": 1,
                    "temporary_storage": 1
                },
                "local_24": {
                    "array_of_values": 1,
                    "copied_data": 18,
                    "copied_data_array": 1,
                    "copied_values": 4,
                    "copy_array": 1,
                    "copy_buffer": 2,
                    "copy_data_array": 1,
                    "extracted_data": 1,
                    "temp_array": 2
                },
                "param_1": {
                    "address": 1,
                    "data_size": 1,
                    "index": 1,
                    "input_param1": 1,
                    "param1": 1,
                    "param_a": 1,
                    "parameter1": 1,
                    "value": 2,
                    "value1": 2
                },
                "param_2": {
                    "data": 8,
                    "input_param2": 1,
                    "param2": 1,
                    "parameter2": 1
                },
                "param_3": {
                    "function_param": 1,
                    "input_param3": 1,
                    "length": 5,
                    "param3": 1,
                    "param_b": 1,
                    "parameter3": 1,
                    "size": 1
                },
                "puVar3": {
                    "copied_data_pointer": 1,
                    "copied_data_ptr": 1,
                    "copy_destination": 1,
                    "dest_ptr": 2,
                    "destination_pointer": 2,
                    "ptr_to_destination": 1,
                    "result_array": 1,
                    "result_pointer": 1
                },
                "puVar4": {
                    "copy_source": 1,
                    "data_array": 1,
                    "data_pointer": 1,
                    "original_data_pointer": 1,
                    "ptr_to_source": 1,
                    "source_data_ptr": 1,
                    "source_pointer": 2,
                    "source_ptr": 2
                },
                "uVar1": {
                    "temp1": 1,
                    "temp_value1": 4,
                    "temp_var1": 1,
                    "value1": 2
                },
                "uVar2": {
                    "temp2": 1,
                    "temp_value2": 4,
                    "temp_var2": 1,
                    "value2": 2
                }
            },
            "called": [
                "FUN_08004300"
            ],
            "calling": [
                "FUN_0800411c"
            ],
            "code": "\nvoid copy_data_and_call_function_080043bc(void)\n\n{\n  undefined4 temp_value1;\n  undefined4 temp_value2;\n  undefined4 *destination_pointer;\n  undefined4 *source_pointer;\n  undefined4 copied_data [2];\n  undefined2 copied_data_indices [6];\n  \n  source_pointer = (undefined4 *)&DAT_2000142a;\n  destination_pointer = copied_data;\n  do {\n    temp_value1 = *source_pointer;\n    temp_value2 = source_pointer[1];\n    source_pointer = source_pointer + 2;\n    *destination_pointer = temp_value1;\n    destination_pointer[1] = temp_value2;\n    destination_pointer = destination_pointer + 2;\n  } while (source_pointer != (undefined4 *)&DAT_2000143a);\n  *(undefined2 *)destination_pointer = DAT_2000143a;\n  FUN_08004300(0x66,copied_data,0x12);\n  return;\n}\n\n",
            "current_name": "copy_data_and_call_function_080043bc",
            "entrypoint": "0x080043bc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080043bc": "copy_data_and_call_function_080043bc",
                "local_1c": "copied_data_indices",
                "local_24": "copied_data",
                "puVar3": "destination_pointer",
                "puVar4": "source_pointer",
                "uVar1": "temp_value1",
                "uVar2": "temp_value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080043f0": {
            "additional_data": {
                "FUN_080043f0": {
                    "execute_function": 3,
                    "extract_and_execute": 1,
                    "extract_and_process_data": 11,
                    "extract_byte_data": 1,
                    "extract_data": 4,
                    "extract_data_and_process": 3,
                    "process_binary_data": 1,
                    "process_binary_function": 1,
                    "process_data": 2,
                    "reverse_hex_string": 1
                },
                "auStack_8": {
                    "additional_args": 1,
                    "additional_data": 2,
                    "array_data": 1,
                    "buffer_array": 1,
                    "data_arr": 3,
                    "data_array": 9,
                    "extracted_data_array": 2,
                    "param_array": 3,
                    "stack_array": 1,
                    "stack_data": 2,
                    "stack_values": 1,
                    "var3": 1,
                    "variable3": 1
                },
                "local_10": {
                    "data": 1,
                    "data1": 6,
                    "data_1": 2,
                    "data_pointer": 1,
                    "data_pointer1": 1,
                    "data_ptr": 2,
                    "data_ptr1": 1,
                    "data_ptr_1": 1,
                    "data_value1": 1,
                    "data_var": 1,
                    "extracted_data": 2,
                    "extracted_data_1": 4,
                    "hex_value1": 1,
                    "source_data": 3,
                    "stored_value_1": 1,
                    "value_1": 1,
                    "var1": 1,
                    "variable1": 1
                },
                "param_1": {
                    "arg1": 7,
                    "data_name": 1,
                    "data_param": 1,
                    "data_param_1": 1,
                    "data_ptr": 1,
                    "input1": 3,
                    "input_1": 1,
                    "input_param_1": 4,
                    "input_parameter_1": 1,
                    "param1": 1,
                    "param_1": 2,
                    "parameter1": 1,
                    "source_address": 1,
                    "source_param": 1,
                    "unused_param": 1,
                    "unused_param1": 1,
                    "unused_parameter": 1,
                    "unused_parameter1": 1,
                    "var1": 1
                },
                "param_2": {
                    "arg2": 7,
                    "buffer_param": 1,
                    "data_param_2": 1,
                    "data_size": 1,
                    "destination_address": 1,
                    "destination_param": 1,
                    "input2": 3,
                    "input_2": 1,
                    "input_param_2": 4,
                    "input_parameter_2": 1,
                    "offset_ptr": 1,
                    "param2": 1,
                    "param_2": 2,
                    "parameter2": 1,
                    "unused_param": 1,
                    "unused_param2": 1,
                    "unused_parameter": 1,
                    "unused_parameter2": 1,
                    "var2": 1
                },
                "param_3": {
                    "arg3": 7,
                    "data": 2,
                    "data_param": 2,
                    "data_param_3": 1,
                    "data_to_process": 1,
                    "hex_string": 1,
                    "input3": 3,
                    "input_3": 1,
                    "input_data": 1,
                    "input_param_3": 4,
                    "input_parameter_3": 1,
                    "param3": 1,
                    "param_3": 2,
                    "parameter3": 1,
                    "size_param": 1,
                    "size_ptr": 1,
                    "var3": 1
                },
                "uStack_c": {
                    "data2": 6,
                    "data2_var": 1,
                    "data_2": 2,
                    "data_pointer": 1,
                    "data_pointer2": 1,
                    "data_ptr2": 2,
                    "data_ptr_2": 2,
                    "data_size": 1,
                    "data_value2": 1,
                    "destination_data": 3,
                    "extracted_data_2": 4,
                    "hex_value2": 1,
                    "offset": 1,
                    "processed_data": 1,
                    "stored_value_2": 1,
                    "value_2": 1,
                    "var2": 1,
                    "variable2": 1
                }
            },
            "called": [
                "FUN_08004300"
            ],
            "calling": [
                "FUN_0800411c"
            ],
            "code": "\n\n\nvoid extract_data_and_process_080043f0(undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  undefined4 data1;\n  undefined4 data2;\n  undefined4 data_array [2];\n  \n  data1 = _DAT_200013dd;\n  data2 = _DAT_200013e1;\n  data_array[0] = arg3;\n  FUN_08004300(0x68,&data1,8,data_array);\n  return;\n}\n\n",
            "current_name": "extract_data_and_process_080043f0",
            "entrypoint": "0x080043f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080043f0": "extract_data_and_process_080043f0",
                "auStack_8": "data_array",
                "local_10": "data1",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "uStack_c": "data2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004410": {
            "additional_data": {
                "FUN_08004300": {
                    "process_data_chunk": 1,
                    "send_data": 1
                },
                "FUN_08004410": {
                    "decompile_and_send_data": 1,
                    "decompiled_function": 1,
                    "execute_function": 1,
                    "extract_and_process_data": 2,
                    "extract_and_send_data": 2,
                    "extract_data": 1,
                    "initialize_and_call_function": 1,
                    "initialize_connection": 2,
                    "initialize_data": 8,
                    "initialize_data_and_call_function": 1,
                    "initialize_resource": 1,
                    "load_data_and_call_function": 1,
                    "process_data": 4,
                    "send_data": 1,
                    "send_data_packet": 1,
                    "send_data_to_server": 1
                },
                "local_10": {
                    "buf_address": 1,
                    "constant_value": 2,
                    "constant_value1": 1,
                    "constant_var": 1,
                    "data": 1,
                    "data1": 2,
                    "data_address": 4,
                    "data_constant": 3,
                    "data_pointer": 1,
                    "data_value": 4,
                    "data_variable": 1,
                    "default_data": 1,
                    "default_ip": 1,
                    "default_offset": 1,
                    "header_value": 1,
                    "initial_value": 1,
                    "initialized_data1": 1,
                    "local_var1": 1,
                    "resource_address": 1,
                    "server_ip": 1,
                    "value1": 1
                },
                "local_8": {
                    "stack_param": 1
                },
                "local_c": {
                    "address_with_data": 1,
                    "calculated_value": 1,
                    "combined_arg": 1,
                    "combined_data": 3,
                    "combined_input": 1,
                    "combined_param": 1,
                    "combined_value": 3,
                    "combined_var": 1,
                    "concatenated_data": 2,
                    "concatenated_flag": 1,
                    "concatenated_value": 6,
                    "connection_details": 1,
                    "data2": 2,
                    "initialized_data2": 1,
                    "local_var2": 1,
                    "modified_data": 2,
                    "modified_data_value": 1,
                    "source_port": 1,
                    "value2": 1
                },
                "param_1": {
                    "arg1": 11,
                    "data_offset": 1,
                    "data_start": 1,
                    "input1": 2,
                    "input_param": 1,
                    "packet_header": 1,
                    "param1": 2,
                    "port": 1,
                    "server_ip": 1,
                    "socket_handle": 1,
                    "unknown_param": 1,
                    "unknown_param_1": 1,
                    "unused": 1,
                    "unused1": 1,
                    "unused_param": 3,
                    "unused_parameter": 1,
                    "unused_parameter1": 1
                },
                "param_2": {
                    "address": 1,
                    "arg2": 11,
                    "data_address": 1,
                    "data_length": 1,
                    "data_offset": 1,
                    "data_param": 2,
                    "data_size": 1,
                    "data_value": 2,
                    "flag": 1,
                    "input2": 2,
                    "input_data": 1,
                    "packet_data": 1,
                    "param2": 2,
                    "server_port": 1,
                    "short_param": 1,
                    "source_address": 1,
                    "unknown_param_2": 1
                },
                "param_3": {
                    "arg3": 11,
                    "byte_param": 1,
                    "connection_type": 1,
                    "data": 4,
                    "data_length": 2,
                    "input3": 2,
                    "output_data": 1,
                    "packet_length": 1,
                    "param3": 2,
                    "payload_data": 1,
                    "stack_param": 2,
                    "timeout": 1,
                    "unknown_param_3": 1,
                    "unused2": 1
                },
                "uStack_8": {
                    "arg3_copy": 1,
                    "connection_status": 1,
                    "data": 2,
                    "data3": 2,
                    "data_length": 1,
                    "initialized_data3": 1,
                    "input3_copy": 1,
                    "local_var3": 1,
                    "param_value": 1,
                    "payload_length": 1,
                    "stack_data": 1,
                    "stack_value": 5,
                    "stack_var": 1,
                    "stack_variable": 6,
                    "timeout_value": 1,
                    "unused": 1,
                    "unused3": 1,
                    "unused_variable": 1,
                    "value3": 1
                }
            },
            "called": [
                "FUN_08004300"
            ],
            "calling": [
                "FUN_0800411c"
            ],
            "code": "\nvoid initialize_data_and_call_function_08004410(undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  undefined4 data_address;\n  undefined4 concatenated_value;\n  undefined4 stack_variable;\n  \n  data_address = DAT_20001395;\n  concatenated_value = CONCAT22((short)((uint)arg2 >> 0x10),DAT_20001399);\n  stack_variable = arg3;\n  FUN_08004300(0x6c,&data_address,6);\n  return;\n}\n\n",
            "current_name": "initialize_data_and_call_function_08004410",
            "entrypoint": "0x08004410",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004410": "initialize_data_and_call_function_08004410",
                "local_10": "data_address",
                "local_c": "concatenated_value",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "uStack_8": "stack_variable"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004434": {
            "additional_data": {
                "FUN_08004300": {
                    "send_data": 1,
                    "send_data_to_server": 1,
                    "transmit_data": 1
                },
                "FUN_08004434": {
                    "extract_data": 2,
                    "initialize_and_send_data": 1,
                    "initialize_connection": 2,
                    "initialize_data": 11,
                    "initialize_device": 1,
                    "perform_data_processing": 1,
                    "send_data": 8,
                    "send_data_to_server": 5
                },
                "local_10": {
                    "address_variable": 1,
                    "constant_data": 1,
                    "constant_value": 4,
                    "data": 2,
                    "data1": 4,
                    "data_buffer": 1,
                    "data_pointer": 3,
                    "data_ptr": 1,
                    "data_value": 1,
                    "default_address": 1,
                    "default_value": 1,
                    "device_address": 1,
                    "initial_value": 2,
                    "network_data": 1,
                    "server_address": 1,
                    "server_config": 1,
                    "server_msg": 1,
                    "source_address": 1
                },
                "local_c": {
                    "combined_address": 1,
                    "combined_data": 1,
                    "combined_value": 5,
                    "concat_data": 1,
                    "concatenated_data": 3,
                    "concatenated_msg": 1,
                    "concatenated_value": 4,
                    "concatenated_values": 1,
                    "concatenation_result": 1,
                    "config_value": 1,
                    "connection_settings": 1,
                    "data2": 4,
                    "data_config": 1,
                    "destination_address": 1,
                    "formatted_address": 1,
                    "modified_data": 1
                },
                "param_1": {
                    "arg1": 11,
                    "connection_type": 1,
                    "data1": 1,
                    "input": 1,
                    "network_param": 1,
                    "param1": 5,
                    "protocol": 1,
                    "server_address": 2,
                    "server_ip": 1,
                    "socket": 1,
                    "socket_descriptor": 1,
                    "source": 1,
                    "unused": 1,
                    "unused1": 1,
                    "unused_param": 2
                },
                "param_2": {
                    "address": 2,
                    "arg2": 11,
                    "connection_address": 1,
                    "data": 5,
                    "data1": 1,
                    "data2": 1,
                    "data_address": 1,
                    "data_offset": 1,
                    "data_param": 2,
                    "destination": 1,
                    "param2": 5
                },
                "param_3": {
                    "arg3": 11,
                    "connection_port": 1,
                    "data": 1,
                    "data2": 1,
                    "data3": 1,
                    "data_length": 3,
                    "data_size": 2,
                    "length": 1,
                    "length_param": 1,
                    "param3": 5,
                    "port": 1,
                    "size": 1,
                    "stack_param": 1,
                    "value": 1
                },
                "uStack_8": {
                    "additional_data": 1,
                    "data3": 5,
                    "data_pointer": 1,
                    "data_size": 1,
                    "input_data": 1,
                    "input_value": 2,
                    "param3_copy": 1,
                    "port": 1,
                    "received_data": 2,
                    "stack_data": 2,
                    "stack_param": 1,
                    "stack_value": 7,
                    "stack_variable": 1,
                    "user_parameter": 1,
                    "user_stack_data": 1
                }
            },
            "called": [
                "FUN_08004300"
            ],
            "calling": [
                "FUN_0800411c"
            ],
            "code": "\nvoid initialize_and_send_data_08004434(undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  undefined4 data1;\n  undefined4 combined_value;\n  undefined4 stack_value;\n  \n  data1 = DAT_200014ab;\n  combined_value = CONCAT22((short)((uint)arg2 >> 0x10),DAT_200014af);\n  stack_value = arg3;\n  FUN_08004300(0x6d,&data1,6);\n  return;\n}\n\n",
            "current_name": "initialize_and_send_data_08004434",
            "entrypoint": "0x08004434",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004434": "initialize_and_send_data_08004434",
                "local_10": "data1",
                "local_c": "combined_value",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "uStack_8": "stack_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004458": {
            "additional_data": {
                "FUN_08004300": {
                    "process_data": 3
                },
                "FUN_08004458": {
                    "copy_and_process_data": 6,
                    "decompiled_function": 1,
                    "extract_and_call": 1,
                    "rearrange_and_call_function": 1,
                    "reorder_and_call": 1,
                    "reorder_data": 2,
                    "reverse_and_copy": 1,
                    "reverse_and_copy_array": 1,
                    "reverse_and_copy_data": 10,
                    "reverse_and_load_data": 1,
                    "reverse_and_send_data": 1,
                    "update_array_and_call_function": 1
                },
                "local_24": {
                    "array2": 2,
                    "array_b": 1,
                    "array_of_indices": 1,
                    "array_of_values": 1,
                    "buffer": 2,
                    "byte_buffer": 1,
                    "data_array": 1,
                    "destination_array": 1,
                    "index_buffer": 3,
                    "input_array": 2,
                    "original_indexes": 1,
                    "short_array": 1,
                    "temp_array": 8,
                    "temp_array2": 1,
                    "temp_data": 2,
                    "temp_data_array2": 1,
                    "temporary_buffer": 2
                },
                "local_30": {
                    "array1": 2,
                    "array_a": 1,
                    "array_of_data": 1,
                    "array_of_values": 1,
                    "array_to_update": 1,
                    "code_array": 1,
                    "copied_data": 4,
                    "copy_array": 1,
                    "data": 1,
                    "data_array": 3,
                    "data_buffer": 4,
                    "destination_array": 3,
                    "original_data": 1,
                    "original_values": 1,
                    "output_array": 2,
                    "source_array": 1,
                    "temp_array": 1,
                    "temp_data": 1,
                    "temp_data_array": 1
                },
                "param_1": {
                    "code1": 1,
                    "input_param": 1,
                    "param1": 1,
                    "source_length": 1,
                    "value1": 1
                },
                "param_2": {
                    "byte_array": 1,
                    "data": 2,
                    "param2": 1,
                    "source_data": 1
                },
                "param_3": {
                    "code2": 1,
                    "destination_length": 1,
                    "length": 2,
                    "param3": 1
                },
                "puVar1": {
                    "copied_ptr1": 1,
                    "data_ptr": 1,
                    "dest": 1,
                    "dest_array": 1,
                    "dest_pointer": 1,
                    "dest_ptr": 5,
                    "destination": 4,
                    "destination_array": 2,
                    "destination_data": 1,
                    "destination_ptr": 3,
                    "original_array": 1,
                    "output_array": 1,
                    "output_pointer": 1,
                    "output_ptr": 1,
                    "source_pointer": 1,
                    "updated_array_ptr": 1
                },
                "puVar2": {
                    "destination_pointer": 1,
                    "input_array": 1,
                    "input_pointer": 1,
                    "input_ptr": 1,
                    "new_array": 1,
                    "original_array_ptr": 1,
                    "original_data_ptr": 1,
                    "source": 5,
                    "source_array": 2,
                    "source_ptr": 5,
                    "src_array": 1,
                    "src_pointer": 1,
                    "src_ptr": 5
                },
                "puVar4": {
                    "copied_ptr2": 1,
                    "current_dest": 1,
                    "current_destination_ptr": 1,
                    "dest_ptr": 3,
                    "dest_ptr_copy": 1,
                    "dest_ptr_next": 1,
                    "dest_ptr_temp": 1,
                    "dest_temp_ptr": 1,
                    "destination2": 1,
                    "destination_ptr": 2,
                    "destination_ptr_temp": 1,
                    "new_data_ptr": 1,
                    "new_dest_ptr": 1,
                    "output_array_end": 1,
                    "output_temp": 1,
                    "source_pointer_temp": 1,
                    "temp_array": 1,
                    "temp_dest_pointer": 1,
                    "temp_destination": 2,
                    "temp_ptr2": 2,
                    "updated_array_ptr2": 1
                },
                "puVar5": {
                    "current_source_ptr": 1,
                    "current_src": 1,
                    "destination_pointer_temp": 1,
                    "input_array_end": 1,
                    "input_temp": 1,
                    "new_source_ptr": 1,
                    "original_array_ptr2": 1,
                    "source2": 1,
                    "source_ptr": 2,
                    "source_ptr2": 2,
                    "source_ptr_temp": 1,
                    "src_ptr": 2,
                    "src_ptr_copy": 1,
                    "src_ptr_next": 1,
                    "src_ptr_temp": 1,
                    "src_temp_ptr": 1,
                    "temp_array2": 1,
                    "temp_data_ptr": 1,
                    "temp_ptr": 2,
                    "temp_source": 2,
                    "temp_src_pointer": 1
                },
                "uRam200013b3": {
                    "constant_value": 2,
                    "data_value": 1,
                    "new_value": 1,
                    "ram_variable": 1,
                    "temp_value2": 1,
                    "temp_var2": 1,
                    "unknown_data": 1
                },
                "uVar3": {
                    "temp": 5,
                    "temp_data": 1,
                    "temp_val": 1,
                    "temp_value": 14,
                    "temp_var": 4,
                    "temp_variable": 1
                }
            },
            "called": [
                "FUN_08004300"
            ],
            "calling": [
                "FUN_0800411c"
            ],
            "code": "\nvoid reverse_and_copy_data_08004458(void)\n\n{\n  undefined4 *dest_ptr;\n  undefined4 *src_ptr;\n  undefined4 temp_value;\n  undefined4 *dest_ptr;\n  undefined4 *source_ptr;\n  undefined4 copied_data [3];\n  undefined2 temp_array [10];\n  \n  dest_ptr = copied_data;\n  src_ptr = &DAT_2000139b;\n  do {\n    source_ptr = src_ptr;\n    dest_ptr = dest_ptr;\n    temp_value = source_ptr[1];\n    *dest_ptr = *source_ptr;\n    dest_ptr[1] = temp_value;\n    dest_ptr = dest_ptr + 2;\n    src_ptr = source_ptr + 2;\n  } while (source_ptr + 2 != (undefined4 *)0x200013b3);\n  dest_ptr[2] = constant_value;\n  *(undefined2 *)(dest_ptr + 3) = *(undefined2 *)(source_ptr + 3);\n  FUN_08004300(0x70,copied_data,0x1e);\n  return;\n}\n\n",
            "current_name": "reverse_and_copy_data_08004458",
            "entrypoint": "0x08004458",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004458": "reverse_and_copy_data_08004458",
                "local_24": "temp_array",
                "local_30": "copied_data",
                "puVar1": "dest_ptr",
                "puVar2": "src_ptr",
                "puVar4": "dest_ptr",
                "puVar5": "source_ptr",
                "uRam200013b3": "constant_value",
                "uVar3": "temp_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004490": {
            "additional_data": {
                "FUN_08001168": {
                    "thunk_timer_func": 1
                },
                "FUN_08001424": {
                    "access_memory": 1,
                    "execute_operation": 1,
                    "initialize_device": 1,
                    "initialize_memory": 12,
                    "send_data": 1,
                    "set_memory": 3,
                    "set_memory_range": 1,
                    "set_permission": 1,
                    "write_data": 1,
                    "write_data_to_memory": 1,
                    "write_to_memory": 1
                },
                "FUN_0800142e": {
                    "access_memory": 1,
                    "access_memory_range": 1,
                    "check_memory": 1,
                    "execute_sub_operation": 1,
                    "perform_operation": 1,
                    "process_memory": 7,
                    "read_data": 1,
                    "read_data_from_memory": 1,
                    "read_from_memory": 1,
                    "read_memory": 4,
                    "receive_data": 1,
                    "send_data": 2,
                    "send_to_device": 1,
                    "verify_memory": 1
                },
                "FUN_08004490": {
                    "check_error": 4,
                    "check_errors": 2,
                    "continuous_error_handling": 1,
                    "continuous_error_logging": 1,
                    "continuous_operation": 1,
                    "detect_error_and_retry": 1,
                    "error_checker": 1,
                    "error_handling_function": 1,
                    "error_handling_loop": 4,
                    "handle_error": 4,
                    "handle_error_loop": 3,
                    "main_loop": 1,
                    "perform_error_handling": 1,
                    "print_error_message": 1,
                    "process_error": 3,
                    "process_errors": 2
                },
                "FUN_08004c18": {
                    "print_char": 1,
                    "print_character": 2,
                    "print_line_break": 1,
                    "print_new_line": 13,
                    "print_newline": 7
                },
                "FUN_08004c8c": {
                    "print_error": 2,
                    "print_error_message": 16,
                    "print_string": 6
                },
                "FUN_08004cac": {
                    "print_error_line": 1,
                    "print_line": 1,
                    "print_line_number": 17,
                    "print_number": 5
                },
                "param_1": {
                    "element": 1,
                    "err_msg": 1,
                    "error_code": 2,
                    "error_description": 2,
                    "error_message": 11,
                    "error_name": 3,
                    "error_string": 4,
                    "error_type": 1,
                    "filename": 1,
                    "function_name": 2
                },
                "param_2": {
                    "error_line": 1,
                    "line_number": 26,
                    "size": 1
                },
                "param_3": {
                    "flag": 1
                },
                "thunk_FUNC_08001168": {
                    "delay": 5,
                    "delay_execution": 15,
                    "wait": 2,
                    "wait_delay": 1
                }
            },
            "called": [
                "FUN_08004c8c",
                "FUN_08004c18",
                "FUN_08001424",
                "FUN_08004cac",
                "FUN_0800142e",
                "thunk_FUN_08001168"
            ],
            "calling": [
                "FUN_080040b8",
                "FUN_08004514",
                "FUN_0800407c",
                "FUN_0800403c",
                "FUN_0800458c"
            ],
            "code": "\nvoid handle_error_loop_08004490(undefined4 error_message,undefined4 line_number)\n\n{\n  FUN_08001424(0x40011000,0x4000,1);\n  FUN_08001424(0x40011000,0x8000,0);\n  FUN_08001424(0x40011000,0x2000,0);\n  do {\n    FUN_0800142e(0x40011000,0x4000);\n    FUN_0800142e(0x40011000,0x8000);\n    FUN_0800142e(0x40011000,0x2000);\n    FUN_08004c8c(\"Error with \");\n    FUN_08004c8c(error_message);\n    FUN_08004c8c(\" at line: \");\n    FUN_08004cac(line_number);\n    FUN_08004c18(10);\n    thunk_FUNC_08001168(500);\n  } while( true );\n}\n\n",
            "current_name": "handle_error_loop_08004490",
            "entrypoint": "0x08004490",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004490": "handle_error_loop_08004490",
                "param_1": "error_message",
                "param_2": "line_number"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004514": {
            "additional_data": {
                "FUN_08001194": {
                    "function_g": 1,
                    "initialize": 1,
                    "initialize_components": 1,
                    "initialize_device": 1,
                    "initialize_system": 3,
                    "log_error": 1,
                    "perform_action": 1,
                    "perform_operation": 1,
                    "reset": 1,
                    "reset_system": 2
                },
                "FUN_08001214": {
                    "calculate_time": 1,
                    "convert_time_to_seconds": 1,
                    "convert_to_milliseconds": 3,
                    "convert_to_seconds": 1,
                    "delay_milliseconds": 1,
                    "function_e": 1,
                    "print_time": 1,
                    "print_timestamp": 1,
                    "print_value": 1,
                    "process_time": 1,
                    "send_value": 1
                },
                "FUN_08001240": {
                    "do_action": 1,
                    "function_f": 1,
                    "print_message": 1,
                    "set_flag": 3,
                    "set_mode": 2,
                    "set_output": 2,
                    "set_priority": 1,
                    "write_data": 1
                },
                "FUN_08001b58": {
                    "check_config_parameters": 1,
                    "check_data": 1,
                    "check_files": 1,
                    "check_initialization": 1,
                    "check_input": 1,
                    "check_params": 1,
                    "check_status": 1,
                    "configure_peripherals": 1,
                    "function_a": 1,
                    "initialize_system": 1,
                    "process_input_data": 1,
                    "process_peripheral_data": 1,
                    "setup_peripheral": 1
                },
                "FUN_0800209c": {
                    "configure_peripheral": 3,
                    "function_c": 1,
                    "perform_action": 1,
                    "perform_operation": 2,
                    "process_data": 4,
                    "process_result": 1,
                    "update_values": 1
                },
                "FUN_08002214": {
                    "function_d": 1,
                    "get_current_time": 1,
                    "get_data": 1,
                    "get_device_info": 1,
                    "get_something": 1,
                    "get_system_time": 2,
                    "get_time": 2,
                    "get_timestamp": 3,
                    "get_value": 1
                },
                "FUN_08004490": {
                    "check_file_existence": 1,
                    "find_file": 1,
                    "find_peripheral": 1,
                    "function_b": 1,
                    "load_file": 1,
                    "load_source": 1,
                    "process_file": 1,
                    "read_file": 2,
                    "search_file": 4
                },
                "FUN_08004514": {
                    "initialization_and_processing": 1,
                    "initialize_and_process": 2,
                    "initialize_device": 1,
                    "initialize_peripheral": 9,
                    "initialize_peripheral_function": 1,
                    "initialize_peripherals": 12,
                    "initialize_system": 3,
                    "process_peripheral_data": 2
                },
                "iVar1": {
                    "check_result": 1,
                    "error_code": 1,
                    "file_result": 1,
                    "peripheral_data": 1,
                    "result": 11,
                    "result1": 1,
                    "result_a": 1,
                    "return_value": 4,
                    "status": 5
                },
                "iVar4": {
                    "count": 2,
                    "counter": 12,
                    "i_var3": 1,
                    "index": 1,
                    "loop_counter": 4,
                    "peripheral_config": 1,
                    "peripheral_status": 1,
                    "result2": 1,
                    "result_b": 1,
                    "value": 1
                },
                "local_10": {
                    "constant4": 6,
                    "constant6": 1,
                    "constant_4": 2,
                    "default_setting2": 1,
                    "flag4": 5,
                    "initial_value4": 1,
                    "local_var4": 1,
                    "num4": 2,
                    "option4": 1,
                    "start_index": 1,
                    "value4": 3,
                    "var4": 2,
                    "var_10": 1,
                    "zero": 1
                },
                "local_14": {
                    "additional_setting": 1,
                    "constant3": 6,
                    "constant5": 1,
                    "constant_3": 2,
                    "counter": 1,
                    "flag3": 5,
                    "initial_value3": 1,
                    "local_var3": 1,
                    "num3": 2,
                    "option3": 1,
                    "two": 1,
                    "value3": 3,
                    "var3": 2,
                    "var_14": 1
                },
                "local_1c": {
                    "constant2": 6,
                    "constant4": 1,
                    "constant_2": 2,
                    "counter": 1,
                    "file_limit": 1,
                    "flag2": 5,
                    "initial_value2": 1,
                    "local_var2": 1,
                    "num2": 2,
                    "option2": 1,
                    "setting_size": 1,
                    "sixteen": 1,
                    "value2": 3,
                    "var2": 2,
                    "var_1c": 1
                },
                "local_20": {
                    "constant1": 6,
                    "constant3": 1,
                    "constant_1": 2,
                    "default_setting": 1,
                    "enable_flag": 1,
                    "flag1": 5,
                    "initial_value1": 1,
                    "local_var1": 1,
                    "num1": 2,
                    "one": 1,
                    "option1": 1,
                    "value1": 3,
                    "var1": 2,
                    "var_20": 1
                },
                "local_30": {
                    "array": 8,
                    "buffer_array": 1,
                    "config": 1,
                    "config_parameters": 1,
                    "copy_array": 1,
                    "data": 1,
                    "file_indices": 1,
                    "file_names": 1,
                    "local_array": 3,
                    "param1_array": 1,
                    "param6": 1,
                    "param_array": 2,
                    "parameters": 1,
                    "params": 3,
                    "peripheral_list": 1,
                    "peripheral_settings": 1,
                    "values_array": 1
                },
                "local_34": {
                    "another_copy": 1,
                    "buffer_length": 1,
                    "buffer_size2": 1,
                    "file_size": 2,
                    "i_var2": 1,
                    "i_var7": 1,
                    "output_b": 1,
                    "param4": 1,
                    "param5": 3,
                    "parameter5": 1,
                    "parameter_5": 1,
                    "read_result": 1,
                    "result": 1,
                    "temp_result": 1,
                    "value": 1,
                    "value5": 4,
                    "var3": 3,
                    "var4": 1,
                    "var_34": 1,
                    "variable3": 1
                },
                "local_38": {
                    "buffer_size": 5,
                    "buffer_size1": 1,
                    "constant2": 1,
                    "flag": 1,
                    "flag2": 1,
                    "input_b": 1,
                    "param2": 2,
                    "param3": 1,
                    "param4": 3,
                    "parameter2": 1,
                    "parameter4": 1,
                    "parameter_4": 1,
                    "size": 4,
                    "value4": 4,
                    "var2": 1,
                    "var3": 1
                },
                "local_3c": {
                    "file_result": 1,
                    "file_status": 1,
                    "i_var1_copy": 1,
                    "i_var6": 1,
                    "loop_counter2": 1,
                    "output_a": 1,
                    "param1": 1,
                    "param2": 1,
                    "param3": 3,
                    "parameter2": 1,
                    "parameter3": 1,
                    "parameter_3": 1,
                    "result": 3,
                    "value": 1,
                    "value3": 4,
                    "var1": 1,
                    "var2": 3,
                    "variable2": 1
                },
                "local_40": {
                    "count": 1,
                    "counter": 2,
                    "i_var": 1,
                    "i_var5": 1,
                    "index": 1,
                    "iterator": 1,
                    "loop_counter1": 1,
                    "param1": 1,
                    "param2": 4,
                    "parameter1": 1,
                    "parameter2": 1,
                    "parameter_2": 1,
                    "peripheral_index": 1,
                    "some_value": 1,
                    "value2": 4,
                    "var1": 3,
                    "variable1": 1
                },
                "local_44": {
                    "buffer_size": 1,
                    "channel": 1,
                    "constant1": 1,
                    "device_type": 1,
                    "flag": 2,
                    "flag1": 1,
                    "input_a": 1,
                    "mask": 3,
                    "offset": 1,
                    "param1": 5,
                    "parameter1": 2,
                    "parameter_1": 1,
                    "register_value": 1,
                    "timeout": 3,
                    "value1": 4
                },
                "local_c": {
                    "base_address": 2,
                    "constant": 3,
                    "constant5": 6,
                    "constant7": 1,
                    "constant_5": 2,
                    "flag5": 2,
                    "initial_value5": 1,
                    "local_var5": 1,
                    "memory_address": 1,
                    "num5": 2,
                    "option5": 1,
                    "value5": 3,
                    "var5": 2,
                    "var_c": 1
                },
                "param_1": {
                    "flag_value": 1,
                    "new_param1": 1,
                    "param1": 1
                },
                "param_2": {
                    "new_param2": 1,
                    "param2": 1,
                    "param_2": 1
                },
                "param_3": {
                    "param3": 1,
                    "param_3": 1
                },
                "requiredResources": {
                    "resources": 1
                },
                "uVar2": {
                    "current_time": 1,
                    "division_result": 2,
                    "milliseconds": 2,
                    "result": 1,
                    "result_c": 1,
                    "system_time": 2,
                    "time": 10,
                    "time_in_ms": 1,
                    "time_in_seconds": 1,
                    "time_result": 1,
                    "timestamp": 1,
                    "u_return_value": 1,
                    "value": 1,
                    "value7": 1
                },
                "uVar3": {
                    "constant": 1,
                    "constant6": 1,
                    "constant_6": 1,
                    "count": 1,
                    "counter": 1,
                    "file_descriptor": 1,
                    "file_index": 9,
                    "filename": 1,
                    "filename_constant": 1,
                    "iteration_index": 1,
                    "loop_counter": 2,
                    "loop_var": 1,
                    "param": 2,
                    "value": 2,
                    "value6": 1
                }
            },
            "called": [
                "FUN_08001194",
                "FUN_08001b58",
                "FUN_08001240",
                "FUN_08002214",
                "FUN_08001214",
                "FUN_08004490",
                "FUN_0800209c"
            ],
            "calling": [
                "FUN_0800458c"
            ],
            "code": "\nvoid initialize_peripherals_08004514(void)\n\n{\n  int result;\n  uint time;\n  undefined4 file_index;\n  int counter;\n  undefined4 param1;\n  int value2;\n  int value3;\n  undefined4 buffer_size;\n  int value5;\n  undefined4 array [4];\n  undefined4 constant1;\n  undefined4 constant2;\n  undefined4 constant3;\n  undefined4 constant4;\n  undefined4 constant5;\n  \n  constant1 = 1;\n  constant2 = 0x10;\n  counter = 2;\n  constant4 = 0;\n  array[0] = 2;\n  constant3 = 2;\n  constant5 = 0x380000;\n  result = FUN_08001b58(array);\n  if (result == 0) goto LAB_08004540;\n  file_index = 0x3c;\n  while( true ) {\n    result = FUN_08004490(\"../Src/peripherals.c\",file_index);\nLAB_08004540:\n    param1 = 0xf;\n    buffer_size = 0x400;\n    value2 = counter;\n    value3 = result;\n    value5 = result;\n    counter = FUN_0800209c(&param1,counter);\n    if (counter == 0) break;\n    file_index = 0x49;\n  }\n  time = FUN_08002214();\n  FUN_08001214(time / 1000);\n  FUN_08001240(4);\n  FUN_08001194(0xffffffff,0,0);\n  return;\n}\n\n",
            "current_name": "initialize_peripherals_08004514",
            "entrypoint": "0x08004514",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004514": "initialize_peripherals_08004514",
                "iVar1": "result",
                "iVar4": "counter",
                "local_10": "constant4",
                "local_14": "constant3",
                "local_1c": "constant2",
                "local_20": "constant1",
                "local_30": "array",
                "local_34": "value5",
                "local_38": "buffer_size",
                "local_3c": "value3",
                "local_40": "value2",
                "local_44": "param1",
                "local_c": "constant5",
                "uVar2": "time",
                "uVar3": "file_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800458c": {
            "additional_data": {
                "FUN_08001128": {
                    "initialize": 2,
                    "initialize_board": 1,
                    "initialize_component1": 1,
                    "initialize_components": 1,
                    "initialize_function": 1,
                    "initialize_hardware": 1,
                    "initialize_memory": 1,
                    "initialize_processor": 1,
                    "initialize_some_part": 1,
                    "initialize_system": 2
                },
                "FUN_08001264": {
                    "configure_memory": 1,
                    "configure_peripheral": 1,
                    "configure_peripheral1": 2,
                    "get_store_address": 1,
                    "initialize_component5": 1,
                    "initialize_memory1": 1,
                    "set_peripheral_register": 1,
                    "set_register": 1,
                    "set_register_value": 1,
                    "set_timer_configuration": 1,
                    "setup_timer": 1
                },
                "FUN_08001424": {
                    "configure_gpio": 1,
                    "configure_memory": 2,
                    "configure_peripheral": 1,
                    "configure_peripheral2": 2,
                    "configure_pin": 1,
                    "configure_register": 1,
                    "initialize_component3": 1,
                    "initialize_memory2": 1,
                    "set_peripheral_config": 1,
                    "wait_for_event": 1
                },
                "FUN_08001754": {
                    "check_if_initialized": 1,
                    "check_initial_condition": 1,
                    "check_initialization": 1,
                    "check_memory": 1,
                    "check_status": 1,
                    "check_status4": 1,
                    "initialize_communication": 2,
                    "initialize_component6": 1,
                    "initialize_resources": 1,
                    "initialize_settings": 1,
                    "initialize_system": 1
                },
                "FUN_080023d0": {
                    "initialize_component": 1,
                    "initialize_component9": 1,
                    "initialize_data": 1,
                    "initialize_data1": 1,
                    "initialize_peripheral": 1,
                    "initialize_peripheral1": 1
                },
                "FUN_0800245c": {
                    "configure_component": 1,
                    "configure_data": 1,
                    "configure_device": 1,
                    "initialize_component11": 1,
                    "initialize_misc1": 1,
                    "perform_operation3": 1,
                    "set_options": 1,
                    "set_parameters": 1,
                    "write_data": 3,
                    "write_to_peripheral": 1
                },
                "FUN_08002564": {
                    "check_status3": 1,
                    "initialize_component10": 1,
                    "initialize_process3": 1,
                    "parse_data": 1,
                    "process_data": 2,
                    "process_memory": 1,
                    "receive_data": 1,
                    "write_data": 3
                },
                "FUN_080025a4": {
                    "check_status1": 1,
                    "get_data_from_peripheral": 1,
                    "initialize_component8": 1,
                    "initialize_process1": 1,
                    "perform_operation1": 1,
                    "process_data": 1,
                    "read_data": 6
                },
                "FUN_08002724": {
                    "check_connection": 1,
                    "check_data": 2,
                    "check_status": 3,
                    "check_status2": 1,
                    "initialize_component7": 1,
                    "initialize_device": 1,
                    "initialize_process2": 1,
                    "perform_operation2": 1,
                    "validate_data": 1
                },
                "FUN_08004490": {
                    "check_file_path": 1,
                    "find_file": 5,
                    "initialize_component4": 1,
                    "load_file": 1,
                    "open_file": 2,
                    "read_file": 1,
                    "search_file": 1
                },
                "FUN_08004514": {
                    "configure_interrupts": 2,
                    "configure_peripheral": 1,
                    "initialize_communication": 1,
                    "initialize_component2": 1,
                    "initialize_data2": 1,
                    "initialize_other_part": 1,
                    "initialize_peripheral2": 1,
                    "initialize_peripherals": 1,
                    "initialize_system": 1,
                    "initialize_timer": 1,
                    "set_peripheral_registers": 1
                },
                "FUN_0800458c": {
                    "initialize_communication": 1,
                    "initialize_device": 1,
                    "initialize_hardware": 3,
                    "initialize_peripheral": 7,
                    "initialize_peripheral_components": 1,
                    "initialize_peripheral_devices": 1,
                    "initialize_peripherals": 11,
                    "initialize_system": 4
                },
                "FUN_08004e14": {
                    "cleanup": 5,
                    "cleanup_data": 1,
                    "cleanup_resources": 1,
                    "close_communication": 1,
                    "close_file": 1,
                    "finalize_component": 1,
                    "finalize_peripheral": 1,
                    "initialize_misc2": 1
                },
                "F_UNK_0800458c": {
                    "initialize_peripherals": 1
                },
                "_DAT_40021018": {
                    "register": 1
                },
                "iVar1": {
                    "result": 17,
                    "return_value": 2,
                    "status": 1
                },
                "iVar3": {
                    "constant": 1,
                    "constant1": 1,
                    "constant2": 1,
                    "count": 3,
                    "counter": 5,
                    "iteration": 1,
                    "length": 1,
                    "loop_counter": 3,
                    "loop_index": 1,
                    "value": 4
                },
                "local_1c": {
                    "end_address": 1,
                    "local_var15": 2,
                    "local_variable15": 1,
                    "param10": 1,
                    "temp15": 1,
                    "temp_var15": 1,
                    "value15": 4,
                    "var15": 7,
                    "var_1c": 2,
                    "variable15": 3
                },
                "local_20": {
                    "constant": 2,
                    "local_var14": 2,
                    "local_variable14": 1,
                    "param9": 1,
                    "sector_count": 1,
                    "temp14": 1,
                    "temp_var14": 1,
                    "value14": 4,
                    "var14": 7,
                    "variable14": 3
                },
                "local_24": {
                    "block_size": 1,
                    "local_var13": 2,
                    "local_variable13": 1,
                    "temp13": 1,
                    "temp_var13": 1,
                    "value13": 4,
                    "value5": 1,
                    "var13": 7,
                    "var_24": 2,
                    "variable13": 3
                },
                "local_28": {
                    "local_var12": 2,
                    "local_variable12": 1,
                    "sector_size": 1,
                    "temp12": 1,
                    "temp_var12": 1,
                    "value12": 4,
                    "value4": 1,
                    "var12": 7,
                    "var_28": 2,
                    "variable12": 3
                },
                "local_2c": {
                    "byte_address": 1,
                    "local_var11": 2,
                    "local_variable11": 1,
                    "temp11": 1,
                    "temp_var11": 1,
                    "value11": 4,
                    "value3": 1,
                    "var11": 7,
                    "var_2c": 2,
                    "variable11": 3
                },
                "local_30": {
                    "increment": 1,
                    "local_var10": 2,
                    "local_variable10": 1,
                    "temp10": 1,
                    "temp_var10": 1,
                    "value10": 4,
                    "value2": 1,
                    "var10": 7,
                    "var_30": 2,
                    "variable10": 3
                },
                "local_34": {
                    "local_var9": 2,
                    "local_variable9": 1,
                    "start_address": 1,
                    "temp9": 1,
                    "temp_var9": 1,
                    "value1": 1,
                    "value9": 4,
                    "var9": 7,
                    "var_34": 2,
                    "variable9": 3
                },
                "local_38": {
                    "local_var8": 2,
                    "local_variable8": 1,
                    "param8": 1,
                    "retry_delay": 1,
                    "temp8": 1,
                    "temp_var8": 1,
                    "value8": 4,
                    "var8": 7,
                    "var_38": 2,
                    "variable8": 3
                },
                "local_3c": {
                    "local_var7": 2,
                    "local_variable7": 1,
                    "param7": 1,
                    "retry_count": 1,
                    "temp7": 1,
                    "temp_var7": 1,
                    "value7": 4,
                    "var7": 7,
                    "var_3c": 2,
                    "variable7": 3
                },
                "local_40": {
                    "local_var6": 2,
                    "local_variable6": 1,
                    "param6": 1,
                    "temp6": 1,
                    "temp_var6": 1,
                    "timeout": 1,
                    "value6": 4,
                    "var6": 7,
                    "var_40": 2,
                    "variable6": 3
                },
                "local_48": {
                    "length": 1,
                    "local_var5": 2,
                    "local_variable5": 1,
                    "param5": 1,
                    "temp5": 1,
                    "temp_var5": 1,
                    "value5": 4,
                    "var5": 7,
                    "var_48": 2,
                    "variable5": 3
                },
                "local_4c": {
                    "local_var4": 2,
                    "local_variable4": 1,
                    "offset": 1,
                    "param4": 1,
                    "temp4": 1,
                    "temp_var4": 1,
                    "value4": 4,
                    "var4": 7,
                    "var_4c": 2,
                    "variable4": 3
                },
                "local_50": {
                    "local_var3": 2,
                    "local_variable3": 1,
                    "param3": 1,
                    "status": 1,
                    "temp3": 1,
                    "temp_var3": 1,
                    "value3": 4,
                    "var3": 7,
                    "var_50": 2,
                    "variable3": 3
                },
                "local_54": {
                    "data_size": 1,
                    "local_var2": 2,
                    "local_variable2": 1,
                    "param2": 1,
                    "temp2": 1,
                    "temp_var2": 1,
                    "value2": 4,
                    "var2": 7,
                    "var_54": 2,
                    "variable2": 3
                },
                "local_58": {
                    "buffer_size": 1,
                    "local_var1": 2,
                    "local_variable1": 1,
                    "param1": 1,
                    "temp1": 1,
                    "temp_var1": 1,
                    "value1": 4,
                    "var1": 7,
                    "var_58": 2,
                    "variable1": 3
                },
                "uVar2": {
                    "constant": 8,
                    "constant_value": 1,
                    "counter": 1,
                    "error_value": 1,
                    "index": 2,
                    "iterator": 1,
                    "loop_counter": 1,
                    "loop_var": 1,
                    "offset": 1,
                    "parameter": 1,
                    "value": 2
                }
            },
            "called": [
                "FUN_080023d0",
                "FUN_08004514",
                "FUN_08001264",
                "FUN_08001424",
                "FUN_08004490",
                "FUN_080025a4",
                "FUN_08002724",
                "FUN_08002564",
                "FUN_08001754",
                "FUN_0800245c",
                "FUN_08004e14",
                "FUN_08001128"
            ],
            "calling": [
                "FUN_08004028"
            ],
            "code": "\n\n\nvoid initialize_peripherals_0800458c(void)\n\n{\n  int result;\n  undefined4 constant;\n  int counter;\n  int var1;\n  int var2;\n  int var3;\n  int var4;\n  int var5;\n  int var6;\n  int var7;\n  int var8;\n  int var9;\n  int var10;\n  int var11;\n  int var12;\n  int var13;\n  undefined4 var14;\n  int var15;\n  \n  FUN_08001128();\n  FUN_08004514();\n  counter = 2;\n  _DAT_40021018 = _DAT_40021018 | 0x1c;\n  FUN_08001424(0x40011000,0xe000,0,_DAT_40021018 & 8);\n  FUN_08001424(0x40010800,0x20,0);\n  var9 = 0xe000;\n  var10 = 1;\n  var12 = 2;\n  FUN_08001264(0x40011000,&var9);\n  var9 = 0x20;\n  var10 = 1;\n  var12 = 2;\n  FUN_08001264(0x40010800,&var9);\n  DAT_20001504 = 0x40005400;\n  DAT_20001508 = 400000;\n  DAT_20001514 = 0x4000;\n  DAT_2000150c = 0;\n  DAT_20001510 = 0;\n  DAT_20001518 = 0;\n  DAT_2000151c = 0;\n  DAT_20001520 = 0;\n  DAT_20001524 = 0;\n  result = FUN_08001754();\n  if (result == 0) goto LAB_0800463a;\n  constant = 0x6b;\n  while( true ) {\n    while( true ) {\n      while( true ) {\n        while( true ) {\n          while( true ) {\n            while( true ) {\n              while( true ) {\n                while( true ) {\n                  while( true ) {\n                    while( true ) {\n                      while( true ) {\n                        while( true ) {\n                          while( true ) {\n                            while( true ) {\n                              while( true ) {\n                                while( true ) {\n                                  result = FUN_08004490(\"../Src/peripherals.c\",constant);\nLAB_0800463a:\n                                  DAT_2000157c = 0x40013800;\n                                  DAT_20001580 = 0x1c200;\n                                  DAT_20001590 = 0xc;\n                                  DAT_20001584 = result;\n                                  DAT_20001588 = result;\n                                  DAT_2000158c = result;\n                                  DAT_20001594 = result;\n                                  DAT_20001598 = result;\n                                  result = FUN_08002724(&DAT_2000157c);\n                                  if (result == 0) break;\n                                  constant = 0x151;\n                                }\n                                DAT_200015bc = 0x40012c00;\n                                DAT_200015c8 = 1000;\n                                DAT_200015c0 = counter;\n                                DAT_200015c4 = result;\n                                DAT_200015cc = result;\n                                DAT_200015d0 = result;\n                                result = FUN_080023d0(&DAT_200015bc);\n                                if (result == 0) break;\n                                constant = 0x88;\n                              }\n                              var1 = result;\n                              var2 = result;\n                              result = FUN_080025a4(&DAT_200015bc,&var1);\n                              if (result == 0) break;\n                              constant = 0x8f;\n                            }\n                            var3 = 0x60;\n                            var4 = result;\n                            var5 = result;\n                            var6 = result;\n                            var7 = result;\n                            var8 = result;\n                            result = FUN_0800245c(&DAT_200015bc,&var3,0xc);\n                            if (result == 0) break;\n                            constant = 0x9a;\n                          }\n                          var14 = 0x2000;\n                          var9 = result;\n                          var10 = result;\n                          var11 = result;\n                          var12 = result;\n                          var13 = result;\n                          var15 = result;\n                          result = FUN_08002564(&DAT_200015bc,&var9);\n                          if (result == 0) break;\n                          constant = 0xa6;\n                        }\n                        FUN_08004e14(&DAT_200015bc);\n                        DAT_200015f8 = 0x40000000;\n                        DAT_20001604 = 1000;\n                        DAT_200015fc = counter;\n                        DAT_20001600 = result;\n                        DAT_20001608 = result;\n                        result = FUN_080023d0(&DAT_200015f8);\n                        if (result == 0) break;\n                        constant = 0xc3;\n                      }\n                      var3 = result;\n                      var4 = result;\n                      result = FUN_080025a4(&DAT_200015f8,&var3);\n                      if (result == 0) break;\n                      constant = 0xca;\n                    }\n                    var9 = 0x60;\n                    var10 = result;\n                    var11 = result;\n                    var13 = result;\n                    result = FUN_0800245c(&DAT_200015f8,&var9,4);\n                    if (result == 0) break;\n                    constant = 0xd3;\n                  }\n                  FUN_08004e14(&DAT_200015f8);\n                  DAT_2000154c = 1000;\n                  DAT_20001540 = 0x40000400;\n                  DAT_20001544 = counter;\n                  DAT_20001548 = result;\n                  DAT_20001550 = result;\n                  result = FUN_080023d0();\n                  if (result == 0) break;\n                  constant = 0xf0;\n                }\n                var3 = 0;\n                var4 = 0;\n                result = FUN_080025a4(&DAT_20001540,&var3);\n                if (result == 0) break;\n                constant = 0xf7;\n              }\n              var9 = 0x60;\n              var10 = result;\n              var11 = result;\n              var13 = result;\n              result = FUN_0800245c(&DAT_20001540,&var9,8);\n              if (result == 0) break;\n              constant = 0x100;\n            }\n            counter = FUN_0800245c(&DAT_20001540,&var9,0xc);\n            if (counter == 0) break;\n            constant = 0x105;\n          }\n          FUN_08004e14(&DAT_20001540);\n          DAT_200014c8 = 0x40000800;\n          DAT_200014cc = 2;\n          DAT_200014d4 = 1000;\n          DAT_200014d0 = counter;\n          DAT_200014d8 = counter;\n          result = FUN_080023d0(&DAT_200014c8);\n          if (result == 0) break;\n          constant = 0x122;\n        }\n        var3 = result;\n        var4 = result;\n        result = FUN_080025a4(&DAT_200014c8,&var3);\n        if (result == 0) break;\n        constant = 0x129;\n      }\n      var9 = 0x60;\n      var10 = result;\n      var11 = result;\n      var13 = result;\n      result = FUN_0800245c(&DAT_200014c8,&var9,8);\n      if (result == 0) break;\n      constant = 0x132;\n    }\n    result = FUN_0800245c(&DAT_200014c8,&var9,0xc);\n    if (result == 0) break;\n    constant = 0x137;\n  }\n  FUN_08004e14(&DAT_200014c8);\n  return;\n}\n\n",
            "current_name": "initialize_peripherals_0800458c",
            "entrypoint": "0x0800458c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800458c": "initialize_peripherals_0800458c",
                "iVar1": "result",
                "iVar3": "counter",
                "local_1c": "var15",
                "local_20": "var14",
                "local_24": "var13",
                "local_28": "var12",
                "local_2c": "var11",
                "local_30": "var10",
                "local_34": "var9",
                "local_38": "var8",
                "local_3c": "var7",
                "local_40": "var6",
                "local_48": "var5",
                "local_4c": "var4",
                "local_50": "var3",
                "local_54": "var2",
                "local_58": "var1",
                "uVar2": "constant"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800483c": {
            "additional_data": {
                "0x43340000": {
                    "constant1": 1
                },
                "0x43b40000": {
                    "constant3": 1
                },
                "0xc3340000": {
                    "constant2": 1
                },
                "0xc3fa0000": {
                    "constant4": 1
                },
                "3": {
                    "constant": 1
                },
                "FUN_08000ad8": {
                    "calculate_value": 1
                },
                "FUN_08000adc": {
                    "calculate_result": 1
                },
                "FUN_08000c44": {
                    "calculate_value2": 1
                },
                "FUN_08000cec": {
                    "calculate_value1": 1
                },
                "FUN_08000e54": {
                    "calculate_result1": 1
                },
                "FUN_08001028": {
                    "check_condition2": 1
                },
                "FUN_08001064": {
                    "check_condition1": 1
                },
                "FUN_0800483c": {
                    "calculate_parameters": 1,
                    "calculate_values": 2,
                    "extract_and_process_values": 1,
                    "initialize_data": 1,
                    "perform_calculation": 1,
                    "perform_operation": 1,
                    "process_data": 15,
                    "update_param_array": 1
                },
                "iVar3": {
                    "array_value1": 1,
                    "count": 1,
                    "param3": 1,
                    "result3": 1,
                    "temp_var1": 1,
                    "temp_var2": 1,
                    "val1": 1,
                    "value1": 10,
                    "value2": 3,
                    "value3": 3,
                    "var1": 2,
                    "var3": 2,
                    "variable3": 3,
                    "variable_1": 1
                },
                "iVar4": {
                    "array_value2": 1,
                    "result": 2,
                    "result1": 2,
                    "temp_var": 1,
                    "temp_var2": 1,
                    "val2": 1,
                    "value1": 4,
                    "value2": 10,
                    "value4": 2,
                    "var2": 1,
                    "var4": 2,
                    "variable4": 3,
                    "variable_2": 1
                },
                "iVar5": {
                    "array_value3": 1,
                    "result2": 1,
                    "result4": 1,
                    "temp_var3": 2,
                    "val3": 1,
                    "value": 1,
                    "value3": 13,
                    "value4": 1,
                    "value5": 2,
                    "var2": 1,
                    "var3": 1,
                    "var5": 2,
                    "variable5": 3,
                    "variable_3": 1
                },
                "param_1": {
                    "array": 5,
                    "data": 11,
                    "input_array": 10,
                    "input_params": 1,
                    "param_array": 1,
                    "parameters": 2,
                    "params": 1
                },
                "uVar1": {
                    "result1": 25,
                    "result2": 1,
                    "result_1": 1,
                    "return_value1": 1,
                    "temp1": 2,
                    "value2": 1
                },
                "uVar2": {
                    "result2": 23,
                    "result_2": 1,
                    "return_value2": 1,
                    "temp2": 2
                }
            },
            "called": [
                "FUN_08000cec",
                "FUN_08000ad8",
                "FUN_08001028",
                "FUN_08001064",
                "FUN_08000adc",
                "FUN_08000c44",
                "FUN_08000e54"
            ],
            "calling": [
                "FUN_08004a84"
            ],
            "code": "\nvoid process_data_0800483c(int *data)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  int value1;\n  int value2;\n  int value3;\n  \n  value2 = data[0xc];\n  result1 = FUN_08000adc(data[7],data[9]);\n  value2 = FUN_08000ad8(result1,value2);\n  data[10] = value2;\n  if (*data == 3) {\n    value2 = FUN_08001064(data[10],0);\n    if (value2 == 0) {\n      value2 = FUN_08001028(data[10],0xc3340000);\n    }\n    else {\n      value2 = FUN_08001064(data[10],0x43340000);\n    }\n    if (value2 != 0) {\n      value3 = data[10];\n      result1 = FUN_08000cec(data[10],0x43b40000);\n      value2 = FUN_08001064(data[10],0);\n      value1 = data[10];\n      if (value2 == 0) {\n        value1 = value1 + -0x80000000;\n      }\n      result1 = FUN_08000e54(result1,value1);\n      value2 = FUN_08000ad8(value3,result1);\n      data[10] = value2;\n    }\n  }\n  value3 = data[2];\n  value1 = data[3];\n  value2 = FUN_08000cec(data[1],data[10]);\n  data[0xe] = value2;\n  value2 = FUN_08000adc(data[10],data[0xf]);\n  data[0xf] = value2;\n  value2 = FUN_08001028(data[0xf],0xc3fa0000);\n  if (value2 == 0) {\n    value2 = FUN_08001064(data[0xf],0x43fa0000);\n    if (value2 == 0) {\n      value2 = data[0xf];\n    }\n    else {\n      value2 = 0x43fa0000;\n    }\n  }\n  else {\n    value2 = -0x3c060000;\n  }\n  data[0xf] = value2;\n  value2 = FUN_08000ad8(data[0xc],data[0xd]);\n  data[0x10] = value2;\n  value2 = data[0xe];\n  result1 = FUN_08000cec(value3,data[0xf]);\n  result1 = FUN_08000adc(result1,value2);\n  result2 = FUN_08000cec(value1,data[0x10]);\n  value2 = FUN_08000ad8(result1,result2);\n  data[0x12] = value2;\n  result1 = FUN_08000c44(data[0x13]);\n  value2 = FUN_08001028(data[0x12],0xc3fa0000);\n  if (value2 == 0) {\n    value2 = FUN_08001064(data[0x12],0x43fa0000);\n    if (value2 == 0) {\n      value2 = data[0x12];\n    }\n    else {\n      value2 = 0x43fa0000;\n    }\n  }\n  else {\n    value2 = -0x3c060000;\n  }\n  value2 = FUN_08000cec(value2,result1);\n  data[0x12] = value2;\n  data[0xd] = data[0xc];\n  data[0xb] = data[10];\n  data[0x15] = data[0x14];\n  return;\n}\n\n",
            "current_name": "process_data_0800483c",
            "entrypoint": "0x0800483c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800483c": "process_data_0800483c",
                "iVar3": "value1",
                "iVar4": "value2",
                "iVar5": "value3",
                "param_1": "data",
                "uVar1": "result1",
                "uVar2": "result2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004a30": {
            "additional_data": {
                "DAT_20000068": {
                    "data1": 1,
                    "data_value1": 1,
                    "initialized_data": 1,
                    "initialized_data1": 3,
                    "initialized_value1": 2,
                    "primary_data": 1,
                    "primary_value": 1
                },
                "DAT_2000007c": {
                    "calculated_data": 1,
                    "data2": 1,
                    "data_value2": 1,
                    "initialized_data2": 3,
                    "initialized_value2": 2,
                    "secondary_data": 1,
                    "secondary_value": 1
                },
                "DAT_20000094": {
                    "data4": 1,
                    "data_value4": 1,
                    "final_data": 5,
                    "final_value": 2,
                    "result": 1
                },
                "DAT_20000285": {
                    "condition1": 1,
                    "data_flag1": 1,
                    "flag1": 3,
                    "is_data_flag_set": 1,
                    "is_data_initialized": 3,
                    "is_value_set": 1
                },
                "DAT_20000288": {
                    "data3": 1,
                    "data_value": 1,
                    "data_value3": 1,
                    "default_data": 3,
                    "default_secondary_value": 1,
                    "default_value": 2,
                    "initialized_data3": 1
                },
                "DAT_200002a8": {
                    "condition2": 1,
                    "data_flag2": 1,
                    "flag2": 3,
                    "is_secondary_data_initialized": 1,
                    "is_secondary_value_set": 1,
                    "is_value_calculated": 1,
                    "is_value_generated": 1,
                    "is_value_set": 1
                },
                "FUN_08000cec": {
                    "calculate_checksum": 2,
                    "calculate_new_value": 1,
                    "calculate_value": 27,
                    "convert_to_uint": 1
                },
                "FUN_08003068": {
                    "generate_input_value": 1,
                    "generate_random_number": 10,
                    "generate_seed": 2,
                    "generate_value": 3,
                    "get_conversion_result": 1,
                    "get_initial_value": 2,
                    "get_input_value": 7,
                    "get_random_number": 3,
                    "get_random_value": 2
                },
                "FUN_08004a30": {
                    "initialize_data": 29,
                    "process_data": 1,
                    "update_configurations": 1
                },
                "param_1": {
                    "input_value": 1,
                    "input_value1": 1,
                    "value1": 2
                },
                "param_2": {
                    "constant_value": 1,
                    "input_value2": 1,
                    "value2": 2
                },
                "param_3": {
                    "input_value3": 1,
                    "unused_parameter": 1,
                    "value3": 2
                },
                "param_4": {
                    "another_parameter": 1,
                    "input_value4": 1,
                    "value4": 2
                },
                "uVar1": {
                    "conversion_result": 1,
                    "generated_value": 3,
                    "initial_value": 1,
                    "input_value": 6,
                    "new_value": 1,
                    "random_number": 10,
                    "random_value": 2,
                    "return_value": 1,
                    "seed": 2
                }
            },
            "called": [
                "FUN_08000cec",
                "FUN_08003068"
            ],
            "calling": [
                "FUN_08004a84"
            ],
            "code": "\nvoid initialize_data_08004a30(void)\n\n{\n  undefined4 random_number;\n  \n  if (DAT_20000285 != '\\0') {\n    if (DAT_200002a8 == '\\0') {\n      random_number = FUN_08003068();\n      DAT_20000068 = FUN_08000cec(random_number,0x42c80000);\n      DAT_200002a8 = '\\x01';\n    }\n    else {\n      random_number = FUN_08003068();\n      DAT_2000007c = FUN_08000cec(random_number,0x42c80000);\n    }\n  }\n  if (DAT_20000285 == '\\0') {\n    if (DAT_200002a8 != '\\0') {\n      DAT_200002a8 = DAT_20000285;\n    }\n    DAT_20000094 = DAT_20000288;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_data_08004a30",
            "entrypoint": "0x08004a30",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004a30": "initialize_data_08004a30",
                "uVar1": "random_number"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004a84": {
            "additional_data": {
                "DAT_2000004c": {
                    "data4": 1,
                    "data_var4": 1,
                    "ptr4": 1
                },
                "DAT_20000050": {
                    "data_var15": 1,
                    "ptr5": 1,
                    "value11": 1,
                    "var11": 1
                },
                "DAT_20000054": {
                    "data_var16": 1,
                    "ptr6": 1,
                    "value12": 1,
                    "var12": 1
                },
                "DAT_20000058": {
                    "data_var17": 1,
                    "ptr7": 1,
                    "value13": 1,
                    "var13": 1
                },
                "DAT_20000094": {
                    "data4": 1,
                    "data_var5": 1,
                    "temp_value": 1,
                    "value1": 1
                },
                "DAT_200000a8": {
                    "data_var1": 1,
                    "ptr1": 1,
                    "var1": 1
                },
                "DAT_200000ac": {
                    "data_var7": 1,
                    "ptr8": 1,
                    "value3": 1,
                    "var4": 1
                },
                "DAT_200000b0": {
                    "data_var8": 1,
                    "ptr9": 1,
                    "value4": 1
                },
                "DAT_200000d8": {
                    "data1": 2,
                    "first_data": 1,
                    "first_value": 1
                },
                "DAT_200000f0": {
                    "data6": 1
                },
                "DAT_20000104": {
                    "data_var2": 1,
                    "ptr2": 1,
                    "var2": 1
                },
                "DAT_20000108": {
                    "data_var9": 1,
                    "ptr10": 1,
                    "value5": 1,
                    "var5": 1
                },
                "DAT_2000010c": {
                    "data_var10": 1,
                    "ptr11": 1,
                    "value6": 1,
                    "var6": 1
                },
                "DAT_20000110": {
                    "data_var11": 1,
                    "ptr12": 1,
                    "value7": 1,
                    "var7": 1
                },
                "DAT_20000134": {
                    "data2": 2,
                    "second_data": 1,
                    "second_value": 1
                },
                "DAT_2000014c": {
                    "data7": 1
                },
                "DAT_20000160": {
                    "data_var3": 1,
                    "ptr3": 1,
                    "var3": 1
                },
                "DAT_20000164": {
                    "data_var12": 1,
                    "ptr13": 1,
                    "value8": 1,
                    "var8": 1
                },
                "DAT_20000168": {
                    "data_var13": 1,
                    "ptr14": 1,
                    "value9": 1,
                    "var9": 1
                },
                "DAT_2000016c": {
                    "data_var14": 1,
                    "ptr15": 1,
                    "value10": 1,
                    "var10": 1
                },
                "DAT_20000190": {
                    "data3": 2,
                    "third_data": 1,
                    "third_value": 1
                },
                "DAT_200001a8": {
                    "data8": 1
                },
                "DAT_20000284": {
                    "another_flag": 1,
                    "flag2": 2,
                    "is_flag_set2": 1
                },
                "DAT_20000285": {
                    "flag": 2,
                    "flag1": 1,
                    "is_flag_set": 1
                },
                "DAT_20000288": {
                    "data5": 1,
                    "data_var6": 1,
                    "new_value": 1,
                    "value2": 1
                },
                "DAT_2000139b": {
                    "converted_data1": 1,
                    "result1": 2,
                    "updated_value1": 1
                },
                "DAT_2000139f": {
                    "converted_data2": 1,
                    "result2": 2,
                    "updated_value2": 1
                },
                "DAT_200013a3": {
                    "converted_data3": 1,
                    "result3": 1,
                    "updated_value3": 1
                },
                "FUN_08000adc": {
                    "allocate_memory": 2,
                    "calculate_checksum": 1,
                    "calculate_first_value": 1,
                    "calculate_something": 1,
                    "calculate_value": 5,
                    "do_something": 3,
                    "download_data": 1,
                    "download_resource": 1,
                    "initialize_data": 2,
                    "initialize_variable4": 1,
                    "modify_value": 1,
                    "perform_action": 2,
                    "perform_initialization": 1,
                    "perform_operation": 1,
                    "process_data": 6,
                    "update_value": 1
                },
                "FUN_08000cec": {
                    "calculate_checksum": 3,
                    "calculate_value": 5,
                    "configure_data": 1,
                    "configure_subsystem": 1,
                    "get_some_value": 1,
                    "load_configuration_value": 1,
                    "manipulate_data": 1,
                    "modify_variable": 1,
                    "perform_calculation": 1,
                    "process_config": 1,
                    "process_data": 1,
                    "set_data": 1,
                    "update_value": 1
                },
                "FUN_08001028": {
                    "check_condition": 3,
                    "check_condition2": 1,
                    "check_data1": 1,
                    "check_data_flag": 1,
                    "check_data_range": 1,
                    "check_data_validity": 1,
                    "check_first_value": 1,
                    "check_graphics_compatibility": 1,
                    "check_if_initialized": 1,
                    "check_initialization": 1,
                    "check_return_value2": 1,
                    "check_second": 1,
                    "check_second_condition": 1,
                    "check_second_value": 1,
                    "check_secondary_condition": 1,
                    "check_secondary_value": 1,
                    "check_status_with_data": 1,
                    "check_threshold": 1,
                    "check_value": 3,
                    "check_value2": 1,
                    "check_value_with_threshold": 1,
                    "check_variable2": 1,
                    "initialize_component": 1,
                    "is_memory_accessible": 1,
                    "perform_action": 1,
                    "perform_action_if_true": 1,
                    "set_dynamic_memory_size": 1
                },
                "FUN_08001064": {
                    "check_component": 1,
                    "check_condition": 4,
                    "check_data2": 1,
                    "check_data_validity": 1,
                    "check_device_compatibility": 1,
                    "check_first": 1,
                    "check_first_condition": 1,
                    "check_memory_availability": 1,
                    "check_memory_validity": 1,
                    "check_result": 2,
                    "check_return_value": 1,
                    "check_second_value": 1,
                    "check_status": 1,
                    "check_value": 9,
                    "check_value1": 1,
                    "check_value2": 1,
                    "check_variable1": 1,
                    "perform_initialization": 1,
                    "validate_data": 1
                },
                "FUN_080010c4": {
                    "calculate_checksum": 8,
                    "calculate_hash": 1,
                    "calculate_result": 2,
                    "calculate_something": 1,
                    "calculate_value": 4,
                    "compute_average": 1,
                    "compute_result": 1,
                    "convert_data": 1,
                    "get_checksum": 3,
                    "get_modified_value": 1,
                    "get_return_value": 2,
                    "get_value": 1,
                    "perform_calculation": 1,
                    "perform_computation": 1,
                    "perform_operation": 1,
                    "process_data": 1,
                    "process_value": 1
                },
                "FUN_08002ec0": {
                    "fetch_data": 1,
                    "get_address": 1,
                    "get_component_a": 1,
                    "get_configuration_value": 1,
                    "get_dat200000d8": 1,
                    "get_dat_200000d8": 2,
                    "get_data": 1,
                    "get_data1": 1,
                    "get_device_id": 1,
                    "get_device_info": 2,
                    "get_first_data": 2,
                    "get_first_value": 2,
                    "get_initial_value": 2,
                    "get_initial_value1": 1,
                    "get_variable1": 1,
                    "initialize_dat_200000d8": 1,
                    "initialize_data": 2,
                    "initialize_data1": 1,
                    "initialize_data3": 1,
                    "initialize_program": 1,
                    "initialize_something_else": 1,
                    "initialize_variable1": 1
                },
                "FUN_08002ed4": {
                    "fetch_data1": 1,
                    "get_additional_initialization_value": 1,
                    "get_component_b": 1,
                    "get_dat20000134": 1,
                    "get_dat_20000134": 2,
                    "get_data2": 1,
                    "get_initial_value2": 1,
                    "get_second_data": 2,
                    "get_second_value": 3,
                    "get_secondary_value": 1,
                    "get_system_config": 1,
                    "get_system_info": 1,
                    "get_user_input": 1,
                    "get_variable2": 1,
                    "initialize_dat_20000134": 1,
                    "initialize_data": 3,
                    "initialize_data2": 2,
                    "initialize_graphics": 1,
                    "initialize_something": 1,
                    "initialize_struct": 1,
                    "initialize_variable2": 1,
                    "retrieve_data": 1
                },
                "FUN_08002ee8": {
                    "fetch_data2": 1,
                    "get_component_c": 1,
                    "get_dat20000190": 1,
                    "get_dat_20000190": 2,
                    "get_dynamic_memory_size": 1,
                    "get_first_value": 1,
                    "get_initial_value3": 1,
                    "get_initialization_value": 1,
                    "get_memory_address": 1,
                    "get_memory_location": 1,
                    "get_network_config": 1,
                    "get_network_info": 1,
                    "get_pointer": 1,
                    "get_some_data": 1,
                    "get_something": 1,
                    "get_tertiary_value": 1,
                    "get_third_data": 2,
                    "get_third_value": 2,
                    "get_variable3": 1,
                    "initialize_audio": 1,
                    "initialize_dat_20000190": 1,
                    "initialize_data": 2,
                    "initialize_data1": 1,
                    "initialize_data3": 1,
                    "initialize_settings": 1,
                    "initialize_variable": 1,
                    "initialize_variable3": 1
                },
                "FUN_08003f3c": {
                    "display_message": 2,
                    "do_something": 1,
                    "handle_error": 1,
                    "handle_results": 1,
                    "log_event": 1,
                    "log_results": 1,
                    "log_status": 1,
                    "perform_action": 2,
                    "print_status": 1,
                    "process_data": 1,
                    "set_configuration": 2,
                    "set_flag": 1,
                    "set_flag_values": 1,
                    "set_flags": 3,
                    "set_values": 1,
                    "show_error_message": 1,
                    "update_data": 2,
                    "update_flags": 1,
                    "update_info": 1,
                    "update_state": 1,
                    "update_status": 4,
                    "update_values": 1
                },
                "FUN_080041c4": {
                    "clean_up": 1,
                    "cleanup": 6,
                    "cleanup_data": 1,
                    "close_application": 1,
                    "default_action": 1,
                    "display_loading_screen": 1,
                    "handle_empty_data": 1,
                    "handle_error": 3,
                    "handle_failure": 1,
                    "handle_initialization_failure": 1,
                    "handle_memory_error": 1,
                    "perform_action": 1,
                    "perform_default_action": 1,
                    "reset_data": 3,
                    "reset_system": 1,
                    "reset_value": 1,
                    "reset_variables": 1,
                    "reverse": 1,
                    "reverse_operation": 1,
                    "reverse_process": 1,
                    "reverse_something": 1,
                    "terminate_execution": 1
                },
                "FUN_0800426c": {
                    "custom_action": 1,
                    "display_game_interface": 1,
                    "do_secondary_task": 1,
                    "execute_algorithm": 1,
                    "handle_success": 1,
                    "handle_value": 1,
                    "improve_process": 1,
                    "improve_something": 1,
                    "perform_action": 2,
                    "perform_alternative_action": 1,
                    "perform_operation": 1,
                    "perform_specific_tasks": 1,
                    "perform_task": 2,
                    "process_data": 7,
                    "process_data_with_params": 1,
                    "process_values": 1,
                    "reverse_data": 3,
                    "reverse_operation": 1,
                    "reverse_something": 2
                },
                "FUN_0800483c": {
                    "clean_up_component": 1,
                    "cleanup": 2,
                    "cleanup_data": 1,
                    "cleanup_resources": 1,
                    "clear_data": 1,
                    "dealloc_memory": 1,
                    "deallocate_memory": 1,
                    "destroy_resource": 1,
                    "free_data": 1,
                    "free_memory": 17,
                    "release_memory": 2,
                    "release_resources": 1,
                    "reset_data": 1
                },
                "FUN_08004a30": {
                    "configure_application": 1,
                    "do_something": 1,
                    "initialize": 3,
                    "initialize_components": 1,
                    "initialize_dat_20000288": 1,
                    "initialize_data": 1,
                    "load_assets": 1,
                    "perform_action": 1,
                    "perform_additional_initialization": 1,
                    "perform_additional_processing": 1,
                    "perform_initialization": 6,
                    "perform_operations": 1,
                    "perform_setup": 2,
                    "perform_some_task": 1,
                    "perform_task": 1,
                    "pre_process": 1,
                    "pre_process_data": 1,
                    "setup_app": 1,
                    "setup_application": 1,
                    "setup_components": 1,
                    "setup_system": 1
                },
                "FUN_08004a84": {
                    "initialize": 1,
                    "initialize_and_process_data": 2,
                    "initialize_app": 2,
                    "initialize_application": 5,
                    "initialize_components": 2,
                    "initialize_data": 5,
                    "initialize_program": 2,
                    "initialize_system": 9,
                    "initialize_values": 1,
                    "process_data": 1
                },
                "iVar1": {
                    "result": 3,
                    "return_value": 1,
                    "status": 1
                }
            },
            "called": [
                "FUN_08000cec",
                "FUN_08002ee8",
                "FUN_08001028",
                "FUN_08000adc",
                "FUN_08001064",
                "FUN_08004a30",
                "FUN_08002ed4",
                "FUN_08003f3c",
                "FUN_08002ec0",
                "FUN_0800426c",
                "FUN_080010c4",
                "FUN_0800483c",
                "FUN_080041c4"
            ],
            "calling": [
                "FUN_0800411c"
            ],
            "code": "\nvoid initialize_system_08004a84(void)\n\n{\n  int result;\n  \n  DAT_200000d8 = FUN_08002ec0();\n  DAT_20000134 = FUN_08002ed4();\n  DAT_20000190 = FUN_08002ee8();\n  FUN_08004a30();\n  result = FUN_08001064(DAT_200000d8,0);\n  if (result == 0) {\n    result = FUN_08001028(DAT_200000d8,0xc2a00000);\n  }\n  else {\n    result = FUN_08001064(DAT_200000d8,0x42a00000);\n  }\n  if (result == 0) {\n    result = FUN_08001064(DAT_20000134,0);\n    if (result == 0) {\n      result = FUN_08001028(DAT_20000134,0xc2a00000);\n    }\n    else {\n      result = FUN_08001064(DAT_20000134,0x42a00000);\n    }\n    if (result == 0) {\n      FUN_08003f3c(1,1);\n      FUN_0800483c(&DAT_200000a8);\n      FUN_0800483c(&DAT_20000104);\n      FUN_0800483c(&DAT_20000160);\n      if (DAT_20000285 != '\\0') {\n        FUN_0800483c(&DAT_2000004c);\n        FUN_08000adc(DAT_20000094,0x44bb8000);\n      }\n      DAT_20000094 = DAT_20000288;\n      if (DAT_20000284 == '\\0') {\n        FUN_080041c4();\n      }\n      else {\n        FUN_0800426c(DAT_20000288,DAT_200000f0,DAT_2000014c,DAT_200001a8);\n      }\n      FUN_08000cec(DAT_200000ac,0x437f0000);\n      DAT_2000139b._3_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_200000b0,0x437f0000);\n      DAT_2000139f._0_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000108,0x437f0000);\n      DAT_2000139b._0_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_2000010c,0x437f0000);\n      DAT_2000139b._1_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000110,0x437f0000);\n      DAT_2000139b._2_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000164,0x437f0000);\n      DAT_2000139f._2_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000168,0x437f0000);\n      DAT_2000139f._3_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_2000016c,0x437f0000);\n      DAT_200013a3._0_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000050,0x437f0000);\n      DAT_200013a3._1_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000054,0x437f0000);\n      DAT_200013a3._2_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000058,0x437f0000);\n      DAT_200013a3._3_1_ = FUN_080010c4();\n      return;\n    }\n  }\n  FUN_080041c4();\n  FUN_08003f3c(0,1);\n  return;\n}\n\n",
            "current_name": "initialize_system_08004a84",
            "entrypoint": "0x08004a84",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004a84": "initialize_system_08004a84",
                "iVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004c18": {
            "additional_data": {
                "DAT_2000157c": {
                    "array": 2,
                    "int_array": 1,
                    "int_array_1": 1,
                    "int_ptr2": 1,
                    "pointer_var2": 1,
                    "ptr3": 1
                },
                "DAT_20001584": {
                    "const_value": 1,
                    "constant": 1,
                    "constant1": 1,
                    "int_2": 1,
                    "int_value3": 1,
                    "number1": 1,
                    "size": 1
                },
                "DAT_20001585": {
                    "int_4": 1
                },
                "DAT_20001586": {
                    "int_5": 1
                },
                "DAT_2000158c": {
                    "condition": 1,
                    "const_flag": 1,
                    "constant2": 1,
                    "flag3": 1,
                    "int_3": 1,
                    "int_value4": 1,
                    "number2": 1
                },
                "DAT_200015a0": {
                    "char4": 4,
                    "char_4": 1,
                    "condition3": 1,
                    "flag1": 1,
                    "global_var5": 1
                },
                "DAT_200015a2": {
                    "char5": 3,
                    "char_5": 1,
                    "flag2": 2,
                    "global_var6": 1,
                    "loop_counter": 1
                },
                "DAT_200015b4": {
                    "char2": 3,
                    "char_2": 1,
                    "condition2": 1,
                    "flag": 1,
                    "flag1": 1,
                    "global_var3": 1
                },
                "DAT_200015b5": {
                    "char1": 4,
                    "char_1": 1,
                    "character": 1,
                    "condition1": 1,
                    "global_var2": 1
                },
                "DAT_200015b8": {
                    "char3": 4,
                    "char_3": 1,
                    "condition4": 1,
                    "counter": 1,
                    "global_var4": 1
                },
                "DAT_20001636": {
                    "data": 1,
                    "data_1": 1,
                    "global_var1": 1,
                    "status": 1,
                    "str_buffer": 1,
                    "user_input": 1
                },
                "FUNKY": {
                    "extract_and_improve_binary": 1
                },
                "FUN_0800115c": {
                    "get_next_value": 1
                },
                "FUN_08004c18": {
                    "decode_and_validate_data": 2,
                    "decode_data": 1,
                    "decompiled_function": 1,
                    "parse_data": 2,
                    "parse_input": 7,
                    "parse_string": 1,
                    "process_binary": 1,
                    "process_data": 12,
                    "process_input": 2,
                    "validate_input": 1
                },
                "LAB_080027c4": {
                    "label_1": 1,
                    "loop_start": 1
                },
                "LAB_0800281c": {
                    "label_2": 1,
                    "loop_end": 1
                },
                "iVar2": {
                    "counter1": 1,
                    "current_val": 1,
                    "i_var2": 1,
                    "index": 2,
                    "index1": 3,
                    "index_var1": 2,
                    "int_value1": 2,
                    "int_var2": 6,
                    "integer_var_1": 1,
                    "start_index": 1,
                    "temp_var1": 1,
                    "val1": 2,
                    "value1": 3,
                    "var1": 4,
                    "variable1": 1
                },
                "iVar3": {
                    "counter2": 1,
                    "end_index": 1,
                    "i_var3": 1,
                    "index2": 4,
                    "index_var2": 2,
                    "int_value2": 2,
                    "int_var3": 6,
                    "integer_var_2": 1,
                    "next_index": 1,
                    "next_val": 1,
                    "temp_var2": 1,
                    "val2": 2,
                    "value2": 3,
                    "var2": 4,
                    "variable2": 1
                },
                "param_1": {
                    "input": 20,
                    "input_char": 1,
                    "input_data": 6,
                    "input_param": 2
                },
                "piVar1": {
                    "array_pointer": 1,
                    "int_ptr1": 1,
                    "p_int_var1": 1,
                    "pointer": 3,
                    "pointer1": 1,
                    "pointer_to_data": 1,
                    "pointer_var": 3,
                    "pointer_var1": 6,
                    "ptr": 9,
                    "ptr1": 3,
                    "ptr_i_var1": 1,
                    "ptr_var1": 1
                },
                "puVar4": {
                    "data": 1,
                    "data_pointer": 1,
                    "data_ptr": 4,
                    "p_u_short_var4": 1,
                    "pointer": 1,
                    "pointer2": 1,
                    "pointer_to_buffer": 1,
                    "pointer_var2": 1,
                    "pointer_var4": 3,
                    "ptr2": 7,
                    "ptr_pu_var4": 1,
                    "ptr_var4": 1,
                    "short_array": 1,
                    "ushort_pointer": 2,
                    "ushort_pointer_var": 1,
                    "ushort_ptr": 4
                },
                "undefined": {
                    "input": 1
                },
                "unknown_parameter_1": {
                    "param": 1
                }
            },
            "called": [
                "FUN_0800115c"
            ],
            "calling": [
                "FUN_08004c8c",
                "FUN_08004490",
                "FUN_08004300"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800289e) */\n\ninput4 process_data_08004c18(input input)\n\n{\n  int *ptr;\n  int int_var2;\n  int int_var3;\n  ushort *ptr2;\n  \n  DAT_20001636._0_1_ = input;\n  ptr2 = &DAT_20001636;\n  if (((DAT_200015b5 != '\\x01') && (DAT_200015b5 != '\\\"')) || (DAT_200015b4 == '\\x01')) {\n    return 2;\n  }\n  DAT_200015b4 = 1;\n  DAT_200015b8 = 0;\n  DAT_200015a0 = 1;\n  if (DAT_200015b5 == '\\\"') {\n    DAT_200015b5 = '2';\n  }\n  else {\n    DAT_200015b5 = '\\x12';\n  }\n  DAT_200015a2 = 1;\nloop_start:\n  do {\n    if (DAT_200015a2 == 0) {\n      int_var2 = FUN_0800115c();\n      do {\n        if (*DAT_2000157c << 0x19 < 0) {\n          if (DAT_200015b5 == '2') {\n            DAT_200015b5 = 0x22;\n          }\n          else {\n            DAT_200015b5 = 1;\n          }\n          DAT_200015b4 = 0;\n          return 0;\n        }\n        int_var3 = FUN_0800115c();\n      } while ((uint)(int_var3 - int_var2) < 6);\nloop_end:\n      ptr = DAT_2000157c;\n      DAT_2000157c[3] = DAT_2000157c[3] & 0xffffff7f;\n      ptr[3] = ptr[3] & 0xffffffdf;\n      ptr[3] = ptr[3] & 0xfffffeff;\n      ptr[5] = ptr[5] & 0xfffffffe;\n      DAT_200015b5 = 1;\n      DAT_200015b4 = 0;\n      return 3;\n    }\n    DAT_200015a2 = DAT_200015a2 + -1;\n    if (DAT_20001584 == 0x1000) {\n      int_var2 = FUN_0800115c();\n      while (-1 < *DAT_2000157c << 0x18) {\n        int_var3 = FUN_0800115c();\n        if (5 < (uint)(int_var3 - int_var2)) goto loop_end;\n      }\n      DAT_2000157c[1] = *ptr2 & 0x1ff;\n      if (DAT_2000158c == 0) {\n        ptr2 = ptr2 + 1;\n        goto loop_start;\n      }\n    }\n    else {\n      int_var2 = FUN_0800115c();\n      while (-1 < *DAT_2000157c << 0x18) {\n        int_var3 = FUN_0800115c();\n        if (5 < (uint)(int_var3 - int_var2)) goto loop_end;\n      }\n      DAT_2000157c[1] = (uint)*(byte *)ptr2;\n    }\n    ptr2 = (ushort *)((int)ptr2 + 1);\n  } while( true );\n}\n\n",
            "current_name": "process_data_08004c18",
            "entrypoint": "0x08004c18",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004c18": "process_data_08004c18",
                "LAB_080027c4": "loop_start",
                "LAB_0800281c": "loop_end",
                "iVar2": "int_var2",
                "iVar3": "int_var3",
                "param_1": "input",
                "piVar1": "ptr",
                "puVar4": "ptr2",
                "undefined": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004c30": {
            "additional_data": {
                "0x0": {
                    "null_ptr": 1
                },
                "0x1": {
                    "value2": 1
                },
                "0x100": {
                    "value1": 1
                },
                "0x14": {
                    "mask2": 1
                },
                "0x2": {
                    "error_ptr": 1
                },
                "0x20": {
                    "mask3": 1
                },
                "0xc": {
                    "mask1": 1
                },
                "DAT_20000364": {
                    "constant1": 1,
                    "data1": 6,
                    "data_1": 2,
                    "data_address": 1,
                    "data_pointer1": 3,
                    "data_ptr1": 1,
                    "global_variable1": 1
                },
                "DAT_2000157c": {
                    "constant3": 1,
                    "data3": 2,
                    "data_1": 2,
                    "data_3": 1,
                    "data_pointer": 1,
                    "data_variable1": 1,
                    "flag1": 1,
                    "flag_var1": 2,
                    "global_variable3": 1,
                    "i_var": 1,
                    "i_var1": 1,
                    "info_data": 1,
                    "some_data": 2,
                    "some_data1": 1,
                    "var1": 3,
                    "var_1": 1,
                    "variable1": 1
                },
                "DAT_200015a4": {
                    "data3": 1,
                    "data_2": 2,
                    "data_pointer": 2,
                    "data_pointer2": 1,
                    "data_pointer3": 1,
                    "data_ptr": 2,
                    "data_variable7": 1,
                    "flag6": 1,
                    "flag7": 1,
                    "flag_6": 1,
                    "flag_var7": 1,
                    "pointer1": 1,
                    "processed_data": 1,
                    "ptr1": 2,
                    "some_data2": 1,
                    "temp_pointer": 1,
                    "var7": 2,
                    "var_7": 1,
                    "variable7": 1
                },
                "DAT_200015a8": {
                    "char4": 1,
                    "condition4": 1,
                    "data_variable5": 1,
                    "flag2": 1,
                    "flag4": 7,
                    "flag5": 1,
                    "flag_4": 2,
                    "flag_a": 1,
                    "flag_var5": 2,
                    "temp_value1": 1,
                    "value4": 1,
                    "var5": 2,
                    "var_5": 1,
                    "variable5": 1,
                    "variable_2": 1
                },
                "DAT_200015aa": {
                    "char5": 1,
                    "condition5": 1,
                    "data_variable6": 1,
                    "flag3": 1,
                    "flag5": 7,
                    "flag6": 1,
                    "flag_5": 2,
                    "flag_b": 1,
                    "flag_var6": 2,
                    "temp_value2": 1,
                    "value5": 1,
                    "var6": 2,
                    "var_6": 1,
                    "variable6": 1,
                    "variable_3": 1
                },
                "DAT_200015b4": {
                    "char2": 1,
                    "condition2": 2,
                    "condition_2": 1,
                    "data_variable3": 1,
                    "flag2": 9,
                    "flag3": 1,
                    "flag_2": 2,
                    "flag_var3": 2,
                    "value2": 1,
                    "var3": 2,
                    "var_3": 1,
                    "variable3": 1
                },
                "DAT_200015b5": {
                    "char1": 1,
                    "condition1": 2,
                    "condition_1": 1,
                    "data_variable2": 1,
                    "flag1": 9,
                    "flag2": 1,
                    "flag_1": 2,
                    "flag_var2": 2,
                    "value1": 1,
                    "var2": 2,
                    "var_2": 1,
                    "variable2": 1
                },
                "DAT_200015b8": {
                    "char3": 1,
                    "condition3": 1,
                    "data_variable4": 1,
                    "flag1": 1,
                    "flag3": 7,
                    "flag4": 1,
                    "flag_3": 2,
                    "flag_var4": 2,
                    "new_flag": 1,
                    "temp_flag": 1,
                    "value3": 1,
                    "var4": 2,
                    "var_4": 1,
                    "variable4": 1,
                    "variable_1": 1
                },
                "DAT_20001634": {
                    "config_data": 1,
                    "constant2": 1,
                    "data2": 6,
                    "data_2": 2,
                    "data_pointer2": 3,
                    "data_ptr2": 1,
                    "global_variable2": 1
                },
                "FUNK_08003ec8": {
                    "perform_initialization": 1
                },
                "FUN_08003ec8": {
                    "do_something": 1,
                    "execute_subfunction": 1,
                    "initialize_data": 5,
                    "modify_data": 1,
                    "perform_action": 2,
                    "perform_initialization": 2,
                    "process_data": 3,
                    "update_data": 1
                },
                "FUN_08004c30": {
                    "check_and_initialize_settings": 1,
                    "check_and_initialize_state": 1,
                    "check_and_modify_data": 1,
                    "check_and_modify_settings": 1,
                    "check_and_set_flags": 1,
                    "check_and_update_data": 1,
                    "check_for_valid_param": 1,
                    "check_for_valid_value": 1,
                    "check_if_valid_param": 1,
                    "check_input_validity": 1,
                    "check_magic_number": 2,
                    "check_magic_value": 1,
                    "check_param": 1,
                    "check_param_and_set_flags": 1,
                    "check_param_validity": 2,
                    "check_param_value": 2,
                    "check_parameter": 1,
                    "check_parameter_value": 1,
                    "check_valid_param": 1,
                    "check_valid_parameter": 1,
                    "check_validity": 1,
                    "check_value": 1,
                    "check_value_and_update": 1,
                    "validate_input": 1,
                    "validate_param": 4
                },
                "iVar1": {
                    "data": 1,
                    "index": 1,
                    "output": 1,
                    "result": 8,
                    "return_value": 3,
                    "temp": 3,
                    "temp_var": 7,
                    "temp_variable": 2
                },
                "param_1": {
                    "data": 1,
                    "input": 4,
                    "input_array": 2,
                    "input_data": 2,
                    "input_param": 3,
                    "input_pointer": 1,
                    "input_ptr": 1,
                    "input_value": 1,
                    "num_array": 1,
                    "param": 5,
                    "param1": 1,
                    "param_ptr": 2,
                    "parameter": 3,
                    "pointer": 1,
                    "settings_ptr": 1,
                    "value": 2
                },
                "param_2": {
                    "data_param": 1,
                    "param2": 1
                }
            },
            "called": [
                "FUN_08003ec8"
            ],
            "calling": [
                "FUN_0800290c"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08002902) */\n\nint * check_for_valid_value_08004c30(int *param)\n\n{\n  int result;\n  \n  if (*param != 0x40013800) {\n    return param;\n  }\n  FUN_08003ec8(&DAT_20000364,DAT_20001634);\n  result = DAT_2000157c;\n  if (((DAT_200015b5 == '\\x01') || (DAT_200015b5 == '\\x12')) && (DAT_200015b4 != '\\x01')) {\n    DAT_200015b8 = 0;\n    DAT_200015a8 = 1;\n    DAT_200015aa = 1;\n    DAT_200015b4 = 0;\n    if (DAT_200015b5 == '\\x12') {\n      DAT_200015b5 = 0x32;\n    }\n    else {\n      DAT_200015b5 = 0x22;\n    }\n    DAT_200015a4 = &DAT_20001634;\n    *(uint *)(DAT_2000157c + 0xc) = *(uint *)(DAT_2000157c + 0xc) | 0x100;\n    *(uint *)(result + 0x14) = *(uint *)(result + 0x14) | 1;\n    *(uint *)(result + 0xc) = *(uint *)(result + 0xc) | 0x20;\n    return (int *)0x0;\n  }\n  return (int *)0x2;\n}\n\n",
            "current_name": "check_for_valid_value_08004c30",
            "entrypoint": "0x08004c30",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004c30": "check_for_valid_value_08004c30",
                "iVar1": "result",
                "param_1": "param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004c64": {
            "additional_data": {
                "DAT_20000364": {
                    "data_array": 2
                },
                "DAT_20000b64": {
                    "data0": 1,
                    "data1": 4,
                    "data_var1": 1,
                    "variable1": 3
                },
                "DAT_20000b66": {
                    "data1": 1,
                    "data2": 4,
                    "data_var2": 1,
                    "variable2": 3
                },
                "DAT_20000b68": {
                    "data2": 1,
                    "data3": 4,
                    "data_var3": 1,
                    "variable3": 3
                },
                "FUN_08004c64": {
                    "initialize_array": 1,
                    "initialize_data": 27,
                    "initialize_function": 2,
                    "initialize_memory": 1
                },
                "iVar1": {
                    "counter": 10,
                    "index": 20,
                    "iterator": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004c70"
            ],
            "code": "\nvoid initialize_data_08004c64(void)\n\n{\n  int index;\n  \n  index = 0;\n  DAT_20000b64 = 0;\n  DAT_20000b66 = 0;\n  DAT_20000b68 = 0;\n  do {\n    (&DAT_20000364)[index] = 0;\n    index = index + 1;\n  } while (index != 0x800);\n  return;\n}\n\n",
            "current_name": "initialize_data_08004c64",
            "entrypoint": "0x08004c64",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004c64": "initialize_data_08004c64",
                "iVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004c70": {
            "additional_data": {
                "0x14": {
                    "constant2": 1
                },
                "0x20": {
                    "constant3": 1
                },
                "0xc": {
                    "constant1": 1
                },
                "DAT_2000157c": {
                    "connection_data": 2,
                    "control_settings_ptr": 1,
                    "data": 1,
                    "data_1": 1,
                    "data_address": 1,
                    "data_offset": 1,
                    "data_pointer": 4,
                    "data_variable1": 1,
                    "flag_data_pointer": 1,
                    "setting_data": 1,
                    "some_data": 1,
                    "state_var": 1
                },
                "DAT_200015a4": {
                    "buffer": 2,
                    "buffer_ptr": 1,
                    "control_data_ptr": 1,
                    "data_flag6": 1,
                    "data_pointer": 1,
                    "data_pointer2": 1,
                    "data_ptr": 2,
                    "flag4": 1,
                    "flag6": 1,
                    "flag_data_pointer2": 1,
                    "pointer": 1,
                    "setting_pointer": 1,
                    "var4": 1,
                    "variable3": 1
                },
                "DAT_200015a8": {
                    "control_flag_4": 1,
                    "data_flag4": 1,
                    "flag2": 4,
                    "flag4": 4,
                    "flag_4": 1,
                    "flag_value4": 1,
                    "is_set": 1,
                    "setting_value4": 1,
                    "var2": 1,
                    "variable2": 1
                },
                "DAT_200015aa": {
                    "control_flag_5": 1,
                    "data_flag5": 1,
                    "flag3": 4,
                    "flag5": 4,
                    "flag_5": 1,
                    "flag_value5": 1,
                    "is_flag_set": 1,
                    "setting_value5": 1,
                    "var3": 1,
                    "variable4": 1
                },
                "DAT_200015b0": {
                    "var6": 1
                },
                "DAT_200015b4": {
                    "condition2": 1,
                    "condition_check2": 1,
                    "condition_flag2": 1,
                    "control_flag_2": 1,
                    "data_flag2": 1,
                    "flag2": 4,
                    "flag_2": 1,
                    "flag_value2": 1,
                    "initialized_flag": 1,
                    "input2": 1,
                    "input_byte2": 1,
                    "other_flag": 1,
                    "setting_value2": 1
                },
                "DAT_200015b5": {
                    "condition1": 1,
                    "condition_check1": 1,
                    "condition_flag1": 1,
                    "control_flag_1": 1,
                    "data_flag1": 1,
                    "flag": 1,
                    "flag1": 4,
                    "flag_1": 1,
                    "flag_value1": 1,
                    "input1": 1,
                    "input_byte1": 1,
                    "setting_value1": 1,
                    "system_status": 1
                },
                "DAT_200015b8": {
                    "control_flag_3": 1,
                    "counter": 1,
                    "data_flag3": 1,
                    "flag1": 4,
                    "flag3": 4,
                    "flag_3": 1,
                    "flag_value3": 1,
                    "setting_value3": 1,
                    "var1": 1,
                    "variable1": 1
                },
                "DAT_200015bc": {
                    "var5": 1
                },
                "DAT_20001634": {
                    "buffer": 1,
                    "constant_value": 2,
                    "control_data": 1,
                    "data_flag7": 1,
                    "data_pointer3": 1,
                    "data_value": 2,
                    "default_data": 1,
                    "default_setting": 1,
                    "flag5": 1,
                    "flag7": 1,
                    "somewhere": 1,
                    "var7": 1,
                    "variable5": 1
                },
                "FUN_08004c64": {
                    "check_connection": 1,
                    "execute_preliminary_task": 1,
                    "initialize_data": 3,
                    "initialize_external_components": 1,
                    "initialize_function": 1,
                    "initialize_sub_functions": 2,
                    "initialize_subfunction": 1,
                    "initialize_subfunctions": 1,
                    "load_data": 1,
                    "perform_additional_initialization": 1,
                    "perform_initialization": 6,
                    "perform_pre_initialization": 1,
                    "pre_process": 1,
                    "reset_data": 1,
                    "reset_settings": 1,
                    "reset_variables": 1,
                    "set_up_environment": 1,
                    "some_function": 1
                },
                "FUN_08004c70": {
                    "configure_system_settings": 1,
                    "initialize_application": 1,
                    "initialize_connection": 2,
                    "initialize_control_settings": 1,
                    "initialize_controller": 1,
                    "initialize_data": 11,
                    "initialize_flags": 5,
                    "initialize_settings": 3,
                    "initialize_state": 2,
                    "initialize_system": 3,
                    "parse_data": 1
                },
                "PTR_08004c64": {
                    "initialize_data": 1
                },
                "iVar1": {
                    "connection": 1,
                    "connection_status": 1,
                    "data_address": 1,
                    "data_buffer": 1,
                    "data_index": 1,
                    "data_offset": 2,
                    "data_pointer": 9,
                    "data_ptr": 2,
                    "data_size": 1,
                    "data_var1": 1,
                    "main_var": 1,
                    "return_value": 2,
                    "setting_value": 1,
                    "settings": 1,
                    "status": 1,
                    "temp_var": 1,
                    "var1": 1,
                    "variable1": 1
                },
                "initializeApplication": {
                    "initialize_application": 1
                },
                "initializeData": {
                    "initialize_data": 1
                }
            },
            "called": [
                "FUN_08004c64"
            ],
            "calling": [
                "FUN_08004194"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08002902) */\n\nundefined4 initialize_data_08004c70(void)\n\n{\n  int data_pointer;\n  \n  FUN_08004c64();\n  data_pointer = DAT_2000157c;\n  if (((DAT_200015b5 == '\\x01') || (DAT_200015b5 == '\\x12')) && (DAT_200015b4 != '\\x01')) {\n    DAT_200015b8 = 0;\n    DAT_200015a8 = 1;\n    DAT_200015aa = 1;\n    DAT_200015b4 = 0;\n    if (DAT_200015b5 == '\\x12') {\n      DAT_200015b5 = 0x32;\n    }\n    else {\n      DAT_200015b5 = 0x22;\n    }\n    DAT_200015a4 = &DAT_20001634;\n    *(uint *)(DAT_2000157c + 0xc) = *(uint *)(DAT_2000157c + 0xc) | 0x100;\n    *(uint *)(data_pointer + 0x14) = *(uint *)(data_pointer + 0x14) | 1;\n    *(uint *)(data_pointer + 0xc) = *(uint *)(data_pointer + 0xc) | 0x20;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "current_name": "initialize_data_08004c70",
            "entrypoint": "0x08004c70",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004c70": "initialize_data_08004c70",
                "iVar1": "data_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004c8c": {
            "additional_data": {
                "FUN_08000150": {
                    "calculate_offset": 1,
                    "get_length": 1
                },
                "FUN_08004c18": {
                    "handle_item": 1,
                    "process_element": 1
                },
                "FUN_08004c8c": {
                    "iterate_and_call_function": 1,
                    "iterate_and_execute_functions": 1,
                    "iterate_and_process": 5,
                    "process_and_print": 1,
                    "process_array": 2,
                    "process_data": 15,
                    "process_elements": 1,
                    "process_items": 2,
                    "process_param": 2,
                    "process_pointers": 1
                },
                "param_1": {
                    "array": 3,
                    "data": 15,
                    "data_array": 3,
                    "input_array": 5,
                    "input_data": 1,
                    "input_string": 1,
                    "items": 2,
                    "pointer_array": 1
                },
                "puVar2": {
                    "current": 2,
                    "current_character": 1,
                    "current_data": 2,
                    "current_element": 19,
                    "current_item": 2,
                    "current_pointer": 1,
                    "current_ptr": 4
                },
                "uVar1": {
                    "array_length": 1,
                    "compare_result": 1,
                    "comparison_result": 1,
                    "item_length": 1,
                    "length_difference": 1,
                    "result": 25
                }
            },
            "called": [
                "FUN_08004c18",
                "FUN_08000150"
            ],
            "calling": [
                "FUN_08004490",
                "FUN_08004cac",
                "FUN_08004300"
            ],
            "code": "\nvoid process_data_08004c8c(undefined *data)\n\n{\n  uint result;\n  undefined *current_element;\n  \n  current_element = data;\n  while( true ) {\n    result = FUN_08000150(data);\n    if (result <= (uint)((int)current_element - (int)data)) break;\n    FUN_08004c18(*current_element);\n    current_element = current_element + 1;\n  }\n  return;\n}\n\n",
            "current_name": "process_data_08004c8c",
            "entrypoint": "0x08004c8c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004c8c": "process_data_08004c8c",
                "param_1": "data",
                "puVar2": "current_element",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004cac": {
            "additional_data": {
                "FUN_08004c8c": {
                    "clean_up_data": 3,
                    "clean_up_resources": 1,
                    "cleanup": 1,
                    "cleanup_data": 18,
                    "cleanup_function": 1,
                    "cleanup_initialization": 1,
                    "cleanup_memory": 1,
                    "cleanup_process": 2,
                    "cleanup_resources": 1,
                    "clear_components": 1,
                    "process_data_part2": 1
                },
                "FUN_08004cac": {
                    "execute_function": 1,
                    "execute_initial_process": 1,
                    "execute_initialization": 1,
                    "execute_operation": 1,
                    "execute_task": 1,
                    "initialize_and_execute_process": 1,
                    "initialize_and_process_data": 1,
                    "initialize_components": 1,
                    "initialize_data": 6,
                    "initialize_function": 1,
                    "process_data": 7,
                    "reverse_and_cleanup_data": 1
                },
                "FUN_08004ffc": {
                    "execute_operation": 1,
                    "execute_process": 1,
                    "execute_process_step": 1,
                    "generate_output": 1,
                    "initialize_data": 1,
                    "perform_data_extraction": 1,
                    "perform_operation": 3,
                    "process_data": 11,
                    "process_data_chunk": 1,
                    "process_data_internal": 2,
                    "process_data_part1": 1,
                    "process_data_with_params": 1,
                    "process_sub_function": 1,
                    "reverse_and_process_data": 1,
                    "reverse_data": 2
                },
                "param_1": {
                    "data": 9,
                    "data_buffer": 1,
                    "data_input": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "input_data": 7,
                    "input_param": 3,
                    "input_parameter": 2,
                    "input_value": 1,
                    "operation_type": 1,
                    "param": 1,
                    "parameter": 1,
                    "task_parameter": 1
                },
                "param_2": {
                    "buffer_ptr": 1,
                    "data1": 2,
                    "data_param1": 1,
                    "data_ptr": 1,
                    "data_start": 1,
                    "param2": 4,
                    "ptr1": 1,
                    "start_address": 1,
                    "value1": 1
                },
                "param_3": {
                    "data2": 2,
                    "data_middle": 1,
                    "data_param2": 1,
                    "end_address": 1,
                    "param3": 4,
                    "ptr2": 1,
                    "size": 1,
                    "value1": 1,
                    "value2": 1
                },
                "param_4": {
                    "data3": 2,
                    "data_end": 1,
                    "data_param3": 1,
                    "param": 1,
                    "param4": 4,
                    "ptr3": 1,
                    "step_value": 1,
                    "value2": 1,
                    "value3": 1
                }
            },
            "called": [
                "FUN_08004c8c",
                "FUN_08004ffc"
            ],
            "calling": [
                "FUN_08004490"
            ],
            "code": "\nvoid initialize_and_process_data_08004cac(undefined4 data)\n\n{\n  FUN_08004ffc(&DAT_20001636,&DAT_0800735e,data);\n  FUN_08004c8c(&DAT_20001636);\n  return;\n}\n\n",
            "current_name": "initialize_and_process_data_08004cac",
            "entrypoint": "0x08004cac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004cac": "initialize_and_process_data_08004cac",
                "param_1": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004ccc": {
            "additional_data": {
                "FUN_08001170": {
                    "call_first_function": 2,
                    "call_function": 1,
                    "call_function_1": 1,
                    "call_function_a": 4,
                    "call_function_with_params": 1,
                    "call_function_with_three_params": 1,
                    "call_subfunction_a": 1,
                    "do_something": 1,
                    "perform_action": 2,
                    "process_data": 2,
                    "set_flag": 2,
                    "set_flag_and_call_function": 1,
                    "set_flag_bit": 1,
                    "set_flags": 1,
                    "set_values": 1
                },
                "FUN_08001194": {
                    "call_function_2": 1,
                    "call_function_b": 4,
                    "call_function_with_params": 2,
                    "call_function_with_three_params": 1,
                    "call_sub_function": 2,
                    "call_subfunction_b": 1,
                    "do_something": 1,
                    "perform_action": 2,
                    "perform_operation": 1,
                    "print_data": 1,
                    "print_flag": 1,
                    "process_value": 2,
                    "set_flag": 2,
                    "set_other_flag_bits": 1
                },
                "FUN_08004ccc": {
                    "configure_peripheral": 1,
                    "enable_flag_and_call_functions": 5,
                    "initialize_and_call_subfunctions": 1,
                    "initialize_and_process_data": 1,
                    "initialize_data": 5,
                    "initialize_flags": 6,
                    "initialize_flags_and_call_functions": 2,
                    "initialize_flags_and_call_sub_functions": 1,
                    "initialize_function": 1,
                    "set_flag_and_call_functions": 6,
                    "set_flags_and_call_functions": 1,
                    "update_flag_and_call_functions": 1
                },
                "_DAT_40021018": {
                    "data_flag": 1,
                    "data_flags": 1,
                    "flag": 3,
                    "flag_variable": 2,
                    "flags": 2,
                    "peripheral_status": 1
                },
                "param_1": {
                    "arg1": 12,
                    "data1": 1,
                    "flag1": 5,
                    "flag_value": 1,
                    "param1": 9,
                    "param_flag": 1,
                    "unknown_param1": 1,
                    "unused_param": 1
                },
                "param_2": {
                    "arg2": 12,
                    "data2": 1,
                    "flag2": 3,
                    "num_iterations": 1,
                    "param2": 11,
                    "param_2": 1,
                    "param_value": 1,
                    "unknown_param2": 1
                },
                "param_3": {
                    "arg3": 12,
                    "data3": 1,
                    "flag3": 3,
                    "param3": 11,
                    "param_3": 1,
                    "param_indicator": 1,
                    "unknown_param3": 1,
                    "unused_param": 1
                }
            },
            "called": [
                "FUN_08001194",
                "FUN_08001170"
            ],
            "calling": [
                "FUN_08001128"
            ],
            "code": "\n\n\nvoid initialize_flags_and_call_sub_functions_08004ccc(undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  _DAT_40021018 = _DAT_40021018 | 1;\n  FUN_08001170(3,arg2,_DAT_40021018,1,arg1,1,arg3);\n  FUN_08001194(0xfffffff4,0);\n  FUN_08001194(0xfffffff5,0);\n  FUN_08001194(0xfffffff6,0);\n  FUN_08001194(0xfffffffb,0);\n  FUN_08001194(0xfffffffc,0);\n  FUN_08001194(0xfffffffe,0);\n  FUN_08001194(0xffffffff,0);\n  return;\n}\n\n",
            "current_name": "initialize_flags_and_call_sub_functions_08004ccc",
            "entrypoint": "0x08004ccc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004ccc": "initialize_flags_and_call_sub_functions_08004ccc",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004d48": {
            "additional_data": {
                "FUN_08001264": {
                    "copy_memory": 1,
                    "do_something": 1,
                    "set_hardware_config": 1
                },
                "FUN_08004d48": {
                    "check_and_modify_register": 1,
                    "check_and_process_data": 1,
                    "check_and_set_flag": 8,
                    "check_and_set_flags": 1,
                    "check_and_update_configuration": 1,
                    "check_and_update_data": 1,
                    "check_and_update_flag": 1,
                    "check_and_update_flags": 1,
                    "check_and_update_permission": 1,
                    "extract_data_from_binary": 1,
                    "initialize_and_update_flags": 1,
                    "initialize_data": 2,
                    "initialize_hardware": 1,
                    "initialize_memory": 3,
                    "process_data": 3,
                    "process_input": 1,
                    "update_data": 1,
                    "update_data_structure": 1,
                    "update_memory_and_flags": 1
                },
                "_DAT_4002101c": {
                    "flag": 1,
                    "flags": 1
                },
                "local_14": {
                    "config_value2": 1,
                    "constant2": 4,
                    "count": 5,
                    "data_value2": 1,
                    "length": 1,
                    "local_var2": 3,
                    "new_value2": 1,
                    "param_4": 1,
                    "third_value": 1,
                    "value": 1,
                    "value2": 10,
                    "value_2": 1,
                    "variable_b": 1
                },
                "local_18": {
                    "config_value1": 1,
                    "constant1": 4,
                    "data_value1": 1,
                    "local_var1": 3,
                    "new_value1": 1,
                    "offset": 5,
                    "param_3": 1,
                    "second_value": 1,
                    "size": 1,
                    "value": 1,
                    "value1": 10,
                    "value_1": 1,
                    "variable_a": 1
                },
                "param_1": {
                    "config": 1,
                    "data": 3,
                    "data_pointer": 3,
                    "data_ptr": 6,
                    "data_structure": 1,
                    "dest_address": 1,
                    "flag": 1,
                    "flag_ptr": 3,
                    "hardware_config1": 1,
                    "input": 2,
                    "input_ptr": 1,
                    "memory_address": 1,
                    "memory_pointer": 2,
                    "permission_array": 1,
                    "pointer": 1,
                    "pointer_to_value": 1,
                    "register_value": 1,
                    "value": 1
                },
                "param_2": {
                    "data": 2,
                    "data_param": 1,
                    "data_size": 1,
                    "flag": 2,
                    "hardware_config2": 1,
                    "length": 1,
                    "param": 7,
                    "param2": 1,
                    "param_2": 1,
                    "param_value": 2,
                    "parameter_value": 1,
                    "size": 1,
                    "src_address": 1,
                    "val": 1,
                    "value": 8
                }
            },
            "called": [
                "FUN_08001264"
            ],
            "calling": [
                "FUN_08001754"
            ],
            "code": "\n\n\nvoid check_and_set_flag_08004d48(int *data_ptr,undefined4 value)\n\n{\n  undefined4 value1;\n  undefined4 value2;\n  \n  if (*data_ptr == 0x40005400) {\n    value1 = 0xc0;\n    value2 = 0x12;\n    FUN_08001264(0x40010c00,&value1,0x40005400,3,data_ptr,value);\n    _DAT_4002101c = _DAT_4002101c | 0x200000;\n  }\n  return;\n}\n\n",
            "current_name": "check_and_set_flag_08004d48",
            "entrypoint": "0x08004d48",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004d48": "check_and_set_flag_08004d48",
                "local_14": "value2",
                "local_18": "value1",
                "param_1": "data_ptr",
                "param_2": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004d8c": {
            "additional_data": {
                "FUN_08004d8c": {
                    "check_configuration": 1,
                    "set_flag_based_on_value": 2,
                    "set_flags_based_on_value": 1,
                    "set_memory_flags": 1,
                    "update_config": 1,
                    "update_configuration": 1,
                    "update_control_flags": 1,
                    "update_control_register": 1,
                    "update_data_access_control": 1,
                    "update_data_flags": 5,
                    "update_flags": 3,
                    "update_memory_flags": 1,
                    "update_permissions": 1,
                    "update_register_flags": 1,
                    "update_register_value": 1,
                    "update_register_values": 1,
                    "update_settings": 1,
                    "update_special_flags": 1,
                    "update_status": 2,
                    "update_status_flags": 4
                },
                "_DAT_40021018": {
                    "memory_flag1": 1
                },
                "_DAT_4002101c": {
                    "memory_flag2": 1
                },
                "iVar1": {
                    "config_value": 1,
                    "current_flag_value": 1,
                    "current_status_flag": 1,
                    "current_value": 3,
                    "data_flag_value": 1,
                    "data_value": 3,
                    "flag_value": 6,
                    "input_value": 1,
                    "param_value": 1,
                    "permission_value": 1,
                    "temp_value": 1,
                    "value": 11
                },
                "param_1": {
                    "config": 2,
                    "config_value": 1,
                    "control_value": 1,
                    "data": 1,
                    "data_access_control": 1,
                    "data_flags": 1,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "flag_pointer": 1,
                    "flag_value": 1,
                    "flags": 1,
                    "memory_address": 2,
                    "permissions": 1,
                    "register_value": 2,
                    "settings": 1,
                    "status": 1,
                    "status_flag": 3,
                    "status_flags": 1,
                    "value": 7
                }
            },
            "called": [],
            "calling": [
                "FUN_080023d0"
            ],
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nvoid update_data_flags_08004d8c(int *value)\n\n{\n  int value;\n  \n  value = *value;\n  if (value == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 | 0x800;\n  }\n  else if (value == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c | 1;\n  }\n  else if (value == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c | 2;\n  }\n  else if (value == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c | 4;\n  }\n  return;\n}\n\n",
            "current_name": "update_data_flags_08004d8c",
            "entrypoint": "0x08004d8c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004d8c": "update_data_flags_08004d8c",
                "iVar1": "value",
                "param_1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004e14": {
            "additional_data": {
                "FUN_08001264": {
                    "convert_values": 1,
                    "execute_function": 1,
                    "process_classification": 1,
                    "send_communication": 1
                },
                "FUN_08004e14": {
                    "classify_value": 1,
                    "configure_device": 2,
                    "configure_parameter": 1,
                    "convert_input_to_output": 1,
                    "convert_param_to_value": 2,
                    "extract_and_process_data": 1,
                    "handle_data_processing": 1,
                    "initialize_communication": 1,
                    "initialize_parameters": 3,
                    "initialize_settings": 1,
                    "initialize_status": 1,
                    "map_value_to_code": 1,
                    "parse_input": 1,
                    "parse_params": 1,
                    "process_code": 1,
                    "process_input": 4,
                    "process_param_values": 1,
                    "process_parameters": 1,
                    "set_local_values": 1,
                    "set_local_variable": 1,
                    "translate_command": 1,
                    "update_param": 1
                },
                "iVar2": {
                    "command_value": 1,
                    "data_value": 2,
                    "device_type": 2,
                    "first_value": 1,
                    "input_value": 10,
                    "input_value_copy": 1,
                    "param1_value": 1,
                    "param_value": 3,
                    "status_value": 1,
                    "value": 7,
                    "value3": 1
                },
                "local_14": {
                    "config_value2": 1,
                    "constant1": 1,
                    "constant2": 3,
                    "constant_value2": 1,
                    "converted_value2": 1,
                    "local_option": 1,
                    "local_value": 2,
                    "local_value2": 1,
                    "local_var1": 2,
                    "local_var2": 1,
                    "local_var_b": 1,
                    "local_variable2": 2,
                    "modified_data_2": 1,
                    "new_parameter2": 1,
                    "output2": 1,
                    "output_value2": 1,
                    "parameter_b": 1,
                    "stack_value": 1,
                    "unknown3": 2,
                    "unused_value2": 1,
                    "value2": 1,
                    "value_a": 1,
                    "var2": 1,
                    "variable1": 1
                },
                "local_18": {
                    "changed_value": 1,
                    "classification": 1,
                    "code_value": 1,
                    "communication_type": 1,
                    "config_value": 2,
                    "config_value1": 1,
                    "constant1": 1,
                    "converted_value": 1,
                    "converted_value1": 1,
                    "flag": 1,
                    "instruction": 1,
                    "local_value1": 1,
                    "local_var1": 1,
                    "local_var_a": 1,
                    "local_variable1": 2,
                    "modified_data_1": 1,
                    "new_parameter1": 1,
                    "new_size": 1,
                    "new_value": 1,
                    "option": 2,
                    "output1": 1,
                    "output_value1": 1,
                    "parameter_a": 1,
                    "settings_value": 1,
                    "size": 1,
                    "value1": 1,
                    "var1": 1
                },
                "local_c": {
                    "constant2": 1,
                    "constant3": 4,
                    "constant4": 2,
                    "constant_value": 3,
                    "constant_value3": 1,
                    "counter": 1,
                    "index": 1,
                    "local_c": 1,
                    "local_value3": 1,
                    "local_var3": 2,
                    "local_var4": 1,
                    "local_var_d": 1,
                    "local_variable4": 2,
                    "modified_data_4": 1,
                    "new_parameter4": 1,
                    "param1_copy": 1,
                    "temp_value": 1,
                    "unknown5": 2,
                    "unused_value": 1,
                    "var4": 1,
                    "variable3": 1
                },
                "param_1": {
                    "command": 1,
                    "data": 1,
                    "data_ptr": 1,
                    "device_config": 1,
                    "device_info": 1,
                    "input": 8,
                    "input_array": 1,
                    "input_data": 2,
                    "input_param": 1,
                    "input_parameter": 2,
                    "input_pointer": 1,
                    "input_ptr": 2,
                    "input_value": 1,
                    "param": 1,
                    "param_ptr": 1,
                    "parameter_pointer": 1,
                    "pointer": 1,
                    "status_pointer": 1,
                    "value": 1,
                    "value_ptr": 1
                },
                "param_2": {
                    "config1": 1,
                    "constant1": 3,
                    "param1": 3,
                    "param2": 9,
                    "param_a": 2,
                    "param_x": 1,
                    "parameter2": 1,
                    "size": 1,
                    "unknown1": 2,
                    "unused": 1,
                    "value1": 6
                },
                "param_3": {
                    "config2": 1,
                    "constant2": 3,
                    "output": 1,
                    "param2": 3,
                    "param3": 9,
                    "param_b": 2,
                    "param_y": 1,
                    "parameter": 1,
                    "parameter3": 1,
                    "unknown2": 2,
                    "value2": 6
                },
                "uStack_10": {
                    "config_value3": 1,
                    "constant2": 1,
                    "constant3": 1,
                    "converted_value3": 1,
                    "local_output": 1,
                    "local_param": 1,
                    "local_parameter": 1,
                    "local_var2": 2,
                    "local_var3": 1,
                    "local_var_c": 1,
                    "local_variable3": 2,
                    "modified_data_3": 1,
                    "new_parameter3": 1,
                    "output_value3": 1,
                    "param2_copy": 1,
                    "param_value": 1,
                    "stack_value": 1,
                    "temp": 1,
                    "temp_value": 1,
                    "unknown4": 2,
                    "unused_stack_value": 1,
                    "unused_value3": 1,
                    "value3": 1,
                    "value_b": 1,
                    "var3": 1,
                    "variable2": 1
                },
                "uVar1": {
                    "address": 1,
                    "base_address": 1,
                    "config_code": 1,
                    "config_value": 1,
                    "constant": 1,
                    "constant1": 9,
                    "constant3": 2,
                    "constant4": 1,
                    "constant_a": 2,
                    "constant_value": 3,
                    "constant_value1": 2,
                    "control_value": 1,
                    "first_constant": 1,
                    "function_id": 1,
                    "new_value1": 1
                }
            },
            "called": [
                "FUN_08001264"
            ],
            "calling": [
                "FUN_0800458c"
            ],
            "code": "\nvoid process_input_08004e14(int *input,undefined4 param2,undefined4 param3)\n\n{\n  undefined4 constant1;\n  int input_value;\n  undefined4 config_value;\n  undefined4 constant2;\n  undefined4 local_variable3;\n  undefined4 constant3;\n  \n  input_value = *input;\n  if (input_value == 0x40012c00) {\n    config_value = 0x800;\n  }\n  else {\n    if (input_value != 0x40000000) {\n      if (input_value == 0x40000400) {\n        config_value = 3;\n      }\n      else {\n        if (input_value != 0x40000800) {\n          return;\n        }\n        config_value = 0x300;\n      }\n      constant1 = 0x40010c00;\n      goto LAB_08004e2e;\n    }\n    config_value = 2;\n  }\n  constant1 = 0x40010800;\nLAB_08004e2e:\n  constant3 = 2;\n  constant2 = 2;\n  local_variable3 = param3;\n  FUN_08001264(constant1,&config_value);\n  return;\n}\n\n",
            "current_name": "process_input_08004e14",
            "entrypoint": "0x08004e14",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004e14": "process_input_08004e14",
                "iVar2": "input_value",
                "local_14": "constant2",
                "local_18": "config_value",
                "local_c": "constant3",
                "param_1": "input",
                "param_2": "param2",
                "param_3": "param3",
                "uStack_10": "local_variable3",
                "uVar1": "constant1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004e7c": {
            "additional_data": {
                "FUN_08001194": {
                    "execute_command": 1,
                    "execute_procedure": 1,
                    "perform_operation": 3,
                    "process_config_value": 1,
                    "send_data": 2,
                    "set_configuration": 1,
                    "set_configuration_value": 1,
                    "set_values": 1,
                    "write_data_to_memory": 1
                },
                "FUN_080011fc": {
                    "cleanup": 1,
                    "execute_memory_operation": 1,
                    "execute_operation": 1,
                    "execute_task": 1,
                    "finalize_configuration": 1,
                    "finalize_operation": 2,
                    "finalize_transfer": 1,
                    "perform_action": 1,
                    "process_data": 1,
                    "update_config_flag": 1,
                    "update_value": 1
                },
                "FUN_08001264": {
                    "configure_device": 1,
                    "copy_data": 2,
                    "copy_memory": 1,
                    "copy_to_memory": 1,
                    "perform_operation": 1,
                    "set_config_values": 1,
                    "set_memory": 1,
                    "set_values": 2,
                    "update_config": 1,
                    "update_data": 1
                },
                "FUN_08004e7c": {
                    "initialize_component": 1,
                    "initialize_data": 2,
                    "initialize_function": 1,
                    "initialize_hardware": 1,
                    "initialize_memory": 5,
                    "initialize_module": 1,
                    "initialize_program": 1,
                    "initialize_resources": 1,
                    "initialize_settings": 2,
                    "initialize_system": 2,
                    "update_binary_status": 1,
                    "update_configuration": 3,
                    "update_data_if_match": 1,
                    "update_data_if_valid": 1,
                    "update_flag_and_params": 1,
                    "update_flag_and_values": 1,
                    "update_flag_if_equal": 1,
                    "update_permissions": 1,
                    "update_settings": 2
                },
                "_DAT_40021018": {
                    "binary_config": 1,
                    "config_register": 1,
                    "data": 1,
                    "device_flags": 1,
                    "flags": 1,
                    "system_status": 1
                },
                "local_10": {
                    "constant_c": 1,
                    "count": 2,
                    "counter": 1,
                    "flag3": 1,
                    "flag_param": 1,
                    "input_val3": 1,
                    "offset": 1,
                    "unused": 1,
                    "value": 3,
                    "value2": 3,
                    "value3": 1
                },
                "local_14": {
                    "buffer_index": 1,
                    "config_param2": 1,
                    "constant_b": 1,
                    "count": 6,
                    "count_param": 1,
                    "counter": 2,
                    "flag": 1,
                    "flag2": 1,
                    "index": 1,
                    "input_val2": 1,
                    "multiplier": 1,
                    "num1": 1,
                    "param2": 1,
                    "speed": 1,
                    "value": 3,
                    "value1": 5,
                    "value2": 2
                },
                "local_18": {
                    "buffer_size": 4,
                    "config_param1": 1,
                    "constant_a": 1,
                    "device_setting": 1,
                    "flag1": 1,
                    "input_val1": 1,
                    "new_value": 1,
                    "param1": 1,
                    "size": 13,
                    "size1": 1,
                    "size_limit": 1,
                    "size_param": 1,
                    "threshold_value": 1,
                    "value1": 2
                },
                "local_c": {
                    "buffer_value": 1,
                    "config_param3": 1,
                    "constant": 2,
                    "constant_d": 1,
                    "count": 1,
                    "counter": 1,
                    "flag": 4,
                    "flag4": 1,
                    "index": 1,
                    "input_val4": 1,
                    "mode": 1,
                    "num2": 1,
                    "param3": 1,
                    "size": 1,
                    "step": 1,
                    "temp": 1,
                    "temp_param": 1,
                    "value": 2,
                    "value2": 2,
                    "value3": 4,
                    "value4": 1
                },
                "param_1": {
                    "binary_status": 1,
                    "config": 2,
                    "configuration": 1,
                    "data": 3,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "flag": 1,
                    "flag_ptr": 2,
                    "input": 1,
                    "input_data": 1,
                    "input_param": 2,
                    "memory_pointer": 4,
                    "memory_ptr": 1,
                    "param": 1,
                    "parameter": 1,
                    "permissions": 1,
                    "resource_list": 1,
                    "settings": 3,
                    "settings_ptr": 1,
                    "system_config": 1
                }
            },
            "called": [
                "FUN_08001194",
                "FUN_08001264",
                "FUN_080011fc"
            ],
            "calling": [
                "FUN_08002724"
            ],
            "code": "\n\n\nvoid initialize_memory_08004e7c(int *memory_pointer)\n\n{\n  undefined4 size;\n  undefined4 count;\n  undefined4 value2;\n  undefined4 value3;\n  \n  if (*memory_pointer == 0x40013800) {\n    _DAT_40021018 = _DAT_40021018 | 0x4000;\n    size = 0x200;\n    count = 2;\n    value3 = 3;\n    FUN_08001264(0x40010800,&size);\n    size = 0x400;\n    count = 0;\n    value2 = 0;\n    FUN_08001264(0x40010800,&size);\n    FUN_08001194(0x25,0,0);\n    FUN_080011fc(0x25);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_memory_08004e7c",
            "entrypoint": "0x08004e7c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004e7c": "initialize_memory_08004e7c",
                "local_10": "value2",
                "local_14": "count",
                "local_18": "size",
                "local_c": "value3",
                "param_1": "memory_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004f10": {
            "additional_data": {
                "FUN_08004f10": {
                    "configure_device": 1,
                    "configure_memory": 1,
                    "configure_peripheral": 3,
                    "configure_peripheral_registers": 1,
                    "configure_peripherals": 1,
                    "configure_registers": 1,
                    "configure_system": 1,
                    "initialize_device": 1,
                    "initialize_hardware": 1,
                    "initialize_memory": 4,
                    "initialize_memory_registers": 1,
                    "initialize_peripheral": 1,
                    "initialize_peripheral_registers": 2,
                    "initialize_registers": 9,
                    "initialize_system": 2,
                    "initialize_system_registers": 1
                },
                "_DAT_40021000": {
                    "configuration_register": 1,
                    "control_register": 1,
                    "control_register1": 4,
                    "device_config1": 1,
                    "device_reg1": 1,
                    "gpio_config_register": 1,
                    "hardware_register1": 1,
                    "memory_config_register": 1,
                    "memory_control_register": 1,
                    "memory_register": 1,
                    "memory_register1": 1,
                    "peripheral1": 1,
                    "peripheral_config_register1": 1,
                    "peripheral_register1": 1,
                    "peripheral_register_a": 1,
                    "port_configuration_register": 1,
                    "register1": 5,
                    "register_1": 1,
                    "status_register": 2,
                    "system_config_register": 2
                },
                "_DAT_40021004": {
                    "configuration_register": 1,
                    "control_mask_register": 1,
                    "control_register": 2,
                    "control_register2": 4,
                    "device_config2": 1,
                    "device_control_register": 1,
                    "device_reg2": 1,
                    "gpio_config_register": 1,
                    "gpio_reset_register": 1,
                    "hardware_register2": 1,
                    "interrupt_config_register": 1,
                    "interrupt_control_register": 1,
                    "memory_register2": 1,
                    "peripheral2": 1,
                    "peripheral_config_register2": 1,
                    "peripheral_register2": 1,
                    "peripheral_register_b": 1,
                    "pin_configuration_register": 1,
                    "register2": 5,
                    "register_2": 1,
                    "system_control_register": 1
                },
                "_DAT_40021008": {
                    "configuration_register": 1,
                    "data_register": 2,
                    "data_register1": 1,
                    "device_config3": 1,
                    "device_reg3": 1,
                    "hardware_register3": 1,
                    "interrupt_configuration_register": 1,
                    "interrupt_control_register": 1,
                    "interrupt_priority_register": 2,
                    "memory_address": 2,
                    "memory_register3": 1,
                    "peripheral3": 1,
                    "peripheral_config_register3": 1,
                    "peripheral_register3": 1,
                    "peripheral_register_c": 1,
                    "register3": 5,
                    "register_3": 1,
                    "status_register": 1,
                    "system_configuration_register": 1,
                    "timer_config_register": 2,
                    "timer_control_register": 2,
                    "timer_value": 1
                },
                "_DAT_e000ed08": {
                    "data_register2": 1,
                    "device_config4": 1,
                    "device_reg4": 1,
                    "fault_status_register": 1,
                    "hardware_register4": 1,
                    "interrupt_config_register": 2,
                    "interrupt_control_register": 2,
                    "interrupt_enable_register": 1,
                    "interrupt_register": 3,
                    "memory_control_register": 1,
                    "memory_register4": 1,
                    "peripheral4": 1,
                    "peripheral_register4": 1,
                    "register4": 5,
                    "register_4": 1,
                    "system_control_register": 7,
                    "vector_table_offset": 1
                }
            },
            "called": [],
            "calling": [
                "entry"
            ],
            "code": "\n\n\nvoid initialize_peripheral_registers_08004f10(void)\n\n{\n  _DAT_40021000 = _DAT_40021000 & 0xfef2ffff | 1;\n  _DAT_40021004 = _DAT_40021004 & 0xf8800000;\n  _DAT_40021008 = 0x9f0000;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "current_name": "initialize_peripheral_registers_08004f10",
            "entrypoint": "0x08004f10",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004f10": "initialize_peripheral_registers_08004f10"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004fb4": {
            "additional_data": {
                "FUNC_080072d4": {
                    "cleanup": 6,
                    "cleanup_function": 1,
                    "cleanup_tasks": 1,
                    "execute_additional_function": 1,
                    "execute_cleanup_function": 1,
                    "final_function": 2,
                    "finalize_execution": 2,
                    "perform_cleanup": 2,
                    "reset_function": 1
                },
                "FUN_08000134": {
                    "execute_subfunction": 3,
                    "execute_task": 1,
                    "function_with_parameters": 1,
                    "process_input": 1
                },
                "FUN_08004fb4": {
                    "execute_function_batch": 1,
                    "execute_function_list": 1,
                    "execute_functions": 19,
                    "execute_registered_functions": 1,
                    "execute_sub_functions": 7,
                    "run_function_sequence": 1
                },
                "iVar1": {
                    "counter": 6,
                    "function_index": 1,
                    "index": 15,
                    "iteration_count": 1
                }
            },
            "called": [
                "FUN_08000134",
                "FUN_080072d4"
            ],
            "calling": [
                "entry"
            ],
            "code": "\nvoid execute_sub_functions_08004fb4(void)\n\n{\n  int index;\n  \n  for (index = 0; index != 0; index = index + 1) {\n    (*(code *)(&DAT_08007440)[index])();\n  }\n  FUNC_080072d4();\n  for (index = 0; index != 1; index = index + 1) {\n    (*(code *)(&DAT_08007440)[index])();\n  }\n  return;\n}\n\n",
            "current_name": "execute_sub_functions_08004fb4",
            "entrypoint": "0x08004fb4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004fb4": "execute_sub_functions_08004fb4",
                "iVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004ffc": {
            "additional_data": {
                "FUN_08004ffc": {
                    "clear_data_and_return": 1,
                    "clear_local_buffer": 1,
                    "clear_memory": 8,
                    "clear_parameter": 1,
                    "initialize_buffer": 3,
                    "initialize_data": 6,
                    "initialize_function": 5,
                    "initialize_local_variables": 1,
                    "initialize_memory": 1,
                    "initialize_param": 1,
                    "initialize_parameters": 1,
                    "initialize_params": 1,
                    "process_param": 1
                },
                "FUN_080050fc": {
                    "process_data": 1
                },
                "local_64": {
                    "constant_value3": 1,
                    "current_size": 1,
                    "limit2": 2,
                    "local_b": 1,
                    "local_max_size": 1,
                    "local_max_value3": 1,
                    "local_value_4": 1,
                    "local_var5": 3,
                    "local_var_e": 1,
                    "local_variable4": 1,
                    "max_int": 1,
                    "max_signed_value": 1,
                    "max_value": 1,
                    "max_value2": 6,
                    "max_value3": 2,
                    "max_value_copy": 1,
                    "min_value": 1,
                    "pointer2": 1,
                    "ptr2": 1,
                    "temp_value": 1,
                    "value1": 1
                },
                "local_68": {
                    "current_block": 1,
                    "current_buffer": 4,
                    "current_data": 1,
                    "current_data_pointer": 1,
                    "current_memory": 3,
                    "current_param": 1,
                    "current_pointer": 2,
                    "current_position": 1,
                    "current_ptr": 1,
                    "data_pointer_copy": 1,
                    "data_ptr": 1,
                    "local_memory": 1,
                    "local_pointer": 3,
                    "local_ptr": 1,
                    "local_var4": 3,
                    "local_var_d": 1,
                    "pointer": 1,
                    "pointer1": 1,
                    "ptr": 1,
                    "ptr1": 1,
                    "temp_ptr": 1
                },
                "local_6a": {
                    "constant2": 5,
                    "constant_value4": 1,
                    "default_value": 3,
                    "initial_value": 1,
                    "limit": 1,
                    "local_max_value2": 1,
                    "local_value_3": 1,
                    "local_var3": 3,
                    "local_var_c": 1,
                    "local_variable3": 1,
                    "mask": 1,
                    "max_short": 1,
                    "max_short_value": 1,
                    "max_value2": 2,
                    "min_size": 1,
                    "size2": 3,
                    "value2": 2
                },
                "local_6c": {
                    "array_size": 1,
                    "block_size": 1,
                    "buffer_size": 6,
                    "constant1": 5,
                    "constant_value1": 1,
                    "initial_size": 1,
                    "length": 1,
                    "local_max_length": 1,
                    "local_value_2": 1,
                    "local_var2": 3,
                    "local_var_b": 1,
                    "local_variable2": 1,
                    "size": 1,
                    "size1": 3,
                    "value1": 2
                },
                "local_70": {
                    "constant_value2": 1,
                    "limit1": 2,
                    "local_a": 1,
                    "local_max_value1": 1,
                    "local_value_1": 1,
                    "local_var1": 3,
                    "local_var_a": 1,
                    "local_variable1": 1,
                    "max_int": 1,
                    "max_limit": 2,
                    "max_size": 2,
                    "max_value": 8,
                    "max_value1": 5,
                    "maximum_value": 1
                },
                "local_78": {
                    "array": 1,
                    "block_array": 1,
                    "buffer_array": 1,
                    "data_array": 2,
                    "data_pointer": 1,
                    "local_array": 10,
                    "local_buffer": 2,
                    "local_data": 1,
                    "local_data_array": 2,
                    "local_memory": 3,
                    "local_memory_block": 1,
                    "local_pointers": 2,
                    "pointers": 1,
                    "ptr_buffer": 1,
                    "ptr_data": 1,
                    "temp_array": 1
                },
                "param_1": {
                    "buffer": 4,
                    "data": 7,
                    "data_pointer": 4,
                    "function_param": 1,
                    "input_array": 1,
                    "input_data": 2,
                    "input_param": 1,
                    "input_parameter": 1,
                    "input_ptr": 1,
                    "local_buffer": 1,
                    "memory_block": 4,
                    "memory_pointer": 3,
                    "param": 1
                },
                "param_2": {
                    "init_value1": 1,
                    "limit1": 2,
                    "param1": 1,
                    "param2": 10,
                    "param_a": 2,
                    "parameter2": 2,
                    "parameter_2": 1,
                    "size": 2,
                    "value1": 9,
                    "value2": 1
                },
                "param_3": {
                    "init_value2": 1,
                    "limit2": 2,
                    "param2": 1,
                    "param3": 10,
                    "param_b": 2,
                    "parameter3": 2,
                    "parameter_3": 1,
                    "value": 2,
                    "value2": 9,
                    "value3": 1
                },
                "param_4": {
                    "init_value3": 1,
                    "limit3": 2,
                    "param3": 1,
                    "param4": 10,
                    "param_4": 1,
                    "param_c": 2,
                    "parameter4": 2,
                    "parameter_4": 1,
                    "unused": 1,
                    "value3": 9,
                    "value4": 1
                },
                "uStack_4": {
                    "local_var8": 2,
                    "local_var_h": 1,
                    "param4": 1,
                    "stack_variable3": 1,
                    "stack_variable_4": 1,
                    "value3_copy": 1,
                    "value4": 1
                },
                "uStack_8": {
                    "local_var7": 2,
                    "local_var_g": 1,
                    "param3": 1,
                    "stack_variable2": 1,
                    "stack_variable_8": 1,
                    "value2_copy": 1,
                    "value3": 1
                },
                "uStack_c": {
                    "local_var6": 2,
                    "local_var_f": 1,
                    "param2": 1,
                    "stack_variable1": 1,
                    "stack_variable_c": 1,
                    "value1_copy": 1,
                    "value2": 1
                }
            },
            "called": [
                "FUN_080050fc"
            ],
            "calling": [
                "FUN_08004cac"
            ],
            "code": "\nvoid clear_memory_08004ffc(undefined *data,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined *local_array [2];\n  undefined4 max_value;\n  undefined2 buffer_size;\n  undefined2 constant2;\n  undefined *current_buffer;\n  undefined4 max_value2;\n  undefined4 local_var6;\n  undefined4 local_var7;\n  undefined4 local_var8;\n  \n  buffer_size = 0x208;\n  max_value = 0x7fffffff;\n  max_value2 = 0x7fffffff;\n  constant2 = 0xffff;\n  local_array[0] = data;\n  current_buffer = data;\n  local_var6 = param2;\n  local_var7 = param3;\n  local_var8 = param4;\n  FUN_080050fc(DAT_200001c0,local_array,param2);\n  *local_array[0] = 0;\n  return;\n}\n\n",
            "current_name": "clear_memory_08004ffc",
            "entrypoint": "0x08004ffc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004ffc": "clear_memory_08004ffc",
                "local_64": "max_value2",
                "local_68": "current_buffer",
                "local_6a": "constant2",
                "local_6c": "buffer_size",
                "local_70": "max_value",
                "local_78": "local_array",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uStack_4": "local_var8",
                "uStack_8": "local_var7",
                "uStack_c": "local_var6"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005044": {
            "additional_data": {
                "FUN_08005044": {
                    "extract_and_update_data": 2,
                    "process_data": 7,
                    "resize_and_copy": 1,
                    "reverse_and_update": 1,
                    "reverse_binary": 1,
                    "update_data": 12,
                    "update_param_with_check": 1,
                    "update_parameter": 1
                },
                "FUN_08005630": {
                    "copy_chunk": 1,
                    "copy_data": 8,
                    "copy_data_with_offset": 1,
                    "copy_memory": 2,
                    "modify_data": 1,
                    "modify_data1": 1,
                    "modify_other_data": 1,
                    "process_data4": 1,
                    "process_function2": 1,
                    "set_memory": 1,
                    "update_data_parameters": 1
                },
                "FUN_08005646": {
                    "copy_data": 5,
                    "copy_data_to_output": 1,
                    "manipulate_data": 1,
                    "modify_data": 2,
                    "modify_data2": 1,
                    "process_data": 1,
                    "process_data2": 1,
                    "process_function5": 1,
                    "update_data": 1,
                    "update_data_2": 1,
                    "update_data_in_array": 1,
                    "update_data_range": 2,
                    "update_function": 1,
                    "update_memory": 1
                },
                "FUN_0800567c": {
                    "copy_data_to_new_memory": 1,
                    "free_memory": 7,
                    "handle_allocation_error": 1,
                    "handle_missing_result": 1,
                    "handle_update_error": 1,
                    "modify_data3": 1,
                    "process_data3": 1,
                    "process_error": 1,
                    "process_function4": 1,
                    "release_memory": 3,
                    "reverse_other_data": 1
                },
                "FUN_08005714": {
                    "allocate_memory": 11,
                    "allocate_memory_with_value": 1,
                    "calculate_new_size": 1,
                    "calculate_something": 1,
                    "check_availability": 1,
                    "check_memory_allocation": 1,
                    "process_data5": 1,
                    "process_function1": 1,
                    "resize_memory": 1,
                    "validate_result": 1
                },
                "FUN_080057d0": {
                    "allocate_and_copy_data": 2,
                    "allocate_memory": 4,
                    "allocate_memory_d0": 1,
                    "process_data1": 1,
                    "process_function3": 1,
                    "reallocate_memory": 1,
                    "reserve_memory": 2,
                    "reverse_data": 5,
                    "update_data": 1,
                    "update_data_value": 1
                },
                "LAB_0800508a": {
                    "handle_error": 1
                },
                "fun_0800567c": {
                    "release_memory": 1
                },
                "iVar1": {
                    "new_value": 1,
                    "result": 24,
                    "result1": 1,
                    "result_1": 1,
                    "result_code": 1,
                    "status": 1,
                    "temp_var1": 1,
                    "updated_buffer": 1
                },
                "iVar4": {
                    "array_diff": 1,
                    "diff": 2,
                    "difference": 9,
                    "offset": 15,
                    "temp_var4": 1,
                    "updated_value3": 2,
                    "var_diff": 1
                },
                "param_1": {
                    "data_pointer": 1,
                    "output": 7,
                    "output_arr": 1,
                    "output_array": 8,
                    "output_buffer": 5,
                    "output_param": 2,
                    "output_ptr": 2,
                    "output_value": 1,
                    "result": 2,
                    "status": 1
                },
                "param_2": {
                    "data": 6,
                    "data_ptr": 2,
                    "info_array": 1,
                    "input": 4,
                    "input_arr": 1,
                    "input_array": 8,
                    "input_buffer": 5,
                    "input_param": 2,
                    "input_params": 1
                },
                "param_3": {
                    "additional_param": 1,
                    "data": 3,
                    "data_size": 1,
                    "data_value": 1,
                    "destination": 1,
                    "input_data": 1,
                    "input_value": 3,
                    "input_value1": 1,
                    "input_value_1": 1,
                    "new_value": 1,
                    "param": 3,
                    "param1": 1,
                    "parameter_3": 1,
                    "size": 1,
                    "value": 11
                },
                "param_4": {
                    "count": 3,
                    "index": 4,
                    "input": 1,
                    "input_length": 2,
                    "input_size": 1,
                    "input_value": 1,
                    "input_value2": 1,
                    "input_value_2": 1,
                    "new_count": 1,
                    "num_elements": 1,
                    "offset": 1,
                    "param2": 1,
                    "parameter_4": 1,
                    "size": 11,
                    "update_limit": 1
                },
                "uVar2": {
                    "adjusted_size": 1,
                    "limit": 1,
                    "max_count": 1,
                    "modified_value": 1,
                    "new_buffer_size": 1,
                    "new_count": 2,
                    "new_index": 3,
                    "new_length": 1,
                    "new_num_elements": 1,
                    "new_offset": 1,
                    "new_size": 9,
                    "temp1": 1,
                    "temp_var2": 1,
                    "updated_length": 1,
                    "updated_size": 3,
                    "updated_value1": 2
                },
                "uVar3": {
                    "array_length": 1,
                    "array_size": 1,
                    "chunk_size": 1,
                    "current_buffer_size": 1,
                    "current_size": 4,
                    "data2": 1,
                    "data_size": 3,
                    "final_count": 1,
                    "input_buffer_size": 1,
                    "input_count": 1,
                    "input_size": 2,
                    "max_input_value": 1,
                    "max_size": 1,
                    "new_size": 1,
                    "old_size": 1,
                    "original_count": 1,
                    "original_num_elements": 1,
                    "original_size": 1,
                    "param2_value": 1,
                    "previous_value": 1,
                    "size": 1,
                    "temp_var3": 1,
                    "updated_value2": 2
                }
            },
            "called": [
                "FUN_080057d0",
                "FUN_08005646",
                "FUN_0800567c",
                "FUN_08005630",
                "FUN_08005714"
            ],
            "calling": [
                "FUN_080050fc"
            ],
            "code": "\nundefined4 extract_and_update_data_08005044(undefined4 *output_array,int *input_array,undefined4 value,uint size)\n\n{\n  int result;\n  uint new_size;\n  uint current_size;\n  int offset;\n  \n  current_size = input_array[2];\n  if ((current_size <= size) && ((*(ushort *)(input_array + 3) & 0x480) != 0)) {\n    offset = *input_array - input_array[4];\n    current_size = (uint)(input_array[5] * 3) / 2;\n    new_size = size + 1 + offset;\n    if (current_size < new_size) {\n      current_size = new_size;\n    }\n    if ((int)((uint)*(ushort *)(input_array + 3) << 0x15) < 0) {\n      result = FUN_08005714(output_array,current_size);\n      if (result == 0) {\nhandle_error:\n        *output_array = 0xc;\n        *(ushort *)(input_array + 3) = *(ushort *)(input_array + 3) | 0x40;\n        return 0xffffffff;\n      }\n      FUN_08005630(result,input_array[4],offset);\n      *(ushort *)(input_array + 3) = *(ushort *)(input_array + 3) & 0xfb7f | 0x80;\n    }\n    else {\n      result = FUN_080057d0(output_array,input_array[4],current_size);\n      if (result == 0) {\n        FUN_0800567c(output_array,input_array[4]);\n        goto handle_error;\n      }\n    }\n    input_array[4] = result;\n    *input_array = result + offset;\n    input_array[5] = current_size;\n    input_array[2] = current_size - offset;\n    current_size = size;\n  }\n  if (size <= current_size) {\n    current_size = size;\n  }\n  FUN_08005646(*input_array,value,current_size);\n  input_array[2] = input_array[2] - current_size;\n  *input_array = current_size + *input_array;\n  return 0;\n}\n\n",
            "current_name": "extract_and_update_data_08005044",
            "entrypoint": "0x08005044",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005044": "extract_and_update_data_08005044",
                "LAB_0800508a": "handle_error",
                "iVar1": "result",
                "iVar4": "offset",
                "param_1": "output_array",
                "param_2": "input_array",
                "param_3": "value",
                "param_4": "size",
                "uVar2": "new_size",
                "uVar3": "current_size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080050fc": {
            "additional_data": {
                "0x08005044": {
                    "extract_data_piece": 1
                },
                "0x080051fc": {
                    "label": 1
                },
                "0x08005294": {
                    "unreachable_block": 1
                },
                "0x08005714": {
                    "allocate_memory": 1
                },
                "0x1b": {
                    "width_flag_shift": 1
                },
                "0x1c": {
                    "precision_flag_shift": 1
                },
                "0x20": {
                    "space_char": 1
                },
                "0x25": {
                    "percent_char": 1
                },
                "0x2a": {
                    "asterisk_char": 1
                },
                "0x2b": {
                    "plus_char": 1
                },
                "0x2e": {
                    "dot_char": 1
                },
                "0x30": {
                    "zero_char": 1
                },
                "0x40": {
                    "precision_flag_value": 1,
                    "some_constant": 1
                },
                "0x8005045": {
                    "internal_constant": 1
                },
                "0xc": {
                    "error_code": 1
                },
                "0xf7ff8c81U": {
                    "bit_shift2": 1,
                    "hash_flag_offset": 1
                },
                "0xf7ff8c87U": {
                    "bit_shift1": 1,
                    "width_flag_offset": 1
                },
                "8": {
                    "alignment": 1
                },
                "9": {
                    "decimal_upper_bound": 1
                },
                "DAT_08007379": {
                    "char_array2": 1,
                    "char_set1": 1,
                    "characters1": 1,
                    "digits": 1,
                    "some_data1": 1,
                    "upper_case_letters": 1,
                    "width_chars": 1
                },
                "DAT_0800737f": {
                    "char_array1": 1,
                    "char_set2": 1,
                    "characters2": 1,
                    "flags": 1,
                    "lower_case_letters": 1,
                    "precision_chars": 1,
                    "some_data2": 1
                },
                "FUM_08005614": {
                    "is_in_list": 1
                },
                "FUN_08005044": {
                    "copy_data": 1,
                    "process_data": 1,
                    "process_sub_string": 1
                },
                "FUN_080050fc": {
                    "extract_data": 1,
                    "extract_info_from_binary": 1,
                    "parse_command": 2,
                    "parse_data": 2,
                    "parse_format_string": 1,
                    "parse_input": 1,
                    "process_binary_data": 2,
                    "process_data": 13
                },
                "FUN_080053d4": {
                    "format_integer": 1,
                    "process_character": 1,
                    "reverse_bytes": 1
                },
                "FUN_08005614": {
                    "find_character": 1,
                    "match_character": 1
                },
                "FUN_08005714": {
                    "allocate_buffer": 1,
                    "allocate_memory": 2
                },
                "F_unimproved": {
                    "extract_code": 1
                },
                "bVar4": {
                    "boolean_var": 1,
                    "flag": 6,
                    "found": 3,
                    "found_digit": 2,
                    "has_number": 1,
                    "is_digit": 8,
                    "is_number": 5,
                    "is_numeric": 3,
                    "is_valid": 2
                },
                "bVar7": {
                    "is_valid_2": 1
                },
                "code_array": {
                    "another_int_array_ptr": 1
                },
                "iVar1": {
                    "current_index": 1,
                    "index": 1,
                    "int_value1": 1,
                    "length": 2,
                    "result": 20,
                    "result1": 1,
                    "return_value": 1,
                    "status": 1,
                    "temp_int_1": 1,
                    "temp_var1": 1,
                    "var1": 1
                },
                "iVar10": {
                    "temp_int_7": 1
                },
                "iVar2": {
                    "bytes_written": 1,
                    "count": 1,
                    "int_value2": 1,
                    "length": 5,
                    "read_result": 1,
                    "result": 4,
                    "result2": 2,
                    "return_code": 1,
                    "return_value": 4,
                    "size": 1,
                    "status": 2,
                    "sub_function_result": 1,
                    "sub_result": 1,
                    "temp": 3,
                    "temp_int_2": 1,
                    "temp_var2": 1,
                    "var2": 1
                },
                "iVar3": {
                    "temp_int_5": 1
                },
                "iVar8": {
                    "temp_int_6": 1
                },
                "iVar9": {
                    "temp_int_8": 1
                },
                "local_20": {
                    "var12": 1
                },
                "local_28": {
                    "var11": 1
                },
                "local_30": {
                    "char4": 1,
                    "const_val4": 1,
                    "constant": 1,
                    "constant3": 1,
                    "flag_zero": 1,
                    "hash_flag": 1,
                    "length_flag": 1,
                    "length_modifier": 3,
                    "local_reserved": 1,
                    "local_var30": 1,
                    "local_var_k": 1,
                    "num_args": 1,
                    "temp2": 1,
                    "temp3": 1,
                    "temp_value": 1,
                    "temp_value2": 1,
                    "temp_var_2": 1,
                    "unused": 3,
                    "unused2": 2,
                    "unused_var5": 1,
                    "var10": 1,
                    "var4": 1,
                    "zero_flag": 2
                },
                "local_45": {
                    "additional_flag": 1,
                    "alt_form": 1,
                    "alternative_form_flag": 1,
                    "char3": 1,
                    "const_val3": 1,
                    "flag2": 1,
                    "flag3": 2,
                    "flag_45": 1,
                    "flag_hash": 1,
                    "flags2": 1,
                    "flags_backup": 1,
                    "hash": 1,
                    "hash_flag": 1,
                    "local_flag": 1,
                    "local_var45": 1,
                    "local_var_j": 1,
                    "modifier": 1,
                    "padding": 1,
                    "plus_flag": 1,
                    "sign": 2,
                    "sign_flag": 3,
                    "temp_byte_3": 1,
                    "unused_var4": 1,
                    "var3": 1,
                    "var9": 1
                },
                "local_6e": {
                    "100_flag": 1,
                    "byte2": 1,
                    "char2": 1,
                    "const_val2": 1,
                    "constant2": 1,
                    "constant_b": 1,
                    "constant_value_2": 1,
                    "flag2": 3,
                    "flag_plus": 1,
                    "left_align_flag": 1,
                    "local_var6e": 1,
                    "local_var_i": 1,
                    "oct_code": 1,
                    "plus": 1,
                    "plus_flag": 3,
                    "plus_sign": 1,
                    "precision_flag": 1,
                    "temp_byte_2": 1,
                    "temp_char2": 1,
                    "unused": 1,
                    "unused_var3": 1,
                    "var2": 1,
                    "var8": 1,
                    "zero_flag": 1,
                    "zero_pad": 1
                },
                "local_6f": {
                    "10_flag": 1,
                    "byte1": 1,
                    "char1": 1,
                    "const_val1": 1,
                    "constant1": 1,
                    "constant_a": 1,
                    "constant_value_1": 1,
                    "flag1": 3,
                    "flag_space": 1,
                    "hex_code": 1,
                    "local_var6f": 1,
                    "local_var_h": 1,
                    "space": 1,
                    "space_char": 1,
                    "space_flag": 5,
                    "space_pad": 1,
                    "temp_byte_1": 1,
                    "temp_char1": 1,
                    "unused": 1,
                    "unused_var2": 1,
                    "var1": 1,
                    "var7": 1,
                    "width_flag": 1
                },
                "local_70": {
                    "byte_val": 1,
                    "byte_value": 1,
                    "c": 1,
                    "ch": 2,
                    "char1": 1,
                    "char_value": 1,
                    "conversion": 1,
                    "conversion_spec": 1,
                    "conversion_specifier": 6,
                    "current_byte": 1,
                    "current_char": 2,
                    "format_char": 1,
                    "local_byte": 1,
                    "local_var70": 1,
                    "local_var_g": 1,
                    "next_byte": 1,
                    "specifier": 7,
                    "symbol": 1
                },
                "local_74": {
                    "byte_counter": 1,
                    "bytes": 1,
                    "bytes_processed": 1,
                    "count": 1,
                    "local_var5": 1,
                    "local_var74": 1,
                    "local_var_f": 1,
                    "total": 1,
                    "total_length": 14,
                    "total_size": 9
                },
                "local_7c": {
                    "count": 1,
                    "decimal_width": 1,
                    "field_width": 1,
                    "int_value4": 1,
                    "integer_param": 1,
                    "integer_val": 1,
                    "local_var4": 1,
                    "local_var7c": 1,
                    "local_var_e": 1,
                    "number": 3,
                    "param1": 1,
                    "param_8": 1,
                    "post_size": 1,
                    "precision": 1,
                    "second_integer_part": 1,
                    "sub_value": 1,
                    "temp_int_4": 1,
                    "temp_value2": 1,
                    "var6": 1,
                    "width": 10
                },
                "local_80": {
                    "additional_flag": 1,
                    "count": 1,
                    "length": 2,
                    "local_var3": 1,
                    "local_var80": 1,
                    "local_var_d": 1,
                    "p_var": 1,
                    "param_7": 1,
                    "reserved": 1,
                    "size": 1,
                    "sub_length": 1,
                    "temp": 1,
                    "temp1": 1,
                    "temp2": 1,
                    "temp3": 1,
                    "temp_buffer": 1,
                    "temp_value": 3,
                    "temp_var": 1,
                    "temp_var_1": 1,
                    "type": 1,
                    "unused": 4,
                    "unused_var1": 1,
                    "var5": 1,
                    "width": 1,
                    "zero": 1
                },
                "local_84": {
                    "count": 1,
                    "decimal_places": 1,
                    "decimal_precision": 1,
                    "int_value3": 1,
                    "integer_part": 1,
                    "length": 2,
                    "length_value": 1,
                    "local_var2": 1,
                    "local_var84": 1,
                    "local_var_c": 1,
                    "param2": 1,
                    "param_6": 1,
                    "pre_size": 1,
                    "precision": 13,
                    "sub_command": 1,
                    "temp_int_3": 1,
                    "var4": 1,
                    "width": 1
                },
                "local_88": {
                    "bitset_flags": 1,
                    "flag": 4,
                    "flag_bits": 1,
                    "flags": 20,
                    "flags2": 1,
                    "local_var1": 1,
                    "local_var88": 1,
                    "local_var_b": 1,
                    "temp_flags": 1
                },
                "local_8c": {
                    "additional_args": 1,
                    "additional_data_ptr": 1,
                    "buffer_ptr": 1,
                    "local_array": 2,
                    "local_buffer_ptr": 1,
                    "local_param": 1,
                    "local_pointer1": 1,
                    "local_ptr_c": 1,
                    "local_var_a": 1,
                    "output_ptr": 1,
                    "p_args_index": 1,
                    "p_param": 1,
                    "param5": 1,
                    "param_5": 1,
                    "param_array_ptr": 1,
                    "param_list": 1,
                    "pointer": 1,
                    "ptr_array": 5,
                    "ptr_list": 1,
                    "ptr_stack": 1,
                    "sub_buffer": 1,
                    "sub_string_size": 1,
                    "temp_int_array_ptr": 1,
                    "temp_ptr": 1,
                    "temp_var_ptr": 1
                },
                "loop_counter": {
                    "loop_counter": 1
                },
                "pDVar12": {
                    "struct_ptr": 1
                },
                "param_1": {
                    "array_pointer": 1,
                    "config": 1,
                    "input_array": 1,
                    "output": 15,
                    "output_array": 1,
                    "output_buffer": 5,
                    "output_message": 1,
                    "output_param": 1,
                    "p_dest": 1,
                    "param1": 1,
                    "result": 1,
                    "status": 1
                },
                "param_2": {
                    "buffer": 3,
                    "command": 1,
                    "data": 1,
                    "flags": 1,
                    "fmt": 1,
                    "header": 1,
                    "input": 9,
                    "input1": 1,
                    "input_array": 3,
                    "input_buffer": 4,
                    "input_param1": 1,
                    "int_array_ptr": 1,
                    "output_array": 1,
                    "p_buffer": 1,
                    "param2": 1
                },
                "param_3": {
                    "buffer": 1,
                    "byte_array": 1,
                    "byte_array_ptr": 1,
                    "command": 1,
                    "data": 1,
                    "format": 7,
                    "format_specifier": 1,
                    "format_string": 6,
                    "input": 2,
                    "input2": 1,
                    "input_buffer": 1,
                    "input_param2": 1,
                    "input_string": 1,
                    "p_string": 1,
                    "param3": 1,
                    "pattern": 3
                },
                "param_4": {
                    "additional_data": 1,
                    "another_int_array_ptr": 1,
                    "args": 1,
                    "buf": 1,
                    "buffer": 6,
                    "counter": 1,
                    "data_size": 1,
                    "format_args": 1,
                    "input3": 1,
                    "input_param3": 1,
                    "length": 3,
                    "local_buffer": 1,
                    "memory": 1,
                    "output": 1,
                    "output_length": 1,
                    "p_size": 1,
                    "param4": 1,
                    "param_4": 1,
                    "param_array": 2,
                    "size": 2,
                    "temp_buffer": 1
                },
                "pbVar5": {
                    "byte_pointer1": 1,
                    "byte_ptr": 5,
                    "byte_ptr_1": 1,
                    "current": 2,
                    "current_byte": 4,
                    "current_char": 2,
                    "p_char": 1,
                    "p_format": 1,
                    "pointer": 1,
                    "pointer1": 1,
                    "ptr": 6,
                    "ptr1": 2,
                    "ptr_byte": 1,
                    "ptr_char": 1,
                    "temp_ptr1": 1
                },
                "pbVar6": {
                    "byte_pointer2": 1,
                    "byte_ptr2": 2,
                    "byte_ptr_2": 1,
                    "current": 1,
                    "current_byte_ptr": 3,
                    "current_char": 1,
                    "next": 2,
                    "next_byte": 3,
                    "next_char": 2,
                    "next_ptr_byte": 1,
                    "p_current_char": 1,
                    "p_format_start": 1,
                    "pointer2": 1,
                    "previous_char": 1,
                    "ptr": 2,
                    "ptr2": 2,
                    "ptr_end": 2,
                    "ptr_next_token": 1,
                    "temp_byte_ptr": 1,
                    "temp_ptr2": 1
                },
                "piVar3": {
                    "counter": 1,
                    "local_pointer": 1,
                    "p": 1,
                    "p_args": 1,
                    "p_counter": 1,
                    "param_4_ptr": 1,
                    "pointer": 4,
                    "ptr": 12,
                    "temp": 2,
                    "temp_pointer1": 1,
                    "temp_ptr": 2,
                    "temp_ptr_1": 1,
                    "temp_var1": 1,
                    "var3": 1
                },
                "unaff_r3": {
                    "temp_var_3": 1
                },
                "unaff_r6": {
                    "tmp_var_hex": 1
                },
                "unaff_r9": {
                    "additional_data": 1,
                    "additional_result": 3,
                    "error_code": 2,
                    "return_value": 3,
                    "sub_output": 1,
                    "temp": 2,
                    "temp1": 1,
                    "temp2": 1,
                    "temp_var_while": 1,
                    "unaff_data": 1,
                    "unaff_r9": 10,
                    "unaff_val": 1,
                    "unaff_var": 1,
                    "unaffected_register_value": 1,
                    "unaffected_var": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_080053d4",
                "FUN_08005044",
                "FUN_08005614",
                "FUN_08005714"
            ],
            "calling": [
                "FUN_08004ffc"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08005294) */\n\nint process_binary_data_080050fc(undefined4 *output,int *input,byte *format,int *buffer)\n\n{\n  int result;\n  int length;\n  int *ptr;\n  bool is_digit;\n  byte *ptr;\n  byte *next_byte;\n  int unaff_r9;\n  int *ptr_array;\n  uint flags;\n  int precision;\n  undefined4 unused;\n  int width;\n  int total_length;\n  byte specifier;\n  undefined space_flag;\n  undefined plus_flag;\n  undefined sign_flag;\n  undefined4 length_modifier;\n  \n  ptr_array = buffer;\n  if (((int)((uint)*(ushort *)(input + 3) << 0x18) < 0) && (input[4] == 0)) {\n    result = FUN_08005714(output,0x40);\n    *input = result;\n    input[4] = result;\n    if (result == 0) {\n      *output = 0xc;\n      return -1;\n    }\n    input[5] = 0x40;\n  }\n  total_length = 0;\n  space_flag = 0x20;\n  plus_flag = 0x30;\n  ptr = format;\nLAB_08005146:\n  next_byte = ptr;\n  if (*next_byte != 0) goto LAB_080051ca;\n  goto LAB_08005150;\nLAB_080051ca:\n  ptr = next_byte + 1;\n  if (*next_byte != 0x25) goto LAB_08005146;\nLAB_08005150:\n  result = (int)next_byte - (int)format;\n  if (result != 0) {\n    length = FUN_08005044(output,input,format,result);\n    if (length == -1) {\nLAB_080052ac:\n      if ((int)((uint)*(ushort *)(input + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return total_length;\n    }\n    total_length = total_length + result;\n  }\n  if (*next_byte == 0) goto LAB_080052ac;\n  flags = 0;\n  width = 0;\n  precision = -1;\n  unused = 0;\n  sign_flag = 0;\n  length_modifier = 0;\n  ptr = next_byte + 1;\n  while( true ) {\n    result = FUN_08005614(&DAT_08007379,*ptr);\n    format = ptr + 1;\n    if (result == 0) break;\n    flags = 1 << (result + bit_shift1 & 0xff) | flags;\n    ptr = format;\n  }\n  if ((int)(flags << 0x1b) < 0) {\n    sign_flag = 0x20;\n  }\n  if ((int)(flags << 0x1c) < 0) {\n    sign_flag = 0x2b;\n  }\n  if (*ptr == 0x2a) {\n    ptr = ptr_array + 1;\n    result = *ptr_array;\n    ptr_array = ptr;\n    if (result < 0) {\n      width = -result;\n      flags = flags | 2;\n      goto LAB_080051fc;\n    }\n  }\n  else {\n    is_digit = false;\n    result = width;\n    format = ptr;\n    while( true ) {\n      if (9 < *format - 0x30) break;\n      result = result * 10 + (*format - 0x30);\n      is_digit = true;\n      format = format + 1;\n    }\n    if (!is_digit) goto LAB_080051fc;\n  }\n  width = result;\nLAB_080051fc:\n  if (*format == 0x2e) {\n    if (format[1] == 0x2a) {\n      format = format + 2;\n      ptr = ptr_array + 1;\n      precision = *ptr_array;\n      ptr_array = ptr;\n      if (precision < 0) {\n        precision = -1;\n      }\n    }\n    else {\n      is_digit = false;\n      result = 0;\n      precision = 0;\n      while( true ) {\n        format = format + 1;\n        if (9 < *format - 0x30) break;\n        result = result * 10 + (*format - 0x30);\n        is_digit = true;\n      }\n      if (is_digit) {\n        precision = result;\n      }\n    }\n  }\n  result = FUN_08005614(&DAT_0800737f,*format,3);\n  if (result != 0) {\n    format = format + 1;\n    flags = flags | 0x40 << (result + hash_flag_offset & 0xff);\n  }\n  specifier = *format;\n  format = format + 1;\n  result = FUN_08005614(\"efgEFG\",specifier,6);\n  if (result == 0) {\n    unaff_r9 = FUN_080053d4(output,&flags,input,0x8005045,&ptr_array);\n    if (unaff_r9 == -1) goto LAB_080052ac;\n  }\n  else {\n    ptr_array = (int *)(((int)ptr_array + 7U & 0xfffffff8) + 8);\n  }\n  total_length = total_length + unaff_r9;\n  ptr = format;\n  goto LAB_08005146;\n}\n\n",
            "current_name": "process_binary_data_080050fc",
            "entrypoint": "0x080050fc",
            "imported": false,
            "improved": true,
            "renaming": {
                "0xf7ff8c81U": "hash_flag_offset",
                "0xf7ff8c87U": "bit_shift1",
                "FUN_080050fc": "process_binary_data_080050fc",
                "bVar4": "is_digit",
                "iVar1": "result",
                "iVar2": "length",
                "iVar3": "temp_int_5",
                "local_30": "length_modifier",
                "local_45": "sign_flag",
                "local_6e": "plus_flag",
                "local_6f": "space_flag",
                "local_70": "specifier",
                "local_74": "total_length",
                "local_7c": "width",
                "local_80": "unused",
                "local_84": "precision",
                "local_88": "flags",
                "local_8c": "ptr_array",
                "param_1": "output",
                "param_2": "input",
                "param_3": "format",
                "param_4": "buffer",
                "pbVar5": "ptr",
                "pbVar6": "next_byte",
                "piVar3": "ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080052e4": {
            "additional_data": {
                "FUN_080052e4": {
                    "calculate_buffer_size": 1,
                    "calculate_length": 1,
                    "calculate_size_with_params": 1,
                    "decode_and_process_data": 1,
                    "decode_data": 2,
                    "extracted_data": 1,
                    "parse_data": 1,
                    "process_data": 20,
                    "update_parameter_count": 1
                },
                "bVar5": {
                    "check_condition": 2,
                    "check_flag": 3,
                    "condition": 4,
                    "condition_met": 1,
                    "flag": 3,
                    "has_flag": 1,
                    "is_condition_met": 3,
                    "is_condition_true": 2,
                    "is_flag_set": 3,
                    "is_nonzero": 1,
                    "is_true": 1,
                    "is_zero": 6,
                    "should_continue": 1
                },
                "iVar1": {
                    "counter": 1,
                    "i": 2,
                    "index": 11,
                    "index1": 6,
                    "iteration": 1,
                    "iterator": 1,
                    "loop_counter": 4,
                    "loop_counter_1": 1,
                    "loop_index": 1,
                    "loop_index1": 1,
                    "result": 1,
                    "return_value": 1
                },
                "iVar2": {
                    "callback_result": 6,
                    "index2": 6,
                    "j": 1,
                    "loop_counter_2": 1,
                    "loop_result": 1,
                    "result": 12,
                    "return_value": 2,
                    "temp": 1,
                    "temp_value": 1
                },
                "loopIndex1": {
                    "index": 1
                },
                "loopResult": {
                    "result": 1
                },
                "param_1": {
                    "arg1": 1,
                    "data": 4,
                    "input": 8,
                    "input1": 2,
                    "input_buffer": 2,
                    "input_data": 2,
                    "input_param": 6,
                    "input_value": 4,
                    "param1": 1,
                    "result": 1
                },
                "param_2": {
                    "array": 3,
                    "buffer": 1,
                    "buffer_data": 1,
                    "data": 4,
                    "data_array": 11,
                    "data_ptr": 1,
                    "input": 2,
                    "input2": 2,
                    "input_array": 1,
                    "input_buffer": 1,
                    "param_array": 1,
                    "parameter_array": 1,
                    "params": 2
                },
                "param_3": {
                    "decoded_length": 1,
                    "max_length": 1,
                    "output": 9,
                    "output1": 1,
                    "output_array_count": 1,
                    "output_length": 3,
                    "output_param": 5,
                    "output_ptr": 1,
                    "output_size": 7,
                    "result": 1,
                    "updated_parameter_count": 1
                },
                "param_4": {
                    "additional_param": 6,
                    "arg4": 1,
                    "config_param": 1,
                    "extra_param": 1,
                    "input3": 2,
                    "param": 5,
                    "param1": 1,
                    "param4": 6,
                    "param4_value": 1,
                    "param_4": 5,
                    "parameter_value": 1,
                    "value": 1
                },
                "param_5": {
                    "callback": 16,
                    "callback_func": 6,
                    "callback_function": 7,
                    "process_data": 1,
                    "process_function": 1
                },
                "return": {
                    "return_value": 1
                },
                "uVar3": {
                    "length": 1,
                    "max_data_length": 1,
                    "max_length": 8,
                    "max_output_size": 1,
                    "max_parameter_count": 1,
                    "max_size": 5,
                    "max_val": 1,
                    "max_value": 11,
                    "min_size": 2
                },
                "uVar4": {
                    "additional_chars": 1,
                    "additional_length": 1,
                    "count": 4,
                    "extra_length": 1,
                    "extra_offset": 1,
                    "extra_output": 1,
                    "extra_size": 2,
                    "extra_value": 1,
                    "increment": 3,
                    "length": 1,
                    "new_length": 1,
                    "new_value": 1,
                    "offset": 6,
                    "other_value": 1,
                    "temp_length": 2,
                    "temp_value": 3,
                    "value": 1
                },
                "uVar6": {
                    "byte_val": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080053d4"
            ],
            "code": "\nundefined4\ndecode_and_process_data_080052e4(undefined4 input,uint *data_array,uint *output,undefined4 param4,code *callback)\n\n{\n  int index;\n  int result;\n  uint max_value;\n  uint offset;\n  bool is_zero;\n  \n  max_value = data_array[4];\n  if ((int)data_array[4] < (int)data_array[2]) {\n    max_value = data_array[2];\n  }\n  *output = max_value;\n  if (*(char *)((int)data_array + 0x43) != '\\0') {\n    *output = max_value + 1;\n  }\n  if ((int)(*data_array << 0x1a) < 0) {\n    *output = *output + 2;\n  }\n  if ((*data_array & 6) == 0) {\n    for (index = 0; index < (int)(data_array[3] - *output); index = index + 1) {\n      result = (*callback)(input,param4,(int)data_array + 0x19,1);\n      if (result == -1) {\n        return_value 0xffffffff;\n      }\n    }\n  }\n  max_value = (uint)*(byte *)((int)data_array + 0x43);\n  if (max_value != 0) {\n    max_value = 1;\n  }\n  offset = max_value;\n  if ((int)(*data_array << 0x1a) < 0) {\n    *(undefined *)((int)data_array + max_value + 0x43) = 0x30;\n    offset = max_value + 2;\n    *(undefined *)((int)data_array + max_value + 0x44) = *(undefined *)((int)data_array + 0x45);\n  }\n  index = (*callback)(input,param4,(int)data_array + 0x43,offset);\n  if (index != -1) {\n    max_value = data_array[3];\n    is_zero = (*data_array & 6) != 4;\n    if (is_zero) {\n      max_value = 0;\n    }\n    offset = 0;\n    if (!is_zero) {\n      max_value = max_value - *output;\n    }\n    if (!is_zero) {\n      max_value = max_value & ~((int)max_value >> 0x1f);\n    }\n    if ((int)data_array[4] < (int)data_array[2]) {\n      max_value = max_value + (data_array[2] - data_array[4]);\n    }\n    while( true ) {\n      if (max_value == offset) {\n        return_value 0;\n      }\n      index = (*callback)(input,param4,(int)data_array + 0x1a,1);\n      if (index == -1) break;\n      offset = offset + 1;\n    }\n  }\n  return_value 0xffffffff;\n}\n\n",
            "current_name": "decode_and_process_data_080052e4",
            "entrypoint": "0x080052e4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080052e4": "decode_and_process_data_080052e4",
                "bVar5": "is_zero",
                "iVar1": "index",
                "iVar2": "result",
                "param_1": "input",
                "param_2": "data_array",
                "param_3": "output",
                "param_4": "param4",
                "param_5": "callback",
                "return": "return_value",
                "uVar3": "max_value",
                "uVar4": "offset"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080053d4": {
            "additional_data": {
                "FUN_080052e4": {
                    "process_data": 1
                },
                "FUN_080053d4": {
                    "convert_num_to_string": 1,
                    "convert_to_string": 1,
                    "decode_and_execute": 1,
                    "decode_and_process": 1,
                    "decode_and_process_data": 4,
                    "extract_and_convert_data": 1,
                    "parse_and_process_data": 1,
                    "parse_data": 1,
                    "process_data": 4
                },
                "FUN_08005614": {
                    "parse_input": 1
                },
                "bVar1": {
                    "byte_val": 7,
                    "byte_value": 17,
                    "byte_var": 6,
                    "flag": 1
                },
                "iVar2": {
                    "index": 13,
                    "index_1": 1,
                    "index_var": 1,
                    "int_value": 2,
                    "int_value1": 2,
                    "int_var": 5,
                    "int_var1": 3,
                    "loop_index": 1,
                    "result": 1,
                    "return_value": 1,
                    "variable2": 1
                },
                "iVar4": {
                    "index": 1,
                    "index_2": 1,
                    "inner_index": 3,
                    "inner_result": 1,
                    "int_value2": 3,
                    "int_var2": 8,
                    "loop_var": 1,
                    "loop_variable": 1,
                    "result": 3,
                    "status": 2,
                    "temp": 1,
                    "temp_index": 2,
                    "temp_var": 1,
                    "tmp_index": 1,
                    "var_1": 1,
                    "variable4": 1
                },
                "local_24": {
                    "buffer": 1,
                    "lengths": 1,
                    "local_array": 18,
                    "local_var_array": 1,
                    "local_vars": 2,
                    "output_arr": 1,
                    "result_array": 1,
                    "size_arr": 1,
                    "temp_arr": 1,
                    "temp_array": 2,
                    "temp_buffer": 1
                },
                "param_1": {
                    "arg1": 8,
                    "input": 1,
                    "input1": 2,
                    "input_data_1": 1,
                    "input_param": 1,
                    "input_param1": 1,
                    "input_value": 3,
                    "output": 1,
                    "param": 3,
                    "param1": 6,
                    "param_1": 3,
                    "value": 1
                },
                "param_2": {
                    "arg2": 2,
                    "array_pointer": 1,
                    "data": 7,
                    "data_array": 2,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "input2": 2,
                    "input_array": 6,
                    "input_data": 1,
                    "input_data_2": 1,
                    "input_param2": 1,
                    "num": 1,
                    "param2": 4,
                    "param_array": 1
                },
                "param_3": {
                    "arg2": 1,
                    "arg3": 7,
                    "buffer": 1,
                    "input3": 2,
                    "input_data_3": 1,
                    "input_param3": 1,
                    "input_value": 1,
                    "length": 1,
                    "param3": 8,
                    "param_3": 5,
                    "param_value": 1,
                    "size": 2
                },
                "param_4": {
                    "arg4": 2,
                    "callback": 4,
                    "callback_func": 2,
                    "callback_function": 7,
                    "callbackfunc": 1,
                    "execute": 1,
                    "function_pointer": 4,
                    "input4": 2,
                    "input_param4": 1,
                    "param1": 1,
                    "param4": 4,
                    "process_func": 1,
                    "processing_function": 1
                },
                "param_5": {
                    "arg5": 4,
                    "array_of_pointers": 1,
                    "array_pointer_pointer": 1,
                    "callback": 1,
                    "counter": 1,
                    "data_buffer": 1,
                    "input5": 2,
                    "input_param5": 1,
                    "output": 2,
                    "output_array": 1,
                    "output_data": 1,
                    "output_pointer_array": 1,
                    "output_ptr": 1,
                    "param5": 6,
                    "param_5": 4,
                    "param_pointer": 1,
                    "pointer_to_data_array": 1,
                    "result": 1
                },
                "pcVar11": {
                    "char_pointer": 1,
                    "char_pointer2": 3,
                    "char_pointer_2": 1,
                    "char_ptr2": 5,
                    "char_ptr_1": 1,
                    "char_var1": 1,
                    "char_var2": 3,
                    "character_pointer": 1,
                    "current_char": 3,
                    "output_ptr": 1,
                    "output_string": 1,
                    "ptr2": 1,
                    "ptr_val": 1,
                    "ptr_var11": 1,
                    "str": 1,
                    "str_ptr": 1,
                    "str_ptr2": 1,
                    "string_ptr": 1,
                    "string_var2": 1,
                    "temp_pointer1": 1,
                    "var_5": 1
                },
                "pcVar12": {
                    "char_pointer": 1,
                    "char_pointer3": 3,
                    "char_pointer_3": 1,
                    "char_ptr": 1,
                    "char_ptr1": 1,
                    "char_ptr3": 3,
                    "char_ptr_2": 1,
                    "char_var2": 1,
                    "char_var3": 3,
                    "character_pointer2": 1,
                    "input_ptr": 1,
                    "input_str": 1,
                    "input_string": 1,
                    "output": 1,
                    "ptr_var12": 1,
                    "result": 1,
                    "str": 1,
                    "str_ptr": 1,
                    "str_ptr2": 1,
                    "str_ptr3": 1,
                    "string_var3": 1,
                    "temp_char_pointer": 1,
                    "temp_pointer2": 1,
                    "temp_ptr": 1,
                    "var_6": 1
                },
                "pcVar5": {
                    "char_array": 1,
                    "char_pointer": 3,
                    "char_pointer1": 1,
                    "char_ptr": 3,
                    "char_ptr1": 2,
                    "char_var": 1,
                    "char_var1": 2,
                    "hex_chars": 4,
                    "hex_digits": 6,
                    "hex_table": 1,
                    "hex_values": 1,
                    "hexadecimal_string": 1,
                    "ptr_var5": 1,
                    "str_ptr": 1,
                    "str_var": 1,
                    "string_pointer": 1,
                    "string_var": 1
                },
                "ppcVar8": {
                    "char_ptr_ptr": 2,
                    "double_char_ptr1": 1,
                    "ptr_char_ptr_var1": 1,
                    "ptr_ptr": 1
                },
                "ppuVar7": {
                    "double_ptr1": 1,
                    "ptr_ptr": 2,
                    "ptr_ptr_var1": 1,
                    "str_ptr": 1
                },
                "puVar3": {
                    "pointer": 1,
                    "pointer_value": 2,
                    "pointer_value1": 1,
                    "pointer_var": 2,
                    "pointer_var1": 1,
                    "ptr": 10,
                    "ptr_val": 1,
                    "ptr_value": 2,
                    "ptr_var": 5,
                    "ptr_var1": 2,
                    "ptr_var3": 2,
                    "temp_data": 1,
                    "temp_pointer": 1
                },
                "uVar10": {
                    "count_value": 1,
                    "length": 1,
                    "new_value2": 1,
                    "result_2": 1,
                    "temp": 3,
                    "temp2": 1,
                    "temp_val": 1,
                    "temp_value": 3,
                    "temp_var": 1,
                    "uint_value3": 3,
                    "uint_var10": 1,
                    "uint_var2": 1,
                    "uint_var3": 7,
                    "unsigned_value3": 1,
                    "val2": 1,
                    "value": 1,
                    "value3": 1,
                    "var3": 1,
                    "var_4": 1
                },
                "uVar6": {
                    "base": 5,
                    "base_value": 1,
                    "flag": 1,
                    "num_base": 1,
                    "temp": 1,
                    "temp_value": 1,
                    "u_val": 1,
                    "uint_value": 3,
                    "uint_value1": 2,
                    "uint_var": 4,
                    "uint_var1": 3,
                    "uint_var6": 1,
                    "unsigned_value": 1,
                    "ushort_var": 1,
                    "val1": 1,
                    "value": 1,
                    "value1": 1,
                    "var1": 1,
                    "var_2": 1
                },
                "uVar9": {
                    "computed_value": 1,
                    "length": 1,
                    "new_value1": 1,
                    "num_val": 1,
                    "result": 4,
                    "result_1": 1,
                    "result_size": 1,
                    "result_value": 1,
                    "uint_value2": 3,
                    "uint_var1": 1,
                    "uint_var2": 7,
                    "uint_var9": 1,
                    "unsigned_value2": 1,
                    "value": 4,
                    "value2": 1,
                    "var2": 1,
                    "var_3": 1
                }
            },
            "called": [
                "FUN_08005614",
                "FUN_080052e4"
            ],
            "calling": [
                "FUN_080050fc"
            ],
            "code": "\nuint decode_and_process_data_080053d4(undefined4 arg1,uint *data,undefined4 param3,code *callback_function,uint **param5)\n\n{\n  byte byte_value;\n  int index;\n  uint *ptr;\n  int int_var2;\n  char *hex_digits;\n  uint base;\n  uint **ptr_ptr;\n  char **char_ptr_ptr;\n  uint uint_var2;\n  uint uint_var3;\n  char *char_ptr2;\n  char *char_ptr3;\n  uint local_array [2];\n  \n  byte_value = *(byte *)(data + 6);\n  char_ptr3 = (char *)((int)data + 0x43);\n  if (byte_value != 0x6e) {\n    if (byte_value < 0x6f) {\n      if (byte_value != 99) {\n        if (byte_value < 100) {\n          if (byte_value == 0) goto LAB_0800558e;\n          if (byte_value != 0x58) goto LAB_08005404;\n          *(undefined *)((int)data + 0x45) = 0x58;\n          hex_digits = \"0123456789ABCDEF\";\nLAB_0800551e:\n          base = *data;\n          ptr = *param5;\n          *param5 = ptr + 1;\n          if (((base & 0x80) == 0) && ((int)(base << 0x19) < 0)) {\n            uint_var2 = (uint)*(ushort *)ptr;\n          }\n          else {\n            uint_var2 = *ptr;\n          }\n          if ((int)(base << 0x1f) < 0) {\n            *data = base | 0x20;\n          }\n          if (uint_var2 == 0) {\n            *data = *data & 0xffffffdf;\n          }\n          base = 0x10;\nLAB_080054b4:\n          *(undefined *)((int)data + 0x43) = 0;\n        }\n        else {\n          if ((byte_value != 100) && (byte_value != 0x69)) goto LAB_08005404;\n          uint_var2 = *data;\n          ptr = *param5;\n          if ((uint_var2 & 0x80) == 0) {\n            *param5 = ptr + 1;\n            if ((uint_var2 & 0x40) == 0) goto LAB_08005424;\n            uint_var2 = (uint)(short)*(ushort *)ptr;\n          }\n          else {\n            *param5 = ptr + 1;\nLAB_08005424:\n            uint_var2 = *ptr;\n          }\n          if ((int)uint_var2 < 0) {\n            uint_var2 = -uint_var2;\n            *(undefined *)((int)data + 0x43) = 0x2d;\n          }\n          hex_digits = \"0123456789ABCDEF\";\n          base = 10;\n        }\n        uint_var3 = data[1];\n        data[2] = uint_var3;\n        char_ptr2 = char_ptr3;\n        if ((int)uint_var3 < 0) {\n          if (uint_var2 != 0) goto LAB_08005552;\nLAB_08005600:\n          *(char *)((int)data + 0x42) = *hex_digits;\n          char_ptr2 = (char *)((int)data + 0x42);\n        }\n        else {\n          *data = *data & 0xfffffffb;\n          if (uint_var2 == 0) {\n            if (uint_var3 != 0) goto LAB_08005600;\n          }\n          else {\nLAB_08005552:\n            do {\n              uint_var3 = uint_var2 / base;\n              char_ptr2 = char_ptr2 + -1;\n              *char_ptr2 = hex_digits[uint_var2 - base * uint_var3];\n              uint_var2 = uint_var3;\n            } while (uint_var3 != 0);\n          }\n        }\n        if (((base == 8) && ((int)(*data << 0x1f) < 0)) && ((int)data[1] <= (int)data[4]))\n        {\n          char_ptr2[-1] = '0';\n          char_ptr2 = char_ptr2 + -1;\n        }\n        data[4] = (int)char_ptr3 - (int)char_ptr2;\n        char_ptr3 = char_ptr2;\n        goto LAB_080054fa;\n      }\n      ptr = *param5;\n      *param5 = ptr + 1;\n      *(char *)((int)data + 0x42) = (char)*ptr;\nLAB_08005464:\n      char_ptr3 = (char *)((int)data + 0x42);\n      uint_var2 = 1;\n    }\n    else {\n      if (byte_value != 0x73) {\n        if (byte_value < 0x74) {\n          if (byte_value == 0x6f) {\nLAB_0800548a:\n            uint_var2 = *data;\n            ptr = *param5;\n            if ((uint_var2 & 0x80) == 0) {\n              *param5 = ptr + 1;\n              if ((uint_var2 & 0x40) == 0) goto LAB_08005498;\n              uint_var2 = (uint)*(ushort *)ptr;\n            }\n            else {\n              *param5 = ptr + 1;\nLAB_08005498:\n              uint_var2 = *ptr;\n            }\n            if (byte_value == 0x6f) {\n              base = 8;\n            }\n            else {\n              base = 10;\n            }\n            hex_digits = \"0123456789ABCDEF\";\n            goto LAB_080054b4;\n          }\n          if (byte_value == 0x70) {\n            *data = *data | 0x20;\nLAB_0800544a:\n            hex_digits = \"0123456789abcdef\";\n            *(undefined *)((int)data + 0x45) = 0x78;\n            goto LAB_0800551e;\n          }\n        }\n        else {\n          if (byte_value == 0x75) goto LAB_0800548a;\n          if (byte_value == 0x78) goto LAB_0800544a;\n        }\nLAB_08005404:\n        *(byte *)((int)data + 0x42) = byte_value;\n        goto LAB_08005464;\n      }\n      char_ptr_ptr = (char **)*param5;\n      *param5 = (uint *)(char_ptr_ptr + 1);\n      char_ptr3 = *char_ptr_ptr;\n      index = FUN_08005614(char_ptr3,0,data[1]);\n      if (index != 0) {\n        data[1] = index - (int)char_ptr3;\n      }\n      uint_var2 = data[1];\n    }\n    data[4] = uint_var2;\n    *(undefined *)((int)data + 0x43) = 0;\n    goto LAB_080054fa;\n  }\n  uint_var2 = *data;\n  ptr_ptr = (uint **)*param5;\n  base = data[5];\n  if ((uint_var2 & 0x80) == 0) {\n    *param5 = (uint *)(ptr_ptr + 1);\n    ptr = *ptr_ptr;\n    if ((uint_var2 & 0x40) == 0) goto LAB_0800557a;\n    *(short *)ptr = (short)base;\n  }\n  else {\n    *param5 = (uint *)(ptr_ptr + 1);\n    ptr = *ptr_ptr;\nLAB_0800557a:\n    *ptr = base;\n  }\nLAB_0800558e:\n  data[4] = 0;\nLAB_080054fa:\n  index = FUN_080052e4(arg1,data,local_array,param3,callback_function);\n  if ((index == -1) || (index = (*callback_function)(arg1,param3,char_ptr3,data[4]), index == -1)) {\nLAB_0800550e:\n    uint_var2 = 0xffffffff;\n  }\n  else {\n    if ((int)(*data << 0x1e) < 0) {\n      for (index = 0; index < (int)(data[3] - local_array[0]); index = index + 1) {\n        int_var2 = (*callback_function)(arg1,param3,(int)data + 0x19,1);\n        if (int_var2 == -1) goto LAB_0800550e;\n      }\n    }\n    uint_var2 = data[3];\n    if ((int)data[3] < (int)local_array[0]) {\n      uint_var2 = local_array[0];\n    }\n  }\n  return uint_var2;\n}\n\n",
            "current_name": "decode_and_process_data_080053d4",
            "entrypoint": "0x080053d4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080053d4": "decode_and_process_data_080053d4",
                "bVar1": "byte_value",
                "iVar2": "index",
                "iVar4": "int_var2",
                "local_24": "local_array",
                "param_1": "arg1",
                "param_2": "data",
                "param_3": "param3",
                "param_4": "callback_function",
                "param_5": "param5",
                "pcVar11": "char_ptr2",
                "pcVar12": "char_ptr3",
                "pcVar5": "hex_digits",
                "ppcVar8": "char_ptr_ptr",
                "ppuVar7": "ptr_ptr",
                "puVar3": "ptr",
                "uVar10": "uint_var3",
                "uVar6": "base",
                "uVar9": "uint_var2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005614": {
            "additional_data": {
                "FUN_08005614": {
                    "find_char": 1,
                    "find_char_in_string": 1,
                    "find_character": 14,
                    "find_character_in_string": 6,
                    "find_character_index": 2,
                    "find_first_instance": 1,
                    "find_first_occurrence": 6
                },
                "param_1": {
                    "array": 1,
                    "str": 3,
                    "string": 27
                },
                "param_2": {
                    "character": 26,
                    "target": 1,
                    "target_char": 4
                },
                "param_3": {
                    "length": 24,
                    "size": 2,
                    "string_length": 5
                },
                "pcVar1": {
                    "current": 1,
                    "current_char": 14,
                    "current_char_pointer": 1,
                    "current_character": 2,
                    "current_position": 6,
                    "current_ptr": 3,
                    "iterator": 1,
                    "ptr": 1
                },
                "pcVar2": {
                    "char_pointer": 1,
                    "current_char_ptr": 1,
                    "current_character": 1,
                    "current_ptr": 1,
                    "found_char": 1,
                    "next": 1,
                    "next_char": 12,
                    "next_char_pointer": 1,
                    "next_character": 2,
                    "next_position": 6,
                    "next_ptr": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_080053d4",
                "FUN_080050fc"
            ],
            "code": "\nchar * find_character_in_string_08005614(char *string,char character,int length)\n\n{\n  char *current_char;\n  char *next_char;\n  \n  current_char = string;\n  do {\n    next_char = current_char;\n    if (next_char == string + length) {\n      return (char *)0x0;\n    }\n    current_char = next_char + 1;\n  } while (*next_char != character);\n  return next_char;\n}\n\n",
            "current_name": "find_character_in_string_08005614",
            "entrypoint": "0x08005614",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005614": "find_character_in_string_08005614",
                "param_1": "string",
                "param_2": "character",
                "param_3": "length",
                "pcVar1": "current_char",
                "pcVar2": "next_char"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005630": {
            "additional_data": {
                "FUN_08005630": {
                    "copy_and_shift": 1,
                    "copy_array": 2,
                    "copy_bytes": 1,
                    "copy_data": 22,
                    "copy_data_to_buffer": 2,
                    "copy_data_with_offset": 1,
                    "copy_to_offset": 1
                },
                "param_1": {
                    "array_ptr": 1,
                    "array_start_index": 1,
                    "buffer_start_index": 2,
                    "dest_addr": 1,
                    "dest_address": 4,
                    "dest_index": 1,
                    "dest_start": 1,
                    "dest_start_address": 1,
                    "dest_start_position": 1,
                    "destination_address": 1,
                    "destination_start": 1,
                    "dst": 1,
                    "dst_address": 1,
                    "dst_index": 1,
                    "dst_offset": 1,
                    "dst_pointer": 1,
                    "dst_start": 1,
                    "input_ptr": 1,
                    "offset": 1,
                    "source_address": 1,
                    "src_offset": 1,
                    "start_addr": 1,
                    "start_index": 2,
                    "target_address": 1,
                    "target_start": 1
                },
                "param_2": {
                    "source": 2,
                    "source_address": 3,
                    "source_array": 4,
                    "source_buffer": 1,
                    "source_data": 4,
                    "source_ptr": 1,
                    "source_start": 2,
                    "src": 1,
                    "src_addr": 2,
                    "src_address": 3,
                    "src_buffer": 1,
                    "src_data": 2,
                    "src_pointer": 1,
                    "src_start": 2,
                    "src_start_address": 1
                },
                "param_3": {
                    "array_length": 4,
                    "count": 1,
                    "data_length": 5,
                    "length": 7,
                    "num_bytes": 2,
                    "num_elements": 2,
                    "size": 9
                },
                "puVar1": {
                    "dest_addr": 1,
                    "dest_data_end": 1,
                    "dest_end": 2,
                    "dest_end_address": 1,
                    "dest_ptr": 4,
                    "destination_buffer_end": 1,
                    "destination_end_ptr": 1,
                    "destination_ptr": 1,
                    "dst_data": 1,
                    "dst_end_pointer": 1,
                    "end": 1,
                    "end_address": 2,
                    "end_of_source_data": 1,
                    "source_end": 5,
                    "src_end": 4,
                    "src_end_ptr": 1,
                    "target_ptr": 1
                },
                "puVar2": {
                    "current_address": 1,
                    "current_buffer_position": 1,
                    "current_ptr": 1,
                    "dest": 1,
                    "dest_data": 1,
                    "dest_end": 3,
                    "dest_end_ptr": 1,
                    "dest_index": 1,
                    "dest_ptr": 2,
                    "destination_buffer": 1,
                    "destination_end": 2,
                    "destination_ptr": 1,
                    "dst_current_pointer": 1,
                    "dst_end": 3,
                    "dst_ptr": 1,
                    "source_ptr": 3,
                    "src_end_address": 1,
                    "src_index": 1,
                    "src_ptr": 1,
                    "target_end": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08005044",
                "FUN_080057d0"
            ],
            "code": "\nvoid copy_data_to_buffer_08005630(int dest_address,undefined *source_data,int size)\n\n{\n  undefined *source_end;\n  undefined *source_ptr;\n  \n  source_ptr = (undefined *)(dest_address + -1);\n  source_end = source_data + size;\n  for (; source_data != source_end; source_data = source_data + 1) {\n    source_ptr = source_ptr + 1;\n    *source_ptr = *source_data;\n  }\n  return;\n}\n\n",
            "current_name": "copy_data_to_buffer_08005630",
            "entrypoint": "0x08005630",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005630": "copy_data_to_buffer_08005630",
                "param_1": "dest_address",
                "param_2": "source_data",
                "param_3": "size",
                "puVar1": "source_end",
                "puVar2": "source_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005646": {
            "additional_data": {
                "FUN_08005646": {
                    "copy_and_adjust_memory": 1,
                    "copy_and_extend": 1,
                    "copy_and_modify": 1,
                    "copy_and_reverse": 9,
                    "copy_and_reverse_data": 1,
                    "copy_and_shift": 7,
                    "copy_memory": 5,
                    "copy_range": 1,
                    "reverse_and_copy": 1,
                    "reverse_copy": 4
                },
                "param_1": {
                    "dest": 12,
                    "destination": 8,
                    "dst": 4,
                    "input_buffer": 1,
                    "source": 5,
                    "source_start": 1
                },
                "param_2": {
                    "destination": 5,
                    "source": 8,
                    "source_buffer": 1,
                    "source_end": 1,
                    "src": 16
                },
                "param_3": {
                    "count": 1,
                    "len": 1,
                    "length": 16,
                    "num_bytes": 1,
                    "shift_amount": 1,
                    "size": 11
                },
                "puVar1": {
                    "dest_buffer": 1,
                    "dest_end": 1,
                    "destination_end": 1,
                    "dst_end": 2,
                    "end": 5,
                    "end_address": 2,
                    "end_pointer": 1,
                    "end_ptr": 5,
                    "shifted_source_end": 1,
                    "source_end": 1,
                    "src_end": 8,
                    "temp_ptr": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005044"
            ],
            "code": "\nvoid copy_and_reverse_data_08005646(undefined *dest,undefined *src,int length)\n\n{\n  undefined *src_end;\n  \n  src_end = src + length;\n  if ((src < dest) && (dest < src_end)) {\n    dest = dest + length;\n    length = length - (int)src_end;\n    while (src_end + length != (undefined *)0x0) {\n      src_end = src_end + -1;\n      dest = dest + -1;\n      *dest = *src_end;\n    }\n    return;\n  }\n  dest = dest + -1;\n  for (; src != src_end; src = src + 1) {\n    dest = dest + 1;\n    *dest = *src;\n  }\n  return;\n}\n\n",
            "current_name": "copy_and_reverse_data_08005646",
            "entrypoint": "0x08005646",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005646": "copy_and_reverse_data_08005646",
                "param_1": "dest",
                "param_2": "src",
                "param_3": "length",
                "puVar1": "src_end"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800567c": {
            "additional_data": {
                "DAT_200002ac": {
                    "data_structure": 1,
                    "head_node": 1,
                    "head_ptr": 1
                },
                "FUNC_0800583c": {
                    "func1": 1,
                    "helper_function1": 1,
                    "initialize": 1,
                    "initialize_data": 2,
                    "initialize_data_structure": 1,
                    "initialize_function": 1,
                    "reverse_data": 2
                },
                "FUNC_0800583e": {
                    "func2": 1,
                    "helper_function2": 1,
                    "perform_task": 1,
                    "process_data_helper": 1,
                    "process_data_subfunction": 1,
                    "process_params": 1
                },
                "FUN_0800567c": {
                    "allocate_and_link_pointer": 1,
                    "extract_pointers_and_invoke": 1,
                    "extract_values_from_binary": 1,
                    "handle_param": 1,
                    "process_data": 9,
                    "rearrange_data": 2,
                    "rearrange_pointers": 1,
                    "update_data": 3,
                    "update_data_structure": 1,
                    "update_linked_list": 3,
                    "update_list": 2,
                    "update_pointer": 1
                },
                "extraout_r1": {
                    "ele": 1,
                    "extra_out1": 1,
                    "extra_output": 6,
                    "extra_output_pointer": 1,
                    "extra_ptr": 2,
                    "extra_result": 1,
                    "extra_return": 1,
                    "new_ptr": 1,
                    "ppi_var6": 1,
                    "ppi_var_out": 1,
                    "temp": 2,
                    "temp1": 4,
                    "temp_1": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 5
                },
                "param_1": {
                    "list_ptr": 2,
                    "out_data": 1,
                    "output": 8,
                    "output_array": 1,
                    "output_pointer": 1,
                    "output_ptr": 1,
                    "param_array": 3,
                    "ptr": 1,
                    "result": 12,
                    "result_array": 1
                },
                "param_2": {
                    "array_size": 1,
                    "binary_length": 1,
                    "count": 2,
                    "data_size": 2,
                    "input": 1,
                    "input_array_size": 1,
                    "input_length": 1,
                    "input_size": 2,
                    "length": 1,
                    "num_elements": 1,
                    "param_count": 1,
                    "size": 17
                },
                "param_3": {
                    "arg1": 1,
                    "arg3": 1,
                    "arg_3": 1,
                    "data": 1,
                    "input1": 2,
                    "param1": 2,
                    "param3": 9,
                    "param_3": 5,
                    "size1": 1,
                    "unused": 1,
                    "unused1": 1,
                    "unused_parameter": 1,
                    "value1": 4
                },
                "param_4": {
                    "arg2": 1,
                    "arg4": 1,
                    "arg_4": 1,
                    "input2": 2,
                    "param2": 2,
                    "param4": 9,
                    "param_4": 5,
                    "size2": 1,
                    "unused": 1,
                    "unused2": 1,
                    "unused_parameter": 1,
                    "value": 1,
                    "value2": 4
                },
                "piVar1": {
                    "nested_ptr": 1
                },
                "piVar2": {
                    "nested_ptr_2": 1
                },
                "piVar3": {
                    "current_value": 1,
                    "nested_ptr_3": 1,
                    "pi_var9": 1,
                    "ptr": 1,
                    "ptr3": 1,
                    "temp3": 2,
                    "temp4": 3,
                    "temp_4": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 3,
                    "temp_val": 1,
                    "temp_value": 1,
                    "temp_var": 10,
                    "temp_var3": 2,
                    "tmp_ptr": 1,
                    "var3": 1
                },
                "piVar4": {
                    "nested_ptr_4": 1
                },
                "piVar5": {
                    "nested_ptr_5": 1
                },
                "ppiVar1": {
                    "current": 2,
                    "current_node": 1,
                    "current_pointer1": 1,
                    "current_ptr": 1,
                    "first_ptr": 1,
                    "iterator_ptr1": 1,
                    "next_ptr": 1,
                    "ppi_var7": 1,
                    "prev_ptr": 1,
                    "previous_node": 1,
                    "ptr1": 3,
                    "temp1": 1,
                    "temp2": 4,
                    "temp_2": 1,
                    "temp_ptr1": 9,
                    "temp_var1": 1
                },
                "ppiVar2": {
                    "curr_ptr": 1,
                    "current_node": 1,
                    "current_pointer2": 1,
                    "current_ptr": 1,
                    "iterator_ptr2": 1,
                    "next": 2,
                    "next_node": 1,
                    "next_ptr": 1,
                    "ppi_var8": 1,
                    "ptr2": 3,
                    "second_ptr": 1,
                    "temp2": 1,
                    "temp3": 3,
                    "temp_3": 1,
                    "temp_ptr2": 9,
                    "temp_var2": 1
                },
                "ppiVar4": {
                    "current_linked_list": 1,
                    "iterator_ptr3": 1,
                    "ppi_var10": 1,
                    "prev": 1,
                    "prev_ptr": 2,
                    "previous_node_2": 1,
                    "previous_pointer": 1,
                    "ptr3": 1,
                    "ptr4": 2,
                    "temp4": 2,
                    "temp5": 3,
                    "temp_5": 1,
                    "temp_ptr1": 1,
                    "temp_ptr2": 1,
                    "temp_ptr3": 8,
                    "temp_ptr4": 1,
                    "temp_ptr_ptr": 1,
                    "temp_var4": 1
                },
                "ppiVar5": {
                    "adjusted_ptr": 1,
                    "base_ptr": 1,
                    "current_node": 1,
                    "current_node_2": 1,
                    "input_ptr": 1,
                    "new_node": 2,
                    "new_ptr": 2,
                    "ppi_var11": 1,
                    "ptr4": 1,
                    "ptr5": 2,
                    "temp5": 1,
                    "temp6": 3,
                    "temp_6": 1,
                    "temp_ptr4": 7,
                    "temp_ptr5": 1,
                    "temp_var5": 1,
                    "updated_input": 1,
                    "updated_pointer": 2
                }
            },
            "called": [
                "FUN_0800583e",
                "FUN_0800583c"
            ],
            "calling": [
                "FUN_08005044",
                "FUN_080057d0"
            ],
            "code": "\nvoid process_data_0800567c(undefined4 *result,int size,undefined4 param3,undefined4 param4)\n\n{\n  int **extra_output;\n  int **temp_ptr1;\n  int **temp_ptr2;\n  int *temp_var;\n  int **temp_ptr3;\n  int **temp_ptr4;\n  \n  if (size == 0) {\n    return;\n  }\n  temp_ptr4 = (int **)(size + -4);\n  if (*(int *)(size + -4) < 0) {\n    temp_ptr4 = (int **)((int)temp_ptr4 + *(int *)(size + -4));\n  }\n  FUNC_0800583c();\n  temp_ptr2 = (int **)&DAT_200002ac;\n  if (DAT_200002ac == (int **)0x0) {\n    temp_ptr4[1] = (int *)0x0;\n    temp_ptr1 = extra_output;\n    DAT_200002ac = temp_ptr4;\n  }\n  else {\n    temp_ptr2 = DAT_200002ac;\n    if (temp_ptr4 < DAT_200002ac) {\n      temp_ptr1 = (int **)*temp_ptr4;\n      temp_ptr2 = (int **)((int)temp_ptr4 + (int)temp_ptr1);\n      if (DAT_200002ac == temp_ptr2) {\n        temp_var = *DAT_200002ac;\n        DAT_200002ac = (int **)DAT_200002ac[1];\n        temp_ptr2 = (int **)((int)temp_var + (int)temp_ptr1);\n        *temp_ptr4 = (int *)temp_ptr2;\n      }\n      temp_ptr4[1] = (int *)DAT_200002ac;\n      DAT_200002ac = temp_ptr4;\n    }\n    else {\n      do {\n        temp_ptr3 = temp_ptr2;\n        temp_ptr2 = (int **)temp_ptr3[1];\n        if (temp_ptr2 == (int **)0x0) break;\n      } while (temp_ptr2 <= temp_ptr4);\n      temp_ptr1 = (int **)*temp_ptr3;\n      if ((int **)((int)temp_ptr3 + (int)temp_ptr1) == temp_ptr4) {\n        temp_ptr1 = (int **)((int)temp_ptr1 + (int)*temp_ptr4);\n        *temp_ptr3 = (int *)temp_ptr1;\n        if (temp_ptr2 == (int **)((int)temp_ptr3 + (int)temp_ptr1)) {\n          temp_var = *temp_ptr2;\n          temp_ptr2 = (int **)temp_ptr2[1];\n          temp_ptr1 = (int **)((int)temp_ptr1 + (int)temp_var);\n          *temp_ptr3 = (int *)temp_ptr1;\n          temp_ptr3[1] = (int *)temp_ptr2;\n        }\n      }\n      else if (temp_ptr4 < (int **)((int)temp_ptr3 + (int)temp_ptr1)) {\n        *result = 0xc;\n      }\n      else {\n        temp_ptr1 = (int **)((int)temp_ptr4 + (int)*temp_ptr4);\n        if (temp_ptr2 == temp_ptr1) {\n          temp_var = *temp_ptr2;\n          temp_ptr2 = (int **)temp_ptr2[1];\n          temp_ptr1 = (int **)((int)temp_var + (int)*temp_ptr4);\n          *temp_ptr4 = (int *)temp_ptr1;\n        }\n        temp_ptr4[1] = (int *)temp_ptr2;\n        temp_ptr3[1] = (int *)temp_ptr4;\n      }\n    }\n  }\n  FUNC_0800583e(result,temp_ptr1,temp_ptr2,param4);\n  return;\n}\n\n",
            "current_name": "process_data_0800567c",
            "entrypoint": "0x0800567c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800567c": "process_data_0800567c",
                "extraout_r1": "extra_output",
                "param_1": "result",
                "param_2": "size",
                "param_3": "param3",
                "param_4": "param4",
                "piVar1": "nested_ptr",
                "piVar2": "nested_ptr_2",
                "piVar3": "temp_var",
                "piVar4": "nested_ptr_4",
                "piVar5": "nested_ptr_5",
                "ppiVar1": "temp_ptr1",
                "ppiVar2": "temp_ptr2",
                "ppiVar4": "temp_ptr3",
                "ppiVar5": "temp_ptr4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005714": {
            "additional_data": {
                "DAT_200002ac": {
                    "block_list_start": 1,
                    "data_mem_block": 1,
                    "first_block": 2,
                    "free_blocks_list": 1,
                    "head_block": 2,
                    "list_head": 1,
                    "memory_manager_head": 1,
                    "memory_pool": 2
                },
                "DAT_200002b0": {
                    "allocation_failed": 1,
                    "block_list_initialized": 1,
                    "failed_allocation": 1,
                    "initialization_flag": 1,
                    "initialized": 5,
                    "initialized_memory": 1,
                    "initialized_pool": 1,
                    "mem_block_initialized": 1
                },
                "FUNC_0800581c": {
                    "allocate_memory": 1
                },
                "FUNC_0800583c": {
                    "initialize_memory": 2,
                    "initialize_memory_manager": 1
                },
                "FUNC_0800583e": {
                    "cleanup_memory": 1,
                    "deallocate_memory": 1,
                    "free_memory": 1
                },
                "FUNKY_FUNCTION": {
                    "allocate_memory": 1
                },
                "FUN_08005714": {
                    "allocate_and_fill_memory": 1,
                    "allocate_and_init_memory_block": 1,
                    "allocate_and_initialize_memory": 3,
                    "allocate_and_store": 2,
                    "allocate_and_store_block": 1,
                    "allocate_memory": 11,
                    "allocate_memory_block": 10,
                    "memory_allocation": 1
                },
                "FUN_0800581c": {
                    "allocate_block": 2,
                    "allocate_memory": 2,
                    "allocate_memory_block": 1,
                    "create_memory_block": 1,
                    "find_free_block": 1,
                    "initialize_memory_pool": 1
                },
                "FUN_0800583c": {
                    "initialize_allocated_memory": 1,
                    "initialize_block_allocator": 1,
                    "initialize_memory": 5
                },
                "FUN_0800583e": {
                    "clean_up_memory_pool": 1,
                    "deallocate_block": 1,
                    "deallocate_memory": 1,
                    "free_memory": 1,
                    "release_allocated_memory": 1,
                    "release_memory_block": 1
                },
                "iVar2": {
                    "block_size": 8,
                    "bytes_left": 1,
                    "current_block_size": 1,
                    "difference": 7,
                    "offset": 5,
                    "remaining_bytes": 1,
                    "remaining_size": 1,
                    "remaining_space": 3,
                    "size_difference": 1,
                    "temp_size": 1,
                    "temp_variable": 1
                },
                "param_1": {
                    "block_ptr": 1,
                    "buffer": 2,
                    "error_code_ptr": 1,
                    "mem_pointer": 1,
                    "memory_address": 2,
                    "memory_ptr": 1,
                    "out_ptr": 1,
                    "output": 1,
                    "output_address": 2,
                    "output_buffer": 7,
                    "output_pointer": 4,
                    "output_ptr": 3,
                    "p_length": 1,
                    "result": 1,
                    "result_pointer": 1,
                    "result_ptr": 2
                },
                "param_2": {
                    "block_size": 2,
                    "input_size": 1,
                    "memory_size": 1,
                    "requested_size": 3,
                    "required_size": 2,
                    "size": 22
                },
                "puVar1": {
                    "current_block": 26,
                    "current_ptr": 3,
                    "next": 1,
                    "temp_ptr": 1
                },
                "puVar3": {
                    "current": 1,
                    "current_block_next": 1,
                    "current_ptr": 1,
                    "next_block": 6,
                    "next_ptr": 2,
                    "prev_block": 2,
                    "previous_block": 17,
                    "previous_ptr": 1
                },
                "puVar5": {
                    "current_block_previous": 1,
                    "last_block": 3,
                    "last_modified_block": 1,
                    "new_block": 4,
                    "new_ptr": 1,
                    "prev_prev_block": 1,
                    "prev_ptr": 1,
                    "previous": 1,
                    "previous_block": 7,
                    "previous_block_next": 4,
                    "previous_of_current_block": 1,
                    "previous_previous_block": 3,
                    "previous_ptr": 2,
                    "updated_previous_block": 1
                },
                "puVar6": {
                    "new_allocated_block": 1
                },
                "puVar7": {
                    "aligned_block": 1
                },
                "uVar4": {
                    "available_space": 1,
                    "block_difference": 8,
                    "chunk_size_diff": 1,
                    "current_diff": 1,
                    "diff_size": 1,
                    "difference": 15,
                    "remaining_size": 2,
                    "size_difference": 2
                },
                "uVar6": {
                    "actual_size": 1,
                    "adjusted_size": 2,
                    "aligned_size": 4,
                    "allocated_block_size": 2,
                    "allocated_size": 13,
                    "block_size": 3,
                    "new_block_size": 2,
                    "new_size": 1,
                    "requested_size": 1,
                    "required_size": 1,
                    "total_size": 1
                }
            },
            "called": [
                "FUN_0800581c",
                "FUN_0800583e",
                "FUN_0800583c"
            ],
            "calling": [
                "FUN_08005044",
                "FUN_080057d0",
                "FUN_080050fc"
            ],
            "code": "\nuint allocate_and_init_memory_block_08005714(undefined4 *output_buffer,uint size)\n\n{\n  uint *current_block;\n  int block_size;\n  uint *previous_block;\n  uint difference;\n  uint *previous_block;\n  uint allocated_size;\n  \n  allocated_size = (size + 3 & 0xfffffffc) + 8;\n  if (allocated_size < 0xc) {\n    allocated_size = 0xc;\n  }\n  if (((int)allocated_size < 0) || (allocated_size < size)) {\n    *output_buffer = 0xc;\n  }\n  else {\n    FUNC_0800583c();\n    current_block = DAT_200002ac;\n    previous_block = DAT_200002ac;\n    while (previous_block = current_block, previous_block != (uint *)0x0) {\n      difference = *previous_block - allocated_size;\n      if (-1 < (int)difference) {\n        if (difference < 0xc) {\n          if (previous_block == previous_block) {\n            current_block = (uint *)previous_block[1];\n            DAT_200002ac = current_block;\n          }\n          else {\n            current_block = (uint *)previous_block[1];\n          }\n          if (previous_block != previous_block) {\n            previous_block[1] = (uint)current_block;\n            previous_block = previous_block;\n          }\n        }\n        else {\n          *previous_block = difference;\n          *(uint *)((int)previous_block + difference) = allocated_size;\n          previous_block = (uint *)((int)previous_block + difference);\n        }\n        goto LAB_08005778;\n      }\n      previous_block = previous_block;\n      current_block = (uint *)previous_block[1];\n    }\n    if (DAT_200002b0 == 0) {\n      DAT_200002b0 = FUN_0800581c(output_buffer);\n    }\n    current_block = (uint *)FUN_0800581c(output_buffer,allocated_size);\n    if ((current_block != (uint *)0xffffffff) &&\n       ((previous_block = (uint *)((int)current_block + 3U & 0xfffffffc), current_block == previous_block ||\n        (block_size = FUN_0800581c(output_buffer,(int)previous_block - (int)current_block), block_size != -1)))) {\n      *previous_block = allocated_size;\nLAB_08005778:\n      FUNC_0800583e(output_buffer);\n      allocated_size = (int)previous_block + 0xbU & 0xfffffff8;\n      block_size = allocated_size - (int)(previous_block + 1);\n      if (block_size != 0) {\n        *(int *)((int)previous_block + block_size) = -block_size;\n        return allocated_size;\n      }\n      return allocated_size;\n    }\n    *output_buffer = 0xc;\n    FUNC_0800583e(output_buffer);\n  }\n  return 0;\n}\n\n",
            "current_name": "allocate_and_init_memory_block_08005714",
            "entrypoint": "0x08005714",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005714": "allocate_and_init_memory_block_08005714",
                "iVar2": "block_size",
                "param_1": "output_buffer",
                "param_2": "size",
                "puVar1": "current_block",
                "puVar3": "previous_block",
                "puVar5": "previous_block",
                "uVar4": "difference",
                "uVar6": "allocated_size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080057d0": {
            "additional_data": {
                "FUN_08005630": {
                    "modify_data": 1,
                    "perform_operation": 2,
                    "process": 1,
                    "process_data": 2,
                    "process_data_and_length": 1,
                    "process_data_internal": 2,
                    "process_error": 1,
                    "process_if_value_less_than_limit": 1,
                    "process_result": 2,
                    "process_size": 1
                },
                "FUN_0800567c": {
                    "handle_zero_limit": 3,
                    "initialize": 3,
                    "initialize_data": 1,
                    "log_error": 3,
                    "log_error_and_reset": 1,
                    "print_warning": 1,
                    "process_if_size_zero": 1,
                    "reset": 1
                },
                "FUN_08005714": {
                    "calculate": 1,
                    "calculate_something": 1,
                    "check_condition": 3,
                    "check_data": 1,
                    "check_size": 1,
                    "check_threshold": 1,
                    "check_validity": 1,
                    "perform_action": 1,
                    "process_data": 1,
                    "process_input_value": 1,
                    "validate_data": 2
                },
                "FUN_080057d0": {
                    "execute_function": 2,
                    "execute_operation": 1,
                    "extract_function": 2,
                    "handle_data": 1,
                    "perform_operation": 2,
                    "process": 1,
                    "process_data": 18,
                    "validate_and_process": 1,
                    "validate_params": 1
                },
                "FUN_08005840": {
                    "calculate_result": 1,
                    "calculate_threshold": 1,
                    "calculate_value": 1,
                    "check_size_limit": 1,
                    "generate_random_value": 1,
                    "get_available_size": 1,
                    "get_data_size": 1,
                    "get_random_value": 3,
                    "get_value": 4
                },
                "iVar1": {
                    "result": 26,
                    "return_value": 4
                },
                "param_1": {
                    "arg1": 1,
                    "argument": 1,
                    "data": 6,
                    "data_array": 1,
                    "data_buffer": 2,
                    "data_pointer": 3,
                    "data_ptr": 3,
                    "function_pointer": 1,
                    "input": 3,
                    "input1": 1,
                    "input_array": 2,
                    "input_buffer": 1,
                    "input_data": 1,
                    "input_parameter": 1,
                    "input_ptr": 2,
                    "param1": 1,
                    "ptr_param": 1
                },
                "param_2": {
                    "arg2": 1,
                    "array_length": 1,
                    "array_size": 1,
                    "buffer_length": 2,
                    "buffer_size": 1,
                    "count": 1,
                    "input_size": 2,
                    "length": 3,
                    "num_items": 1,
                    "size": 17,
                    "size_of_input": 1
                },
                "param_3": {
                    "arg3": 1,
                    "comparison_size": 1,
                    "data_length": 2,
                    "limit": 14,
                    "max_items": 1,
                    "max_size": 4,
                    "max_value": 1,
                    "size": 1,
                    "threshold": 6
                },
                "param_4": {
                    "additional_param": 1,
                    "another_parameter": 1,
                    "arg4": 1,
                    "extra": 2,
                    "extra_param": 3,
                    "flag": 1,
                    "input2": 1,
                    "param": 2,
                    "param4": 1,
                    "param_4": 9,
                    "parameter": 1,
                    "ptr_param2": 1,
                    "unknown_param": 2,
                    "unused": 2,
                    "unused_param": 2,
                    "unused_parameter": 1
                },
                "uVar2": {
                    "available_size": 1,
                    "compare": 1,
                    "compare_result": 1,
                    "comparison_result": 3,
                    "count": 2,
                    "data_size": 1,
                    "generated_value": 1,
                    "random": 1,
                    "random_num": 1,
                    "random_number": 1,
                    "random_value": 6,
                    "result": 2,
                    "temp": 2,
                    "temp_value": 1,
                    "threshold": 1,
                    "value": 5
                }
            },
            "called": [
                "FUN_0800567c",
                "FUN_08005630",
                "FUN_08005714",
                "FUN_08005840"
            ],
            "calling": [
                "FUN_08005044"
            ],
            "code": "\nint process_data_080057d0(undefined4 data,int size,uint limit,undefined4 param_4)\n\n{\n  int result;\n  uint random_value;\n  \n  if (size != 0) {\n    if (limit == 0) {\n      FUN_0800567c();\n      result = 0;\n    }\n    else {\n      random_value = FUN_08005840();\n      result = size;\n      if ((random_value < limit) && (result = FUN_08005714(data,limit), result != 0)) {\n        FUN_08005630(result,size,limit);\n        FUN_0800567c(data,size);\n      }\n    }\n    return result;\n  }\n  result = FUN_08005714(data,limit,limit,param_4);\n  return result;\n}\n\n",
            "current_name": "process_data_080057d0",
            "entrypoint": "0x080057d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080057d0": "process_data_080057d0",
                "iVar1": "result",
                "param_1": "data",
                "param_2": "size",
                "param_3": "limit",
                "uVar2": "random_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800581c": {
            "additional_data": {
                "DAT_2000169c": {
                    "result": 1,
                    "stored_value": 1
                },
                "FUN_0800581c": {
                    "check_and_assign_value": 3,
                    "check_and_update_param": 1,
                    "extract_and_set_value": 1,
                    "extract_error_code": 2,
                    "extract_result": 1,
                    "find_and_assign_error": 1,
                    "find_and_assign_error_code": 1,
                    "find_and_assign_value": 1,
                    "find_error_and_assign": 1,
                    "find_error_and_store": 1,
                    "process_data": 4,
                    "process_result": 2,
                    "reverse_and_store_result": 1,
                    "update_int_array_with_result": 1,
                    "update_param1_if_negative": 1,
                    "update_param_if_needed": 1,
                    "update_param_if_negative": 1,
                    "update_param_with_return_value": 1,
                    "update_parameter_if_error": 1,
                    "update_parameter_value": 1,
                    "update_return_value_if_error": 1,
                    "validate_return_value_and_update_param": 1
                },
                "FUN_080072b8": {
                    "process_input": 1
                },
                "iVar1": {
                    "error_code": 1,
                    "result": 14,
                    "return_value": 10,
                    "validation_result": 1
                },
                "param_1": {
                    "array": 1,
                    "error_code": 1,
                    "error_code_ptr": 2,
                    "output": 10,
                    "output_param": 1,
                    "output_parameter": 1,
                    "output_ptr": 1,
                    "output_value": 2,
                    "result": 5,
                    "result_address": 1,
                    "result_param": 1,
                    "result_pointer": 2,
                    "result_ptr": 2,
                    "value_to_update": 1
                },
                "param_2": {
                    "data": 1,
                    "input": 11,
                    "input_data": 2,
                    "input_param": 3,
                    "input_parameter": 1,
                    "input_value": 12,
                    "value": 1
                }
            },
            "called": [
                "FUN_080072b8"
            ],
            "calling": [
                "FUN_08005714"
            ],
            "code": "\nvoid process_data_0800581c(int *output,undefined4 input_value)\n\n{\n  int result;\n  \n  DAT_2000169c = 0;\n  result = FUN_080072b8(input_value);\n  if ((result == -1) && (DAT_2000169c != 0)) {\n    *output = DAT_2000169c;\n  }\n  return;\n}\n\n",
            "current_name": "process_data_0800581c",
            "entrypoint": "0x0800581c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800581c": "process_data_0800581c",
                "iVar1": "result",
                "param_1": "output",
                "param_2": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800583c": {
            "called": [],
            "calling": [
                "FUN_0800567c",
                "FUN_08005714"
            ],
            "code": "\nvoid FUNC_0800583c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800583c",
            "entrypoint": "0x0800583c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800583c": "FUNC_0800583c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800583e": {
            "called": [],
            "calling": [
                "FUN_0800567c",
                "FUN_08005714"
            ],
            "code": "\nvoid FUNC_0800583e(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800583e",
            "entrypoint": "0x0800583e",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800583e": "FUNC_0800583e"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08005840": {
            "additional_data": {
                "FUN_08005840": {
                    "add_or_subtract_value": 1,
                    "calculate_adjusted_value": 1,
                    "calculate_modified_value": 1,
                    "calculate_new_value": 4,
                    "calculate_result": 4,
                    "calculate_sum": 16,
                    "calculate_updated_value": 1,
                    "calculate_value": 2,
                    "get_updated_value": 1
                },
                "iVar1": {
                    "adjusted_value": 1,
                    "calculated_value": 1,
                    "current_index": 4,
                    "index": 3,
                    "modified_value": 1,
                    "new_index": 1,
                    "new_offset": 1,
                    "new_value": 1,
                    "result": 9,
                    "sum": 6,
                    "sum_index": 1,
                    "updated_index": 1
                },
                "param_1": {
                    "arg1": 1,
                    "input": 3,
                    "input_value": 3,
                    "param": 3,
                    "param1": 4,
                    "param_1": 2,
                    "result": 5,
                    "undefined": 1,
                    "undefined_val": 1,
                    "undefined_value": 1,
                    "unknown": 1,
                    "value": 4,
                    "value1": 1
                },
                "param_2": {
                    "arg2": 1,
                    "array": 5,
                    "array_address": 1,
                    "array_index": 8,
                    "array_start_index": 1,
                    "data": 1,
                    "data_pointer": 1,
                    "input": 2,
                    "input_array": 2,
                    "input_value": 2,
                    "offset": 2,
                    "param2": 3,
                    "start_index": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080057d0"
            ],
            "code": "\nint calculate_sum_08005840(undefined4 result,int array_index)\n\n{\n  int result;\n  \n  result = *(int *)(array_index + -4) + -4;\n  if (*(int *)(array_index + -4) < 0) {\n    result = result + *(int *)(array_index + result);\n  }\n  return result;\n}\n\n",
            "current_name": "calculate_sum_08005840",
            "entrypoint": "0x08005840",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005840": "calculate_sum_08005840",
                "iVar1": "result",
                "param_1": "result",
                "param_2": "array_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005854": {
            "additional_data": {
                "DAT_0800737e": {
                    "constant_2": 1,
                    "constant_data2": 1,
                    "input_data": 1
                },
                "DAT_080073ac": {
                    "constant_1": 1,
                    "constant_data": 1,
                    "input_data": 1
                },
                "DAT_20000224": {
                    "constant": 2,
                    "constant_value": 2,
                    "data": 1,
                    "data_flag": 1
                },
                "FUNC_0800708c": {
                    "calculate_result": 1,
                    "do_something": 1,
                    "execute_function3": 1,
                    "extract_data": 1,
                    "perform_operation": 2
                },
                "FUN_080009f0": {
                    "check_condition": 2,
                    "check_value": 1,
                    "execute_function4": 1,
                    "is_valid_result": 1,
                    "validate_result": 1
                },
                "FUN_08000a04": {
                    "check_values": 1,
                    "execute_function2": 1,
                    "perform_operation": 1,
                    "validate_arguments": 1,
                    "validate_input_condition": 1
                },
                "FUN_08005854": {
                    "check_and_initialize": 1,
                    "check_and_process_input": 1,
                    "decode_data": 1,
                    "perform_action": 1,
                    "perform_check": 1,
                    "perform_operation": 2,
                    "process_binary_function": 1,
                    "process_data": 6,
                    "validate_and_execute": 1,
                    "validate_and_execute_operation": 1,
                    "validate_and_process_data": 1,
                    "validate_and_process_input": 1,
                    "validate_input_and_initialize": 1
                },
                "FUN_08005c70": {
                    "calculate_value": 1,
                    "execute_function1": 1,
                    "get_function_result": 1,
                    "get_initial_value": 1,
                    "get_result_1": 1,
                    "get_value": 1
                },
                "FUN_0800709e": {
                    "check_condition": 1,
                    "check_flag": 1,
                    "check_validation": 1,
                    "execute_function5": 1,
                    "process_flag": 1
                },
                "FUN_080070a4": {
                    "compute_result": 1,
                    "initialize_data": 1,
                    "prepare_output": 1
                },
                "FUN_080072ac": {
                    "execute_function6": 1,
                    "get_memory": 1,
                    "get_memory_address": 1,
                    "get_pointer_value": 1,
                    "get_ptr_address": 1,
                    "store_result": 1
                },
                "LAB_080058d0": {
                    "error_handling": 1,
                    "label1": 1,
                    "skip_flag_check": 1
                },
                "iVar1": {
                    "check_result": 6,
                    "condition_result": 1,
                    "conversion_result": 2,
                    "error_flag": 1,
                    "execution_result": 1,
                    "func_status": 1,
                    "i_var": 1,
                    "is_valid": 1,
                    "result": 3,
                    "result_code": 1,
                    "status": 1,
                    "status_check": 1,
                    "temp": 1,
                    "temp_var": 1,
                    "temp_variable": 1,
                    "validation_result": 1
                },
                "local_28": {
                    "action_result": 1,
                    "decoding_result": 1,
                    "error": 2,
                    "error_code": 14,
                    "error_flag": 1,
                    "execution_status": 1,
                    "local_result": 5,
                    "local_variable1": 1,
                    "result": 1,
                    "return_val": 1,
                    "return_value": 1,
                    "status": 1,
                    "temp_var": 1
                },
                "local_30": {
                    "decoded_data": 1,
                    "final_result": 3,
                    "func_result": 1,
                    "function_result": 1,
                    "init_result": 1,
                    "operation_result": 1,
                    "output": 9,
                    "output_result": 2,
                    "processed_data": 3,
                    "processed_result": 1,
                    "result": 5,
                    "result_func": 1,
                    "return_value": 1,
                    "returned_value": 1
                },
                "local_38": {
                    "arg1_copy": 1,
                    "arg1_copy2": 1,
                    "input_5": 2,
                    "input_copy2": 1,
                    "input_param5": 1,
                    "input_param_5": 1,
                    "local_param3": 1,
                    "param1_copy2": 3,
                    "param1_copy_2": 2,
                    "param3": 5,
                    "param_1_copy": 2,
                    "param_1_copy2": 2,
                    "param_1_copy_2": 1,
                    "param_2_copy": 1,
                    "param_copy3": 1,
                    "setting4": 1,
                    "temp3": 1,
                    "temp_param_2": 1,
                    "temp_param_3": 2,
                    "temp_secondary_input_param": 1
                },
                "local_40": {
                    "arg1_copy": 2,
                    "input_3": 2,
                    "input_copy": 1,
                    "input_param3": 1,
                    "input_param_3": 1,
                    "local_param1": 1,
                    "param1": 5,
                    "param1_copy": 5,
                    "param_1_copy": 5,
                    "param_3": 1,
                    "param_copy1": 1,
                    "setting2": 1,
                    "temp1": 1,
                    "temp_input_param": 1,
                    "temp_param_1": 3
                },
                "local_44": {
                    "buffer": 3,
                    "data": 3,
                    "data_pointer": 3,
                    "data_ptr": 9,
                    "error_message": 1,
                    "input_data": 1,
                    "message": 6,
                    "pointer1": 1,
                    "ptr": 2,
                    "ptr_data": 1,
                    "string_ptr": 1
                },
                "local_48": {
                    "constant1": 1,
                    "counter": 1,
                    "flag": 23,
                    "flag_1": 2,
                    "is_valid": 2,
                    "is_valid_input": 1,
                    "setting1": 1
                },
                "param_1": {
                    "arg1": 3,
                    "input": 1,
                    "input1": 7,
                    "input_1": 6,
                    "input_param": 2,
                    "input_param1": 4,
                    "input_param_1": 7,
                    "input_value1": 1
                },
                "param_2": {
                    "arg2": 3,
                    "input2": 7,
                    "input_2": 6,
                    "input_param2": 4,
                    "input_param_2": 7,
                    "input_value2": 1,
                    "output_param": 2,
                    "size": 1
                },
                "piVar3": {
                    "data_ptr2": 1,
                    "error_code_pointer": 1,
                    "error_code_ptr": 1,
                    "int_pointer": 2,
                    "int_ptr": 9,
                    "int_result": 1,
                    "integer_pointer": 1,
                    "pointer2": 1,
                    "pointer_result": 1,
                    "pointer_to_result": 1,
                    "ptr_address": 1,
                    "ptr_int": 1,
                    "stored_result": 1
                },
                "puVar2": {
                    "flag_ptr": 1,
                    "pointer": 5,
                    "pointer_to_value": 1,
                    "pointer_var": 1,
                    "ptr": 8,
                    "ptr_address": 1,
                    "ptr_mem": 1,
                    "ptr_result": 1,
                    "ptr_var": 1
                },
                "uStack_34": {
                    "arg2_copy": 1,
                    "arg2_copy2": 1,
                    "input_6": 2,
                    "input_param6": 1,
                    "input_param_6": 1,
                    "local_param4": 1,
                    "param2_copy2": 3,
                    "param2_copy_2": 2,
                    "param4": 5,
                    "param_2_copy": 2,
                    "param_2_copy2": 1,
                    "param_2_copy_2": 1,
                    "param_copy4": 1,
                    "setting5": 1,
                    "temp4": 1,
                    "temp_param_4": 2,
                    "temp_secondary_output_param": 1
                },
                "uStack_3c": {
                    "arg2_copy": 2,
                    "input_4": 2,
                    "input_param4": 1,
                    "input_param_4": 1,
                    "local_param2": 1,
                    "param2": 5,
                    "param2_copy": 5,
                    "param_2_copy": 3,
                    "param_4": 1,
                    "param_copy2": 1,
                    "setting3": 1,
                    "temp2": 1,
                    "temp_output_param": 1,
                    "temp_param_2": 2
                },
                "uVar4": {
                    "default_output": 1,
                    "default_value": 1,
                    "error_code": 1,
                    "func_return_val": 1,
                    "result": 19,
                    "result1": 1,
                    "result_1": 1,
                    "return_value": 2,
                    "status": 1
                },
                "uVar5": {
                    "computed_value": 1,
                    "converted_param": 1,
                    "converted_result": 2,
                    "converted_value": 1,
                    "decoded_value": 1,
                    "func_output": 1,
                    "func_result": 6,
                    "func_return_value": 1,
                    "func_secondary_return_val": 1,
                    "function_result": 2,
                    "processed_data": 3,
                    "processed_input": 1,
                    "processed_value": 1,
                    "result": 1,
                    "result2": 2,
                    "result_2": 1,
                    "return_value": 1,
                    "some_value": 1
                }
            },
            "called": [
                "FUN_08005c70",
                "FUN_0800709e",
                "FUN_080070a4",
                "FUN_08000a04",
                "FUN_080009f0",
                "FUN_080072ac",
                "FUN_0800708c"
            ],
            "calling": [
                "FUN_08003330"
            ],
            "code": "\nundefined8 validate_and_process_data_08005854(undefined4 input_param_1,undefined4 input2)\n\n{\n  int check_result;\n  undefined4 *ptr;\n  int *int_ptr;\n  undefined8 result;\n  undefined8 func_result;\n  undefined4 flag;\n  undefined *data_ptr;\n  undefined4 param1_copy;\n  undefined4 param2;\n  undefined4 param3;\n  undefined4 param4;\n  undefined8 output;\n  int error_code;\n  \n  result = FUN_08005c70();\n  if (DAT_20000224 == -1) {\n    return result;\n  }\n  error_code = FUN_08000a04(input_param_1,input2,input_param_1,input2);\n  if (error_code != 0) {\n    return result;\n  }\n  func_result = FUNC_0800708c(input_param_1,input2);\n  check_result = FUN_080009f0((int)func_result,(int)((ulonglong)func_result >> 0x20),0,0x3ff00000);\n  if (check_result == 0) {\n    return result;\n  }\n  flag = 1;\n  data_ptr = &DAT_080073ac;\n  param1_copy = input_param_1;\n  param2 = input2;\n  param3 = input_param_1;\n  param4 = input2;\n  output = FUN_080070a4(&DAT_0800737e);\n  if (DAT_20000224 != '\\x02') {\n    check_result = FUN_0800709e(&flag);\n    if (check_result != 0) goto label1;\n  }\n  ptr = (undefined4 *)FUN_080072ac();\n  *ptr = 0x21;\nlabel1:\n  if (error_code != 0) {\n    int_ptr = (int *)FUN_080072ac();\n    *int_ptr = error_code;\n  }\n  return output;\n}\n\n",
            "current_name": "validate_and_process_data_08005854",
            "entrypoint": "0x08005854",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005854": "validate_and_process_data_08005854",
                "LAB_080058d0": "label1",
                "iVar1": "check_result",
                "local_28": "error_code",
                "local_30": "output",
                "local_38": "param3",
                "local_40": "param1_copy",
                "local_44": "data_ptr",
                "local_48": "flag",
                "param_1": "input_param_1",
                "param_2": "input2",
                "piVar3": "int_ptr",
                "puVar2": "ptr",
                "uStack_34": "param4",
                "uStack_3c": "param2",
                "uVar4": "result",
                "uVar5": "func_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005900": {
            "additional_data": {
                "DAT_20000224": {
                    "data_flag": 1,
                    "status2": 1
                },
                "F0": {
                    "upper_constant_2": 1
                },
                "F1": {
                    "upper_constant_0x3ff": 1
                },
                "F10": {
                    "upper_constant_0xfff00000": 1
                },
                "F11": {
                    "lower_constant_0x3ff00000": 1
                },
                "F12": {
                    "lower_constant_0xe0000000": 1
                },
                "F2": {
                    "lower_constant_0xfff": 1
                },
                "F3": {
                    "lower_constant_0x7ff": 1
                },
                "F4": {
                    "lower_constant_0x3fe": 1
                },
                "F5": {
                    "lower_constant_0xe": 1
                },
                "F6": {
                    "upper_constant_0x47efffff": 1
                },
                "F7": {
                    "upper_constant_0xc7efffff": 1
                },
                "F8": {
                    "upper_constant_0xffefffff": 1
                },
                "F9": {
                    "upper_constant_0x7ff00000": 1
                },
                "FUN_08005900": {
                    "calculate_result": 1,
                    "execute_function": 1,
                    "process_data": 3
                },
                "cVar1": {
                    "char_val": 1,
                    "char_var": 4,
                    "character": 2,
                    "character_var": 2,
                    "character_var1": 1,
                    "character_variable": 1,
                    "condition": 2,
                    "flag": 14,
                    "temp_var11": 1
                },
                "iVar2": {
                    "int_var": 2,
                    "int_var1": 1,
                    "integer_var": 2,
                    "integer_var1": 1,
                    "integer_variable": 1,
                    "intermediate_var": 1,
                    "result": 18,
                    "return_value": 1,
                    "temp_var1": 1
                },
                "iVar5": {
                    "comparison_result": 1,
                    "i_var5": 1,
                    "int_var2": 2,
                    "int_var_2": 1,
                    "integer_var2": 3,
                    "integer_variable2": 1,
                    "intermediate_var2": 1,
                    "result": 1,
                    "result2": 5,
                    "result_2": 1,
                    "return_value": 2,
                    "status": 1,
                    "sub_result": 1,
                    "temp": 1,
                    "temp_result": 5,
                    "temp_var4": 1
                },
                "local_30": {
                    "error_code_final": 1,
                    "func_result": 1,
                    "i_var3": 1,
                    "int_var3": 1,
                    "integer_var3": 2,
                    "local_result": 2,
                    "local_var2": 1,
                    "local_var5": 3,
                    "local_var6": 2,
                    "local_var_5": 1,
                    "local_variable_5": 1,
                    "local_variable_8": 1,
                    "result_value2": 1,
                    "return_value2": 1,
                    "status": 1,
                    "sub_value": 1,
                    "temp": 4,
                    "temp2": 1,
                    "temp_result2": 2,
                    "temp_value": 2,
                    "temp_var10": 1
                },
                "local_38": {
                    "final_result": 1,
                    "final_value": 1,
                    "local_result_value": 1,
                    "local_var": 1,
                    "local_var5": 2,
                    "local_variable_7": 1,
                    "lower_part_return_value": 1,
                    "output": 1,
                    "output1": 1,
                    "output_var1": 1,
                    "output_var3": 1,
                    "result": 1,
                    "result_ulonglong1": 1,
                    "result_value1": 1,
                    "ret_value": 1,
                    "return_val": 1,
                    "return_value": 5,
                    "return_value2": 2,
                    "return_value_2": 1,
                    "return_value_final": 1,
                    "temp_result": 1,
                    "undefined8_var3": 3,
                    "value": 1
                },
                "local_40": {
                    "data_input3": 1,
                    "input3_copy": 6,
                    "input3_var": 1,
                    "local_arg3": 1,
                    "local_input3": 3,
                    "local_var3": 4,
                    "local_var4": 1,
                    "local_var_3": 1,
                    "local_variable_3": 1,
                    "local_variable_5": 1,
                    "new_input3": 1,
                    "original_input3": 1,
                    "param3": 1,
                    "param3_copy": 2,
                    "saved_input_3": 1,
                    "temp5": 1,
                    "temp_input3": 1,
                    "temp_var8": 1,
                    "undefined4_var6": 2
                },
                "local_48": {
                    "data_input1": 1,
                    "input1_copy": 6,
                    "input1_var": 1,
                    "local_arg1": 1,
                    "local_input1": 3,
                    "local_var1": 4,
                    "local_var3": 1,
                    "local_var_1": 1,
                    "local_variable_1": 1,
                    "local_variable_3": 1,
                    "new_input1": 1,
                    "original_input1": 1,
                    "param1": 1,
                    "param1_copy": 2,
                    "saved_input_1": 1,
                    "temp3": 1,
                    "temp_input1": 1,
                    "temp_var6": 1,
                    "undefined4_var4": 2
                },
                "local_4c": {
                    "buffer": 1,
                    "char_array": 1,
                    "char_ptr": 1,
                    "data": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "error_string": 1,
                    "local_pointer": 1,
                    "local_var2": 1,
                    "local_variable_2": 1,
                    "message": 4,
                    "msg_ptr": 1,
                    "pointer": 2,
                    "pointer3": 1,
                    "pointer_3": 1,
                    "pointer_flag": 1,
                    "pointer_var1": 1,
                    "ptr": 1,
                    "ptr3": 1,
                    "ptr_data": 2,
                    "ptr_var": 1,
                    "temp2": 1,
                    "uchar_ptr": 1,
                    "undefined_ptr_var": 2,
                    "undefined_var_ptr": 1
                },
                "local_50": {
                    "condition1": 2,
                    "condition_1": 1,
                    "data_flag": 1,
                    "error_code": 1,
                    "flag": 9,
                    "flag1": 3,
                    "flag_value": 1,
                    "flag_var1": 2,
                    "is_set": 1,
                    "local_flag": 1,
                    "local_var1": 1,
                    "local_variable_1": 1,
                    "status": 2,
                    "temp1": 1,
                    "undefined4_var3": 2,
                    "value1": 2
                },
                "param_1": {
                    "arg1": 2,
                    "input1": 22,
                    "input_1": 3,
                    "input_param1": 3,
                    "input_param_1": 1
                },
                "param_2": {
                    "arg2": 2,
                    "input2": 22,
                    "input_2": 3,
                    "input_param2": 3,
                    "input_param_2": 1
                },
                "param_3": {
                    "arg3": 2,
                    "input3": 22,
                    "input_3": 3,
                    "input_param3": 3,
                    "input_param_3": 1
                },
                "param_4": {
                    "arg4": 2,
                    "input4": 22,
                    "input_4": 3,
                    "input_param4": 3,
                    "input_param_4": 1
                },
                "piVar3": {
                    "int_ptr": 2,
                    "int_ptr_var": 1,
                    "integer_ptr": 1,
                    "integer_ptr_var": 1,
                    "integer_ptr_var1": 1,
                    "p_result": 1,
                    "pointer": 7,
                    "pointer1": 1,
                    "pointer_integer_variable": 1,
                    "pointer_result": 1,
                    "pointer_var": 1,
                    "ptr": 1,
                    "ptr_ivar3": 1,
                    "ptr_result": 3,
                    "ptr_to_result": 1,
                    "ptr_var3": 1,
                    "result_ptr": 2,
                    "temp_var2": 1
                },
                "puVar4": {
                    "data_pointer": 2,
                    "p_value": 1,
                    "pointer2": 2,
                    "pointer_2": 1,
                    "pointer_var": 1,
                    "pointer_var2": 1,
                    "pointer_variable": 1,
                    "ptr": 4,
                    "ptr2": 1,
                    "ptr_result2": 1,
                    "ptr_return_value": 1,
                    "ptr_to_value": 1,
                    "ptr_uvar4": 1,
                    "ptr_value": 1,
                    "ptr_var4": 1,
                    "result_ptr": 1,
                    "temp_var3": 1,
                    "uint_ptr": 2,
                    "undefined4_ptr": 1,
                    "undefined4_ptr_var": 2,
                    "undefined4_ptr_var1": 1
                },
                "uStack_3c": {
                    "data_input4": 1,
                    "input4_copy": 5,
                    "input4_var": 1,
                    "local_arg4": 1,
                    "local_input4": 2,
                    "local_var4": 4,
                    "local_var_4": 1,
                    "local_variable_4": 1,
                    "local_variable_6": 1,
                    "new_input4": 1,
                    "original_input4": 1,
                    "param4": 1,
                    "param4_copy": 1,
                    "saved_input_4": 1,
                    "temp6": 1,
                    "temp_input4": 1,
                    "temp_var9": 1,
                    "u_stack3c": 1,
                    "undefined4_var7": 2,
                    "var_on_stack_3c": 1
                },
                "uStack_44": {
                    "data_input2": 1,
                    "input2_copy": 5,
                    "input2_var": 1,
                    "local_arg2": 1,
                    "local_input2": 2,
                    "local_var2": 4,
                    "local_var_2": 1,
                    "local_variable_2": 1,
                    "local_variable_4": 1,
                    "new_input2": 1,
                    "original_input2": 1,
                    "param2": 1,
                    "param2_copy": 1,
                    "saved_input_2": 1,
                    "temp4": 1,
                    "temp_input2": 1,
                    "temp_var7": 1,
                    "u_stack44": 1,
                    "undefined4_var5": 2,
                    "var_on_stack_44": 1
                },
                "uVar6": {
                    "data1": 1,
                    "high_32_bits": 1,
                    "high_bits": 3,
                    "high_value": 1,
                    "high_word": 1,
                    "output_var1": 1,
                    "result_high": 2,
                    "return_value_high_part": 1,
                    "temp_var5": 1,
                    "uint_var_1": 1,
                    "undefined4_var1": 4,
                    "unsigned_variable_1": 1,
                    "upper32_bit": 1,
                    "upper32bits": 1,
                    "upper_bits": 2,
                    "upper_half": 1,
                    "upper_part": 2,
                    "upper_part_result": 1,
                    "upper_u_int": 1,
                    "uvar_high": 1,
                    "value_1": 1,
                    "var1": 1,
                    "var6": 1
                },
                "uVar7": {
                    "data2": 1,
                    "low_32_bits": 1,
                    "low_bits": 3,
                    "low_value": 1,
                    "low_word": 1,
                    "lower32_bit": 1,
                    "lower32bits": 1,
                    "lower_bits": 2,
                    "lower_half": 1,
                    "lower_part": 2,
                    "lower_part_result": 1,
                    "lower_u_int": 1,
                    "output_var2": 2,
                    "result_low": 2,
                    "return_value_low_part": 1,
                    "uint_var_2": 1,
                    "undefined4_var2": 4,
                    "unsigned_variable_2": 1,
                    "uvar_low": 1,
                    "value_2": 1,
                    "var2": 1,
                    "var7": 1
                },
                "uVar8": {
                    "original_result": 1,
                    "output1": 2,
                    "output_var1": 1,
                    "result": 2,
                    "result_uint1": 1,
                    "result_value": 1,
                    "result_var": 1,
                    "return_val": 1,
                    "return_val1": 2,
                    "return_value": 10,
                    "return_value1": 3,
                    "u_var8": 1,
                    "undefined8_var1": 4,
                    "unsigned_variable_3": 1
                },
                "uVar9": {
                    "output2": 2,
                    "result_uint2": 1,
                    "return_function_value": 1,
                    "return_val": 2,
                    "return_val2": 3,
                    "return_value2": 6,
                    "temp_result_2": 1,
                    "temp_value": 4,
                    "temp_var": 1,
                    "u_var9": 1,
                    "undefined8_var2": 4,
                    "unsigned_variable_4": 1
                }
            },
            "called": [
                "FUN_0800709e",
                "FUN_080004d0",
                "FUN_08000724",
                "FUN_080009b4",
                "FUN_08006228",
                "FUN_08000a04",
                "FUN_08007092",
                "FUN_080070b0",
                "FUN_080072ac",
                "FUN_080009a0"
            ],
            "calling": [
                "FUN_0800411c"
            ],
            "code": "\nundefined8 process_data_08005900(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  char flag;\n  int result;\n  int *pointer;\n  undefined4 *ptr;\n  int temp_result;\n  undefined4 undefined4_var1;\n  undefined4 undefined4_var2;\n  undefined8 return_value;\n  undefined8 return_value2;\n  undefined4 flag;\n  undefined *message;\n  undefined4 input1_copy;\n  undefined4 input2_copy;\n  undefined4 input3_copy;\n  undefined4 input4_copy;\n  undefined8 return_value;\n  int temp;\n  \n  return_value = FUN_08006228();\n  flag = DAT_20000224;\n  undefined4_var1 = (undefined4)((ulonglong)return_value >> 0x20);\n  undefined4_var2 = (undefined4)return_value;\n  if (DAT_20000224 == -1) {\n    return return_value;\n  }\n  result = FUN_08000a04(input3,input4,input3,input4);\n  if (result != 0) {\n    return return_value;\n  }\n  result = FUN_08000a04(input1,input2,input1,input2);\n  input1_copy = input1;\n  input2_copy = input2;\n  input3_copy = input3;\n  input4_copy = input4;\n  if (result == 0) {\n    result = FUN_080009a0(input1,input2,0,0);\n    if (result != 0) {\n      result = FUN_080009a0(input3,input4,0,0);\n      if (result != 0) {\n        flag = 1;\n        message = &DAT_080073b1;\n        return_value = 0;\n        temp = 0;\n        if (flag != '\\0') {\n          return_value = 0x3ff0000000000000;\n          goto LAB_080059d0;\n        }\n        goto LAB_08005978;\n      }\n      result = FUN_08007092(input3,input4);\n      if (result == 0) {\n        return return_value;\n      }\n      result = FUN_080009b4(input3,input4,0,0);\n      if (result == 0) {\n        return return_value;\n      }\n      flag = 1;\n      message = &DAT_080073b1;\n      temp = 0;\n      if (DAT_20000224 == '\\0') goto LAB_08005a22;\n      return_value = 0xfff0000000000000;\n      temp = 0;\n      flag = DAT_20000224;\nLAB_08005a32:\n      if (flag != '\\x02') goto LAB_08005978;\n      goto LAB_08005a34;\n    }\n    result = FUN_08007092(undefined4_var2,undefined4_var1);\n    if (((result != 0) || (temp_result = FUN_08007092(input1,input2), temp_result == 0)) ||\n       (temp_result = FUN_08007092(input3,input4), temp_result == 0)) {\n      result = FUN_080009a0(undefined4_var2,undefined4_var1,0,0);\n      if (result == 0) {\n        return return_value;\n      }\n      result = FUN_08007092(input1,input2);\n      if (result == 0) {\n        return return_value;\n      }\n      result = FUN_08007092(input3,input4);\n      if (result == 0) {\n        return return_value;\n      }\n      flag = 4;\n      message = &DAT_080073b1;\n      temp = 0;\n      return_value._0_4_ = 0;\n      return_value._4_4_ = 0;\n      goto LAB_08005afa;\n    }\n    temp = FUN_08000a04(undefined4_var2,undefined4_var1);\n    flag = DAT_20000224;\n    if (temp != 0) {\n      message = &DAT_080073b1;\n      flag = 1;\n      temp = result;\n      if (DAT_20000224 != '\\0') {\n        return_value = FUN_08000724(0,0,0,0);\n        goto LAB_08005a32;\n      }\nLAB_08005a22:\n      message = &DAT_080073b1;\n      flag = 1;\n      return_value = 0;\n      goto LAB_08005978;\n    }\n    message = &DAT_080073b1;\n    flag = 3;\n    if (DAT_20000224 == '\\0') {\n      return_value._0_4_ = 0xe0000000;\n      return_value._4_4_ = 0x47efffff;\n      result = FUN_080009b4(input1,input2,0,0);\n      if (result != 0) {\n        return_value = FUN_080004d0(input3,input4,0,0x3fe00000);\n        return_value2 = FUN_080070b0();\n        result = FUN_080009a0((int)return_value,(int)((ulonglong)return_value >> 0x20),(int)return_value2,\n                             (int)((ulonglong)return_value2 >> 0x20));\n        if (result == 0) {\n          return_value._0_4_ = 0xe0000000;\n          return_value._4_4_ = 0xc7efffff;\n        }\n        goto LAB_08005afa;\n      }\nLAB_08005b98:\n      result = FUN_0800709e(&flag);\n      if (result != 0) goto LAB_080059d0;\n    }\n    else {\n      return_value._0_4_ = 0;\n      return_value._4_4_ = 0x7ff00000;\n      result = FUN_080009b4(input1,input2,0,0);\n      if (result != 0) {\n        return_value = FUN_080004d0(input3,input4,0,0x3fe00000);\n        return_value2 = FUN_080070b0();\n        result = FUN_080009a0((int)return_value,(int)((ulonglong)return_value >> 0x20),(int)return_value2,\n                             (int)((ulonglong)return_value2 >> 0x20));\n        if (result == 0) {\n          return_value._0_4_ = 0;\n          return_value._4_4_ = 0xfff00000;\n        }\n      }\nLAB_08005afa:\n      if (DAT_20000224 != '\\x02') goto LAB_08005b98;\n    }\n    ptr = (undefined4 *)FUN_080072ac();\n    undefined4_var2 = 0x22;\n  }\n  else {\n    result = FUN_080009a0(input3,input4,0,0);\n    if (result == 0) {\n      return return_value;\n    }\n    flag = 1;\n    message = &DAT_080073b1;\n    return_value = 0x3ff0000000000000;\n    temp = 0;\n    if (flag == '\\x02') {\n      return 0x3ff0000000000000;\n    }\nLAB_08005978:\n    result = FUN_0800709e(&flag);\n    if (result != 0) goto LAB_080059d0;\nLAB_08005a34:\n    ptr = (undefined4 *)FUN_080072ac();\n    undefined4_var2 = 0x21;\n  }\n  *ptr = undefined4_var2;\nLAB_080059d0:\n  if (temp != 0) {\n    pointer = (int *)FUN_080072ac();\n    *pointer = temp;\n  }\n  return return_value;\n}\n\n",
            "current_name": "process_data_08005900",
            "entrypoint": "0x08005900",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005900": "process_data_08005900",
                "cVar1": "flag",
                "iVar2": "result",
                "iVar5": "temp_result",
                "local_30": "temp",
                "local_38": "return_value",
                "local_40": "input3_copy",
                "local_48": "input1_copy",
                "local_4c": "message",
                "local_50": "flag",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "piVar3": "pointer",
                "puVar4": "ptr",
                "uStack_3c": "input4_copy",
                "uStack_44": "input2_copy",
                "uVar6": "undefined4_var1",
                "uVar7": "undefined4_var2",
                "uVar8": "return_value",
                "uVar9": "return_value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005bc8": {
            "additional_data": {
                "DAT_080073b5": {
                    "data_pointer": 1
                },
                "DAT_20000224": {
                    "condition": 1,
                    "configuration_flag": 1,
                    "constant": 1,
                    "constant_value": 3,
                    "data_constant": 1,
                    "data_status": 1,
                    "data_value": 2,
                    "data_var": 1,
                    "limit_value": 1
                },
                "FUN_08000724": {
                    "allocate_memory": 1,
                    "calculate_result": 1,
                    "compute_value": 2,
                    "decode_value": 1,
                    "extract_info": 1,
                    "get_value_from_function_2": 1,
                    "initialize_value": 1,
                    "reverse_data": 2
                },
                "FUN_080009b4": {
                    "check_condition": 4,
                    "check_data": 1,
                    "check_validity": 1,
                    "perform_computation": 1,
                    "perform_operation": 1,
                    "validate_data": 2,
                    "validate_inputs": 1,
                    "verify_data": 1
                },
                "FUN_08000a04": {
                    "calculate_result": 1,
                    "check_data": 3,
                    "check_input": 1,
                    "check_input_validity": 1,
                    "check_validity": 1,
                    "check_values": 1,
                    "perform_operation": 2,
                    "process_data": 1,
                    "validate_input": 1
                },
                "FUN_08005bc8": {
                    "check_and_assign_values": 1,
                    "check_and_execute": 2,
                    "check_and_execute_function": 1,
                    "check_and_initialize": 1,
                    "check_and_invoke_function": 1,
                    "check_and_process_data": 2,
                    "execute_task": 1,
                    "process_data": 2,
                    "process_function": 1,
                    "validate_and_execute": 1,
                    "validate_and_post_data": 1,
                    "validate_and_process_data": 1,
                    "validate_and_process_input": 1,
                    "validate_inputs_and_process": 1,
                    "verify_and_process_data": 1
                },
                "FUN_08006c0c": {
                    "get_configuration": 1,
                    "get_data": 5,
                    "get_default_value": 1,
                    "get_initial_result": 1,
                    "get_initial_value": 2,
                    "get_value_from_function_1": 1,
                    "initialize": 1
                },
                "FUN_0800709e": {
                    "check_condition": 1,
                    "check_flag": 1,
                    "check_validity": 1,
                    "flag_checker": 1,
                    "process_data": 2,
                    "process_flag": 5,
                    "update_database": 1
                },
                "FUN_080072ac": {
                    "allocate_memory": 3,
                    "get_address_and_store": 1,
                    "get_memory": 1,
                    "get_memory_address": 3,
                    "get_memory_location": 1,
                    "set_value": 1,
                    "store_value": 1,
                    "write_to_memory": 1
                },
                "cVar1": {
                    "char_var": 1,
                    "character_var": 1,
                    "condition": 4,
                    "condition_flag": 1,
                    "config_value": 1,
                    "control_variable": 1,
                    "data_variable": 2,
                    "flag": 4,
                    "flag2": 1,
                    "flag_2": 2,
                    "flag_c_var": 1,
                    "flag_value": 2,
                    "special_indicator": 1
                },
                "iVar2": {
                    "check_result": 1,
                    "error_code": 1,
                    "func_result": 1,
                    "int_var": 1,
                    "result": 2,
                    "result_2": 1,
                    "result_code": 2,
                    "result_status": 1,
                    "return_value": 1,
                    "return_value2": 1,
                    "status": 3,
                    "status2": 1,
                    "status_check": 1,
                    "temp": 1,
                    "temp_result": 1
                },
                "local_30": {
                    "check_function_result": 1,
                    "error": 3,
                    "error_code": 12,
                    "local_result": 1,
                    "local_var": 2,
                    "local_variable": 1,
                    "status": 4,
                    "task_result": 1,
                    "temp": 3,
                    "temp_result": 1,
                    "temp_value": 1,
                    "verification_result": 1
                },
                "local_38": {
                    "final_result": 2,
                    "final_value": 1,
                    "local_result": 1,
                    "output": 9,
                    "output_param": 2,
                    "result": 10,
                    "return_value": 4,
                    "return_value_2": 1,
                    "reverse_result": 1
                },
                "local_40": {
                    "arg1_copy2": 1,
                    "copy_of_input_param_1_2": 1,
                    "current_param1": 1,
                    "input1": 1,
                    "input1_copy2": 4,
                    "input2": 1,
                    "input_1_copy2": 2,
                    "input_1_copy_2": 1,
                    "input_param1_copy2": 2,
                    "input_param_1_3": 1,
                    "param_1": 1,
                    "param_1_copy2": 3,
                    "param_1_copy_2": 2,
                    "temp3": 2,
                    "temp_3": 1,
                    "temp_input_1_2": 1,
                    "temp_input_3": 1,
                    "temp_param3": 2,
                    "temp_param_1": 1,
                    "temp_param_3": 2
                },
                "local_48": {
                    "arg1_copy": 1,
                    "copy_input_param_1": 1,
                    "copy_of_input_param_1": 1,
                    "initial_param1": 1,
                    "input1": 2,
                    "input1_copy": 4,
                    "input_1_copy": 3,
                    "input_param1_copy": 2,
                    "input_param_1_2": 1,
                    "param_1": 1,
                    "param_1_copy": 5,
                    "temp1": 2,
                    "temp_1": 1,
                    "temp_input_1": 2,
                    "temp_param1": 2,
                    "temp_param_1": 2
                },
                "local_4c": {
                    "address_var": 1,
                    "char_array": 1,
                    "data_pointer": 3,
                    "data_ptr": 5,
                    "error_message": 1,
                    "loop_variable": 1,
                    "message": 10,
                    "message_ptr": 2,
                    "string_1": 1,
                    "string_ptr": 6
                },
                "local_50": {
                    "constant_1": 1,
                    "counter": 1,
                    "flag": 23,
                    "flag_value": 2,
                    "loop_counter": 1,
                    "status": 2,
                    "value1": 1
                },
                "param_1": {
                    "arg1": 1,
                    "input": 1,
                    "input1": 7,
                    "input_1": 7,
                    "input_param": 1,
                    "input_param1": 5,
                    "input_param_1": 9
                },
                "param_2": {
                    "arg2": 1,
                    "input2": 7,
                    "input_2": 7,
                    "input_param2": 5,
                    "input_param_2": 9,
                    "output": 1,
                    "output_param": 1
                },
                "piVar3": {
                    "error_code_pointer": 1,
                    "error_code_ptr": 1,
                    "error_ptr": 1,
                    "int_ptr": 2,
                    "integer_pointer": 1,
                    "output_ptr": 1,
                    "pointer": 1,
                    "pointer_status": 1,
                    "pointer_to_int": 2,
                    "ptr_check_result": 1,
                    "ptr_result": 1,
                    "ptr_return_value": 1,
                    "ptr_status": 1,
                    "result_ptr": 1,
                    "status_ptr": 1
                },
                "puVar4": {
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "flag_pointer": 1,
                    "flag_ptr": 2,
                    "message_ptr": 1,
                    "message_ptr_ptr": 1,
                    "pointer_to_uint": 2,
                    "pointer_value": 1,
                    "ptr_flag": 1,
                    "ptr_return_value2": 1,
                    "ptr_value": 2,
                    "uint_ptr": 1,
                    "undefined4_pointer": 1,
                    "undefined4_ptr": 1
                },
                "uStack_3c": {
                    "arg2_copy2": 1,
                    "copy_of_input_param_2_2": 1,
                    "current_param2": 1,
                    "input2": 1,
                    "input2_copy2": 4,
                    "input_2_copy2": 2,
                    "input_2_copy_2": 1,
                    "input_param2_copy2": 2,
                    "input_param_2_3": 1,
                    "output2": 1,
                    "param_2": 1,
                    "param_2_copy2": 3,
                    "param_2_copy_2": 2,
                    "temp4": 2,
                    "temp_4": 1,
                    "temp_input_2_2": 1,
                    "temp_input_4": 1,
                    "temp_param4": 2,
                    "temp_param_2": 1,
                    "temp_param_4": 2
                },
                "uStack_44": {
                    "arg2_copy": 1,
                    "copy_input_param_2": 1,
                    "copy_of_input_param_2": 1,
                    "initial_param2": 1,
                    "input2": 1,
                    "input2_copy": 4,
                    "input_2_copy": 3,
                    "input_param2_copy": 2,
                    "input_param_2_2": 1,
                    "output1": 1,
                    "param_2": 1,
                    "param_2_copy": 5,
                    "temp2": 2,
                    "temp_2": 1,
                    "temp_input_2": 2,
                    "temp_param2": 2,
                    "temp_param_2": 2
                },
                "uVar5": {
                    "output": 1,
                    "result": 17,
                    "return_value": 5,
                    "retval": 1
                }
            },
            "called": [
                "FUN_0800709e",
                "FUN_08006c0c",
                "FUN_08000724",
                "FUN_080009b4",
                "FUN_08000a04",
                "FUN_080072ac"
            ],
            "calling": [
                "FUN_08003330"
            ],
            "code": "\nundefined8 check_and_process_data_08005bc8(undefined4 input_param_1,undefined4 input_param_2)\n\n{\n  char flag;\n  int status;\n  int *int_ptr;\n  undefined4 *pointer_to_uint;\n  undefined8 result;\n  undefined4 flag;\n  undefined *message;\n  undefined4 param_1_copy;\n  undefined4 param_2_copy;\n  undefined4 input1_copy2;\n  undefined4 input2_copy2;\n  undefined8 result;\n  int error_code;\n  \n  result = FUN_08006c0c();\n  flag = DAT_20000224;\n  if (DAT_20000224 == -1) {\n    return result;\n  }\n  error_code = FUN_08000a04(input_param_1,input_param_2,input_param_1,input_param_2);\n  if (error_code != 0) {\n    return result;\n  }\n  status = FUN_080009b4(input_param_1,input_param_2,0,0);\n  if (status == 0) {\n    return result;\n  }\n  flag = 1;\n  message = &DAT_080073b5;\n  param_1_copy = input_param_1;\n  param_2_copy = input_param_2;\n  input1_copy2 = input_param_1;\n  input2_copy2 = input_param_2;\n  if (flag == '\\0') {\n    result = 0;\nLAB_08005c26:\n    status = FUN_0800709e(&flag);\n    if (status != 0) goto LAB_08005c2e;\n  }\n  else {\n    result = FUN_08000724(0,0,0,0);\n    if (flag != '\\x02') goto LAB_08005c26;\n  }\n  pointer_to_uint = (undefined4 *)FUN_080072ac();\n  *pointer_to_uint = 0x21;\nLAB_08005c2e:\n  if (error_code != 0) {\n    int_ptr = (int *)FUN_080072ac();\n    *int_ptr = error_code;\n  }\n  return result;\n}\n\n",
            "current_name": "check_and_process_data_08005bc8",
            "entrypoint": "0x08005bc8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005bc8": "check_and_process_data_08005bc8",
                "cVar1": "flag",
                "iVar2": "status",
                "local_30": "error_code",
                "local_38": "result",
                "local_40": "input1_copy2",
                "local_48": "param_1_copy",
                "local_4c": "message",
                "local_50": "flag",
                "param_1": "input_param_1",
                "param_2": "input_param_2",
                "piVar3": "int_ptr",
                "puVar4": "pointer_to_uint",
                "uStack_3c": "input2_copy2",
                "uStack_44": "param_2_copy",
                "uVar5": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005c70": {
            "additional_data": {
                "BOOL_080009f0": {
                    "is_true": 1
                },
                "FUNC_0800708c": {
                    "calculate_function": 1,
                    "custom_function": 1,
                    "perform_task": 1
                },
                "FUN_08000168": {
                    "combine_values": 1,
                    "multiply": 1,
                    "process_inputs": 1
                },
                "FUN_0800016c": {
                    "add": 1,
                    "combine_inputs": 1,
                    "perform_operation": 1
                },
                "FUN_080004d0": {
                    "calculate_intermediate": 1,
                    "calculate_result": 1,
                    "calculate_sub_result": 1
                },
                "FUN_08000724": {
                    "calculate_final_value": 1,
                    "process_results": 1,
                    "subtract": 1
                },
                "FUN_080009f0": {
                    "check_condition": 1,
                    "check_error": 1
                },
                "FUN_08005c70": {
                    "calculate": 3,
                    "calculate_expression": 1,
                    "calculate_function": 2,
                    "calculate_result": 18,
                    "calculate_value": 4
                },
                "FUN_08006c0c": {
                    "calculate_value": 1,
                    "perform_another_operation": 1,
                    "perform_operation": 1
                },
                "iVar1": {
                    "check1": 1,
                    "comparison_result": 2,
                    "condition": 1,
                    "error_check": 1,
                    "result": 14,
                    "result1": 1,
                    "result_1": 1,
                    "success": 1,
                    "temp_result": 1,
                    "temp_var1": 1,
                    "temp_var5": 1
                },
                "iVar18": {
                    "comparison_result": 1
                },
                "param_1": {
                    "arg1": 1,
                    "input1": 19,
                    "input_1": 5,
                    "input_a": 1,
                    "input_param_1": 2,
                    "input_value1": 2,
                    "number1": 1
                },
                "param_2": {
                    "arg2": 1,
                    "input2": 19,
                    "input_2": 5,
                    "input_b": 1,
                    "input_param_2": 2,
                    "input_value2": 2,
                    "number2": 1
                },
                "uVar1": {
                    "combined_input": 2,
                    "combined_inputs": 1,
                    "combined_params": 1,
                    "result": 6,
                    "result1": 1,
                    "temp1": 2
                },
                "uVar10": {
                    "intermediate_result": 1,
                    "intermediate_result1": 2,
                    "mid_result1": 1,
                    "output2": 1,
                    "output_2": 1,
                    "result2": 2,
                    "temp3": 1,
                    "temp64_1": 1,
                    "temp7": 3,
                    "temp8": 1,
                    "temp9": 1,
                    "temp_1": 1,
                    "temp_calc1": 1,
                    "temp_result1": 4,
                    "temp_result2": 1,
                    "temp_result_1": 4,
                    "temp_value1": 1,
                    "temp_var1": 1,
                    "u_var10": 1,
                    "u_var_i": 1
                },
                "uVar11": {
                    "intermediate_result2": 2,
                    "mid_result2": 1,
                    "output3": 1,
                    "output_3": 1,
                    "result3": 2,
                    "temp10": 1,
                    "temp4": 1,
                    "temp64_2": 1,
                    "temp8": 3,
                    "temp9": 1,
                    "temp_2": 1,
                    "temp_calc2": 1,
                    "temp_result": 1,
                    "temp_result2": 4,
                    "temp_result3": 1,
                    "temp_result_2": 4,
                    "temp_value2": 1,
                    "temp_var4": 1,
                    "u_var11": 1,
                    "u_var_j": 1
                },
                "uVar12": {
                    "temp11": 1,
                    "temp_result3": 1
                },
                "uVar13": {
                    "temp12": 1,
                    "temp_result4": 1
                },
                "uVar14": {
                    "temp13": 1,
                    "temp_result5": 1
                },
                "uVar15": {
                    "temp14": 1,
                    "temp_result6": 1
                },
                "uVar16": {
                    "temp15": 1,
                    "temp_result7": 1
                },
                "uVar17": {
                    "temp16": 1,
                    "temp_result8": 1
                },
                "uVar18": {
                    "temp17": 1
                },
                "uVar19": {
                    "temp18": 1
                },
                "uVar2": {
                    "lower_bits": 1,
                    "masked_input": 1,
                    "param2_masked": 1,
                    "result1": 1,
                    "result2": 1,
                    "temp1": 14,
                    "temp2": 2,
                    "temp_1": 5,
                    "temp_var1": 1,
                    "temp_var6": 1,
                    "temp_var_1": 1,
                    "temporary1": 1,
                    "u_var_a": 1
                },
                "uVar20": {
                    "temp19": 1
                },
                "uVar21": {
                    "temp20": 1
                },
                "uVar22": {
                    "temp21": 1
                },
                "uVar23": {
                    "temp22": 1
                },
                "uVar24": {
                    "temp23": 1
                },
                "uVar25": {
                    "temp24": 1
                },
                "uVar26": {
                    "temp25": 1
                },
                "uVar27": {
                    "temp26": 1
                },
                "uVar28": {
                    "temp27": 1
                },
                "uVar29": {
                    "temp28": 1
                },
                "uVar3": {
                    "result": 1,
                    "result1": 1,
                    "result2": 1,
                    "result3": 1,
                    "temp2": 14,
                    "temp3": 2,
                    "temp_2": 5,
                    "temp_var2": 1,
                    "temp_var7": 1,
                    "temp_var_2": 1,
                    "temporary2": 1,
                    "u_var3": 1,
                    "u_var_b": 1
                },
                "uVar30": {
                    "temp29": 1
                },
                "uVar31": {
                    "temp30": 1
                },
                "uVar32": {
                    "temp31": 1
                },
                "uVar33": {
                    "temp32": 1
                },
                "uVar34": {
                    "temp33": 1
                },
                "uVar35": {
                    "temp34": 1
                },
                "uVar36": {
                    "temp35": 1
                },
                "uVar37": {
                    "temp36": 1
                },
                "uVar38": {
                    "temp37": 1
                },
                "uVar39": {
                    "temp38": 1
                },
                "uVar4": {
                    "result2": 1,
                    "result3": 1,
                    "result4": 1,
                    "temp1": 1,
                    "temp3": 14,
                    "temp4": 2,
                    "temp_3": 5,
                    "temp_var3": 1,
                    "temp_var8": 1,
                    "temp_var_3": 1,
                    "temporary3": 1,
                    "u_var4": 1,
                    "u_var_c": 1
                },
                "uVar40": {
                    "temp39": 1
                },
                "uVar41": {
                    "temp40": 1
                },
                "uVar42": {
                    "temp41": 1
                },
                "uVar43": {
                    "temp42": 1
                },
                "uVar44": {
                    "temp43": 1
                },
                "uVar45": {
                    "temp44": 1
                },
                "uVar46": {
                    "temp45": 1
                },
                "uVar47": {
                    "temp46": 1
                },
                "uVar48": {
                    "temp47": 1
                },
                "uVar49": {
                    "temp48": 1
                },
                "uVar5": {
                    "result3": 1,
                    "result4": 1,
                    "result5": 1,
                    "temp2": 1,
                    "temp4": 14,
                    "temp5": 2,
                    "temp_4": 5,
                    "temp_var4": 1,
                    "temp_var9": 1,
                    "temp_var_4": 1,
                    "temporary4": 1,
                    "u_var5": 1,
                    "u_var_d": 1
                },
                "uVar50": {
                    "temp49": 1
                },
                "uVar51": {
                    "temp50": 1
                },
                "uVar52": {
                    "temp51": 1
                },
                "uVar53": {
                    "temp52": 1
                },
                "uVar54": {
                    "temp53": 1
                },
                "uVar55": {
                    "temp54": 1
                },
                "uVar56": {
                    "temp55": 1
                },
                "uVar57": {
                    "temp56": 1
                },
                "uVar58": {
                    "temp57": 1
                },
                "uVar59": {
                    "temp58": 1
                },
                "uVar6": {
                    "result4": 1,
                    "result5": 1,
                    "result6": 1,
                    "temp3": 1,
                    "temp5": 14,
                    "temp6": 2,
                    "temp_5": 5,
                    "temp_var3": 1,
                    "temp_var5": 1,
                    "temp_var_5": 1,
                    "temporary5": 1,
                    "u_var6": 1,
                    "u_var_e": 1
                },
                "uVar60": {
                    "temp59": 1
                },
                "uVar61": {
                    "temp60": 1
                },
                "uVar62": {
                    "temp61": 1
                },
                "uVar63": {
                    "temp62": 1
                },
                "uVar64": {
                    "temp63": 1
                },
                "uVar65": {
                    "temp64": 1
                },
                "uVar66": {
                    "temp65": 1
                },
                "uVar67": {
                    "temp66": 1
                },
                "uVar68": {
                    "temp67": 1
                },
                "uVar69": {
                    "temp68": 1
                },
                "uVar7": {
                    "result5": 1,
                    "result6": 1,
                    "result7": 1,
                    "temp4": 1,
                    "temp6": 14,
                    "temp7": 2,
                    "temp_6": 5,
                    "temp_var2": 1,
                    "temp_var6": 1,
                    "temp_var_6": 1,
                    "temporary6": 1,
                    "u_var7": 1,
                    "u_var_f": 1
                },
                "uVar70": {
                    "temp69": 1
                },
                "uVar71": {
                    "temp70": 1
                },
                "uVar72": {
                    "temp71": 1
                },
                "uVar73": {
                    "temp72": 1
                },
                "uVar74": {
                    "temp73": 1
                },
                "uVar75": {
                    "temp74": 1
                },
                "uVar76": {
                    "temp75": 1
                },
                "uVar77": {
                    "temp76": 1
                },
                "uVar78": {
                    "temp77": 1
                },
                "uVar79": {
                    "temp78": 1
                },
                "uVar8": {
                    "abs_input2": 7,
                    "abs_input_2": 2,
                    "abs_input_b": 1,
                    "abs_input_value2": 1,
                    "input2_masked": 1,
                    "input_2_positive": 1,
                    "lower_bits_mask": 1,
                    "mask": 1,
                    "masked_input2": 1,
                    "masked_number2": 1,
                    "masked_param2": 1,
                    "masked_param_2": 1,
                    "masked_positive_input": 1,
                    "positive_input2": 1,
                    "positive_param_2": 1,
                    "temp1": 1,
                    "temp7": 2,
                    "temp8": 1,
                    "temp_7": 1,
                    "temp_input": 1,
                    "temp_input2": 1,
                    "u_var_g": 1,
                    "unsigned_input2": 1
                },
                "uVar80": {
                    "temp79": 1
                },
                "uVar81": {
                    "temp80": 1
                },
                "uVar82": {
                    "temp81": 1
                },
                "uVar83": {
                    "temp82": 1
                },
                "uVar84": {
                    "temp83": 1
                },
                "uVar85": {
                    "temp84": 1
                },
                "uVar86": {
                    "temp85": 1
                },
                "uVar9": {
                    "calc_result": 1,
                    "final_result": 13,
                    "output": 1,
                    "output1": 1,
                    "output_1": 1,
                    "result": 5,
                    "result1": 2,
                    "result64": 1,
                    "result_value": 1,
                    "return_value": 1,
                    "temp2": 1,
                    "temp8": 1,
                    "temp_result1": 1,
                    "u_var_h": 1
                }
            },
            "called": [
                "FUN_08000168",
                "FUN_0800016c",
                "FUN_080004d0",
                "FUN_08006c0c",
                "FUN_08000724",
                "FUN_080009f0",
                "FUN_0800708c"
            ],
            "calling": [
                "FUN_08005854"
            ],
            "code": "\nundefined8 calculate_result_08005c70(uint input1,uint input2)\n\n{\n  int result;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  undefined4 temp5;\n  undefined4 temp6;\n  uint abs_input2;\n  undefined8 final_result;\n  undefined8 temp_result_1;\n  undefined8 temp_result2;\n  \n  final_result = CONCAT44(input2,input1);\n  abs_input2 = input2 & 0x7fffffff;\n  if (abs_input2 < 0x3ff00000) {\n    if (abs_input2 < 0x3fe00000) {\n      if (0x3e3fffff < abs_input2) {\n        temp_result_1 = FUN_080004d0(input1,input2,input1,input2);\n        temp6 = (undefined4)((ulonglong)temp_result_1 >> 0x20);\n        temp5 = (undefined4)temp_result_1;\n        temp_result_1 = FUN_080004d0(temp5,temp6,0xdfdf709,0x3f023de1);\n        temp_result_1 = FUN_0800016c((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),0x7501b288,0x3f49efe0);\n        temp_result_1 = FUN_080004d0((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),temp5,temp6);\n        temp_result_1 = FUN_08000168((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),0xb5688f3b,0x3fa48228);\n        temp_result_1 = FUN_080004d0((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),temp5,temp6);\n        temp_result_1 = FUN_0800016c((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),0xe884455,0x3fc9c155);\n        temp_result_1 = FUN_080004d0((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),temp5,temp6);\n        temp_result_1 = FUN_08000168((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),0x3eb6f7d,0x3fd4d612);\n        temp_result_1 = FUN_080004d0((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),temp5,temp6);\n        temp_result_1 = FUN_0800016c((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),0x55555555,0x3fc55555);\n        temp_result_1 = FUN_080004d0((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),temp5,temp6);\n        temp_result2 = FUN_080004d0(temp5,temp6,0xb12e9282,0x3fb3b8c5);\n        temp_result2 = FUN_08000168((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),0x1b8d0159,0x3fe6066c);\n        temp_result2 = FUN_080004d0((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),temp5,temp6);\n        temp_result2 = FUN_0800016c((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),0x9c598ac8,0x40002ae5);\n        temp_result2 = FUN_080004d0((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),temp5,temp6);\n        temp_result2 = FUN_08000168((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),0x1c8a2d4b,0x40033a27);\n        temp_result2 = FUN_080004d0((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),temp5,temp6);\n        temp_result2 = FUN_0800016c((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),0,0x3ff00000);\n        temp_result_1 = FUN_08000724((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),(int)temp_result2,\n                              (int)((ulonglong)temp_result2 >> 0x20));\n        temp_result_1 = FUN_080004d0((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),input1,input2);\n        goto LAB_08005cba;\n      }\n      temp_result_1 = FUN_0800016c(input1,input2,0x8800759c,0x7e37e43c);\n      result = FUN_080009f0((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),0,0x3ff00000);\n      if (result != 0) {\n        return final_result;\n      }\n    }\n    final_result = FUNC_0800708c(input1,input2);\n    final_result = FUN_08000168(0,0x3ff00000,(int)final_result,(int)((ulonglong)final_result >> 0x20));\n    final_result = FUN_080004d0((int)final_result,(int)((ulonglong)final_result >> 0x20),0,0x3fe00000);\n    temp1 = (undefined4)((ulonglong)final_result >> 0x20);\n    temp5 = (undefined4)final_result;\n    final_result = FUN_080004d0(temp5,temp1,0xdfdf709,0x3f023de1);\n    final_result = FUN_0800016c((int)final_result,(int)((ulonglong)final_result >> 0x20),0x7501b288,0x3f49efe0);\n    final_result = FUN_080004d0((int)final_result,(int)((ulonglong)final_result >> 0x20),temp5,temp1);\n    final_result = FUN_08000168((int)final_result,(int)((ulonglong)final_result >> 0x20),0xb5688f3b,0x3fa48228);\n    final_result = FUN_080004d0((int)final_result,(int)((ulonglong)final_result >> 0x20),temp5,temp1);\n    final_result = FUN_0800016c((int)final_result,(int)((ulonglong)final_result >> 0x20),0xe884455,0x3fc9c155);\n    final_result = FUN_080004d0((int)final_result,(int)((ulonglong)final_result >> 0x20),temp5,temp1);\n    final_result = FUN_08000168((int)final_result,(int)((ulonglong)final_result >> 0x20),0x3eb6f7d,0x3fd4d612);\n    final_result = FUN_080004d0((int)final_result,(int)((ulonglong)final_result >> 0x20),temp5,temp1);\n    final_result = FUN_0800016c((int)final_result,(int)((ulonglong)final_result >> 0x20),0x55555555,0x3fc55555);\n    final_result = FUN_080004d0((int)final_result,(int)((ulonglong)final_result >> 0x20),temp5,temp1);\n    temp2 = (undefined4)((ulonglong)final_result >> 0x20);\n    temp_result_1 = FUN_080004d0(temp5,temp1,0xb12e9282,0x3fb3b8c5);\n    temp_result_1 = FUN_08000168((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),0x1b8d0159,0x3fe6066c);\n    temp_result_1 = FUN_080004d0((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),temp5,temp1);\n    temp_result_1 = FUN_0800016c((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),0x9c598ac8,0x40002ae5);\n    temp_result_1 = FUN_080004d0((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),temp5,temp1);\n    temp_result_1 = FUN_08000168((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),0x1c8a2d4b,0x40033a27);\n    temp_result_1 = FUN_080004d0((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),temp5,temp1);\n    temp_result_1 = FUN_0800016c((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),0,0x3ff00000);\n    temp3 = (undefined4)((ulonglong)temp_result_1 >> 0x20);\n    temp_result2 = FUN_08006c0c(temp5,temp1);\n    temp4 = (undefined4)((ulonglong)temp_result2 >> 0x20);\n    temp6 = (undefined4)temp_result2;\n    if (abs_input2 < 0x3fef3333) {\n      final_result = FUN_08000724((int)final_result,temp2,(int)temp_result_1,temp3);\n      temp_result_1 = FUN_0800016c(temp6,temp4,temp6,temp4);\n      final_result = FUN_080004d0((int)final_result,(int)((ulonglong)final_result >> 0x20),(int)temp_result_1,\n                           (int)((ulonglong)temp_result_1 >> 0x20));\n      temp_result_1 = FUN_080004d0(0,temp4,0,temp4);\n      temp_result_1 = FUN_08000168(temp5,temp1,(int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20));\n      temp_result2 = FUN_0800016c(temp6,temp4,0,temp4);\n      temp_result_1 = FUN_08000724((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),(int)temp_result2,\n                            (int)((ulonglong)temp_result2 >> 0x20));\n      temp5 = (undefined4)((ulonglong)temp_result_1 >> 0x20);\n      temp_result_1 = FUN_0800016c((int)temp_result_1,temp5,(int)temp_result_1,temp5);\n      temp_result_1 = FUN_08000168(0x33145c07,0x3c91a626,(int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20));\n      final_result = FUN_08000168((int)final_result,(int)((ulonglong)final_result >> 0x20),(int)temp_result_1,\n                           (int)((ulonglong)temp_result_1 >> 0x20));\n      temp_result_1 = FUN_0800016c(0,temp4,0,temp4);\n      temp_result_1 = FUN_08000168(0x54442d18,0x3fe921fb,(int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20));\n      final_result = FUN_08000168((int)final_result,(int)((ulonglong)final_result >> 0x20),(int)temp_result_1,\n                           (int)((ulonglong)temp_result_1 >> 0x20));\n      temp5 = 0x3fe921fb;\n    }\n    else {\n      final_result = FUN_08000724((int)final_result,temp2,(int)temp_result_1,temp3);\n      final_result = FUN_080004d0((int)final_result,(int)((ulonglong)final_result >> 0x20),temp6,temp4);\n      final_result = FUN_0800016c((int)final_result,(int)((ulonglong)final_result >> 0x20),temp6,temp4);\n      temp5 = (undefined4)((ulonglong)final_result >> 0x20);\n      final_result = FUN_0800016c((int)final_result,temp5,(int)final_result,temp5);\n      final_result = FUN_08000168((int)final_result,(int)((ulonglong)final_result >> 0x20),0x33145c07,0x3c91a626);\n      temp5 = 0x3ff921fb;\n    }\n    final_result = FUN_08000168(0x54442d18,temp5,(int)final_result,(int)((ulonglong)final_result >> 0x20));\n    if ((int)input2 < 1) {\n      final_result = CONCAT44((int)((ulonglong)final_result >> 0x20) + -0x80000000,(int)final_result);\n    }\n  }\n  else {\n    if ((abs_input2 + 0xc0100000 | input1) != 0) {\n      final_result = FUN_08000168(input1,input2,input1,input2);\n      temp5 = (undefined4)((ulonglong)final_result >> 0x20);\n      final_result = FUN_08000724((int)final_result,temp5,(int)final_result,temp5);\n      return final_result;\n    }\n    final_result = FUN_080004d0(input1,input2,0x54442d18,0x3ff921fb);\n    temp_result_1 = FUN_080004d0(input1,input2,0x33145c07,0x3c91a626);\nLAB_08005cba:\n    final_result = FUN_0800016c((int)final_result,(int)((ulonglong)final_result >> 0x20),(int)temp_result_1,\n                         (int)((ulonglong)temp_result_1 >> 0x20));\n  }\n  return final_result;\n}\n\n",
            "current_name": "calculate_result_08005c70",
            "entrypoint": "0x08005c70",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005c70": "calculate_result_08005c70",
                "iVar1": "result",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "result",
                "uVar10": "temp_result_1",
                "uVar11": "temp_result2",
                "uVar2": "temp1",
                "uVar3": "temp2",
                "uVar4": "temp3",
                "uVar5": "temp4",
                "uVar6": "temp5",
                "uVar7": "temp6",
                "uVar8": "abs_input2",
                "uVar9": "final_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006070": {
            "additional_data": {
                "FUNC_0800708c": {
                    "function_to_call": 1,
                    "helper_func2": 1,
                    "perform_additional_operation": 1,
                    "perform_operation": 1,
                    "sub_function_5": 1
                },
                "FUN_08000168": {
                    "calculate_result": 1,
                    "multiply_helper": 1,
                    "perform_calculation": 1,
                    "sub_function_1": 1
                },
                "FUN_0800016c": {
                    "calculate_result1": 1,
                    "helper_func": 1,
                    "perform_operation": 1,
                    "perform_other_calculation": 1,
                    "sub_function_2": 1
                },
                "FUN_08000724": {
                    "calculate_difference": 1,
                    "calculate_result2": 1,
                    "compute_difference": 1,
                    "do_something": 1,
                    "sub_function_4": 1
                },
                "FUN_08006070": {
                    "calculate_floating_point_value": 1,
                    "calculate_result": 4,
                    "calculate_value": 3,
                    "evaluate_float_value": 1,
                    "extracted_code": 1,
                    "get_floating_point_number": 1,
                    "handle_floating_point_number": 1,
                    "process_params": 1,
                    "renormalize_value": 1
                },
                "FUN_08006d68": {
                    "execute_case_one": 1,
                    "get_result": 1,
                    "get_value": 1,
                    "handle_special_case": 1,
                    "sub_function_3": 1
                },
                "iVar4": {
                    "difference": 5,
                    "result4": 4,
                    "result_4": 5,
                    "result_int": 1,
                    "shifted_diff": 1,
                    "temp": 1,
                    "temp2": 2,
                    "temp4": 3,
                    "temp_4": 1,
                    "temp_var4": 5,
                    "var3": 2
                },
                "param_1": {
                    "exponent_bits": 1,
                    "exponent_bits1": 1,
                    "first_param": 1,
                    "input1": 12,
                    "input_1": 6,
                    "input_param1": 3,
                    "input_param_1": 2,
                    "input_value_1": 1,
                    "value1": 3
                },
                "param_2": {
                    "input2": 12,
                    "input_2": 6,
                    "input_param2": 3,
                    "input_param_2": 2,
                    "input_value_2": 1,
                    "mantissa_bits": 1,
                    "mantissa_bits1": 1,
                    "second_param": 1,
                    "value2": 3
                },
                "param_3": {
                    "exponent_bits2": 1,
                    "input3": 12,
                    "input_3": 6,
                    "input_param3": 3,
                    "input_param_3": 2,
                    "input_value_3": 1,
                    "sign_bit": 1,
                    "third_param": 1,
                    "value3": 3
                },
                "param_4": {
                    "fourth_param": 1,
                    "input4": 12,
                    "input_4": 6,
                    "input_param4": 3,
                    "input_param_4": 2,
                    "input_value_4": 1,
                    "mantissa_bits2": 1,
                    "other_bits": 1,
                    "value4": 3
                },
                "uVar1": {
                    "bitwise_or_result": 1,
                    "result1": 11,
                    "result_1": 5,
                    "result_low": 1,
                    "result_lower": 1,
                    "result_uint1": 1,
                    "temp1": 3,
                    "temp_1": 1,
                    "temp_var1": 5
                },
                "uVar2": {
                    "check1": 1,
                    "condition_val": 1,
                    "flag": 3,
                    "result2": 4,
                    "result_2": 5,
                    "result_uint2": 1,
                    "shift_amount": 1,
                    "shifted_bits": 1,
                    "shifted_result": 1,
                    "temp2": 3,
                    "temp_2": 1,
                    "temp_var2": 5,
                    "value1": 1,
                    "var1": 2
                },
                "uVar3": {
                    "filtered_input2": 1,
                    "masked_input_2": 1,
                    "result2": 1,
                    "result3": 4,
                    "result_3": 5,
                    "result_uint3": 1,
                    "shifted_and_or_result": 1,
                    "temp1": 2,
                    "temp3": 3,
                    "temp_3": 1,
                    "temp_var3": 5,
                    "u_value1": 1,
                    "value2": 1,
                    "var2": 2
                },
                "uVar5": {
                    "check2": 1,
                    "filtered_input4": 1,
                    "masked_input4": 1,
                    "masked_input_4": 1,
                    "modified_input_value_4": 1,
                    "modified_mantissa_bits2": 1,
                    "positive_bits": 1,
                    "result5": 4,
                    "result_5": 4,
                    "result_uint4": 1,
                    "temp3": 2,
                    "temp5": 3,
                    "temp_5": 1,
                    "temp_var5": 4,
                    "u_value2": 1,
                    "var4": 2
                },
                "uVar6": {
                    "final_result": 5,
                    "final_result1": 1,
                    "final_result_1": 1,
                    "final_result_low": 1,
                    "output": 1,
                    "output_1": 2,
                    "output_uint1": 1,
                    "result": 8,
                    "result1": 1,
                    "result2": 3,
                    "result6": 1,
                    "result_1": 1,
                    "result_var1": 2,
                    "return_value": 2
                },
                "uVar7": {
                    "aux_result": 1,
                    "final_result2": 1,
                    "final_result_2": 1,
                    "other_result": 1,
                    "output_2": 2,
                    "output_uint2": 1,
                    "result2": 3,
                    "result3": 3,
                    "result7": 1,
                    "result_2": 1,
                    "result_var2": 2,
                    "sub_function_result": 1,
                    "sub_result": 1,
                    "temp": 1,
                    "temp6": 1,
                    "temp_result": 5,
                    "temp_var5": 1,
                    "temp_var7": 1,
                    "u_var7": 1,
                    "var5": 1
                }
            },
            "called": [
                "FUN_08000168",
                "FUN_0800016c",
                "FUN_08006d68",
                "FUN_08000724",
                "FUN_0800708c"
            ],
            "calling": [
                "thunk_FUN_08006070"
            ],
            "code": "\nundefined8 calculate_floating_point_value_08006070(uint input1,uint input2,uint input3,uint input4)\n\n{\n  undefined4 result1;\n  uint temp_var2;\n  uint result_3;\n  int result_4;\n  uint result5;\n  undefined8 result;\n  undefined8 temp_result;\n  \n  result5 = input4 & 0x7fffffff;\n  if ((0x7ff00000 < (result5 | (-input3 | input3) >> 0x1f)) ||\n     (result_3 = input2 & 0x7fffffff, 0x7ff00000 < (result_3 | (-input1 | input1) >> 0x1f))) {\n    result = FUN_0800016c(input1,input2,input3,input4,input4);\n    return result;\n  }\n  if ((input4 + 0xc0100000 | input3) == 0) {\n    result = FUN_08006d68();\n    return result;\n  }\n  temp_var2 = (int)input4 >> 0x1e & 2U | input2 >> 0x1f;\n  if ((input1 | result_3) == 0) {\n    if (temp_var2 == 2) {\n      return 0x400921fb54442d18;\n    }\n    if (temp_var2 != 3) {\n      return CONCAT44(input2,input1);\n    }\nLAB_0800613e:\n    result = 0xc00921fb54442d18;\n  }\n  else {\n    if ((input3 | result5) != 0) {\n      if (result5 == 0x7ff00000) {\n        if (result_3 == 0x7ff00000) {\n          if (temp_var2 == 2) {\n            return 0x4002d97c7f3321d2;\n          }\n          if (temp_var2 == 3) {\n            return 0xc002d97c7f3321d2;\n          }\n          if (temp_var2 != 1) {\n            return 0x3fe921fb54442d18;\n          }\n          return 0xbfe921fb54442d18;\n        }\n        if (temp_var2 == 2) {\n          return 0x400921fb54442d18;\n        }\n        if (temp_var2 != 3) {\n          if (temp_var2 != 1) {\n            return 0;\n          }\n          return 0x8000000000000000;\n        }\n        goto LAB_0800613e;\n      }\n      if (result_3 != 0x7ff00000) {\n        result_4 = (int)(result_3 - result5) >> 0x14;\n        if (result_4 < 0x3d) {\n          if (((int)input4 < 0) && (result_4 + 0x3c < 0 != SCARRY4(result_4,0x3c))) {\n            result = 0;\n          }\n          else {\n            FUN_08000724(input1,input2);\n            FUNC_0800708c();\n            result = FUN_08006d68();\n          }\n        }\n        else {\n          result = 0x3ff921fb54442d18;\n        }\n        result_4 = (int)((ulonglong)result >> 0x20);\n        result1 = (undefined4)result;\n        if (temp_var2 == 1) {\n          return CONCAT44(result_4 + -0x80000000,result1);\n        }\n        if (temp_var2 == 2) {\n          temp_result = FUN_08000168(result1,result_4,0x33145c07,0x3ca1a626);\n          result = 0x400921fb54442d18;\n        }\n        else {\n          if (temp_var2 == 0) {\n            return result;\n          }\n          result = FUN_08000168(result1,result_4,0x33145c07,0x3ca1a626);\n          temp_result = 0x400921fb54442d18;\n        }\n        result = FUN_08000168((int)result,(int)((ulonglong)result >> 0x20),(int)temp_result,\n                             (int)((ulonglong)temp_result >> 0x20));\n        return result;\n      }\n    }\n    if ((int)input2 < 0) {\n      result = 0xbff921fb54442d18;\n    }\n    else {\n      result = 0x3ff921fb54442d18;\n    }\n  }\n  return result;\n}\n\n",
            "current_name": "calculate_floating_point_value_08006070",
            "entrypoint": "0x08006070",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006070": "calculate_floating_point_value_08006070",
                "iVar4": "result_4",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result1",
                "uVar2": "temp_var2",
                "uVar3": "result_3",
                "uVar5": "result5",
                "uVar6": "result",
                "uVar7": "temp_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006228": {
            "additional_data": {
                "FUN_08000168": {
                    "add_uint64": 1
                },
                "FUN_0800016c": {
                    "multiply_uint64": 1
                },
                "FUN_08000404": {
                    "find_power_of_two": 1
                },
                "FUN_080004d0": {
                    "to_float": 1
                },
                "FUN_08000724": {
                    "to_float_with_sign": 1
                },
                "FUN_080009c8": {
                    "is_less_than": 1
                },
                "FUN_08006228": {
                    "calculate_exponent": 1,
                    "calculate_float": 1,
                    "calculate_floating_point": 12,
                    "calculate_floating_point_value": 1,
                    "calculate_result": 1,
                    "calculate_sign": 1,
                    "compute_floating_point": 1,
                    "compute_floating_point_operation": 1,
                    "convert_floating_point": 2,
                    "float_to_uint": 1,
                    "floating_point_division": 1,
                    "perform_floating_point_calculation": 1
                },
                "FUN_08006c0c": {
                    "normalize": 1
                },
                "FUN_080070a4": {
                    "na_n_value": 1
                },
                "exponentBits": {
                    "new_exponent_bits": 1
                },
                "extraout_r1": {
                    "carry": 1,
                    "extra1": 1,
                    "extra_output": 1,
                    "extra_result": 1,
                    "extra_result1": 3,
                    "extra_var1": 1,
                    "extraout_r1": 2,
                    "index4": 1,
                    "result3": 2,
                    "temp": 1,
                    "temp2": 3,
                    "temp3": 1,
                    "temp_result": 1,
                    "temp_var3": 1
                },
                "extraout_r1_00": {
                    "extra": 1,
                    "extra2": 1,
                    "extra_output1": 1,
                    "extra_result1": 1,
                    "extra_result2": 3,
                    "extra_var2": 1,
                    "extraout_r1_00": 2,
                    "part4": 1,
                    "result6": 1,
                    "shift_count": 1,
                    "temp": 1,
                    "temp3": 1,
                    "temp5": 2,
                    "temp6": 1,
                    "temp_var6": 1
                },
                "extraout_r1_01": {
                    "extra": 1,
                    "extra3": 1,
                    "extra_output2": 1,
                    "extra_result2": 1,
                    "extra_result3": 3,
                    "extra_var3": 1,
                    "extraout_r1_01": 2,
                    "new_exponent_bits": 1,
                    "part5": 1,
                    "result7": 1,
                    "temp": 1,
                    "temp4": 1,
                    "temp6": 2,
                    "temp7": 1,
                    "temp_var7": 1
                },
                "extraout_r1_02": {
                    "extra": 1,
                    "extra4": 1,
                    "extra_output3": 1,
                    "extra_result3": 1,
                    "extra_result4": 3,
                    "extra_var4": 1,
                    "extraout_r1_02": 3,
                    "part6": 1,
                    "result8": 1,
                    "temp": 1,
                    "temp5": 1,
                    "temp7": 2,
                    "temp8": 1,
                    "temp_var8": 1
                },
                "extraout_r1_03": {
                    "extra": 1,
                    "extra5": 1,
                    "extra_output4": 1,
                    "extra_result4": 1,
                    "extra_result5": 3,
                    "extra_var5": 1,
                    "extraout_r1_03": 3,
                    "part7": 1,
                    "result9": 1,
                    "temp": 1,
                    "temp6": 1,
                    "temp8": 2,
                    "temp9": 1,
                    "temp_var9": 1
                },
                "iVar10": {
                    "condition2": 1,
                    "counter3": 2,
                    "exponent_difference": 1,
                    "i_var10": 1,
                    "index3": 1,
                    "int_var3": 1,
                    "loop_var4": 1,
                    "multiple_of8": 1,
                    "rounding": 1,
                    "shift": 2,
                    "shift_count": 1,
                    "temp14": 2,
                    "temp15": 1,
                    "temp5": 1,
                    "temp_4": 1,
                    "temp_exponent1": 1,
                    "temp_int3": 1,
                    "temp_var15": 1,
                    "value3": 1,
                    "variable3": 2
                },
                "iVar5": {
                    "bit_shift": 1,
                    "bits_shifted": 1,
                    "counter": 1,
                    "counter1": 1,
                    "exponent_difference": 1,
                    "i_var5": 1,
                    "index2": 1,
                    "int_var1": 1,
                    "iteration_variable_1": 1,
                    "loop_var1": 1,
                    "shift": 2,
                    "shift_amount": 1,
                    "shift_count": 1,
                    "shifted_exponent": 1,
                    "temp10": 1,
                    "temp9": 2,
                    "temp_int1": 1,
                    "temp_var1": 1,
                    "temp_var10": 1,
                    "value1": 1,
                    "variable1": 2
                },
                "iVar6": {
                    "counter2": 2,
                    "i_var6": 1,
                    "index": 4,
                    "int_var2": 1,
                    "iteration": 1,
                    "iteration_variable_2": 1,
                    "loop_var": 1,
                    "loop_var2": 1,
                    "shift_count": 1,
                    "shifted_mantissa": 1,
                    "temp10": 2,
                    "temp11": 1,
                    "temp_int2": 1,
                    "temp_value": 1,
                    "temp_var11": 1,
                    "temp_var2": 1,
                    "value2": 1,
                    "variable2": 2
                },
                "iVar9": {
                    "condition1": 1
                },
                "lVar18": {
                    "combined": 1,
                    "converted_exponent": 1,
                    "converted_value": 1,
                    "l_var18": 3,
                    "long_long_value": 1,
                    "long_var": 1,
                    "product": 1,
                    "result": 1,
                    "result14": 1,
                    "result18": 1,
                    "result2": 1,
                    "temp": 1,
                    "temp11": 1,
                    "temp16": 1,
                    "temp22": 2,
                    "temp5": 1,
                    "temp_12": 1,
                    "temp_long": 1,
                    "temp_long1": 1,
                    "temp_result5": 1,
                    "temp_var10": 1,
                    "temp_var13": 1,
                    "tmp18": 1,
                    "variable4": 1
                },
                "local_54": {
                    "add_value": 1,
                    "bit_difference": 1,
                    "case_selector": 1,
                    "check_value": 1,
                    "index": 1,
                    "local_counter": 1,
                    "local_var4": 3,
                    "local_variable4": 2,
                    "lower_exponent_bits": 1,
                    "result13": 1,
                    "rounding_mode": 1,
                    "shift": 3,
                    "shift_amount": 1,
                    "shift_count": 1,
                    "special_case_flag": 1,
                    "temp13": 1,
                    "temp26": 1,
                    "temp27": 1,
                    "temp3": 1,
                    "temp_17": 1,
                    "temp_int4": 1,
                    "temp_value1": 1,
                    "temp_var22": 1,
                    "var4": 1
                },
                "local_64": {
                    "extra_result_param2": 1,
                    "local_64": 3,
                    "local_temp2": 1,
                    "local_var3": 3,
                    "local_variable1": 1,
                    "local_variable3": 2,
                    "low_part": 1,
                    "new_bits": 1,
                    "output2": 1,
                    "part2": 1,
                    "result12": 1,
                    "temp12": 1,
                    "temp17": 1,
                    "temp2": 1,
                    "temp25": 1,
                    "temp26": 1,
                    "temp9": 1,
                    "temp_16": 1,
                    "temp_low": 1,
                    "temp_result_low": 1,
                    "temp_var17": 1,
                    "temp_var2": 1,
                    "temp_var21": 1,
                    "var3": 1
                },
                "local_68": {
                    "extra_result_param1": 1,
                    "flag2": 1,
                    "high_part": 1,
                    "local_68": 3,
                    "local_temp1": 1,
                    "local_var2": 3,
                    "local_variable2": 3,
                    "new_bits": 1,
                    "output1": 1,
                    "part1": 1,
                    "result11": 1,
                    "temp1": 1,
                    "temp11": 1,
                    "temp16": 1,
                    "temp25": 1,
                    "temp8": 1,
                    "temp_15": 1,
                    "temp_high": 1,
                    "temp_result_high": 1,
                    "temp_var1": 1,
                    "temp_var16": 1,
                    "temp_var20": 1,
                    "var2": 1
                },
                "local_70": {
                    "case_indication": 1,
                    "classification": 1,
                    "condition1": 1,
                    "condition3": 1,
                    "corner_case": 1,
                    "error_code": 1,
                    "exponent_result": 1,
                    "flag1": 1,
                    "floating_point_result": 1,
                    "local_var1": 3,
                    "local_variable1": 2,
                    "na_n": 1,
                    "output": 1,
                    "result": 1,
                    "result10": 1,
                    "result_exponent": 1,
                    "return_value": 1,
                    "round": 1,
                    "special_bits": 1,
                    "special_case": 3,
                    "special_value": 2,
                    "var1": 1,
                    "zero_flag": 1
                },
                "param_1": {
                    "dividend": 1,
                    "exponent": 1,
                    "exponent_bits": 1,
                    "first_input": 1,
                    "input1": 6,
                    "input_1": 1,
                    "input_param1": 1,
                    "mantissa": 2,
                    "n": 1,
                    "sign": 7,
                    "sign_and_exponent": 1,
                    "sign_bit": 6,
                    "value1": 2
                },
                "param_2": {
                    "combined_bits": 1,
                    "divisor": 1,
                    "exp": 1,
                    "exponent": 13,
                    "exponent_bits": 2,
                    "fractional_part": 1,
                    "input2": 6,
                    "input_2": 1,
                    "input_param2": 1,
                    "second_input": 1,
                    "value": 1,
                    "value2": 2
                },
                "param_3": {
                    "bitwise_mantissa": 1,
                    "exp_bits": 1,
                    "exponent": 1,
                    "flags": 1,
                    "fraction_part": 1,
                    "input3": 6,
                    "input_3": 1,
                    "input_param3": 1,
                    "mantissa": 2,
                    "mantissa1": 2,
                    "mantissa_bits": 2,
                    "mantissa_high": 4,
                    "mantissa_part1": 1,
                    "mantissa_upper": 1,
                    "param_3": 1,
                    "significand": 1,
                    "significand_bits": 1,
                    "significand_high": 1,
                    "third_input": 1,
                    "value3": 1
                },
                "param_4": {
                    "bitwise_exponent": 1,
                    "control_bits": 2,
                    "flags": 1,
                    "fourth_input": 1,
                    "input4": 6,
                    "input_4": 1,
                    "input_param4": 1,
                    "mantissa2": 2,
                    "mantissa_low": 4,
                    "mantissa_lower": 1,
                    "mantissa_part2": 1,
                    "param_4": 1,
                    "rounding_mode": 2,
                    "sign": 4,
                    "significand_low": 1,
                    "special_value_or_na_n": 1,
                    "value4": 1
                },
                "uVar1": {
                    "exponent": 1,
                    "exponent_bits": 1,
                    "integer_part": 1,
                    "mantissa_part1": 1,
                    "normalized_mantissa_high": 1,
                    "part1": 1,
                    "result": 3,
                    "result1": 7,
                    "result_1": 1,
                    "result_high": 1,
                    "result_var1": 1,
                    "sign_bit": 2,
                    "sign_bit1": 1,
                    "sign_bit_mask": 1,
                    "sign_extend": 1,
                    "sign_mask": 1,
                    "temp1": 2,
                    "temp_var1": 1,
                    "tmp": 1,
                    "upper_part": 1
                },
                "uVar10": {
                    "is_normal": 1,
                    "temp2": 1,
                    "tmp10": 1,
                    "u_var10": 1
                },
                "uVar11": {
                    "converted_value": 1,
                    "result": 6,
                    "result7": 3,
                    "result_copy": 1,
                    "shift_count": 1,
                    "temp": 1,
                    "temp1": 2,
                    "temp15": 2,
                    "temp4": 1,
                    "temp6": 1,
                    "temp9": 1,
                    "temp_5": 1,
                    "temp_exponent": 1,
                    "temp_exponent2": 1,
                    "temp_var3": 1,
                    "temp_var5": 1,
                    "temp_var6": 1,
                    "tmp11": 1,
                    "u_var11": 2
                },
                "uVar12": {
                    "float_bits": 1,
                    "part10": 1,
                    "result12": 1,
                    "result8": 3,
                    "result_high": 2,
                    "result_part1": 1,
                    "result_var6": 1,
                    "temp1": 2,
                    "temp10": 1,
                    "temp16": 2,
                    "temp2": 2,
                    "temp5": 1,
                    "temp7": 1,
                    "temp8": 1,
                    "temp_6": 1,
                    "temp_exponent3": 1,
                    "temp_mantissa": 1,
                    "temp_var4": 1,
                    "temp_var7": 1,
                    "tmp12": 1,
                    "u_var12": 2,
                    "upper_part2": 1,
                    "var1": 1
                },
                "uVar13": {
                    "extraout_r1": 1,
                    "part11": 1,
                    "result13": 1,
                    "result9": 3,
                    "result_low": 2,
                    "result_part2": 1,
                    "result_var7": 1,
                    "rounded_mantissa_high": 1,
                    "temp11": 1,
                    "temp17": 2,
                    "temp2": 2,
                    "temp3": 2,
                    "temp6": 1,
                    "temp8": 1,
                    "temp9": 1,
                    "temp_7": 1,
                    "temp_exponent4": 1,
                    "temp_partial": 1,
                    "temp_var5": 1,
                    "temp_var8": 1,
                    "tmp13": 1,
                    "u_var13": 2,
                    "var2": 1
                },
                "uVar14": {
                    "float_bits": 1,
                    "part12": 1,
                    "result": 1,
                    "result10": 3,
                    "result14": 1,
                    "result_high": 1,
                    "result_var8": 1,
                    "rounded_mantissa_low": 1,
                    "temp1": 1,
                    "temp10": 1,
                    "temp12": 1,
                    "temp18": 2,
                    "temp3": 1,
                    "temp4": 2,
                    "temp7": 1,
                    "temp9": 1,
                    "temp_8": 1,
                    "temp_high": 1,
                    "temp_partial2": 1,
                    "temp_result": 1,
                    "temp_result1": 1,
                    "temp_var9": 1,
                    "tmp14": 1,
                    "u_var14": 1,
                    "value": 1
                },
                "uVar15": {
                    "converted_value2": 1,
                    "float_bits": 1,
                    "part13": 1,
                    "result": 1,
                    "result11": 3,
                    "result15": 1,
                    "result_high": 1,
                    "result_low": 1,
                    "result_var9": 1,
                    "temp10": 1,
                    "temp11": 1,
                    "temp13": 1,
                    "temp19": 2,
                    "temp2": 1,
                    "temp4": 1,
                    "temp5": 2,
                    "temp8": 1,
                    "temp_9": 1,
                    "temp_low": 1,
                    "temp_result1": 1,
                    "temp_result2": 1,
                    "temp_result_high": 1,
                    "temp_var10": 1,
                    "tmp15": 1,
                    "u_var15": 1
                },
                "uVar16": {
                    "float_bits": 1,
                    "part14": 1,
                    "result12": 3,
                    "result16": 1,
                    "result_low": 1,
                    "temp": 1,
                    "temp11": 1,
                    "temp12": 1,
                    "temp14": 1,
                    "temp20": 2,
                    "temp3": 1,
                    "temp5": 1,
                    "temp6": 2,
                    "temp9": 1,
                    "temp_10": 1,
                    "temp_res": 1,
                    "temp_result2": 1,
                    "temp_result3": 1,
                    "temp_result_low": 1,
                    "temp_value": 1,
                    "temp_var11": 1,
                    "temp_var6": 1,
                    "tmp16": 1,
                    "u_var16": 2
                },
                "uVar17": {
                    "float_bits": 1,
                    "part15": 1,
                    "result13": 3,
                    "result17": 1,
                    "result_var10": 1,
                    "temp": 1,
                    "temp10": 1,
                    "temp12": 1,
                    "temp13": 1,
                    "temp15": 1,
                    "temp21": 2,
                    "temp4": 1,
                    "temp6": 1,
                    "temp7": 2,
                    "temp_11": 1,
                    "temp_res_high": 1,
                    "temp_result": 1,
                    "temp_result3": 1,
                    "temp_result4": 1,
                    "temp_value2": 1,
                    "temp_var12": 1,
                    "tmp17": 1,
                    "u_var17": 2
                },
                "uVar18": {
                    "temp8": 1
                },
                "uVar19": {
                    "converted_value": 1,
                    "converted_value_final": 1,
                    "exponent_mask": 1,
                    "mask": 1,
                    "result15": 1,
                    "result19": 1,
                    "result_high": 1,
                    "temp": 1,
                    "temp12": 1,
                    "temp14": 1,
                    "temp17": 1,
                    "temp23": 2,
                    "temp4": 1,
                    "temp6": 1,
                    "temp9": 1,
                    "temp_13": 1,
                    "temp_result6": 1,
                    "temp_var11": 1,
                    "temp_var14": 1,
                    "tmp19": 1,
                    "u_var19": 3,
                    "ulong_var": 1,
                    "unsigned_combined": 1,
                    "unsigned_long_long_value": 1,
                    "variable5": 1
                },
                "uVar2": {
                    "exponent1": 1,
                    "exponent_bits": 2,
                    "exponent_mask": 3,
                    "mantissa_part2": 1,
                    "normalized_mantissa_low": 1,
                    "positive_exponent": 1,
                    "result": 1,
                    "result2": 7,
                    "result_2": 1,
                    "result_low": 1,
                    "rounded_exponent_bits": 1,
                    "temp": 1,
                    "temp1": 3,
                    "temp2": 2,
                    "temp_var2": 1,
                    "temp_var3": 1,
                    "tmp2": 1,
                    "u_var2": 1,
                    "value_bits": 1
                },
                "uVar20": {
                    "additional_value": 1,
                    "converted_value": 1,
                    "part16": 1,
                    "result14": 2,
                    "result16": 1,
                    "result20": 1,
                    "temp": 1,
                    "temp10": 1,
                    "temp13": 2,
                    "temp15": 1,
                    "temp18": 1,
                    "temp24": 2,
                    "temp7": 2,
                    "temp_14": 1,
                    "temp_result": 1,
                    "temp_result4": 1,
                    "temp_result7": 1,
                    "temp_shifted_mantissa": 1,
                    "temp_var15": 1,
                    "temp_var9": 1,
                    "tmp20": 1,
                    "u_var20": 3
                },
                "uVar3": {
                    "exponent_mask_complement": 1,
                    "exponent_part1": 1,
                    "extraout_r1": 2,
                    "mantissa_bits": 1,
                    "mantissa_mask": 1,
                    "na_n": 1,
                    "part2": 1,
                    "result": 1,
                    "result3": 5,
                    "result4": 1,
                    "result_3": 1,
                    "result_high": 1,
                    "result_var2": 1,
                    "sign_bit2": 1,
                    "temp1": 3,
                    "temp3": 3,
                    "temp4": 1,
                    "temp_var1": 1,
                    "temp_var4": 1,
                    "tmp3": 1,
                    "u_var3": 1,
                    "zero": 1
                },
                "uVar4": {
                    "exponent2": 1,
                    "exponent_bits": 3,
                    "exponent_part2": 1,
                    "extraout_r1": 1,
                    "inf": 1,
                    "mantissa_partial": 1,
                    "part3": 1,
                    "res": 1,
                    "result4": 5,
                    "result5": 1,
                    "result_4": 1,
                    "result_low": 1,
                    "result_var3": 1,
                    "temp2": 3,
                    "temp4": 3,
                    "temp5": 1,
                    "temp_var2": 1,
                    "temp_var5": 1,
                    "tmp4": 1,
                    "u_var4": 2
                },
                "uVar5": {
                    "exponent_minus_bias": 1,
                    "extraout_r1_00": 1,
                    "mantissa_partial2": 1,
                    "significand_extraction_mask": 1,
                    "tmp5": 1
                },
                "uVar6": {
                    "combined_mantissa": 1,
                    "extraout_r1_01": 1,
                    "shift_amount": 1,
                    "significand_bits": 1,
                    "tmp6": 1
                },
                "uVar7": {
                    "combined_exponent": 1,
                    "constant": 1,
                    "extraout_r1_02": 1,
                    "float_bits": 1,
                    "high": 1,
                    "loop_var3": 1,
                    "part8": 1,
                    "result5": 3,
                    "result7": 1,
                    "result_var4": 1,
                    "rounded_bits": 1,
                    "temp": 1,
                    "temp1": 1,
                    "temp11": 2,
                    "temp12": 1,
                    "temp3": 1,
                    "temp5": 1,
                    "temp7": 1,
                    "temp_1": 1,
                    "temp_result": 1,
                    "temp_result_high": 1,
                    "temp_var12": 1,
                    "temp_var3": 1,
                    "tmp7": 1,
                    "u_var7": 3
                },
                "uVar8": {
                    "abs_input2": 1,
                    "absolute_exponent": 2,
                    "absolute_input2": 1,
                    "adjusted_second_input": 1,
                    "divisor_copy": 1,
                    "extraout_r1_03": 1,
                    "mantissa_high_bits": 1,
                    "normalized_exponent": 1,
                    "positive_mantissa_bits": 1,
                    "temp": 1,
                    "temp12": 2,
                    "temp13": 1,
                    "temp2": 1,
                    "temp3": 1,
                    "temp6": 1,
                    "temp_2": 1,
                    "temp_exponent": 1,
                    "temp_mantissa1": 1,
                    "temp_result_low": 1,
                    "temp_var1": 1,
                    "temp_var13": 1,
                    "temp_var4": 2,
                    "tmp8": 1,
                    "u_var8": 2,
                    "value2_modified": 1,
                    "value_bits": 1
                },
                "uVar9": {
                    "extraout_r1": 1,
                    "mantissa_low_bits": 1,
                    "part9": 1,
                    "result6": 3,
                    "result9": 1,
                    "result_var5": 1,
                    "temp": 3,
                    "temp13": 2,
                    "temp14": 1,
                    "temp3": 1,
                    "temp4": 1,
                    "temp7": 1,
                    "temp8": 1,
                    "temp_3": 1,
                    "temp_mantissa2": 1,
                    "temp_result": 1,
                    "temp_var14": 1,
                    "temp_var2": 1,
                    "temp_var5": 1,
                    "tmp9": 1,
                    "u_var9": 3,
                    "value": 1
                },
                "valueBits": {
                    "new_value_bits": 1
                }
            },
            "called": [
                "FUN_0800016c",
                "FUN_08000168",
                "FUN_08000404",
                "FUN_080009c8",
                "FUN_080070a4",
                "FUN_080004d0",
                "FUN_08006c0c",
                "FUN_08000724",
                "FUN_080009f0",
                "FUN_080071c0",
                "FUN_0800708c"
            ],
            "calling": [
                "FUN_08005900"
            ],
            "code": "\nuint calculate_floating_point_value_08006228(uint sign,uint exponent,uint input3,uint input4)\n\n{\n  undefined4 result1;\n  uint result2;\n  uint extra_result1;\n  undefined4 result3;\n  undefined4 result4;\n  undefined4 extra_result2;\n  undefined4 extra_result3;\n  uint extra_result4;\n  undefined4 extra_result1_03;\n  int shift;\n  int index;\n  undefined4 result5;\n  uint temp_var4;\n  undefined4 u_var9;\n  int shift;\n  uint result;\n  undefined4 result8;\n  undefined4 result9;\n  undefined8 result10;\n  undefined8 result11;\n  undefined8 result12;\n  undefined8 result13;\n  longlong l_var18;\n  ulonglong u_var19;\n  undefined8 u_var20;\n  uint local_var1;\n  undefined4 local_variable2;\n  undefined4 local_var3;\n  int shift;\n  \n  result11 = CONCAT44(exponent,sign);\n  result = input4 & 0x7fffffff;\n  if ((result | input3) == 0) {\n    return 0;\n  }\n  temp_var4 = exponent & 0x7fffffff;\n  if (temp_var4 < 0x7ff00001) {\n    if (temp_var4 == 0x7ff00000) {\n      if (sign == 0) {\n        if (0x7ff00000 < result) goto LAB_08006278;\nLAB_08006262:\n        if ((result != 0x7ff00000) || (input3 == 0)) {\n          if (-1 < (int)exponent) goto LAB_0800632a;\n          if (result < 0x43400000) {\n            if (result < 0x3ff00000) {\nLAB_0800632a:\n              local_var1 = 0;\n              goto LAB_080062ba;\n            }\n            shift = ((int)result >> 0x14) + -0x3ff;\n            if (0x14 < shift) {\n              result2 = input3 >> (0x34U - shift & 0xff);\n              if (input3 == result2 << (0x34U - shift & 0xff)) {\n                local_var1 = 2 - (result2 & 1);\n                goto LAB_080062ba;\n              }\n              goto LAB_0800632a;\n            }\n            if (input3 == 0) {\n              result2 = (int)result >> (0x14U - shift & 0xff);\n              if (result == result2 << (0x14U - shift & 0xff)) {\n                local_var1 = 2 - (result2 & 1);\n              }\n              else {\n                local_var1 = 0;\n              }\n              goto LAB_0800630c;\n            }\n            local_var1 = 0;\n          }\n          else {\n            local_var1 = 2;\nLAB_080062ba:\n            if (input3 == 0) {\n              if (result == 0x7ff00000) {\n                if ((temp_var4 + 0xc0100000 | sign) == 0) {\n                  return 0;\n                }\n                if (0x3fefffff < temp_var4) {\n                  if ((int)input4 < 0) {\n                    return 0;\n                  }\n                  return 0;\n                }\n                if (-1 < (int)input4) {\n                  return 0;\n                }\n                return 0;\n              }\nLAB_0800630c:\n              if (result == 0x3ff00000) {\n                if (-1 < (int)input4) {\n                  return sign;\n                }\n                result10 = 0x3ff0000000000000;\n                goto LAB_08006320;\n              }\n              if (input4 == 0x40000000) goto LAB_0800634a;\n              if ((input4 == 0x3fe00000) && (-1 < (int)exponent)) {\n                result = FUN_08006c0c(sign,exponent);\n                return result;\n              }\n            }\n          }\n          result10 = FUNC_0800708c(sign,exponent);\n          result8 = (undefined4)((ulonglong)result10 >> 0x20);\n          result1 = (undefined4)result10;\n          u_var19 = CONCAT44(exponent,result1) & 0x7fffffffffffffff;\n          if ((sign == 0) && ((temp_var4 == 0 || ((exponent & 0x3fffffff) == 0x3ff00000)))) {\n            if ((int)input4 < 0) {\n              result10 = FUN_08000724(0,0x3ff00000,result1,result8);\n            }\n            if (-1 < (int)exponent) {\n              return (uint)result10;\n            }\n            if ((local_var1 | temp_var4 + 0xc0100000) != 0) {\n              return (uint)result10;\n            }\n          }\n          else {\n            result2 = 0xffffffff - ((int)exponent >> 0x1f);\n            result10 = result11;\n            if ((local_var1 | result2) != 0) {\n              if (result < 0x41e00001) {\n                shift = 0;\n                if (temp_var4 < 0x100000) {\n                  u_var19 = FUN_080004d0();\n                  shift = -0x35;\n                }\n                result = (uint)(u_var19 >> 0x20);\n                result1 = (undefined4)u_var19;\n                shift = ((int)result >> 0x14) + -0x3ff + shift;\n                result = result & 0xfffff;\n                temp_var4 = result | 0x3ff00000;\n                if (result < 0x3988f) {\nLAB_08006628:\n                  shift = 0;\n                }\n                else {\n                  if (0xbb679 < result) {\n                    temp_var4 = temp_var4 - 0x100000;\n                    shift = shift + 1;\n                    goto LAB_08006628;\n                  }\n                  shift = 1;\n                }\n                index = shift * 8;\n                result5 = (&DAT_080073c0)[shift * 2];\n                u_var9 = (&DAT_080073c4)[shift * 2];\n                result11 = FUN_08000168(result1,temp_var4,result5,u_var9);\n                result9 = (undefined4)((ulonglong)result11 >> 0x20);\n                result10 = FUN_0800016c(result1,temp_var4,result5,u_var9);\n                result10 = FUN_08000724(0,0x3ff00000,(int)result10,(int)((ulonglong)result10 >> 0x20));\n                result3 = (undefined4)((ulonglong)result10 >> 0x20);\n                result12 = FUN_080004d0((int)result11,result9,(int)result10,result3);\n                result4 = (undefined4)((ulonglong)result12 >> 0x20);\n                result8 = (undefined4)result12;\n                result12 = FUN_080004d0(0,result4);\n                result11 = FUN_08000168((int)result11,result9,(int)result12,\n                                      (int)((ulonglong)result12 >> 0x20));\n                result12 = FUN_08000168(0,((int)temp_var4 >> 1 | 0x20000000U) + 0x80000 + shift * 0x40000,\n                                      result5,u_var9);\n                result12 = FUN_08000168(result1,temp_var4,(int)result12,(int)((ulonglong)result12 >> 0x20));\n                result12 = FUN_080004d0((int)result12,(int)((ulonglong)result12 >> 0x20),0,result4);\n                result11 = FUN_08000168((int)result11,(int)((ulonglong)result11 >> 0x20),(int)result12,\n                                      (int)((ulonglong)result12 >> 0x20));\n                result11 = FUN_080004d0((int)result11,(int)((ulonglong)result11 >> 0x20),(int)result10,result3\n                                     );\n                result9 = (undefined4)((ulonglong)result11 >> 0x20);\n                result10 = FUN_080004d0(result8,result4);\n                result3 = (undefined4)((ulonglong)result10 >> 0x20);\n                result1 = (undefined4)result10;\n                result10 = FUN_080004d0(result1,result3,0x4a454eef,0x3fca7e28);\n                result10 = FUN_0800016c((int)result10,(int)((ulonglong)result10 >> 0x20),0x93c9db65,\n                                      0x3fcd864a);\n                result10 = FUN_080004d0((int)result10,(int)((ulonglong)result10 >> 0x20),result1,result3);\n                result10 = FUN_0800016c((int)result10,(int)((ulonglong)result10 >> 0x20),0xa91d4101,\n                                      0x3fd17460);\n                result10 = FUN_080004d0((int)result10,(int)((ulonglong)result10 >> 0x20),result1,result3);\n                result10 = FUN_0800016c((int)result10,(int)((ulonglong)result10 >> 0x20),0x518f264d,\n                                      0x3fd55555);\n                result10 = FUN_080004d0((int)result10,(int)((ulonglong)result10 >> 0x20),result1,result3);\n                result10 = FUN_0800016c((int)result10,(int)((ulonglong)result10 >> 0x20),0xdb6fabff,\n                                      0x3fdb6db6);\n                result10 = FUN_080004d0((int)result10,(int)((ulonglong)result10 >> 0x20),result1,result3);\n                result10 = FUN_0800016c((int)result10,(int)((ulonglong)result10 >> 0x20),0x33333303,\n                                      0x3fe33333);\n                result12 = FUN_080004d0(result1,result3,result1,result3);\n                result10 = FUN_080004d0((int)result10,(int)((ulonglong)result10 >> 0x20),(int)result12,\n                                      (int)((ulonglong)result12 >> 0x20));\n                result12 = FUN_0800016c(result8,result4,0,result4);\n                result12 = FUN_080004d0((int)result12,(int)((ulonglong)result12 >> 0x20),(int)result11,\n                                      result9);\n                result10 = FUN_0800016c((int)result12,(int)((ulonglong)result12 >> 0x20),(int)result10,\n                                      (int)((ulonglong)result10 >> 0x20));\n                result1 = (undefined4)((ulonglong)result10 >> 0x20);\n                result12 = FUN_080004d0(0,result4,0,result4);\n                result3 = (undefined4)((ulonglong)result12 >> 0x20);\n                result13 = FUN_0800016c((int)result12,result3,0,0x40080000);\n                FUN_0800016c((int)result13,(int)((ulonglong)result13 >> 0x20),(int)result10,result1);\n                result13 = FUN_080004d0(0,result4,0,extra_result2);\n                result5 = (undefined4)((ulonglong)result13 >> 0x20);\n                u_var20 = FUN_08000168(0,extra_result2,0,0x40080000);\n                result12 = FUN_08000168((int)u_var20,(int)((ulonglong)u_var20 >> 0x20),(int)result12,result3\n                                     );\n                result10 = FUN_08000168((int)result10,result1,(int)result12,(int)((ulonglong)result12 >> 0x20)\n                                     );\n                result10 = FUN_080004d0((int)result10,(int)((ulonglong)result10 >> 0x20),result8,result4);\n                result11 = FUN_080004d0((int)result11,result9,0,extra_result2);\n                result10 = FUN_0800016c((int)result10,(int)((ulonglong)result10 >> 0x20),(int)result11,\n                                      (int)((ulonglong)result11 >> 0x20));\n                result1 = (undefined4)((ulonglong)result10 >> 0x20);\n                FUN_0800016c((int)result13,result5,(int)result10,result1);\n                result11 = FUN_080004d0(0,extra_result3,0xe0000000,0x3feec709);\n                result12 = FUN_08000168(0,extra_result3,(int)result13,result5);\n                result10 = FUN_08000168((int)result10,result1,(int)result12,(int)((ulonglong)result12 >> 0x20)\n                                     );\n                result10 = FUN_080004d0((int)result10,(int)((ulonglong)result10 >> 0x20),0xdc3a03fd,\n                                      0x3feec709);\n                result12 = FUN_080004d0(0,extra_result3,0x145b01f5,0xbe3e2fe0);\n                result10 = FUN_0800016c((int)result10,(int)((ulonglong)result10 >> 0x20),(int)result12,\n                                      (int)((ulonglong)result12 >> 0x20));\n                result10 = FUN_0800016c((int)result10,(int)((ulonglong)result10 >> 0x20),\n                                      *(undefined4 *)(&DAT_080073e0 + index),\n                                      *(undefined4 *)(&DAT_080073e4 + index));\n                result12 = FUN_08000404(shift);\n                result1 = (undefined4)((ulonglong)result12 >> 0x20);\n                result8 = *(undefined4 *)(&DAT_080073d0 + index);\n                result9 = *(undefined4 *)(&DAT_080073d4 + index);\n                result13 = FUN_0800016c((int)result11,(int)((ulonglong)result11 >> 0x20),(int)result10,\n                                      (int)((ulonglong)result10 >> 0x20));\n                result13 = FUN_0800016c((int)result13,(int)((ulonglong)result13 >> 0x20),result8,result9);\n                FUN_0800016c((int)result13,(int)((ulonglong)result13 >> 0x20),(int)result12,result1);\n                result12 = FUN_08000168(0,extra_result4,(int)result12,result1);\n                l_var18 = FUN_08000168((int)result12,(int)((ulonglong)result12 >> 0x20),result8,result9);\n                result = extra_result4;\n              }\n              else {\n                if (0x43f00000 < result) {\n                  if (temp_var4 < 0x3ff00000) goto LAB_080063fa;\nLAB_08006418:\n                  if ((int)input4 < 1) {\n                    return 0;\n                  }\nLAB_08006400:\n                  sign = 0x8800759c;\n                  exponent = 0x7e37e43c;\n                  result11 = 0x7e37e43c8800759c;\n                  goto LAB_0800634a;\n                }\n                if (temp_var4 < 0x3fefffff) {\nLAB_080063fa:\n                  if (-1 < (int)input4) {\n                    return 0;\n                  }\n                  goto LAB_08006400;\n                }\n                if (0x3ff00000 < temp_var4) goto LAB_08006418;\n                result11 = FUN_08000168(result1,result8,0,0x3ff00000);\n                result8 = (undefined4)((ulonglong)result11 >> 0x20);\n                result1 = (undefined4)result11;\n                result11 = FUN_080004d0(result1,result8,0x60000000,0x3ff71547);\n                result10 = FUN_080004d0(result1,result8,0xf85ddf44,0x3e54ae0b);\n                result12 = FUN_080004d0(result1,result8,0,0x3fd00000);\n                result12 = FUN_08000168(0x55555555,0x3fd55555,(int)result12,\n                                      (int)((ulonglong)result12 >> 0x20));\n                result12 = FUN_080004d0((int)result12,(int)((ulonglong)result12 >> 0x20),result1,result8);\n                result12 = FUN_08000168(0,0x3fe00000,(int)result12,(int)((ulonglong)result12 >> 0x20));\n                result13 = FUN_080004d0(result1,result8,result1,result8);\n                result12 = FUN_080004d0((int)result12,(int)((ulonglong)result12 >> 0x20),(int)result13,\n                                      (int)((ulonglong)result13 >> 0x20));\n                result12 = FUN_080004d0((int)result12,(int)((ulonglong)result12 >> 0x20),0x652b82fe,\n                                      0x3ff71547);\n                result10 = FUN_08000168((int)result10,(int)((ulonglong)result10 >> 0x20),(int)result12,\n                                      (int)((ulonglong)result12 >> 0x20));\n                FUN_0800016c((int)result11,(int)((ulonglong)result11 >> 0x20),(int)result10,\n                             (int)((ulonglong)result10 >> 0x20));\n                l_var18 = (ulonglong)extra_result1 << 0x20;\n                result = extra_result1;\n              }\n              result11 = FUN_08000168((int)l_var18,(int)((ulonglong)l_var18 >> 0x20),(int)result11,\n                                    (int)((ulonglong)result11 >> 0x20));\n              result11 = FUN_08000168((int)result10,(int)((ulonglong)result10 >> 0x20),(int)result11,\n                                    (int)((ulonglong)result11 >> 0x20));\n              if ((local_var1 - 1 | result2) == 0) {\n                exponent = 0xbff00000;\n              }\n              else {\n                exponent = 0x3ff00000;\n              }\n              local_var1 = 0;\n              result10 = FUN_08000168(input3,input4,0,input4);\n              result10 = FUN_080004d0((int)result10,(int)((ulonglong)result10 >> 0x20),0,result);\n              result11 = FUN_080004d0((int)result11,(int)((ulonglong)result11 >> 0x20),input3,input4);\n              result11 = FUN_0800016c((int)result10,(int)((ulonglong)result10 >> 0x20),(int)result11,\n                                    (int)((ulonglong)result11 >> 0x20));\n              result9 = (undefined4)((ulonglong)result11 >> 0x20);\n              result1 = (undefined4)result11;\n              result11 = FUN_080004d0(0,result,0,input4);\n              result3 = (undefined4)((ulonglong)result11 >> 0x20);\n              result8 = (undefined4)result11;\n              l_var18 = FUN_0800016c(result1,result9,result8,result3);\n              temp_var4 = (uint)((ulonglong)l_var18 >> 0x20);\n              result = (uint)l_var18;\n              if (0x408fffffffffffff < l_var18) {\n                if ((temp_var4 + 0xbf700000 | result) == 0) {\n                  result10 = FUN_0800016c(result1,result9,0x652b82fe,0x3c971547);\n                  result12 = FUN_08000168(result,temp_var4,result8,result3);\n                  shift = FUN_080009f0((int)result10,(int)((ulonglong)result10 >> 0x20),(int)result12,\n                                       (int)((ulonglong)result12 >> 0x20));\n                  if (shift == 0) goto LAB_08006968;\n                }\n                result11 = FUN_080004d0(0,exponent,0x8800759c,0x7e37e43c);\n                sign = 0x8800759c;\n                exponent = 0x7e37e43c;\n                goto LAB_0800634a;\n              }\n              if ((temp_var4 & 0x7fffffff) < 0x4090cc00) {\nLAB_08006968:\n                if ((temp_var4 & 0x7fffffff) < 0x3fe00001) {\n                  shift = 0;\n                }\n                else {\n                  temp_var4 = (0x100000 >> (((int)(temp_var4 & 0x7fffffff) >> 0x14) - 0x3feU & 0xff)) +\n                          temp_var4;\n                  result = (temp_var4 * 2 >> 0x15) - 0x3ff;\n                  shift = (int)(temp_var4 & 0xfffff | 0x100000) >> (0x14 - result & 0xff);\n                  if (l_var18 < 0) {\n                    shift = -shift;\n                  }\n                  result11 = FUN_08000168(result8,result3,0,temp_var4 & ~(0xfffff >> (result & 0xff)));\n                }\n                local_var3 = (undefined4)((ulonglong)result11 >> 0x20);\n                local_variable2 = (undefined4)result11;\n                FUN_0800016c(local_variable2,local_var3,result1,result9);\n                result11 = FUN_080004d0(0,extra_result1_03,0,0x3fe62e43);\n                result8 = (undefined4)((ulonglong)result11 >> 0x20);\n                result10 = FUN_08000168(0,extra_result1_03,local_variable2,local_var3);\n                result10 = FUN_08000168(result1,result9,(int)result10,(int)((ulonglong)result10 >> 0x20));\n                result10 = FUN_080004d0((int)result10,(int)((ulonglong)result10 >> 0x20),0xfefa39ef,\n                                      0x3fe62e42);\n                result12 = FUN_080004d0(0,extra_result1_03,0xca86c39,0xbe205c61);\n                result10 = FUN_0800016c((int)result10,(int)((ulonglong)result10 >> 0x20),(int)result12,\n                                      (int)((ulonglong)result12 >> 0x20));\n                result9 = (undefined4)((ulonglong)result10 >> 0x20);\n                result12 = FUN_0800016c((int)result11,result8,(int)result10,result9);\n                result3 = (undefined4)((ulonglong)result12 >> 0x20);\n                result1 = (undefined4)result12;\n                result11 = FUN_08000168(result1,result3,(int)result11,result8);\n                result11 = FUN_08000168((int)result10,result9,(int)result11,\n                                      (int)((ulonglong)result11 >> 0x20));\n                result9 = (undefined4)((ulonglong)result11 >> 0x20);\n                result10 = FUN_080004d0(result1,result3,result1,result3);\n                result4 = (undefined4)((ulonglong)result10 >> 0x20);\n                result8 = (undefined4)result10;\n                result10 = FUN_080004d0(result8,result4,0x72bea4d0,0x3e663769);\n                result10 = FUN_08000168((int)result10,(int)((ulonglong)result10 >> 0x20),0xc5d26bf1,\n                                      0x3ebbbd41);\n                result10 = FUN_080004d0((int)result10,(int)((ulonglong)result10 >> 0x20),result8,result4);\n                result10 = FUN_0800016c((int)result10,(int)((ulonglong)result10 >> 0x20),0xaf25de2c,\n                                      0x3f11566a);\n                result10 = FUN_080004d0((int)result10,(int)((ulonglong)result10 >> 0x20),result8,result4);\n                result10 = FUN_08000168((int)result10,(int)((ulonglong)result10 >> 0x20),0x16bebd93,\n                                      0x3f66c16c);\n                result10 = FUN_080004d0((int)result10,(int)((ulonglong)result10 >> 0x20),result8,result4);\n                result10 = FUN_0800016c((int)result10,(int)((ulonglong)result10 >> 0x20),0x5555553e,\n                                      0x3fc55555);\n                result10 = FUN_080004d0((int)result10,(int)((ulonglong)result10 >> 0x20),result8,result4);\n                result10 = FUN_08000168(result1,result3,(int)result10,(int)((ulonglong)result10 >> 0x20));\n                result8 = (undefined4)((ulonglong)result10 >> 0x20);\n                result12 = FUN_080004d0(result1,result3,(int)result10,result8);\n                result10 = FUN_08000168((int)result10,result8,0,0x40000000);\n                result10 = FUN_08000724((int)result12,(int)((ulonglong)result12 >> 0x20),(int)result10,\n                                      (int)((ulonglong)result10 >> 0x20));\n                result12 = FUN_080004d0(result1,result3,(int)result11,result9);\n                result11 = FUN_0800016c((int)result12,(int)((ulonglong)result12 >> 0x20),(int)result11,\n                                      result9);\n                result11 = FUN_08000168((int)result10,(int)((ulonglong)result10 >> 0x20),(int)result11,\n                                      (int)((ulonglong)result11 >> 0x20));\n                result11 = FUN_08000168((int)result11,(int)((ulonglong)result11 >> 0x20),result1,result3);\n                result10 = FUN_08000168(0,0x3ff00000,(int)result11,(int)((ulonglong)result11 >> 0x20));\n                index = (int)((ulonglong)result10 >> 0x20);\n                shift = index + shift * 0x100000;\n                result11 = CONCAT44(shift,(int)result10);\n                sign = local_var1;\n                if (shift < 0x100000) {\n                  result11 = FUN_080071c0((int)result10,index,shift);\n                }\n              }\n              else {\n                if ((temp_var4 + 0x3f6f3400 | result) == 0) {\n                  result10 = FUN_08000168(result,temp_var4,result8,result3);\n                  shift = FUN_080009c8(result1,result9,(int)result10,(int)((ulonglong)result10 >> 0x20));\n                  if (shift == 0) goto LAB_08006968;\n                }\n                result11 = FUN_080004d0(0,exponent,0xc2f8f359,0x1a56e1f);\n                sign = 0xc2f8f359;\n                exponent = 0x1a56e1f;\n              }\nLAB_0800634a:\n              result = FUN_080004d0((int)result11,(int)((ulonglong)result11 >> 0x20),sign,exponent);\n              return result;\n            }\n          }\n          result1 = (undefined4)((ulonglong)result10 >> 0x20);\n          result10 = FUN_08000168((int)result10,result1,(int)result10,result1);\n          result11 = result10;\nLAB_08006320:\n          result = FUN_08000724((int)result10,(int)((ulonglong)result10 >> 0x20),(int)result11,\n                                (int)((ulonglong)result11 >> 0x20));\n          return result;\n        }\n      }\n    }\n    else if (result < 0x7ff00001) goto LAB_08006262;\n  }\n  if ((temp_var4 + 0xc0100000 | sign) == 0) {\n    return 0;\n  }\nLAB_08006278:\n  result = FUN_080070a4(&DAT_0800737e);\n  return result;\n}\n\n",
            "current_name": "calculate_floating_point_value_08006228",
            "entrypoint": "0x08006228",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006228": "calculate_floating_point_value_08006228",
                "extraout_r1": "extra_result1",
                "extraout_r1_00": "extra_result2",
                "extraout_r1_01": "extra_result3",
                "extraout_r1_02": "extra_result4",
                "iVar10": "shift",
                "iVar5": "shift",
                "iVar6": "index",
                "lVar18": "l_var18",
                "local_54": "shift",
                "local_64": "local_var3",
                "local_68": "local_variable2",
                "local_70": "local_var1",
                "param_1": "sign",
                "param_2": "exponent",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result1",
                "uVar11": "result",
                "uVar12": "result8",
                "uVar13": "result9",
                "uVar14": "result10",
                "uVar15": "result11",
                "uVar16": "result12",
                "uVar17": "result13",
                "uVar19": "u_var19",
                "uVar2": "result2",
                "uVar20": "u_var20",
                "uVar3": "result3",
                "uVar4": "result4",
                "uVar7": "result5",
                "uVar8": "temp_var4",
                "uVar9": "u_var9"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006c0c": {
            "additional_data": {
                "FUN_08000168": {
                    "calculate1": 1,
                    "calculate_multiply": 1,
                    "calculation_1": 1,
                    "helper_function_1": 1,
                    "multiply_ints": 1
                },
                "FUN_0800016c": {
                    "calculate2": 1,
                    "calculate_add": 1,
                    "calculation_2": 1,
                    "helper_function_2": 1,
                    "multiply_floats": 1
                },
                "FUN_080004d0": {
                    "calculate3": 1,
                    "calculate_subtract": 1,
                    "calculation_3": 1,
                    "divide_ints": 1,
                    "helper_function_3": 1
                },
                "FUN_08000724": {
                    "calculate4": 1,
                    "calculation_4": 1,
                    "divide_floats": 1,
                    "helper_function_4": 1,
                    "shift_right_logical": 1
                },
                "FUN_08006c0c": {
                    "calculate_exponent": 1,
                    "calculate_float": 13,
                    "calculate_float_representation": 1,
                    "calculate_floating_point": 4,
                    "calculate_result": 1,
                    "reverse_binary_operation": 1,
                    "reverse_number_conversion": 1
                },
                "iVar10": {
                    "bit_count": 1,
                    "bit_index": 1,
                    "bit_shift": 1,
                    "count": 2,
                    "count3": 1,
                    "counter3": 1,
                    "i": 1,
                    "index": 1,
                    "loop_count": 1,
                    "shift": 1,
                    "shift_count": 2,
                    "temp10": 3,
                    "temp8": 1,
                    "temp9": 7,
                    "temp_6": 1,
                    "temp_9": 3,
                    "temp_var10": 2,
                    "unused_var4": 1
                },
                "iVar3": {
                    "count": 1,
                    "counter_1": 1,
                    "exp": 2,
                    "exp_bit_count": 1,
                    "exponent": 1,
                    "exponent1": 1,
                    "shift": 2,
                    "shift_amount": 1,
                    "shift_count": 5,
                    "shifted_exponent": 1,
                    "temp1": 1,
                    "temp2": 6,
                    "temp3": 4,
                    "temp_2": 3,
                    "temp_var3": 1
                },
                "iVar4": {
                    "bit": 1,
                    "bit_shift": 1,
                    "count": 2,
                    "count2": 1,
                    "counter1": 1,
                    "counter_2": 1,
                    "exp_shift": 1,
                    "exponent2": 1,
                    "i": 2,
                    "loop_count": 1,
                    "temp2": 1,
                    "temp3": 6,
                    "temp4": 4,
                    "temp_3": 3,
                    "temp_exponent": 1,
                    "temp_shift_amount": 1,
                    "temp_var4": 2,
                    "unused_var2": 1
                },
                "iVar7": {
                    "counter2": 1,
                    "exponent": 1,
                    "exponent_adjustment": 1,
                    "integer": 1,
                    "integer_part": 2,
                    "integral": 1,
                    "result": 2,
                    "result_exp": 1,
                    "sign": 1,
                    "sum": 3,
                    "sum1": 2,
                    "temp5": 1,
                    "temp6": 6,
                    "temp7": 3,
                    "temp_3": 1,
                    "temp_6": 3,
                    "temp_var7": 1
                },
                "param_1": {
                    "base": 1,
                    "decimal_part": 1,
                    "exponent": 2,
                    "exponent_bits": 1,
                    "input1": 10,
                    "input_1": 5,
                    "input_num": 1,
                    "input_number": 1,
                    "num1": 2,
                    "numerator": 5,
                    "value": 1,
                    "x": 1
                },
                "param_2": {
                    "denominator": 5,
                    "exponent": 3,
                    "fraction_bits": 1,
                    "input2": 10,
                    "input_2": 5,
                    "input_exponent": 1,
                    "input_num2": 1,
                    "mantissa": 2,
                    "num2": 2,
                    "y": 1
                },
                "uVar1": {
                    "quotient": 1,
                    "result": 5,
                    "result1": 8,
                    "result_1": 3,
                    "result_high": 1,
                    "return_value": 1,
                    "return_value1": 1,
                    "temp": 1,
                    "temp1": 7,
                    "temp_var1": 2,
                    "unused_var1": 1
                },
                "uVar11": {
                    "approximation": 1,
                    "increment": 1,
                    "remainder": 1,
                    "shift": 1,
                    "temp1": 1,
                    "temp10": 7,
                    "temp11": 3,
                    "temp2": 2,
                    "temp3": 4,
                    "temp9": 1,
                    "temp_10": 3,
                    "temp_7": 1,
                    "temp_num4": 1,
                    "temp_shifted_fraction": 1,
                    "temp_var11": 2,
                    "unused_var5": 1
                },
                "uVar12": {
                    "final_result": 5,
                    "final_value": 1,
                    "output": 4,
                    "output_value": 1,
                    "result": 12,
                    "result2": 3,
                    "result_2": 1,
                    "return_value2": 1,
                    "temp11": 1,
                    "temp2": 1,
                    "temp3": 1
                },
                "uVar2": {
                    "exp_temp": 1,
                    "exponent": 1,
                    "mantissa": 1,
                    "original_input2": 1,
                    "result2": 3,
                    "result_2": 1,
                    "result_low": 1,
                    "temp": 1,
                    "temp1": 7,
                    "temp2": 7,
                    "temp_1": 3,
                    "temp_divisor": 1,
                    "temp_num": 1,
                    "temp_var2": 2
                },
                "uVar5": {
                    "diff": 1,
                    "mant_temp": 1,
                    "mantissa": 1,
                    "mantissa1": 1,
                    "mask": 1,
                    "mask1": 1,
                    "temp": 2,
                    "temp1": 2,
                    "temp2": 1,
                    "temp3": 1,
                    "temp4": 6,
                    "temp5": 4,
                    "temp_1": 1,
                    "temp_4": 3,
                    "temp_fraction": 1,
                    "temp_num2": 1,
                    "temp_numerator": 1,
                    "temp_var5": 2
                },
                "uVar6": {
                    "mantissa2": 1,
                    "mask2": 1,
                    "remainder": 1,
                    "result_sign": 1,
                    "shifted": 1,
                    "shifted_mantissa": 1,
                    "temp2": 4,
                    "temp3": 1,
                    "temp4": 1,
                    "temp5": 6,
                    "temp6": 4,
                    "temp_2": 1,
                    "temp_5": 3,
                    "temp_exponent": 1,
                    "temp_num3": 1,
                    "temp_result": 1,
                    "temp_var6": 2
                },
                "uVar8": {
                    "fraction": 2,
                    "fraction_part": 2,
                    "fractional": 1,
                    "fractional_part": 1,
                    "result3": 1,
                    "result_mant": 1,
                    "sign": 2,
                    "sign_bit": 1,
                    "significand": 1,
                    "sum2": 2,
                    "temp6": 1,
                    "temp7": 7,
                    "temp8": 3,
                    "temp_4": 1,
                    "temp_7": 3,
                    "temp_var8": 2
                },
                "uVar9": {
                    "bit": 3,
                    "bit_mask": 1,
                    "mask": 5,
                    "mask3": 1,
                    "temp1": 1,
                    "temp7": 1,
                    "temp8": 7,
                    "temp9": 3,
                    "temp_5": 1,
                    "temp_8": 3,
                    "temp_value": 2,
                    "temp_var9": 2,
                    "unused_var3": 1
                }
            },
            "called": [
                "FUN_08000168",
                "FUN_0800016c",
                "FUN_080004d0",
                "FUN_08000724"
            ],
            "calling": [
                "FUN_08005c70",
                "FUN_08005bc8",
                "FUN_08006228"
            ],
            "code": "\nundefined8 calculate_float_representation_08006c0c(uint input1,uint input2)\n\n{\n  undefined4 result1;\n  uint temp1;\n  int temp2;\n  int temp3;\n  uint temp4;\n  uint temp5;\n  int temp6;\n  uint temp7;\n  uint temp8;\n  int temp9;\n  uint temp10;\n  undefined8 result;\n  \n  if ((~input2 & 0x7ff00000) == 0) {\n    result = FUN_080004d0(input1,input2,input1,input2);\n    result = FUN_0800016c(input1,input2,(int)result,(int)((ulonglong)result >> 0x20));\n    return result;\n  }\n  if ((int)input2 < 1) {\n    if ((input2 & 0x7fffffff | input1) == 0) {\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != 0) {\n      result = FUN_08000168(input1,input2,input1,input2);\n      result1 = (undefined4)((ulonglong)result >> 0x20);\n      result = FUN_08000724((int)result,result1,(int)result,result1);\n      return result;\n    }\n  }\n  temp2 = (int)input2 >> 0x14;\n  if (temp2 == 0) {\n    while (input2 == 0) {\n      temp2 = temp2 + -0x15;\n      input2 = input1 >> 0xb;\n      input1 = input1 << 0x15;\n    }\n    temp1 = 0;\n    for (; -1 < (int)(input2 << 0xb); input2 = input2 << 1) {\n      temp1 = temp1 + 1;\n    }\n    temp2 = temp2 - (temp1 - 1);\n    input2 = input2 | input1 >> (0x20 - temp1 & 0xff);\n    input1 = input1 << (temp1 & 0xff);\n  }\n  temp6 = 0;\n  temp1 = input2 & 0xfffff | 0x100000;\n  if ((temp2 + -0x3ff) * -0x80000000 < 0) {\n    temp1 = temp1 * 2 - ((int)input1 >> 0x1f);\n    input1 = input1 << 1;\n  }\n  temp1 = temp1 * 2 - ((int)input1 >> 0x1f);\n  temp3 = 0x16;\n  temp4 = 0;\n  temp7 = 0x200000;\n  input1 = input1 << 1;\n  do {\n    temp9 = temp4 + temp7;\n    if (temp9 <= (int)temp1) {\n      temp1 = temp1 - temp9;\n      temp4 = temp9 + temp7;\n      temp6 = temp6 + temp7;\n    }\n    temp3 = temp3 + -1;\n    temp1 = temp1 * 2 - ((int)input1 >> 0x1f);\n    temp7 = temp7 >> 1;\n    input1 = input1 << 1;\n  } while (temp3 != 0);\n  temp9 = 0x20;\n  temp8 = 0x80000000;\n  temp7 = 0;\n  temp3 = 0;\n  do {\n    temp10 = temp8 + temp3;\n    temp5 = temp4;\n    if (((int)temp4 < (int)temp1) || ((temp1 == temp4 && (temp10 <= input1)))) {\n      temp3 = temp10 + temp8;\n      if (((int)temp10 < 0) && (-1 < temp3)) {\n        temp5 = temp4 + 1;\n      }\n      temp1 = temp1 - temp4;\n      if (input1 < temp10) {\n        temp1 = temp1 - 1;\n      }\n      input1 = input1 - temp10;\n      temp7 = temp7 + temp8;\n    }\n    temp1 = temp1 * 2 - ((int)input1 >> 0x1f);\n    temp9 = temp9 + -1;\n    input1 = input1 << 1;\n    temp8 = temp8 >> 1;\n    temp4 = temp5;\n  } while (temp9 != 0);\n  if ((input1 | temp1) != 0) {\n    if (temp7 == 0xffffffff) {\n      temp6 = temp6 + 1;\n      temp7 = 0;\n    }\n    else {\n      temp7 = temp7 + 1 & 0xfffffffe;\n    }\n  }\n  temp7 = temp7 >> 1;\n  if (temp6 << 0x1f < 0) {\n    temp7 = temp7 | 0x80000000;\n  }\n  return CONCAT44((temp6 >> 1) + 0x3fe00000 + (temp2 + -0x3ff >> 1) * 0x100000,temp7);\n}\n\n",
            "current_name": "calculate_float_representation_08006c0c",
            "entrypoint": "0x08006c0c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006c0c": "calculate_float_representation_08006c0c",
                "iVar10": "temp9",
                "iVar3": "temp2",
                "iVar4": "temp3",
                "iVar7": "temp6",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "result1",
                "uVar11": "temp10",
                "uVar12": "result",
                "uVar2": "temp1",
                "uVar5": "temp4",
                "uVar6": "temp5",
                "uVar8": "temp7",
                "uVar9": "temp8"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006d68": {
            "additional_data": {
                "FUNC_0800708c": {
                    "function_with_unknown_purpose": 1,
                    "generate_value": 1,
                    "get_another_value": 1,
                    "get_return_value": 1,
                    "helper_function1": 1,
                    "initialize_result": 1
                },
                "FUN_08000168": {
                    "calculate_value2": 2,
                    "calculate_y": 1,
                    "calculation2": 1,
                    "helper_function3": 1,
                    "perform_calculation2": 1
                },
                "FUN_0800016c": {
                    "calculate_value1": 2,
                    "calculate_x": 1,
                    "calculation1": 1,
                    "helper_function2": 1,
                    "perform_calculation1": 1
                },
                "FUN_080004d0": {
                    "calculate_value3": 2,
                    "calculate_z": 1,
                    "calculation3": 1,
                    "helper_function4": 1,
                    "perform_calculation3": 1
                },
                "FUN_08000724": {
                    "calculate_value4": 2,
                    "calculate_w": 1,
                    "calculation4": 1,
                    "helper_function5": 1,
                    "perform_calculation4": 1
                },
                "FUN_080009f0": {
                    "check_condition": 3,
                    "check_result": 1,
                    "check_value_success": 1,
                    "helper_function6": 1
                },
                "FUN_08006d68": {
                    "calculate": 1,
                    "calculate_important_value": 1,
                    "calculate_result": 17,
                    "calculate_value": 3,
                    "compute_result": 1,
                    "perform_calculation": 1
                },
                "iVar1": {
                    "calculation_type": 1,
                    "case_switch": 1,
                    "comparison_result": 1,
                    "condition": 2,
                    "flag": 2,
                    "output": 1,
                    "result": 19,
                    "result_code": 1,
                    "result_var": 1,
                    "status": 1,
                    "temp8": 1
                },
                "param_1": {
                    "input1": 18,
                    "input_1": 5,
                    "input_param1": 2,
                    "input_param_1": 1,
                    "input_value1": 3,
                    "input_value_1": 1,
                    "param1": 1
                },
                "param_2": {
                    "input2": 18,
                    "input_2": 5,
                    "input_param2": 2,
                    "input_param_2": 1,
                    "input_value2": 3,
                    "input_value_2": 1,
                    "param2": 1
                },
                "param_3": {
                    "const1": 2,
                    "constant1": 9,
                    "constant_1": 1,
                    "constant_value_1": 1,
                    "input3": 8,
                    "input_3": 2,
                    "input_param3": 2,
                    "param3": 2,
                    "unknown_param_1": 1,
                    "unused_param1": 2,
                    "unused_param_1": 1
                },
                "param_4": {
                    "const2": 2,
                    "constant2": 9,
                    "constant_2": 1,
                    "constant_value_2": 1,
                    "input4": 8,
                    "input_4": 2,
                    "input_param4": 2,
                    "param4": 2,
                    "unknown_param_2": 1,
                    "unused_param2": 2,
                    "unused_param_2": 1
                },
                "uVar1": {
                    "combined_input": 2,
                    "result": 1
                },
                "uVar10": {
                    "calc_result2": 1,
                    "final_result2": 1,
                    "func_result2": 1,
                    "output2": 3,
                    "result2": 2,
                    "result_2": 1,
                    "result_temp": 1,
                    "temp": 2,
                    "temp7": 1,
                    "temp8": 2,
                    "temp_output": 1,
                    "temp_result": 11,
                    "temp_return_value": 1,
                    "temp_variable3": 1,
                    "temporary_var3": 1,
                    "tmp7": 1
                },
                "uVar2": {
                    "result1": 2,
                    "result_var1": 1,
                    "temp1": 15,
                    "temp_1": 3,
                    "temp_var1": 3,
                    "temp_var_1": 1,
                    "tmp1": 1,
                    "u_var2": 1,
                    "uvar2": 1,
                    "value1": 1,
                    "var1": 1,
                    "var2": 1
                },
                "uVar3": {
                    "result2": 2,
                    "result_var2": 1,
                    "temp2": 15,
                    "temp_2": 3,
                    "temp_var2": 3,
                    "temp_var_2": 1,
                    "tmp2": 1,
                    "u_var3": 1,
                    "uvar3": 1,
                    "value2": 1,
                    "var2": 1,
                    "var3": 1
                },
                "uVar4": {
                    "result3": 2,
                    "result_var3": 1,
                    "temp3": 15,
                    "temp_3": 3,
                    "temp_var3": 3,
                    "temp_var_3": 1,
                    "tmp3": 1,
                    "u_var4": 1,
                    "uvar4": 1,
                    "value3": 1,
                    "var3": 1,
                    "var4": 1
                },
                "uVar5": {
                    "result4": 2,
                    "result_var4": 1,
                    "temp4": 15,
                    "temp_4": 3,
                    "temp_var4": 3,
                    "temp_var_4": 1,
                    "tmp4": 1,
                    "u_var5": 1,
                    "uvar5": 1,
                    "value4": 1,
                    "var4": 1,
                    "var5": 1
                },
                "uVar6": {
                    "result5": 2,
                    "result_var5": 1,
                    "temp5": 15,
                    "temp_5": 3,
                    "temp_var5": 3,
                    "temp_var_5": 1,
                    "tmp5": 1,
                    "u_var6": 1,
                    "uvar6": 1,
                    "value5": 1,
                    "var5": 1,
                    "var6": 1
                },
                "uVar7": {
                    "result6": 2,
                    "result_var6": 1,
                    "temp6": 15,
                    "temp_6": 3,
                    "temp_var6": 3,
                    "temp_var_6": 1,
                    "tmp6": 1,
                    "u_var7": 1,
                    "uvar7": 1,
                    "value6": 1,
                    "var6": 1,
                    "var7": 1
                },
                "uVar8": {
                    "abs_input2": 4,
                    "abs_input_2": 1,
                    "abs_input_value2": 1,
                    "abs_param2": 1,
                    "abs_value2": 1,
                    "absolute_value": 2,
                    "masked_input2": 2,
                    "mod_value": 1,
                    "modified_input2": 1,
                    "positive_input": 1,
                    "positive_input2": 1,
                    "positive_input_2": 3,
                    "positive_param_2": 1,
                    "temp7": 4,
                    "temp_variable1": 1,
                    "temporary_var1": 1,
                    "u_var": 1,
                    "u_var8": 1,
                    "unsigned_input2": 2,
                    "unsigned_var": 1
                },
                "uVar9": {
                    "calc_result": 1,
                    "calculation_result": 2,
                    "final_result": 8,
                    "final_result1": 1,
                    "func_result": 1,
                    "output": 2,
                    "output1": 3,
                    "result": 7,
                    "result1": 2,
                    "result_1": 1,
                    "return_value": 1,
                    "temp_variable2": 1,
                    "temporary_var2": 1
                }
            },
            "called": [
                "FUN_0800016c",
                "FUN_08000168",
                "FUN_080004d0",
                "FUN_08000724",
                "FUN_080009f0",
                "FUN_0800708c"
            ],
            "calling": [
                "FUN_08006070"
            ],
            "code": "\nundefined8 calculate_result_08006d68(int input1,uint input2,undefined4 constant1,undefined4 constant2)\n\n{\n  int result;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  undefined4 temp5;\n  undefined4 temp6;\n  uint temp7;\n  undefined8 final_result;\n  undefined8 temp_result;\n  \n  final_result = CONCAT44(input2,input1);\n  temp7 = input2 & 0x7fffffff;\n  if (temp7 < 0x44100000) {\n    if (temp7 < 0x3fdc0000) {\n      if (temp7 < 0x3e200000) {\n        temp_result = FUN_0800016c(input1,input2,0x8800759c,0x7e37e43c,constant2);\n        result = FUN_080009f0((int)temp_result,(int)((ulonglong)temp_result >> 0x20),0,0x3ff00000);\n        if (result != 0) {\n          return final_result;\n        }\n      }\n      result = -1;\n    }\n    else {\n      final_result = FUNC_0800708c();\n      temp2 = (undefined4)((ulonglong)final_result >> 0x20);\n      temp1 = (undefined4)final_result;\n      if (temp7 < 0x3ff30000) {\n        if (temp7 < 0x3fe60000) {\n          final_result = FUN_0800016c(temp1,temp2,temp1,temp2);\n          final_result = FUN_08000168((int)final_result,(int)((ulonglong)final_result >> 0x20),0,0x3ff00000);\n          temp_result = FUN_0800016c(temp1,temp2,0,0x40000000);\n          final_result = FUN_08000724((int)final_result,(int)((ulonglong)final_result >> 0x20),(int)temp_result,\n                               (int)((ulonglong)temp_result >> 0x20));\n          result = 0;\n        }\n        else {\n          final_result = FUN_08000168(temp1,temp2,0,0x3ff00000);\n          temp_result = FUN_0800016c(temp1,temp2,0,0x3ff00000);\n          final_result = FUN_08000724((int)final_result,(int)((ulonglong)final_result >> 0x20),(int)temp_result,\n                               (int)((ulonglong)temp_result >> 0x20));\n          result = 1;\n        }\n      }\n      else if (temp7 < 0x40038000) {\n        final_result = FUN_08000168(temp1,temp2,0,0x3ff80000);\n        temp_result = FUN_080004d0(temp1,temp2,0,0x3ff80000);\n        temp_result = FUN_0800016c((int)temp_result,(int)((ulonglong)temp_result >> 0x20),0,0x3ff00000);\n        final_result = FUN_08000724((int)final_result,(int)((ulonglong)final_result >> 0x20),(int)temp_result,\n                             (int)((ulonglong)temp_result >> 0x20));\n        result = 2;\n      }\n      else {\n        final_result = FUN_08000724(0,0xbff00000,temp1,temp2);\n        result = 3;\n      }\n    }\n    temp6 = (undefined4)((ulonglong)final_result >> 0x20);\n    temp5 = (undefined4)final_result;\n    final_result = FUN_080004d0(temp5,temp6,temp5,temp6);\n    temp3 = (undefined4)((ulonglong)final_result >> 0x20);\n    temp1 = (undefined4)final_result;\n    final_result = FUN_080004d0(temp1,temp3,temp1,temp3);\n    temp4 = (undefined4)((ulonglong)final_result >> 0x20);\n    temp2 = (undefined4)final_result;\n    final_result = FUN_080004d0(temp2,temp4,0xe322da11,0x3f90ad3a);\n    final_result = FUN_0800016c((int)final_result,(int)((ulonglong)final_result >> 0x20),0x24760deb,0x3fa97b4b);\n    final_result = FUN_080004d0((int)final_result,(int)((ulonglong)final_result >> 0x20),temp2,temp4);\n    final_result = FUN_0800016c((int)final_result,(int)((ulonglong)final_result >> 0x20),0xa0d03d51,0x3fb10d66);\n    final_result = FUN_080004d0((int)final_result,(int)((ulonglong)final_result >> 0x20),temp2,temp4);\n    final_result = FUN_0800016c((int)final_result,(int)((ulonglong)final_result >> 0x20),0xc54c206e,0x3fb745cd);\n    final_result = FUN_080004d0((int)final_result,(int)((ulonglong)final_result >> 0x20),temp2,temp4);\n    final_result = FUN_0800016c((int)final_result,(int)((ulonglong)final_result >> 0x20),0x920083ff,0x3fc24924);\n    final_result = FUN_080004d0((int)final_result,(int)((ulonglong)final_result >> 0x20),temp2,temp4);\n    final_result = FUN_0800016c((int)final_result,(int)((ulonglong)final_result >> 0x20),0x5555550d,0x3fd55555);\n    final_result = FUN_080004d0((int)final_result,(int)((ulonglong)final_result >> 0x20),temp1,temp3);\n    temp1 = (undefined4)((ulonglong)final_result >> 0x20);\n    temp_result = FUN_080004d0(temp2,temp4,0x2c6a6c2f,0xbfa2b444);\n    temp_result = FUN_08000168((int)temp_result,(int)((ulonglong)temp_result >> 0x20),0x52defd9a,0x3fadde2d);\n    temp_result = FUN_080004d0((int)temp_result,(int)((ulonglong)temp_result >> 0x20),temp2,temp4);\n    temp_result = FUN_08000168((int)temp_result,(int)((ulonglong)temp_result >> 0x20),0xaf749a6d,0x3fb3b0f2);\n    temp_result = FUN_080004d0((int)temp_result,(int)((ulonglong)temp_result >> 0x20),temp2,temp4);\n    temp_result = FUN_08000168((int)temp_result,(int)((ulonglong)temp_result >> 0x20),0xfe231671,0x3fbc71c6);\n    temp_result = FUN_080004d0((int)temp_result,(int)((ulonglong)temp_result >> 0x20),temp2,temp4);\n    temp_result = FUN_08000168((int)temp_result,(int)((ulonglong)temp_result >> 0x20),0x9998ebc4,0x3fc99999);\n    temp_result = FUN_080004d0((int)temp_result,(int)((ulonglong)temp_result >> 0x20),temp2,temp4);\n    temp2 = (undefined4)((ulonglong)temp_result >> 0x20);\n    if (result == -1) {\n      final_result = FUN_0800016c((int)final_result,temp1,(int)temp_result,temp2);\n      final_result = FUN_080004d0((int)final_result,(int)((ulonglong)final_result >> 0x20),temp5,temp6);\n      final_result = FUN_08000168(temp5,temp6,(int)final_result,(int)((ulonglong)final_result >> 0x20));\n    }\n    else {\n      final_result = FUN_0800016c((int)final_result,temp1,(int)temp_result,temp2);\n      final_result = FUN_080004d0((int)final_result,(int)((ulonglong)final_result >> 0x20),temp5,temp6);\n      result = result * 8;\n      final_result = FUN_08000168((int)final_result,(int)((ulonglong)final_result >> 0x20),\n                           *(undefined4 *)(&UNK_08007410 + result),\n                           *(undefined4 *)(&UNK_08007414 + result));\n      final_result = FUN_08000168((int)final_result,(int)((ulonglong)final_result >> 0x20),temp5,temp6);\n      final_result = FUN_08000168(*(undefined4 *)(&UNK_080073f0 + result),\n                           *(undefined4 *)(&UNK_080073f4 + result),(int)final_result,\n                           (int)((ulonglong)final_result >> 0x20));\n      if ((int)input2 < 0) {\n        final_result = CONCAT44((int)((ulonglong)final_result >> 0x20) + -0x80000000,(int)final_result);\n      }\n    }\n  }\n  else if ((temp7 < 0x7ff00001) && ((temp7 != 0x7ff00000 || (input1 == 0)))) {\n    if ((int)input2 < 1) {\n      final_result = 0xbff921fb54442d18;\n    }\n    else {\n      final_result = 0x3ff921fb54442d18;\n    }\n  }\n  else {\n    final_result = FUN_0800016c(input1,input2,input1,input2,constant2);\n  }\n  return final_result;\n}\n\n",
            "current_name": "calculate_result_08006d68",
            "entrypoint": "0x08006d68",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006d68": "calculate_result_08006d68",
                "iVar1": "result",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "constant1",
                "param_4": "constant2",
                "uVar1": "combined_input",
                "uVar10": "temp_result",
                "uVar2": "temp1",
                "uVar3": "temp2",
                "uVar4": "temp3",
                "uVar5": "temp4",
                "uVar6": "temp5",
                "uVar7": "temp6",
                "uVar8": "temp7",
                "uVar9": "final_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800708c": {
            "called": [],
            "calling": [
                "FUN_08005c70",
                "FUN_08006d68",
                "FUN_08005854",
                "FUN_08006070",
                "FUN_08006228"
            ],
            "code": "\nvoid FUNC_0800708c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800708c",
            "entrypoint": "0x0800708c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800708c": "FUNC_0800708c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08007092": {
            "additional_data": {
                "FUN_08007092": {
                    "addition_with_shift": 1,
                    "calculate_bitwise_sum": 1,
                    "calculate_offset": 2,
                    "calculate_positive_shifted_bits": 1,
                    "calculate_shift": 1,
                    "calculate_shift_amount": 1,
                    "calculate_shifted_bit": 1,
                    "calculate_shifted_value": 1,
                    "calculate_unsigned_shift": 1,
                    "count_leading_ones": 1,
                    "extract_bit": 2,
                    "extract_bit_value": 1,
                    "extracted_bit": 1,
                    "extracted_value_with_sign_bit": 1,
                    "get_bitwise_result": 1,
                    "get_sign_bit": 2,
                    "get_sign_extension": 1,
                    "parse_unsigned_integer": 1,
                    "set_bit": 1,
                    "set_highest_bit": 1,
                    "set_highest_bit_and_right_shift": 1,
                    "set_highest_bit_to1": 1,
                    "set_most_significant_bit": 2,
                    "set_sign_bit_and_shift_right": 1,
                    "sign_extension": 1,
                    "truncate_and_shift_right": 1
                },
                "local_1": {
                    "mask": 1
                },
                "local_2": {
                    "sign_bit": 1
                },
                "local_3": {
                    "extended_input": 1
                },
                "param_1": {
                    "address": 1,
                    "arg1": 1,
                    "first_parameter": 1,
                    "flag": 1,
                    "flags": 2,
                    "input": 3,
                    "input_flag": 5,
                    "input_param": 2,
                    "input_parameter": 1,
                    "input_value": 4,
                    "is_negative": 1,
                    "param1": 1,
                    "param_a": 1,
                    "status_flags": 1,
                    "undefined_argument": 1,
                    "unused": 1,
                    "value": 3,
                    "width": 1
                },
                "param_2": {
                    "arg2": 1,
                    "base_offset": 1,
                    "bit": 1,
                    "bit_pattern": 2,
                    "bit_position": 2,
                    "bitwise_flag": 1,
                    "bitwise_number": 1,
                    "input": 1,
                    "input_value": 8,
                    "mask": 1,
                    "param2": 1,
                    "raw_value": 1,
                    "second_parameter": 1,
                    "value": 8,
                    "value_to_extract_sign_bit_from": 1
                },
                "param_3": {
                    "number": 1,
                    "result": 2,
                    "shift_amount": 2,
                    "shifted_mask": 1,
                    "unused": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005900"
            ],
            "code": "\nuint extracted_value_with_sign_bit_08007092(undefined4 input_flag,uint value)\n\n{\n  return (value | 0x80000000) + 0x100000 >> 0x1f;\n}\n\n",
            "current_name": "extracted_value_with_sign_bit_08007092",
            "entrypoint": "0x08007092",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007092": "extracted_value_with_sign_bit_08007092",
                "param_1": "input_flag",
                "param_2": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800709e": {
            "additional_data": {
                "DAT_XXXXXXXX": {
                    "new_data": 1
                },
                "FUN_0800709e": {
                    "check_initialization": 1,
                    "get_default_value": 5,
                    "get_zero": 3,
                    "initialize": 10,
                    "initialize_application": 2,
                    "initialize_data": 1,
                    "initialize_function": 2,
                    "initialize_program": 3,
                    "initialize_zero": 1,
                    "more_descriptive_function": 1,
                    "return_zero": 1
                },
                "PTR_XXXXXXXX": {
                    "new_pointer": 1
                },
                "return": {
                    "exit_status": 1,
                    "result": 1,
                    "status": 1,
                    "success_code": 1
                },
                "return_value": {
                    "status": 1
                },
                "undefined4": {
                    "int": 3,
                    "void": 7
                }
            },
            "called": [],
            "calling": [
                "FUN_08005bc8",
                "FUN_08005854",
                "FUN_08005900"
            ],
            "code": "\nvoid initialize_program_0800709e(void)\n\n{\n  status 0;\n}\n\n",
            "current_name": "initialize_program_0800709e",
            "entrypoint": "0x0800709e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800709e": "initialize_program_0800709e",
                "return": "status",
                "undefined4": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080070a4": {
            "additional_data": {
                "0x7ff8000000000000": {
                    "ieee_754_infinity": 1,
                    "infinity": 6,
                    "positive_infinity": 5
                },
                "FUN_080070a4": {
                    "extract_double_na_n": 1,
                    "get_infinity": 18,
                    "get_infinity_value": 6,
                    "get_max_double": 1,
                    "get_positive_infinity": 3,
                    "get_special_float": 1,
                    "initialize_infinite": 1
                },
                "PTR_08007ff800000000": {
                    "new_special_float": 1
                },
                "return": {
                    "infinity": 2
                },
                "undefined8": {
                    "double": 12,
                    "uint64_t": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005854",
                "FUN_08006228"
            ],
            "code": "\ndouble get_infinity_value_080070a4(void)\n\n{\n  infinity 0x7ff8000000000000;\n}\n\n",
            "current_name": "get_infinity_value_080070a4",
            "entrypoint": "0x080070a4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080070a4": "get_infinity_value_080070a4",
                "return": "infinity",
                "undefined8": "double"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080070b0": {
            "additional_data": {
                "CONCAT44": {
                    "combine_unsigned_ints": 1,
                    "concatenate_variables": 1
                },
                "FUN_08000168": {
                    "calculate_result": 1,
                    "compute_result_2": 1,
                    "sub_function2": 1
                },
                "FUN_0800016c": {
                    "compute_result_1": 1,
                    "perform_computation": 1,
                    "sub_function1": 1
                },
                "FUN_080070b0": {
                    "calculate_result": 6,
                    "calculate_value": 2,
                    "convert_unsigned_to_int64": 1,
                    "decode_and_process_values": 1,
                    "parse_parameters": 1,
                    "process_binary_function": 1,
                    "process_data": 2,
                    "process_numbers": 1,
                    "reverse_binary_calculation": 1
                },
                "iVar1": {
                    "index": 10,
                    "index_var": 2,
                    "int_var": 1,
                    "shift": 1,
                    "shift_amount1": 1,
                    "shift_count": 1,
                    "temp_int": 1,
                    "temp_var": 2,
                    "temp_var1": 9,
                    "temp_var6": 1,
                    "temp_var_1": 1
                },
                "param_1": {
                    "input1": 19,
                    "input_1": 2,
                    "input_param": 1,
                    "input_param1": 2,
                    "input_param_1": 2,
                    "input_val": 1,
                    "input_value": 1,
                    "input_value1": 2,
                    "input_value_1": 1
                },
                "param_2": {
                    "input2": 19,
                    "input_2": 2,
                    "input_param2": 2,
                    "input_param_2": 2,
                    "input_value2": 2,
                    "input_value_2": 1,
                    "shift_param": 1,
                    "shift_val": 1,
                    "shift_value": 1
                },
                "param_3": {
                    "extra_val": 1,
                    "flag": 1,
                    "flag_param": 1,
                    "input3": 17,
                    "input_3": 2,
                    "input_param3": 2,
                    "input_param_3": 2,
                    "input_value3": 2,
                    "input_value_3": 1,
                    "param3": 2
                },
                "uVar1": {
                    "temp_value": 1
                },
                "uVar2": {
                    "constant1": 1,
                    "some_var1": 1,
                    "temp_value": 1,
                    "temp_var1": 5,
                    "temp_var2": 10,
                    "temp_var7": 1,
                    "temp_var_1": 1,
                    "temp_var_2": 1,
                    "value1": 4,
                    "value_1": 1,
                    "var1": 4,
                    "variable2": 1
                },
                "uVar3": {
                    "masked_value": 1,
                    "modified_input2": 1,
                    "modified_input_2": 1,
                    "new_input2": 2,
                    "result": 2,
                    "temp1": 1,
                    "temp_var1": 1,
                    "temp_var2": 4,
                    "temp_var3": 9,
                    "temp_var_2": 1,
                    "temp_var_3": 1,
                    "updated_input2": 1,
                    "updated_shift_val": 1,
                    "updated_value1": 1,
                    "var2": 3,
                    "variable3": 1
                },
                "uVar4": {
                    "constant2": 1,
                    "first_value": 1,
                    "some_var2": 1,
                    "temp_var2": 2,
                    "temp_var3": 5,
                    "temp_var4": 9,
                    "temp_var_3": 1,
                    "temp_var_4": 1,
                    "value2": 4,
                    "value_2": 1,
                    "var2": 1,
                    "var3": 3,
                    "variable4": 1
                },
                "uVar5": {
                    "condition_value": 1,
                    "masked_input": 1,
                    "modified_input1": 1,
                    "modified_input_1": 1,
                    "modified_result": 2,
                    "temp2": 1,
                    "temp_var3": 2,
                    "temp_var4": 4,
                    "temp_var5": 9,
                    "temp_var_4": 1,
                    "temp_var_5": 1,
                    "updated_input": 2,
                    "var3": 1,
                    "var4": 3,
                    "variable5": 1
                },
                "uVar6": {
                    "adjusted_shift": 1,
                    "diff_value": 1,
                    "difference": 2,
                    "shift_amount": 2,
                    "shift_amount2": 1,
                    "shifted": 1,
                    "shifted_value": 1,
                    "temp_var4": 2,
                    "temp_var5": 4,
                    "temp_var6": 9,
                    "temp_var_5": 1,
                    "temp_var_6": 1,
                    "updated_value2": 1,
                    "var5": 3,
                    "variable6": 1
                },
                "uVar7": {
                    "adjusted_shift_val": 1,
                    "mask": 2,
                    "shifted_bits": 1,
                    "shifted_input2": 2,
                    "shifted_value": 1,
                    "temp": 1,
                    "temp3": 1,
                    "temp_var5": 2,
                    "temp_var6": 4,
                    "temp_var7": 9,
                    "temp_var_6": 1,
                    "temp_var_7": 1,
                    "updated_value3": 1,
                    "var6": 3,
                    "variable7": 1
                },
                "uVar8": {
                    "final_result": 1,
                    "output": 3,
                    "output_value": 1,
                    "output_var": 1,
                    "result": 20,
                    "result_var": 2,
                    "return_value": 3
                }
            },
            "called": [
                "FUN_08000168",
                "FUN_0800016c"
            ],
            "calling": [
                "FUN_08005900"
            ],
            "code": "\nundefined8 calculate_result_080070b0(uint input1,uint input2,undefined4 input3)\n\n{\n  int index;\n  undefined4 temp_var2;\n  uint temp_var3;\n  undefined4 temp_var4;\n  uint temp_var5;\n  uint temp_var6;\n  uint temp_var7;\n  undefined8 result;\n  \n  temp_var7 = (input2 << 1) >> 0x15;\n  temp_var6 = temp_var7 - 0x3ff;\n  temp_var3 = input2;\n  if ((int)temp_var6 < 0x14) {\n    if ((int)temp_var6 < 0) {\n      if ((input2 & 0x7fffffff | input1) == 0) {\n        return combine_unsigned_ints(input2,input1);\n      }\n      temp_var3 = input2 & 0xfffff | input1;\n      index = ((int)input2 >> 0x1f) * -8;\n      temp_var2 = *(undefined4 *)(&DAT_08007430 + index);\n      temp_var4 = *(undefined4 *)(&DAT_08007434 + index);\n      result = FUN_0800016c(input1,(-temp_var3 | temp_var3) >> 0xc & 0x80000 | input2 & 0xfffe0000,temp_var2,\n                           temp_var4,input1,input2,input3);\n      result = FUN_08000168((int)result,(int)((ulonglong)result >> 0x20),temp_var2,temp_var4);\n      return combine_unsigned_ints((uint)((ulonglong)result >> 0x20) & 0x7fffffff | input2 & 0x80000000,\n                      (int)result);\n    }\n    temp_var7 = 0xfffff >> (temp_var6 & 0xff);\n    if ((input2 & temp_var7 | input1) == 0) {\n      return combine_unsigned_ints(input2,input1);\n    }\n    temp_var7 = temp_var7 >> 1;\n    temp_var5 = input2 & temp_var7 | input1;\n    if (temp_var5 != 0) {\n      if (temp_var6 == 0x13) {\n        temp_var5 = 0x80000000;\n      }\n      else {\n        temp_var5 = 0;\n      }\n      temp_var3 = 0x40000 >> (temp_var6 & 0xff) | input2 & ~temp_var7;\n    }\n  }\n  else {\n    if (0x33 < (int)temp_var6) {\n      if (temp_var6 != 0x400) {\n        return combine_unsigned_ints(input2,input1);\n      }\n      result = FUN_0800016c();\n      return result;\n    }\n    temp_var7 = temp_var7 - 0x413;\n    temp_var6 = 0xffffffff >> (temp_var7 & 0xff);\n    if ((input1 & temp_var6) == 0) {\n      return combine_unsigned_ints(input2,input1);\n    }\n    temp_var6 = temp_var6 >> 1;\n    temp_var5 = input1;\n    if ((input1 & temp_var6) != 0) {\n      temp_var5 = 0x40000000 >> (temp_var7 & 0xff) | input1 & ~temp_var6;\n    }\n  }\n  index = ((int)input2 >> 0x1f) * -8;\n  temp_var2 = *(undefined4 *)(&DAT_08007430 + index);\n  temp_var4 = *(undefined4 *)(&DAT_08007434 + index);\n  result = FUN_0800016c(temp_var5,temp_var3,temp_var2,temp_var4,input1,input2,input3);\n  result = FUN_08000168((int)result,(int)((ulonglong)result >> 0x20),temp_var2,temp_var4);\n  return result;\n}\n\n",
            "current_name": "calculate_result_080070b0",
            "entrypoint": "0x080070b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "CONCAT44": "combine_unsigned_ints",
                "FUN_080070b0": "calculate_result_080070b0",
                "iVar1": "index",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "uVar2": "temp_var2",
                "uVar3": "temp_var3",
                "uVar4": "temp_var4",
                "uVar5": "temp_var5",
                "uVar6": "temp_var6",
                "uVar7": "temp_var7",
                "uVar8": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080071c0": {
            "additional_data": {
                "0x1a56e1f": {
                    "constant2": 1
                },
                "0x3c9000000": {
                    "constant3": 1
                },
                "0x7e37e43c": {
                    "constant5": 1
                },
                "0x8800759c": {
                    "constant4": 1
                },
                "0xc2f8f359": {
                    "constant1": 1
                },
                "FUNC_0800729c": {
                    "additional_operation": 1,
                    "another_function": 1,
                    "calculate_exponent": 1,
                    "calculate_integer_value": 1,
                    "calculate_values": 1,
                    "handle_overflow": 1,
                    "helper_function": 1,
                    "helper_function2": 1,
                    "perform_calculation": 1,
                    "perform_operation": 3,
                    "process": 1,
                    "sub_function": 1,
                    "transform": 1
                },
                "FUNK_0800729c": {
                    "downgrade_result": 1
                },
                "FUN_0800016c": {
                    "calculate_double_value": 1,
                    "reverse": 1,
                    "reverse_bits": 2,
                    "reverse_logic": 1,
                    "reverse_operation": 4
                },
                "FUN_080004d0": {
                    "additional_helper_function": 1,
                    "calculate_float_value_2": 1,
                    "calculate_result": 3,
                    "compute": 1,
                    "compute_result": 2,
                    "floating_point_operation": 1,
                    "helper_function": 1,
                    "helper_function1": 1,
                    "perform_float_operation": 1,
                    "perform_operation": 2,
                    "process": 1,
                    "some_other_function": 1
                },
                "FUN_080071c0": {
                    "calculate_float_value": 6,
                    "calculate_floating_point": 2,
                    "calculate_floating_point_value": 4,
                    "calculate_result": 4,
                    "convert_to_float": 1,
                    "decode_and_calculate": 1,
                    "decode_and_transform": 1,
                    "perform_calculation": 1
                },
                "LAB_080071ec": {
                    "handle_case_a": 1,
                    "handle_less": 1,
                    "label_a": 1
                },
                "LAB_08007210": {
                    "check_exponent": 1,
                    "handle_shift_zero": 1,
                    "label_b": 1,
                    "skip_logic": 1
                },
                "LAB_0800722e": {
                    "calculate_final_result": 1,
                    "handle_case_b": 1,
                    "handle_greater": 1,
                    "label_c": 1
                },
                "iVar3": {
                    "adjusted_value": 1,
                    "computed_exponent": 1,
                    "modified_exponent": 1,
                    "modified_value": 1,
                    "new_shift_amount": 1,
                    "offset": 1,
                    "offset_sum": 1,
                    "result": 1,
                    "result2": 2,
                    "sum": 5,
                    "sum_value": 1,
                    "sum_variable": 1,
                    "temp": 1,
                    "temp2": 2,
                    "temp_value_2": 1,
                    "temp_var2": 1,
                    "temp_var3": 1,
                    "temp_var_2": 1,
                    "total_count": 1,
                    "total_exponent": 1,
                    "updated_count": 1,
                    "updated_shift_amount": 2,
                    "var2": 1
                },
                "param_1": {
                    "exponent_bits": 1,
                    "first_param": 1,
                    "float_part1": 1,
                    "input1": 15,
                    "input_1": 2,
                    "input_int_1": 1,
                    "input_param1": 2,
                    "input_param_1": 1,
                    "input_value1": 1,
                    "input_value_1": 2,
                    "integer_part": 4
                },
                "param_2": {
                    "float_part2": 1,
                    "fraction_bits": 1,
                    "fraction_part": 2,
                    "fractional_part": 2,
                    "input2": 15,
                    "input_2": 2,
                    "input_int_2": 1,
                    "input_param2": 2,
                    "input_param_2": 1,
                    "input_value2": 1,
                    "input_value_2": 2,
                    "second_param": 1
                },
                "param_3": {
                    "constant_offset": 1,
                    "count": 4,
                    "counter": 1,
                    "exponent": 4,
                    "input3": 1,
                    "input_3": 1,
                    "input_param3": 2,
                    "input_param_3": 1,
                    "int_param": 1,
                    "iteration_count": 1,
                    "modifier": 3,
                    "offset": 2,
                    "parameter": 1,
                    "shift_amount": 5,
                    "third_param": 1,
                    "threshold": 1,
                    "value": 1
                },
                "param_4": {
                    "additional_param": 1,
                    "constant": 12,
                    "constant_value": 1,
                    "data": 1,
                    "flag": 1,
                    "fourth_param": 1,
                    "input4": 1,
                    "input_4": 1,
                    "input_param4": 2,
                    "input_param_4": 1,
                    "magic_number": 1,
                    "option": 1,
                    "param4": 1,
                    "parameter": 1,
                    "placeholder": 1,
                    "special": 1,
                    "undefined_value": 3
                },
                "uVar1": {
                    "bit_shifted_value": 1,
                    "shift": 1,
                    "shift_result": 1,
                    "shifted_bits": 2,
                    "shifted_count": 2,
                    "shifted_float_part2": 1,
                    "shifted_fraction": 3,
                    "shifted_fractional_part": 1,
                    "shifted_input": 2,
                    "shifted_input2": 6,
                    "shifted_input_2": 1,
                    "shifted_value": 9,
                    "temp_var1": 1
                },
                "uVar2": {
                    "constant1": 1,
                    "mask1": 1,
                    "mask_value": 1,
                    "new_upper32_bits": 1,
                    "result": 1,
                    "result1": 7,
                    "result_low": 2,
                    "result_part_1": 1,
                    "temp1": 2,
                    "temp_value1": 1,
                    "temp_value_1": 2,
                    "temp_var1": 3,
                    "temp_var2": 1,
                    "temp_var_1": 1,
                    "temp_variable1": 1,
                    "temporary_value_1": 1,
                    "value_1": 1,
                    "var1": 3
                },
                "uVar3": {
                    "temp_var3": 1
                },
                "uVar4": {
                    "constant1": 1,
                    "constant2": 1,
                    "constant_value": 1,
                    "mask2": 1,
                    "new_lower32_bits": 1,
                    "result2": 5,
                    "result3": 2,
                    "result_high": 2,
                    "result_part_2": 1,
                    "temp3": 2,
                    "temp_value2": 1,
                    "temp_value_2": 1,
                    "temp_value_3": 1,
                    "temp_var2": 2,
                    "temp_var3": 1,
                    "temp_var4": 1,
                    "temp_var_3": 1,
                    "temp_variable2": 1,
                    "temporary_value_2": 1,
                    "value_2": 1,
                    "var2": 2,
                    "var3": 1
                },
                "uVar5": {
                    "high_32_bits": 1,
                    "high_bits": 5,
                    "high_input": 1,
                    "high_order_bits": 1,
                    "high_part": 2,
                    "input1_upper": 1,
                    "input2_high": 1,
                    "input_1_upper": 1,
                    "original_high_part": 1,
                    "result3": 1,
                    "shifted_result1": 1,
                    "shifted_value2": 1,
                    "temp4": 1,
                    "temp_var5": 1,
                    "temp_variable3": 1,
                    "upper32_bits": 1,
                    "upper32bits": 1,
                    "upper_32_bits": 1,
                    "upper_bits": 5,
                    "upper_float_part2": 1,
                    "upper_input1": 1,
                    "upper_part": 1
                },
                "uVar6": {
                    "combined_input": 1,
                    "combined_inputs": 2,
                    "combined_value": 3,
                    "combined_var": 1,
                    "concatenated_value": 1,
                    "final_result": 3,
                    "result": 17,
                    "result_combined": 1,
                    "result_value": 1,
                    "result_var": 1
                }
            },
            "called": [
                "FUN_0800016c",
                "FUN_0800729c",
                "FUN_080004d0"
            ],
            "calling": [
                "FUN_08006228"
            ],
            "code": "\nundefined8 calculate_floating_point_value_080071c0(uint input1,uint input2,int shift_amount,undefined4 constant)\n\n{\n  uint shifted_value;\n  undefined4 result1;\n  int sum;\n  undefined4 result2;\n  uint upper_bits;\n  undefined8 result;\n  \n  result = CONCAT44(input2,input1);\n  shifted_value = (input2 << 1) >> 0x15;\n  if (shifted_value == 0) {\n    if ((input2 & 0x7fffffff | input1) == 0) {\n      return result;\n    }\n    result = FUN_080004d0(input1,input2,0,0x43500000);\n    if (-0xc351 < shift_amount) {\n      shifted_value = ((uint)((int)((ulonglong)result >> 0x20) << 1) >> 0x15) - 0x36;\n      goto skip_logic;\n    }\nhandle_less:\n    result1 = 0xc2f8f359;\n    result2 = 0x1a56e1f;\n  }\n  else {\n    if (shifted_value == 0x7ff) {\n      result = FUN_0800016c(input1,input2,input1,input2,constant);\n      return result;\n    }\nskip_logic:\n    upper_bits = (uint)((ulonglong)result >> 0x20);\n    result1 = (undefined4)result;\n    sum = shifted_value + shift_amount;\n    if (sum < 0x7ff) {\n      if (0 < sum) {\n        return CONCAT44(upper_bits & 0x800fffff | sum * 0x100000,result1);\n      }\n      if (sum + 0x35 < 0 == SCARRY4(sum,0x35)) {\n        result = CONCAT44(upper_bits & 0x800fffff | (sum + 0x36) * 0x100000,result1);\n        result1 = 0;\n        result2 = 0x3c900000;\n        goto handle_greater;\n      }\n      if (shift_amount < 0xc351) {\n        result = FUNC_0800729c(0xc2f8f359,0x1a56e1f,result1,upper_bits);\n        goto handle_less;\n      }\n    }\n    result = FUNC_0800729c(0x8800759c,0x7e37e43c,result1,upper_bits);\n    result1 = 0x8800759c;\n    result2 = 0x7e37e43c;\n  }\nhandle_greater:\n  result = FUN_080004d0((int)result,(int)((ulonglong)result >> 0x20),result1,result2);\n  return result;\n}\n\n",
            "current_name": "calculate_floating_point_value_080071c0",
            "entrypoint": "0x080071c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080071c0": "calculate_floating_point_value_080071c0",
                "LAB_080071ec": "handle_less",
                "LAB_08007210": "skip_logic",
                "LAB_0800722e": "handle_greater",
                "iVar3": "sum",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "shift_amount",
                "param_4": "constant",
                "uVar1": "shifted_value",
                "uVar2": "result1",
                "uVar4": "result2",
                "uVar5": "upper_bits",
                "uVar6": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800729c": {
            "called": [],
            "calling": [
                "FUN_080071c0"
            ],
            "code": "\nvoid FUNC_0800729c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800729c",
            "entrypoint": "0x0800729c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800729c": "FUNC_0800729c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080072ac": {
            "additional_data": {
                "DAT_200001c0": {
                    "config_value": 1,
                    "data": 10,
                    "data_pointer": 1,
                    "data_value": 3,
                    "data_variable": 1,
                    "global_variable": 1,
                    "global_variable_value": 1,
                    "result": 2,
                    "return_value": 1
                },
                "FUN_080072ac": {
                    "get_config_value": 1,
                    "get_dat_value": 1,
                    "get_data": 11,
                    "get_data_from_memory": 1,
                    "get_data_from_variable": 1,
                    "get_data_pointer": 1,
                    "get_data_value": 11,
                    "get_global_variable": 1,
                    "get_global_variable_value": 1,
                    "get_return_value": 1,
                    "get_some_data": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005bc8",
                "FUN_08005854",
                "FUN_08005900"
            ],
            "code": "\nundefined4 get_data_value_080072ac(void)\n\n{\n  return DAT_200001c0;\n}\n\n",
            "current_name": "get_data_value_080072ac",
            "entrypoint": "0x080072ac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080072ac": "get_data_value_080072ac"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080072b8": {
            "additional_data": {
                "DAT_200002b4": {
                    "accumulated_value": 1,
                    "base_pointer": 2,
                    "current_pointer": 4,
                    "current_ptr": 1,
                    "current_value": 3,
                    "data_block": 1,
                    "data_pointer": 4,
                    "data_ptr": 3,
                    "global_pointer": 1,
                    "pointer": 4,
                    "sum": 1
                },
                "DAT_200016a0": {
                    "default_accumulated_value": 1,
                    "default_data": 1,
                    "default_data_block": 1,
                    "default_data_pointer": 2,
                    "default_data_ptr": 1,
                    "default_pointer": 4,
                    "default_value": 3,
                    "initial_pointer": 2
                },
                "FUN_080072b8": {
                    "accumulate_value": 1,
                    "add_offset_to_data": 2,
                    "add_offset_to_pointer": 4,
                    "add_value_to_data_block": 1,
                    "add_value_to_pointer": 1,
                    "increase_data_pointer": 1,
                    "increase_pointer": 1,
                    "increment_data_pointer": 2,
                    "increment_pointer": 4,
                    "increment_pointer_by_offset": 1,
                    "increment_sum": 1,
                    "update_data": 2,
                    "update_data_offset": 1,
                    "update_data_pointer": 2,
                    "update_data_ptr": 1,
                    "update_global_pointer": 1,
                    "update_pointer_offset": 1,
                    "update_pointer_with_offset": 1,
                    "update_value": 2,
                    "update_value_by_param": 1
                },
                "param_1": {
                    "amount": 6,
                    "increment": 2,
                    "increment_amount": 1,
                    "increment_value": 2,
                    "offset": 11,
                    "offset_increment": 1,
                    "value": 3,
                    "value_to_add": 5
                }
            },
            "called": [],
            "calling": [
                "FUN_0800581c"
            ],
            "code": "\nvoid increment_data_pointer_080072b8(int offset)\n\n{\n  if (DAT_200002b4 == (undefined *)0x0) {\n    DAT_200002b4 = &DAT_200016a0;\n  }\n  DAT_200002b4 = DAT_200002b4 + offset;\n  return;\n}\n\n",
            "current_name": "increment_data_pointer_080072b8",
            "entrypoint": "0x080072b8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080072b8": "increment_data_pointer_080072b8",
                "param_1": "offset"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080072d4": {
            "called": [],
            "calling": [
                "FUN_08000110",
                "FUN_08000134",
                "FUN_08004fb4"
            ],
            "code": "\nvoid FUNC_080072d4(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080072d4",
            "entrypoint": "0x080072d4",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080072d4": "FUNC_080072d4"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080072e0": {
            "called": [],
            "calling": [],
            "code": "\nvoid FUNC_080072e0(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080072e0",
            "entrypoint": "0x080072e0",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080072e0": "FUNC_080072e0"
            },
            "skipped": true,
            "tags": []
        },
        "entry": {
            "called": [
                "FUN_080041ae",
                "FUN_08004fb4",
                "FUN_08004f10"
            ],
            "calling": [],
            "code": "\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined4 *)(iVar1 + 0x20000000) < &DAT_20000228; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x8007448);\n  }\n  for (puVar2 = &DAT_20000228; puVar2 < &DAT_200016a0; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_08004f10();\n  FUN_08004fb4();\n  UNRECOVERED_JUMPTABLE = (code *)0x8004f9a;\n  FUN_080041ae();\n                    /* WARNING: Could not recover jumptable at 0x08004f9a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "current_name": "entry",
            "entrypoint": "0x08004f68",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "thunk_FUN_0800115c": {
            "additional_data": {
                "DAT_20000244": {
                    "data": 5,
                    "data_from_memory": 1,
                    "data_value": 4,
                    "global_value": 1,
                    "global_variable": 3
                },
                "FUN_0800115c": {
                    "access_global_variable": 1,
                    "fetch_global_data": 1,
                    "get_dat_value": 1,
                    "get_data": 3,
                    "get_data_from_memory_helper": 1,
                    "get_data_helper": 1,
                    "get_data_internal": 2,
                    "get_global_data_internal": 1,
                    "get_global_variable": 2,
                    "get_global_variable_value": 1,
                    "get_local_variable": 1,
                    "retrieve_data": 2,
                    "retrieve_global_value": 2,
                    "retrieve_value": 1
                },
                "thunk_FUN_0800115c": {
                    "get_data": 10,
                    "get_data_from_address": 1,
                    "get_data_from_memory": 2,
                    "get_data_value": 5,
                    "get_global_data": 2,
                    "get_global_value": 2,
                    "get_global_variable": 8,
                    "get_global_variable_value": 1
                }
            },
            "called": [
                "FUN_0800115c"
            ],
            "calling": [
                "FUN_08002f28"
            ],
            "code": "\nundefined4 get_data_value_thunk_0800115c(void)\n\n{\n  return DAT_20000244;\n}\n\n",
            "current_name": "get_data_value_thunk_0800115c",
            "entrypoint": "0x08004f60",
            "imported": false,
            "improved": true,
            "renaming": {
                "thunk_FUN_0800115c": "get_data_value_thunk_0800115c"
            },
            "skipped": false,
            "tags": []
        },
        "thunk_FUN_08001168": {
            "called": [
                "FUN_08001168"
            ],
            "calling": [
                "FUN_08003298",
                "FUN_0800403c",
                "FUN_08004490",
                "FUN_08004028"
            ],
            "code": "\nvoid thunk_FUNC_08001168(void)\n\n{\n  return;\n}\n\n",
            "current_name": "thunk_FUNC_08001168",
            "entrypoint": "0x08004f64",
            "imported": false,
            "improved": false,
            "renaming": {
                "thunk_FUN_08001168": "thunk_FUNC_08001168"
            },
            "skipped": true,
            "tags": []
        },
        "thunk_FUN_08006070": {
            "additional_data": {
                "FUNC_0800708c": {
                    "perform_operations": 1
                },
                "FUN_08000168": {
                    "perform_calculation": 1
                },
                "FUN_0800016c": {
                    "handle_case1": 1
                },
                "FUN_08000724": {
                    "calculate_diff": 1
                },
                "FUN_08006d68": {
                    "handle_case2": 1
                },
                "iVar4": {
                    "diff": 3,
                    "diff_abs": 1,
                    "difference": 10,
                    "difference_exponents": 1,
                    "i_var4": 1,
                    "result4": 4,
                    "result_4": 2,
                    "shifted_diff": 1,
                    "temp2": 2,
                    "temp4": 3,
                    "temp_var": 1,
                    "value4": 1,
                    "variable4": 1
                },
                "param_1": {
                    "a": 1,
                    "exponent": 1,
                    "exponent1": 2,
                    "first_input": 1,
                    "input1": 14,
                    "input_1": 3,
                    "input_param1": 2,
                    "input_value1": 1,
                    "input_value_1": 1,
                    "num1": 1,
                    "number1": 1,
                    "operand1": 1,
                    "sign_1": 1,
                    "value1": 1
                },
                "param_2": {
                    "b": 1,
                    "exponent2": 1,
                    "input2": 14,
                    "input_2": 3,
                    "input_param2": 2,
                    "input_value2": 1,
                    "input_value_2": 1,
                    "mantissa1": 1,
                    "num2": 1,
                    "number2": 1,
                    "operand2": 1,
                    "second_input": 1,
                    "sign_2": 1,
                    "significand1": 1,
                    "value2": 1
                },
                "param_3": {
                    "c": 1,
                    "exponent2": 1,
                    "exponent_1": 1,
                    "input3": 14,
                    "input_3": 3,
                    "input_param3": 2,
                    "input_value3": 1,
                    "input_value_3": 1,
                    "mantissa1": 1,
                    "mantissa2": 1,
                    "num3": 1,
                    "number3": 1,
                    "operand3": 1,
                    "third_input": 1,
                    "value3": 1
                },
                "param_4": {
                    "d": 1,
                    "exponent_2": 1,
                    "fourth_input": 1,
                    "input4": 14,
                    "input_4": 3,
                    "input_param4": 2,
                    "input_value4": 1,
                    "input_value_4": 1,
                    "mantissa2": 1,
                    "num4": 1,
                    "number4": 1,
                    "operand4": 1,
                    "sign": 1,
                    "significand2": 1,
                    "value4": 1
                },
                "thunk_FUN_08006070": {
                    "calculate_floating_point_number": 1,
                    "calculate_floating_point_result": 1,
                    "calculate_floating_point_value": 4,
                    "calculate_fp_numbers": 1,
                    "calculate_result": 4,
                    "calculate_special_value": 2,
                    "calculate_value": 5,
                    "check_floating_point_number": 1,
                    "evaluate_math_expression": 1,
                    "process_binary_function": 1,
                    "process_parameters": 1,
                    "reverse_math_operation": 1,
                    "reverse_thunk": 1
                },
                "uVar1": {
                    "lower32_bits": 1,
                    "result": 1,
                    "result1": 9,
                    "result32": 1,
                    "result4": 1,
                    "result_1": 3,
                    "result_low": 3,
                    "result_var1": 1,
                    "return_val1": 1,
                    "temp1": 3,
                    "temp_value1": 1,
                    "value1": 1,
                    "variable1": 1
                },
                "uVar2": {
                    "bits": 1,
                    "bitwise_or": 1,
                    "condition_flag": 1,
                    "condition_var1": 1,
                    "flag": 7,
                    "result2": 4,
                    "result_2": 2,
                    "result_high": 1,
                    "shift_result": 1,
                    "shifted_bits": 1,
                    "shifted_flags": 1,
                    "shifted_mantissa": 1,
                    "shifted_sign_2": 1,
                    "shifted_value": 1,
                    "sign_bit": 1,
                    "temp2": 3,
                    "u_var2": 1,
                    "value2": 1,
                    "variable2": 1
                },
                "uVar3": {
                    "abs_b": 1,
                    "abs_input2": 1,
                    "abs_significand1": 1,
                    "abs_value2": 1,
                    "condition_var2": 1,
                    "exponent1_abs": 1,
                    "input2_cleared": 1,
                    "param_2_masked": 1,
                    "parsed_num1": 1,
                    "result3": 4,
                    "result_3": 2,
                    "second_input_masked": 1,
                    "shifted_sign": 1,
                    "shifted_sign_1": 1,
                    "temp": 1,
                    "temp1": 2,
                    "temp3": 3,
                    "u_var3": 2,
                    "value2": 1,
                    "value3": 1,
                    "variable3": 1
                },
                "uVar5": {
                    "abs_d": 1,
                    "abs_exponent_2": 1,
                    "abs_input4": 1,
                    "abs_significand2": 1,
                    "abs_value4": 1,
                    "absolute_value": 1,
                    "exponent2_abs": 1,
                    "fourth_input_masked": 1,
                    "input4_cleared": 1,
                    "masked_param4": 1,
                    "modified_param4": 1,
                    "param_4_masked": 2,
                    "parsed_num2": 1,
                    "result5": 4,
                    "result_5": 2,
                    "temp3": 2,
                    "temp5": 3,
                    "u_var5": 1,
                    "unsigned_sign": 1,
                    "value4": 1,
                    "value5": 1,
                    "variable5": 1
                },
                "uVar6": {
                    "computed_value1": 1,
                    "final_result": 4,
                    "final_result_low": 1,
                    "output": 2,
                    "output1": 1,
                    "output_result": 1,
                    "result": 11,
                    "result1": 2,
                    "result2": 3,
                    "result64": 1,
                    "result_2": 1,
                    "return_value": 1,
                    "value": 1
                },
                "uVar7": {
                    "computed_value2": 1,
                    "constant_value": 1,
                    "decimal_shifted_result": 1,
                    "final_result_high": 1,
                    "intermediate_result": 3,
                    "output2": 1,
                    "result2": 3,
                    "result3": 2,
                    "result6": 1,
                    "result64_2": 1,
                    "result_6": 1,
                    "temp": 2,
                    "temp4": 1,
                    "temp6": 2,
                    "temp_result": 7,
                    "u_var7": 2
                }
            },
            "called": [
                "FUN_08006070"
            ],
            "calling": [
                "FUN_08003330"
            ],
            "code": "\nundefined8 calculate_floating_point_value_thunk_08006070(uint input1,uint input2,uint input3,uint input4)\n\n{\n  undefined4 result1;\n  uint flag;\n  uint result3;\n  int difference;\n  uint result5;\n  undefined8 result;\n  undefined8 temp_result;\n  \n  result5 = input4 & 0x7fffffff;\n  if ((0x7ff00000 < (result5 | (-input3 | input3) >> 0x1f)) ||\n     (result3 = input2 & 0x7fffffff, 0x7ff00000 < (result3 | (-input1 | input1) >> 0x1f))) {\n    result = FUN_0800016c(input1,input2,input3,input4,input4);\n    return result;\n  }\n  if ((input4 + 0xc0100000 | input3) == 0) {\n    result = FUN_08006d68();\n    return result;\n  }\n  flag = (int)input4 >> 0x1e & 2U | input2 >> 0x1f;\n  if ((input1 | result3) == 0) {\n    if (flag == 2) {\n      return 0x400921fb54442d18;\n    }\n    if (flag != 3) {\n      return CONCAT44(input2,input1);\n    }\nLAB_0800613e:\n    result = 0xc00921fb54442d18;\n  }\n  else {\n    if ((input3 | result5) != 0) {\n      if (result5 == 0x7ff00000) {\n        if (result3 == 0x7ff00000) {\n          if (flag == 2) {\n            return 0x4002d97c7f3321d2;\n          }\n          if (flag == 3) {\n            return 0xc002d97c7f3321d2;\n          }\n          if (flag != 1) {\n            return 0x3fe921fb54442d18;\n          }\n          return 0xbfe921fb54442d18;\n        }\n        if (flag == 2) {\n          return 0x400921fb54442d18;\n        }\n        if (flag != 3) {\n          if (flag != 1) {\n            return 0;\n          }\n          return 0x8000000000000000;\n        }\n        goto LAB_0800613e;\n      }\n      if (result3 != 0x7ff00000) {\n        difference = (int)(result3 - result5) >> 0x14;\n        if (difference < 0x3d) {\n          if (((int)input4 < 0) && (difference + 0x3c < 0 != SCARRY4(difference,0x3c))) {\n            result = 0;\n          }\n          else {\n            FUN_08000724(input1,input2);\n            FUNC_0800708c();\n            result = FUN_08006d68();\n          }\n        }\n        else {\n          result = 0x3ff921fb54442d18;\n        }\n        difference = (int)((ulonglong)result >> 0x20);\n        result1 = (undefined4)result;\n        if (flag == 1) {\n          return CONCAT44(difference + -0x80000000,result1);\n        }\n        if (flag == 2) {\n          temp_result = FUN_08000168(result1,difference,0x33145c07,0x3ca1a626);\n          result = 0x400921fb54442d18;\n        }\n        else {\n          if (flag == 0) {\n            return result;\n          }\n          result = FUN_08000168(result1,difference,0x33145c07,0x3ca1a626);\n          temp_result = 0x400921fb54442d18;\n        }\n        result = FUN_08000168((int)result,(int)((ulonglong)result >> 0x20),(int)temp_result,\n                             (int)((ulonglong)temp_result >> 0x20));\n        return result;\n      }\n    }\n    if ((int)input2 < 0) {\n      result = 0xbff921fb54442d18;\n    }\n    else {\n      result = 0x3ff921fb54442d18;\n    }\n  }\n  return result;\n}\n\n",
            "current_name": "calculate_floating_point_value_thunk_08006070",
            "entrypoint": "0x080058fc",
            "imported": false,
            "improved": true,
            "renaming": {
                "iVar4": "difference",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "thunk_FUN_08006070": "calculate_floating_point_value_thunk_08006070",
                "uVar1": "result1",
                "uVar2": "flag",
                "uVar3": "result3",
                "uVar5": "result5",
                "uVar6": "result",
                "uVar7": "temp_result"
            },
            "skipped": false,
            "tags": []
        }
    },
    "layers": [
        [
            "FUN_08000110",
            "FUN_08000134",
            "FUN_08000150",
            "FUN_08000168",
            "FUN_0800016c",
            "FUN_08000404",
            "FUN_08000428",
            "FUN_080004d0",
            "FUN_080006ac",
            "FUN_08000724",
            "FUN_08000892",
            "FUN_08000904",
            "FUN_08000980",
            "FUN_08000990",
            "FUN_080009a0",
            "FUN_080009b4",
            "FUN_080009c8",
            "FUN_080009f0",
            "FUN_08000a04",
            "FUN_08000a30",
            "FUN_08000ad8",
            "FUN_08000adc",
            "FUN_08000c3c",
            "FUN_08000c44",
            "FUN_08000cec",
            "FUN_08000e54",
            "FUN_08000f9c",
            "FUN_08000ffc",
            "FUN_08001004",
            "FUN_08001014",
            "FUN_08001028",
            "FUN_08001050",
            "FUN_08001064",
            "FUN_08001078",
            "FUN_080010c4",
            "FUN_08001104",
            "FUN_08001128",
            "FUN_0800114c",
            "FUN_0800115c",
            "FUN_08001170",
            "FUN_08001194",
            "FUN_080011fc",
            "FUN_08001214",
            "FUN_08001240",
            "FUN_08001264",
            "FUN_08001424",
            "FUN_0800142e",
            "FUN_08001436",
            "FUN_08001460",
            "FUN_080014e2",
            "FUN_08001530",
            "FUN_080015e8",
            "FUN_080016f4",
            "FUN_08001754",
            "FUN_08001828",
            "FUN_08001938",
            "FUN_08001b58",
            "FUN_08002008",
            "FUN_0800209c",
            "FUN_08002214",
            "FUN_08002220",
            "FUN_08002250",
            "FUN_08002280",
            "FUN_080022d0",
            "FUN_08002324",
            "FUN_08002368",
            "FUN_080023d0",
            "FUN_08002404",
            "FUN_0800245c",
            "FUN_08002520",
            "FUN_08002538",
            "FUN_08002564",
            "FUN_080025a4",
            "FUN_080025e8",
            "FUN_08002724",
            "FUN_0800290c",
            "FUN_0800299a",
            "FUN_08002ad0",
            "FUN_08002b48",
            "FUN_08002bf0",
            "FUN_08002cb0",
            "FUN_08002d88",
            "FUN_08002ea0",
            "FUN_08002ec0",
            "FUN_08002ed4",
            "FUN_08002ee8",
            "FUN_08002f28",
            "FUN_08003034",
            "FUN_08003068",
            "FUN_08003298",
            "FUN_08003314",
            "FUN_08003320",
            "FUN_08003330",
            "FUN_08003eb0",
            "FUN_08003ec8",
            "FUN_08003f3c",
            "FUN_08003fc4",
            "FUN_08003fd0",
            "FUN_08003fdc",
            "FUN_08003fe8",
            "FUN_08003ff4",
            "FUN_08004028",
            "FUN_0800403c",
            "FUN_0800407c",
            "FUN_080040b8",
            "FUN_080040e8",
            "FUN_0800411c",
            "FUN_08004194",
            "FUN_080041ae",
            "FUN_080041c4",
            "FUN_0800426c",
            "FUN_08004300",
            "FUN_08004348",
            "FUN_08004384",
            "FUN_080043bc",
            "FUN_080043f0",
            "FUN_08004410",
            "FUN_08004434",
            "FUN_08004458",
            "FUN_08004490",
            "FUN_08004514",
            "FUN_0800458c",
            "FUN_0800483c",
            "FUN_08004a30",
            "FUN_08004a84",
            "FUN_08004c18",
            "FUN_08004c30",
            "FUN_08004c64",
            "FUN_08004c70",
            "FUN_08004c8c",
            "FUN_08004cac",
            "FUN_08004ccc",
            "FUN_08004d48",
            "FUN_08004d8c",
            "FUN_08004e14",
            "FUN_08004e7c",
            "FUN_08004f10",
            "thunk_FUN_0800115c",
            "FUN_08004fb4",
            "FUN_08004ffc",
            "FUN_08005044",
            "FUN_080050fc",
            "FUN_080052e4",
            "FUN_080053d4",
            "FUN_08005614",
            "FUN_08005630",
            "FUN_08005646",
            "FUN_0800567c",
            "FUN_08005714",
            "FUN_080057d0",
            "FUN_0800581c",
            "FUN_08005840",
            "FUN_08005854",
            "thunk_FUN_08006070",
            "FUN_08005900",
            "FUN_08005bc8",
            "FUN_08005c70",
            "FUN_08006070",
            "FUN_08006228",
            "FUN_08006c0c",
            "FUN_08006d68",
            "FUN_08007092",
            "FUN_0800709e",
            "FUN_080070a4",
            "FUN_080070b0",
            "FUN_080071c0",
            "FUN_080072ac",
            "FUN_080072b8"
        ]
    ],
    "locked_functions": [],
    "used_tokens": 749759
}