{
    "functions": {
        "FUN_0800010c": {
            "additional_data": {
                "DAT_20000160": {
                    "flag": 17,
                    "flag_variable": 3
                },
                "FUN_0800010c": {
                    "initialize_flag": 30,
                    "set_flag_if_not_set": 1
                },
                "param_1": {
                    "input": 18,
                    "input_param": 2,
                    "input_parameter": 2,
                    "input_value": 9
                }
            },
            "called": [
                "FUN_08007328"
            ],
            "calling": [],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08000118) */\n\nundefined4 initialize_flag_0800010c(undefined4 input)\n\n{\n  if ((char)DAT_20000160 == '\\0') {\n    DAT_20000160._0_1_ = '\\x01';\n  }\n  return input;\n}\n\n",
            "current_name": "initialize_flag_0800010c",
            "entrypoint": "0x0800010c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800010c": "initialize_flag_0800010c",
                "param_1": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000178": {
            "additional_data": {
                "FUN_08000178": {
                    "calculate_string_length": 1,
                    "count_characters": 1,
                    "find_end_of_string": 19,
                    "find_first_null_byte": 1,
                    "find_last_character": 1,
                    "find_null_terminator_position": 1,
                    "find_string_end": 1,
                    "find_string_length": 2,
                    "get_end_of_string": 1,
                    "get_string_length": 3
                },
                "cVar1": {
                    "character": 1,
                    "current_char": 15,
                    "current_char_value": 1,
                    "current_character": 12
                },
                "param_1": {
                    "input_string": 12,
                    "str": 7,
                    "string": 12
                },
                "pcVar2": {
                    "current_ptr": 1,
                    "next_char": 16,
                    "next_char_ptr": 3,
                    "next_character": 9,
                    "next_character_pointer": 1,
                    "next_character_ptr": 1
                },
                "pcVar3": {
                    "curr_char": 1,
                    "current_char": 7,
                    "current_char_ptr": 3,
                    "current_character": 3,
                    "current_character_ptr": 1,
                    "current_position": 8,
                    "current_ptr": 3,
                    "str_ptr": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_08005c96",
                "FUN_08005ce8"
            ],
            "code": "\nchar * find_end_of_string_08000178(char *string)\n\n{\n  char current_char;\n  char *next_char;\n  char *current_position;\n  \n  current_position = string;\n  do {\n    next_char = current_position + 1;\n    current_char = *current_position;\n    current_position = next_char;\n  } while (current_char != '\\0');\n  return next_char + (-1 - (int)string);\n}\n\n",
            "current_name": "find_end_of_string_08000178",
            "entrypoint": "0x08000178",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000178": "find_end_of_string_08000178",
                "cVar1": "current_char",
                "param_1": "string",
                "pcVar2": "next_char",
                "pcVar3": "current_position"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000190": {
            "additional_data": {
                "FUN_08000190": {
                    "binary_arithmetic": 1,
                    "calculate": 10,
                    "calculate_bitwise_operation": 1,
                    "calculate_unsigned_long_long": 1,
                    "calculate_unsigned_product": 1,
                    "perform_operation": 1,
                    "perform_unsigned_arithmetic": 2,
                    "reverse_bits": 1,
                    "reverse_bits_and_operate": 1,
                    "reverse_calculator": 1
                },
                "bVar1": {
                    "boolean1": 1
                },
                "bVar10": {
                    "sign_bit3": 1
                },
                "bVar11": {
                    "sign_bit4": 1
                },
                "bVar12": {
                    "carry_bool2": 1
                },
                "bVar13": {
                    "boolean7": 1,
                    "carry_bit_3": 1,
                    "check1": 1,
                    "cond1": 2,
                    "condition1": 5,
                    "flag1": 8,
                    "flag2": 1,
                    "flag_1": 1,
                    "is_ab_equal": 1,
                    "is_condition1": 1,
                    "is_equal": 1,
                    "is_temp2_negative": 1,
                    "is_zero": 3,
                    "is_zero1": 1,
                    "temp13": 1,
                    "temp_13": 1
                },
                "bVar14": {
                    "boolean8": 1,
                    "check2": 1,
                    "cond2": 2,
                    "condition": 2,
                    "condition2": 5,
                    "condition_1": 1,
                    "flag2": 8,
                    "flag3": 1,
                    "flag_2": 1,
                    "is_abcd_equal": 1,
                    "is_condition2": 1,
                    "is_zero": 1,
                    "is_zero2": 1,
                    "temp14": 1,
                    "temp_14": 1,
                    "temp_bool1": 2
                },
                "bVar15": {
                    "boolean9": 1,
                    "check3": 1,
                    "cond3": 2,
                    "condition3": 5,
                    "condition_2": 1,
                    "flag3": 6,
                    "flag4": 1,
                    "flag_3": 1,
                    "is_carry": 1,
                    "is_condition3": 1,
                    "is_negative": 2,
                    "is_right_shift_negative": 1,
                    "overflow": 2,
                    "temp15": 1,
                    "temp_15": 1,
                    "temp_bool2": 2,
                    "temp_flag2": 1
                },
                "bVar2": {
                    "boolean2": 1,
                    "carry": 11,
                    "carry1": 3,
                    "carry_bit": 1,
                    "carry_bit_1": 1,
                    "check1": 1,
                    "flag1": 1,
                    "temp2": 3,
                    "temp6": 1,
                    "temp_2": 1,
                    "temp_flag1": 1
                },
                "bVar3": {
                    "boolean3": 1
                },
                "bVar4": {
                    "boolean4": 1
                },
                "bVar5": {
                    "boolean5": 1
                },
                "bVar6": {
                    "boolean6": 1
                },
                "bVar7": {
                    "carry_bool": 1
                },
                "bVar8": {
                    "sign_bit1": 1
                },
                "bVar9": {
                    "sign_bit2": 1
                },
                "iVar1": {
                    "bit_count": 1,
                    "bits1": 1,
                    "index1": 2,
                    "shift1": 9,
                    "shift_amount_1": 2,
                    "shift_count1": 1,
                    "shifted_d_sign_bit": 1,
                    "shifted_input4": 2,
                    "shifted_var1": 1,
                    "temp1": 4,
                    "temp19": 1,
                    "temp4": 1,
                    "temp5": 1,
                    "temp7": 1,
                    "temp_1": 1
                },
                "iVar10": {
                    "temp28": 1
                },
                "iVar11": {
                    "temp29": 1
                },
                "iVar12": {
                    "temp30": 1
                },
                "iVar13": {
                    "temp31": 1
                },
                "iVar14": {
                    "temp32": 1
                },
                "iVar15": {
                    "temp33": 1
                },
                "iVar16": {
                    "temp34": 1
                },
                "iVar17": {
                    "shifted_masked_input4": 1,
                    "temp35": 1
                },
                "iVar18": {
                    "temp36": 1
                },
                "iVar19": {
                    "temp37": 1,
                    "temp_var6": 1
                },
                "iVar2": {
                    "shift_count2": 1,
                    "temp20": 1
                },
                "iVar20": {
                    "temp38": 1
                },
                "iVar21": {
                    "temp39": 1
                },
                "iVar22": {
                    "temp40": 1
                },
                "iVar23": {
                    "temp41": 1
                },
                "iVar24": {
                    "temp42": 1
                },
                "iVar25": {
                    "temp43": 1
                },
                "iVar26": {
                    "temp44": 1
                },
                "iVar27": {
                    "temp45": 1
                },
                "iVar28": {
                    "temp46": 1
                },
                "iVar29": {
                    "temp47": 1
                },
                "iVar3": {
                    "temp21": 1
                },
                "iVar30": {
                    "temp48": 1
                },
                "iVar31": {
                    "temp49": 1
                },
                "iVar32": {
                    "temp50": 1
                },
                "iVar33": {
                    "temp51": 1
                },
                "iVar34": {
                    "temp52": 1
                },
                "iVar35": {
                    "temp53": 1
                },
                "iVar36": {
                    "temp54": 1
                },
                "iVar37": {
                    "temp55": 1
                },
                "iVar38": {
                    "temp56": 1
                },
                "iVar39": {
                    "temp57": 1
                },
                "iVar4": {
                    "temp22": 1
                },
                "iVar40": {
                    "temp58": 1
                },
                "iVar41": {
                    "temp59": 1
                },
                "iVar42": {
                    "temp60": 1
                },
                "iVar43": {
                    "temp61": 1
                },
                "iVar44": {
                    "temp62": 1
                },
                "iVar45": {
                    "temp63": 1
                },
                "iVar5": {
                    "temp23": 1
                },
                "iVar6": {
                    "temp24": 1
                },
                "iVar7": {
                    "temp25": 1
                },
                "iVar8": {
                    "bits2": 1,
                    "index2": 2,
                    "shift": 1,
                    "shift2": 8,
                    "shift3": 1,
                    "shift_amount_2": 1,
                    "shift_amount_3": 1,
                    "shift_count": 1,
                    "shifted_b_sign_bit": 1,
                    "shifted_input2": 1,
                    "shifted_var2": 1,
                    "temp2": 1,
                    "temp26": 1,
                    "temp5": 1,
                    "temp6": 1,
                    "temp7": 1,
                    "temp8": 4,
                    "temp_8": 1
                },
                "iVar9": {
                    "temp27": 1
                },
                "param_1": {
                    "a": 1,
                    "input1": 21,
                    "input_1": 4,
                    "input_a": 1,
                    "num1": 2,
                    "x": 2
                },
                "param_2": {
                    "b": 1,
                    "input2": 21,
                    "input_2": 4,
                    "input_b": 1,
                    "num2": 2,
                    "y": 2
                },
                "param_3": {
                    "c": 1,
                    "input3": 21,
                    "input_3": 4,
                    "input_c": 1,
                    "num3": 2,
                    "z": 2
                },
                "param_4": {
                    "d": 1,
                    "input4": 21,
                    "input_4": 4,
                    "input_d": 1,
                    "num4": 2,
                    "w": 2
                },
                "uVar1": {
                    "xor_result": 1
                },
                "uVar10": {
                    "add_ab": 1,
                    "carry1": 1,
                    "input_1_modified": 1,
                    "loop_count": 1,
                    "operand2": 1,
                    "partial_result2": 1,
                    "prod3": 1,
                    "result2": 1,
                    "temp1": 1,
                    "temp10": 3,
                    "temp2": 3,
                    "temp3": 2,
                    "temp4": 3,
                    "temp5": 3,
                    "temp7": 1,
                    "temp_10": 1,
                    "temp_shift2": 1,
                    "temp_var1": 1,
                    "temp_var4": 1,
                    "value2": 2,
                    "value_2": 1
                },
                "uVar11": {
                    "add_abc": 1,
                    "carry_flag": 1,
                    "partial_result3": 1,
                    "remainder": 1,
                    "result2": 1,
                    "result3": 3,
                    "sum4": 1,
                    "sum_4": 1,
                    "temp11": 3,
                    "temp2": 1,
                    "temp3": 3,
                    "temp4": 3,
                    "temp5": 2,
                    "temp6": 2,
                    "temp8": 1,
                    "temp_11": 1,
                    "temp_shift3": 1,
                    "temp_var2": 1,
                    "temp_var5": 1,
                    "value3": 1,
                    "value_3": 1
                },
                "uVar12": {
                    "additional_temp": 1,
                    "carry2": 1,
                    "carry_bit_2": 1,
                    "left_shifted_add_ab": 1,
                    "partial_result4": 1,
                    "prod4": 1,
                    "result4": 3,
                    "sign_bit": 1,
                    "temp12": 3,
                    "temp3": 1,
                    "temp4": 3,
                    "temp5": 3,
                    "temp6": 2,
                    "temp7": 2,
                    "temp9": 1,
                    "temp_12": 1,
                    "temp_shift4": 1,
                    "temp_var3": 1,
                    "temp_var6": 1,
                    "value4": 1,
                    "value_4": 1
                },
                "uVar13": {
                    "carry3": 1,
                    "temp64": 1
                },
                "uVar14": {
                    "carry4": 1,
                    "temp65": 1
                },
                "uVar15": {
                    "overflow_bool": 1,
                    "temp66": 1
                },
                "uVar16": {
                    "shifted_masked_input2": 1,
                    "temp11": 1
                },
                "uVar17": {
                    "temp12": 1
                },
                "uVar18": {
                    "temp13": 1,
                    "temp_var5": 1
                },
                "uVar19": {
                    "temp14": 1
                },
                "uVar2": {
                    "shifted_param2": 1
                },
                "uVar20": {
                    "temp15": 1
                },
                "uVar21": {
                    "temp16": 1
                },
                "uVar22": {
                    "temp17": 1
                },
                "uVar23": {
                    "temp18": 1
                },
                "uVar3": {
                    "carry": 1,
                    "result1": 6,
                    "result_var1": 1,
                    "shifted_a": 1,
                    "shifted_input1": 1,
                    "shifted_param4": 1,
                    "sum1": 2,
                    "sum_1": 1,
                    "temp1": 8,
                    "temp2": 1,
                    "temp3": 3,
                    "temp6": 1,
                    "temp7": 1,
                    "temp_1": 1,
                    "temp_3": 1,
                    "temp_var4": 1
                },
                "uVar4": {
                    "carry1": 1,
                    "input_2_modified": 1,
                    "mask1": 1,
                    "prod1": 1,
                    "result2": 4,
                    "result_var2": 1,
                    "shifted_b": 1,
                    "shifted_input2": 1,
                    "shifted_num": 1,
                    "temp1": 2,
                    "temp2": 8,
                    "temp3": 1,
                    "temp4": 3,
                    "temp7": 1,
                    "temp8": 1,
                    "temp_2": 1,
                    "temp_4": 1,
                    "u": 1
                },
                "uVar5": {
                    "carry2": 1,
                    "mask2": 1,
                    "result2": 1,
                    "result3": 3,
                    "result_var3": 1,
                    "shift_amount_2": 1,
                    "shifted_c": 1,
                    "shifted_input3": 1,
                    "sum2": 1,
                    "temp2": 2,
                    "temp3": 8,
                    "temp4": 1,
                    "temp5": 3,
                    "temp8": 1,
                    "temp9": 1,
                    "temp_3": 1,
                    "temp_5": 1,
                    "u_var5": 1,
                    "v": 1
                },
                "uVar6": {
                    "a": 1,
                    "complement_d": 1,
                    "input2_shifted": 1,
                    "modified_input4": 1,
                    "modified_param4": 1,
                    "prod2": 1,
                    "result1": 5,
                    "result4": 1,
                    "result_1": 1,
                    "shift2": 1,
                    "shifted_input4": 1,
                    "sum_2": 1,
                    "temp1": 4,
                    "temp3": 2,
                    "temp4": 3,
                    "temp5": 1,
                    "temp6": 3,
                    "temp_6": 1,
                    "temp_var1": 1
                },
                "uVar7": {
                    "b": 1,
                    "complement_a": 1,
                    "input_3_modified": 1,
                    "modified_input2": 1,
                    "modified_param2": 1,
                    "result": 1,
                    "result2": 5,
                    "result5": 1,
                    "result_2": 1,
                    "sum2": 1,
                    "temp1": 1,
                    "temp2": 3,
                    "temp4": 2,
                    "temp5": 3,
                    "temp6": 1,
                    "temp7": 3,
                    "temp9": 1,
                    "temp_7": 1,
                    "temp_var2": 1,
                    "u_var7": 1
                },
                "uVar8": {
                    "modified_input1": 1,
                    "temp10": 1,
                    "temp5": 1
                },
                "uVar9": {
                    "carry_result": 1,
                    "modified_param2": 1,
                    "operand1": 1,
                    "partial_result1": 1,
                    "result1": 2,
                    "result2": 1,
                    "result4": 1,
                    "shifted_a_right": 1,
                    "shifted_input2": 1,
                    "sum3": 1,
                    "sum_3": 1,
                    "temp": 1,
                    "temp1": 3,
                    "temp2": 1,
                    "temp3": 2,
                    "temp4": 2,
                    "temp6": 1,
                    "temp9": 3,
                    "temp_9": 1,
                    "temp_shift1": 1,
                    "temp_var3": 1,
                    "value1": 2,
                    "value_1": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001814",
                "FUN_08005da8",
                "FUN_08001a66",
                "FUN_080016b4"
            ],
            "code": "\nulonglong calculate_unsigned_long_long_08000190(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int shift1;\n  byte carry;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint result1;\n  uint result2;\n  int shift2;\n  uint temp1;\n  uint temp10;\n  uint temp11;\n  uint temp12;\n  bool flag1;\n  bool flag2;\n  bool flag3;\n  \n  result1 = input4 ^ 0x80000000;\n  temp1 = input2 << 1;\n  input4 = input4 << 1;\n  flag1 = ((input2 ^ result1) & 0x7fffffff) == 0;\n  flag2 = flag1 && input1 == input3;\n  if (!flag1 || input1 != input3) {\n    flag2 = (temp1 | input1) == 0;\n  }\n  if (!flag2) {\n    flag2 = (input4 | input3) == 0;\n  }\n  shift2 = (int)temp1 >> 0x15;\n  if (!flag2) {\n    flag2 = shift2 == -1;\n  }\n  shift1 = (int)input4 >> 0x15;\n  if (!flag2) {\n    flag2 = shift1 == -1;\n  }\n  if (flag2) {\n    if (shift2 == -1 || shift1 == -1) {\n      temp1 = result1;\n      temp11 = input3;\n      if (shift2 == -1) {\n        temp1 = input2;\n        temp11 = input1;\n      }\n      if (shift2 != -1 || shift1 != -1) {\n        input3 = temp11;\n        result1 = temp1;\n      }\n      flag2 = (temp11 | temp1 << 0xc) == 0;\n      if (flag2) {\n        flag2 = (input3 | result1 << 0xc) == 0;\n      }\n      if (flag2) {\n        flag2 = temp1 == result1;\n      }\n      if (!flag2) {\n        temp1 = temp1 | 0x80000;\n      }\n      return CONCAT44(temp1,temp11);\n    }\n    if (((input2 ^ result1) & 0x7fffffff) != 0 || input1 != input3) {\n      if ((temp1 | input1) == 0) {\n        input1 = input3;\n        input2 = result1;\n      }\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != result1) {\n      return 0;\n    }\n    if (temp1 >> 0x15 == 0) {\n      flag2 = (input1 & 0x80000000) != 0;\n      result1 = input2 * 2 + (uint)flag2;\n      if (CARRY4(input2,input2) || CARRY4(input2 * 2,(uint)flag2)) {\n        result1 = result1 | 0x80000000;\n      }\n      return CONCAT44(result1,input1 << 1);\n    }\n    if (temp1 < 0xffc00000) {\n      return CONCAT44(input2 + 0x100000,input1);\n    }\n    input2 = input2 & 0x80000000;\nLAB_080003d4:\n    return (ulonglong)(input2 | 0x7ff00000) << 0x20;\n  }\n  temp1 = temp1 >> 0x15;\n  input4 = input4 >> 0x15;\n  temp11 = input4 - temp1;\n  flag2 = temp11 != 0;\n  if (input4 < temp1) {\n    temp11 = -temp11;\n  }\n  temp10 = input1;\n  result2 = input2;\n  if (flag2 && temp1 <= input4) {\n    temp1 = temp1 + temp11;\n    temp10 = input3;\n    result2 = result1;\n    input3 = input1;\n    result1 = input2;\n  }\n  if (0x36 < temp11) {\n    return CONCAT44(result2,temp10);\n  }\n  temp2 = result2 & 0xfffff | 0x100000;\n  if ((result2 & 0x80000000) != 0) {\n    flag2 = temp10 != 0;\n    temp10 = -temp10;\n    temp2 = -temp2 - (uint)flag2;\n  }\n  result2 = result1 & 0xfffff | 0x100000;\n  if ((result1 & 0x80000000) != 0) {\n    flag2 = input3 != 0;\n    input3 = -input3;\n    result2 = -result2 - (uint)flag2;\n  }\n  if (temp1 == temp11) {\n    result2 = result2 ^ 0x100000;\n    if (temp1 == 0) {\n      temp2 = temp2 ^ 0x100000;\n      temp1 = 1;\n    }\n    else {\n      temp11 = temp11 - 1;\n    }\n  }\n  result1 = -temp11 + 0x20;\n  if ((int)temp11 < 0x21) {\n    temp12 = input3 << (result1 & 0xff);\n    input3 = input3 >> (temp11 & 0xff);\n    temp1 = temp10 + input3;\n    temp3 = result2 << (result1 & 0xff);\n    result1 = temp1 + temp3;\n    temp2 = temp2 + CARRY4(temp10,input3) + ((int)result2 >> (temp11 & 0xff)) +\n            (uint)CARRY4(temp1,temp3);\n  }\n  else {\n    temp12 = result2 << (-temp11 + 0x40 & 0xff);\n    if (input3 != 0) {\n      temp12 = temp12 | 2;\n    }\n    result2 = (int)result2 >> (temp11 - 0x20 & 0xff);\n    result1 = temp10 + result2;\n    temp2 = temp2 + ((int)result2 >> 0x1f) + (uint)CARRY4(temp10,result2);\n  }\n  input2 = temp2 & 0x80000000;\n  temp11 = temp2;\n  if ((int)temp2 < 0) {\n    flag2 = temp12 == 0;\n    temp12 = -temp12;\n    temp11 = -result1;\n    result1 = -(uint)!flag2 - result1;\n    temp11 = -(uint)(flag2 <= temp11) - temp2;\n  }\n  if (0xfffff < temp11) {\n    temp10 = temp1 - 1;\n    if (0x1fffff < temp11) {\n      temp10 = temp11 & 1;\n      temp11 = temp11 >> 1;\n      carry = (byte)result1;\n      result1 = (uint)(temp10 != 0) << 0x1f | result1 >> 1;\n      temp12 = (uint)(carry & 1) << 0x1f | temp12 >> 1;\n      temp10 = temp1;\n      if (0xffbfffff < temp1 * 0x200000) goto LAB_080003d4;\n    }\nLAB_080002a0:\n    flag2 = 0x7fffffff < temp12;\n    if (temp12 == 0x80000000) {\n      flag2 = (result1 & 1) != 0;\n    }\n    return CONCAT44(temp11 + temp10 * 0x100000 + (uint)CARRY4(result1,(uint)flag2) | input2,\n                    result1 + flag2);\n  }\n  flag1 = (temp12 & 0x80000000) != 0;\n  temp12 = temp12 << 1;\n  temp10 = result1 * 2;\n  flag2 = CARRY4(result1,result1);\n  result1 = result1 * 2 + (uint)flag1;\n  temp11 = temp11 * 2 + (uint)(flag2 || CARRY4(temp10,(uint)flag1));\n  temp10 = temp1 - 2;\n  if ((temp11 & 0x100000) != 0) goto LAB_080002a0;\n  result2 = result1;\n  temp1 = temp11;\n  if (temp11 == 0) {\n    result2 = 0;\n    temp1 = result1;\n  }\n  shift2 = LZCOUNT(temp1);\n  if (temp11 == 0) {\n    shift2 = shift2 + 0x20;\n  }\n  temp11 = shift2 - 0xb;\n  flag3 = SBORROW4(temp11,0x20);\n  result1 = shift2 - 0x2b;\n  flag2 = (int)result1 < 0;\n  flag1 = result1 == 0;\n  if ((int)temp11 < 0x20) {\n    flag3 = SCARRY4(result1,0xc);\n    shift2 = shift2 + -0x1f;\n    flag2 = shift2 < 0;\n    flag1 = shift2 == 0;\n    result1 = temp11;\n    if (!flag1 && flag2 == flag3) {\n      result2 = temp1 << (temp11 & 0xff);\n      temp1 = temp1 >> (0xcU - shift2 & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (flag1 || flag2 != flag3) {\n    temp12 = 0x20 - result1;\n  }\n  temp1 = temp1 << (result1 & 0xff);\n  if (flag1 || flag2 != flag3) {\n    temp1 = temp1 | result2 >> (temp12 & 0xff);\n  }\n  if (flag1 || flag2 != flag3) {\n    result2 = result2 << (result1 & 0xff);\n  }\nLAB_08000318:\n  if ((int)temp11 <= (int)temp10) {\n    return CONCAT44(temp1 + (temp10 - temp11) * 0x100000 | input2,result2);\n  }\n  result1 = ~(temp10 - temp11);\n  if ((int)result1 < 0x1f) {\n    shift2 = result1 - 0x13;\n    if (shift2 != 0 && shift2 < 0 == SCARRY4(result1 - 0x1f,0xc)) {\n      return CONCAT44(temp2,result2 >> (0x20 - (0xcU - shift2) & 0xff) | temp1 << (0xcU - shift2 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    result1 = result1 + 1;\n    return CONCAT44(input2 | temp1 >> (result1 & 0xff),\n                    result2 >> (result1 & 0xff) | temp1 << (0x20 - result1 & 0xff));\n  }\n  return CONCAT44(temp2,temp1 >> (result1 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "current_name": "calculate_unsigned_long_long_08000190",
            "entrypoint": "0x08000190",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000190": "calculate_unsigned_long_long_08000190",
                "bVar1": "boolean1",
                "bVar13": "flag1",
                "bVar14": "flag2",
                "bVar15": "flag3",
                "bVar2": "carry",
                "iVar1": "shift1",
                "iVar8": "shift2",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "xor_result",
                "uVar10": "temp10",
                "uVar11": "temp11",
                "uVar12": "temp12",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar5": "temp3",
                "uVar6": "result1",
                "uVar7": "result2",
                "uVar9": "temp1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000194": {
            "additional_data": {
                "FUN_08000194": {
                    "calculate": 4,
                    "calculate_complement": 1,
                    "calculate_concatenation": 1,
                    "calculate_converted_value": 1,
                    "calculate_double_precision": 1,
                    "calculate_product": 1,
                    "calculate_result": 6,
                    "calculate_sum": 1,
                    "calculate_sum_and_shift": 1,
                    "calculate_unsigned_addition": 1,
                    "calculate_unsigned_divide": 1,
                    "perform_unsigned_arithmetic": 1,
                    "reverse_binary_operation": 1,
                    "reverse_bits": 1,
                    "reverse_operation": 1
                },
                "LZCOUNT": {
                    "leading_zero_count": 1
                },
                "bVar13": {
                    "bool1": 1,
                    "check1": 1,
                    "compare_result1": 2,
                    "condition1": 7,
                    "flag1": 2,
                    "flag_1": 2,
                    "input2_input4_equal": 1,
                    "inputs_equal": 2,
                    "is_diff_positive": 1,
                    "is_equal": 4,
                    "is_equal1": 2,
                    "is_equal_1": 1,
                    "is_equal_inputs": 1,
                    "is_zero": 2,
                    "same_sign": 1,
                    "temp13": 1
                },
                "bVar14": {
                    "bool2": 1,
                    "check2": 1,
                    "compare_result2": 2,
                    "condition1": 2,
                    "condition2": 7,
                    "condition_met": 1,
                    "equal_operands": 1,
                    "flag2": 2,
                    "flag_2": 2,
                    "is_diff_negative": 1,
                    "is_equal2": 1,
                    "is_equal_2": 1,
                    "is_neg": 1,
                    "is_negative": 1,
                    "is_zero": 4,
                    "is_zero_case": 1,
                    "result": 1,
                    "temp14": 1
                },
                "bVar15": {
                    "b_var15": 1,
                    "bool3": 1,
                    "borrow_bit": 1,
                    "carry2": 1,
                    "carry_flag": 1,
                    "check3": 1,
                    "compare_result3": 1,
                    "condition2": 1,
                    "condition3": 6,
                    "flag3": 2,
                    "flag_3": 2,
                    "is_borrow": 2,
                    "is_carry": 1,
                    "is_diff_zero": 1,
                    "is_negative": 6,
                    "subtract_result": 1,
                    "temp15": 1
                },
                "bVar2": {
                    "b_var2": 1,
                    "bit1": 1,
                    "bit_operand1": 1,
                    "bit_value": 1,
                    "carry": 11,
                    "carry1": 2,
                    "carry_bit": 1,
                    "carry_bit1": 2,
                    "carry_flag": 2,
                    "flag": 1,
                    "overflow1": 1,
                    "temp2": 1,
                    "temp_2": 1,
                    "var2": 1
                },
                "iVar1": {
                    "index1": 2,
                    "input4_shifted1_signed": 1,
                    "left_shift_amount1": 1,
                    "left_shifted_input_2": 1,
                    "shift1": 9,
                    "shift_amount_2": 1,
                    "shift_amount_operand2": 1,
                    "shift_value1": 1,
                    "shifted1": 1,
                    "shifted_b": 1,
                    "shifted_bit_4": 1,
                    "shifted_bits": 1,
                    "shifted_bits1": 2,
                    "shifted_input2": 1,
                    "shifted_input4_31": 1,
                    "shifted_right1": 1,
                    "temp1": 2,
                    "temp_1": 1,
                    "var1": 1
                },
                "iVar6": {
                    "divisor_shift_amount": 1,
                    "index2": 2,
                    "input2_shifted1_signed": 1,
                    "left_shift_amount2": 1,
                    "right_shifted_input_2": 1,
                    "shift2": 9,
                    "shift_amount_1": 1,
                    "shift_amount_operand4": 1,
                    "shift_value2": 1,
                    "shifted2": 1,
                    "shifted_bit_2": 1,
                    "shifted_bits2": 3,
                    "shifted_d_right_shift": 1,
                    "shifted_input2_31": 1,
                    "shifted_input4": 1,
                    "shifted_right2": 1,
                    "temp2": 1,
                    "temp6": 1,
                    "var6": 1
                },
                "param_1": {
                    "a": 4,
                    "divisor": 1,
                    "input1": 15,
                    "input_1": 5,
                    "num1": 1,
                    "operand1": 4,
                    "value1": 1
                },
                "param_2": {
                    "b": 4,
                    "dividend": 1,
                    "input2": 15,
                    "input_2": 5,
                    "num2": 1,
                    "operand2": 4,
                    "value2": 1
                },
                "param_3": {
                    "c": 4,
                    "input3": 15,
                    "input_3": 5,
                    "num3": 1,
                    "operand3": 4,
                    "quotient": 1,
                    "value3": 1
                },
                "param_4": {
                    "d": 4,
                    "input4": 15,
                    "input_4": 5,
                    "num4": 1,
                    "operand4": 4,
                    "remainder": 1,
                    "value4": 1
                },
                "uVar10": {
                    "abs_product2": 1,
                    "accum3": 1,
                    "diff": 3,
                    "diff2": 1,
                    "difference": 3,
                    "double_input4": 1,
                    "result2": 2,
                    "result_high": 1,
                    "result_param4": 1,
                    "shifted_addition_high": 1,
                    "shifted_input3": 1,
                    "shifted_num1": 1,
                    "shifted_result2": 1,
                    "temp10": 1,
                    "temp2": 1,
                    "temp3": 1,
                    "temp5": 2,
                    "temp_3": 1,
                    "temp_6": 1,
                    "u_var10": 2,
                    "updated_input_2": 1,
                    "v2": 1,
                    "var10": 1,
                    "y": 1
                },
                "uVar11": {
                    "accum4": 1,
                    "carry_bit2": 1,
                    "carry_temp": 1,
                    "dividend": 1,
                    "result1": 1,
                    "result3": 1,
                    "shifted_product1": 1,
                    "shifted_remainder": 1,
                    "shifted_sum3": 1,
                    "shifted_value3": 1,
                    "temp1": 2,
                    "temp11": 1,
                    "temp2": 2,
                    "temp3": 1,
                    "temp4": 5,
                    "temp6": 2,
                    "temp_4": 1,
                    "temp_6": 1,
                    "temp_7": 1,
                    "u_var11": 2,
                    "updated_input_1": 1,
                    "var11": 1,
                    "z": 1
                },
                "uVar12": {
                    "accum5": 1,
                    "addition_result5": 1,
                    "remainder": 1,
                    "result1": 1,
                    "result2": 1,
                    "result4": 1,
                    "result_a": 1,
                    "shifted_difference": 1,
                    "shifted_product2": 1,
                    "shifted_sum4": 1,
                    "sub_result": 1,
                    "sum1": 1,
                    "sum2": 1,
                    "temp": 1,
                    "temp12": 1,
                    "temp2": 2,
                    "temp3": 1,
                    "temp5": 4,
                    "temp7": 2,
                    "temp_5": 1,
                    "temp_7": 1,
                    "temp_8": 1,
                    "u_var12": 2,
                    "updated_input_3": 1,
                    "var12": 1
                },
                "uVar3": {
                    "addition1": 1,
                    "addition_low": 1,
                    "addition_result1": 1,
                    "divisor_left_shifted": 1,
                    "result1": 3,
                    "result_1": 1,
                    "shifted_a": 1,
                    "sum": 1,
                    "sum1": 4,
                    "temp1": 11,
                    "temp3": 1,
                    "temp_1": 2,
                    "u_var3": 1,
                    "var3": 1
                },
                "uVar4": {
                    "addition2": 1,
                    "carry_bit2": 1,
                    "carry_times2": 1,
                    "remainder_left_shifted": 1,
                    "result2": 3,
                    "result_2": 1,
                    "shifted_c": 1,
                    "shifted_left1": 1,
                    "shifted_result": 1,
                    "shifted_sum": 1,
                    "shifted_sum1": 1,
                    "sum2": 2,
                    "temp2": 10,
                    "temp4": 1,
                    "temp_2": 2,
                    "u_var4": 1,
                    "var4": 1
                },
                "uVar5": {
                    "addition_high": 1,
                    "addition_result2": 1,
                    "b_shifted": 1,
                    "carry2": 1,
                    "mask": 1,
                    "result_3": 1,
                    "shifted_d": 1,
                    "shifted_operand4": 1,
                    "shifted_result1": 1,
                    "sum2": 1,
                    "temp1": 4,
                    "temp3": 10,
                    "temp5": 1,
                    "temp_2": 1,
                    "temp_3": 2,
                    "u_var5": 2,
                    "var5": 1
                },
                "uVar7": {
                    "a_shifted": 1,
                    "dividend_left_shifted": 1,
                    "double_input1": 1,
                    "input2_shifted1": 1,
                    "product1": 1,
                    "shifted_b_right_shift": 1,
                    "shifted_input1": 2,
                    "shifted_input2": 6,
                    "shifted_input_2": 2,
                    "shifted_left2": 1,
                    "shifted_num2": 1,
                    "shifted_operand1": 1,
                    "shifted_operand2": 1,
                    "shifted_param2": 1,
                    "shifted_value2": 1,
                    "temp2": 1,
                    "temp4": 1,
                    "temp7": 1,
                    "temp_3": 1,
                    "temp_4": 1,
                    "u": 1,
                    "u1": 1,
                    "u_var7": 1,
                    "var7": 1
                },
                "uVar7_temp": {
                    "u1_temp": 1
                },
                "uVar8": {
                    "accum1": 1,
                    "addition_result3": 1,
                    "double_input2": 1,
                    "input1": 1,
                    "product2": 1,
                    "result_high": 1,
                    "shifted_input1": 2,
                    "shifted_input2": 2,
                    "shifted_input4": 3,
                    "shifted_input_4": 1,
                    "shifted_num4": 1,
                    "shifted_operand1": 1,
                    "shifted_operand2": 1,
                    "shifted_param4": 1,
                    "temp1": 1,
                    "temp2": 1,
                    "temp3": 1,
                    "temp5": 1,
                    "temp8": 1,
                    "temp_1": 1,
                    "temp_4": 1,
                    "temp_5": 1,
                    "u2": 1,
                    "u_var8": 1,
                    "v": 1,
                    "value1_temp": 1,
                    "var8": 1
                },
                "uVar9": {
                    "abs_product1": 1,
                    "accum2": 1,
                    "addition_result4": 1,
                    "double_input3": 1,
                    "input4_shifted1": 1,
                    "result1": 2,
                    "result_low": 2,
                    "result_param2": 1,
                    "result_temp": 1,
                    "shifted_input2": 1,
                    "shifted_input4": 2,
                    "shifted_input_4": 1,
                    "shifted_num3": 1,
                    "shifted_operand2": 1,
                    "shifted_result1": 1,
                    "shifted_result2": 1,
                    "shifted_temp": 1,
                    "sum_with_carry": 1,
                    "temp2": 1,
                    "temp4": 2,
                    "temp9": 1,
                    "temp_5": 1,
                    "u_var9": 1,
                    "updated_input_4": 1,
                    "v1": 1,
                    "var9": 1,
                    "x": 1
                },
                "uVar9_temp": {
                    "v1_temp": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0",
                "FUN_080016b4",
                "FUN_080015f8"
            ],
            "code": "\nulonglong calculate_result_08000194(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int shift1;\n  byte carry;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  int shift2;\n  uint shifted_input2;\n  uint shifted_input4;\n  uint result_low;\n  uint difference;\n  uint temp4;\n  uint temp5;\n  bool condition1;\n  bool condition2;\n  bool condition3;\n  \n  shifted_input2 = input2 << 1;\n  result_low = input4 << 1;\n  condition1 = ((input2 ^ input4) & 0x7fffffff) == 0;\n  condition2 = condition1 && input1 == input3;\n  if (!condition1 || input1 != input3) {\n    condition2 = (shifted_input2 | input1) == 0;\n  }\n  if (!condition2) {\n    condition2 = (result_low | input3) == 0;\n  }\n  shift2 = (int)shifted_input2 >> 0x15;\n  if (!condition2) {\n    condition2 = shift2 == -1;\n  }\n  shift1 = (int)result_low >> 0x15;\n  if (!condition2) {\n    condition2 = shift1 == -1;\n  }\n  if (condition2) {\n    if (shift2 == -1 || shift1 == -1) {\n      result_low = input4;\n      shifted_input2 = input3;\n      if (shift2 == -1) {\n        result_low = input2;\n        shifted_input2 = input1;\n      }\n      if (shift2 != -1 || shift1 != -1) {\n        input3 = shifted_input2;\n        input4 = result_low;\n      }\n      condition2 = (shifted_input2 | result_low << 0xc) == 0;\n      if (condition2) {\n        condition2 = (input3 | input4 << 0xc) == 0;\n      }\n      if (condition2) {\n        condition2 = result_low == input4;\n      }\n      if (!condition2) {\n        result_low = result_low | 0x80000;\n      }\n      return CONCAT44(result_low,shifted_input2);\n    }\n    if (((input2 ^ input4) & 0x7fffffff) != 0 || input1 != input3) {\n      if ((shifted_input2 | input1) == 0) {\n        input1 = input3;\n        input2 = input4;\n      }\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != input4) {\n      return 0;\n    }\n    if (shifted_input2 >> 0x15 == 0) {\n      condition2 = (input1 & 0x80000000) != 0;\n      result_low = input2 * 2 + (uint)condition2;\n      if (CARRY4(input2,input2) || CARRY4(input2 * 2,(uint)condition2)) {\n        result_low = result_low | 0x80000000;\n      }\n      return CONCAT44(result_low,input1 << 1);\n    }\n    if (shifted_input2 < 0xffc00000) {\n      return CONCAT44(input2 + 0x100000,input1);\n    }\n    input2 = input2 & 0x80000000;\nLAB_080003d4:\n    return (ulonglong)(input2 | 0x7ff00000) << 0x20;\n  }\n  shifted_input2 = shifted_input2 >> 0x15;\n  result_low = result_low >> 0x15;\n  difference = result_low - shifted_input2;\n  condition2 = difference != 0;\n  if (result_low < shifted_input2) {\n    difference = -difference;\n  }\n  shifted_input4 = input1;\n  temp3 = input2;\n  if (condition2 && shifted_input2 <= result_low) {\n    shifted_input2 = shifted_input2 + difference;\n    shifted_input4 = input3;\n    temp3 = input4;\n    input3 = input1;\n    input4 = input2;\n  }\n  if (0x36 < difference) {\n    return CONCAT44(temp3,shifted_input4);\n  }\n  result_low = temp3 & 0xfffff | 0x100000;\n  if ((temp3 & 0x80000000) != 0) {\n    condition2 = shifted_input4 != 0;\n    shifted_input4 = -shifted_input4;\n    result_low = -result_low - (uint)condition2;\n  }\n  temp3 = input4 & 0xfffff | 0x100000;\n  if ((input4 & 0x80000000) != 0) {\n    condition2 = input3 != 0;\n    input3 = -input3;\n    temp3 = -temp3 - (uint)condition2;\n  }\n  if (shifted_input2 == difference) {\n    temp3 = temp3 ^ 0x100000;\n    if (shifted_input2 == 0) {\n      result_low = result_low ^ 0x100000;\n      shifted_input2 = 1;\n    }\n    else {\n      difference = difference - 1;\n    }\n  }\n  temp5 = -difference + 0x20;\n  if ((int)difference < 0x21) {\n    temp4 = input3 << (temp5 & 0xff);\n    input3 = input3 >> (difference & 0xff);\n    temp1 = shifted_input4 + input3;\n    temp2 = temp3 << (temp5 & 0xff);\n    temp5 = temp1 + temp2;\n    result_low = result_low + CARRY4(shifted_input4,input3) + ((int)temp3 >> (difference & 0xff)) +\n            (uint)CARRY4(temp1,temp2);\n  }\n  else {\n    temp4 = temp3 << (-difference + 0x40 & 0xff);\n    if (input3 != 0) {\n      temp4 = temp4 | 2;\n    }\n    temp3 = (int)temp3 >> (difference - 0x20 & 0xff);\n    temp5 = shifted_input4 + temp3;\n    result_low = result_low + ((int)temp3 >> 0x1f) + (uint)CARRY4(shifted_input4,temp3);\n  }\n  input2 = result_low & 0x80000000;\n  difference = result_low;\n  if ((int)result_low < 0) {\n    condition2 = temp4 == 0;\n    temp4 = -temp4;\n    difference = -temp5;\n    temp5 = -(uint)!condition2 - temp5;\n    difference = -(uint)(condition2 <= difference) - result_low;\n  }\n  if (0xfffff < difference) {\n    shifted_input4 = shifted_input2 - 1;\n    if (0x1fffff < difference) {\n      result_low = difference & 1;\n      difference = difference >> 1;\n      carry = (byte)temp5;\n      temp5 = (uint)(result_low != 0) << 0x1f | temp5 >> 1;\n      temp4 = (uint)(carry & 1) << 0x1f | temp4 >> 1;\n      shifted_input4 = shifted_input2;\n      if (0xffbfffff < shifted_input2 * 0x200000) goto LAB_080003d4;\n    }\nLAB_080002a0:\n    condition2 = 0x7fffffff < temp4;\n    if (temp4 == 0x80000000) {\n      condition2 = (temp5 & 1) != 0;\n    }\n    return CONCAT44(difference + shifted_input4 * 0x100000 + (uint)CARRY4(temp5,(uint)condition2) | input2,\n                    temp5 + condition2);\n  }\n  condition1 = (temp4 & 0x80000000) != 0;\n  temp4 = temp4 << 1;\n  shifted_input4 = temp5 * 2;\n  condition2 = CARRY4(temp5,temp5);\n  temp5 = temp5 * 2 + (uint)condition1;\n  difference = difference * 2 + (uint)(condition2 || CARRY4(shifted_input4,(uint)condition1));\n  shifted_input4 = shifted_input2 - 2;\n  if ((difference & 0x100000) != 0) goto LAB_080002a0;\n  temp3 = temp5;\n  shifted_input2 = difference;\n  if (difference == 0) {\n    temp3 = 0;\n    shifted_input2 = temp5;\n  }\n  shift2 = leading_zero_count(shifted_input2);\n  if (difference == 0) {\n    shift2 = shift2 + 0x20;\n  }\n  temp5 = shift2 - 0xb;\n  condition3 = SBORROW4(temp5,0x20);\n  difference = shift2 - 0x2b;\n  condition2 = (int)difference < 0;\n  condition1 = difference == 0;\n  if ((int)temp5 < 0x20) {\n    condition3 = SCARRY4(difference,0xc);\n    shift2 = shift2 + -0x1f;\n    condition2 = shift2 < 0;\n    condition1 = shift2 == 0;\n    difference = temp5;\n    if (!condition1 && condition2 == condition3) {\n      temp3 = shifted_input2 << (temp5 & 0xff);\n      shifted_input2 = shifted_input2 >> (0xcU - shift2 & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (condition1 || condition2 != condition3) {\n    temp4 = 0x20 - difference;\n  }\n  shifted_input2 = shifted_input2 << (difference & 0xff);\n  if (condition1 || condition2 != condition3) {\n    shifted_input2 = shifted_input2 | temp3 >> (temp4 & 0xff);\n  }\n  if (condition1 || condition2 != condition3) {\n    temp3 = temp3 << (difference & 0xff);\n  }\nLAB_08000318:\n  if ((int)temp5 <= (int)shifted_input4) {\n    return CONCAT44(shifted_input2 + (shifted_input4 - temp5) * 0x100000 | input2,temp3);\n  }\n  difference = ~(shifted_input4 - temp5);\n  if ((int)difference < 0x1f) {\n    shift2 = difference - 0x13;\n    if (shift2 != 0 && shift2 < 0 == SCARRY4(difference - 0x1f,0xc)) {\n      return CONCAT44(result_low,temp3 >> (0x20 - (0xcU - shift2) & 0xff) | shifted_input2 << (0xcU - shift2 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    difference = difference + 1;\n    return CONCAT44(input2 | shifted_input2 >> (difference & 0xff),\n                    temp3 >> (difference & 0xff) | shifted_input2 << (0x20 - difference & 0xff));\n  }\n  return CONCAT44(result_low,shifted_input2 >> (difference - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "current_name": "calculate_result_08000194",
            "entrypoint": "0x08000194",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000194": "calculate_result_08000194",
                "LZCOUNT": "leading_zero_count",
                "bVar13": "condition1",
                "bVar14": "condition2",
                "bVar15": "condition3",
                "bVar2": "carry",
                "iVar1": "shift1",
                "iVar6": "shift2",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar10": "difference",
                "uVar11": "temp4",
                "uVar12": "temp5",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar5": "temp3",
                "uVar7": "shifted_input2",
                "uVar8": "shifted_input4",
                "uVar9": "result_low"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800040c": {
            "additional_data": {
                "0": {
                    "zero": 1
                },
                "0x432": {
                    "constant1": 1
                },
                "0x433": {
                    "constant2": 1
                },
                "CONCAT44": {
                    "combine_bits": 1,
                    "combine_numbers": 1,
                    "combine_result": 1,
                    "concatenate": 1,
                    "concatenate_u_int": 1
                },
                "FUN_0800040c": {
                    "bit_shift_and_concat": 1,
                    "bit_shift_operation": 1,
                    "calculate_result": 1,
                    "perform_bitwise_shift": 1,
                    "reverse_bits": 10,
                    "reverse_bits_and_shift": 1,
                    "reverse_opcode": 1,
                    "reverse_shift": 1,
                    "reversed_bits": 1,
                    "shift_and_combine": 1,
                    "shift_and_concat": 8,
                    "shift_and_concat_values": 1,
                    "shift_and_concatenate": 3
                },
                "LAB_08000318": {
                    "calculate_and_shift": 1,
                    "calculate_result": 1,
                    "compute_result": 1,
                    "end_of_function": 1,
                    "end_of_shift": 1,
                    "shift_and_combine": 1,
                    "shift_and_concat_values_cont": 1,
                    "shift_bits": 1,
                    "shift_complete": 1,
                    "shift_computation": 1,
                    "shift_result": 2
                },
                "NEW_NAME": {
                    "new_value": 1
                },
                "SBORROW4": {
                    "signed_borrow": 1
                },
                "SCARRY4": {
                    "is_subtraction_carry": 1,
                    "signed_carry": 1
                },
                "bVar5": {
                    "is_leading_zero": 1,
                    "is_less_than_zero": 3,
                    "is_negative": 24,
                    "is_non_negative_shift": 1,
                    "is_offset_negative": 1,
                    "negative_shift": 1
                },
                "bVar6": {
                    "is_equal_to_zero": 2,
                    "is_offset_zero": 1,
                    "is_zero": 26,
                    "is_zero_shift": 1,
                    "zero_shift": 1
                },
                "bVar7": {
                    "carry": 2,
                    "carry_check": 1,
                    "carry_flag": 2,
                    "has_borrow": 3,
                    "has_carry": 1,
                    "has_overflow": 1,
                    "is_borrow": 4,
                    "is_borrowed": 1,
                    "is_carry": 3,
                    "is_carrying": 1,
                    "is_negative_overflow": 1,
                    "is_overflow": 4,
                    "is_overflown": 1,
                    "is_shift_amount_valid": 1,
                    "is_shift_less_than32": 1,
                    "is_subtract": 1,
                    "overflow": 1,
                    "overflows": 1,
                    "shift_carry": 1
                },
                "iVar3": {
                    "bit_count": 8,
                    "common_length": 1,
                    "count": 5,
                    "input_bit_count": 1,
                    "leading_zero_count": 1,
                    "leading_zeroes": 1,
                    "leading_zeros": 9,
                    "leading_zeros_count": 1,
                    "lz_count": 1,
                    "lz_count_result": 1,
                    "lzcount_result": 1,
                    "negative_shift": 1
                },
                "in_r12": {
                    "complement_shift_amount": 1,
                    "mask": 1,
                    "remainder": 2,
                    "remaining": 1,
                    "remaining_bits": 16,
                    "remaining_shift": 1,
                    "remaining_shift_amount": 2,
                    "shift_amount": 2,
                    "shift_mask": 1,
                    "shifted": 1,
                    "shifted_bits": 1,
                    "temp1": 1,
                    "temp_value": 1
                },
                "initialShift": {
                    "0x15": 1
                },
                "leadingBits": {
                    "in_r12": 1
                },
                "newShift": {
                    "u_var2": 1
                },
                "param_1": {
                    "input": 19,
                    "input_num": 1,
                    "input_number": 4,
                    "input_value": 7
                },
                "param_1_out": {
                    "input_output": 1
                },
                "uVar1": {
                    "concat_result": 1,
                    "concatenated": 1,
                    "concatenated_value": 1,
                    "output": 1,
                    "output1": 1,
                    "result": 6,
                    "result1": 2,
                    "result_high": 2,
                    "shifted_num": 1,
                    "shifted_number": 2,
                    "shifted_output": 2,
                    "shifted_value": 7,
                    "upper_bits": 3,
                    "upper_half": 1
                },
                "uVar1_out": {
                    "concatenated_value_output": 1
                },
                "uVar2": {
                    "bit_count": 1,
                    "bit_offset": 1,
                    "lower_bits": 1,
                    "num_bits_shifted": 1,
                    "num_of_shifts": 1,
                    "result2": 2,
                    "shift": 1,
                    "shift_amount": 16,
                    "shift_value": 1,
                    "shifted_bits": 2
                },
                "uVar3": {
                    "concat_shift": 1
                },
                "uVar4": {
                    "add_value": 1,
                    "adjusted_bit_count": 1,
                    "adjusted_count": 2,
                    "adjusted_shift_amount": 1,
                    "bit_count": 1,
                    "constant": 1,
                    "final_shift": 1,
                    "final_shift_amount": 2,
                    "modified_shift_amount": 2,
                    "new_shift_amount": 1,
                    "shift": 1,
                    "shift_amount": 9,
                    "shifted_bit_count": 1,
                    "shifted_bits": 1,
                    "threshold": 1,
                    "total_bits": 3,
                    "total_shift": 2
                },
                "ulonglong": {
                    "ulonglong": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001814",
                "FUN_08005da8",
                "FUN_08001918",
                "FUN_08000cd0",
                "FUN_080015f8"
            ],
            "code": "\nulonglong reverse_bits_and_shift_0800040c(uint input)\n\n{\n  uint shifted_value;\n  uint shift_amount;\n  int leading_zeros;\n  uint shift_amount;\n  uint remaining_bits;\n  bool is_negative;\n  bool is_zero;\n  bool is_overflow;\n  \n  if (input == 0) {\n    return 0;\n  }\n  shifted_value = 0;\n  leading_zeros = LZCOUNT(input);\n  shift_amount = leading_zeros + 0x15;\n  is_overflow = signed_borrow(shift_amount,0x20);\n  shift_amount = leading_zeros - 0xb;\n  is_negative = (int)shift_amount < 0;\n  is_zero = shift_amount == 0;\n  if (shift_amount < 0x20) {\n    is_overflow = is_subtraction_carry(shift_amount,0xc);\n    is_negative = false;\n    is_zero = leading_zeros + 1 == 0;\n    shift_amount = shift_amount;\n    if (!is_zero && is_overflow == false) {\n      shifted_value = input << shift_amount;\n      input = input >> (0xcU - (leading_zeros + 1) & 0xff);\n      goto shift_result;\n    }\n  }\n  if (is_zero || is_negative != is_overflow) {\n    remaining_bits = 0x20 - shift_amount;\n  }\n  input = input << (shift_amount & 0xff);\n  if (is_zero || is_negative != is_overflow) {\n    input = input | 0U >> (remaining_bits & 0xff);\n  }\n  if (is_zero || is_negative != is_overflow) {\n    shifted_value = 0 << (shift_amount & 0xff);\n  }\nshift_result:\n  if (shift_amount < 0x433) {\n    return combine_bits(input + (0x432 - shift_amount) * 0x100000,shifted_value);\n  }\n  shift_amount = ~(0x432 - shift_amount);\n  if (0x1e < (int)shift_amount) {\n    return (ulonglong)(input >> (shift_amount - 0x1f & 0xff));\n  }\n  leading_zeros = shift_amount - 0x13;\n  if (leading_zeros == 0 || leading_zeros < 0 != is_subtraction_carry(shift_amount - 0x1f,0xc)) {\n    shift_amount = shift_amount + 1;\n    return combine_bits(input >> (shift_amount & 0xff),\n                    shifted_value >> (shift_amount & 0xff) | input << (0x20 - shift_amount & 0xff));\n  }\n  return (ulonglong)(shifted_value >> (0x20 - (0xcU - leading_zeros) & 0xff) | input << (0xcU - leading_zeros & 0xff));\n}\n\n",
            "current_name": "reverse_bits_and_shift_0800040c",
            "entrypoint": "0x0800040c",
            "imported": false,
            "improved": true,
            "renaming": {
                "CONCAT44": "combine_bits",
                "FUN_0800040c": "reverse_bits_and_shift_0800040c",
                "LAB_08000318": "shift_result",
                "SBORROW4": "signed_borrow",
                "SCARRY4": "is_subtraction_carry",
                "bVar5": "is_negative",
                "bVar6": "is_zero",
                "bVar7": "is_overflow",
                "iVar3": "leading_zeros",
                "in_r12": "remaining_bits",
                "param_1": "input",
                "uVar1": "shifted_value",
                "uVar2": "shift_amount",
                "uVar4": "shift_amount"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800042c": {
            "additional_data": {
                "0x80000000": {
                    "sign_bit": 1
                },
                "0x80000000ffffffff": {
                    "mask": 1
                },
                "CONCAT44": {
                    "result": 1
                },
                "FUN_0800042c": {
                    "bit_shift_and_concat": 1,
                    "bit_shift_and_concatenate": 1,
                    "bitshift_and_combine": 1,
                    "bitwise_shift": 4,
                    "bitwise_shift_and_concat": 4,
                    "bitwise_shift_and_concatenate": 1,
                    "calculate_shifted_concatenation": 1,
                    "calculate_shifted_value": 1,
                    "convert_to_fixed_point": 1,
                    "decode_and_extend": 1,
                    "reverse_bits": 10,
                    "reverse_bitwise_operation": 1,
                    "reverse_shift": 1,
                    "shift_and_concat": 2,
                    "shift_and_wrap": 1
                },
                "LAB_08000318": {
                    "calculate_output": 1,
                    "label": 1
                },
                "bVar7": {
                    "check_zeroes": 1,
                    "count_is_negative": 1,
                    "has_remaining_bits": 1,
                    "is_less_than_zero": 1,
                    "is_negative": 20,
                    "is_negative_shift": 2,
                    "is_negative_shift_amount": 1,
                    "is_positive_shift": 1,
                    "less_than_threshold": 1,
                    "need_right_shift": 1,
                    "shift_less_than_zero": 1
                },
                "bVar8": {
                    "count_is_zero": 1,
                    "equal_threshold": 1,
                    "is_zero": 22,
                    "is_zero_shift": 4,
                    "is_zero_shift_amount": 1,
                    "need_zero_shift": 1,
                    "shift_equal_zero": 1
                },
                "bVar9": {
                    "carry": 3,
                    "carry_bit": 1,
                    "carry_flag": 6,
                    "has_carry": 2,
                    "is_carry": 3,
                    "is_carry_set": 1,
                    "is_negative": 2,
                    "is_overflow": 3,
                    "is_overflow_shift": 1,
                    "need_left_shift": 1,
                    "overflow": 7,
                    "overflows": 1
                },
                "iVar4": {
                    "bit_count": 1,
                    "bit_diff": 1,
                    "clz_value": 1,
                    "count": 1,
                    "count2": 1,
                    "leading_zero_count": 1,
                    "leading_zeroes": 1,
                    "leading_zeros": 22,
                    "lz_count": 1,
                    "lzcount_result": 1
                },
                "in_r12": {
                    "bit_mask": 1,
                    "high_bits": 1,
                    "in_r12": 1,
                    "mask": 1,
                    "num_bits": 1,
                    "offset": 1,
                    "remainder": 1,
                    "remaining_bits": 16,
                    "remaining_shift": 1,
                    "shift_amount": 1,
                    "shift_mask": 1,
                    "temp": 2,
                    "temp_value": 1,
                    "temporary": 1
                },
                "in_r12_new": {
                    "remaining_bits_after_shift": 1
                },
                "param_1": {
                    "input": 23,
                    "input_num": 1,
                    "input_number": 1,
                    "input_value": 4,
                    "number": 1,
                    "value": 1
                },
                "uVar1": {
                    "bit_count": 4,
                    "count": 1,
                    "count1": 2,
                    "num_bits": 1,
                    "output": 1,
                    "result": 2,
                    "result1": 1,
                    "result_low": 1,
                    "result_lower": 1,
                    "shift": 1,
                    "shift_amount": 4,
                    "shift_amount1": 1,
                    "shift_count": 3,
                    "shift_left_count": 1,
                    "shifted_input": 2,
                    "shifted_result": 1,
                    "shifted_value": 4
                },
                "uVar10": {
                    "result": 1,
                    "result_shifted": 1
                },
                "uVar11": {
                    "result_extracted": 1,
                    "shifted_input": 1
                },
                "uVar12": {
                    "mask": 1
                },
                "uVar1_new": {
                    "concatenated_value": 1
                },
                "uVar2": {
                    "abs_input": 17,
                    "abs_input_num": 1,
                    "abs_input_number": 1,
                    "abs_input_value": 1,
                    "abs_value": 1,
                    "absolute_value": 3,
                    "input_abs": 1,
                    "positive_input": 2,
                    "result_high": 1,
                    "shifted_value": 1,
                    "temp1": 1,
                    "unsigned_input": 1
                },
                "uVar3": {
                    "bit_offset": 1,
                    "effective_shift_amount": 1,
                    "exponent": 1,
                    "extra_shift": 1,
                    "num_bits_to_shift": 1,
                    "pos_shift": 1,
                    "shift_amount": 18,
                    "shift_amount2": 1,
                    "shift_count": 3,
                    "shift_right_count": 1,
                    "shifted_mask": 1,
                    "temp2": 1
                },
                "uVar5": {
                    "adjusted_bit_count": 1,
                    "adjusted_bits": 1,
                    "adjusted_count": 2,
                    "adjusted_shift": 3,
                    "adjusted_shift_amount": 2,
                    "base_shift": 1,
                    "final_shift_count": 1,
                    "new_exponent": 1,
                    "normalized_shift": 1,
                    "original_shift": 1,
                    "shift_amount": 1,
                    "shift_threshold": 1,
                    "shifted_amount": 1,
                    "shifted_bits": 1,
                    "shifted_constant": 1,
                    "shifted_result": 1,
                    "shifted_result_plus": 1,
                    "shifted_value": 1,
                    "shifted_value_2": 1,
                    "target_zeros": 1,
                    "threshold": 1,
                    "total_bits": 5,
                    "total_shift": 1
                },
                "uVar6": {
                    "input_sign": 1,
                    "is_negative": 1,
                    "mask": 1,
                    "msb": 1,
                    "reserved_bit": 1,
                    "sign": 1,
                    "sign_bit": 23,
                    "sign_extension": 1,
                    "sign_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005da8",
                "FUN_08001918",
                "FUN_08000cd0"
            ],
            "code": "\nulonglong bit_shift_and_concat_0800042c(uint input)\n\n{\n  uint shifted_value;\n  uint abs_input;\n  uint shift_amount;\n  int leading_zeros;\n  uint total_bits;\n  uint sign_bit;\n  uint remaining_bits;\n  bool is_negative;\n  bool is_zero;\n  bool overflow;\n  \n  if (input == 0) {\n    return 0;\n  }\n  sign_bit = input & 0x80000000;\n  abs_input = input;\n  if ((int)sign_bit < 0) {\n    abs_input = -input;\n  }\n  shifted_value = 0;\n  leading_zeros = LZCOUNT(abs_input);\n  total_bits = leading_zeros + 0x15;\n  overflow = SBORROW4(total_bits,0x20);\n  shift_amount = leading_zeros - 0xb;\n  is_negative = (int)shift_amount < 0;\n  is_zero = shift_amount == 0;\n  if (total_bits < 0x20) {\n    overflow = SCARRY4(shift_amount,0xc);\n    is_negative = false;\n    is_zero = leading_zeros + 1 == 0;\n    shift_amount = total_bits;\n    if (!is_zero && overflow == false) {\n      shifted_value = abs_input << total_bits;\n      abs_input = abs_input >> (0xcU - (leading_zeros + 1) & 0xff);\n      goto label;\n    }\n  }\n  if (is_zero || is_negative != overflow) {\n    remaining_bits = 0x20 - shift_amount;\n  }\n  abs_input = abs_input << (shift_amount & 0xff);\n  if (is_zero || is_negative != overflow) {\n    abs_input = abs_input | 0U >> (remaining_bits & 0xff);\n  }\n  if (is_zero || is_negative != overflow) {\n    shifted_value = 0 << (shift_amount & 0xff);\n  }\nlabel:\n  if (total_bits < 0x433) {\n    return result(abs_input + (0x432 - total_bits) * 0x100000 | sign_bit,shifted_value);\n  }\n  shift_amount = ~(0x432 - total_bits);\n  if (0x1e < (int)shift_amount) {\n    return result(input,abs_input >> (shift_amount - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  leading_zeros = shift_amount - 0x13;\n  if (leading_zeros == 0 || leading_zeros < 0 != SCARRY4(shift_amount - 0x1f,0xc)) {\n    shift_amount = shift_amount + 1;\n    return result(sign_bit | abs_input >> (shift_amount & 0xff),\n                    shifted_value >> (shift_amount & 0xff) | abs_input << (0x20 - shift_amount & 0xff));\n  }\n  return result(input,shifted_value >> (0x20 - (0xcU - leading_zeros) & 0xff) | abs_input << (0xcU - leading_zeros & 0xff))\n         & 0x80000000ffffffff;\n}\n\n",
            "current_name": "bit_shift_and_concat_0800042c",
            "entrypoint": "0x0800042c",
            "imported": false,
            "improved": true,
            "renaming": {
                "CONCAT44": "result",
                "FUN_0800042c": "bit_shift_and_concat_0800042c",
                "LAB_08000318": "label",
                "bVar7": "is_negative",
                "bVar8": "is_zero",
                "bVar9": "overflow",
                "iVar4": "leading_zeros",
                "in_r12": "remaining_bits",
                "param_1": "input",
                "uVar1": "shifted_value",
                "uVar2": "abs_input",
                "uVar3": "shift_amount",
                "uVar5": "total_bits",
                "uVar6": "sign_bit"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080004f8": {
            "additional_data": {
                "FUN_080004f8": {
                    "calculate_binary_operation": 1,
                    "calculate_floating_point": 1,
                    "calculate_product": 6,
                    "calculate_result": 17,
                    "calculate_sum": 1,
                    "perform_calculation": 1,
                    "perform_operation": 1
                },
                "bVar10": {
                    "carry": 1,
                    "condition2": 6,
                    "flag2": 11,
                    "is_carry": 3,
                    "is_greater_than_zero": 1,
                    "is_negative": 4,
                    "is_overflow": 1,
                    "is_overflow1": 1,
                    "is_zero2": 1,
                    "overflow1": 1,
                    "tmp11": 1
                },
                "bVar11": {
                    "condition3": 6,
                    "flag3": 11,
                    "is_borrow": 1,
                    "is_negative": 4,
                    "is_overflow": 5,
                    "is_overflow2": 1,
                    "overflow2": 1,
                    "overflow_occurred": 1,
                    "tmp12": 1
                },
                "bVar9": {
                    "condition1": 6,
                    "flag1": 11,
                    "is_equal_zero": 1,
                    "is_zero": 11,
                    "is_zero1": 1,
                    "tmp10": 1
                },
                "iVar5": {
                    "exponent_sum": 1,
                    "i_var5": 1,
                    "result": 1,
                    "sum": 6,
                    "sum_inputs": 1,
                    "sum_upper": 1,
                    "temp2": 1,
                    "temp3": 11,
                    "temp5": 3,
                    "temp_sum": 1,
                    "tmp5": 1,
                    "var2": 1,
                    "var3": 1
                },
                "lVar2": {
                    "intermediate_value": 1,
                    "partial_result": 1,
                    "result2": 9,
                    "result64_bit_temp": 1,
                    "step2": 1,
                    "temp": 8,
                    "temp2": 4,
                    "temp5": 1,
                    "temp_result": 2,
                    "temp_value": 1,
                    "temp_var": 1,
                    "tmp2": 1
                },
                "param_1": {
                    "data1": 1,
                    "input1": 20,
                    "input_1": 1,
                    "num1": 2,
                    "param1": 1,
                    "user_input1": 1,
                    "value1": 3
                },
                "param_2": {
                    "exponent1": 1,
                    "input2": 20,
                    "input_2": 1,
                    "num2": 2,
                    "param2": 1,
                    "user_input2": 1,
                    "value1": 1,
                    "value2": 2
                },
                "param_3": {
                    "input3": 20,
                    "input_3": 1,
                    "num3": 2,
                    "param3": 1,
                    "user_input3": 1,
                    "value2": 2,
                    "value3": 2
                },
                "param_4": {
                    "exponent2": 1,
                    "input4": 20,
                    "input_4": 1,
                    "num4": 2,
                    "param4": 1,
                    "user_input4": 1,
                    "value3": 1,
                    "value4": 2
                },
                "uVar1": {
                    "input1_lo": 1,
                    "lower_product": 1,
                    "product": 5,
                    "result": 3,
                    "result1": 9,
                    "result64_bit": 1,
                    "result_high": 1,
                    "result_low": 2,
                    "step1": 1,
                    "temp1": 4,
                    "temp4": 1,
                    "temp_result": 1,
                    "tmp1": 1
                },
                "uVar12": {
                    "combined": 1,
                    "combined_input": 11,
                    "combined_inputs": 2,
                    "combined_params": 1,
                    "combined_value": 1,
                    "concatenated": 2,
                    "concatenated_input": 1,
                    "concatenated_inputs": 1,
                    "input12": 1,
                    "input_combined": 1,
                    "result": 6,
                    "temp10": 1,
                    "temp8": 1
                },
                "uVar3": {
                    "bitwise1": 1,
                    "input1_hi": 1,
                    "mantissa1": 1,
                    "mask1": 1,
                    "num1_upper": 1,
                    "result1": 1,
                    "result4": 1,
                    "result_high_modified": 1,
                    "result_low": 1,
                    "shifted_input1": 1,
                    "temp1": 11,
                    "temp3": 3,
                    "temp_high1": 1,
                    "tmp3": 1,
                    "u_var3": 2,
                    "upper32_bit": 1,
                    "var1": 1
                },
                "uVar4": {
                    "bit_shifted_input2": 1,
                    "bitwise2": 1,
                    "input2_hi": 1,
                    "mask2": 1,
                    "num2_upper": 1,
                    "result2": 1,
                    "result3": 1,
                    "result_high": 1,
                    "shifted_exponent1": 1,
                    "shifted_input2": 1,
                    "temp1": 1,
                    "temp2": 11,
                    "temp4": 3,
                    "temp_high2": 1,
                    "tmp4": 1,
                    "u_var4": 2,
                    "var1": 1,
                    "var2": 1
                },
                "uVar6": {
                    "diff": 1,
                    "mantissa2": 1,
                    "mul_lo": 1,
                    "result3": 1,
                    "temp1": 3,
                    "temp3": 2,
                    "temp4": 11,
                    "temp6": 3,
                    "temp_mul1": 1,
                    "temp_product1": 1,
                    "tmp6": 1,
                    "u_var5": 1,
                    "u_var6": 1,
                    "var1": 1,
                    "var3": 1,
                    "var4": 1
                },
                "uVar7": {
                    "bitwise4": 1,
                    "carry": 2,
                    "mask": 1,
                    "mul_hi": 1,
                    "result1": 1,
                    "result5": 1,
                    "shifted_exponent1_copy": 1,
                    "shifted_sum": 1,
                    "temp2": 1,
                    "temp4": 2,
                    "temp5": 1,
                    "temp6": 9,
                    "temp8": 3,
                    "temp_product2": 1,
                    "tmp8": 1,
                    "u_var7": 1,
                    "var3": 1,
                    "var5": 2
                },
                "uVar8": {
                    "bitwise5": 1,
                    "result2": 1,
                    "result6": 1,
                    "result_hi": 1,
                    "result_low_shifted": 1,
                    "result_upper": 1,
                    "shifted_exponent2_copy": 1,
                    "shifted_result": 1,
                    "temp3": 1,
                    "temp5": 2,
                    "temp6": 1,
                    "temp7": 9,
                    "temp9": 3,
                    "temp_shift": 1,
                    "tmp9": 1,
                    "u_var8": 2,
                    "var4": 1,
                    "var6": 2
                },
                "unaff_r5": {
                    "bitwise3": 1,
                    "input5": 1,
                    "num4_upper": 1,
                    "result4": 1,
                    "shifted_exponent2": 1,
                    "shifted_input4": 1,
                    "temp2": 1,
                    "temp5": 9,
                    "temp7": 3,
                    "temp_mul2": 1,
                    "tmp7": 1,
                    "unaff_r5": 1,
                    "var2": 1,
                    "var4": 1
                }
            },
            "called": [
                "FUN_080006d4"
            ],
            "calling": [
                "FUN_08001814",
                "FUN_08005da8",
                "FUN_08001918",
                "FUN_080016b4",
                "FUN_080015f8"
            ],
            "code": "\nulonglong calculate_result_080004f8(undefined4 input1,uint input2,uint input3,uint input4)\n\n{\n  ulonglong result1;\n  longlong result2;\n  uint temp1;\n  uint temp2;\n  int temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  bool flag1;\n  bool flag2;\n  bool flag3;\n  ulonglong combined_input;\n  \n  combined_input = CONCAT44(input2,input1);\n  temp6 = 0x7ff;\n  temp2 = input2 >> 0x14 & 0x7ff;\n  flag1 = temp2 == 0;\n  if (!flag1) {\n    temp5 = input4 >> 0x14 & 0x7ff;\n    flag1 = temp5 == 0;\n  }\n  if (!flag1) {\n    flag1 = temp2 == 0x7ff;\n  }\n  if (!flag1) {\n    flag1 = temp5 == 0x7ff;\n  }\n  if (flag1) {\n    combined_input = reverse_binary_operation_080006d4();\n  }\n  temp1 = (uint)(combined_input >> 0x20);\n  temp3 = temp2 + temp5;\n  temp2 = temp1 ^ input4;\n  temp1 = temp1 & ~(temp6 << 0x15);\n  input4 = input4 & ~(temp6 << 0x15);\n  flag1 = ((uint)combined_input | temp1 << 0xc) == 0;\n  if (!flag1) {\n    flag1 = (input3 | input4 << 0xc) == 0;\n  }\n  temp1 = temp1 | 0x100000;\n  input4 = input4 | 0x100000;\n  if (flag1) {\n    input3 = (uint)combined_input | input3;\n    input4 = (temp2 & 0x80000000 | temp1) ^ input4;\n    temp2 = temp6 >> 1;\n    flag3 = SBORROW4(temp3,temp2);\n    temp4 = temp3 - temp2;\n    flag1 = temp4 == 0;\n    temp1 = temp4;\n    if (!flag1 && (int)temp2 <= temp3) {\n      flag3 = SBORROW4(temp6,temp4);\n      temp1 = temp6 - temp4;\n      flag1 = temp6 == temp4;\n    }\n    if (!flag1 && (int)temp1 < 0 == flag3) {\n      input4 = input4 | temp4 * 0x100000;\n    }\n    if (!flag1 && (int)temp1 < 0 == flag3) {\n      return CONCAT44(input4,input3);\n    }\n    input4 = input4 | 0x100000;\n    temp6 = 0;\n    flag3 = SBORROW4(temp4,1);\n    temp4 = temp4 - 1;\n    flag1 = temp4 == 0;\n    temp2 = temp4;\n  }\n  else {\n    result1 = (combined_input & 0xffffffff) * (ulonglong)input3;\n    combined_input = (combined_input & 0xffffffff) * (ulonglong)input4 +\n             (ulonglong)temp1 * (ulonglong)input3 + (result1 >> 0x20);\n    temp7 = (uint)combined_input;\n    result2 = (ulonglong)temp1 * (ulonglong)input4 + (combined_input >> 0x20);\n    temp6 = (uint)result2;\n    temp1 = (uint)((ulonglong)result2 >> 0x20);\n    if ((int)result1 != 0) {\n      temp7 = temp7 | 1;\n    }\n    temp4 = (temp3 + -0x3ff) - (uint)(temp1 < 0x200);\n    if (temp1 < 0x200) {\n      flag1 = (temp7 & 0x80000000) != 0;\n      temp7 = temp7 << 1;\n      result2 = CONCAT44(temp1 * 2 + (uint)(CARRY4(temp6,temp6) || CARRY4(temp6 * 2,(uint)flag1)),\n                       temp6 * 2 + (uint)flag1);\n    }\n    input4 = temp2 & 0x80000000 | (int)((ulonglong)result2 >> 0x20) << 0xb | (uint)result2 >> 0x15;\n    input3 = (uint)result2 << 0xb | temp7 >> 0x15;\n    temp6 = temp7 * 0x800;\n    flag2 = 0xfc < temp4;\n    flag3 = SBORROW4(temp4,0xfd);\n    temp1 = temp4 - 0xfd;\n    flag1 = temp1 == 0;\n    temp2 = temp1;\n    if (flag2 && !flag1) {\n      flag2 = 0x6ff < temp1;\n      flag3 = SBORROW4(temp1,0x700);\n      temp2 = temp4 - 0x7fd;\n      flag1 = temp1 == 0x700;\n    }\n    if (!flag2 || flag1) {\n      flag1 = 0x7fffffff < temp6;\n      if (temp6 == 0x80000000) {\n        flag1 = (temp7 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(input4 + temp4 * 0x100000 + (uint)CARRY4(input3,(uint)flag1),input3 + flag1\n                     );\n    }\n  }\n  if (!flag1 && (int)temp2 < 0 == flag3) {\n    return (ulonglong)(input4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  flag2 = SCARRY4(temp4,0x36);\n  flag1 = (int)(temp4 + 0x36) < 0;\n  flag3 = temp4 == 0xffffffca;\n  if (flag3 || flag1 != flag2) {\n    input3 = 0;\n  }\n  if (flag3 || flag1 != flag2) {\n    input4 = input4 & 0x80000000;\n  }\n  if (flag3 || flag1 != flag2) {\n    return CONCAT44(input4,input3);\n  }\n  temp2 = -temp4;\n  temp1 = temp2 - 0x20;\n  if (0x1f < (int)temp2) {\n    temp4 = input3 >> (temp1 & 0xff) | input4 << (0x20 - temp1 & 0xff);\n    temp2 = (input4 >> (temp1 & 0xff) & ~((input4 & 0x80000000) >> (temp1 & 0xff))) -\n            ((int)temp4 >> 0x1f);\n    if ((temp6 | input3 << (0x20 - temp1 & 0xff) | temp4 << 1) == 0) {\n      temp2 = temp2 & ~(temp4 >> 0x1f);\n    }\n    return CONCAT44(input4,temp2) & 0x80000000ffffffff;\n  }\n  temp3 = temp2 - 0x14;\n  if (temp3 == 0 || temp3 < 0 != SCARRY4(temp1,0xc)) {\n    temp7 = input3 << (temp4 + 0x20 & 0xff);\n    temp1 = input3 >> (temp2 & 0xff) | input4 << (temp4 + 0x20 & 0xff);\n    temp4 = temp1 + -((int)temp7 >> 0x1f);\n    if ((temp6 | temp7 << 1) == 0) {\n      temp4 = temp4 & ~(temp7 >> 0x1f);\n    }\n    return CONCAT44((input4 & 0x80000000) +\n                    ((input4 & 0x7fffffff) >> (temp2 & 0xff)) +\n                    (uint)CARRY4(temp1,-((int)temp7 >> 0x1f)),temp4);\n  }\n  temp2 = 0xc - temp3;\n  temp4 = input3 << (temp2 & 0xff);\n  temp2 = input3 >> (0x20 - temp2 & 0xff) | input4 << (temp2 & 0xff);\n  temp1 = temp2 + -((int)temp4 >> 0x1f);\n  if ((temp6 | temp4 << 1) == 0) {\n    temp1 = temp1 & ~(temp4 >> 0x1f);\n  }\n  return CONCAT44((input4 & 0x80000000) + (uint)CARRY4(temp2,-((int)temp4 >> 0x1f)),temp1);\n}\n\n",
            "current_name": "calculate_result_080004f8",
            "entrypoint": "0x080004f8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080004f8": "calculate_result_080004f8",
                "bVar10": "flag2",
                "bVar11": "flag3",
                "bVar9": "flag1",
                "iVar5": "temp3",
                "lVar2": "result2",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result1",
                "uVar12": "combined_input",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar6": "temp4",
                "uVar7": "temp6",
                "uVar8": "temp7",
                "unaff_r5": "temp5"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080006d4": {
            "additional_data": {
                "FUN_080006d4": {
                    "binary_to_float": 1,
                    "bitwise_operation": 2,
                    "bitwise_shift_check": 1,
                    "calculate_bitwise": 1,
                    "calculate_bitwise_difference": 1,
                    "calculate_bitwise_result": 1,
                    "calculate_integer_bitwise_operations": 1,
                    "calculate_result": 3,
                    "calculate_xor_shift": 2,
                    "decode_unsigned_long_long": 1,
                    "extract_bit_range": 1,
                    "extract_bitwise_operations": 1,
                    "reverse_and_check": 1,
                    "reverse_binary_operation": 1,
                    "reverse_bits": 5,
                    "reverse_bitwise_operation": 1,
                    "reverse_bitwise_operations": 3
                },
                "bVar4": {
                    "boolean_result": 1,
                    "boolean_var1": 1,
                    "check_result": 1,
                    "flag": 2,
                    "flag_1": 1,
                    "is_zero": 24
                },
                "in_r12": {
                    "bit5": 4,
                    "bit_5": 1,
                    "constant": 1,
                    "constant1": 1,
                    "constant_mask": 1,
                    "in_register12": 1,
                    "mask": 2,
                    "mask_1": 1,
                    "mask_value": 1,
                    "temp2": 1,
                    "temp4": 1,
                    "temp5": 4,
                    "temp_2": 1,
                    "temp_4": 1,
                    "temp_5": 4,
                    "temp_d": 1,
                    "temp_var1": 1,
                    "tmp5": 1,
                    "updated_var4": 1,
                    "variable5": 1
                },
                "param_1": {
                    "first_input": 1,
                    "input1": 13,
                    "input_1": 9,
                    "input_a": 3,
                    "input_param1": 1,
                    "number1": 1,
                    "value1": 1,
                    "value_1": 1
                },
                "param_2": {
                    "input2": 13,
                    "input_2": 9,
                    "input_b": 3,
                    "input_param2": 1,
                    "number2": 1,
                    "second_input": 1,
                    "value2": 1,
                    "value_2": 1
                },
                "param_3": {
                    "input3": 13,
                    "input_3": 9,
                    "input_c": 3,
                    "input_param3": 1,
                    "number3": 1,
                    "third_input": 1,
                    "value3": 1,
                    "value_3": 1
                },
                "param_4": {
                    "fourth_input": 1,
                    "input4": 13,
                    "input_4": 9,
                    "input_d": 3,
                    "input_param4": 1,
                    "number4": 1,
                    "value4": 1,
                    "value_4": 1
                },
                "return": {
                    "result": 3
                },
                "uVar1": {
                    "bit1": 6,
                    "bit_1": 2,
                    "bit_value_1": 1,
                    "is_input_1_neg": 1,
                    "shifted_input1": 1,
                    "shifted_input_a": 1,
                    "temp1": 4,
                    "temp2": 1,
                    "temp3": 1,
                    "temp_1": 3,
                    "temp_2": 2,
                    "temp_3": 1,
                    "temp_a": 2,
                    "temp_value1": 1,
                    "tmp1": 1,
                    "updated_var1": 1,
                    "variable2": 1
                },
                "uVar10": {
                    "temp6": 1
                },
                "uVar2": {
                    "bit2": 1,
                    "bit3": 4,
                    "bit_3": 1,
                    "bit_value_2": 1,
                    "extracted_bits": 1,
                    "mask_shifted_input_4": 1,
                    "shifted_input_d": 1,
                    "temp2": 2,
                    "temp3": 4,
                    "temp4": 1,
                    "temp_2": 1,
                    "temp_3": 5,
                    "temp_4": 1,
                    "temp_b": 1,
                    "temp_c": 1,
                    "temp_shifted_input4": 1,
                    "tmp3": 1,
                    "updated_var2": 1,
                    "variable3": 1
                },
                "uVar3": {
                    "bit3": 2,
                    "bit4": 4,
                    "bit_4": 1,
                    "bit_value_3": 1,
                    "result": 1,
                    "result_a": 1,
                    "temp": 1,
                    "temp3": 2,
                    "temp4": 4,
                    "temp5": 1,
                    "temp_3": 1,
                    "temp_4": 5,
                    "temp_5": 1,
                    "temp_c": 1,
                    "temp_shifted_input2": 1,
                    "tmp4": 1,
                    "updated_var3": 1,
                    "variable4": 1
                },
                "uVar5": {
                    "shifted_result": 1
                },
                "uVar6": {
                    "carry_flag": 1
                },
                "unaff_r4": {
                    "bit2": 5,
                    "bit_2": 1,
                    "constant2": 1,
                    "shifted_b": 1,
                    "shifted_input2": 1,
                    "temp": 1,
                    "temp1": 3,
                    "temp2": 3,
                    "temp_1": 4,
                    "temp_2": 3,
                    "temp_e": 1,
                    "temp_var2": 1,
                    "tmp2": 1,
                    "unaffected_r4": 2,
                    "value_r4": 1,
                    "variable1": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080004f8"
            ],
            "code": "\nulonglong reverse_binary_operation_080006d4(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint bit1;\n  uint bit2;\n  uint temp_3;\n  uint temp_4;\n  uint temp_5;\n  bool is_zero;\n  \n  temp_3 = temp_5 & input4 >> 0x14;\n  if (bit2 != temp_5 && temp_3 != temp_5) {\n    is_zero = (input1 | input2 << 1) == 0;\n    if (!is_zero) {\n      is_zero = (input3 | input4 << 1) == 0;\n    }\n    if (is_zero) {\n      result (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n    }\n    if (bit2 == 0) {\n      temp_4 = input2 & 0x80000000;\n      do {\n        bit1 = input1 & 0x80000000;\n        input1 = input1 << 1;\n        input2 = input2 * 2 + (uint)(bit1 != 0);\n      } while ((input2 & 0x100000) == 0);\n      input2 = input2 | temp_4;\n      if (temp_3 != 0) {\n        result CONCAT44(input2,input1);\n      }\n    }\n    do {\n      temp_3 = input3 & 0x80000000;\n      input3 = input3 << 1;\n      input4 = input4 * 2 + (uint)(temp_3 != 0);\n    } while ((input4 & 0x100000) == 0);\n    result CONCAT44(input2,input1);\n  }\n  is_zero = (input1 | input2 << 1) == 0;\n  if (is_zero) {\n    input2 = input4;\n    input1 = input3;\n  }\n  if (!is_zero) {\n    is_zero = (input3 | input4 << 1) == 0;\n  }\n  temp_4 = input2;\n  if (((!is_zero) && ((bit2 != temp_5 || ((input1 | input2 << 0xc) == 0)))) &&\n     ((temp_3 != temp_5 || (input1 = input3, temp_4 = input4, (input3 | input4 << 0xc) == 0)))) {\n    result (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  result CONCAT44(temp_4,input1) | 0x7ff8000000000000;\n}\n\n",
            "current_name": "reverse_binary_operation_080006d4",
            "entrypoint": "0x080006d4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080006d4": "reverse_binary_operation_080006d4",
                "bVar4": "is_zero",
                "in_r12": "temp_5",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "return": "result",
                "uVar1": "bit1",
                "uVar2": "temp_3",
                "uVar3": "temp_4",
                "unaff_r4": "bit2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800074c": {
            "additional_data": {
                "FUN_0800074c": {
                    "calculate_float": 9,
                    "calculate_float_from_binary": 1,
                    "calculate_float_from_bits": 1,
                    "calculate_float_from_int": 1,
                    "calculate_float_from_parameters": 1,
                    "calculate_float_value": 6,
                    "calculate_floating_point": 1,
                    "calculate_floating_point_value": 2,
                    "calculate_ieee754_to_float": 1,
                    "convert_float_to_binary": 1,
                    "convert_float_to_integer": 1,
                    "convert_unsigned_to_float": 1,
                    "decode_float": 1,
                    "floating_point_conversion": 1,
                    "process_float": 1,
                    "reverse_float_bits": 1
                },
                "bVar14": {
                    "b1": 1,
                    "bool1": 2,
                    "boolean1": 1,
                    "check": 1,
                    "cond1": 1,
                    "condition1": 3,
                    "flag1": 7,
                    "is_equal": 1,
                    "is_equal1": 1,
                    "is_true": 2,
                    "is_zero": 10,
                    "temp_bool1": 1
                },
                "bVar15": {
                    "b2": 1,
                    "bool2": 2,
                    "boolean2": 1,
                    "cond2": 1,
                    "condition2": 3,
                    "equal_halves": 1,
                    "flag2": 7,
                    "is_equal": 9,
                    "is_equal2": 1,
                    "is_one": 1,
                    "is_result_zero": 1,
                    "is_zero": 2,
                    "temp_bool2": 1
                },
                "bVar16": {
                    "b3": 1,
                    "bool3": 2,
                    "carry": 3,
                    "carry_flag": 3,
                    "condition3": 3,
                    "flag3": 7,
                    "is_carry": 2,
                    "is_negative": 6,
                    "is_overflow": 1,
                    "overflow": 2,
                    "temp_bool3": 1
                },
                "bVar17": {
                    "b4": 1,
                    "carry_flag": 1,
                    "is_carry": 1,
                    "is_overflow": 1
                },
                "iVar8": {
                    "diff": 1,
                    "diff_exp": 1,
                    "difference": 14,
                    "exponent_diff": 2,
                    "exponent_diff_adjusted": 1,
                    "exponent_diff_result": 1,
                    "exponent_diff_temp": 1,
                    "exponent_difference": 1,
                    "i1": 1,
                    "result8": 1,
                    "temp8": 4,
                    "var8": 1
                },
                "param_1": {
                    "exponent_bits": 1,
                    "flags": 4,
                    "input": 1,
                    "input1": 6,
                    "input_flags": 1,
                    "param1": 1,
                    "sign": 4,
                    "sign_bit": 2,
                    "some_value": 1,
                    "value": 2,
                    "value1": 5,
                    "value_1": 1,
                    "var1": 2
                },
                "param_2": {
                    "exponent": 7,
                    "exponent_fraction_bits": 1,
                    "exponent_fraction_part": 1,
                    "float_bits": 1,
                    "higher_bits": 1,
                    "input2": 6,
                    "input_mantissa": 1,
                    "mantissa": 2,
                    "sign": 2,
                    "significand_bits": 1,
                    "value2": 5,
                    "value_2": 1,
                    "var2": 2
                },
                "param_3": {
                    "bits1": 1,
                    "exponent": 4,
                    "exponent_bits": 1,
                    "float_bits2": 1,
                    "frac_part1": 1,
                    "fraction": 1,
                    "fraction_high": 1,
                    "high_bits": 1,
                    "input3": 6,
                    "input_exponent": 1,
                    "mantissa": 2,
                    "mantissa_bits": 1,
                    "significand": 1,
                    "top_bits": 1,
                    "value3": 5,
                    "value_3": 1,
                    "var3": 2
                },
                "param_4": {
                    "bits2": 1,
                    "exponent": 1,
                    "float_bits3": 1,
                    "frac_part2": 1,
                    "fraction": 1,
                    "fraction2": 1,
                    "fraction_bits": 1,
                    "fraction_low": 1,
                    "input4": 6,
                    "input_sign": 1,
                    "lower_bits": 1,
                    "mantissa": 2,
                    "rounding_bits": 1,
                    "sign": 3,
                    "temp": 1,
                    "value4": 5,
                    "value_4": 1,
                    "var4": 2
                },
                "reverse_bits_to_float_080008ba": {
                    "reverse_bits": 1,
                    "reverse_bits_to_float": 1
                },
                "uVar1": {
                    "bit1": 1,
                    "bit_shifted_input": 1,
                    "bit_shifted_mantissa": 1,
                    "exponent_diff": 2,
                    "float_exponent": 1,
                    "is_sign_zero": 1,
                    "lower_significand": 1,
                    "mantissa1": 1,
                    "normalized_exp": 1,
                    "output_sign": 1,
                    "result1": 2,
                    "shifted_value1": 1,
                    "sign_bit": 2,
                    "significand": 1,
                    "temp1": 9,
                    "temp_1": 1,
                    "u1": 1,
                    "upper_bits": 1,
                    "value1": 1,
                    "var1": 1
                },
                "uVar10": {
                    "bit10": 1,
                    "bits1_adjustment": 1,
                    "calculated_mantissa": 1,
                    "exponent1_copy": 1,
                    "exponent2": 1,
                    "exponent_bits": 1,
                    "exponent_bits4": 1,
                    "exponent_input_adjusted": 1,
                    "exponent_result_shifted": 1,
                    "fraction2_abs": 1,
                    "ieee_exponent": 1,
                    "input_exp": 1,
                    "normalized_mantissa": 1,
                    "result10": 1,
                    "shifted_mask1": 1,
                    "shifted_value": 1,
                    "temp10": 5,
                    "temp11": 3,
                    "temp3": 1,
                    "temp5": 1,
                    "temp8": 1,
                    "temp_10": 1,
                    "temp_var6": 1,
                    "u9": 1,
                    "var11": 1
                },
                "uVar11": {
                    "adjusted_float": 1,
                    "bit11": 1,
                    "fraction_bits4": 1,
                    "fraction_combined": 1,
                    "ieee_fraction": 1,
                    "input_frac": 1,
                    "mantissa": 1,
                    "mantissa_bits": 1,
                    "mantissa_result": 1,
                    "output_mantissa": 1,
                    "result": 2,
                    "result1": 1,
                    "result11": 1,
                    "result_mantissa": 1,
                    "result_sign_shifted": 1,
                    "result_upper": 1,
                    "shifted_mantissa": 1,
                    "shifted_mantissa_adjusted": 1,
                    "temp11": 3,
                    "temp12": 3,
                    "temp4": 1,
                    "temp6": 1,
                    "temp9": 1,
                    "u10": 1,
                    "value2_lower": 1,
                    "var12": 1
                },
                "uVar12": {
                    "bit12": 1,
                    "calc_fraction_high": 1,
                    "diff_bits": 1,
                    "diff_frac": 1,
                    "difference": 1,
                    "difference2": 1,
                    "difference_shifted": 1,
                    "difference_upper": 1,
                    "exponent_result": 1,
                    "exponential": 1,
                    "fraction_difference": 1,
                    "remainder": 1,
                    "result12": 1,
                    "result2": 1,
                    "rounded_mantissa": 1,
                    "shifted_mantissa_diff": 1,
                    "subtract_temp": 1,
                    "temp12": 5,
                    "temp13": 3,
                    "temp5": 1,
                    "temp7": 1,
                    "temp_mantissa": 1,
                    "temp_var7": 1,
                    "u11": 1,
                    "var13": 1
                },
                "uVar13": {
                    "bit13": 1,
                    "calc_fraction_low": 1,
                    "carry": 1,
                    "exponent_mask": 1,
                    "flags": 1,
                    "is_zero": 1,
                    "mantissa_mask": 1,
                    "mask": 2,
                    "mask3": 1,
                    "max_value": 1,
                    "overflow": 1,
                    "overflow_check": 1,
                    "result": 2,
                    "result13": 1,
                    "rounding_mode": 1,
                    "temp13": 4,
                    "temp14": 3,
                    "temp6": 1,
                    "temp8": 1,
                    "temp_13": 1,
                    "temp_var8": 1,
                    "temp_variable": 1,
                    "u12": 1,
                    "var14": 1
                },
                "uVar17": {
                    "combined_params": 1,
                    "float_value": 4,
                    "result": 3,
                    "result14": 1,
                    "reverse_bits": 1,
                    "reverse_float": 1,
                    "reversed_bits": 3,
                    "reversed_float": 9,
                    "reversed_float_value": 1,
                    "reversed_value": 1,
                    "temp15": 1,
                    "temp_float_value": 1
                },
                "uVar18": {
                    "normalized_exponent": 1,
                    "temp5": 1,
                    "u13": 1
                },
                "uVar19": {
                    "mantissa_shift": 1,
                    "temp6": 1,
                    "u14": 1
                },
                "uVar2": {
                    "bit2": 1,
                    "bit_shifted_input2": 1,
                    "exponent": 1,
                    "exponent_bits": 2,
                    "exponent_input": 1,
                    "float_sign_bit": 1,
                    "is_exponent_zero": 1,
                    "lower_bits": 1,
                    "mantissa2": 1,
                    "normalized_frac": 1,
                    "output_exponent": 1,
                    "result2": 2,
                    "shifted_bits": 1,
                    "shifted_value2": 1,
                    "sign_bit": 1,
                    "temp2": 9,
                    "temp_2": 1,
                    "u2": 1,
                    "upper_significand": 1,
                    "value2": 1,
                    "var2": 1
                },
                "uVar20": {
                    "is_denormalized": 1,
                    "u15": 1
                },
                "uVar21": {
                    "shift_count": 1,
                    "u16": 1
                },
                "uVar22": {
                    "rounding_overflow": 1,
                    "u17": 1
                },
                "uVar23": {
                    "rounded_mantissa": 1,
                    "u18": 1
                },
                "uVar24": {
                    "rounding_bit": 1,
                    "u19": 1
                },
                "uVar25": {
                    "u20": 1
                },
                "uVar26": {
                    "u21": 1
                },
                "uVar27": {
                    "u22": 1
                },
                "uVar28": {
                    "u23": 1
                },
                "uVar29": {
                    "u24": 1
                },
                "uVar3": {
                    "bit3": 1,
                    "bits1": 1,
                    "exponent1": 1,
                    "exponent_diff_div2": 1,
                    "fraction_bits": 1,
                    "fraction_low": 1,
                    "is_sign_special": 1,
                    "output_mantissa": 1,
                    "result3": 2,
                    "rounding_bits_shifted": 1,
                    "shifted_exponent": 1,
                    "shifted_param3": 1,
                    "shifted_value3": 1,
                    "significand_bits": 1,
                    "temp": 1,
                    "temp1": 2,
                    "temp3": 9,
                    "temp_3": 1,
                    "u3": 1,
                    "value3": 1,
                    "var3": 1
                },
                "uVar30": {
                    "u25": 1
                },
                "uVar31": {
                    "u26": 1
                },
                "uVar32": {
                    "u27": 1
                },
                "uVar33": {
                    "u28": 1
                },
                "uVar34": {
                    "u29": 1
                },
                "uVar35": {
                    "u30": 1
                },
                "uVar36": {
                    "u31": 1
                },
                "uVar37": {
                    "u32": 1
                },
                "uVar38": {
                    "u33": 1
                },
                "uVar39": {
                    "u34": 1
                },
                "uVar4": {
                    "bit4": 1,
                    "bits2": 1,
                    "exponent2": 1,
                    "exponent_bits2": 1,
                    "exponent_mantissa_diff": 1,
                    "fraction_high": 1,
                    "is_exponent_special": 1,
                    "result4": 2,
                    "shifted_fraction_high": 1,
                    "shifted_param4": 1,
                    "shifted_value4": 1,
                    "temp1": 1,
                    "temp2": 2,
                    "temp4": 9,
                    "temp_4": 1,
                    "temp_var1": 1,
                    "top_bits_shifted": 1,
                    "u4": 1,
                    "value4": 1,
                    "var4": 1
                },
                "uVar40": {
                    "u35": 1
                },
                "uVar41": {
                    "u36": 1
                },
                "uVar42": {
                    "u37": 1
                },
                "uVar43": {
                    "u38": 1
                },
                "uVar44": {
                    "u39": 1
                },
                "uVar45": {
                    "u40": 1
                },
                "uVar46": {
                    "u41": 1
                },
                "uVar47": {
                    "u42": 1
                },
                "uVar48": {
                    "u43": 1
                },
                "uVar49": {
                    "u44": 1
                },
                "uVar5": {
                    "bit5": 1,
                    "exponent_mantissa_diff_div2": 1,
                    "fraction_bits2": 1,
                    "is_sign_infinity": 1,
                    "multiplier": 1,
                    "numerator": 1,
                    "result5": 2,
                    "shifted_fraction_low": 1,
                    "shifted_mantissa1": 1,
                    "shifted_significand": 1,
                    "shifted_temp": 1,
                    "temp1": 1,
                    "temp2": 1,
                    "temp3": 1,
                    "temp5": 9,
                    "temp_5": 1,
                    "temp_value1": 1,
                    "temp_var2": 1,
                    "u5": 1,
                    "value5": 1,
                    "var5": 1
                },
                "uVar50": {
                    "u45": 1
                },
                "uVar51": {
                    "u46": 1
                },
                "uVar52": {
                    "u47": 1
                },
                "uVar53": {
                    "u48": 1
                },
                "uVar54": {
                    "u49": 1
                },
                "uVar55": {
                    "u50": 1
                },
                "uVar56": {
                    "u51": 1
                },
                "uVar6": {
                    "bit6": 1,
                    "denominator": 1,
                    "divisor": 1,
                    "exponent_bits3": 1,
                    "is_exponent_infinity": 1,
                    "remainder_dividend": 1,
                    "result6": 2,
                    "shifted_mantissa": 2,
                    "shifted_mantissa2": 1,
                    "shifted_top_bits": 1,
                    "temp2": 1,
                    "temp3": 1,
                    "temp4": 1,
                    "temp6": 9,
                    "temp_6": 1,
                    "temp_value2": 1,
                    "temp_var3": 1,
                    "u6": 1,
                    "value6": 1,
                    "var6": 1
                },
                "uVar7": {
                    "bit7": 1,
                    "bits": 1,
                    "flag1": 1,
                    "flags": 1,
                    "flags_result": 1,
                    "float": 1,
                    "fraction_bits3": 1,
                    "higher_bits_masked": 1,
                    "mask1": 1,
                    "result": 1,
                    "result7": 2,
                    "result_flags": 1,
                    "result_sign": 3,
                    "temp3": 1,
                    "temp4": 1,
                    "temp7": 8,
                    "temp_7": 1,
                    "temp_var4": 1,
                    "u7": 1,
                    "value7": 1,
                    "var7": 1
                },
                "uVar8": {
                    "mantissa_result": 1
                },
                "uVar9": {
                    "bias": 1,
                    "biased_exponent": 1,
                    "calculated_exponent": 1,
                    "carry": 1,
                    "exponent": 1,
                    "exponent_adjusted": 2,
                    "exponent_adjustment": 1,
                    "exponent_bits": 1,
                    "exponent_diff": 1,
                    "exponent_result": 1,
                    "exponent_sum": 1,
                    "new_exponent": 1,
                    "normalized_exponent": 1,
                    "result9": 1,
                    "shifted_difference": 1,
                    "shifted_exp": 1,
                    "shifted_value": 1,
                    "shifted_value1": 1,
                    "temp1": 1,
                    "temp4": 1,
                    "temp7": 1,
                    "temp9": 5,
                    "temp_var5": 1,
                    "u8": 1,
                    "value2_upper": 1,
                    "var9": 1
                },
                "unaff_r5": {
                    "exponent2_copy": 1,
                    "fraction2_exponent": 1,
                    "fraction_exponent_samesign": 1,
                    "mantissa_diff": 1,
                    "mask2": 1,
                    "rhs_biased_exponent": 1,
                    "rounding_bits_result": 1,
                    "shifted_value2": 1,
                    "temp10": 3,
                    "temp2": 1,
                    "temp_exponent": 1,
                    "value_5": 1,
                    "var10": 1
                }
            },
            "called": [
                "FUN_080008ba"
            ],
            "calling": [
                "FUN_08001814",
                "FUN_08005da8",
                "FUN_08001918",
                "FUN_080015f8"
            ],
            "code": "\nulonglong calculate_float_value_0800074c(undefined4 input1,uint exponent,uint input3,uint input4)\n\n{\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  int difference;\n  uint temp9;\n  uint temp10;\n  uint temp10;\n  uint temp12;\n  uint temp12;\n  uint temp13;\n  bool is_zero;\n  bool is_equal;\n  bool flag3;\n  undefined8 reversed_float;\n  \n  reversed_float = CONCAT44(exponent,input1);\n  temp13 = 0x7ff;\n  temp7 = exponent >> 0x14 & 0x7ff;\n  is_zero = temp7 == 0;\n  if (!is_zero) {\n    temp10 = input4 >> 0x14 & 0x7ff;\n    is_zero = temp10 == 0;\n  }\n  if (!is_zero) {\n    is_zero = temp7 == 0x7ff;\n  }\n  if (!is_zero) {\n    is_zero = temp10 == 0x7ff;\n  }\n  if (is_zero) {\n    reversed_float = reverse_bits();\n  }\n  temp9 = (uint)((ulonglong)reversed_float >> 0x20);\n  temp12 = (uint)reversed_float;\n  difference = temp7 - temp10;\n  if ((input3 | input4 << 0xc) == 0) {\n    temp7 = (temp9 ^ input4) & 0x80000000 | temp9 & 0xfffff;\n    flag3 = SCARRY4(difference,temp13 >> 1);\n    temp9 = difference + (temp13 >> 1);\n    is_zero = (int)temp9 < 0;\n    is_equal = temp9 == 0;\n    if (!is_equal && is_zero == flag3) {\n      flag3 = SBORROW4(temp13,temp9);\n      is_zero = (int)(temp13 - temp9) < 0;\n      is_equal = temp13 == temp9;\n    }\n    if (!is_equal && is_zero == flag3) {\n      temp7 = temp7 | temp9 * 0x100000;\n    }\n    if (!is_equal && is_zero == flag3) {\n      return CONCAT44(temp7,temp12);\n    }\n    temp7 = temp7 | 0x100000;\n    temp13 = 0;\n    is_equal = SBORROW4(temp9,1);\n    temp9 = temp9 - 1;\n    is_zero = temp9 == 0;\n    temp3 = temp9;\n  }\n  else {\n    temp3 = (input4 << 0xc) >> 4 | 0x10000000 | input3 >> 0x18;\n    temp13 = input3 << 8;\n    temp10 = (temp9 << 0xc) >> 4 | 0x10000000 | temp12 >> 0x18;\n    temp12 = temp12 * 0x100;\n    temp7 = (temp9 ^ input4) & 0x80000000;\n    is_zero = temp3 <= temp10;\n    if (temp10 == temp3) {\n      is_zero = temp13 <= temp12;\n    }\n    difference = difference + (uint)is_zero;\n    temp9 = difference + 0x3fd;\n    if (is_zero == false) {\n      temp3 = temp3 >> 1;\n      temp13 = (uint)((input3 >> 0x18 & 1) != 0) << 0x1f | temp13 >> 1;\n    }\n    temp12 = temp12 - temp13;\n    temp10 = (temp10 - temp3) - (uint)(temp12 < temp13);\n    temp4 = temp3 >> 1;\n    temp1 = (uint)((temp3 & 1) != 0) << 0x1f | temp13 >> 1;\n    temp12 = 0x100000;\n    temp3 = 0x80000;\n    while( true ) {\n      is_zero = temp1 <= temp12;\n      if (temp4 < temp10 || temp10 - temp4 < (uint)is_zero) {\n        temp12 = temp12 - temp1;\n        temp12 = temp12 | temp3;\n        temp10 = (temp10 - temp4) - (uint)!is_zero;\n      }\n      temp5 = temp4 >> 1;\n      temp1 = (uint)((temp4 & 1) != 0) << 0x1f | temp1 >> 1;\n      is_equal = temp1 <= temp12;\n      is_zero = temp10 - temp5 < (uint)is_equal;\n      temp13 = temp10;\n      if (temp5 < temp10 || is_zero) {\n        temp12 = temp12 - temp1;\n        temp13 = (temp10 - temp5) - (uint)!is_equal;\n      }\n      if (temp5 < temp10 || is_zero) {\n        temp12 = temp12 | temp3 >> 1;\n      }\n      temp10 = temp4 >> 2;\n      temp2 = (uint)((temp5 & 1) != 0) << 0x1f | temp1 >> 1;\n      is_equal = temp2 <= temp12;\n      is_zero = temp13 - temp10 < (uint)is_equal;\n      temp5 = temp13;\n      if (temp10 < temp13 || is_zero) {\n        temp12 = temp12 - temp2;\n        temp5 = (temp13 - temp10) - (uint)!is_equal;\n      }\n      if (temp10 < temp13 || is_zero) {\n        temp12 = temp12 | temp3 >> 2;\n      }\n      temp6 = temp4 >> 3;\n      temp1 = (uint)((temp10 & 1) != 0) << 0x1f | temp2 >> 1;\n      is_equal = temp1 <= temp12;\n      is_zero = temp5 - temp6 < (uint)is_equal;\n      temp10 = temp5;\n      if (temp6 < temp5 || is_zero) {\n        temp12 = temp12 - temp1;\n        temp10 = (temp5 - temp6) - (uint)!is_equal;\n      }\n      if (temp6 < temp5 || is_zero) {\n        temp12 = temp12 | temp3 >> 3;\n      }\n      temp13 = temp10 | temp12;\n      if (temp13 == 0) break;\n      temp10 = temp10 << 4 | temp12 >> 0x1c;\n      temp12 = temp12 << 4;\n      temp4 = temp4 & 0xfffffff8 | temp1 >> 0x1d;\n      temp1 = (temp2 >> 1) << 3;\n      temp3 = temp3 >> 4;\n      if (temp3 == 0) {\n        temp6 = temp4;\n        if ((temp7 & 0x100000) != 0) goto LAB_0800086a;\n        temp7 = temp7 | temp12;\n        temp12 = 0;\n        temp3 = 0x80000000;\n      }\n    }\n    if ((temp7 & 0x100000) == 0) {\n      temp7 = temp7 | temp12;\n      temp12 = 0;\n    }\nLAB_0800086a:\n    flag3 = 0xfc < temp9;\n    is_equal = SBORROW4(temp9,0xfd);\n    temp4 = difference + 0x300;\n    is_zero = temp4 == 0;\n    temp3 = temp4;\n    if (flag3 && !is_zero) {\n      flag3 = 0x6ff < temp4;\n      is_equal = SBORROW4(temp4,0x700);\n      temp3 = difference - 0x400;\n      is_zero = temp4 == 0x700;\n    }\n    if (!flag3 || is_zero) {\n      is_zero = temp6 <= temp10;\n      if (temp10 == temp6) {\n        is_zero = temp1 <= temp12;\n      }\n      if (temp10 == temp6 && temp12 == temp1) {\n        is_zero = (temp12 & 1) != 0;\n      }\n      return CONCAT44(temp7 + temp9 * 0x100000 + (uint)CARRY4(temp12,(uint)is_zero),temp12 + is_zero);\n    }\n  }\n  if (!is_zero && (int)temp3 < 0 == is_equal) {\n    return (ulonglong)(temp7 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  flag3 = SCARRY4(temp9,0x36);\n  is_zero = (int)(temp9 + 0x36) < 0;\n  is_equal = temp9 == 0xffffffca;\n  if (is_equal || is_zero != flag3) {\n    temp12 = 0;\n  }\n  if (is_equal || is_zero != flag3) {\n    temp7 = temp7 & 0x80000000;\n  }\n  if (is_equal || is_zero != flag3) {\n    return CONCAT44(temp7,temp12);\n  }\n  temp3 = -temp9;\n  temp10 = temp3 - 0x20;\n  if (0x1f < (int)temp3) {\n    temp3 = temp12 >> (temp10 & 0xff) | temp7 << (0x20 - temp10 & 0xff);\n    temp9 = (temp7 >> (temp10 & 0xff) & ~((temp7 & 0x80000000) >> (temp10 & 0xff))) -\n            ((int)temp3 >> 0x1f);\n    if ((temp13 | temp12 << (0x20 - temp10 & 0xff) | temp3 << 1) == 0) {\n      temp9 = temp9 & ~(temp3 >> 0x1f);\n    }\n    return CONCAT44(temp7,temp9) & 0x80000000ffffffff;\n  }\n  difference = temp3 - 0x14;\n  if (difference != 0 && difference < 0 == SCARRY4(temp10,0xc)) {\n    temp9 = 0xc - difference;\n    temp3 = temp12 << (temp9 & 0xff);\n    temp12 = temp12 >> (0x20 - temp9 & 0xff) | temp7 << (temp9 & 0xff);\n    temp9 = temp12 + -((int)temp3 >> 0x1f);\n    if ((temp13 | temp3 << 1) == 0) {\n      temp9 = temp9 & ~(temp3 >> 0x1f);\n    }\n    return CONCAT44((temp7 & 0x80000000) + (uint)CARRY4(temp12,-((int)temp3 >> 0x1f)),temp9);\n  }\n  temp10 = temp12 << (temp9 + 0x20 & 0xff);\n  temp12 = temp12 >> (temp3 & 0xff) | temp7 << (temp9 + 0x20 & 0xff);\n  temp9 = temp12 + -((int)temp10 >> 0x1f);\n  if ((temp13 | temp10 << 1) == 0) {\n    temp9 = temp9 & ~(temp10 >> 0x1f);\n  }\n  return CONCAT44((temp7 & 0x80000000) +\n                  ((temp7 & 0x7fffffff) >> (temp3 & 0xff)) +\n                  (uint)CARRY4(temp12,-((int)temp10 >> 0x1f)),temp9);\n}\n\n",
            "current_name": "calculate_float_value_0800074c",
            "entrypoint": "0x0800074c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800074c": "calculate_float_value_0800074c",
                "bVar14": "is_zero",
                "bVar15": "is_equal",
                "bVar16": "flag3",
                "iVar8": "difference",
                "param_1": "input1",
                "param_2": "exponent",
                "param_3": "input3",
                "param_4": "input4",
                "reverse_bits_to_float_080008ba": "reverse_bits",
                "uVar1": "temp1",
                "uVar10": "temp10",
                "uVar11": "temp12",
                "uVar12": "temp12",
                "uVar13": "temp13",
                "uVar17": "reversed_float",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6",
                "uVar7": "temp7",
                "uVar9": "temp9",
                "unaff_r5": "temp10"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080008ba": {
            "additional_data": {
                "FUN_080008ba": {
                    "calculate_double_precision": 2,
                    "calculate_float": 1,
                    "calculate_floating_point": 1,
                    "calculate_floating_point_value": 2,
                    "convert_bit_pattern_to_double": 1,
                    "convert_to_double": 3,
                    "convert_to_double_precision": 1,
                    "convert_to_float": 1,
                    "decode_and_convert_to_double": 1,
                    "extract_binary_data": 1,
                    "extract_bit_sequence": 1,
                    "extract_bits": 3,
                    "extract_float_bits": 1,
                    "extract_numbers": 1,
                    "find_exponent_bits": 1,
                    "reverse_bit_manipulation": 1,
                    "reverse_bits": 5,
                    "reverse_bits_to_float": 1,
                    "reverse_bitwise_conversion": 1
                },
                "bVar4": {
                    "boolean_var4": 1,
                    "check_flag": 1,
                    "flag": 3,
                    "flag_1": 1,
                    "is_equal": 1,
                    "is_zero": 20,
                    "temp6": 1,
                    "temp_6": 1,
                    "temp_bool": 1
                },
                "in_r12": {
                    "b": 1,
                    "bit5": 4,
                    "bit_5": 1,
                    "bit_pattern4": 1,
                    "constant": 2,
                    "constant2": 1,
                    "constant_2": 1,
                    "influenced_var": 1,
                    "input_r12": 1,
                    "mask": 2,
                    "register12": 1,
                    "register_r12": 1,
                    "temp2": 6,
                    "temp4": 2,
                    "temp5": 2,
                    "temp_2": 1,
                    "temp_5": 1,
                    "temp_var2": 1,
                    "temporary2": 1
                },
                "param_1": {
                    "bit_pattern1": 1,
                    "first_operand": 1,
                    "first_part_param": 1,
                    "input1": 15,
                    "input_1": 6,
                    "input_parameter1": 1,
                    "int_value1": 1,
                    "num1": 1,
                    "number1": 1,
                    "value1": 1,
                    "x": 1,
                    "x1": 1
                },
                "param_2": {
                    "bit_pattern2": 1,
                    "input2": 14,
                    "input_2": 6,
                    "input_parameter2": 1,
                    "int_value2": 1,
                    "num2": 1,
                    "number2": 1,
                    "second_operand": 1,
                    "second_part_param": 1,
                    "value2": 1,
                    "x2": 1,
                    "y": 1
                },
                "param_3": {
                    "bit_pattern3": 1,
                    "input2": 1,
                    "input3": 14,
                    "input_3": 6,
                    "input_parameter3": 1,
                    "int_value3": 1,
                    "num3": 1,
                    "number3": 1,
                    "third_operand": 1,
                    "third_part_param": 1,
                    "value3": 1,
                    "x3": 1,
                    "z": 1
                },
                "param_4": {
                    "bit_pattern4": 1,
                    "fourth_operand": 1,
                    "fourth_part_param": 1,
                    "input3": 1,
                    "input4": 14,
                    "input_4": 6,
                    "input_parameter4": 1,
                    "int_value4": 1,
                    "num4": 1,
                    "number4": 1,
                    "value4": 1,
                    "w": 1,
                    "x4": 1
                },
                "uVar1": {
                    "bit1": 9,
                    "bit_1": 3,
                    "bit_check": 1,
                    "bit_check1": 1,
                    "bit_x": 1,
                    "first_bit": 1,
                    "mask1": 1,
                    "shifted_input1": 1,
                    "temp1": 4,
                    "temp3": 1,
                    "temp5": 2,
                    "temp_1": 1,
                    "temp_2": 1,
                    "temp_var1": 1,
                    "temporary_var1": 1
                },
                "uVar2": {
                    "bit2": 4,
                    "bit3": 4,
                    "bit_2": 2,
                    "bit_3": 1,
                    "bit_b": 1,
                    "bit_check2": 1,
                    "bit_sequence_1": 1,
                    "bits_shifted": 1,
                    "masked_input1": 1,
                    "masked_input4_shifted": 1,
                    "masked_param4": 1,
                    "temp2": 4,
                    "temp3": 2,
                    "temp4": 1,
                    "temp_2": 1,
                    "temp_3": 1,
                    "temp_var2": 1,
                    "temporary_var2": 1,
                    "u_var2": 1
                },
                "uVar3": {
                    "bit3": 3,
                    "bit4": 4,
                    "bit_3": 2,
                    "bit_4": 1,
                    "bit_pattern2": 1,
                    "result": 1,
                    "shifted_input2": 1,
                    "temp": 2,
                    "temp3": 5,
                    "temp4": 2,
                    "temp5": 1,
                    "temp_3": 1,
                    "temp_4": 1,
                    "temp_input": 1,
                    "temp_param3": 1,
                    "temp_var3": 1,
                    "temporary_var3": 1,
                    "y_temp": 1
                },
                "unaff_r4": {
                    "a": 1,
                    "bit2": 4,
                    "bit_2": 1,
                    "bit_pattern4": 1,
                    "check_value": 1,
                    "constant": 2,
                    "constant_1": 1,
                    "constant_r4": 1,
                    "mask2": 1,
                    "register_r4": 1,
                    "temp1": 8,
                    "temp2": 2,
                    "temp_1": 2,
                    "temp_var1": 1,
                    "temporary1": 1,
                    "unaffected_register4": 1,
                    "unaffected_var": 1,
                    "value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800074c"
            ],
            "code": "\nulonglong reverse_bits_to_float_080008ba(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint bit1;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp2;\n  bool is_zero;\n  \n  temp2 = temp2 & input4 >> 0x14;\n  temp3 = input2;\n  if (temp1 != temp2 || temp2 != temp2) {\n    if (temp1 == temp2) {\n      if (((input1 | input2 << 0xc) == 0) && (input1 = input3, temp3 = input4, temp2 != temp2)\n         ) {\nLAB_0800072c:\n        return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (temp2 == temp2) {\n      input1 = input3;\n      temp3 = input4;\n      if ((input3 | input4 << 0xc) == 0) {\nLAB_080006f0:\n        return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      is_zero = (input1 | input2 << 1) == 0;\n      if (!is_zero) {\n        is_zero = (input3 | input4 << 1) == 0;\n      }\n      if (!is_zero) {\n        if (temp1 == 0) {\n          temp3 = input2 & 0x80000000;\n          do {\n            bit1 = input1 & 0x80000000;\n            input1 = input1 << 1;\n            input2 = input2 * 2 + (uint)(bit1 != 0);\n          } while ((input2 & 0x100000) == 0);\n          input2 = input2 | temp3;\n          if (temp2 != 0) {\n            return CONCAT44(input2,input1);\n          }\n        }\n        do {\n          temp3 = input3 & 0x80000000;\n          input3 = input3 << 1;\n          input4 = input4 * 2 + (uint)(temp3 != 0);\n        } while ((input4 & 0x100000) == 0);\n        return CONCAT44(input2,input1);\n      }\n      if ((input1 | input2 << 1) != 0) goto LAB_0800072c;\n      if ((input3 | input4 << 1) != 0) goto LAB_080006f0;\n    }\n  }\n  return CONCAT44(temp3,input1) | 0x7ff8000000000000;\n}\n\n",
            "current_name": "reverse_bits_to_float_080008ba",
            "entrypoint": "0x080008ba",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080008ba": "reverse_bits_to_float_080008ba",
                "bVar4": "is_zero",
                "in_r12": "temp2",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "bit1",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "unaff_r4": "temp1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800092c": {
            "additional_data": {
                "FUN_0800092c": {
                    "check_conditions": 2,
                    "check_data_equality": 1,
                    "check_equality": 4,
                    "check_equality_and_conditions": 1,
                    "check_inputs": 1,
                    "check_parameters": 11,
                    "check_params": 1,
                    "check_params_equality": 2,
                    "check_params_match": 1,
                    "check_properties": 1,
                    "compare_and_combine": 1,
                    "compare_parameters": 3,
                    "compare_values": 1,
                    "validate_parameters": 1
                },
                "bVar2": {
                    "all_parameters_zero": 1,
                    "are_inputs_zero": 2,
                    "are_params_zero": 2,
                    "are_values_zero": 2,
                    "condition1": 1,
                    "condition_1": 1,
                    "is_condition_met": 1,
                    "is_equal": 1,
                    "is_value1_zero": 1,
                    "is_zero": 17
                },
                "bVar3": {
                    "condition2": 1,
                    "condition_2": 1,
                    "is_condition_met": 1,
                    "is_condition_met_2": 1,
                    "is_condition_true": 1,
                    "is_equal_or_less": 1,
                    "is_greater": 1,
                    "is_input2_less_than_or_equal_to_input1": 1,
                    "is_leq": 1,
                    "is_less": 1,
                    "is_less_or_equal": 2,
                    "is_less_than": 1,
                    "is_less_than_zero": 1,
                    "is_lower": 1,
                    "is_negative": 7,
                    "is_not_zero": 1,
                    "is_param3_smaller": 1,
                    "is_param4_less_than_param2": 1,
                    "is_positive": 2,
                    "is_result_gt_zero": 1,
                    "is_value4_smaller_or_equal": 1
                },
                "param_1": {
                    "first_input": 1,
                    "first_num": 1,
                    "first_param": 2,
                    "input1": 2,
                    "input_1": 5,
                    "num1": 2,
                    "param1": 2,
                    "value1": 11,
                    "value_1": 5
                },
                "param_2": {
                    "input1_shifted": 1,
                    "input2": 1,
                    "input_2": 5,
                    "num2": 2,
                    "param2": 2,
                    "second_input": 1,
                    "second_num": 1,
                    "second_param": 2,
                    "value2": 11,
                    "value_2": 5
                },
                "param_3": {
                    "input2": 1,
                    "input3": 1,
                    "input_3": 5,
                    "num3": 2,
                    "param3": 2,
                    "third_input": 1,
                    "third_num": 1,
                    "third_param": 2,
                    "value3": 11,
                    "value_3": 5
                },
                "param_4": {
                    "fourth_input": 1,
                    "fourth_num": 1,
                    "fourth_param": 2,
                    "input2_shifted": 1,
                    "input4": 1,
                    "input_4": 5,
                    "num4": 1,
                    "param4": 2,
                    "right_shifted_param4": 1,
                    "shifted_num4": 1,
                    "shifted_param_4": 1,
                    "value4": 9,
                    "value_4": 5
                },
                "param_5": {
                    "result": 1
                },
                "return": {
                    "result": 1
                },
                "uVar1": {
                    "inputs_xor_result": 1,
                    "param_x": 1,
                    "result": 13,
                    "temp1": 2,
                    "temp_1": 1,
                    "temp_result": 1,
                    "temp_var_1": 1,
                    "xor_result": 9
                }
            },
            "called": [],
            "calling": [
                "FUN_080009b8"
            ],
            "code": "\nuint check_parameters_0800092c(uint value1,uint value2,uint value3,uint value4)\n\n{\n  uint result;\n  bool is_zero;\n  bool is_negative;\n  \n  if (((int)(value2 << 1) >> 0x15 == -1 || (int)(value4 << 1) >> 0x15 == -1) &&\n     ((((int)(value2 << 1) >> 0x15 == -1 && ((value1 | value2 << 0xc) != 0)) ||\n      (((int)(value4 << 1) >> 0x15 == -1 && ((value3 | value4 << 0xc) != 0)))))) {\n    result 1;\n  }\n  is_zero = (value1 | value2 << 1) == 0;\n  if (is_zero) {\n    is_zero = (value3 | value4 << 1) == 0;\n  }\n  if (!is_zero) {\n    is_zero = value2 == value4;\n  }\n  if (is_zero) {\n    is_zero = value1 == value3;\n  }\n  if (!is_zero) {\n    result = value2 ^ value4;\n    is_zero = result == 0;\n    if (-1 < (int)result) {\n      is_zero = value2 == value4;\n    }\n    is_negative = -1 < (int)result && value4 <= value2;\n    if (is_zero) {\n      is_negative = value3 <= value1;\n    }\n    value4 = (int)value4 >> 0x1f;\n    if (!is_negative) {\n      value4 = ~value4;\n    }\n    result value4 | 1;\n  }\n  result 0;\n}\n\n",
            "current_name": "check_parameters_0800092c",
            "entrypoint": "0x0800092c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800092c": "check_parameters_0800092c",
                "bVar2": "is_zero",
                "bVar3": "is_negative",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "return": "result",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080009a8": {
            "additional_data": {
                "FUN_080009a8": {
                    "validate_and_execute": 2,
                    "validate_and_process": 1,
                    "validate_and_process_data": 1,
                    "validate_and_process_parameters": 5,
                    "validate_and_process_params": 3,
                    "validate_and_return": 5,
                    "validate_parameters": 14
                },
                "param_1": {
                    "arg1": 3,
                    "arg_1": 1,
                    "argument1": 1,
                    "first_param": 2,
                    "first_parameter": 2,
                    "input_1": 3,
                    "input_param": 1,
                    "input_param_1": 5,
                    "param1": 3,
                    "param_1": 2,
                    "param_a": 1,
                    "param_input_1": 1,
                    "parameter1": 1,
                    "parameter_1": 2,
                    "parameter_address": 1,
                    "result_param_1": 1
                },
                "param_2": {
                    "arg2": 3,
                    "arg_2": 1,
                    "argument2": 1,
                    "input_2": 3,
                    "input_param_2": 5,
                    "output_param": 1,
                    "param2": 3,
                    "param_2": 2,
                    "param_b": 1,
                    "param_input_2": 1,
                    "parameter2": 1,
                    "parameter_2": 2,
                    "parameter_size": 1,
                    "result_param_2": 1,
                    "second_param": 2,
                    "second_parameter": 2
                },
                "param_3": {
                    "arg3": 3,
                    "argument3": 1,
                    "data_param": 1,
                    "data_param_1": 1,
                    "input_data_address": 1,
                    "input_param_1": 1,
                    "input_param_3": 4,
                    "param3": 3,
                    "param_3": 7,
                    "param_c": 1,
                    "param_validation_1": 1,
                    "parameter3": 1,
                    "parameter_3": 2,
                    "third_param": 2,
                    "third_parameter": 2
                },
                "param_4": {
                    "arg4": 3,
                    "argument4": 1,
                    "config_param": 1,
                    "data_param_2": 1,
                    "fourth_param": 2,
                    "fourth_parameter": 2,
                    "input_data_size": 1,
                    "input_param_2": 1,
                    "input_param_4": 4,
                    "param4": 3,
                    "param_4": 7,
                    "param_d": 1,
                    "param_validation_2": 1,
                    "parameter4": 1,
                    "parameter_4": 2
                }
            },
            "called": [
                "FUN_080009b8"
            ],
            "calling": [
                "FUN_08000a18",
                "FUN_08000a04"
            ],
            "code": "\nvoid validate_and_process_parameters_080009a8(undefined4 input_param_1,undefined4 input_param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  validate_parameters_080009b8(param_3,param_4,input_param_1,input_param_2);\n  return;\n}\n\n",
            "current_name": "validate_and_process_parameters_080009a8",
            "entrypoint": "0x080009a8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080009a8": "validate_and_process_parameters_080009a8",
                "param_1": "input_param_1",
                "param_2": "input_param_2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080009b8": {
            "additional_data": {
                "FUN_080009b8": {
                    "calculate_result": 1,
                    "check_and_return_param": 3,
                    "check_and_return_parameter": 1,
                    "check_parameters": 3,
                    "parameter_check": 1,
                    "process_input": 2,
                    "process_input_data": 1,
                    "process_parameter": 1,
                    "validate_and_return": 2,
                    "validate_and_return_input": 2,
                    "validate_and_return_param": 2,
                    "validate_input": 1,
                    "validate_parameters": 10,
                    "verify_parameters": 1
                },
                "check_parameters_0800092c": {
                    "check_parameters": 1,
                    "validate_input": 3
                },
                "param_1": {
                    "input": 3,
                    "input_data": 5,
                    "input_param": 16,
                    "input_value": 6,
                    "param": 1
                },
                "param_2": {
                    "new_parameter_name_2": 1
                }
            },
            "called": [
                "FUN_0800092c"
            ],
            "calling": [
                "FUN_080009dc",
                "FUN_080009a8",
                "FUN_080009f0",
                "FUN_080009c8"
            ],
            "code": "\nundefined4 validate_parameters_080009b8(undefined4 input_param)\n\n{\n  validate_input();\n  return input_param;\n}\n\n",
            "current_name": "validate_parameters_080009b8",
            "entrypoint": "0x080009b8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080009b8": "validate_parameters_080009b8",
                "check_parameters_0800092c": "validate_input",
                "param_1": "input_param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080009c8": {
            "additional_data": {
                "FUN_080009c8": {
                    "check_if_parameter_is_valid": 1,
                    "check_if_parameters_valid": 1,
                    "check_parameter_validity": 4,
                    "check_parameters": 5,
                    "check_validation": 1,
                    "is_input_valid": 1,
                    "is_parameter_valid": 7,
                    "is_valid_input": 2,
                    "validate_and_return_flag": 1,
                    "validate_and_return_result": 1,
                    "validate_input": 1,
                    "validate_parameters": 6
                },
                "bool": {
                    "bool": 1
                },
                "in_ZR": {
                    "input_char": 6,
                    "input_character": 2,
                    "input_param": 1,
                    "input_parameter": 1,
                    "is_input_empty": 1,
                    "is_nonzero": 1,
                    "is_not_null": 1,
                    "is_not_zero": 1,
                    "is_valid": 7,
                    "is_valid_parameter": 1,
                    "param_char": 1,
                    "param_valid": 1,
                    "parameter": 2,
                    "parameter_valid": 1,
                    "result": 4
                },
                "validate_parameters_080009b8": {
                    "validate_parameters": 1
                }
            },
            "called": [
                "FUN_080009b8"
            ],
            "calling": [
                "FUN_08000cd0"
            ],
            "code": "\nbool check_if_parameter_is_valid_080009c8(void)\n\n{\n  char is_valid;\n  \n  validate_parameters();\n  return is_valid != '\\0';\n}\n\n",
            "current_name": "check_if_parameter_is_valid_080009c8",
            "entrypoint": "0x080009c8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080009c8": "check_if_parameter_is_valid_080009c8",
                "in_ZR": "is_valid",
                "validate_parameters_080009b8": "validate_parameters"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080009dc": {
            "additional_data": {
                "FUN_080009dc": {
                    "check_for_null_terminate": 1,
                    "check_if_cy_is_null": 1,
                    "check_if_input_is_empty": 1,
                    "check_if_null_080009dc": 2,
                    "check_if_null_terminator": 2,
                    "check_if_string_empty": 1,
                    "check_parameter_validity": 1,
                    "has_null_terminator": 1,
                    "is_cy_null": 9,
                    "is_end_of_input": 1,
                    "is_in_cy_null": 1,
                    "is_input_null": 1,
                    "is_input_valid": 1,
                    "is_last_character_null": 1,
                    "is_null_byte_present": 1,
                    "is_null_character_present": 1,
                    "is_null_terminated": 1,
                    "is_null_terminator": 1,
                    "is_null_terminator_present": 1,
                    "is_string_empty": 2
                },
                "in_CY": {
                    "char_from_user": 1,
                    "character": 1,
                    "current_character": 1,
                    "cy": 2,
                    "cy_character": 1,
                    "input_char": 12,
                    "input_character": 11,
                    "input_cy": 1,
                    "last_character": 1
                },
                "validate_parameters_080009b8": {
                    "validate_parameters": 3,
                    "validate_parameters_080009b8": 1
                }
            },
            "called": [
                "FUN_080009b8"
            ],
            "calling": [
                "FUN_08001960",
                "FUN_08001814",
                "FUN_08005da8",
                "FUN_08000cd0",
                "FUN_080016b4",
                "FUN_080019f6"
            ],
            "code": "\nbool check_if_cy_is_null_080009dc(void)\n\n{\n  char input_char;\n  \n  validate_parameters();\n  return input_char == '\\0';\n}\n\n",
            "current_name": "check_if_cy_is_null_080009dc",
            "entrypoint": "0x080009dc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080009dc": "check_if_cy_is_null_080009dc",
                "in_CY": "input_char",
                "validate_parameters_080009b8": "validate_parameters"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080009f0": {
            "additional_data": {
                "FUN_080009f0": {
                    "check_input_validity": 1,
                    "check_parameter_validity": 2,
                    "check_parameters": 6,
                    "validate_and_check_inputs": 1,
                    "validate_and_check_zero": 1,
                    "validate_and_process_parameters": 1,
                    "validate_and_return_result": 14,
                    "validate_conditions": 1,
                    "validate_parameters": 4
                },
                "in_CY": {
                    "carry_flag": 11,
                    "carry_status": 1,
                    "carry_value": 1,
                    "has_carry_flag": 1,
                    "is_carry": 9,
                    "is_carry_flag": 2,
                    "is_carry_set": 1,
                    "is_condition_carry_set": 1,
                    "is_zero_parameter": 1,
                    "zero_flag": 1
                },
                "in_ZR": {
                    "carry_flag": 1,
                    "is_condition_zero_set": 1,
                    "is_equal_zero": 1,
                    "is_valid_parameter": 1,
                    "is_zero": 5,
                    "is_zero_flag": 2,
                    "is_zero_result": 1,
                    "is_zero_return": 4,
                    "zero_flag": 9,
                    "zero_result": 4
                },
                "validate_parameters_080009b8": {
                    "validate_parameters": 5
                }
            },
            "called": [
                "FUN_080009b8"
            ],
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0"
            ],
            "code": "\nbool validate_and_return_result_080009f0(void)\n\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  \n  validate_parameters();\n  return !(bool)carry_flag || (bool)zero_flag;\n}\n\n",
            "current_name": "validate_and_return_result_080009f0",
            "entrypoint": "0x080009f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080009f0": "validate_and_return_result_080009f0",
                "in_CY": "carry_flag",
                "in_ZR": "zero_flag",
                "validate_parameters_080009b8": "validate_parameters"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000a04": {
            "additional_data": {
                "FUN_08000a04": {
                    "check_and_process_parameters": 1,
                    "check_input_validity": 1,
                    "check_param_validity": 1,
                    "check_parameter_validity": 1,
                    "process_and_validate_parameters": 2,
                    "process_parameters": 1,
                    "validate_and_check_parameters": 1,
                    "validate_and_process_flags": 1,
                    "validate_and_process_parameters": 21,
                    "validate_and_return_result": 1
                },
                "in_CY": {
                    "carry": 2,
                    "carry_flag": 17,
                    "is_carry": 3,
                    "is_carry_enabled": 1,
                    "is_carry_flag_set": 2,
                    "is_carry_set": 2,
                    "is_cy_flag_set": 1,
                    "is_cy_true": 1,
                    "is_invalid": 1,
                    "is_valid_carry": 1
                },
                "in_ZR": {
                    "is_valid": 1,
                    "is_zero": 2,
                    "is_zero_flag": 2,
                    "is_zero_flag_set": 2,
                    "is_zero_result": 2,
                    "is_zero_return": 2,
                    "is_zero_set": 1,
                    "is_zero_value": 1,
                    "is_zr_true": 1,
                    "zero": 2,
                    "zero_flag": 14,
                    "zero_result": 1
                }
            },
            "called": [
                "FUN_080009a8"
            ],
            "calling": [
                "FUN_08001960",
                "FUN_08000cd0"
            ],
            "code": "\nbool process_and_validate_parameters_08000a04(void)\n\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  \n  validate_and_process_parameters_080009a8();\n  return !(bool)carry_flag || (bool)zero_flag;\n}\n\n",
            "current_name": "process_and_validate_parameters_08000a04",
            "entrypoint": "0x08000a04",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000a04": "process_and_validate_parameters_08000a04",
                "in_CY": "carry_flag",
                "in_ZR": "zero_flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000a18": {
            "additional_data": {
                "FUN_08000a18": {
                    "check_for_null_termination": 1,
                    "check_if_input_is_empty": 2,
                    "check_if_input_is_valid": 1,
                    "check_if_parameters_are_valid": 3,
                    "check_if_parameters_valid": 2,
                    "check_parameter": 1,
                    "check_parameter_and_process": 1,
                    "check_parameters": 1,
                    "check_parameters_and_return_result": 1,
                    "is_cy_null": 2,
                    "is_end_of_input_valid": 1,
                    "is_input_valid": 3,
                    "is_null_character_found": 1,
                    "is_null_terminated_string": 1,
                    "is_parameter_processing_successful": 1,
                    "is_processing_complete": 1,
                    "is_valid_input": 1,
                    "validate_and_process": 1,
                    "validate_and_process_parameters": 3,
                    "validate_parameters": 2
                },
                "in_CY": {
                    "char_flag": 1,
                    "char_input": 1,
                    "char_value": 1,
                    "character": 2,
                    "character_input": 1,
                    "cy": 1,
                    "end_of_input_character": 1,
                    "input_char": 5,
                    "input_character": 18
                },
                "validate_and_process_parameters_080009a8": {
                    "validate_and_process_parameters": 4
                }
            },
            "called": [
                "FUN_080009a8"
            ],
            "calling": [
                "FUN_08001960",
                "FUN_08005da8",
                "FUN_08000cd0",
                "FUN_080016b4",
                "FUN_080019f6"
            ],
            "code": "\nbool is_end_of_input_valid_08000a18(void)\n\n{\n  char input_character;\n  \n  validate_and_process_parameters();\n  return input_character == '\\0';\n}\n\n",
            "current_name": "is_end_of_input_valid_08000a18",
            "entrypoint": "0x08000a18",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000a18": "is_end_of_input_valid_08000a18",
                "in_CY": "input_character",
                "validate_and_process_parameters_080009a8": "validate_and_process_parameters"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000a2c": {
            "additional_data": {
                "FUN_08000a2c": {
                    "check_conditions": 1,
                    "check_if_params_valid": 1,
                    "check_input_validity": 2,
                    "check_inputs": 2,
                    "check_param_conditions": 2,
                    "check_parameters": 18,
                    "check_params": 1,
                    "check_params_valid": 1,
                    "check_valid_parameters": 1,
                    "is_valid_input": 1,
                    "is_valid_params": 1
                },
                "param_1": {
                    "first_integer": 1,
                    "first_param": 1,
                    "input1": 2,
                    "input_1": 7,
                    "input_param_1": 1,
                    "num1": 1,
                    "value1": 13,
                    "value_1": 5
                },
                "param_2": {
                    "flag1": 2,
                    "input2": 2,
                    "input_2": 7,
                    "input_param_2": 1,
                    "num2": 1,
                    "second_integer": 1,
                    "second_param": 1,
                    "value2": 11,
                    "value_2": 5
                },
                "param_3": {
                    "input3": 2,
                    "input_3": 7,
                    "input_param_3": 1,
                    "num3": 1,
                    "third_param": 1,
                    "third_unsigned_integer": 1,
                    "value2": 2,
                    "value3": 11,
                    "value_3": 5
                },
                "param_4": {
                    "flag2": 2,
                    "fourth_integer": 1,
                    "fourth_param": 1,
                    "input4": 2,
                    "input_4": 7,
                    "input_param_4": 1,
                    "num4": 1,
                    "value4": 11,
                    "value_4": 5
                },
                "return_value": {
                    "is_valid": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005da8"
            ],
            "code": "\nundefined4 check_valid_parameters_08000a2c(uint value1,int value2,uint value3,int value4)\n\n{\n  if ((((value2 << 1) >> 0x15 != -1) || ((value1 | value2 << 0xc) == 0)) &&\n     (((value4 << 1) >> 0x15 != -1 || ((value3 | value4 << 0xc) == 0)))) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "check_valid_parameters_08000a2c",
            "entrypoint": "0x08000a2c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000a2c": "check_valid_parameters_08000a2c",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000a58": {
            "additional_data": {
                "FUN_08000a58": {
                    "calculate_inverse": 1,
                    "calculate_new_value": 2,
                    "calculate_result": 5,
                    "calculate_unsigned_value": 1,
                    "calculate_value": 2,
                    "calculation_function": 1,
                    "convert_negative_to_positive": 1,
                    "convert_param_to_int": 1,
                    "convert_to_integer": 2,
                    "convert_to_positive_int": 1,
                    "convert_to_sign_magnitude": 1,
                    "convert_to_signed_integer": 1,
                    "convert_unsigned_to_signed": 2,
                    "convert_value": 1,
                    "decode_integer": 1,
                    "decode_parameter": 1,
                    "decode_unsigned_integer": 1,
                    "decompile_and_improve": 1,
                    "integer_operation": 1,
                    "perform_unsigned_integer_operation": 1,
                    "reverse_and_invert_bits": 1,
                    "reverse_bits": 1
                },
                "iVar2": {
                    "calculation": 1,
                    "calculation_result": 2,
                    "modified_input2": 1,
                    "modified_value": 1,
                    "multiplied_value": 7,
                    "new_value2": 1,
                    "offset": 3,
                    "result": 1,
                    "result2": 4,
                    "scaled_value": 2,
                    "shifted_offset": 1,
                    "shifted_value": 2,
                    "temp": 1,
                    "temp1": 1,
                    "temp_var": 1
                },
                "param_1": {
                    "input1": 11,
                    "input_number": 1,
                    "input_param1": 2,
                    "input_value": 7,
                    "input_value1": 1,
                    "input_value_1": 5,
                    "num1": 1,
                    "unsigned_number": 1,
                    "value": 1,
                    "value1": 1
                },
                "param_2": {
                    "bit_count": 1,
                    "bit_shift": 1,
                    "bitwise_value": 1,
                    "final_value": 1,
                    "input2": 10,
                    "input_param2": 2,
                    "input_value_2": 4,
                    "masked_multiplier": 1,
                    "modified_input2": 1,
                    "modified_input_value_2": 1,
                    "multiplier": 1,
                    "num2": 1,
                    "shift": 1,
                    "shift_amount": 1,
                    "shift_value": 1,
                    "unsigned_number_shift": 1,
                    "updated_multiplier": 1,
                    "value2": 1
                },
                "uVar1": {
                    "converted_value1": 1,
                    "final_result": 1,
                    "inverted_bits": 1,
                    "new_value": 1,
                    "new_value1": 1,
                    "quotient": 1,
                    "result": 6,
                    "result1": 3,
                    "result4": 1,
                    "shifted_result": 4,
                    "shifted_value": 8,
                    "shifted_variable": 1
                },
                "uVar2": {
                    "result": 1
                },
                "uVar3": {
                    "adjusted_shift": 2,
                    "adjusted_value": 4,
                    "calculated_shift": 1,
                    "comparison_value": 1,
                    "computed_value": 1,
                    "condition_value": 1,
                    "converted_value2": 1,
                    "decoded_value": 1,
                    "difference": 1,
                    "inversion_amount": 1,
                    "negative_shifted_value": 1,
                    "negative_value": 1,
                    "new_value3": 1,
                    "reduced_offset": 1,
                    "result3": 4,
                    "shift_amount": 2,
                    "shift_constant": 1,
                    "shift_count": 1,
                    "shifted_temp2": 1,
                    "shifted_value": 1,
                    "update_offset": 1
                },
                "uVar4": {
                    "result4": 1,
                    "shift_amount": 1
                },
                "uVar5": {
                    "final_result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005da8"
            ],
            "code": "\nuint calculate_result_08000a58(uint input1,uint input2)\n\n{\n  uint shifted_value;\n  int multiplied_value;\n  uint adjusted_value;\n  \n  multiplied_value = input2 * 2 + 0x200000;\n  if (input2 * 2 < 0xffe00000) {\n    if (-1 < multiplied_value) {\n      return 0;\n    }\n    shifted_value = multiplied_value >> 0x15;\n    adjusted_value = -shifted_value - 0x3e1;\n    if (shifted_value < 0xfffffc20 && adjusted_value != 0) {\n      shifted_value = (input2 << 0xb | 0x80000000 | input1 >> 0x15) >> (adjusted_value & 0xff);\n      if ((input2 & 0x80000000) != 0) {\n        shifted_value = -shifted_value;\n      }\n      return shifted_value;\n    }\n  }\n  else if ((input1 | input2 << 0xc) != 0) {\n    return 0;\n  }\n  input2 = input2 & 0x80000000;\n  if (input2 == 0) {\n    input2 = 0x7fffffff;\n  }\n  return input2;\n}\n\n",
            "current_name": "calculate_result_08000a58",
            "entrypoint": "0x08000a58",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000a58": "calculate_result_08000a58",
                "iVar2": "multiplied_value",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "shifted_value",
                "uVar3": "adjusted_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000aa8": {
            "additional_data": {
                "FUN_08000aa8": {
                    "calculate_hash": 1,
                    "calculate_offset": 1,
                    "calculate_shift_amount": 1,
                    "calculate_shift_count": 1,
                    "calculate_shifted_division": 1,
                    "calculate_shifted_value": 15,
                    "check_and_shift": 1,
                    "check_overflow": 1,
                    "check_overflow_and_shift": 1,
                    "check_uint_multiplication": 1,
                    "convert_integer_to_float": 1,
                    "convert_to_bits": 1,
                    "convert_to_unsigned_int": 1,
                    "decode_value": 1,
                    "process_parameters": 1,
                    "reverse_bits": 1,
                    "validate_params": 1
                },
                "iVar1": {
                    "multiplied_value": 2,
                    "offset": 1,
                    "result": 1,
                    "shifted_result": 2,
                    "shifted_seed": 1,
                    "shifted_val_1": 1,
                    "shifted_value": 18,
                    "temp_value": 1,
                    "temp_var": 1,
                    "temp_var1": 1
                },
                "param_1": {
                    "input1": 3,
                    "input_1": 2,
                    "input_data": 1,
                    "input_param": 2,
                    "input_parameter": 1,
                    "input_parameter_1": 1,
                    "input_value": 14,
                    "unsigned_value": 1,
                    "value": 3,
                    "value1": 1,
                    "value_1": 2
                },
                "param_2": {
                    "bit_count": 1,
                    "flag": 1,
                    "input": 1,
                    "input2": 3,
                    "input_2": 2,
                    "input_flag": 1,
                    "input_parameter_2": 1,
                    "input_value": 1,
                    "mask": 1,
                    "multiplier": 4,
                    "multiplier_parameter": 1,
                    "seed_value": 1,
                    "shift": 1,
                    "shift_amount": 6,
                    "shift_param": 1,
                    "shift_value": 1,
                    "value2": 1,
                    "value_2": 2
                },
                "uVar2": {
                    "bit_mask": 1,
                    "bit_shift": 1,
                    "hash_value": 1,
                    "output_value": 1,
                    "result": 2,
                    "shift_amount": 12,
                    "shift_count": 2,
                    "shift_factor": 1,
                    "shift_value": 1,
                    "shifted_amount": 1,
                    "shifted_result": 3,
                    "shifted_val_2": 1,
                    "shifted_value": 1,
                    "temp_var2": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005da8"
            ],
            "code": "\nuint calculate_shifted_value_08000aa8(uint input_value,uint shift_amount)\n\n{\n  int shifted_value;\n  uint shift_amount;\n  \n  if ((shift_amount & 0x80000000) != 0) {\n    return 0;\n  }\n  shifted_value = shift_amount * 2 + 0x200000;\n  if (shift_amount * 2 < 0xffe00000) {\n    if (-1 < shifted_value) {\n      return 0;\n    }\n    shift_amount = -(shifted_value >> 0x15) - 0x3e1;\n    if (-1 < (int)shift_amount) {\n      return (shift_amount << 0xb | 0x80000000 | input_value >> 0x15) >> (shift_amount & 0xff);\n    }\n  }\n  else if ((input_value | shift_amount << 0xc) != 0) {\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "calculate_shifted_value_08000aa8",
            "entrypoint": "0x08000aa8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000aa8": "calculate_shifted_value_08000aa8",
                "iVar1": "shifted_value",
                "param_1": "input_value",
                "param_2": "shift_amount",
                "uVar2": "shift_amount"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000ae8": {
            "additional_data": {
                "DAT_": {
                    "dat_": 1
                },
                "FUN_08000ae8": {
                    "call_software_interrupt": 3,
                    "execute_software_interrupt": 3,
                    "execute_system_call": 4,
                    "execute_system_interrupt": 4,
                    "generate_software_interrupt": 1,
                    "get_user_input": 1,
                    "initialize_system": 1,
                    "initiate_software_interrupt": 1,
                    "interrupt_3f": 1,
                    "interrupt_function": 1,
                    "interrupt_software_call": 1,
                    "invoke_software_interrupt": 2,
                    "invoke_system_interrupt": 1,
                    "perform_system_call": 2,
                    "perform_system_interrupt": 1,
                    "send_interrupt_3f": 1,
                    "send_software_interrupt": 1,
                    "trigger_software_interrupt": 2
                },
                "PTR_": {
                    "ptr_": 1
                },
                "PTR_0000003f": {
                    "interrupt_code": 1
                },
                "PTR_undefined_int": {
                    "interrupt_number": 1
                },
                "software_interrupt": {
                    "call_interrupt": 1,
                    "execute_interrupt": 4,
                    "execute_system_call": 2,
                    "interrupt": 1,
                    "interrupt_handler": 1,
                    "invoke_system_call": 1,
                    "perform_interrupt": 1,
                    "perform_software_interrupt": 1,
                    "system_interrupt": 2,
                    "trigger_interrupt": 3,
                    "trigger_system_interrupt": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08000aec"
            ],
            "code": "\nvoid send_interrupt_3f_08000ae8(void)\n\n{\n  execute_interrupt(0x3f);\n  return;\n}\n\n",
            "current_name": "send_interrupt_3f_08000ae8",
            "entrypoint": "0x08000ae8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000ae8": "send_interrupt_3f_08000ae8",
                "software_interrupt": "execute_interrupt"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000aec": {
            "additional_data": {
                "FUN_08000aec": {
                    "handle_interrupt": 1,
                    "send_interrupt": 28,
                    "send_interrupt_function": 1,
                    "send_interrupt_to_device": 1
                },
                "param_1": {
                    "data": 15,
                    "data_ptr": 1,
                    "device_handle": 1,
                    "input_param": 2,
                    "interrupt_id": 1,
                    "interrupt_param": 1,
                    "interrupt_type": 6,
                    "message": 1,
                    "source_address": 1,
                    "target_address": 1,
                    "value": 1
                },
                "param_2": {
                    "": 1,
                    "unused_1": 1,
                    "unused_param": 4
                },
                "param_3": {
                    "": 1,
                    "unused_param2": 1
                },
                "param_4": {
                    "destination_address": 1,
                    "flag": 6,
                    "flags": 1,
                    "interrupt_code": 1,
                    "interrupt_data": 4,
                    "interrupt_flag": 1,
                    "interrupt_number": 2,
                    "interrupt_type": 2,
                    "interrupt_value": 1,
                    "length": 2,
                    "output_param": 2,
                    "param": 2,
                    "size": 2,
                    "status": 2,
                    "timeout": 1,
                    "unused_2": 1
                },
                "uVar1": {
                    "result": 11,
                    "send_result": 3,
                    "status": 2
                }
            },
            "called": [
                "FUN_08000ae8"
            ],
            "calling": [
                "FUN_08000bcc"
            ],
            "code": "\nundefined4 send_interrupt_to_device_08000aec(undefined4 data,undefined4 unused_param,undefined4 param_3,undefined4 flag)\n\n{\n  undefined4 result;\n  \n  if (DAT_2000017c != 0) {\n    return 0;\n  }\n  result = send_interrupt_3f_08000ae8(1,data,0,0,flag);\n  return result;\n}\n\n",
            "current_name": "send_interrupt_to_device_08000aec",
            "entrypoint": "0x08000aec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000aec": "send_interrupt_to_device_08000aec",
                "param_1": "data",
                "param_2": "unused_param",
                "param_4": "flag",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000b08": {
            "additional_data": {
                "DAT_20000010": {
                    "data5": 1,
                    "data_5": 2,
                    "data_val5": 1,
                    "data_value_9": 1
                },
                "DAT_20000014": {
                    "data6": 1,
                    "data_6": 2,
                    "data_val6": 1,
                    "data_value_10": 1
                },
                "DAT_20000018": {
                    "data3": 1,
                    "data_3": 2,
                    "data_val3": 1,
                    "data_value_7": 1
                },
                "DAT_2000001c": {
                    "data4": 1,
                    "data_4": 2,
                    "data_val4": 1,
                    "data_value_8": 1
                },
                "DAT_20000020": {
                    "data1": 1,
                    "data_1": 2,
                    "data_val1": 1,
                    "data_value_5": 1
                },
                "DAT_20000024": {
                    "data2": 1,
                    "data_2": 2,
                    "data_val2": 1,
                    "data_value_6": 1
                },
                "DAT_20000028": {
                    "data9": 1,
                    "data_9": 1,
                    "data_processing_value_4": 1,
                    "data_value_14": 1,
                    "processing_data3": 1
                },
                "DAT_2000002c": {
                    "data10": 1,
                    "data_10": 1,
                    "data_processing_value_5": 1,
                    "data_value_15": 1,
                    "processing_data4": 1
                },
                "DAT_20000030": {
                    "data11": 1,
                    "data_11": 1,
                    "data_processing_value_6": 1,
                    "data_value_16": 1,
                    "processing_data5": 1
                },
                "DAT_20000034": {
                    "data12": 1,
                    "data_12": 1,
                    "data_processing_value_7": 1,
                    "data_value_17": 1,
                    "processing_data6": 1
                },
                "DAT_20000038": {
                    "data8": 1,
                    "data_8": 1,
                    "data_processing_value_3": 1,
                    "data_value_13": 1,
                    "processing_data2": 1
                },
                "DAT_2000005c": {
                    "data7": 1,
                    "data_7": 1,
                    "data_processing_value_2": 1,
                    "data_value_12": 1,
                    "processing_data1": 1
                },
                "DAT_2000006c": {
                    "data15": 1,
                    "data_value_21": 1,
                    "input_data_3": 1,
                    "input_value_3": 1,
                    "memory_access_data3": 1
                },
                "DAT_20000070": {
                    "data14": 1,
                    "data_value_20": 1,
                    "input_data_2": 1,
                    "input_value_2": 1,
                    "memory_access_data2": 1
                },
                "DAT_20000074": {
                    "data13": 1,
                    "data_value_19": 1,
                    "input_data_1": 1,
                    "input_value_1": 1,
                    "memory_access_data1": 1
                },
                "DAT_20000188": {
                    "data_ptr2": 1,
                    "data_value_2": 3
                },
                "DAT_20000194": {
                    "data_processing_value_1": 1,
                    "data_ptr5": 1,
                    "data_value_11": 1,
                    "process_data": 1
                },
                "DAT_200001b8": {
                    "data_ptr3": 1,
                    "data_value_3": 3
                },
                "DAT_200001c0": {
                    "data_ptr1": 1,
                    "data_value_1": 3
                },
                "DAT_20000240": {
                    "data_ptr4": 1,
                    "data_value_4": 3
                },
                "DAT_2000024c": {
                    "data_ptr6": 1,
                    "data_value_18": 1,
                    "memory_access": 1,
                    "memory_access_value": 1
                },
                "FUN_08000b08": {
                    "initialize_and_process_data": 22,
                    "initialize_and_update_memory": 1,
                    "initialize_data": 4,
                    "initialize_data_processing": 4
                },
                "initialize_and_return_data_values_08001b18": {
                    "init_return_data_values": 1,
                    "initialize_and_return_data_values": 10,
                    "initialize_data_values": 9
                },
                "initialize_data_processing_08001510": {
                    "init_data_processing": 1,
                    "initialize_data_processing": 19
                },
                "param_1": {
                    "condition1": 1,
                    "condition_1": 3,
                    "first_param": 2,
                    "flag": 4,
                    "flag_parameter": 1,
                    "input_condition": 1,
                    "input_flag": 6,
                    "input_param1": 1,
                    "input_param_1": 1,
                    "is_condition_met": 1,
                    "is_param1_valid": 1,
                    "is_param_one_equal_to_one": 1,
                    "parameter1": 1,
                    "status": 3,
                    "status_flag": 2,
                    "user_option": 1,
                    "value1": 1
                },
                "param_2": {
                    "condition2": 1,
                    "condition_2": 3,
                    "input_param2": 1,
                    "input_param_2": 1,
                    "input_value": 6,
                    "is_param2_valid": 1,
                    "is_param_two_equal_to_ffff": 1,
                    "magic_number": 1,
                    "parameter2": 1,
                    "second_param": 2,
                    "user_value": 1,
                    "validation_value": 1,
                    "value": 8,
                    "value2": 1,
                    "value_parameter": 1,
                    "value_threshold": 1
                },
                "update_memory_access_and_process_input_0800157c": {
                    "update_memory_access_and_input_processing": 1,
                    "update_memory_access_and_process_input": 12,
                    "update_memory_and_process_input": 7
                }
            },
            "called": [
                "FUN_0800157c",
                "FUN_08001510",
                "FUN_08001b18"
            ],
            "calling": [],
            "code": "\nvoid initialize_and_process_data_08000b08(int input_flag,int value)\n\n{\n  if ((input_flag == 1) && (value == 0xffff)) {\n    initialize_and_return_data_values(&DAT_200001c0,&DAT_20000188,&DAT_200001b8,&DAT_20000240,DAT_20000020,DAT_20000024,\n                 DAT_20000018,DAT_2000001c,DAT_20000010,DAT_20000014,0);\n    initialize_data_processing(&DAT_20000194,DAT_2000005c,DAT_20000038,DAT_20000028,DAT_2000002c,DAT_20000030,\n                 DAT_20000034);\n    update_memory_access_and_process_input(&DAT_2000024c,DAT_20000074,DAT_20000070,DAT_2000006c);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_and_process_data_08000b08",
            "entrypoint": "0x08000b08",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000b08": "initialize_and_process_data_08000b08",
                "initialize_and_return_data_values_08001b18": "initialize_and_return_data_values",
                "initialize_data_processing_08001510": "initialize_data_processing",
                "param_1": "input_flag",
                "param_2": "value",
                "update_memory_access_and_process_input_0800157c": "update_memory_access_and_process_input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000bcc": {
            "additional_data": {
                "FUNC_080058e8": {
                    "calculate_value": 1,
                    "custom_function": 1,
                    "execute_function": 8,
                    "func": 1,
                    "function_080058e8": 3,
                    "handle_function": 1,
                    "initialize_device_with_value": 1,
                    "initialize_timer": 1,
                    "perform_action": 5,
                    "perform_calculation": 3,
                    "perform_operation": 6
                },
                "FUN_08000bcc": {
                    "initialize_and_communicate_with_device": 3,
                    "initialize_and_communicate_with_devices": 1,
                    "initialize_and_configure": 1,
                    "initialize_and_configure_device": 2,
                    "initialize_and_configure_devices": 1,
                    "initialize_and_configure_oven": 1,
                    "initialize_and_send_data": 12,
                    "initialize_and_send_data_to_device": 1,
                    "initialize_and_send_interrupt": 4,
                    "initialize_and_send_interrupts": 1,
                    "initialize_device": 1,
                    "initialize_reflow_oven": 2,
                    "initialize_system": 1
                },
                "initialize_and_return_data_values_080058e0": {
                    "initialize_and_return_data_values": 31
                },
                "initialize_serial_communication_08005a68": {
                    "initialize_serial_communication": 31
                },
                "process_and_duplicate_input_data_0800135a": {
                    "process_and_duplicate_data": 1,
                    "process_and_duplicate_input_data": 28,
                    "process_duplicate_and_assign_input_data": 1,
                    "process_duplicate_input_data_3": 1
                },
                "process_input_and_duplicate_data_080013a4": {
                    "process_and_duplicate_data": 2,
                    "process_and_duplicate_input_data": 5,
                    "process_duplicate_data": 1,
                    "process_duplicate_input_data": 4,
                    "process_input_and_duplicate_data": 19
                },
                "process_input_and_duplicate_data_08001550": {
                    "process_and_duplicate_data2": 2,
                    "process_and_duplicate_data_with_offset": 1,
                    "process_and_duplicate_input_data": 4,
                    "process_another_input_and_duplicate_data": 1,
                    "process_duplicate_data_with_offset": 2,
                    "process_duplicate_input_and_data": 1,
                    "process_duplicate_input_data_2": 1,
                    "process_duplicate_input_data_with_output": 1,
                    "process_input_and_duplicate_data": 4,
                    "process_input_and_duplicate_data2": 5,
                    "process_input_and_duplicate_data_2": 5,
                    "process_input_and_duplicate_data_with_offset": 2,
                    "process_input_duplicate_and_assign_data": 1,
                    "process_input_duplication": 1
                },
                "process_input_data_08005848": {
                    "process_input_data": 31
                },
                "process_memory_access_080057b4": {
                    "process_memory_access": 31
                },
                "process_string_08005c96": {
                    "process_string": 30,
                    "process_string_data": 1
                },
                "send_interrupt_to_device_08000aec": {
                    "send_interrupt_to_device": 31
                }
            },
            "called": [
                "FUN_080058e0",
                "FUN_08000aec",
                "FUN_080013a4",
                "FUN_08001366",
                "FUN_08001550",
                "FUN_080057b4",
                "FUN_08005c96",
                "FUN_080058e8",
                "FUN_08005a68",
                "FUN_08005848",
                "FUN_0800135a"
            ],
            "calling": [
                "FUN_08005f6c"
            ],
            "code": "\nvoid initialize_and_send_data_to_device_08000bcc(void)\n\n{\n  process_input_data(DAT_20000064,0);\n  process_memory_access(DAT_20000064,1);\n  process_input_data(DAT_20000004,0);\n  process_memory_access(DAT_20000004,1);\n  process_input_data(DAT_20000060,0);\n  process_memory_access(DAT_20000060,1);\n  process_input_data(DAT_20000004,1);\n  process_input_and_duplicate_data(&DAT_20000194,8,2,0);\n  process_input_and_duplicate_data2(&DAT_20000194,0,&DAT_20000008);\n  process_and_duplicate_input_data(&DAT_20000194);\n  process_string(&DAT_20000194,\"Reflow\");\n  process_input_and_duplicate_data_08001366(&DAT_20000194,0,1);\n  process_string(&DAT_20000194,\"Oven 1.2\");\n  process_input_data(DAT_20000004,0);\n  FUNC_080058e8(0x9c4);\n  process_and_duplicate_input_data(&DAT_20000194);\n  initialize_serial_communication(&DAT_2000036c,0xe100,6);\n  process_input_data(DAT_20000060,1);\n  DAT_20000258 = 2000;\n  DAT_200001b0 = initialize_and_return_data_values();\n  DAT_200001b4 = initialize_and_return_data_values();\n  send_interrupt_to_device(0);\n  return;\n}\n\n",
            "current_name": "initialize_and_send_data_to_device_08000bcc",
            "entrypoint": "0x08000bcc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000bcc": "initialize_and_send_data_to_device_08000bcc",
                "initialize_and_return_data_values_080058e0": "initialize_and_return_data_values",
                "initialize_serial_communication_08005a68": "initialize_serial_communication",
                "process_and_duplicate_input_data_0800135a": "process_and_duplicate_input_data",
                "process_input_and_duplicate_data_080013a4": "process_input_and_duplicate_data",
                "process_input_and_duplicate_data_08001550": "process_input_and_duplicate_data2",
                "process_input_data_08005848": "process_input_data",
                "process_memory_access_080057b4": "process_memory_access",
                "process_string_08005c96": "process_string",
                "send_interrupt_to_device_08000aec": "send_interrupt_to_device"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000cd0": {
            "additional_data": {
                "DAT_08007368": {
                    "constant_string1": 1,
                    "str2": 1,
                    "string1": 1
                },
                "DAT_20000004": {
                    "input_data1": 1,
                    "input_data2": 2,
                    "input_data4": 1,
                    "input_data5": 1,
                    "input_flag": 1
                },
                "DAT_20000060": {
                    "input_data2": 3,
                    "param1": 1,
                    "parameter": 1
                },
                "DAT_20000064": {
                    "input_data2": 2,
                    "input_data3": 1
                },
                "DAT_20000068": {
                    "control_value": 1,
                    "input_data2": 1,
                    "input_data4": 1,
                    "input_value": 1,
                    "updated_value": 1,
                    "value": 2
                },
                "DAT_20000180": {
                    "counter": 1,
                    "data_limit3": 1,
                    "data_value_5": 1,
                    "parameter_3": 1,
                    "sum_value": 1,
                    "threshold3": 1,
                    "timer_count2": 1,
                    "var3": 1
                },
                "DAT_20000184": {
                    "control_flag": 1,
                    "input_flag": 1,
                    "state": 2,
                    "state_flag": 1,
                    "status": 1
                },
                "DAT_20000188": {
                    "data_value1": 1,
                    "data_value_2": 1,
                    "parameter1": 2,
                    "result1": 4,
                    "result_data1": 1,
                    "result_high_1": 1,
                    "result_value1": 2
                },
                "DAT_2000018c": {
                    "data_value2": 1,
                    "data_value_3": 1,
                    "parameter2": 2,
                    "result2": 4,
                    "result_data2": 1,
                    "result_low_1": 1,
                    "result_value2": 2
                },
                "DAT_20000190": {
                    "data_value": 1,
                    "data_value3": 1,
                    "data_value_7": 1,
                    "threshold4": 1,
                    "timer_value": 1,
                    "updated_value": 1
                },
                "DAT_20000194": {
                    "data2": 1,
                    "input_data": 4,
                    "input_data3": 2,
                    "input_data_1": 1,
                    "output_data": 2,
                    "processed_data": 1
                },
                "DAT_200001b0": {
                    "data2": 1,
                    "data_limit2": 3,
                    "data_threshold2": 2,
                    "data_value_4": 1,
                    "limit2": 1,
                    "parameter_2": 1,
                    "threshold2": 3
                },
                "DAT_200001b4": {
                    "data1": 1,
                    "data_limit": 2,
                    "data_limit1": 1,
                    "data_threshold1": 2,
                    "data_value_1": 1,
                    "limit1": 1,
                    "parameter_1": 1,
                    "threshold1": 3
                },
                "DAT_200001b8": {
                    "binary_callback1": 1,
                    "binary_data3": 1,
                    "cy_value1": 1,
                    "data1": 1,
                    "param4": 1,
                    "parameter4": 1
                },
                "DAT_200001bc": {
                    "binary_callback2": 1,
                    "binary_data4": 1,
                    "cy_value2": 1,
                    "data2": 1,
                    "param5": 1,
                    "parameter3": 1
                },
                "DAT_200001c0": {
                    "parameter": 2,
                    "parameters": 4
                },
                "DAT_20000238": {
                    "state": 10,
                    "status": 2
                },
                "DAT_20000239": {
                    "bit_presence_flag": 1,
                    "flag": 5,
                    "flag2": 1,
                    "is_bit_present": 1,
                    "is_param_valid": 1,
                    "is_true_1": 1,
                    "is_valid_input": 1,
                    "should_reset": 1
                },
                "DAT_20000240": {
                    "binary_data1": 3,
                    "param2": 1,
                    "result3": 1,
                    "value1": 1
                },
                "DAT_20000244": {
                    "binary_data2": 3,
                    "param3": 1,
                    "result4": 1,
                    "value2": 1
                },
                "DAT_20000248": {
                    "flag2": 3,
                    "flag3": 1,
                    "is_time_setpoint": 1,
                    "is_time_setpoint_set": 1,
                    "is_time_setpoint_valid": 1,
                    "is_true_2": 1,
                    "should_reset2": 1,
                    "time_flag": 1,
                    "time_setting_flag": 1
                },
                "DAT_2000024c": {
                    "binary_data": 1,
                    "bit_data": 2,
                    "data1": 2,
                    "data_pointer": 1,
                    "input_data": 2,
                    "input_data1": 3
                },
                "DAT_20000250": {
                    "count": 3,
                    "counter": 6,
                    "counter_1": 1
                },
                "DAT_20000252": {
                    "output_counter": 1
                },
                "DAT_20000254": {
                    "threshold5": 1,
                    "time_value": 1,
                    "timer": 1,
                    "timer_count": 1
                },
                "DAT_20000258": {
                    "constant_value": 1,
                    "input_size": 1,
                    "offset": 1,
                    "parameter_value": 1,
                    "time": 1,
                    "value_difference": 1,
                    "var2": 1
                },
                "DAT_2000025c": {
                    "counter2": 1,
                    "data_value_6": 1,
                    "data_value_counter": 1,
                    "initial_value": 1,
                    "timer_counter": 1
                },
                "DAT_2000036c": {
                    "buffer": 1,
                    "converted_number": 1,
                    "input_data": 1,
                    "number": 1,
                    "output_string2": 1,
                    "result_string": 3
                },
                "DAT_200005d0": {
                    "base": 1
                },
                "FUN_08000cd0": {
                    "process_data": 26,
                    "process_data_values": 1
                },
                "PTR_s_Ready_2000003c": {
                    "ready_ptr": 1,
                    "ready_string": 2
                },
                "PTR_s_TC_Error_20000018": {
                    "tc_error_string": 1
                },
                "PTR_s_Time_Setpoint_Input_Output_20000028": {
                    "time_setpoint_string": 1
                },
                "bit_shift_and_concat_0800042c": {
                    "bit_shift_and_concat": 10,
                    "bit_shift_concat": 1
                },
                "calculate_and_update_float_values_08001918": {
                    "calculate_and_update_float_values": 11,
                    "calculate_update_float": 1
                },
                "calculate_and_update_result_080016b4": {
                    "calculate_and_update_result": 10
                },
                "calculate_result_08000194": {
                    "calculate_result": 13
                },
                "calculate_result_based_on_bit_presence_080015f8": {
                    "calculate_result_based_on_bit_presence": 13,
                    "calculate_result_based_on_bits": 1
                },
                "calculate_sum_of_binary_and_callback_08005f40": {
                    "calculate_sum_and_callback": 4,
                    "calculate_sum_of_binary_and_callback": 11
                },
                "calculate_sum_of_values_08005cd4": {
                    "calculate_sum_of_values": 14
                },
                "check_bit_presence_08005890": {
                    "check_bit_presence": 13
                },
                "check_if_cy_is_null_080009dc": {
                    "check_cy_null": 1,
                    "check_if_cy_is_null": 9
                },
                "check_if_parameter_is_valid_080009c8": {
                    "check_if_parameter_is_valid": 12,
                    "check_parameter_validity": 3
                },
                "convert_number_to_base_08005d82": {
                    "convert_number_to_base": 14
                },
                "extraout_r1": {
                    "extra_out1": 1,
                    "extra_output1": 2,
                    "extra_output_1": 2,
                    "extra_result1": 7,
                    "extra_result_1": 1,
                    "extra_value1": 1,
                    "extraout1": 1,
                    "result3": 1,
                    "string_processing_result_1": 1
                },
                "extraout_r1_00": {
                    "extra_out2": 1,
                    "extra_output2": 2,
                    "extra_output_2": 2,
                    "extra_result2": 7,
                    "extra_result_2": 1,
                    "extra_value2": 1,
                    "extraout2": 1,
                    "result4": 1,
                    "string_processing_result_2": 1
                },
                "extraout_r1_01": {
                    "extra_out3": 1,
                    "extra_output3": 2,
                    "extra_output_3": 2,
                    "extra_result3": 7,
                    "extra_result_3": 1,
                    "extra_value3": 1,
                    "extraout3": 1,
                    "result5": 1,
                    "string_processing_result_3": 1
                },
                "get_updated_value_08005754": {
                    "get_updated_value": 15
                },
                "iVar3": {
                    "is_valid": 1,
                    "parameter": 1,
                    "parameter_validation_result": 2,
                    "result": 8,
                    "result2": 1,
                    "result_check": 1,
                    "result_code": 1,
                    "return_value": 2,
                    "status": 1
                },
                "initialize_and_return_data_values_080058e0": {
                    "get_initial_data_values": 1,
                    "initialize_and_return_data_values": 9,
                    "initialize_and_return_data_values2": 2,
                    "initialize_data": 1,
                    "initialize_data_values": 2,
                    "initialize_data_values_1": 1
                },
                "initialize_and_return_parameters_080018f8": {
                    "initialize_and_return_parameters": 9,
                    "initialize_and_return_parameters2": 1,
                    "initialize_parameters": 1,
                    "initialize_parameters_1": 1
                },
                "is_end_of_input_valid_08000a18": {
                    "is_end_of_input_valid": 12,
                    "is_input_valid": 1
                },
                "is_null_080009dc": {
                    "is_null": 1
                },
                "process_and_duplicate_input_data_0800134e": {
                    "process_and_duplicate_input_data": 2,
                    "process_and_duplicate_input_data2": 1
                },
                "process_and_duplicate_input_data_0800135a": {
                    "process_and_duplicate_input_data": 13,
                    "process_duplicate_data": 1
                },
                "process_and_duplicate_input_data_08001366": {
                    "process_and_duplicate_input_data2": 1
                },
                "process_and_validate_parameters_08000a04": {
                    "process_and_validate_parameters": 10,
                    "process_and_validate_parameters2": 2,
                    "process_and_validate_parameters3": 1,
                    "process_validate_parameters": 1
                },
                "process_and_validate_parameters_08001918": {
                    "process_and_validate_parameters": 1
                },
                "process_and_validate_parameters_08001960": {
                    "process_and_validate_parameters": 4,
                    "process_and_validate_parameters2": 1,
                    "process_validate_parameters_1": 1
                },
                "process_binary_data_08005f2c": {
                    "process_binary_data": 12,
                    "process_binary_data2": 1,
                    "process_binary_data_1": 1
                },
                "process_input_and_duplicate_data_0800134e": {
                    "process_and_duplicate_data": 1,
                    "process_and_duplicate_data2": 1,
                    "process_and_duplicate_data_1": 1,
                    "process_and_duplicate_input_data": 1,
                    "process_input_and_duplicate_data": 2,
                    "process_input_and_duplicate_data2": 1
                },
                "process_input_and_duplicate_data_08001366": {
                    "process_and_duplicate_data": 3,
                    "process_and_duplicate_input_data": 1,
                    "process_input_and_duplicate_data": 9
                },
                "process_input_data_08005848": {
                    "process_input_data": 13,
                    "process_input_data2": 1
                },
                "process_string_08005c96": {
                    "process_string": 13,
                    "process_string2": 1
                },
                "reverse_bits_and_shift_0800040c": {
                    "reverse_bits_and_shift": 13
                },
                "uVar1": {
                    "data_value": 9,
                    "data_value1": 7,
                    "data_values1": 1,
                    "data_values_1": 1,
                    "initialized_data": 1,
                    "initialized_data_value": 1
                },
                "uVar2": {
                    "bit_result_lower": 1,
                    "data_value2": 7,
                    "data_values2": 1,
                    "data_values_2": 1,
                    "result1": 3,
                    "result_high": 1,
                    "result_low": 1,
                    "result_lower": 2,
                    "result_upper": 1,
                    "temp_value1": 1,
                    "value1": 1
                },
                "uVar4": {
                    "bit_result_upper": 1,
                    "data_value3": 5,
                    "data_value4": 1,
                    "data_values4": 1,
                    "data_values_3": 1,
                    "result2": 2,
                    "result3": 1,
                    "result_high": 1,
                    "result_low": 1,
                    "result_lower": 1,
                    "result_upper": 2,
                    "temp_value": 1,
                    "temp_value2": 1,
                    "value2": 1
                },
                "uVar5": {
                    "bit_result": 1,
                    "calc_result": 2,
                    "calculated_result": 3,
                    "calculation_result": 4,
                    "concatenated_result": 1,
                    "concatenated_value": 1,
                    "result": 3,
                    "result3": 1,
                    "result_combined_value": 1,
                    "result_value": 2,
                    "result_values": 1
                },
                "update_param_status_08001a44": {
                    "update_param_status": 12
                },
                "validate_and_return_result_080009f0": {
                    "validate_and_return_result": 13,
                    "validate_return_result": 1
                }
            },
            "called": [
                "FUN_08001960",
                "FUN_08001918",
                "FUN_08005c96",
                "FUN_080009f0",
                "FUN_08001a44",
                "FUN_080015f8",
                "FUN_080058e0",
                "FUN_080018f8",
                "FUN_08005d82",
                "FUN_08000a04",
                "FUN_080009dc",
                "FUN_08005f40",
                "FUN_08001366",
                "FUN_080009c8",
                "FUN_0800042c",
                "FUN_08005f2c",
                "FUN_08000a18",
                "FUN_0800134e",
                "FUN_08005cd4",
                "FUN_080016b4",
                "FUN_08005848",
                "FUN_08005754",
                "FUN_08000194",
                "FUN_0800040c",
                "FUN_08005890",
                "FUN_0800135a"
            ],
            "calling": [
                "FUN_08005f6c"
            ],
            "code": "\nvoid process_data_values_08000cd0(void)\n\n{\n  uint data_value;\n  undefined4 data_value2;\n  int result;\n  undefined4 data_value3;\n  undefined4 extra_result1;\n  undefined4 extra_result2;\n  undefined4 extra_result3;\n  undefined8 calculation_result;\n  \n  data_value = initialize_and_return_data_values();\n  if (DAT_200001b4 < data_value) {\n    DAT_200001b4 = DAT_200001b4 + 1000;\n    calculation_result = calculate_result_based_on_bit_presence(&DAT_2000024c,0);\n    data_value3 = (undefined4)((ulonglong)calculation_result >> 0x20);\n    data_value2 = (undefined4)calculation_result;\n    DAT_20000188 = data_value2;\n    DAT_2000018c = data_value3;\n    result = check_if_parameter_is_valid(data_value2,data_value3,0,0x40c38800);\n    if (((result != 0) || (result = check_if_parameter_is_valid(data_value2,data_value3,0,0x40c38880), result != 0)) ||\n       (result = check_if_parameter_is_valid(data_value2,data_value3,0,0x40c38900), result != 0)) {\n      DAT_20000238 = 7;\n      DAT_20000239 = '\\0';\n    }\n  }\n  data_value = initialize_and_return_data_values();\n  data_value2 = DAT_20000060;\n  if (DAT_200001b0 < data_value) {\n    DAT_200001b0 = DAT_200001b0 + 1000;\n    if (DAT_20000239 == '\\x01') {\n      result = check_bit_presence(DAT_20000060);\n      process_input_data(data_value2,result == 0);\n      DAT_20000250 = DAT_20000250 + 1;\n      convert_number_to_base(&DAT_2000036c,DAT_20000250,10);\n      process_string(&DAT_2000036c,&DAT_08007368);\n      process_binary_data(&DAT_2000036c,extra_result1,DAT_20000240,DAT_20000244,2);\n      process_string(&DAT_2000036c,&DAT_08007368);\n      process_binary_data(&DAT_2000036c,extra_result2,DAT_20000188,DAT_2000018c,2);\n      process_string(&DAT_2000036c,&DAT_08007368);\n      calculate_sum_of_binary_and_callback(&DAT_2000036c,extra_result3,DAT_200001b8,DAT_200001bc,2);\n    }\n    else {\n      process_input_data(DAT_20000060,1);\n    }\n    process_and_duplicate_input_data(&DAT_20000194);\n    process_string(&DAT_20000194,(&PTR_s_Ready_2000003c)[DAT_20000238]);\n    process_input_and_duplicate_data(&DAT_20000194,0,1);\n    if (DAT_20000238 == 7) {\n      process_string(&DAT_20000194,\"TC Error!\");\n    }\n    else {\n      process_binary_data(&DAT_20000194,2,DAT_20000188,DAT_2000018c,2);\n      process_input_and_duplicate_data(&DAT_20000194,0);\n      process_string(&DAT_20000194,&DAT_08007378);\n    }\n  }\n  data_value3 = DAT_2000018c;\n  data_value2 = DAT_20000188;\n  switch(DAT_20000238) {\n  case 0:\n    result = process_and_validate_parameters(DAT_20000188,DAT_2000018c,0,0x40490000);\n    if (result == 0) {\n      if (DAT_20000248 == '\\x01') {\n        calculate_sum_of_values(&DAT_2000036c,\"Time Setpoint Input Output\");\n        DAT_20000250 = 0;\n        DAT_2000025c = initialize_and_return_data_values();\n        DAT_20000240 = 0;\n        DAT_20000244 = 0x4062c000;\n        calculation_result = bit_shift_and_concat(DAT_20000258);\n        process_and_validate_parameters(&DAT_200001c0,(int)((ulonglong)calculation_result >> 0x20),0,0,calculation_result);\n        calculate_and_update_float_values(&DAT_200001c0,1000);\n        update_param_status(&DAT_200001c0,1);\n        DAT_20000238 = 1;\n      }\n    }\n    else {\n      DAT_20000238 = 6;\n    }\n    break;\n  case 1:\n    DAT_20000239 = '\\x01';\n    result = process_and_validate_parameters(DAT_20000188,DAT_2000018c,0,0x4062c000);\n    if (result != 0) {\n      calculation_result = initialize_and_return_data_values();\n      DAT_20000254 = (int)calculation_result + 9000;\n      initialize_and_return_parameters(&DAT_200001c0,(int)((ulonglong)calculation_result >> 0x20),0,0x4072c000,0x9999999a,0x3fa99999,\n                   0,0x406f4000);\n      DAT_20000240 = 0;\n      DAT_20000244 = 0x40636000;\n      DAT_20000238 = 2;\n    }\n    break;\n  case 2:\n    data_value = initialize_and_return_data_values();\n    if (DAT_20000254 < data_value) {\n      result = initialize_and_return_data_values();\n      DAT_20000254 = result + 9000;\n      calculation_result = calculate_result(DAT_20000240,DAT_20000244,0,0x40140000);\n      DAT_20000244 = (undefined4)((ulonglong)calculation_result >> 0x20);\n      DAT_20000240 = (undefined4)calculation_result;\n      calculation_result = is_end_of_input_valid(DAT_20000240,DAT_20000244,0,0x40690000);\n      if ((int)calculation_result != 0) {\n        initialize_and_return_parameters(&DAT_200001c0,(int)((ulonglong)calculation_result >> 0x20),0,0x4072c000,0x9999999a,\n                     0x3fa99999,0,0x4075e000);\n        DAT_20000240 = 0;\n        DAT_20000244 = 0x406f4000;\n        DAT_20000238 = 3;\n      }\n    }\n    break;\n  case 3:\n    calculation_result = process_and_validate_parameters(DAT_20000188,DAT_2000018c,0,0x406ea000);\n    if ((int)calculation_result != 0) {\n      initialize_and_return_parameters(&DAT_200001c0,(int)((ulonglong)calculation_result >> 0x20),0,0x4072c000,0x9999999a,0x3fa99999,\n                   0,0x4075e000);\n      DAT_20000240 = 0;\n      DAT_20000244 = 0x40590000;\n      DAT_20000238 = 4;\n    }\n    break;\n  case 4:\n    result = validate_and_return_result(DAT_20000188,DAT_2000018c,0,0x40590000);\n    if (result != 0) {\n      result = initialize_and_return_data_values();\n      DAT_20000180 = result + 1000;\n      process_input_data(DAT_20000004,1);\n      DAT_20000239 = '\\0';\n      DAT_20000238 = 5;\n    }\n    break;\n  case 5:\n    data_value = initialize_and_return_data_values();\n    if (DAT_20000180 < data_value) {\n      process_input_data(DAT_20000004,0);\n      DAT_20000238 = 0;\n    }\n    break;\n  case 6:\n    result = check_if_cy_is_null(DAT_20000188,DAT_2000018c,0,0x40490000);\n    if (result != 0) {\n      DAT_20000238 = 0;\n    }\n    break;\n  case 7:\n    result = check_if_parameter_is_valid(DAT_20000188,DAT_2000018c,0,0x40c38800);\n    if (((result == 0) && (result = check_if_parameter_is_valid(data_value2,data_value3,0,0x40c38880), result == 0)) &&\n       (result = check_if_parameter_is_valid(data_value2,data_value3,0,0x40c38900), result == 0)) {\n      DAT_20000238 = 0;\n    }\n    else {\n      DAT_20000238 = 7;\n    }\n  }\n  if ((DAT_20000248 == '\\x01') && (DAT_20000239 == '\\x01')) {\n    DAT_20000239 = '\\0';\n    DAT_20000238 = 0;\n  }\n  if (DAT_20000184 == '\\x01') {\n    result = get_updated_value(DAT_20000068);\n    if (result == 0) {\n      result = initialize_and_return_data_values();\n      if (0x32 < (uint)(result - DAT_20000190)) {\n        DAT_20000184 = '\\x02';\n      }\n    }\n    else {\n      DAT_20000184 = '\\0';\n    }\n  }\n  else if (DAT_20000184 == '\\0') {\n    DAT_20000248 = '\\0';\n    result = get_updated_value(DAT_20000068);\n    if (result == 0) {\n      DAT_20000190 = initialize_and_return_data_values();\n      DAT_20000184 = '\\x01';\n    }\n  }\n  else if ((DAT_20000184 == '\\x02') && (result = get_updated_value(DAT_20000068), result != 0)) {\n    DAT_20000248 = '\\x01';\n    DAT_20000184 = '\\0';\n  }\n  if (DAT_20000239 == '\\x01') {\n    result = initialize_and_return_data_values();\n    calculate_and_update_result(&DAT_200001c0);\n    if (DAT_20000258 < (uint)(result - DAT_2000025c)) {\n      DAT_2000025c = DAT_2000025c + DAT_20000258;\n    }\n    calculation_result = reverse_bits_and_shift(result - DAT_2000025c);\n    result = check_if_cy_is_null((int)calculation_result,(int)((ulonglong)calculation_result >> 0x20),DAT_200001b8,DAT_200001bc);\n    if (result == 0) {\n      process_input_data(DAT_20000064,0);\n    }\n    else {\n      process_input_data(DAT_20000064,1);\n    }\n  }\n  else {\n    process_input_data(DAT_20000064,0);\n  }\n  return;\n}\n\n",
            "current_name": "process_data_values_08000cd0",
            "entrypoint": "0x08000cd0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000cd0": "process_data_values_08000cd0",
                "bit_shift_and_concat_0800042c": "bit_shift_and_concat",
                "calculate_and_update_float_values_08001918": "calculate_and_update_float_values",
                "calculate_and_update_result_080016b4": "calculate_and_update_result",
                "calculate_result_08000194": "calculate_result",
                "calculate_result_based_on_bit_presence_080015f8": "calculate_result_based_on_bit_presence",
                "calculate_sum_of_binary_and_callback_08005f40": "calculate_sum_of_binary_and_callback",
                "calculate_sum_of_values_08005cd4": "calculate_sum_of_values",
                "check_bit_presence_08005890": "check_bit_presence",
                "check_if_cy_is_null_080009dc": "check_if_cy_is_null",
                "check_if_parameter_is_valid_080009c8": "check_if_parameter_is_valid",
                "convert_number_to_base_08005d82": "convert_number_to_base",
                "extraout_r1": "extra_result1",
                "extraout_r1_00": "extra_result2",
                "extraout_r1_01": "extra_result3",
                "get_updated_value_08005754": "get_updated_value",
                "iVar3": "result",
                "initialize_and_return_data_values_080058e0": "initialize_and_return_data_values",
                "initialize_and_return_parameters_080018f8": "initialize_and_return_parameters",
                "is_end_of_input_valid_08000a18": "is_end_of_input_valid",
                "is_null_080009dc": "is_null",
                "process_and_duplicate_input_data_0800135a": "process_and_duplicate_input_data",
                "process_and_validate_parameters_08000a04": "process_and_validate_parameters",
                "process_and_validate_parameters_08001960": "process_and_validate_parameters",
                "process_binary_data_08005f2c": "process_binary_data",
                "process_input_and_duplicate_data_0800134e": "process_input_and_duplicate_data",
                "process_input_and_duplicate_data_08001366": "process_input_and_duplicate_data",
                "process_input_data_08005848": "process_input_data",
                "process_string_08005c96": "process_string",
                "reverse_bits_and_shift_0800040c": "reverse_bits_and_shift",
                "uVar1": "data_value",
                "uVar2": "data_value2",
                "uVar4": "data_value3",
                "uVar5": "calculation_result",
                "update_param_status_08001a44": "update_param_status",
                "validate_and_return_result_080009f0": "validate_and_return_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001294": {
            "additional_data": {
                "FUN_08001294": {
                    "copy_param_to_memory": 1,
                    "initialize_params": 1,
                    "save_params": 1,
                    "set_data": 1,
                    "set_parameters": 15,
                    "set_params": 8,
                    "store_params_in_memory": 1,
                    "update_param_values": 1,
                    "update_parameter": 1
                },
                "param_1": {
                    "data_address": 2,
                    "memory_address": 2,
                    "obj": 2,
                    "obj_address": 3,
                    "obj_ptr": 1,
                    "object_address": 18,
                    "object_pointer": 1,
                    "param_base_addr": 1,
                    "param_base_address": 1
                },
                "param_2": {
                    "param1": 1,
                    "param2": 6,
                    "param_2": 1,
                    "parameter1": 2,
                    "parameter2": 1,
                    "value1": 18,
                    "value2": 1,
                    "value_1": 1
                },
                "param_3": {
                    "param2": 1,
                    "param3": 6,
                    "param_3": 1,
                    "parameter2": 2,
                    "parameter3": 1,
                    "value2": 18,
                    "value3": 1,
                    "value_2": 1
                },
                "param_4": {
                    "param3": 1,
                    "param4": 6,
                    "param_4": 1,
                    "parameter3": 2,
                    "parameter4": 1,
                    "value3": 18,
                    "value4": 1,
                    "value_3": 1
                },
                "param_5": {
                    "param4": 1,
                    "param5": 6,
                    "param_5": 1,
                    "parameter4": 2,
                    "parameter5": 1,
                    "value4": 18,
                    "value5": 1,
                    "value_4": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080013a4"
            ],
            "code": "\nvoid set_parameters_08001294(int object_address,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *(undefined *)(object_address + 0x18) = value1;\n  *(undefined *)(object_address + 0x19) = value2;\n  *(undefined *)(object_address + 0x1a) = value3;\n  *(undefined *)(object_address + 0x1b) = value4;\n  return;\n}\n\n",
            "current_name": "set_parameters_08001294",
            "entrypoint": "0x08001294",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001294": "set_parameters_08001294",
                "param_1": "object_address",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080012a2": {
            "additional_data": {
                "FUN_080012a2": {
                    "input_data_processing": 1,
                    "process_and_duplicate_input_data": 1,
                    "process_data": 6,
                    "process_input": 10,
                    "process_input_data": 11,
                    "process_input_multiple_times": 1,
                    "process_input_values": 1
                },
                "param_1": {
                    "data": 4,
                    "data_address": 1,
                    "data_index": 1,
                    "data_offset": 1,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "input": 1,
                    "input_data": 15,
                    "input_data_address": 3,
                    "input_parameter": 1,
                    "input_pointer": 1
                },
                "process_input_data_08005848": {
                    "process_data": 10,
                    "process_data_input": 1,
                    "process_input_data": 7
                }
            },
            "called": [
                "FUN_08005848"
            ],
            "calling": [
                "FUN_080012c0",
                "FUN_080012e8"
            ],
            "code": "\nvoid process_and_duplicate_input_data_080012a2(int input_data)\n\n{\n  process_data(*(undefined *)(input_data + 10),0);\n  process_data(*(undefined *)(input_data + 10),1);\n  process_data(*(undefined *)(input_data + 10),0);\n  return;\n}\n\n",
            "current_name": "process_and_duplicate_input_data_080012a2",
            "entrypoint": "0x080012a2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080012a2": "process_and_duplicate_input_data_080012a2",
                "param_1": "input_data",
                "process_input_data_08005848": "process_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080012c0": {
            "additional_data": {
                "FUN_080012c0": {
                    "process_and_duplicate_data": 1,
                    "process_and_duplicate_input": 8,
                    "process_and_duplicate_input_data": 2,
                    "process_data": 1,
                    "process_input": 6,
                    "process_input_and_duplicate_data": 7,
                    "process_input_batch": 1,
                    "process_input_data": 4,
                    "process_input_data_loop": 1
                },
                "param_1": {
                    "base_address": 1,
                    "data_address": 3,
                    "input_addr": 1,
                    "input_address": 5,
                    "input_array": 1,
                    "input_array_addr": 1,
                    "input_buffer": 1,
                    "input_data": 11,
                    "input_data_addr": 1,
                    "input_data_address": 4,
                    "input_ptr": 2
                },
                "param_2": {
                    "bitmask": 1,
                    "control_data": 1,
                    "flag": 5,
                    "flag_value": 1,
                    "input_data": 9,
                    "input_data_value": 1,
                    "input_mask": 1,
                    "input_val": 1,
                    "input_value": 6,
                    "mask": 2,
                    "shift_amount": 1,
                    "shift_value": 1,
                    "value": 1
                },
                "process_and_duplicate_input_data_080012a2": {
                    "process_and_duplicate_data": 1,
                    "process_and_duplicate_input_data": 2
                },
                "process_input_data_08005848": {
                    "process_data": 1,
                    "process_input_data": 2
                },
                "uVar1": {
                    "counter": 3,
                    "i": 1,
                    "index": 9,
                    "iteration": 7,
                    "iteration_count": 9,
                    "iteration_counter": 1,
                    "loop_counter": 1
                }
            },
            "called": [
                "FUN_080012a2",
                "FUN_08005848"
            ],
            "calling": [
                "FUN_08001310",
                "FUN_080013a4"
            ],
            "code": "\nvoid process_and_duplicate_input_data_080012c0(int input_data,int input_data)\n\n{\n  uint iteration_count;\n  \n  for (iteration_count = 0; (int)iteration_count < 4; iteration_count = iteration_count + 1) {\n    process_input_data(*(undefined *)(input_data + iteration_count + 0xb),input_data >> (iteration_count & 0xff) & 1);\n  }\n  process_and_duplicate_input_data_080012c0(input_data);\n  return;\n}\n\n",
            "current_name": "process_and_duplicate_input_data_080012c0",
            "entrypoint": "0x080012c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080012c0": "process_and_duplicate_input_data_080012c0",
                "param_1": "input_data",
                "param_2": "input_data",
                "process_and_duplicate_input_data_080012a2": "process_and_duplicate_input_data",
                "process_input_data_08005848": "process_input_data",
                "uVar1": "iteration_count"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080012e8": {
            "additional_data": {
                "FUN_080012e8": {
                    "process_and_duplicate_input": 9,
                    "process_and_update_data": 1,
                    "process_data": 3,
                    "process_input": 9,
                    "process_input_and_duplicate_data": 5,
                    "process_input_data": 2,
                    "process_input_data_loop": 1,
                    "process_input_function": 1
                },
                "param_1": {
                    "data_address": 7,
                    "data_array": 2,
                    "data_pointer": 2,
                    "data_ptr": 2,
                    "input_address": 6,
                    "input_array": 2,
                    "input_data": 2,
                    "input_data_address": 2,
                    "input_data_base_address": 1,
                    "input_data_pointer": 1,
                    "input_data_start": 1,
                    "input_offset": 1,
                    "input_ptr": 1,
                    "input_start": 1
                },
                "param_2": {
                    "bitflag": 1,
                    "config_flags": 1,
                    "control_bits": 1,
                    "flags": 1,
                    "input_data": 13,
                    "input_data_bitmask": 1,
                    "input_data_value": 1,
                    "input_mask": 2,
                    "input_value": 9,
                    "mask": 1
                },
                "process_and_duplicate_input_data_080012a2": {
                    "process_and_duplicate_input": 2,
                    "process_and_duplicate_input_data": 2
                },
                "process_input_data_08005848": {
                    "process_data": 2,
                    "process_input_data": 2
                },
                "uVar1": {
                    "counter": 7,
                    "i": 4,
                    "index": 10,
                    "iteration": 3,
                    "iteration_count": 4,
                    "iteration_counter": 2
                }
            },
            "called": [
                "FUN_080012a2",
                "FUN_08005848"
            ],
            "calling": [
                "FUN_08001310"
            ],
            "code": "\nvoid process_input_and_duplicate_data_080012e8(int data_address,int input_data)\n\n{\n  uint index;\n  \n  for (index = 0; (int)index < 8; index = index + 1) {\n    process_data(*(undefined *)(data_address + index + 0xb),input_data >> (index & 0xff) & 1);\n  }\n  process_and_duplicate_input(data_address);\n  return;\n}\n\n",
            "current_name": "process_input_and_duplicate_data_080012e8",
            "entrypoint": "0x080012e8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080012e8": "process_input_and_duplicate_data_080012e8",
                "param_1": "data_address",
                "param_2": "input_data",
                "process_and_duplicate_input_data_080012a2": "process_and_duplicate_input",
                "process_input_data_08005848": "process_data",
                "uVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001310": {
            "additional_data": {
                "FUN_08001310": {
                    "process_and_duplicate_data": 1,
                    "process_data": 2,
                    "process_input": 22,
                    "process_input_and_duplicate": 1,
                    "process_input_and_duplicate_data": 4,
                    "process_input_handler": 1
                },
                "param_1": {
                    "data": 1,
                    "data_address": 4,
                    "data_offset": 1,
                    "data_pointer": 1,
                    "data_start_address": 1,
                    "input_addr": 2,
                    "input_address": 4,
                    "input_data": 6,
                    "input_data_address": 1,
                    "input_handler_param": 1,
                    "input_offset": 1,
                    "input_param": 1,
                    "input_pointer": 5,
                    "input_ptr": 2
                },
                "param_2": {
                    "data": 1,
                    "data_length": 2,
                    "data_param": 1,
                    "data_size": 2,
                    "data_value": 2,
                    "flags": 3,
                    "input_data": 7,
                    "input_data_value": 1,
                    "input_flags": 2,
                    "input_size": 4,
                    "input_value": 5,
                    "options": 1
                },
                "param_3": {
                    "arg1": 1,
                    "custom_param1": 1,
                    "data_1": 1,
                    "data_param_1": 1,
                    "data_ptr": 1,
                    "first_data": 1,
                    "first_param": 1,
                    "input1": 1,
                    "input_1": 1,
                    "param1": 1,
                    "param3": 6,
                    "param_3": 9,
                    "param_a": 6
                },
                "param_4": {
                    "arg2": 1,
                    "custom_param2": 1,
                    "data_2": 1,
                    "data_param_2": 1,
                    "data_value": 1,
                    "input2": 1,
                    "input_2": 1,
                    "param2": 1,
                    "param4": 6,
                    "param_4": 9,
                    "param_b": 6,
                    "second_data": 1,
                    "second_param": 1
                },
                "process_and_duplicate_input_data_080012c0": {
                    "process_and_duplicate_data": 6,
                    "process_and_duplicate_input_data": 2,
                    "process_and_duplicate_input_data1": 1
                },
                "process_input_and_duplicate_data_080012e8": {
                    "process_and_duplicate_data_if_flag_set": 1,
                    "process_and_duplicate_input": 1,
                    "process_input_and_duplicate_data": 8
                },
                "process_input_data_080012c0": {
                    "process_and_duplicate_input_data": 2
                },
                "process_input_data_08005848": {
                    "process_data": 6,
                    "process_input_data": 4
                },
                "process_input_data_08005848_1": {
                    "process_data_1": 1,
                    "process_input_data1": 1
                },
                "process_input_data_08005848_2": {
                    "process_data_2": 1
                },
                "process_input_data_08005848_3": {
                    "process_data_3": 1
                },
                "process_input_data_08005848_4": {
                    "process_data_4": 1
                }
            },
            "called": [
                "FUN_080012c0",
                "FUN_08005848",
                "FUN_080012e8"
            ],
            "calling": [
                "FUN_080013a4",
                "FUN_08001366",
                "FUN_08001550",
                "FUN_0800134e",
                "FUN_0800135a",
                "FUN_0800138e"
            ],
            "code": "\nvoid process_input_and_duplicate_data_08001310(int input_data,uint input_data,undefined4 param_3,undefined4 param_4)\n\n{\n  process_data(*(undefined *)(input_data + 8),param_3,param_3,param_4,param_4);\n  if (*(char *)(input_data + 9) != -1) {\n    process_data(*(char *)(input_data + 9),0);\n  }\n  if ((*(byte *)(input_data + 0x13) & 0x10) == 0) {\n    process_and_duplicate_data(input_data,input_data >> 4);\n    process_and_duplicate_data(input_data,input_data);\n    return;\n  }\n  process_input_and_duplicate_data_08001310(input_data,input_data);\n  return;\n}\n\n",
            "current_name": "process_input_and_duplicate_data_08001310",
            "entrypoint": "0x08001310",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001310": "process_input_and_duplicate_data_08001310",
                "param_1": "input_data",
                "param_2": "input_data",
                "process_and_duplicate_input_data_080012c0": "process_and_duplicate_data",
                "process_input_and_duplicate_data_080012e8": "process_input_and_duplicate_data",
                "process_input_data_08005848": "process_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800134e": {
            "additional_data": {
                "1": {
                    "flag": 1
                },
                "FUN_0800134e": {
                    "process_and_duplicate_data": 19,
                    "process_and_duplicate_input": 4,
                    "process_and_duplicate_input_data": 2,
                    "process_input_and_duplicate_data": 1,
                    "process_input_and_return_1": 1,
                    "process_input_and_return_one": 1,
                    "process_input_and_return_result": 1,
                    "process_input_and_return_status": 1,
                    "process_input_and_return_value": 1
                },
                "param_1": {
                    "input1": 2,
                    "input_1": 9,
                    "input_data": 15,
                    "input_data_1": 3,
                    "input_param": 1,
                    "input_param_1": 1
                },
                "param_2": {
                    "additional_data": 2,
                    "additional_input": 1,
                    "data_length": 8,
                    "data_param": 1,
                    "data_size": 1,
                    "duplicate_data": 1,
                    "input2": 2,
                    "input_2": 9,
                    "input_data_2": 3,
                    "input_param_2": 1,
                    "output_data": 2
                },
                "param_3": {
                    "constant_1": 1,
                    "constant_value": 1,
                    "flag": 2,
                    "param_3": 1,
                    "parameter_3": 2,
                    "unused": 1,
                    "unused_param": 3
                },
                "param_4": {
                    "buffer": 1,
                    "config_data": 1,
                    "data": 3,
                    "duplicate_data": 8,
                    "duplicate_param": 1,
                    "input4": 2,
                    "input_3": 1,
                    "input_4": 1,
                    "input_param_4": 1,
                    "length": 1,
                    "output": 2,
                    "output_buffer": 1,
                    "output_data": 5,
                    "parameter_4": 1,
                    "size": 1,
                    "variable": 1
                },
                "param_5": {
                    "duplicate_data": 1,
                    "duplicate_size": 1
                },
                "param_6": {
                    "output_data": 1
                },
                "process_input_and_duplicate_data_08001310": {
                    "process_and_duplicate_data": 1,
                    "process_data": 5,
                    "process_data_and_duplicate": 1,
                    "process_input_and_duplicate": 1,
                    "process_input_and_duplicate_data": 2
                }
            },
            "called": [
                "FUN_08001310"
            ],
            "calling": [
                "FUN_08000cd0"
            ],
            "code": "\nundefined4 process_input_and_duplicate_data_0800134e(undefined4 input_data,undefined4 input_2,undefined4 unused_param,undefined4 duplicate_data)\n\n{\n  process_data(input_data,input_2,1,duplicate_data,duplicate_data);\n  return 1;\n}\n\n",
            "current_name": "process_input_and_duplicate_data_0800134e",
            "entrypoint": "0x0800134e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800134e": "process_input_and_duplicate_data_0800134e",
                "param_1": "input_data",
                "param_2": "input_2",
                "param_3": "unused_param",
                "param_4": "duplicate_data",
                "process_input_and_duplicate_data_08001310": "process_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800135a": {
            "additional_data": {
                "FUN_0800135a": {
                    "process_and_duplicate_data": 23,
                    "process_and_duplicate_input": 2,
                    "process_and_duplicate_input_data": 2,
                    "process_input_and_duplicate_data": 3
                },
                "param_1": {
                    "input": 7,
                    "input_1": 2,
                    "input_buffer": 1,
                    "input_data": 19
                },
                "param_2": {
                    "": 1,
                    "data_size": 1,
                    "input_2": 1,
                    "param_2": 4,
                    "unused": 2,
                    "unused1": 1,
                    "unused_param": 5,
                    "unused_param1": 1,
                    "unused_param_1": 1,
                    "unused_param_2": 1
                },
                "param_3": {
                    "": 1,
                    "input_3": 1,
                    "offset": 1,
                    "param_3": 4,
                    "unused": 2,
                    "unused2": 1,
                    "unused_param2": 2,
                    "unused_param_2": 5,
                    "unused_param_3": 1
                },
                "param_4": {
                    "data": 5,
                    "data_address": 1,
                    "data_to_duplicate": 2,
                    "duplicate_data": 3,
                    "input_4": 1,
                    "output": 1,
                    "output_1": 1,
                    "output_buffer": 1,
                    "output_data": 14
                },
                "process_input_and_duplicate_data_08001310": {
                    "process_data": 1,
                    "process_input_and_duplicate_data": 1
                }
            },
            "called": [
                "FUN_08001310"
            ],
            "calling": [
                "FUN_080013a4",
                "FUN_08000bcc",
                "FUN_08000cd0"
            ],
            "code": "\nvoid process_and_duplicate_input_data_0800135a(undefined4 input_data,undefined4 unused_param,undefined4 unused_param_2,undefined4 output_data)\n\n{\n  process_input_and_duplicate_data(input_data,1,0,output_data,output_data);\n  return;\n}\n\n",
            "current_name": "process_and_duplicate_input_data_0800135a",
            "entrypoint": "0x0800135a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800135a": "process_and_duplicate_input_data_0800135a",
                "param_1": "input_data",
                "param_2": "unused_param",
                "param_3": "unused_param_2",
                "param_4": "output_data",
                "process_input_and_duplicate_data_08001310": "process_input_and_duplicate_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001366": {
            "additional_data": {
                "FUN_08001366": {
                    "process_and_duplicate": 2,
                    "process_and_duplicate_data": 21,
                    "process_data": 2,
                    "process_input_and_duplicate": 1,
                    "process_input_and_duplicate_data": 5
                },
                "cVar1": {
                    "byte_value": 2,
                    "char_value": 2,
                    "character": 1,
                    "current_char": 7,
                    "data": 1,
                    "data_byte": 1,
                    "input_char": 2,
                    "input_character": 1,
                    "next_char": 1,
                    "selected_byte": 1,
                    "selected_char": 6,
                    "selected_character": 2,
                    "selected_value": 1,
                    "shifted_char": 1,
                    "start_character": 1,
                    "temp_char": 1
                },
                "param_1": {
                    "buffer_ptr": 1,
                    "data_address": 3,
                    "data_array": 1,
                    "data_buffer": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "input": 3,
                    "input_address": 7,
                    "input_data": 9,
                    "input_pointer": 2,
                    "input_ptr": 2
                },
                "param_2": {
                    "char_val": 1,
                    "char_value": 4,
                    "character": 2,
                    "flag": 11,
                    "input_char": 4,
                    "offset": 2,
                    "param_2": 4,
                    "param_flags": 1,
                    "start_index": 1,
                    "start_offset": 1
                },
                "param_3": {
                    "byte_count": 1,
                    "data_length": 2,
                    "input_length": 3,
                    "input_size": 3,
                    "length": 2,
                    "limit": 4,
                    "max_index": 1,
                    "max_iterations": 1,
                    "max_length": 5,
                    "max_size": 2,
                    "max_value": 5,
                    "size": 2
                },
                "param_4": {
                    "additional_data": 2,
                    "additional_param": 6,
                    "data": 1,
                    "extra_param": 1,
                    "input_parameter": 1,
                    "input_value": 1,
                    "other_param": 1,
                    "param": 3,
                    "param4": 3,
                    "param_4": 8,
                    "param_four": 1,
                    "result": 1,
                    "unknown_data": 1,
                    "unknown_param": 1
                },
                "process_input_and_duplicate_data_08001310": {
                    "process_data": 1,
                    "process_data_and_duplicate_data": 1,
                    "process_input_and_duplicate_data": 1
                }
            },
            "called": [
                "FUN_08001310"
            ],
            "calling": [
                "FUN_08000bcc",
                "FUN_08000cd0"
            ],
            "code": "\nvoid process_input_and_duplicate_data_08001366(int input_data,char flag,uint max_value,undefined4 param_4)\n\n{\n  char current_char;\n  \n  if (3 < max_value) {\n    max_value = 3;\n  }\n  if ((int)(uint)*(byte *)(input_data + 0x17) <= (int)max_value) {\n    max_value = *(byte *)(input_data + 0x17) - 1 & 0xff;\n  }\n  current_char = *(char *)(max_value + input_data + 0x18);\n  process_input_and_duplicate_data_08001366(input_data,flag + current_char | 0x80,0,current_char,param_4);\n  return;\n}\n\n",
            "current_name": "process_input_and_duplicate_data_08001366",
            "entrypoint": "0x08001366",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001366": "process_input_and_duplicate_data_08001366",
                "cVar1": "current_char",
                "param_1": "input_data",
                "param_2": "flag",
                "param_3": "max_value",
                "process_input_and_duplicate_data_08001310": "process_input_and_duplicate_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800138e": {
            "additional_data": {
                "0x14": {
                    "offset": 1
                },
                "FUN_0800138e": {
                    "modify_data": 1,
                    "process_and_duplicate_input": 1,
                    "set_flag_and_process_data": 2,
                    "update_and_process_data": 10,
                    "update_and_process_input": 5,
                    "update_data_and_process": 1,
                    "update_data_and_process_input": 6,
                    "update_flag_and_process_data": 2,
                    "update_input_and_duplicate_data": 2,
                    "update_input_data": 1
                },
                "bVar1": {
                    "byte_value": 8,
                    "current_byte": 6,
                    "current_flag": 3,
                    "current_value": 7,
                    "old_value": 1,
                    "original_value": 3,
                    "previous_value": 2
                },
                "param_1": {
                    "data": 2,
                    "data_address": 11,
                    "data_pointer": 9,
                    "data_ptr": 6,
                    "input_pointer": 1,
                    "input_ptr": 2
                },
                "param_2": {
                    "param2": 20,
                    "unused1": 1,
                    "unused_parameter1": 1,
                    "var1": 1
                },
                "param_3": {
                    "param3": 20,
                    "unused2": 1,
                    "unused_parameter2": 1,
                    "var2": 1
                },
                "param_4": {
                    "input_parameter": 1,
                    "param4": 26,
                    "param_four": 1,
                    "unused3": 1,
                    "unused_parameter3": 1,
                    "var3": 1
                },
                "process_input_and_duplicate_data_08001310": {
                    "process_and_duplicate_data": 1,
                    "process_data": 2,
                    "process_data_and_duplicate": 1,
                    "process_data_duplication": 1,
                    "process_duplicate_data": 1,
                    "process_input_and_duplicate_data": 1
                }
            },
            "called": [
                "FUN_08001310"
            ],
            "calling": [
                "FUN_080013a4"
            ],
            "code": "\nvoid update_data_and_process_input_0800138e(int data_address,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  byte byte_value;\n  \n  byte_value = *(byte *)(data_address + 0x14);\n  *(byte *)(data_address + 0x14) = byte_value | 4;\n  process_data(data_address,byte_value | 0xc,0,param4,param4);\n  return;\n}\n\n",
            "current_name": "update_data_and_process_input_0800138e",
            "entrypoint": "0x0800138e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800138e": "update_data_and_process_input_0800138e",
                "bVar1": "byte_value",
                "param_1": "data_address",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "process_input_and_duplicate_data_08001310": "process_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080013a4": {
            "additional_data": {
                "FUN_080013a4": {
                    "process_and_duplicate_data": 1,
                    "process_data": 7,
                    "process_function": 2,
                    "process_input": 4,
                    "process_input_and_duplicate": 1,
                    "process_input_and_duplicate_data": 9,
                    "process_input_data": 1,
                    "process_memory_access": 1,
                    "process_memory_access_and_input_data": 1,
                    "process_memory_and_data": 1,
                    "process_memory_and_input": 1,
                    "process_parameters": 1
                },
                "iVar1": {
                    "access_flag": 1,
                    "access_size": 1,
                    "condition_var1": 1,
                    "count": 1,
                    "counter": 1,
                    "i_var": 2,
                    "i_var1": 1,
                    "iteration_counter": 1,
                    "iteration_variable1": 1,
                    "limit": 1,
                    "loop_control": 1,
                    "loop_count": 1,
                    "loop_counter": 7,
                    "loop_counter1": 1,
                    "loop_ctr": 1,
                    "loop_index": 1,
                    "loop_var": 1,
                    "loop_variable1": 1,
                    "parameter_count": 1,
                    "process_cycles": 1,
                    "temp_var1": 1,
                    "var1": 1,
                    "variable1": 2
                },
                "iVar2": {
                    "condition_counter": 1,
                    "condition_var2": 1,
                    "counter": 7,
                    "cycle_count": 1,
                    "i_var": 1,
                    "i_var2": 2,
                    "index": 7,
                    "inner_counter": 1,
                    "iteration_variable2": 1,
                    "loop_counter2": 1,
                    "loop_index": 1,
                    "loop_var": 1,
                    "loop_variable2": 1,
                    "offset": 1,
                    "temp_var2": 1,
                    "var2": 1,
                    "variable2": 2
                },
                "param_1": {
                    "base_address": 1,
                    "data": 8,
                    "data_address": 3,
                    "data_pointer": 3,
                    "data_ptr": 2,
                    "data_start": 1,
                    "function_parameter1": 1,
                    "input": 1,
                    "input_data": 5,
                    "input_data_ptr": 1,
                    "input_param": 1,
                    "input_ptr": 1,
                    "memory_address": 2,
                    "ptr1": 1
                },
                "param_2": {
                    "data_offset": 1,
                    "data_size": 1,
                    "data_start": 1,
                    "function_parameter2": 1,
                    "index": 1,
                    "offset": 3,
                    "param1": 1,
                    "param2": 14,
                    "param_2": 1,
                    "param_a": 1,
                    "ptr2": 1,
                    "temp_address": 1,
                    "value": 1,
                    "value1": 3
                },
                "param_3": {
                    "condition_param": 1,
                    "count": 1,
                    "data_count": 1,
                    "data_size": 3,
                    "flag": 2,
                    "function_parameter3": 1,
                    "length": 3,
                    "num_data": 1,
                    "param2": 1,
                    "param3": 8,
                    "param_b": 1,
                    "param_count": 1,
                    "param_flag": 1,
                    "parameter": 1,
                    "size": 2,
                    "value2": 3
                },
                "param_4": {
                    "check_param": 1,
                    "condition": 3,
                    "flag": 11,
                    "function_parameter4": 1,
                    "is_valid": 1,
                    "param3": 1,
                    "param4": 10,
                    "param_c": 1,
                    "value3": 2
                },
                "process_and_duplicate_input_data_080012c0": {
                    "process_and_duplicate_data": 1,
                    "process_and_duplicate_input_data": 1,
                    "process_and_duplicate_input_data1": 2,
                    "process_and_duplicate_input_data_case1": 1
                },
                "process_and_duplicate_input_data_0800135a": {
                    "process_and_duplicate_input_data": 1,
                    "process_and_duplicate_input_data2": 1,
                    "process_and_duplicate_input_data3": 2,
                    "process_and_duplicate_input_data_case3": 1
                },
                "process_input_and_duplicate_data_08001310": {
                    "process_and_duplicate_input_data2": 2,
                    "process_and_duplicate_input_data_case2": 1,
                    "process_input_and_duplicate_data": 2
                },
                "process_input_data_08005848": {
                    "process_input_data": 5
                },
                "process_memory_access_080057b4": {
                    "access_memory": 2,
                    "handle_memory_access": 1,
                    "process_memory_access": 2
                },
                "set_parameters_08001294": {
                    "set_parameters": 3
                },
                "update_data_and_process_input_0800138e": {
                    "update_and_process_input_data": 1,
                    "update_data_and_process_input": 4
                }
            },
            "called": [
                "FUN_08001310",
                "FUN_08001294",
                "FUN_080057b4",
                "FUN_080012c0",
                "FUN_0800135a",
                "FUN_0800138e",
                "FUN_08005848"
            ],
            "calling": [
                "FUN_080014ba",
                "FUN_08000bcc"
            ],
            "code": "\nvoid process_input_and_duplicate_data_080013a4(int data,int param2,int param3,int flag)\n\n{\n  int loop_counter;\n  int index;\n  \n  if (1 < param3) {\n    *(byte *)(data + 0x13) = *(byte *)(data + 0x13) | 8;\n  }\n  *(char *)(data + 0x17) = (char)param3;\n  set_parameters(data,0,0x40,param2,param2 + 0x40);\n  if ((flag != 0) && (param3 == 1)) {\n    *(byte *)(data + 0x13) = *(byte *)(data + 0x13) | 4;\n  }\n  access_memory(*(undefined *)(data + 8),1);\n  if (*(char *)(data + 9) != -1) {\n    access_memory(*(char *)(data + 9),1);\n  }\n  access_memory(*(undefined *)(data + 10),1);\n  index = 0;\n  while( true ) {\n    if ((*(byte *)(data + 0x13) & 0x10) == 0) {\n      loop_counter = 4;\n    }\n    else {\n      loop_counter = 8;\n    }\n    if (loop_counter <= index) break;\n    access_memory(*(undefined *)(data + index + 0xb),1);\n    index = index + 1;\n  }\n  process_input_data(*(undefined *)(data + 8),0);\n  process_input_data(*(undefined *)(data + 10),0);\n  if (*(char *)(data + 9) != -1) {\n    process_input_data(*(char *)(data + 9),0);\n  }\n  if ((*(byte *)(data + 0x13) & 0x10) == 0) {\n    process_and_duplicate_input_data1(data,3);\n    process_and_duplicate_input_data1(data,3);\n    process_and_duplicate_input_data1(data,3);\n    process_and_duplicate_input_data1(data,2);\n  }\n  else {\n    process_and_duplicate_input_data2(data,*(byte *)(data + 0x13) | 0x20,0);\n    process_and_duplicate_input_data2(data,*(byte *)(data + 0x13) | 0x20,0);\n    process_and_duplicate_input_data2(data,*(byte *)(data + 0x13) | 0x20,0);\n  }\n  process_and_duplicate_input_data2(data,*(byte *)(data + 0x13) | 0x20,0);\n  *(undefined *)(data + 0x14) = 4;\n  update_data_and_process_input(data);\n  process_and_duplicate_input_data3(data);\n  *(undefined *)(data + 0x15) = 2;\n  process_and_duplicate_input_data2(data,6,0);\n  return;\n}\n\n",
            "current_name": "process_input_and_duplicate_data_080013a4",
            "entrypoint": "0x080013a4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080013a4": "process_input_and_duplicate_data_080013a4",
                "iVar1": "loop_counter",
                "iVar2": "index",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "flag",
                "process_and_duplicate_input_data_080012c0": "process_and_duplicate_input_data1",
                "process_and_duplicate_input_data_0800135a": "process_and_duplicate_input_data3",
                "process_input_and_duplicate_data_08001310": "process_and_duplicate_input_data2",
                "process_input_data_08005848": "process_input_data",
                "process_memory_access_080057b4": "access_memory",
                "set_parameters_08001294": "set_parameters",
                "update_data_and_process_input_0800138e": "update_data_and_process_input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080014ba": {
            "additional_data": {
                "FUN_080014ba": {
                    "copy_and_process_input_data": 1,
                    "copy_data_with_flags": 1,
                    "copy_params_and_process": 1,
                    "initialize_data": 5,
                    "process_and_duplicate_data": 2,
                    "set_input_and_duplicate_data": 1,
                    "set_params_and_process_data": 1,
                    "set_params_and_process_input": 1,
                    "store_and_process_data": 2,
                    "store_params_and_process": 1,
                    "store_params_and_process_input": 1,
                    "update_data": 4,
                    "update_data_and_process": 1,
                    "update_data_and_process_input": 1,
                    "update_data_entry": 1,
                    "update_data_with_params": 1,
                    "update_input_data": 1,
                    "update_parameters": 3,
                    "update_params_and_process": 1,
                    "update_params_and_process_input": 1
                },
                "param_1": {
                    "data": 1,
                    "data_address": 11,
                    "data_entry": 1,
                    "data_pointer": 7,
                    "data_ptr": 7,
                    "dest_ptr": 1,
                    "dst_address": 1,
                    "function_data": 1,
                    "input_data_ptr": 1
                },
                "param_10": {
                    "byte6": 1,
                    "data8": 2,
                    "input_8": 1,
                    "new_value8": 2,
                    "param10": 3,
                    "undefined7": 1,
                    "undefined_parameter7": 1,
                    "undefined_value_7": 1,
                    "val8": 3,
                    "value8": 13,
                    "value_8": 3
                },
                "param_11": {
                    "byte7": 1,
                    "data9": 2,
                    "input_9": 1,
                    "new_value9": 2,
                    "param11": 3,
                    "undefined8": 1,
                    "undefined_parameter8": 1,
                    "undefined_value_8": 1,
                    "val9": 3,
                    "value9": 13,
                    "value_9": 3
                },
                "param_12": {
                    "byte8": 1,
                    "data10": 2,
                    "input_10": 1,
                    "new_value10": 2,
                    "param12": 3,
                    "undefined9": 1,
                    "undefined_parameter9": 1,
                    "undefined_value_9": 1,
                    "val10": 3,
                    "value10": 13,
                    "value_10": 3
                },
                "param_13": {
                    "byte9": 1,
                    "data11": 2,
                    "input_11": 1,
                    "new_value11": 2,
                    "param13": 3,
                    "undefined10": 1,
                    "undefined_parameter10": 1,
                    "undefined_value_10": 1,
                    "val11": 3,
                    "value11": 13,
                    "value_11": 3
                },
                "param_2": {
                    "check_flag": 1,
                    "condition": 7,
                    "condition_flag": 1,
                    "flag": 19,
                    "is_zero": 3
                },
                "param_3": {
                    "byte": 1,
                    "data1": 2,
                    "input_1": 1,
                    "new_value1": 2,
                    "param3": 3,
                    "undefined1": 1,
                    "undefined_parameter1": 1,
                    "undefined_value_1": 1,
                    "val1": 3,
                    "value1": 13,
                    "value_1": 3
                },
                "param_4": {
                    "data2": 2,
                    "input_2": 1,
                    "new_value2": 2,
                    "param4": 3,
                    "parameter4": 1,
                    "val2": 3,
                    "value1": 2,
                    "value2": 13,
                    "value_1": 1,
                    "value_2": 3
                },
                "param_5": {
                    "byte1": 1,
                    "data3": 2,
                    "input_3": 1,
                    "new_value3": 2,
                    "param5": 3,
                    "undefined2": 1,
                    "undefined_parameter2": 1,
                    "undefined_value_2": 1,
                    "val3": 3,
                    "value3": 13,
                    "value_3": 3
                },
                "param_6": {
                    "byte2": 1,
                    "data4": 2,
                    "input_4": 1,
                    "new_value4": 2,
                    "param6": 3,
                    "undefined3": 1,
                    "undefined_parameter3": 1,
                    "undefined_value_3": 1,
                    "val4": 3,
                    "value4": 13,
                    "value_4": 3
                },
                "param_7": {
                    "byte3": 1,
                    "data5": 2,
                    "input_5": 1,
                    "new_value5": 2,
                    "param7": 3,
                    "undefined4": 1,
                    "undefined_parameter4": 1,
                    "undefined_value_4": 1,
                    "val5": 3,
                    "value5": 13,
                    "value_5": 3
                },
                "param_8": {
                    "byte4": 1,
                    "data6": 2,
                    "input_6": 1,
                    "new_value6": 2,
                    "param8": 3,
                    "undefined5": 1,
                    "undefined_parameter5": 1,
                    "undefined_value_5": 1,
                    "val6": 3,
                    "value6": 13,
                    "value_6": 3
                },
                "param_9": {
                    "byte5": 1,
                    "data7": 2,
                    "input_7": 1,
                    "new_value7": 2,
                    "param9": 3,
                    "undefined6": 1,
                    "undefined_parameter6": 1,
                    "undefined_value_6": 1,
                    "val7": 3,
                    "value7": 13,
                    "value_7": 3
                }
            },
            "called": [
                "FUN_080013a4"
            ],
            "calling": [
                "FUN_08001510"
            ],
            "code": "\nvoid set_input_and_duplicate_data_080014ba(int data_address,int flag,undefined value1,undefined4 value2,undefined value3,\n                 undefined value4,undefined value5,undefined value6,undefined value7,\n                 undefined value8,undefined value9,undefined value10,undefined value11)\n\n{\n  *(undefined *)(data_address + 8) = value1;\n  *(char *)(data_address + 9) = (char)value2;\n  *(undefined *)(data_address + 10) = value3;\n  *(undefined *)(data_address + 0xb) = value4;\n  *(undefined *)(data_address + 0xc) = value5;\n  *(undefined *)(data_address + 0xd) = value6;\n  *(undefined *)(data_address + 0xe) = value7;\n  *(undefined *)(data_address + 0xf) = value8;\n  *(undefined *)(data_address + 0x10) = value9;\n  *(undefined *)(data_address + 0x11) = value10;\n  *(undefined *)(data_address + 0x12) = value11;\n  if (flag == 0) {\n    *(undefined *)(data_address + 0x13) = 0x10;\n  }\n  else {\n    *(undefined *)(data_address + 0x13) = 0;\n  }\n  process_input_and_duplicate_data_080013a4(data_address,0x10,1,0,value2);\n  return;\n}\n\n",
            "current_name": "set_input_and_duplicate_data_080014ba",
            "entrypoint": "0x080014ba",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080014ba": "set_input_and_duplicate_data_080014ba",
                "param_1": "data_address",
                "param_10": "value8",
                "param_11": "value9",
                "param_12": "value10",
                "param_13": "value11",
                "param_2": "flag",
                "param_3": "value1",
                "param_4": "value2",
                "param_5": "value3",
                "param_6": "value4",
                "param_7": "value5",
                "param_8": "value6",
                "param_9": "value7"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001510": {
            "additional_data": {
                "FUN_08001510": {
                    "configure_data_processor": 1,
                    "initialize_and_process_data": 1,
                    "initialize_and_set_input": 1,
                    "initialize_data": 7,
                    "initialize_data_and_process_input": 2,
                    "initialize_data_processing": 3,
                    "initialize_function": 1,
                    "initialize_input": 1,
                    "initialize_input_data": 2,
                    "initialize_process": 1,
                    "process_and_duplicate_data": 4,
                    "process_input_and_duplicate_data": 1,
                    "set_and_process_input_data": 1,
                    "set_input_and_duplicate": 1,
                    "set_input_and_duplicate_data": 3,
                    "setup_input_and_duplicate_data": 1
                },
                "param_1": {
                    "data": 5,
                    "data_buffer": 1,
                    "data_pointer": 3,
                    "data_processor": 2,
                    "data_ptr": 2,
                    "input_data": 1,
                    "input_pointer": 1,
                    "output": 1,
                    "output_array": 8,
                    "output_buffer": 2,
                    "output_data": 2,
                    "output_ptr": 1,
                    "process_array": 1,
                    "result": 1
                },
                "param_2": {
                    "data_2": 1,
                    "data_size": 1,
                    "initial_value1": 1,
                    "input": 1,
                    "input_config": 1,
                    "input_data": 5,
                    "input_data1": 1,
                    "input_param": 1,
                    "input_size": 3,
                    "input_value": 5,
                    "input_value1": 3,
                    "value": 1,
                    "value1": 5,
                    "value2": 1,
                    "value_1": 1
                },
                "param_3": {
                    "byte1": 1,
                    "byte_value": 1,
                    "data_3": 1,
                    "data_length": 1,
                    "data_size": 1,
                    "flag": 1,
                    "initial_value2": 1,
                    "input_data2": 1,
                    "input_length": 1,
                    "input_value": 1,
                    "input_value2": 3,
                    "length": 1,
                    "limit": 1,
                    "limit_value": 1,
                    "max_value": 2,
                    "param3": 2,
                    "size": 1,
                    "size_param": 1,
                    "value1": 2,
                    "value2": 5,
                    "value3": 1,
                    "value_2": 1
                },
                "param_4": {
                    "byte2": 1,
                    "byte_value": 1,
                    "constant1": 2,
                    "constant_value": 2,
                    "data_4": 1,
                    "dummy_param": 1,
                    "flag_value": 1,
                    "initial_value3": 1,
                    "input_data3": 1,
                    "input_value3": 3,
                    "limit": 1,
                    "param4": 3,
                    "param_4": 2,
                    "param_value": 1,
                    "value2": 2,
                    "value3": 5,
                    "value4": 1,
                    "value_3": 1,
                    "value_param": 1
                },
                "param_5": {
                    "byte1": 1,
                    "constant2": 2,
                    "data_5": 1,
                    "extra1": 1,
                    "flag1": 3,
                    "input1": 2,
                    "input_value4": 1,
                    "param5": 9,
                    "param_5": 7,
                    "param_a": 1,
                    "unknown_flag1": 1,
                    "unused1": 1,
                    "value5": 1
                },
                "param_6": {
                    "byte2": 1,
                    "constant3": 2,
                    "data_6": 1,
                    "extra2": 1,
                    "flag2": 3,
                    "input2": 2,
                    "input_value5": 1,
                    "param6": 9,
                    "param_6": 7,
                    "param_b": 1,
                    "unknown_flag2": 1,
                    "unused2": 1,
                    "value6": 1
                },
                "param_7": {
                    "byte3": 1,
                    "constant4": 2,
                    "data_7": 1,
                    "extra3": 1,
                    "flag3": 3,
                    "input3": 2,
                    "input_value6": 1,
                    "param7": 9,
                    "param_7": 7,
                    "param_c": 1,
                    "unknown_flag3": 1,
                    "unused3": 1,
                    "value7": 1
                },
                "set_input_and_duplicate_data_080014ba": {
                    "set_input_and_duplicate_data": 1
                }
            },
            "called": [
                "FUN_080014ba"
            ],
            "calling": [
                "FUN_08000b08"
            ],
            "code": "\nundefined4 *\ninitialize_data_processing_08001510(undefined4 *output_array,undefined4 value1,undefined4 value2,undefined4 value3,\n            undefined param5,undefined param6,undefined param7)\n\n{\n  output_array[1] = 0;\n  *output_array = &PTR_process_input_and_duplicate_data_0800134e_1_080073f8;\n  set_input_and_duplicate_data(output_array,1,value1,0xff,value2,value3,param5,param6,param7,0,0,0,0);\n  return output_array;\n}\n\n",
            "current_name": "initialize_data_processing_08001510",
            "entrypoint": "0x08001510",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001510": "initialize_data_processing_08001510",
                "param_1": "output_array",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "param5",
                "param_6": "param6",
                "param_7": "param7",
                "set_input_and_duplicate_data_080014ba": "set_input_and_duplicate_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001550": {
            "additional_data": {
                "FUN_08001550": {
                    "process_and_duplicate": 1,
                    "process_and_duplicate_data": 21,
                    "process_and_duplicate_input": 4,
                    "process_and_print_data": 1,
                    "process_data": 2,
                    "process_input_and_duplicate_data": 2
                },
                "code": {
                    "function_pointer": 1
                },
                "iVar1": {
                    "count": 1,
                    "counter": 2,
                    "i": 2,
                    "index": 17,
                    "iter": 1,
                    "iteration": 1,
                    "iteration_counter": 2,
                    "iteration_index": 3,
                    "iterator": 1,
                    "loop_counter": 1
                },
                "param_1": {
                    "array": 1,
                    "array_pointer": 1,
                    "array_ptr": 1,
                    "buffer": 1,
                    "data_array": 4,
                    "data_pointer": 4,
                    "data_ptr": 3,
                    "input_array": 10,
                    "input_buffer": 1,
                    "input_data": 4,
                    "output_data": 1
                },
                "param_2": {
                    "array_length": 2,
                    "array_size": 3,
                    "data_length": 4,
                    "data_size": 6,
                    "input_array_length": 1,
                    "input_data_length": 1,
                    "input_length": 3,
                    "input_size": 8,
                    "length": 1,
                    "num_bytes": 1,
                    "size": 1
                },
                "param_3": {
                    "base_address": 1,
                    "data_address": 7,
                    "data_offset": 6,
                    "data_ptr": 2,
                    "data_start": 1,
                    "data_start_index": 1,
                    "input_array": 1,
                    "input_buffer": 2,
                    "input_data": 3,
                    "input_data_address": 2,
                    "input_data_offset": 1,
                    "input_ptr": 2,
                    "source_address": 1,
                    "source_data": 1
                },
                "process_input_and_duplicate_data_08001310": {
                    "process_input_and_duplicate_data": 2
                }
            },
            "called": [
                "FUN_08001310"
            ],
            "calling": [
                "FUN_08000bcc"
            ],
            "code": "\nvoid process_input_and_duplicate_data_08001550(undefined4 *input_array,uint input_size,int data_address)\n\n{\n  int index;\n  \n  process_input_and_duplicate_data_08001550(input_array,(input_size & 7) << 3 | 0x40,0);\n  for (index = 0; index < 8; index = index + 1) {\n    (**(function_pointer **)*input_array)(input_array,*(undefined *)(data_address + index));\n  }\n  return;\n}\n\n",
            "current_name": "process_input_and_duplicate_data_08001550",
            "entrypoint": "0x08001550",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001550": "process_input_and_duplicate_data_08001550",
                "code": "function_pointer",
                "iVar1": "index",
                "param_1": "input_array",
                "param_2": "input_size",
                "param_3": "data_address",
                "process_input_and_duplicate_data_08001310": "process_input_and_duplicate_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800157c": {
            "additional_data": {
                "FUN_0800157c": {
                    "copy_memory_with_processing": 1,
                    "initialize_data": 1,
                    "initialize_memory": 2,
                    "initialize_memory_access": 1,
                    "process_and_access_memory": 2,
                    "process_and_update_input_data": 1,
                    "process_data": 3,
                    "process_input": 2,
                    "process_input_and_memory_access": 1,
                    "process_input_data": 1,
                    "process_memory_and_input": 5,
                    "set_and_process_data": 1,
                    "set_memory_and_process_input": 1,
                    "update_data": 1,
                    "update_memory": 1,
                    "update_memory_access_and_process_input": 1,
                    "update_memory_and_process_data": 2,
                    "update_memory_and_process_input": 4
                },
                "memory": {
                    "memory": 1
                },
                "param_1": {
                    "buffer": 4,
                    "data": 3,
                    "destination": 1,
                    "input_data": 1,
                    "memory": 7,
                    "memory_access": 1,
                    "memory_array": 1,
                    "memory_buffer": 1,
                    "memory_chunk": 1,
                    "output": 3,
                    "output_buffer": 6,
                    "output_data": 1,
                    "target_memory": 1
                },
                "param_2": {
                    "char_value": 1,
                    "character": 2,
                    "data_1": 1,
                    "first_char": 1,
                    "first_value": 1,
                    "input1": 2,
                    "input_1": 1,
                    "input_char": 1,
                    "input_data": 2,
                    "input_value": 2,
                    "value": 14,
                    "value1": 2,
                    "value_to_copy": 1
                },
                "param_3": {
                    "access1": 2,
                    "access_1": 1,
                    "access_flag": 1,
                    "access_mode1": 1,
                    "access_mode_1": 1,
                    "access_type": 3,
                    "access_value_1": 1,
                    "byte1": 1,
                    "data1": 3,
                    "data_2": 1,
                    "first_byte": 1,
                    "input1": 2,
                    "input2": 2,
                    "input_1": 1,
                    "input_2": 1,
                    "param_3": 1,
                    "second_char": 1,
                    "second_value": 1,
                    "value1": 2,
                    "value2": 2,
                    "value_1": 2
                },
                "param_4": {
                    "access2": 2,
                    "access_2": 1,
                    "access_mode2": 1,
                    "access_mode_2": 1,
                    "access_value_2": 1,
                    "byte2": 1,
                    "data2": 3,
                    "data_3": 1,
                    "input2": 2,
                    "input3": 2,
                    "input_2": 1,
                    "input_3": 1,
                    "input_data": 1,
                    "input_flag": 2,
                    "param_4": 1,
                    "process_flag": 1,
                    "second_byte": 1,
                    "third_char": 1,
                    "third_value": 1,
                    "value2": 2,
                    "value3": 2,
                    "value_2": 2
                },
                "process_input_data_08005848": {
                    "process_input": 2,
                    "process_input_data": 5
                },
                "process_memory_access_080057b4": {
                    "access_memory": 4,
                    "process_memory_access": 3
                },
                "value1": {
                    "value1": 1
                },
                "value2": {
                    "value2": 1
                },
                "value3": {
                    "value3": 1
                }
            },
            "called": [
                "FUN_080057b4",
                "FUN_08005848"
            ],
            "calling": [
                "FUN_08000b08"
            ],
            "code": "\nundefined * update_memory_access_and_process_input_0800157c(undefined *memory,undefined4 value,undefined access_type,undefined data2)\n\n{\n  *memory = (char)value;\n  memory[1] = access_type;\n  memory[2] = data2;\n  access_memory(value,0);\n  access_memory(memory[1],1);\n  access_memory(memory[2],1);\n  process_input_data(memory[1],1);\n  process_input_data(memory[2],0);\n  return memory;\n}\n\n",
            "current_name": "update_memory_access_and_process_input_0800157c",
            "entrypoint": "0x0800157c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800157c": "update_memory_access_and_process_input_0800157c",
                "param_1": "memory",
                "param_2": "value",
                "param_3": "access_type",
                "param_4": "data2",
                "process_input_data_08005848": "process_input_data",
                "process_memory_access_080057b4": "access_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080015b2": {
            "additional_data": {
                "FUN_080015b2": {
                    "bit_flags_from_input": 1,
                    "bitwise_flags": 1,
                    "decode_bit_flags": 1,
                    "decode_bitmask": 2,
                    "decode_bits": 1,
                    "decode_input_bits": 1,
                    "extract_bit_flags": 1,
                    "extract_bit_mask": 1,
                    "extract_bit_presence": 8,
                    "extract_bitmask_from_data": 1,
                    "extract_bits": 1,
                    "extract_bits_from_data": 1,
                    "extract_bits_from_input": 2,
                    "extract_bitwise_presence": 1,
                    "find_bit_presence": 1,
                    "get_bitmask": 1,
                    "parse_bits_from_data": 1,
                    "process_and_extract_bits": 1,
                    "reverse_bit_presence": 2,
                    "reverse_bits": 2
                },
                "check_bit_presence_08005890": {
                    "check_bit_presence": 6
                },
                "iVar1": {
                    "bit_presence": 20,
                    "bit_presence_check": 9,
                    "bit_presence_check_result": 1,
                    "presence_check": 1
                },
                "param_1": {
                    "array": 1,
                    "data": 1,
                    "data_array": 2,
                    "input_array": 3,
                    "input_data": 23
                },
                "process_input_data_08005848": {
                    "process_data": 2,
                    "process_input": 1,
                    "process_input_data": 3
                },
                "uVar2": {
                    "bit_counter": 1,
                    "bit_index": 17,
                    "bit_pos": 1,
                    "bit_position": 11,
                    "num_bits": 1
                },
                "uVar3": {
                    "bit_flags": 1,
                    "bit_mask": 1,
                    "bit_presence": 5,
                    "bit_result": 1,
                    "bitmask": 2,
                    "bitwise_presence": 1,
                    "decoded_bits": 1,
                    "decoded_flags": 1,
                    "decoded_value": 1,
                    "extracted_bits": 5,
                    "flag": 1,
                    "flag_value": 1,
                    "presence_flags": 1,
                    "presence_mask": 1,
                    "result": 6,
                    "reversed_bits": 2
                }
            },
            "called": [
                "FUN_08005890",
                "FUN_08005848"
            ],
            "calling": [
                "FUN_080015f8"
            ],
            "code": "\nuint extract_bit_presence_080015b2(undefined *input_data)\n\n{\n  int bit_presence;\n  uint bit_index;\n  uint result;\n  \n  process_input_data(input_data[1],0);\n  result = 0;\n  for (bit_index = 0x1f; -1 < (int)bit_index; bit_index = bit_index - 1) {\n    process_input_data(input_data[2],1);\n    bit_presence = check_bit_presence(*input_data);\n    if (bit_presence != 0) {\n      result = result | 1 << (bit_index & 0xff);\n    }\n    process_input_data(input_data[2],0);\n  }\n  process_input_data(input_data[1],1);\n  return result;\n}\n\n",
            "current_name": "extract_bit_presence_080015b2",
            "entrypoint": "0x080015b2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080015b2": "extract_bit_presence_080015b2",
                "check_bit_presence_08005890": "check_bit_presence",
                "iVar1": "bit_presence",
                "param_1": "input_data",
                "process_input_data_08005848": "process_input_data",
                "uVar2": "bit_index",
                "uVar3": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080015f8": {
            "additional_data": {
                "FUN_080015f8": {
                    "calculate_float": 1,
                    "calculate_float_result": 1,
                    "calculate_float_value": 2,
                    "calculate_new_value": 1,
                    "calculate_result": 10,
                    "calculate_result_based_on_bit_presence": 4,
                    "calculate_result_based_on_flags": 1,
                    "calculate_value": 1,
                    "decode_and_calculate": 2,
                    "extract_reverse_bits_and_shift": 1,
                    "process_binary_data": 1,
                    "process_binary_function": 1,
                    "process_bit_extraction": 1,
                    "process_data": 4
                },
                "calculate_float_value_0800074c": {
                    "calculate_float_value": 16
                },
                "calculate_result_08000194": {
                    "calculate_float_result": 1,
                    "calculate_integer_result": 1,
                    "calculate_result": 3,
                    "calculate_result1": 5,
                    "calculate_result_1": 3,
                    "calculate_result_a": 3
                },
                "calculate_result_080004f8": {
                    "calculate_double_result": 1,
                    "calculate_float_result": 1,
                    "calculate_non_negative_result": 1,
                    "calculate_result": 1,
                    "calculate_result2": 5,
                    "calculate_result_2": 4,
                    "calculate_result_b": 3
                },
                "extract_bit_presence_080015b2": {
                    "extract_bit_presence": 16
                },
                "param_1": {
                    "arg1": 2,
                    "arg_1": 1,
                    "bit_presence_param": 1,
                    "condition": 1,
                    "data_length": 1,
                    "flag": 3,
                    "input1": 3,
                    "input_1": 2,
                    "input_flag": 6,
                    "input_flags": 1,
                    "input_param": 2,
                    "input_param1": 1,
                    "input_size": 1,
                    "input_value": 1,
                    "param1": 2,
                    "param_1": 1,
                    "value1": 1,
                    "var1": 1
                },
                "param_2": {
                    "arg2": 2,
                    "arg_2": 1,
                    "calculation_flag": 2,
                    "calculation_type": 1,
                    "condition": 1,
                    "condition_flag": 2,
                    "condition_param": 1,
                    "count": 1,
                    "flag": 2,
                    "input2": 3,
                    "input_2": 2,
                    "input_param2": 1,
                    "input_value": 1,
                    "is_param_2_one": 1,
                    "is_param_2_true": 1,
                    "mode": 2,
                    "mode_param": 1,
                    "option": 1,
                    "param2": 2,
                    "param_2": 1,
                    "value": 1,
                    "var2": 1
                },
                "param_3": {
                    "arg3": 2,
                    "arg_3": 1,
                    "input3": 3,
                    "input_3": 2,
                    "input_param3": 1,
                    "param1": 2,
                    "param3": 3,
                    "param_3": 5,
                    "undefined3": 1,
                    "unknown_param_1": 1,
                    "unused_flag": 1,
                    "unused_param": 4,
                    "unused_param_3": 2,
                    "value1": 1,
                    "value2": 1,
                    "var3": 1
                },
                "param_4": {
                    "arg4": 2,
                    "arg_4": 1,
                    "constant_param": 1,
                    "input4": 3,
                    "input_4": 2,
                    "input_param4": 1,
                    "param2": 2,
                    "param4": 3,
                    "param_4": 5,
                    "result_param": 1,
                    "undefined4": 1,
                    "unknown_param_2": 1,
                    "unused_param": 2,
                    "unused_param_2": 1,
                    "unused_param_4": 2,
                    "value2": 1,
                    "value3": 1,
                    "var4": 1
                },
                "reverse_bits_and_shift_0800040c": {
                    "reverse_bits_and_shift": 16
                },
                "uVar1": {
                    "bit_flags": 1,
                    "bit_presence": 29,
                    "bit_presence_value": 1
                },
                "uVar2": {
                    "result": 31
                }
            },
            "called": [
                "FUN_08000194",
                "FUN_080015b2",
                "FUN_0800074c",
                "FUN_0800040c",
                "FUN_080004f8"
            ],
            "calling": [
                "FUN_08000cd0"
            ],
            "code": "\nundefined8 calculate_result_based_on_bit_presence_080015f8(undefined4 input_flag,int input2,undefined4 param_3,undefined4 param_4)\n\n{\n  uint bit_presence;\n  undefined8 result;\n  \n  bit_presence = extract_bit_presence();\n  if ((bit_presence & 0x10000) == 0) {\n    bit_presence = bit_presence >> 0x12;\n    result = reverse_bits_and_shift(bit_presence & 0x1fff);\n    if ((bit_presence & 0x2000) != 0) {\n      result = reverse_bits_and_shift(~bit_presence & 0x1fff);\n      result = calculate_result1((int)result,(int)((ulonglong)result >> 0x20),0,0x3ff00000,param_4);\n      result = CONCAT44((int)((ulonglong)result >> 0x20) + -0x80000000,(int)result);\n    }\n    result = calculate_result2((int)result,(int)((ulonglong)result >> 0x20),0,0x3fd00000);\n    if (input2 == 1) {\n      result = calculate_result2((int)result,(int)((ulonglong)result >> 0x20),0,0x40220000);\n      result = calculate_float_value((int)result,(int)((ulonglong)result >> 0x20),0,0x40140000);\n      result = calculate_result1((int)result,(int)((ulonglong)result >> 0x20),0,0x40400000);\n      return result;\n    }\n  }\n  else {\n    bit_presence = bit_presence & 7;\n    if (bit_presence == 2) {\n      return 0x40c3888000000000;\n    }\n    if (bit_presence == 4) {\n      return 0x40c3890000000000;\n    }\n    if (bit_presence != 1) {\n      return 0;\n    }\n    result = 0x40c3880000000000;\n  }\n  return result;\n}\n\n",
            "current_name": "calculate_result_based_on_bit_presence_080015f8",
            "entrypoint": "0x080015f8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080015f8": "calculate_result_based_on_bit_presence_080015f8",
                "calculate_float_value_0800074c": "calculate_float_value",
                "calculate_result_08000194": "calculate_result1",
                "calculate_result_080004f8": "calculate_result2",
                "extract_bit_presence_080015b2": "extract_bit_presence",
                "param_1": "input_flag",
                "param_2": "input2",
                "reverse_bits_and_shift_0800040c": "reverse_bits_and_shift",
                "uVar1": "bit_presence",
                "uVar2": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080016b4": {
            "additional_data": {
                "FUN_080016b4": {
                    "analyze_data": 1,
                    "calculate": 1,
                    "calculate_and_update_result": 1,
                    "calculate_result": 12,
                    "process_data": 13
                },
                "cVar1": {
                    "end_of_input_valid": 1,
                    "flag": 1,
                    "is_condition_met": 1,
                    "is_end_of_input": 3,
                    "is_end_of_input_valid": 2,
                    "is_end_of_string_valid": 1,
                    "is_end_valid": 1,
                    "is_intermediate_result": 1,
                    "is_processing_enabled": 1,
                    "is_valid": 1,
                    "is_valid_data": 1,
                    "output_value": 1,
                    "result": 12,
                    "result_char": 1,
                    "return_value": 1,
                    "status": 1
                },
                "cVar11": {
                    "end_of_input_valid": 1,
                    "flag": 2,
                    "is_condition_met": 2,
                    "is_data_available": 1,
                    "is_end_valid2": 1,
                    "is_valid": 1,
                    "output": 1,
                    "output_flag": 1,
                    "result": 3,
                    "return_value": 1
                },
                "iVar2": {
                    "data_difference": 1,
                    "data_initialization_result": 1,
                    "data_length": 1,
                    "data_value": 17,
                    "data_value1": 1,
                    "data_values": 2,
                    "initialized_data": 4,
                    "initialized_value": 4
                },
                "iVar3": {
                    "check_result": 2,
                    "end_of_input_valid": 1,
                    "end_of_input_validation_result": 1,
                    "end_result": 1,
                    "is_cy_null": 5,
                    "is_end_of_input_valid": 1,
                    "is_input_valid": 1,
                    "is_valid": 17,
                    "is_valid_end": 1,
                    "validity_check": 1
                },
                "local_38": {
                    "calc_result1_low": 1,
                    "calculated_value": 1,
                    "input_value": 1,
                    "local_result": 1,
                    "local_value1": 2,
                    "local_var": 1,
                    "local_var1": 1,
                    "local_var38": 1,
                    "new_data1": 1,
                    "result": 1,
                    "result1": 1,
                    "result1_low": 1,
                    "result4": 1,
                    "result5": 1,
                    "result_low": 1,
                    "result_temp4": 1,
                    "temp12": 1,
                    "temp15": 2,
                    "temp9": 1,
                    "temp_result1": 1,
                    "temp_val_11": 1,
                    "temp_value": 1,
                    "temp_value14": 1,
                    "temp_value_1": 1,
                    "temp_var15": 1,
                    "temp_var8": 1,
                    "value1": 1,
                    "value6": 1
                },
                "param_1": {
                    "data": 5,
                    "input": 14,
                    "input_data": 8,
                    "input_parameter": 1,
                    "input_value": 3
                },
                "uStack_34": {
                    "calc_result1_high": 1,
                    "calculated_value3": 1,
                    "input_value_high": 1,
                    "local_value2": 2,
                    "local_var2": 1,
                    "new_data2": 1,
                    "result1_high": 1,
                    "result1_high_temp": 1,
                    "result5": 1,
                    "result6": 1,
                    "result_high": 1,
                    "result_low_high": 1,
                    "result_temp5": 1,
                    "stack_var34": 1,
                    "temp10": 1,
                    "temp13": 1,
                    "temp16": 2,
                    "temp_result1_high": 1,
                    "temp_result2": 1,
                    "temp_val_12": 1,
                    "temp_value15": 1,
                    "temp_value_2": 1,
                    "temp_var16": 1,
                    "temp_var3": 1,
                    "temp_var9": 1,
                    "u_stack_34": 1,
                    "updated_value": 1,
                    "value2": 1
                },
                "uVar10": {
                    "additional_result2": 1,
                    "alternate_result_high": 1,
                    "cy_is_null2": 2,
                    "cy_value2": 1,
                    "data_value3": 1,
                    "data_value4": 1,
                    "new_result2": 1,
                    "new_value2": 2,
                    "optional_value3": 1,
                    "result3_mid": 1,
                    "result_temp2": 1,
                    "result_var5": 1,
                    "temp5": 2,
                    "temp7": 3,
                    "temp_result2": 1,
                    "temp_result_10": 1,
                    "temp_val_5": 1,
                    "temp_value6": 1,
                    "temp_var5": 1,
                    "temp_var7": 1,
                    "u_var10": 1,
                    "value4": 1,
                    "value6": 1,
                    "var10": 1,
                    "var4": 1,
                    "var7": 1
                },
                "uVar11": {
                    "c_var11": 2,
                    "char_value": 2,
                    "char_value1": 1,
                    "char_var1": 1,
                    "flag": 2,
                    "flag1": 2,
                    "is_end_of_input_valid": 2,
                    "result3_high": 1,
                    "status_flag": 1,
                    "temp_char": 1,
                    "var11": 1
                },
                "uVar12": {
                    "current_value1": 1,
                    "end_input": 1,
                    "end_input_valid1": 1,
                    "end_input_value1": 1,
                    "end_of_input_valid_result_1": 1,
                    "final_result_other1_high": 1,
                    "flag2": 1,
                    "initial_value1": 1,
                    "input1": 1,
                    "param_value3": 1,
                    "prev_result1_low": 1,
                    "prev_result_var1": 1,
                    "prev_value1": 1,
                    "previous_value1": 1,
                    "result8": 1,
                    "result_high_bits2": 1,
                    "result_stored": 1,
                    "result_var12": 1,
                    "saved_result1": 1,
                    "stored_result1": 1,
                    "temp2": 1,
                    "temp6": 1,
                    "temp8": 2,
                    "temp_val_6": 1,
                    "temp_value7": 1,
                    "temp_var1": 1,
                    "temp_var2": 1,
                    "temp_var8": 1,
                    "u_var12": 1,
                    "value1": 1
                },
                "uVar13": {
                    "current_value2": 1,
                    "end_input2": 1,
                    "end_input_valid2": 1,
                    "end_input_value2": 1,
                    "end_of_input_valid_result_2": 1,
                    "final_result_other2": 1,
                    "flag3": 1,
                    "initial_value2": 1,
                    "input2": 1,
                    "param_value4": 1,
                    "prev_result2_low": 1,
                    "prev_result_var2": 1,
                    "prev_value2": 1,
                    "previous_value2": 1,
                    "result8_next": 1,
                    "result_low_bits2": 1,
                    "result_ptr_stored": 1,
                    "result_var13": 1,
                    "saved_result2": 1,
                    "stored_result2": 1,
                    "temp3": 1,
                    "temp7": 1,
                    "temp9": 2,
                    "temp_val_7": 1,
                    "temp_value8": 1,
                    "temp_var2": 1,
                    "temp_var3": 1,
                    "temp_var9": 1,
                    "u_var13": 1,
                    "value2": 1
                },
                "uVar14": {
                    "calculate_result2": 1,
                    "calculated_value2": 1,
                    "cy_value3": 1,
                    "high_bits": 1,
                    "prev_result1_high": 1,
                    "result1": 1,
                    "result2": 1,
                    "result3": 2,
                    "result8_high": 1,
                    "result_high": 1,
                    "result_high_bits3": 1,
                    "result_value_3": 1,
                    "result_var3": 1,
                    "saved_result_high1": 1,
                    "stored_result_temp": 1,
                    "temp1": 1,
                    "temp10": 2,
                    "temp8": 2,
                    "temp_result2": 1,
                    "temp_result_stored": 1,
                    "temp_val_8": 1,
                    "temp_value9": 1,
                    "temp_var10": 1,
                    "temp_var2": 1,
                    "temp_var3": 1,
                    "temp_var6": 1,
                    "u_var14": 1,
                    "var14": 1
                },
                "uVar15": {
                    "calc_result1": 3,
                    "calculated_value1": 1,
                    "calculated_value2": 1,
                    "calculation1": 2,
                    "calculation_result_1": 1,
                    "result1": 3,
                    "result2": 1,
                    "result4": 1,
                    "result_low_bits3": 1,
                    "result_var4": 1,
                    "temp11": 2,
                    "temp2": 1,
                    "temp9": 1,
                    "temp_result": 1,
                    "temp_result1": 1,
                    "temp_val_9": 1,
                    "temp_value1": 1,
                    "temp_value10": 1,
                    "temp_var11": 1,
                    "u_var15": 1,
                    "unsigned_long_long1": 1,
                    "unsigned_long_long_value1": 1,
                    "unsigned_long_var15": 1,
                    "value3": 2
                },
                "uVar16": {
                    "calc_result2": 3,
                    "calculated_value3": 1,
                    "calculation2": 2,
                    "calculation_result_2": 1,
                    "result2": 4,
                    "result2_high": 1,
                    "result_low_bits4": 1,
                    "result_var5": 1,
                    "temp10": 1,
                    "temp12": 2,
                    "temp3": 1,
                    "temp_val_10": 1,
                    "temp_value11": 1,
                    "temp_value2": 1,
                    "temp_var12": 1,
                    "u_var16": 1,
                    "unsigned_long_long2": 1,
                    "unsigned_long_long_value2": 1,
                    "unsigned_long_var16": 1,
                    "value3": 1,
                    "value4": 2,
                    "value5": 1,
                    "var3": 1
                },
                "uVar17": {
                    "calculation3": 1,
                    "calculation_result_3": 1,
                    "final_result": 11,
                    "final_result2": 1,
                    "final_value": 1,
                    "result": 1,
                    "result1": 2,
                    "result2": 1,
                    "result3": 2,
                    "result4": 1,
                    "result_1": 1,
                    "result_value": 1,
                    "result_var17": 1,
                    "temp13": 2,
                    "temp_value12": 1,
                    "temp_value3": 1,
                    "temp_var13": 1,
                    "u_var17": 1
                },
                "uVar18": {
                    "additional_result1": 1,
                    "additional_result3": 1,
                    "additional_value": 1,
                    "alternate_result_other": 1,
                    "calc_result3": 1,
                    "calculation3": 1,
                    "calculation4": 1,
                    "calculation_result_4": 1,
                    "cy_value4": 1,
                    "new_result": 1,
                    "new_value3": 1,
                    "result2": 2,
                    "result3": 1,
                    "result3_next": 1,
                    "result4_high": 1,
                    "result_2": 1,
                    "result_temp3": 1,
                    "temp11": 1,
                    "temp14": 2,
                    "temp_result": 1,
                    "temp_result3": 1,
                    "temp_value13": 1,
                    "temp_value4": 1,
                    "temp_var14": 1,
                    "temp_var7": 1,
                    "u_var18": 1,
                    "unsigned_long_var18": 1,
                    "updated_result2": 1
                },
                "uVar4": {
                    "calculate_result1": 1,
                    "calculated_value1": 1,
                    "calculated_value4": 1,
                    "result1": 2,
                    "result1_high": 1,
                    "result2_high": 1,
                    "result4": 1,
                    "result_high": 1,
                    "result_high_bits1": 1,
                    "result_temp": 1,
                    "result_var1": 2,
                    "result_var4": 1,
                    "temp1": 6,
                    "temp_result_4": 1,
                    "temp_val_1": 1,
                    "temp_value1": 2,
                    "temp_var1": 4,
                    "temp_var4": 1,
                    "u_var4": 1,
                    "var1": 1
                },
                "uVar5": {
                    "data1": 1,
                    "data_value1": 7,
                    "data_value2": 1,
                    "data_value_1": 1,
                    "data_value_ptr": 1,
                    "input1": 1,
                    "ptr1": 1,
                    "result1_low": 1,
                    "temp2": 4,
                    "temp_val_2": 1,
                    "temp_value2": 1,
                    "temp_var2": 2,
                    "u_var5": 1,
                    "value1": 6,
                    "var1": 1,
                    "var2": 1
                },
                "uVar6": {
                    "data_value2": 1,
                    "param_value1": 1,
                    "ptr2": 1,
                    "result": 1,
                    "result1": 5,
                    "result2_low": 1,
                    "result6": 1,
                    "result_low_bits1": 1,
                    "result_ptr": 1,
                    "result_value": 1,
                    "result_var1": 1,
                    "result_var2": 2,
                    "result_var6": 1,
                    "temp1": 1,
                    "temp2": 1,
                    "temp3": 3,
                    "temp_result2_high": 1,
                    "temp_result_6": 1,
                    "temp_value2": 1,
                    "temp_var3": 1,
                    "u_var6": 1,
                    "value2": 1,
                    "var3": 1
                },
                "uVar7": {
                    "additional_result1": 1,
                    "alternate_result": 1,
                    "cy_is_null1": 3,
                    "cy_value1": 1,
                    "data_value2": 1,
                    "new_result1": 1,
                    "new_value1": 2,
                    "optional_value1": 1,
                    "result3_low": 1,
                    "result_value_1": 1,
                    "result_var3": 1,
                    "temp3": 2,
                    "temp4": 3,
                    "temp_result1": 1,
                    "temp_value3": 1,
                    "temp_var3": 1,
                    "temp_var4": 1,
                    "u_var7": 1,
                    "updated_result1": 1,
                    "value2": 1,
                    "value3": 1,
                    "var1": 1,
                    "var4": 1,
                    "var7": 1
                },
                "uVar8": {
                    "data2": 1,
                    "data_value2": 6,
                    "data_value2_next": 1,
                    "data_value3": 1,
                    "data_value_2": 1,
                    "data_value_ptr2": 1,
                    "input2": 1,
                    "result1_mid": 1,
                    "temp4": 1,
                    "temp5": 3,
                    "temp_val_3": 1,
                    "temp_value4": 1,
                    "temp_var4": 1,
                    "temp_var5": 1,
                    "u_var8": 1,
                    "value2": 4,
                    "value3": 1,
                    "value4": 1,
                    "var2": 2,
                    "var5": 1
                },
                "uVar9": {
                    "cy_is_null2": 2,
                    "data_value3": 1,
                    "final_result_other1": 1,
                    "optional_value2": 1,
                    "param_value2": 1,
                    "result2": 5,
                    "result2_mid": 1,
                    "result7": 1,
                    "result_ptr2": 1,
                    "result_value_2": 1,
                    "result_var2": 1,
                    "result_var4": 1,
                    "result_var9": 1,
                    "temp2": 1,
                    "temp4": 1,
                    "temp6": 3,
                    "temp_val_4": 1,
                    "temp_value3": 1,
                    "temp_value5": 1,
                    "temp_var6": 1,
                    "u_var9": 1,
                    "value5": 1,
                    "var3": 1,
                    "var6": 1
                }
            },
            "called": [
                "FUN_080058e0",
                "FUN_08000a18",
                "FUN_080009dc",
                "FUN_08000194",
                "FUN_080004f8",
                "FUN_08000190"
            ],
            "calling": [
                "FUN_08000cd0"
            ],
            "code": "\nchar calculate_and_update_result_080016b4(int input)\n\n{\n  char result;\n  int data_value;\n  int is_valid;\n  undefined4 temp1;\n  undefined4 data_value1;\n  undefined4 result1;\n  undefined4 cy_is_null1;\n  undefined4 data_value2;\n  undefined4 result2;\n  undefined4 temp7;\n  char result;\n  undefined4 temp8;\n  undefined4 temp9;\n  undefined4 temp10;\n  undefined8 result1;\n  undefined8 result2;\n  undefined8 final_result;\n  undefined8 temp14;\n  undefined4 local_value1;\n  undefined4 temp16;\n  \n  result = *(char *)(input + 0x70);\n  if (result != '\\0') {\n    data_value = initialize_and_return_data_values_080058e0();\n    if ((uint)(data_value - *(int *)(input + 0x44)) < *(uint *)(input + 0x58)) {\n      result = '\\0';\n    }\n    else {\n      data_value1 = **(undefined4 **)(input + 0x38);\n      data_value2 = (*(undefined4 **)(input + 0x38))[1];\n      result1 = calculate_unsigned_long_long_08000190(**(undefined4 **)(input + 0x40),(*(undefined4 **)(input + 0x40))[1])\n      ;\n      temp10 = (undefined4)((ulonglong)result1 >> 0x20);\n      result2 = calculate_unsigned_long_long_08000190(data_value1,data_value2,*(undefined4 *)(input + 0x50),\n                            *(undefined4 *)(input + 0x54));\n      temp1 = (undefined4)((ulonglong)result2 >> 0x20);\n      final_result = calculate_result_080004f8((int)result1,temp10,*(undefined4 *)(input + 0x20),\n                            *(undefined4 *)(input + 0x24));\n      final_result = calculate_result_08000194((int)final_result,(int)((ulonglong)final_result >> 0x20),\n                            *(undefined4 *)(input + 0x48),*(undefined4 *)(input + 0x4c));\n      *(undefined8 *)(input + 0x48) = final_result;\n      result = *(char *)(input + 0x71);\n      if (result == '\\0') {\n        temp14 = calculate_result_080004f8((int)result2,temp1,*(undefined4 *)(input + 0x18),\n                              *(undefined4 *)(input + 0x1c));\n        final_result = calculate_unsigned_long_long_08000190((int)final_result,(int)((ulonglong)final_result >> 0x20),(int)temp14,\n                              (int)((ulonglong)temp14 >> 0x20));\n        *(undefined8 *)(input + 0x48) = final_result;\n      }\n      result1 = *(undefined4 *)(input + 0x48);\n      result2 = *(undefined4 *)(input + 0x4c);\n      temp8 = *(undefined4 *)(undefined8 *)(input + 0x68);\n      temp9 = *(undefined4 *)(input + 0x6c);\n      final_result = *(undefined8 *)(input + 0x68);\n      is_valid = is_end_of_input_valid_08000a18(result1,result2,temp8,temp9);\n      if (is_valid == 0) {\n        cy_is_null1 = *(undefined4 *)(input + 0x60);\n        temp7 = *(undefined4 *)(input + 100);\n        is_valid = check_if_cy_is_null_080009dc(result1,result2);\n        if (is_valid != 0) {\n          *(undefined4 *)(input + 0x48) = cy_is_null1;\n          *(undefined4 *)(input + 0x4c) = temp7;\n        }\n      }\n      else {\n        *(undefined4 *)(input + 0x48) = temp8;\n        *(undefined4 *)(input + 0x4c) = temp9;\n      }\n      if (result == '\\0') {\n        result1 = 0;\n      }\n      else {\n        result1 = calculate_result_080004f8((int)result1,temp10,*(undefined4 *)(input + 0x18),\n                              *(undefined4 *)(input + 0x1c));\n      }\n      temp16 = (undefined4)((ulonglong)result1 >> 0x20);\n      local_value1 = (undefined4)result1;\n      temp10 = *(undefined4 *)(input + 0x48);\n      result1 = *(undefined4 *)(input + 0x4c);\n      result1 = calculate_result_080004f8((int)result2,temp1,*(undefined4 *)(input + 0x28),\n                            *(undefined4 *)(input + 0x2c));\n      result1 = calculate_unsigned_long_long_08000190(temp10,result1,(int)result1,(int)((ulonglong)result1 >> 0x20));\n      result1 = calculate_result_08000194(local_value1,temp16,(int)result1,(int)((ulonglong)result1 >> 0x20));\n      temp10 = (undefined4)((ulonglong)result1 >> 0x20);\n      is_valid = check_if_cy_is_null_080009dc(temp8,temp9,(int)result1,temp10);\n      if (is_valid == 0) {\n        final_result = *(undefined8 *)(input + 0x60);\n        is_valid = check_if_cy_is_null_080009dc((int)result1,temp10,*(undefined4 *)(undefined8 *)(input + 0x60),\n                             *(undefined4 *)(input + 100));\n        if (is_valid == 0) {\n          final_result = result1;\n        }\n      }\n      **(undefined8 **)(input + 0x3c) = final_result;\n      *(undefined4 *)(input + 0x50) = data_value1;\n      *(undefined4 *)(input + 0x54) = data_value2;\n      *(int *)(input + 0x44) = data_value;\n    }\n  }\n  return result;\n}\n\n",
            "current_name": "calculate_and_update_result_080016b4",
            "entrypoint": "0x080016b4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080016b4": "calculate_and_update_result_080016b4",
                "cVar1": "result",
                "cVar11": "result",
                "iVar2": "data_value",
                "iVar3": "is_valid",
                "local_38": "local_value1",
                "param_1": "input",
                "uStack_34": "temp16",
                "uVar10": "temp7",
                "uVar12": "temp8",
                "uVar13": "temp9",
                "uVar14": "temp10",
                "uVar15": "result1",
                "uVar16": "result2",
                "uVar17": "final_result",
                "uVar18": "temp14",
                "uVar4": "temp1",
                "uVar5": "data_value1",
                "uVar6": "result1",
                "uVar7": "cy_is_null1",
                "uVar8": "data_value2",
                "uVar9": "result2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001814": {
            "additional_data": {
                "FUN_08001814": {
                    "initialize_data": 6,
                    "initialize_param_values": 1,
                    "initialize_parameters": 11,
                    "initialize_params": 4,
                    "initialize_params_and_calculate_values": 2,
                    "parse_and_process_data": 1,
                    "process_data": 3,
                    "process_parameters": 1,
                    "process_params_and_calculate_results": 1,
                    "update_and_calculate_values": 1
                },
                "bVar4": {
                    "flag2": 1,
                    "flag_is_not_one": 1,
                    "is_condition_met": 1,
                    "is_flag1": 1,
                    "is_flag_not_one": 1,
                    "is_flag_one": 3,
                    "is_flag_set": 3,
                    "is_flag_true": 9,
                    "is_input_flag_one": 1,
                    "is_not_equal": 2,
                    "is_not_equal_one": 1,
                    "is_not_equal_to1": 1,
                    "is_not_flag_one": 1,
                    "is_not_one": 1,
                    "is_param9_not1": 1,
                    "is_param9_not_one": 1,
                    "is_true": 1,
                    "not_equal_one_flag": 1
                },
                "calculate_float_value_0800074c": {
                    "calculate_float_value": 8
                },
                "calculate_result_080004f8": {
                    "calculate_result": 8
                },
                "calculate_unsigned_long_long_08000190": {
                    "calculate_unsigned_long": 1,
                    "calculate_unsigned_long_long": 4,
                    "calculate_unsigned_value": 3
                },
                "check_if_cy_is_null_080009dc": {
                    "check_if_cy_is_null": 1,
                    "check_if_null": 2,
                    "check_if_value_is_null": 1
                },
                "iVar1": {
                    "check_result": 2,
                    "cy_check_result": 3,
                    "cy_is_null": 1,
                    "cy_is_null_result": 2,
                    "is_cy_null": 12,
                    "is_null": 3,
                    "result": 7
                },
                "param_1": {
                    "data": 4,
                    "data_array": 1,
                    "output": 1,
                    "output_array": 7,
                    "output_buffer": 1,
                    "output_params": 2,
                    "param_array": 1,
                    "parameters": 9,
                    "parameters_array": 1,
                    "params": 1,
                    "params_array": 1,
                    "result_array": 2
                },
                "param_2": {
                    "deprecated": 1,
                    "input2": 1,
                    "input_param2": 2,
                    "param2": 9,
                    "param_2": 2,
                    "parameter2": 1,
                    "size": 1,
                    "unused": 5,
                    "unused1": 1,
                    "unused_param": 5,
                    "unused_param_2": 1,
                    "unused_parameter": 1,
                    "unused_parameter_1": 1
                },
                "param_3": {
                    "input1": 8,
                    "input3": 1,
                    "input_1": 3,
                    "input_param1": 1,
                    "input_param3": 2,
                    "input_value1": 1,
                    "param3": 1,
                    "value1": 12,
                    "value_1": 2
                },
                "param_4": {
                    "input2": 8,
                    "input4": 1,
                    "input_2": 3,
                    "input_param2": 1,
                    "input_param4": 2,
                    "input_value2": 1,
                    "param4": 1,
                    "value2": 12,
                    "value_2": 2
                },
                "param_5": {
                    "input3": 8,
                    "input5": 1,
                    "input_3": 3,
                    "input_param3": 1,
                    "input_param5": 2,
                    "input_value3": 1,
                    "param5": 1,
                    "value3": 12,
                    "value_3": 2
                },
                "param_6": {
                    "input4": 8,
                    "input6": 1,
                    "input_4": 3,
                    "input_param4": 1,
                    "input_param6": 2,
                    "input_value4": 1,
                    "param6": 1,
                    "value4": 12,
                    "value_4": 2
                },
                "param_7": {
                    "input5": 8,
                    "input7": 1,
                    "input_5": 3,
                    "input_param5": 1,
                    "input_param7": 2,
                    "input_value5": 1,
                    "param7": 1,
                    "value5": 12,
                    "value_5": 2
                },
                "param_8": {
                    "input6": 8,
                    "input8": 1,
                    "input_6": 3,
                    "input_param6": 1,
                    "input_param8": 2,
                    "input_value6": 1,
                    "param8": 1,
                    "value6": 12,
                    "value_6": 2
                },
                "param_9": {
                    "check_value": 1,
                    "condition": 3,
                    "flag": 19,
                    "input9": 1,
                    "input_flag": 3,
                    "input_param9": 2,
                    "is_param9": 1,
                    "param9": 1
                },
                "reverse_bits_and_shift_0800040c": {
                    "reverse_and_shift": 2,
                    "reverse_bits_and_shift": 6
                },
                "uVar2": {
                    "extracted_value": 1,
                    "high_bits": 1,
                    "result_high": 3,
                    "shift_value": 3,
                    "shifted_result": 3,
                    "shifted_value": 19,
                    "upper_bits": 1
                },
                "uVar3": {
                    "bit_value": 2,
                    "bool_value": 3,
                    "converted_flag": 3,
                    "final_value": 1,
                    "flag": 3,
                    "flag1": 1,
                    "flag_as_byte": 1,
                    "flag_value": 11,
                    "is_flag_true": 1,
                    "new_value": 1,
                    "param9_bool": 1,
                    "temp_value": 2,
                    "value": 1
                },
                "uVar5": {
                    "bit_reversed_result": 1,
                    "bits_and_shift_result": 1,
                    "calculated_value": 1,
                    "calculated_value1": 4,
                    "float_value": 4,
                    "float_value1": 5,
                    "float_value_1": 2,
                    "result1": 1,
                    "reverse_bits": 1,
                    "reverse_bits_shifted": 1,
                    "reversed_bits": 2,
                    "reversed_bits_and_shifted": 1,
                    "reversed_value": 6,
                    "temp_var1": 1
                },
                "uVar6": {
                    "calc_result1": 2,
                    "calculated_result": 3,
                    "calculated_result1": 1,
                    "calculated_result_1": 1,
                    "calculated_value2": 4,
                    "calculation_result": 1,
                    "calculation_result1": 1,
                    "float_value2": 5,
                    "float_value_2": 1,
                    "result": 2,
                    "result1": 4,
                    "result2": 1,
                    "result_1": 1,
                    "result_value": 2,
                    "result_value1": 1,
                    "temp_var2": 1
                },
                "uVar7": {
                    "calc_result2": 2,
                    "calculated_result2": 1,
                    "calculated_value3": 3,
                    "calculation_result2": 2,
                    "result2": 4,
                    "result3": 1,
                    "result_2": 1,
                    "result_value2": 1,
                    "temp_var3": 1,
                    "unsigned_long_long": 1,
                    "unsigned_long_long_result": 1,
                    "unsigned_long_long_value": 3,
                    "unsigned_long_value": 1,
                    "unsigned_result": 2,
                    "unsigned_value": 7
                }
            },
            "called": [
                "FUN_080009dc",
                "FUN_0800074c",
                "FUN_0800040c",
                "FUN_080004f8",
                "FUN_08000190"
            ],
            "calling": [
                "FUN_080018f8",
                "FUN_08001ab0"
            ],
            "code": "\nvoid initialize_parameters_08001814(undefined4 *parameters,undefined4 param2,undefined4 value1,undefined4 value2,\n                 undefined4 value3,undefined4 value4,undefined4 value5,undefined4 value6,\n                 int flag)\n\n{\n  int is_cy_null;\n  undefined4 shifted_value;\n  undefined flag_value;\n  bool is_flag_true;\n  undefined8 reversed_value;\n  undefined8 float_value2;\n  undefined8 unsigned_value;\n  \n  is_cy_null = check_if_null(value1,value2,0,0);\n  if (((is_cy_null == 0) && (is_cy_null = check_if_null(value3,value4,0,0), is_cy_null == 0)) &&\n     (is_cy_null = check_if_null(value5,value6,0,0), is_cy_null == 0)) {\n    parameters[0xd] = flag;\n    is_flag_true = flag != 1;\n    if (is_flag_true) {\n      flag = 0;\n    }\n    flag_value = (undefined)flag;\n    if (!is_flag_true) {\n      flag_value = 1;\n    }\n    *(undefined *)((int)parameters + 0x71) = flag_value;\n    *parameters = value1;\n    parameters[1] = value2;\n    parameters[2] = value3;\n    parameters[3] = value4;\n    parameters[4] = value5;\n    parameters[5] = value6;\n    reversed_value = reverse_bits_and_shift(parameters[0x16]);\n    reversed_value = calculate_float_value((int)reversed_value,(int)((ulonglong)reversed_value >> 0x20),0,0x408f4000);\n    shifted_value = (undefined4)((ulonglong)reversed_value >> 0x20);\n    parameters[6] = value1;\n    parameters[7] = value2;\n    float_value2 = calculate_result(value3,value4,(int)reversed_value,shifted_value);\n    *(undefined8 *)(parameters + 8) = float_value2;\n    reversed_value = calculate_float_value(value5,value6,(int)reversed_value,shifted_value);\n    *(undefined8 *)(parameters + 10) = reversed_value;\n    if (parameters[0xc] == 1) {\n      unsigned_value = calculate_unsigned_long_long(0,0,value1,value2);\n      *(undefined8 *)(parameters + 6) = unsigned_value;\n      float_value2 = calculate_unsigned_long_long(0,0,(int)float_value2,(int)((ulonglong)float_value2 >> 0x20));\n      *(undefined8 *)(parameters + 8) = float_value2;\n      reversed_value = calculate_unsigned_long_long(0,0,(int)reversed_value,(int)((ulonglong)reversed_value >> 0x20));\n      *(undefined8 *)(parameters + 10) = reversed_value;\n    }\n  }\n  return;\n}\n\n",
            "current_name": "initialize_parameters_08001814",
            "entrypoint": "0x08001814",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001814": "initialize_parameters_08001814",
                "bVar4": "is_flag_true",
                "calculate_float_value_0800074c": "calculate_float_value",
                "calculate_result_080004f8": "calculate_result",
                "calculate_unsigned_long_long_08000190": "calculate_unsigned_long_long",
                "check_if_cy_is_null_080009dc": "check_if_null",
                "iVar1": "is_cy_null",
                "param_1": "parameters",
                "param_2": "param2",
                "param_3": "value1",
                "param_4": "value2",
                "param_5": "value3",
                "param_6": "value4",
                "param_7": "value5",
                "param_8": "value6",
                "param_9": "flag",
                "reverse_bits_and_shift_0800040c": "reverse_bits_and_shift",
                "uVar2": "shifted_value",
                "uVar3": "flag_value",
                "uVar5": "reversed_value",
                "uVar6": "float_value2",
                "uVar7": "unsigned_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080018f8": {
            "additional_data": {
                "DAT_": {
                    "": 1
                },
                "FUN_08001814": {
                    "initialize_parameters_helper": 1
                },
                "FUN_080018f8": {
                    "initialize": 12,
                    "initialize_all_parameters": 1,
                    "initialize_and_return_parameters": 4,
                    "initialize_application": 1,
                    "initialize_main": 1,
                    "initialize_parameters": 11,
                    "initialize_program": 1
                },
                "PTR_": {
                    "": 1
                },
                "initialize_parameters_08001814": {
                    "": 1,
                    "init_params": 1,
                    "initialize_parameters": 21
                }
            },
            "called": [
                "FUN_08001814"
            ],
            "calling": [
                "FUN_08000cd0"
            ],
            "code": "\nvoid initialize_and_return_parameters_080018f8(void)\n\n{\n  initialize_parameters();\n  return;\n}\n\n",
            "current_name": "initialize_and_return_parameters_080018f8",
            "entrypoint": "0x080018f8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080018f8": "initialize_and_return_parameters_080018f8",
                "initialize_parameters_08001814": "initialize_parameters"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001918": {
            "additional_data": {
                "DAT_080004f0": {
                    "unknown_data1": 1
                },
                "DAT_080004f4": {
                    "unknown_data2": 1
                },
                "DAT_08000748": {
                    "unknown_data3": 1
                },
                "DAT_0800074c": {
                    "unknown_data4": 1
                },
                "FUN_08001918": {
                    "calculate_and_update_float_values": 1,
                    "calculate_and_update_values": 4,
                    "calculate_float_result": 1,
                    "calculate_result": 1,
                    "calculate_result_and_update": 2,
                    "calculate_updated_values": 2,
                    "calculate_values": 1,
                    "perform_calculation": 1,
                    "perform_calculations": 1,
                    "process_data": 1,
                    "process_parameters": 1,
                    "process_params": 1,
                    "update_float_values": 4,
                    "update_parameters": 1,
                    "update_params": 1,
                    "update_params_and_calculate_result": 1,
                    "update_values": 7
                },
                "PTR_0800042c": {
                    "bit_shift_and_concat": 1
                },
                "bit_shift_and_concat_0800042c": {
                    "bit_shift_and_concatenate": 1
                },
                "calculate_float_value_0800074c": {
                    "calculate_float_value": 8
                },
                "calculate_result_080004f8": {
                    "calculate_result": 8
                },
                "param_1": {
                    "address": 1,
                    "arg1": 1,
                    "base_address": 5,
                    "data": 1,
                    "data_structure": 1,
                    "input": 2,
                    "input_addr": 1,
                    "input_address": 1,
                    "input_buffer": 1,
                    "input_data": 4,
                    "input_parameter1": 1,
                    "input_ptr": 3,
                    "input_struct": 1,
                    "input_struct_addr": 1,
                    "obj_ptr": 1,
                    "object": 1,
                    "object_address": 2,
                    "object_base_address": 1,
                    "param": 1,
                    "result_address": 1
                },
                "param_2": {
                    "buffer_size": 1,
                    "count": 12,
                    "data_length": 2,
                    "input_parameter2": 1,
                    "input_value": 2,
                    "length": 2,
                    "new_value": 1,
                    "num_iterations": 6,
                    "size": 2,
                    "value": 1,
                    "value_count": 1
                },
                "param_3": {
                    "arg3": 1,
                    "input_param1": 1,
                    "param1": 3,
                    "param3": 9,
                    "param_3": 5,
                    "param_a": 1,
                    "parameter_3": 2,
                    "temp_var_1": 1,
                    "unknown1": 1,
                    "unknown_1": 1,
                    "unused_param1": 2,
                    "unused_param_1": 1,
                    "unused_parameter1": 1,
                    "value1": 1
                },
                "param_4": {
                    "arg4": 1,
                    "input_param2": 1,
                    "param2": 3,
                    "param4": 9,
                    "param_4": 5,
                    "param_b": 1,
                    "parameter_4": 2,
                    "temp_var_2": 1,
                    "unknown2": 1,
                    "unknown_2": 1,
                    "unused_param2": 2,
                    "unused_param_2": 1,
                    "unused_parameter2": 1,
                    "update_flag": 1,
                    "value2": 1
                },
                "reverse_bits_and_shift_0800040c": {
                    "reverse_bits_and_shift": 4
                },
                "uVar1": {
                    "calc_result1": 1,
                    "high_bits": 2,
                    "result1": 1,
                    "result_1": 2,
                    "result_high": 4,
                    "result_shifted": 1,
                    "result_upper": 1,
                    "shifted_result": 1,
                    "shifted_result_upper": 1,
                    "shifted_val": 1,
                    "shifted_val4": 1,
                    "shifted_value": 10,
                    "shifted_value1": 1,
                    "temp_value1": 1,
                    "upper_half_1": 1,
                    "upper_value": 2
                },
                "uVar2": {
                    "bitwise_result": 1,
                    "concatenated_bits": 1,
                    "concatenated_val": 1,
                    "concatenated_value": 11,
                    "float_value_1": 2,
                    "result2": 1,
                    "shifted_and_concatenated_value": 1,
                    "shifted_concat_value": 1,
                    "shifted_concatenated_value": 1,
                    "shifted_input": 1,
                    "shifted_value": 9,
                    "shifted_value2": 1
                },
                "uVar3": {
                    "float_value_2": 2,
                    "reversed_and_shifted_value": 4,
                    "reversed_bits": 7,
                    "reversed_bits_and_shifted_value": 1,
                    "reversed_bits_shifted_value": 1,
                    "reversed_bits_value": 2,
                    "reversed_bitwise_result": 1,
                    "reversed_shifted_val": 1,
                    "reversed_shifted_value": 4,
                    "reversed_val": 1,
                    "reversed_value": 6,
                    "shifted_result": 1
                }
            },
            "called": [
                "FUN_0800074c",
                "FUN_0800040c",
                "FUN_080004f8",
                "FUN_0800042c"
            ],
            "calling": [
                "FUN_08000cd0"
            ],
            "code": "\nvoid calculate_and_update_float_values_08001918(int base_address,int count,undefined4 param3,undefined4 param4)\n\n{\n  undefined4 shifted_value;\n  undefined8 concatenated_value;\n  undefined8 reversed_bits;\n  \n  if (0 < count) {\n    concatenated_value = bit_shift_and_concatenate(count);\n    reversed_bits = reverse_bits_and_shift(*(undefined4 *)(base_address + 0x58));\n    concatenated_value = calculate_float_value((int)concatenated_value,(int)((ulonglong)concatenated_value >> 0x20),(int)reversed_bits,\n                         (int)((ulonglong)reversed_bits >> 0x20),param4);\n    shifted_value = (undefined4)((ulonglong)concatenated_value >> 0x20);\n    reversed_bits = calculate_result((int)concatenated_value,shifted_value,*(undefined4 *)(base_address + 0x20),\n                         *(undefined4 *)(base_address + 0x24));\n    *(undefined8 *)(base_address + 0x20) = reversed_bits;\n    concatenated_value = calculate_float_value(*(undefined4 *)(base_address + 0x28),*(undefined4 *)(base_address + 0x2c),(int)concatenated_value,\n                         shifted_value);\n    *(undefined8 *)(base_address + 0x28) = concatenated_value;\n    *(int *)(base_address + 0x58) = count;\n  }\n  return;\n}\n\n",
            "current_name": "calculate_and_update_float_values_08001918",
            "entrypoint": "0x08001918",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001918": "calculate_and_update_float_values_08001918",
                "bit_shift_and_concat_0800042c": "bit_shift_and_concatenate",
                "calculate_float_value_0800074c": "calculate_float_value",
                "calculate_result_080004f8": "calculate_result",
                "param_1": "base_address",
                "param_2": "count",
                "param_3": "param3",
                "param_4": "param4",
                "reverse_bits_and_shift_0800040c": "reverse_bits_and_shift",
                "uVar1": "shifted_value",
                "uVar2": "concatenated_value",
                "uVar3": "reversed_bits"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001960": {
            "additional_data": {
                "FUN_08001960": {
                    "process_and_update_parameters": 1,
                    "process_and_validate_parameters": 6,
                    "process_and_validate_params": 2,
                    "process_parameters": 14,
                    "update_parameter": 1,
                    "update_parameters": 3,
                    "update_params_and_validate": 1,
                    "validate_and_process_params": 1,
                    "validate_and_set_parameters": 1,
                    "validate_and_update_params": 1
                },
                "iVar1": {
                    "is_valid": 1,
                    "result": 13,
                    "valid_params": 1,
                    "validation_result": 16
                },
                "param_1": {
                    "base_address": 1,
                    "buffer_address": 1,
                    "data": 1,
                    "data_pointer": 2,
                    "data_storage": 1,
                    "data_struct": 1,
                    "data_struct_ptr": 1,
                    "data_structure": 2,
                    "function_data": 1,
                    "input_buffer": 1,
                    "input_struct": 1,
                    "obj": 1,
                    "obj_address": 2,
                    "object": 2,
                    "object_address": 1,
                    "object_ptr": 1,
                    "output": 2,
                    "output_address": 1,
                    "output_struct": 1,
                    "param_1": 1,
                    "param_base_address": 1,
                    "result": 1,
                    "struct_ptr": 3,
                    "target_address": 1
                },
                "param_2": {
                    "obj_size": 1,
                    "param2": 7,
                    "param_2": 7,
                    "ptr2": 1,
                    "unused": 8,
                    "unused1": 1,
                    "unused_param": 5,
                    "unused_param_2": 1
                },
                "param_3": {
                    "current_value_1": 1,
                    "input1": 11,
                    "input_1": 2,
                    "input_data_1": 1,
                    "input_param_1": 1,
                    "input_value1": 2,
                    "input_value_a": 1,
                    "new_param1": 3,
                    "new_param_1": 2,
                    "new_parameter1": 1,
                    "new_val1": 2,
                    "param1": 1,
                    "param3": 1,
                    "param_3": 1,
                    "value1": 1
                },
                "param_4": {
                    "current_value_2": 1,
                    "input2": 11,
                    "input_2": 2,
                    "input_data_2": 1,
                    "input_param_2": 1,
                    "input_value2": 2,
                    "input_value_b": 1,
                    "new_param2": 3,
                    "new_param_2": 2,
                    "new_parameter2": 1,
                    "new_val2": 2,
                    "param2": 1,
                    "param4": 1,
                    "param_4": 1,
                    "value2": 1
                },
                "param_5": {
                    "input3": 10,
                    "input_3": 2,
                    "input_data_3": 1,
                    "input_param_3": 1,
                    "input_value3": 2,
                    "input_value_c": 1,
                    "new_param3": 3,
                    "new_param_3": 2,
                    "new_parameter3": 1,
                    "new_val3": 2,
                    "new_value_1": 1,
                    "param3": 1,
                    "param5": 1,
                    "param_5": 1,
                    "temp_input1": 1,
                    "value3": 1
                },
                "param_6": {
                    "input4": 10,
                    "input_4": 2,
                    "input_data_4": 1,
                    "input_param_4": 1,
                    "input_value4": 2,
                    "input_value_d": 1,
                    "new_param4": 3,
                    "new_param_4": 2,
                    "new_parameter4": 1,
                    "new_val4": 2,
                    "new_value_2": 1,
                    "param4": 1,
                    "param6": 1,
                    "param_6": 1,
                    "temp_input2": 1,
                    "value4": 1
                },
                "puVar2": {
                    "buffer_pointer": 1,
                    "data_array": 1,
                    "data_pointer": 6,
                    "data_ptr": 3,
                    "p_input_data": 1,
                    "pointer": 2,
                    "pointer_to_data": 2,
                    "ptr": 5,
                    "ptr_to_data": 7,
                    "ptr_to_parameters": 1,
                    "ptr_to_values": 1,
                    "ptr_to_var2": 1
                },
                "uVar3": {
                    "data1": 3,
                    "data_1": 1,
                    "data_u_var1": 1,
                    "data_val1": 1,
                    "data_value_a": 1,
                    "first_value": 1,
                    "old_input1": 1,
                    "old_param_1": 1,
                    "old_val1": 1,
                    "original_value_1": 1,
                    "param_1_temp": 1,
                    "prev_input1": 1,
                    "prev_param1": 1,
                    "temp1": 7,
                    "temp_value1": 1,
                    "temp_var1": 2,
                    "value1": 4,
                    "value_1": 1,
                    "var3": 1
                },
                "uVar4": {
                    "data2": 3,
                    "data_2": 1,
                    "data_u_var2": 1,
                    "data_val2": 1,
                    "data_value_b": 1,
                    "old_input2": 1,
                    "old_param_3": 1,
                    "old_val2": 1,
                    "original_value_2": 1,
                    "param_3_temp": 1,
                    "prev_input2": 1,
                    "prev_param2": 1,
                    "temp2": 7,
                    "temp_value2": 1,
                    "temp_value_1": 1,
                    "temp_var2": 2,
                    "value2": 4,
                    "value_2": 1,
                    "var4": 1
                },
                "uVar5": {
                    "data3": 3,
                    "data_3": 1,
                    "data_u_var3": 1,
                    "data_val3": 1,
                    "data_value_c": 1,
                    "new_value_1_copy": 1,
                    "old_param_2": 1,
                    "old_val3": 1,
                    "param_2_temp": 1,
                    "second_value": 1,
                    "temp3": 7,
                    "temp_input1_1": 1,
                    "temp_input3": 1,
                    "temp_value3": 1,
                    "temp_var3": 2,
                    "tmp_param1": 1,
                    "value3": 4,
                    "value_3": 1,
                    "var5": 1
                },
                "uVar6": {
                    "data4": 3,
                    "data_4": 1,
                    "data_u_var4": 1,
                    "data_val4": 1,
                    "data_value_d": 1,
                    "new_value_2_copy": 1,
                    "old_param_4": 1,
                    "old_val4": 1,
                    "param_4_temp": 1,
                    "temp4": 7,
                    "temp_input2_1": 1,
                    "temp_input4": 1,
                    "temp_value4": 1,
                    "temp_value_2": 1,
                    "temp_var4": 2,
                    "tmp_param2": 1,
                    "value4": 4,
                    "value_4": 1,
                    "var6": 1
                }
            },
            "called": [
                "FUN_08000a18",
                "FUN_080009dc",
                "FUN_08000a04"
            ],
            "calling": [
                "FUN_08000cd0",
                "FUN_08001ab0"
            ],
            "code": "\nvoid process_and_validate_parameters_08001960(int struct_ptr,undefined4 unused,undefined4 input1,undefined4 input2,\n                 undefined4 input3,undefined4 input4)\n\n{\n  int validation_result;\n  undefined4 *ptr_to_data;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  \n  validation_result = process_and_validate_parameters_08001960_08000a04(input1,input2,input3,input4,input2);\n  if (validation_result == 0) {\n    *(undefined4 *)(struct_ptr + 0x60) = input1;\n    *(undefined4 *)(struct_ptr + 100) = input2;\n    *(undefined4 *)(struct_ptr + 0x68) = input3;\n    *(undefined4 *)(struct_ptr + 0x6c) = input4;\n    if (*(char *)(struct_ptr + 0x70) != '\\0') {\n      ptr_to_data = *(undefined4 **)(struct_ptr + 0x3c);\n      temp1 = *ptr_to_data;\n      temp3 = ptr_to_data[1];\n      validation_result = check_if_cy_is_null_080009dc(input3,input4,temp1,temp3);\n      if (validation_result == 0) {\n        validation_result = is_end_of_input_valid_08000a18(input1,input2,temp1,temp3);\n        if (validation_result != 0) {\n          *ptr_to_data = input1;\n          ptr_to_data[1] = input2;\n        }\n      }\n      else {\n        *ptr_to_data = input3;\n        ptr_to_data[1] = input4;\n      }\n      temp1 = *(undefined4 *)(struct_ptr + 0x48);\n      temp3 = *(undefined4 *)(struct_ptr + 0x4c);\n      temp2 = *(undefined4 *)(struct_ptr + 0x68);\n      temp4 = *(undefined4 *)(struct_ptr + 0x6c);\n      validation_result = is_end_of_input_valid_08000a18(temp1,temp3,temp2,temp4);\n      if (validation_result != 0) {\n        *(undefined4 *)(struct_ptr + 0x48) = temp2;\n        *(undefined4 *)(struct_ptr + 0x4c) = temp4;\n        return;\n      }\n      temp2 = *(undefined4 *)(struct_ptr + 0x60);\n      temp4 = *(undefined4 *)(struct_ptr + 100);\n      validation_result = check_if_cy_is_null_080009dc(temp1,temp3,temp2,temp4);\n      if (validation_result != 0) {\n        *(undefined4 *)(struct_ptr + 0x48) = temp2;\n        *(undefined4 *)(struct_ptr + 0x4c) = temp4;\n      }\n    }\n  }\n  return;\n}\n\n",
            "current_name": "process_and_validate_parameters_08001960",
            "entrypoint": "0x08001960",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001960": "process_and_validate_parameters_08001960",
                "iVar1": "validation_result",
                "param_1": "struct_ptr",
                "param_2": "unused",
                "param_3": "input1",
                "param_4": "input2",
                "param_5": "input3",
                "param_6": "input4",
                "puVar2": "ptr_to_data",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar5": "temp3",
                "uVar6": "temp4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080019f6": {
            "additional_data": {
                "FUN_080019f6": {
                    "extract_variables": 1,
                    "initialize_input": 1,
                    "process_input": 2,
                    "process_input_data": 1,
                    "update_configuration": 1,
                    "update_data": 3,
                    "update_input_data": 9,
                    "update_input_fields": 1,
                    "update_input_params": 4,
                    "update_input_values": 2,
                    "update_input_variables": 1,
                    "update_parameters": 2,
                    "update_values": 1,
                    "update_values_and_check_validity": 1,
                    "validate_and_update_input": 1
                },
                "check_if_cy_is_null_080009dc": {
                    "check_if_cy_is_null": 4,
                    "is_cy_null": 2
                },
                "iVar1": {
                    "end_valid": 1,
                    "has_valid_end_of_input": 1,
                    "is_end_of_input_valid": 6,
                    "is_valid": 7,
                    "is_valid_end": 6,
                    "is_valid_end_of_input": 3,
                    "is_valid_eoi": 1,
                    "is_valid_input": 5,
                    "validity_check": 1
                },
                "is_end_of_input_valid_08000a18": {
                    "is_end_of_input_valid": 4,
                    "is_valid_end_of_input": 2
                },
                "param_1": {
                    "configuration_ptr": 1,
                    "data": 1,
                    "data_ptr": 2,
                    "function_argument": 1,
                    "function_parameter": 1,
                    "input": 4,
                    "input_address": 1,
                    "input_data": 11,
                    "input_param": 1,
                    "input_params": 1,
                    "input_pointer": 2,
                    "input_ptr": 2,
                    "input_struct": 1,
                    "param": 1,
                    "param_ptr": 1
                },
                "result": {
                    "is_end_of_input_valid": 1
                },
                "uVar2": {
                    "current_value": 2,
                    "cy_address": 1,
                    "cy_ptr": 1,
                    "cy_value": 2,
                    "end_input": 1,
                    "end_value1": 1,
                    "first_value": 1,
                    "input_param1": 1,
                    "input_value1": 1,
                    "new_config_value1": 1,
                    "new_data1": 1,
                    "new_ptr1": 1,
                    "new_var1": 1,
                    "param_ptr2": 1,
                    "ptr1": 1,
                    "second_value": 1,
                    "temp1": 1,
                    "temp_value1": 1,
                    "temp_var1": 4,
                    "third_value": 1,
                    "tmp_var1": 1,
                    "update_ptr": 1,
                    "value1": 3,
                    "variable1": 1
                },
                "uVar2_2": {
                    "sixth_value": 1
                },
                "uVar3": {
                    "config_value1": 1,
                    "data1": 2,
                    "data_ptr_value": 1,
                    "first_param": 1,
                    "first_value": 1,
                    "first_value_from_ptr": 1,
                    "input_data1": 1,
                    "input_param2": 1,
                    "input_value": 1,
                    "input_value1": 4,
                    "ptr1": 6,
                    "ptr2": 1,
                    "ptr_to_data_1": 1,
                    "ptr_value1": 1,
                    "temp_var2": 4,
                    "tmp_var2": 1,
                    "value1": 1,
                    "value2": 1,
                    "variable2": 1
                },
                "uVar4": {
                    "config_value2": 1,
                    "data2": 2,
                    "input_data2": 1,
                    "input_param3": 1,
                    "input_value2": 5,
                    "ptr2": 6,
                    "ptr3": 1,
                    "ptr_to_data_2": 1,
                    "ptr_value2": 1,
                    "second_param": 1,
                    "second_value": 2,
                    "second_value_from_ptr": 1,
                    "temp_var3": 4,
                    "tmp_var3": 1,
                    "value2": 1,
                    "value3": 1,
                    "variable3": 1
                },
                "uVar5": {
                    "check_if_cy_is_null": 1,
                    "check_value": 1,
                    "cy_value2": 1,
                    "end_value2": 1,
                    "fourth_value": 1,
                    "input_param4": 1,
                    "input_value2": 1,
                    "input_value3": 1,
                    "new_config_value2": 1,
                    "new_data2": 1,
                    "new_ptr2": 1,
                    "new_var2": 1,
                    "param_ptr3": 1,
                    "ptr3": 2,
                    "ptr4": 1,
                    "second_value_from_dat": 1,
                    "temp2": 1,
                    "temp_value2": 1,
                    "temp_var2": 1,
                    "temp_var4": 3,
                    "third_value": 1,
                    "tmp_var4": 1,
                    "value": 1,
                    "value1": 1,
                    "value2": 2,
                    "value4": 1,
                    "variable4": 1
                },
                "uVar5_2": {
                    "seventh_value": 1
                }
            },
            "called": [
                "FUN_08000a18",
                "FUN_080009dc"
            ],
            "calling": [
                "FUN_08001a44"
            ],
            "code": "\nvoid update_input_data_080019f6(int input_data)\n\n{\n  int is_valid;\n  undefined4 temp_var1;\n  undefined4 ptr1;\n  undefined4 ptr2;\n  undefined4 temp_var4;\n  \n  ptr1 = **(undefined4 **)(input_data + 0x3c);\n  ptr2 = (*(undefined4 **)(input_data + 0x3c))[1];\n  *(undefined4 *)(input_data + 0x48) = ptr1;\n  *(undefined4 *)(input_data + 0x4c) = ptr2;\n  temp_var1 = (*(undefined4 **)(input_data + 0x38))[1];\n  *(undefined4 *)(input_data + 0x50) = **(undefined4 **)(input_data + 0x38);\n  *(undefined4 *)(input_data + 0x54) = temp_var1;\n  temp_var1 = *(undefined4 *)(input_data + 0x68);\n  temp_var4 = *(undefined4 *)(input_data + 0x6c);\n  is_valid = is_end_of_input_valid(ptr1,ptr2,temp_var1,temp_var4);\n  if (is_valid == 0) {\n    temp_var1 = *(undefined4 *)(input_data + 0x60);\n    temp_var4 = *(undefined4 *)(input_data + 100);\n    is_valid = check_if_cy_is_null(ptr1,ptr2,temp_var1,temp_var4);\n    if (is_valid != 0) {\n      *(undefined4 *)(input_data + 0x48) = temp_var1;\n      *(undefined4 *)(input_data + 0x4c) = temp_var4;\n    }\n    return;\n  }\n  *(undefined4 *)(input_data + 0x48) = temp_var1;\n  *(undefined4 *)(input_data + 0x4c) = temp_var4;\n  return;\n}\n\n",
            "current_name": "update_input_data_080019f6",
            "entrypoint": "0x080019f6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080019f6": "update_input_data_080019f6",
                "check_if_cy_is_null_080009dc": "check_if_cy_is_null",
                "iVar1": "is_valid",
                "is_end_of_input_valid_08000a18": "is_end_of_input_valid",
                "param_1": "input_data",
                "uVar2": "temp_var1",
                "uVar3": "ptr1",
                "uVar4": "ptr2",
                "uVar5": "temp_var4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001a44": {
            "additional_data": {
                "FUN_08001a44": {
                    "set_flag_based_on_input": 1,
                    "set_flag_based_on_param": 1,
                    "set_flag_if_param_is1": 1,
                    "set_input_data_status": 1,
                    "set_input_flag": 1,
                    "set_input_status": 1,
                    "update_char_value": 1,
                    "update_flag": 4,
                    "update_flag_based_on_input": 1,
                    "update_flag_based_on_parameter": 1,
                    "update_input_data": 2,
                    "update_input_data_status": 1,
                    "update_input_flag": 1,
                    "update_input_flag_and_call_function": 1,
                    "update_input_state": 1,
                    "update_input_status": 1,
                    "update_param": 2,
                    "update_param_flag": 1,
                    "update_param_status": 3,
                    "update_param_value": 1,
                    "update_status": 4
                },
                "param_1": {
                    "base_address": 3,
                    "char_ptr": 1,
                    "data": 1,
                    "data_address": 2,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "input": 1,
                    "input_address": 3,
                    "input_buffer": 1,
                    "input_data": 2,
                    "input_data_address": 3,
                    "input_struct_address": 1,
                    "mem_address": 1,
                    "memory_address": 2,
                    "object_address": 1,
                    "param_address": 2,
                    "param_id": 1,
                    "ptr": 1,
                    "state_ptr": 1,
                    "status_ptr": 1
                },
                "param_2": {
                    "check_flag": 1,
                    "condition": 2,
                    "flag": 10,
                    "flag_value": 5,
                    "input_code": 1,
                    "input_flag": 1,
                    "is_update_required": 1,
                    "status": 5,
                    "status_flag": 2,
                    "update_flag": 2,
                    "value": 1
                },
                "uVar1": {
                    "flag": 1,
                    "flag_value": 1,
                    "is_new_data": 1,
                    "is_updated": 1,
                    "new_flag": 1,
                    "new_flag_value": 1,
                    "new_status": 3,
                    "new_value": 10,
                    "status": 3,
                    "update_flag": 1,
                    "update_status": 2,
                    "update_value": 2,
                    "updated_flag": 1,
                    "updated_flag_value": 2,
                    "value": 1
                },
                "update_input_data_080019f6": {
                    "update_input_data": 3
                }
            },
            "called": [
                "FUN_080019f6"
            ],
            "calling": [
                "FUN_08000cd0"
            ],
            "code": "\nvoid update_param_status_08001a44(int input_data_address,int flag)\n\n{\n  undefined new_value;\n  \n  if (flag == 1) {\n    new_value = 1;\n    if (*(char *)(input_data_address + 0x70) == '\\0') {\n      update_input_data();\n    }\n  }\n  else {\n    new_value = 0;\n  }\n  *(undefined *)(input_data_address + 0x70) = new_value;\n  return;\n}\n\n",
            "current_name": "update_param_status_08001a44",
            "entrypoint": "0x08001a44",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001a44": "update_param_status_08001a44",
                "param_1": "input_data_address",
                "param_2": "flag",
                "uVar1": "new_value",
                "update_input_data_080019f6": "update_input_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001a66": {
            "additional_data": {
                "FUN_08001a66": {
                    "set_and_calculate_values": 1,
                    "update_and_store_params": 1,
                    "update_and_store_values": 3,
                    "update_configuration": 1,
                    "update_data": 1,
                    "update_param_values": 1,
                    "update_parameter": 1,
                    "update_parameters": 11,
                    "update_params": 4,
                    "update_values": 6
                },
                "calculate_unsigned_long_long_08000190": {
                    "calculate": 1,
                    "calculate_result": 1,
                    "calculate_unsigned": 1,
                    "calculate_unsigned_long_long": 4,
                    "calculate_unsigned_value": 1,
                    "calculate_value": 2
                },
                "param_1": {
                    "base_address": 1,
                    "config": 1,
                    "data": 6,
                    "data_pointer": 1,
                    "data_struct": 3,
                    "data_structure_ptr": 1,
                    "object": 1,
                    "object_address": 8,
                    "object_parameter": 1,
                    "param1": 1,
                    "parameter1": 2,
                    "ptr": 1,
                    "struct_address": 4
                },
                "param_2": {
                    "new_param": 7,
                    "new_param_2": 1,
                    "new_parameter": 2,
                    "new_value": 17,
                    "param2": 1,
                    "parameter2": 2,
                    "value": 1
                },
                "param_3": {
                    "address1": 1,
                    "param3": 8,
                    "param_3": 3,
                    "parameter3": 3,
                    "ref1": 1,
                    "unknown1": 1,
                    "unused1": 3,
                    "unused_param": 2,
                    "unused_param1": 3,
                    "unused_param3": 2,
                    "unused_param_3": 1,
                    "unused_value1": 1,
                    "value1": 1
                },
                "param_4": {
                    "address2": 1,
                    "calc_param_4": 1,
                    "param4": 8,
                    "param_4": 3,
                    "parameter4": 3,
                    "ref2": 1,
                    "unknown2": 1,
                    "unused2": 3,
                    "unused_param2": 5,
                    "unused_param4": 2,
                    "unused_value2": 1,
                    "value2": 1
                },
                "uVar1": {
                    "calculated_result": 2,
                    "calculated_value": 6,
                    "new_unsigned_long_long": 1,
                    "result": 16,
                    "result1": 1,
                    "updated_value": 1
                }
            },
            "called": [
                "FUN_08000190"
            ],
            "calling": [
                "FUN_08001ab0"
            ],
            "code": "\nvoid update_parameters_08001a66(int object_address,int new_value,undefined4 param3,undefined4 param4)\n\n{\n  undefined8 result;\n  \n  if ((*(char *)(object_address + 0x70) != '\\0') && (*(int *)(object_address + 0x30) != new_value)) {\n    result = calculate_unsigned_long_long(0,0,*(undefined4 *)(object_address + 0x18),*(undefined4 *)(object_address + 0x1c),param4\n                        );\n    *(undefined8 *)(object_address + 0x18) = result;\n    result = calculate_unsigned_long_long(0,0,*(undefined4 *)(object_address + 0x20),*(undefined4 *)(object_address + 0x24));\n    *(undefined8 *)(object_address + 0x20) = result;\n    result = calculate_unsigned_long_long(0,0,*(undefined4 *)(object_address + 0x28),*(undefined4 *)(object_address + 0x2c));\n    *(undefined8 *)(object_address + 0x28) = result;\n  }\n  *(int *)(object_address + 0x30) = new_value;\n  return;\n}\n\n",
            "current_name": "update_parameters_08001a66",
            "entrypoint": "0x08001a66",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001a66": "update_parameters_08001a66",
                "calculate_unsigned_long_long_08000190": "calculate_unsigned_long_long",
                "param_1": "object_address",
                "param_2": "new_value",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001ab0": {
            "additional_data": {
                "FUN_08001ab0": {
                    "initialize": 1,
                    "initialize_and_return_data": 9,
                    "initialize_and_return_data_values": 2,
                    "initialize_and_return_param": 2,
                    "initialize_and_return_param_data": 1,
                    "initialize_and_return_parameters": 1,
                    "initialize_and_return_params": 1,
                    "initialize_application": 1,
                    "initialize_data": 5,
                    "initialize_data_processing": 1,
                    "initialize_data_values": 4,
                    "initialize_parameters": 2,
                    "process_and_validate_parameters": 1
                },
                "extraout_r1": {
                    "extra_out": 2,
                    "extra_out_param": 1,
                    "extra_output": 8,
                    "extra_output_r1": 1,
                    "extra_param": 1,
                    "extra_result": 4,
                    "extra_return": 3,
                    "extra_return_val": 1,
                    "extra_return_value": 4,
                    "extra_val": 1,
                    "return_value": 1,
                    "updated_param_2_value": 1
                },
                "iVar1": {
                    "data_value": 15,
                    "data_value_diff": 1,
                    "result": 8,
                    "return_value": 4
                },
                "initialize_and_return_data_values_080058e0": {
                    "init_and_return_data_values": 1,
                    "init_return_data_values": 2,
                    "initialize_and_get_data_values": 1,
                    "initialize_and_return_data": 1,
                    "initialize_and_return_data_values": 10,
                    "initialize_return_data_values": 1
                },
                "initialize_parameters_08001814": {
                    "initialize_parameters": 11,
                    "initialize_parameters_with_params": 1,
                    "initialize_params": 6
                },
                "param_1": {
                    "application_instance": 1,
                    "base_address": 1,
                    "data": 8,
                    "data_buffer": 1,
                    "data_object": 1,
                    "data_ptr": 6,
                    "data_struct": 2,
                    "data_struct_ptr": 1,
                    "data_structure": 5,
                    "function_data": 2,
                    "obj": 1,
                    "obj_ptr": 1,
                    "param_ptr": 1
                },
                "param_10": {
                    "param10": 12,
                    "param_10": 4,
                    "param_10_val": 3,
                    "param_10_value": 3,
                    "param_9": 1,
                    "param_i": 1,
                    "param_j": 2,
                    "parameter_10": 2
                },
                "param_11": {
                    "param11": 12,
                    "param_10": 1,
                    "param_11": 4,
                    "param_11_val": 3,
                    "param_11_value": 3,
                    "param_j": 1,
                    "param_k": 2,
                    "parameter_11": 2
                },
                "param_12": {
                    "extra_parameter": 1,
                    "param12": 12,
                    "param_11": 1,
                    "param_12": 5,
                    "param_12_val": 3,
                    "param_12_value": 4,
                    "param_k": 1,
                    "param_l": 2,
                    "param_ptr4": 1,
                    "parameter_12": 1
                },
                "param_13": {
                    "param_13": 1
                },
                "param_2": {
                    "param1": 4,
                    "param2": 8,
                    "param_1": 1,
                    "param_1_val": 2,
                    "param_1_value": 1,
                    "param_2": 5,
                    "param_2_val": 1,
                    "param_2_value": 3,
                    "param_a": 3,
                    "param_ptr1": 1,
                    "parameter_1": 2
                },
                "param_3": {
                    "param2": 4,
                    "param3": 8,
                    "param_2": 1,
                    "param_2_val": 2,
                    "param_2_value": 1,
                    "param_3": 5,
                    "param_3_val": 1,
                    "param_3_value": 3,
                    "param_b": 3,
                    "param_ptr2": 1,
                    "parameter_2": 2
                },
                "param_4": {
                    "param3": 4,
                    "param4": 8,
                    "param_3": 1,
                    "param_3_val": 2,
                    "param_3_value": 1,
                    "param_4": 5,
                    "param_4_val": 1,
                    "param_4_value": 3,
                    "param_c": 3,
                    "param_ptr3": 1,
                    "parameter_3": 2
                },
                "param_5": {
                    "param5": 12,
                    "param_4": 1,
                    "param_5": 4,
                    "param_5_val": 3,
                    "param_5_value": 3,
                    "param_d": 1,
                    "param_e": 2,
                    "parameter_5": 2
                },
                "param_6": {
                    "param6": 12,
                    "param_5": 1,
                    "param_6": 4,
                    "param_6_val": 3,
                    "param_6_value": 3,
                    "param_e": 1,
                    "param_f": 2,
                    "parameter_6": 2
                },
                "param_7": {
                    "param7": 12,
                    "param_6": 1,
                    "param_7": 4,
                    "param_7_val": 3,
                    "param_7_value": 3,
                    "param_f": 1,
                    "param_g": 2,
                    "parameter_7": 2
                },
                "param_8": {
                    "param8": 12,
                    "param_7": 1,
                    "param_8": 4,
                    "param_8_val": 3,
                    "param_8_value": 3,
                    "param_g": 1,
                    "param_h": 2,
                    "parameter_8": 2
                },
                "param_9": {
                    "param9": 12,
                    "param_8": 1,
                    "param_9": 4,
                    "param_9_val": 3,
                    "param_9_value": 3,
                    "param_h": 1,
                    "param_i": 2,
                    "parameter_9": 2
                },
                "process_and_validate_parameters_08001960": {
                    "process_and_validate_parameters": 11,
                    "process_and_validate_params": 2,
                    "process_validate_params": 3
                },
                "update_parameters_08001a66": {
                    "update_parameters": 12,
                    "update_params": 5
                }
            },
            "called": [
                "FUN_080058e0",
                "FUN_08001960",
                "FUN_08001814",
                "FUN_08001a66"
            ],
            "calling": [
                "FUN_08001b18"
            ],
            "code": "\nint initialize_and_return_data_values_08001ab0(int data,undefined4 param2,undefined4 param3,undefined4 param4,\n                undefined4 param5,undefined4 param6,undefined4 param7,undefined4 param8,\n                undefined4 param9,undefined4 param10,undefined4 param11,undefined4 param12)\n\n{\n  int data_value;\n  undefined4 extra_output;\n  \n  *(undefined4 *)(data + 0x3c) = param3;\n  *(undefined4 *)(data + 0x38) = param2;\n  *(undefined4 *)(data + 0x40) = param4;\n  *(undefined *)(data + 0x70) = 0;\n  process_and_validate_parameters(data,param2,0,0,0,0x406fe000);\n  *(undefined4 *)(data + 0x58) = 100;\n  update_parameters(data,param12);\n  initialize_parameters(data,extra_output,param5,param6,param7,param8,param9,param10,param11);\n  data_value = initialize_and_return_data_values_08001ab0();\n  *(int *)(data + 0x44) = data_value - *(int *)(data + 0x58);\n  return data;\n}\n\n",
            "current_name": "initialize_and_return_data_values_08001ab0",
            "entrypoint": "0x08001ab0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001ab0": "initialize_and_return_data_values_08001ab0",
                "extraout_r1": "extra_output",
                "iVar1": "data_value",
                "initialize_and_return_data_values_080058e0": "initialize_and_return_data_values",
                "initialize_parameters_08001814": "initialize_parameters",
                "param_1": "data",
                "param_10": "param10",
                "param_11": "param11",
                "param_12": "param12",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "param_6": "param6",
                "param_7": "param7",
                "param_8": "param8",
                "param_9": "param9",
                "process_and_validate_parameters_08001960": "process_and_validate_parameters",
                "update_parameters_08001a66": "update_parameters"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001b18": {
            "additional_data": {
                "FUN_08001b18": {
                    "initialize_and_return": 2,
                    "initialize_and_return_data": 18,
                    "initialize_and_return_data_values": 7,
                    "initialize_and_return_parameters": 1,
                    "initialize_and_return_values": 2,
                    "initialize_data_and_return": 1
                },
                "initialize_and_return_data_values_08001ab0": {
                    "initialize_and_return_data_values": 1,
                    "initialize_data": 1,
                    "initialize_data_values": 4
                },
                "param_1": {
                    "data": 10,
                    "data_parameter": 1,
                    "data_value": 1,
                    "input_data": 6,
                    "input_param": 4,
                    "input_parameter": 2,
                    "input_value": 7
                }
            },
            "called": [
                "FUN_08001ab0"
            ],
            "calling": [
                "FUN_08000b08"
            ],
            "code": "\nundefined4 initialize_and_return_data_values_08001b18(undefined4 data)\n\n{\n  initialize_data_values();\n  return data;\n}\n\n",
            "current_name": "initialize_and_return_data_values_08001b18",
            "entrypoint": "0x08001b18",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001b18": "initialize_and_return_data_values_08001b18",
                "initialize_and_return_data_values_08001ab0": "initialize_data_values",
                "param_1": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001b48": {
            "additional_data": {
                "FUN_08001b48": {
                    "initialize_and_configure_device": 1,
                    "initialize_and_configure_system": 2,
                    "initialize_and_run": 2,
                    "initialize_and_setup_device": 1,
                    "initialize_and_update": 2,
                    "initialize_and_update_data": 16,
                    "initialize_and_update_device": 1,
                    "initialize_and_update_flags": 2,
                    "initialize_and_update_system": 3,
                    "initialize_and_update_values": 1
                },
                "check_status_and_wait_08003688": {
                    "check_status_and_wait": 2
                },
                "get_data_value_08003c44": {
                    "get_data_value": 4,
                    "retrieve_data_value": 1
                },
                "iVar1": {
                    "error": 1,
                    "result": 4,
                    "status": 9,
                    "status_check": 2,
                    "status_check_result": 6,
                    "status_code": 1
                },
                "iVar2": {
                    "update_result": 1
                },
                "initialize_memory_and_register_08002514": {
                    "initialize_memory_and_register": 5
                },
                "local_10": {
                    "char_value": 1,
                    "constant4": 1,
                    "constant_4": 1,
                    "count": 2,
                    "counter": 4,
                    "data_offset": 1,
                    "data_value": 1,
                    "device_mode": 1,
                    "index": 1,
                    "init_value": 1,
                    "initial_value": 2,
                    "system_counter": 1,
                    "value4": 3,
                    "value_4": 2,
                    "var4": 1,
                    "variable4": 1
                },
                "local_14": {
                    "config_value_3": 1,
                    "constant3": 1,
                    "constant_2": 1,
                    "constant_3": 2,
                    "count": 1,
                    "counter": 1,
                    "data": 1,
                    "data_flag": 1,
                    "data_index": 1,
                    "data_refresh_rate": 1,
                    "data_value": 1,
                    "device_setup": 1,
                    "loop_count": 1,
                    "loop_value": 2,
                    "status": 1,
                    "status_flag": 1,
                    "system_state": 1,
                    "update_interval": 1,
                    "value": 2,
                    "value3": 3,
                    "value_3": 2,
                    "var3": 1,
                    "variable3": 1
                },
                "local_1c": {
                    "buffer_size": 2,
                    "config_value_2": 1,
                    "constant2": 1,
                    "constant_16": 1,
                    "constant_2": 2,
                    "data_size": 6,
                    "device_initialization": 1,
                    "flag_value": 1,
                    "length": 1,
                    "max_value": 1,
                    "memory_size": 1,
                    "size": 2,
                    "some_constant": 1,
                    "system_flags": 1,
                    "value2": 3,
                    "value_2": 2,
                    "var2": 1,
                    "variable2": 1
                },
                "local_20": {
                    "another_variable": 1,
                    "config_value_1": 1,
                    "constant1": 1,
                    "constant_1": 3,
                    "data_value": 1,
                    "default_flag": 1,
                    "device_version": 1,
                    "flag": 2,
                    "flag_index": 1,
                    "flag_value": 3,
                    "loop_count": 1,
                    "status": 1,
                    "status_flag": 1,
                    "status_flags": 1,
                    "system_mode": 1,
                    "timeout_value": 1,
                    "value": 1,
                    "value1": 3,
                    "value_1": 2,
                    "var1": 1,
                    "variable1": 1
                },
                "local_30": {
                    "array1": 2,
                    "array_sizes": 1,
                    "array_values": 1,
                    "data_array": 2,
                    "data_array_2": 1,
                    "data_size_array": 1,
                    "data_values": 1,
                    "device_config": 1,
                    "device_info": 1,
                    "device_settings": 1,
                    "device_status": 1,
                    "flags": 1,
                    "sensor_values": 1,
                    "status": 3,
                    "status_array": 1,
                    "status_flags": 6,
                    "status_values": 1,
                    "system_settings": 1,
                    "system_status": 1
                },
                "local_34": {
                    "another_variable_3": 1,
                    "buffer_offset": 1,
                    "char_value": 1,
                    "constant_0": 1,
                    "data5": 3,
                    "data_offset": 1,
                    "data_pointer": 1,
                    "data_register_size": 1,
                    "data_reset": 1,
                    "data_result": 1,
                    "data_value_3": 1,
                    "data_value_5": 1,
                    "flag5": 1,
                    "flag_status": 1,
                    "flag_value": 1,
                    "initial_value": 1,
                    "register_value": 1,
                    "sensor_config": 1,
                    "update_flag_5": 1,
                    "update_value5": 1,
                    "value": 1,
                    "value10": 1,
                    "variable10": 1
                },
                "local_38": {
                    "additional_variable": 1,
                    "buffer_size": 2,
                    "constant_1024": 1,
                    "constant_value2": 1,
                    "data4": 3,
                    "data_4": 1,
                    "data_constant": 1,
                    "data_memory_size": 1,
                    "data_size": 2,
                    "data_value_4": 3,
                    "delay": 1,
                    "flag4": 1,
                    "flag_size": 1,
                    "memory_address": 1,
                    "memory_address_2": 1,
                    "memory_size": 1,
                    "memory_value": 1,
                    "sensor_threshold": 1,
                    "size": 1,
                    "update_flag_4": 1,
                    "update_value4": 1,
                    "value9": 1,
                    "variable9": 1
                },
                "local_3c": {
                    "another_variable_2": 1,
                    "constant_0": 1,
                    "counter2": 1,
                    "data3": 3,
                    "data_3": 1,
                    "data_counter": 1,
                    "data_index_2": 1,
                    "data_initialize": 1,
                    "data_initialize_status": 1,
                    "data_source": 1,
                    "data_value": 1,
                    "data_value_3": 3,
                    "flag3": 1,
                    "flag_offset": 1,
                    "flag_status": 2,
                    "flag_value": 1,
                    "initial_flag": 1,
                    "offset": 2,
                    "sensor_id": 1,
                    "update_flag_3": 1,
                    "update_value3": 1,
                    "value8": 1,
                    "variable8": 1
                },
                "local_40": {
                    "constant_2": 1,
                    "count": 1,
                    "data2": 3,
                    "data_2": 1,
                    "data_flag": 1,
                    "data_length": 1,
                    "data_type": 1,
                    "data_update": 1,
                    "data_update_status": 1,
                    "data_value_2": 4,
                    "flag": 1,
                    "flag2": 1,
                    "flag_length": 1,
                    "flag_value": 1,
                    "loop_count": 1,
                    "loop_value2": 1,
                    "sensor_version": 1,
                    "some_variable": 1,
                    "update_flag": 1,
                    "update_flag_2": 1,
                    "update_value2": 1,
                    "value": 1,
                    "value7": 1,
                    "variable7": 1
                },
                "local_44": {
                    "data": 2,
                    "data1": 3,
                    "data_1": 1,
                    "data_array": 1,
                    "data_flag": 1,
                    "data_mode": 1,
                    "data_size2": 1,
                    "data_value": 3,
                    "data_value_1": 5,
                    "flag": 1,
                    "flag1": 1,
                    "flag_value": 1,
                    "mask": 1,
                    "sensor_type": 1,
                    "update_flag": 2,
                    "update_flag_1": 1,
                    "update_value1": 1,
                    "value6": 1,
                    "variable6": 1
                },
                "local_4c": {
                    "constant_32768": 1,
                    "data6": 1,
                    "data_mask": 1,
                    "data_value": 1,
                    "device_flag_status": 1,
                    "flag_address": 2,
                    "flag_constant": 1,
                    "flag_data": 1,
                    "flag_mask": 2,
                    "flag_memory": 1,
                    "flag_value": 6,
                    "flag_value2": 1,
                    "flags2": 1,
                    "flags_mask": 1,
                    "flags_size": 1,
                    "flags_value": 1,
                    "flags_variable": 1,
                    "loop_size": 1,
                    "update_flag_7": 1,
                    "value": 1,
                    "value11": 1,
                    "variable11": 1
                },
                "local_54": {
                    "array2": 2,
                    "array_sizes2": 1,
                    "data_value_2": 1,
                    "device_flags": 1,
                    "flag_array": 2,
                    "flag_status": 1,
                    "flag_update": 1,
                    "flag_values": 4,
                    "flags": 6,
                    "flags1": 1,
                    "flags2": 1,
                    "flags_array": 4,
                    "flags_values": 1,
                    "update_flag_6": 1,
                    "updated_flag": 1
                },
                "local_c": {
                    "address": 1,
                    "another_constant": 1,
                    "config_value_4": 1,
                    "constant": 1,
                    "constant5": 1,
                    "constant_380000": 1,
                    "constant_4": 1,
                    "constant_5": 1,
                    "constant_value": 3,
                    "data_address": 1,
                    "data_value": 1,
                    "device_address": 1,
                    "memory_address": 6,
                    "system_memory": 1,
                    "timeout": 1,
                    "value5": 3,
                    "value_5": 1,
                    "var5": 1,
                    "variable5": 1
                },
                "run_infinite_loop_08004d40": {
                    "handle_infinite_loop": 1,
                    "infinite_loop": 1,
                    "run_infinite_loop": 3
                },
                "uVar2": {
                    "data_divided_value": 1,
                    "data_value": 14,
                    "data_value_4": 1,
                    "data_value_divided": 2,
                    "data_value_result": 1,
                    "result": 1
                },
                "update_char_value_08002494": {
                    "update_char_value": 5
                },
                "update_data_and_initialize_08003ad4": {
                    "update_and_initialize_data": 3,
                    "update_data_and_initialize": 2
                },
                "update_flag_status_08002560": {
                    "update_flag_status": 5
                },
                "update_flags_and_data_08003c90": {
                    "update_flags_and_data": 5
                }
            },
            "called": [
                "FUN_08004d40",
                "FUN_08003c44",
                "FUN_08002494",
                "FUN_08002514",
                "FUN_08003688",
                "FUN_08003c90",
                "FUN_08003ad4",
                "FUN_08002560"
            ],
            "calling": [
                "FUN_08004c52"
            ],
            "code": "\nvoid initialize_and_update_data_08001b48(void)\n\n{\n  int status;\n  uint data_value;\n  undefined4 flags [2];\n  undefined4 flag_value;\n  undefined4 data_value_1;\n  undefined4 data_value_2;\n  undefined4 data3;\n  undefined4 data4;\n  undefined4 data5;\n  undefined4 status_flags [4];\n  undefined4 constant_1;\n  undefined4 data_size;\n  undefined4 value3;\n  undefined4 counter;\n  undefined4 memory_address;\n  \n  status_flags[0] = 2;\n  constant_1 = 1;\n  data_size = 0x10;\n  value3 = 2;\n  counter = 0;\n  memory_address = 0x380000;\n  status = check_status_and_wait(status_flags);\n  if (status != 0) {\n    run_infinite_loop(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x88);\n  }\n  data_value_1 = 0xf;\n  data_value_2 = 2;\n  data3 = 0;\n  data4 = 0x400;\n  data5 = 0;\n  status = update_and_initialize_data(&data_value_1);\n  if (status != 0) {\n    run_infinite_loop(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x95);\n  }\n  flags[0] = 2;\n  flag_value = 0x8000;\n  status = update_flags_and_data(flags);\n  if (status != 0) {\n    run_infinite_loop(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x9c);\n  }\n  data_value = get_data_value();\n  initialize_memory_and_register(data_value / 1000);\n  update_flag_status(4);\n  update_char_value(0xffffffff,0);\n  return;\n}\n\n",
            "current_name": "initialize_and_update_data_08001b48",
            "entrypoint": "0x08001b48",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001b48": "initialize_and_update_data_08001b48",
                "check_status_and_wait_08003688": "check_status_and_wait",
                "get_data_value_08003c44": "get_data_value",
                "iVar1": "status",
                "initialize_memory_and_register_08002514": "initialize_memory_and_register",
                "local_10": "counter",
                "local_14": "value3",
                "local_1c": "data_size",
                "local_20": "constant_1",
                "local_30": "status_flags",
                "local_34": "data5",
                "local_38": "data4",
                "local_3c": "data3",
                "local_40": "data_value_2",
                "local_44": "data_value_1",
                "local_4c": "flag_value",
                "local_54": "flags",
                "local_c": "memory_address",
                "run_infinite_loop_08004d40": "run_infinite_loop",
                "uVar2": "data_value",
                "update_char_value_08002494": "update_char_value",
                "update_data_and_initialize_08003ad4": "update_and_initialize_data",
                "update_flag_status_08002560": "update_flag_status",
                "update_flags_and_data_08003c90": "update_flags_and_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001c32": {
            "additional_data": {
                "FUN_08001c32": {
                    "initialize_and_update_registers_data": 6,
                    "initialize_register_data": 1,
                    "initialize_registers_data": 23,
                    "initialize_registers_update_data": 1
                },
                "initialize_and_update_registers_data_08004c52": {
                    "initialize_and_update_registers_data": 15,
                    "initialize_and_updateregisters_data": 1,
                    "initialize_registers": 2,
                    "initialize_registers_data": 2,
                    "initialize_registers_data_helper": 1,
                    "initialize_registers_update_data": 1,
                    "initialize_update_registers": 1,
                    "setup_registers_data": 1,
                    "update_registers_data": 1
                }
            },
            "called": [
                "FUN_08004c52"
            ],
            "calling": [
                "FUN_08005f5e"
            ],
            "code": "\nvoid initialize_and_update_registers_data_08001c32(void)\n\n{\n  initialize_and_update_registers_data_08001c32();\n  return;\n}\n\n",
            "current_name": "initialize_and_update_registers_data_08001c32",
            "entrypoint": "0x08001c32",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001c32": "initialize_and_update_registers_data_08001c32",
                "initialize_and_update_registers_data_08004c52": "initialize_and_update_registers_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001c3a": {
            "called": [],
            "calling": [
                "FUN_08001c88"
            ],
            "code": "\nvoid FUNC_08001c3a(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08001c3a",
            "entrypoint": "0x08001c3a",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08001c3a": "FUNC_08001c3a"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08001c3c": {
            "additional_data": {
                "0xf": {
                    "threshold": 1
                },
                "DAT_20000078": {
                    "constant2": 1,
                    "constant_2": 1,
                    "dividend": 1,
                    "some_calculation_2": 1,
                    "time_interval": 1,
                    "update_interval": 1
                },
                "DAT_2000007c": {
                    "char_value": 2,
                    "updated_value": 1
                },
                "DAT_20000084": {
                    "constant1": 1,
                    "constant_1": 1,
                    "initial_value": 1,
                    "memory_size": 2,
                    "some_calculation_1": 1
                },
                "FUN_08001c3c": {
                    "initialize_and_set_char_value": 3,
                    "initialize_and_update": 1,
                    "initialize_and_update_char": 1,
                    "initialize_and_update_char_value": 19,
                    "initialize_and_update_character_value": 2,
                    "initialize_and_update_memory": 2,
                    "initialize_and_update_value": 3
                },
                "iVar1": {
                    "error_code": 1,
                    "init_result": 1,
                    "memory_and_register_init_result": 2,
                    "memory_initialized": 1,
                    "memory_register_init_result": 1,
                    "memory_register_status": 1,
                    "memory_status": 1,
                    "result": 18
                },
                "initialize_memory_and_register_08002514": {
                    "init_memory_and_register": 1,
                    "initialize_memory_and_register": 7
                },
                "param_1": {
                    "char_value": 4,
                    "character": 1,
                    "character_value": 5,
                    "input_value": 9,
                    "new_value": 2,
                    "value": 10
                },
                "update_char_value_08002494": {
                    "update_char_value": 9
                }
            },
            "called": [
                "FUN_08002494",
                "FUN_08002514"
            ],
            "calling": [
                "FUN_08001c88",
                "FUN_08003afa"
            ],
            "code": "\nundefined4 initialize_and_update_char_value_08001c3c(uint value)\n\n{\n  int result;\n  \n  result = initialize_memory_and_register(DAT_20000084 / (1000 / DAT_20000078));\n  if (result != 0) {\n    return 1;\n  }\n  if (0xf < value) {\n    return 1;\n  }\n  update_char_value(0xffffffff,value,0);\n  DAT_2000007c = value;\n  return 0;\n}\n\n",
            "current_name": "initialize_and_update_char_value_08001c3c",
            "entrypoint": "0x08001c3c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001c3c": "initialize_and_update_char_value_08001c3c",
                "iVar1": "result",
                "initialize_memory_and_register_08002514": "initialize_memory_and_register",
                "param_1": "value",
                "update_char_value_08002494": "update_char_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001c88": {
            "additional_data": {
                "FUNC_08001c3a": {
                    "additional_function": 1,
                    "do_something": 4,
                    "execute_additional_function": 1,
                    "execute_custom_function": 1,
                    "execute_func": 1,
                    "execute_function": 3,
                    "function_08001c3a": 1,
                    "perform_additional_function": 1,
                    "perform_additional_functionality": 1,
                    "perform_additional_operations": 8,
                    "perform_additional_task": 2,
                    "perform_additional_tasks": 3,
                    "perform_task": 1,
                    "some_function": 1,
                    "specific_function": 1
                },
                "FUN_08001c88": {
                    "initialize_and_update": 4,
                    "initialize_and_update_device": 1,
                    "initialize_and_update_register": 2,
                    "initialize_and_update_registers": 5,
                    "initialize_and_update_values": 3,
                    "initialize_hw_and_update_values": 1,
                    "initialize_register": 2,
                    "initialize_registers": 3,
                    "initialize_system": 4,
                    "initialize_update_register": 1,
                    "initialize_update_register_and_values": 1,
                    "set_register_and_update": 1,
                    "set_register_update_flag": 1,
                    "update_register_and_value": 1,
                    "update_register_value_and_initialize": 1
                },
                "_DAT_40022000": {
                    "data_register": 1,
                    "register_value": 7,
                    "system_flag": 1
                },
                "initialize_and_update_char_value_08001c3c": {
                    "initialize_and_set_char_value": 1,
                    "initialize_and_update_char": 1,
                    "initialize_and_update_char_value": 25,
                    "initialize_and_update_character_value": 2,
                    "initialize_update_char_value": 1
                },
                "update_register_value_08002470": {
                    "set_register_value": 2,
                    "update_register_value": 26
                }
            },
            "called": [
                "FUN_08001c3c",
                "FUN_08002470",
                "FUN_08001c3a"
            ],
            "calling": [
                "FUN_08004c52"
            ],
            "code": "\n\n\nundefined4 initialize_and_update_registers_08001c88(void)\n\n{\n  _DAT_40022000 = _DAT_40022000 | 0x10;\n  update_register_value(3);\n  initialize_and_update_char_value(0xf);\n  FUNC_08001c3a();\n  return 0;\n}\n\n",
            "current_name": "initialize_and_update_registers_08001c88",
            "entrypoint": "0x08001c88",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001c88": "initialize_and_update_registers_08001c88",
                "initialize_and_update_char_value_08001c3c": "initialize_and_update_char_value",
                "update_register_value_08002470": "update_register_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001cac": {
            "additional_data": {
                "DAT_20000078": {
                    "addend": 1,
                    "counter_value": 1,
                    "data_to_be_added": 1,
                    "increment": 1,
                    "input": 9,
                    "input_data": 1,
                    "input_param": 1,
                    "input_uint": 1,
                    "input_value": 8,
                    "value": 3,
                    "value_to_add": 3
                },
                "DAT_200006a0": {
                    "accumulated_uint": 1,
                    "accumulated_value": 2,
                    "counter": 1,
                    "global_data": 1,
                    "new_sum": 1,
                    "result": 14,
                    "sum": 6,
                    "sum_result": 1,
                    "sum_value": 1,
                    "updated_counter_value": 1,
                    "updated_sum": 1
                },
                "FUN_08001cac": {
                    "accumulate_uint": 1,
                    "accumulate_values": 2,
                    "add_data_to_global": 1,
                    "add_global_variable_to_sum": 2,
                    "add_global_variable_to_unsigned_global_variable": 1,
                    "add_unsigned_values": 1,
                    "addition": 2,
                    "addition_function": 2,
                    "addition_operation": 8,
                    "compute_new_data": 1,
                    "increase_and_store_value": 1,
                    "increase_data_by_value": 1,
                    "increment_sum": 1,
                    "update_counter": 2,
                    "update_data": 1,
                    "update_sum": 3,
                    "update_value": 1
                },
                "uint": {
                    "unsigned_int": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004b9e"
            ],
            "code": "\nvoid addition_operation_08001cac(void)\n\n{\n  DAT_200006a0 = (unsigned_int)DAT_20000078 + DAT_200006a0;\n  return;\n}\n\n",
            "current_name": "addition_operation_08001cac",
            "entrypoint": "0x08001cac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001cac": "addition_operation_08001cac",
                "uint": "unsigned_int"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001cc4": {
            "additional_data": {
                "DAT_200006a0": {
                    "data": 5,
                    "data_value": 1,
                    "global_variable": 8
                },
                "FUN_08001cc4": {
                    "get_dat_value": 2,
                    "get_data": 7,
                    "get_data_from_memory": 1,
                    "get_data_value": 9,
                    "get_global_value": 4,
                    "get_global_variable": 8
                }
            },
            "called": [],
            "calling": [
                "FUN_08001f84",
                "FUN_08004b94",
                "FUN_08002384",
                "FUN_080043b4",
                "FUN_08004478",
                "FUN_080020f0",
                "FUN_08003afa",
                "FUN_08003688",
                "FUN_080053d4",
                "FUN_08001cd0",
                "FUN_08003c90"
            ],
            "code": "\nundefined4 get_data_value_08001cc4(void)\n\n{\n  return DAT_200006a0;\n}\n\n",
            "current_name": "get_data_value_08001cc4",
            "entrypoint": "0x08001cc4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001cc4": "get_data_value_08001cc4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001cd0": {
            "additional_data": {
                "FUN_08001cd0": {
                    "calculate_and_check_value": 1,
                    "calculate_data": 3,
                    "calculate_data_value": 3,
                    "calculate_result": 2,
                    "calculate_return_value": 8,
                    "calculate_status": 1,
                    "calculate_value": 2,
                    "perform_data_check": 1,
                    "process_data": 6,
                    "validate_data": 1
                },
                "iVar1": {
                    "data_value": 2,
                    "data_value1": 10,
                    "data_value_1": 1,
                    "initial_data_value": 1,
                    "initial_value": 17
                },
                "iVar3": {
                    "comparison_value": 3,
                    "condition": 1,
                    "condition_value": 2,
                    "counter": 1,
                    "data_difference": 2,
                    "data_value2": 5,
                    "data_value3": 4,
                    "data_value_2": 1,
                    "data_value_diff": 1,
                    "difference": 5,
                    "increment": 1,
                    "loop_counter": 2,
                    "secondary_value": 1,
                    "temp_value": 2
                },
                "local_1c": {
                    "counter": 26,
                    "current_value": 1,
                    "increment_value": 1,
                    "iteration_count": 1,
                    "loop_counter": 2
                },
                "param_1": {
                    "data": 10,
                    "data_array": 1,
                    "data_function_param": 1,
                    "data_params": 1,
                    "data_pointer": 2,
                    "data_ptr": 4,
                    "input": 1,
                    "input_data": 2,
                    "input_params": 2,
                    "input_ptr": 1,
                    "param_array": 2,
                    "parameter_1": 1,
                    "parameter_list": 1,
                    "parameters": 1,
                    "pointer_array": 1
                },
                "param_2": {
                    "check_value": 1,
                    "comparison_value": 1,
                    "data_length": 1,
                    "data_size": 2,
                    "input_value": 1,
                    "len": 1,
                    "limit": 6,
                    "max_difference": 1,
                    "max_value": 1,
                    "param_value": 4,
                    "parameter": 1,
                    "parameter2": 1,
                    "parameter_2": 1,
                    "size": 3,
                    "threshold": 2,
                    "value": 4
                },
                "puVar5": {
                    "current_data": 4,
                    "current_data_ptr": 2,
                    "data": 1,
                    "data_array": 1,
                    "data_pointer": 5,
                    "data_pointer_update": 1,
                    "data_ptr": 1,
                    "data_ptr_value": 1,
                    "data_values": 1,
                    "flags": 1,
                    "input_data": 1,
                    "param_pointer": 1,
                    "pointer": 2,
                    "pointer_to_data": 1,
                    "pointer_value": 2,
                    "pointer_variable": 1,
                    "ptr": 2,
                    "ptr_data": 3
                },
                "uVar2": {
                    "calculate_value": 1,
                    "calculated_value": 8,
                    "calculation_factor": 1,
                    "calculation_multiplier": 1,
                    "calculation_result": 3,
                    "calculation_value": 2,
                    "data_value": 5,
                    "data_value2": 5,
                    "data_value_2": 1,
                    "divisor": 1,
                    "factor": 2,
                    "scaling_factor": 1
                },
                "uVar4": {
                    "result": 13,
                    "result_code": 1,
                    "return_value": 16,
                    "status": 1
                },
                "uVar6": {
                    "calculated_result": 2,
                    "calculated_value": 3,
                    "calculation": 1,
                    "calculation_result": 8,
                    "calculation_value": 1,
                    "data_value3": 1,
                    "data_value4": 1,
                    "factor": 1,
                    "final_value": 3,
                    "modified_value": 2,
                    "multiplication_result": 1,
                    "multiplier": 3,
                    "new_value": 1,
                    "updated_value": 2,
                    "value": 1
                }
            },
            "called": [
                "FUN_08003da4",
                "FUN_08001cc4"
            ],
            "calling": [
                "FUN_08004a4c"
            ],
            "code": "\nundefined4 calculate_return_value_08001cd0(uint **data,uint limit)\n\n{\n  int initial_value;\n  uint calculated_value;\n  int data_value2;\n  undefined4 return_value;\n  uint *data_pointer;\n  uint calculation_result;\n  uint counter;\n  \n  counter = 0;\n  initial_value = get_data_value_08001cc4();\n  calculation_result = DAT_20000084;\n  data_pointer = *data;\n  if ((data_pointer[2] & 0x100) == 0) {\n    if (((data_pointer[1] & 0x100) == 0) && ((data_pointer[0xb] & 0xf00000) == 0)) {\n      do {\n        if ((**data & 2) != 0) goto LAB_08001de2;\n      } while ((limit == 0xffffffff) ||\n              ((limit != 0 && (data_value2 = get_data_value_08001cc4(), (uint)(data_value2 - initial_value) <= limit))));\n      data[10] = (uint *)((uint)data[10] | 4);\n      *(undefined *)(data + 9) = 0;\n      return_value = 3;\n    }\n    else {\n      calculated_value = calculate_data_value_08003da4(2);\n      data_pointer = *data;\n      if (((data_pointer[4] & 0x24924924) == 0) && ((data_pointer[3] & 0x924924) == 0)) {\n        if ((data_pointer[4] & 0x12492492) == 0) {\n          if ((data_pointer[3] & 0x492492) == 0) {\n            data_value2 = 0x14;\n          }\n          else {\n            data_value2 = 0x29;\n          }\n        }\n        else {\n          data_value2 = 0x29;\n        }\n      }\n      else if (((data_pointer[4] & 0x12492492) == 0) && ((data_pointer[3] & 0x492492) == 0)) {\n        data_value2 = 0x54;\n      }\n      else if ((data_pointer[4] & 0x249249) == 0) {\n        if ((data_pointer[3] & 0x249249) == 0) {\n          data_value2 = 0x54;\n        }\n        else {\n          data_value2 = 0xfc;\n        }\n      }\n      else {\n        data_value2 = 0xfc;\n      }\n      calculation_result = (calculation_result / calculated_value) * data_value2;\n      for (; counter <= calculation_result && calculation_result - counter != 0; counter = counter + 1) {\n        if ((limit != 0xffffffff) &&\n           ((limit == 0 || (data_value2 = get_data_value_08001cc4(), limit < (uint)(data_value2 - initial_value))))) {\n          data[10] = (uint *)((uint)data[10] | 4);\n          *(undefined *)(data + 9) = 0;\n          return 3;\n        }\n      }\nLAB_08001de2:\n      **data = 0xffffffed;\n      data[10] = (uint *)((uint)data[10] | 0x200);\n      if (((*data)[2] & 0xe0000) == 0xe0000) {\n        if (data[3] == (uint *)0x0) {\n          data[10] = (uint *)((uint)data[10] & 0xfffffeff);\n          if (((uint)data[10] & 0x1000) == 0) {\n            data[10] = (uint *)((uint)data[10] | 1);\n            return_value = 0;\n          }\n          else {\n            return_value = 0;\n          }\n        }\n        else {\n          return_value = 0;\n        }\n      }\n      else {\n        return_value = 0;\n      }\n    }\n  }\n  else {\n    data[10] = (uint *)((uint)data[10] | 0x20);\n    *(undefined *)(data + 9) = 0;\n    return_value = 1;\n  }\n  return return_value;\n}\n\n",
            "current_name": "calculate_return_value_08001cd0",
            "entrypoint": "0x08001cd0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001cd0": "calculate_return_value_08001cd0",
                "iVar1": "initial_value",
                "iVar3": "data_value2",
                "local_1c": "counter",
                "param_1": "data",
                "param_2": "limit",
                "puVar5": "data_pointer",
                "uVar2": "calculated_value",
                "uVar4": "return_value",
                "uVar6": "calculation_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001e40": {
            "additional_data": {
                "0x4c": {
                    "offset": 3
                },
                "FUN_08001e40": {
                    "extract_offset": 1,
                    "get_address_offset": 1,
                    "get_memory_address": 1,
                    "get_memory_value": 1,
                    "get_offset": 2,
                    "get_offset_from_pointer": 1,
                    "get_offset_value": 18,
                    "get_pointer_offset": 1,
                    "get_pointer_value": 2,
                    "get_value_at_offset": 2,
                    "get_value_from_offset": 1
                },
                "param_1": {
                    "address_pointer": 1,
                    "array_pointer": 2,
                    "data_pointer": 1,
                    "input_array": 4,
                    "input_pointer": 1,
                    "input_ptr": 1,
                    "int_ptr": 1,
                    "memory_address": 1,
                    "memory_pointer": 1,
                    "offset_pointer": 9,
                    "offset_ptr": 3,
                    "offset_value": 1,
                    "pointer": 4,
                    "value_ptr": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004a4c"
            ],
            "code": "\nundefined4 get_value_at_offset_08001e40(int *offset_pointer)\n\n{\n  return *(undefined4 *)(*offset_pointer + 0x4c);\n}\n\n",
            "current_name": "get_value_at_offset_08001e40",
            "entrypoint": "0x08001e40",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001e40": "get_value_at_offset_08001e40",
                "param_1": "offset_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001e48": {
            "additional_data": {
                "DAT_20000084": {
                    "u_var5": 1
                },
                "FUN_08001e48": {
                    "apply_settings": 1,
                    "decode_and_update_registers": 1,
                    "modify_configuration": 1,
                    "modify_parameters": 1,
                    "process_params": 1,
                    "update_config": 2,
                    "update_configuration": 8,
                    "update_data": 1,
                    "update_memory_address": 1,
                    "update_param_value": 1,
                    "update_param_values": 1,
                    "update_parameter": 1,
                    "update_parameters": 4,
                    "update_params": 2,
                    "update_settings": 2,
                    "update_values": 3
                },
                "local_c": {
                    "count": 6,
                    "counter": 17,
                    "delay_counter": 1,
                    "loop_counter": 5,
                    "loop_index": 1
                },
                "param_1": {
                    "config": 6,
                    "config_data": 1,
                    "config_ptr": 5,
                    "data_ptr": 1,
                    "memory_address": 1,
                    "param_array": 3,
                    "param_list": 1,
                    "parameter1": 1,
                    "parameters": 2,
                    "parameters1": 1,
                    "params": 3,
                    "register_values": 1,
                    "settings": 3,
                    "values": 2
                },
                "param_2": {
                    "data": 6,
                    "data_ptr": 3,
                    "input": 1,
                    "input_values": 1,
                    "param_values": 1,
                    "parameter2": 1,
                    "parameters2": 1,
                    "value_array": 3,
                    "value_list": 1,
                    "value_ptr": 1,
                    "values": 10,
                    "values_ptr": 2
                },
                "uRam40012408": {
                    "u_var4": 1
                },
                "uVar1": {
                    "result": 19,
                    "return_value": 9
                },
                "uVar2": {
                    "index": 11,
                    "offset": 1,
                    "shift": 1,
                    "shift_value": 4,
                    "temp_value": 3,
                    "value": 8
                }
            },
            "called": [],
            "calling": [
                "FUN_08004a4c"
            ],
            "code": "\nundefined4 update_configuration_08001e48(int *config,uint *values)\n\n{\n  undefined4 result;\n  uint index;\n  int counter;\n  \n  if (*(char *)(config + 9) == '\\x01') {\n    result = 2;\n  }\n  else {\n    *(undefined *)(config + 9) = 1;\n    index = values[1];\n    if (index < 7) {\n      index = index * 5 - 5;\n      *(uint *)(*config + 0x34) =\n           *values << (index & 0xff) | *(uint *)(*config + 0x34) & ~(0x1f << (index & 0xff));\n    }\n    else if (index < 0xd) {\n      index = index * 5 - 0x23;\n      *(uint *)(*config + 0x30) =\n           *values << (index & 0xff) | *(uint *)(*config + 0x30) & ~(0x1f << (index & 0xff));\n    }\n    else {\n      index = index * 5 - 0x41;\n      *(uint *)(*config + 0x2c) =\n           *values << (index & 0xff) | *(uint *)(*config + 0x2c) & ~(0x1f << (index & 0xff));\n    }\n    index = *values;\n    if (index < 10) {\n      *(uint *)(*config + 0x10) =\n           values[2] << (index * 3 & 0xff) |\n           *(uint *)(*config + 0x10) & ~(7 << (index * 3 & 0xff));\n    }\n    else {\n      index = index * 3 - 0x1e;\n      *(uint *)(*config + 0xc) =\n           values[2] << (index & 0xff) | *(uint *)(*config + 0xc) & ~(7 << (index & 0xff));\n    }\n    if (*values - 0x10 < 2) {\n      if (*config == 0x40012400) {\n        if ((u_var4 & 0x800000) == 0) {\n          u_var4 = u_var4 | 0x800000;\n          if (*values == 0x10) {\n            for (counter = (DAT_20000084 / 1000000) * 10; counter != 0; counter = counter + -1) {\n            }\n            result = 0;\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        config[10] = config[10] | 0x20;\n        result = 1;\n      }\n    }\n    else {\n      result = 0;\n    }\n    *(undefined *)(config + 9) = 0;\n  }\n  return result;\n}\n\n",
            "current_name": "update_configuration_08001e48",
            "entrypoint": "0x08001e48",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001e48": "update_configuration_08001e48",
                "local_c": "counter",
                "param_1": "config",
                "param_2": "values",
                "uRam40012408": "u_var4",
                "uVar1": "result",
                "uVar2": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001f80": {
            "additional_data": {
                "0x28": {
                    "offset": 1
                },
                "DAT_XXXX": {
                    "unchanged": 1
                },
                "FUN_08001f80": {
                    "extract_value_from_offset": 1,
                    "get_data_from_offset": 1,
                    "get_memory_value": 2,
                    "get_offset": 1,
                    "get_offset_value": 11,
                    "get_param_value": 1,
                    "get_parameter_at_index": 1,
                    "get_pointer_at_offset": 1,
                    "get_pointer_offset": 1,
                    "get_pointer_value": 3,
                    "get_return_value": 1,
                    "get_value_at_offset": 1,
                    "get_value_from_offset": 6
                },
                "PTR_XXXX": {
                    "unchanged": 1
                },
                "param_1": {
                    "address": 2,
                    "base_address": 11,
                    "index": 1,
                    "input": 1,
                    "input_address": 2,
                    "input_offset": 1,
                    "input_pointer": 1,
                    "memory_address": 2,
                    "offset": 7,
                    "offset_address": 1,
                    "pointer": 1,
                    "source_pointer": 1
                },
                "var_1": {
                    "offset": 1
                },
                "var_2": {
                    "param_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004a4c"
            ],
            "code": "\nundefined4 get_value_from_offset_08001f80(int base_address)\n\n{\n  return *(undefined4 *)(base_address + 0x28);\n}\n\n",
            "current_name": "get_value_from_offset_08001f80",
            "entrypoint": "0x08001f80",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001f80": "get_value_from_offset_08001f80",
                "param_1": "base_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001f84": {
            "additional_data": {
                "FUN_08001f84": {
                    "activate_data_function": 1,
                    "check_and_modify_data": 1,
                    "enable_data_processing": 3,
                    "handle_data_processing": 1,
                    "initialize_data": 2,
                    "initialize_device": 1,
                    "initialize_flag": 1,
                    "perform_operation": 2,
                    "process_data": 3,
                    "set_and_check_data_flag": 1,
                    "set_data_flag": 1,
                    "set_data_flags": 1,
                    "set_flag_and_check_values": 1,
                    "toggle_flag": 1,
                    "update_data": 5,
                    "update_data_and_flags": 1,
                    "update_data_flags": 1,
                    "update_data_value": 1,
                    "update_flag_and_value": 1
                },
                "get_data_value_08001cc4": {
                    "get_data_value": 5
                },
                "iVar1": {
                    "current_data_value": 5,
                    "current_value": 6,
                    "data_difference": 1,
                    "data_value": 2,
                    "data_value1": 11,
                    "data_value_1": 2,
                    "new_data_value": 1,
                    "val1": 1,
                    "value1": 1
                },
                "iVar3": {
                    "array_element": 1,
                    "data_address": 5,
                    "data_first_element": 1,
                    "data_offset": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "data_value": 5,
                    "data_value2": 9,
                    "data_value_2": 2,
                    "data_value_pointer": 1,
                    "first_data_value": 1,
                    "ptr_value1": 1,
                    "val2": 1,
                    "value2": 1
                },
                "local_14": {
                    "counter": 9,
                    "delay": 1,
                    "delay_count": 1,
                    "delay_counter": 1,
                    "delay_time": 1,
                    "iteration_count": 4,
                    "loop_count": 3,
                    "loop_counter": 11
                },
                "param_1": {
                    "data": 6,
                    "data_array": 1,
                    "data_handle": 1,
                    "data_pointer": 11,
                    "data_ptr": 8,
                    "device_data": 1,
                    "input_array": 1,
                    "input_data": 1,
                    "ptr": 1
                },
                "param_2": {
                    "config": 1,
                    "data_size": 2,
                    "data_value": 6,
                    "flag": 2,
                    "input_param": 2,
                    "param": 3,
                    "param2": 4,
                    "param_2": 1,
                    "param_flag": 1,
                    "value": 9
                },
                "uVar2": {
                    "is_updated": 1,
                    "result": 10,
                    "return_value": 10
                }
            },
            "called": [
                "FUN_08001cc4"
            ],
            "calling": [
                "FUN_08002004",
                "FUN_08002384"
            ],
            "code": "\nundefined4 update_data_and_flags_08001f84(int *data_pointer,undefined4 value)\n\n{\n  int data_value1;\n  undefined4 return_value;\n  int data_value2;\n  uint loop_counter;\n  \n  data_value2 = *data_pointer;\n  if ((*(uint *)(data_value2 + 8) & 1) == 0) {\n    *(uint *)(data_value2 + 8) = *(uint *)(data_value2 + 8) | 1;\n    for (loop_counter = DAT_20000084 / 1000000; loop_counter != 0; loop_counter = loop_counter - 1) {\n    }\n    data_value2 = get_data_value(data_pointer,value,DAT_20000084 * 0x431bde83);\n    do {\n      if ((*(uint *)(*data_pointer + 8) & 1) != 0) {\n        return 0;\n      }\n      data_value1 = get_data_value();\n    } while ((uint)(data_value1 - data_value2) < 3);\n    data_pointer[10] = data_pointer[10] | 0x10;\n    data_pointer[0xb] = data_pointer[0xb] | 1;\n    *(undefined *)(data_pointer + 9) = 0;\n    return_value = 1;\n  }\n  else {\n    return_value = 0;\n  }\n  return return_value;\n}\n\n",
            "current_name": "update_data_and_flags_08001f84",
            "entrypoint": "0x08001f84",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001f84": "update_data_and_flags_08001f84",
                "get_data_value_08001cc4": "get_data_value",
                "iVar1": "data_value1",
                "iVar3": "data_value2",
                "local_14": "loop_counter",
                "param_1": "data_pointer",
                "param_2": "value",
                "uVar2": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002004": {
            "additional_data": {
                "0x40012800": {
                    "constant_value_1": 1,
                    "some_constant": 1
                },
                "DAT_40012404": {
                    "constant_value": 1,
                    "data_value": 1
                },
                "FUN_08002004": {
                    "update_and_configure_flags": 1,
                    "update_data_and_flags": 6,
                    "update_data_flags": 1,
                    "update_flag": 1,
                    "update_flag_and_data": 1,
                    "update_flags": 6,
                    "update_flags_and_data": 4,
                    "update_flags_and_settings": 1,
                    "update_function_flags": 1,
                    "update_function_status": 1,
                    "update_param": 2,
                    "update_param1_and_flags": 1,
                    "update_param_data": 3,
                    "update_param_values": 1,
                    "update_parameters": 1
                },
                "PTR_08001f84": {
                    "update_data_and_flags": 1
                },
                "PTR_0x40012800": {
                    "constant2": 1
                },
                "PTR_40012404": {
                    "data_ptr": 1
                },
                "PTR_DAT_40012404": {
                    "constant1": 1
                },
                "_DAT_40012404": {
                    "constant": 1,
                    "constant_value_2": 1,
                    "data2": 1,
                    "data_3": 1,
                    "data_40012404": 1,
                    "data_flag": 1,
                    "data_value": 3,
                    "flag": 1,
                    "flag_value": 1,
                    "some_other_constant": 1
                },
                "iVar1": {
                    "error": 1,
                    "result": 23,
                    "result_code": 2,
                    "return_value": 2,
                    "update_result": 3
                },
                "iVar3": {
                    "address": 1,
                    "base_address": 1,
                    "current_value": 1,
                    "data": 4,
                    "data_value": 1,
                    "i_var": 1,
                    "i_var3": 1,
                    "param_value": 2,
                    "ptr_value": 1,
                    "temp": 1,
                    "temp_var": 2,
                    "value": 14,
                    "variable_status": 1
                },
                "iVar5": {
                    "temp_var2": 1
                },
                "param_1": {
                    "array_pointer": 1,
                    "current_data": 1,
                    "data": 7,
                    "data_pointer": 1,
                    "function_params": 1,
                    "input_data": 2,
                    "input_params": 1,
                    "param": 2,
                    "param_array": 4,
                    "param_data": 2,
                    "parameters": 7,
                    "params": 1
                },
                "puVar2": {
                    "address_ptr": 1,
                    "current_pointer": 1,
                    "data_ptr": 1,
                    "param_pointer": 1,
                    "param_ptr": 2,
                    "pointer": 8,
                    "pointer_var": 2,
                    "ptr": 11,
                    "ptr2": 1,
                    "ptr_param1": 1,
                    "ptr_to_param": 1,
                    "ptr_value": 1
                },
                "update_data_and_flags_08001f84": {
                    "update_data_and_flags": 2,
                    "update_data_flags_helper": 1,
                    "update_flags": 1
                }
            },
            "called": [
                "FUN_08001f84"
            ],
            "calling": [
                "FUN_08004a4c"
            ],
            "code": "\n\n\nint update_flags_and_data_08002004(int *parameters)\n\n{\n  int result;\n  undefined4 *ptr;\n  int value;\n  \n  if (*(char *)(parameters + 9) != '\\x01') {\n    *(undefined *)(parameters + 9) = 1;\n    result = update_data_and_flags();\n    if (result == 0) {\n      parameters[10] = parameters[10] & 0xfffffcfeU | 0x100;\n      ptr = (undefined4 *)*parameters;\n      if ((ptr == (undefined4 *)0x40012800) && ((_DAT_40012404 & 0xf0000) != 0)) {\n        parameters[10] = parameters[10] | 0x100000;\n        if ((_DAT_40012404 & 0x400) != 0) {\n          parameters[10] = parameters[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      else {\n        parameters[10] = parameters[10] & 0xffefffff;\n        if ((ptr[1] & 0x400) != 0) {\n          parameters[10] = parameters[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      if ((parameters[10] & 0x1000U) == 0) {\n        parameters[0xb] = 0;\n      }\n      else {\n        parameters[0xb] = parameters[0xb] & 0xfffffff9;\n      }\n      *(undefined *)(parameters + 9) = 0;\n      *ptr = 0xfffffffd;\n      value = *parameters;\n      if (((*(uint *)(value + 8) & 0xe0000) == 0xe0000) &&\n         ((value != 0x40012800 || ((_DAT_40012404 & 0xf0000) == 0)))) {\n        *(uint *)(value + 8) = *(uint *)(value + 8) | 0x500000;\n      }\n      else {\n        *(uint *)(value + 8) = *(uint *)(value + 8) | 0x100000;\n      }\n    }\n    else {\n      *(undefined *)(parameters + 9) = 0;\n    }\n    return result;\n  }\n  return 2;\n}\n\n",
            "current_name": "update_flags_and_data_08002004",
            "entrypoint": "0x08002004",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002004": "update_flags_and_data_08002004",
                "iVar1": "result",
                "iVar3": "value",
                "param_1": "parameters",
                "puVar2": "ptr",
                "update_data_and_flags_08001f84": "update_data_and_flags"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080020f0": {
            "additional_data": {
                "FUN_080020f0": {
                    "check_and_update_data": 2,
                    "check_and_update_flags": 3,
                    "check_and_update_status": 1,
                    "check_and_update_values": 1,
                    "modify_data_value": 1,
                    "set_flag_if_data_value_difference_is_greater_than_or_equal_to_three": 1,
                    "update_data": 3,
                    "update_data_elements": 1,
                    "update_data_flags": 3,
                    "update_data_value": 3,
                    "update_data_values": 6,
                    "update_flags": 1,
                    "update_flags_and_status": 1,
                    "update_flags_and_values": 2,
                    "update_status": 1,
                    "validate_data": 1
                },
                "get_data_value_08001cc4": {
                    "get_data_value": 5,
                    "get_new_value": 1
                },
                "iVar1": {
                    "current_data_value": 3,
                    "current_value": 11,
                    "data_value1": 1,
                    "initial_value": 1,
                    "new_data_value": 1,
                    "old_data_value": 2,
                    "prev_data_value": 1,
                    "prev_value": 1,
                    "previous_data_value": 3,
                    "previous_value": 4,
                    "value1": 3
                },
                "iVar2": {
                    "base_value": 1,
                    "current_data_value": 6,
                    "current_value": 6,
                    "data_offset": 1,
                    "data_ptr": 1,
                    "data_value": 3,
                    "data_value2": 1,
                    "data_value_before_loop": 1,
                    "first_data_value": 1,
                    "initial_data_value": 1,
                    "initial_value": 4,
                    "original_value": 2,
                    "value2": 3
                },
                "param_1": {
                    "data": 13,
                    "data_array": 4,
                    "data_elements": 1,
                    "data_pointer": 2,
                    "data_ptr": 9,
                    "data_values": 2
                }
            },
            "called": [
                "FUN_08001cc4"
            ],
            "calling": [
                "FUN_08002348",
                "FUN_0800224c",
                "FUN_08002384",
                "FUN_0800213c"
            ],
            "code": "\nundefined4 update_data_values_080020f0(int *data)\n\n{\n  int current_value;\n  int current_value;\n  \n  current_value = *data;\n  if ((*(uint *)(current_value + 8) & 1) == 0) {\n    return 0;\n  }\n  *(uint *)(current_value + 8) = *(uint *)(current_value + 8) & 0xfffffffe;\n  current_value = get_data_value();\n  do {\n    if ((*(uint *)(*data + 8) & 1) == 0) {\n      return 0;\n    }\n    current_value = get_data_value();\n  } while ((uint)(current_value - current_value) < 3);\n  data[10] = data[10] | 0x10;\n  data[0xb] = data[0xb] | 1;\n  return 1;\n}\n\n",
            "current_name": "update_data_values_080020f0",
            "entrypoint": "0x080020f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080020f0": "update_data_values_080020f0",
                "get_data_value_08001cc4": "get_data_value",
                "iVar1": "current_value",
                "iVar2": "current_value",
                "param_1": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800213c": {
            "additional_data": {
                "FUN_0800213c": {
                    "initialize_memory": 2,
                    "process_parameter": 1,
                    "update_and_check_data_values": 1,
                    "update_and_check_permission": 1,
                    "update_memory_permissions": 22,
                    "update_permissions": 2,
                    "validate_data": 1,
                    "validate_permissions": 1
                },
                "iVar1": {
                    "data_result": 1,
                    "data_update_result": 9,
                    "data_value": 1,
                    "result": 3,
                    "status": 1,
                    "update_data_result": 1,
                    "update_result": 14,
                    "update_status": 1
                },
                "param_1": {
                    "data": 1,
                    "data_array": 1,
                    "data_ptr": 1,
                    "input_data": 1,
                    "memory": 4,
                    "memory_address": 1,
                    "memory_block": 6,
                    "memory_blocks": 1,
                    "memory_buffer": 1,
                    "memory_data": 1,
                    "memory_descriptor": 1,
                    "memory_ptr": 2,
                    "param": 4,
                    "param_array": 1,
                    "parameter": 2,
                    "parameters": 1,
                    "permission_array": 1,
                    "permissions": 1
                },
                "set_and_update_memory_permissions_08004974": {
                    "set_and_update_memory_permissions": 6,
                    "set_and_update_permissions": 1,
                    "update_memory_permissions": 1
                },
                "uVar2": {
                    "bitwise_operation_result": 1,
                    "bitwise_result": 1,
                    "check_value_1": 1,
                    "combined_data_values": 1,
                    "combined_value": 1,
                    "combined_value1": 1,
                    "combined_values": 8,
                    "combined_values1": 4,
                    "computed_value_1": 1,
                    "condition1": 1,
                    "data_value1": 1,
                    "value": 1,
                    "value1": 3,
                    "value_1": 2,
                    "value_mask": 1,
                    "values": 1,
                    "var1": 1,
                    "var2": 1
                },
                "uVar3": {
                    "additional_value": 1,
                    "calculated_value": 1,
                    "check_value_2": 1,
                    "combined_flags": 1,
                    "combined_value2": 1,
                    "combined_values2": 4,
                    "computed_value_2": 1,
                    "condition2": 1,
                    "condition_value": 1,
                    "conditional_value": 2,
                    "data_value2": 1,
                    "extra_value": 1,
                    "flag": 2,
                    "flags": 1,
                    "memory_permissions": 1,
                    "memory_value": 1,
                    "new_value": 1,
                    "special_value": 1,
                    "u_var3": 1,
                    "value2": 3,
                    "value_2": 2,
                    "var2": 1,
                    "var3": 1
                },
                "update_data_values_080020f0": {
                    "update_data_values": 8
                }
            },
            "called": [
                "FUN_08004974",
                "FUN_080020f0"
            ],
            "calling": [
                "FUN_08004a4c"
            ],
            "code": "\nundefined4 update_memory_permissions_0800213c(int *memory_block)\n\n{\n  int update_result;\n  uint combined_values;\n  uint combined_values2;\n  \n  if (memory_block == (int *)0x0) {\n    return 1;\n  }\n  if (memory_block[10] == 0) {\n    memory_block[0xb] = 0;\n    *(undefined *)(memory_block + 9) = 0;\n    set_and_update_memory_permissions_0800213c();\n  }\n  update_result = update_data_values(memory_block);\n  if (((memory_block[10] & 0x10U) == 0) && (update_result == 0)) {\n    memory_block[10] = memory_block[10] & 0xffffeefdU | 2;\n    combined_values = memory_block[1] | memory_block[7] | memory_block[3] << 1;\n    if (memory_block[2] == 0x100) {\n      combined_values2 = 0x100;\n    }\n    else {\n      combined_values2 = 0;\n      if (memory_block[2] == 1) {\n        combined_values2 = 0x100;\n      }\n    }\n    if (memory_block[5] == 1) {\n      if (memory_block[3] == 0) {\n        combined_values2 = combined_values2 | (memory_block[6] + -1) * 0x2000 | 0x800;\n      }\n      else {\n        memory_block[10] = memory_block[10] | 0x20;\n        memory_block[0xb] = memory_block[0xb] | 1;\n      }\n    }\n    *(uint *)(*memory_block + 4) = combined_values2 | *(uint *)(*memory_block + 4) & 0xffff16ff;\n    *(uint *)(*memory_block + 8) = *(uint *)(*memory_block + 8) & 0xffe1f7fd | combined_values;\n    if ((memory_block[2] == 0x100) || (memory_block[2] == 1)) {\n      combined_values2 = (memory_block[4] + -1) * 0x100000;\n    }\n    else {\n      combined_values2 = 0;\n    }\n    *(uint *)(*memory_block + 0x2c) = combined_values2 | *(uint *)(*memory_block + 0x2c) & 0xff0fffff;\n    if (combined_values != (*(uint *)(*memory_block + 8) & 0xff1f0efe)) {\n      memory_block[10] = memory_block[10] & 0xffffffedU | 0x10;\n      memory_block[0xb] = memory_block[0xb] | 1;\n      return 1;\n    }\n    memory_block[0xb] = 0;\n    memory_block[10] = memory_block[10] & 0xfffffffcU | 1;\n    return 0;\n  }\n  memory_block[10] = memory_block[10] | 0x10;\n  return 1;\n}\n\n",
            "current_name": "update_memory_permissions_0800213c",
            "entrypoint": "0x0800213c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800213c": "update_memory_permissions_0800213c",
                "iVar1": "update_result",
                "param_1": "memory_block",
                "set_and_update_memory_permissions_08004974": "set_and_update_memory_permissions",
                "uVar2": "combined_values",
                "uVar3": "combined_values2",
                "update_data_values_080020f0": "update_data_values"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800224c": {
            "additional_data": {
                "FUN_0800224c": {
                    "initialize_data": 3,
                    "initialize_param_values": 1,
                    "update_and_reset_values": 1,
                    "update_data": 7,
                    "update_data_and_control": 1,
                    "update_data_and_control_registers": 1,
                    "update_data_values": 9,
                    "update_param1_data": 1,
                    "update_param_values": 2,
                    "update_parameter_value": 1,
                    "update_values": 2,
                    "update_values_and_control": 1
                },
                "iVar1": {
                    "error_code": 1,
                    "result": 21,
                    "return_code": 1,
                    "return_val": 1,
                    "return_value": 7
                },
                "param_1": {
                    "data": 11,
                    "data_array": 6,
                    "data_pointer": 3,
                    "data_ptr": 3,
                    "data_registers": 1,
                    "data_values": 1,
                    "param": 1,
                    "param_array": 2,
                    "param_ptr": 1,
                    "parameter_array": 1
                },
                "uint": {
                    "unsigned_int": 2
                },
                "undefined": {
                    "unknown": 1
                },
                "undefined4": {
                    "undefined_4": 1,
                    "unknown_1": 1
                },
                "update_control_registers_080049f0": {
                    "update_control_registers": 7
                },
                "update_data_values_080020f0": {
                    "update_data_values": 5,
                    "update_data_values_func": 2
                }
            },
            "called": [
                "FUN_080020f0",
                "FUN_080049f0"
            ],
            "calling": [
                "FUN_08004a4c"
            ],
            "code": "\nint update_data_values_0800224c(int *data)\n\n{\n  int result;\n  \n  if (data == (int *)0x0) {\n    result = 1;\n  }\n  else {\n    data[10] = data[10] | 2;\n    result = update_data_values_0800224c();\n    if (result == 0) {\n      *(unknown_1 *)*data = 0xffffffe0;\n      *(unsigned_int *)(*data + 4) = *(unsigned_int *)(*data + 4) & 0xff3f0000;\n      *(unsigned_int *)(*data + 8) = *(unsigned_int *)(*data + 8) & 0xff0106f0;\n      *(unsigned_int *)(*data + 0xc) = *(unsigned_int *)(*data + 0xc) & 0xff000000;\n      *(unsigned_int *)(*data + 0x10) = *(unsigned_int *)(*data + 0x10) & 0xc0000000;\n      *(unsigned_int *)(*data + 0x14) = *(unsigned_int *)(*data + 0x14) & 0xfffff000;\n      *(unsigned_int *)(*data + 0x18) = *(unsigned_int *)(*data + 0x18) & 0xfffff000;\n      *(unsigned_int *)(*data + 0x1c) = *(unsigned_int *)(*data + 0x1c) & 0xfffff000;\n      *(unsigned_int *)(*data + 0x20) = *(unsigned_int *)(*data + 0x20) & 0xfffff000;\n      *(unsigned_int *)(*data + 0x24) = *(unsigned_int *)(*data + 0x24) & 0xfffff000;\n      *(unsigned_int *)(*data + 0x28) = *(unsigned_int *)(*data + 0x28) & 0xfffff000;\n      *(unsigned_int *)(*data + 0x2c) = *(unsigned_int *)(*data + 0x2c) & 0xff000000;\n      *(unsigned_int *)(*data + 0x2c) = *(unsigned_int *)(*data + 0x2c) & 0xff000000;\n      *(unsigned_int *)(*data + 0x30) = *(unsigned_int *)(*data + 0x30) & 0xc0000000;\n      *(unsigned_int *)(*data + 0x34) = *(unsigned_int *)(*data + 0x34) & 0xc0000000;\n      *(unsigned_int *)(*data + 0x38) = *(unsigned_int *)(*data + 0x38) & 0xffc00000;\n      *(unsigned_int *)(*data + 0x38) = *(unsigned_int *)(*data + 0x38) & 0xffc00000;\n      update_control_registers(data);\n      data[0xb] = 0;\n      data[10] = 0;\n    }\n    *(unknown *)(data + 9) = 0;\n  }\n  return result;\n}\n\n",
            "current_name": "update_data_values_0800224c",
            "entrypoint": "0x0800224c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800224c": "update_data_values_0800224c",
                "iVar1": "result",
                "param_1": "data",
                "uint": "unsigned_int",
                "undefined": "unknown",
                "undefined4": "unknown_1",
                "update_control_registers_080049f0": "update_control_registers",
                "update_data_values_080020f0": "update_data_values"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002348": {
            "additional_data": {
                "FUN_08002348": {
                    "check_and_modify_data": 1,
                    "check_and_modify_data_values": 1,
                    "check_and_update_data": 9,
                    "update_and_check_data_values": 1,
                    "update_and_check_status": 1,
                    "update_data": 4,
                    "update_data_and_check": 1,
                    "update_data_status": 2,
                    "update_data_values": 4,
                    "update_param_data": 1,
                    "update_parameter_values": 1,
                    "update_status": 3,
                    "update_status_and_return": 1,
                    "validate_data": 1
                },
                "PTR_FUN_080020f0": {
                    "update_data_values": 1
                },
                "iVar1": {
                    "error_code": 1,
                    "result": 15,
                    "result_code": 1,
                    "return_value": 10,
                    "status": 1,
                    "update_result": 3
                },
                "param_1": {
                    "data": 12,
                    "data_address": 2,
                    "data_buffer": 1,
                    "data_pointer": 2,
                    "data_ptr": 4,
                    "data_status": 1,
                    "data_struct_ptr": 1,
                    "input": 1,
                    "input_param": 1,
                    "param": 2,
                    "status": 4
                },
                "update_data_values_080020f0": {
                    "update_data_values": 2
                }
            },
            "called": [
                "FUN_080020f0"
            ],
            "calling": [
                "FUN_08004a4c"
            ],
            "code": "\nint update_and_check_data_values_08002348(int data)\n\n{\n  int result;\n  \n  if (*(char *)(data + 0x24) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(data + 0x24) = 1;\n  result = update_data_values();\n  if (result == 0) {\n    *(uint *)(data + 0x28) = *(uint *)(data + 0x28) & 0xffffeefe | 1;\n  }\n  *(undefined *)(data + 0x24) = 0;\n  return result;\n}\n\n",
            "current_name": "update_and_check_data_values_08002348",
            "entrypoint": "0x08002348",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002348": "update_and_check_data_values_08002348",
                "iVar1": "result",
                "param_1": "data",
                "update_data_values_080020f0": "update_data_values"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002384": {
            "additional_data": {
                "FUN_08002384": {
                    "check_and_update_data": 10,
                    "check_and_update_data_values": 2,
                    "check_data_validity": 1,
                    "process_data": 5,
                    "update_and_check_data": 2,
                    "update_data": 5,
                    "update_data_and_flags": 3,
                    "update_data_processing": 2,
                    "update_data_values": 1
                },
                "calculate_data_value_08003da4": {
                    "calculate_data_value": 1
                },
                "get_data_value_08001cc4": {
                    "get_data_value": 1
                },
                "iVar2": {
                    "result": 16,
                    "return_code": 1,
                    "return_value": 1,
                    "update_result": 12,
                    "update_status": 1
                },
                "iVar4": {
                    "data_value1": 1,
                    "first_value": 1,
                    "get_val_result1": 1,
                    "initial_data_value": 4,
                    "initial_value": 9,
                    "new_value": 1,
                    "prev_value": 1,
                    "previous_value": 1,
                    "start_time": 1,
                    "start_value": 4,
                    "temp_value": 1,
                    "temp_var": 1,
                    "temp_var3": 1,
                    "value1": 3,
                    "value_before_loop": 1
                },
                "iVar5": {
                    "current_data_value": 4,
                    "current_time": 1,
                    "current_value": 17,
                    "data_value2": 1,
                    "get_val_result2": 1,
                    "previous_value": 1,
                    "temp_var2": 1,
                    "temp_var4": 1,
                    "value2": 3,
                    "value_after_loop": 1
                },
                "local_14": {
                    "iteration": 2,
                    "iteration_count": 3,
                    "iterations": 2,
                    "loop_count": 5,
                    "loop_counter": 14,
                    "loop_index": 1,
                    "temp_value": 1,
                    "temp_var": 1,
                    "temp_variable": 1
                },
                "param_1": {
                    "data": 22,
                    "data_array": 4,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "data_values": 2
                },
                "uVar1": {
                    "data_array_length": 1,
                    "data_divisor": 1,
                    "data_length": 1,
                    "data_limit": 1,
                    "data_value1": 4,
                    "divide_data": 1,
                    "dividend": 5,
                    "division_factor": 1,
                    "division_result": 4,
                    "divisor": 2,
                    "quotient": 3,
                    "temp_var1": 2,
                    "total_divisor": 1,
                    "value1": 1,
                    "variable1": 1
                },
                "uVar3": {
                    "calculate_data": 1,
                    "calculated_value": 1,
                    "calculation_result": 1,
                    "data_value": 7,
                    "data_value2": 4,
                    "data_value_result": 1,
                    "dividend": 2,
                    "divisor": 7,
                    "temp_var2": 2,
                    "value2": 1,
                    "variable2": 1
                },
                "update_data_and_flags_08001f84": {
                    "update_data_and_flags": 1
                },
                "update_data_values_080020f0": {
                    "update_data_values": 1
                }
            },
            "called": [
                "FUN_08003da4",
                "FUN_08001f84",
                "FUN_08001cc4",
                "FUN_080020f0"
            ],
            "calling": [
                "FUN_08004a4c"
            ],
            "code": "\nint check_and_update_data_values_08002384(int *data)\n\n{\n  uint dividend;\n  int result;\n  uint divisor;\n  int initial_value;\n  int current_value;\n  int loop_counter;\n  \n  if (*(char *)(data + 9) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(data + 9) = 1;\n  result = update_data_values();\n  if (result == 0) {\n    data[10] = data[10] & 0xffffeefdU | 2;\n    dividend = DAT_20000084;\n    divisor = calculate_data_value(2);\n    for (loop_counter = dividend / divisor << 1; loop_counter != 0; loop_counter = loop_counter + -1) {\n    }\n    update_data_and_flags(data);\n    *(uint *)(*data + 8) = *(uint *)(*data + 8) | 8;\n    initial_value = get_data_value();\n    while (current_value = *data, (*(uint *)(current_value + 8) & 8) != 0) {\n      current_value = get_data_value();\n      if (10 < (uint)(current_value - initial_value)) {\n        data[10] = data[10] & 0xffffffedU | 0x10;\n        *(undefined *)(data + 9) = 0;\n        return 1;\n      }\n    }\n    *(uint *)(current_value + 8) = *(uint *)(current_value + 8) | 4;\n    initial_value = get_data_value();\n    while ((*(uint *)(*data + 8) & 4) != 0) {\n      current_value = get_data_value();\n      if (10 < (uint)(current_value - initial_value)) {\n        data[10] = data[10] & 0xffffffedU | 0x10;\n        *(undefined *)(data + 9) = 0;\n        return 1;\n      }\n    }\n    data[10] = data[10] & 0xfffffffcU | 1;\n  }\n  *(undefined *)(data + 9) = 0;\n  return result;\n}\n\n",
            "current_name": "check_and_update_data_values_08002384",
            "entrypoint": "0x08002384",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002384": "check_and_update_data_values_08002384",
                "calculate_data_value_08003da4": "calculate_data_value",
                "get_data_value_08001cc4": "get_data_value",
                "iVar2": "result",
                "iVar4": "initial_value",
                "iVar5": "current_value",
                "local_14": "loop_counter",
                "param_1": "data",
                "uVar1": "dividend",
                "uVar3": "divisor",
                "update_data_and_flags_08001f84": "update_data_and_flags",
                "update_data_values_080020f0": "update_data_values"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002470": {
            "additional_data": {
                "0x5fa0000": {
                    "default_config": 1,
                    "set_bits": 1
                },
                "0xf8ff": {
                    "clear_mask": 1
                },
                "8": {
                    "mask": 1
                },
                "FUN_08002470": {
                    "initialize_data": 1,
                    "set_bitmask": 1,
                    "set_bitmask_and_value": 1,
                    "set_display_mode": 1,
                    "set_encoded_value": 1,
                    "set_flag_bits": 1,
                    "set_lowest_bits_to_value": 1,
                    "set_memory_region_access": 1,
                    "set_special_flags": 1,
                    "set_special_register_value": 1,
                    "update_configuration": 4,
                    "update_control_register": 1,
                    "update_data": 2,
                    "update_data_header": 1,
                    "update_data_register": 1,
                    "update_data_with_param": 1,
                    "update_flag_value": 1,
                    "update_global_variable": 1,
                    "update_register_value": 8,
                    "update_value": 1
                },
                "_DAT_e000ed0c": {
                    "configuration": 3,
                    "control_register": 1,
                    "data_header": 1,
                    "data_register": 6,
                    "display_control": 1,
                    "existing_value": 1,
                    "flag_value": 1,
                    "global_variable": 1,
                    "register": 1,
                    "register_value": 6,
                    "special_flags": 1,
                    "special_register": 1
                },
                "param_1": {
                    "access_level": 1,
                    "config_value": 1,
                    "data_value": 1,
                    "display_mode": 1,
                    "flag": 1,
                    "flag_value": 1,
                    "flags": 1,
                    "input": 2,
                    "input_data": 1,
                    "input_value": 16,
                    "new_state": 1,
                    "new_value": 1,
                    "param": 1,
                    "value": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08001c88",
                "FUN_08005f5e"
            ],
            "code": "\n\n\nvoid update_register_value_08002470(uint input_value)\n\n{\n  _DAT_e000ed0c = (input_value & 7) << 8 | _DAT_e000ed0c & 0xf8ff | 0x5fa0000;\n  return;\n}\n\n",
            "current_name": "update_register_value_08002470",
            "entrypoint": "0x08002470",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002470": "update_register_value_08002470",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002494": {
            "additional_data": {
                "FUN_08002494": {
                    "apply_bitmask_and_shift": 1,
                    "apply_bitwise_operations": 1,
                    "apply_mask_and_set_bits": 1,
                    "apply_transformation": 1,
                    "set_bit_pattern": 1,
                    "set_bits_at_position": 1,
                    "set_property_value": 1,
                    "update_char_value": 2,
                    "update_character": 1,
                    "update_data": 7,
                    "update_memory": 4,
                    "update_memory_byte": 1,
                    "update_memory_chunk": 1,
                    "update_memory_location": 3,
                    "update_register_byte": 1,
                    "update_register_value": 2,
                    "write_data_to_memory": 2
                },
                "char": {
                    "byte_value": 1,
                    "character": 2,
                    "value": 1
                },
                "param_1": {
                    "address": 10,
                    "address_offset": 1,
                    "bit_offset": 1,
                    "character_index": 1,
                    "data_index": 3,
                    "input_value": 2,
                    "memory_address": 1,
                    "offset": 1,
                    "output_address": 1,
                    "param1": 1,
                    "position": 1,
                    "property_index": 1,
                    "register_index": 2,
                    "register_offset": 1,
                    "target": 1,
                    "target_address": 1,
                    "value": 1,
                    "value_index": 1
                },
                "param_2": {
                    "bit_mask": 5,
                    "bit_mask1": 1,
                    "bitmask": 4,
                    "data": 1,
                    "data1": 1,
                    "input_mask": 1,
                    "mask": 8,
                    "old_register_value": 1,
                    "original_value": 2,
                    "param2": 1,
                    "source": 2,
                    "source_data": 1,
                    "value": 3
                },
                "param_3": {
                    "bit_mask2": 1,
                    "data": 10,
                    "data2": 1,
                    "data_to_write": 1,
                    "destination": 1,
                    "input": 1,
                    "input_data": 1,
                    "mask": 6,
                    "new_register_value": 1,
                    "new_value": 2,
                    "original_char": 1,
                    "param3": 1,
                    "value": 4
                },
                "uVar1": {
                    "final_result": 1,
                    "first_part": 1,
                    "masked_data": 1,
                    "result": 1,
                    "shift_amount": 13,
                    "shift_count": 2,
                    "shift_value": 2,
                    "shifted_bits": 5,
                    "shifted_data": 2,
                    "shifted_value": 1,
                    "updated_value": 1,
                    "value_to_store": 1
                },
                "uVar1_updated": {
                    "shifted_value": 1
                },
                "uVar2": {
                    "adjusted_shift": 1,
                    "bit_count": 1,
                    "bit_position": 3,
                    "bits_remaining": 1,
                    "bits_to_clear": 1,
                    "difference": 1,
                    "effective_shift": 1,
                    "inverse_shift_amount": 1,
                    "mask_adjustment": 1,
                    "max_bit": 1,
                    "max_offset": 1,
                    "modified_shift_amount": 1,
                    "num_bits": 2,
                    "offset": 2,
                    "remaining_bits": 9,
                    "result": 1,
                    "second_part": 1,
                    "shifted_data": 1,
                    "updated_value": 1
                },
                "uVar2_updated": {
                    "cleared_bits": 1
                },
                "uVar3": {
                    "adjusted_shift": 1,
                    "effective_shift_offset": 1,
                    "temp_var": 1,
                    "write_data": 1
                },
                "uVar4": {
                    "effective_mask": 1,
                    "masked_data": 1,
                    "updated_bits": 1
                },
                "uVar5": {
                    "shifted_mask": 1
                },
                "uVarTemp": {
                    "temp_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001b48",
                "FUN_08005568",
                "FUN_08001c3c",
                "FUN_08005510"
            ],
            "code": "\n\n\nvoid update_char_value_08002494(uint address,uint mask,uint data)\n\n{\n  uint shift_amount;\n  uint remaining_bits;\n  \n  shift_amount = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  remaining_bits = 7 - shift_amount;\n  if (3 < remaining_bits) {\n    remaining_bits = 4;\n  }\n  if (shift_amount + 4 < 7) {\n    shift_amount = 0;\n  }\n  else {\n    shift_amount = shift_amount - 3;\n  }\n  shift_amount = (mask & (1 << (remaining_bits & 0xff)) - 1U) << (shift_amount & 0xff) |\n          (1 << (shift_amount & 0xff)) - 1U & data;\n  if ((int)address < 0) {\n    *(character *)((address & 0xf) + 0xe000ed14) = (character)(shift_amount << 4);\n  }\n  else {\n    *(character *)(address + 0xe000e400) = (character)(shift_amount << 4);\n  }\n  return;\n}\n\n",
            "current_name": "update_char_value_08002494",
            "entrypoint": "0x08002494",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002494": "update_char_value_08002494",
                "char": "character",
                "param_1": "address",
                "param_2": "mask",
                "param_3": "data",
                "uVar1": "shift_amount",
                "uVar2": "remaining_bits"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080024f8": {
            "additional_data": {
                "0x1fff1f00": {
                    "base_address": 1
                },
                "FUN_080024f8": {
                    "set_bit": 11,
                    "set_bit_at_index": 5,
                    "set_bit_at_position": 1,
                    "set_bit_flag": 1,
                    "set_bit_in_array": 7,
                    "set_bit_in_int": 1,
                    "set_bit_in_memory": 4
                },
                "int": {
                    "array": 1,
                    "bit_array": 1
                },
                "param_1": {
                    "bit_index": 10,
                    "bit_position": 9,
                    "index": 10,
                    "position": 1,
                    "value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005568",
                "FUN_08005510"
            ],
            "code": "\nvoid set_bit_in_array_080024f8(ubit_array index)\n\n{\n  if (-1 < (bit_array)index) {\n    *(bit_array *)((index >> 5) * 4 + -0x1fff1f00) = 1 << (index & 0x1f);\n  }\n  return;\n}\n\n",
            "current_name": "set_bit_in_array_080024f8",
            "entrypoint": "0x080024f8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080024f8": "set_bit_in_array_080024f8",
                "int": "bit_array",
                "param_1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002514": {
            "additional_data": {
                "DAT_e000ed23": {
                    "config_flag": 1,
                    "constant": 2,
                    "constant_value": 1,
                    "control_signal": 1,
                    "data": 1,
                    "data_flag": 1,
                    "data_type": 1,
                    "data_value": 2,
                    "flag": 1,
                    "flags": 1,
                    "memory_configuration": 1,
                    "memory_permission": 1,
                    "memory_value": 1,
                    "register2": 3,
                    "status": 2,
                    "status_code": 1,
                    "status_flag": 4,
                    "status_register": 1,
                    "value_2": 1
                },
                "FUN_080025014": {
                    "set_values_and_check_range": 1
                },
                "FUN_08002514": {
                    "initialize_configuration": 1,
                    "initialize_data": 7,
                    "initialize_memory": 6,
                    "initialize_memory_and_register": 1,
                    "initialize_parameter": 1,
                    "initialize_parameters": 1,
                    "initialize_registers": 2,
                    "initialize_system": 1,
                    "set_data_parameters": 1,
                    "set_memory_configuration": 1,
                    "set_memory_properties": 1,
                    "set_param_and_return": 1,
                    "set_parameters": 4,
                    "set_registers": 1,
                    "set_threshold_value": 1
                },
                "_DAT_e000e010": {
                    "another_variable": 1,
                    "config_state": 1,
                    "config_value": 1,
                    "constant_value": 2,
                    "counter": 1,
                    "data_flag": 1,
                    "data_size": 1,
                    "flag": 6,
                    "limit": 1,
                    "mask": 1,
                    "memory_control": 1,
                    "mode": 2,
                    "register4": 3,
                    "status": 2,
                    "threshold": 1,
                    "value3": 1,
                    "value_4": 1,
                    "variable_2": 1
                },
                "_DAT_e000e014": {
                    "address": 1,
                    "base_address": 1,
                    "configuration_value": 1,
                    "data_address": 2,
                    "data_offset": 1,
                    "data_pointer": 2,
                    "memory_address": 6,
                    "memory_offset": 1,
                    "modified_input_data": 1,
                    "modified_value": 4,
                    "param_minus_one": 1,
                    "register1": 3,
                    "start_address": 1,
                    "threshold_value": 1,
                    "updated_value": 1,
                    "value_1": 1
                },
                "_DAT_e000e018": {
                    "config_pointer": 1,
                    "counter": 11,
                    "data_flag": 1,
                    "data_value": 1,
                    "extra_data": 1,
                    "initialized_data": 1,
                    "memory_attribute": 1,
                    "offset": 1,
                    "register3": 3,
                    "reserved_variable": 1,
                    "some_variable": 1,
                    "unused_data": 1,
                    "value2": 1,
                    "value_3": 1,
                    "variable_1": 1
                },
                "param_1": {
                    "address": 1,
                    "input_data": 1,
                    "input_value": 8,
                    "memory_size": 1,
                    "size": 3,
                    "value": 17
                }
            },
            "called": [],
            "calling": [
                "FUN_08001b48",
                "FUN_08001c3c"
            ],
            "code": "\n\n\nundefined4 initialize_memory_and_register_08002514(int value)\n\n{\n  if (value - 1U < 0x1000000) {\n    _DAT_e000e014 = value - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "initialize_memory_and_register_08002514",
            "entrypoint": "0x08002514",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002514": "initialize_memory_and_register_08002514",
                "param_1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002540": {
            "additional_data": {
                "0x60": {
                    "bits_per_entry": 1
                },
                "1": {
                    "bit_mask": 1
                },
                "4": {
                    "bytes_per_entry": 1
                },
                "FUN_08002540": {
                    "set_bit": 7,
                    "set_bit_at_index": 3,
                    "set_bit_at_offset": 1,
                    "set_bit_at_position": 2,
                    "set_bit_in_array": 6,
                    "set_bit_in_int": 1,
                    "set_bit_in_integer_array": 1,
                    "set_bit_in_memory": 6,
                    "set_bit_value": 3,
                    "store_bit_in_memory": 1
                },
                "INT_arrayIndex_PLUS_96_ARRAY_OFFSET": {
                    "array_pointer": 1
                },
                "PTR_0x1fff1f00": {
                    "array_data": 1
                },
                "int": {
                    "array": 1,
                    "int": 1
                },
                "param_1": {
                    "bit_index": 8,
                    "bit_pos": 1,
                    "bit_position": 5,
                    "index": 13,
                    "input_param": 1,
                    "num": 1,
                    "offset": 1,
                    "position": 1
                }
            },
            "called": [],
            "calling": [],
            "code": "\nvoid set_bit_in_memory_08002540(uint index)\n\n{\n  if (-1 < (int)index) {\n    *(int *)(((index >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (index & 0x1f);\n  }\n  return;\n}\n\n",
            "current_name": "set_bit_in_memory_08002540",
            "entrypoint": "0x08002540",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002540": "set_bit_in_memory_08002540",
                "param_1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002560": {
            "additional_data": {
                "FUN_08002560": {
                    "set_bit_in_control_register": 1,
                    "set_bit_in_status_register": 1,
                    "set_control_bit": 2,
                    "set_e000e010_bit": 3,
                    "set_flag": 4,
                    "set_flag_based_on_param": 1,
                    "set_flag_bit": 1,
                    "set_flag_value": 2,
                    "set_permission_flag": 1,
                    "update_control_register": 3,
                    "update_flag": 2,
                    "update_flag_status": 1,
                    "update_flags": 1,
                    "update_status": 5,
                    "update_status_flag": 3
                },
                "_DAT_e000e010": {
                    "config_register": 1,
                    "control_register": 5,
                    "data_register": 1,
                    "flag": 2,
                    "flag_register": 6,
                    "flag_value": 1,
                    "permission_register": 1,
                    "register_e000e010": 1,
                    "register_value": 4,
                    "status_flag": 3,
                    "status_register": 5
                },
                "param_1": {
                    "bit_position": 1,
                    "bit_to_set": 1,
                    "bit_value": 2,
                    "flag": 4,
                    "flag_value": 6,
                    "input": 1,
                    "input_param": 1,
                    "input_value": 1,
                    "status": 7,
                    "status_code": 1,
                    "value": 6
                },
                "param_2": {
                    "new_status": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001b48"
            ],
            "code": "\n\n\nvoid update_flag_status_08002560(int status)\n\n{\n  if (status != 4) {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n    return;\n  }\n  _DAT_e000e010 = _DAT_e000e010 | 4;\n  return;\n}\n\n",
            "current_name": "update_flag_status_08002560",
            "entrypoint": "0x08002560",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002560": "update_flag_status_08002560",
                "param_1": "status"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002580": {
            "called": [],
            "calling": [
                "FUN_08002582"
            ],
            "code": "\nvoid FUNC_08002580(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08002580",
            "entrypoint": "0x08002580",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08002580": "FUNC_08002580"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08002582": {
            "additional_data": {
                "FUNC_08002580": {
                    "call_initialization": 1,
                    "call_initialize_function": 1,
                    "execute_initialization": 3,
                    "execute_main_function": 1,
                    "execute_operation": 1,
                    "execute_startup_function": 1,
                    "execute_sub_function": 1,
                    "initialize": 1,
                    "initialize_components": 4,
                    "initialize_data": 2,
                    "initialize_function": 1,
                    "initialize_program": 1,
                    "initialize_system": 4,
                    "initialize_values": 1,
                    "load_data": 1,
                    "perform_initialization": 5,
                    "perform_preparatory_tasks": 1,
                    "setup_environment": 1
                },
                "FUN_08002582": {
                    "execute_function": 4,
                    "execute_initialization": 10,
                    "execute_main_function": 3,
                    "execute_startup_function": 1,
                    "execute_startup_process": 1,
                    "initialize": 1,
                    "initialize_application": 2,
                    "initialize_components": 1,
                    "initialize_function": 2,
                    "initialize_program": 2,
                    "initialize_system": 3,
                    "run_initialization": 1
                }
            },
            "called": [
                "FUN_08002580"
            ],
            "calling": [
                "FUN_08004b9e"
            ],
            "code": "\nvoid execute_initialization_08002582(void)\n\n{\n  FUNC_08002580();\n  return;\n}\n\n",
            "current_name": "execute_initialization_08002582",
            "entrypoint": "0x08002582",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002582": "execute_initialization_08002582"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800258c": {
            "additional_data": {
                "0x10": {
                    "result_c": 1
                },
                "0x100": {
                    "result_d": 1
                },
                "0x1000": {
                    "result_e": 1
                },
                "0x10000": {
                    "result_f": 1
                },
                "0x100000": {
                    "result_g": 1
                },
                "0x1000000": {
                    "result_h": 1
                },
                "0x4": {
                    "result_a": 1
                },
                "1": {
                    "result_b": 1
                },
                "DAT_40020004": {
                    "data": 1
                },
                "FUN_0800258c": {
                    "apply_permissions": 1,
                    "configure_control": 1,
                    "configure_data_settings": 1,
                    "configure_memory_access": 1,
                    "configure_peripheral_settings": 1,
                    "initialize_configuration": 1,
                    "initialize_data": 8,
                    "initialize_setting": 1,
                    "initialize_settings": 2,
                    "initialize_value": 1,
                    "initialize_values": 1,
                    "map_address_to_value": 1,
                    "set_and_check_flags": 1,
                    "set_configuration": 2,
                    "update_data": 4,
                    "update_data_and_execute": 1,
                    "update_settings": 2,
                    "update_variable_and_execute": 1
                },
                "PTR_0800500c": {
                    "callback_function": 1
                },
                "PTR_40020004": {
                    "config_value": 1
                },
                "PTR_FUN_0800258c": {
                    "callback_function_ptr": 1
                },
                "_DAT_40020004": {
                    "configuration_value": 1,
                    "control_register": 1,
                    "data_register": 2,
                    "data_value": 2,
                    "device_setting": 1,
                    "global_data": 1,
                    "global_setting": 1,
                    "global_var": 1,
                    "global_variable": 1,
                    "memory_access_config": 1,
                    "new_data": 1,
                    "output": 1,
                    "output_value": 1,
                    "peripheral_setting": 1,
                    "permission_flag": 1,
                    "result": 2,
                    "selected_value": 1,
                    "updated_value": 1,
                    "value": 1
                },
                "_DAT_40020008": {
                    "target_value1": 1
                },
                "_DAT_4002001c": {
                    "target_value2": 1
                },
                "_DAT_40020030": {
                    "target_value3": 1
                },
                "_DAT_40020044": {
                    "target_value4": 1
                },
                "_DAT_40020058": {
                    "target_value5": 1
                },
                "_DAT_4002006c": {
                    "target_value6": 1
                },
                "param_1": {
                    "address": 1,
                    "config": 2,
                    "config_ptr": 1,
                    "configuration_data": 1,
                    "control_settings": 1,
                    "data": 9,
                    "data_array": 1,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "data_settings": 1,
                    "input": 1,
                    "parameters": 3,
                    "peripheral_config": 1,
                    "permissions": 1,
                    "setting": 1,
                    "settings": 4
                },
                "puVar1": {
                    "current_address": 1,
                    "current_config": 1,
                    "current_configuration": 1,
                    "current_data": 2,
                    "current_param": 1,
                    "current_peripheral": 1,
                    "current_setting": 3,
                    "current_setting_ptr": 1,
                    "current_value": 4,
                    "data_ptr": 1,
                    "data_value": 1,
                    "p_data": 1,
                    "pointer": 1,
                    "ptr_to_data": 1,
                    "temp_ptr": 3,
                    "temp_value": 1,
                    "temp_var": 1,
                    "value": 6
                }
            },
            "called": [],
            "calling": [
                "FUN_080046b8",
                "FUN_0800316c"
            ],
            "code": "\n\n\nundefined4 initialize_data_0800258c(uint **data)\n\n{\n  uint *value;\n  \n  if (*(char *)((int)data + 0x21) != '\\x02') {\n    data[0xe] = (uint *)0x4;\n    return 1;\n  }\n  **data = **data & 0xfffffff1;\n  **data = **data & 0xfffffffe;\n  value = *data;\n  if (value == (uint *)0x40020008) {\n    _DAT_40020004 = 1;\n  }\n  else if (value == (uint *)0x4002001c) {\n    _DAT_40020004 = 0x10;\n  }\n  else if (value == (uint *)0x40020030) {\n    _DAT_40020004 = 0x100;\n  }\n  else if (value == (uint *)0x40020044) {\n    _DAT_40020004 = 0x1000;\n  }\n  else if (value == (uint *)0x40020058) {\n    _DAT_40020004 = 0x10000;\n  }\n  else if (value == (uint *)0x4002006c) {\n    _DAT_40020004 = 0x100000;\n  }\n  else {\n    _DAT_40020004 = 0x1000000;\n  }\n  *(undefined *)((int)data + 0x21) = 1;\n  *(undefined *)(data + 8) = 0;\n  if (data[0xd] != (uint *)0x0) {\n    (*(code *)data[0xd])();\n    return 0;\n  }\n  return 0;\n}\n\n",
            "current_name": "initialize_data_0800258c",
            "entrypoint": "0x0800258c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800258c": "initialize_data_0800258c",
                "param_1": "data",
                "puVar1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002624": {
            "additional_data": {
                "FUN_08002624": {
                    "process_binary_data": 1,
                    "process_flags": 1,
                    "reverse_bits_and_set_flags": 1,
                    "set_configuration_bits": 1,
                    "set_register_values": 1,
                    "update_bits": 1,
                    "update_bits_in_memory": 1,
                    "update_config": 2,
                    "update_config_bits": 1,
                    "update_flags": 2,
                    "update_flags_and_registers": 1,
                    "update_flags_based_on_input": 1,
                    "update_memory_map": 1,
                    "update_memory_values": 1,
                    "update_param": 1,
                    "update_param_values": 1,
                    "update_parameter_flags": 3,
                    "update_parameters": 1,
                    "update_register_table": 1,
                    "update_register_values": 1,
                    "update_registers": 3,
                    "update_settings": 3,
                    "update_values": 1
                },
                "_DAT_40010400": {
                    "data_register1": 1
                },
                "_DAT_40010404": {
                    "data_register2": 1
                },
                "_DAT_40010408": {
                    "data_register3": 1
                },
                "_DAT_4001040c": {
                    "data_register4": 1
                },
                "_DAT_40021018": {
                    "main_control_register": 1
                },
                "iVar7": {
                    "bit_index": 1,
                    "bit_offset": 5,
                    "bit_pos": 1,
                    "bit_shift": 6,
                    "index": 2,
                    "index1": 1,
                    "lower_bits": 1,
                    "mod_value": 1,
                    "offset": 1,
                    "offset1": 1,
                    "register_index": 2,
                    "shift": 2,
                    "shift_amount": 4,
                    "shift_amount1": 1,
                    "shift_amt": 1,
                    "shift_value_1": 1
                },
                "iVar8": {
                    "array_index": 1,
                    "bit_shift_val": 1,
                    "index": 4,
                    "index2": 1,
                    "index_offset": 1,
                    "index_value": 1,
                    "offset2": 1,
                    "reg_index": 1,
                    "register_index": 16,
                    "register_offset": 1,
                    "register_value": 1,
                    "shift_amount2": 1,
                    "shift_value_2": 1
                },
                "param_1": {
                    "bits_to_update": 1,
                    "config_bits": 1,
                    "config_data": 1,
                    "config_list": 1,
                    "config_registers": 1,
                    "flag_array": 2,
                    "flags": 2,
                    "memory_array": 1,
                    "memory_map": 1,
                    "output": 1,
                    "output_array": 3,
                    "output_data": 1,
                    "output_flags": 2,
                    "output_parameters": 1,
                    "output_params": 1,
                    "output_settings": 1,
                    "register1": 1,
                    "register_addresses": 1,
                    "register_array_1": 1,
                    "register_table": 1,
                    "register_values": 1,
                    "registers": 1,
                    "settings": 1,
                    "settings_ptr": 1,
                    "target_flags": 1,
                    "target_values": 1
                },
                "param_2": {
                    "bit_flags": 1,
                    "command_values": 1,
                    "config": 1,
                    "data_array": 2,
                    "flags": 1,
                    "input": 2,
                    "input_array": 4,
                    "input_data": 5,
                    "input_flags": 2,
                    "input_parameters": 1,
                    "input_params": 1,
                    "input_ptr": 1,
                    "input_registers": 1,
                    "input_settings": 1,
                    "input_values": 1,
                    "register2": 1,
                    "register_array_2": 1,
                    "register_values": 1,
                    "source_flags": 1,
                    "source_values": 1,
                    "update_data": 1
                },
                "puVar1": {
                    "bits_ptr": 1,
                    "config_bits_ptr": 1,
                    "config_ptr": 2,
                    "config_reg_ptr": 1,
                    "current_table_entry": 1,
                    "flag_pointer": 1,
                    "output_flag_ptr": 1,
                    "output_pointer": 2,
                    "output_ptr": 4,
                    "register_ptr": 1,
                    "target": 1,
                    "target_ptr": 1,
                    "updated_register": 1
                },
                "uVar2": {
                    "bit_flag": 1,
                    "bit_mask": 26,
                    "bit_value": 1,
                    "flag": 1,
                    "mask": 2
                },
                "uVar3": {
                    "bit_check": 8,
                    "bit_mask": 1,
                    "bit_result": 2,
                    "bit_value": 6,
                    "bitwise_and_result": 1,
                    "bitwise_result": 1,
                    "flag": 1,
                    "flag_mask": 2,
                    "flag_result": 1,
                    "input_array_bit": 1,
                    "input_bit": 1,
                    "input_bits": 1,
                    "input_flag": 1,
                    "input_mask": 1,
                    "input_param_bit": 1,
                    "input_reg_mask": 1,
                    "input_value": 1
                },
                "uVar4": {
                    "bit_index": 17,
                    "bit_position": 2,
                    "counter": 1,
                    "i": 2,
                    "index": 6,
                    "loop_counter": 1,
                    "param_index": 1,
                    "value4": 1
                },
                "uVar5": {
                    "code_value": 1,
                    "command": 1,
                    "condition_value": 1,
                    "data_value": 1,
                    "flag_type": 1,
                    "flag_value": 3,
                    "input_value": 1,
                    "instruction": 2,
                    "opcode": 9,
                    "param_value": 1,
                    "secondary_flag": 1,
                    "update_code": 1,
                    "value": 5,
                    "value5": 1,
                    "value_at_index": 1,
                    "value_type": 1
                },
                "uVar6": {
                    "config_value": 2,
                    "modified_data_value": 1,
                    "new_bit_value": 1,
                    "new_instructions": 1,
                    "new_value": 9,
                    "offset": 3,
                    "result_value": 1,
                    "update_value": 4,
                    "updated_flag_value": 1,
                    "updated_value": 6,
                    "value": 1,
                    "value6": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004bb0",
                "FUN_08004974",
                "FUN_08004f4c"
            ],
            "code": "\n\n\nvoid update_flags_and_registers_08002624(uint *output_array,uint *input_data)\n\n{\n  uint *output_ptr;\n  uint bit_mask;\n  uint bit_check;\n  uint bit_index;\n  uint opcode;\n  uint new_value;\n  int bit_shift;\n  int register_index;\n  \n  new_value = 0;\n  bit_index = 0;\n  do {\n    if (0xf < bit_index) {\n      return;\n    }\n    bit_mask = 1 << (bit_index & 0xff);\n    bit_check = *input_data & bit_mask;\n    if (bit_mask == bit_check) {\n      opcode = input_data[1];\n      if (opcode == 0x12) {\n        new_value = input_data[3] + 0xc;\n      }\n      else if (opcode < 0x13) {\n        if (opcode == 2) {\n          new_value = input_data[3] + 8;\n        }\n        else if (opcode < 3) {\n          if (opcode == 0) goto LAB_08002776;\n          if (opcode == 1) {\n            new_value = input_data[3];\n          }\n        }\n        else if (opcode == 3) {\n          new_value = 0;\n        }\n        else if (opcode == 0x11) {\n          new_value = input_data[3] + 4;\n        }\n      }\n      else if (opcode == 0x10210000) {\nLAB_08002776:\n        if (input_data[2] == 0) {\n          new_value = 4;\n        }\n        else if (input_data[2] == 1) {\n          output_array[4] = bit_mask;\n          new_value = 8;\n        }\n        else {\n          output_array[5] = bit_mask;\n          new_value = 8;\n        }\n      }\n      else if (opcode < 0x10210001) {\n        if ((opcode == 0x10110000) || (opcode == 0x10120000)) goto LAB_08002776;\n      }\n      else if ((opcode == 0x10310000) || ((opcode == 0x10320000 || (opcode == 0x10220000))))\n      goto LAB_08002776;\n      bit_mask = bit_index;\n      output_ptr = output_array;\n      if (0xff < bit_check) {\n        bit_mask = bit_index - 8;\n        output_ptr = output_array + 1;\n      }\n      *output_ptr = *output_ptr & ~(0xf << (bit_mask << 2 & 0xff)) | new_value << (bit_mask << 2 & 0xff);\n      if ((input_data[1] & 0x10000000) != 0) {\n        _DAT_40021018 = _DAT_40021018 | 1;\n        bit_shift = (bit_index & 3) << 2;\n        if (output_array == (uint *)0x40010800) {\n          register_index = 0;\n        }\n        else if (output_array == (uint *)0x40010c00) {\n          register_index = 1;\n        }\n        else if (output_array == (uint *)0x40011000) {\n          register_index = 2;\n        }\n        else if (output_array == (uint *)0x40011400) {\n          register_index = 3;\n        }\n        else {\n          register_index = 4;\n        }\n        *(uint *)(((bit_index >> 2) + 2) * 4 + 0x40010000) =\n             *(uint *)(((bit_index >> 2) + 2) * 4 + 0x40010000) & ~(0xf << bit_shift) | register_index << bit_shift;\n        if ((input_data[1] & 0x10000) == 0) {\n          _DAT_40010400 = _DAT_40010400 & ~bit_check;\n        }\n        else {\n          _DAT_40010400 = _DAT_40010400 | bit_check;\n        }\n        if ((input_data[1] & 0x20000) == 0) {\n          _DAT_40010404 = _DAT_40010404 & ~bit_check;\n        }\n        else {\n          _DAT_40010404 = _DAT_40010404 | bit_check;\n        }\n        if ((input_data[1] & 0x100000) == 0) {\n          _DAT_40010408 = _DAT_40010408 & ~bit_check;\n        }\n        else {\n          _DAT_40010408 = _DAT_40010408 | bit_check;\n        }\n        if ((input_data[1] & 0x200000) == 0) {\n          _DAT_4001040c = _DAT_4001040c & ~bit_check;\n        }\n        else {\n          _DAT_4001040c = bit_check | _DAT_4001040c;\n        }\n      }\n    }\n    bit_index = bit_index + 1;\n  } while( true );\n}\n\n",
            "current_name": "update_flags_and_registers_08002624",
            "entrypoint": "0x08002624",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002624": "update_flags_and_registers_08002624",
                "iVar7": "bit_shift",
                "iVar8": "register_index",
                "param_1": "output_array",
                "param_2": "input_data",
                "puVar1": "output_ptr",
                "uVar2": "bit_mask",
                "uVar3": "bit_check",
                "uVar4": "bit_index",
                "uVar5": "opcode",
                "uVar6": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002810": {
            "additional_data": {
                "8": {
                    "mask": 1
                },
                "FUN_08002810": {
                    "check_bit": 14,
                    "check_bit_and_return_result": 1,
                    "check_bit_flag": 1,
                    "check_bit_in_param": 1,
                    "check_bit_presence": 1,
                    "check_bit_set": 1,
                    "check_bitwise_intersection": 1,
                    "check_bitwise_match": 1,
                    "check_flag": 4,
                    "check_flag_collision": 1,
                    "check_param_and_flag": 1,
                    "check_param_bit": 1,
                    "check_param_validity": 1,
                    "validate_param": 1,
                    "validates_param": 1
                },
                "param_1": {
                    "addr": 1,
                    "address": 2,
                    "base_address": 1,
                    "bit_vector": 1,
                    "data": 2,
                    "data_address": 1,
                    "data_offset": 1,
                    "flag_address": 1,
                    "index": 1,
                    "input": 1,
                    "input_1": 1,
                    "input_address": 2,
                    "input_flag": 1,
                    "input_value": 5,
                    "num": 1,
                    "num1": 1,
                    "object_address": 1,
                    "offset": 2,
                    "param": 1,
                    "param_address": 1,
                    "value": 2
                },
                "param_2": {
                    "bit_mask": 8,
                    "bitmask": 3,
                    "flag": 4,
                    "flag_mask": 1,
                    "flags": 2,
                    "input_2": 1,
                    "input_value": 1,
                    "mask": 4,
                    "mask_value": 1,
                    "num2": 1,
                    "value": 3,
                    "value_to_check": 1
                },
                "return": {
                    "is_flag_set": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004c48"
            ],
            "code": "\nundefined4 check_bit_presence_08002810(int input_value,uint bit_mask)\n\n{\n  if ((bit_mask & *(uint *)(input_value + 8)) == 0) {\n    is_flag_set 0;\n  }\n  is_flag_set 1;\n}\n\n",
            "current_name": "check_bit_presence_08002810",
            "entrypoint": "0x08002810",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002810": "check_bit_presence_08002810",
                "param_1": "input_value",
                "param_2": "bit_mask",
                "return": "is_flag_set"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800281e": {
            "additional_data": {
                "FUN_0800281e": {
                    "assign_value_to_param": 1,
                    "set_param": 2,
                    "set_param_value": 13,
                    "set_parameter": 1,
                    "set_parameter_value": 6,
                    "set_value": 1,
                    "set_value_based_on_condition": 1,
                    "set_value_in_memory": 1,
                    "store_data": 1,
                    "store_param_to_address": 1,
                    "store_param_value": 1,
                    "update_parameter_value": 2
                },
                "data_address": {
                    "data": 1
                },
                "param_1": {
                    "address": 2,
                    "base_address": 8,
                    "data_pointer": 1,
                    "data_struct_ptr": 1,
                    "obj_address": 2,
                    "object": 1,
                    "object_address": 12,
                    "object_pointer": 1,
                    "object_ptr": 1,
                    "parameter_address": 1,
                    "target_address": 1
                },
                "param_2": {
                    "data": 1,
                    "new_parameter_value": 1,
                    "new_value": 8,
                    "value": 21
                },
                "param_3": {
                    "condition": 1,
                    "flag": 3,
                    "is_shift": 2,
                    "is_shifted": 16,
                    "shift_bits": 1,
                    "shift_flag": 5,
                    "shift_value": 2,
                    "use_shift": 1
                },
                "target_value_address": {
                    "value_location": 1
                },
                "value": {
                    "new_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004c30"
            ],
            "code": "\nvoid set_param_value_0800281e(int object_address,int value,int is_shifted)\n\n{\n  if (is_shifted == 0) {\n    *(int *)(object_address + 0x10) = value << 0x10;\n    return;\n  }\n  *(int *)(object_address + 0x10) = value;\n  return;\n}\n\n",
            "current_name": "set_param_value_0800281e",
            "entrypoint": "0x0800281e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800281e": "set_param_value_0800281e",
                "param_1": "object_address",
                "param_2": "value",
                "param_3": "is_shifted"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800282c": {
            "additional_data": {
                "FUN_0800282c": {
                    "check_and_execute_if_needed": 1,
                    "execute_if_bit_set": 1,
                    "execute_if_condition_met": 1,
                    "execute_if_flag_set": 3,
                    "execute_if_param_bit_set": 1,
                    "execute_if_param_set": 3,
                    "execute_if_parameter_set": 1,
                    "execute_if_set": 1,
                    "execute_main_if_flag_set": 1,
                    "update_and_execute_main": 1,
                    "update_and_execute_main_function": 8,
                    "update_dat_variable_if_param_valid": 1,
                    "update_data_and_execute": 1,
                    "update_data_and_execute_main": 4,
                    "update_data_and_execute_main_function": 1,
                    "update_data_if_bit_set": 1,
                    "update_data_if_flag_set": 1
                },
                "_DAT_40010414": {
                    "current_data": 1,
                    "current_value": 1,
                    "dat_variable": 1,
                    "data": 4,
                    "data_flag": 1,
                    "data_register": 2,
                    "data_value": 1,
                    "data_var_1": 1,
                    "data_variable": 4,
                    "existing_data": 1,
                    "existing_flags": 1,
                    "flag": 1,
                    "flag_register": 2,
                    "flag_value": 1,
                    "global_flag": 1,
                    "global_flags": 1,
                    "original_flag": 1,
                    "shared_flags": 1,
                    "updated_data": 1,
                    "updated_variable": 1
                },
                "check_and_execute_main_function_080060e4": {
                    "check_and_execute_main_function": 1,
                    "execute_main": 2,
                    "execute_main_function": 6,
                    "execute_main_function_if_dat_variable_valid": 1,
                    "execute_main_function_if_flags_set": 1,
                    "execute_main_function_if_needed": 1,
                    "execute_main_if_required": 1,
                    "run_main_function": 2
                },
                "param_1": {
                    "bit_mask": 3,
                    "condition": 1,
                    "data": 2,
                    "flag": 6,
                    "flags": 3,
                    "flags_to_update": 1,
                    "input_param": 1,
                    "input_value": 1,
                    "mask": 1,
                    "new_data": 1,
                    "new_value": 3,
                    "param": 3,
                    "parameter": 1,
                    "update_value": 1,
                    "updated_param": 2,
                    "value": 1
                }
            },
            "called": [
                "FUN_080060e4"
            ],
            "calling": [],
            "code": "\n\n\nvoid update_data_and_execute_main_function_0800282c(uint flag)\n\n{\n  if ((_DAT_40010414 & flag) != 0) {\n    _DAT_40010414 = flag;\n    execute_main_function();\n  }\n  return;\n}\n\n",
            "current_name": "update_data_and_execute_main_function_0800282c",
            "entrypoint": "0x0800282c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800282c": "update_data_and_execute_main_function_0800282c",
                "check_and_execute_main_function_080060e4": "execute_main_function",
                "param_1": "flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002848": {
            "additional_data": {
                "0x10": {
                    "result": 2
                },
                "0x11": {
                    "value": 2
                },
                "0x14": {
                    "condition": 1,
                    "index": 1
                },
                "0x3d": {
                    "character2": 1,
                    "second_char": 1
                },
                "0x3e": {
                    "char_index": 1,
                    "character": 1
                },
                "FUN_08002848": {
                    "configure_flags": 1,
                    "extract_flags": 1,
                    "set_flag_based_on_condition": 1,
                    "set_flag_based_on_conditions": 4,
                    "set_flag_value": 2,
                    "set_param_value": 1,
                    "set_parameter_value": 1,
                    "update_configuration": 1,
                    "update_device_configuration": 1,
                    "update_flag": 2,
                    "update_flag_value": 2,
                    "update_flags": 2,
                    "update_flags_based_on_input": 1,
                    "update_param": 1,
                    "update_param_value": 1,
                    "update_parameter": 1,
                    "update_parameter_flags": 1,
                    "update_register_value": 1,
                    "update_settings": 1,
                    "update_status": 3,
                    "update_status_based_on_conditions": 1,
                    "update_value_and_flags": 1
                },
                "array": {
                    "array": 1
                },
                "param_1": {
                    "array": 1,
                    "config_params": 1,
                    "configuration": 1,
                    "data": 5,
                    "device_config": 1,
                    "flag": 1,
                    "flags": 2,
                    "input_array": 2,
                    "input_buffer": 1,
                    "input_data": 1,
                    "input_params": 2,
                    "param": 1,
                    "param_array": 2,
                    "parameter": 2,
                    "parameters": 3,
                    "params": 1,
                    "register": 1,
                    "settings": 1,
                    "status": 2
                },
                "settings": {
                    "settings": 1
                },
                "updateConfiguration": {
                    "update_configuration": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080033b8"
            ],
            "code": "\nundefined4 update_flags_based_on_input_08002848(int *data)\n\n{\n  if (*(char *)((int)data + 0x3e) == '@') {\n    if (data[0x14] == 0) {\n      *(uint *)(*data + 0x10) = data[0x11] & 0xfe;\n    }\n    else {\n      *(uint *)(*data + 0x10) = data[0x11] & 0xffU | 1;\n    }\n  }\n  else if (data[4] == 0x4000) {\n    if (*(char *)((int)data + 0x3d) == '!') {\n      *(uint *)(*data + 0x10) = data[0x11] & 0xfe;\n    }\n    else {\n      *(uint *)(*data + 0x10) = data[0x11] & 0xffU | 1;\n    }\n  }\n  else if (data[0x14] == 0) {\n    *(uint *)(*data + 0x10) = (uint)(data[0x11] << 0x10) >> 0x17 & 6 | 0xf0;\n  }\n  else if (data[0x14] == 1) {\n    *(uint *)(*data + 0x10) = (uint)(data[0x11] << 0x10) >> 0x17 & 6 | 0xf1;\n  }\n  return 0;\n}\n\n",
            "current_name": "update_flags_based_on_input_08002848",
            "entrypoint": "0x08002848",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002848": "update_flags_based_on_input_08002848",
                "param_1": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080028d2": {
            "additional_data": {
                "0x10": {
                    "offset": 1
                },
                "0xff": {
                    "mask": 5
                },
                "FUN_080028d2": {
                    "assign_parameter_to_memory": 1,
                    "convert_and_store_byte": 1,
                    "decode_byte": 1,
                    "extract_and_assign_byte": 1,
                    "extract_byte_from_array": 1,
                    "set_byte_value": 3,
                    "set_byte_value_from_param_and_store": 1,
                    "set_memory_value": 1,
                    "set_param_value": 8,
                    "set_parameter_value": 1,
                    "set_uint_value_from_parameter": 1,
                    "set_value_from_array": 1,
                    "store_byte_from_parameter_array": 1,
                    "update_param_value": 1,
                    "update_parameter": 2,
                    "update_parameter_value": 1,
                    "update_value": 1,
                    "update_value_in_memory": 2,
                    "write_byte_to_memory": 1,
                    "write_to_memory": 1
                },
                "PTR_size": {
                    "size_pointer": 1
                },
                "PTR_value": {
                    "value_pointer": 1
                },
                "param_1": {
                    "array": 2,
                    "input": 1,
                    "input_array": 7,
                    "int_ptr": 1,
                    "memory_address": 2,
                    "memory_location": 1,
                    "memory_pointer": 1,
                    "param_array": 6,
                    "param_list": 1,
                    "parameter": 1,
                    "parameter_array": 6,
                    "value_array": 1
                },
                "param_array": {
                    "parameter_array": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080033b8"
            ],
            "code": "\nundefined4 set_byte_value_from_param_and_store_080028d2(int *input_array)\n\n{\n  *(uint *)(*input_array + 0x10) = input_array[0x11] & 0xff;\n  return 0;\n}\n\n",
            "current_name": "set_byte_value_from_param_and_store_080028d2",
            "entrypoint": "0x080028d2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080028d2": "set_byte_value_from_param_and_store_080028d2",
                "param_1": "input_array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080028de": {
            "additional_data": {
                "0x100": {
                    "flag_1": 1
                },
                "0x1000": {
                    "flag_5": 1
                },
                "0x12": {
                    "magic_value_2": 1,
                    "ptr2": 1
                },
                "0x200": {
                    "flag_2": 1
                },
                "0x4": {
                    "value_1": 1
                },
                "0x400": {
                    "flag_3": 1
                },
                "0x8": {
                    "value_2": 1
                },
                "0x800": {
                    "flag_4": 1
                },
                "0xffff0000": {
                    "compare_value": 1,
                    "magic_value": 1
                },
                "0xfffffbff": {
                    "mask_flag": 1
                },
                "FUN_080028de": {
                    "apply_flags_to_param": 1,
                    "check_and_update_flags": 1,
                    "process_input": 3,
                    "process_param": 1,
                    "set_flag": 3,
                    "set_flags_based_on_conditions": 1,
                    "update_flag": 1,
                    "update_flags": 13,
                    "update_flags_based_on_conditions": 1,
                    "update_flags_based_on_param": 1,
                    "update_permission_flags": 1,
                    "update_permissions": 3
                },
                "param_1": {
                    "arguments": 1,
                    "input": 3,
                    "input_array": 1,
                    "inputs": 1,
                    "param": 1,
                    "param_array": 1,
                    "parameter": 1,
                    "parameters": 15,
                    "params": 6
                },
                "puVar1": {
                    "current_param": 2,
                    "current_value": 2,
                    "data_pointer": 1,
                    "flag": 2,
                    "flag_ptr": 3,
                    "flag_value": 1,
                    "param_a": 1,
                    "perm_value": 1,
                    "pointer": 1,
                    "pointer_var": 2,
                    "pointer_var1": 1,
                    "pointer_variable": 1,
                    "ptr": 3,
                    "ptr_var1": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 1,
                    "temp_var1": 1,
                    "value": 5,
                    "value_ptr": 1
                },
                "uint": {
                    "u_int": 1,
                    "unsigned_int": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080033b8"
            ],
            "code": "\nundefined4 update_flags_based_on_conditions_080028de(unsigned_int **parameters)\n\n{\n  unsigned_int *value;\n  \n  value = parameters[0xb];\n  if ((*(char *)((int)parameters + 0x3d) == '\\\"') &&\n     ((parameters[0x14] != (unsigned_int *)0x0 || (*(char *)((int)parameters + 0x3e) != '@')))) {\n    if ((parameters[0x14] == (unsigned_int *)0x0) && (parameters[4] == (unsigned_int *)0xc000)) {\n      **parameters = **parameters | 0x100;\n      parameters[0x14] = (unsigned_int *)((int)parameters[0x14] + 1);\n    }\n    else {\n      if (*(short *)((int)parameters + 0x2a) == 0) {\n        **parameters = **parameters | 0x200;\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 1) {\n        if (value == (unsigned_int *)0xffff0000) {\n          **parameters = **parameters & 0xfffffbff;\n          value = *parameters;\n          if ((value[1] & 0x800) == 0) {\n            *value = *value | 0x200;\n          }\n          else {\n            *value = *value & 0xfffffbff;\n          }\n        }\n        else if (((value == (unsigned_int *)0x4) || (value == (unsigned_int *)0x8)) ||\n                (parameters[0xc] == (unsigned_int *)0x12)) {\n          **parameters = **parameters & 0xfffffbff;\n          **parameters = **parameters | 0x200;\n        }\n        else if (parameters[0xb] == (unsigned_int *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n        }\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 2) {\n        if (parameters[0xb] == (unsigned_int *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters | 0x800;\n          **parameters = **parameters & 0xfffffbff;\n        }\n        value = *parameters;\n        if ((value[1] & 0x800) != 0) {\n          value[1] = value[1] | 0x1000;\n        }\n      }\n      else {\n        **parameters = **parameters | 0x400;\n        value = *parameters;\n        if ((value[1] & 0x800) != 0) {\n          value[1] = value[1] | 0x1000;\n        }\n      }\n      parameters[0x14] = (unsigned_int *)0x0;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "update_flags_based_on_conditions_080028de",
            "entrypoint": "0x080028de",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080028de": "update_flags_based_on_conditions_080028de",
                "param_1": "parameters",
                "puVar1": "value",
                "uint": "unsigned_int"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ab8": {
            "additional_data": {
                "0x2a": {
                    "num_elements": 1
                },
                "9": {
                    "array_index": 1
                },
                "FUN_08002ab8": {
                    "decode_and_decrement": 1,
                    "extract_and_decrement": 1,
                    "extract_byte_and_update_pointer": 1,
                    "process_buffer": 1,
                    "process_data": 1,
                    "process_packet": 1,
                    "process_param": 1,
                    "read_byte_and_update": 1,
                    "update_array_element": 1,
                    "update_byte": 1,
                    "update_byte_array": 1,
                    "update_byte_in_buffer": 1,
                    "update_data": 7,
                    "update_data_pointer": 1,
                    "update_param": 1,
                    "update_param_and_decrement_count": 1,
                    "update_pointer": 2,
                    "update_pointer_and_decrement": 1,
                    "update_value": 5,
                    "update_value_in_memory": 1
                },
                "param_1": {
                    "array": 2,
                    "array_to_update": 1,
                    "buffer": 2,
                    "data": 6,
                    "data_array": 2,
                    "data_pointer": 2,
                    "input_array": 5,
                    "input_data": 1,
                    "memory_address": 1,
                    "packet_data": 1,
                    "param": 1,
                    "param_array": 2,
                    "parameter": 1,
                    "pointer": 3,
                    "values": 1
                },
                "pbVar1": {
                    "byte_array": 1,
                    "byte_element": 1,
                    "byte_pointer": 12,
                    "byte_ptr": 11,
                    "current_byte": 4,
                    "element_ptr": 1,
                    "packet_buffer": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080033b8"
            ],
            "code": "\nundefined4 update_data_pointer_08002ab8(int *data)\n\n{\n  byte *byte_pointer;\n  \n  if (*(short *)((int)data + 0x2a) != 0) {\n    byte_pointer = (byte *)data[9];\n    data[9] = (int)(byte_pointer + 1);\n    *(uint *)(*data + 0x10) = (uint)*byte_pointer;\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "current_name": "update_data_pointer_08002ab8",
            "entrypoint": "0x08002ab8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002ab8": "update_data_pointer_08002ab8",
                "param_1": "data",
                "pbVar1": "byte_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ad8": {
            "additional_data": {
                "0": {
                    "success": 1
                },
                "0x2a": {
                    "short_value": 1
                },
                "FUN_08002ad8": {
                    "decrement_counter": 1,
                    "increment_and_copy": 1,
                    "process_data": 1,
                    "update_array_and_decrease_count": 1,
                    "update_array_and_decrement_counter": 1,
                    "update_array_at_index": 1,
                    "update_array_element": 3,
                    "update_buffer": 2,
                    "update_char_array": 1,
                    "update_char_value": 1,
                    "update_character": 2,
                    "update_character_info": 1,
                    "update_data": 4,
                    "update_data_array": 1,
                    "update_element": 1,
                    "update_param_value": 1,
                    "update_parameter_and_decrement": 1,
                    "update_parameter_and_decrement_counter": 1,
                    "update_parameter_value": 3,
                    "update_value": 2,
                    "update_value_and_decrement": 1
                },
                "param_1": {
                    "array": 9,
                    "buffer": 2,
                    "char_array": 2,
                    "character": 2,
                    "character_info": 1,
                    "counter": 1,
                    "data": 6,
                    "data_array": 1,
                    "input_array": 1,
                    "param_array": 3,
                    "parameter": 1,
                    "parameter_list": 2
                },
                "puVar1": {
                    "array_element": 2,
                    "buffer_ptr": 1,
                    "byte_pointer": 1,
                    "character_address": 1,
                    "counter_ptr": 1,
                    "current_element": 3,
                    "current_pointer": 1,
                    "dest_ptr": 1,
                    "destination": 2,
                    "element": 1,
                    "new_ptr": 1,
                    "next_address": 1,
                    "next_byte": 1,
                    "next_element": 1,
                    "pointer": 3,
                    "prev_ptr": 1,
                    "ptr": 1,
                    "ptr_data": 1,
                    "ptr_element": 1,
                    "ptr_to_char": 1,
                    "ptr_to_element": 1,
                    "ptr_to_update": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 1,
                    "updated_parameter": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080033b8"
            ],
            "code": "\nundefined4 update_value_and_decrement_08002ad8(int *array)\n\n{\n  undefined *pointer;\n  \n  if (*(short *)((int)array + 0x2a) != 0) {\n    pointer = (undefined *)array[9];\n    array[9] = (int)(pointer + 1);\n    *pointer = (char)*(undefined4 *)(*array + 0x10);\n    *(short *)((int)array + 0x2a) = *(short *)((int)array + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "current_name": "update_value_and_decrement_08002ad8",
            "entrypoint": "0x08002ad8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002ad8": "update_value_and_decrement_08002ad8",
                "param_1": "array",
                "puVar1": "pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002af8": {
            "additional_data": {
                "FUN_08002af8": {
                    "check_and_initialize": 1,
                    "handle_function": 1,
                    "handle_input_validation": 1,
                    "initialize_data": 2,
                    "initialize_params": 1,
                    "parse_command": 1,
                    "parse_input": 2,
                    "parse_params": 1,
                    "process_data": 3,
                    "process_function": 1,
                    "process_input": 3,
                    "process_input_data": 3,
                    "process_param": 1,
                    "process_parameters": 4,
                    "update_params": 2,
                    "validate_and_set_parameters": 1,
                    "validate_input": 2,
                    "validate_inputs": 1
                },
                "param_1": {
                    "command": 1,
                    "config": 1,
                    "config_data": 1,
                    "data": 1,
                    "data_array": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "data_struct": 1,
                    "dictionary": 1,
                    "func_params": 1,
                    "function_ptr": 1,
                    "input_data": 2,
                    "input_param": 1,
                    "input_params": 2,
                    "input_ptr": 2,
                    "input_ptr1": 1,
                    "input_struct": 1,
                    "param1": 1,
                    "param_array": 2,
                    "param_list": 1,
                    "param_pointer": 1,
                    "param_ptr": 1,
                    "parameter1": 1,
                    "parameter_list": 2,
                    "parameters": 1,
                    "params": 1
                },
                "param_2": {
                    "arg1": 3,
                    "data_1": 1,
                    "data_pointer": 3,
                    "data_ptr": 3,
                    "input_array": 2,
                    "input_data": 1,
                    "input_param1": 1,
                    "input_ptr2": 1,
                    "option": 1,
                    "optional_data1": 1,
                    "output_param": 1,
                    "param2": 3,
                    "param_2": 1,
                    "param_pointer": 1,
                    "param_ptr": 3,
                    "parameter2": 1,
                    "source": 1,
                    "target": 1,
                    "value_ptr": 2
                },
                "param_3": {
                    "arg2": 3,
                    "array_length": 1,
                    "data_2": 1,
                    "data_size": 3,
                    "input_param2": 1,
                    "input_size": 3,
                    "length": 3,
                    "optional_data2": 1,
                    "param3": 3,
                    "param_3": 1,
                    "param_length": 1,
                    "param_size": 1,
                    "parameter3": 1,
                    "size": 8
                },
                "param_4": {
                    "additional_data": 1,
                    "arg3": 3,
                    "buffer": 1,
                    "data": 1,
                    "data_3": 1,
                    "data_ptr": 2,
                    "destination": 1,
                    "flag_ptr": 1,
                    "info_pointer": 1,
                    "input_param3": 1,
                    "input_ptr3": 1,
                    "metadata_ptr": 1,
                    "optional_data3": 1,
                    "output": 1,
                    "output_array": 2,
                    "output_data": 1,
                    "output_pointer": 1,
                    "param4": 3,
                    "param_4": 1,
                    "param_buffer": 1,
                    "parameter4": 1,
                    "result_ptr": 3,
                    "target": 1
                },
                "puVar2": {
                    "current_param": 1,
                    "first_param_value": 1,
                    "first_pointer": 1,
                    "flag_ptr": 1,
                    "flag_value": 1,
                    "flags": 1,
                    "flags_ptr": 2,
                    "param_ptr": 1,
                    "pointer": 1,
                    "pointer_var": 2,
                    "pointer_variable": 1,
                    "ptr": 9,
                    "ptr_to_data": 1,
                    "ptr_to_input_data": 1,
                    "ptr_var": 2,
                    "temp_ptr": 4,
                    "value_ptr": 1
                },
                "uVar1": {
                    "result": 22,
                    "result_status": 1,
                    "return_value": 4,
                    "status": 4
                }
            },
            "called": [],
            "calling": [
                "FUN_08004e74"
            ],
            "code": "\nundefined4 process_input_data_08002af8(uint **input_ptr,uint *param_ptr,int size,uint *param4)\n\n{\n  undefined4 result;\n  uint *ptr;\n  \n  if (*(char *)((int)input_ptr + 0x3d) == '(') {\n    if (param_ptr == (uint *)0x0) {\n      result = 1;\n    }\n    else if (size == 0) {\n      result = 1;\n    }\n    else if (*(char *)(input_ptr + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(input_ptr + 0xf) = 1;\n      ptr = *input_ptr;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **input_ptr = **input_ptr & 0xfffff7ff;\n      *(undefined *)((int)input_ptr + 0x3d) = 0x29;\n      *(undefined *)((int)input_ptr + 0x3e) = 0x20;\n      result = 0;\n      input_ptr[0x10] = (uint *)0x0;\n      input_ptr[9] = param_ptr;\n      *(short *)((int)input_ptr + 0x2a) = (short)size;\n      input_ptr[0xb] = param4;\n      *(undefined2 *)(input_ptr + 10) = *(undefined2 *)((int)input_ptr + 0x2a);\n      *(undefined *)(input_ptr + 0xf) = 0;\n      (*input_ptr)[1] = (*input_ptr)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "current_name": "process_input_data_08002af8",
            "entrypoint": "0x08002af8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002af8": "process_input_data_08002af8",
                "param_1": "input_ptr",
                "param_2": "param_ptr",
                "param_3": "size",
                "param_4": "param4",
                "puVar2": "ptr",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002b84": {
            "additional_data": {
                "FUN_08002b84": {
                    "check_and_initialize": 3,
                    "check_and_set_flags": 1,
                    "check_input_and_process": 1,
                    "check_input_conditions": 1,
                    "handle_function": 1,
                    "initialize_data": 4,
                    "parse_input": 5,
                    "parse_parameters": 2,
                    "process_data": 2,
                    "process_input_parameters": 1,
                    "process_parameters": 2,
                    "update_configuration": 1,
                    "validate_and_initialize": 1,
                    "validate_input": 3,
                    "validate_parameters": 2,
                    "verify_inputs": 1
                },
                "param_1": {
                    "config": 1,
                    "configuration_data": 1,
                    "data": 2,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "function_struct": 1,
                    "input": 2,
                    "input_buffer": 1,
                    "input_data": 3,
                    "input_list": 1,
                    "input_pointer": 1,
                    "input_ptr": 1,
                    "input_struct": 1,
                    "param_array": 3,
                    "param_list": 3,
                    "param_ptr": 1,
                    "parameter_array": 2,
                    "parameter_list": 2,
                    "params": 1,
                    "ptr_array": 1
                },
                "param_2": {
                    "config_data": 1,
                    "config_value": 1,
                    "data": 3,
                    "data_pointer": 2,
                    "data_ptr": 3,
                    "input_array": 2,
                    "input_param": 1,
                    "input_ptr": 2,
                    "optional_param": 2,
                    "param1": 1,
                    "param2": 4,
                    "param_ptr": 4,
                    "param_ref": 1,
                    "param_value": 1,
                    "pointer1": 1,
                    "value": 1,
                    "value_ptr": 1
                },
                "param_3": {
                    "array_length": 1,
                    "count": 4,
                    "data_length": 2,
                    "data_size": 1,
                    "input_size": 2,
                    "length": 5,
                    "optional_param_count": 1,
                    "param2": 1,
                    "param3": 4,
                    "param_count": 2,
                    "param_length": 1,
                    "param_size": 2,
                    "size": 5
                },
                "param_4": {
                    "additional_data": 1,
                    "buffer": 2,
                    "data": 1,
                    "data_array": 1,
                    "data_ptr": 1,
                    "extra_data_pointer": 1,
                    "flag_ptr": 1,
                    "output": 2,
                    "output_array": 2,
                    "output_data": 1,
                    "output_param": 2,
                    "output_ptr": 2,
                    "param3": 1,
                    "param4": 4,
                    "param_array": 1,
                    "param_flag": 1,
                    "param_ptr2": 1,
                    "pointer2": 1,
                    "pointer_to_data": 1,
                    "result_buffer": 1,
                    "result_ptr": 3
                },
                "puVar2": {
                    "buffer_pointer": 1,
                    "flag_ptr": 2,
                    "pointer": 3,
                    "pointer1": 1,
                    "pointer3": 1,
                    "pointer_value": 1,
                    "pointer_var": 3,
                    "ptr": 9,
                    "ptr1": 1,
                    "ptr_param_list": 1,
                    "ptr_val": 1,
                    "ptr_var": 2,
                    "temp_ptr": 5
                },
                "uVar1": {
                    "result": 22,
                    "return_code": 1,
                    "return_value": 5,
                    "status": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_08004e74"
            ],
            "code": "\nundefined4 parse_input_08002b84(uint **param_list,uint *param_ptr,int size,uint *param4)\n\n{\n  undefined4 result;\n  uint *ptr;\n  \n  if (*(char *)((int)param_list + 0x3d) == '(') {\n    if (param_ptr == (uint *)0x0) {\n      result = 1;\n    }\n    else if (size == 0) {\n      result = 1;\n    }\n    else if (*(char *)(param_list + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(param_list + 0xf) = 1;\n      ptr = *param_list;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **param_list = **param_list & 0xfffff7ff;\n      *(undefined *)((int)param_list + 0x3d) = 0x2a;\n      *(undefined *)((int)param_list + 0x3e) = 0x20;\n      result = 0;\n      param_list[0x10] = (uint *)0x0;\n      param_list[9] = param_ptr;\n      *(short *)((int)param_list + 0x2a) = (short)size;\n      param_list[0xb] = param4;\n      *(undefined2 *)(param_list + 10) = *(undefined2 *)((int)param_list + 0x2a);\n      *(undefined *)(param_list + 0xf) = 0;\n      (*param_list)[1] = (*param_list)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "current_name": "parse_input_08002b84",
            "entrypoint": "0x08002b84",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002b84": "parse_input_08002b84",
                "param_1": "param_list",
                "param_2": "param_ptr",
                "param_3": "size",
                "param_4": "param4",
                "puVar2": "ptr",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002c10": {
            "additional_data": {
                "0x28": {
                    "opening_bracket": 1
                },
                "0x300": {
                    "bit_mask2": 1
                },
                "0x3d": {
                    "offset": 1
                },
                "0x400": {
                    "bit_mask1": 1
                },
                "FUN_08002c10": {
                    "initialize_data": 11,
                    "initialize_data_structure": 1,
                    "initialize_data_structures": 1,
                    "initialize_memory": 4,
                    "initialize_param": 1,
                    "initialize_params": 1,
                    "process_input": 1,
                    "reverse_and_update_flags": 1,
                    "set_flags": 1,
                    "set_flags_and_bits": 1,
                    "set_flags_and_values": 1,
                    "update_and_set_flags": 1,
                    "update_flags_and_values": 1,
                    "update_parameter": 1,
                    "update_parameters": 2,
                    "validate_input": 1,
                    "verify_and_set_flags": 1
                },
                "PTR_FUN_08002c10": {
                    "ptr_initialize_data": 1
                },
                "_undefined4": {
                    "status": 1
                },
                "param_1": {
                    "array_ptr": 1,
                    "data": 9,
                    "data_pointer": 4,
                    "data_ptr": 1,
                    "data_structure": 1,
                    "data_structures": 1,
                    "input_array": 1,
                    "input_ptr": 2,
                    "memory": 1,
                    "memory_block": 2,
                    "memory_pointer": 1,
                    "param": 1,
                    "parameter": 1,
                    "parameters": 3,
                    "params": 1,
                    "values": 1
                },
                "puVar1": {
                    "current_parameter": 1,
                    "current_ptr": 1,
                    "current_value": 1,
                    "first_element": 8,
                    "first_element_ptr": 1,
                    "first_memory_address": 1,
                    "first_variable": 1,
                    "memory_content": 1,
                    "param_pointer": 1,
                    "parameter_pointer": 1,
                    "pointer": 8,
                    "ptr": 1,
                    "ptr1": 1,
                    "ptr_param": 1,
                    "ptr_to_data": 1,
                    "ptr_to_data_structure": 1,
                    "ptr_var": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004ec4",
                "FUN_08004ef4"
            ],
            "code": "\nundefined4 initialize_data_structures_08002c10(uint **data)\n\n{\n  uint *first_element;\n  \n  if (*(char *)((int)data + 0x3d) != ' ') {\n    return 2;\n  }\n  *(undefined *)((int)data + 0x3d) = 0x28;\n  first_element = *data;\n  if ((*first_element & 1) == 0) {\n    *first_element = *first_element | 1;\n  }\n  **data = **data | 0x400;\n  (*data)[1] = (*data)[1] | 0x300;\n  return 0;\n}\n\n",
            "current_name": "initialize_data_structures_08002c10",
            "entrypoint": "0x08002c10",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002c10": "initialize_data_structures_08002c10",
                "param_1": "data",
                "puVar1": "first_element"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002c4e": {
            "called": [],
            "calling": [
                "FUN_08002efc",
                "FUN_08002db2"
            ],
            "code": "\nvoid FUNC_08002c4e(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08002c4e",
            "entrypoint": "0x08002c4e",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08002c4e": "FUNC_08002c4e"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08002c50": {
            "called": [],
            "calling": [
                "FUN_08002f9c",
                "FUN_0800306c"
            ],
            "code": "\nvoid FUNC_08002c50(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08002c50",
            "entrypoint": "0x08002c50",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08002c50": "FUNC_08002c50"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08002c52": {
            "called": [],
            "calling": [
                "FUN_08002c54",
                "FUN_08002d1c"
            ],
            "code": "\nvoid FUNC_08002c52(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08002c52",
            "entrypoint": "0x08002c52",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08002c52": "FUNC_08002c52"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08002c54": {
            "additional_data": {
                "FUNC_08002c52": {
                    "another_function": 1,
                    "do_something": 1,
                    "execute_function": 1,
                    "helper_function": 1,
                    "perform_additional_operations": 1,
                    "some_other_function": 4
                },
                "FUN_08002c54": {
                    "decode_data": 2,
                    "extract_and_process_data": 1,
                    "extract_and_update_byte": 1,
                    "extract_byte": 1,
                    "extract_byte_and_update": 2,
                    "extract_byte_and_update_data": 1,
                    "extract_byte_from_data": 1,
                    "extract_character": 1,
                    "parse_array": 1,
                    "process_array": 1,
                    "process_buffer": 1,
                    "process_byte": 1,
                    "process_data": 9,
                    "process_input": 5,
                    "read_byte_and_update": 1,
                    "update_data": 1,
                    "update_parameter": 1
                },
                "cVar1": {
                    "char_from_input": 1,
                    "char_value": 11,
                    "char_var": 2,
                    "char_variable": 1,
                    "character": 9,
                    "current_char": 3,
                    "current_character": 1,
                    "first_character": 1,
                    "symbol": 1,
                    "value": 1
                },
                "param_1": {
                    "array": 4,
                    "buffer": 1,
                    "data": 11,
                    "data_array": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "input": 2,
                    "input_arr": 1,
                    "input_array": 1,
                    "input_buffer": 2,
                    "input_data": 2,
                    "param_array": 1,
                    "parameter_list": 1,
                    "parameters": 1,
                    "params": 1
                },
                "pbVar2": {
                    "byte_array": 1,
                    "byte_pointer": 16,
                    "byte_ptr": 12,
                    "ptr_byte": 2
                }
            },
            "called": [
                "FUN_08002c52"
            ],
            "calling": [
                "FUN_080033b8"
            ],
            "code": "\nundefined4 extract_and_process_data_08002c54(int *data)\n\n{\n  char char_value;\n  byte *byte_pointer;\n  \n  char_value = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    byte_pointer = (byte *)data[9];\n    data[9] = (int)(byte_pointer + 1);\n    *(uint *)(*data + 0x10) = (uint)*byte_pointer;\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (char_value == ')')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      data[0xc] = 0x21;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      FUNC_08002c52();\n    }\n    return 0;\n  }\n  return 0;\n}\n\n",
            "current_name": "extract_and_process_data_08002c54",
            "entrypoint": "0x08002c54",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002c54": "extract_and_process_data_08002c54",
                "cVar1": "char_value",
                "param_1": "data",
                "pbVar2": "byte_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ca4": {
            "called": [],
            "calling": [
                "FUN_080032b4",
                "FUN_08002ca6"
            ],
            "code": "\nvoid FUNC_08002ca4(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08002ca4",
            "entrypoint": "0x08002ca4",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08002ca4": "FUNC_08002ca4"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08002ca6": {
            "additional_data": {
                "FUNC_08002ca4": {
                    "additional_operation": 1,
                    "another_function": 1,
                    "do_something": 1,
                    "perform_action": 2,
                    "reset_data": 1,
                    "some_function": 3
                },
                "FUN_08002ca6": {
                    "decode_and_modify_data": 1,
                    "decrement_and_check": 1,
                    "process_data": 9,
                    "process_input": 2,
                    "process_parameter": 2,
                    "update_and_check_value": 1,
                    "update_char_array": 2,
                    "update_character": 2,
                    "update_data": 7,
                    "update_parameter": 1,
                    "update_parameter_value": 1,
                    "update_pointer": 1,
                    "update_variable": 1
                },
                "cVar1": {
                    "char1": 2,
                    "char_val": 1,
                    "char_value": 14,
                    "character": 6,
                    "character_value": 1,
                    "current_char": 2,
                    "current_character": 1,
                    "flag": 3
                },
                "param_1": {
                    "array": 2,
                    "char_array": 1,
                    "character": 1,
                    "character_array": 1,
                    "data": 15,
                    "data_array": 1,
                    "data_ptr": 1,
                    "input_array": 2,
                    "input_data": 1,
                    "input_params": 1,
                    "parameter": 4,
                    "pointer": 1
                },
                "puVar2": {
                    "buffer": 1,
                    "byte_pointer": 3,
                    "new_pointer": 1,
                    "next_byte_pointer": 1,
                    "next_byte_ptr": 1,
                    "next_character": 1,
                    "next_element": 2,
                    "pointer": 5,
                    "pointer_value": 1,
                    "ptr": 11,
                    "temp_ptr": 1,
                    "updated_pointer": 1,
                    "value_address": 1
                }
            },
            "called": [
                "FUN_08002ca4"
            ],
            "calling": [
                "FUN_080033b8"
            ],
            "code": "\nundefined4 process_data_08002ca6(int *data)\n\n{\n  char char_value;\n  undefined *ptr;\n  \n  char_value = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    ptr = (undefined *)data[9];\n    data[9] = (int)(ptr + 1);\n    *ptr = (char)*(undefined4 *)(*data + 0x10);\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (char_value == '*')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      data[0xc] = 0x22;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      FUNC_08002ca4();\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_data_08002ca6",
            "entrypoint": "0x08002ca6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002ca6": "process_data_08002ca6",
                "cVar1": "char_value",
                "param_1": "data",
                "puVar2": "ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002cf2": {
            "additional_data": {
                "FUN_08002cf2": {
                    "process_and_handle_input": 2,
                    "process_and_return_result": 1,
                    "process_input": 22,
                    "process_input_and_return": 1,
                    "process_input_and_return_zero": 2,
                    "process_input_with_flag_check": 1,
                    "process_input_wrapper": 2
                },
                "param_1": {
                    "input": 6,
                    "input_array": 9,
                    "input_buffer": 1,
                    "input_data": 9,
                    "input_params": 2,
                    "input_pointer": 1,
                    "input_ptr": 3
                },
                "param_2": {
                    "arg1": 6,
                    "arg2": 1,
                    "arg_2": 1,
                    "argument2": 1,
                    "flag1": 1,
                    "flag_1": 1,
                    "param2": 12,
                    "param_2": 2,
                    "unused_param": 2,
                    "unused_param1": 1,
                    "unused_parameter": 1,
                    "value1": 1,
                    "var_2": 1
                },
                "param_3": {
                    "arg2": 6,
                    "arg3": 1,
                    "arg_3": 1,
                    "argument3": 1,
                    "flag2": 1,
                    "flag_2": 1,
                    "param3": 12,
                    "param_3": 2,
                    "unused_param": 2,
                    "unused_param2": 1,
                    "unused_parameter": 1,
                    "value2": 1,
                    "var_3": 1
                },
                "param_4": {
                    "arg3": 6,
                    "arg4": 1,
                    "arg_4": 1,
                    "argument4": 1,
                    "input_parameter": 1,
                    "output_param": 1,
                    "param4": 13,
                    "param_4": 3,
                    "unused_param": 1,
                    "unused_param3": 1,
                    "value3": 1,
                    "var_4": 1
                },
                "process_input_08004e74": {
                    "process_input_helper": 2
                },
                "uVar1": {
                    "chosen_value": 1,
                    "input_value": 1,
                    "output": 1,
                    "result": 1,
                    "selected_value": 27
                },
                "uVar2": {
                    "bit_field": 1,
                    "flag": 14,
                    "flag_value": 2,
                    "flags": 5,
                    "input_data_offset": 1,
                    "input_value": 3,
                    "value": 1,
                    "value_flag": 1,
                    "value_flags": 2,
                    "value_mask": 1
                }
            },
            "called": [
                "FUN_08004e74"
            ],
            "calling": [
                "FUN_080033b8"
            ],
            "code": "\nundefined4 process_input_wrapper_08002cf2(int *input_data,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined2 selected_value;\n  uint flag;\n  \n  flag = *(uint *)(*input_data + 0x18);\n  if ((flag & 0x80) == 0) {\n    selected_value = *(undefined2 *)(input_data + 3);\n  }\n  else {\n    selected_value = *(undefined2 *)(input_data + 6);\n  }\n  process_input_helper(input_data,(*(uint *)(*input_data + 0x18) & 4) == 0,selected_value,flag,param4);\n  return 0;\n}\n\n",
            "current_name": "process_input_wrapper_08002cf2",
            "entrypoint": "0x08002cf2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002cf2": "process_input_wrapper_08002cf2",
                "param_1": "input_data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "process_input_08004e74": "process_input_helper",
                "uVar1": "selected_value",
                "uVar2": "flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002d1c": {
            "additional_data": {
                "0x0": {
                    "null_value": 1
                },
                "0x20": {
                    "space": 1,
                    "space_value": 1
                },
                "0xfffff8ff": {
                    "mask1": 1
                },
                "0xfffffbff": {
                    "mask2": 1
                },
                "FUNC_08002c52": {
                    "another_function": 2,
                    "execute_func_08002c52": 1,
                    "execute_function": 2,
                    "execute_function_conditionally": 1,
                    "handle_exclamation": 1,
                    "perform_action": 1,
                    "perform_another_action": 1,
                    "process_character": 1,
                    "process_func": 1,
                    "process_function": 1,
                    "process_negation": 1,
                    "reverse_character": 1,
                    "reverse_characters": 1,
                    "reverse_condition": 1
                },
                "FUN_08002d1c": {
                    "execute_action_based_on_condition": 1,
                    "execute_command": 2,
                    "execute_function": 1,
                    "execute_function_based_on_condition": 1,
                    "handle_param": 2,
                    "handle_parameter": 2,
                    "handle_special_characters": 1,
                    "improve_and_execute": 1,
                    "initialize_and_execute": 2,
                    "initialize_exec_function": 1,
                    "initialize_execution": 1,
                    "initialize_param_and_execute": 1,
                    "process_binary_data": 1,
                    "process_input": 3,
                    "process_param": 6,
                    "process_parameter": 3,
                    "process_parameters": 1,
                    "update_function_state": 1
                },
                "anotherFunction": {
                    "void": 1
                },
                "char": {
                    "character": 1
                },
                "command": {
                    "uint": 1
                },
                "executeCommand": {
                    "void": 1
                },
                "initialize_and_execute_function_08004ec4": {
                    "execute_initialize_function": 1,
                    "init_exec_function": 1,
                    "initialize_and_execute": 10,
                    "initialize_and_execute_func": 1,
                    "initialize_and_execute_function": 2,
                    "initialize_and_execute_specific_function": 1,
                    "initialize_and_execute_subroutine": 1
                },
                "input_parameters": {
                    "new_input_parameters": 1
                },
                "param_1": {
                    "binary_data": 1,
                    "command": 1,
                    "command_params": 1,
                    "input": 3,
                    "input_data": 1,
                    "input_parameters": 1,
                    "param": 5,
                    "param_array": 2,
                    "param_list": 2,
                    "parameter": 3,
                    "parameters": 10,
                    "params": 1
                },
                "parameters": {
                    "parameters": 1
                }
            },
            "called": [
                "FUN_08004ec4",
                "FUN_08002c52"
            ],
            "calling": [
                "FUN_08003520"
            ],
            "code": "\nundefined4 process_param_08002d1c(uint **parameters)\n\n{\n  if (((parameters[0xb] == (uint *)0x4) || (parameters[0xb] == (uint *)0x8)) &&\n     (*(character *)((int)parameters + 0x3d) == '(')) {\n    parameters[0xb] = (uint *)0xffff0000;\n    (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n    (*parameters)[5] = 0xfffffbff;\n    **parameters = **parameters & 0xfffffbff;\n    parameters[0xc] = (uint *)0x0;\n    *(undefined *)((int)parameters + 0x3d) = 0x20;\n    *(undefined *)((int)parameters + 0x3e) = 0;\n    initialize_and_execute();\n  }\n  else if (*(character *)((int)parameters + 0x3d) == '!') {\n    parameters[0xb] = (uint *)0xffff0000;\n    parameters[0xc] = (uint *)0x21;\n    *(undefined *)((int)parameters + 0x3d) = 0x20;\n    *(undefined *)((int)parameters + 0x3e) = 0;\n    (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n    (*parameters)[5] = 0xfffffbff;\n    **parameters = **parameters & 0xfffffbff;\n    FUNC_08002c52();\n  }\n  else {\n    (*parameters)[5] = 0xfffffbff;\n  }\n  return 0;\n}\n\n",
            "current_name": "process_param_08002d1c",
            "entrypoint": "0x08002d1c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002d1c": "process_param_08002d1c",
                "char": "character",
                "initialize_and_execute_function_08004ec4": "initialize_and_execute",
                "param_1": "parameters"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002db0": {
            "called": [],
            "calling": [
                "FUN_08002efc",
                "FUN_08002db2"
            ],
            "code": "\nvoid FUNC_08002db0(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08002db0",
            "entrypoint": "0x08002db0",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08002db0": "FUNC_08002db0"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08002db2": {
            "additional_data": {
                "0x0": {
                    "constant0": 1
                },
                "0x12": {
                    "constant12": 1
                },
                "0x14": {
                    "offset4": 1
                },
                "0x20": {
                    "constant20": 1
                },
                "0x2a": {
                    "offset3": 1
                },
                "0x3d": {
                    "offset1": 1
                },
                "0x3e": {
                    "offset2": 1
                },
                "0x4": {
                    "constant4": 1
                },
                "0x8": {
                    "constant8": 1
                },
                "0xffff0000": {
                    "constant_ffff0000": 1
                },
                "FUNC_08002c4e": {
                    "another_function": 1,
                    "do_another_thing": 1,
                    "do_something_else": 1,
                    "func2": 1,
                    "function_2": 1,
                    "function_b": 3,
                    "handle_else": 1,
                    "helper_function2": 1,
                    "other_process_data": 1,
                    "process_input_b": 1
                },
                "FUNC_08002db0": {
                    "do_something": 2,
                    "func1": 1,
                    "function_1": 1,
                    "function_a": 3,
                    "handle_at_character": 1,
                    "helper_function1": 1,
                    "process_input_a": 1,
                    "reverse_data": 1,
                    "some_function": 1
                },
                "FUN_08002db2": {
                    "decode_and_process_data": 1,
                    "execute_param_operations": 1,
                    "parse_and_process_data": 1,
                    "parse_arguments": 1,
                    "parse_data": 1,
                    "process_data": 7,
                    "process_function": 3,
                    "process_input": 7,
                    "process_input_data": 1,
                    "process_param": 3,
                    "process_parameter": 1,
                    "process_parameters": 1,
                    "process_params": 1,
                    "update_flags_and_process_data": 1
                },
                "cVar1": {
                    "char1": 6,
                    "char_value": 5,
                    "char_var": 1,
                    "character": 5,
                    "character_var": 1,
                    "current_char": 1,
                    "first_char": 11,
                    "param_char": 1
                },
                "char1": {
                    "character1": 1
                },
                "charValue": {
                    "char_value": 1
                },
                "inputParams": {
                    "input_array": 1
                },
                "param_1": {
                    "arguments": 1,
                    "data": 10,
                    "input": 3,
                    "input_array": 1,
                    "input_data": 4,
                    "input_params": 1,
                    "param": 1,
                    "param_array": 2,
                    "param_list": 1,
                    "parameter": 1,
                    "parameter_list": 1,
                    "parameters": 3,
                    "params": 2
                },
                "parse_data": {
                    "parse_data": 1
                },
                "pointerVar": {
                    "pointer_var": 1
                },
                "ptr": {
                    "pointer": 1
                },
                "puVar2": {
                    "param_ptr": 1,
                    "pointer": 6,
                    "pointer_2": 1,
                    "pointer_to_data": 1,
                    "pointer_value": 1,
                    "pointer_var": 3,
                    "pointer_var2": 1,
                    "ptr": 5,
                    "ptr_to_b": 1,
                    "ptr_value": 3,
                    "ptr_var": 5,
                    "temp_ptr": 1,
                    "value_ptr": 1,
                    "var_ptr": 1
                }
            },
            "called": [
                "FUN_08002db0",
                "FUN_08002c4e"
            ],
            "calling": [
                "FUN_080033b8"
            ],
            "code": "\nundefined4 decode_and_process_data_08002db2(uint **data)\n\n{\n  char first_char;\n  uint *pointer;\n  \n  first_char = *(char *)((int)data + 0x3d);\n  pointer = data[0xb];\n  if ((*(short *)(data + 10) == 0) && (first_char == '!')) {\n    if ((pointer == (uint *)0x4) || ((pointer == (uint *)0x8 || (pointer == (uint *)0xffff0000)))) {\n      (*data)[1] = (*data)[1] & 0xfffff8ff;\n      **data = **data | 0x200;\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      if (*(char *)((int)data + 0x3e) == '@') {\n        *(undefined *)((int)data + 0x3e) = 0;\n        FUNC_08002db0();\n      }\n      else {\n        *(undefined *)((int)data + 0x3e) = 0;\n        FUNC_08002c4e();\n      }\n    }\n    else {\n      (*data)[1] = (*data)[1] & 0xfffff8ff;\n      data[0xc] = (uint *)0x11;\n      *(undefined *)((int)data + 0x3e) = 0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      FUNC_08002c4e();\n    }\n  }\n  else if ((first_char == '!') || ((*(char *)((int)data + 0x3e) == '@' && (first_char == '\\\"')))) {\n    if (*(short *)((int)data + 0x2a) == 0) {\n      (*data)[1] = (*data)[1] & 0xfffffbff;\n    }\n    else if (*(char *)((int)data + 0x3e) == '@') {\n      if (data[0x14] == (uint *)0x0) {\n        if (data[0x13] == (uint *)0x1) {\n          (*data)[4] = (uint)data[0x12] & 0xff;\n          data[0x14] = (uint *)((int)data[0x14] + 2);\n        }\n        else {\n          (*data)[4] = (uint)((int)data[0x12] << 0x10) >> 0x18;\n          data[0x14] = (uint *)((int)data[0x14] + 1);\n        }\n      }\n      else if (data[0x14] == (uint *)0x1) {\n        (*data)[4] = (uint)data[0x12] & 0xff;\n        data[0x14] = (uint *)((int)data[0x14] + 1);\n      }\n      else if (data[0x14] == (uint *)0x2) {\n        if (*(char *)((int)data + 0x3d) == '\\\"') {\n          **data = **data | 0x100;\n        }\n        else if (*(char *)((int)data + 0x3d) == '!') {\n          pointer = data[9];\n          data[9] = (uint *)((int)pointer + 1);\n          (*data)[4] = (uint)*(byte *)pointer;\n          *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n        }\n      }\n    }\n    else {\n      pointer = data[9];\n      data[9] = (uint *)((int)pointer + 1);\n      (*data)[4] = (uint)*(byte *)pointer;\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "decode_and_process_data_08002db2",
            "entrypoint": "0x08002db2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002db2": "decode_and_process_data_08002db2",
                "cVar1": "first_char",
                "param_1": "data",
                "puVar2": "pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002efc": {
            "additional_data": {
                "0x20": {
                    "space": 2
                },
                "@": {
                    "at_symbol": 1
                },
                "DAT_08002c4e": {
                    "function_a": 1
                },
                "DAT_08002db0": {
                    "function_b": 1
                },
                "FUNC_08002c4e": {
                    "do_action_2": 1,
                    "execute_function_b": 2,
                    "function2": 1,
                    "function_b": 2,
                    "handle_case2": 1,
                    "handle_condition_b": 1,
                    "handle_default_command": 1,
                    "handle_other": 1,
                    "handle_special_case2": 1
                },
                "FUNC_08002db0": {
                    "do_action_1": 1,
                    "execute_function_a": 2,
                    "function1": 1,
                    "function_a": 2,
                    "handle_at": 1,
                    "handle_at_command": 1,
                    "handle_case1": 1,
                    "handle_condition_a": 1,
                    "handle_special_case1": 1
                },
                "FUN_08002efc": {
                    "decode_params": 1,
                    "execute_command": 1,
                    "handle_param": 1,
                    "parse_param": 1,
                    "process_argument": 1,
                    "process_data": 2,
                    "process_function": 1,
                    "process_input": 4,
                    "process_param": 13,
                    "process_parameter": 1,
                    "process_parameters": 1,
                    "process_params": 2,
                    "update_flag_and_call_function": 1,
                    "update_flags_and_execute": 1
                },
                "param_1": {
                    "arguments": 1,
                    "data": 1,
                    "data_pointer": 1,
                    "function_params": 1,
                    "input": 1,
                    "input_data": 1,
                    "input_params": 1,
                    "param": 1,
                    "param_array": 4,
                    "param_list": 2,
                    "parameter": 2,
                    "parameters": 9,
                    "params": 6
                },
                "puVar1": {
                    "array_pointer": 1,
                    "current_element": 1,
                    "current_param": 2,
                    "current_ptr": 1,
                    "current_value": 1,
                    "param_1b": 1,
                    "param_ptr": 1,
                    "pointer_var1": 1,
                    "ptr": 3,
                    "ptr1": 1,
                    "ptr_b": 1,
                    "ptr_value": 2,
                    "ptr_var": 1,
                    "pu_var": 2,
                    "temp_pointer": 1,
                    "temp_ptr": 2,
                    "temp_var": 1,
                    "value": 5,
                    "value1": 1,
                    "value_ptr": 1
                }
            },
            "called": [
                "FUN_08002db0",
                "FUN_08002c4e"
            ],
            "calling": [
                "FUN_080033b8"
            ],
            "code": "\nundefined4 process_param_08002efc(uint **parameters)\n\n{\n  uint *value;\n  \n  value = parameters[0xb];\n  if (*(char *)((int)parameters + 0x3d) == '!') {\n    if (*(short *)((int)parameters + 0x2a) == 0) {\n      if (((value == (uint *)0x4) || (value == (uint *)0x8)) || (value == (uint *)0xffff0000)) {\n        (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n        **parameters = **parameters | 0x200;\n        parameters[0xc] = (uint *)0x0;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        if (*(char *)((int)parameters + 0x3e) == 'at_symbol') {\n          *(undefined *)((int)parameters + 0x3e) = 0;\n          FUNC_08002db0();\n        }\n        else {\n          *(undefined *)((int)parameters + 0x3e) = 0;\n          FUNC_08002c4e();\n        }\n      }\n      else {\n        (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n        parameters[0xc] = (uint *)0x11;\n        *(undefined *)((int)parameters + 0x3e) = 0;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        FUNC_08002c4e();\n      }\n    }\n    else {\n      value = parameters[9];\n      parameters[9] = (uint *)((int)value + 1);\n      (*parameters)[4] = (uint)*(byte *)value;\n      *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_param_08002efc",
            "entrypoint": "0x08002efc",
            "imported": false,
            "improved": true,
            "renaming": {
                "@": "at_symbol",
                "FUN_08002efc": "process_param_08002efc",
                "param_1": "parameters",
                "puVar1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002f9a": {
            "called": [],
            "calling": [
                "FUN_08002f9c",
                "FUN_0800306c"
            ],
            "code": "\nvoid FUNC_08002f9a(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08002f9a",
            "entrypoint": "0x08002f9a",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08002f9a": "FUNC_08002f9a"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08002f9c": {
            "additional_data": {
                "0x20": {
                    "space_character": 1
                },
                "0x400": {
                    "constant2": 1
                },
                "0x800": {
                    "constant4": 1
                },
                "0xfffff8ff": {
                    "constant5": 1
                },
                "0xfffffbff": {
                    "constant3": 1
                },
                "DAT_0800450c": {
                    "dat_0800450c": 1
                },
                "DAT_08004510": {
                    "dat_08004510": 1
                },
                "FUN_08002f9c": {
                    "modify_flags": 1,
                    "parse_and_update_params": 1,
                    "process_data": 2,
                    "process_input_string": 1,
                    "process_param": 4,
                    "process_parameter": 1,
                    "process_string": 1,
                    "set_flag_if_condition_met": 1,
                    "set_flags_and_modify_data": 1,
                    "update_configuration": 2,
                    "update_data": 1,
                    "update_flag": 2,
                    "update_flag_values": 1,
                    "update_flags": 1,
                    "update_flags_and_count": 1,
                    "update_flags_and_data": 2,
                    "update_flags_and_values": 4,
                    "update_param1": 1,
                    "update_permissions": 3
                },
                "PTR_FUN_08002c50": {
                    "execute_logic_b": 1
                },
                "PTR_FUN_08002f9a": {
                    "execute_logic_a": 1
                },
                "param_1": {
                    "arguments": 1,
                    "config": 2,
                    "data": 2,
                    "input_data": 2,
                    "input_params": 1,
                    "param": 5,
                    "param_array": 1,
                    "param_list": 1,
                    "parameter": 1,
                    "parameters": 7,
                    "params": 4,
                    "permissions": 3
                },
                "puVar1": {
                    "char_ptr": 2,
                    "character_pointer": 1,
                    "current_char": 1,
                    "current_char_pointer": 1,
                    "next_char": 2,
                    "pointer": 1,
                    "ptr": 5,
                    "ptr1": 2,
                    "temp_pointer": 4,
                    "temp_ptr": 6,
                    "temp_ptr1": 1,
                    "temp_var": 1,
                    "temp_var1": 1,
                    "updated_param": 1,
                    "var1": 1,
                    "variable1": 1
                }
            },
            "called": [
                "FUN_08002c50",
                "FUN_08002f9a"
            ],
            "calling": [
                "FUN_080033b8"
            ],
            "code": "\nundefined4 update_flags_and_values_08002f9c(uint **parameters)\n\n{\n  uint *temp_ptr;\n  \n  if (*(char *)((int)parameters + 0x3d) == '\\\"') {\n    if (*(ushort *)((int)parameters + 0x2a) < 4) {\n      if (*(ushort *)((int)parameters + 0x2a) - 2 < 2) {\n        if (parameters[0xb] == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n          **parameters = **parameters | 0x800;\n        }\n        (*parameters)[1] = (*parameters)[1] & 0xfffffbff;\n      }\n      else {\n        if (parameters[0xb] == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n        }\n        (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n        temp_ptr = parameters[9];\n        parameters[9] = (uint *)((int)temp_ptr + 1);\n        *(char *)temp_ptr = (char)(*parameters)[4];\n        *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        parameters[0xc] = (uint *)0x0;\n        if (*(char *)((int)parameters + 0x3e) == '@') {\n          *(undefined *)((int)parameters + 0x3e) = 0;\n          FUNC_08002f9a();\n        }\n        else {\n          *(undefined *)((int)parameters + 0x3e) = 0;\n          FUNC_08002c50();\n        }\n      }\n    }\n    else {\n      temp_ptr = parameters[9];\n      parameters[9] = (uint *)((int)temp_ptr + 1);\n      *(char *)temp_ptr = (char)(*parameters)[4];\n      *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "update_flags_and_values_08002f9c",
            "entrypoint": "0x08002f9c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002f9c": "update_flags_and_values_08002f9c",
                "param_1": "parameters",
                "puVar1": "temp_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800306c": {
            "additional_data": {
                "DAT_0800306c": {
                    "constant_value": 1
                },
                "DAT_08003070": {
                    "another_constant_value": 1
                },
                "FUNC_08002c50": {
                    "handle_default_case": 1,
                    "handle_value_b": 1,
                    "other_function": 1,
                    "perform_operation_b": 1,
                    "process_b": 1
                },
                "FUNC_08002f9a": {
                    "handle_special_case": 1,
                    "handle_value_a": 1,
                    "perform_operation_a": 1,
                    "process_a": 1
                },
                "FUN_0800306c": {
                    "handle_operation": 1,
                    "handle_param": 1,
                    "handle_parameter": 1,
                    "modify_data": 1,
                    "process_data": 15,
                    "process_function": 1,
                    "process_input": 3,
                    "process_input_data": 1,
                    "process_param": 4,
                    "process_parameter": 1,
                    "update_and_modify_data": 1,
                    "update_parameter": 1
                },
                "PTR_0800306c": {
                    "current_pointer": 1
                },
                "PTR_DAT_0000002c": {
                    "operation_count": 1
                },
                "PTR_DAT_00000030": {
                    "result_value": 1
                },
                "PTR_DAT_00000038": {
                    "buffer_size": 1
                },
                "PTR_DAT_0000003c": {
                    "flag": 1
                },
                "PTR_DAT_00000040": {
                    "option": 1
                },
                "PTR_DAT_00000044": {
                    "offset": 1
                },
                "PTR_DAT_00000048": {
                    "func_flag": 1
                },
                "PTR_DAT_0000004c": {
                    "value_flag": 1
                },
                "PTR_DAT_00000050": {
                    "temp": 1
                },
                "param_1": {
                    "data": 11,
                    "data_buffer": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "function_params": 1,
                    "input": 1,
                    "input_array": 1,
                    "input_data": 2,
                    "input_params": 1,
                    "param": 2,
                    "param_array": 1,
                    "parameter": 2,
                    "parameter_array": 1,
                    "parameters": 5
                },
                "puVar1": {
                    "current_param": 2,
                    "current_value": 6,
                    "i_var1": 1,
                    "pointer": 1,
                    "ptr": 2,
                    "ptr_value": 1,
                    "ptr_var1": 1,
                    "selected_option": 1,
                    "selected_value": 1,
                    "temp_var": 1,
                    "value": 9,
                    "value_pointer": 1,
                    "value_ptr": 3
                }
            },
            "called": [
                "FUN_08002c50",
                "FUN_08002f9a"
            ],
            "calling": [
                "FUN_080033b8"
            ],
            "code": "\nundefined4 process_input_data_0800306c(uint **data)\n\n{\n  uint *value;\n  \n  value = data[0xb];\n  if (*(short *)((int)data + 0x2a) == 3) {\n    if (((value == (uint *)0x4) || (value == (uint *)0x8)) || (value == (uint *)0xffff0000)) {\n      **data = **data & 0xfffffbff;\n    }\n    value = data[9];\n    data[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  else if (*(short *)((int)data + 0x2a) == 2) {\n    if (((value == (uint *)0x4) || (value == (uint *)0x8)) || (value == (uint *)0xffff0000)) {\n      (*data)[1] = (*data)[1] & 0xfffffcff;\n      **data = **data | 0x200;\n    }\n    else {\n      if (value == (uint *)0x2) {\n        **data = **data | 0x400;\n      }\n      else {\n        **data = **data & 0xfffffbff;\n      }\n      (*data)[1] = (*data)[1] & 0xfffffcff;\n    }\n    value = data[9];\n    data[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    value = data[9];\n    data[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    *(undefined *)((int)data + 0x3d) = 0x20;\n    data[0xc] = (uint *)0x0;\n    if (*(char *)((int)data + 0x3e) == '@') {\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUNC_08002f9a();\n    }\n    else {\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUNC_08002c50();\n    }\n  }\n  else {\n    value = data[9];\n    data[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "current_name": "process_input_data_0800306c",
            "entrypoint": "0x0800306c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800306c": "process_input_data_0800306c",
                "param_1": "data",
                "puVar1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800316a": {
            "called": [],
            "calling": [
                "FUN_0800316c"
            ],
            "code": "\nvoid FUNC_0800316a(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800316a",
            "entrypoint": "0x0800316a",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800316a": "FUNC_0800316a"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800316c": {
            "additional_data": {
                "FUNC_0800316a": {
                    "initialize_data_structures": 1,
                    "perform_operation": 1,
                    "reverse_data": 1
                },
                "FUN_0800316c": {
                    "initialize": 1,
                    "initialize_and_execute": 5,
                    "initialize_data": 1,
                    "initialize_data_and_execute_function": 2,
                    "initialize_data_structure": 1,
                    "initialize_data_structures": 3,
                    "initialize_processing": 1,
                    "initialize_structure": 1,
                    "initialize_system": 1,
                    "process_data": 9,
                    "process_input": 1,
                    "process_input_data": 1,
                    "process_param": 1,
                    "process_parameter": 1,
                    "update_data_structures": 1
                },
                "LAB_080035fc_1": {
                    "label1": 2,
                    "label_1": 1
                },
                "check_and_initialize_data_structures_08004ef4": {
                    "check_and_initialize_data": 1,
                    "check_and_initialize_data_structures": 1,
                    "initialize_structures": 1
                },
                "iVar1": {
                    "result": 26,
                    "return_value": 3,
                    "status": 2
                },
                "initialize_and_execute_function_08004ec4": {
                    "execute_function": 1,
                    "initialize_and_execute_function": 2
                },
                "initialize_data_0800258c": {
                    "initialize_data": 2,
                    "initialize_data_structure": 1
                },
                "param_1": {
                    "data": 9,
                    "data_structure": 2,
                    "data_structures": 2,
                    "input_data": 4,
                    "input_params": 1,
                    "param": 4,
                    "param_array": 1,
                    "parameters": 5,
                    "params": 1,
                    "structure": 1,
                    "system_data": 1
                },
                "puVar2": {
                    "buffer_ptr": 1,
                    "char_pointer": 1,
                    "char_ptr": 1,
                    "pointer1": 2,
                    "pointer2": 2,
                    "pointer_1": 1,
                    "pointer_2": 1,
                    "pointer_var1": 1,
                    "pointer_var2": 1,
                    "ptr": 1,
                    "ptr1": 3,
                    "ptr2": 2,
                    "ptr_2": 1,
                    "pu_var": 1,
                    "temp1": 1,
                    "temp_pointer": 1,
                    "temp_pointer1": 2,
                    "temp_ptr": 3,
                    "temp_ptr1": 2,
                    "temp_ptr_1": 1,
                    "temp_var1": 1,
                    "temp_var_1": 1
                },
                "puVar3": {
                    "data_pointer": 1,
                    "data_ptr": 4,
                    "input_ptr": 2,
                    "pointer2": 2,
                    "pointer3": 2,
                    "pointer_2": 1,
                    "pointer_3": 1,
                    "pointer_var2": 1,
                    "pointer_var3": 1,
                    "ptr2": 4,
                    "ptr3": 2,
                    "ptr_3": 1,
                    "structure_pointer": 1,
                    "temp2": 1,
                    "temp_pointer2": 2,
                    "temp_ptr2": 2,
                    "temp_ptr_2": 1,
                    "temp_var2": 1,
                    "temp_var_2": 1
                }
            },
            "called": [
                "FUN_0800258c",
                "FUN_08004ec4",
                "FUN_0800316a",
                "FUN_08004ef4"
            ],
            "calling": [
                "FUN_08003520",
                "FUN_080032b4"
            ],
            "code": "\nvoid process_input_data_0800316c(uint **data)\n\n{\n  int result;\n  uint *temp_ptr;\n  uint *data_ptr;\n  \n  if (*(byte *)((int)data + 0x3d) - 0x29 < 2) {\n    data[0xc] = (uint *)0x0;\n    *(undefined *)((int)data + 0x3d) = 0x28;\n  }\n  else {\n    if ((*(char *)((int)data + 0x3d) != '`') && (((*data)[1] & 0x800) == 0)) {\n      *(undefined *)((int)data + 0x3d) = 0x20;\n    }\n    data[0xc] = (uint *)0x0;\n    *(undefined *)((int)data + 0x3e) = 0;\n  }\n  **data = **data & 0xfffff7ff;\n  data_ptr = *data;\n  if ((data_ptr[1] & 0x800) == 0) {\n    if (*(char *)((int)data + 0x3d) == '`') {\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      data[0x10] = (uint *)0x0;\n      if ((data_ptr[5] & 0x40) != 0) {\n        temp_ptr = data[9];\n        data[9] = (uint *)((int)temp_ptr + 1);\n        *(char *)temp_ptr = (char)data_ptr[4];\n      }\n      **data = **data & 0xfffffffe;\n      FUNC_0800316a(data);\n    }\n    else {\n      if ((data_ptr[5] & 0x40) != 0) {\n        temp_ptr = data[9];\n        data[9] = (uint *)((int)temp_ptr + 1);\n        *(char *)temp_ptr = (char)data_ptr[4];\n      }\n      initialize_structures(data);\n    }\n  }\n  else {\n    data_ptr[1] = data_ptr[1] & 0xfffff7ff;\n    if (*(char *)((int)data[0xd] + 0x21) == '\\x01') {\n      data[0xe][0xd] = (uint)&label1;\n      result = initialize_data(data[0xe]);\n      if (result != 0) {\n        if (((*data)[5] & 0x40) != 0) {\n          data_ptr = data[9];\n          data[9] = (uint *)((int)data_ptr + 1);\n          *(char *)data_ptr = (char)(*data)[4];\n        }\n        **data = **data & 0xfffffffe;\n        *(undefined *)((int)data + 0x3d) = 0x20;\n        (*(code *)data[0xe][0xd])();\n      }\n    }\n    else {\n      data[0xd][0xd] = (uint)&label1;\n      result = initialize_data(data[0xd]);\n      if (result != 0) {\n        **data = **data & 0xfffffffe;\n        *(undefined *)((int)data + 0x3d) = 0x20;\n        (*(code *)data[0xd][0xd])();\n      }\n    }\n  }\n  if ((*(char *)((int)data + 0x3d) == '(') && (((uint)data[0x10] & 4) != 0)) {\n    data[0xb] = (uint *)0xffff0000;\n    data[0xc] = (uint *)0x0;\n    *(undefined *)((int)data + 0x3d) = 0x20;\n    *(undefined *)((int)data + 0x3e) = 0;\n    initialize_and_execute_function(data);\n  }\n  return;\n}\n\n",
            "current_name": "process_input_data_0800316c",
            "entrypoint": "0x0800316c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800316c": "process_input_data_0800316c",
                "LAB_080035fc_1": "label1",
                "check_and_initialize_data_structures_08004ef4": "initialize_structures",
                "iVar1": "result",
                "initialize_and_execute_function_08004ec4": "initialize_and_execute_function",
                "initialize_data_0800258c": "initialize_data",
                "param_1": "data",
                "puVar2": "temp_ptr",
                "puVar3": "data_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080032b4": {
            "additional_data": {
                "FUNC_08002ca4": {
                    "execute": 1,
                    "execute_function": 1,
                    "function_08002ca4": 1
                },
                "FUN_080032b4": {
                    "parse_and_execute_command": 1,
                    "process_and_execute": 2,
                    "process_data": 6,
                    "process_input": 15,
                    "process_input_and_execute": 1,
                    "process_input_data": 3,
                    "process_param": 1,
                    "process_param_array": 1,
                    "process_parameter": 1
                },
                "cVar1": {
                    "char1": 3,
                    "char_value": 6,
                    "char_var": 2,
                    "char_variable": 1,
                    "character": 12,
                    "command_char": 1,
                    "first_char": 5,
                    "symbol": 1
                },
                "initialize_and_execute_function_08004ec4": {
                    "initialize_and_execute": 3
                },
                "param_1": {
                    "command": 1,
                    "data": 5,
                    "data_array": 1,
                    "input_data": 16,
                    "input_params": 2,
                    "param_array": 1,
                    "parameter_list": 1,
                    "parameters": 3,
                    "params": 1
                },
                "process_input_data_0800316c": {
                    "process_input_data": 3
                },
                "puVar2": {
                    "command_ptr": 1,
                    "data_ptr": 1,
                    "pointer1": 1,
                    "pointer2": 1,
                    "pointer_1": 4,
                    "pointer_2": 2,
                    "pointer_var1": 1,
                    "ptr": 4,
                    "ptr1": 5,
                    "ptr_1": 2,
                    "ptr_2": 1,
                    "ptr_input_data": 1,
                    "ptr_var": 1,
                    "ptr_var1": 2,
                    "ptr_var2": 3,
                    "var2": 1
                },
                "puVar3": {
                    "counter_ptr": 1,
                    "output_ptr": 1,
                    "pointer2": 1,
                    "pointer3": 1,
                    "pointer_2": 4,
                    "pointer_3": 2,
                    "pointer_var2": 1,
                    "ptr2": 8,
                    "ptr_2": 3,
                    "ptr_3": 1,
                    "ptr_increment": 1,
                    "ptr_output_data": 1,
                    "ptr_var2": 2,
                    "ptr_var3": 3,
                    "var3": 1
                }
            },
            "called": [
                "FUN_08004ec4",
                "FUN_0800316c",
                "FUN_08002ca4"
            ],
            "calling": [
                "FUN_080033b8"
            ],
            "code": "\nundefined4 process_input_data_080032b4(uint **input_data)\n\n{\n  char character;\n  uint *ptr1;\n  uint *ptr2;\n  \n  character = *(char *)((int)input_data + 0x3d);\n  (*input_data)[1] = (*input_data)[1] & 0xfffff8ff;\n  **input_data = **input_data | 1;\n  **input_data = **input_data & 0xfffffbff;\n  ptr1 = *input_data;\n  if ((ptr1[1] & 0x800) != 0) {\n    if ((*(char *)((int)input_data + 0x3d) == '\\\"') || (*(char *)((int)input_data + 0x3d) == '*')) {\n      *(short *)((int)input_data + 0x2a) = (short)*(undefined4 *)(*input_data[0xe] + 4);\n    }\n    else {\n      *(short *)((int)input_data + 0x2a) = (short)*(undefined4 *)(*input_data[0xd] + 4);\n    }\n  }\n  if (*(short *)((int)input_data + 0x2a) != 0) {\n    if ((ptr1[5] & 4) != 0) {\n      ptr2 = input_data[9];\n      input_data[9] = (uint *)((int)ptr2 + 1);\n      *(char *)ptr2 = (char)ptr1[4];\n      *(short *)((int)input_data + 0x2a) = *(short *)((int)input_data + 0x2a) + -1;\n    }\n    if (((*input_data)[5] & 0x40) != 0) {\n      ptr1 = input_data[9];\n      input_data[9] = (uint *)((int)ptr1 + 1);\n      *(char *)ptr1 = (char)(*input_data)[4];\n      *(short *)((int)input_data + 0x2a) = *(short *)((int)input_data + 0x2a) + -1;\n    }\n    input_data[0x10] = (uint *)((uint)input_data[0x10] | 4);\n  }\n  if (input_data[0x10] == (uint *)0x0) {\n    if (((character == '(') || (character == '*')) || (character == ')')) {\n      input_data[0xb] = (uint *)0xffff0000;\n      input_data[0xc] = (uint *)0x0;\n      *(undefined *)((int)input_data + 0x3d) = 0x20;\n      *(undefined *)((int)input_data + 0x3e) = 0;\n      initialize_and_execute();\n    }\n    else if ((input_data[0xc] == (uint *)0x22) || (character == '\\\"')) {\n      input_data[0xc] = (uint *)0x0;\n      *(undefined *)((int)input_data + 0x3d) = 0x20;\n      *(undefined *)((int)input_data + 0x3e) = 0;\n      FUNC_08002ca4();\n    }\n  }\n  else {\n    process_input_data_080032b4();\n  }\n  return 0;\n}\n\n",
            "current_name": "process_input_data_080032b4",
            "entrypoint": "0x080032b4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080032b4": "process_input_data_080032b4",
                "cVar1": "character",
                "initialize_and_execute_function_08004ec4": "initialize_and_execute",
                "param_1": "input_data",
                "process_input_data_0800316c": "process_input_data",
                "puVar2": "ptr1",
                "puVar3": "ptr2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080033b8": {
            "additional_data": {
                "FUN_080033b8": {
                    "process_and_update": 1,
                    "process_data": 11,
                    "process_function": 9,
                    "process_input": 8,
                    "process_input_and_update_flags": 1,
                    "process_parameters": 1
                },
                "decode_and_process_data_08002db2": {
                    "decode_and_process_data": 3
                },
                "extract_and_process_data_08002c54": {
                    "extract_and_process_data": 3
                },
                "iVar1": {
                    "array_value": 1,
                    "buffer_value": 1,
                    "data": 1,
                    "data_index": 1,
                    "data_ptr": 4,
                    "data_value": 3,
                    "first_element": 1,
                    "input": 3,
                    "input_data_pointer": 1,
                    "input_ptr": 1,
                    "input_value": 9,
                    "param_value": 1,
                    "ptr_data": 2,
                    "value": 2
                },
                "param_1": {
                    "data": 6,
                    "data_array": 1,
                    "data_ptr": 2,
                    "input_array": 3,
                    "input_buffer": 1,
                    "input_data": 14,
                    "input_param": 1,
                    "input_parameter": 1,
                    "input_params": 1,
                    "parameters": 1
                },
                "process_data_08002ca6": {
                    "process_data": 2,
                    "process_data_wrapper": 1
                },
                "process_input_data_0800306c": {
                    "process_input_data": 3
                },
                "process_input_data_080032b4": {
                    "process_input_data": 1,
                    "process_input_data_wrapper": 2
                },
                "process_input_wrapper_08002cf2": {
                    "process_input_wrapper": 3
                },
                "process_param_08002efc": {
                    "process_param": 3
                },
                "set_byte_value_from_param_and_store_080028d2": {
                    "set_byte_value": 1,
                    "set_byte_value_and_store": 1,
                    "set_byte_value_from_data_and_store": 1
                },
                "uVar2": {
                    "condition_1": 1,
                    "condition_flags": 2,
                    "condition_value": 1,
                    "flag": 1,
                    "flag1": 2,
                    "flag_1": 4,
                    "flag_value": 2,
                    "flag_value_1": 2,
                    "flags": 12,
                    "flags1": 1,
                    "flags_1": 2,
                    "var1": 1
                },
                "uVar3": {
                    "condition_2": 1,
                    "conditions": 4,
                    "flag2": 2,
                    "flag_2": 4,
                    "flag_value": 1,
                    "flag_value_2": 2,
                    "flags2": 1,
                    "flags_2": 2,
                    "input": 2,
                    "input_condition": 1,
                    "input_data": 1,
                    "input_flags": 5,
                    "input_value": 3,
                    "status": 1,
                    "var2": 1
                },
                "uVar4": {
                    "condition_3": 1,
                    "data_flag": 1,
                    "flag3": 2,
                    "flag_3": 4,
                    "flag_value2": 1,
                    "flag_value_3": 2,
                    "flags2": 1,
                    "flags3": 1,
                    "flags_3": 2,
                    "other_flags": 1,
                    "other_value": 1,
                    "output_flags": 1,
                    "update_condition": 1,
                    "update_flags": 2,
                    "updated_flags": 1,
                    "value_flags": 3,
                    "values": 4,
                    "values_and_flags": 1,
                    "var3": 1
                },
                "update_data_pointer_08002ab8": {
                    "update_data_pointer": 3
                },
                "update_flags_and_values_08002f9c": {
                    "update_flags_and_values": 3
                },
                "update_flags_based_on_conditions_080028de": {
                    "update_flags_based_on_conditions": 2
                },
                "update_flags_based_on_input_08002848": {
                    "update_flags_based_on_input": 3
                },
                "update_value_and_decrement_08002ad8": {
                    "update_value_and_decrement": 3
                }
            },
            "called": [
                "FUN_08002efc",
                "FUN_080028de",
                "FUN_08002ad8",
                "FUN_08002cf2",
                "FUN_08002ab8",
                "FUN_080032b4",
                "FUN_08002848",
                "FUN_08002c54",
                "FUN_08002f9c",
                "FUN_0800306c",
                "FUN_08002db2",
                "FUN_08002ca6",
                "FUN_080028d2"
            ],
            "calling": [],
            "code": "\nvoid process_data_080033b8(int *input_data)\n\n{\n  int input_value;\n  uint flags;\n  uint input_flags;\n  uint values;\n  \n  input_value = *input_data;\n  values = *(uint *)(input_value + 0x18);\n  flags = *(uint *)(input_value + 0x14);\n  input_flags = *(uint *)(input_value + 4);\n  if ((*(char *)((int)input_data + 0x3e) == '\\x10') || (*(char *)((int)input_data + 0x3e) == '@')) {\n    if (((flags & 0x10001) == 0) || ((input_flags & 0x200) == 0)) {\n      if (((flags & 0x10008) == 0) || ((input_flags & 0x200) == 0)) {\n        if (((flags & 0x10002) != 0) && ((input_flags & 0x200) != 0)) {\n          update_flags_based_on_conditions(input_data);\n        }\n      }\n      else {\n        set_byte_value_from_data_and_store(input_data);\n      }\n    }\n    else {\n      update_flags_based_on_input(input_data);\n    }\n    if ((values & 0x100004) == 0) {\n      if ((((flags & 0x10040) != 0) && ((input_flags & 0x400) != 0)) && ((flags & 0x10004) == 0)) {\n        update_flags_and_values(input_data);\n        return;\n      }\n      if (((flags & 0x10004) != 0) && ((input_flags & 0x200) != 0)) {\n        process_input_data(input_data);\n        return;\n      }\n    }\n    else {\n      if ((((flags & 0x10080) != 0) && ((input_flags & 0x400) != 0)) && ((flags & 0x10004) == 0)) {\n        decode_and_process_data_080033b8(input_data);\n        return;\n      }\n      if (((flags & 0x10004) != 0) && ((input_flags & 0x200) != 0)) {\n        process_param(input_data);\n        return;\n      }\n    }\n  }\n  else {\n    if (((flags & 0x10002) != 0) && ((input_flags & 0x200) != 0)) {\n      process_input_wrapper();\n      return;\n    }\n    if (((flags & 0x10010) != 0) && ((input_flags & 0x200) != 0)) {\n      process_input_data_wrapper(input_data);\n      return;\n    }\n    if ((values & 0x100004) == 0) {\n      if ((((flags & 0x10040) != 0) && ((input_flags & 0x400) != 0)) && ((flags & 0x10004) == 0)) {\n        process_data_080033b8(input_data);\n        return;\n      }\n      if (((flags & 0x10004) != 0) && ((input_flags & 0x200) != 0)) {\n        update_value_and_decrement(input_data);\n      }\n    }\n    else {\n      if ((((flags & 0x10080) != 0) && ((input_flags & 0x400) != 0)) && ((flags & 0x10004) == 0)) {\n        extract_and_process_data_080033b8(input_data);\n        return;\n      }\n      if (((flags & 0x10004) != 0) && ((input_flags & 0x200) != 0)) {\n        update_data_pointer(input_data);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "current_name": "process_data_080033b8",
            "entrypoint": "0x080033b8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080033b8": "process_data_080033b8",
                "decode_and_process_data_08002db2": "decode_and_process_data",
                "extract_and_process_data_08002c54": "extract_and_process_data",
                "iVar1": "input_value",
                "param_1": "input_data",
                "process_data_08002ca6": "process_data",
                "process_input_data_0800306c": "process_input_data",
                "process_input_data_080032b4": "process_input_data_wrapper",
                "process_input_wrapper_08002cf2": "process_input_wrapper",
                "process_param_08002efc": "process_param",
                "set_byte_value_from_param_and_store_080028d2": "set_byte_value_from_data_and_store",
                "uVar2": "flags",
                "uVar3": "input_flags",
                "uVar4": "values",
                "update_data_pointer_08002ab8": "update_data_pointer",
                "update_flags_and_values_08002f9c": "update_flags_and_values",
                "update_flags_based_on_conditions_080028de": "update_flags_based_on_conditions",
                "update_flags_based_on_input_08002848": "update_flags_based_on_input",
                "update_value_and_decrement_08002ad8": "update_value_and_decrement"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003520": {
            "additional_data": {
                "FUN_08003520": {
                    "apply_flags": 1,
                    "process_data": 3,
                    "process_flags": 12,
                    "process_flags_and_data": 1,
                    "process_input": 2,
                    "process_input_data": 1,
                    "process_input_flags": 1,
                    "process_parameters": 5,
                    "process_permissions": 2,
                    "update_flags": 2,
                    "update_param_flags": 1
                },
                "cVar1": {
                    "char1": 4,
                    "char_1": 1,
                    "char_val": 2,
                    "char_value": 2,
                    "char_var": 4,
                    "char_variable": 1,
                    "character": 10,
                    "character1": 1,
                    "character_1": 3,
                    "character_value": 1,
                    "character_var": 2
                },
                "param_1": {
                    "data": 4,
                    "data_ptr": 1,
                    "flags": 7,
                    "input": 1,
                    "input_data": 5,
                    "param": 1,
                    "param_array": 1,
                    "param_list": 1,
                    "parameters": 8,
                    "params": 1,
                    "pointer_array": 1
                },
                "process_input_data_0800316c": {
                    "process_input_data": 6
                },
                "process_param_08002d1c": {
                    "process_condition": 1,
                    "process_param": 1,
                    "process_parameter": 1,
                    "process_special_case": 2,
                    "process_special_cases": 1
                },
                "puVar2": {
                    "data": 1,
                    "data_ptr": 3,
                    "first_element_ptr": 1,
                    "flag_ptr": 2,
                    "flag_values": 1,
                    "parameter_pointer": 1,
                    "pointer": 4,
                    "pointer_2": 1,
                    "pointer_var": 1,
                    "pointer_var2": 1,
                    "pointer_variable": 1,
                    "ptr": 7,
                    "ptr_data": 1,
                    "ptr_flags": 1,
                    "ptr_value_1": 1,
                    "ptr_var": 2,
                    "temp_pointer": 1
                },
                "uVar3": {
                    "condition1": 1,
                    "flag1": 9,
                    "flag_1": 2,
                    "flag_val_1": 2,
                    "flag_value": 1,
                    "flag_var": 1,
                    "flag_variable1": 1,
                    "permission1": 1,
                    "val1": 1,
                    "value1": 5,
                    "value_1": 4,
                    "value_3": 1,
                    "value_var_1": 1,
                    "variable3": 1
                },
                "uVar4": {
                    "another_flag_var": 1,
                    "condition2": 1,
                    "condition_value": 1,
                    "flag2": 9,
                    "flag_2": 2,
                    "flag_val_2": 2,
                    "flag_variable2": 1,
                    "permission2": 1,
                    "val2": 1,
                    "value2": 5,
                    "value_2": 4,
                    "value_4": 1,
                    "value_var_2": 1,
                    "variable4": 1
                }
            },
            "called": [
                "FUN_08002d1c",
                "FUN_0800316c"
            ],
            "calling": [],
            "code": "\nvoid process_input_flags_08003520(uint **parameters)\n\n{\n  char character;\n  uint *ptr;\n  uint flag1;\n  uint flag2;\n  \n  ptr = *parameters;\n  flag1 = ptr[5];\n  flag2 = ptr[1];\n  if (((flag1 & 0x10100) != 0) && ((flag2 & 0x100) != 0)) {\n    parameters[0x10] = (uint *)((uint)parameters[0x10] | 1);\n    ptr[5] = 0xfffffeff;\n    **parameters = **parameters | 0x8000;\n  }\n  if (((flag1 & 0x10200) != 0) && ((flag2 & 0x100) != 0)) {\n    parameters[0x10] = (uint *)((uint)parameters[0x10] | 2);\n    (*parameters)[5] = 0xfffffdff;\n  }\n  if (((flag1 & 0x10400) != 0) && ((flag2 & 0x100) != 0)) {\n    character = *(char *)((int)parameters + 0x3d);\n    if (((*(char *)((int)parameters + 0x3e) == ' ') && (*(short *)((int)parameters + 0x2a) == 0)) &&\n       (((character == '!' || (character == ')')) || ((character == '(' && (parameters[0xc] == (uint *)0x21)))))) {\n      process_special_case(parameters);\n    }\n    else {\n      parameters[0x10] = (uint *)((uint)parameters[0x10] | 4);\n      if (*(char *)((int)parameters + 0x3e) == '\\x10') {\n        **parameters = **parameters | 0x200;\n      }\n      (*parameters)[5] = 0xfffffbff;\n    }\n  }\n  if (((flag1 & 0x10800) != 0) && ((flag2 & 0x100) != 0)) {\n    parameters[0x10] = (uint *)((uint)parameters[0x10] | 8);\n    (*parameters)[5] = 0xfffff7ff;\n  }\n  if (parameters[0x10] != (uint *)0x0) {\n    process_input_data(parameters);\n  }\n  return;\n}\n\n",
            "current_name": "process_input_flags_08003520",
            "entrypoint": "0x08003520",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003520": "process_input_flags_08003520",
                "cVar1": "character",
                "param_1": "parameters",
                "process_input_data_0800316c": "process_input_data",
                "process_param_08002d1c": "process_special_case",
                "puVar2": "ptr",
                "uVar3": "flag1",
                "uVar4": "flag2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800365c": {
            "additional_data": {
                "FUN_0800365c": {
                    "calculate_adjusted_delay": 1,
                    "calculate_adjusted_value": 1,
                    "calculate_delay": 14,
                    "calculate_duration": 1,
                    "calculate_duration_in_seconds": 1,
                    "calculate_iterations": 2,
                    "calculate_scaled_delay": 1,
                    "clear_delay": 1,
                    "decrement_param": 1,
                    "delay_execution": 1,
                    "delay_function": 5,
                    "delay_milliseconds": 1,
                    "process_param": 1
                },
                "bVar1": {
                    "is_count_non_zero": 1,
                    "is_delay_nonzero": 1,
                    "is_delay_not_zero": 1,
                    "is_delayed": 1,
                    "is_iteration_complete": 1,
                    "is_not_zero": 1
                },
                "local_4": {
                    "adjusted_delay": 2,
                    "adjusted_value": 1,
                    "calculated_delay": 1,
                    "calculated_iterations": 1,
                    "calculated_value": 1,
                    "count": 1,
                    "counter": 2,
                    "delay": 2,
                    "delay_count": 6,
                    "delay_counter": 2,
                    "delay_value": 1,
                    "duration_in_cycles": 1,
                    "iteration": 1,
                    "iteration_count": 2,
                    "iterations": 2,
                    "remaining_iterations": 2,
                    "repetitions": 1,
                    "scaled_delay": 1
                },
                "param_1": {
                    "delay": 2,
                    "delay_time": 2,
                    "delay_value": 1,
                    "duration_in_milliseconds": 1,
                    "input": 8,
                    "input_value": 15,
                    "milliseconds": 1,
                    "original_delay": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003688"
            ],
            "code": "\nvoid calculate_scaled_delay_0800365c(int input_value)\n\n{\n  bool is_count_non_zero;\n  int delay_count;\n  \n  delay_count = input_value * (DAT_20000084 / 8000);\n  do {\n    is_count_non_zero = delay_count != 0;\n    delay_count = delay_count + -1;\n  } while (is_count_non_zero);\n  return;\n}\n\n",
            "current_name": "calculate_scaled_delay_0800365c",
            "entrypoint": "0x0800365c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800365c": "calculate_scaled_delay_0800365c",
                "bVar1": "is_count_non_zero",
                "local_4": "delay_count",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003688": {
            "additional_data": {
                "FUN_08003688": {
                    "check_and_control": 3,
                    "check_and_control_io": 1,
                    "check_and_handle_flags": 1,
                    "check_and_set_flags": 1,
                    "check_and_update_flags": 1,
                    "check_and_update_parameters": 1,
                    "check_and_validate_parameters": 1,
                    "check_and_wait": 1,
                    "check_conditions_and_delays": 1,
                    "check_device_status": 1,
                    "check_flags": 1,
                    "check_status": 6,
                    "check_status_and_wait": 1,
                    "handle_param": 1,
                    "perform_action": 2,
                    "process_data": 4,
                    "process_flags": 1
                },
                "_DAT_40007000": {
                    "register5": 1,
                    "register6": 1
                },
                "_DAT_40021000": {
                    "data_register": 1,
                    "register2": 1
                },
                "_DAT_40021004": {
                    "register1": 1,
                    "register7": 1
                },
                "_DAT_4002101c": {
                    "register4": 1,
                    "register7": 1
                },
                "_DAT_40021020": {
                    "register6": 1,
                    "register8": 1
                },
                "_DAT_40021024": {
                    "register2": 1,
                    "register4": 1
                },
                "_DAT_42420000": {
                    "register1": 1,
                    "register3": 1
                },
                "_DAT_42420060": {
                    "register8": 1,
                    "register9": 1
                },
                "_DAT_42420480": {
                    "register3": 1,
                    "register5": 1
                },
                "bVar5": {
                    "condition": 1,
                    "flag": 10,
                    "is_bit_set": 1,
                    "is_cleared": 1,
                    "is_condition_met": 5,
                    "is_condition_true": 2,
                    "is_false": 1,
                    "is_flag_enabled": 1,
                    "is_flag_set": 5,
                    "is_flag_unset": 1,
                    "is_set": 3
                },
                "calculate_scaled_delay_0800365c": {
                    "calculate_scaled_delay": 3
                },
                "data_value": {
                    "get_data_value": 1
                },
                "get_data_value_08001cc4": {
                    "get_data_value": 4
                },
                "iVar1": {
                    "current_value": 2,
                    "first_value": 1,
                    "initial_value": 14,
                    "previous_value": 1,
                    "start_time": 7,
                    "start_value": 6
                },
                "iVar2": {
                    "current_time": 7,
                    "current_value": 20,
                    "new_value": 2,
                    "second_value": 1,
                    "updated_value": 1
                },
                "param_1": {
                    "action_params": 1,
                    "data": 1,
                    "device_settings": 1,
                    "flags": 11,
                    "input_data": 1,
                    "input_params": 1,
                    "io_config": 1,
                    "param": 2,
                    "param_1": 1,
                    "parameter_array": 1,
                    "parameters": 2,
                    "params": 1,
                    "status": 3,
                    "status_flags": 3
                },
                "uVar3": {
                    "result": 31
                },
                "uVar4": {
                    "flag_value": 2,
                    "param1_1": 1,
                    "param_1_value": 2,
                    "param_value": 2,
                    "setting_value": 1,
                    "temp": 1,
                    "temp_value": 1,
                    "temp_var": 2,
                    "value": 19
                }
            },
            "called": [
                "FUN_0800365c",
                "FUN_08001cc4"
            ],
            "calling": [
                "FUN_08001b48"
            ],
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nundefined4 check_status_and_wait_08003688(uint *flags)\n\n{\n  int initial_value;\n  int current_value;\n  undefined4 result;\n  uint value;\n  bool flag;\n  \n  if ((*flags & 1) != 0) {\n    if (((_DAT_40021004 & 0xc) == 4) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) != 0)))) {\n      if (((_DAT_40021000 & 0x20000) != 0) && (flags[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      value = flags[1];\n      if (value == 0x10000) {\n        _DAT_40021000 = _DAT_40021000 | 0x10000;\n      }\n      else if (value == 0) {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      else if (value == 0x50000) {\n        _DAT_40021000 = _DAT_40021000 | 0x50000;\n      }\n      else {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      if (flags[1] == 0) {\n        initial_value = get_data_value();\n        while ((_DAT_40021000 & 0x20000) != 0) {\n          current_value = get_data_value();\n          if (100 < (uint)(current_value - initial_value)) {\n            return 3;\n          }\n        }\n      }\n      else {\n        initial_value = get_data_value();\n        while ((_DAT_40021000 & 0x20000) == 0) {\n          current_value = get_data_value();\n          if (100 < (uint)(current_value - initial_value)) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*flags & 2) != 0) {\n    if (((_DAT_40021004 & 0xc) == 0) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) == 0)))) {\n      if (((_DAT_40021000 & 2) != 0) && (flags[4] != 1)) {\n        return 1;\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | flags[5] << 3;\n    }\n    else if (flags[4] == 0) {\n      _DAT_42420000 = 0;\n      initial_value = get_data_value();\n      while ((_DAT_40021000 & 2) != 0) {\n        current_value = get_data_value();\n        if (2 < (uint)(current_value - initial_value)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420000 = 1;\n      initial_value = get_data_value();\n      while ((_DAT_40021000 & 2) == 0) {\n        current_value = get_data_value();\n        if (2 < (uint)(current_value - initial_value)) {\n          return 3;\n        }\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | flags[5] << 3;\n    }\n  }\n  if ((*flags & 8) != 0) {\n    if (flags[6] == 0) {\n      _DAT_42420480 = 0;\n      initial_value = get_data_value();\n      while ((_DAT_40021024 & 2) != 0) {\n        current_value = get_data_value();\n        if (2 < (uint)(current_value - initial_value)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420480 = 1;\n      initial_value = get_data_value();\n      while ((_DAT_40021024 & 2) == 0) {\n        current_value = get_data_value();\n        if (2 < (uint)(current_value - initial_value)) {\n          return 3;\n        }\n      }\n      calculate_scaled_delay(1);\n    }\n  }\n  if ((*flags & 4) != 0) {\n    flag = (_DAT_4002101c & 0x10000000) == 0;\n    if (flag) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      initial_value = get_data_value();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        current_value = get_data_value();\n        if (100 < (uint)(current_value - initial_value)) {\n          return 3;\n        }\n      }\n    }\n    value = flags[3];\n    if (value == 1) {\n      _DAT_40021020 = _DAT_40021020 | 1;\n    }\n    else if (value == 0) {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    else if (value == 5) {\n      _DAT_40021020 = _DAT_40021020 | 5;\n    }\n    else {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    if (flags[3] == 0) {\n      initial_value = get_data_value();\n      while ((_DAT_40021020 & 2) != 0) {\n        current_value = get_data_value();\n        if (5000 < (uint)(current_value - initial_value)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      initial_value = get_data_value();\n      while ((_DAT_40021020 & 2) == 0) {\n        current_value = get_data_value();\n        if (5000 < (uint)(current_value - initial_value)) {\n          return 3;\n        }\n      }\n    }\n    if (flag) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if (flags[7] == 0) {\n    result = 0;\n  }\n  else if ((_DAT_40021004 & 0xc) == 8) {\n    result = 1;\n  }\n  else if (flags[7] == 2) {\n    _DAT_42420060 = 0;\n    initial_value = get_data_value();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        if (flags[8] == 0x10000) {\n          _DAT_40021004 = _DAT_40021004 & 0xfffdffff | flags[2];\n        }\n        _DAT_40021004 = _DAT_40021004 & 0xffc2ffff | flags[8] | flags[9];\n        _DAT_42420060 = 1;\n        initial_value = get_data_value();\n        do {\n          if ((_DAT_40021000 & 0x2000000) != 0) {\n            return 0;\n          }\n          current_value = get_data_value();\n        } while ((uint)(current_value - initial_value) < 3);\n        return 3;\n      }\n      current_value = get_data_value();\n    } while ((uint)(current_value - initial_value) < 3);\n    result = 3;\n  }\n  else {\n    _DAT_42420060 = 0;\n    initial_value = get_data_value();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        return 0;\n      }\n      current_value = get_data_value();\n    } while ((uint)(current_value - initial_value) < 3);\n    result = 3;\n  }\n  return result;\n}\n\n",
            "current_name": "check_status_and_wait_08003688",
            "entrypoint": "0x08003688",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003688": "check_status_and_wait_08003688",
                "bVar5": "flag",
                "calculate_scaled_delay_0800365c": "calculate_scaled_delay",
                "data_value": "get_data_value",
                "get_data_value_08001cc4": "get_data_value",
                "iVar1": "initial_value",
                "iVar2": "current_value",
                "param_1": "flags",
                "uVar3": "result",
                "uVar4": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003a68": {
            "additional_data": {
                "FUN_08003a68": {
                    "calculate_clock_speed": 1,
                    "calculate_delay": 18,
                    "calculate_execution_time": 1,
                    "calculate_frequency": 1,
                    "calculate_processing_time": 1,
                    "calculate_refresh_rate": 1,
                    "calculate_signal_frequency": 1,
                    "calculate_time": 1,
                    "calculate_time_delay": 3,
                    "calculate_timeout": 1,
                    "calculate_value": 1,
                    "compute_delay": 1
                },
                "PTR_200": {
                    "lookup_table": 1
                },
                "_DAT_40021004": {
                    "bitmask": 1,
                    "config": 1,
                    "configuration": 1,
                    "control_register": 2,
                    "data": 1,
                    "data_value": 2,
                    "flag": 2,
                    "input": 1,
                    "input_data": 1,
                    "input_data_register": 1,
                    "input_value": 2,
                    "register": 1,
                    "register_value": 7,
                    "status_register": 1
                },
                "local_1c": {
                    "constant5": 1,
                    "constant_value": 1,
                    "counter": 7,
                    "data_block_size": 1,
                    "data_size": 1,
                    "delay_multiplier": 1,
                    "delay_value": 1,
                    "display_resolution": 1,
                    "divider": 1,
                    "flag": 2,
                    "input_flags": 1,
                    "input_value": 4,
                    "multiplier": 3,
                    "num_iterations": 1,
                    "precision": 1,
                    "random_value1": 1,
                    "timeout": 1,
                    "timeout_multiplier": 1,
                    "value1": 1
                },
                "uStack_10": {
                    "array_element3": 1,
                    "condition": 1,
                    "conditional_b": 1,
                    "config_value3": 1,
                    "constant": 1,
                    "constant1": 1,
                    "constant2": 2,
                    "constant3": 2,
                    "constant_c": 1,
                    "constant_value3": 1,
                    "data3": 1,
                    "divide_value": 1,
                    "divider": 1,
                    "divisor": 1,
                    "factor1": 1,
                    "flag3": 1,
                    "mask2": 1,
                    "multiplier_c": 1,
                    "parameter2": 1,
                    "parameter_c": 1,
                    "sequence": 1,
                    "stack_value3": 2,
                    "temp_value": 1,
                    "timeout_calc3": 1,
                    "value3": 3,
                    "value4": 1
                },
                "uStack_14": {
                    "array_element2": 1,
                    "condition": 1,
                    "conditional_a": 1,
                    "config_value2": 1,
                    "constant1": 1,
                    "constant2": 2,
                    "constant3": 1,
                    "constant_b": 1,
                    "constant_value2": 1,
                    "data2": 1,
                    "divider": 1,
                    "divisor": 1,
                    "flag2": 1,
                    "mask3": 1,
                    "modifier": 1,
                    "multiplier": 4,
                    "multiplier_b": 1,
                    "offset_value": 1,
                    "parameter3": 1,
                    "parameter_b": 1,
                    "stack_value2": 2,
                    "timeout_calc2": 1,
                    "value2": 3,
                    "value3": 1
                },
                "uStack_18": {
                    "another_condition": 1,
                    "array_element1": 1,
                    "base_value": 1,
                    "config": 1,
                    "config_value1": 1,
                    "constant1": 2,
                    "constant4": 1,
                    "constant_a": 1,
                    "constant_value1": 1,
                    "count": 1,
                    "data1": 1,
                    "factor": 1,
                    "flag1": 1,
                    "mask4": 1,
                    "multiplier": 3,
                    "multiplier_a": 1,
                    "offset": 2,
                    "parameter4": 1,
                    "parameter_a": 1,
                    "shifted_value": 1,
                    "stack_value1": 2,
                    "timeout_calc1": 1,
                    "value1": 3,
                    "value2": 1
                },
                "uStack_c": {
                    "array_element4": 1,
                    "base": 1,
                    "base_value": 1,
                    "checksum": 1,
                    "conditional_c": 1,
                    "config_value4": 1,
                    "constant": 2,
                    "constant1": 1,
                    "constant2": 1,
                    "constant3": 1,
                    "constant4": 2,
                    "constant_d": 1,
                    "constant_value": 1,
                    "constant_value4": 1,
                    "data4": 1,
                    "factor2": 1,
                    "flag4": 1,
                    "mask1": 1,
                    "multiplier_d": 1,
                    "parameter1": 1,
                    "parameter_d": 1,
                    "shift_value": 1,
                    "stack_value4": 2,
                    "timeout_calc4": 1,
                    "value4": 3,
                    "value5": 1
                },
                "uVar1": {
                    "delay": 7,
                    "delay_result": 1,
                    "processing_time": 1,
                    "result": 2,
                    "time_delay": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003afa"
            ],
            "code": "\n\n\nuint calculate_time_delay_08003a68(void)\n\n{\n  uint delay;\n  undefined2 counter;\n  undefined4 multiplier;\n  undefined4 multiplier;\n  undefined4 value3;\n  undefined4 value4;\n  \n  value4 = 0x10100f0e;\n  value3 = 0xd0c0b0a;\n  multiplier = 0x9080706;\n  multiplier = 0x5040302;\n  counter = 0x201;\n  if ((_DAT_40021004 & 0xc) == 8) {\n    delay = (uint)*(byte *)((int)&multiplier + ((_DAT_40021004 << 10) >> 0x1c));\n    if ((_DAT_40021004 & 0x10000) == 0) {\n      delay = delay * 4000000;\n    }\n    else {\n      delay = (delay * 8000000) /\n              (uint)*(byte *)((int)&counter - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n    }\n  }\n  else {\n    delay = 8000000;\n  }\n  return delay;\n}\n\n",
            "current_name": "calculate_time_delay_08003a68",
            "entrypoint": "0x08003a68",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003a68": "calculate_time_delay_08003a68",
                "local_1c": "counter",
                "uStack_10": "value3",
                "uStack_14": "multiplier",
                "uStack_18": "multiplier",
                "uStack_c": "value4",
                "uVar1": "delay"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003ad4": {
            "additional_data": {
                "DAT_20000084": {
                    "calculated_delay": 1,
                    "delay": 1,
                    "delay_time": 1,
                    "delay_value": 2,
                    "time_delay": 4,
                    "time_delay_result": 1,
                    "updated_delay": 1
                },
                "FUN_08003ad4": {
                    "calculate_and_update_time_delay": 1,
                    "calculate_delay_and_initialize": 1,
                    "initialize": 1,
                    "initialize_and_delay_function": 1,
                    "initialize_and_update": 1,
                    "initialize_and_update_char_value": 1,
                    "initialize_and_update_delay": 2,
                    "initialize_and_update_settings": 1,
                    "initialize_and_update_system": 1,
                    "initialize_and_update_time_delay": 1,
                    "initialize_and_update_value": 1,
                    "initialize_and_update_values": 2,
                    "initialize_data": 2,
                    "initialize_delay": 1,
                    "initialize_device": 1,
                    "initialize_system": 1,
                    "set_config": 1,
                    "set_configuration": 1,
                    "set_data_and_calculate_delay": 1,
                    "update_data_and_initialize": 1,
                    "update_data_settings": 1,
                    "update_settings": 1
                },
                "_DAT_40021004": {
                    "config_register": 1,
                    "control_flags": 2,
                    "control_register": 4,
                    "data_config": 1,
                    "data_control_register": 1,
                    "data_flags": 2,
                    "data_register": 1,
                    "data_register_2": 2,
                    "data_value_2": 1,
                    "data_variable2": 1,
                    "global_config_flags": 1,
                    "global_flags": 1,
                    "io_settings": 1,
                    "register_config": 1,
                    "setting2": 1,
                    "system_settings": 2
                },
                "_DAT_40022000": {
                    "config_flags": 1,
                    "config_register": 1,
                    "current_data_info": 1,
                    "current_settings": 1,
                    "data_buffer": 1,
                    "data_info_register": 1,
                    "data_length_flags": 1,
                    "data_register": 2,
                    "data_register_1": 2,
                    "data_value_1": 1,
                    "data_variable1": 1,
                    "delay_flags": 1,
                    "global_config": 1,
                    "global_flag_variable": 1,
                    "mem_config": 1,
                    "memory_config": 1,
                    "reserved_config_flags": 1,
                    "setting1": 1,
                    "settings_flag": 1,
                    "system_configuration": 1,
                    "system_flags": 1
                },
                "calculate_time_delay_08003a68": {
                    "calculate_delay": 1,
                    "calculate_time_delay": 14
                },
                "get_data_value_08001cc4": {
                    "get_current_data_value": 3,
                    "get_current_delay": 1,
                    "get_current_value": 1,
                    "get_data_value": 10
                },
                "iVar1": {
                    "initial_data_value": 1,
                    "initial_value": 17,
                    "start_time": 1,
                    "start_value": 3
                },
                "iVar2": {
                    "current_data_value": 1,
                    "current_time": 1,
                    "current_value": 20
                },
                "initialize_and_update_char_value_08001c3c": {
                    "init_and_update_char_value": 1,
                    "initialize_and_update_char": 1,
                    "initialize_and_update_char_value": 11,
                    "initialize_and_update_character": 1,
                    "initialize_and_update_character_value": 1
                },
                "param_1": {
                    "config_array": 1,
                    "config_bits": 1,
                    "config_parameters": 1,
                    "config_params": 3,
                    "configuration_flags": 1,
                    "data_array": 5,
                    "data_pointer": 1,
                    "data_settings": 1,
                    "device_config": 1,
                    "flags": 5,
                    "flags_array": 1,
                    "input_flags": 1,
                    "input_parameters": 1,
                    "input_params": 1,
                    "options": 1,
                    "param_array": 1,
                    "params": 1,
                    "settings": 2,
                    "system_parameters": 1,
                    "system_parameters_1": 1
                },
                "param_2": {
                    "array_length": 3,
                    "buffer_size": 1,
                    "config_length": 1,
                    "config_value": 1,
                    "data_length": 3,
                    "data_size": 2,
                    "delay_value": 1,
                    "device_id": 1,
                    "flag_count": 1,
                    "input_size": 1,
                    "length": 1,
                    "max_delay_time": 1,
                    "max_value": 1,
                    "new_param_value": 1,
                    "param_size": 1,
                    "param_value": 2,
                    "reserved_memory": 1,
                    "size": 4,
                    "system_parameters_2": 1,
                    "value": 3
                },
                "uVar3": {
                    "calculated_value": 1,
                    "result": 1,
                    "status": 3,
                    "time_delay": 24
                }
            },
            "called": [
                "FUN_08003afa"
            ],
            "calling": [
                "FUN_08001b48"
            ],
            "code": "\n\n\nundefined4 update_data_and_initialize_08003ad4(uint *flags,uint size)\n\n{\n  int initial_value;\n  int current_value;\n  uint time_delay;\n  \n  if ((_DAT_40022000 & 7) < size) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | size;\n    if (size != (size & 7)) {\n      return 1;\n    }\n  }\n  if ((*flags & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | flags[2];\n  }\n  if ((*flags & 1) != 0) {\n    time_delay = flags[1];\n    if (time_delay == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((time_delay != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = time_delay | _DAT_40021004 & 0xfffffffc;\n    initial_value = get_data_value();\n    if (flags[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        current_value = get_data_value();\n        if (5000 < (uint)(current_value - initial_value)) {\n          return 3;\n        }\n      }\n    }\n    else if (flags[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        current_value = get_data_value();\n        if (5000 < (uint)(current_value - initial_value)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        current_value = get_data_value();\n        if (5000 < (uint)(current_value - initial_value)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (size < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | size;\n    if (size != (size & 7)) {\n      return 1;\n    }\n  }\n  if ((*flags & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | flags[3];\n  }\n  if ((*flags & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | flags[4] << 3;\n  }\n  time_delay = calculate_time_delay();\n  DAT_20000084 = time_delay >> (&DAT_0800772c)[(_DAT_40021004 << 0x18) >> 0x1c];\n  initialize_and_update_char_value(0xf);\n  return 0;\n}\n\n",
            "current_name": "update_data_and_initialize_08003ad4",
            "entrypoint": "0x08003ad4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003ad4": "update_data_and_initialize_08003ad4",
                "calculate_time_delay_08003a68": "calculate_time_delay",
                "get_data_value_08001cc4": "get_data_value",
                "iVar1": "initial_value",
                "iVar2": "current_value",
                "initialize_and_update_char_value_08001c3c": "initialize_and_update_char_value",
                "param_1": "flags",
                "param_2": "size",
                "uVar3": "time_delay"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003afa": {
            "additional_data": {
                "DAT_0800772c": {
                    "delay_lookup_table": 1
                },
                "DAT_20000084": {
                    "calculated_delay": 1,
                    "delay": 1,
                    "delay_value": 2,
                    "result": 1,
                    "time_delay": 7,
                    "time_delay_result": 2,
                    "time_delay_var": 1
                },
                "DAT_40021000": {
                    "data_register": 1
                },
                "FUN_08003afa": {
                    "improve_code": 1,
                    "initialize_and_sync": 1,
                    "initialize_and_update": 5,
                    "initialize_and_update_char_value": 1,
                    "initialize_and_update_configuration": 1,
                    "initialize_and_update_data": 3,
                    "initialize_and_update_settings": 2,
                    "initialize_and_update_values": 3,
                    "initialize_connection": 1,
                    "initialize_data": 2,
                    "initialize_system": 2,
                    "perform_operation": 1,
                    "update_configuration": 3,
                    "update_settings": 1
                },
                "_DAT_40021000": {
                    "config_reg": 1,
                    "control_register": 5,
                    "data": 1,
                    "data_register": 1,
                    "data_store": 1,
                    "device_config": 1,
                    "device_control_register": 1,
                    "global_settings": 2,
                    "other_data_register": 1,
                    "register2": 1,
                    "register_value": 1,
                    "register_value_2": 1,
                    "system_flags": 1
                },
                "_DAT_40021004": {
                    "config_register": 1,
                    "configuration_data": 1,
                    "configuration_register": 1,
                    "control_reg": 1,
                    "data_register": 3,
                    "device_status": 1,
                    "register": 1,
                    "register1": 1,
                    "register_value": 4,
                    "register_value_1": 1,
                    "settings": 2,
                    "settings_register": 1,
                    "settings_value": 1
                },
                "_DAT_40022000": {
                    "config_register": 1,
                    "data2": 1,
                    "data_buffer": 1,
                    "data_register": 3,
                    "delay_reg": 1,
                    "device_status_register": 1,
                    "hardware_settings": 1,
                    "memory_allocation": 1,
                    "memory_register": 1,
                    "other_settings": 1,
                    "output_config": 1,
                    "register3": 1,
                    "register_value_3": 1,
                    "system_value": 1
                },
                "calculate_time_delay_08003a68": {
                    "calculate_delay": 4,
                    "calculate_time_delay": 11
                },
                "get_data_value_08001cc4": {
                    "get_current_data_value": 2,
                    "get_data_value": 10,
                    "get_elapsed_time": 1,
                    "get_sensor_data": 1,
                    "get_updated_value": 1
                },
                "iVar1": {
                    "current_value": 1,
                    "initial": 1,
                    "initial_data_value": 1,
                    "initial_time": 1,
                    "initial_value": 18,
                    "start_value": 5
                },
                "iVar2": {
                    "current": 1,
                    "current_data_value": 1,
                    "current_time": 2,
                    "current_value": 21,
                    "new_value": 1
                },
                "initialize_and_update_char_value_08001c3c": {
                    "init_and_update_char_value": 1,
                    "initialize_and_update_char": 2,
                    "initialize_and_update_char_value": 9,
                    "initialize_and_update_value": 2,
                    "update_char_value": 1
                },
                "param_1": {
                    "config": 1,
                    "config_flags": 2,
                    "connection_flags": 1,
                    "data_flags": 1,
                    "flags": 20,
                    "input_flags": 1,
                    "options": 1,
                    "settings": 1,
                    "settings_flags": 1,
                    "settings_pointer": 1,
                    "system_flags": 1
                },
                "param_2": {
                    "config_value": 1,
                    "data_value": 2,
                    "delay": 2,
                    "input": 1,
                    "input_param": 1,
                    "limit": 1,
                    "max_connection_count": 1,
                    "max_value": 2,
                    "num": 1,
                    "num_channels": 1,
                    "num_iterations": 1,
                    "param": 3,
                    "parameter": 1,
                    "size": 1,
                    "threshold": 2,
                    "value": 10
                },
                "uVar3": {
                    "calculated_delay": 1,
                    "config_value": 1,
                    "data": 1,
                    "data_value": 5,
                    "status": 2,
                    "status_code": 1,
                    "time_delay": 12,
                    "type": 1,
                    "value": 6
                }
            },
            "called": [
                "FUN_08003a68",
                "FUN_08001cc4",
                "FUN_08001c3c"
            ],
            "calling": [
                "FUN_08003ad4"
            ],
            "code": "\n\n\nundefined4 initialize_and_update_data_08003afa(uint *flags,uint value)\n\n{\n  int initial_value;\n  int current_value;\n  uint time_delay;\n  \n  if ((*flags & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | flags[2];\n  }\n  if ((*flags & 1) != 0) {\n    time_delay = flags[1];\n    if (time_delay == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((time_delay != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = time_delay | _DAT_40021004 & 0xfffffffc;\n    initial_value = get_data_value();\n    if (flags[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        current_value = get_data_value();\n        if (5000 < (uint)(current_value - initial_value)) {\n          return 3;\n        }\n      }\n    }\n    else if (flags[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        current_value = get_data_value();\n        if (5000 < (uint)(current_value - initial_value)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        current_value = get_data_value();\n        if (5000 < (uint)(current_value - initial_value)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (value < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | value;\n    if (value != (value & 7)) {\n      return 1;\n    }\n  }\n  if ((*flags & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | flags[3];\n  }\n  if ((*flags & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | flags[4] << 3;\n  }\n  time_delay = calculate_time_delay();\n  DAT_20000084 = time_delay >> (&DAT_0800772c)[(_DAT_40021004 << 0x18) >> 0x1c];\n  initialize_and_update_char_value(0xf);\n  return 0;\n}\n\n",
            "current_name": "initialize_and_update_data_08003afa",
            "entrypoint": "0x08003afa",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003afa": "initialize_and_update_data_08003afa",
                "calculate_time_delay_08003a68": "calculate_time_delay",
                "get_data_value_08001cc4": "get_data_value",
                "iVar1": "initial_value",
                "iVar2": "current_value",
                "initialize_and_update_char_value_08001c3c": "initialize_and_update_char_value",
                "param_1": "flags",
                "param_2": "value",
                "uVar3": "time_delay"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003c44": {
            "additional_data": {
                "DAT_20000084": {
                    "constant_value": 2,
                    "data": 6,
                    "data_value": 7,
                    "global_data": 1,
                    "global_variable": 2,
                    "result": 1,
                    "return_value": 1
                },
                "FUN_08003c44": {
                    "get_constant_value": 2,
                    "get_dat_value": 2,
                    "get_data": 6,
                    "get_data_from_address": 1,
                    "get_data_from_memory": 1,
                    "get_data_value": 12,
                    "get_global_data": 1,
                    "get_global_value": 3,
                    "get_global_variable": 2,
                    "get_return_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001b48",
                "FUN_08003c50",
                "FUN_08003c70"
            ],
            "code": "\nundefined4 get_data_value_08003c44(void)\n\n{\n  return DAT_20000084;\n}\n\n",
            "current_name": "get_data_value_08003c44",
            "entrypoint": "0x08003c44",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003c44": "get_data_value_08003c44"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003c50": {
            "additional_data": {
                "DAT_0800773c": {
                    "shift_amount": 1,
                    "shift_array": 1,
                    "shift_table": 4
                },
                "FUN_08003c50": {
                    "calculate_shifted_value": 2,
                    "data_value_shifted": 1,
                    "extracted_data_shift": 2,
                    "extracted_data_shifted": 1,
                    "extracted_data_shifted_bitwise": 1,
                    "get_shifted_data_value": 20,
                    "readable_data_value_shift": 1,
                    "shifted_data_value": 3
                },
                "_DAT_40021004": {
                    "data_shift": 1,
                    "data_shift_amount": 1,
                    "data_value": 2,
                    "data_value_2": 1,
                    "input_value": 8,
                    "original_data": 1,
                    "shift_amount": 6,
                    "shift_constant": 1,
                    "shift_factor": 1,
                    "shift_value": 7,
                    "some_value": 1
                },
                "get_data_value_08003c44": {
                    "get_data_value": 11,
                    "get_extracted_data_value": 1,
                    "get_initial_data_value": 1
                },
                "uVar1": {
                    "data_value": 27,
                    "data_value_u_var1": 1,
                    "extracted_data": 1
                }
            },
            "called": [
                "FUN_08003c44"
            ],
            "calling": [
                "FUN_08004204"
            ],
            "code": "\n\n\nuint get_shifted_data_value_08003c50(void)\n\n{\n  uint data_value;\n  \n  data_value = get_data_value();\n  return data_value >> (&DAT_0800773c)[(uint)(_DAT_40021004 << 0x15) >> 0x1d];\n}\n\n",
            "current_name": "get_shifted_data_value_08003c50",
            "entrypoint": "0x08003c50",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003c50": "get_shifted_data_value_08003c50",
                "get_data_value_08003c44": "get_data_value",
                "uVar1": "data_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003c70": {
            "additional_data": {
                "DAT_0800773c": {
                    "shift_amount": 1,
                    "shift_array": 3,
                    "shift_table": 2,
                    "shift_values": 4
                },
                "FUN_08003c70": {
                    "calculate_shifted_value": 1,
                    "extracted_value_shifted": 1,
                    "get_data_value_shifted": 1,
                    "get_shifted_data_value": 22,
                    "get_shifted_value": 2,
                    "shift_and_return_data": 1,
                    "shift_data_value": 3
                },
                "_DAT_40021004": {
                    "constant_value": 3,
                    "data": 1,
                    "data_mult": 1,
                    "data_shift": 1,
                    "data_value": 3,
                    "input": 1,
                    "input_value": 5,
                    "shift": 1,
                    "shift_amount": 6,
                    "shift_constant": 2,
                    "shift_factor": 1,
                    "shift_value": 4
                },
                "get_data_value_08003c44": {
                    "get_data_value": 19
                },
                "uVar1": {
                    "data_value": 29,
                    "data_value_result": 1
                }
            },
            "called": [
                "FUN_08003c44"
            ],
            "calling": [
                "FUN_08003da4",
                "FUN_08004204"
            ],
            "code": "\n\n\nuint get_data_value_shifted_08003c70(void)\n\n{\n  uint data_value;\n  \n  data_value = get_data_value();\n  return data_value >> (&DAT_0800773c)[(uint)(_DAT_40021004 << 0x12) >> 0x1d];\n}\n\n",
            "current_name": "get_data_value_shifted_08003c70",
            "entrypoint": "0x08003c70",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003c70": "get_data_value_shifted_08003c70",
                "get_data_value_08003c44": "get_data_value",
                "uVar1": "data_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003c90": {
            "additional_data": {
                "FUN_08003c90": {
                    "configure_device": 1,
                    "configure_hardware": 1,
                    "initialize_data": 2,
                    "initialize_device": 1,
                    "process_data": 3,
                    "process_parameters": 1,
                    "update_and_validate_memory": 1,
                    "update_configuration": 5,
                    "update_configurations": 1,
                    "update_data": 4,
                    "update_data_params": 1,
                    "update_data_settings": 1,
                    "update_data_values": 1,
                    "update_flags_and_data": 1,
                    "update_flags_and_settings": 1,
                    "update_permissions": 1,
                    "update_settings": 4
                },
                "F_08003c90": {
                    "update_configuration": 1
                },
                "_DAT_40007000": {
                    "data_flag": 1,
                    "data_flag2": 1,
                    "data_flags_register": 1,
                    "data_register": 1,
                    "data_register2": 1,
                    "register2": 2
                },
                "_DAT_40021004": {
                    "control_register": 1,
                    "memory_control_register": 1,
                    "register5": 2,
                    "update_flag": 1
                },
                "_DAT_4002101c": {
                    "cache_flags_register": 1,
                    "data_flag1": 1,
                    "data_register1": 1,
                    "permission_flag": 1,
                    "register1": 2,
                    "status_register": 1
                },
                "_DAT_40021020": {
                    "config_flag": 1,
                    "config_register": 1,
                    "data_flag3": 1,
                    "data_register3": 1,
                    "memory_configuration_register": 1,
                    "register3": 2
                },
                "_DAT_42420440": {
                    "register4": 2,
                    "temp_flag": 1,
                    "temporary_value": 1,
                    "unused_variable": 1
                },
                "bVar5": {
                    "disable_cache": 1,
                    "flag": 2,
                    "is_bit_set": 2,
                    "is_first_run": 1,
                    "is_first_time": 2,
                    "is_flag_set": 19,
                    "is_new_permission": 1,
                    "is_saved_configuration": 1,
                    "is_set": 1,
                    "is_status_flag_set": 1
                },
                "get_data_value_08001cc4": {
                    "get_data_value": 2
                },
                "iVar3": {
                    "data_value1": 3,
                    "initial_data_value": 2,
                    "initial_value": 17,
                    "previous_data_value": 1,
                    "previous_value": 1,
                    "start_value": 6,
                    "value1": 1
                },
                "iVar4": {
                    "curr_value": 1,
                    "current_data_value": 3,
                    "current_value": 22,
                    "data_value2": 3,
                    "end_value": 1,
                    "value2": 1
                },
                "param_1": {
                    "config": 4,
                    "config_data": 2,
                    "config_params": 1,
                    "config_values": 1,
                    "configurations": 1,
                    "data": 7,
                    "data_params": 1,
                    "data_pointer": 2,
                    "data_values": 1,
                    "device_settings": 1,
                    "flags": 1,
                    "flags_array": 1,
                    "memory_flags": 1,
                    "parameters": 1,
                    "permissions": 1,
                    "settings": 5
                },
                "uVar1": {
                    "flag1": 4,
                    "flag_1": 1,
                    "old_data_setting": 1,
                    "old_status": 1,
                    "temp1": 6,
                    "temp_var1": 11,
                    "tmp_flag": 1,
                    "value1": 6
                },
                "uVar2": {
                    "flag2": 4,
                    "flag_2": 1,
                    "flag_check2": 1,
                    "new_data_setting": 1,
                    "new_status": 1,
                    "temp2": 6,
                    "temp_var2": 11,
                    "value2": 6
                }
            },
            "called": [
                "FUN_08001cc4"
            ],
            "calling": [
                "FUN_08001b48"
            ],
            "code": "\n\n\nundefined4 update_flags_and_data_08003c90(uint *data)\n\n{\n  uint temp_var1;\n  uint temp_var2;\n  int initial_value;\n  int current_value;\n  bool is_flag_set;\n  \n  if ((*data & 1) != 0) {\n    is_flag_set = (_DAT_4002101c & 0x10000000) == 0;\n    if (is_flag_set) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      initial_value = get_data_value();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        current_value = get_data_value();\n        if (100 < (uint)(current_value - initial_value)) {\n          return 3;\n        }\n      }\n    }\n    if (((_DAT_40021020 & 0x300) != 0) && ((_DAT_40021020 & 0x300) != (data[1] & 0x300))) {\n      temp_var2 = _DAT_40021020 & 0xfffffcff;\n      _DAT_42420440 = 0;\n      temp_var1 = _DAT_40021020 & 1;\n      _DAT_40021020 = temp_var2;\n      if (temp_var1 != 0) {\n        initial_value = get_data_value();\n        while ((_DAT_40021020 & 2) == 0) {\n          current_value = get_data_value();\n          if (5000 < (uint)(current_value - initial_value)) {\n            return 3;\n          }\n        }\n      }\n    }\n    _DAT_40021020 = _DAT_40021020 & 0xfffffcff | data[1];\n    if (is_flag_set) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if ((*data & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffff3fff | data[2];\n  }\n  if ((*data & 0x10) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffbfffff | data[3];\n  }\n  return 0;\n}\n\n",
            "current_name": "update_flags_and_data_08003c90",
            "entrypoint": "0x08003c90",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003c90": "update_flags_and_data_08003c90",
                "bVar5": "is_flag_set",
                "get_data_value_08001cc4": "get_data_value",
                "iVar3": "initial_value",
                "iVar4": "current_value",
                "param_1": "data",
                "uVar1": "temp_var1",
                "uVar2": "temp_var2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003da4": {
            "additional_data": {
                "DAT_40021004": {
                    "value1": 1
                },
                "FUN_08003da4": {
                    "calculate_data": 1,
                    "calculate_data_value": 18,
                    "calculate_output": 1,
                    "calculate_output_value": 1,
                    "calculate_parameter_value": 1,
                    "calculate_result": 1,
                    "calculate_value": 6,
                    "get_calculation_result": 1,
                    "get_data_value": 1
                },
                "_DAT_40021000": {
                    "value2": 1
                },
                "_DAT_40021020": {
                    "value3": 1
                },
                "_DAT_40021024": {
                    "value4": 1
                },
                "local_24": {
                    "constant": 3,
                    "constant_1": 1,
                    "constant_5": 1,
                    "constant_value": 6,
                    "count": 1,
                    "data": 2,
                    "data_shifted": 1,
                    "data_value": 3,
                    "magic_number": 1,
                    "shift_value": 2,
                    "shifted_value": 10
                },
                "param_1": {
                    "data_type": 1,
                    "input": 3,
                    "input_param": 1,
                    "input_value": 26
                },
                "uStack_14": {
                    "constant1": 2,
                    "constant5": 1,
                    "constant_1": 3,
                    "constant_3": 2,
                    "constant_4": 2,
                    "constant_5": 1,
                    "constant_value1": 2,
                    "constant_value4": 2,
                    "data_value3": 1,
                    "data_value4": 1,
                    "shifted_value2": 2,
                    "shifted_value4": 1,
                    "stack4": 1,
                    "stack_value4": 1,
                    "stack_value_3": 1,
                    "stack_value_4": 1,
                    "stack_value_d": 1,
                    "stack_var4": 1,
                    "static_value": 1,
                    "third_constant": 1,
                    "value4": 1,
                    "value_1": 1,
                    "value_3": 1
                },
                "uStack_18": {
                    "constant2": 2,
                    "constant4": 1,
                    "constant_2": 5,
                    "constant_3": 2,
                    "constant_4": 1,
                    "constant_value": 1,
                    "constant_value2": 2,
                    "constant_value3": 2,
                    "data_value2": 1,
                    "data_value3": 1,
                    "second_constant": 1,
                    "shifted_value": 1,
                    "shifted_value3": 1,
                    "stack3": 1,
                    "stack_value3": 1,
                    "stack_value_2": 1,
                    "stack_value_3": 1,
                    "stack_value_c": 1,
                    "stack_var3": 1,
                    "temp_value": 1,
                    "value3": 1,
                    "value_2": 2
                },
                "uStack_1c": {
                    "constant3": 3,
                    "constant_2": 2,
                    "constant_3": 4,
                    "constant_value2": 2,
                    "constant_value3": 2,
                    "data_value1": 1,
                    "data_value2": 1,
                    "divide_value": 1,
                    "divider": 1,
                    "first_constant": 1,
                    "mask_value": 1,
                    "shifted_value2": 1,
                    "stack2": 1,
                    "stack_value2": 1,
                    "stack_value_2": 1,
                    "stack_value_b": 1,
                    "stack_var2": 1,
                    "value2": 1,
                    "value_3": 1
                },
                "uStack_20": {
                    "constant2": 1,
                    "constant4": 1,
                    "constant_1": 3,
                    "constant_2": 1,
                    "constant_4": 3,
                    "constant_value": 1,
                    "constant_value1": 1,
                    "constant_value4": 1,
                    "data_value": 1,
                    "data_value1": 1,
                    "multiplier": 2,
                    "multiplier1": 1,
                    "shifted_value": 4,
                    "shifted_value1": 1,
                    "stack1": 1,
                    "stack_value1": 1,
                    "stack_value_1": 2,
                    "stack_value_a": 1,
                    "stack_var1": 1,
                    "value1": 1,
                    "value_1": 1,
                    "value_4": 1
                },
                "uVar1": {
                    "calculated_value": 2,
                    "data_value": 4,
                    "output_value": 3,
                    "result": 20,
                    "result_value": 1,
                    "return_value": 1
                }
            },
            "called": [
                "FUN_08003c70"
            ],
            "calling": [
                "FUN_08002384",
                "FUN_08001cd0"
            ],
            "code": "\n\n\nuint calculate_data_value_08003da4(int input_value)\n\n{\n  uint result;\n  undefined2 shifted_value;\n  undefined4 shifted_value;\n  undefined4 constant_3;\n  undefined4 constant_2;\n  undefined4 constant_1;\n  \n  constant_1 = 0x10100f0e;\n  constant_2 = 0xd0c0b0a;\n  constant_3 = 0x9080706;\n  shifted_value = 0x5040302;\n  shifted_value = 0x201;\n  if (input_value == 2) {\n    result = get_data_value_shifted_08003c70();\n    result = result / ((((_DAT_40021004 << 0x10) >> 0x1e) + 1) * 2);\n  }\n  else if (input_value == 0x10) {\n    if ((_DAT_40021000 & 0x1000000) == 0) {\n      result = 0;\n    }\n    else {\n      if ((_DAT_40021004 & 0x10000) == 0) {\n        result = 4000000;\n      }\n      else {\n        result = 8000000 / *(byte *)((int)&shifted_value - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n      }\n      result = result * *(byte *)((int)&shifted_value + ((_DAT_40021004 << 10) >> 0x1c));\n      if ((_DAT_40021004 & 0x400000) == 0) {\n        result = (result * 2) / 3;\n      }\n    }\n  }\n  else if (input_value == 1) {\n    if ((_DAT_40021020 & 0x302) == 0x102) {\n      result = 0x8000;\n    }\n    else if (((_DAT_40021020 & 0x300) == 0x200) && ((_DAT_40021024 & 2) != 0)) {\n      result = 32000;\n    }\n    else if ((_DAT_40021020 & 0x300) == 0x300) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        result = 0;\n      }\n      else {\n        result = 0xf424;\n      }\n    }\n    else {\n      result = 0;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "current_name": "calculate_data_value_08003da4",
            "entrypoint": "0x08003da4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003da4": "calculate_data_value_08003da4",
                "local_24": "shifted_value",
                "param_1": "input_value",
                "uStack_14": "constant_1",
                "uStack_18": "constant_2",
                "uStack_1c": "constant_3",
                "uStack_20": "shifted_value",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003ea0": {
            "additional_data": {
                "DAT_40010414": {
                    "constant_1": 1,
                    "memory_location": 1,
                    "status_flag_value": 1
                },
                "FUN_08003ea0": {
                    "execute_and_cleanup_flags": 1,
                    "execute_and_reset_flags": 7,
                    "execute_and_set_flags": 1,
                    "execute_and_update_data": 1,
                    "execute_and_update_flags": 1,
                    "execute_and_update_state": 1,
                    "execute_callback": 5,
                    "execute_callback_and_reset": 1,
                    "execute_callback_and_reset_flag": 1,
                    "execute_callback_if_flag_set": 2,
                    "execute_if_bit_is_set": 1,
                    "execute_if_bit_set": 1,
                    "execute_if_both_flags_set": 2,
                    "initialize_memory": 2,
                    "process_and_update_flags": 1,
                    "update_configuration": 1,
                    "update_flags_and_state": 1,
                    "update_memory_and_flag": 1
                },
                "PTR_08004d18": {
                    "callback_function": 1
                },
                "PTR_40010414": {
                    "status_flag": 1
                },
                "_DAT_40010414": {
                    "buffer_address": 1,
                    "code_address": 1,
                    "constant_value": 2,
                    "data_address": 1,
                    "data_buffer": 1,
                    "flag_value": 1,
                    "global_variable": 2,
                    "memory_address": 5,
                    "memory_location": 1,
                    "some_constant": 2,
                    "some_variable": 1,
                    "special_memory_address": 1,
                    "status": 1,
                    "status_register": 2,
                    "target_address": 1
                },
                "callback_flags": {
                    "callback_flags": 1
                },
                "execute_callback_function_08004d18": {
                    "callback_function": 1,
                    "execute_callback": 11,
                    "execute_callback_action": 1,
                    "execute_callback_function": 6,
                    "execute_custom_callback": 1,
                    "execute_specific_callback": 1,
                    "perform_callback": 1,
                    "run_callback_function": 1
                },
                "execute_callback_if_flag_set": {
                    "execute_callback_if_flag_set": 1
                },
                "function_parameter_1": {
                    "new_parameter_1": 1
                },
                "int": {
                    "count": 1
                },
                "memory_location": {
                    "memory_location": 1
                },
                "new_variable_1": {
                    "flag_check_1": 1
                },
                "new_variable_2": {
                    "flag_check_2": 1
                },
                "param_1": {
                    "callback_args": 1,
                    "callback_data": 3,
                    "callback_flags": 2,
                    "config": 1,
                    "data": 1,
                    "data_pointer": 2,
                    "flag_values": 1,
                    "flags": 4,
                    "flags_param": 1,
                    "flags_pointer": 1,
                    "flags_ptr": 4,
                    "function_parameters": 1,
                    "input_params": 1,
                    "memory": 1,
                    "memory_pointer": 1,
                    "param": 1,
                    "parameters": 2,
                    "pointer_to_data": 1,
                    "state": 1
                }
            },
            "called": [
                "FUN_08004d18"
            ],
            "calling": [],
            "code": "\n\n\nvoid execute_if_bit_is_set_08003ea0(ucount **flags_ptr)\n\n{\n  if (((**flags_ptr & 2) != 0) && (((*flags_ptr)[1] & 2) != 0)) {\n    execute_callback();\n    (*flags_ptr)[1] = 0xfffffffd;\n  }\n  _DAT_40010414 = 0x20000;\n  *(undefined *)((count)flags_ptr + 0x11) = 1;\n  return;\n}\n\n",
            "current_name": "execute_if_bit_is_set_08003ea0",
            "entrypoint": "0x08003ea0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003ea0": "execute_if_bit_is_set_08003ea0",
                "execute_callback_function_08004d18": "execute_callback",
                "int": "count",
                "param_1": "flags_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003ed8": {
            "additional_data": {
                "0x1111": {
                    "condition_1_mask": 1,
                    "flag_mask_1": 1,
                    "flags_mask1": 1,
                    "mask1": 2,
                    "masked_value1": 1
                },
                "0x3d": {
                    "flag": 2,
                    "flag_offset": 3,
                    "respective_hex_value": 1
                },
                "0x444": {
                    "condition_2_mask": 1,
                    "flag_mask_2": 1,
                    "flags_mask2": 1,
                    "mask2": 2,
                    "masked_value2": 1
                },
                "0xfffffffe": {
                    "mask": 1
                },
                "FUN_08003ed8": {
                    "set_flags_and_update": 1,
                    "update_and_clear_flags": 2,
                    "update_flags": 2,
                    "update_flags_and_clear": 1,
                    "update_flags_and_reset": 17,
                    "update_flags_and_reset_values": 2,
                    "update_flags_and_values": 1,
                    "update_param_and_flags": 2,
                    "update_param_flags": 2,
                    "update_parameter_flags": 1
                },
                "PTR_08004b34": {
                    "update_flags_based_on_param": 1
                },
                "param_1": {
                    "array_ptr": 1,
                    "input": 1,
                    "input_params": 1,
                    "input_ptr": 1,
                    "param": 5,
                    "param_array": 3,
                    "param_list": 2,
                    "param_ptr": 1,
                    "parameter": 1,
                    "parameter_array": 1,
                    "parameter_list": 1,
                    "parameters": 8,
                    "params": 5
                },
                "puVar1": {
                    "array_ptr": 1,
                    "data_ptr": 2,
                    "param_1_ptr": 1,
                    "param_ptr": 1,
                    "pointer": 6,
                    "pointer1": 2,
                    "pointer_to_param_1": 1,
                    "pointer_to_param_array": 1,
                    "pointer_to_parameter": 1,
                    "pointer_variable": 1,
                    "ptr": 9,
                    "ptr_param": 1,
                    "ptr_params": 1,
                    "ptr_to_param": 1,
                    "ptr_to_param_1": 1,
                    "ptr_to_param_array": 1
                },
                "undefined": {
                    "byte": 1
                },
                "update_flags_based_on_param_08004b34": {
                    "update_flags": 8,
                    "update_flags_based_on_param": 12,
                    "update_flags_based_on_parameter": 1,
                    "update_flags_based_on_parameters": 1
                }
            },
            "called": [
                "FUN_08004b34"
            ],
            "calling": [
                "FUN_08004b3c"
            ],
            "code": "\nvoid update_flags_and_reset_values_08003ed8(uint **parameters)\n\n{\n  uint *ptr;\n  \n  *(byte *)((int)parameters + 0x3d) = 2;\n  ptr = *parameters;\n  if ((ptr[8] & 0x1111) == 0) {\n    if ((ptr[8] & 0x444) == 0) {\n      *ptr = *ptr & 0xfffffffe;\n    }\n  }\n  update_flags_based_on_param(parameters);\n  *(byte *)((int)parameters + 0x3d) = 0;\n  *(byte *)(parameters + 0xf) = 0;\n  return;\n}\n\n",
            "current_name": "update_flags_and_reset_values_08003ed8",
            "entrypoint": "0x08003ed8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003ed8": "update_flags_and_reset_values_08003ed8",
                "param_1": "parameters",
                "puVar1": "ptr",
                "undefined": "byte",
                "update_flags_based_on_param_08004b34": "update_flags_based_on_param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003f12": {
            "called": [],
            "calling": [
                "FUN_08003f18"
            ],
            "code": "\nvoid FUNC_08003f12(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08003f12",
            "entrypoint": "0x08003f12",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08003f12": "FUNC_08003f12"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08003f14": {
            "called": [],
            "calling": [
                "FUN_08003f18"
            ],
            "code": "\nvoid FUNC_08003f14(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08003f14",
            "entrypoint": "0x08003f14",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08003f14": "FUNC_08003f14"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08003f16": {
            "called": [],
            "calling": [
                "FUN_08003f18"
            ],
            "code": "\nvoid FUNC_08003f16(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08003f16",
            "entrypoint": "0x08003f16",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08003f16": "FUNC_08003f16"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08003f18": {
            "additional_data": {
                "FUNC_08003f12": {
                    "alternate_action": 2,
                    "do_something": 2,
                    "execute_alternate_function": 1,
                    "execute_alternative_function": 1,
                    "execute_func_2": 1,
                    "execute_func_alternate": 1,
                    "execute_function": 1,
                    "fallback_function": 1,
                    "handle_condition_not_met": 1,
                    "handle_failure": 2,
                    "handle_invalid_condition": 1,
                    "handle_other_case": 2,
                    "other_function": 1,
                    "perform_default_action": 1,
                    "perform_operation2": 1,
                    "process_alternate_data": 1,
                    "process_alternate_function": 1,
                    "process_condition_not_met": 1,
                    "process_default_action": 1,
                    "process_failure": 1,
                    "process_flags_invalid": 1,
                    "process_function2": 1,
                    "process_result2": 1,
                    "reset_data": 1,
                    "skip_flag": 1
                },
                "FUNC_08003f14": {
                    "execute_default_function": 1,
                    "execute_func": 1,
                    "execute_func_1": 1,
                    "execute_function": 1,
                    "perform_action": 5,
                    "perform_operation": 1,
                    "perform_operation1": 1,
                    "process": 2,
                    "process_action": 1,
                    "process_condition_met": 1,
                    "process_data": 3,
                    "process_flag": 1,
                    "process_flags_error": 1,
                    "process_function": 3,
                    "process_function1": 1,
                    "process_logic": 1,
                    "process_result": 1,
                    "process_result1": 1,
                    "process_success": 1,
                    "update_flag": 1
                },
                "FUNC_08003f16": {
                    "action_two": 1,
                    "apply_flag_effect1": 1,
                    "do_something": 1,
                    "do_something_else": 1,
                    "execute_action": 1,
                    "execute_another_function": 1,
                    "execute_func_2": 1,
                    "execute_func_3": 1,
                    "execute_func_4": 1,
                    "execute_function_2": 1,
                    "execute_function_b": 2,
                    "function2": 1,
                    "function_b": 2,
                    "handle_condition40": 1,
                    "handle_situation": 1,
                    "handle_yet_another_case": 1,
                    "perform_action": 1,
                    "perform_action2": 2,
                    "perform_action_b": 1,
                    "perform_function2": 1,
                    "perform_operation4": 1,
                    "perform_task_b": 1,
                    "process_action": 1,
                    "process_function3": 1,
                    "process_function_08003f16": 1,
                    "process_result4": 1
                },
                "FUNC_08004178": {
                    "action_three": 1,
                    "apply_change": 1,
                    "apply_flag_effect3": 1,
                    "execute_action": 1,
                    "execute_action1": 1,
                    "execute_func_3": 1,
                    "execute_func_4": 1,
                    "execute_func_5": 1,
                    "execute_function_3": 1,
                    "execute_function_c": 2,
                    "execute_other_function": 1,
                    "function3": 1,
                    "function_c": 2,
                    "handle_condition20": 1,
                    "perform_action3": 2,
                    "perform_action_c": 1,
                    "perform_final_action": 1,
                    "perform_function3": 1,
                    "perform_more_actions": 1,
                    "perform_operation5": 1,
                    "perform_task_c": 1,
                    "process_event_handler": 1,
                    "process_function4": 1,
                    "process_function_08004178": 1,
                    "process_result5": 1,
                    "take_action": 1
                },
                "FUNC_0800417a": {
                    "action_one": 1,
                    "apply_flag_effect2": 1,
                    "do_something": 1,
                    "execute_func": 1,
                    "execute_func_1": 1,
                    "execute_func_2": 1,
                    "execute_func_3": 1,
                    "execute_function_1": 1,
                    "execute_function_a": 2,
                    "function1": 1,
                    "function_a": 2,
                    "handle_condition80": 1,
                    "perform_action": 2,
                    "perform_action1": 2,
                    "perform_action_a": 1,
                    "perform_another_action": 2,
                    "perform_function1": 1,
                    "perform_operation3": 1,
                    "perform_task_a": 1,
                    "process_callback": 2,
                    "process_function2": 1,
                    "process_function_0800417a": 1,
                    "process_result3": 1
                },
                "FUN_08003f18": {
                    "execute_condition_functions": 1,
                    "execute_conditions_and_callbacks": 1,
                    "execute_conditions_check": 1,
                    "process_condition_flags": 1,
                    "process_conditions": 15,
                    "process_conditions_and_actions": 1,
                    "process_flags": 8,
                    "process_params": 2
                },
                "F_08003f18": {
                    "execute_condition_check": 1
                },
                "execute_callback_function_08004e12": {
                    "execute_callback": 4,
                    "execute_callback_func": 1,
                    "execute_callback_function": 23
                },
                "execute_function_if_condition_met_08004df8": {
                    "execute_condition_check": 1,
                    "execute_condition_function": 9,
                    "execute_condition_met_function": 2,
                    "execute_function": 2,
                    "execute_function_condition_met": 1,
                    "execute_function_if_condition_met": 8,
                    "execute_if_condition_met": 6
                },
                "iVar1": {
                    "current_flag": 1,
                    "current_value": 6,
                    "data": 1,
                    "flag": 1,
                    "flag_value": 1,
                    "val1": 1,
                    "value": 15,
                    "var1": 1
                },
                "param_1": {
                    "condition_data": 1,
                    "data": 4,
                    "flags": 6,
                    "flags_array": 1,
                    "input": 2,
                    "input_array": 2,
                    "input_data": 3,
                    "input_params": 4,
                    "p_flags": 1,
                    "param": 4,
                    "parameters": 2,
                    "params": 1
                }
            },
            "called": [
                "FUN_08004178",
                "FUN_0800417a",
                "FUN_08004e12",
                "FUN_08003f12",
                "FUN_08003f16",
                "FUN_08003f14",
                "FUN_08004df8"
            ],
            "calling": [
                "FUN_08004e20"
            ],
            "code": "\nvoid process_conditions_and_actions_08003f18(int *flags)\n\n{\n  int value;\n  \n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 2) != 0) && ((*(uint *)(value + 0xc) & 2) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffd;\n    *(undefined *)(flags + 7) = 1;\n    if ((*(uint *)(*flags + 0x18) & 3) == 0) {\n      execute_condition_function();\n      FUNC_08003f14(flags);\n    }\n    else {\n      FUNC_08003f12();\n    }\n    *(undefined *)(flags + 7) = 0;\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 4) != 0) && ((*(uint *)(value + 0xc) & 4) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffb;\n    *(undefined *)(flags + 7) = 2;\n    if ((*(uint *)(*flags + 0x18) & 0x300) == 0) {\n      execute_condition_function(flags);\n      FUNC_08003f14(flags);\n    }\n    else {\n      FUNC_08003f12(flags);\n    }\n    *(undefined *)(flags + 7) = 0;\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 8) != 0) && ((*(uint *)(value + 0xc) & 8) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffff7;\n    *(undefined *)(flags + 7) = 4;\n    if ((*(uint *)(*flags + 0x1c) & 3) == 0) {\n      execute_condition_function(flags);\n      FUNC_08003f14(flags);\n    }\n    else {\n      FUNC_08003f12(flags);\n    }\n    *(undefined *)(flags + 7) = 0;\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 0x10) != 0) && ((*(uint *)(value + 0xc) & 0x10) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffef;\n    *(undefined *)(flags + 7) = 8;\n    if ((*(uint *)(*flags + 0x1c) & 0x300) == 0) {\n      execute_condition_function(flags);\n      FUNC_08003f14(flags);\n    }\n    else {\n      FUNC_08003f12(flags);\n    }\n    *(undefined *)(flags + 7) = 0;\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 1) != 0) && ((*(uint *)(value + 0xc) & 1) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffe;\n    execute_callback_function(flags);\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 0x80) != 0) && ((*(uint *)(value + 0xc) & 0x80) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffff7f;\n    FUNC_0800417a(flags);\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 0x40) != 0) && ((*(uint *)(value + 0xc) & 0x40) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffbf;\n    FUNC_08003f16(flags);\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 0x20) != 0) && ((*(uint *)(value + 0xc) & 0x20) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffdf;\n    FUNC_08004178(flags);\n  }\n  return;\n}\n\n",
            "current_name": "process_conditions_and_actions_08003f18",
            "entrypoint": "0x08003f18",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003f18": "process_conditions_and_actions_08003f18",
                "execute_callback_function_08004e12": "execute_callback_function",
                "execute_function_if_condition_met_08004df8": "execute_condition_function",
                "iVar1": "value",
                "param_1": "flags"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004092": {
            "additional_data": {
                "FUN_08004092": {
                    "set_bit_value": 1,
                    "set_bits": 1,
                    "update_bit": 5,
                    "update_bit_in_integer": 1,
                    "update_bit_in_u_int": 1,
                    "update_bit_in_uint": 1,
                    "update_bit_in_variable": 1,
                    "update_bit_value": 8,
                    "update_bitwise": 1,
                    "update_bitwise_operation": 1,
                    "update_bitwise_value": 7,
                    "update_value": 2,
                    "update_value_with_bit": 1
                },
                "param_1": {
                    "address": 4,
                    "array_base_address": 1,
                    "base_addr": 1,
                    "base_address": 19,
                    "data": 1,
                    "data_address": 1,
                    "data_pointer": 1,
                    "input_data": 1,
                    "struct_ptr": 1,
                    "target_address": 1
                },
                "param_2": {
                    "bit_index": 4,
                    "bit_pos": 1,
                    "bit_position": 26
                },
                "param_3": {
                    "bit_value": 13,
                    "new_value": 16,
                    "value": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_080040b0"
            ],
            "code": "\nvoid update_value_with_bit_08004092(int base_address,uint bit_position,int new_value)\n\n{\n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & ~(1 << (bit_position & 0xff));\n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) | new_value << (bit_position & 0xff);\n  return;\n}\n\n",
            "current_name": "update_value_with_bit_08004092",
            "entrypoint": "0x08004092",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004092": "update_value_with_bit_08004092",
                "param_1": "base_address",
                "param_2": "bit_position",
                "param_3": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080040b0": {
            "additional_data": {
                "FUN_080040b0": {
                    "update_and_check_values": 7,
                    "update_and_clear_flags": 1,
                    "update_and_modify_value": 1,
                    "update_and_reset_flags": 1,
                    "update_bit_value": 2,
                    "update_flags": 1,
                    "update_flags_and_set_bit": 1,
                    "update_flags_and_values": 2,
                    "update_memory": 1,
                    "update_value_and_check": 1,
                    "update_value_and_check_conditions": 6,
                    "update_value_and_conditionals": 1,
                    "update_value_and_set_flag": 1,
                    "update_values": 4,
                    "update_values_and_flags": 1
                },
                "param_1": {
                    "bit_value": 1,
                    "data": 2,
                    "data_pointer": 1,
                    "input": 1,
                    "input_arguments": 1,
                    "input_data": 2,
                    "input_params": 1,
                    "memory": 1,
                    "pointer": 1,
                    "pointer_to_array": 1,
                    "pointer_to_uint": 1,
                    "pointer_to_value": 1,
                    "pointer_value": 1,
                    "update_value_ptr": 1,
                    "value": 1,
                    "value_array": 3,
                    "value_list": 1,
                    "value_pointer": 1,
                    "value_ptr": 2,
                    "values": 4,
                    "values_array": 1,
                    "values_pointer": 1,
                    "values_ptr": 1
                },
                "param_2": {
                    "bit_mask": 1,
                    "bit_to_update": 1,
                    "bit_value": 2,
                    "new_value": 9,
                    "param": 1,
                    "value": 15,
                    "value_to_update": 2
                },
                "puVar1": {
                    "bit_ptr": 1,
                    "current_pointer": 2,
                    "current_ptr": 1,
                    "current_value": 9,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "first_value_ptr": 1,
                    "input_pointer": 1,
                    "pointer": 4,
                    "pointer_to_uint_1": 1,
                    "pointer_to_value": 1,
                    "ptr": 1,
                    "ptr_data": 1,
                    "temp_ptr": 1,
                    "value_pointer": 1,
                    "value_ptr": 3
                },
                "uRam40012c00": {
                    "constant_1": 3,
                    "constant_ptr_1": 1,
                    "constant_value1": 3,
                    "constant_value_1": 1,
                    "constant_value_a": 1,
                    "memory_address_1": 1,
                    "memory_base": 1,
                    "memory_location_1": 2,
                    "special_value_1": 1
                },
                "uRam40012c20": {
                    "condition1": 1,
                    "constant_2": 2,
                    "constant_ptr_2": 1,
                    "constant_value2": 3,
                    "constant_value_2": 1,
                    "constant_value_b": 1,
                    "data_1": 1,
                    "flag_1": 1,
                    "flag_a": 1,
                    "flags_1": 1,
                    "memory_address_2": 1,
                    "memory_flag1": 1,
                    "memory_location": 1,
                    "memory_location1": 1,
                    "memory_location_1": 1,
                    "memory_location_2": 2,
                    "special_value_2": 1
                },
                "uRam40012c44": {
                    "condition2": 1,
                    "constant_3": 2,
                    "constant_ptr_3": 1,
                    "constant_value3": 1,
                    "constant_value_c": 1,
                    "data_2": 1,
                    "flag": 1,
                    "flag1": 1,
                    "flag_2": 1,
                    "flag_b": 1,
                    "flags_2": 1,
                    "memory_address_3": 1,
                    "memory_flag2": 1,
                    "memory_location2": 1,
                    "memory_location_2": 1,
                    "memory_location_3": 2,
                    "special_value_3": 1,
                    "updated_flag": 1,
                    "variable_3": 1
                }
            },
            "called": [
                "FUN_08004092"
            ],
            "calling": [
                "FUN_08004b3c"
            ],
            "code": "\nundefined4 update_and_check_values_080040b0(uint **values,undefined4 value)\n\n{\n  uint *current_value;\n  \n  update_value_with_bit_08004092(*values,value,0);\n  if (((*values == (uint *)0x40012c00) && ((constant_value2 & 0x1111) == 0)) &&\n     ((constant_value2 & 0x444) == 0)) {\n    constant_3 = constant_3 & 0xffff7fff;\n  }\n  current_value = *values;\n  if (((current_value[8] & 0x1111) == 0) && ((current_value[8] & 0x444) == 0)) {\n    *current_value = *current_value & 0xfffffffe;\n  }\n  *(undefined *)((int)values + 0x3d) = 1;\n  return 0;\n}\n\n",
            "current_name": "update_and_check_values_080040b0",
            "entrypoint": "0x080040b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080040b0": "update_and_check_values_080040b0",
                "param_1": "values",
                "param_2": "value",
                "puVar1": "current_value",
                "uRam40012c20": "constant_value2",
                "uRam40012c44": "constant_3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004110": {
            "additional_data": {
                "0x20": {
                    "parameter_offset": 1
                },
                "4": {
                    "bit_mask": 1
                },
                "FUN_08004110": {
                    "set_bit": 1,
                    "set_bit_value": 1,
                    "update_bit": 2,
                    "update_bit_at_position": 1,
                    "update_bit_field": 2,
                    "update_bit_fields": 1,
                    "update_bit_value": 1,
                    "update_bits": 2,
                    "update_bitwise": 1,
                    "update_bitwise_operations": 1,
                    "update_bitwise_value": 2,
                    "update_data": 2,
                    "update_data_with_bitmask": 1,
                    "update_flag": 2,
                    "update_flags": 2,
                    "update_parameter_value": 2,
                    "update_params": 1,
                    "update_register": 1,
                    "update_register_bits": 1,
                    "update_register_value": 1,
                    "update_value": 2,
                    "update_value_in_memory": 1
                },
                "param_1": {
                    "address": 1,
                    "base_address": 21,
                    "data": 1,
                    "data_address": 3,
                    "object_address": 1,
                    "register_address": 3,
                    "target_address": 1
                },
                "param_2": {
                    "bit_offset": 13,
                    "bit_position": 17,
                    "position": 1
                },
                "param_3": {
                    "bit_value": 7,
                    "data_to_set": 1,
                    "new_data": 1,
                    "new_value": 14,
                    "value": 7,
                    "value_to_update": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800412c"
            ],
            "code": "\nvoid update_bitwise_operations_08004110(int base_address,uint bit_position,int new_value)\n\n{\n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & ~(4 << (bit_position & 0xff));\n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) | new_value << (bit_position & 0xff);\n  return;\n}\n\n",
            "current_name": "update_bitwise_operations_08004110",
            "entrypoint": "0x08004110",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004110": "update_bitwise_operations_08004110",
                "param_1": "base_address",
                "param_2": "bit_position",
                "param_3": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800412c": {
            "additional_data": {
                "0x11": {
                    "index": 1,
                    "register": 1
                },
                "0x1111": {
                    "bit_mask1": 1,
                    "first_mask": 1,
                    "mask_a": 1
                },
                "0x444": {
                    "bit_mask2": 1,
                    "mask_b": 1,
                    "second_mask": 1
                },
                "0xffff7fff": {
                    "bit_mask3": 1
                },
                "0xfffffffe": {
                    "bit_mask4": 1
                },
                "FUN_0800412c": {
                    "clear_flags_and_bits": 2,
                    "clear_flags_and_update_values": 1,
                    "update_and_check_bits": 1,
                    "update_and_check_bitwise_operations": 1,
                    "update_and_clear_bits": 1,
                    "update_and_clear_bitwise_operations": 1,
                    "update_and_reset_flags": 1,
                    "update_array": 1,
                    "update_bit_fields": 1,
                    "update_bitwise_flags": 2,
                    "update_bitwise_operations": 12,
                    "update_data": 2,
                    "update_data_and_check_for_improvement": 1,
                    "update_flags": 2,
                    "update_flags_and_values": 1,
                    "update_values_if_conditions_met": 1
                },
                "UPDATE_BITWISE_OPERATIONS_08004110": {
                    "update_bitwise_operations": 1
                },
                "param_1": {
                    "array": 1,
                    "array_ptr": 2,
                    "bit_array": 1,
                    "bit_fields": 1,
                    "bits": 1,
                    "bitwise_data": 1,
                    "bitwise_operations": 1,
                    "data": 6,
                    "data_pointer": 2,
                    "data_ptr": 2,
                    "flag_array": 1,
                    "flags": 1,
                    "flags_and_values": 1,
                    "input": 2,
                    "input_array": 1,
                    "input_data": 2,
                    "input_params": 1,
                    "input_pointer": 1,
                    "ptr_array": 1,
                    "value": 2
                },
                "param_2": {
                    "bit": 1,
                    "bit_value": 3,
                    "flag": 5,
                    "input_value": 1,
                    "new_value": 1,
                    "param": 1,
                    "param_value": 2,
                    "value": 17
                },
                "puVar1": {
                    "array": 1,
                    "array_ptr": 1,
                    "bit_fields_ptr": 1,
                    "bits_pointer": 1,
                    "current_array": 2,
                    "current_bit_array": 1,
                    "data": 3,
                    "data_pointer": 1,
                    "data_ptr": 3,
                    "data_ptr_2": 1,
                    "data_row": 1,
                    "element": 1,
                    "flags": 1,
                    "flags_and_values_pointer": 1,
                    "flags_pointer": 1,
                    "pointer": 3,
                    "pointer_to_operations": 1,
                    "ptr": 4,
                    "temp_pointer": 1,
                    "temp_ptr": 1,
                    "update_pointer": 1
                },
                "update_bitwise_operations_08004110": {
                    "update_bitwise_operations": 2,
                    "update_operations": 2
                }
            },
            "called": [
                "FUN_08004110"
            ],
            "calling": [
                "FUN_08004b3c"
            ],
            "code": "\nundefined4 update_and_check_bitwise_operations_0800412c(uint **data,undefined4 value)\n\n{\n  uint *ptr;\n  \n  update_bitwise_operations(*data,value,0);\n  ptr = *data;\n  if (((ptr[8] & 0x1111) == 0) && ((ptr[8] & 0x444) == 0)) {\n    ptr[0x11] = ptr[0x11] & 0xffff7fff;\n  }\n  ptr = *data;\n  if (((ptr[8] & 0x1111) == 0) && ((ptr[8] & 0x444) == 0)) {\n    *ptr = *ptr & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "current_name": "update_and_check_bitwise_operations_0800412c",
            "entrypoint": "0x0800412c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800412c": "update_and_check_bitwise_operations_0800412c",
                "param_1": "data",
                "param_2": "value",
                "puVar1": "ptr",
                "update_bitwise_operations_08004110": "update_bitwise_operations"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004178": {
            "called": [],
            "calling": [
                "FUN_08003f18"
            ],
            "code": "\nvoid FUNC_08004178(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08004178",
            "entrypoint": "0x08004178",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08004178": "FUNC_08004178"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800417a": {
            "called": [],
            "calling": [
                "FUN_08003f18"
            ],
            "code": "\nvoid FUNC_0800417a(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800417a",
            "entrypoint": "0x0800417a",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800417a": "FUNC_0800417a"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800417c": {
            "additional_data": {
                "0x14": {
                    "address_offset2": 1,
                    "bit_1_mask": 1,
                    "bit_field2_offset": 1,
                    "bit_mask2": 1,
                    "mask2": 1,
                    "mask2_offset": 1,
                    "value2_offset": 1
                },
                "0x20": {
                    "flag_value": 1
                },
                "0x3a": {
                    "flag_offset": 1,
                    "offset": 1,
                    "value": 2
                },
                "0xc": {
                    "address_offset1": 1,
                    "bit_5_mask": 1,
                    "bit_field1_offset": 1,
                    "bit_mask1": 1,
                    "mask1": 1,
                    "mask1_offset": 1,
                    "value1_offset": 1
                },
                "0xfffffedf": {
                    "bit_field1_mask": 1,
                    "clear_bit_5_mask": 1
                },
                "0xfffffffe": {
                    "bit_field2_mask": 1,
                    "clear_bit_1_mask": 1
                },
                "FUN_0800417c": {
                    "clear_bit_and_set_value": 1,
                    "clear_bit_fields": 1,
                    "clear_bit_flags": 1,
                    "clear_bit_values": 1,
                    "clear_bits": 1,
                    "clear_bits_and_set_flag": 2,
                    "clear_bits_and_set_space": 2,
                    "clear_bits_and_set_space_character": 1,
                    "clear_bits_in_memory": 1,
                    "clear_flags": 5,
                    "clear_flags_and_set_space": 1,
                    "clear_flags_and_set_space_char": 1,
                    "clear_flags_and_set_space_character": 1,
                    "clear_permissions": 1,
                    "set_flag_bits": 1,
                    "set_flags_and_values": 2,
                    "update_data": 1,
                    "update_flags_and_value": 2,
                    "update_flags_and_values": 2,
                    "update_memory_values": 2,
                    "update_parameters": 1
                },
                "PTR_DAT_14": {
                    "address14": 1
                },
                "PTR_DAT_c": {
                    "address_c": 1
                },
                "int": {
                    "integer": 1
                },
                "param_1": {
                    "arg1": 1,
                    "array": 4,
                    "array_pointer": 1,
                    "array_ptr": 1,
                    "data": 2,
                    "data_buffer": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "flags": 1,
                    "flags_pointer": 1,
                    "flags_ptr": 1,
                    "input_array": 2,
                    "input_pointer": 2,
                    "input_ptr": 1,
                    "memory_address": 3,
                    "memory_block": 1,
                    "memory_pointer": 1,
                    "pointer": 2,
                    "pointer_to_flags": 1,
                    "ptr": 1
                },
                "uint": {
                    "unsigned_int": 3,
                    "unsigned_integer": 1
                },
                "undefined": {
                    "undefined": 1,
                    "undefined_type": 1,
                    "uninitialized": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080046b8"
            ],
            "code": "\nvoid clear_bit_flags_0800417c(integer *array)\n\n{\n  *(unsigned_int *)(*array + 0xc) = *(unsigned_int *)(*array + 0xc) & 0xfffffedf;\n  *(unsigned_int *)(*array + 0x14) = *(unsigned_int *)(*array + 0x14) & 0xfffffffe;\n  *(undefined *)((integer)array + 0x3a) = 0x20;\n  return;\n}\n\n",
            "current_name": "clear_bit_flags_0800417c",
            "entrypoint": "0x0800417c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800417c": "clear_bit_flags_0800417c",
                "int": "integer",
                "param_1": "array",
                "uint": "unsigned_int"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004198": {
            "additional_data": {
                "0x1000": {
                    "threshold": 1
                },
                "FUN_08004198": {
                    "decode_and_update_value": 1,
                    "decode_data": 3,
                    "extract_and_modify_value": 1,
                    "extract_and_update_value": 1,
                    "extract_data": 1,
                    "parse_data": 1,
                    "parse_input": 1,
                    "process_binary_data": 1,
                    "process_data": 16,
                    "process_input": 2,
                    "process_param": 3
                },
                "param_1": {
                    "data": 20,
                    "data_array": 2,
                    "data_ptr": 1,
                    "input": 1,
                    "input_array": 2,
                    "input_data": 1,
                    "param": 1,
                    "parameters": 1,
                    "params": 1,
                    "values": 1
                },
                "pbVar2": {
                    "byte_array_ptr": 1,
                    "byte_pointer": 5,
                    "byte_ptr": 20,
                    "current_byte": 1,
                    "ptr": 1,
                    "ptr_byte": 1,
                    "ptr_to_byte": 1
                },
                "sVar1": {
                    "count": 8,
                    "counter": 6,
                    "decrement": 1,
                    "remaining_attempts": 1,
                    "remaining_count": 5,
                    "remaining_iterations": 7,
                    "temp_var": 1,
                    "updated_count": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080046b8"
            ],
            "code": "\nundefined4 process_binary_data_08004198(int *data)\n\n{\n  short count;\n  byte *byte_ptr;\n  \n  if (*(char *)((int)data + 0x39) != '!') {\n    return 2;\n  }\n  if (data[2] == 0x1000) {\n    *(uint *)(*data + 4) = *(ushort *)data[8] & 0x1ff;\n    if (data[4] == 0) {\n      data[8] = data[8] + 2;\n    }\n    else {\n      data[8] = data[8] + 1;\n    }\n  }\n  else {\n    byte_ptr = (byte *)data[8];\n    data[8] = (int)(byte_ptr + 1);\n    *(uint *)(*data + 4) = (uint)*byte_ptr;\n  }\n  count = *(short *)((int)data + 0x26) + -1;\n  *(short *)((int)data + 0x26) = count;\n  if (count == 0) {\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xffffff7f;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x40;\n    return 0;\n  }\n  return 0;\n}\n\n",
            "current_name": "process_binary_data_08004198",
            "entrypoint": "0x08004198",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004198": "process_binary_data_08004198",
                "param_1": "data",
                "pbVar2": "byte_ptr",
                "sVar1": "count"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004204": {
            "additional_data": {
                "FUN_08004204": {
                    "calculate_and_set_values": 2,
                    "calculate_data": 1,
                    "calculate_data_checksum": 1,
                    "calculate_data_value": 2,
                    "calculate_modified_values": 1,
                    "calculate_result": 2,
                    "calculate_shifted_data_value": 1,
                    "calculate_shifted_value": 3,
                    "calculate_value": 1,
                    "calculate_values": 6,
                    "calculate_values_and_store": 1,
                    "update_data": 1,
                    "update_data_values": 6,
                    "update_shifted_values": 1,
                    "update_values": 2
                },
                "get_data_value_shifted_08003c70": {
                    "get_data_value_shifted": 1
                },
                "get_shifted_data_value_08003c50": {
                    "get_shifted_data_value": 1
                },
                "iRam40013808": {
                    "calculated_value": 1,
                    "result": 2,
                    "result_value": 2,
                    "updated_data_value": 1,
                    "updated_value": 3
                },
                "iVar1": {
                    "data_value1": 2,
                    "first_shifted_data_value": 1,
                    "shifted_data_value1": 5,
                    "shifted_value1": 10,
                    "value1": 13
                },
                "iVar10": {
                    "address": 1,
                    "address_pointer": 1,
                    "base_address": 3,
                    "data_addr": 1,
                    "data_address": 2,
                    "data_pointer": 1,
                    "data_value": 9,
                    "data_value1": 1,
                    "data_value10": 2,
                    "original_value": 1,
                    "param1_address": 1,
                    "value10": 7,
                    "value_to_check": 1
                },
                "iVar2": {
                    "data_value2": 2,
                    "second_shifted_data_value": 1,
                    "shifted_data_value2": 5,
                    "shifted_value2": 10,
                    "value2": 13
                },
                "iVar3": {
                    "data_value3": 2,
                    "shifted_data_value3": 5,
                    "shifted_value3": 10,
                    "third_shifted_data_value": 1,
                    "value3": 13
                },
                "iVar4": {
                    "data_value4": 2,
                    "fourth_shifted_data_value": 1,
                    "shifted_data_value4": 5,
                    "shifted_value4": 10,
                    "value4": 13
                },
                "iVar5": {
                    "data_value5": 2,
                    "fifth_shifted_data_value": 1,
                    "shifted_data_value5": 5,
                    "shifted_value5": 10,
                    "value5": 13
                },
                "iVar6": {
                    "data_value6": 2,
                    "param1_value1": 1,
                    "shifted_data_value6": 5,
                    "shifted_value6": 10,
                    "value6": 13
                },
                "iVar7": {
                    "data_value7": 2,
                    "param1_value2": 1,
                    "shifted_data_value7": 5,
                    "shifted_value7": 10,
                    "value7": 13
                },
                "iVar8": {
                    "data_value8": 2,
                    "param1_value3": 1,
                    "shifted_data_value8": 5,
                    "shifted_value8": 10,
                    "value8": 13
                },
                "iVar9": {
                    "data_value9": 2,
                    "param1_value4": 1,
                    "shifted_data_value9": 5,
                    "shifted_value9": 10,
                    "value9": 13
                },
                "param_1": {
                    "data": 3,
                    "data_pointer": 3,
                    "data_ptr": 1,
                    "data_values": 3,
                    "input": 2,
                    "input_array": 2,
                    "input_data": 4,
                    "input_params": 2,
                    "input_values": 2,
                    "param": 1,
                    "parameters": 4,
                    "params": 2,
                    "values": 2
                }
            },
            "called": [
                "FUN_08003c50",
                "FUN_08003c70"
            ],
            "calling": [
                "FUN_0800441a"
            ],
            "code": "\nvoid update_data_values_08004204(int *parameters)\n\n{\n  int value1;\n  int value2;\n  int value3;\n  int value4;\n  int value5;\n  int value6;\n  int value7;\n  int value8;\n  int value9;\n  int data_value;\n  \n  *(uint *)(*parameters + 0x10) = *(uint *)(*parameters + 0x10) & 0xffffcfff | parameters[3];\n  *(uint *)(*parameters + 0xc) =\n       parameters[2] | parameters[4] | parameters[5] | *(uint *)(*parameters + 0xc) & 0xffffe9f3;\n  *(uint *)(*parameters + 0x14) = *(uint *)(*parameters + 0x14) & 0xfffffcff | parameters[6];\n  data_value = *parameters;\n  if (data_value != 0x40013800) {\n    value1 = get_shifted_data_value();\n    value6 = parameters[1];\n    value2 = get_shifted_data_value();\n    value7 = parameters[1];\n    value3 = get_shifted_data_value();\n    value8 = parameters[1];\n    value4 = get_shifted_data_value();\n    value9 = parameters[1];\n    value5 = get_shifted_data_value();\n    *(uint *)(data_value + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(value4 * 0x19) / (uint)(value9 << 2) +\n                        (int)(((ulonglong)(uint)(value5 * 0x19) / (ulonglong)(uint)(parameters[1] << 2))\n                             / 100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n         ((((uint)(value2 * 0x19) / (uint)(value7 << 2) +\n           (int)(((ulonglong)(uint)(value3 * 0x19) / (ulonglong)(uint)(value8 << 2)) / 100) * -100) *\n           0x10 + 0x32) / 100 & 0xf0) +\n         (int)(((ulonglong)(uint)(value1 * 0x19) / (ulonglong)(uint)(value6 << 2)) / 100) * 0x10;\n    return;\n  }\n  data_value = get_data_value_shifted();\n  value5 = parameters[1];\n  value1 = get_data_value_shifted();\n  value6 = parameters[1];\n  value2 = get_data_value_shifted();\n  value7 = parameters[1];\n  value3 = get_data_value_shifted();\n  value8 = parameters[1];\n  value4 = get_data_value_shifted();\n  updated_value = ((uint)((int)((ulonglong)\n                               (((uint)(value3 * 0x19) / (uint)(value8 << 2) +\n                                (int)(((ulonglong)(uint)(value4 * 0x19) /\n                                      (ulonglong)(uint)(parameters[1] << 2)) / 100) * -100) * 0x10 +\n                               0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n                 ((((uint)(value1 * 0x19) / (uint)(value6 << 2) +\n                   (int)(((ulonglong)(uint)(value2 * 0x19) / (ulonglong)(uint)(value7 << 2)) / 100) *\n                   -100) * 0x10 + 0x32) / 100 & 0xf0) +\n                 (int)(((ulonglong)(uint)(data_value * 0x19) / (ulonglong)(uint)(value5 << 2)) / 100) *\n                 0x10;\n  return;\n}\n\n",
            "current_name": "update_data_values_08004204",
            "entrypoint": "0x08004204",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004204": "update_data_values_08004204",
                "get_data_value_shifted_08003c70": "get_data_value_shifted",
                "get_shifted_data_value_08003c50": "get_shifted_data_value",
                "iRam40013808": "updated_value",
                "iVar1": "value1",
                "iVar10": "data_value",
                "iVar2": "value2",
                "iVar3": "value3",
                "iVar4": "value4",
                "iVar5": "value5",
                "iVar6": "value6",
                "iVar7": "value7",
                "iVar8": "value8",
                "iVar9": "value9",
                "param_1": "parameters"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080043b4": {
            "additional_data": {
                "FUN_080043b4": {
                    "check_and_modify_values": 1,
                    "check_bitwise_conditions": 1,
                    "check_condition": 2,
                    "check_condition_and_modify": 1,
                    "check_conditions": 2,
                    "check_conditions_and_set_values": 1,
                    "check_data_integrity": 1,
                    "check_data_validity": 3,
                    "check_input_validity": 1,
                    "check_param_bits": 1,
                    "check_param_conditions": 1,
                    "check_param_validity": 2,
                    "check_parameter_validity": 1,
                    "check_parameters": 5,
                    "check_validity": 2,
                    "reverse_check": 1,
                    "validate_input": 1,
                    "validate_parameters": 2,
                    "validate_params": 1,
                    "verify_parameters": 1
                },
                "bit_mask": {
                    "bit_mask_value": 1
                },
                "cmp_value": {
                    "comparison_value": 1
                },
                "data_ptr": {
                    "data_pointer": 1
                },
                "data_value": {
                    "data_value": 1
                },
                "expected_result": {
                    "expected_result_flag": 1
                },
                "get_data_value_08001cc4": {
                    "get_current_data_value": 2,
                    "get_current_value": 1,
                    "get_data_value": 6
                },
                "iVar1": {
                    "current_value": 3,
                    "data_value": 24,
                    "previous_data_value": 1,
                    "subtracted_value": 1,
                    "value_difference": 1
                },
                "max_diff": {
                    "max_difference": 1
                },
                "param_1": {
                    "array": 1,
                    "array_ptr": 1,
                    "data": 3,
                    "data_array": 2,
                    "data_pointer": 2,
                    "data_ptr": 3,
                    "input_array": 3,
                    "input_data": 1,
                    "input_ptr": 1,
                    "param_array": 2,
                    "param_list": 1,
                    "param_pointer": 1,
                    "param_pointer_list": 1,
                    "parameter_array": 2,
                    "parameter_list": 1,
                    "parameters": 1,
                    "pointer": 1,
                    "pointer_array": 2,
                    "pointer_to_data": 1,
                    "ptr_to_param_array": 1
                },
                "param_2": {
                    "bit_mask": 5,
                    "bitmask": 1,
                    "condition_flag": 1,
                    "data_flags": 1,
                    "flag": 2,
                    "flag_value": 1,
                    "flags": 1,
                    "input_flag": 2,
                    "input_value": 1,
                    "mask": 6,
                    "mask_value": 3,
                    "param2": 1,
                    "param_flags": 1,
                    "value": 2,
                    "value1": 3
                },
                "param_3": {
                    "condition": 3,
                    "condition_flag": 1,
                    "expected": 1,
                    "expected_flag": 1,
                    "expected_flag_value": 1,
                    "expected_result": 15,
                    "expected_validity": 1,
                    "flag": 1,
                    "is_condition1": 1,
                    "is_condition_true": 1,
                    "is_match_expected": 1,
                    "is_positive": 1,
                    "is_valid": 1,
                    "param3": 1,
                    "value2": 1
                },
                "param_4": {
                    "base_value": 1,
                    "cmp_value": 1,
                    "comparison_value": 6,
                    "condition_value": 1,
                    "current_value": 1,
                    "data_offset": 1,
                    "data_value": 6,
                    "initial_value": 1,
                    "param4": 1,
                    "reference_value": 1,
                    "threshold": 2,
                    "value": 2,
                    "value2": 2,
                    "value3": 1,
                    "value_a": 1,
                    "value_threshold": 1,
                    "value_to_compare": 2
                },
                "param_5": {
                    "data_range": 1,
                    "difference_limit": 1,
                    "difference_threshold": 1,
                    "max_diff": 1,
                    "max_difference": 15,
                    "maximum_difference": 3,
                    "param5": 1,
                    "range": 1,
                    "threshold": 4,
                    "tolerance": 1,
                    "value4": 1,
                    "value_b": 1
                },
                "return": {
                    "result": 2
                },
                "validate_params": {
                    "validate_parameters": 1
                }
            },
            "called": [
                "FUN_08001cc4"
            ],
            "calling": [
                "FUN_08004478"
            ],
            "code": "\nundefined4 check_parameter_validity_080043b4(uint **input_array,uint mask,uint expected_result,int comparison_value,uint max_difference)\n\n{\n  int data_value;\n  \n  do {\n    if (((mask & ~**input_array) == 0) != expected_result) {\n      result 0;\n    }\n  } while ((max_difference == 0xffffffff) ||\n          ((max_difference != 0 && (data_value = get_data_value(), (uint)(data_value - comparison_value) <= max_difference))));\n  (*input_array)[3] = (*input_array)[3] & 0xfffffe5f;\n  (*input_array)[5] = (*input_array)[5] & 0xfffffffe;\n  *(undefined *)((int)input_array + 0x39) = 0x20;\n  *(undefined *)((int)input_array + 0x3a) = 0x20;\n  *(undefined *)(input_array + 0xe) = 0;\n  result 3;\n}\n\n",
            "current_name": "check_parameter_validity_080043b4",
            "entrypoint": "0x080043b4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080043b4": "check_parameter_validity_080043b4",
                "get_data_value_08001cc4": "get_data_value",
                "iVar1": "data_value",
                "param_1": "input_array",
                "param_2": "mask",
                "param_3": "expected_result",
                "param_4": "comparison_value",
                "param_5": "max_difference",
                "return": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004418": {
            "called": [],
            "calling": [
                "FUN_0800441a"
            ],
            "code": "\nvoid FUNC_08004418(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08004418",
            "entrypoint": "0x08004418",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08004418": "FUNC_08004418"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800441a": {
            "additional_data": {
                "0x10": {
                    "second_value_offset": 1
                },
                "0x14": {
                    "third_value_offset": 1
                },
                "0x20": {
                    "symbol_2": 1
                },
                "0x2000": {
                    "value_to_set": 1
                },
                "0x39": {
                    "flag_offset": 1
                },
                "0x3a": {
                    "another_offset2": 1
                },
                "0xc": {
                    "first_value_offset": 1
                },
                "0xe": {
                    "some_offset": 1
                },
                "0xf": {
                    "another_offset": 1
                },
                "0xffffb7ff": {
                    "value_mask2": 1
                },
                "0xffffdfff": {
                    "value_mask1": 1
                },
                "0xffffffd5": {
                    "value_mask3": 1
                },
                "FUNC_08004418": {
                    "call_func_08004418": 1,
                    "callable_function": 1,
                    "do_something": 5,
                    "execute_additional_function": 1,
                    "execute_func": 1,
                    "execute_func_08004418": 1,
                    "execute_function": 2,
                    "helper_function": 1,
                    "initialize_data": 1,
                    "initialize_function": 1,
                    "perform_action": 1,
                    "perform_additional_operations": 1,
                    "perform_initialization": 1,
                    "some_function": 3
                },
                "FUN_0800441a": {
                    "initialize_data": 13,
                    "initialize_data_structure": 1,
                    "initialize_param_data": 1,
                    "perform_data_update": 1,
                    "process_data": 4,
                    "update_data": 7,
                    "update_data_values": 1,
                    "update_values": 1,
                    "validate_and_update_data": 1
                },
                "param_1": {
                    "data": 7,
                    "data_array": 1,
                    "data_pointer": 1,
                    "data_ptr": 18,
                    "data_struct": 1,
                    "data_structure_ptr": 1,
                    "param_data": 1,
                    "values": 1
                },
                "update_data_values_08004204": {
                    "update_data_values": 16,
                    "update_data_values_08004204": 1,
                    "update_values": 2
                }
            },
            "called": [
                "FUN_08004204",
                "FUN_08004418"
            ],
            "calling": [
                "FUN_08004f4c"
            ],
            "code": "\nundefined4 initialize_param_data_0800441a(int *data_ptr)\n\n{\n  if (data_ptr != (int *)0x0) {\n    if (*(char *)((int)data_ptr + 0x39) == '\\0') {\n      *(undefined *)(data_ptr + 0xe) = 0;\n      FUNC_08004418();\n    }\n    *(undefined *)((int)data_ptr + 0x39) = 0x24;\n    *(uint *)(*data_ptr + 0xc) = *(uint *)(*data_ptr + 0xc) & 0xffffdfff;\n    update_data_values(data_ptr);\n    *(uint *)(*data_ptr + 0x10) = *(uint *)(*data_ptr + 0x10) & 0xffffb7ff;\n    *(uint *)(*data_ptr + 0x14) = *(uint *)(*data_ptr + 0x14) & 0xffffffd5;\n    *(uint *)(*data_ptr + 0xc) = *(uint *)(*data_ptr + 0xc) | 0x2000;\n    data_ptr[0xf] = 0;\n    *(undefined *)((int)data_ptr + 0x39) = 0x20;\n    *(undefined *)((int)data_ptr + 0x3a) = 0x20;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "initialize_param_data_0800441a",
            "entrypoint": "0x0800441a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800441a": "initialize_param_data_0800441a",
                "param_1": "data_ptr",
                "update_data_values_08004204": "update_data_values"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004478": {
            "additional_data": {
                "FUN_08004478": {
                    "parse_data": 2,
                    "parse_input": 1,
                    "process_data": 25,
                    "process_input": 1,
                    "validate_and_process_data": 1,
                    "validate_and_set_values": 1
                },
                "check_parameter_validity_080043b4": {
                    "check_parameter_validity": 5,
                    "check_validity": 1
                },
                "get_data_value_08001cc4": {
                    "get_data_value": 6
                },
                "iVar1": {
                    "check_result": 4,
                    "check_validity_result": 1,
                    "is_valid": 1,
                    "result": 22,
                    "return_value": 2,
                    "validation_result": 1
                },
                "param_1": {
                    "array": 1,
                    "data": 3,
                    "data_array": 3,
                    "data_buffer": 2,
                    "data_info": 1,
                    "data_pointer": 2,
                    "data_ptr": 11,
                    "data_ptr1": 1,
                    "data_struct": 1,
                    "input_array": 1,
                    "input_buffer": 1,
                    "input_data": 3,
                    "parameter_array": 1
                },
                "param_2": {
                    "data": 3,
                    "data_array": 1,
                    "data_buffer": 1,
                    "data_ptr": 1,
                    "data_ptr2": 2,
                    "data_values": 4,
                    "input": 2,
                    "input_array": 2,
                    "input_data": 2,
                    "input_values": 1,
                    "param_array": 1,
                    "short_ptr": 1,
                    "ushort_pointer": 1,
                    "ushort_ptr": 1,
                    "value_pointer": 1,
                    "value_ptr": 4,
                    "values": 2,
                    "values_ptr": 1
                },
                "param_3": {
                    "array_length": 1,
                    "array_size": 1,
                    "data_count": 1,
                    "data_length": 6,
                    "data_size": 2,
                    "input_count": 1,
                    "input_length": 3,
                    "input_size": 2,
                    "length": 3,
                    "num_elements": 1,
                    "num_params": 1,
                    "num_values": 4,
                    "short_len": 1,
                    "value_count": 3,
                    "value_length": 1
                },
                "param_4": {
                    "additional_param": 3,
                    "constant_param": 1,
                    "data_value": 7,
                    "extra_param": 2,
                    "flag": 1,
                    "input_value": 1,
                    "param": 2,
                    "param4": 5,
                    "param_4": 5,
                    "param_four": 1,
                    "param_value": 1,
                    "result": 1,
                    "value_param": 1
                },
                "uVar2": {
                    "output_result": 1,
                    "result": 2,
                    "return_val": 1,
                    "return_value": 21,
                    "status": 6
                }
            },
            "called": [
                "FUN_08001cc4",
                "FUN_080043b4"
            ],
            "calling": [
                "FUN_080053d4"
            ],
            "code": "\nundefined4 validate_and_process_data_08004478(int *data_ptr,ushort *value_ptr,int data_length,undefined4 data_value)\n\n{\n  int result;\n  undefined4 return_value;\n  \n  if (*(char *)((int)data_ptr + 0x39) == ' ') {\n    if (value_ptr == (ushort *)0x0) {\n      return_value = 1;\n    }\n    else if (data_length == 0) {\n      return_value = 1;\n    }\n    else if (*(char *)(data_ptr + 0xe) == '\\x01') {\n      return_value = 2;\n    }\n    else {\n      *(undefined *)(data_ptr + 0xe) = 1;\n      data_ptr[0xf] = 0;\n      *(undefined *)((int)data_ptr + 0x39) = 0x21;\n      return_value = get_data_value();\n      *(short *)(data_ptr + 9) = (short)data_length;\n      *(short *)((int)data_ptr + 0x26) = (short)data_length;\n      while (*(short *)((int)data_ptr + 0x26) != 0) {\n        *(short *)((int)data_ptr + 0x26) = *(short *)((int)data_ptr + 0x26) + -1;\n        if (data_ptr[2] == 0x1000) {\n          result = check_parameter_validity(data_ptr,0x80,0,return_value,data_value);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*data_ptr + 4) = *value_ptr & 0x1ff;\n          if (data_ptr[4] == 0) {\n            value_ptr = value_ptr + 1;\n          }\n          else {\n            value_ptr = (ushort *)((int)value_ptr + 1);\n          }\n        }\n        else {\n          result = check_parameter_validity(data_ptr,0x80,0,return_value,data_value);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*data_ptr + 4) = (uint)*(byte *)value_ptr;\n          value_ptr = (ushort *)((int)value_ptr + 1);\n        }\n      }\n      result = check_parameter_validity(data_ptr,0x40,0,return_value,data_value);\n      if (result == 0) {\n        *(undefined *)((int)data_ptr + 0x39) = 0x20;\n        *(undefined *)(data_ptr + 0xe) = 0;\n        return_value = 0;\n      }\n      else {\n        return_value = 3;\n      }\n    }\n  }\n  else {\n    return_value = 2;\n  }\n  return return_value;\n}\n\n",
            "current_name": "validate_and_process_data_08004478",
            "entrypoint": "0x08004478",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004478": "validate_and_process_data_08004478",
                "check_parameter_validity_080043b4": "check_parameter_validity",
                "get_data_value_08001cc4": "get_data_value",
                "iVar1": "result",
                "param_1": "data_ptr",
                "param_2": "value_ptr",
                "param_3": "data_length",
                "param_4": "data_value",
                "uVar2": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800455a": {
            "additional_data": {
                "0x21": {
                    "exclamation_mark": 1,
                    "symbol": 1,
                    "update_value": 1
                },
                "0x26": {
                    "index3": 1,
                    "short_offset": 1,
                    "temp_value": 1
                },
                "0x39": {
                    "condition_check": 1,
                    "is_space_char": 1,
                    "offset": 1
                },
                "0x80": {
                    "update_flag": 1
                },
                "0xc": {
                    "address": 1,
                    "flag_update": 1,
                    "pointer_value": 1
                },
                "0xe": {
                    "flag": 2,
                    "flag_offset": 1
                },
                "0xf": {
                    "array_index3": 1,
                    "index4": 1,
                    "result3": 1
                },
                "8": {
                    "array_index1": 1,
                    "index1": 1,
                    "result1": 1
                },
                "9": {
                    "array_index2": 1,
                    "index2": 1,
                    "result2": 1
                },
                "FUN_0800455a": {
                    "check_and_update": 1,
                    "check_and_update_parameters": 1,
                    "check_inputs": 1,
                    "initialize_data": 3,
                    "process_data": 4,
                    "process_input": 3,
                    "process_params": 1,
                    "update_data": 1,
                    "update_param": 1,
                    "update_param_values": 1,
                    "validate_and_initialize": 1,
                    "validate_input": 9,
                    "validate_inputs": 1,
                    "validate_parameters": 1,
                    "verify_and_initialize": 1,
                    "verify_inputs": 1
                },
                "array": {
                    "data_array": 1
                },
                "char": {
                    "character": 1
                },
                "char_1": {
                    "first_char": 1
                },
                "char_2": {
                    "second_char": 1
                },
                "char_param": {
                    "char_value": 1
                },
                "input": {
                    "input_array": 1
                },
                "input_data": {
                    "data": 1
                },
                "input_params": {
                    "input_struct_ptr": 1
                },
                "input_value_1": {
                    "updated_value_1": 1
                },
                "input_value_2": {
                    "updated_value_2": 1
                },
                "input_values": {
                    "input_array": 1
                },
                "int": {
                    "integer": 1
                },
                "int_1": {
                    "temp_int_1": 1
                },
                "int_2": {
                    "temp_int_2": 1
                },
                "length_param": {
                    "length": 1
                },
                "param_1": {
                    "array": 4,
                    "data": 7,
                    "data_array": 1,
                    "data_pointer": 1,
                    "input": 2,
                    "input_array": 9,
                    "input_buf": 1,
                    "input_data": 1,
                    "input_params": 1,
                    "input_values": 1,
                    "param_array": 2,
                    "params": 1
                },
                "param_2": {
                    "length": 2,
                    "new_value1": 1,
                    "size": 1,
                    "size_param": 2,
                    "value1": 19,
                    "value_1": 6
                },
                "param_3": {
                    "length_param": 2,
                    "new_value2": 1,
                    "value": 3,
                    "value2": 19,
                    "value_2": 6
                },
                "param_value_1": {
                    "validation_value": 1
                },
                "param_value_2": {
                    "validation_value_2": 1
                },
                "ptr_input_params": {
                    "ptr_to_input_struct": 1
                },
                "short": {
                    "short_value": 1
                },
                "short_1": {
                    "short_value_1": 1
                },
                "short_2": {
                    "short_value_2": 1
                },
                "size_param": {
                    "size": 1
                },
                "uint_1": {
                    "temp_uint_1": 1
                },
                "uint_2": {
                    "temp_uint_2": 1
                },
                "undefined4": {
                    "error_value": 1
                },
                "validate_input": {
                    "validate_and_update_params": 1
                },
                "value1": {
                    "length": 1,
                    "size1": 1,
                    "value": 1
                },
                "value2": {
                    "short_value": 1,
                    "size": 1,
                    "size2": 1
                },
                "value_1": {
                    "input_value_1": 1
                },
                "value_2": {
                    "input_value_2": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005568",
                "FUN_08005604"
            ],
            "code": "\nerror_value validate_input_0800455a(integer *input_array,integer value1,integer value2)\n\n{\n  if (*(character *)((integer)input_array + 0x39) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(character *)(input_array + 0xe) != '\\x01') {\n    input_array[8] = value1;\n    *(short_value *)(input_array + 9) = (short_value)value2;\n    *(short_value *)((integer)input_array + 0x26) = (short_value)value2;\n    input_array[0xf] = 0;\n    *(undefined *)((integer)input_array + 0x39) = 0x21;\n    *(undefined *)(input_array + 0xe) = 0;\n    *(uinteger *)(*input_array + 0xc) = *(uinteger *)(*input_array + 0xc) | 0x80;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "current_name": "validate_input_0800455a",
            "entrypoint": "0x0800455a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800455a": "validate_input_0800455a",
                "char": "character",
                "int": "integer",
                "param_1": "input_array",
                "param_2": "value1",
                "param_3": "value2",
                "short": "short_value",
                "undefined4": "error_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080045a2": {
            "additional_data": {
                "0x14": {
                    "bitwise_op_2": 1,
                    "option_mask": 1
                },
                "0x22": {
                    "new_space": 1
                },
                "0x2e": {
                    "short_value": 1,
                    "version": 1
                },
                "0x3a": {
                    "flag_char": 1,
                    "space_check": 1
                },
                "0xb": {
                    "count": 1
                },
                "0xc": {
                    "bitwise_op_1": 1,
                    "flag_mask": 1
                },
                "0xe": {
                    "flag": 1,
                    "version_flag": 1
                },
                "0xf": {
                    "counter": 1,
                    "index": 1
                },
                "FUN_080045a2": {
                    "check_and_modify_params": 1,
                    "check_and_set_values": 1,
                    "initialize_data": 3,
                    "parse_input": 1,
                    "process_data": 3,
                    "process_parameters": 2,
                    "update_param_info": 1,
                    "validate_and_update_data": 1,
                    "validate_input": 13,
                    "validate_inputs": 1,
                    "validate_parameters": 2,
                    "validate_user_input": 1,
                    "verify_inputs": 1
                },
                "char_1": {
                    "first_char": 1
                },
                "char_2": {
                    "second_char": 1
                },
                "char_2e": {
                    "char_update": 1
                },
                "char_3": {
                    "third_char": 1
                },
                "char_38": {
                    "char_check": 1
                },
                "input_data": {
                    "data_array": 1
                },
                "param_1": {
                    "array": 1,
                    "data": 8,
                    "data_array": 2,
                    "input": 1,
                    "input_array": 10,
                    "input_buffer": 1,
                    "input_data": 2,
                    "integer_array": 1,
                    "param_array": 1,
                    "parameters": 3,
                    "pointer": 1
                },
                "param_2": {
                    "count_param_2": 1,
                    "length": 4,
                    "param2": 2,
                    "param_2": 1,
                    "param_2_value": 1,
                    "size": 2,
                    "size_param": 1,
                    "value1": 14,
                    "value_1": 5
                },
                "param_3": {
                    "count": 1,
                    "count_param_3": 1,
                    "flag": 1,
                    "param3": 2,
                    "param_3": 1,
                    "param_3_value": 1,
                    "value": 4,
                    "value2": 14,
                    "value_2": 5,
                    "value_param": 1
                },
                "short_14": {
                    "flag_bitwise_or": 1
                },
                "short_1c": {
                    "flag_bitwise_or_2": 1
                },
                "size_param": {
                    "size": 1
                },
                "value_param": {
                    "value": 1
                },
                "x1": {
                    "char_x1": 1
                },
                "x22": {
                    "char_x22": 1
                },
                "x2e": {
                    "short_x2e": 1
                },
                "x35": {
                    "char_x35": 1
                },
                "x3a": {
                    "char_x3a": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080054d4",
                "FUN_08005510"
            ],
            "code": "\nundefined4 validate_user_input_080045a2(int *input_array,int value1,int value2)\n\n{\n  if (*(char *)((int)input_array + 0char_x3a) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(char *)(input_array + 0xe) != '\\x01') {\n    input_array[10] = value1;\n    *(short *)(input_array + 0xb) = (short)value2;\n    *(short *)((int)input_array + 0short_x2e) = (short)value2;\n    input_array[0xf] = 0;\n    *(undefined *)((int)input_array + 0char_x3a) = 0char_x22;\n    *(undefined *)(input_array + 0xe) = 0;\n    *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) | 0char_x100;\n    *(uint *)(*input_array + 0char_x14) = *(uint *)(*input_array + 0char_x14) | 1;\n    *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) | 0x20;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "current_name": "validate_user_input_080045a2",
            "entrypoint": "0x080045a2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080045a2": "validate_user_input_080045a2",
                "param_1": "input_array",
                "param_2": "value1",
                "param_3": "value2",
                "x1": "char_x1",
                "x22": "char_x22",
                "x2e": "short_x2e",
                "x3a": "char_x3a"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080045fe": {
            "additional_data": {
                "0x20": {
                    "new_value": 1
                },
                "0x39": {
                    "constant_value": 2,
                    "default_value": 1,
                    "flag_offset": 1,
                    "new_value": 1
                },
                "0xc": {
                    "flag_offset": 2,
                    "mask_applied": 1,
                    "offset": 1,
                    "offset_value": 1
                },
                "0xffffffbf": {
                    "bit_mask": 1,
                    "flag_mask": 2
                },
                "FUN_080045fe": {
                    "clear_bit_and_set_space": 1,
                    "clear_flag": 1,
                    "clear_flag_and_set_space": 1,
                    "process_and_set_data": 1,
                    "process_data": 1,
                    "set_bit_and_process_data": 1,
                    "set_flag_and_process": 1,
                    "set_flag_and_process_data": 3,
                    "update_data": 15,
                    "update_data_and_process": 4,
                    "update_data_flags": 1,
                    "update_flags_and_process_data": 1
                },
                "param_1": {
                    "data": 1,
                    "data_pointer": 9,
                    "data_ptr": 16,
                    "flag_pointer": 1,
                    "flag_ptr": 1,
                    "input": 1
                },
                "process_data_08005604": {
                    "perform_data_processing": 1,
                    "process_data": 17
                }
            },
            "called": [
                "FUN_08005604"
            ],
            "calling": [
                "FUN_080046b8"
            ],
            "code": "\nundefined4 update_flags_and_process_data_080045fe(int *data_ptr)\n\n{\n  *(uint *)(*data_ptr + 0xc) = *(uint *)(*data_ptr + 0xc) & 0xffffffbf;\n  *(undefined *)((int)data_ptr + 0x39) = 0x20;\n  process_data();\n  return 0;\n}\n\n",
            "current_name": "update_flags_and_process_data_080045fe",
            "entrypoint": "0x080045fe",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080045fe": "update_flags_and_process_data_080045fe",
                "param_1": "data_ptr",
                "process_data_08005604": "process_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004618": {
            "additional_data": {
                "FUN_08004618": {
                    "decode_string": 1,
                    "extract_byte_from_string": 1,
                    "parse_and_process_string": 1,
                    "parse_data": 2,
                    "parse_input": 2,
                    "parse_input_string": 1,
                    "parse_string": 5,
                    "parse_value": 1,
                    "process_data": 6,
                    "process_input": 2,
                    "process_input_string": 2,
                    "process_param": 1,
                    "process_parameter": 1,
                    "process_selection": 1,
                    "process_string": 3
                },
                "F_08004618": {
                    "parse_input_string": 1
                },
                "execute_selected_function_080055e0": {
                    "execute_selected_function": 3
                },
                "param_1": {
                    "data": 7,
                    "data_array": 1,
                    "input": 5,
                    "input_array": 1,
                    "input_buffer": 1,
                    "input_data": 5,
                    "input_params": 1,
                    "input_string": 2,
                    "param": 2,
                    "parameter": 1,
                    "selection_data": 1,
                    "string_data": 2,
                    "string_info": 1,
                    "value_ptr": 1
                },
                "pbVar1": {
                    "byte_buffer": 1,
                    "byte_pointer": 6,
                    "byte_ptr": 16,
                    "destination_byte": 1,
                    "new_byte": 1,
                    "output_buffer": 1,
                    "output_byte": 2,
                    "output_byte_pointer": 1,
                    "output_byte_ptr": 1
                },
                "puVar3": {
                    "byte_ptr": 1,
                    "byte_ptr_2": 1,
                    "destination_byte": 1,
                    "new_pointer": 1,
                    "output_byte_pointer": 1,
                    "output_byte_ptr": 1,
                    "output_pointer": 2,
                    "output_ptr": 1,
                    "undef_ptr": 1,
                    "undefined_pointer": 6,
                    "undefined_ptr": 14
                },
                "sVar2": {
                    "count": 4,
                    "counter": 10,
                    "decremented_value": 1,
                    "loop_count": 2,
                    "loop_counter": 1,
                    "remaining_bytes": 1,
                    "remaining_count": 1,
                    "remaining_iterations": 6,
                    "remaining_string": 1,
                    "remaining_strings": 1,
                    "short_val": 1,
                    "short_var": 1
                }
            },
            "called": [
                "FUN_080055e0"
            ],
            "calling": [
                "FUN_080046b8"
            ],
            "code": "\nundefined4 parse_and_process_string_08004618(int *data)\n\n{\n  byte *byte_ptr;\n  short counter;\n  undefined *undefined_ptr;\n  \n  if (*(char *)((int)data + 0x3a) != '\\\"') {\n    return 2;\n  }\n  if (data[2] == 0x1000) {\n    if (data[4] == 0) {\n      *(ushort *)data[10] = (ushort)((uint)(*(int *)(*data + 4) << 0x17) >> 0x17);\n      data[10] = data[10] + 2;\n    }\n    else {\n      *(ushort *)data[10] = (ushort)*(undefined4 *)(*data + 4) & 0xff;\n      data[10] = data[10] + 1;\n    }\n  }\n  else if (data[4] == 0) {\n    undefined_ptr = (undefined *)data[10];\n    data[10] = (int)(undefined_ptr + 1);\n    *undefined_ptr = (char)*(undefined4 *)(*data + 4);\n  }\n  else {\n    byte_ptr = (byte *)data[10];\n    data[10] = (int)(byte_ptr + 1);\n    *byte_ptr = (byte)*(undefined4 *)(*data + 4) & 0x7f;\n  }\n  counter = *(short *)((int)data + 0x2e) + -1;\n  *(short *)((int)data + 0x2e) = counter;\n  if (counter != 0) {\n    return 0;\n  }\n  *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xffffffdf;\n  *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xfffffeff;\n  *(uint *)(*data + 0x14) = *(uint *)(*data + 0x14) & 0xfffffffe;\n  *(undefined *)((int)data + 0x3a) = 0x20;\n  execute_selected_function();\n  return 0;\n}\n\n",
            "current_name": "parse_and_process_string_08004618",
            "entrypoint": "0x08004618",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004618": "parse_and_process_string_08004618",
                "execute_selected_function_080055e0": "execute_selected_function",
                "param_1": "data",
                "pbVar1": "byte_ptr",
                "puVar3": "undefined_ptr",
                "sVar2": "counter"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080046b8": {
            "additional_data": {
                "FUNC_08005650": {
                    "func_08005650": 1,
                    "function1": 1,
                    "perform_action": 1,
                    "perform_operation": 1,
                    "process_data2": 1
                },
                "FUNK_08005650": {
                    "process_data2": 1
                },
                "FUN_080046b8": {
                    "handle_input_data": 1,
                    "parse_and_process_data": 1,
                    "process_conditionals": 1,
                    "process_data": 23,
                    "process_function": 1,
                    "process_input": 2,
                    "process_input_data": 1,
                    "process_params_080046b8": 1
                },
                "LAB_080047d8_1": {
                    "data_label": 1,
                    "label": 1,
                    "label1": 2,
                    "label_080047d8_1": 1
                },
                "PARAMETERS": {
                    "param_1": 1
                },
                "VAR2": {
                    "var2": 1
                },
                "VAR3": {
                    "var3": 1
                },
                "VAR4": {
                    "var4": 1
                },
                "VAR5": {
                    "var5": 1
                },
                "clear_bit_flags_0800417c": {
                    "clear_bit_flags": 5
                },
                "iVar1": {
                    "error_code": 3,
                    "init_result": 1,
                    "result": 17,
                    "result_code": 1,
                    "return_value": 6,
                    "status": 2
                },
                "initialize_data_0800258c": {
                    "initialize_data": 5
                },
                "param_1": {
                    "arguments": 1,
                    "data": 15,
                    "data_pointers": 1,
                    "input_data": 9,
                    "input_params": 1,
                    "parameters": 1,
                    "params": 1
                },
                "parseAndProcessString": {
                    "parse_and_process_string": 1
                },
                "parse_and_process_string_08004618": {
                    "parse_and_process_string": 5,
                    "process_string": 1
                },
                "processBinaryData": {
                    "process_binary_data": 1
                },
                "process_binary_data_08004198": {
                    "process_binary_data": 6
                },
                "puVar3": {
                    "data_pointer": 3,
                    "data_ptr": 2,
                    "input_ptr": 3,
                    "param": 1,
                    "param1": 1,
                    "pointer": 4,
                    "ptr": 10,
                    "ptr_data": 4,
                    "ptr_value": 1,
                    "value1": 1,
                    "var3": 1
                },
                "uVar2": {
                    "data_value1": 1,
                    "flag": 1,
                    "flag1": 1,
                    "flag2": 3,
                    "flag_2": 2,
                    "flag_value2": 1,
                    "flag_var_2": 1,
                    "flags": 1,
                    "param2_value": 1,
                    "second_value": 1,
                    "value": 2,
                    "value1": 7,
                    "value2": 4,
                    "value3": 2,
                    "value_1": 1,
                    "var2": 2
                },
                "uVar4": {
                    "bit_flag": 2,
                    "data_value2": 1,
                    "flag": 11,
                    "flag1": 3,
                    "flag2": 1,
                    "flag4": 2,
                    "flag_4": 1,
                    "flag_5": 1,
                    "flag_value": 2,
                    "flag_var_4": 1,
                    "is_binary_data": 1,
                    "value2": 2,
                    "value4": 1,
                    "value_2": 1,
                    "var4": 1
                },
                "uVar5": {
                    "data_flag": 1,
                    "data_value3": 1,
                    "first_value": 1,
                    "flag": 1,
                    "flag1": 1,
                    "flag2": 2,
                    "flag3": 1,
                    "flag5": 1,
                    "flag_1": 2,
                    "flag_mask": 1,
                    "flag_value": 1,
                    "flag_value1": 1,
                    "flag_var_5": 1,
                    "flags": 2,
                    "input_flags": 1,
                    "param1_value": 1,
                    "value1": 3,
                    "value2": 4,
                    "value3": 2,
                    "value5": 1,
                    "var1": 1,
                    "var5": 1
                },
                "updateFlagsAndProcessData": {
                    "update_flags_and_process_data": 1
                },
                "update_flags_and_process_data_080045fe": {
                    "update_flags_and_process_data": 6
                }
            },
            "called": [
                "FUN_0800258c",
                "FUN_080045fe",
                "FUN_08004618",
                "FUN_08004198",
                "FUN_0800417c",
                "FUN_08005650"
            ],
            "calling": [],
            "code": "\nvoid parse_and_process_data_080046b8(uint **data)\n\n{\n  int result;\n  uint value1;\n  uint *ptr;\n  uint flag;\n  uint value2;\n  \n  ptr = *data;\n  value2 = *ptr;\n  value1 = ptr[3];\n  if ((((value2 & 0xf) == 0) && ((value2 & 0x20) != 0)) && ((value1 & 0x20) != 0)) {\n    parse_and_process_string(data);\n    return;\n  }\n  if (((value2 & 0xf) == 0) || ((flag = ptr[5] & 1, flag == 0 && ((value1 & 0x120) == 0)))) {\n    if (((value2 & 0x80) != 0) && ((value1 & 0x80) != 0)) {\n      process_binary_data(data);\n      return;\n    }\n    if (((value2 & 0x40) != 0) && ((value1 & 0x40) != 0)) {\n      update_flags_and_process_data(data);\n    }\n  }\n  else {\n    if (((value2 & 1) != 0) && ((value1 & 0x100) != 0)) {\n      data[0xf] = (uint *)((uint)data[0xf] | 1);\n    }\n    if (((value2 & 4) != 0) && (flag != 0)) {\n      data[0xf] = (uint *)((uint)data[0xf] | 2);\n    }\n    if (((value2 & 2) != 0) && (flag != 0)) {\n      data[0xf] = (uint *)((uint)data[0xf] | 4);\n    }\n    if (((value2 & 8) != 0) && (flag != 0)) {\n      data[0xf] = (uint *)((uint)data[0xf] | 8);\n    }\n    if (data[0xf] != (uint *)0x0) {\n      if (((value2 & 0x20) != 0) && ((value1 & 0x20) != 0)) {\n        parse_and_process_string(data);\n      }\n      if ((((uint)data[0xf] & 8) == 0) && (((*data)[5] & 0x40) == 0)) {\n        FUNC_08005650(data);\n        data[0xf] = (uint *)0x0;\n        return;\n      }\n      clear_bit_flags(data);\n      ptr = *data;\n      if ((ptr[5] & 0x40) == 0) {\n        FUNC_08005650(data);\n        return;\n      }\n      ptr[5] = ptr[5] & 0xffffffbf;\n      if (data[0xd] == (uint *)0x0) {\n        FUNC_08005650(data);\n        return;\n      }\n      data[0xd][0xd] = (uint)&label1;\n      result = initialize_data(data[0xd]);\n      if (result != 0) {\n        (*(code *)data[0xd][0xd])();\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "current_name": "parse_and_process_data_080046b8",
            "entrypoint": "0x080046b8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080046b8": "parse_and_process_data_080046b8",
                "LAB_080047d8_1": "label1",
                "clear_bit_flags_0800417c": "clear_bit_flags",
                "iVar1": "result",
                "initialize_data_0800258c": "initialize_data",
                "param_1": "data",
                "parse_and_process_string_08004618": "parse_and_process_string",
                "process_binary_data_08004198": "process_binary_data",
                "puVar3": "ptr",
                "uVar2": "value1",
                "uVar4": "flag",
                "uVar5": "value2",
                "update_flags_and_process_data_080045fe": "update_flags_and_process_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080047e8": {
            "additional_data": {
                "0x39": {
                    "offset2": 2
                },
                "0x3a": {
                    "offset1": 2
                },
                "FUN_080047e8": {
                    "combine_byte_values": 1,
                    "combine_bytes": 30
                },
                "PTR_0039": {
                    "byte1_ptr": 1
                },
                "PTR_003A": {
                    "byte2_ptr": 1
                },
                "byte": {
                    "result": 1
                },
                "byte_1": {
                    "byte1": 1
                },
                "byte_2": {
                    "byte2": 1
                },
                "newVariable1": {
                    "byte_at_offset1": 1
                },
                "newVariable2": {
                    "byte_at_offset2": 1
                },
                "param_1": {
                    "address": 4,
                    "base_address": 1,
                    "input": 20,
                    "input_address": 1,
                    "input_value": 2,
                    "memory_address": 1,
                    "offset": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_0800548c",
                "FUN_080054b0"
            ],
            "code": "\nresult combine_bytes_080047e8(int input)\n\n{\n  return *(result *)(input + 0x3a) | *(result *)(input + 0x39);\n}\n\n",
            "current_name": "combine_bytes_080047e8",
            "entrypoint": "0x080047e8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080047e8": "combine_bytes_080047e8",
                "byte": "result",
                "param_1": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080047f4": {
            "additional_data": {
                "0x18": {
                    "left_shift_bits": 1
                },
                "0x1c": {
                    "right_shift_bits": 1
                },
                "0xf": {
                    "bit_mask": 1
                },
                "1": {
                    "bit_mask": 1
                },
                "FUN_080047f4": {
                    "bitwise_extraction": 1,
                    "bitwise_right_shift": 1,
                    "bitwise_shift_and_mask": 1,
                    "check_bit_value": 1,
                    "extract_bit": 4,
                    "extract_bit_from_address": 1,
                    "extract_bit_from_array": 1,
                    "extract_bit_from_uint": 1,
                    "extracted_bit": 1,
                    "get_bit": 1,
                    "get_bit_from_array": 1,
                    "get_bit_from_ptr_array": 1,
                    "get_bit_value": 8,
                    "get_nth_bit": 1,
                    "read_bit_from_address": 1,
                    "retrieve_bit": 1,
                    "retrieve_bit_from_memory": 1,
                    "retrieve_bit_from_offset": 1,
                    "retrieve_bit_value": 2,
                    "reverse_bit": 1
                },
                "local_var_1": {
                    "shifted_value": 1
                },
                "local_var_2": {
                    "bit_mask": 1
                },
                "local_var_3": {
                    "result": 1
                },
                "param_0": {
                    "constant_factor": 1
                },
                "param_1": {
                    "address": 2,
                    "array_index": 2,
                    "bit_index": 1,
                    "bit_position": 1,
                    "data": 4,
                    "index": 4,
                    "indexed_value": 1,
                    "input": 1,
                    "input_value": 6,
                    "num": 1,
                    "offset": 1,
                    "value": 7
                },
                "param_2": {
                    "address": 4,
                    "array": 2,
                    "array_address": 6,
                    "array_pointer": 2,
                    "array_ptr": 2,
                    "array_start": 2,
                    "array_start_address": 1,
                    "base_address": 8,
                    "data": 1,
                    "data_array_start_address": 1,
                    "data_offset": 1,
                    "ptr_array": 1
                },
                "param_3": {
                    "array": 1,
                    "array_element_index": 1,
                    "bit_position": 2,
                    "length": 1,
                    "offset": 1
                },
                "param_4": {
                    "bit_offset": 1,
                    "bit_position": 2,
                    "bit_shift": 1
                },
                "param_5": {
                    "bit_mask": 1,
                    "mask": 1
                },
                "param_6": {
                    "result": 1
                },
                "param_7": {
                    "shifted_value": 1
                },
                "result": {
                    "bit_result": 1
                },
                "var_1": {
                    "shift": 1
                },
                "var_2": {
                    "index": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080057b4",
                "FUN_08005890",
                "FUN_08005848"
            ],
            "code": "\nuint get_bit_value_080047f4(uint value,int base_address)\n\n{\n  return *(uint *)(base_address + ((value << 0x18) >> 0x1c) * 4) >> (value & 0xf) & 1;\n}\n\n",
            "current_name": "get_bit_value_080047f4",
            "entrypoint": "0x080047f4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080047f4": "get_bit_value_080047f4",
                "param_1": "value",
                "param_2": "base_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800480a": {
            "additional_data": {
                "FUN_0800480a": {
                    "apply_bit_mask": 1,
                    "set_bit": 3,
                    "set_bit_in_array": 7,
                    "set_flag": 1,
                    "update_bit": 5,
                    "update_bit_at_index": 1,
                    "update_bit_in_array": 3,
                    "update_bit_value": 4,
                    "update_bits": 1,
                    "update_bitwise_value": 1,
                    "update_memory": 1,
                    "update_memory_value": 1,
                    "update_param_bit": 1,
                    "write_bit_value": 1
                },
                "param_1": {
                    "bit_index": 6,
                    "bit_position": 12,
                    "data": 1,
                    "flag_position": 1,
                    "index": 1,
                    "input": 2,
                    "input_value": 1,
                    "value": 7
                },
                "param_2": {
                    "array": 13,
                    "array_address": 10,
                    "array_pointer": 1,
                    "array_ptr": 1,
                    "buffer": 1,
                    "data": 3,
                    "memory_address": 2
                },
                "uVar1": {
                    "array_index": 1,
                    "bit_index": 1,
                    "byte_index": 7,
                    "index": 9,
                    "shift_amount": 1,
                    "shifted_bit_position": 2,
                    "shifted_idx": 1,
                    "shifted_index": 5,
                    "shifted_position": 1,
                    "updated_bit": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080057b4"
            ],
            "code": "\nvoid set_bit_in_array_0800480a(uint bit_position,int array)\n\n{\n  uint index;\n  \n  index = (bit_position << 0x18) >> 0x1c;\n  *(uint *)(array + index * 4) = *(uint *)(array + index * 4) | 1 << (bit_position & 0xf);\n  return;\n}\n\n",
            "current_name": "set_bit_in_array_0800480a",
            "entrypoint": "0x0800480a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800480a": "set_bit_in_array_0800480a",
                "param_1": "bit_position",
                "param_2": "array",
                "uVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004828": {
            "additional_data": {
                "FUN_08004828": {
                    "update_bit": 10,
                    "update_bit_array": 1,
                    "update_bit_by_index": 1,
                    "update_bit_in_array": 4,
                    "update_bit_in_array_based_on_index": 1,
                    "update_bit_value": 5,
                    "update_bitfield": 1,
                    "update_bitmask": 2,
                    "update_bits": 2,
                    "update_bitwise_value": 1,
                    "update_memory_address": 1,
                    "update_memory_value": 1,
                    "update_value_in_array": 1
                },
                "param_1": {
                    "bit_index": 5,
                    "bit_position": 11,
                    "index": 1,
                    "input": 1,
                    "input_index": 1,
                    "input_value": 3,
                    "number": 1,
                    "value": 7,
                    "value_to_store": 1
                },
                "param_2": {
                    "array": 10,
                    "array_address": 9,
                    "array_start": 1,
                    "base_address": 2,
                    "bit_array_address": 1,
                    "bitfield": 1,
                    "buffer_address": 1,
                    "data": 3,
                    "data_array": 1,
                    "data_pointer": 1,
                    "memory_address": 1
                },
                "uVar1": {
                    "array_index": 1,
                    "bit_byte_index": 1,
                    "bit_index": 3,
                    "bit_index_shifted": 1,
                    "bit_offset": 2,
                    "byte_index": 1,
                    "byte_offset": 1,
                    "index": 8,
                    "shifted_bit_position": 1,
                    "shifted_index": 8,
                    "shifted_position": 1,
                    "shifted_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080057b4"
            ],
            "code": "\nvoid update_bit_value_08004828(uint bit_position,int array)\n\n{\n  uint index;\n  \n  index = (bit_position << 0x18) >> 0x1c;\n  *(uint *)(array + index * 4) = *(uint *)(array + index * 4) & ~(1 << (bit_position & 0xf));\n  return;\n}\n\n",
            "current_name": "update_bit_value_08004828",
            "entrypoint": "0x08004828",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004828": "update_bit_value_08004828",
                "param_1": "bit_position",
                "param_2": "array",
                "uVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004848": {
            "additional_data": {
                "0": {
                    "0x40010800": 1,
                    "address_0": 6,
                    "address_1": 1,
                    "base_address": 2,
                    "base_address_0": 1,
                    "first_case_value": 1,
                    "mem_address_1": 2,
                    "memory_address_0": 2,
                    "memory_address_1": 2,
                    "param_zero": 1,
                    "parameter_0": 1
                },
                "0x40010800": {
                    "address0": 2,
                    "memory_address0": 1
                },
                "0x40010c00": {
                    "address1": 2,
                    "memory_address1": 1
                },
                "0x40011000": {
                    "address2": 2,
                    "memory_address2": 1
                },
                "0x40011400": {
                    "address3": 2,
                    "memory_address3": 1
                },
                "0x40011800": {
                    "address4": 2,
                    "memory_address4": 1
                },
                "1": {
                    "0x40010c00": 1,
                    "address_1": 6,
                    "address_2": 1,
                    "address_offset_1": 1,
                    "base_address_1": 1,
                    "mem_address_2": 2,
                    "memory_address_1": 2,
                    "memory_address_2": 2,
                    "param_one": 1,
                    "parameter_1": 1,
                    "second_case_value": 1
                },
                "2": {
                    "0x40011000": 1,
                    "address_2": 6,
                    "address_3": 1,
                    "address_offset_2": 1,
                    "base_address_2": 1,
                    "mem_address_3": 2,
                    "memory_address_2": 2,
                    "memory_address_3": 2,
                    "param_two": 1,
                    "parameter_2": 1,
                    "third_case_value": 1
                },
                "3": {
                    "0x40011400": 1,
                    "address_3": 6,
                    "address_4": 1,
                    "address_offset_3": 1,
                    "base_address_3": 1,
                    "fourth_case_value": 1,
                    "mem_address_4": 2,
                    "memory_address_3": 2,
                    "memory_address_4": 2,
                    "param_three": 1,
                    "parameter_3": 1
                },
                "4": {
                    "0x40011800": 1,
                    "address_4": 6,
                    "address_5": 1,
                    "address_offset_4": 1,
                    "base_address_4": 1,
                    "fifth_case_value": 1,
                    "mem_address_5": 2,
                    "memory_address_4": 2,
                    "memory_address_5": 2,
                    "param_four": 1,
                    "parameter_4": 1
                },
                "FUN_08004848": {
                    "get_address_from_param": 1,
                    "get_memory_address": 16,
                    "get_memory_offset": 2,
                    "map_param_to_address": 9,
                    "map_parameter_value": 2,
                    "map_value_to_address": 1
                },
                "param_1": {
                    "index": 6,
                    "input": 9,
                    "input_param": 1,
                    "input_value": 3,
                    "param": 7,
                    "parameter": 1,
                    "value": 4
                },
                "return": {
                    "address": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_08005890",
                "FUN_08005848"
            ],
            "code": "\nundefined4 get_memory_address_08004848(undefined4 input)\n\n{\n  switch(input) {\n  case 0:\n    address 0x40010800;\n  case 1:\n    address 0x40010c00;\n  case 2:\n    address 0x40011000;\n  case 3:\n    address 0x40011400;\n  case 4:\n    address 0x40011800;\n  default:\n    address 0;\n  }\n}\n\n",
            "current_name": "get_memory_address_08004848",
            "entrypoint": "0x08004848",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004848": "get_memory_address_08004848",
                "param_1": "input",
                "return": "address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004884": {
            "additional_data": {
                "FUN_08004884": {
                    "configure_peripheral": 2,
                    "extract_address": 1,
                    "map_parameter_to_address": 1,
                    "set_control_register": 1,
                    "set_dt_reg": 1,
                    "set_flag_and_get_address": 1,
                    "set_flag_and_return_address": 2,
                    "set_flag_and_return_value": 2,
                    "set_flag_value": 1,
                    "set_flags_and_return_address": 1,
                    "set_memory_address": 2,
                    "set_memory_permission": 1,
                    "set_memory_permissions": 2,
                    "set_memory_value": 1,
                    "set_permission": 1,
                    "set_permissions": 4,
                    "set_register_bits": 1,
                    "set_register_value": 2,
                    "set_registers_for_value": 1,
                    "set_value_and_return_address": 1,
                    "update_data_and_return_address": 1,
                    "update_flag_and_return_value": 1
                },
                "_DAT_40021018": {
                    "address_register_40021018": 1,
                    "flag_register": 1,
                    "permission_settings": 1,
                    "register": 1,
                    "register_value": 2
                },
                "param_1": {
                    "flag": 6,
                    "flag_index": 2,
                    "input": 1,
                    "input_param": 1,
                    "input_value": 1,
                    "option": 2,
                    "parameter": 1,
                    "peripheral_index": 1,
                    "permission": 4,
                    "permission_index": 1,
                    "permission_level": 1,
                    "permission_type": 2,
                    "register_index": 3,
                    "value": 5
                },
                "uVar1": {
                    "address": 6,
                    "base_address": 2,
                    "memory_address": 1,
                    "new_address": 3,
                    "new_memory_address": 1,
                    "peripheral_address": 1,
                    "result": 6,
                    "return_address": 3,
                    "return_value": 8
                }
            },
            "called": [],
            "calling": [
                "FUN_08004bb0",
                "FUN_08004974",
                "FUN_08004f4c"
            ],
            "code": "\n\n\nundefined4 set_memory_permissions_08004884(undefined4 flag)\n\n{\n  undefined4 return_value;\n  \n  switch(flag) {\n  case 0:\n    _DAT_40021018 = _DAT_40021018 | 4;\n    return_value = 0x40010800;\n    break;\n  case 1:\n    _DAT_40021018 = _DAT_40021018 | 8;\n    return_value = 0x40010c00;\n    break;\n  case 2:\n    _DAT_40021018 = _DAT_40021018 | 0x10;\n    return_value = 0x40011000;\n    break;\n  case 3:\n    _DAT_40021018 = _DAT_40021018 | 0x20;\n    return_value = 0x40011400;\n    break;\n  case 4:\n    _DAT_40021018 = _DAT_40021018 | 0x40;\n    return_value = 0x40011800;\n    break;\n  default:\n    return_value = 0;\n  }\n  return return_value;\n}\n\n",
            "current_name": "set_memory_permissions_08004884",
            "entrypoint": "0x08004884",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004884": "set_memory_permissions_08004884",
                "param_1": "flag",
                "uVar1": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800492c": {
            "additional_data": {
                "FUN_0800492c": {
                    "calculate_index": 1,
                    "calculate_shifted_value": 1,
                    "convert_index_to_value": 1,
                    "convert_value": 1,
                    "decode_value": 1,
                    "extract_value": 4,
                    "extract_value_and_limit": 1,
                    "get_indexed_value": 2,
                    "get_modified_value": 2,
                    "get_shifted_value": 13,
                    "get_value_and_shift": 1,
                    "get_value_from_index": 1,
                    "get_value_shifted_bits": 1,
                    "map_value_to_index": 1
                },
                "iVar1": {
                    "extracted_value": 3,
                    "get_value": 1,
                    "indexed_value": 3,
                    "mapped_index": 1,
                    "result": 4,
                    "shifted_value": 3,
                    "value": 15,
                    "value_by_index": 1
                },
                "param_1": {
                    "index": 15,
                    "input": 2,
                    "input_param": 1,
                    "input_value": 3,
                    "input_value1": 1,
                    "value": 7,
                    "value1": 2
                },
                "param_2": {
                    "data": 1,
                    "index": 5,
                    "input_value2": 1,
                    "param2": 4,
                    "param_2": 2,
                    "start_index": 1,
                    "unknown": 1,
                    "unknown_2": 1,
                    "unused": 3,
                    "unused1": 1,
                    "unused_param": 4,
                    "value2": 1
                },
                "param_3": {
                    "array": 3,
                    "array_size": 3,
                    "array_start": 1,
                    "data_array": 1,
                    "data_ptr": 1,
                    "end_index": 1,
                    "index": 3,
                    "index_1": 1,
                    "input_value3": 1,
                    "param3": 5,
                    "param_3": 1,
                    "size": 1,
                    "start": 2,
                    "start_index": 1,
                    "unknown_3": 1,
                    "unused": 1,
                    "unused2": 1,
                    "value1": 1,
                    "value2": 1,
                    "value3": 1
                },
                "param_4": {
                    "array_length": 1,
                    "count": 1,
                    "end": 2,
                    "end_index": 1,
                    "index": 2,
                    "index_2": 1,
                    "input_value4": 1,
                    "length": 1,
                    "param4": 5,
                    "param_2": 1,
                    "param_4": 4,
                    "size": 2,
                    "unknown_4": 1,
                    "unused": 1,
                    "unused3": 1,
                    "unused_param_2": 2,
                    "value": 1,
                    "value2": 1,
                    "value3": 1,
                    "value4": 1
                },
                "uVar2": {
                    "converted_value": 1,
                    "modified_value": 1,
                    "result": 1,
                    "shift_amount": 1,
                    "shifted_result": 3,
                    "shifted_value": 24
                }
            },
            "called": [
                "FUN_08004cce"
            ],
            "calling": [
                "FUN_08004a4c"
            ],
            "code": "\nuint get_value_shifted_bits_0800492c(undefined4 index,undefined4 index,undefined4 param3,undefined4 param4)\n\n{\n  int value;\n  uint shifted_value;\n  \n  value = get_value_by_index_08004cce(index,&DAT_08007400,param3,param4,param4);\n  shifted_value = (uint)(value << 0xc) >> 0x1b;\n  if (0x10 < shifted_value - 1) {\n    shifted_value = 0;\n  }\n  return shifted_value;\n}\n\n",
            "current_name": "get_value_shifted_bits_0800492c",
            "entrypoint": "0x0800492c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800492c": "get_value_shifted_bits_0800492c",
                "iVar1": "value",
                "param_1": "index",
                "param_2": "index",
                "param_3": "param3",
                "param_4": "param4",
                "uVar2": "shifted_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004948": {
            "additional_data": {
                "FUN_08004948": {
                    "calculate_shifted_value": 1,
                    "decode_value": 2,
                    "extract_value": 1,
                    "extracted_value": 1,
                    "find_value": 1,
                    "get_action_from_index": 1,
                    "get_return_value": 2,
                    "get_shifted_value": 9,
                    "get_shifted_value_by_index": 1,
                    "get_value_based_on_index": 1,
                    "get_value_comparison": 1,
                    "get_value_shifted_bits": 3,
                    "get_value_with_shift": 1,
                    "process_input": 1,
                    "process_value": 4,
                    "translate_value": 1
                },
                "iVar1": {
                    "extracted_result": 1,
                    "index": 1,
                    "index_value": 1,
                    "indexed_value": 1,
                    "result": 11,
                    "shifted_value": 3,
                    "translated_value": 1,
                    "value": 8,
                    "value_at_index": 1,
                    "value_by_index": 2
                },
                "param_1": {
                    "index": 6,
                    "input": 1,
                    "input_1": 1,
                    "input_value": 12,
                    "source_index": 1,
                    "value": 7,
                    "value1": 2,
                    "value_1": 1
                },
                "param_2": {
                    "": 1,
                    "arg1": 1,
                    "arg2": 2,
                    "data": 1,
                    "index": 3,
                    "input_2": 1,
                    "param2": 2,
                    "param_2": 6,
                    "ptr_value": 1,
                    "unknown": 1,
                    "unknown_param": 2,
                    "unused_param": 3,
                    "unused_parameter": 1,
                    "value2": 2,
                    "value_2": 1
                },
                "param_3": {
                    "arg2": 1,
                    "arg3": 2,
                    "array": 1,
                    "array_ptr": 1,
                    "array_size": 1,
                    "array_value": 1,
                    "data": 1,
                    "data_1": 2,
                    "index": 8,
                    "param3": 2,
                    "param_3": 7,
                    "search_start_index": 1,
                    "start_index": 1,
                    "value3": 1,
                    "value_3": 1
                },
                "param_4": {
                    "arg3": 1,
                    "arg4": 2,
                    "data_2": 2,
                    "end_index": 1,
                    "param4": 2,
                    "param_4": 12,
                    "search_end_index": 1,
                    "size": 3,
                    "unknown_param_2": 2,
                    "unused_param": 1,
                    "unused_param_2": 1,
                    "value": 1,
                    "value4": 1,
                    "value_4": 1
                },
                "uVar2": {
                    "action": 1,
                    "shifted_bits": 6,
                    "shifted_value": 23
                }
            },
            "called": [
                "FUN_08004cce"
            ],
            "calling": [
                "FUN_08004b3c"
            ],
            "code": "\nundefined4 get_value_shifted_bits_08004948(undefined4 input_value,undefined4 param_2,undefined4 index,undefined4 param_4)\n\n{\n  int result;\n  uint shifted_value;\n  \n  result = get_value_by_index_08004cce(input_value,&DAT_080074b4,index,param_4,param_4);\n  shifted_value = (uint)(result << 0xc) >> 0x1b;\n  if (shifted_value == 3) {\n    return 8;\n  }\n  if (shifted_value != 4) {\n    if (shifted_value != 2) {\n      return 0;\n    }\n    return 4;\n  }\n  return 0xc;\n}\n\n",
            "current_name": "get_value_shifted_bits_08004948",
            "entrypoint": "0x08004948",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004948": "get_value_shifted_bits_08004948",
                "iVar1": "result",
                "param_1": "input_value",
                "param_3": "index",
                "uVar2": "shifted_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004974": {
            "additional_data": {
                "DAT_20000080": {
                    "data": 1,
                    "data_1": 1,
                    "data_value": 2
                },
                "FUN_08004974": {
                    "set_and_update_memory_permissions": 1,
                    "set_memory_permissions": 3,
                    "set_memory_permissions_08004974": 1,
                    "set_permissions_and_update_flags": 1,
                    "update_memory_permissions": 23,
                    "update_permissions": 2
                },
                "iVar3": {
                    "current_permission": 4,
                    "current_value": 3,
                    "data_value": 2,
                    "initial_permission": 1,
                    "initial_permissions": 1,
                    "input_value": 2,
                    "mem_size": 1,
                    "memory_size": 1,
                    "memory_value": 4,
                    "original_permission": 2,
                    "original_permission_flags": 1,
                    "original_permissions": 3,
                    "original_value": 2,
                    "value": 4
                },
                "local_10": {
                    "another_value": 1,
                    "flag_offset": 1,
                    "flag_zero": 1,
                    "initial_registers": 1,
                    "initial_value": 1,
                    "initialize_value": 1,
                    "offset": 5,
                    "register": 6,
                    "register2": 1,
                    "register_flag": 1,
                    "register_value": 4,
                    "register_value2": 1,
                    "registers": 3,
                    "some_value": 1,
                    "temporary_value": 1,
                    "unused_variable": 1,
                    "variable_2": 1
                },
                "local_14": {
                    "bit_operation": 1,
                    "count": 2,
                    "flag": 4,
                    "flag_one": 1,
                    "flag_value": 2,
                    "flags": 7,
                    "initial_flags": 1,
                    "num_bits": 1,
                    "permission_flag": 1,
                    "permission_level": 3,
                    "permission_value": 1,
                    "register1": 1,
                    "register_value": 2,
                    "register_value1": 1,
                    "some_value": 1,
                    "update_value": 1,
                    "variable_1": 1
                },
                "local_18": {
                    "bit_mask": 9,
                    "bitmask": 14,
                    "flag": 2,
                    "flag_mask": 1,
                    "mask": 1,
                    "memory_flag": 1,
                    "permission_bit": 1,
                    "permission_mask": 2
                },
                "param_1": {
                    "address": 2,
                    "base_address": 1,
                    "data": 2,
                    "input": 2,
                    "input_data": 2,
                    "memory_address": 20,
                    "memory_param": 1,
                    "memory_pointer": 1
                },
                "param_2": {
                    "access_permissions": 1,
                    "param": 1,
                    "permission": 7,
                    "permission_flag": 1,
                    "permission_flags": 5,
                    "permission_level": 1,
                    "permission_param": 1,
                    "permission_value": 6,
                    "permissions": 8
                },
                "set_memory_permissions_08004884": {
                    "set_memory_permissions": 3
                },
                "uVar1": {
                    "memory_permissions": 1,
                    "new_permission_value": 1,
                    "permission_result": 2,
                    "result": 25,
                    "updated_permission": 1,
                    "updated_permissions": 1
                },
                "uVar2": {
                    "combined_permissions": 1,
                    "combined_value": 1,
                    "current_permissions": 1,
                    "modified_permission": 1,
                    "modified_permission_flags": 1,
                    "modified_permission_value": 1,
                    "modified_permissions": 2,
                    "new_perm": 1,
                    "new_permission": 1,
                    "new_permission_flags": 1,
                    "new_permissions": 1,
                    "original_permissions": 1,
                    "permission": 1,
                    "permission_flag": 1,
                    "permission_flags": 3,
                    "permission_value": 1,
                    "permissions": 3,
                    "updated_flag": 1,
                    "updated_permission": 2,
                    "updated_permissions": 4,
                    "updated_value": 2
                },
                "update_flags_and_registers_08002624": {
                    "update_flags_and_registers": 3
                }
            },
            "called": [
                "FUN_08002624",
                "FUN_08004884"
            ],
            "calling": [
                "FUN_0800213c"
            ],
            "code": "\n\n\nvoid set_and_update_memory_permissions_08004974(int *memory_address,undefined4 permissions)\n\n{\n  undefined4 result;\n  uint updated_permissions;\n  int current_permission;\n  uint bitmask;\n  undefined4 flags;\n  undefined4 register;\n  \n  current_permission = *memory_address;\n  if (current_permission == 0x40012400) {\n    updated_permissions = _DAT_40021018 | 0x200;\n    current_permission = 0x200;\n    _DAT_40021018 = updated_permissions;\n  }\n  else {\n    updated_permissions = 0x40012800;\n    if (current_permission == 0x40012800) {\n      updated_permissions = _DAT_40021018 | 0x400;\n      current_permission = 0x400;\n      _DAT_40021018 = updated_permissions;\n    }\n  }\n  result = set_memory_permissions((uint)((int)(char)DAT_20000080 << 0x18) >> 0x1c,permissions,updated_permissions,current_permission);\n  bitmask = 1 << (DAT_20000080 & 0xf) & 0xffff;\n  flags = 3;\n  register = 0;\n  update_flags_and_registers(result,&bitmask);\n  return;\n}\n\n",
            "current_name": "set_and_update_memory_permissions_08004974",
            "entrypoint": "0x08004974",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004974": "set_and_update_memory_permissions_08004974",
                "iVar3": "current_permission",
                "local_10": "register",
                "local_14": "flags",
                "local_18": "bitmask",
                "param_1": "memory_address",
                "param_2": "permissions",
                "set_memory_permissions_08004884": "set_memory_permissions",
                "uVar1": "result",
                "uVar2": "updated_permissions",
                "update_flags_and_registers_08002624": "update_flags_and_registers"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080049f0": {
            "additional_data": {
                "0x40012400": {
                    "constant_a": 1,
                    "constant_register_a": 1
                },
                "0x40012800": {
                    "constant_b": 1,
                    "constant_register_b": 1
                },
                "DAT_4002100c": {
                    "control_flag_a": 1,
                    "mem_protection_reg1": 1
                },
                "DAT_40021018": {
                    "control_flag_b": 1,
                    "mem_protection_reg2": 1
                },
                "FUN_080049f0": {
                    "apply_memory_restrictions": 1,
                    "configure_memory_protection": 1,
                    "reset_memory_protection": 1,
                    "set_control_bits": 1,
                    "set_control_flags": 1,
                    "update_config": 1,
                    "update_configuration": 1,
                    "update_control_register": 1,
                    "update_control_registers": 7,
                    "update_cregisters": 1,
                    "update_data": 1,
                    "update_flags": 1,
                    "update_memory_access_flags": 1,
                    "update_memory_access_permissions": 1,
                    "update_memory_permissions": 1,
                    "update_memory_protection": 2,
                    "update_register_values": 2,
                    "update_registers": 2,
                    "update_settings": 4
                },
                "_DAT_4002100c": {
                    "ccr_register": 1,
                    "control_register0c": 1,
                    "control_register1": 4,
                    "control_register_1": 1,
                    "memory_register1": 1,
                    "permission_register1": 1,
                    "register1": 9,
                    "register_a": 1,
                    "value1": 1
                },
                "_DAT_40021018": {
                    "ccr2_register": 1,
                    "control_register18": 1,
                    "control_register2": 4,
                    "control_register_2": 1,
                    "memory_register2": 1,
                    "permission_register2": 1,
                    "register2": 9,
                    "register_b": 1,
                    "value2": 1
                },
                "param_1": {
                    "config": 2,
                    "control_param": 1,
                    "control_register": 3,
                    "control_value": 2,
                    "data_ptr": 1,
                    "flag": 1,
                    "memory_address": 7,
                    "memory_location": 1,
                    "pointer_to_control_register": 1,
                    "register_ptr": 1,
                    "register_value": 3,
                    "register_value_ptr": 1,
                    "setting": 1,
                    "setting_ptr": 1,
                    "settings": 2,
                    "value": 2
                },
                "param_1_": {
                    "flag": 1
                },
                "return": {
                    "void": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800224c"
            ],
            "code": "\n\n\nvoid update_control_registers_080049f0(int *memory_address)\n\n{\n  if (*memory_address != 0x40012400) {\n    if (*memory_address == 0x40012800) {\n      _DAT_4002100c = _DAT_4002100c & 0xfffffbff;\n      _DAT_40021018 = _DAT_40021018 & 0xfffffbff;\n    }\n    void;\n  }\n  _DAT_4002100c = _DAT_4002100c & 0xfffffdff;\n  _DAT_40021018 = _DAT_40021018 & 0xfffffdff;\n  void;\n}\n\n",
            "current_name": "update_control_registers_080049f0",
            "entrypoint": "0x080049f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080049f0": "update_control_registers_080049f0",
                "param_1": "memory_address",
                "return": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004a4c": {
            "additional_data": {
                "DAT_08007400": {
                    "data_array": 3
                },
                "DAT_20000080": {
                    "config_byte": 1,
                    "data_byte": 1,
                    "memory_permission": 2,
                    "param1_val": 1,
                    "param1_value": 1,
                    "param_1_as_byte": 1,
                    "param_1_byte": 1,
                    "param_1_value": 1,
                    "permission": 1,
                    "permission_byte": 1,
                    "permission_data": 1,
                    "status": 1,
                    "value": 1
                },
                "D_20000080": {
                    "input_byte": 1
                },
                "FUN_08004a4c": {
                    "find_and_update_data": 1,
                    "find_and_update_value": 1,
                    "find_index_and_update_data": 1,
                    "find_index_or_zero": 1,
                    "find_value_and_update_data": 1,
                    "find_value_at_offset": 1,
                    "process_memory": 2,
                    "reverse_and_update": 1,
                    "update_memory": 1
                },
                "PTR_FUN_08001cd0": {
                    "calculate_return_value_08001cd0": 1
                },
                "PTR_FUN_08001e40": {
                    "get_value_at_offset_08001e40": 1
                },
                "PTR_FUN_08001e48": {
                    "update_configuration_08001e48": 1
                },
                "PTR_FUN_08001f80": {
                    "get_value_from_offset_08001f80": 1
                },
                "PTR_FUN_08002004": {
                    "update_flags_and_data_08002004": 1
                },
                "PTR_FUN_0800213c": {
                    "update_memory_permissions_0800213c": 1
                },
                "PTR_FUN_0800224c": {
                    "update_data_values_0800224c": 1
                },
                "PTR_FUN_08002348": {
                    "update_and_check_data_values_08002348": 1
                },
                "PTR_FUN_08002384": {
                    "check_and_update_data_values_08002384": 1
                },
                "PTR_FUN_0800492c": {
                    "get_value_shifted_bits_0800492c": 1
                },
                "PTR_FUN_08004c78": {
                    "find_index_with_value_or_zero_08004c78": 1
                },
                "PTR_FUN_080061e0": {
                    "fill_memory_with_byte_080061e0": 1
                },
                "calculate_return_value_08001cd0": {
                    "calculate_return": 1,
                    "calculate_return_value": 1
                },
                "check_and_update_data_values_08002384": {
                    "check_and_update_data": 1,
                    "check_and_update_values": 1
                },
                "fill_memory_with_byte_080061e0": {
                    "initialize_memory": 1
                },
                "find_index_with_value_or_zero_08004c78": {
                    "find_index": 1
                },
                "get_value_at_offset_08001e40": {
                    "get_value_at_offset": 2
                },
                "get_value_from_offset_08001f80": {
                    "get_value_from_offset": 2
                },
                "get_value_shifted_bits_0800492c": {
                    "get_shifted_value": 1,
                    "shift_bits": 1
                },
                "iVar1": {
                    "error_code": 2,
                    "operation_result": 1,
                    "result": 3,
                    "result_code": 3,
                    "return_code": 1,
                    "return_value": 2,
                    "status": 4,
                    "status_code": 1
                },
                "local_10": {
                    "config6": 1,
                    "config_8": 1,
                    "config_value3": 1,
                    "config_value6": 1,
                    "config_value_9": 1,
                    "data_value2": 1,
                    "memory_val8": 1,
                    "memory_value_6": 1,
                    "offset_4": 1,
                    "param6": 1,
                    "return_value": 2,
                    "temp5": 2,
                    "temp8": 2,
                    "temp_5": 2,
                    "temp_6": 1,
                    "temp_8": 2,
                    "temp_var_6": 1,
                    "value6": 1,
                    "value_8": 1,
                    "var5": 1,
                    "var6": 2,
                    "var8": 1,
                    "var_10": 1,
                    "var_6": 1,
                    "var_8": 1
                },
                "local_1c": {
                    "config5": 1,
                    "config_7": 1,
                    "config_value5": 1,
                    "config_value_8": 1,
                    "constant_value": 2,
                    "data_value": 1,
                    "data_value1": 1,
                    "memory_val7": 1,
                    "memory_value_5": 1,
                    "offset": 4,
                    "offset_3": 1,
                    "offset_value": 1,
                    "temp7": 2,
                    "temp_5": 1,
                    "temp_7": 2,
                    "temp_var_5": 1,
                    "value9": 1,
                    "value_7": 1,
                    "var5": 2,
                    "var7": 1,
                    "var_1c": 1,
                    "var_5": 1,
                    "var_7": 1
                },
                "local_20": {
                    "config8": 1,
                    "config_9": 1,
                    "config_value": 1,
                    "config_value8": 1,
                    "config_value_7": 1,
                    "data_update_result": 1,
                    "data_value4": 1,
                    "memory_val6": 1,
                    "memory_value_8": 1,
                    "offset_2": 1,
                    "param8": 1,
                    "temp6": 3,
                    "temp7": 1,
                    "temp_6": 2,
                    "temp_7": 2,
                    "temp_8": 1,
                    "value8": 1,
                    "value_2": 1,
                    "value_6": 1,
                    "var6": 1,
                    "var7": 1,
                    "var8": 2,
                    "var_20": 1,
                    "var_6": 1,
                    "var_8": 1
                },
                "local_24": {
                    "config4": 1,
                    "config_6": 1,
                    "config_value4": 1,
                    "config_value_6": 1,
                    "flags_and_data_update_result": 1,
                    "initial_value": 1,
                    "memory_perm4": 1,
                    "memory_val5": 1,
                    "memory_value_4": 1,
                    "offset_1": 1,
                    "param4": 1,
                    "temp4": 2,
                    "temp5": 2,
                    "temp_4": 3,
                    "temp_5": 2,
                    "temp_var_4": 1,
                    "value4": 1,
                    "value_5": 1,
                    "var4": 3,
                    "var5": 1,
                    "var_24": 1,
                    "var_4": 1,
                    "var_5": 1
                },
                "local_28": {
                    "bitwise_flag": 1,
                    "config7": 1,
                    "config_value7": 1,
                    "config_value_10": 1,
                    "data_update_result": 1,
                    "data_value3": 1,
                    "flag": 1,
                    "flag_3": 1,
                    "flag_value": 1,
                    "memory_value_7": 1,
                    "param7": 1,
                    "temp4": 2,
                    "temp6": 1,
                    "temp_4": 2,
                    "temp_6": 2,
                    "temp_7": 1,
                    "temp_value": 1,
                    "value7": 1,
                    "value_1": 1,
                    "value_4": 1,
                    "var4": 1,
                    "var6": 1,
                    "var7": 2,
                    "var_28": 1,
                    "var_4": 1,
                    "var_7": 1
                },
                "local_2c": {
                    "check_data_result": 1,
                    "config3": 1,
                    "config_5": 1,
                    "config_value3": 1,
                    "config_value_5": 1,
                    "get_value_offset": 1,
                    "memory_perm3": 1,
                    "memory_val3": 1,
                    "memory_value_3": 1,
                    "param3": 1,
                    "temp3": 4,
                    "temp_3": 5,
                    "temp_var_3": 1,
                    "update_flag_3": 1,
                    "value3": 1,
                    "value_3": 1,
                    "var3": 4,
                    "var_2c": 1,
                    "var_3": 2
                },
                "local_30": {
                    "calculate_return": 1,
                    "config2": 1,
                    "config_4": 1,
                    "config_update_result": 1,
                    "config_value2": 1,
                    "config_value_4": 1,
                    "memory_perm2": 1,
                    "memory_val2": 1,
                    "memory_value_2": 1,
                    "param2": 1,
                    "temp2": 4,
                    "temp_2": 5,
                    "temp_var_2": 1,
                    "update_flag_2": 1,
                    "value2": 1,
                    "value_2": 1,
                    "var2": 4,
                    "var_2": 2,
                    "var_30": 1
                },
                "local_34": {
                    "config1": 1,
                    "config_3": 1,
                    "config_value1": 1,
                    "config_value_3": 1,
                    "memory_perm1": 1,
                    "memory_permission_result": 1,
                    "memory_val1": 1,
                    "memory_value_1": 1,
                    "param1": 1,
                    "temp1": 4,
                    "temp_1": 5,
                    "temp_var_1": 1,
                    "update_flag_1": 1,
                    "update_flags": 1,
                    "value1": 1,
                    "value_1": 1,
                    "var1": 3,
                    "var9": 1,
                    "var_1": 2,
                    "var_34": 1
                },
                "local_38": {
                    "found_index": 1,
                    "index": 27,
                    "index_value": 3
                },
                "local_3c": {
                    "check_data": 1,
                    "check_data_result": 1,
                    "config_2": 1,
                    "config_flag": 1,
                    "config_flag2": 2,
                    "config_value": 1,
                    "config_value2": 2,
                    "config_value_2": 3,
                    "data_flag": 1,
                    "data_update_success": 2,
                    "data_updated": 3,
                    "flag2": 5,
                    "flag_2": 6,
                    "second_flag": 1,
                    "var11": 1
                },
                "local_40": {
                    "config_1": 1,
                    "config_flag": 1,
                    "config_flag1": 2,
                    "config_update_result": 1,
                    "config_update_success": 2,
                    "config_updated": 3,
                    "config_value1": 2,
                    "config_value_1": 3,
                    "first_flag": 1,
                    "flag1": 5,
                    "flag_1": 6,
                    "is_valid": 2,
                    "update_config": 1,
                    "var10": 1
                },
                "local_44": {
                    "index": 1,
                    "index_value": 1,
                    "shifted_bits": 2,
                    "shifted_bits_value": 1,
                    "shifted_value": 25,
                    "value": 1
                },
                "local_46": {
                    "found_index": 1,
                    "output_value": 4,
                    "result": 17,
                    "result_value": 1,
                    "return_value": 8
                },
                "local_48": {
                    "initial_offset": 1
                },
                "local_4c": {
                    "initial_index": 1
                },
                "local_50": {
                    "offset_value": 1
                },
                "param_1": {
                    "input": 1,
                    "input_data": 2,
                    "input_param": 4,
                    "input_value": 21,
                    "value": 3
                },
                "uVar2": {
                    "bitwise_value": 1,
                    "flag": 1,
                    "offset_check": 1,
                    "offset_value": 6,
                    "value": 2,
                    "value_from_offset": 2,
                    "value_offset": 1
                },
                "update_and_check_data_values_08002348": {
                    "update_and_check_data": 1,
                    "update_and_check_values": 1
                },
                "update_configuration_08001e48": {
                    "update_config": 1,
                    "update_configurations": 1
                },
                "update_data_values_0800224c": {
                    "update_data_values": 1,
                    "update_values": 1
                },
                "update_flags_and_data_08002004": {
                    "update_flags_and_data": 1,
                    "update_flags_and_values": 1
                },
                "update_memory_permissions_0800213c": {
                    "update_permission": 1
                }
            },
            "called": [
                "FUN_08002004",
                "FUN_08002348",
                "FUN_08001f80",
                "FUN_0800224c",
                "FUN_08004c78",
                "FUN_08001e40",
                "FUN_0800492c",
                "FUN_080061e0",
                "FUN_08002384",
                "FUN_0800213c",
                "FUN_08001e48",
                "FUN_08001cd0"
            ],
            "calling": [
                "FUN_08005754"
            ],
            "code": "\nundefined2 find_value_and_update_data_08004a4c(undefined4 input_value)\n\n{\n  int status;\n  uint offset_value;\n  undefined2 result;\n  uint shifted_value;\n  undefined4 flag_1;\n  undefined4 flag_2;\n  int index;\n  undefined4 temp_1;\n  undefined4 temp_2;\n  undefined4 temp_3;\n  undefined4 temp_6;\n  undefined4 var4;\n  undefined4 temp6;\n  undefined4 offset;\n  undefined4 var6;\n  \n  initialize_memory(&index,0,0x30);\n  shifted_value = 0;\n  flag_1 = 0;\n  flag_2 = 0;\n  result = 0;\n  index = find_index(input_value,&DAT_08007400);\n  if (index == 0) {\n    result = 0;\n  }\n  else {\n    temp_1 = 0;\n    temp_2 = 0;\n    temp_3 = 0;\n    var4 = 0;\n    offset = 0xe0000;\n    var6 = 0;\n    temp_6 = 1;\n    temp6 = 0;\n    DAT_20000080 = (undefined)input_value;\n    status = update_permission(&index);\n    if (status == 0) {\n      shifted_value = get_shifted_value(input_value);\n      if (shifted_value < 0x12) {\n        flag_1 = 1;\n        flag_2 = 2;\n        status = update_configurations(&index,&shifted_value);\n        if (status == 0) {\n          status = check_and_update_values(&index);\n          if (status == 0) {\n            status = update_flags_and_data(&index);\n            if (status == 0) {\n              status = calculate_return(&index,10);\n              if (status == 0) {\n                offset_value = get_value_from_offset(&index);\n                if ((offset_value & 0x200) != 0) {\n                  result = get_value_at_offset(&index);\n                }\n                status = update_and_check_data(&index);\n                if (status == 0) {\n                  status = update_data_values(&index);\n                  if (status != 0) {\n                    result = 0;\n                  }\n                }\n                else {\n                  result = 0;\n                }\n              }\n              else {\n                result = 0;\n              }\n            }\n            else {\n              result = 0;\n            }\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        result = 0;\n      }\n    }\n    else {\n      result = 0;\n    }\n  }\n  return result;\n}\n\n",
            "current_name": "find_value_and_update_data_08004a4c",
            "entrypoint": "0x08004a4c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004a4c": "find_value_and_update_data_08004a4c",
                "calculate_return_value_08001cd0": "calculate_return",
                "check_and_update_data_values_08002384": "check_and_update_values",
                "fill_memory_with_byte_080061e0": "initialize_memory",
                "find_index_with_value_or_zero_08004c78": "find_index",
                "get_value_at_offset_08001e40": "get_value_at_offset",
                "get_value_from_offset_08001f80": "get_value_from_offset",
                "get_value_shifted_bits_0800492c": "get_shifted_value",
                "iVar1": "status",
                "local_10": "var6",
                "local_1c": "offset",
                "local_20": "temp6",
                "local_24": "var4",
                "local_28": "temp_6",
                "local_2c": "temp_3",
                "local_30": "temp_2",
                "local_34": "temp_1",
                "local_38": "index",
                "local_3c": "flag_2",
                "local_40": "flag_1",
                "local_44": "shifted_value",
                "local_46": "result",
                "param_1": "input_value",
                "uVar2": "offset_value",
                "update_and_check_data_values_08002348": "update_and_check_data",
                "update_configuration_08001e48": "update_configurations",
                "update_data_values_0800224c": "update_data_values",
                "update_flags_and_data_08002004": "update_flags_and_data",
                "update_memory_permissions_0800213c": "update_permission"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004b34": {
            "additional_data": {
                "FUN_08004b34": {
                    "update_flags": 21,
                    "update_flags_based_on_param": 8,
                    "update_flags_based_on_parameter": 2
                },
                "update_flags_based_on_param_08004d90": {
                    "calculate_flags": 1,
                    "get_param_from_binary": 1,
                    "get_param_values": 1,
                    "param_update": 1,
                    "update_flags": 3,
                    "update_flags_based_on_param": 11,
                    "update_flags_based_on_param_08004d90": 1,
                    "update_flags_based_on_parameter": 11,
                    "update_flags_based_on_parameters": 1
                }
            },
            "called": [
                "FUN_08004d90"
            ],
            "calling": [
                "FUN_08003ed8"
            ],
            "code": "\nvoid update_flags_based_on_param_08004b34(void)\n\n{\n  update_flags_based_on_param_08004b34();\n  return;\n}\n\n",
            "current_name": "update_flags_based_on_param_08004b34",
            "entrypoint": "0x08004b34",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004b34": "update_flags_based_on_param_08004b34",
                "update_flags_based_on_param_08004d90": "update_flags_based_on_param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004b3c": {
            "additional_data": {
                "FUN_08004b3c": {
                    "handle_value_updates": 1,
                    "process_binary_data": 2,
                    "process_data": 11,
                    "process_function": 5,
                    "process_param": 2,
                    "process_parameter": 1,
                    "process_value": 2,
                    "process_values": 2,
                    "update_values": 2,
                    "update_values_and_reset_flags": 2,
                    "update_values_if_valid": 1
                },
                "find_index_with_value_or_zero_08004c78": {
                    "find_index": 6,
                    "find_index_or_zero": 2,
                    "find_index_with_value_or_zero": 7
                },
                "get_value_by_index_08004cce": {
                    "get_indexed_value": 1,
                    "get_value": 2,
                    "get_value_by_index": 12
                },
                "get_value_shifted_bits_08004948": {
                    "get_shifted_bits": 1,
                    "get_shifted_bits_value": 1,
                    "get_shifted_value": 3,
                    "get_value": 1,
                    "get_value_shifted_bits": 9
                },
                "iVar1": {
                    "shifted_bits": 2,
                    "shifted_value": 6
                },
                "local_50": {
                    "array_values": 1,
                    "found_indices": 2,
                    "index_array": 4,
                    "indexes": 3,
                    "indices": 14,
                    "indices_array": 4,
                    "indices_with_value": 1,
                    "updated_indices": 1,
                    "value_array": 1
                },
                "param_1": {
                    "data": 4,
                    "input": 4,
                    "input_data": 6,
                    "input_param": 3,
                    "input_parameter": 2,
                    "input_value": 7,
                    "param": 2,
                    "parameter": 1,
                    "value": 2
                },
                "uVar2": {
                    "indexed_value": 5,
                    "value_by_index": 1
                },
                "update_and_check_bitwise_operations_0800412c": {
                    "perform_bitwise_operations": 1,
                    "update_and_check_bitwise_operations": 13,
                    "update_bitwise_operations": 1
                },
                "update_and_check_values_080040b0": {
                    "update_and_check_values": 13,
                    "update_values": 2
                },
                "update_flags_and_reset_values_08003ed8": {
                    "update_flags": 1,
                    "update_flags_and_reset_values": 14
                }
            },
            "called": [
                "FUN_0800412c",
                "FUN_08004cce",
                "FUN_08004948",
                "FUN_08004c78",
                "FUN_08003ed8",
                "FUN_080040b0"
            ],
            "calling": [
                "FUN_080057b4"
            ],
            "code": "\nvoid process_binary_data_08004b3c(undefined4 input_value)\n\n{\n  int shifted_value;\n  uint indexed_value;\n  int indices [17];\n  \n  indices[0] = find_index_with_value_or_zero(input_value,&DAT_080074b4);\n  if ((indices[0] != 0) &&\n     ((((shifted_value = get_value_shifted_bits(input_value), shifted_value == 0 || (shifted_value == 4)) || (shifted_value == 8)) ||\n      ((shifted_value == 0xc || (shifted_value == 0x18)))))) {\n    indexed_value = get_value_by_index(input_value,&DAT_080074b4);\n    if ((indexed_value & 0x100000) == 0) {\n      update_and_check_values(indices,shifted_value);\n    }\n    else {\n      update_and_check_bitwise_operations(indices,shifted_value);\n    }\n    update_flags_and_reset_values(indices);\n  }\n  return;\n}\n\n",
            "current_name": "process_binary_data_08004b3c",
            "entrypoint": "0x08004b3c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004b3c": "process_binary_data_08004b3c",
                "find_index_with_value_or_zero_08004c78": "find_index_with_value_or_zero",
                "get_value_by_index_08004cce": "get_value_by_index",
                "get_value_shifted_bits_08004948": "get_value_shifted_bits",
                "iVar1": "shifted_value",
                "local_50": "indices",
                "param_1": "input_value",
                "uVar2": "indexed_value",
                "update_and_check_bitwise_operations_0800412c": "update_and_check_bitwise_operations",
                "update_and_check_values_080040b0": "update_and_check_values",
                "update_flags_and_reset_values_08003ed8": "update_flags_and_reset_values"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004b94": {
            "additional_data": {
                "FUN_08004b94": {
                    "fetch_data": 1,
                    "get_and_return_data_value": 1,
                    "get_data_value": 3,
                    "initialize_data": 16,
                    "initialize_data_values": 5,
                    "load_data_values": 1,
                    "retrieve_data": 3,
                    "retrieve_data_value": 1
                },
                "get_data_value_08001cc4": {
                    "fetch_data": 5,
                    "fetch_data_value": 10,
                    "fetch_data_values": 4,
                    "get_data_value": 4,
                    "retrieve_data": 4,
                    "retrieve_data_value": 3
                }
            },
            "called": [
                "FUN_08001cc4"
            ],
            "calling": [
                "FUN_080058e0"
            ],
            "code": "\nvoid initialize_data_values_08004b94(void)\n\n{\n  fetch_data_value();\n  return;\n}\n\n",
            "current_name": "initialize_data_values_08004b94",
            "entrypoint": "0x08004b94",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004b94": "initialize_data_values_08004b94",
                "get_data_value_08001cc4": "fetch_data_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004b9c": {
            "called": [],
            "calling": [
                "FUN_08004b9e"
            ],
            "code": "\nvoid FUNC_08004b9c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08004b9c",
            "entrypoint": "0x08004b9c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08004b9c": "FUNC_08004b9c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08004b9e": {
            "additional_data": {
                "FUNC_08004b9c": {
                    "additional_operations": 1,
                    "do_something": 1,
                    "execute_additional_function": 2,
                    "execute_additional_operation": 1,
                    "execute_additional_operations": 1,
                    "execute_additional_processing": 1,
                    "execute_additional_steps": 1,
                    "execute_finalization": 1,
                    "execute_fun_08004b9c": 1,
                    "execute_function": 2,
                    "execute_sub_function": 1,
                    "execute_subroutine": 1,
                    "final_cleanup": 1,
                    "finalize_execution": 1,
                    "finalize_program": 1,
                    "perform_additional_operations": 1,
                    "perform_additional_tasks": 3,
                    "perform_cleanup": 1,
                    "perform_operation": 4,
                    "perform_operations": 1,
                    "perform_special_operation": 1,
                    "process_data": 1,
                    "reverse_operation": 1,
                    "reverse_something": 1
                },
                "FUN_08004b9e": {
                    "execute_full_operation": 1,
                    "execute_full_process": 1,
                    "execute_function_sequence": 1,
                    "execute_initialization_and_operation": 1,
                    "execute_main_algorithm": 1,
                    "execute_main_function": 3,
                    "execute_main_program": 1,
                    "execute_program": 9,
                    "initialize_and_execute": 3,
                    "initialize_and_execute_operations": 1,
                    "initialize_program": 2,
                    "initialize_system": 2,
                    "perform_initialization": 2
                },
                "addition_operation_08001cac": {
                    "execute_addition_operation": 1,
                    "perform_addition": 8,
                    "perform_addition_operation": 6
                },
                "execute_initialization_08002582": {
                    "execute_core_logic": 1,
                    "execute_initialization": 6,
                    "initialize": 4,
                    "initialize_execution": 13,
                    "initialize_program": 2,
                    "initialize_system": 2,
                    "perform_initialization": 2
                }
            },
            "called": [
                "FUN_08001cac",
                "FUN_08002582",
                "FUN_08004b9c"
            ],
            "calling": [],
            "code": "\nvoid execute_main_program_08004b9e(void)\n\n{\n  perform_addition();\n  initialize_execution();\n  FUNC_08004b9c();\n  return;\n}\n\n",
            "current_name": "execute_main_program_08004b9e",
            "entrypoint": "0x08004b9e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004b9e": "execute_main_program_08004b9e",
                "addition_operation_08001cac": "perform_addition",
                "execute_initialization_08002582": "initialize_execution"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004bb0": {
            "additional_data": {
                "FUN_08004bb0": {
                    "configure_memory_permissions": 1,
                    "initialize_memory": 3,
                    "initialize_memory_permissions": 9,
                    "initialize_permissions": 1,
                    "set_and_update_memory_permissions": 2,
                    "set_memory_access_permissions": 1,
                    "set_memory_permissions": 5,
                    "set_memory_permissions_and_update_flags": 1,
                    "set_permissions": 2,
                    "update_memory_permissions": 4,
                    "update_permissions": 2
                },
                "_DAT_40010004": {
                    "register2": 4,
                    "register_value": 1,
                    "register_value_2": 1
                },
                "_DAT_40021018": {
                    "memory_address": 1,
                    "register1": 4,
                    "register_value": 1
                },
                "local_14": {
                    "constant": 7,
                    "constant_value": 9,
                    "flag": 1,
                    "local_param_3": 1,
                    "local_value3": 1,
                    "local_var": 2,
                    "local_var_3": 2,
                    "local_variable": 4,
                    "local_variable1": 1,
                    "permission": 1,
                    "permission_value": 1,
                    "value": 1
                },
                "local_18": {
                    "local_param3": 4,
                    "local_param_2": 1,
                    "local_param_3": 4,
                    "local_parameter2": 1,
                    "local_value2": 1,
                    "local_var_2": 2,
                    "new_parameter2": 1,
                    "param2_copy": 1,
                    "param3": 1,
                    "param3_copy": 4,
                    "param3_updated": 1,
                    "param_3_copy": 3,
                    "param_3_updated": 1,
                    "param_b_updated": 1,
                    "parameter3": 1,
                    "updated_param2": 1,
                    "updated_param3": 2,
                    "updated_param_3": 1
                },
                "local_1c": {
                    "local_param2": 4,
                    "local_param_1": 1,
                    "local_param_2": 4,
                    "local_parameter1": 1,
                    "local_value1": 1,
                    "local_var": 1,
                    "local_var_1": 1,
                    "new_parameter1": 1,
                    "param1_copy": 1,
                    "param2": 1,
                    "param2_copy": 4,
                    "param2_updated": 1,
                    "param_2_copy": 3,
                    "param_2_updated": 1,
                    "param_a_updated": 1,
                    "parameter2": 1,
                    "updated_param1": 1,
                    "updated_param2": 2,
                    "updated_param_2": 1
                },
                "local_20": {
                    "bit_mask": 16,
                    "bit_shifted_value": 1,
                    "bitmask": 11,
                    "bitwise_shift_result": 1,
                    "bitwise_value": 1,
                    "mask": 1
                },
                "param_1": {
                    "access_type": 1,
                    "address": 4,
                    "bit_shift": 1,
                    "index": 2,
                    "input_index": 2,
                    "input_param": 2,
                    "input_parameter": 2,
                    "input_value": 9,
                    "memory_address": 2,
                    "memory_index": 1,
                    "memory_region": 1,
                    "offset": 1,
                    "param": 1,
                    "permission_flag": 1,
                    "permission_flags": 1
                },
                "param_2": {
                    "arg1": 1,
                    "input_param1": 1,
                    "param1": 1,
                    "param2": 11,
                    "param_2": 9,
                    "param_a": 1,
                    "parameter1": 2,
                    "parameter2": 1,
                    "parameter_1": 1,
                    "parameter_2": 1,
                    "value1": 2
                },
                "param_3": {
                    "arg2": 1,
                    "input_param2": 1,
                    "param2": 1,
                    "param3": 11,
                    "param_3": 9,
                    "param_b": 1,
                    "parameter2": 2,
                    "parameter3": 1,
                    "parameter_2": 1,
                    "parameter_3": 1,
                    "value2": 2
                },
                "uVar1": {
                    "memory_permission": 1,
                    "memory_permission_result": 1,
                    "memory_permissions": 8,
                    "permission": 1,
                    "permission_result": 3,
                    "permission_value": 2,
                    "permissions": 8,
                    "result": 2
                }
            },
            "called": [
                "FUN_08002624",
                "FUN_08004884"
            ],
            "calling": [
                "FUN_080057b4"
            ],
            "code": "\n\n\nvoid set_memory_permissions_and_update_flags_08004bb0(uint input_value,undefined4 param2,undefined4 param3)\n\n{\n  undefined4 permissions;\n  uint bit_mask;\n  undefined4 local_param_2;\n  undefined4 local_param_3;\n  undefined4 constant_value;\n  \n  permissions = set_memory_permissions_08004884((input_value << 0x18) >> 0x1c);\n  bit_mask = 1 << (input_value & 0xf) & 0xffff;\n  constant_value = 3;\n  _DAT_40021018 = _DAT_40021018 | 1;\n  if ((input_value - 0xd & 0xff) < 2) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n  }\n  if (((input_value == 0xf) || (input_value == 0x13)) || (input_value == 0x14)) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n  }\n  local_param_2 = param2;\n  local_param_3 = param3;\n  update_flags_and_registers_08002624(permissions,&bit_mask);\n  return;\n}\n\n",
            "current_name": "set_memory_permissions_and_update_flags_08004bb0",
            "entrypoint": "0x08004bb0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004bb0": "set_memory_permissions_and_update_flags_08004bb0",
                "local_14": "constant_value",
                "local_18": "local_param_3",
                "local_1c": "local_param_2",
                "local_20": "bit_mask",
                "param_1": "input_value",
                "param_2": "param2",
                "param_3": "param3",
                "uVar1": "permissions"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004c30": {
            "additional_data": {
                "FUN_08004c30": {
                    "set_param_based_on_condition": 1,
                    "set_param_value": 15,
                    "set_param_value_based_on_condition": 8,
                    "set_param_value_based_on_flag": 2,
                    "set_param_value_based_on_param3": 1,
                    "set_param_value_with_type": 1,
                    "set_param_with_value": 1,
                    "update_param_value": 2
                },
                "param_1": {
                    "arg1": 1,
                    "input1": 1,
                    "param1": 12,
                    "param_a": 1,
                    "param_value": 5,
                    "param_value1": 2,
                    "param_value_1": 2,
                    "value": 2,
                    "value1": 5
                },
                "param_2": {
                    "arg2": 1,
                    "attribute": 1,
                    "flags": 1,
                    "input2": 1,
                    "param2": 12,
                    "param_b": 1,
                    "param_flag": 3,
                    "param_index": 1,
                    "param_status": 1,
                    "param_value2": 2,
                    "param_value_2": 2,
                    "value2": 5
                },
                "param_3": {
                    "check_value": 1,
                    "condition": 13,
                    "flag": 5,
                    "is_enabled": 1,
                    "param3": 9,
                    "param_condition": 1,
                    "should_set": 1
                },
                "param_4": {
                    "data": 3,
                    "extra_param": 1,
                    "param": 3,
                    "param4": 11,
                    "param_c": 1,
                    "param_context": 1,
                    "param_data": 1,
                    "param_value": 1,
                    "param_value4": 2,
                    "param_value_4": 2,
                    "value3": 4,
                    "value_to_set": 1
                },
                "set_param_value_0800281e": {
                    "set_param_value": 2,
                    "set_param_value_helper": 2
                }
            },
            "called": [
                "FUN_0800281e"
            ],
            "calling": [
                "FUN_08005848"
            ],
            "code": "\nvoid set_param_value_based_on_condition_08004c30(undefined4 param1,undefined2 param2,int condition,undefined4 param4)\n\n{\n  if (condition == 0) {\n    set_param_value_helper(param1,param2,0,param4,param4);\n    return;\n  }\n  set_param_value_helper(param1,param2,1,param4,param4);\n  return;\n}\n\n",
            "current_name": "set_param_value_based_on_condition_08004c30",
            "entrypoint": "0x08004c30",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004c30": "set_param_value_based_on_condition_08004c30",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "condition",
                "param_4": "param4",
                "set_param_value_0800281e": "set_param_value_helper"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004c48": {
            "additional_data": {
                "FUN_08004c48": {
                    "bit_presence_check": 2,
                    "call_check_bit_presence": 1,
                    "check_bit_presence": 23,
                    "perform_bit_check": 2,
                    "perform_bit_presence_check": 1,
                    "validate_bit_presence": 1,
                    "verify_bit_presence": 1
                },
                "param_1": {
                    "arg1": 1,
                    "argument_1": 1,
                    "input1": 2,
                    "input_1": 9,
                    "input_arg1": 1,
                    "input_data": 1,
                    "input_param": 6,
                    "input_param_1": 3,
                    "input_parameter": 1,
                    "input_parameter_1": 1,
                    "input_value_1": 1,
                    "param": 1,
                    "value1": 1,
                    "value_1": 2
                },
                "param_2": {
                    "arg2": 1,
                    "argument_2": 1,
                    "bit_mask": 1,
                    "flag": 2,
                    "flag_param": 3,
                    "flag_parameter": 1,
                    "input2": 2,
                    "input_2": 9,
                    "input_arg2": 1,
                    "input_param_2": 3,
                    "input_parameter_2": 1,
                    "input_value_2": 1,
                    "param2": 1,
                    "status_code": 1,
                    "value2": 1,
                    "value_2": 2
                },
                "param_3": {
                    "address1": 1,
                    "address_param": 1,
                    "arg3": 1,
                    "argument_3": 1,
                    "check_param": 1,
                    "data_1": 1,
                    "data_param": 1,
                    "input3": 1,
                    "input_3": 9,
                    "input_arg3": 1,
                    "input_param_3": 3,
                    "input_parameter_3": 1,
                    "input_value_3": 1,
                    "length_parameter": 1,
                    "param3": 1,
                    "param_a": 1,
                    "size": 1,
                    "size_param": 1,
                    "value3": 1,
                    "value_3": 2
                },
                "param_4": {
                    "address2": 1,
                    "arg4": 1,
                    "argument_4": 1,
                    "buffer": 1,
                    "check_param": 1,
                    "check_parameter": 1,
                    "data_2": 1,
                    "extra_param": 1,
                    "input4": 1,
                    "input_4": 9,
                    "input_arg4": 1,
                    "input_param_4": 3,
                    "input_parameter_4": 1,
                    "input_value_4": 1,
                    "param4": 1,
                    "param_b": 1,
                    "size_param": 1,
                    "value4": 1,
                    "value_4": 2,
                    "value_param": 1
                },
                "param_5": {
                    "buffer_size": 1
                }
            },
            "called": [
                "FUN_08002810"
            ],
            "calling": [
                "FUN_08005890"
            ],
            "code": "\nvoid perform_bit_presence_check_08004c48(undefined4 input_1,undefined2 input_2,undefined4 input_3,undefined4 input_4)\n\n{\n  check_bit_presence_08002810(input_1,input_2,input_3,input_4,input_4);\n  return;\n}\n\n",
            "current_name": "perform_bit_presence_check_08004c48",
            "entrypoint": "0x08004c48",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004c48": "perform_bit_presence_check_08004c48",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004c52": {
            "additional_data": {
                "FUN_08004c52": {
                    "initialize": 1,
                    "initialize_and_update": 7,
                    "initialize_and_update_registers_data": 1,
                    "initialize_registers_and_data": 22
                },
                "initialize_and_update_data_08001b48": {
                    "initialize_and_update_data": 4,
                    "initialize_data": 21,
                    "initialize_data_helper": 1,
                    "update_data": 5
                },
                "initialize_and_update_registers_08001c88": {
                    "initialize_and_update_registers": 4,
                    "initialize_registers": 26,
                    "initialize_registers_helper": 1
                }
            },
            "called": [
                "FUN_08001b48",
                "FUN_08001c88"
            ],
            "calling": [
                "FUN_08001c32"
            ],
            "code": "\nvoid initialize_and_update_registers_data_08004c52(void)\n\n{\n  initialize_registers();\n  initialize_data();\n  return;\n}\n\n",
            "current_name": "initialize_and_update_registers_data_08004c52",
            "entrypoint": "0x08004c52",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004c52": "initialize_and_update_registers_data_08004c52",
                "initialize_and_update_data_08001b48": "initialize_data",
                "initialize_and_update_registers_08001c88": "initialize_registers"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004c5e": {
            "additional_data": {
                "0xc": {
                    "value_size": 1
                },
                "DAT_": {
                    "dat_": 1
                },
                "FUN_08004c5e": {
                    "find_data_offset": 1,
                    "find_element_offset": 1,
                    "find_first_match": 1,
                    "find_index": 1,
                    "find_matching_value": 1,
                    "find_parameter": 1,
                    "find_parameter_in_array": 1,
                    "find_parameter_index": 1,
                    "find_value": 3,
                    "find_value_from_list": 1,
                    "find_value_in_array": 5,
                    "find_value_in_list": 3,
                    "find_value_in_sequence": 1,
                    "find_value_index": 8,
                    "find_value_offset": 1,
                    "find_value_pointer": 1
                },
                "PTR_": {
                    "ptr_": 1
                },
                "break_param": {
                    "terminator": 1
                },
                "param_1": {
                    "element_to_find": 1,
                    "search_value": 4,
                    "target": 2,
                    "target_value": 11,
                    "value": 7,
                    "value_to_find": 6
                },
                "param_2": {
                    "array": 9,
                    "array_of_values": 2,
                    "array_ptr": 8,
                    "array_start": 1,
                    "data": 1,
                    "data_array": 3,
                    "input_array": 1,
                    "list": 2,
                    "list_ptr": 2,
                    "sequence": 1,
                    "values_array": 1
                },
                "ptr": {
                    "current_offset": 1
                }
            },
            "called": [
                "FUN_08004c5e"
            ],
            "calling": [
                "FUN_08004c78",
                "FUN_08004c5e"
            ],
            "code": "\nundefined4 find_value_index_08004c5e(int target_value,char *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      return 0;\n    }\n    if (*array == target_value) break;\n    array = array + 0xc;\n  }\n  return *(undefined4 *)(array + 4);\n}\n\n",
            "current_name": "find_value_index_08004c5e",
            "entrypoint": "0x08004c5e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004c5e": "find_value_index_08004c5e",
                "param_1": "target_value",
                "param_2": "array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004c78": {
            "additional_data": {
                "FUN_08004c78": {
                    "check_value": 1,
                    "find_index_if_not_negative": 1,
                    "find_index_if_value_not_neg1": 1,
                    "find_index_with_value_or_zero": 1,
                    "find_valid_index": 2,
                    "find_value_index": 9,
                    "find_value_index_if_not_minus1": 1,
                    "find_value_index_if_not_minus_one": 2,
                    "find_value_index_if_not_negative": 3,
                    "find_value_index_or_default": 1,
                    "find_value_index_or_zero": 6,
                    "get_value_index": 3
                },
                "param_1": {
                    "index": 2,
                    "input_index": 1,
                    "input_value": 19,
                    "value": 9
                },
                "uVar1": {
                    "index": 11,
                    "index_or_zero": 1,
                    "index_value": 1,
                    "valid_index": 2,
                    "value_index": 12
                }
            },
            "called": [
                "FUN_08004c5e"
            ],
            "calling": [
                "FUN_08005384",
                "FUN_08004a4c",
                "FUN_08004f4c",
                "FUN_08004b3c",
                "FUN_080053d4"
            ],
            "code": "\nundefined4 find_index_with_value_or_zero_08004c78(int input_value)\n\n{\n  undefined4 value_index;\n  \n  if (input_value != -1) {\n    value_index = find_value_index_08004c5e();\n    return value_index;\n  }\n  return 0;\n}\n\n",
            "current_name": "find_index_with_value_or_zero_08004c78",
            "entrypoint": "0x08004c78",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004c78": "find_index_with_value_or_zero_08004c78",
                "param_1": "input_value",
                "uVar1": "value_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004c8a": {
            "additional_data": {
                "FUN_08004c8a": {
                    "find_character": 2,
                    "find_character_by_id": 1,
                    "find_character_index": 3,
                    "find_element_index": 3,
                    "find_first_occurrence": 2,
                    "find_matching_index": 1,
                    "find_value_by_index": 2,
                    "find_value_in_array": 12,
                    "find_value_in_list": 2,
                    "find_value_index": 3
                },
                "PTR_08004c8a": {
                    "array_ptr": 1
                },
                "param_1": {
                    "character": 3,
                    "character_id": 1,
                    "character_to_find": 1,
                    "element": 3,
                    "index": 2,
                    "search_value": 1,
                    "target": 1,
                    "target_value": 3,
                    "value": 11,
                    "value_to_find": 5
                },
                "param_2": {
                    "array": 17,
                    "array_of_values": 1,
                    "array_pointer": 1,
                    "array_ptr": 2,
                    "character_array": 2,
                    "character_list": 1,
                    "data_array": 2,
                    "list_ptr": 2,
                    "string": 3
                },
                "return": {
                    "found_value": 1
                }
            },
            "called": [
                "FUN_08004c8a"
            ],
            "calling": [
                "FUN_08004ca2",
                "FUN_08004c8a"
            ],
            "code": "\nint find_value_in_array_08004c8a(int value,char *array)\n\n{\n  while( true ) {\n    if (*(int *)(array + 4) == 0) {\n      found_value -1;\n    }\n    if (*(int *)(array + 4) == value) break;\n    array = array + 0xc;\n  }\n  found_value (int)*array;\n}\n\n",
            "current_name": "find_value_in_array_08004c8a",
            "entrypoint": "0x08004c8a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004c8a": "find_value_in_array_08004c8a",
                "param_1": "value",
                "param_2": "array",
                "return": "found_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004ca2": {
            "additional_data": {
                "FUN_08004ca2": {
                    "find_value": 3,
                    "find_value_if_not_zero": 1,
                    "find_value_in_array": 1,
                    "find_value_or_default": 18,
                    "find_value_or_error": 3,
                    "find_value_or_fail": 3,
                    "find_value_or_return_error": 1,
                    "get_value_from_array": 1
                },
                "find_value_in_array_08004c8a": {
                    "search_array": 1
                },
                "param_1": {
                    "input": 2,
                    "input_param": 1,
                    "input_value": 8,
                    "value": 14,
                    "value_to_find": 6
                },
                "uVar1": {
                    "found_value": 15,
                    "result": 14,
                    "value": 1
                }
            },
            "called": [
                "FUN_08004c8a"
            ],
            "calling": [
                "FUN_08005384",
                "FUN_08005b54"
            ],
            "code": "\nundefined4 find_value_or_default_08004ca2(int value)\n\n{\n  undefined4 found_value;\n  \n  if (value != 0) {\n    found_value = search_array();\n    return found_value;\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "find_value_or_default_08004ca2",
            "entrypoint": "0x08004ca2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004ca2": "find_value_or_default_08004ca2",
                "find_value_in_array_08004c8a": "search_array",
                "param_1": "value",
                "uVar1": "found_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004cb2": {
            "additional_data": {
                "0xc": {
                    "element_size": 1
                },
                "DAT_": {
                    "": 2,
                    "dat_": 1
                },
                "FUN_08004cb2": {
                    "find_offset": 1,
                    "find_param_value": 2,
                    "find_parameter": 1,
                    "find_value": 4,
                    "find_value_by_index": 2,
                    "find_value_in_array": 5,
                    "find_value_in_list": 5,
                    "find_value_index": 9,
                    "find_value_of_param_in_list": 1,
                    "find_value_position": 1
                },
                "PTR_": {
                    "": 2,
                    "ptr_": 1
                },
                "param_1": {
                    "index": 2,
                    "search_value": 1,
                    "target": 1,
                    "target_value": 10,
                    "value": 14,
                    "value_to_find": 3
                },
                "param_2": {
                    "array": 11,
                    "array_of_values": 2,
                    "array_ptr": 4,
                    "data": 1,
                    "data_array": 6,
                    "input_array": 1,
                    "list": 4,
                    "list_of_values": 1,
                    "list_ptr": 1
                }
            },
            "called": [
                "FUN_08004cb2"
            ],
            "calling": [
                "FUN_08004cce",
                "FUN_08004cb2"
            ],
            "code": "\nundefined4 find_value_by_index_08004cb2(int value,char *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      return 0xffffffff;\n    }\n    if (*array == value) break;\n    array = array + 0xc;\n  }\n  return *(undefined4 *)(array + 8);\n}\n\n",
            "current_name": "find_value_by_index_08004cb2",
            "entrypoint": "0x08004cb2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004cb2": "find_value_by_index_08004cb2",
                "param_1": "value",
                "param_2": "array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004cce": {
            "additional_data": {
                "FUN_08004cce": {
                    "find_value_or_default": 1,
                    "find_value_or_negative_one": 1,
                    "find_value_or_return_minus_one": 1,
                    "get_value": 15,
                    "get_value_at_index_or_negative_one": 2,
                    "get_value_by_index": 6,
                    "get_value_or_default": 1,
                    "get_value_or_error": 4
                },
                "param_1": {
                    "index": 22,
                    "input": 1,
                    "input_value": 2,
                    "value": 4,
                    "value_index": 2
                },
                "uVar1": {
                    "found_value": 7,
                    "result": 1,
                    "value": 22
                }
            },
            "called": [
                "FUN_08004cb2"
            ],
            "calling": [
                "FUN_08004948",
                "FUN_0800492c",
                "FUN_08004f4c",
                "FUN_08004b3c"
            ],
            "code": "\nundefined4 get_value_by_index_08004cce(int index)\n\n{\n  undefined4 value;\n  \n  if (index == -1) {\n    return 0xffffffff;\n  }\n  value = find_value_by_index_08004cb2();\n  return value;\n}\n\n",
            "current_name": "get_value_by_index_08004cce",
            "entrypoint": "0x08004cce",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004cce": "get_value_by_index_08004cce",
                "param_1": "index",
                "uVar1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004ce2": {
            "additional_data": {
                "FUN_08004ce2": {
                    "check_param": 3,
                    "check_param_and_character": 1,
                    "check_param_in_array": 3,
                    "check_param_match": 1,
                    "check_value": 2,
                    "check_value_in_array": 3,
                    "compare_index_with_array": 1,
                    "compare_indices": 1,
                    "compare_int_with_char_array": 1,
                    "compare_is_present": 1,
                    "compare_parameters": 1,
                    "compare_values": 3,
                    "find_match": 1,
                    "find_value": 1,
                    "find_value_in_array": 4,
                    "find_value_index": 2,
                    "param_search": 1,
                    "search_for_value": 1
                },
                "param_1": {
                    "first_value": 1,
                    "index": 2,
                    "index1": 1,
                    "input_value": 2,
                    "integer": 1,
                    "num1": 1,
                    "parameter": 1,
                    "search_value": 1,
                    "target_value": 1,
                    "value": 13,
                    "value1": 2,
                    "value_1": 1,
                    "value_to_check": 2,
                    "value_to_compare": 1,
                    "value_to_find": 1
                },
                "param_2": {
                    "array": 14,
                    "array_of_values": 1,
                    "array_ptr": 1,
                    "array_to_search": 2,
                    "char_array": 1,
                    "character_array": 1,
                    "data": 1,
                    "data_array": 2,
                    "input_string": 1,
                    "param_array": 1,
                    "search_list": 1,
                    "second_value": 1,
                    "str": 1,
                    "value_array": 1,
                    "values_array": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_080057b4"
            ],
            "code": "\nundefined4 check_param_in_array_08004ce2(int value,char *array)\n\n{\n  if (value == -1) {\n    return 0;\n  }\n  while( true ) {\n    if (*array == -1) {\n      return 0;\n    }\n    if (value == *array) break;\n    array = array + 0xc;\n  }\n  return 1;\n}\n\n",
            "current_name": "check_param_in_array_08004ce2",
            "entrypoint": "0x08004ce2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004ce2": "check_param_in_array_08004ce2",
                "param_1": "value",
                "param_2": "array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004d06": {
            "additional_data": {
                "FUN_08004d06": {
                    "check_difference": 1,
                    "check_param_equality": 1,
                    "compare_and_return_first_non_zero": 1,
                    "compare_and_return_non_zero": 9,
                    "compare_and_return_nonzero": 1,
                    "compare_and_return_smaller": 6,
                    "compare_and_return_smallest": 1,
                    "compare_and_return_zero": 3,
                    "compare_and_return_zero_or_param1": 1,
                    "compare_and_update": 1,
                    "find_non_zero_parameter": 1,
                    "find_nonzero_param": 4,
                    "get_nonzero_param": 1
                },
                "param_1": {
                    "first_number": 1,
                    "first_value": 1,
                    "input_value_1": 1,
                    "num1": 1,
                    "num_1": 1,
                    "param_a": 1,
                    "val1": 1,
                    "value1": 14,
                    "value_1": 9,
                    "value_a": 1
                },
                "param_2": {
                    "input_value_2": 1,
                    "num2": 1,
                    "num_2": 1,
                    "param_b": 1,
                    "second_number": 1,
                    "second_value": 1,
                    "val2": 1,
                    "value2": 14,
                    "value_2": 9,
                    "value_b": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004f4c"
            ],
            "code": "\nint compare_and_return_first_non_zero_08004d06(int value1,int value2)\n\n{\n  if (value1 != value2) {\n    if (value1 == 0) {\n      return value2;\n    }\n    if (value2 == 0) {\n      return value1;\n    }\n    value1 = 0;\n  }\n  return value1;\n}\n\n",
            "current_name": "compare_and_return_first_non_zero_08004d06",
            "entrypoint": "0x08004d06",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004d06": "compare_and_return_first_non_zero_08004d06",
                "param_1": "value1",
                "param_2": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004d18": {
            "additional_data": {
                "DAT_20000260": {
                    "callback": 1,
                    "callback_fn": 1,
                    "callback_function": 10,
                    "callback_function_pointer": 8,
                    "callback_function_ptr": 1,
                    "callback_pointer": 2,
                    "callback_pointer_value": 1,
                    "function_callback": 1,
                    "function_pointer": 2,
                    "function_ptr": 1
                },
                "DAT_20000278": {
                    "argument": 2,
                    "callback_arg": 1,
                    "callback_argument": 2,
                    "callback_data": 10,
                    "callback_function_arg": 1,
                    "callback_function_argument": 2,
                    "callback_function_data": 1,
                    "callback_function_parameter": 3,
                    "callback_parameter": 4,
                    "callback_parameter_value": 1,
                    "data": 1,
                    "function_parameter": 1,
                    "parameter": 1
                },
                "FUN_08004d18": {
                    "call_function_if_valid": 1,
                    "call_function_with_arg_if_not_null": 1,
                    "execute_callback": 13,
                    "execute_callback_function": 12,
                    "execute_callback_if_not_null": 1,
                    "execute_callback_if_present": 1,
                    "execute_function_if_not_null": 2
                },
                "PTR_20000260": {
                    "callback_function_pointer": 1,
                    "callback_pointer": 1
                },
                "PTR_20000278": {
                    "callback_parameter": 1
                },
                "PTR_FUN_08000260": {
                    "callback_function": 1
                },
                "callbackFunction": {
                    "callback_function": 1
                },
                "code": {
                    "callback_function": 3,
                    "function_ptr": 1
                },
                "executeCallback": {
                    "execute_callback": 2
                },
                "executeCallbackFunction": {
                    "execute_callback": 1
                },
                "void": {
                    "nothing": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003ea0"
            ],
            "code": "\nnothing execute_callback_function_08004d18(nothing)\n\n{\n  if (DAT_20000260 != (callback_function *)0x0) {\n    (*DAT_20000260)(DAT_20000278);\n  }\n  return;\n}\n\n",
            "current_name": "execute_callback_function_08004d18",
            "entrypoint": "0x08004d18",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004d18": "execute_callback_function_08004d18",
                "code": "callback_function",
                "void": "nothing"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004d40": {
            "additional_data": {
                "DAT_XXXX": {
                    "dat_xxxx": 1
                },
                "DO_NOTHING_BLOCK": {
                    "do_nothing": 1
                },
                "FUN_08004d40": {
                    "do_nothing_loop": 2,
                    "endless_loop": 1,
                    "infinite_loop": 23,
                    "infinite_loop_function": 1,
                    "loop_forever": 1,
                    "run_infinite_loop": 3
                },
                "PTR_XXXX": {
                    "ptr_xxxx": 1
                },
                "do": {
                    "do": 4,
                    "infinite_loop": 1,
                    "run_infinite_loop": 1,
                    "while": 2
                },
                "original_variable_name_1": {
                    "ignored_variable": 1
                },
                "original_variable_name_2": {
                    "skipped_variable": 1
                },
                "true": {
                    "true": 5
                },
                "while": {
                    "infinite_loop": 1
                }
            },
            "called": [
                "FUN_08004d40"
            ],
            "calling": [
                "FUN_08001b48",
                "FUN_08004d40"
            ],
            "code": "\nvoid run_infinite_loop_08004d40(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } infinite_loop( true );\n}\n\n",
            "current_name": "run_infinite_loop_08004d40",
            "entrypoint": "0x08004d40",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004d40": "run_infinite_loop_08004d40",
                "while": "infinite_loop"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004d44": {
            "additional_data": {
                "FUN_08004d44": {
                    "configure_memory_registers": 1,
                    "configure_peripheral": 1,
                    "configure_peripherals": 1,
                    "configure_system": 1,
                    "initialize_device": 1,
                    "initialize_hardware": 2,
                    "initialize_memory": 1,
                    "initialize_peripheral_registers": 3,
                    "initialize_peripherals": 1,
                    "initialize_registers": 10,
                    "initialize_settings": 1,
                    "initialize_system": 5,
                    "set_control_registers": 1
                },
                "_08004d44": {
                    "initialize_registers": 1
                },
                "_40021000": {
                    "gpio_register1": 1
                },
                "_40021004": {
                    "gpio_register2": 1
                },
                "_40021008": {
                    "clock_register": 1
                },
                "_DAT_40021000": {
                    "configuration_register_1": 1,
                    "control_register": 1,
                    "control_register1": 4,
                    "control_register_1": 1,
                    "ctrl_register1": 1,
                    "hardware_status_register": 1,
                    "memory_configuration_register1": 1,
                    "memory_register_1": 1,
                    "peripheral_control_register1": 1,
                    "peripheral_register1": 1,
                    "peripheral_register_1": 1,
                    "peripheral_register_a": 1,
                    "register": 1,
                    "register1": 5,
                    "register_1": 2,
                    "register_a": 1,
                    "register_config": 1,
                    "system_config_reg": 1,
                    "system_control_register": 2,
                    "system_status": 1
                },
                "_DAT_40021004": {
                    "clear_config": 1,
                    "config_register": 1,
                    "configuration_register_2": 1,
                    "control_flag": 1,
                    "control_register2": 4,
                    "control_register_2": 1,
                    "ctrl_register2": 1,
                    "device_config": 1,
                    "hardware_configuration_register": 1,
                    "memory_configuration_register2": 1,
                    "memory_register_2": 1,
                    "peripheral_control_register2": 1,
                    "peripheral_register2": 1,
                    "peripheral_register_2": 1,
                    "peripheral_register_b": 1,
                    "register2": 5,
                    "register_2": 2,
                    "register_b": 1,
                    "system_configuration_register": 2,
                    "system_status_reg": 1
                },
                "_DAT_40021008": {
                    "buffer_size": 2,
                    "configuration_register_3": 1,
                    "control_register_3": 1,
                    "counter_register": 1,
                    "data_buffer": 1,
                    "data_register": 1,
                    "hardware_control_register": 1,
                    "interrupt_control_register": 1,
                    "interrupt_mask_register": 1,
                    "interrupt_register": 1,
                    "memory_address": 1,
                    "memory_configuration_register3": 1,
                    "memory_register_3": 1,
                    "peripheral_configuration_register1": 1,
                    "peripheral_register3": 1,
                    "peripheral_register_3": 1,
                    "peripheral_register_c": 1,
                    "register3": 5,
                    "register_3": 2,
                    "register_c": 1,
                    "set_memory_size": 1,
                    "system_control_reg": 1,
                    "timer_register": 1
                },
                "_DAT_e000ed08": {
                    "configuration_register_4": 1,
                    "control_register_4": 1,
                    "fault_status_register": 1,
                    "interrupt_control_reg": 1,
                    "interrupt_control_register": 3,
                    "interrupt_controller": 1,
                    "interrupt_enable_register": 1,
                    "interrupt_register": 3,
                    "memory_address": 1,
                    "memory_register": 1,
                    "memory_register_4": 1,
                    "peripheral_configuration_register2": 1,
                    "peripheral_register4": 1,
                    "peripheral_register_4": 1,
                    "register4": 5,
                    "register_4": 2,
                    "register_d": 1,
                    "set_interrupt_flag": 1,
                    "system_control_register": 1,
                    "system_handler_control_register": 1
                },
                "_DOM_08004d44": {
                    "initialize_registers": 1
                },
                "_ROM_40021000": {
                    "control_register": 1
                },
                "_ROM_40021004": {
                    "config_register": 1
                },
                "_ROM_40021008": {
                    "data_register": 1
                },
                "_ROM_e000ed08": {
                    "interrupt_register": 1
                },
                "_e000ed08": {
                    "interrupt_register": 1
                }
            },
            "called": [],
            "calling": [
                "entry"
            ],
            "code": "\n\n\nvoid initialize_peripheral_registers_08004d44(void)\n\n{\n  _DATgpio_register1 = _DATgpio_register1 & 0xfef2ffff | 1;\n  _DATgpio_register2 = _DATgpio_register2 & 0xf8800000;\n  _DATclock_register = 0x9f0000;\n  _DATinterrupt_register = 0x8000000;\n  return;\n}\n\n",
            "current_name": "initialize_peripheral_registers_08004d44",
            "entrypoint": "0x08004d44",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004d44": "initialize_peripheral_registers_08004d44",
                "_08004d44": "initialize_registers",
                "_40021000": "gpio_register1",
                "_40021004": "gpio_register2",
                "_40021008": "clock_register",
                "_e000ed08": "interrupt_register"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004d90": {
            "additional_data": {
                "0x40000000": {
                    "flag_2": 1
                },
                "0x40000400": {
                    "flag_3": 1
                },
                "0x40000800": {
                    "flag_4": 1
                },
                "0x40012c00": {
                    "flag_1": 1
                },
                "DAT_40021018": {
                    "status_flag": 1
                },
                "DAT_4002101c": {
                    "config_flag": 1
                },
                "FUN_08004d90": {
                    "apply_settings": 1,
                    "disable_flags": 1,
                    "update_configuration": 2,
                    "update_control_registers": 1,
                    "update_data": 2,
                    "update_data_flags": 3,
                    "update_data_registers": 1,
                    "update_flags": 3,
                    "update_flags_based_on_param": 3,
                    "update_memory": 1,
                    "update_memory_status": 1,
                    "update_permissions": 1,
                    "update_register_values": 2,
                    "update_registers": 2,
                    "update_registry_flags": 1,
                    "update_settings": 4,
                    "update_status_bits": 2
                },
                "_DAT_40021018": {
                    "config_register1": 1,
                    "config_register_a": 1,
                    "control_register1": 1,
                    "data_flag1": 2,
                    "display_settings": 1,
                    "flag1": 1,
                    "flag_1": 1,
                    "flags1": 1,
                    "flags_register": 1,
                    "flags_register_1": 2,
                    "global_variable1": 1,
                    "memory_status1": 1,
                    "permissions_flag": 1,
                    "register1": 2,
                    "register_1": 1,
                    "register_a": 6,
                    "registry_flags1": 1,
                    "setting_flag": 1,
                    "settings_register_a": 1,
                    "status_bits_40021018": 1
                },
                "_DAT_4002101c": {
                    "config_register2": 1,
                    "config_register_b": 1,
                    "control_register": 1,
                    "control_register2": 1,
                    "control_settings": 1,
                    "data_flag2": 2,
                    "flag2": 1,
                    "flag_2": 1,
                    "flags2": 1,
                    "flags_register_2": 2,
                    "global_variable2": 1,
                    "memory_status2": 1,
                    "permissions_mask": 1,
                    "register2": 2,
                    "register_2": 1,
                    "register_b": 6,
                    "registry_flags2": 1,
                    "setting_mask": 1,
                    "settings_register_b": 1,
                    "status_bits_4002101c": 1
                },
                "param_1": {
                    "config": 1,
                    "config_value": 1,
                    "control_value": 1,
                    "data": 1,
                    "data_pointer": 4,
                    "data_ptr": 1,
                    "flag": 1,
                    "flag_ptr": 1,
                    "input_value": 1,
                    "memory_address": 2,
                    "param": 3,
                    "param_pointer": 1,
                    "register_value": 2,
                    "settings": 3,
                    "status": 2,
                    "value": 5
                },
                "param_2": {
                    "status": 1
                },
                "param_n": {
                    "status": 1
                },
                "registerA": {
                    "register_a": 1
                },
                "registerB": {
                    "register_b": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004b34"
            ],
            "code": "\n\n\nvoid update_flags_based_on_param_08004d90(int *value)\n\n{\n  if (*value == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 & 0xfffff7ff;\n  }\n  if (*value == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffe;\n  }\n  if (*value == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffd;\n  }\n  if (*value == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffb;\n  }\n  return;\n}\n\n",
            "current_name": "update_flags_based_on_param_08004d90",
            "entrypoint": "0x08004d90",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004d90": "update_flags_based_on_param_08004d90",
                "param_1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004df4": {
            "additional_data": {
                "FUN_08004df4": {
                    "add_four": 1,
                    "add_four_to_parameter": 1,
                    "decrement_value": 1,
                    "subtract4": 1,
                    "subtract_by_four": 1,
                    "subtract_constant": 1,
                    "subtract_four": 24,
                    "subtract_four_from_param": 1
                },
                "lab4TestVar": {
                    "result": 1
                },
                "param_1": {
                    "input": 7,
                    "input_num": 2,
                    "input_number": 4,
                    "input_value": 6,
                    "num": 3,
                    "number": 2,
                    "output": 1,
                    "result": 6
                },
                "param_2": {
                    "new_param2": 1,
                    "result": 1
                },
                "param_3": {
                    "new_param3": 1
                },
                "param_4": {
                    "new_param4": 1
                },
                "param_n": {
                    "new_param_n": 1
                },
                "return": {
                    "result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004e12",
                "FUN_08004df8"
            ],
            "code": "\nint subtract_four_from_param_08004df4(int input)\n\n{\n  result input + -4;\n}\n\n",
            "current_name": "subtract_four_from_param_08004df4",
            "entrypoint": "0x08004df4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004df4": "subtract_four_from_param_08004df4",
                "param_1": "input",
                "return": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004df8": {
            "additional_data": {
                "0": {
                    "no_arguments": 1
                },
                "0x0": {
                    "null": 1,
                    "null_pointer": 2
                },
                "0x01": {
                    "condition_value": 1
                },
                "0x1c": {
                    "condition_offset": 2
                },
                "0x4c": {
                    "callback_function_offset": 1,
                    "function_offset": 4
                },
                "DAT_08004df3": {
                    "flag_check_offset": 1
                },
                "DAT_08004df8": {
                    "callback_flag": 1
                },
                "FUN_08004df8": {
                    "execute_callback": 2,
                    "execute_callback_function": 3,
                    "execute_callback_if_condition_met": 5,
                    "execute_callback_if_enabled": 3,
                    "execute_callback_if_flag_set": 4,
                    "execute_callback_if_valid": 1,
                    "execute_code_if_condition_met": 1,
                    "execute_conditional_function": 1,
                    "execute_function_if_condition_met": 6,
                    "execute_function_if_param_set": 1,
                    "execute_if_condition_is_met": 1,
                    "execute_if_condition_met": 2,
                    "execute_if_flag_set": 1
                },
                "PTR_08004dec": {
                    "callback_function_ptr": 1
                },
                "PTR_08004df4": {
                    "func_ptr_offset": 1
                },
                "code": {
                    "callback_function": 1,
                    "callback_function_type": 1,
                    "function_pointer": 3
                },
                "iVar1": {
                    "callback_function": 3,
                    "callback_function_ptr": 1,
                    "callback_result": 4,
                    "callback_return_value": 1,
                    "func_ptr": 1,
                    "result": 15,
                    "return_value": 1,
                    "subtracted_value": 5
                },
                "param_1": {
                    "callback_argument": 1,
                    "callback_data": 4,
                    "callback_param": 5,
                    "callback_parameter": 5,
                    "callback_params": 1,
                    "function_param": 1,
                    "input_param": 4,
                    "input_parameter": 4,
                    "input_value": 4,
                    "parameter": 1,
                    "value": 1
                },
                "subtract_four_from_param_08004df4": {
                    "calculate_callback_address": 1,
                    "calculate_offset": 2,
                    "compute_intermediate_result": 1,
                    "get_callback_data": 1,
                    "get_callback_function": 4,
                    "get_callback_function_address": 1,
                    "get_callback_function_ptr": 1,
                    "get_func_ptr_offset": 1,
                    "subtract_four": 3,
                    "subtract_four_from_input_value": 1,
                    "subtract_four_from_param": 3,
                    "subtract_four_from_parameter_function": 1
                }
            },
            "called": [
                "FUN_08004df4"
            ],
            "calling": [
                "FUN_08003f18"
            ],
            "code": "\nvoid execute_function_if_condition_met_08004df8(int callback_parameter)\n\n{\n  int result;\n  \n  result = get_callback_function();\n  if ((*(function_pointer **)(result + 0x4c) != (function_pointer *)0x0) && (*(char *)(callback_parameter + 0x1c) == '\\x01')) {\n    (**(function_pointer **)(result + 0x4c))(result,0);\n  }\n  return;\n}\n\n",
            "current_name": "execute_function_if_condition_met_08004df8",
            "entrypoint": "0x08004df8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004df8": "execute_function_if_condition_met_08004df8",
                "code": "function_pointer",
                "iVar1": "result",
                "param_1": "callback_parameter",
                "subtract_four_from_param_08004df4": "get_callback_function"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004e12": {
            "additional_data": {
                "0x0": {
                    "null": 1
                },
                "0x48": {
                    "callback_address": 1,
                    "callback_offset": 4,
                    "function_offset": 1,
                    "offset": 7
                },
                "FUN_08004e12": {
                    "call_subroutine": 1,
                    "execute_callback": 14,
                    "execute_callback_function": 5,
                    "execute_callback_if_not_null": 1,
                    "execute_code_from_function_pointer": 1,
                    "execute_function_from_pointer": 1,
                    "execute_function_if_available": 1,
                    "execute_function_if_non_null": 1,
                    "execute_function_if_valid": 2,
                    "execute_optional_callback": 1,
                    "execute_subtract_four_and_invoke": 1,
                    "execute_subtract_four_from_param": 1,
                    "execute_subtraction_and_call_function": 1
                },
                "code": {
                    "callback": 1,
                    "callback_function": 3,
                    "function": 1,
                    "function_pointer": 2
                },
                "iVar1": {
                    "callback_address": 2,
                    "callback_function_pointer": 1,
                    "modified_value": 1,
                    "param_result": 2,
                    "result": 23,
                    "return_value": 2
                },
                "subtract_four_from_param_08004df4": {
                    "calculate_callback_address": 1,
                    "calculate_pointer_offset": 1,
                    "compute_offset": 1,
                    "get_callback_address": 4,
                    "get_callback_function": 1,
                    "get_callback_function_offset": 1,
                    "get_callback_offset": 2,
                    "get_callback_pointer": 1,
                    "get_function_pointer": 2,
                    "get_function_pointer_offset": 1,
                    "get_modified_value": 1,
                    "get_parameter": 1,
                    "get_subtractive_value": 1,
                    "sub_four_from_param": 1,
                    "subtract_four_from_param": 7,
                    "subtract_four_from_parameter": 4,
                    "subtract_four_from_value": 1
                }
            },
            "called": [
                "FUN_08004df4"
            ],
            "calling": [
                "FUN_08003f18"
            ],
            "code": "\nvoid execute_callback_function_08004e12(void)\n\n{\n  int result;\n  \n  result = subtract_four_from_param();\n  if (*(callback_function **)(result + 0x48) != (callback_function *)0x0) {\n    (**(callback_function **)(result + 0x48))();\n  }\n  return;\n}\n\n",
            "current_name": "execute_callback_function_08004e12",
            "entrypoint": "0x08004e12",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004e12": "execute_callback_function_08004e12",
                "code": "callback_function",
                "iVar1": "result",
                "subtract_four_from_param_08004df4": "subtract_four_from_param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004e20": {
            "additional_data": {
                "DAT_2000027c": {
                    "condition_flag": 1
                },
                "FUN_08004e20": {
                    "check_and_process_conditions": 2,
                    "check_conditions_and_execute_actions": 1,
                    "execute_condition_actions": 2,
                    "execute_condition_and_action": 2,
                    "execute_conditional_actions": 2,
                    "execute_conditions_and_actions": 2,
                    "perform_conditional_action": 1,
                    "process_and_execute_conditions": 1,
                    "process_condition_and_actions": 1,
                    "process_conditions": 1,
                    "process_conditions_if_valid": 1,
                    "process_if_condition": 2,
                    "process_if_condition_and_action": 1,
                    "process_if_condition_met": 2,
                    "process_if_conditions": 10
                },
                "process_conditions_and_actions_08003f18": {
                    "check_and_perform_conditions_and_actions": 1,
                    "execute_actions": 4,
                    "execute_actions_based_on_conditions": 3,
                    "execute_actions_if_condition_met": 1,
                    "execute_actions_if_conditions_met": 2,
                    "execute_conditions_and_actions": 3,
                    "execute_process_conditions_and_actions": 1,
                    "process_condition_actions": 1,
                    "process_conditions_and_actions": 10
                }
            },
            "called": [
                "FUN_08003f18"
            ],
            "calling": [],
            "code": "\nvoid process_conditions_if_valid_08004e20(void)\n\n{\n  if (DAT_2000027c != 0) {\n    process_conditions_and_actions();\n  }\n  return;\n}\n\n",
            "current_name": "process_conditions_if_valid_08004e20",
            "entrypoint": "0x08004e20",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004e20": "process_conditions_if_valid_08004e20",
                "process_conditions_and_actions_08003f18": "process_conditions_and_actions"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004e70": {
            "additional_data": {
                "FUN_08004e70": {
                    "decrement_param": 1,
                    "subtract_by_four": 2,
                    "subtract_four": 28
                },
                "param_1": {
                    "input": 6,
                    "input_num": 1,
                    "input_number": 4,
                    "input_value": 3,
                    "integer": 1,
                    "n": 1,
                    "num": 2,
                    "number": 2,
                    "output": 1,
                    "result": 7,
                    "value": 3
                },
                "param_1_": {
                    "result": 1
                },
                "param_1_new": {
                    "new_value": 1
                },
                "param_2": {
                    "new_param_2": 1
                },
                "param_n": {
                    "new_param_n": 1
                },
                "return": {
                    "result": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_08004ec4",
                "FUN_08004e74",
                "FUN_08004ef4"
            ],
            "code": "\nint subtract_by_four_08004e70(int result)\n\n{\n  result result + -4;\n}\n\n",
            "current_name": "subtract_by_four_08004e70",
            "entrypoint": "0x08004e70",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004e70": "subtract_by_four_08004e70",
                "param_1": "result",
                "return": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004e74": {
            "additional_data": {
                "FUN_08004e74": {
                    "handle_input": 1,
                    "parse_input": 1,
                    "process_data": 6,
                    "process_event": 1,
                    "process_input": 21,
                    "process_param": 1
                },
                "code": {
                    "callback_code": 1,
                    "function_pointer": 2,
                    "function_ptr": 2
                },
                "compare_value": {
                    "compare_value": 1
                },
                "data_address": {
                    "data_address": 1
                },
                "data_flag": {
                    "data_status": 1
                },
                "data_location": {
                    "input_location": 1
                },
                "flag": {
                    "is_zero": 1
                },
                "iVar1": {
                    "result": 28,
                    "subtracted": 1,
                    "temp": 1,
                    "temp_var": 1
                },
                "param": {
                    "parameter": 1
                },
                "param_1": {
                    "buffer": 1,
                    "data_address": 2,
                    "data_location": 1,
                    "data_ptr": 4,
                    "event_data": 1,
                    "input1": 1,
                    "input_addr": 2,
                    "input_address": 4,
                    "input_data": 8,
                    "input_param": 3,
                    "input_param1": 1,
                    "input_pointer": 1,
                    "input_ptr": 2
                },
                "param_2": {
                    "condition": 1,
                    "flag": 27,
                    "input2": 1,
                    "input_param2": 1,
                    "is_input": 1
                },
                "param_3": {
                    "check_param": 1,
                    "check_value": 4,
                    "compare_val": 2,
                    "compare_value": 3,
                    "comparison_val": 1,
                    "comparison_value": 5,
                    "constant": 1,
                    "data": 1,
                    "data_flag": 1,
                    "expected_value": 1,
                    "input3": 1,
                    "input_check": 1,
                    "input_code": 1,
                    "input_param3": 1,
                    "param_value": 1,
                    "target_value": 1,
                    "value": 4,
                    "var": 1
                },
                "param_4": {
                    "additional_param": 1,
                    "callback": 3,
                    "callback_function": 2,
                    "callback_param": 1,
                    "code_ptr": 1,
                    "custom_param": 1,
                    "extra_param": 1,
                    "function_parameter": 1,
                    "function_pointer": 1,
                    "input": 1,
                    "input4": 1,
                    "input_param4": 1,
                    "param": 3,
                    "param_4": 7,
                    "parameter": 1,
                    "some_parameter": 1,
                    "undefined_arg": 1,
                    "undefined_param": 2,
                    "unknown_parameter": 1
                },
                "parse_input_08002b84": {
                    "parse_input": 26,
                    "parse_input_data": 2
                },
                "process_input_data_08002af8": {
                    "process_data": 11,
                    "process_input_data": 16
                },
                "result": {
                    "temp": 1
                },
                "subtract_by_four_08004e70": {
                    "calculate_offset": 3,
                    "get_offset": 1,
                    "get_result": 1,
                    "subtract_by_four": 13,
                    "subtract_four": 7
                }
            },
            "called": [
                "FUN_08004e70",
                "FUN_08002b84",
                "FUN_08002af8"
            ],
            "calling": [
                "FUN_08002cf2"
            ],
            "code": "\nvoid process_input_08004e74(int input_data,int flag,int comparison_value,undefined4 parameter_4)\n\n{\n  int result;\n  \n  result = subtract_by_four();\n  if (comparison_value == *(int *)(input_data + 0xc)) {\n    if (flag == 0) {\n      *(undefined *)(result + 0x88) = 0;\n      *(undefined *)(result + 0x5c) = 0;\n      if (*(function_ptr **)(result + 100) != (function_ptr *)0x0) {\n        (**(function_ptr **)(result + 100))();\n      }\n      process_input_08004e74_data(input_data,result + 0x68,*(undefined *)(result + 0x88),8);\n      return;\n    }\n    *(undefined *)(result + 0x5c) = 1;\n    parse_input(input_data,result + 0x68,0x20,8,parameter_4);\n  }\n  return;\n}\n\n",
            "current_name": "process_input_08004e74",
            "entrypoint": "0x08004e74",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004e74": "process_input_08004e74",
                "code": "function_ptr",
                "iVar1": "result",
                "param": "parameter",
                "param_1": "input_data",
                "param_2": "flag",
                "param_3": "comparison_value",
                "parse_input_08002b84": "parse_input",
                "process_input_data_08002af8": "process_input_data",
                "subtract_by_four_08004e70": "subtract_by_four"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004ec4": {
            "additional_data": {
                "DAT_": {
                    "": 1
                },
                "FUN_08004ec4": {
                    "initialize_and_call_function": 1,
                    "initialize_and_execute": 15,
                    "initialize_and_execute_function": 9,
                    "initialize_and_execute_task": 1,
                    "initialize_and_invoke_function": 2,
                    "initialize_data": 1,
                    "initialize_data_and_invoke_function": 1,
                    "process_binary_function": 1
                },
                "InitializeDataStructures_08002c10": {
                    "initialize_data_structures": 1
                },
                "PTR_": {
                    "": 1
                },
                "code": {
                    "function_pointer": 3,
                    "function_ptr": 1
                },
                "iVar1": {
                    "offset": 1,
                    "result": 25,
                    "subtract_result": 4,
                    "subtraction_result": 1
                },
                "initialize_data_structures_08002c10": {
                    "init_data_structures": 1,
                    "initialize_data_structures": 23,
                    "initialize_data_structures_func": 1
                },
                "param_1": {
                    "argument": 1,
                    "data": 3,
                    "init_param": 1,
                    "initial_data": 1,
                    "initial_param": 1,
                    "initial_value": 3,
                    "input_data": 1,
                    "input_param": 7,
                    "input_parameter": 4,
                    "param": 5,
                    "parameter": 2,
                    "user_input": 2
                },
                "subtract_by_four_08004e70": {
                    "calculate_offset": 7,
                    "get_address_offset": 1,
                    "get_function_address": 1,
                    "get_function_offset": 1,
                    "get_function_pointer": 2,
                    "get_offset": 1,
                    "get_result_version": 1,
                    "get_subtraction_result": 1,
                    "subtract_by_four": 9,
                    "subtract_by_four_func": 1,
                    "subtract_four": 3
                }
            },
            "called": [
                "FUN_08004e70",
                "FUN_08002c10"
            ],
            "calling": [
                "FUN_08002d1c",
                "FUN_0800316c",
                "FUN_080032b4"
            ],
            "code": "\nvoid initialize_and_execute_function_08004ec4(undefined4 input_param)\n\n{\n  int result;\n  \n  result = subtract_by_four();\n  if (((*(function_pointer **)(result + 0x60) != (function_pointer *)0x0) && (*(char *)(result + 0x5c) == '\\x01')) &&\n     (*(char *)(result + 0x2c) != ' ')) {\n    (**(function_pointer **)(result + 0x60))(result + 0x68);\n  }\n  initialize_data_structures(input_param);\n  return;\n}\n\n",
            "current_name": "initialize_and_execute_function_08004ec4",
            "entrypoint": "0x08004ec4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004ec4": "initialize_and_execute_function_08004ec4",
                "code": "function_pointer",
                "iVar1": "result",
                "initialize_data_structures_08002c10": "initialize_data_structures",
                "param_1": "input_param",
                "subtract_by_four_08004e70": "subtract_by_four"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004ef4": {
            "additional_data": {
                "DAT_08004e70": {
                    "subtract_by_four_data": 1
                },
                "FUN_08004ef4": {
                    "check_and_initialize_data_structures": 9,
                    "check_and_update_data_structures": 1,
                    "handle_initialization": 1,
                    "initialize_data_if_condition_is_met": 1,
                    "initialize_data_if_needed": 2,
                    "initialize_data_if_not_subtracted_by_four": 1,
                    "initialize_data_structures": 3,
                    "initialize_data_structures_if_condition_false": 1,
                    "initialize_data_structures_if_necessary": 1,
                    "initialize_data_structures_if_needed": 3,
                    "initialize_data_structures_if_subtract_by_four_equal_zero": 1,
                    "initialize_if_char_is_zero": 1,
                    "initialize_if_data_not_set": 1,
                    "initialize_if_data_structures_not_initialized": 1,
                    "initialize_if_not_initialized": 3,
                    "initialize_or_continue": 1
                },
                "iVar1": {
                    "result": 21,
                    "result_of_subtract_by_four": 1,
                    "subtracted_val": 1,
                    "subtracted_value": 4,
                    "subtraction_result": 4
                },
                "initialize_data_structures_08002c10": {
                    "init_data_structures": 1,
                    "initialize_data_structures": 14
                },
                "param_1": {
                    "argument": 1,
                    "function_param": 1,
                    "input_param": 9,
                    "input_parameter": 10,
                    "input_value": 1,
                    "param": 7,
                    "parameter": 1,
                    "passed_param": 1
                },
                "subtract_by_four_08004e70": {
                    "calculate_offset": 1,
                    "get_offset": 1,
                    "perform_subtraction": 1,
                    "perform_subtraction_by_four": 1,
                    "subtract_by_four": 8,
                    "subtract_four": 2
                }
            },
            "called": [
                "FUN_08004e70",
                "FUN_08002c10"
            ],
            "calling": [
                "FUN_0800316c"
            ],
            "code": "\nvoid check_and_initialize_data_structures_08004ef4(undefined4 input_parameter)\n\n{\n  int result;\n  \n  result = subtract_by_four();\n  if (*(char *)(result + 0x5d) == '\\0') {\n    initialize_data_structures(input_parameter);\n  }\n  return;\n}\n\n",
            "current_name": "check_and_initialize_data_structures_08004ef4",
            "entrypoint": "0x08004ef4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004ef4": "check_and_initialize_data_structures_08004ef4",
                "iVar1": "result",
                "initialize_data_structures_08002c10": "initialize_data_structures",
                "param_1": "input_parameter",
                "subtract_by_four_08004e70": "subtract_by_four"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004f4c": {
            "additional_data": {
                "DAT_08007604": {
                    "array2": 1,
                    "par_port_values": 1,
                    "peripheral_data2": 1,
                    "uart_config_data2": 1,
                    "uart_pin2_data_array": 1,
                    "uart_pin_value2": 1,
                    "uart_pin_values": 1,
                    "uart_pin_values2": 1,
                    "uart_pin_values3": 1,
                    "uart_pin_values_2": 1,
                    "uart_value2": 1,
                    "uart_values2": 1
                },
                "DAT_0800764c": {
                    "array1": 1,
                    "peripheral_data1": 1,
                    "uart_config_data1": 1,
                    "uart_pin1_data_array": 1,
                    "uart_pin_value1": 1,
                    "uart_pin_values": 3,
                    "uart_pin_values1": 2,
                    "uart_value1": 1,
                    "uart_values1": 1
                },
                "DAT_2000032c": {
                    "param_data": 1,
                    "uart_pin_array": 1,
                    "uart_register_address": 1
                },
                "DAT_200032c": {
                    "uart_data": 1
                },
                "DAT_40010004": {
                    "ctrl": 1,
                    "register29": 1,
                    "register5": 1
                },
                "DAT_40021018": {
                    "register5": 1
                },
                "FUN_08004f4c": {
                    "configure_peripheral_pins": 1,
                    "configure_pin_functions": 1,
                    "configure_uart": 1,
                    "configure_uart_peripheral": 1,
                    "configure_uart_pins": 8,
                    "initialize_and_configure_uart_pins": 1,
                    "initialize_peripherals": 1,
                    "initialize_uart_peripheral": 1,
                    "initialize_uart_pin_config": 2,
                    "initialize_uart_pins": 14
                },
                "_DAT_40010004": {
                    "reg_uart_br": 1,
                    "register5": 1,
                    "register6": 1,
                    "uart_ctrl": 1,
                    "uart_reg_5": 1,
                    "uart_register5": 1,
                    "usart1_cr1": 1,
                    "usart_cr1": 1
                },
                "_DAT_4002100c": {
                    "gpioa_moder": 1,
                    "reg_uart_cr1": 1,
                    "register1": 5,
                    "register_a": 1,
                    "uart1_cr1": 1,
                    "uart1_reg1": 1,
                    "uart_cfg1": 1,
                    "uart_ctrl1": 1,
                    "uart_reg_1": 1,
                    "uart_register1": 3
                },
                "_DAT_40021010": {
                    "gpio_cfg0": 1,
                    "gpioa_otyper": 1,
                    "par_port_ctrl1": 1,
                    "reg_uart_cr3": 1,
                    "register3": 5,
                    "register_c": 1,
                    "uart2_cr1": 1,
                    "uart2_reg1": 1,
                    "uart_reg_3": 1,
                    "uart_register3": 3
                },
                "_DAT_40021018": {
                    "gpioa_afrl": 1,
                    "reg_uart_cr2": 1,
                    "register2": 5,
                    "register_b": 1,
                    "uart1_cr3": 1,
                    "uart1_reg4": 1,
                    "uart_cfg2": 1,
                    "uart_ctrl2": 1,
                    "uart_reg_2": 1,
                    "uart_register2": 3
                },
                "_DAT_4002101c": {
                    "gpio_cfg1": 1,
                    "gpioa_ospeedr": 1,
                    "par_port_ctrl2": 1,
                    "reg_uart_cr4": 1,
                    "register4": 5,
                    "register_d": 1,
                    "uart2_cr3": 1,
                    "uart2_reg4": 1,
                    "uart_reg_4": 1,
                    "uart_register4": 3
                },
                "compare_and_return_first_non_zero_08004d06": {
                    "compare_and_return_first_non_zero": 3,
                    "compare_and_return_non_zero": 2,
                    "compare_pins": 1,
                    "compare_uart_configs": 1,
                    "find_uart_config": 1
                },
                "comparison_function1": {
                    "find_index_with_value_or_zero_uart": 1
                },
                "comparison_function2": {
                    "find_index_with_value_or_zero_uart2": 1
                },
                "find_index_with_value_or_zero_08004c78": {
                    "find_index_with_value_or_zero": 2
                },
                "get_value_by_index_08004cce": {
                    "get_value_by_index": 9,
                    "get_value_by_index_uart": 1
                },
                "iVar1": {
                    "index1": 5,
                    "index_pin_1": 2,
                    "index_uart_pin1": 1,
                    "index_value1": 1,
                    "pin1_index": 1,
                    "pin_1_index": 1,
                    "pin_index1": 3,
                    "pin_index_1": 2,
                    "uart_index1": 1,
                    "uart_pin1_index": 3,
                    "uart_pin_1_index": 1,
                    "uart_pin_index": 5,
                    "uart_pin_index1": 4,
                    "uart_tx_pin_index": 1
                },
                "iVar2": {
                    "index2": 5,
                    "index_pin_2": 2,
                    "index_uart_pin2": 1,
                    "index_value2": 1,
                    "par_port_index": 1,
                    "peripheral_index": 2,
                    "peripheral_pin_index": 1,
                    "pin2_index": 1,
                    "pin_2_index": 1,
                    "pin_index2": 3,
                    "pin_index_2": 2,
                    "uart_index2": 1,
                    "uart_pin2_index": 3,
                    "uart_pin_2_index": 1,
                    "uart_pin_index2": 4,
                    "uart_pin_index_2": 1,
                    "uart_rx_pin_index": 1
                },
                "initialize_param_data_0800441a": {
                    "init_param_data": 1,
                    "initialize_data": 1,
                    "initialize_param_data": 12,
                    "initialize_uart_data": 2
                },
                "local_14": {
                    "constant": 2,
                    "constant_1": 1,
                    "constants1": 1,
                    "data": 3,
                    "dummy_value": 1,
                    "flag": 1,
                    "flag_value": 2,
                    "local_variable_14": 1,
                    "memory_perm": 1,
                    "memory_permission_2": 1,
                    "num_bits": 1,
                    "num_flags": 1,
                    "num_pins": 1,
                    "pin2_mode": 1,
                    "set_value": 1,
                    "uart_config": 2,
                    "uart_config_flag": 1,
                    "uart_flag": 2,
                    "uart_mem_permission2": 1,
                    "uart_mode": 1,
                    "uart_pin1_flags_init": 1,
                    "uart_pin1_mode": 1,
                    "uart_pin_count": 1,
                    "uart_pin_mode": 1,
                    "uart_type": 1
                },
                "local_18": {
                    "alternate_function": 1,
                    "baud_rate_divisor": 1,
                    "bit_mask3": 1,
                    "bitmask3": 1,
                    "flag": 1,
                    "local_var_2": 1,
                    "local_variable_18": 1,
                    "pin1_speed": 1,
                    "pin_alternate_function": 1,
                    "pin_mask": 1,
                    "pin_mode": 1,
                    "pin_shift": 1,
                    "pin_shifted": 1,
                    "pin_speed": 2,
                    "pin_value2": 1,
                    "shift_amount": 1,
                    "shifted_bits_1": 1,
                    "shifted_offset": 1,
                    "shifted_value": 3,
                    "shifted_value1": 1,
                    "uart_line_config": 1,
                    "uart_pin2_shift": 1,
                    "uart_pin2_shifted_value": 1,
                    "uart_pin2_value": 1,
                    "uart_pin_config2": 1,
                    "uart_pin_reserved": 1,
                    "uart_value_shift": 1,
                    "value3": 1
                },
                "local_1c": {
                    "bit_mask2": 1,
                    "bit_value": 1,
                    "bitmask2": 1,
                    "bits_1": 1,
                    "flag1": 1,
                    "group": 1,
                    "local_var_1": 1,
                    "local_variable_1c": 1,
                    "offset": 1,
                    "par_port_flag": 1,
                    "pin1_mode": 1,
                    "pin_and_permission1": 1,
                    "pin_config": 1,
                    "pin_configuration": 1,
                    "pin_flags": 1,
                    "pin_function": 1,
                    "pin_mode": 2,
                    "pin_setting": 1,
                    "pin_settings": 1,
                    "pin_value": 1,
                    "pin_value1": 1,
                    "selector": 1,
                    "uart_bit_config": 1,
                    "uart_pin2_bitmask": 1,
                    "uart_pin2_data": 1,
                    "uart_pin2_mask": 1,
                    "uart_pin_config": 2,
                    "uart_pin_config1": 1,
                    "value2": 1
                },
                "local_20": {
                    "bit_mask1": 1,
                    "bitmask": 1,
                    "bitmask1": 1,
                    "bitmask_1": 1,
                    "mask": 3,
                    "mask1": 1,
                    "pin1_mask": 1,
                    "pin_bitmask": 1,
                    "pin_bitmask1": 1,
                    "pin_flag": 2,
                    "pin_mask": 8,
                    "uart_bit_mask": 1,
                    "uart_pin1_bitmask": 1,
                    "uart_pin1_mask": 2,
                    "uart_pin_bitmask": 2,
                    "uart_pin_flag": 1,
                    "uart_pin_mask": 3
                },
                "param_1": {
                    "peripheral_config": 1,
                    "pin_config": 2,
                    "pin_config_array": 1,
                    "pins": 2,
                    "pins_array": 1,
                    "uart_config": 2,
                    "uart_pin_config": 2,
                    "uart_pins": 20
                },
                "process_input_data_080068f0": {
                    "print_error": 1,
                    "print_error_message": 3,
                    "process_error_message": 2,
                    "process_input_data": 4
                },
                "set_memory_permissions_08004884": {
                    "set_memory_permissions": 10
                },
                "uVar3": {
                    "memory_perm1": 1,
                    "memory_permission": 1,
                    "memory_permission1": 2,
                    "memory_permission_1": 1,
                    "memory_permissions": 1,
                    "memory_permissions1": 1,
                    "permission": 2,
                    "permission1": 4,
                    "permission_1": 1,
                    "permission_code": 1,
                    "permission_mask": 1,
                    "permission_value": 2,
                    "permissions": 2,
                    "permissions1": 2,
                    "permissions_pin_2": 1,
                    "uart_config": 1,
                    "uart_mem_permission1": 1,
                    "uart_perm1": 1,
                    "uart_permission": 1,
                    "uart_pin1_mem_perm": 1,
                    "uart_pin1_value": 1,
                    "uart_pin_config": 1,
                    "uart_pin_value1": 1
                },
                "uVar4": {
                    "par_port_config": 1,
                    "pin_config": 1,
                    "pin_value": 1,
                    "uart_perm2": 1,
                    "uart_pin2_value": 2,
                    "uart_pin_value2": 1,
                    "uart_value": 2,
                    "value": 10,
                    "value1": 3,
                    "value_1": 1,
                    "value_by_index": 5,
                    "value_by_index1": 1,
                    "value_index": 1,
                    "value_pin_2": 1
                },
                "update_flags_and_registers_08002624": {
                    "update_flags_and_registers": 11
                }
            },
            "called": [
                "FUN_08004cce",
                "FUN_08002624",
                "FUN_08004884",
                "FUN_080068f0",
                "FUN_08004c78",
                "FUN_08004d06",
                "FUN_0800441a"
            ],
            "calling": [
                "FUN_08005384",
                "FUN_08005a68"
            ],
            "code": "\n\n\nvoid initialize_and_configure_uart_pins_08004f4c(int *uart_pins)\n\n{\n  int index1;\n  int index2;\n  undefined4 permission1;\n  uint value;\n  uint pin_mask;\n  uint uart_pin_config;\n  uint shifted_value;\n  undefined4 data;\n  \n  if (uart_pins != (int *)0x0) {\n    index1 = find_index_with_value_or_zero((int)*(char *)(uart_pins + 0x16),&DAT_0800764c);\n    index2 = find_index_with_value_or_zero((int)*(char *)((int)uart_pins + 0x59),&DAT_08007604);\n    if ((index2 == 0) || (index1 == 0)) {\n      process_input_data(\"ERROR: at least one UART pin has no peripheral\\n\",index2);\n    }\n    else {\n      index1 = compare_and_return_first_non_zero(index1);\n      *uart_pins = index1;\n      if (index1 == 0) {\n        process_input_data(\"ERROR: U(S)ART pins mismatch\\n\");\n      }\n      else {\n        if (index1 == 0x40013800) {\n          _DAT_4002100c = _DAT_4002100c & 0xffffbfff;\n          _DAT_40021018 = _DAT_40021018 | 0x4000;\n          *(undefined *)(uart_pins + 0x11) = 0;\n          *(undefined *)((int)uart_pins + 0x5a) = 0x25;\n        }\n        else if (index1 == 0x40004400) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffdffff;\n          _DAT_4002101c = _DAT_4002101c | 0x20000;\n          *(undefined *)(uart_pins + 0x11) = 1;\n          *(undefined *)((int)uart_pins + 0x5a) = 0x26;\n        }\n        else if (index1 == 0x40004800) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffbffff;\n          _DAT_4002101c = _DAT_4002101c | 0x40000;\n          *(undefined *)(uart_pins + 0x11) = 2;\n          *(undefined *)((int)uart_pins + 0x5a) = 0x27;\n        }\n        permission1 = set_memory_permissions((uint)((int)*(char *)((int)uart_pins + 0x59) << 0x18) >> 0x1c);\n        value = get_value_by_index((int)*(char *)((int)uart_pins + 0x59),&DAT_08007604);\n        pin_mask = 1 << (*(byte *)((int)uart_pins + 0x59) & 0xf) & 0xffff;\n        uart_pin_config = (value >> 3 & 1) << 4 | value & 7;\n        shifted_value = (value << 0x1a) >> 0x1e;\n        _DAT_40021018 = _DAT_40021018 | 1;\n        switch((value << 0x11) >> 0x19) {\n        case 1:\n          _DAT_40010004 = _DAT_40010004 | 0x7000001;\n          break;\n        case 2:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          break;\n        case 3:\n          _DAT_40010004 = _DAT_40010004 | 0x7000002;\n          break;\n        case 4:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          break;\n        case 5:\n          _DAT_40010004 = _DAT_40010004 | 0x7000004;\n          break;\n        case 6:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          break;\n        case 7:\n          _DAT_40010004 = _DAT_40010004 | 0x7000008;\n          break;\n        case 8:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          break;\n        case 9:\n          _DAT_40010004 = _DAT_40010004 | 0x7000030;\n          break;\n        case 10:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          break;\n        case 0xb:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          break;\n        case 0xc:\n          _DAT_40010004 = _DAT_40010004 | 0x70000c0;\n          break;\n        case 0xd:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          break;\n        case 0xe:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          break;\n        case 0xf:\n          _DAT_40010004 = _DAT_40010004 | 0x7000300;\n          break;\n        case 0x10:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          break;\n        case 0x11:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          break;\n        case 0x12:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          break;\n        case 0x13:\n          _DAT_40010004 = _DAT_40010004 | 0x7000c00;\n          break;\n        case 0x14:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          break;\n        case 0x15:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          break;\n        case 0x16:\n          _DAT_40010004 = _DAT_40010004 | 0x7001000;\n          break;\n        case 0x17:\n          _DAT_40010004 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          break;\n        case 0x1b:\n          _DAT_40010004 = _DAT_40010004 | 0x7008000;\n          break;\n        case 0x1c:\n          _DAT_40010004 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          break;\n        case 0x21:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff;\n          break;\n        case 0x22:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          break;\n        case 0x23:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          break;\n        case 0x24:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n        }\n        data = 3;\n        update_flags_and_registers(permission1,&pin_mask);\n        permission1 = set_memory_permissions((uint)((int)*(char *)(uart_pins + 0x16) << 0x18) >> 0x1c);\n        value = get_value_by_index((int)*(char *)(uart_pins + 0x16),&DAT_0800764c);\n        pin_mask = 1 << (*(byte *)(uart_pins + 0x16) & 0xf) & 0xffff;\n        uart_pin_config = (value >> 3 & 1) << 4 | value & 7;\n        shifted_value = (value << 0x1a) >> 0x1e;\n        update_flags_and_registers(permission1,&pin_mask);\n        (&DAT_2000032c)[*(byte *)(uart_pins + 0x11)] = uart_pins + 1;\n        uart_pins[1] = *uart_pins;\n        uart_pins[2] = uart_pins[0x12];\n        uart_pins[3] = uart_pins[0x13];\n        uart_pins[4] = uart_pins[0x14];\n        uart_pins[5] = uart_pins[0x15];\n        uart_pins[6] = 0xc;\n        uart_pins[7] = 0;\n        uart_pins[8] = 0;\n        initialize_param_data(uart_pins + 1);\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_and_configure_uart_pins_08004f4c",
            "entrypoint": "0x08004f4c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004f4c": "initialize_and_configure_uart_pins_08004f4c",
                "compare_and_return_first_non_zero_08004d06": "compare_and_return_first_non_zero",
                "find_index_with_value_or_zero_08004c78": "find_index_with_value_or_zero",
                "get_value_by_index_08004cce": "get_value_by_index",
                "iVar1": "index1",
                "iVar2": "index2",
                "initialize_param_data_0800441a": "initialize_param_data",
                "local_14": "data",
                "local_18": "shifted_value",
                "local_1c": "uart_pin_config",
                "local_20": "pin_mask",
                "param_1": "uart_pins",
                "process_input_data_080068f0": "process_input_data",
                "set_memory_permissions_08004884": "set_memory_permissions",
                "uVar3": "permission1",
                "uVar4": "value",
                "update_flags_and_registers_08002624": "update_flags_and_registers"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005384": {
            "additional_data": {
                "DAT_08007604": {
                    "data_array2": 2,
                    "data_array_2": 3,
                    "default_value": 1
                },
                "DAT_0800764c": {
                    "data_array1": 2,
                    "data_array_1": 3
                },
                "DAT_20000088": {
                    "config_data": 1,
                    "uart_pins": 3
                },
                "DAT_200000d0": {
                    "constant1": 1,
                    "constant2": 3,
                    "constant_9440": 1,
                    "constant_value": 1,
                    "initial_value_1": 1,
                    "uart_baud_rate": 1
                },
                "DAT_200000d4": {
                    "constant3": 1,
                    "constant4": 3,
                    "default_value2": 1,
                    "initial_value_3": 1,
                    "uart_stop_bits": 1
                },
                "DAT_200000d8": {
                    "constant4": 1,
                    "constant5": 3,
                    "default_value3": 1,
                    "initial_value_4": 1,
                    "uart_parity": 1
                },
                "DAT_200000dc": {
                    "constant2": 1,
                    "constant3": 3,
                    "default_value": 1,
                    "initial_value_2": 1,
                    "uart_data_bits": 1
                },
                "DAT_200000e0": {
                    "constant": 3,
                    "constant_2": 1,
                    "constant_value": 1,
                    "data_value": 1,
                    "default": 1,
                    "default_value": 1
                },
                "DAT_200000e1": {
                    "configured_value": 1,
                    "found_value": 1,
                    "value": 5
                },
                "FUN_08005384": {
                    "configure_uart_pins": 1,
                    "initialize_and_configure_uart": 1,
                    "initialize_serial_communication": 1,
                    "initialize_uart": 15,
                    "initialize_uart_configuration": 7,
                    "initialize_uart_pins": 6
                },
                "find_index_with_value_or_zero_08004c78": {
                    "find_index_with_value_or_zero": 10
                },
                "find_value_or_default_08004ca2": {
                    "find_value_or_default": 10
                },
                "iVar1": {
                    "index": 20,
                    "index1": 7,
                    "index_with_value": 2,
                    "index_with_value1": 1
                },
                "initialize_and_configure_uart_pins_08004f4c": {
                    "initialize_and_configure_uart_pins": 7,
                    "initialize_uart_pins": 3
                },
                "uVar2": {
                    "index2": 7,
                    "index_value": 1,
                    "index_with_value": 2,
                    "index_with_value2": 2,
                    "index_with_value_or_zero": 1,
                    "second_index": 3,
                    "value_index": 14
                }
            },
            "called": [
                "FUN_08004ca2",
                "FUN_08004c78",
                "FUN_08004f4c"
            ],
            "calling": [
                "FUN_080053d4"
            ],
            "code": "\nvoid initialize_uart_configuration_08005384(void)\n\n{\n  int index;\n  undefined4 value_index;\n  \n  index = find_index_with_value_or_zero(2,&DAT_0800764c);\n  if (index != 0) {\n    value_index = find_index_with_value_or_zero(2,&DAT_0800764c);\n    DAT_200000e1 = find_value_or_default(value_index,&DAT_08007604);\n    DAT_200000e0 = 2;\n    DAT_200000d0 = 0x2580;\n    DAT_200000dc = 0;\n    DAT_200000d4 = 0;\n    DAT_200000d8 = 0;\n    initialize_and_configure_uart_pins(&DAT_20000088);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_uart_configuration_08005384",
            "entrypoint": "0x08005384",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005384": "initialize_uart_configuration_08005384",
                "find_index_with_value_or_zero_08004c78": "find_index_with_value_or_zero",
                "find_value_or_default_08004ca2": "find_value_or_default",
                "iVar1": "index",
                "initialize_and_configure_uart_pins_08004f4c": "initialize_and_configure_uart_pins",
                "uVar2": "value_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080053d4": {
            "additional_data": {
                "DAT_0800764c": {
                    "data_array": 1
                },
                "DAT_200000cc": {
                    "data_value_2": 1,
                    "data_value_3": 1,
                    "uart_config": 1
                },
                "DAT_2000032c": {
                    "array_1": 1,
                    "data_array_2": 1
                },
                "FUN_080053d4": {
                    "process_and_validate_data": 1,
                    "process_data": 29,
                    "validate_and_process_data": 1
                },
                "find_index_with_value_or_zero_08004c78": {
                    "find_index_with_value_or_zero": 2
                },
                "get_data_value_08001cc4": {
                    "get_data_value": 2
                },
                "iVar1": {
                    "data_value": 4,
                    "data_value1": 8,
                    "data_value_1": 10,
                    "initial_data_value": 7,
                    "initial_value": 1,
                    "previous_value": 1
                },
                "iVar2": {
                    "data_value_2": 2,
                    "found_index": 1,
                    "index": 12,
                    "index_value": 12,
                    "index_with_val_or_zero": 1,
                    "index_with_value": 3
                },
                "initialize_uart_configuration_08005384": {
                    "initialize_uart": 2,
                    "initialize_uart_configuration": 6
                },
                "param_1": {
                    "config": 1,
                    "config_param": 1,
                    "config_value": 3,
                    "data": 3,
                    "data_param": 2,
                    "data_value": 2,
                    "input_1": 1,
                    "input_data": 1,
                    "input_param": 4,
                    "input_size": 1,
                    "input_value": 3,
                    "param": 1,
                    "status": 1,
                    "undefined_param": 1,
                    "value": 1,
                    "value1": 1,
                    "value_1": 3,
                    "value_to_process": 1
                },
                "param_2": {
                    "data": 2,
                    "data_param": 1,
                    "data_value": 2,
                    "flag": 1,
                    "flags": 1,
                    "input": 1,
                    "input_2": 1,
                    "input_data": 2,
                    "input_param": 2,
                    "input_value": 4,
                    "output_param": 2,
                    "value": 6,
                    "value2": 1,
                    "value_2": 3,
                    "value_param": 2
                },
                "uVar3": {
                    "counter": 15,
                    "data_index": 1,
                    "index": 3,
                    "iteration": 1,
                    "loop_counter": 8,
                    "loop_index": 1,
                    "loop_var": 1,
                    "u_index": 1
                },
                "validate_and_process_data_08004478": {
                    "validate_and_process": 1,
                    "validate_and_process_data": 6,
                    "validate_process_data": 1
                }
            },
            "called": [
                "FUN_08005384",
                "FUN_08004c78",
                "FUN_08001cc4",
                "FUN_08004478"
            ],
            "calling": [
                "FUN_08005730"
            ],
            "code": "\nuint process_and_validate_data_080053d4(undefined4 input_param,uint value)\n\n{\n  int data_value_1;\n  int index;\n  uint counter;\n  \n  data_value_1 = get_data_value();\n  index = find_index_with_value_or_zero(2,&DAT_0800764c);\n  if (index == 0) {\n    return 0;\n  }\n  for (counter = 0;\n      (counter < 5 &&\n      (((&DAT_2000032c)[counter] == 0 ||\n       (index = find_index_with_value_or_zero(2,&DAT_0800764c), *(int *)(&DAT_2000032c)[counter] != index))));\n      counter = counter + 1 & 0xff) {\n  }\n  if (4 < counter) {\n    if ((4 < DAT_200000cc) && (initialize_uart_configuration(), 4 < DAT_200000cc)) {\n      return 0;\n    }\n    counter = (uint)DAT_200000cc;\n  }\n  do {\n    index = validate_and_process_data((&DAT_2000032c)[counter],input_param,value & 0xffff,1000);\n    if (index == 0) {\n      return value;\n    }\n    index = get_data_value();\n  } while ((uint)(index - data_value_1) < 1000);\n  return 0;\n}\n\n",
            "current_name": "process_and_validate_data_080053d4",
            "entrypoint": "0x080053d4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080053d4": "process_and_validate_data_080053d4",
                "find_index_with_value_or_zero_08004c78": "find_index_with_value_or_zero",
                "get_data_value_08001cc4": "get_data_value",
                "iVar1": "data_value_1",
                "iVar2": "index",
                "initialize_uart_configuration_08005384": "initialize_uart_configuration",
                "param_1": "input_param",
                "param_2": "value",
                "uVar3": "counter",
                "validate_and_process_data_08004478": "validate_and_process_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800548c": {
            "additional_data": {
                "0x22": {
                    "comparison_value": 1,
                    "flag": 1
                },
                "0x44": {
                    "offset": 2
                },
                "DAT_2000032c": {
                    "data": 1
                },
                "FUN_0800548c": {
                    "check_bit_pattern": 1,
                    "check_byte_combination": 1,
                    "check_combination": 9,
                    "check_combination_valid": 1,
                    "check_combined_bytes": 1,
                    "check_condition": 1,
                    "check_feature_flag": 1,
                    "check_flag_condition": 1,
                    "is_bit_pattern_valid": 1,
                    "is_byte_set": 1,
                    "is_combination_22": 1,
                    "is_combination_high": 1,
                    "is_combination_valid": 5,
                    "is_combined_bytes_equal": 2,
                    "is_condition_met": 1,
                    "is_desired_value_set": 1,
                    "is_flag_set": 1,
                    "is_valid_combination": 1
                },
                "byte": {
                    "byte_value": 2,
                    "index": 2
                },
                "byte_1": {
                    "byte_value": 1
                },
                "combine_bytes_080047e8": {
                    "combine_bytes": 4
                },
                "param_1": {
                    "byte_array": 1,
                    "byte_index": 1,
                    "flag_value": 2,
                    "input": 3,
                    "input_value": 21,
                    "value": 3
                },
                "uVar1": {
                    "combined_bytes": 24,
                    "combined_bytes_value": 1,
                    "combined_result": 1,
                    "combined_value": 3
                }
            },
            "called": [
                "FUN_080047e8"
            ],
            "calling": [
                "FUN_080054d4",
                "FUN_08005510"
            ],
            "code": "\nbool check_byte_combination_0800548c(int input_value)\n\n{\n  uint combined_bytes;\n  \n  combined_bytes = combine_bytes((&DAT_2000032c)[*(byte_value *)(input_value + 0x44)]);\n  return (combined_bytes & 0x22) == 0x22;\n}\n\n",
            "current_name": "check_byte_combination_0800548c",
            "entrypoint": "0x0800548c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800548c": "check_byte_combination_0800548c",
                "byte": "byte_value",
                "combine_bytes_080047e8": "combine_bytes",
                "param_1": "input_value",
                "uVar1": "combined_bytes"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080054b0": {
            "additional_data": {
                "0x21": {
                    "bit_mask": 1,
                    "checking_value": 1,
                    "comparison_constant": 1,
                    "expected_result": 1,
                    "expected_value": 1,
                    "flag_check": 1,
                    "magic_constant": 1
                },
                "0x44": {
                    "offset": 3
                },
                "DAT_2000032c": {
                    "byte_array": 1,
                    "constant_data": 1,
                    "data": 1,
                    "data_arr": 1,
                    "data_array": 2
                },
                "FUN_080054b0": {
                    "check_bit_pattern": 1,
                    "check_byte_combination_a": 1,
                    "check_combination": 3,
                    "check_condition": 1,
                    "check_flag": 1,
                    "check_flag_combination": 1,
                    "is_bit_activated": 1,
                    "is_combination_valid": 13,
                    "is_condition_met": 1,
                    "is_flag_set": 5,
                    "is_magic_value_present": 1,
                    "is_value_combination_valid": 1
                },
                "byte": {
                    "byte_value": 2,
                    "index": 2,
                    "input_byte": 1
                },
                "byte_44": {
                    "offset": 1
                },
                "combine_bytes_080047e8": {
                    "combine_bytes": 7
                },
                "combined_bytes_080047e8": {
                    "combine_bytes": 1
                },
                "param_1": {
                    "flag": 3,
                    "flag_index": 1,
                    "flag_offset": 1,
                    "flag_value": 1,
                    "input": 3,
                    "input_byte": 1,
                    "input_param": 1,
                    "input_parameter": 2,
                    "input_value": 17,
                    "value": 1
                },
                "uVar1": {
                    "byte_combination": 1,
                    "combined_byte": 1,
                    "combined_bytes": 24,
                    "combined_result": 1,
                    "combined_value": 3
                }
            },
            "called": [
                "FUN_080047e8"
            ],
            "calling": [],
            "code": "\nbool is_value_combination_valid_080054b0(int input_value)\n\n{\n  uint combined_bytes;\n  \n  combined_bytes = combine_bytes((&DAT_2000032c)[*(byte_value *)(input_value + 0x44)]);\n  return (combined_bytes & 0x21) == 0x21;\n}\n\n",
            "current_name": "is_value_combination_valid_080054b0",
            "entrypoint": "0x080054b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080054b0": "is_value_combination_valid_080054b0",
                "byte": "byte_value",
                "combine_bytes_080047e8": "combine_bytes",
                "param_1": "input_value",
                "uVar1": "combined_bytes"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080054d4": {
            "additional_data": {
                "DAT_2000032c": {
                    "byte_combinations": 1,
                    "constant_data": 1,
                    "data_pointer": 1
                },
                "FUN_080054d4": {
                    "copy_byte_and_validate_input": 1,
                    "decode_and_validate_input": 1,
                    "extract_and_validate_byte": 1,
                    "extract_and_validate_byte_combination": 1,
                    "extract_byte": 1,
                    "extract_byte_and_validate": 1,
                    "extract_byte_and_validate_input": 1,
                    "extract_byte_from_binary": 2,
                    "extract_byte_from_combination": 2,
                    "extract_byte_from_input": 3,
                    "extract_user_data": 1,
                    "extract_user_input": 6,
                    "get_user_input": 1,
                    "process_user_input": 9
                },
                "NULL": {
                    "0xffffffff": 1
                },
                "check_byte_combination_0800548c": {
                    "byte_combination_check": 1,
                    "check_byte_combination": 5,
                    "is_valid_combination": 1
                },
                "iVar1": {
                    "byte_check_result": 3,
                    "byte_combination_check": 6,
                    "byte_combination_check_result": 5,
                    "byte_combination_result": 7,
                    "byte_combination_success": 1,
                    "byte_exists": 1,
                    "check_result": 1,
                    "combination_check": 3,
                    "combination_check_result": 1,
                    "result": 1
                },
                "param_1": {
                    "binary_offset": 1,
                    "binary_ptr": 1,
                    "combination_address": 1,
                    "data_ptr": 1,
                    "input": 2,
                    "input_address": 3,
                    "input_data": 2,
                    "input_length": 6,
                    "input_pointer": 1,
                    "input_ptr": 4,
                    "input_size": 7,
                    "input_value": 1,
                    "source_address": 1
                },
                "param_2": {
                    "byte": 1,
                    "dest_address": 1,
                    "extracted_byte": 2,
                    "output": 7,
                    "output_buffer": 9,
                    "output_byte": 1,
                    "output_data": 1,
                    "output_pointer": 2,
                    "output_ptr": 4,
                    "result": 1,
                    "result_ptr": 1,
                    "user_input_ptr": 1
                },
                "param_3": {
                    "arg1": 2,
                    "argument_1": 1,
                    "buffer_size": 1,
                    "byte_length": 1,
                    "constant_param": 1,
                    "data_length": 1,
                    "flag_1": 1,
                    "input_size": 1,
                    "length": 4,
                    "length_limit": 1,
                    "option1": 1,
                    "param3": 4,
                    "param_3": 2,
                    "param_a": 1,
                    "parameter1": 1,
                    "parameter3": 1,
                    "parameter_3": 1,
                    "size_1": 1,
                    "temp_var_1": 1,
                    "unused_param": 1,
                    "validation_flag": 1,
                    "validation_result": 1,
                    "var1": 1
                },
                "param_4": {
                    "additional_info": 1,
                    "additional_param": 1,
                    "arg2": 2,
                    "argument_2": 1,
                    "context": 1,
                    "flag_2": 1,
                    "option2": 1,
                    "param4": 4,
                    "param_4": 3,
                    "param_b": 1,
                    "parameter2": 1,
                    "parameter4": 1,
                    "parameter_4": 1,
                    "result": 1,
                    "size_2": 1,
                    "temp_var_2": 1,
                    "user_data": 1,
                    "user_input": 1,
                    "user_param": 1,
                    "validation": 1,
                    "validation_code": 1,
                    "validation_flag": 1,
                    "validation_param": 1,
                    "validation_value": 1,
                    "var2": 1
                },
                "validate_user_input_080045a2": {
                    "validate_and_process_input": 1,
                    "validate_input": 3,
                    "validate_user_input": 6
                }
            },
            "called": [
                "FUN_0800548c",
                "FUN_080045a2"
            ],
            "calling": [
                "FUN_0800598a"
            ],
            "code": "\nundefined4 process_user_input_080054d4(int input_size,undefined *output_buffer,undefined4 length,undefined4 param4)\n\n{\n  int byte_combination_result;\n  \n  if (input_size == 0) {\n    return 0xffffffff;\n  }\n  byte_combination_result = check_byte_combination();\n  if (byte_combination_result == 0) {\n    *output_buffer = *(undefined *)(input_size + 0x45);\n    validate_user_input((&DAT_2000032c)[*(byte *)(input_size + 0x44)],input_size + 0x45,1,&DAT_2000032c,param4);\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "process_user_input_080054d4",
            "entrypoint": "0x080054d4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080054d4": "process_user_input_080054d4",
                "check_byte_combination_0800548c": "check_byte_combination",
                "iVar1": "byte_combination_result",
                "param_1": "input_size",
                "param_2": "output_buffer",
                "param_3": "length",
                "param_4": "param4",
                "validate_user_input_080045a2": "validate_user_input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005510": {
            "additional_data": {
                "DAT_200002dc": {
                    "value_arr": 1
                },
                "DAT_200002f0": {
                    "index_arr": 1
                },
                "FUN_08005510": {
                    "assign_parameter_value": 1,
                    "handle_input": 1,
                    "handle_user_input": 1,
                    "process_params": 1,
                    "process_user_input": 10,
                    "store_char_value": 1,
                    "store_data_and_update_values": 1,
                    "store_user_input": 2,
                    "update_byte_combination": 6,
                    "update_data": 2,
                    "update_user_data": 3,
                    "update_user_information": 2
                },
                "iVar1": {
                    "byte_check_result": 5,
                    "byte_combination_check": 3,
                    "byte_combination_check_result": 3,
                    "byte_combination_result": 3,
                    "check_result": 4,
                    "combination_check_result": 3,
                    "combination_result": 1,
                    "is_valid": 1,
                    "result": 8
                },
                "param_1": {
                    "byte_combination": 2,
                    "data": 1,
                    "data_pointer": 2,
                    "input": 3,
                    "input_address": 2,
                    "input_data": 2,
                    "input_pointer": 2,
                    "input_ptr": 1,
                    "param": 1,
                    "parameter1": 1,
                    "user_data": 2,
                    "user_data_address": 1,
                    "user_information": 1,
                    "user_input": 8,
                    "user_input_ptr": 1,
                    "user_pointer": 1
                },
                "param_2": {
                    "data1": 2,
                    "data_ptr": 1,
                    "new_data": 1,
                    "new_param1": 1,
                    "new_user_information": 1,
                    "new_value": 13,
                    "parameter2": 1,
                    "value": 8,
                    "value1": 3
                },
                "param_3": {
                    "address": 1,
                    "data2": 2,
                    "new_param2": 1,
                    "parameter3": 1,
                    "temp_param": 1,
                    "unknown": 1,
                    "unused": 8,
                    "unused1": 2,
                    "unused_param": 5,
                    "unused_param_3": 1,
                    "unused_parameter": 1,
                    "unused_parameter1": 1,
                    "unused_ptr": 1,
                    "value2": 3
                },
                "param_4": {
                    "additional_param": 1,
                    "another_value": 1,
                    "callback_param": 1,
                    "char_value": 1,
                    "context": 1,
                    "data3": 2,
                    "flag": 4,
                    "flag_ptr": 1,
                    "index": 1,
                    "new_param3": 1,
                    "parameter4": 1,
                    "status": 1,
                    "unused2": 2,
                    "unused_parameter2": 1,
                    "update_flag": 5,
                    "user_context": 1,
                    "user_data": 1,
                    "user_input": 1,
                    "user_value": 1,
                    "value3": 3
                },
                "set_bit_in_array_080024f8": {
                    "set_bit_in_array": 7
                },
                "uVar2": {
                    "byte_index": 20,
                    "combination_index": 1,
                    "index": 8,
                    "input_index": 1,
                    "offset": 1
                },
                "update_char_value_08002494": {
                    "update_char_value": 7
                },
                "validate_user_input_080045a2": {
                    "validate_input": 2,
                    "validate_user_input": 5
                }
            },
            "called": [
                "FUN_080024f8",
                "FUN_0800548c",
                "FUN_08002494",
                "FUN_080045a2"
            ],
            "calling": [
                "FUN_08005a68"
            ],
            "code": "\nvoid process_user_input_08005510(int user_input,undefined4 new_value,undefined4 unused,undefined4 update_flag)\n\n{\n  int result;\n  uint byte_index;\n  \n  if (user_input != 0) {\n    result = check_byte_combination_0800548c();\n    if (result == 0) {\n      byte_index = (uint)*(byte *)(user_input + 0x44);\n      *(undefined4 *)(&DAT_200002dc + byte_index * 4) = new_value;\n      *(int *)(&DAT_200002f0 + byte_index * 4) = user_input;\n      update_char_value((int)*(char *)(user_input + 0x5a),0,1,byte_index,update_flag);\n      set_bit_in_array((int)*(char *)(user_input + 0x5a));\n      validate_user_input((&DAT_2000032c)[*(byte *)(user_input + 0x44)],user_input + 0x45,1);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "process_user_input_08005510",
            "entrypoint": "0x08005510",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005510": "process_user_input_08005510",
                "iVar1": "result",
                "param_1": "user_input",
                "param_2": "new_value",
                "param_3": "unused",
                "param_4": "update_flag",
                "set_bit_in_array_080024f8": "set_bit_in_array",
                "uVar2": "byte_index",
                "update_char_value_08002494": "update_char_value",
                "validate_user_input_080045a2": "validate_user_input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005568": {
            "additional_data": {
                "DAT_20000304": {
                    "character_values": 1
                },
                "DAT_20000318": {
                    "character_data": 1
                },
                "DAT_2000032c": {
                    "input_validation_data": 1
                },
                "FUN_08005568": {
                    "update_char_data": 1,
                    "update_char_value": 2,
                    "update_char_value_and_bits": 1,
                    "update_char_value_and_validate_input": 4,
                    "update_char_value_from_array": 1,
                    "update_char_values": 1,
                    "update_character": 2,
                    "update_character_data": 7,
                    "update_character_info": 6,
                    "update_character_information": 1,
                    "update_character_value": 1,
                    "update_data": 2,
                    "update_param_info": 1,
                    "update_param_values": 1
                },
                "bVar1": {
                    "b_var1": 1,
                    "byte_value": 12,
                    "char_index": 1,
                    "char_value": 1,
                    "character_index": 9,
                    "index": 7
                },
                "param_1": {
                    "char_data_ptr": 1,
                    "character": 3,
                    "character_address": 2,
                    "character_data": 6,
                    "character_data_address": 1,
                    "character_data_ptr": 1,
                    "character_info": 1,
                    "character_info_pointer": 1,
                    "character_info_ptr": 1,
                    "character_offset": 1,
                    "character_pointer": 2,
                    "character_ptr": 1,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "input": 1,
                    "input_data": 1,
                    "input_pointer": 1,
                    "input_value": 1,
                    "param": 2,
                    "param_ptr": 1
                },
                "param_2": {
                    "new_data": 2,
                    "new_param": 1,
                    "new_parameter_value": 1,
                    "new_value": 20,
                    "param_value": 1,
                    "value": 6
                },
                "set_bit_in_array_080024f8": {
                    "set_bit_in_array": 13
                },
                "update_char_value_08002494": {
                    "update_char_value": 4,
                    "update_character_value": 9
                },
                "validate_input_0800455a": {
                    "validate_input": 13
                }
            },
            "called": [
                "FUN_0800455a",
                "FUN_080024f8",
                "FUN_08002494"
            ],
            "calling": [],
            "code": "\nvoid update_character_data_08005568(int character_data,undefined4 new_value)\n\n{\n  byte byte_value;\n  \n  if (character_data != 0) {\n    byte_value = *(byte *)(character_data + 0x44);\n    *(undefined4 *)(&DAT_20000304 + (uint)byte_value * 4) = new_value;\n    *(int *)(&DAT_20000318 + (uint)byte_value * 4) = character_data;\n    update_character_value((int)*(char *)(character_data + 0x5a),0,2);\n    set_bit_in_array((int)*(char *)(character_data + 0x5a));\n    validate_input((&DAT_2000032c)[*(byte *)(character_data + 0x44)],\n                 *(int *)(character_data + 100) + (uint)*(ushort *)(character_data + 0x6a),1);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "update_character_data_08005568",
            "entrypoint": "0x08005568",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005568": "update_character_data_08005568",
                "bVar1": "byte_value",
                "param_1": "character_data",
                "param_2": "new_value",
                "set_bit_in_array_080024f8": "set_bit_in_array",
                "update_char_value_08002494": "update_character_value",
                "validate_input_0800455a": "validate_input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080055bc": {
            "additional_data": {
                "FUN_080055bc": {
                    "check_if_value_exists": 1,
                    "find_index": 7,
                    "find_integer_index": 1,
                    "find_matching_index": 1,
                    "find_number_index": 1,
                    "find_parameter_index": 1,
                    "find_value": 1,
                    "find_value_in_array": 1,
                    "find_value_index": 15,
                    "find_value_position": 1,
                    "lookup_value": 1
                },
                "param_1": {
                    "input_array": 1,
                    "input_value": 2,
                    "integer_to_find": 1,
                    "number": 2,
                    "value": 25
                },
                "uVar1": {
                    "index": 30,
                    "position": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005604",
                "FUN_080055e0"
            ],
            "code": "\nuint find_value_index_080055bc(int value)\n\n{\n  uint index;\n  \n  if (value == 0) {\n    index = 5;\n  }\n  else {\n    index = 0;\n    while( true ) {\n      if (4 < index) {\n        return index;\n      }\n      if (value == (&DAT_2000032c)[index]) break;\n      index = index + 1 & 0xff;\n    }\n  }\n  return index;\n}\n\n",
            "current_name": "find_value_index_080055bc",
            "entrypoint": "0x080055bc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080055bc": "find_value_index_080055bc",
                "param_1": "value",
                "uVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080055e0": {
            "additional_data": {
                "DAT_200002dc": {
                    "": 1,
                    "function_pointer_array": 1,
                    "function_pointer_table": 2,
                    "function_pointers": 1,
                    "function_table": 2,
                    "function_table_start": 1,
                    "functions_ptr": 1
                },
                "DAT_200002f0": {
                    "": 1,
                    "argument_table": 2,
                    "parameter_array": 1,
                    "parameter_table": 2,
                    "parameter_table_start": 1,
                    "parameters": 1,
                    "values_ptr": 1
                },
                "FUN_080055e0": {
                    "execute_callback": 1,
                    "execute_command": 1,
                    "execute_found_value_function": 1,
                    "execute_function": 11,
                    "execute_function_based_on_value": 1,
                    "execute_function_from_index": 1,
                    "execute_function_from_value_index": 1,
                    "execute_next_function": 1,
                    "execute_operation": 1,
                    "execute_selected_action": 1,
                    "execute_selected_function": 6,
                    "execute_selected_operation": 1,
                    "execute_selected_value": 1,
                    "execute_specific_function": 1,
                    "execute_value_function": 1,
                    "process_value": 1
                },
                "code": {
                    "function_pointer": 3
                },
                "find_value_index_080055bc": {
                    "find_index": 1,
                    "find_value_index": 21
                },
                "uVar1": {
                    "index": 14,
                    "value_index": 17
                }
            },
            "called": [
                "FUN_080055bc"
            ],
            "calling": [
                "FUN_08004618"
            ],
            "code": "\nvoid execute_selected_function_080055e0(void)\n\n{\n  uint value_index;\n  \n  value_index = find_value_index();\n  if (value_index < 5) {\n    (**(function_pointer **)(&DAT_200002dc + value_index * 4))(*(undefined4 *)(&DAT_200002f0 + value_index * 4));\n  }\n  return;\n}\n\n",
            "current_name": "execute_selected_function_080055e0",
            "entrypoint": "0x080055e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080055e0": "execute_selected_function_080055e0",
                "code": "function_pointer",
                "find_value_index_080055bc": "find_value_index",
                "uVar1": "value_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005604": {
            "additional_data": {
                "DAT_20000304": {
                    "code_array": 2,
                    "data_address2": 1
                },
                "DAT_20000318": {
                    "data_address1": 1,
                    "data_array": 1,
                    "value_array": 1
                },
                "DAT_2000032c": {
                    "input_data_array": 1
                },
                "FUN_08005604": {
                    "execute_function": 1,
                    "execute_something": 1,
                    "find_and_validate_value": 1,
                    "handle_input": 1,
                    "process_data": 10,
                    "process_function": 1,
                    "process_input": 3,
                    "process_value": 9,
                    "process_values": 2,
                    "validate_and_execute": 2
                },
                "PTR_0800049e": {
                    "input_flag": 1
                },
                "PTR_08000720": {
                    "input_data": 1
                },
                "PTR_080007b8": {
                    "input_length": 1
                },
                "code": {
                    "function_pointer": 1
                },
                "find_value_index_080055bc": {
                    "find_index": 1,
                    "find_value_index": 19
                },
                "iVar2": {
                    "execution_result": 1,
                    "result": 26,
                    "return_value": 4
                },
                "iVar3": {
                    "address": 3,
                    "data": 10,
                    "data_address": 5,
                    "data_pointer": 2,
                    "value": 7,
                    "value_ptr": 4
                },
                "uVar1": {
                    "index": 10,
                    "value_index": 21
                },
                "validate_input_0800455a": {
                    "validate_input": 20
                }
            },
            "called": [
                "FUN_0800455a",
                "FUN_080055bc"
            ],
            "calling": [
                "FUN_080045fe"
            ],
            "code": "\nvoid process_data_08005604(void)\n\n{\n  uint value_index;\n  int result;\n  int data;\n  \n  value_index = find_value_index();\n  data = *(int *)(&DAT_20000318 + value_index * 4);\n  if ((value_index < 5) && (result = (**(function_pointer **)(&DAT_20000304 + value_index * 4))(data), result != -1)) {\n    validate_input((&DAT_2000032c)[*(byte *)(data + 0x44)],\n                 *(int *)(data + 100) + (uint)*(ushort *)(data + 0x6a),1);\n  }\n  return;\n}\n\n",
            "current_name": "process_data_08005604",
            "entrypoint": "0x08005604",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005604": "process_data_08005604",
                "code": "function_pointer",
                "find_value_index_080055bc": "find_value_index",
                "iVar2": "result",
                "iVar3": "data",
                "uVar1": "value_index",
                "validate_input_0800455a": "validate_input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005650": {
            "called": [],
            "calling": [
                "FUN_080046b8"
            ],
            "code": "\nvoid FUNC_08005650(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08005650",
            "entrypoint": "0x08005650",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08005650": "FUNC_08005650"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080056d8": {
            "additional_data": {
                "DAT_20000340": {
                    "current_block": 1,
                    "current_location": 1,
                    "current_memory": 3,
                    "current_memory_pointer": 2,
                    "current_memory_ptr": 2,
                    "current_pointer": 3,
                    "current_position": 2,
                    "global_memory": 2,
                    "global_memory_pointer": 1,
                    "initial_alloc_ptr": 1,
                    "stack_base": 1
                },
                "DAT_200006a4": {
                    "allocation_error_code": 1,
                    "error_code": 15,
                    "error_flag": 2
                },
                "DAT_200006a8": {
                    "default_alloc_ptr": 1,
                    "default_memory": 1,
                    "default_memory_pointer": 2,
                    "initial_block": 1,
                    "initial_location": 1,
                    "initial_memory": 1,
                    "initial_memory_location": 1,
                    "initial_memory_ptr": 1,
                    "initial_pointer": 2,
                    "initial_stack_ptr": 1,
                    "stack_end_pointer": 1,
                    "stack_start": 1,
                    "start_address": 1,
                    "start_of_stack": 1
                },
                "FUN_080056d8": {
                    "allocate_memory": 26,
                    "allocate_memory_block": 1,
                    "get_free_memory": 1,
                    "get_memory_block": 1,
                    "get_next_available_stack_space": 1,
                    "reserve_memory": 1
                },
                "param_1": {
                    "num_bytes": 1,
                    "requested_bytes": 1,
                    "requested_size": 1,
                    "size": 28
                },
                "puVar1": {
                    "allocated_memory": 22,
                    "allocated_ptr": 1,
                    "current_pointer": 1,
                    "memory_block": 2,
                    "next_available_space": 1,
                    "ptr": 2,
                    "reserved_memory": 1,
                    "start_address": 1
                },
                "stack0x00000000": {
                    "stack_base": 1,
                    "stack_bottom": 2,
                    "stack_end": 4,
                    "stack_limit": 4,
                    "stack_pointer": 2,
                    "stack_top": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08006920"
            ],
            "code": "\nundefined * allocate_memory_block_080056d8(int size)\n\n{\n  undefined *allocated_memory;\n  \n  if (DAT_20000340 == (undefined *)0x0) {\n    DAT_20000340 = &DAT_200006a8;\n  }\n  allocated_memory = DAT_20000340;\n  if (DAT_20000340 + size <= &stack_limit) {\n    DAT_20000340 = DAT_20000340 + size;\n    return allocated_memory;\n  }\n  DAT_200006a4 = 0xc;\n  return (undefined *)0xffffffff;\n}\n\n",
            "current_name": "allocate_memory_block_080056d8",
            "entrypoint": "0x080056d8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080056d8": "allocate_memory_block_080056d8",
                "param_1": "size",
                "puVar1": "allocated_memory",
                "stack0x00000000": "stack_limit"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005714": {
            "additional_data": {
                "": {
                    "": 1
                },
                "0xffffffff": {
                    "error_code": 1,
                    "maximum_value": 1
                },
                "DAT_": {
                    "dat_": 1
                },
                "FUN_08005714": {
                    "clear_error": 1,
                    "get_default_value": 6,
                    "get_error_code": 11,
                    "get_maximum_value": 1,
                    "get_negative_one": 1,
                    "get_return_value": 6,
                    "initialize_error_code": 1,
                    "initialize_return_value": 3
                },
                "PTR_": {
                    "ptr_": 1
                },
                "PTR_XXXX": {
                    "ptr_xxx": 1
                },
                "PTR_YYYY": {
                    "ptr_yyy": 1
                },
                "return": {
                    "default_value": 1
                },
                "undefined4": {
                    "err_code": 1,
                    "error_code": 1,
                    "int": 1,
                    "uint32": 2,
                    "uint32_t": 3,
                    "unsigned_int": 1,
                    "unsigned_integer": 1
                }
            },
            "called": [],
            "calling": [],
            "code": "\nuint32_t get_error_code_08005714(void)\n\n{\n  default_value 0xffffffff;\n}\n\n",
            "current_name": "get_error_code_08005714",
            "entrypoint": "0x08005714",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005714": "get_error_code_08005714",
                "return": "default_value",
                "undefined4": "uint32_t"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800571a": {
            "additional_data": {
                "0x2000": {
                    "allocation_size": 1,
                    "new_permissions": 1,
                    "permission": 1,
                    "value": 1
                },
                "FUN_0800571a": {
                    "initialize_memory": 7,
                    "initialize_memory_allocation": 2,
                    "initialize_memory_attributes": 1,
                    "initialize_memory_section": 2,
                    "set_memory_address": 2,
                    "set_memory_flag": 2,
                    "set_memory_flags": 2,
                    "set_memory_page_size": 4,
                    "set_memory_permission": 1,
                    "set_memory_permissions": 1,
                    "set_memory_size": 2,
                    "set_memory_value": 1,
                    "set_page_size": 3,
                    "set_permission": 1
                },
                "offset": {
                    "new_offset": 1
                },
                "param_1": {
                    "address": 1,
                    "arg1": 1,
                    "arg_1": 1,
                    "flags": 1,
                    "input": 1,
                    "memory_address": 2,
                    "param": 2,
                    "param1": 10,
                    "param_1": 3,
                    "result": 7,
                    "status": 1,
                    "value": 1
                },
                "param_2": {
                    "address": 7,
                    "arg2": 1,
                    "base_address": 2,
                    "buffer": 3,
                    "memory_address": 10,
                    "memory_address_to_initialize": 1,
                    "offset": 1,
                    "param2": 4,
                    "permissions": 1,
                    "target_address": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08007004"
            ],
            "code": "\nundefined4 set_memory_page_size_0800571a(undefined4 param1,int memory_address)\n\n{\n  *(undefined4 *)(memory_address + 4) = 0x2000;\n  return 0;\n}\n\n",
            "current_name": "set_memory_page_size_0800571a",
            "entrypoint": "0x0800571a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800571a": "set_memory_page_size_0800571a",
                "param_1": "param1",
                "param_2": "memory_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005724": {
            "additional_data": {
                "FUN_08005724": {
                    "calculate_return_value": 1,
                    "get_default_value": 1,
                    "get_one": 1,
                    "get_return_value": 8,
                    "initialize": 10,
                    "initialize_application": 3,
                    "initialize_flag": 3,
                    "initialize_game": 1,
                    "initialize_result": 1,
                    "initialize_value": 1,
                    "return_one": 1
                },
                "FUN_08005724_FUN_08005724": {
                    "result": 1
                },
                "PTR_FUN_08005724": {
                    "initialized": 1
                },
                "Undefined4": {
                    "int": 1
                },
                "return": {
                    "result": 2,
                    "status": 3
                },
                "undefined4": {
                    "int": 5,
                    "status": 1,
                    "uint32_t": 2,
                    "void": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_08007028"
            ],
            "code": "\nint initialize_application_08005724(void)\n\n{\n  status 1;\n}\n\n",
            "current_name": "initialize_application_08005724",
            "entrypoint": "0x08005724",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005724": "initialize_application_08005724",
                "return": "status",
                "undefined4": "int"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005728": {
            "additional_data": {
                "DAT_08005728": {
                    "return_value": 1
                },
                "DAT_0800572c": {
                    "initialized_value": 1
                },
                "FUN_08005728": {
                    "clear_data": 1,
                    "clear_memory": 1,
                    "exit_program": 1,
                    "get_default_value": 2,
                    "get_result": 1,
                    "get_return_value": 1,
                    "get_zero": 1,
                    "get_zero_value": 2,
                    "initialize": 12,
                    "initialize_application": 3,
                    "initialize_function": 4,
                    "initialize_program": 1,
                    "initialize_system": 1
                },
                "PTR_FUN_08005728": {
                    "result": 1
                },
                "Undefined4": {
                    "result_type": 1
                },
                "result": {
                    "status": 1
                },
                "return": {
                    "status": 1
                },
                "return_value": {
                    "result": 1
                },
                "undefined4": {
                    "int": 2,
                    "uint32_t": 3,
                    "void": 8
                }
            },
            "called": [],
            "calling": [
                "FUN_08007048"
            ],
            "code": "\nvoid initialize_function_08005728(void)\n\n{\n  status 0;\n}\n\n",
            "current_name": "initialize_function_08005728",
            "entrypoint": "0x08005728",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005728": "initialize_function_08005728",
                "return": "status",
                "undefined4": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800572c": {
            "additional_data": {
                "DAT_": {
                    "": 2
                },
                "FUN_0800572c": {
                    "calculate_return_value": 1,
                    "clear_function": 1,
                    "clear_memory": 1,
                    "clear_screen": 1,
                    "get_default_value": 1,
                    "get_result": 1,
                    "get_zero": 2,
                    "get_zero_value": 2,
                    "initialize": 16,
                    "initialize_application": 2,
                    "initialize_data": 1,
                    "return_zero": 2
                },
                "PTR_": {
                    "": 2
                },
                "new_function_parameter_1": {
                    "original_parameter_1": 1
                },
                "new_function_parameter_2": {
                    "original_parameter_2": 1
                },
                "new_variable_1": {
                    "original_variable_1": 1
                },
                "new_variable_2": {
                    "original_variable_2": 1
                },
                "return": {
                    "result": 1
                },
                "undefined4": {
                    "int": 4,
                    "status": 1,
                    "uint32_t": 1,
                    "void": 10
                }
            },
            "called": [],
            "calling": [
                "FUN_0800706c"
            ],
            "code": "\nvoid initialize_application_0800572c(void)\n\n{\n  result 0;\n}\n\n",
            "current_name": "initialize_application_0800572c",
            "entrypoint": "0x0800572c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800572c": "initialize_application_0800572c",
                "return": "result",
                "undefined4": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005730": {
            "additional_data": {
                "FUN_08005730": {
                    "process_and_validate_data": 28,
                    "process_data": 1,
                    "process_data_and_validate": 1,
                    "validate_and_process_data": 1
                },
                "param_1": {
                    "arg1": 2,
                    "data_1": 2,
                    "input_1": 3,
                    "input_param_1": 1,
                    "param1": 3,
                    "param_1": 7,
                    "unchanged": 1,
                    "unnamed_arg_1": 1,
                    "unused": 2,
                    "unused_param": 6,
                    "unused_parameter": 3
                },
                "param_2": {
                    "arg2": 2,
                    "data_1": 2,
                    "data_2": 2,
                    "data_param": 2,
                    "data_param1": 1,
                    "data_param_1": 6,
                    "data_parameter": 1,
                    "input_2": 3,
                    "input_data": 3,
                    "input_data_1": 3,
                    "input_param": 1,
                    "input_param_1": 1,
                    "input_param_2": 1,
                    "input_parameter_1": 1,
                    "param2": 1,
                    "unnamed_arg_2": 1
                },
                "param_3": {
                    "arg3": 2,
                    "config_param": 1,
                    "data_2": 2,
                    "data_3": 2,
                    "data_param1": 1,
                    "data_param2": 1,
                    "data_param_2": 6,
                    "input_3": 3,
                    "input_data_2": 3,
                    "input_param_2": 1,
                    "input_param_3": 1,
                    "input_parameter_1": 1,
                    "input_parameter_2": 1,
                    "length_param": 1,
                    "param3": 2,
                    "unnamed_arg_3": 1,
                    "validation_param_1": 2
                },
                "param_4": {
                    "arg4": 2,
                    "data_3": 2,
                    "data_4": 2,
                    "data_param2": 1,
                    "data_param3": 1,
                    "data_param_3": 5,
                    "input_4": 3,
                    "input_data_3": 2,
                    "input_param_3": 1,
                    "input_param_4": 1,
                    "input_parameter_2": 1,
                    "input_parameter_3": 1,
                    "options_param": 1,
                    "param4": 2,
                    "param_4": 1,
                    "unnamed_arg_4": 1,
                    "unused": 1,
                    "unused_param": 1,
                    "validation_param_2": 2
                }
            },
            "called": [
                "FUN_080053d4"
            ],
            "calling": [
                "FUN_08006f5a"
            ],
            "code": "\nvoid process_data_and_validate_08005730(undefined4 param_1,undefined4 data_param_1,undefined4 data_param_2,undefined4 data_param_3)\n\n{\n  process_and_validate_data_080053d4(data_param_1,data_param_2,data_param_2,data_param_3,data_param_3);\n  return;\n}\n\n",
            "current_name": "process_data_and_validate_08005730",
            "entrypoint": "0x08005730",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005730": "process_data_and_validate_08005730",
                "param_2": "data_param_1",
                "param_3": "data_param_2",
                "param_4": "data_param_3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800573c": {
            "additional_data": {
                "DAT_": {
                    "dat_": 1
                },
                "DAT_Var1": {
                    "dat_var1": 1
                },
                "DAT_Var2": {
                    "dat_var2": 1
                },
                "FUN_0800573c": {
                    "do_nothing_loop": 2,
                    "infinite_loop": 25,
                    "loop_forever": 2,
                    "run_infinite_loop": 2
                },
                "PTR_": {
                    "ptr_": 1
                },
                "PTR_Var1": {
                    "ptr_var1": 1
                },
                "PTR_Var2": {
                    "ptr_var2": 1
                },
                "do": {
                    "do": 1,
                    "infinite_loop_block": 1,
                    "loop": 1,
                    "run_indefinitely": 1
                },
                "original_dictionary": {
                    "new_dictionary": 1
                },
                "original_variable_name_1": {
                    "counter": 1,
                    "i": 1,
                    "unused_var1": 1
                },
                "original_variable_name_2": {
                    "result": 1,
                    "unused_var2": 1
                },
                "true": {
                    "true": 2
                }
            },
            "called": [
                "FUN_0800573c"
            ],
            "calling": [
                "FUN_0800573c",
                "FUN_08006ac0"
            ],
            "code": "\nvoid run_infinite_loop_0800573c(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "current_name": "run_infinite_loop_0800573c",
            "entrypoint": "0x0800573c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800573c": "run_infinite_loop_0800573c"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005740": {
            "additional_data": {
                "DAT_200006a4": {
                    "data": 1,
                    "data_index": 1,
                    "data_size": 3,
                    "data_value": 7,
                    "data_variable": 1,
                    "default_settings_value": 1,
                    "initial_value": 10,
                    "value": 1
                },
                "FUN_08005740": {
                    "initialize_data": 17,
                    "initialize_default_settings": 1,
                    "initialize_memory": 1,
                    "initialize_value": 6,
                    "set_data": 1,
                    "set_initial_value": 5
                },
                "PMF_200006a4": {
                    "data_length": 1
                },
                "return": {
                    "status": 1,
                    "success": 2
                },
                "undefined4": {
                    "void": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08006f00"
            ],
            "code": "\nvoid initialize_data_08005740(void)\n\n{\n  DAT_200006a4 = 0x16;\n  success 0xffffffff;\n}\n\n",
            "current_name": "initialize_data_08005740",
            "entrypoint": "0x08005740",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005740": "initialize_data_08005740",
                "return": "success",
                "undefined4": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005750": {
            "additional_data": {
                "DAT_": {
                    "": 1
                },
                "FUN_08005750": {
                    "check_return_value": 2,
                    "check_success": 1,
                    "get_description": 1,
                    "get_result": 1,
                    "get_return_value": 3,
                    "get_status": 1,
                    "get_success_code": 1,
                    "initialize": 6,
                    "initialize_application": 2,
                    "initialize_flag": 3,
                    "initialize_program": 2,
                    "initialize_return_value": 3,
                    "initialize_system": 1,
                    "is_one": 1,
                    "return_one": 2,
                    "set_return_value_to1": 1
                },
                "PTR_": {
                    "": 1
                },
                "return": {
                    "result": 1,
                    "status": 4
                },
                "returnType": {
                    "bool": 1
                },
                "return_value": {
                    "result": 1
                },
                "undefined4": {
                    "bool": 2,
                    "int": 3,
                    "return_value": 1,
                    "status": 2,
                    "uint32_t": 1,
                    "void": 7
                }
            },
            "called": [],
            "calling": [
                "thunk_FUN_08005750"
            ],
            "code": "\nvoid initialize_return_value_08005750(void)\n\n{\n  status 1;\n}\n\n",
            "current_name": "initialize_return_value_08005750",
            "entrypoint": "0x08005750",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005750": "initialize_return_value_08005750",
                "return": "status",
                "undefined4": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005754": {
            "additional_data": {
                "0x2e": {
                    "offset_1": 1
                },
                "0x3c": {
                    "threshold_value_2": 1
                },
                "0xe": {
                    "threshold_value_1": 1
                },
                "DAT_200000f4": {
                    "data_value": 1
                },
                "FUN_08005754": {
                    "decode_and_get_value": 1,
                    "decode_and_update_value": 2,
                    "decode_data": 1,
                    "decode_value": 3,
                    "extract_and_handle_data": 1,
                    "extract_and_update_value": 2,
                    "extract_value": 1,
                    "extract_value_from_binary": 1,
                    "find_updated_value": 1,
                    "find_value": 1,
                    "get_updated_value": 10,
                    "get_value_and_update": 1,
                    "get_value_and_update_data": 1,
                    "map_value": 1,
                    "map_value_and_shift_bits": 1,
                    "retrieve_and_update_value": 1,
                    "reverse_and_update_value": 1,
                    "translate_value": 1
                },
                "bVar1": {
                    "is_in_range": 3,
                    "is_input_valid": 1,
                    "is_less_than": 1,
                    "is_less_than3c": 1,
                    "is_less_than_0x3c": 3,
                    "is_less_than_3c": 1,
                    "is_less_than_60": 1,
                    "is_less_than_threshold": 4,
                    "is_small": 1,
                    "is_small_input": 2,
                    "is_valid": 4,
                    "is_valid_range": 4,
                    "is_value_in_range": 1,
                    "is_value_valid": 1,
                    "is_within_range": 3
                },
                "cVar2": {
                    "char_value": 3,
                    "character": 2,
                    "character_value": 3,
                    "data": 3,
                    "decoded_char": 5,
                    "decoded_value": 2,
                    "extracted_char": 1,
                    "extracted_value": 3,
                    "mapped_value": 2,
                    "result_char": 3,
                    "retrieved_value": 1,
                    "translated_char": 1,
                    "updated_value": 2
                },
                "find_value_and_update_data_08004a4c": {
                    "find_and_update_data": 1,
                    "find_value_and_update_data": 1
                },
                "param_1": {
                    "input": 2,
                    "input_value": 23,
                    "value": 6
                },
                "uVar3": {
                    "decoded_value": 3,
                    "extracted_value": 2,
                    "final_value": 1,
                    "output_value": 2,
                    "result": 10,
                    "result_value": 1,
                    "translated_value": 1,
                    "updated_value": 11
                }
            },
            "called": [
                "FUN_08004a4c"
            ],
            "calling": [
                "FUN_08000cd0"
            ],
            "code": "\nuint get_updated_value_08005754(uint input_value)\n\n{\n  bool is_less_than_threshold;\n  char decoded_char;\n  uint updated_value;\n  \n  if (input_value < 0xe) {\n    if (input_value + 0x2e < 0x3c) {\n      is_less_than_threshold = true;\n    }\n    else {\n      is_less_than_threshold = false;\n    }\n  }\n  else {\n    is_less_than_threshold = input_value < 0x3c;\n  }\n  if (is_less_than_threshold) {\n    if (input_value < 0xe) {\n      input_value = input_value + 0x2e;\n    }\n    decoded_char = (&DAT_080076f0)[input_value];\n  }\n  else {\n    decoded_char = -1;\n  }\n  if (decoded_char == -1) {\n    updated_value = 0;\n  }\n  else {\n    updated_value = find_and_update_data();\n    if (DAT_200000f4 != 0xc) {\n      if (DAT_200000f4 < 0xc) {\n        return updated_value >> (0xc - DAT_200000f4 & 0xff);\n      }\n      return updated_value << (DAT_200000f4 - 0xc & 0xff);\n    }\n  }\n  return updated_value;\n}\n\n",
            "current_name": "get_updated_value_08005754",
            "entrypoint": "0x08005754",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005754": "get_updated_value_08005754",
                "bVar1": "is_less_than_threshold",
                "cVar2": "decoded_char",
                "find_value_and_update_data_08004a4c": "find_and_update_data",
                "param_1": "input_value",
                "uVar3": "updated_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080057b4": {
            "additional_data": {
                "DAT_080074b4": {
                    "param_array": 1
                },
                "DAT_080076f0": {
                    "access_lookup_table": 1
                },
                "DAT_20000344": {
                    "bit_array": 1
                },
                "DAT_20000358": {
                    "flag_array": 1
                },
                "FUN_080057b4": {
                    "handle_memory": 1,
                    "process_binary_data": 3,
                    "process_data": 4,
                    "process_memory": 5,
                    "process_memory_access": 7,
                    "process_memory_permissions": 5,
                    "process_memory_requirements": 1,
                    "process_param": 2,
                    "process_parameter": 2,
                    "update_memory_permissions_and_flags": 1
                },
                "check_param_in_array_08004ce2": {
                    "check_array": 1,
                    "check_param_in_array": 13,
                    "check_parameter_in_array": 2,
                    "check_value_in_array": 1
                },
                "get_bit_value_080047f4": {
                    "get_bit_value": 14,
                    "get_bit_value_from_array": 1
                },
                "iVar1": {
                    "bit_result": 1,
                    "bit_value": 26,
                    "bit_value1": 1,
                    "bit_value_check": 1,
                    "bit_value_result": 1,
                    "result": 1
                },
                "iVar3": {
                    "access_value": 1,
                    "array_index": 2,
                    "bit_index": 2,
                    "character": 1,
                    "data": 1,
                    "data_index": 2,
                    "data_value": 2,
                    "element": 2,
                    "element_value": 1,
                    "index": 1,
                    "lookup_index": 1,
                    "lookup_result": 1,
                    "value": 14
                },
                "param_1": {
                    "access_index": 2,
                    "index": 27,
                    "input_value": 1,
                    "param_index": 1
                },
                "param_2": {
                    "access_mode": 1,
                    "access_type": 2,
                    "flag": 1,
                    "flags": 1,
                    "memory_action": 1,
                    "mode": 14,
                    "option": 2,
                    "permission_index": 1,
                    "permission_type": 6,
                    "permissions": 1,
                    "type": 1
                },
                "param_3": {
                    "config": 1,
                    "data": 1,
                    "flag": 5,
                    "flag1": 1,
                    "flags": 4,
                    "length": 1,
                    "param": 2,
                    "param_3": 2,
                    "param_array": 2,
                    "param_data": 2,
                    "param_value": 4,
                    "parameter_value": 1,
                    "permission": 2,
                    "permission_flag": 1,
                    "permission_value": 1,
                    "value": 1
                },
                "param_4": {
                    "array": 1,
                    "array_data": 1,
                    "array_pointer": 1,
                    "binary_data": 1,
                    "buffer": 1,
                    "data": 16,
                    "data_array": 1,
                    "data_buffer": 2,
                    "data_pointer": 1,
                    "data_ptr": 4,
                    "flag2": 1,
                    "param_4": 1
                },
                "process_binary_data_08004b3c": {
                    "process_binary_data": 18,
                    "process_data": 2
                },
                "puVar2": {
                    "access_array": 1,
                    "array": 4,
                    "array_data": 1,
                    "array_pointer": 4,
                    "array_ptr": 5,
                    "bit_array": 3,
                    "data": 1,
                    "data_array_ptr": 1,
                    "data_pointer": 2,
                    "data_ptr": 4,
                    "element_pointer": 1,
                    "lookup_array": 2,
                    "pointer": 1,
                    "ptr": 1
                },
                "set_bit_in_array_0800480a": {
                    "set_bit_in_array": 20
                },
                "set_bit_value_080047f4": {
                    "get_bit_value": 1
                },
                "set_memory_permissions_and_update_flags_08004bb0": {
                    "set_memory": 1,
                    "set_memory_permissions": 3,
                    "set_memory_permissions_and_flags": 2,
                    "set_memory_permissions_and_update_flags": 11,
                    "set_permissions": 1,
                    "set_permissions_and_update_flags": 1,
                    "set_permissions_update_flags": 1
                },
                "update_bit_value_08004828": {
                    "update_bit_value": 20
                }
            },
            "called": [
                "FUN_08004bb0",
                "FUN_08004ce2",
                "FUN_080047f4",
                "FUN_0800480a",
                "FUN_08004828",
                "FUN_08004b3c"
            ],
            "calling": [
                "FUN_080013a4",
                "FUN_0800157c",
                "FUN_08000bcc"
            ],
            "code": "\nvoid process_memory_access_080057b4(uint index,undefined4 mode,undefined4 flag,undefined *data)\n\n{\n  int bit_value;\n  undefined *array_ptr;\n  int value;\n  \n  if (index < 0x3c) {\n    value = (int)(char)(&DAT_080076f0)[index];\n    array_ptr = &DAT_080076f0;\n  }\n  else {\n    value = -1;\n    array_ptr = data;\n  }\n  if (value != -1) {\n    bit_value = get_bit_value(value,&DAT_20000344,flag,array_ptr,data);\n    if (bit_value != 0) {\n      bit_value = check_param_in_array(value,&DAT_080074b4);\n      if (bit_value != 0) {\n        process_binary_data(value);\n      }\n      update_bit_value(value,&DAT_20000344);\n    }\n    switch(mode) {\n    case 0:\n      set_memory_permissions_and_update_flags(value,0);\n      break;\n    case 1:\n      set_memory_permissions_and_update_flags(value,1,0);\n      break;\n    case 2:\n      set_memory_permissions_and_update_flags(value,0,1);\n      break;\n    case 3:\n      set_memory_permissions_and_update_flags(value,0,2);\n    }\n    set_bit_in_array(value,&DAT_20000358);\n  }\n  return;\n}\n\n",
            "current_name": "process_memory_access_080057b4",
            "entrypoint": "0x080057b4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080057b4": "process_memory_access_080057b4",
                "check_param_in_array_08004ce2": "check_param_in_array",
                "get_bit_value_080047f4": "get_bit_value",
                "iVar1": "bit_value",
                "iVar3": "value",
                "param_1": "index",
                "param_2": "mode",
                "param_3": "flag",
                "param_4": "data",
                "process_binary_data_08004b3c": "process_binary_data",
                "puVar2": "array_ptr",
                "set_bit_in_array_0800480a": "set_bit_in_array",
                "set_memory_permissions_and_update_flags_08004bb0": "set_memory_permissions_and_update_flags",
                "update_bit_value_08004828": "update_bit_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005848": {
            "additional_data": {
                "FUN_08005848": {
                    "apply_condition_on_param": 1,
                    "check_and_set_param_value": 5,
                    "process_data": 12,
                    "process_input_data": 1,
                    "process_param": 1,
                    "process_parameter": 5,
                    "set_param_value_based_on_condition": 2,
                    "set_param_value_if_condition_met": 2,
                    "update_memory_value": 1,
                    "update_param_based_on_condition": 1
                },
                "iVar1": {
                    "bit_result": 3,
                    "bit_value": 25,
                    "condition_result": 1,
                    "result": 2
                },
                "param_1": {
                    "index": 22,
                    "input_index": 4,
                    "input_value": 1,
                    "param_index": 1,
                    "value": 3
                },
                "param_2": {
                    "condition": 3,
                    "condition_param": 1,
                    "conditional_set_value": 1,
                    "mask": 1,
                    "new_param_value": 1,
                    "output_param": 1,
                    "param2": 1,
                    "param_value": 2,
                    "value": 9,
                    "value1": 8,
                    "value_1": 2,
                    "value_to_set": 1
                },
                "param_3": {
                    "address": 1,
                    "bit_pos": 1,
                    "bit_position": 1,
                    "condition": 11,
                    "flag_value": 1,
                    "length": 1,
                    "memory_param": 1,
                    "offset": 1,
                    "param3": 1,
                    "param_3": 1,
                    "size": 1,
                    "value2": 8,
                    "value_2": 2
                },
                "param_4": {
                    "array": 1,
                    "buffer": 1,
                    "data": 21,
                    "data_array": 1,
                    "data_buffer": 2,
                    "data_param": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "param4": 1,
                    "param_pointer": 1
                },
                "puVar3": {
                    "address_data": 1,
                    "array_pointer": 2,
                    "array_ptr": 1,
                    "base_ptr": 1,
                    "bit_array": 1,
                    "byte_array": 1,
                    "char_array": 2,
                    "char_array_pointer": 1,
                    "character_ptr": 1,
                    "data_pointer": 2,
                    "data_ptr": 2,
                    "lookup_table": 2,
                    "penultimate_data_buffer": 1,
                    "pointer": 6,
                    "pointer_to_data": 2,
                    "ptr": 2,
                    "ptr_data": 1,
                    "reference": 1
                },
                "uVar2": {
                    "address": 4,
                    "memory_addr": 2,
                    "memory_address": 24
                },
                "uVar4": {
                    "array_value": 1,
                    "bit_index": 1,
                    "bit_mask": 2,
                    "bit_value": 5,
                    "byte_value": 2,
                    "char_value": 9,
                    "character": 2,
                    "data_value": 1,
                    "index": 1,
                    "index_value": 1,
                    "lookup_value": 2,
                    "value": 3
                }
            },
            "called": [
                "FUN_080047f4",
                "FUN_08004c30",
                "FUN_08004848"
            ],
            "calling": [
                "FUN_08001310",
                "FUN_080012a2",
                "FUN_080013a4",
                "FUN_0800157c",
                "FUN_080015b2",
                "FUN_08000bcc",
                "FUN_08000cd0",
                "FUN_080012c0",
                "FUN_080012e8"
            ],
            "code": "\nvoid process_input_data_08005848(uint index,undefined4 value,undefined4 condition,undefined *data)\n\n{\n  int bit_value;\n  undefined4 memory_address;\n  undefined *pointer;\n  uint char_value;\n  \n  if (index < 0x3c) {\n    char_value = (uint)(char)(&DAT_080076f0)[index];\n    pointer = &DAT_080076f0;\n  }\n  else {\n    char_value = 0xffffffff;\n    pointer = data;\n  }\n  if ((char_value != 0xffffffff) &&\n     (bit_value = get_bit_value_080047f4(char_value,&DAT_20000358,condition,pointer,data), bit_value != 0)) {\n    memory_address = get_memory_address_08004848((char_value << 0x18) >> 0x1c);\n    set_param_value_based_on_condition_08004c30(memory_address,1 << (char_value & 0xf) & 0xffff,value);\n  }\n  return;\n}\n\n",
            "current_name": "process_input_data_08005848",
            "entrypoint": "0x08005848",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005848": "process_input_data_08005848",
                "iVar1": "bit_value",
                "param_1": "index",
                "param_2": "value",
                "param_3": "condition",
                "param_4": "data",
                "puVar3": "pointer",
                "uVar2": "memory_address",
                "uVar4": "char_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005890": {
            "additional_data": {
                "FUN_08005890": {
                    "check_bit_presence": 29,
                    "check_presence": 1,
                    "find_bit_presence": 1
                },
                "cVar1": {
                    "bit_presence": 1,
                    "result": 30
                },
                "iVar2": {
                    "bit_value": 31
                },
                "param_1": {
                    "index": 1,
                    "input": 3,
                    "input_number": 1,
                    "input_value": 12,
                    "param": 1,
                    "value": 13
                },
                "uVar3": {
                    "address": 2,
                    "mem_addr": 1,
                    "memory_address": 28
                },
                "uVar4": {
                    "char_value": 1,
                    "data_key": 1,
                    "data_value": 1,
                    "index": 21,
                    "lookup_index": 3,
                    "lookup_result": 2,
                    "lookup_value": 2
                }
            },
            "called": [
                "FUN_080047f4",
                "FUN_08004c48",
                "FUN_08004848"
            ],
            "calling": [
                "FUN_080015b2",
                "FUN_08000cd0"
            ],
            "code": "\nchar check_bit_presence_08005890(uint value)\n\n{\n  char result;\n  int bit_value;\n  undefined4 memory_address;\n  uint index;\n  \n  if (value < 0x3c) {\n    index = (uint)(char)(&DAT_080076f0)[value];\n  }\n  else {\n    index = 0xffffffff;\n  }\n  if (index == 0xffffffff) {\n    result = '\\0';\n  }\n  else {\n    bit_value = get_bit_value_080047f4(index,&DAT_20000358);\n    if (bit_value == 0) {\n      result = '\\0';\n    }\n    else {\n      memory_address = get_memory_address_08004848((index << 0x18) >> 0x1c);\n      result = perform_bit_presence_check_08004c48(memory_address,1 << (index & 0xf) & 0xffff);\n    }\n  }\n  if (result != '\\0') {\n    result = '\\x01';\n  }\n  return result;\n}\n\n",
            "current_name": "check_bit_presence_08005890",
            "entrypoint": "0x08005890",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005890": "check_bit_presence_08005890",
                "cVar1": "result",
                "iVar2": "bit_value",
                "param_1": "value",
                "uVar3": "memory_address",
                "uVar4": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080058e0": {
            "additional_data": {
                "FUN_080058e0": {
                    "initialize_and_return_data_values": 3,
                    "initialize_data": 3,
                    "initialize_data_values": 25
                },
                "data_values": {
                    "values": 1
                },
                "initialize_data_values_08004b94": {
                    "initialize_data_values": 21,
                    "initialize_data_values_helper": 1
                },
                "return": {
                    "": 1
                },
                "void": {
                    "": 1
                }
            },
            "called": [
                "FUN_08004b94"
            ],
            "calling": [
                "FUN_08000bcc",
                "FUN_08000cd0",
                "FUN_080016b4",
                "FUN_08001ab0"
            ],
            "code": "\nvoid initialize_and_return_data_values_080058e0(void)\n\n{\n  initialize_data_values();\n  return;\n}\n\n",
            "current_name": "initialize_and_return_data_values_080058e0",
            "entrypoint": "0x080058e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080058e0": "initialize_and_return_data_values_080058e0",
                "data_values": "values",
                "initialize_data_values_08004b94": "initialize_data_values"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080058e8": {
            "called": [],
            "calling": [
                "FUN_08000bcc"
            ],
            "code": "\nvoid FUNC_080058e8(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080058e8",
            "entrypoint": "0x080058e8",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080058e8": "FUNC_080058e8"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800591e": {
            "additional_data": {
                "0x134": {
                    "offset1": 3,
                    "offset_1": 2,
                    "offset_value_1": 1
                },
                "0x136": {
                    "offset2": 3,
                    "offset_2": 2,
                    "offset_value_2": 1
                },
                "0x40": {
                    "constant_offset": 1
                },
                "FUN_0800591e": {
                    "calculate_and_subtract": 1,
                    "calculate_checksum": 13,
                    "calculate_difference": 2,
                    "calculate_offset": 7,
                    "calculate_offset_difference": 1,
                    "calculate_result": 4,
                    "calculate_shift_amount": 2,
                    "calculate_shift_value": 1
                },
                "param_1": {
                    "address": 2,
                    "base_address": 7,
                    "data": 1,
                    "data_address": 5,
                    "data_offset": 1,
                    "input": 2,
                    "input_data": 1,
                    "input_value": 9,
                    "memory_location": 1,
                    "offset": 2
                },
                "short": {
                    "ushort": 2
                },
                "short_1": {
                    "first_value": 1
                },
                "short_2": {
                    "second_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005a18"
            ],
            "code": "\nuushort calculate_checksum_0800591e(int input_value)\n\n{\n  return (*(ushort *)(input_value + 0x134) + 0x40) - *(ushort *)(input_value + 0x136) & 0x3f;\n}\n\n",
            "current_name": "calculate_checksum_0800591e",
            "entrypoint": "0x0800591e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800591e": "calculate_checksum_0800591e",
                "param_1": "input_value",
                "short": "ushort"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800598a": {
            "additional_data": {
                "FUN_0800598a": {
                    "process_and_store_input": 2,
                    "process_and_store_user_input": 1,
                    "process_input_and_update": 2,
                    "process_input_and_update_buffer": 1,
                    "process_user_input": 18,
                    "process_user_input_and_update": 5,
                    "update_input": 1,
                    "update_user_input": 1
                },
                "iVar1": {
                    "input_processing_result": 1,
                    "process_result": 1,
                    "result": 28,
                    "return_value": 1
                },
                "local_9": {
                    "character": 1,
                    "input_byte": 2,
                    "input_char": 3,
                    "input_character": 1,
                    "input_value": 6,
                    "local_variable": 1,
                    "new_byte": 1,
                    "new_char": 1,
                    "new_character": 2,
                    "new_data": 1,
                    "new_item": 1,
                    "new_local_variable": 1,
                    "new_value": 6,
                    "user_input": 3
                },
                "param_1": {
                    "input": 16,
                    "input_address": 2,
                    "input_param": 4,
                    "input_parameter": 2,
                    "user_input": 7
                },
                "process_user_input_080054d4": {
                    "process_input": 1
                },
                "uVar2": {
                    "current_index": 1,
                    "incremented_value": 1,
                    "new_index": 9,
                    "new_position": 1,
                    "new_value": 1,
                    "next_index": 1,
                    "updated_index": 8,
                    "updated_value": 8
                }
            },
            "called": [
                "FUN_080054d4"
            ],
            "calling": [],
            "code": "\nvoid process_user_input_and_update_0800598a(int input)\n\n{\n  int result;\n  ushort new_index;\n  undefined new_value;\n  \n  result = process_input(input,&new_value);\n  if ((result == 0) &&\n     (new_index = *(short *)(input + 0x60) + 1U & 0x3f, new_index != *(ushort *)(input + 0x62))) {\n    *(undefined *)(*(int *)(input + 0x5c) + (uint)*(ushort *)(input + 0x60)) = new_value;\n    *(ushort *)(input + 0x60) = new_index;\n  }\n  return;\n}\n\n",
            "current_name": "process_user_input_and_update_0800598a",
            "entrypoint": "0x0800598a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800598a": "process_user_input_and_update_0800598a",
                "iVar1": "result",
                "local_9": "new_value",
                "param_1": "input",
                "process_user_input_080054d4": "process_input",
                "uVar2": "new_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005a18": {
            "called": [
                "FUN_0800591e"
            ],
            "calling": [
                "FUN_08005f6c"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08005a1e) */\n/* WARNING: Removing unreachable block (ram,0x08005a30) */\n/* WARNING: Removing unreachable block (ram,0x08005a26) */\n/* WARNING: Removing unreachable block (ram,0x08005a38) */\n\nvoid FUNC_08005a18(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08005a18",
            "entrypoint": "0x08005a18",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08005a18": "FUNC_08005a18"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08005a44": {
            "additional_data": {
                "0x11": {
                    "constant1": 3,
                    "initial_offset": 1,
                    "initial_value1": 1,
                    "offset1": 1,
                    "some_value": 1
                },
                "0x130": {
                    "offset1": 6
                },
                "0x134": {
                    "offset2": 4,
                    "value1": 1,
                    "variable1": 1
                },
                "0x136": {
                    "offset3": 4,
                    "value2": 1,
                    "variable2": 1
                },
                "0x138": {
                    "offset2": 2,
                    "offset4": 4
                },
                "0x13c": {
                    "offset5": 4,
                    "value3": 1,
                    "variable3": 1
                },
                "0x13e": {
                    "offset6": 4,
                    "value4": 1,
                    "variable4": 1
                },
                "0x51": {
                    "another_value": 1,
                    "constant2": 3,
                    "initial_offset2": 1,
                    "initial_value2": 1,
                    "offset2": 1
                },
                "FUN_08005a44": {
                    "initialize_data": 13,
                    "initialize_data_structure": 2,
                    "initialize_data_structures": 3,
                    "initialize_function": 1,
                    "initialize_memory": 2,
                    "initialize_parameters": 4,
                    "initialize_params": 2,
                    "initialize_struct": 1,
                    "initialize_values": 1,
                    "set_function_data": 1,
                    "set_initial_values": 1
                },
                "PTR_08005a44": {
                    "new_variable_name1": 1
                },
                "PTR_08005a45": {
                    "new_variable_name2": 1
                },
                "PTR_08005a46": {
                    "new_variable_name3": 1
                },
                "_var1": {
                    "offset1": 1
                },
                "_var2": {
                    "offset2": 1
                },
                "_var3": {
                    "offset3": 1
                },
                "_var4": {
                    "offset4": 1
                },
                "_var5": {
                    "offset5": 1
                },
                "param_1": {
                    "base_address": 21,
                    "data": 1,
                    "data_address": 2,
                    "data_structure": 1,
                    "data_structure_pointer": 1,
                    "function_data": 1,
                    "function_parameter": 1,
                    "param": 1,
                    "parameter": 1,
                    "struct_address": 1
                },
                "param_2": {
                    "new_parameter_name2": 1
                },
                "param_n": {
                    "new_parameter_name_n": 1
                },
                "parameter": {
                    "base_address": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005b54"
            ],
            "code": "\nvoid initialize_data_structures_08005a44(int base_address)\n\n{\n  *(int *)(base_address + 0x130) = base_address + 0x11;\n  *(undefined2 *)(base_address + 0x134) = 0;\n  *(undefined2 *)(base_address + 0x136) = 0;\n  *(int *)(base_address + 0x138) = base_address + 0x51;\n  *(undefined2 *)(base_address + 0x13c) = 0;\n  *(undefined2 *)(base_address + 0x13e) = 0;\n  return;\n}\n\n",
            "current_name": "initialize_data_structures_08005a44",
            "entrypoint": "0x08005a44",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005a44": "initialize_data_structures_08005a44",
                "param_1": "base_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005a68": {
            "additional_data": {
                "FUN_08005a68": {
                    "configure_hardware_serial": 1,
                    "configure_serial": 3,
                    "configure_serial_communication": 2,
                    "configure_serial_port": 5,
                    "initialize_hardware_serial": 1,
                    "initialize_serial": 6,
                    "initialize_serial_communication": 6,
                    "initialize_serial_connection": 2,
                    "initialize_serial_interface": 1,
                    "initialize_serial_port": 1,
                    "initialize_uart": 3
                },
                "UNRECOVERED_JUMPTABLE": {
                    "assert_failure_handler": 1,
                    "assertion_failed_handler": 2,
                    "error_code": 1,
                    "error_handler": 2,
                    "function_pointer": 1,
                    "jmp_table": 2,
                    "jump_table": 16,
                    "jumptable": 1,
                    "jumptable_function": 1
                },
                "bVar2": {
                    "bit_mask": 1,
                    "bits_mask": 1,
                    "byte_config_mod": 1,
                    "byte_value": 1,
                    "config_bit": 3,
                    "config_bits": 8,
                    "config_bits_mask": 1,
                    "config_byte_mask": 1,
                    "config_flag": 1,
                    "config_mask": 4,
                    "config_masked": 1,
                    "config_option": 1,
                    "configuration_bit": 1,
                    "configuration_flag": 1,
                    "low_bits": 1,
                    "option_bits": 1,
                    "serial_config_mask": 1,
                    "settings_mask": 2
                },
                "extraout_r1": {
                    "bits": 1,
                    "branch_address": 1,
                    "error_code": 6,
                    "extra": 1,
                    "extra_out": 1,
                    "extra_output": 5,
                    "extra_result": 1,
                    "index": 1,
                    "result": 3,
                    "return_value": 3,
                    "status": 3,
                    "status_flag": 1,
                    "temp": 1,
                    "temp_var": 1,
                    "unconfigured_bits": 1
                },
                "iVar3": {
                    "config_bits": 1,
                    "config_count": 4,
                    "config_mod_value": 1,
                    "config_mode": 1,
                    "config_num": 1,
                    "config_option": 2,
                    "config_options": 1,
                    "config_state": 1,
                    "config_value": 8,
                    "data_bits": 3,
                    "num_configuration_options": 1,
                    "num_options": 1,
                    "number_of_bits": 2,
                    "uart_config": 2,
                    "uart_mode": 2
                },
                "initialize_and_configure_uart_pins_08004f4c": {
                    "init_and_config_uart_pins": 1,
                    "initialize_serial_pins": 2,
                    "initialize_uart_pins": 1
                },
                "param_1": {
                    "port_address": 1,
                    "serial_buffer": 1,
                    "serial_connection": 2,
                    "serial_device": 1,
                    "serial_handler": 1,
                    "serial_interface": 1,
                    "serial_port": 16,
                    "serial_port_address": 5,
                    "uart_address": 1,
                    "uart_config_ptr": 1,
                    "uart_object": 1
                },
                "param_2": {
                    "baud_rate": 31
                },
                "param_3": {
                    "byte_config": 2,
                    "config": 4,
                    "config_bits": 2,
                    "config_byte": 8,
                    "configuration": 7,
                    "configuration_byte": 1,
                    "options": 1,
                    "serial_config": 3,
                    "settings": 3
                },
                "pbVar4": {
                    "buffer_pointer": 1,
                    "byte_pointer": 9,
                    "byte_ptr": 3,
                    "character_pointer": 1,
                    "config_pointer": 1,
                    "config_ptr": 1,
                    "data": 1,
                    "data_pointer": 5,
                    "data_ptr": 3,
                    "p_data": 1,
                    "pointer_to_byte": 1,
                    "port_address": 1,
                    "ptr_byte": 1,
                    "uart_pin": 1,
                    "uart_port": 1
                },
                "pcVar1": {
                    "debug_message": 2,
                    "error_details": 1,
                    "error_message": 17,
                    "error_msg": 1,
                    "error_string": 9,
                    "message": 1
                },
                "process_and_decode_assertion_failed_0800611c": {
                    "handle_assertion_failed": 1,
                    "handle_assertion_failure": 1,
                    "process_assertion_failed": 1
                },
                "process_user_input_08005510": {
                    "process_user_input": 4
                },
                "uRam0000012d": {
                    "ram_data": 1,
                    "uart_mode": 1,
                    "updated_value": 1
                },
                "unaff_r4": {
                    "char_var": 1,
                    "character": 14,
                    "config_value": 1,
                    "data_bits": 1,
                    "parity": 1,
                    "parity_bit": 1,
                    "stop_bit": 1,
                    "temp_char": 1,
                    "temp_var": 1,
                    "uart_config": 1,
                    "uart_config_char": 1,
                    "uart_mode": 1,
                    "unaff_char": 1,
                    "unaff_r4": 1,
                    "unaff_value4": 1,
                    "unaff_var_4": 1,
                    "unaffected_register4": 1,
                    "uninitialized_char": 1
                },
                "unaff_r6": {
                    "base_address": 10,
                    "constant": 1,
                    "data_offset": 1,
                    "offset": 14,
                    "port_offset": 1,
                    "unaff_r6": 1,
                    "unaff_value6": 1,
                    "unaff_var_6": 1,
                    "unaffected_register6": 1
                }
            },
            "called": [
                "FUN_0800611c",
                "FUN_08004f4c",
                "FUN_08005510"
            ],
            "calling": [
                "FUN_08000bcc"
            ],
            "code": "\nvoid initialize_serial_communication_08005a68(int serial_port,undefined4 baud_rate,byte config_byte)\n\n{\n  uint error_code;\n  char *error_message;\n  byte config_bits;\n  int config_value;\n  byte *byte_pointer;\n  char character;\n  int offset;\n  code *jump_table;\n  \n  *(undefined4 *)(serial_port + 0x11c) = baud_rate;\n  *(byte *)(serial_port + 0x140) = config_byte;\n  config_bits = config_byte & 7;\n  if (config_bits == 4) {\n    config_value = 7;\n  }\n  else if (config_bits == 6) {\n    config_value = 8;\n  }\n  else if (config_bits == 2) {\n    config_value = 6;\n  }\n  else {\n    config_value = 0;\n  }\n  if ((config_byte & 0x30) == 0x30) {\n    *(undefined4 *)(serial_port + 0x128) = 0x600;\n    config_value = config_value + 1;\n  }\n  else if ((config_byte & 0x20) == 0) {\n    *(undefined4 *)(serial_port + 0x128) = 0;\n  }\n  else {\n    *(undefined4 *)(serial_port + 0x128) = 0x400;\n    config_value = config_value + 1;\n  }\n  if ((config_byte & 8) == 0) {\n    *(undefined4 *)(serial_port + 0x124) = 0;\n  }\n  else {\n    *(undefined4 *)(serial_port + 0x124) = 0x2000;\n  }\n  if (config_value == 8) {\n    *(undefined4 *)(serial_port + 0x120) = 0;\n  }\n  else if (config_value == 9) {\n    *(undefined4 *)(serial_port + 0x120) = 0x1000;\n  }\n  else {\n    config_value = 0;\n  }\n  if (config_value != 0) {\n    initialize_serial_pins(serial_port + 0xd4);\n    process_user_input(serial_port + 0xd4,0x800598b);\n    return;\n  }\n  error_message = \"void HardwareSerial::begin(long unsigned int, byte)\";\n  jump_table = (code *)0x8005b12;\n  handle_assertion_failure(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/cores/arduino/HardwareSerial.cpp\"\n               ,299,\"void HardwareSerial::begin(long unsigned int, byte)\",\"databits!=0\");\n  byte_pointer = *(byte **)(error_code + offset);\n  error_message[0x1e] = character;\n  *(undefined *)(*byte_pointer + 0x1e) = 0;\n  if (error_code < 0x3c) {\n    ram_data = (&DAT_080076f0)[error_code];\n  }\n  else {\n    ram_data = 0xff;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08005b30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)();\n  return;\n}\n\n",
            "current_name": "initialize_serial_communication_08005a68",
            "entrypoint": "0x08005a68",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005a68": "initialize_serial_communication_08005a68",
                "UNRECOVERED_JUMPTABLE": "jump_table",
                "bVar2": "config_bits",
                "extraout_r1": "error_code",
                "iVar3": "config_value",
                "initialize_and_configure_uart_pins_08004f4c": "initialize_serial_pins",
                "param_1": "serial_port",
                "param_2": "baud_rate",
                "param_3": "config_byte",
                "pbVar4": "byte_pointer",
                "pcVar1": "error_message",
                "process_and_decode_assertion_failed_0800611c": "handle_assertion_failure",
                "process_user_input_08005510": "process_user_input",
                "uRam0000012d": "ram_data",
                "unaff_r4": "character",
                "unaff_r6": "offset"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005b24": {
            "additional_data": {
                "FUN_08005b24": {
                    "extract_data": 1,
                    "extract_data_from_binary": 1,
                    "initialize_data": 1,
                    "process_value": 1,
                    "set_byte_based_on_index": 2,
                    "set_byte_value": 4,
                    "set_default_value": 1,
                    "set_error_code": 1,
                    "set_flag_based_on_value": 1,
                    "set_output_value": 1,
                    "set_param_value": 1,
                    "set_parameter_value": 1,
                    "set_pixel_value": 1,
                    "set_return_value": 2,
                    "set_return_value_based_on_param": 1,
                    "set_status_code": 1,
                    "update_memory": 1,
                    "update_param": 1,
                    "update_param1_with_condition": 1,
                    "update_parameter": 1,
                    "update_parameter_value": 1,
                    "update_value": 4,
                    "update_value_and_jump": 1
                },
                "UNRECOVERED_JUMPTABLE": {
                    "function_call": 1,
                    "jump_table": 7,
                    "jumptable_function": 1
                },
                "param_1": {
                    "address": 13,
                    "base_address": 8,
                    "data_pointer": 1,
                    "error_code_address": 1,
                    "memory_address": 2,
                    "memory_offset": 1,
                    "memory_start_address": 1,
                    "output_address": 2,
                    "pixel_address": 1,
                    "status_code_address": 1
                },
                "param_2": {
                    "data_index": 1,
                    "error_code": 1,
                    "error_index": 1,
                    "index": 16,
                    "input_value": 2,
                    "pixel_index": 1,
                    "value": 8,
                    "value_index": 1
                },
                "uVar1": {
                    "byte_value": 2,
                    "default_value": 1,
                    "error_value": 1,
                    "extracted_value": 1,
                    "flag_value": 1,
                    "new_value": 3,
                    "output_value": 1,
                    "param_value": 1,
                    "processed_value": 1,
                    "return_value": 3,
                    "status": 1,
                    "updated_value": 5,
                    "value": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_08005b54"
            ],
            "code": "\nvoid update_parameter_value_08005b24(int address,uint index)\n\n{\n  undefined updated_value;\n  code *jump_table;\n  \n  if (index < 0x3c) {\n    updated_value = (&DAT_080076f0)[index];\n  }\n  else {\n    updated_value = 0xff;\n  }\n  *(undefined *)(address + 0x12d) = updated_value;\n                    /* WARNING: Could not recover jumptable at 0x08005b30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)();\n  return;\n}\n\n",
            "current_name": "update_parameter_value_08005b24",
            "entrypoint": "0x08005b24",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005b24": "update_parameter_value_08005b24",
                "UNRECOVERED_JUMPTABLE": "jump_table",
                "param_1": "address",
                "param_2": "index",
                "uVar1": "updated_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005b3c": {
            "additional_data": {
                "FUN_08005b3c": {
                    "copy_byte_to_buffer": 1,
                    "copy_value_to_memory": 2,
                    "copy_value_to_offset": 1,
                    "set_byte_at_offset": 2,
                    "set_byte_from_lookup": 1,
                    "set_byte_value": 9,
                    "set_byte_value_for_index": 1,
                    "set_default_value": 2,
                    "set_destination_value": 1,
                    "set_limited_value": 1,
                    "set_memory_value": 4,
                    "set_parameter_value": 1,
                    "set_value_at_offset": 1,
                    "update_data": 1,
                    "update_data_at_index": 1,
                    "update_parameter_value": 1,
                    "write_to_memory": 1
                },
                "param_1": {
                    "address": 10,
                    "base_address": 11,
                    "buffer": 1,
                    "data_pointer": 1,
                    "destination": 1,
                    "destination_address": 2,
                    "destination_offset": 1,
                    "memory_address": 2,
                    "object_address": 1,
                    "target_address": 1
                },
                "param_2": {
                    "byte_index": 1,
                    "index": 24,
                    "offset": 3,
                    "source_index": 1,
                    "value": 1,
                    "value_index": 1
                },
                "uVar1": {
                    "byte_value": 4,
                    "copied_value": 1,
                    "default_value": 1,
                    "new_value": 2,
                    "selected_value": 1,
                    "updated_value": 2,
                    "value": 12,
                    "value_to_copy": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005b54"
            ],
            "code": "\nvoid set_byte_value_for_index_08005b3c(int base_address,uint index)\n\n{\n  undefined value;\n  \n  if (index < 0x3c) {\n    value = (&DAT_080076f0)[index];\n  }\n  else {\n    value = 0xff;\n  }\n  *(undefined *)(base_address + 300) = value;\n  return;\n}\n\n",
            "current_name": "set_byte_value_for_index_08005b3c",
            "entrypoint": "0x08005b3c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005b3c": "set_byte_value_for_index_08005b3c",
                "param_1": "base_address",
                "param_2": "index",
                "uVar1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005b54": {
            "additional_data": {
                "DAT_08007604": {
                    "default_value_1": 1
                },
                "DAT_0800764c": {
                    "default_value_2": 1
                },
                "DAT_2000036c": {
                    "data": 1
                },
                "FUN_08005b54": {
                    "initialize_and_set_data": 1,
                    "initialize_and_set_parameters": 1,
                    "initialize_and_set_values": 1,
                    "initialize_and_update_data_structures": 1,
                    "initialize_and_update_parameters": 1,
                    "initialize_config_data": 1,
                    "initialize_data": 4,
                    "initialize_data_structure": 1,
                    "initialize_data_structures": 6,
                    "initialize_param1": 1,
                    "initialize_param_struct": 1,
                    "initialize_parameter": 2,
                    "initialize_parameters": 10
                },
                "find_value_or_default_08004ca2": {
                    "find_default_value": 1,
                    "find_or_default": 2,
                    "find_or_default_value": 1,
                    "find_value_or_default": 21
                },
                "initialize_data_structures_08005a44": {
                    "init_data_structures": 1,
                    "initialize_data_structs": 1,
                    "initialize_data_structures": 21,
                    "initialize_structures": 2
                },
                "param_1": {
                    "array": 1,
                    "config_data": 1,
                    "data": 4,
                    "data_array": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "data_struct": 1,
                    "data_structure": 3,
                    "data_structures": 1,
                    "output": 1,
                    "output_params": 1,
                    "param_array": 1,
                    "param_struct": 1,
                    "parameter_array": 8,
                    "parameters": 4,
                    "params": 1
                },
                "param_2": {
                    "default_value": 3,
                    "index": 1,
                    "param2": 1,
                    "param_value": 3,
                    "param_value_index": 1,
                    "value": 12,
                    "value1": 4,
                    "value_1": 2,
                    "value_index": 3,
                    "value_to_find": 1
                },
                "param_3": {
                    "default_value": 3,
                    "index": 6,
                    "param": 1,
                    "param3": 1,
                    "param3_value": 1,
                    "param_3": 1,
                    "param_a": 1,
                    "param_index": 1,
                    "param_value": 2,
                    "parameter": 3,
                    "parameter_value_1": 1,
                    "update_value": 2,
                    "value1": 1,
                    "value2": 4,
                    "value_1": 1,
                    "value_2": 2
                },
                "param_4": {
                    "byte_value": 13,
                    "index": 3,
                    "param4": 1,
                    "param4_value": 1,
                    "param_4": 1,
                    "param_b": 1,
                    "param_byte_value": 1,
                    "param_value": 1,
                    "parameter_value_2": 1,
                    "value2": 1,
                    "value3": 4,
                    "value_2": 1,
                    "value_3": 2
                },
                "set_byte_value_for_index_08005b3c": {
                    "set_byte_value": 2,
                    "set_byte_value_for_index": 23
                },
                "uVar1": {
                    "default_value": 16,
                    "default_value_or_found": 1,
                    "default_value_or_value": 1,
                    "found_value": 8,
                    "value": 1
                },
                "update_parameter_value_08005b24": {
                    "update_param_value": 3,
                    "update_parameter": 1,
                    "update_parameter_value": 21
                }
            },
            "called": [
                "FUN_08004ca2",
                "FUN_08005b3c",
                "FUN_08005b24",
                "FUN_08005a44"
            ],
            "calling": [
                "FUN_08005bb0"
            ],
            "code": "\nundefined4 *\ninitialize_and_update_parameters_08005b54(undefined4 *parameter_array,undefined4 value,undefined4 index,undefined4 byte_value)\n\n{\n  undefined default_value;\n  \n  parameter_array[1] = 0;\n  parameter_array[2] = 1000;\n  *parameter_array = &PTR_LAB_080059c8_1_08007804;\n  if (parameter_array == (undefined4 *)&DAT_2000036c) {\n    update_parameter_value(&DAT_2000036c,0,index,&DAT_2000036c,byte_value);\n    set_byte_value_for_index(&DAT_2000036c,1);\n  }\n  else {\n    default_value = find_value_or_default(value,&DAT_08007604);\n    *(undefined *)((int)parameter_array + 0x12d) = default_value;\n    default_value = find_value_or_default(value,&DAT_0800764c);\n    *(undefined *)(parameter_array + 0x4b) = default_value;\n  }\n  initialize_data_structures(parameter_array);\n  return parameter_array;\n}\n\n",
            "current_name": "initialize_and_update_parameters_08005b54",
            "entrypoint": "0x08005b54",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005b54": "initialize_and_update_parameters_08005b54",
                "find_value_or_default_08004ca2": "find_value_or_default",
                "initialize_data_structures_08005a44": "initialize_data_structures",
                "param_1": "parameter_array",
                "param_2": "value",
                "param_3": "index",
                "param_4": "byte_value",
                "set_byte_value_for_index_08005b3c": "set_byte_value_for_index",
                "uVar1": "default_value",
                "update_parameter_value_08005b24": "update_parameter_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005bb0": {
            "additional_data": {
                "FUN_08005bb0": {
                    "initialize_if_needed": 1,
                    "initialize_if_param1": 1,
                    "initialize_if_param1_equals_1": 3,
                    "initialize_if_param1_is_1": 6,
                    "initialize_if_param1_is_one": 2,
                    "initialize_if_param_1_is_1": 1,
                    "initialize_if_param_1_is_one": 1,
                    "initialize_if_parameter_is_equal_to_1": 1,
                    "initialize_if_parameter_is_one": 1,
                    "initialize_parameters": 9,
                    "initialize_parameters_if_condition_met": 2,
                    "initialize_parameters_if_needed": 2,
                    "initialize_parameters_if_valid": 1
                },
                "initialize_and_update_parameters_08005b54": {
                    "initialize_and_update_parameters": 3,
                    "initialize_and_update_params": 2,
                    "initialize_and_update_params_helper": 1
                },
                "param_1": {
                    "check_flag": 1,
                    "condition": 3,
                    "condition_1": 1,
                    "condition_variable": 1,
                    "flag": 5,
                    "input_param": 1,
                    "is_initialization_needed": 1,
                    "is_initialize": 1,
                    "is_initialized": 1,
                    "is_one": 1,
                    "is_param1": 4,
                    "is_param1_one": 3,
                    "is_param1_true": 1,
                    "is_parameter_one": 1,
                    "is_valid": 2,
                    "num_check": 1,
                    "param1": 1,
                    "param_1": 1,
                    "status": 1
                },
                "param_2": {
                    "check_value": 2,
                    "comparison_variable": 1,
                    "condition_2": 1,
                    "condition_param": 1,
                    "flag_check": 1,
                    "flag_value": 1,
                    "input_value": 1,
                    "is_param2": 1,
                    "param2": 3,
                    "param2_extracted_value": 1,
                    "param2_value": 4,
                    "param_2": 1,
                    "param_2_value": 1,
                    "parameter_two": 1,
                    "value": 11
                },
                "param_3": {
                    "param": 1,
                    "param1": 3,
                    "param3": 5,
                    "param3_address": 1,
                    "param3_value": 2,
                    "param_3": 7,
                    "param_3_value": 1,
                    "param_a": 2,
                    "parameter1": 1,
                    "parameter3": 1,
                    "parameter_1": 6,
                    "parameter_three": 1
                },
                "param_4": {
                    "config": 1,
                    "param2": 3,
                    "param4": 5,
                    "param4_value": 3,
                    "param_4": 7,
                    "param_4_value": 1,
                    "param_b": 2,
                    "parameter2": 1,
                    "parameter4": 1,
                    "parameter_2": 6,
                    "parameter_four": 1
                }
            },
            "called": [
                "FUN_08005b54"
            ],
            "calling": [],
            "code": "\nvoid initialize_parameters_if_condition_met_08005bb0(int flag,int value,undefined4 param_3,undefined4 param_4)\n\n{\n  if (flag != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    initialize_and_update_parameters(&DAT_2000036c,0x40004400,param_3,0xffff,param_4);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_parameters_if_condition_met_08005bb0",
            "entrypoint": "0x08005bb0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005bb0": "initialize_parameters_if_condition_met_08005bb0",
                "initialize_and_update_parameters_08005b54": "initialize_and_update_parameters",
                "param_1": "flag",
                "param_2": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005c1c": {
            "additional_data": {
                "FUN_08005c1c": {
                    "extract_data": 1,
                    "initialize_data": 20,
                    "initialize_param1": 1,
                    "initialize_parameters": 3,
                    "initialize_params": 3,
                    "set_param_data": 1,
                    "set_parameters": 1,
                    "setup_params": 1
                },
                "param_1": {
                    "data": 1,
                    "data_buffer": 1,
                    "data_pointer": 10,
                    "data_ptr": 3,
                    "destination": 1,
                    "output": 3,
                    "output_data": 4,
                    "output_pointer": 4,
                    "output_ptr": 1,
                    "param1": 1,
                    "param_array": 1,
                    "target_pointer": 1
                },
                "param_2": {
                    "byte_value": 1,
                    "input1": 1,
                    "param1": 1,
                    "param2": 3,
                    "param_2": 1,
                    "value1": 22,
                    "value_1": 2
                },
                "param_3": {
                    "input2": 1,
                    "param2": 1,
                    "param3": 3,
                    "param_3": 1,
                    "value1": 1,
                    "value2": 22,
                    "value_2": 2
                },
                "param_4": {
                    "input3": 1,
                    "param3": 1,
                    "param4": 3,
                    "param_4": 1,
                    "value2": 1,
                    "value3": 22,
                    "value_3": 2
                },
                "param_5": {
                    "input4": 1,
                    "param4": 1,
                    "param5": 3,
                    "param_5": 1,
                    "value3": 1,
                    "value4": 22,
                    "value_4": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08005c38"
            ],
            "code": "\nvoid initialize_data_08005c1c(undefined4 *data_pointer,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *data_pointer = &DAT_08007858;\n  *(undefined *)(data_pointer + 1) = value1;\n  *(undefined *)((int)data_pointer + 5) = value2;\n  *(undefined *)((int)data_pointer + 6) = value3;\n  *(undefined *)((int)data_pointer + 7) = value4;\n  return;\n}\n\n",
            "current_name": "initialize_data_08005c1c",
            "entrypoint": "0x08005c1c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005c1c": "initialize_data_08005c1c",
                "param_1": "data_pointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005c38": {
            "additional_data": {
                "DAT_200004b0": {
                    "data": 1,
                    "data_array": 1,
                    "data_to_initialize": 1,
                    "data_variable": 1
                },
                "FUN_08005c38": {
                    "initialize_data_if_condition": 3,
                    "initialize_data_if_condition_met": 15,
                    "initialize_data_if_conditions_met": 2,
                    "initialize_data_if_param1_equals_1_and_param2_equals_0xffff": 1,
                    "initialize_data_if_param1_is_1_and_param2_is_0xffff": 2,
                    "initialize_data_if_parameters_match": 1,
                    "initialize_if_condition": 1,
                    "initialize_if_flag_set": 1,
                    "initialize_if_param1_is_1_and_param2_is_0xffff": 1,
                    "initialize_if_parameter_one_is_one_and_parameter_two_is_ffff": 1,
                    "initialize_special_data": 1,
                    "initialize_specific_data": 2
                },
                "initialize_data_08005c1c": {
                    "initialize_data": 3,
                    "initialize_data_implementation": 1
                },
                "param_1": {
                    "check_value": 1,
                    "comparison_value_1": 1,
                    "condition1": 1,
                    "condition_1": 8,
                    "condition_check_param": 1,
                    "condition_passed": 1,
                    "flag": 2,
                    "flag1": 1,
                    "flag_1": 1,
                    "flag_param": 1,
                    "input_1": 1,
                    "input_param_1": 1,
                    "input_value_1": 1,
                    "is_condition_met": 1,
                    "is_first_parameter_one": 1,
                    "is_param1_1": 2,
                    "is_param1_equal_to_1": 1,
                    "is_param1_one": 1,
                    "is_param_1_set": 1,
                    "param1": 1,
                    "parameter_one": 1,
                    "value_1": 1
                },
                "param_2": {
                    "comparison_value": 2,
                    "comparison_value_2": 1,
                    "condition2": 1,
                    "condition_2": 8,
                    "flag2": 1,
                    "flag_2": 1,
                    "input_2": 1,
                    "input_param_2": 1,
                    "input_value_2": 1,
                    "is_param2_0xffff": 2,
                    "is_param2_equal_to_0xffff": 1,
                    "is_param2_max_unsigned": 1,
                    "is_param_2_maximum": 1,
                    "is_second_parameter_max_value": 1,
                    "param2": 1,
                    "parameter_two": 1,
                    "parameter_value": 1,
                    "value": 2,
                    "value_2": 1,
                    "value_check_param": 1,
                    "value_param": 1
                }
            },
            "called": [
                "FUN_08005c1c"
            ],
            "calling": [],
            "code": "\nvoid initialize_data_if_condition_met_08005c38(int condition_1,int condition_2)\n\n{\n  if ((condition_1 == 1) && (condition_2 == 0xffff)) {\n    initialize_data(&DAT_200004b0,0,0,0,0);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_data_if_condition_met_08005c38",
            "entrypoint": "0x08005c38",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005c38": "initialize_data_if_condition_met_08005c38",
                "initialize_data_08005c1c": "initialize_data",
                "param_1": "condition_1",
                "param_2": "condition_2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005c96": {
            "additional_data": {
                "FUN_08005c96": {
                    "execute_function": 2,
                    "find_end_of_string_and_call": 3,
                    "find_end_of_string_and_call_function": 1,
                    "find_string_end_and_call_function": 1,
                    "process_and_execute_function": 1,
                    "process_data": 2,
                    "process_input": 1,
                    "process_string": 19
                },
                "find_end_of_string_08000178": {
                    "find_end_of_string": 12
                },
                "param_1": {
                    "array": 5,
                    "array_pointer": 1,
                    "array_ptr": 3,
                    "data_ptr": 3,
                    "input_array": 6,
                    "input_array_ptr": 1,
                    "input_ptr": 1,
                    "ptr_array": 1,
                    "string_array": 3,
                    "string_data": 1,
                    "string_pointer": 2,
                    "string_ptr": 4
                },
                "param_2": {
                    "array_length": 11,
                    "array_size": 3,
                    "data_length": 1,
                    "data_size": 1,
                    "input_array_size": 1,
                    "input_length": 1,
                    "input_size": 1,
                    "length": 1,
                    "size": 1,
                    "string_length": 9,
                    "string_size": 1
                },
                "param_3": {
                    "arg1": 1,
                    "arg3": 1,
                    "arg_1": 1,
                    "argument_3": 1,
                    "first_param": 1,
                    "param1": 1,
                    "param_3": 10,
                    "param_a": 1,
                    "parameter_3": 1,
                    "some_value": 1,
                    "start_of_string": 1,
                    "start_point": 1,
                    "start_position": 1,
                    "string_end": 2,
                    "unimportant_param": 1,
                    "unused": 1,
                    "var3": 1,
                    "var_3": 1
                },
                "param_4": {
                    "additional_param": 3,
                    "another_param": 1,
                    "another_value": 1,
                    "arg2": 1,
                    "arg4": 1,
                    "arg_2": 1,
                    "argument_4": 1,
                    "callback_function": 1,
                    "end_point": 1,
                    "end_position": 1,
                    "extra_param": 1,
                    "other_param": 1,
                    "param2": 1,
                    "param_4": 10,
                    "param_b": 1,
                    "parameter_4": 1,
                    "second_param": 1,
                    "unused": 1,
                    "var4": 1,
                    "var_4": 1
                },
                "return_value": {
                    "result": 1
                },
                "uVar1": {
                    "end_of_string": 20,
                    "end_of_string_address": 1,
                    "end_of_string_index": 2,
                    "end_of_string_pos": 2,
                    "string_end": 1
                }
            },
            "called": [
                "FUN_08000178"
            ],
            "calling": [
                "FUN_08005da8",
                "FUN_08000bcc",
                "FUN_08000cd0",
                "FUN_08005cd4"
            ],
            "code": "\nundefined4 process_string_08005c96(int *input_array,int array_length,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined4 end_of_string;\n  \n  if (array_length != 0) {\n    end_of_string = find_end_of_string(array_length);\n    end_of_string = (**(code **)(*input_array + 4))(input_array,array_length,end_of_string,*(code **)(*input_array + 4),param_4);\n    return end_of_string;\n  }\n  return 0;\n}\n\n",
            "current_name": "process_string_08005c96",
            "entrypoint": "0x08005c96",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005c96": "process_string_08005c96",
                "find_end_of_string_08000178": "find_end_of_string",
                "param_1": "input_array",
                "param_2": "array_length",
                "uVar1": "end_of_string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005cb6": {
            "additional_data": {
                "FUN_08005cb6": {
                    "execute_code": 6,
                    "execute_function": 25
                },
                "param_1": {
                    "arg1": 1,
                    "code_pointer": 1,
                    "function_pointer": 22,
                    "function_ptr": 6
                }
            },
            "called": [],
            "calling": [
                "FUN_08005d42",
                "FUN_08005da8"
            ],
            "code": "\nvoid execute_function_08005cb6(undefined4 *function_pointer)\n\n{\n  (**(code **)*function_pointer)();\n  return;\n}\n\n",
            "current_name": "execute_function_08005cb6",
            "entrypoint": "0x08005cb6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005cb6": "execute_function_08005cb6",
                "param_1": "function_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005cc0": {
            "additional_data": {
                "2": {
                    "constant": 1,
                    "num_args": 1
                },
                "DAT_0800786c": {
                    "callback_function": 1
                },
                "FUN_08005cc0": {
                    "execute_callback": 8,
                    "execute_code": 1,
                    "execute_function": 19,
                    "execute_function_with_callback": 1,
                    "initialize_function": 1,
                    "invoke_callback": 1
                },
                "PTR_0800786c": {
                    "callback_function_pointer": 1
                },
                "param_1": {
                    "callback": 1,
                    "callback_array": 1,
                    "callback_func": 1,
                    "callback_function": 2,
                    "callback_handler": 1,
                    "callback_ptr": 3,
                    "function_pointer": 19,
                    "function_ptr": 2,
                    "input_pointer": 1
                },
                "param_2": {
                    "arg1": 14,
                    "argument1": 1,
                    "argument_1": 1,
                    "data1": 1,
                    "data_1": 1,
                    "data_ptr": 1,
                    "param1": 1,
                    "param2": 2,
                    "param_2": 2,
                    "parameter1": 1,
                    "unused_param": 1,
                    "unused_param1": 1
                },
                "param_3": {
                    "arg1": 1,
                    "arg2": 14,
                    "argument2": 1,
                    "argument_2": 1,
                    "data2": 1,
                    "data_2": 1,
                    "param2": 1,
                    "param3": 2,
                    "param_3": 2,
                    "unused_param": 1,
                    "unused_param2": 1
                },
                "param_4": {
                    "additional_parameter": 1,
                    "arg": 1,
                    "arg2": 1,
                    "arg3": 12,
                    "argument3": 1,
                    "argument_3": 1,
                    "callback": 1,
                    "callback_data": 1,
                    "callback_function": 1,
                    "callback_param": 1,
                    "data3": 1,
                    "data_argument": 1,
                    "param3": 1,
                    "param4": 2,
                    "param_4": 2,
                    "parameter2": 1,
                    "unused_param3": 1,
                    "user_data": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005f40",
                "FUN_08005cd4"
            ],
            "code": "\nvoid execute_function_with_callback_08005cc0(int *function_pointer,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  (**(code **)(*function_pointer + 4))(function_pointer,&DAT_0800786c,2,*(code **)(*function_pointer + 4),arg3);\n  return;\n}\n\n",
            "current_name": "execute_function_with_callback_08005cc0",
            "entrypoint": "0x08005cc0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005cc0": "execute_function_with_callback_08005cc0",
                "param_1": "function_pointer",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005cd4": {
            "additional_data": {
                "FUN_08005cd4": {
                    "add_string_and_execute": 2,
                    "calculate_combined_result": 1,
                    "calculate_result": 2,
                    "calculate_sum": 13,
                    "calculate_sum_of_results": 1,
                    "calculate_sum_of_values": 1,
                    "calculate_thing": 1,
                    "calculate_total": 8,
                    "sum_of_results": 1,
                    "sum_string_and_execute_callback": 1
                },
                "iVar1": {
                    "processed_string_value": 1,
                    "processed_value": 1,
                    "result1": 2,
                    "string_process_result": 2,
                    "string_processing_result": 13,
                    "string_result": 12
                },
                "iVar2": {
                    "callback_execution_result": 4,
                    "callback_result": 10,
                    "executed_function_value": 1,
                    "executed_value": 1,
                    "execution_result": 1,
                    "function_execution_result": 7,
                    "function_result": 5,
                    "result2": 2
                },
                "param_1": {
                    "callback_param": 1,
                    "input": 1,
                    "input_param": 8,
                    "input_parameter": 2,
                    "input_value": 19
                }
            },
            "called": [
                "FUN_08005c96",
                "FUN_08005cc0"
            ],
            "calling": [
                "FUN_08000cd0"
            ],
            "code": "\nint calculate_sum_of_values_08005cd4(undefined4 input_value)\n\n{\n  int string_processing_result;\n  int callback_result;\n  \n  string_processing_result = process_string_08005c96();\n  callback_result = execute_function_with_callback_08005cc0(input_value);\n  return callback_result + string_processing_result;\n}\n\n",
            "current_name": "calculate_sum_of_values_08005cd4",
            "entrypoint": "0x08005cd4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005cd4": "calculate_sum_of_values_08005cd4",
                "iVar1": "string_processing_result",
                "iVar2": "callback_result",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005ce8": {
            "additional_data": {
                "FUN_08005ce8": {
                    "convert_base": 6,
                    "convert_base_to_string": 1,
                    "convert_decimal_to_base": 7,
                    "convert_decimal_to_base_n": 1,
                    "convert_int_to_base": 1,
                    "convert_number_base": 2,
                    "convert_number_to_base": 2,
                    "convert_number_to_string": 2,
                    "convert_to_base": 9
                },
                "cVar1": {
                    "char_value": 2,
                    "converted_char": 2,
                    "converted_digit": 3,
                    "digit": 5,
                    "digit_character": 1,
                    "temp_char": 1
                },
                "local_15": {
                    "buffer": 6,
                    "conversion_buffer": 1,
                    "converted_array": 1,
                    "converted_digits": 1,
                    "converted_num": 2,
                    "converted_number": 7,
                    "converted_string": 2,
                    "converted_value": 1,
                    "digits": 1,
                    "output": 2,
                    "result_buffer": 1,
                    "result_str": 1,
                    "result_string": 2,
                    "temp_arr": 1,
                    "temp_str": 1,
                    "temp_string": 1
                },
                "param_1": {
                    "array": 7,
                    "array_pointer": 1,
                    "array_ptr": 1,
                    "base_address": 1,
                    "input": 7,
                    "input_arr": 1,
                    "input_array": 4,
                    "input_num_ptr": 1,
                    "input_ptr": 1,
                    "input_string": 1,
                    "output_buffer": 1,
                    "output_ptr": 1,
                    "result": 4
                },
                "param_2": {
                    "decimal_number": 7,
                    "decimal_value": 2,
                    "input_num": 3,
                    "number": 18,
                    "value": 1
                },
                "param_3": {
                    "base": 31
                },
                "pcVar5": {
                    "buffer": 1,
                    "buffer_ptr": 1,
                    "converted_num_ptr": 1,
                    "converted_number": 1,
                    "converted_str": 1,
                    "converted_string": 1,
                    "current_char": 2,
                    "current_digit": 4,
                    "output": 2,
                    "output_arr": 1,
                    "output_array": 1,
                    "output_ptr": 1,
                    "output_str": 1,
                    "ptr": 2,
                    "result_ptr": 1,
                    "result_string": 1,
                    "string_ptr": 1
                },
                "uVar2": {
                    "converted": 1,
                    "output": 1,
                    "result": 16,
                    "return_value": 4
                },
                "uVar3": {
                    "digit": 1,
                    "remainder": 21
                },
                "uVar4": {
                    "quotient": 22
                }
            },
            "called": [
                "FUN_08000178"
            ],
            "calling": [
                "FUN_08005d42",
                "FUN_08005d8a"
            ],
            "code": "\nundefined4 convert_decimal_to_base_n_08005ce8(int *array,uint number,uint base)\n\n{\n  char digit;\n  undefined4 result;\n  uint remainder;\n  uint quotient;\n  char *current_digit;\n  char converted_number [9];\n  \n  converted_number[1] = 0;\n  if ((int)base < 2) {\n    base = 10;\n  }\n  current_digit = converted_number + 1;\n  do {\n    quotient = number / base;\n    remainder = (number & 0xff) - (quotient * base & 0xff) & 0xff;\n    current_digit = current_digit + -1;\n    digit = (char)remainder;\n    if (remainder < 10) {\n      digit = digit + '0';\n    }\n    else {\n      digit = digit + '7';\n    }\n    *current_digit = digit;\n    number = quotient;\n  } while (quotient != 0);\n  if (current_digit == (char *)0x0) {\n    result = 0;\n  }\n  else {\n    result = find_end_of_string_08000178(current_digit);\n    result = (**(code **)(*array + 4))(array,current_digit,result);\n  }\n  return result;\n}\n\n",
            "current_name": "convert_decimal_to_base_n_08005ce8",
            "entrypoint": "0x08005ce8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005ce8": "convert_decimal_to_base_n_08005ce8",
                "cVar1": "digit",
                "local_15": "converted_number",
                "param_1": "array",
                "param_2": "number",
                "param_3": "base",
                "pcVar5": "current_digit",
                "uVar2": "result",
                "uVar3": "remainder",
                "uVar4": "quotient"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005d42": {
            "additional_data": {
                "FUN_08005d42": {
                    "convert_and_execute": 4,
                    "convert_base": 4,
                    "convert_decimal_or_base_n": 1,
                    "convert_decimal_to_base_n": 1,
                    "convert_num_to_other_base": 1,
                    "convert_number": 3,
                    "convert_number_base": 3,
                    "convert_number_to_base": 3,
                    "convert_param_to_base": 1,
                    "convert_param_to_base_n": 1,
                    "convert_to_base": 5,
                    "convert_to_base_n": 3
                },
                "convert_decimal_to_base_n_08005ce8": {
                    "convert_number_to_base_n": 1
                },
                "execute_function_08005cb6": {
                    "execute_function": 1
                },
                "iVar1": {
                    "result": 29,
                    "result_1": 1
                },
                "iVar2": {
                    "aux": 1,
                    "converted_value": 1,
                    "multiplier": 1,
                    "negation_result": 1,
                    "negative_offset": 2,
                    "negative_result": 19,
                    "negative_sign": 1,
                    "offset": 1,
                    "result_2": 1,
                    "temp": 2
                },
                "param_1": {
                    "array": 6,
                    "array_ptr": 2,
                    "buffer": 1,
                    "data": 2,
                    "data_array": 1,
                    "data_ptr": 2,
                    "function_ptr": 5,
                    "input_array": 2,
                    "input_data": 3,
                    "input_ptr": 3,
                    "output": 1,
                    "param_array": 1,
                    "pointer": 1
                },
                "param_2": {
                    "decimal_num": 1,
                    "decimal_number": 1,
                    "input": 1,
                    "input_value": 1,
                    "num": 3,
                    "number": 17,
                    "value": 6
                },
                "param_3": {
                    "base": 28,
                    "base_num": 1,
                    "base_number": 1
                }
            },
            "called": [
                "FUN_08005cb6",
                "FUN_08005ce8"
            ],
            "calling": [
                "FUN_08005d82"
            ],
            "code": "\nint convert_number_to_base_08005d42(undefined4 *array,uint number,uint base)\n\n{\n  int result;\n  int negative_result;\n  \n  if (base == 0) {\n    result = (**(code **)*array)(array,number & 0xff);\n    return result;\n  }\n  if (base != 10) {\n    result = convert_number_to_base_08005d42_n(array,number,base & 0xff);\n    return result;\n  }\n  if (-1 < (int)number) {\n    result = convert_number_to_base_08005d42_n(array,number,10);\n    return result;\n  }\n  result = execute_function(array,0x2d);\n  negative_result = convert_number_to_base_08005d42_n(array,-number,10);\n  return negative_result + result;\n}\n\n",
            "current_name": "convert_number_to_base_08005d42",
            "entrypoint": "0x08005d42",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005d42": "convert_number_to_base_08005d42",
                "convert_decimal_to_base_n_08005ce8": "convert_number_to_base_n",
                "execute_function_08005cb6": "execute_function",
                "iVar1": "result",
                "iVar2": "negative_result",
                "param_1": "array",
                "param_2": "number",
                "param_3": "base"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005d82": {
            "additional_data": {
                "DAT_08005d42": {
                    "number_to_convert": 1
                },
                "FUN_08005d82": {
                    "convert_and_return_base": 1,
                    "convert_number_to_base": 28,
                    "convert_numbers_to_base": 1,
                    "convert_to_base": 1
                },
                "convert_number_to_base_08005d42": {
                    "convert_number": 1,
                    "convert_number_to_base": 17,
                    "convert_number_to_base_helper": 2,
                    "extract_number_from_binary": 1,
                    "helper_convert_number": 1,
                    "number_to_base_conversion": 1,
                    "number_to_base_converter": 1,
                    "original_function_name": 1,
                    "original_number": 2,
                    "original_to_base_conversion": 1,
                    "perform_conversion": 1
                }
            },
            "called": [
                "FUN_08005d42"
            ],
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0"
            ],
            "code": "\nvoid convert_number_to_base_08005d82(void)\n\n{\n  convert_number_to_base_08005d82();\n  return;\n}\n\n",
            "current_name": "convert_number_to_base_08005d82",
            "entrypoint": "0x08005d82",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005d82": "convert_number_to_base_08005d82",
                "convert_number_to_base_08005d42": "convert_number_to_base"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005d8a": {
            "additional_data": {
                "0xff": {
                    "mask": 1,
                    "mod_value": 1
                },
                "1": {
                    "zero": 1
                },
                "DAT_": {
                    "unchanged": 1
                },
                "FUN_08005d8a": {
                    "convert_and_call": 1,
                    "convert_and_call_function": 2,
                    "convert_and_execute": 1,
                    "convert_base": 2,
                    "convert_base_or_call": 1,
                    "convert_decimal_or_call": 2,
                    "convert_decimal_or_call_function": 1,
                    "convert_decimal_or_execute": 1,
                    "convert_decimal_or_execute_function": 1,
                    "convert_decimal_or_invoke_func": 1,
                    "convert_decimal_or_invoke_function": 1,
                    "convert_decimal_to_base_n": 2,
                    "convert_number_to_base": 4,
                    "convert_or_call": 2,
                    "convert_or_execute": 3,
                    "convert_or_execute_based_on_condition": 1,
                    "convert_to_base_n": 2,
                    "convert_to_base_n_or_call": 1,
                    "convert_to_base_n_or_execute": 1,
                    "decimal_to_base_n": 1
                },
                "PTR_": {
                    "unchanged": 1
                },
                "code": {
                    "function_ptr": 2
                },
                "convert_decimal_to_base_n_08005ce8": {
                    "convert_decimal_to_base": 1,
                    "convert_decimal_to_base_n": 7,
                    "convert_number": 1,
                    "convert_to_base": 1,
                    "convert_to_base_n": 1
                },
                "original_variable_name_1": {
                    "converted_data": 1
                },
                "original_variable_name_2": {
                    "converted_size": 1
                },
                "original_variable_name_3": {
                    "converted_base": 1
                },
                "param_1": {
                    "callback_function": 1,
                    "data": 1,
                    "function": 2,
                    "function_or_data": 1,
                    "function_or_value": 1,
                    "function_pointer": 9,
                    "function_pointers": 1,
                    "function_ptr": 6,
                    "function_ptr_param": 1,
                    "output": 1,
                    "output_buffer": 2,
                    "output_func_ptr": 1,
                    "output_function": 1,
                    "output_handler": 1,
                    "parameter": 1,
                    "result_callback": 1
                },
                "param_2": {
                    "argument_1": 1,
                    "input_data": 1,
                    "input_num": 1,
                    "input_number": 1,
                    "input_param": 1,
                    "input_val": 1,
                    "input_value": 7,
                    "input_value1": 1,
                    "input_value_1": 1,
                    "number": 3,
                    "size": 1,
                    "value": 4,
                    "value1": 2,
                    "value_1": 6
                },
                "param_3": {
                    "argument_2": 1,
                    "base": 13,
                    "base_value": 4,
                    "flag": 1,
                    "flag_param": 1,
                    "input_value2": 1,
                    "input_value_2": 1,
                    "output_base": 1,
                    "value2": 2,
                    "value_2": 6
                },
                "param_4": {
                    "additional_param": 4,
                    "argument_3": 1,
                    "callback": 2,
                    "callback_data": 1,
                    "callback_function": 1,
                    "code": 1,
                    "extra_param": 6,
                    "input_value3": 1,
                    "input_value_3": 1,
                    "param": 2,
                    "param4": 1,
                    "param_4": 2,
                    "value3": 2,
                    "value_3": 6
                }
            },
            "called": [
                "FUN_08005ce8"
            ],
            "calling": [
                "FUN_08005da8"
            ],
            "code": "\nvoid convert_number_to_base_08005d8a(undefined4 *function_pointer,uint input_value,uint base,undefined4 extra_param)\n\n{\n  if (base != 0) {\n    convert_decimal_to_base_n(function_pointer,input_value,base & 0xff);\n    return;\n  }\n  (**(function_ptr **)*function_pointer)(function_pointer,input_value & 0xff,0,*(function_ptr **)*function_pointer,extra_param);\n  return;\n}\n\n",
            "current_name": "convert_number_to_base_08005d8a",
            "entrypoint": "0x08005d8a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005d8a": "convert_number_to_base_08005d8a",
                "code": "function_ptr",
                "convert_decimal_to_base_n_08005ce8": "convert_decimal_to_base_n",
                "param_1": "function_pointer",
                "param_2": "input_value",
                "param_3": "base",
                "param_4": "extra_param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005da8": {
            "additional_data": {
                "FUN_08005da8": {
                    "check_and_process_string": 1,
                    "process_and_validate_input": 1,
                    "process_binary_data": 1,
                    "process_data": 9,
                    "process_input": 5,
                    "process_parameter_and_calculate_result": 1,
                    "process_parameters": 2,
                    "process_parameters_and_calculate_result": 1,
                    "process_parameters_and_strings": 1,
                    "process_valid_parameters": 4,
                    "validate_and_process_input": 3
                },
                "bVar4": {
                    "byte_value": 1,
                    "byte_var": 2,
                    "byte_var1": 1,
                    "count": 1,
                    "counter": 11,
                    "index": 3,
                    "iteration_count": 2,
                    "loop_count": 1,
                    "loop_counter": 5,
                    "loop_index": 2,
                    "temp3": 1,
                    "temp_var_3": 1
                },
                "bit_shift_and_concat_0800042c": {
                    "bit_shift_and_concat": 1
                },
                "calculate_float_value_0800074c": {
                    "calculate_float_value": 1
                },
                "calculate_result_08000194": {
                    "calculate_result": 1
                },
                "calculate_result_080004f8": {
                    "calculate_result2": 1
                },
                "calculate_shifted_value_08000aa8": {
                    "calculate_shifted_value": 1
                },
                "calculate_unsigned_long_long_08000190": {
                    "calculate_unsigned_long_long": 1
                },
                "check_if_cy_is_null_080009dc": {
                    "check_c_yis_null": 1
                },
                "check_valid_parameters_08000a2c": {
                    "check_valid_parameters": 1
                },
                "convert_number_to_base_08005d82": {
                    "convert_number_to_base2": 1
                },
                "convert_number_to_base_08005d8a": {
                    "convert_number_to_base": 1,
                    "convert_value_to_base": 1
                },
                "execute_function_08005cb6": {
                    "execute_function": 1
                },
                "iVar1": {
                    "error_code": 1,
                    "is_valid": 1,
                    "is_valid_parameters1": 1,
                    "result": 26,
                    "valid_parameters_result": 1,
                    "validation_result": 1
                },
                "iVar3": {
                    "contribution": 1,
                    "conversion_result": 4,
                    "convert_result": 1,
                    "other_result": 1,
                    "result1": 1,
                    "string_length": 1,
                    "string_result": 1,
                    "temp1": 1,
                    "temp2": 9,
                    "temp_result": 2,
                    "temp_var2": 4,
                    "temp_var_2": 3,
                    "temp_variable_2": 2
                },
                "is_end_of_input_valid_08000a18": {
                    "is_end_of_input_valid": 1
                },
                "param_1": {
                    "arg1": 3,
                    "data1": 1,
                    "input1": 2,
                    "input_1": 3,
                    "input_buffer": 2,
                    "input_data": 4,
                    "input_param": 5,
                    "input_param_1": 2,
                    "input_parameter_1": 1,
                    "output_buffer": 1,
                    "param1": 5,
                    "param_1": 1,
                    "value_1": 1
                },
                "param_2": {
                    "arg2": 3,
                    "data2": 1,
                    "input2": 2,
                    "input_2": 3,
                    "input_param_2": 2,
                    "input_parameter_2": 1,
                    "output_param": 1,
                    "param2": 8,
                    "param_2": 5,
                    "param_value": 1,
                    "status_param": 1,
                    "unused_param": 2,
                    "value_2": 1
                },
                "param_3": {
                    "arg3": 3,
                    "data3": 1,
                    "input3": 1,
                    "input_3": 2,
                    "input_buffer": 1,
                    "input_param_3": 2,
                    "input_parameter_3": 1,
                    "param3": 9,
                    "param_3": 5,
                    "parameter_1": 1,
                    "start_index": 1,
                    "start_value": 1,
                    "validation_param": 1,
                    "value_3": 1,
                    "value_param": 1
                },
                "param_4": {
                    "arg4": 3,
                    "data4": 1,
                    "end_value": 1,
                    "flag": 1,
                    "input_4": 2,
                    "input_param_4": 2,
                    "input_parameter_4": 1,
                    "input_size": 1,
                    "numeric_param": 1,
                    "param4": 9,
                    "param_4": 5,
                    "parameter_2": 1,
                    "size": 1,
                    "size_param": 1,
                    "value_4": 1
                },
                "param_5": {
                    "arg5": 3,
                    "count": 1,
                    "count_param": 1,
                    "input_5": 2,
                    "input_param_5": 2,
                    "input_parameter_5": 1,
                    "length": 1,
                    "loop_counter": 1,
                    "num_iterations": 5,
                    "param5": 9,
                    "param_5": 4,
                    "value_5": 1
                },
                "process_string_08005c96": {
                    "process_string": 1
                },
                "process_string_08005c96_2": {
                    "process_string2": 1
                },
                "process_string_08005c96_3": {
                    "process_string3": 1
                },
                "reverse_bits_and_shift_0800040c": {
                    "reverse_bits_and_shift": 1
                },
                "uVar2": {
                    "calculated_result": 1,
                    "shifted_value": 2,
                    "shifted_value_2": 1,
                    "temp": 2,
                    "temp1": 9,
                    "temp2": 1,
                    "temp_value": 2,
                    "temp_var": 5,
                    "temp_var1": 1,
                    "temp_var_1": 3,
                    "temp_variable": 1,
                    "temp_variable_1": 1,
                    "value": 1
                },
                "uVar5": {
                    "float_result": 3,
                    "float_val": 1,
                    "float_val1": 1,
                    "float_value": 20,
                    "float_value1": 3,
                    "temp3": 1,
                    "temp_var_4": 1,
                    "value_1": 1
                },
                "uVar6": {
                    "bits_shifted_value": 1,
                    "bits_val": 1,
                    "bits_value": 2,
                    "float_val2": 1,
                    "float_value2": 2,
                    "result2": 1,
                    "reverse_bits_and_shift_value": 1,
                    "reverse_bits_value": 1,
                    "reverse_shifted_value": 2,
                    "reverse_value": 1,
                    "reversed_bits_and_shifted_value": 1,
                    "reversed_value": 1,
                    "shifted_value": 13,
                    "temp4": 1,
                    "temp_var_5": 1,
                    "value_2": 1
                },
                "validate_and_return_result_080009f0": {
                    "validate_and_return_result": 1
                }
            },
            "called": [
                "FUN_08000aa8",
                "FUN_08000a18",
                "FUN_0800074c",
                "FUN_08005c96",
                "FUN_08000a58",
                "FUN_080009f0",
                "FUN_08005d82",
                "FUN_080009dc",
                "FUN_08000a2c",
                "FUN_08005cb6",
                "FUN_08000194",
                "FUN_0800040c",
                "FUN_080004f8",
                "FUN_08005d8a",
                "FUN_0800042c",
                "FUN_08000190"
            ],
            "calling": [
                "FUN_08005f2c"
            ],
            "code": "\nint process_binary_data_08005da8(undefined4 param1,undefined4 param2,undefined4 param3,uint param4,byte param5)\n\n{\n  int result;\n  undefined4 temp1;\n  int temp2;\n  byte counter;\n  undefined8 float_value;\n  undefined8 shifted_value;\n  \n  result = check_valid_parameters(param3,param4,param3,param4);\n  if (result == 0) {\n    result = check_valid_parameters(param3,param4 & 0x7fffffff,0xffffffff,0x7fefffff);\n    if ((result == 0) &&\n       (result = validate_and_return_result(param3,param4 & 0x7fffffff,0xffffffff,0x7fefffff), result == 0)) {\n      result = process_string(param1,&DAT_08007860);\n    }\n    else {\n      result = is_end_of_input_valid(param3,param4,0xe0000000,0x41efffff);\n      if (result == 0) {\n        result = check_c_yis_null(param3,param4,0xe0000000,0xc1efffff);\n        if (result == 0) {\n          result = check_c_yis_null(param3,param4,0,0);\n          if (result == 0) {\n            result = 0;\n          }\n          else {\n            result = execute_function(param1,0x2d);\n            param4 = param4 + 0x80000000;\n          }\n          float_value = 0x3fe0000000000000;\n          for (counter = 0; temp1 = (undefined4)((ulonglong)float_value >> 0x20), counter < param5;\n              counter = counter + 1) {\n            float_value = calculate_float_value((int)float_value,temp1,0,0x40240000);\n          }\n          float_value = calculate_result(param3,param4,(int)float_value,temp1);\n          temp1 = calculate_shifted_value();\n          shifted_value = reverse_bits_and_shift();\n          float_value = calculate_unsigned_long_long((int)float_value,(int)((ulonglong)float_value >> 0x20),(int)shifted_value,\n                               (int)((ulonglong)shifted_value >> 0x20));\n          temp2 = convert_value_to_base(param1,temp1,10);\n          result = result + temp2;\n          if (param5 != 0) {\n            temp2 = process_string(param1,&DAT_08007868);\n            result = result + temp2;\n          }\n          while (param5 != 0) {\n            float_value = calculate_result2((int)float_value,(int)((ulonglong)float_value >> 0x20),0,0x40240000);\n            temp1 = calculate_result_08000a58();\n            temp2 = convert_number_to_base2(param1,temp1,10);\n            result = result + temp2;\n            shifted_value = bit_shift_and_concat(temp1);\n            float_value = calculate_unsigned_long_long((int)float_value,(int)((ulonglong)float_value >> 0x20),(int)shifted_value,\n                                 (int)((ulonglong)shifted_value >> 0x20));\n            param5 = param5 - 1;\n          }\n        }\n        else {\n          result = process_string(param1,&DAT_08007864);\n        }\n      }\n      else {\n        result = process_string(param1,&DAT_08007864);\n      }\n    }\n  }\n  else {\n    result = process_string(param1,&DAT_0800785c);\n  }\n  return result;\n}\n\n",
            "current_name": "process_binary_data_08005da8",
            "entrypoint": "0x08005da8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005da8": "process_binary_data_08005da8",
                "bVar4": "counter",
                "bit_shift_and_concat_0800042c": "bit_shift_and_concat",
                "calculate_float_value_0800074c": "calculate_float_value",
                "calculate_result_08000194": "calculate_result",
                "calculate_result_080004f8": "calculate_result2",
                "calculate_shifted_value_08000aa8": "calculate_shifted_value",
                "calculate_unsigned_long_long_08000190": "calculate_unsigned_long_long",
                "check_if_cy_is_null_080009dc": "check_c_yis_null",
                "check_valid_parameters_08000a2c": "check_valid_parameters",
                "convert_number_to_base_08005d82": "convert_number_to_base2",
                "convert_number_to_base_08005d8a": "convert_value_to_base",
                "execute_function_08005cb6": "execute_function",
                "iVar1": "result",
                "iVar3": "temp2",
                "is_end_of_input_valid_08000a18": "is_end_of_input_valid",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "process_string_08005c96": "process_string",
                "reverse_bits_and_shift_0800040c": "reverse_bits_and_shift",
                "uVar2": "temp1",
                "uVar5": "float_value",
                "uVar6": "shifted_value",
                "validate_and_return_result_080009f0": "validate_and_return_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005f2c": {
            "additional_data": {
                "FUN_08005f2c": {
                    "initialize_binary_data": 8,
                    "initialize_binary_data_processing": 1,
                    "initialize_binary_processing": 1,
                    "initialize_data_processing": 3,
                    "process_binary_data": 17,
                    "process_data": 1
                },
                "process_binary_data_08005da8": {
                    "extract_binary_data": 1,
                    "load_binary_data": 4,
                    "load_data": 1,
                    "original_data_processing": 1,
                    "process_binary_data": 22
                }
            },
            "called": [
                "FUN_08005da8"
            ],
            "calling": [
                "FUN_08005f40",
                "FUN_08000cd0"
            ],
            "code": "\nvoid process_binary_data_08005f2c(void)\n\n{\n  process_binary_data_08005f2c();\n  return;\n}\n\n",
            "current_name": "process_binary_data_08005f2c",
            "entrypoint": "0x08005f2c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005f2c": "process_binary_data_08005f2c",
                "process_binary_data_08005da8": "process_binary_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005f40": {
            "additional_data": {
                "FUN_08005f40": {
                    "add_values": 1,
                    "calculate_and_sum_values": 1,
                    "calculate_binary_data_sum": 3,
                    "calculate_combined_result": 1,
                    "calculate_result": 1,
                    "calculate_sum": 7,
                    "calculate_sum_of_binary_and_callback": 1,
                    "calculate_sum_of_binary_data": 1,
                    "calculate_sum_of_data": 1,
                    "calculate_total": 10,
                    "calculate_total_result": 1,
                    "combine_data_and_execute": 1,
                    "compute_result": 1,
                    "process_and_execute": 1
                },
                "iVar1": {
                    "binary_data": 7,
                    "binary_data_result": 22,
                    "binary_data_sum": 1,
                    "binary_data_total": 1
                },
                "iVar2": {
                    "callback_result": 18,
                    "execute_result": 1,
                    "function_callback_result": 1,
                    "function_result": 9,
                    "function_with_callback_result": 1,
                    "result": 1
                },
                "param_1": {
                    "callback_input": 1,
                    "data": 3,
                    "input": 3,
                    "input_data": 1,
                    "input_param": 5,
                    "input_value": 17,
                    "value": 1
                }
            },
            "called": [
                "FUN_08005cc0",
                "FUN_08005f2c"
            ],
            "calling": [
                "FUN_08000cd0"
            ],
            "code": "\nint calculate_sum_of_binary_and_callback_08005f40(undefined4 input_value)\n\n{\n  int binary_data_result;\n  int callback_result;\n  \n  binary_data_result = process_binary_data_08005f2c();\n  callback_result = execute_function_with_callback_08005cc0(input_value);\n  return callback_result + binary_data_result;\n}\n\n",
            "current_name": "calculate_sum_of_binary_and_callback_08005f40",
            "entrypoint": "0x08005f40",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005f40": "calculate_sum_of_binary_and_callback_08005f40",
                "iVar1": "binary_data_result",
                "iVar2": "callback_result",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005f5c": {
            "called": [],
            "calling": [
                "FUN_08005f6c"
            ],
            "code": "\nvoid FUNC_08005f5c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08005f5c",
            "entrypoint": "0x08005f5c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08005f5c": "FUNC_08005f5c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08005f5e": {
            "additional_data": {
                "FUN_08005f5e": {
                    "initialize_and_update_registers": 16,
                    "initialize_registers": 14,
                    "initialize_registers_and_update_values": 1
                },
                "initialize_and_update_registers_data_08001c32": {
                    "initialize_and_update_registers_data": 14,
                    "initialize_registers_data": 16
                },
                "update_register_value_08002470": {
                    "change_register_value": 1,
                    "set_register_value": 11,
                    "update_register_value": 18
                }
            },
            "called": [
                "FUN_08002470",
                "FUN_08001c32"
            ],
            "calling": [
                "FUN_08006198"
            ],
            "code": "\nvoid initialize_registers_and_update_values_08005f5e(void)\n\n{\n  update_register_value(3);\n  initialize_registers_data();\n  return;\n}\n\n",
            "current_name": "initialize_registers_and_update_values_08005f5e",
            "entrypoint": "0x08005f5e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005f5e": "initialize_registers_and_update_values_08005f5e",
                "initialize_and_update_registers_data_08001c32": "initialize_registers_data",
                "update_register_value_08002470": "update_register_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005f6c": {
            "additional_data": {
                "FUNC_08005a18": {
                    "another_function": 1,
                    "call_second_function": 1,
                    "cleanup": 5,
                    "cleanup_and_shutdown": 1,
                    "cleanup_device": 2,
                    "cleanup_function": 1,
                    "cleanup_resources": 1,
                    "execute_additional_processing": 1,
                    "execute_task": 1,
                    "finalize_processing": 1,
                    "perform_action": 1,
                    "perform_additional_processing": 5,
                    "post_process_data": 1,
                    "reinitialize_device": 1,
                    "reverse_data": 1,
                    "update_device": 2,
                    "update_device_state": 2,
                    "update_device_status": 1
                },
                "FUNC_08005f5c": {
                    "call_first_function": 1,
                    "execute_initialization": 1,
                    "initialize": 3,
                    "initialize_device": 21,
                    "initialize_device_communication": 1,
                    "perform_initialization": 1,
                    "pre_process_data": 1
                },
                "FUN_08005f6c": {
                    "continuous_data_processing": 2,
                    "execute_continuous_data_processing": 1,
                    "initialize_and_process_data": 1,
                    "initiate_data_processing": 1,
                    "main_function": 1,
                    "main_loop": 1,
                    "process_and_send_data": 1,
                    "process_data": 3,
                    "process_data_and_send_to_device": 1,
                    "process_data_continuous": 1,
                    "process_data_iteration": 1,
                    "process_data_loop": 7,
                    "process_data_on_device": 1,
                    "process_device_data": 3,
                    "run_data_processing_loop": 2,
                    "send_data_to_device": 4
                },
                "initialize_and_send_data_to_device_08000bcc": {
                    "init_and_send_data": 1,
                    "init_and_send_data_to_device": 1,
                    "initialize_and_send_data": 9,
                    "initialize_and_send_data_to_device": 7,
                    "initialize_and_send_device_data": 1,
                    "send_data_to_device": 8,
                    "send_initial_data_to_device": 4
                },
                "process_data_values_08000cd0": {
                    "process_data_values": 28,
                    "process_values": 3
                }
            },
            "called": [
                "FUN_08005f5c",
                "FUN_08000bcc",
                "FUN_08005a18",
                "FUN_08000cd0"
            ],
            "calling": [
                "entry"
            ],
            "code": "\nvoid process_data_loop_08005f6c(void)\n\n{\n  FUNC_08005f5c();\n  initialize_and_send_data();\n  do {\n    process_data_values();\n    FUNC_08005a18();\n  } while( true );\n}\n\n",
            "current_name": "process_data_loop_08005f6c",
            "entrypoint": "0x08005f6c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005f6c": "process_data_loop_08005f6c",
                "initialize_and_send_data_to_device_08000bcc": "initialize_and_send_data",
                "process_data_values_08000cd0": "process_data_values"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005f8c": {
            "additional_data": {
                "FUN_08005f8c": {
                    "calculate_binary_log": 1,
                    "count_bits": 7,
                    "count_bits_set": 4,
                    "count_set_bits": 18,
                    "count_set_bits_in_binary": 1
                },
                "cVar1": {
                    "bit_count": 28,
                    "count": 1,
                    "log_value": 1,
                    "set_bit_count": 1
                },
                "param_1": {
                    "input": 6,
                    "input_num": 1,
                    "input_number": 4,
                    "num": 9,
                    "number": 11
                }
            },
            "called": [],
            "calling": [
                "FUN_080060e4"
            ],
            "code": "\nchar count_set_bits_in_binary_08005f8c(uint number)\n\n{\n  char bit_count;\n  \n  bit_count = '\\0';\n  for (; number != 1; number = number >> 1) {\n    bit_count = bit_count + '\\x01';\n  }\n  return bit_count;\n}\n\n",
            "current_name": "count_set_bits_in_binary_08005f8c",
            "entrypoint": "0x08005f8c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005f8c": "count_set_bits_in_binary_08005f8c",
                "cVar1": "bit_count",
                "param_1": "number"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005fc8": {
            "additional_data": {
                "FUN_08005fc8": {
                    "configure_settings": 1,
                    "initialize_configuration": 1,
                    "initialize_constants": 1,
                    "initialize_data": 18,
                    "initialize_globals": 2,
                    "initialize_memory": 1,
                    "initialize_parameters": 2,
                    "initialize_params": 1,
                    "initialize_settings": 1,
                    "initialize_values": 1,
                    "set_initial_values": 2
                },
                "LAB_08005fa0_1": {
                    "buffer": 1,
                    "label": 2,
                    "label1": 2,
                    "ptr_dest": 1,
                    "temporary_label": 1,
                    "unknown_data_label": 1,
                    "unused": 1,
                    "unused3": 5,
                    "unused_3": 1,
                    "unused_label": 2,
                    "unused_variable1": 2
                },
                "condition": {
                    "condition": 2,
                    "new_condition": 1
                },
                "condition1": {
                    "condition1": 1
                },
                "condition2": {
                    "condition2": 1
                },
                "flag": {
                    "flag": 2
                },
                "initializeData": {
                    "initialize_data": 2,
                    "new_initialize_data": 1
                },
                "initializeParameters": {
                    "initialize_parameters": 1
                },
                "initializeValues": {
                    "initialize_values": 1
                },
                "initialize_data": {
                    "initialize_data": 1
                },
                "input1": {
                    "flag": 1
                },
                "input2": {
                    "value": 1
                },
                "label": {
                    "label": 1
                },
                "left_shift_by32_bits_08006112": {
                    "left_shift_by32_bits": 11,
                    "left_shift_data": 1,
                    "perform_left_shift": 7,
                    "perform_shift": 1,
                    "shift_by32_bits": 1,
                    "shift_data": 1,
                    "shift_left_by32_bits": 2,
                    "shift_values": 1
                },
                "param1": {
                    "param1": 1
                },
                "param2": {
                    "param2": 1
                },
                "param3": {
                    "ptr1": 1
                },
                "param4": {
                    "ptr2": 1
                },
                "param_1": {
                    "condition": 10,
                    "condition1": 2,
                    "flag": 13,
                    "input1": 1,
                    "input_flag": 1,
                    "is_param_one": 1,
                    "some_condition": 1,
                    "status": 2
                },
                "param_2": {
                    "condition2": 2,
                    "input2": 1,
                    "is_param_two": 1,
                    "second_param": 1,
                    "some_value": 1,
                    "value": 25
                },
                "param_3": {
                    "param1": 1,
                    "param3": 2,
                    "param_a": 1,
                    "parameter_3": 1,
                    "unknown_param": 1,
                    "unused": 2,
                    "unused1": 11,
                    "unused_1": 2,
                    "unused_param": 1,
                    "unused_param1": 3,
                    "unused_param3": 1,
                    "unused_param_1": 1,
                    "unused_parameter": 1,
                    "unused_parameter3": 1
                },
                "param_4": {
                    "param2": 1,
                    "param4": 2,
                    "param_b": 1,
                    "parameter_4": 1,
                    "some_other_value": 1,
                    "unknown_param": 1,
                    "unused": 2,
                    "unused2": 11,
                    "unused_2": 2,
                    "unused_param2": 3,
                    "unused_param4": 1,
                    "unused_param_2": 2,
                    "unused_parameter": 1,
                    "unused_parameter4": 1
                },
                "performLeftShift": {
                    "new_perform_left_shift": 1
                },
                "shiftBy32Bits": {
                    "shift_by32_bits": 1
                },
                "unusedVariable2": {
                    "unused_variable2": 2
                },
                "unused_param": {
                    "new_unused_param": 1
                },
                "unused_param_2": {
                    "new_unused_param_2": 1
                },
                "value": {
                    "new_value": 1,
                    "value": 4
                }
            },
            "called": [
                "FUN_08006112"
            ],
            "calling": [],
            "code": "\nvoid initialize_data_08005fc8(int flag,int value,undefined4 unused1,undefined4 unused2)\n\n{\n  if (flag != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    DAT_200004b8 = 6;\n    DAT_200004c4 = 0;\n    DAT_200004cc = 7;\n    DAT_200004d8 = 0;\n    DAT_200004e0 = 8;\n    DAT_200004ec = 0;\n    DAT_200004f4 = 9;\n    DAT_20000500 = 0;\n    DAT_20000508 = 10;\n    DAT_20000514 = 0;\n    DAT_2000051c = 0x17;\n    DAT_20000528 = 0;\n    DAT_20000530 = 0x17;\n    DAT_2000053c = 0;\n    DAT_20000544 = 0x17;\n    DAT_20000550 = 0;\n    DAT_20000558 = 0x17;\n    DAT_20000564 = 0;\n    DAT_2000056c = 0x17;\n    DAT_20000578 = 0;\n    DAT_20000580 = 0x28;\n    DAT_2000058c = 0;\n    DAT_20000594 = 0x28;\n    DAT_200005a0 = 0;\n    DAT_200005a8 = 0x28;\n    DAT_200005b4 = 0;\n    DAT_200005bc = 0x28;\n    DAT_200005c8 = 0;\n    DAT_200005d0 = 0x28;\n    DAT_200005dc = 0;\n    DAT_200005e4 = 0x28;\n    DAT_200005f0 = 0;\n    left_shift_by32_bits(0,&unused3,&DAT_20000000,&DAT_200004b8,unused2);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_data_08005fc8",
            "entrypoint": "0x08005fc8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005fc8": "initialize_data_08005fc8",
                "LAB_08005fa0_1": "unused3",
                "left_shift_by32_bits_08006112": "left_shift_by32_bits",
                "param_1": "flag",
                "param_2": "value",
                "param_3": "unused1",
                "param_4": "unused2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080060d4": {
            "additional_data": {
                "DAT_200004c4": {
                    "binary_array": 1,
                    "bit_data": 1,
                    "bit_results": 1,
                    "data_array": 7
                },
                "FUN_080060d4": {
                    "execute_binary_operation": 1,
                    "execute_code": 1,
                    "execute_condition_check": 1,
                    "execute_function": 2,
                    "execute_function_based_on_condition": 1,
                    "execute_function_or_execute_main": 1,
                    "execute_function_or_fallback": 1,
                    "execute_function_or_main": 2,
                    "execute_function_with_conditions": 1,
                    "execute_logic": 1,
                    "execute_next_step": 1,
                    "execute_or_continue": 2,
                    "execute_or_continue_execution": 1,
                    "execute_or_fallback": 1,
                    "execute_or_handle_function": 1,
                    "execute_or_recurse": 1,
                    "execute_or_repeat": 1,
                    "execute_or_rerun": 1,
                    "execute_or_rerun_main_function": 1,
                    "execute_or_retry": 1,
                    "execute_or_revert": 1,
                    "execute_or_skip": 2,
                    "execute_or_skip_based_on_condition": 1,
                    "execute_possible_actions": 1,
                    "execute_relevant_action": 1
                },
                "PTR_08005f8c": {
                    "count_set_bits_in_binary": 1
                },
                "PTR_08007090": {
                    "execute_main_function": 1
                },
                "count_set_bits_in_binary_08005f8c": {
                    "calculate_bit_count_in_binary": 1,
                    "count_set_bits": 7,
                    "count_set_bits_in_binary": 18
                },
                "execute_main_function_08007090": {
                    "execute_main_function": 26
                },
                "iVar1": {
                    "bit_count": 25,
                    "bits_count": 4,
                    "count": 1,
                    "set_bits_count": 1
                },
                "param_1": {
                    "action_parameter": 1,
                    "arg1": 1,
                    "config_data": 1,
                    "function_context": 1,
                    "function_parameter": 2,
                    "function_ptr": 1,
                    "input": 3,
                    "input_data": 2,
                    "input_param": 8,
                    "input_parameter": 6,
                    "input_value": 3,
                    "memory_address": 1,
                    "operation_data": 1
                }
            },
            "called": [
                "FUN_08007090"
            ],
            "calling": [
                "FUN_080060e4"
            ],
            "code": "\nvoid execute_or_rerun_main_function_080060d4(int input_param)\n\n{\n  int bit_count;\n  \n  if (*(int *)(input_param + 8) != 0) {\n    (**(code **)(input_param + 0xc))();\n    return;\n  }\n  execute_main_function();\n  bit_count = count_set_bits_in_binary();\n  if ((&DAT_200004c4)[bit_count * 5] != 0) {\n    execute_or_rerun_main_function_080060d4();\n  }\n  return;\n}\n\n",
            "current_name": "execute_or_rerun_main_function_080060d4",
            "entrypoint": "0x080060d4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080060d4": "execute_or_rerun_main_function_080060d4",
                "count_set_bits_in_binary_08005f8c": "count_set_bits_in_binary",
                "execute_main_function_08007090": "execute_main_function",
                "iVar1": "bit_count",
                "param_1": "input_param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080060e4": {
            "additional_data": {
                "DAT_200004c4": {
                    "bit_array": 2
                },
                "FUN_080060e4": {
                    "check_and_execute_main": 2,
                    "check_and_execute_main_function": 25,
                    "check_binary_bits_and_execute": 1,
                    "check_set_bits_and_execute_main": 1,
                    "execute_main_function_if_bit_is_set": 1,
                    "execute_main_function_if_bits_set": 1
                },
                "count_set_bits_in_binary_08005f8c": {
                    "count_set_bits": 4,
                    "count_set_bits_in_binary": 6,
                    "get_binary_bit_count": 2,
                    "get_bit_count": 8,
                    "get_count_of_bits_set_in_binary": 1,
                    "get_number_of_set_bits": 1,
                    "get_set_bit_count": 2,
                    "get_set_bits_count": 5
                },
                "execute_or_rerun_main_function_080060d4": {
                    "execute_main": 1,
                    "execute_main_function": 11,
                    "execute_main_function_if_not_zero": 1,
                    "execute_main_function_if_set_bit": 1,
                    "execute_main_function_if_set_bit_exists": 1,
                    "execute_main_function_if_valid": 1,
                    "execute_main_function_if_valid_bit": 1,
                    "execute_main_or_rerun": 1,
                    "execute_or_rerun_main": 1,
                    "execute_or_rerun_main_function": 5,
                    "run_main_function": 2,
                    "run_main_function_if_valid": 1
                },
                "iVar1": {
                    "bit_count": 19,
                    "bits_count": 2,
                    "bits_set_count": 1,
                    "bitset_count": 1,
                    "count": 1,
                    "num_bits_set": 1,
                    "num_set_bits": 4,
                    "set_bits_count": 2
                }
            },
            "called": [
                "FUN_080060d4",
                "FUN_08005f8c"
            ],
            "calling": [
                "FUN_0800282c"
            ],
            "code": "\nvoid check_and_execute_main_function_080060e4(void)\n\n{\n  int bit_count;\n  \n  bit_count = get_bit_count();\n  if ((&DAT_200004c4)[bit_count * 5] != 0) {\n    execute_main_function();\n  }\n  return;\n}\n\n",
            "current_name": "check_and_execute_main_function_080060e4",
            "entrypoint": "0x080060e4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080060e4": "check_and_execute_main_function_080060e4",
                "count_set_bits_in_binary_08005f8c": "get_bit_count",
                "execute_or_rerun_main_function_080060d4": "execute_main_function",
                "iVar1": "bit_count"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006112": {
            "additional_data": {
                "FUN_08006112": {
                    "left_shift": 1,
                    "left_shift_32": 1,
                    "left_shift_by32_bits": 6,
                    "left_shift_by_32_bits": 2,
                    "left_shift_param": 1,
                    "perform_left_shift": 1,
                    "shift_left_by32_bits": 9,
                    "shift_left_by_32_bits": 10
                },
                "param_1": {
                    "destination": 1,
                    "input1": 6,
                    "input_1": 5,
                    "input_param": 5,
                    "input_param1": 2,
                    "input_parameter": 1,
                    "input_parameter_1": 2,
                    "input_value": 2,
                    "source": 5,
                    "value1": 2
                },
                "param_2": {
                    "destination": 5,
                    "input2": 6,
                    "input_2": 5,
                    "input_param2": 2,
                    "input_parameter_2": 2,
                    "output_param": 2,
                    "output_parameter": 1,
                    "output_value": 1,
                    "shift_amount": 1,
                    "shift_param": 3,
                    "source": 1,
                    "value2": 2
                }
            },
            "called": [
                "FUN_08006158"
            ],
            "calling": [
                "FUN_08005fc8"
            ],
            "code": "\nvoid left_shift_by32_bits_08006112(undefined4 input1,undefined4 input2)\n\n{\n  left_shift_by32_bits_08006112_08006158(input2,input1);\n  return;\n}\n\n",
            "current_name": "left_shift_by32_bits_08006112",
            "entrypoint": "0x08006112",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006112": "left_shift_by32_bits_08006112",
                "param_1": "input1",
                "param_2": "input2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800611c": {
            "additional_data": {
                "FUN_0800611c": {
                    "assertion_failed": 2,
                    "assertion_failure": 1,
                    "decode_and_execute_assertion": 3,
                    "decode_assertion": 1,
                    "decode_assertion_error": 1,
                    "decode_assertion_failed": 1,
                    "decode_assertion_message": 1,
                    "process_and_assert": 1,
                    "process_and_decode_assertion": 1,
                    "process_and_decode_assertion_failed": 1,
                    "process_and_execute_assertion": 1,
                    "process_assert": 1,
                    "process_assert_error": 1,
                    "process_assertion": 8,
                    "process_assertion_failed": 2,
                    "process_assertion_failure": 1,
                    "process_error_and_execute_function": 1,
                    "process_failed_assertion": 3
                },
                "execute_binary_function_08006ac0": {
                    "execute_function": 1
                },
                "param_1": {
                    "assertion": 1,
                    "assertion_message": 3,
                    "condition": 1,
                    "error_message": 1,
                    "error_msg": 1,
                    "file": 10,
                    "file_name": 12,
                    "file_path": 1,
                    "input_file_name": 1
                },
                "param_2": {
                    "assertion_file": 3,
                    "file": 2,
                    "file_name": 2,
                    "input_line_number": 1,
                    "line": 9,
                    "line_num": 1,
                    "line_number": 13
                },
                "param_3": {
                    "assertion": 7,
                    "assertion_condition": 1,
                    "assertion_line": 2,
                    "assertion_message": 9,
                    "condition": 1,
                    "error_message": 2,
                    "failed_assertion": 2,
                    "function": 1,
                    "function_name": 2,
                    "line_number": 1,
                    "message": 3
                },
                "param_4": {
                    "additional_info": 4,
                    "additional_message": 3,
                    "assertion_condition": 1,
                    "assertion_extra": 1,
                    "assertion_function": 1,
                    "assertion_line": 1,
                    "details": 1,
                    "extra_info": 3,
                    "function": 5,
                    "function_name": 8,
                    "line": 2,
                    "line_number": 1
                },
                "pcVar2": {
                    "additional_info": 6,
                    "additional_message": 4,
                    "additional_text": 2,
                    "constant_string": 1,
                    "delimiter": 3,
                    "extra_message": 3,
                    "extra_string": 1,
                    "function_description": 1,
                    "function_msg": 1,
                    "function_string": 1,
                    "message": 3,
                    "message_part": 1,
                    "message_suffix": 2,
                    "prefix": 1,
                    "suffix": 1
                },
                "process_and_decode_input_data_08006174": {
                    "print_formatted_message": 1
                },
                "uVar1": {
                    "assertion": 3,
                    "assertion_code_pointer": 1,
                    "assertion_constant": 1,
                    "assertion_failed": 1,
                    "assertion_flag": 1,
                    "assertion_message": 1,
                    "current_function": 1,
                    "data": 1,
                    "data_buffer": 1,
                    "data_offset": 1,
                    "data_ptr": 1,
                    "decoded_assertion_message": 1,
                    "error_flag": 1,
                    "file_address": 1,
                    "file_descriptor": 2,
                    "file_ptr": 2,
                    "file_start_address": 1,
                    "function": 1,
                    "function_address": 1,
                    "function_ptr": 2,
                    "line_count": 1,
                    "line_number": 2,
                    "module_address": 1,
                    "ptr": 1,
                    "user_data": 1
                },
                "uVar3": {
                    "binary_result": 1,
                    "execute_result": 1,
                    "execution_result": 7,
                    "function_result": 5,
                    "result": 17
                },
                "uVar4": {
                    "additional_info_2": 1,
                    "additional_message_copy": 1,
                    "assertion_condition_copy": 1,
                    "assertion_param_4": 1,
                    "details_copy": 1,
                    "explanation": 1,
                    "extra_info": 1,
                    "extra_info_cpy": 1,
                    "extra_info_ptr": 1,
                    "extra_param": 1,
                    "format_specifier": 1,
                    "func_var": 1,
                    "function_args": 1,
                    "function_argument": 1,
                    "function_description": 1,
                    "function_identifier": 1,
                    "function_name": 2,
                    "function_name_param": 1,
                    "function_param": 1,
                    "info": 2,
                    "original_function_name": 1,
                    "param4": 1,
                    "param_4": 2,
                    "param_4_copy": 1,
                    "ptr2": 1,
                    "temp": 1
                }
            },
            "called": [
                "FUN_08006174",
                "FUN_08006ac0"
            ],
            "calling": [
                "FUN_08005a68"
            ],
            "code": "\nvoid process_and_decode_assertion_failed_0800611c(undefined4 file_name,undefined4 line_number,char *assertion_message,undefined4 function_name)\n\n{\n  undefined4 assertion;\n  char *additional_info;\n  undefined8 result;\n  undefined4 info;\n  \n  assertion = *(undefined4 *)(DAT_200000f8 + 0xc);\n  info = function_name;\n  if (assertion_message == (char *)0x0) goto LAB_08006140;\n  additional_info = \", function: \";\n  do {\n    print_formatted_message(assertion,\"assertion \\\"%s\\\" failed: file \\\"%s\\\", line %d%s%s\\n\",function_name,file_name,line_number\n                 ,additional_info,assertion_message,info);\n    result = execute_function();\n    line_number = (undefined4)((ulonglong)result >> 0x20);\n    assertion = (undefined4)result;\nLAB_08006140:\n    assertion_message = \"\";\n    additional_info = assertion_message;\n  } while( true );\n}\n\n",
            "current_name": "process_and_decode_assertion_failed_0800611c",
            "entrypoint": "0x0800611c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800611c": "process_and_decode_assertion_failed_0800611c",
                "execute_binary_function_08006ac0": "execute_function",
                "param_1": "file_name",
                "param_2": "line_number",
                "param_3": "assertion_message",
                "param_4": "function_name",
                "pcVar2": "additional_info",
                "process_and_decode_input_data_08006174": "print_formatted_message",
                "uVar1": "assertion",
                "uVar3": "result",
                "uVar4": "info"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006158": {
            "additional_data": {
                "FUN_08006158": {
                    "left_shift64_bits": 2,
                    "left_shift_by32_bits": 1,
                    "left_shift_logical64_bits": 1,
                    "left_shift_long": 1,
                    "left_shift_param2": 1,
                    "left_shift_param_to_long_long": 1,
                    "left_shift_param_to_longlong": 1,
                    "left_shift_uint64": 2,
                    "left_shift_uint_to_long_long": 1,
                    "left_shift_unsigned_long": 1,
                    "multiply_and_shift": 1,
                    "shift_left64_bits": 1,
                    "shift_left_by32": 1,
                    "shift_left_by32_bits": 4,
                    "shift_param2_to_longlong": 1,
                    "shift_param_left_by32": 2,
                    "shift_parameter_left": 1,
                    "shift_parameter_to_long_long": 1,
                    "shift_u_int64_left": 1,
                    "shift_u_int64_to_high_bits": 1,
                    "shift_unsigned_int_to_long_long": 1,
                    "shift_unsigned_long_long": 2,
                    "shift_unsigned_long_long_by32_bits": 1,
                    "shift_value": 1
                },
                "param_1": {
                    "arg1": 1,
                    "bits_to_shift": 1,
                    "dummy_value": 1,
                    "flags": 3,
                    "input": 4,
                    "input_offset": 1,
                    "input_parameter": 1,
                    "input_value": 1,
                    "instruction": 1,
                    "num": 1,
                    "num_bits": 1,
                    "old_parameter": 1,
                    "param": 5,
                    "param1": 2,
                    "param_flags": 1,
                    "param_ptr": 1,
                    "param_size": 1,
                    "param_unsigned_integer": 1,
                    "unused_param": 1,
                    "unused_parameter": 1,
                    "value1": 1
                },
                "param_2": {
                    "arg2": 1,
                    "bits": 1,
                    "input": 1,
                    "input_uint": 1,
                    "input_value": 8,
                    "input_value_to_shift": 1,
                    "number": 1,
                    "param2": 3,
                    "param_unsigned_long_long": 1,
                    "shifted_value": 2,
                    "value": 9,
                    "value2": 1,
                    "value_to_shift": 1
                },
                "param_7": {
                    "num_bits_shifted": 1
                },
                "param_8": {
                    "shifted_value": 1
                },
                "ulonglong": {
                    "result": 1,
                    "unsigned_long_long": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08006112"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08006160) */\n\nlonglong left_shift_by32_bits_08006158(undefined4 param,uint value)\n\n{\n  return (result)value << 0x20;\n}\n\n",
            "current_name": "left_shift_by32_bits_08006158",
            "entrypoint": "0x08006158",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006158": "left_shift_by32_bits_08006158",
                "param_1": "param",
                "param_2": "value",
                "ulonglong": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006174": {
            "additional_data": {
                "FUN_08006174": {
                    "decode_and_process": 1,
                    "decode_and_process_data": 1,
                    "decode_and_process_input": 3,
                    "decode_and_process_input_data": 5,
                    "process_and_decode_input_data": 1,
                    "process_input": 1,
                    "process_input_data": 19
                },
                "param_1": {
                    "data": 1,
                    "data_1": 3,
                    "data_ptr": 1,
                    "input_1": 2,
                    "input_buffer": 1,
                    "input_data": 5,
                    "input_data1": 1,
                    "input_data_1": 3,
                    "input_data_ptr": 2,
                    "input_param": 4,
                    "input_param1": 3,
                    "input_param_1": 3,
                    "input_parameter1": 1,
                    "input_parameter_1": 1
                },
                "param_2": {
                    "config_param": 1,
                    "data_2": 3,
                    "data_length": 1,
                    "data_size": 2,
                    "input_2": 2,
                    "input_data2": 1,
                    "input_data_2": 3,
                    "input_length": 2,
                    "input_param2": 3,
                    "input_param_2": 3,
                    "input_parameter2": 1,
                    "input_parameter_2": 1,
                    "length": 2,
                    "output_data": 1,
                    "output_data_ptr": 1,
                    "output_param": 3,
                    "size": 1
                },
                "param_3": {
                    "additional_data_1": 1,
                    "arg_3": 1,
                    "data_1": 2,
                    "data_param": 1,
                    "data_param_1": 1,
                    "decode_output": 1,
                    "decode_param": 1,
                    "decoded_data": 1,
                    "decoded_data1": 1,
                    "decoded_data_1": 2,
                    "decoded_param": 2,
                    "extra_param_1": 1,
                    "input": 1,
                    "input_1": 1,
                    "input_data_3": 1,
                    "input_param3": 1,
                    "input_parameter3": 1,
                    "output_param1": 1,
                    "output_ptr": 1,
                    "param_3": 1,
                    "pointer_1": 1,
                    "stack_param1": 1,
                    "stack_param_1": 2,
                    "stack_var1": 1,
                    "temp_1": 1,
                    "temp_param": 1,
                    "temp_var1": 1
                },
                "param_4": {
                    "additional_data_2": 1,
                    "arg_4": 1,
                    "buffer_param": 1,
                    "data_2": 2,
                    "data_param_2": 1,
                    "decode_output_length": 1,
                    "decoded_data2": 1,
                    "decoded_data_2": 2,
                    "extra_param_2": 1,
                    "input_2": 1,
                    "input_data_4": 1,
                    "input_param4": 1,
                    "input_parameter4": 1,
                    "output": 1,
                    "output_data": 1,
                    "output_param2": 1,
                    "output_size": 1,
                    "param_4": 1,
                    "pointer_2": 1,
                    "process_param": 1,
                    "processed_param": 2,
                    "stack_param2": 1,
                    "stack_param_2": 2,
                    "stack_var2": 1,
                    "temp_2": 1,
                    "temp_param_2": 1,
                    "temp_var2": 1
                },
                "uStack_4": {
                    "buffer_stack": 1,
                    "data_4": 1,
                    "decoded_data_2": 3,
                    "decoded_data_4": 1,
                    "decoded_data_length": 1,
                    "decoded_data_pointer2": 1,
                    "decoded_data_temp_2": 1,
                    "decoded_result": 1,
                    "output_data": 1,
                    "process_arg": 1,
                    "processed_data": 1,
                    "processed_input_data": 1,
                    "processed_value": 1,
                    "stack_param_4": 1,
                    "stack_var4": 1,
                    "temp": 1,
                    "temp_4": 1,
                    "temp_stack_param2": 1,
                    "temp_var_2": 1,
                    "unused_variable": 1
                },
                "uStack_8": {
                    "data_3": 1,
                    "data_stack": 1,
                    "decode_arg": 1,
                    "decoded_data": 3,
                    "decoded_data_1": 3,
                    "decoded_data_3": 1,
                    "decoded_data_pointer": 1,
                    "decoded_data_ptr": 1,
                    "decoded_data_temp": 1,
                    "decoded_input_data": 1,
                    "decoded_value": 1,
                    "input_data": 1,
                    "processed_input": 1,
                    "stack_param_3": 1,
                    "stack_var3": 1,
                    "temp_3": 1,
                    "temp_stack_param1": 1,
                    "temp_var": 1
                }
            },
            "called": [
                "FUN_08006394"
            ],
            "calling": [
                "FUN_0800611c"
            ],
            "code": "\nvoid process_and_decode_input_data_08006174(undefined4 input_data,undefined4 input_data_2,undefined4 decoded_data_1,undefined4 stack_param_2)\n\n{\n  undefined4 decoded_data_1;\n  undefined4 decoded_data_2;\n  \n  decoded_data_1 = decoded_data_1;\n  decoded_data_2 = stack_param_2;\n  decode_and_process_input_data_08006394(DAT_200000f8,input_data,input_data_2,&decoded_data_1,input_data,&decoded_data_1);\n  return;\n}\n\n",
            "current_name": "process_and_decode_input_data_08006174",
            "entrypoint": "0x08006174",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006174": "process_and_decode_input_data_08006174",
                "param_1": "input_data",
                "param_2": "input_data_2",
                "param_3": "decoded_data_1",
                "param_4": "stack_param_2",
                "uStack_4": "decoded_data_2",
                "uStack_8": "decoded_data_1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006198": {
            "additional_data": {
                "FUNC_08007328": {
                    "cleanup_function": 1,
                    "finalize_execution": 1,
                    "perform_cleanup": 1
                },
                "FUN_08006198": {
                    "execute_callbacks": 2,
                    "execute_code_blocks": 1,
                    "execute_function_array": 1,
                    "execute_function_list": 1,
                    "execute_function_sequence": 1,
                    "execute_function_set": 1,
                    "execute_functions": 23,
                    "execute_functions_within_range": 1
                },
                "iVar1": {
                    "counter": 2,
                    "index": 27,
                    "iteration_index": 2
                }
            },
            "called": [
                "FUN_08007328",
                "FUN_08005f5e"
            ],
            "calling": [
                "entry"
            ],
            "code": "\nvoid execute_functions_within_range_08006198(void)\n\n{\n  int index;\n  \n  for (index = 0; index != 0; index = index + 1) {\n    (*(code *)(&DAT_08007944)[index])();\n  }\n  FUNC_08007328();\n  for (index = 0; index != 10; index = index + 1) {\n    (*(code *)(&DAT_08007944)[index])();\n  }\n  return;\n}\n\n",
            "current_name": "execute_functions_within_range_08006198",
            "entrypoint": "0x08006198",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006198": "execute_functions_within_range_08006198",
                "iVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080061e0": {
            "additional_data": {
                "FUN_080061e0": {
                    "fill_memory": 17,
                    "fill_memory_with": 2,
                    "fill_memory_with_byte": 1,
                    "fill_with": 1,
                    "fill_with_value": 1,
                    "initialize_memory": 4,
                    "memset": 2,
                    "memset_array": 1,
                    "set_memory": 2
                },
                "param_1": {
                    "array": 3,
                    "dest": 5,
                    "destination": 9,
                    "memory": 8,
                    "memory_block": 1,
                    "memory_pointer": 1,
                    "memory_start": 3
                },
                "param_2": {
                    "initial_value": 2,
                    "value": 28
                },
                "param_3": {
                    "length": 9,
                    "num_bytes": 3,
                    "num_elements": 1,
                    "size": 17
                },
                "puVar1": {
                    "end": 2,
                    "end_address": 4,
                    "end_memory": 1,
                    "end_of_dest": 1,
                    "end_of_destination": 1,
                    "end_of_memory": 1,
                    "end_pointer": 1,
                    "end_ptr": 5,
                    "memory_end": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_08006c40",
                "FUN_08004a4c",
                "FUN_08006d14",
                "FUN_08006c88"
            ],
            "code": "\nvoid fill_memory_with_byte_080061e0(undefined *destination,undefined value,int size)\n\n{\n  undefined *end_ptr;\n  \n  end_ptr = destination + size;\n  for (; destination != end_ptr; destination = destination + 1) {\n    *destination = value;\n  }\n  return;\n}\n\n",
            "current_name": "fill_memory_with_byte_080061e0",
            "entrypoint": "0x080061e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080061e0": "fill_memory_with_byte_080061e0",
                "param_1": "destination",
                "param_2": "value",
                "param_3": "size",
                "puVar1": "end_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080061f0": {
            "additional_data": {
                "DAT_200005f8": {
                    "data_ptr": 1
                },
                "FUNC_08006eac": {
                    "some_other_function": 1
                },
                "FUN_080061f0": {
                    "extract_and_update_data": 1,
                    "handle_param": 1,
                    "process_data": 9,
                    "process_function": 1,
                    "rearrange_data": 1,
                    "reorder_linked_list": 1,
                    "reverse_and_update_list": 1,
                    "update_data": 2,
                    "update_data_array": 1,
                    "update_data_list": 1,
                    "update_data_structure": 1,
                    "update_linked_list": 5,
                    "update_pointer_list": 1,
                    "update_var_pointers": 1,
                    "updated_function": 1
                },
                "extraout_r1": {
                    "extra_out": 2,
                    "extra_out_var": 1,
                    "extra_output": 6,
                    "extra_output1": 1,
                    "extra_output_ptr": 1,
                    "extra_output_r1": 1,
                    "extra_pointer": 1,
                    "extra_result": 1,
                    "extraout": 1,
                    "ptr1": 1,
                    "temp": 2,
                    "temp1": 6,
                    "temp_ptr": 1,
                    "temp_ptr1": 2
                },
                "param_1": {
                    "data_list": 1,
                    "list": 1,
                    "list_head": 1,
                    "output": 9,
                    "output_array": 1,
                    "output_list": 3,
                    "output_ptr": 4,
                    "pointer": 1,
                    "pointer_list": 1,
                    "result": 7,
                    "result_ptr": 1,
                    "updated_param": 1
                },
                "param_2": {
                    "array_length": 1,
                    "count": 1,
                    "data_size": 2,
                    "input_length": 2,
                    "input_list_length": 1,
                    "input_size": 1,
                    "length": 2,
                    "list_size": 3,
                    "num_elements": 1,
                    "num_nodes": 1,
                    "size": 16
                },
                "param_3": {
                    "arg1": 2,
                    "arg3": 4,
                    "input1": 2,
                    "input_3": 1,
                    "param3": 10,
                    "param_3": 9,
                    "param_a": 1,
                    "value1": 2
                },
                "param_4": {
                    "arg2": 2,
                    "arg4": 4,
                    "input2": 2,
                    "input_4": 1,
                    "param4": 10,
                    "param_4": 9,
                    "param_b": 1,
                    "value2": 2
                },
                "piVar3": {
                    "pointer_var3": 1,
                    "temp": 3,
                    "temp3": 1,
                    "temp4": 6,
                    "temp_pointer": 3,
                    "temp_ptr": 1,
                    "temp_ptr_3": 1,
                    "temp_value": 2,
                    "temp_var": 8,
                    "temp_var1": 1,
                    "temp_var3": 1,
                    "temp_var_1": 1,
                    "var1": 1,
                    "var3": 1
                },
                "ppiVar1": {
                    "current": 2,
                    "current_item": 1,
                    "current_node": 5,
                    "current_pointer": 2,
                    "current_ptr": 1,
                    "first_pointer": 1,
                    "pointer_var1": 1,
                    "previous": 1,
                    "ptr1": 1,
                    "ptr2": 1,
                    "temp1": 1,
                    "temp2": 6,
                    "temp_pointer1": 1,
                    "temp_ptr2": 2,
                    "temp_ptr_1": 4,
                    "temp_var1": 1
                },
                "ppiVar2": {
                    "current": 1,
                    "current_ptr": 1,
                    "next": 1,
                    "next_node": 5,
                    "next_pointer": 2,
                    "next_ptr": 1,
                    "pointer_var2": 1,
                    "ptr2": 1,
                    "second_pointer": 1,
                    "temp": 1,
                    "temp2": 1,
                    "temp3": 6,
                    "temp_pointer2": 1,
                    "temp_ptr": 1,
                    "temp_ptr3": 2,
                    "temp_ptr_2": 4,
                    "temp_var2": 1
                },
                "ppiVar4": {
                    "pointer_var4": 1,
                    "prev": 1,
                    "prev_curr": 1,
                    "prev_item": 1,
                    "prev_node": 3,
                    "prev_ptr": 1,
                    "previous": 1,
                    "previous_node": 2,
                    "previous_pointer": 2,
                    "ptr3": 1,
                    "ptr4": 1,
                    "temp4": 1,
                    "temp5": 6,
                    "temp_pointer4": 1,
                    "temp_ptr4": 2,
                    "temp_ptr_3": 3,
                    "temp_ptr_4": 1,
                    "temp_var4": 1,
                    "third_pointer": 1
                },
                "ppiVar5": {
                    "current_ptr": 1,
                    "data_array_ptr": 1,
                    "fourth_pointer": 1,
                    "list_ptr": 1,
                    "new_item": 1,
                    "new_node": 7,
                    "new_pointer": 1,
                    "next_curr": 1,
                    "pointer_var5": 1,
                    "ptr4": 1,
                    "ptr5": 1,
                    "temp5": 1,
                    "temp6": 6,
                    "temp_pointer5": 1,
                    "temp_ptr5": 1,
                    "temp_ptr_4": 2,
                    "temp_var5": 1,
                    "updated_data_structure": 1,
                    "updated_pointer": 1
                }
            },
            "called": [
                "FUN_08006eae",
                "FUN_08006eac"
            ],
            "calling": [
                "FUN_080069e4",
                "FUN_08006ac0"
            ],
            "code": "\nvoid process_data_080061f0(undefined4 *output,int size,undefined4 param3,undefined4 param4)\n\n{\n  int **extra_output;\n  int **temp2;\n  int **temp3;\n  int *temp_var;\n  int **temp5;\n  int **new_node;\n  \n  if (size == 0) {\n    return;\n  }\n  new_node = (int **)(size + -4);\n  if (*(int *)(size + -4) < 0) {\n    new_node = (int **)((int)new_node + *(int *)(size + -4));\n  }\n  FUNC_08006eac();\n  temp3 = (int **)&DAT_200005f8;\n  if (DAT_200005f8 == (int **)0x0) {\n    new_node[1] = (int *)0x0;\n    temp2 = extra_output;\n    DAT_200005f8 = new_node;\n  }\n  else {\n    temp3 = DAT_200005f8;\n    if (new_node < DAT_200005f8) {\n      temp2 = (int **)*new_node;\n      temp3 = (int **)((int)new_node + (int)temp2);\n      if (DAT_200005f8 == temp3) {\n        temp_var = *DAT_200005f8;\n        DAT_200005f8 = (int **)DAT_200005f8[1];\n        temp3 = (int **)((int)temp_var + (int)temp2);\n        *new_node = (int *)temp3;\n      }\n      new_node[1] = (int *)DAT_200005f8;\n      DAT_200005f8 = new_node;\n    }\n    else {\n      do {\n        temp5 = temp3;\n        temp3 = (int **)temp5[1];\n        if (temp3 == (int **)0x0) break;\n      } while (temp3 <= new_node);\n      temp2 = (int **)*temp5;\n      if ((int **)((int)temp5 + (int)temp2) == new_node) {\n        temp2 = (int **)((int)temp2 + (int)*new_node);\n        *temp5 = (int *)temp2;\n        if (temp3 == (int **)((int)temp5 + (int)temp2)) {\n          temp_var = *temp3;\n          temp3 = (int **)temp3[1];\n          temp2 = (int **)((int)temp2 + (int)temp_var);\n          *temp5 = (int *)temp2;\n          temp5[1] = (int *)temp3;\n        }\n      }\n      else if (new_node < (int **)((int)temp5 + (int)temp2)) {\n        *output = 0xc;\n      }\n      else {\n        temp2 = (int **)((int)new_node + (int)*new_node);\n        if (temp3 == temp2) {\n          temp_var = *temp3;\n          temp3 = (int **)temp3[1];\n          temp2 = (int **)((int)temp_var + (int)*new_node);\n          *new_node = (int *)temp2;\n        }\n        new_node[1] = (int *)temp3;\n        temp5[1] = (int *)new_node;\n      }\n    }\n  }\n  FUNC_08006eae(output,temp2,temp3,param4);\n  return;\n}\n\n",
            "current_name": "process_data_080061f0",
            "entrypoint": "0x080061f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080061f0": "process_data_080061f0",
                "extraout_r1": "extra_output",
                "param_1": "output",
                "param_2": "size",
                "param_3": "param3",
                "param_4": "param4",
                "piVar3": "temp_var",
                "ppiVar1": "temp2",
                "ppiVar2": "temp3",
                "ppiVar4": "temp5",
                "ppiVar5": "new_node"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006288": {
            "additional_data": {
                "DAT_200005f8": {
                    "first_block": 3,
                    "first_block_ptr": 1
                },
                "DAT_200005fc": {
                    "initialized_ptr": 1,
                    "is_initialized": 1,
                    "memory_block_initialized": 1,
                    "memory_initialized": 1
                },
                "FUN_08006288": {
                    "allocate_and_initialize_memory": 1,
                    "allocate_and_initialize_memory_block": 1,
                    "allocate_memory": 6,
                    "allocate_memory_block": 22,
                    "memory_allocation_function": 1
                },
                "iVar2": {
                    "block_size": 2,
                    "block_size_difference": 1,
                    "difference": 11,
                    "offset": 8,
                    "remaining_size": 5,
                    "remaining_space": 4
                },
                "initialize_memory_block_pointer_08006920": {
                    "initialize_block_pointer": 2
                },
                "param_1": {
                    "block_address": 1,
                    "block_pointer": 1,
                    "dest_ptr": 1,
                    "error_code": 1,
                    "mem_block_ptr": 1,
                    "memory_block_ptr": 1,
                    "memory_pointer": 1,
                    "out_buffer": 1,
                    "output_pointer": 3,
                    "output_ptr": 5,
                    "result": 12,
                    "result_ptr": 1
                },
                "param_2": {
                    "block_size": 3,
                    "input_size": 1,
                    "requested_size": 3,
                    "required_size": 3,
                    "size": 21
                },
                "puVar1": {
                    "current": 2,
                    "current_block": 24,
                    "current_block_ptr": 2,
                    "next_block": 1,
                    "prev_block": 2
                },
                "puVar3": {
                    "current_block": 3,
                    "next": 1,
                    "next_block": 13,
                    "next_block_ptr": 2,
                    "previous": 1,
                    "previous_block": 10,
                    "temp_block": 1
                },
                "puVar5": {
                    "last_block": 2,
                    "new_block": 4,
                    "next_block": 2,
                    "prev_block": 2,
                    "previous": 1,
                    "previous_block": 15,
                    "previous_block_next": 2,
                    "previous_block_ptr": 2,
                    "previous_previous": 1
                },
                "uVar4": {
                    "block_diff": 4,
                    "block_difference": 7,
                    "block_size": 2,
                    "block_size_diff": 1,
                    "block_size_difference": 3,
                    "difference": 7,
                    "free_space": 1,
                    "offset_diff": 1,
                    "remaining": 1,
                    "remaining_size": 1,
                    "remaining_space_diff": 1,
                    "size_diff": 1,
                    "temp": 1
                },
                "uVar6": {
                    "adjusted_size": 3,
                    "aligned_size": 6,
                    "allocated_size": 14,
                    "block_offset": 1,
                    "block_size": 1,
                    "block_size_aligned": 1,
                    "new_block_size": 3,
                    "requested_size": 1,
                    "requested_size_padded": 1
                }
            },
            "called": [
                "FUN_08006eae",
                "FUN_08006920",
                "FUN_08006eac"
            ],
            "calling": [
                "FUN_08006e10",
                "FUN_08006c88"
            ],
            "code": "\nuint allocate_and_initialize_memory_block_08006288(undefined4 *result,uint size)\n\n{\n  uint *current_block;\n  int difference;\n  uint *next_block;\n  uint block_difference;\n  uint *previous_block;\n  uint allocated_size;\n  \n  allocated_size = (size + 3 & 0xfffffffc) + 8;\n  if (allocated_size < 0xc) {\n    allocated_size = 0xc;\n  }\n  if (((int)allocated_size < 0) || (allocated_size < size)) {\n    *result = 0xc;\n  }\n  else {\n    FUNC_08006eac();\n    current_block = DAT_200005f8;\n    previous_block = DAT_200005f8;\n    while (next_block = current_block, next_block != (uint *)0x0) {\n      block_difference = *next_block - allocated_size;\n      if (-1 < (int)block_difference) {\n        if (block_difference < 0xc) {\n          if (previous_block == next_block) {\n            current_block = (uint *)previous_block[1];\n            DAT_200005f8 = current_block;\n          }\n          else {\n            current_block = (uint *)next_block[1];\n          }\n          if (previous_block != next_block) {\n            previous_block[1] = (uint)current_block;\n            previous_block = next_block;\n          }\n        }\n        else {\n          *next_block = block_difference;\n          *(uint *)((int)next_block + block_difference) = allocated_size;\n          previous_block = (uint *)((int)next_block + block_difference);\n        }\n        goto LAB_080062ec;\n      }\n      previous_block = next_block;\n      current_block = (uint *)next_block[1];\n    }\n    if (DAT_200005fc == 0) {\n      DAT_200005fc = initialize_block_pointer(result);\n    }\n    current_block = (uint *)initialize_block_pointer(result,allocated_size);\n    if ((current_block != (uint *)0xffffffff) &&\n       ((previous_block = (uint *)((int)current_block + 3U & 0xfffffffc), current_block == previous_block ||\n        (difference = initialize_block_pointer(result,(int)previous_block - (int)current_block), difference != -1)))) {\n      *previous_block = allocated_size;\nLAB_080062ec:\n      FUNC_08006eae(result);\n      allocated_size = (int)previous_block + 0xbU & 0xfffffff8;\n      difference = allocated_size - (int)(previous_block + 1);\n      if (difference != 0) {\n        *(int *)((int)previous_block + difference) = -difference;\n        return allocated_size;\n      }\n      return allocated_size;\n    }\n    *result = 0xc;\n    FUNC_08006eae(result);\n  }\n  return 0;\n}\n\n",
            "current_name": "allocate_and_initialize_memory_block_08006288",
            "entrypoint": "0x08006288",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006288": "allocate_and_initialize_memory_block_08006288",
                "iVar2": "difference",
                "initialize_memory_block_pointer_08006920": "initialize_block_pointer",
                "param_1": "result",
                "param_2": "size",
                "puVar1": "current_block",
                "puVar3": "next_block",
                "puVar5": "previous_block",
                "uVar4": "block_difference",
                "uVar6": "allocated_size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006344": {
            "additional_data": {
                "DAT_080078e4": {
                    "dat_080078e4": 1,
                    "data_3": 2
                },
                "DAT_08007904": {
                    "dat_08007904": 1,
                    "data_1": 2
                },
                "DAT_08007924": {
                    "dat_08007924": 1,
                    "data_2": 2
                },
                "FUN_08006344": {
                    "perform_action": 1,
                    "process_and_initialize_byte": 1,
                    "process_byte": 5,
                    "process_byte_data": 1,
                    "process_data": 4,
                    "process_input": 16,
                    "process_input_byte": 2,
                    "process_input_data": 1
                },
                "PBVAR3": {
                    "pbvar3": 1
                },
                "PTR_FUN_08006344": {
                    "initialize_memory_blocks": 1
                },
                "iVar1": {
                    "data_difference": 1,
                    "data_index": 1,
                    "index": 4,
                    "int_value": 1,
                    "memory_offset": 1,
                    "result": 6,
                    "return_value": 1,
                    "temp_int": 1,
                    "temp_var": 5,
                    "temp_var1": 5,
                    "temp_var_1": 1
                },
                "initialize_memory_blocks_08006cb4": {
                    "initialize_memory_blocks": 5
                },
                "param_1": {
                    "arg1": 4,
                    "data_1": 1,
                    "data_ptr": 2,
                    "data_struct": 1,
                    "data_structure": 2,
                    "input1": 1,
                    "input_data": 5,
                    "input_num": 1,
                    "input_param": 3,
                    "input_parameter": 1,
                    "int_val": 1,
                    "memory_block": 1,
                    "memory_info": 1,
                    "memory_manager": 1,
                    "memory_param": 1,
                    "param": 1,
                    "param1": 3,
                    "param_int": 1
                },
                "param_2": {
                    "arg2": 2,
                    "byte_val": 4,
                    "byte_value": 11,
                    "input2": 1,
                    "input_byte": 11,
                    "param2": 1,
                    "param_byte": 1
                },
                "param_3": {
                    "arg3": 2,
                    "byte_arr": 1,
                    "byte_array": 4,
                    "byte_array_ptr": 1,
                    "byte_ptr_ptr": 3,
                    "data_array": 2,
                    "data_buffer": 1,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "input_buffer": 3,
                    "input_bytes_ptr": 1,
                    "input_data": 4,
                    "input_list": 1,
                    "input_params": 1,
                    "input_ptr": 1,
                    "input_ptr_ptr": 1,
                    "param3": 1,
                    "param_byte_ptr_ptr": 1
                },
                "pbVar2": {
                    "arr_ptr": 1,
                    "array_end_ptr": 1,
                    "array_pointer": 1,
                    "buffer_ptr": 1,
                    "byte_ptr": 1,
                    "byte_ptr1": 1,
                    "byte_ptr_1": 1,
                    "current_byte": 1,
                    "current_byte_ptr": 1,
                    "data_ptr": 1,
                    "input_byte_ptr": 1,
                    "last_byte": 2,
                    "last_byte_ptr": 1,
                    "last_char": 1,
                    "last_element": 1,
                    "ptr1": 5,
                    "ptr_var1": 1,
                    "target_byte": 1,
                    "temp_byte_1": 1,
                    "temp_ptr": 1,
                    "temp_var2": 5,
                    "temp_var_2": 1
                },
                "pbVar3": {
                    "buffer_to_write": 1,
                    "byte_ptr": 1,
                    "byte_ptr2": 1,
                    "byte_ptr_2": 1,
                    "data": 1,
                    "data_byte": 1,
                    "data_pointer": 2,
                    "data_ptr": 2,
                    "data_ptr2": 1,
                    "pb_var3": 2,
                    "ptr2": 5,
                    "ptr_var2": 1,
                    "second_ptr": 1,
                    "source_byte": 1,
                    "temp_byte_2": 1,
                    "temp_ptr": 1,
                    "temp_var3": 5,
                    "temp_var_3": 1,
                    "ushort_byte_ptr": 1,
                    "ushort_ptr": 1
                },
                "process_and_initialize_data_080069e4": {
                    "process_and_initialize_data": 5
                },
                "process_data_08006be0": {
                    "process_data": 5
                },
                "uVar4": {
                    "converted_input": 1,
                    "input_byte_as_uint": 1,
                    "output": 1,
                    "output_byte": 1,
                    "output_uint": 1,
                    "output_value": 1,
                    "output_var": 2,
                    "result": 12,
                    "result_byte": 1,
                    "result_value": 1,
                    "return_val": 2,
                    "return_value": 6,
                    "uint_val": 1
                }
            },
            "called": [
                "FUN_080069e4",
                "FUN_08006cb4",
                "FUN_08006be0"
            ],
            "calling": [
                "FUN_08006370"
            ],
            "code": "\nuint process_input_byte_08006344(int input_data,byte input_byte,byte **byte_array)\n\n{\n  int result;\n  byte *temp_var2;\n  byte *temp_var3;\n  uint result;\n  \n  temp_var2 = byte_array[2] + -1;\n  byte_array[2] = temp_var2;\n  if ((-1 < (int)temp_var2) ||\n     (((int)byte_array[6] <= (int)temp_var2 && (temp_var2 = (byte *)(uint)input_byte, temp_var2 != (byte *)0xa))))\n  {\n    temp_var2 = *byte_array;\n    *byte_array = temp_var2 + 1;\n    *temp_var2 = input_byte;\n    return (uint)input_byte;\n  }\n  if ((input_data != 0) && (*(int *)(input_data + 0x18) == 0)) {\n    initialize_memory_blocks();\n  }\n  if (byte_array == (byte **)&DAT_08007904) {\n    byte_array = *(byte ***)(input_data + 4);\n  }\n  else if (byte_array == (byte **)&DAT_08007924) {\n    byte_array = *(byte ***)(input_data + 8);\n  }\n  else if (byte_array == (byte **)&DAT_080078e4) {\n    byte_array = *(byte ***)(input_data + 0xc);\n  }\n  byte_array[2] = byte_array[6];\n  temp_var3 = (byte *)(uint)*(ushort *)(byte_array + 3);\n  result = (int)temp_var3 << 0x1c;\n  if (((result < 0) && (temp_var3 = byte_array[4], temp_var3 != (byte *)0x0)) ||\n     (result = process_and_initialize_data(input_data,byte_array,result,temp_var3,temp_var2), result == 0)) {\n    result = (uint)input_byte;\n    result = (int)*byte_array - (int)byte_array[4];\n    if ((result < (int)byte_array[5]) || (result = process_data(input_data,byte_array), result == 0)) {\n      byte_array[2] = byte_array[2] + -1;\n      temp_var2 = *byte_array;\n      *byte_array = temp_var2 + 1;\n      *temp_var2 = input_byte;\n      if ((byte *)(result + 1) != byte_array[5]) {\n        if (-1 < (int)((uint)*(ushort *)(byte_array + 3) << 0x1f)) {\n          return result;\n        }\n        if (result != 10) {\n          return result;\n        }\n      }\n      result = process_data(input_data,byte_array);\n      if (result == 0) {\n        return result;\n      }\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "process_input_byte_08006344",
            "entrypoint": "0x08006344",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006344": "process_input_byte_08006344",
                "iVar1": "result",
                "initialize_memory_blocks_08006cb4": "initialize_memory_blocks",
                "param_1": "input_data",
                "param_2": "input_byte",
                "param_3": "byte_array",
                "pbVar2": "temp_var2",
                "pbVar3": "temp_var3",
                "process_and_initialize_data_080069e4": "process_and_initialize_data",
                "process_data_08006be0": "process_data",
                "uVar4": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006370": {
            "additional_data": {
                "FUN_08006370": {
                    "process_and_count_bytes": 4,
                    "process_and_count_input_bytes": 2,
                    "process_and_increment": 4,
                    "process_and_return_result": 1,
                    "process_byte_input": 1,
                    "process_bytes": 1,
                    "process_data": 2,
                    "process_input": 10,
                    "process_input_and_return": 1,
                    "process_input_and_return_result": 1,
                    "process_input_bytes": 1,
                    "process_input_data": 3
                },
                "iVar1": {
                    "byte_counter": 1,
                    "processed_bytes": 1,
                    "result": 28,
                    "return_value": 1
                },
                "iVar3": {
                    "current": 1,
                    "current_byte": 2,
                    "current_byte_count": 1,
                    "current_idx": 1,
                    "current_index": 2,
                    "current_input_index": 1,
                    "current_iteration": 1,
                    "current_len": 1,
                    "current_length": 7,
                    "current_position": 2,
                    "current_size": 2,
                    "data_index": 1,
                    "initial_byte_count": 1,
                    "initial_count": 1,
                    "initial_data_length": 1,
                    "remaining_length": 4,
                    "remaining_size": 2
                },
                "param_1": {
                    "arg1": 8,
                    "argument1": 1,
                    "data1": 1,
                    "input": 2,
                    "input1": 8,
                    "input_1": 3,
                    "input_byte": 1,
                    "input_flag": 1,
                    "input_param": 1,
                    "input_param1": 1,
                    "input_parameter1": 1,
                    "input_pointer": 1,
                    "input_value_1": 1,
                    "value_1": 1
                },
                "param_2": {
                    "arg2": 8,
                    "argument2": 1,
                    "data2": 1,
                    "input2": 8,
                    "input_2": 3,
                    "input_param2": 1,
                    "input_parameter2": 1,
                    "input_value_2": 1,
                    "output": 2,
                    "output_flag": 1,
                    "output_param": 1,
                    "output_pointer": 1,
                    "param": 1,
                    "value_2": 1
                },
                "param_3": {
                    "byte_array": 1,
                    "data": 3,
                    "data_ptr": 1,
                    "input_arr": 1,
                    "input_array": 4,
                    "input_buffer": 4,
                    "input_bytes": 3,
                    "input_data": 13,
                    "ptr_data": 1
                },
                "param_4": {
                    "arr_length": 1,
                    "array_length": 3,
                    "buffer_length": 1,
                    "buffer_size": 3,
                    "byte_count": 3,
                    "count": 1,
                    "data_length": 5,
                    "data_size": 1,
                    "input_length": 7,
                    "input_size": 1,
                    "length": 4,
                    "num_bytes": 1
                },
                "puVar2": {
                    "buffer_end": 1,
                    "byte_end": 1,
                    "end": 2,
                    "end_byte": 2,
                    "end_of_array": 3,
                    "end_of_buffer": 3,
                    "end_of_bytes": 1,
                    "end_of_data": 3,
                    "end_of_input": 3,
                    "end_of_input_data": 1,
                    "end_pointer": 2,
                    "end_position": 1,
                    "end_ptr": 7,
                    "ptr_end": 1
                }
            },
            "called": [
                "FUN_08006344"
            ],
            "calling": [
                "FUN_08006394"
            ],
            "code": "\nint process_input_data_08006370(undefined4 input1,undefined4 input2,undefined *input_data,int input_length)\n\n{\n  int result;\n  undefined *end_ptr;\n  int current_length;\n  \n  end_ptr = input_data + input_length;\n  current_length = input_length;\n  do {\n    if (input_data == end_ptr) {\n      return 0;\n    }\n    result = process_input_byte_08006344(input1,*input_data,input2,input_length,current_length);\n    input_length = result + 1;\n    input_data = input_data + 1;\n  } while (input_length != 0);\n  return result;\n}\n\n",
            "current_name": "process_input_data_08006370",
            "entrypoint": "0x08006370",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006370": "process_input_data_08006370",
                "iVar1": "result",
                "iVar3": "current_length",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input_data",
                "param_4": "input_length",
                "puVar2": "end_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006394": {
            "additional_data": {
                "FUN_08006394": {
                    "decode_and_process_data": 1,
                    "decode_and_process_input_data": 1,
                    "process_and_decode_data": 1,
                    "process_binary_data": 1,
                    "process_data": 14,
                    "process_input": 4,
                    "process_input_data": 6,
                    "process_reverse_data": 1
                },
                "F_UN_IMPROVE": {
                    "decode_and_process_data": 1
                },
                "bVar3": {
                    "bool_var": 1,
                    "condition": 1,
                    "flag": 2,
                    "found": 1,
                    "found_char": 1,
                    "found_digit": 4,
                    "found_num": 1,
                    "found_number": 2,
                    "has_digits": 1,
                    "is_digit": 4,
                    "is_number": 4,
                    "is_numeric": 5,
                    "is_true": 3,
                    "is_valid": 1
                },
                "decode_and_process_data_080066b0": {
                    "decode_and_process_data": 1
                },
                "find_character_in_string_08006e90": {
                    "find_character_in_string": 1
                },
                "iVar1": {
                    "init_result": 1,
                    "process_result": 1,
                    "result": 24,
                    "result_code": 1,
                    "return_value": 4
                },
                "iVar6": {
                    "flag": 1,
                    "index": 2,
                    "int_value": 1,
                    "loop_counter": 1,
                    "loop_var": 1,
                    "temp": 3,
                    "temp_counter": 1,
                    "temp_value": 2,
                    "temp_var": 6,
                    "temp_var2": 1,
                    "temp_variable": 3,
                    "temp_variable_1": 1,
                    "value": 4,
                    "var1": 2,
                    "var2": 1,
                    "variable1": 1
                },
                "initialize_memory_blocks_08006cb4": {
                    "initialize_memory_blocks": 1
                },
                "local_30": {
                    "alignment": 1,
                    "alignment_adjustment": 1,
                    "const4": 1,
                    "constant4": 1,
                    "flag4": 3,
                    "length": 1,
                    "length_modifier": 1,
                    "local30": 1,
                    "local_var10": 1,
                    "padding": 1,
                    "padding_flag": 1,
                    "temp_3": 1,
                    "temp_var_3": 1,
                    "temporary_storage": 1,
                    "undefined_var5": 1,
                    "unused": 1,
                    "unused2": 1,
                    "unused_var": 1,
                    "unused_variable2": 2,
                    "value_4": 1,
                    "var11": 1,
                    "var4": 1,
                    "var_30": 1,
                    "variable5": 1,
                    "zero_flag": 1
                },
                "local_45": {
                    "alignment_flag": 1,
                    "alternative_flag": 1,
                    "byte_variable4": 1,
                    "const3": 1,
                    "constant3": 1,
                    "flag3": 3,
                    "flag_3": 1,
                    "flag_char": 1,
                    "format_char": 1,
                    "format_specifier_char": 1,
                    "local_var9": 1,
                    "pad_character": 1,
                    "plus_or_space_option": 1,
                    "prefix": 1,
                    "separator": 1,
                    "sign_char": 1,
                    "sign_character": 1,
                    "undefined_var4": 1,
                    "value_3": 1,
                    "var10": 1,
                    "var3": 1,
                    "var45": 1,
                    "var_45": 1,
                    "zero_flag": 3
                },
                "local_6e": {
                    "byte_variable3": 1,
                    "char_plus": 1,
                    "const2": 1,
                    "constant2": 2,
                    "end_character": 1,
                    "flag2": 3,
                    "flag_2": 1,
                    "local_var8": 1,
                    "mask2": 1,
                    "plus_char": 2,
                    "plus_flag": 7,
                    "temp_2": 1,
                    "undefined_var3": 1,
                    "value_2": 1,
                    "var2": 1,
                    "var6e": 1,
                    "var9": 1,
                    "var_6e": 1
                },
                "local_6f": {
                    "byte_variable2": 1,
                    "char_space": 1,
                    "const1": 1,
                    "constant1": 2,
                    "flag1": 3,
                    "flag_1": 1,
                    "local_var7": 1,
                    "mask1": 1,
                    "minus_flag": 1,
                    "space_char": 2,
                    "space_flag": 6,
                    "start_character": 1,
                    "temp_1": 1,
                    "undefined_var2": 1,
                    "value_1": 1,
                    "var1": 1,
                    "var6f": 1,
                    "var8": 1,
                    "var_6f": 1
                },
                "local_70": {
                    "byte_var": 1,
                    "byte_variable1": 1,
                    "ch": 1,
                    "char1": 1,
                    "character": 4,
                    "conversion_specifier": 2,
                    "conversion_type": 1,
                    "current_byte": 1,
                    "current_char": 1,
                    "current_character": 2,
                    "flag_char": 1,
                    "format_char": 4,
                    "format_specifier": 4,
                    "local_var6": 1,
                    "mode": 1,
                    "modifier": 1,
                    "option_char": 1,
                    "symbol": 1,
                    "temp_byte": 1,
                    "var7": 1
                },
                "local_74": {
                    "local_var5": 1,
                    "local_variable_2": 1,
                    "output_counter": 1,
                    "processed_data": 1,
                    "processed_size": 1,
                    "result_var": 1,
                    "total": 3,
                    "total_count": 2,
                    "total_data_size": 2,
                    "total_length": 6,
                    "total_processed": 2,
                    "total_size": 9,
                    "var6": 1
                },
                "local_7c": {
                    "bit_width": 1,
                    "count": 1,
                    "field_width": 1,
                    "first_value": 1,
                    "integer_part": 1,
                    "local_var4": 1,
                    "local_variable_1": 1,
                    "multiplier": 1,
                    "num_value": 1,
                    "number": 1,
                    "numeric_value": 2,
                    "star_count": 1,
                    "value": 1,
                    "value3": 2,
                    "var2": 1,
                    "var5": 1,
                    "variable4": 1,
                    "width": 11,
                    "width_arg": 1
                },
                "local_80": {
                    "alignment": 2,
                    "buffer": 1,
                    "local80": 1,
                    "local_var1": 1,
                    "local_var3": 1,
                    "padding": 2,
                    "padding_length": 1,
                    "temp": 1,
                    "temp3": 1,
                    "temp_value": 1,
                    "temp_var_2": 1,
                    "temp_var_ptr": 1,
                    "temp_variable": 1,
                    "temp_variable_2": 1,
                    "third_flag": 1,
                    "undefined_var": 1,
                    "unknown": 2,
                    "unused": 2,
                    "unused_var": 1,
                    "unused_variable1": 2,
                    "user_data": 1,
                    "value2": 2,
                    "var4": 1,
                    "variable3": 1,
                    "width": 1
                },
                "local_84": {
                    "dec_value": 1,
                    "decimal_digits": 1,
                    "decimal_length": 1,
                    "decimal_places": 2,
                    "decimal_precision": 1,
                    "flag_var2": 1,
                    "local_var2": 1,
                    "precision": 14,
                    "repeat_count": 1,
                    "second_flag": 1,
                    "second_value": 1,
                    "value": 2,
                    "value1": 2,
                    "var3": 1,
                    "variable2": 1
                },
                "local_88": {
                    "bitmask": 1,
                    "char_flags": 1,
                    "character_flags": 1,
                    "flag": 1,
                    "flag_bits": 2,
                    "flag_var": 1,
                    "flags": 22,
                    "local_var1": 1,
                    "mask1": 1
                },
                "local_8c": {
                    "buffer_pointer": 1,
                    "count_array": 1,
                    "counter": 1,
                    "counter_ptr": 1,
                    "counter_ptr_temp": 1,
                    "local_pointer": 1,
                    "local_pointer1": 1,
                    "local_ptr": 3,
                    "local_result": 1,
                    "local_result_ptr": 1,
                    "local_stack_pointer": 1,
                    "output_data_pointer": 1,
                    "output_pointer": 3,
                    "output_ptr": 5,
                    "output_ptrs": 1,
                    "output_size_ptr": 2,
                    "processed_data_ptr": 1,
                    "ptr_array": 1,
                    "ptr_list": 1,
                    "ptr_local": 1,
                    "result_ptr": 1,
                    "stack_ptr": 1
                },
                "param_1": {
                    "arg1": 2,
                    "binary_data": 1,
                    "data": 2,
                    "data_pointer": 5,
                    "data_struct": 1,
                    "handle": 1,
                    "input": 5,
                    "input1": 1,
                    "input_1": 1,
                    "input_data": 5,
                    "input_param": 1,
                    "input_parameter": 1,
                    "input_pointer": 1,
                    "memory": 1,
                    "ptr1": 2,
                    "size": 1
                },
                "param_2": {
                    "arg2": 2,
                    "buffer": 1,
                    "config": 1,
                    "config_data": 2,
                    "config_params": 1,
                    "config_pointer": 1,
                    "data": 3,
                    "data_param": 1,
                    "data_pointer": 3,
                    "data_ptr": 1,
                    "flags": 2,
                    "format_string": 1,
                    "info": 1,
                    "input2": 1,
                    "input_2": 1,
                    "metadata": 1,
                    "options": 1,
                    "output_data": 1,
                    "param": 1,
                    "param_array": 1,
                    "param_pointer": 2,
                    "ptr2": 2
                },
                "param_3": {
                    "arg3": 1,
                    "byte_array": 2,
                    "data": 6,
                    "input": 3,
                    "input3": 1,
                    "input_3": 1,
                    "input_data": 6,
                    "input_string": 9,
                    "pattern": 1,
                    "string": 1
                },
                "param_4": {
                    "arg4": 2,
                    "buffer": 1,
                    "count": 1,
                    "counter": 3,
                    "input4": 1,
                    "input_4": 1,
                    "length": 2,
                    "output": 2,
                    "output_counter": 2,
                    "output_data": 2,
                    "output_param": 1,
                    "output_parameter": 1,
                    "output_pointer": 1,
                    "output_size": 4,
                    "processed_data_size": 1,
                    "ptr4": 1,
                    "ptr_array": 1,
                    "result": 2,
                    "result_pointer": 1,
                    "total_count": 1
                },
                "pbVar4": {
                    "byte_pointer": 2,
                    "byte_pointer1": 2,
                    "byte_ptr": 1,
                    "byte_ptr1": 2,
                    "curr_char": 2,
                    "current_byte": 5,
                    "current_char": 8,
                    "current_char_ptr": 1,
                    "data_ptr": 2,
                    "input_ptr": 1,
                    "p": 1,
                    "ptr": 1,
                    "ptr2": 2,
                    "temp_pointer1": 1
                },
                "pbVar5": {
                    "byte_pointer2": 2,
                    "byte_ptr2": 2,
                    "char_ptr": 1,
                    "current": 1,
                    "current_byte": 4,
                    "current_data": 1,
                    "last_char": 1,
                    "next_byte": 5,
                    "next_char": 9,
                    "next_char_ptr": 1,
                    "p2": 1,
                    "ptr3": 2,
                    "temp_pointer2": 1
                },
                "piVar2": {
                    "buffer_ptr": 1,
                    "counter_ptr": 2,
                    "local_pointer": 1,
                    "local_pointer2": 1,
                    "output_data": 1,
                    "output_pointer": 1,
                    "output_pointer2": 1,
                    "output_ptr": 1,
                    "output_size_ptr": 1,
                    "pointer_var": 3,
                    "ptr": 9,
                    "ptr2_1": 1,
                    "ptr_result": 1,
                    "ptr_var": 5,
                    "ptr_variable": 1,
                    "temp": 1
                },
                "process_and_initialize_data_080069e4": {
                    "process_and_initialize_data": 1
                },
                "process_input_data_08006370": {
                    "process_input_data2": 1
                },
                "unaff_r9": {
                    "alternative_result": 1,
                    "data_length": 1,
                    "decode_result": 2,
                    "decoded_data": 3,
                    "decoded_data_size": 1,
                    "extra_param": 1,
                    "partial_count": 1,
                    "temp": 2,
                    "temp2": 1,
                    "temp_register": 2,
                    "temp_value": 1,
                    "temp_var": 2,
                    "temp_variable": 1,
                    "unaff": 1,
                    "unaff_r9": 4,
                    "unaff_var9": 2,
                    "unaffected_r9": 2,
                    "unaffected_var": 1,
                    "value": 1,
                    "var1": 1
                }
            },
            "called": [
                "FUN_08006e90",
                "FUN_080069e4",
                "FUN_08006370",
                "FUN_08006cb4",
                "FUN_080066b0"
            ],
            "calling": [
                "FUN_080068f0",
                "FUN_08006174"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08006568) */\n\nint decode_and_process_input_data_08006394(int input,undefined4 *data,byte *input_string,int *output_size)\n\n{\n  int result;\n  int *ptr;\n  bool is_numeric;\n  byte *current_char;\n  byte *next_char;\n  int unaff_r9;\n  int temp_var;\n  int *output_ptr;\n  uint flags;\n  int precision;\n  undefined4 value2;\n  int width;\n  int total_size;\n  byte format_specifier;\n  undefined space_flag;\n  undefined plus_flag;\n  undefined zero_flag;\n  undefined4 flag4;\n  \n  output_ptr = output_size;\n  if ((input != 0) && (*(int *)(input + 0x18) == 0)) {\n    initialize_memory_blocks();\n  }\n  if (data == &DAT_08007904) {\n    data = *(undefined4 **)(input + 4);\n  }\n  else if (data == (undefined4 *)&DAT_08007924) {\n    data = *(undefined4 **)(input + 8);\n  }\n  else if (data == (undefined4 *)&DAT_080078e4) {\n    data = *(undefined4 **)(input + 0xc);\n  }\n  if (((-1 < (int)((uint)*(ushort *)(data + 3) << 0x1c)) || (data[4] == 0)) &&\n     (temp_var = process_and_initialize_data(input,data), temp_var != 0)) {\n    return -1;\n  }\n  total_size = 0;\n  space_flag = 0x20;\n  plus_flag = 0x30;\n  current_char = input_string;\nLAB_080063d6:\n  next_char = current_char;\n  if (*next_char != 0) goto LAB_0800648c;\n  goto LAB_080063e0;\nLAB_0800648c:\n  current_char = next_char + 1;\n  if (*next_char != 0x25) goto LAB_080063d6;\nLAB_080063e0:\n  temp_var = (int)next_char - (int)input_string;\n  if (temp_var != 0) {\n    result = process_input_data2(input,data,input_string,temp_var);\n    if (result == -1) {\nLAB_08006580:\n      if ((int)((uint)*(ushort *)(data + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return total_size;\n    }\n    total_size = total_size + temp_var;\n  }\n  if (*next_char == 0) goto LAB_08006580;\n  flags = 0;\n  width = 0;\n  precision = -1;\n  value2 = 0;\n  zero_flag = 0;\n  flag4 = 0;\n  current_char = next_char + 1;\n  while( true ) {\n    temp_var = find_character_in_string(\"#-0+ \",*current_char);\n    input_string = current_char + 1;\n    if (temp_var == 0) break;\n    flags = 1 << (temp_var + 0xf7ff8750U & 0xff) | flags;\n    current_char = input_string;\n  }\n  if ((int)(flags << 0x1b) < 0) {\n    zero_flag = 0x20;\n  }\n  if ((int)(flags << 0x1c) < 0) {\n    zero_flag = 0x2b;\n  }\n  if (*current_char == 0x2a) {\n    ptr = output_ptr + 1;\n    temp_var = *output_ptr;\n    output_ptr = ptr;\n    if (temp_var < 0) {\n      width = -temp_var;\n      flags = flags | 2;\n      goto LAB_080064be;\n    }\n  }\n  else {\n    is_numeric = false;\n    temp_var = width;\n    input_string = current_char;\n    while( true ) {\n      if (9 < *input_string - 0x30) break;\n      temp_var = temp_var * 10 + (*input_string - 0x30);\n      is_numeric = true;\n      input_string = input_string + 1;\n    }\n    if (!is_numeric) goto LAB_080064be;\n  }\n  width = temp_var;\nLAB_080064be:\n  if (*input_string == 0x2e) {\n    if (input_string[1] == 0x2a) {\n      input_string = input_string + 2;\n      ptr = output_ptr + 1;\n      precision = *output_ptr;\n      output_ptr = ptr;\n      if (precision < 0) {\n        precision = -1;\n      }\n    }\n    else {\n      is_numeric = false;\n      temp_var = 0;\n      precision = 0;\n      while( true ) {\n        input_string = input_string + 1;\n        if (9 < *input_string - 0x30) break;\n        temp_var = temp_var * 10 + (*input_string - 0x30);\n        is_numeric = true;\n      }\n      if (is_numeric) {\n        precision = temp_var;\n      }\n    }\n  }\n  temp_var = find_character_in_string(&DAT_080078b6,*input_string,3);\n  if (temp_var != 0) {\n    input_string = input_string + 1;\n    flags = flags | 0x40 << (temp_var + 0xf7ff874aU & 0xff);\n  }\n  format_specifier = *input_string;\n  input_string = input_string + 1;\n  temp_var = find_character_in_string(\"efgEFG\",format_specifier,6);\n  if (temp_var == 0) {\n    unaff_r9 = decode_and_process_data(input,&flags,data,0x8006371,&output_ptr);\n    if (unaff_r9 == -1) goto LAB_08006580;\n  }\n  else {\n    output_ptr = (int *)(((int)output_ptr + 7U & 0xfffffff8) + 8);\n  }\n  total_size = total_size + unaff_r9;\n  current_char = input_string;\n  goto LAB_080063d6;\n}\n\n",
            "current_name": "decode_and_process_input_data_08006394",
            "entrypoint": "0x08006394",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006394": "decode_and_process_input_data_08006394",
                "bVar3": "is_numeric",
                "decode_and_process_data_080066b0": "decode_and_process_data",
                "find_character_in_string_08006e90": "find_character_in_string",
                "iVar1": "result",
                "iVar6": "temp_var",
                "initialize_memory_blocks_08006cb4": "initialize_memory_blocks",
                "local_30": "flag4",
                "local_45": "zero_flag",
                "local_6e": "plus_flag",
                "local_6f": "space_flag",
                "local_70": "format_specifier",
                "local_74": "total_size",
                "local_7c": "width",
                "local_80": "value2",
                "local_84": "precision",
                "local_88": "flags",
                "local_8c": "output_ptr",
                "param_1": "input",
                "param_2": "data",
                "param_3": "input_string",
                "param_4": "output_size",
                "pbVar4": "current_char",
                "pbVar5": "next_char",
                "piVar2": "ptr",
                "process_and_initialize_data_080069e4": "process_and_initialize_data",
                "process_input_data_08006370": "process_input_data2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080065c0": {
            "additional_data": {
                "FUN_080065c0": {
                    "analyze_data": 1,
                    "calculate_size_and_iterate": 1,
                    "decode_and_process": 1,
                    "decode_data": 2,
                    "decompiled_function": 1,
                    "extract_data": 1,
                    "extract_data_from_binary": 1,
                    "extracted_data": 2,
                    "parse_data": 1,
                    "process_data": 18
                },
                "bVar5": {
                    "bool_value": 1,
                    "check": 1,
                    "check_condition": 1,
                    "check_flag": 1,
                    "check_value": 1,
                    "check_var": 1,
                    "condition": 3,
                    "condition_check": 1,
                    "condition_passed": 1,
                    "do_reverse": 1,
                    "flag": 4,
                    "flag2": 1,
                    "has_condition": 1,
                    "is_condition_met": 8,
                    "is_flag_set": 3,
                    "is_size_non_zero": 1,
                    "is_true": 1
                },
                "byteVal": {
                    "flag": 1
                },
                "iVar1": {
                    "counter1": 1,
                    "i": 2,
                    "index": 9,
                    "index1": 1,
                    "index_1": 1,
                    "index_i": 1,
                    "iteration": 2,
                    "iterator1": 1,
                    "loop_counter": 3,
                    "loop_counter1": 1,
                    "loop_index": 1,
                    "loop_index1": 1,
                    "loop_index_1": 1,
                    "loop_var": 1,
                    "loop_var1": 1,
                    "loop_var_1": 1,
                    "result": 3
                },
                "iVar2": {
                    "callback_result": 4,
                    "index2": 1,
                    "index_2": 1,
                    "iterator2": 1,
                    "loop_counter": 1,
                    "loop_index2": 1,
                    "loop_index_2": 1,
                    "loop_result": 1,
                    "loop_var2": 1,
                    "loop_var_2": 1,
                    "result": 15,
                    "return_value": 3
                },
                "iVar3": {
                    "count": 1
                },
                "iVar4": {
                    "index": 1
                },
                "param_1": {
                    "arg1": 1,
                    "data": 6,
                    "data1": 1,
                    "data_ptr": 3,
                    "data_size": 1,
                    "input": 6,
                    "input_data": 5,
                    "input_param": 3,
                    "input_ptr": 1,
                    "input_value": 3,
                    "param1": 1
                },
                "param_2": {
                    "array": 2,
                    "array_data": 1,
                    "data": 8,
                    "data2": 1,
                    "data_array": 5,
                    "data_ptr": 1,
                    "flags": 1,
                    "header": 3,
                    "info": 2,
                    "input": 1,
                    "input_array": 2,
                    "input_ptr": 1,
                    "params": 1,
                    "ptr_array": 1,
                    "size_info": 1
                },
                "param_3": {
                    "max_length": 1,
                    "max_value": 1,
                    "out_param": 1,
                    "output": 4,
                    "output_arg": 1,
                    "output_count": 1,
                    "output_length": 2,
                    "output_param": 3,
                    "output_ptr": 1,
                    "output_size": 9,
                    "output_value": 1,
                    "result": 3,
                    "result_ptr": 1,
                    "size": 1,
                    "updated_data": 1
                },
                "param_4": {
                    "additional_param": 3,
                    "additional_value": 1,
                    "arg": 1,
                    "arg2": 1,
                    "aux_param": 1,
                    "data3": 1,
                    "extra_param": 1,
                    "param": 4,
                    "param1": 1,
                    "param4": 9,
                    "param_4": 5,
                    "some_param": 1,
                    "unknown_value": 1,
                    "unused_param": 1
                },
                "param_5": {
                    "callback": 16,
                    "callback_func": 10,
                    "callback_function": 4,
                    "process_byte": 1
                },
                "uVar3": {
                    "char_flag": 1,
                    "max_data": 1,
                    "max_data_size": 1,
                    "max_output_length": 1,
                    "max_output_size": 3,
                    "max_size": 8,
                    "max_value": 12,
                    "max_value_temp": 1,
                    "max_var": 1,
                    "temp": 1,
                    "temp_value_2": 1
                },
                "uVar4": {
                    "additional_data_size": 1,
                    "additional_value": 1,
                    "char_index": 1,
                    "count": 2,
                    "counter": 2,
                    "extra_value": 2,
                    "inc_var": 1,
                    "new_size": 1,
                    "offset": 9,
                    "size": 1,
                    "temp_length": 1,
                    "temp_value": 5,
                    "temp_var": 1,
                    "u_var_temp": 1,
                    "var4": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_080066b0"
            ],
            "code": "\nundefined4\nprocess_data_080065c0(undefined4 input,uint *data,uint *output_size,undefined4 param4,code *callback)\n\n{\n  int index;\n  int result;\n  uint max_value;\n  uint offset;\n  bool is_condition_met;\n  \n  max_value = data[4];\n  if ((int)data[4] < (int)data[2]) {\n    max_value = data[2];\n  }\n  *output_size = max_value;\n  if (*(char *)((int)data + 0x43) != '\\0') {\n    *output_size = max_value + 1;\n  }\n  if ((int)(*data << 0x1a) < 0) {\n    *output_size = *output_size + 2;\n  }\n  if ((*data & 6) == 0) {\n    for (index = 0; index < (int)(data[3] - *output_size); index = index + 1) {\n      result = (*callback)(input,param4,(int)data + 0x19,1);\n      if (result == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  max_value = (uint)*(byte *)((int)data + 0x43);\n  if (max_value != 0) {\n    max_value = 1;\n  }\n  offset = max_value;\n  if ((int)(*data << 0x1a) < 0) {\n    *(undefined *)((int)data + max_value + 0x43) = 0x30;\n    offset = max_value + 2;\n    *(undefined *)((int)data + max_value + 0x44) = *(undefined *)((int)data + 0x45);\n  }\n  index = (*callback)(input,param4,(int)data + 0x43,offset);\n  if (index != -1) {\n    max_value = data[3];\n    is_condition_met = (*data & 6) != 4;\n    if (is_condition_met) {\n      max_value = 0;\n    }\n    offset = 0;\n    if (!is_condition_met) {\n      max_value = max_value - *output_size;\n    }\n    if (!is_condition_met) {\n      max_value = max_value & ~((int)max_value >> 0x1f);\n    }\n    if ((int)data[4] < (int)data[2]) {\n      max_value = max_value + (data[2] - data[4]);\n    }\n    while( true ) {\n      if (max_value == offset) {\n        return 0;\n      }\n      index = (*callback)(input,param4,(int)data + 0x1a,1);\n      if (index == -1) break;\n      offset = offset + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "process_data_080065c0",
            "entrypoint": "0x080065c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080065c0": "process_data_080065c0",
                "bVar5": "is_condition_met",
                "iVar1": "index",
                "iVar2": "result",
                "param_1": "input",
                "param_2": "data",
                "param_3": "output_size",
                "param_4": "param4",
                "param_5": "callback",
                "uVar3": "max_value",
                "uVar4": "offset"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080066b0": {
            "additional_data": {
                "FUN_080066b0": {
                    "convert_and_process_data": 1,
                    "convert_number_to_string": 1,
                    "convert_string_to_number": 1,
                    "convert_to_hex": 1,
                    "convert_to_hex_string": 1,
                    "convert_value": 1,
                    "decode_and_process": 1,
                    "decode_and_process_data": 4,
                    "parse_and_process_data": 3,
                    "process_and_convert_data": 3,
                    "process_and_display_data": 1,
                    "process_and_format_data": 1,
                    "process_and_output_data": 1,
                    "process_and_print_data": 2,
                    "process_and_validate_data": 1,
                    "process_data": 4,
                    "process_decoded_function": 1,
                    "reverse_and_process_data": 2
                },
                "LAB_080065c0": {
                    "process_data_function": 1
                },
                "LAB_080066e0": {
                    "label_1": 1
                },
                "LAB_08006700": {
                    "label_4": 1
                },
                "LAB_08006726": {
                    "label_5": 1
                },
                "LAB_08006740": {
                    "label_7": 1
                },
                "LAB_08006766": {
                    "label_9": 1
                },
                "LAB_08006774": {
                    "label_8": 1
                },
                "LAB_08006790": {
                    "label_3": 1
                },
                "LAB_080067d6": {
                    "label_10": 1
                },
                "LAB_080067ea": {
                    "label_11": 1
                },
                "LAB_080067fa": {
                    "label_6": 1
                },
                "LAB_0800682e": {
                    "label_2": 1
                },
                "LAB_0800686a": {
                    "label_exit": 1
                },
                "bVar1": {
                    "byte_val": 7,
                    "byte_value": 12,
                    "byte_var": 6,
                    "current_char": 1,
                    "first_byte": 4
                },
                "find_character_in_string_08006e90": {
                    "find_char_in_string_function": 1
                },
                "iVar2": {
                    "counter": 1,
                    "index": 16,
                    "index1": 1,
                    "index_var": 2,
                    "int_var": 3,
                    "int_var_1": 1,
                    "integer_value1": 1,
                    "loop_counter": 1,
                    "loop_variable": 1,
                    "result": 2,
                    "return_value": 1
                },
                "iVar4": {
                    "index": 1,
                    "index2": 1,
                    "inner_index": 3,
                    "inner_index_var": 2,
                    "int_var2": 2,
                    "int_var_2": 2,
                    "integer_value2": 1,
                    "loop_index": 2,
                    "loop_result": 1,
                    "loop_var": 2,
                    "result": 8,
                    "status": 1,
                    "temp_index": 3,
                    "temp_var": 1
                },
                "local_24": {
                    "limits": 1,
                    "local_array": 17,
                    "local_sizes": 1,
                    "local_temp": 1,
                    "local_values": 1,
                    "local_variable": 1,
                    "local_vars_array": 1,
                    "result": 1,
                    "result_array": 1,
                    "string_size": 1,
                    "temp_array": 2,
                    "temp_buffer": 1
                },
                "param_1": {
                    "arg1": 2,
                    "base": 1,
                    "input": 7,
                    "input1": 3,
                    "input_arg": 1,
                    "input_data": 3,
                    "input_param": 3,
                    "input_val": 1,
                    "input_value": 2,
                    "input_value_1": 1,
                    "param1": 4,
                    "param_1": 1,
                    "param_response": 1
                },
                "param_2": {
                    "data": 6,
                    "data_array": 3,
                    "data_pointer": 3,
                    "data_ptr": 5,
                    "decoded_data": 1,
                    "input2": 1,
                    "input_array": 4,
                    "num_ptr": 1,
                    "number": 1,
                    "output_data": 1,
                    "param_buffer": 1,
                    "string": 1,
                    "value": 1,
                    "value_pointer": 1
                },
                "param_3": {
                    "arg3": 2,
                    "buffer_length": 1,
                    "config_param": 1,
                    "input2": 2,
                    "input3": 1,
                    "input_value_2": 1,
                    "length": 1,
                    "offset": 1,
                    "param": 2,
                    "param3": 8,
                    "param_3": 3,
                    "param_size": 2,
                    "parameter": 1,
                    "size": 3,
                    "unknown_value": 1
                },
                "param_4": {
                    "callback": 8,
                    "callback_func": 6,
                    "callback_function": 7,
                    "conversion_function": 3,
                    "func": 1,
                    "function_ptr": 2,
                    "output_function": 1,
                    "param_handler": 1,
                    "process_func": 1
                },
                "param_5": {
                    "buffer": 1,
                    "count": 1,
                    "counter": 6,
                    "counter_array": 1,
                    "output": 2,
                    "output_array": 2,
                    "output_array_ptr": 1,
                    "output_data_ptr": 1,
                    "output_param": 1,
                    "output_parameters": 1,
                    "output_pointer": 2,
                    "output_ptr": 1,
                    "param5": 1,
                    "param5_ptr": 1,
                    "param_counter": 1,
                    "pointer_to_pointer": 2,
                    "ptr": 1,
                    "ptr_to_ptr": 2,
                    "ptr_to_ptr_to_data": 1,
                    "result_pointer": 1
                },
                "pcVar11": {
                    "char_pointer2": 3,
                    "char_ptr1": 1,
                    "char_ptr2": 2,
                    "char_ptr_1": 1,
                    "char_ptr_2": 1,
                    "char_ptr_var": 1,
                    "char_var2": 1,
                    "copy_ptr": 1,
                    "current_char": 1,
                    "current_char_ptr": 1,
                    "end_string": 1,
                    "hex_value": 1,
                    "new_buffer": 1,
                    "new_char_ptr": 1,
                    "output": 1,
                    "output_pointer": 1,
                    "output_string": 2,
                    "parsed_string": 2,
                    "result_str": 1,
                    "str_ptr": 1,
                    "string_ptr": 1,
                    "temp_char_pointer": 1,
                    "temp_char_ptr": 2
                },
                "pcVar12": {
                    "buffer": 1,
                    "char_pointer": 1,
                    "char_pointer1": 1,
                    "char_pointer3": 2,
                    "char_ptr": 1,
                    "char_ptr2": 1,
                    "char_ptr_2": 2,
                    "char_ptr_3": 1,
                    "char_var3": 1,
                    "converted_string": 1,
                    "data_str": 1,
                    "hex_string": 2,
                    "input_string": 1,
                    "old_buffer": 1,
                    "original_char_ptr": 1,
                    "original_string": 1,
                    "output_string": 1,
                    "start_string": 1,
                    "str_end_ptr": 1,
                    "str_ptr": 1,
                    "str_ptr2": 1,
                    "string": 1,
                    "temp_char_array": 1,
                    "temp_char_ptr_2": 1,
                    "temp_ptr": 1,
                    "temp_ptr_var": 1
                },
                "pcVar5": {
                    "char_array": 1,
                    "char_pointer": 3,
                    "char_ptr": 7,
                    "char_set": 2,
                    "char_var": 1,
                    "digit_characters": 1,
                    "hex_characters": 1,
                    "hex_chars": 8,
                    "hex_digits": 4,
                    "hex_string": 1,
                    "hexadecimal_characters": 1
                },
                "ppcVar8": {
                    "char_pointer_pointer": 1,
                    "char_ptr_ptr": 1,
                    "double_char_pointer": 1,
                    "double_char_ptr": 1,
                    "pointer_3": 1,
                    "pointer_to_char_pointer": 1,
                    "pointer_to_pointer3": 1,
                    "str_ptr": 1,
                    "string_ptr": 2,
                    "string_ptr_ptr": 1,
                    "string_value": 1,
                    "temp_char_array_pointer": 1
                },
                "ppuVar7": {
                    "callback_ptr": 1,
                    "counter_ptr": 1,
                    "double_pointer": 1,
                    "double_ptr": 1,
                    "pointer_2": 1,
                    "pointer_pointer_var": 1,
                    "pointer_to_pointer2": 1,
                    "pointer_to_pointer_var": 1,
                    "ptr2": 1,
                    "ptr_ptr": 1,
                    "string_counter": 1,
                    "string_ptr_ptr": 1,
                    "temp_pointer_pointer": 1
                },
                "puVar3": {
                    "counter_ptr": 1,
                    "counter_value": 1,
                    "current_ptr": 1,
                    "data_ptr": 2,
                    "pointer": 1,
                    "pointer1": 1,
                    "pointer_1": 1,
                    "pointer_to_var": 1,
                    "pointer_value1": 1,
                    "pointer_var": 2,
                    "pointer_var_1": 1,
                    "ptr": 7,
                    "ptr1": 1,
                    "ptr_val": 1,
                    "ptr_var": 4,
                    "temp_pointer": 3,
                    "temp_ptr": 1
                },
                "uVar10": {
                    "copy": 1,
                    "copy_val": 1,
                    "data_value": 1,
                    "input_length": 1,
                    "length": 1,
                    "operand2": 1,
                    "original_length": 1,
                    "second_result_var": 1,
                    "size2": 1,
                    "temp": 1,
                    "temp2": 1,
                    "temp_3": 1,
                    "temp_size": 1,
                    "temp_val2": 1,
                    "temp_value": 2,
                    "temp_value2": 2,
                    "temp_value3": 1,
                    "temp_value_2": 1,
                    "temp_var": 1,
                    "temp_var_2": 1,
                    "u_value2": 1,
                    "uint_value3": 1,
                    "uint_var2": 1,
                    "uint_var3": 1,
                    "uint_var_3": 2,
                    "var10": 2
                },
                "uVar6": {
                    "base": 2,
                    "data_val": 1,
                    "num": 1,
                    "number_flags": 1,
                    "operand1": 1,
                    "shift": 1,
                    "temp": 1,
                    "temp_1": 1,
                    "temp_val": 2,
                    "temp_value": 3,
                    "temp_value1": 1,
                    "u_value": 1,
                    "uint_value1": 1,
                    "uint_var": 5,
                    "uint_var_1": 1,
                    "value": 6,
                    "var6": 1
                },
                "uVar9": {
                    "converted_val": 1,
                    "converted_value": 1,
                    "length": 1,
                    "parsed_value": 2,
                    "remaining_number": 1,
                    "result": 6,
                    "result_var": 2,
                    "return_value": 1,
                    "retval": 1,
                    "temp": 1,
                    "temp_2": 1,
                    "temp_value": 1,
                    "temp_value2": 1,
                    "temp_var": 1,
                    "u_value1": 1,
                    "uint_value2": 1,
                    "uint_var1": 1,
                    "uint_var2": 1,
                    "uint_var_2": 2,
                    "value": 2,
                    "var9": 1
                }
            },
            "called": [
                "FUN_08006e90",
                "FUN_080065c0"
            ],
            "calling": [
                "FUN_08006394"
            ],
            "code": "\nuint decode_and_process_data_080066b0(undefined4 input,uint *data,undefined4 param3,code *callback,uint **counter)\n\n{\n  byte byte_value;\n  int index;\n  uint *ptr;\n  int result;\n  char *hex_chars;\n  uint value;\n  uint **pointer_to_pointer2;\n  char **string_ptr;\n  uint result;\n  uint var10;\n  char *char_pointer2;\n  char *char_ptr_2;\n  uint local_array [2];\n  \n  byte_value = *(byte *)(data + 6);\n  char_ptr_2 = (char *)((int)data + 0x43);\n  if (byte_value != 0x6e) {\n    if (byte_value < 0x6f) {\n      if (byte_value != 99) {\n        if (byte_value < 100) {\n          if (byte_value == 0) goto label_exit;\n          if (byte_value != 0x58) goto label_1;\n          *(undefined *)((int)data + 0x45) = 0x58;\n          hex_chars = \"0123456789ABCDEF\";\nlabel_6:\n          value = *data;\n          ptr = *counter;\n          *counter = ptr + 1;\n          if (((value & 0x80) == 0) && ((int)(value << 0x19) < 0)) {\n            result = (uint)*(ushort *)ptr;\n          }\n          else {\n            result = *ptr;\n          }\n          if ((int)(value << 0x1f) < 0) {\n            *data = value | 0x20;\n          }\n          if (result == 0) {\n            *data = *data & 0xffffffdf;\n          }\n          value = 0x10;\nlabel_3:\n          *(undefined *)((int)data + 0x43) = 0;\n        }\n        else {\n          if ((byte_value != 100) && (byte_value != 0x69)) goto label_1;\n          result = *data;\n          ptr = *counter;\n          if ((result & 0x80) == 0) {\n            *counter = ptr + 1;\n            if ((result & 0x40) == 0) goto label_4;\n            result = (uint)(short)*(ushort *)ptr;\n          }\n          else {\n            *counter = ptr + 1;\nlabel_4:\n            result = *ptr;\n          }\n          if ((int)result < 0) {\n            result = -result;\n            *(undefined *)((int)data + 0x43) = 0x2d;\n          }\n          hex_chars = \"0123456789ABCDEF\";\n          value = 10;\n        }\n        var10 = data[1];\n        data[2] = var10;\n        char_pointer2 = char_ptr_2;\n        if ((int)var10 < 0) {\n          if (result != 0) goto label_2;\nLAB_080068dc:\n          *(char *)((int)data + 0x42) = *hex_chars;\n          char_pointer2 = (char *)((int)data + 0x42);\n        }\n        else {\n          *data = *data & 0xfffffffb;\n          if (result == 0) {\n            if (var10 != 0) goto LAB_080068dc;\n          }\n          else {\nlabel_2:\n            do {\n              var10 = result / value;\n              char_pointer2 = char_pointer2 + -1;\n              *char_pointer2 = hex_chars[result - value * var10];\n              result = var10;\n            } while (var10 != 0);\n          }\n        }\n        if (((value == 8) && ((int)(*data << 0x1f) < 0)) && ((int)data[1] <= (int)data[4]))\n        {\n          char_pointer2[-1] = '0';\n          char_pointer2 = char_pointer2 + -1;\n        }\n        data[4] = (int)char_ptr_2 - (int)char_pointer2;\n        char_ptr_2 = char_pointer2;\n        goto label_10;\n      }\n      ptr = *counter;\n      *counter = ptr + 1;\n      *(char *)((int)data + 0x42) = (char)*ptr;\nlabel_7:\n      char_ptr_2 = (char *)((int)data + 0x42);\n      result = 1;\n    }\n    else {\n      if (byte_value != 0x73) {\n        if (byte_value < 0x74) {\n          if (byte_value == 0x6f) {\nlabel_9:\n            result = *data;\n            ptr = *counter;\n            if ((result & 0x80) == 0) {\n              *counter = ptr + 1;\n              if ((result & 0x40) == 0) goto label_8;\n              result = (uint)*(ushort *)ptr;\n            }\n            else {\n              *counter = ptr + 1;\nlabel_8:\n              result = *ptr;\n            }\n            if (byte_value == 0x6f) {\n              value = 8;\n            }\n            else {\n              value = 10;\n            }\n            hex_chars = \"0123456789ABCDEF\";\n            goto label_3;\n          }\n          if (byte_value == 0x70) {\n            *data = *data | 0x20;\nlabel_5:\n            hex_chars = \"0123456789abcdef\";\n            *(undefined *)((int)data + 0x45) = 0x78;\n            goto label_6;\n          }\n        }\n        else {\n          if (byte_value == 0x75) goto label_9;\n          if (byte_value == 0x78) goto label_5;\n        }\nlabel_1:\n        *(byte *)((int)data + 0x42) = byte_value;\n        goto label_7;\n      }\n      string_ptr = (char **)*counter;\n      *counter = (uint *)(string_ptr + 1);\n      char_ptr_2 = *string_ptr;\n      index = find_char_in_string_function(char_ptr_2,0,data[1]);\n      if (index != 0) {\n        data[1] = index - (int)char_ptr_2;\n      }\n      result = data[1];\n    }\n    data[4] = result;\n    *(undefined *)((int)data + 0x43) = 0;\n    goto label_10;\n  }\n  result = *data;\n  pointer_to_pointer2 = (uint **)*counter;\n  value = data[5];\n  if ((result & 0x80) == 0) {\n    *counter = (uint *)(pointer_to_pointer2 + 1);\n    ptr = *pointer_to_pointer2;\n    if ((result & 0x40) == 0) goto LAB_08006856;\n    *(short *)ptr = (short)value;\n  }\n  else {\n    *counter = (uint *)(pointer_to_pointer2 + 1);\n    ptr = *pointer_to_pointer2;\nLAB_08006856:\n    *ptr = value;\n  }\nlabel_exit:\n  data[4] = 0;\nlabel_10:\n  index = process_data_080065c0(input,data,local_array,param3,callback);\n  if ((index == -1) || (index = (*callback)(input,param3,char_ptr_2,data[4]), index == -1)) {\nlabel_11:\n    result = 0xffffffff;\n  }\n  else {\n    if ((int)(*data << 0x1e) < 0) {\n      for (index = 0; index < (int)(data[3] - local_array[0]); index = index + 1) {\n        result = (*callback)(input,param3,(int)data + 0x19,1);\n        if (result == -1) goto label_11;\n      }\n    }\n    result = data[3];\n    if ((int)data[3] < (int)local_array[0]) {\n      result = local_array[0];\n    }\n  }\n  return result;\n}\n\n",
            "current_name": "decode_and_process_data_080066b0",
            "entrypoint": "0x080066b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080066b0": "decode_and_process_data_080066b0",
                "LAB_080066e0": "label_1",
                "LAB_08006700": "label_4",
                "LAB_08006726": "label_5",
                "LAB_08006740": "label_7",
                "LAB_08006766": "label_9",
                "LAB_08006774": "label_8",
                "LAB_08006790": "label_3",
                "LAB_080067d6": "label_10",
                "LAB_080067ea": "label_11",
                "LAB_080067fa": "label_6",
                "LAB_0800682e": "label_2",
                "LAB_0800686a": "label_exit",
                "bVar1": "byte_value",
                "find_character_in_string_08006e90": "find_char_in_string_function",
                "iVar2": "index",
                "iVar4": "result",
                "local_24": "local_array",
                "param_1": "input",
                "param_2": "data",
                "param_3": "param3",
                "param_4": "callback",
                "param_5": "counter",
                "pcVar11": "char_pointer2",
                "pcVar12": "char_ptr_2",
                "pcVar5": "hex_chars",
                "ppcVar8": "string_ptr",
                "ppuVar7": "pointer_to_pointer2",
                "puVar3": "ptr",
                "uVar10": "var10",
                "uVar6": "value",
                "uVar9": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080068f0": {
            "additional_data": {
                "FUN_080068f0": {
                    "decode_and_process_input": 1,
                    "initialize_and_process_data": 1,
                    "process_and_decode_input": 1,
                    "process_data": 3,
                    "process_input": 1,
                    "process_input_and_decode": 1,
                    "process_input_data": 23
                },
                "iVar1": {
                    "data_address": 5,
                    "data_block": 1,
                    "data_offset": 2,
                    "data_pointer": 4,
                    "data_ptr": 9,
                    "data_ptr2": 1,
                    "data_var": 1,
                    "data_var1": 1,
                    "i_var": 1,
                    "input_var1": 1,
                    "memory": 1,
                    "memory_block": 2,
                    "memory_data": 1,
                    "pointer": 1
                },
                "param_1": {
                    "data1": 1,
                    "data_ptr": 6,
                    "input": 2,
                    "input1": 1,
                    "input_data": 4,
                    "input_param": 4,
                    "input_param1": 7,
                    "input_param_1": 4,
                    "input_pointer": 1,
                    "param1": 1
                },
                "param_2": {
                    "arg_1": 1,
                    "data2": 1,
                    "input2": 1,
                    "input_param2": 7,
                    "input_param_2": 4,
                    "param2": 9,
                    "param_2": 8
                },
                "param_3": {
                    "arg_2": 1,
                    "data3": 1,
                    "input3": 1,
                    "input_param3": 7,
                    "input_param_3": 4,
                    "param3": 9,
                    "param_3": 8
                },
                "param_4": {
                    "arg_3": 1,
                    "data4": 1,
                    "input4": 1,
                    "input_param4": 7,
                    "input_param_4": 4,
                    "param4": 9,
                    "param_4": 8
                },
                "uStack_4": {
                    "decoded_input_4": 1,
                    "param4_copy": 3,
                    "param_4_copy": 1,
                    "stack4": 2,
                    "stack_4": 1,
                    "stack_var3": 3,
                    "stack_var_4": 3,
                    "temp_var3": 1
                },
                "uStack_8": {
                    "decoded_input_3": 1,
                    "param3_copy": 3,
                    "param_8": 1,
                    "stack8": 2,
                    "stack_8": 1,
                    "stack_var2": 3,
                    "stack_var_8": 3,
                    "temp_var2": 1
                },
                "uStack_c": {
                    "decoded_input_2": 1,
                    "param2_copy": 3,
                    "param_2_copy": 1,
                    "param_c": 1,
                    "stack_c": 3,
                    "stack_var1": 3,
                    "stack_var_c": 3,
                    "temp_var1": 1
                },
                "uVar2": {
                    "data0": 1,
                    "data_ptr3": 1,
                    "data_ptr_copy": 2,
                    "data_var2": 1,
                    "decoded_input_1": 1,
                    "input": 1,
                    "input1_copy": 1,
                    "input_copy": 2,
                    "input_data_copy": 3,
                    "input_param1_copy": 2,
                    "input_param_1_copy": 1,
                    "input_param_copy": 1,
                    "input_ptr": 2,
                    "input_var": 1,
                    "input_var2": 1,
                    "param1_copy": 2,
                    "param_1_copy": 3,
                    "param_ptr": 1,
                    "param_var": 1,
                    "temp_var": 2,
                    "u_var": 1
                }
            },
            "called": [
                "FUN_08006394",
                "FUN_08006cb4"
            ],
            "calling": [
                "FUN_08004f4c"
            ],
            "code": "\nvoid process_input_data_080068f0(undefined4 input_param1,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int data_ptr;\n  undefined4 input_data_copy;\n  undefined4 stack_c;\n  undefined4 stack_var_8;\n  undefined4 param4_copy;\n  \n  data_ptr = DAT_200000f8;\n  input_data_copy = input_param1;\n  stack_c = param2;\n  stack_var_8 = param3;\n  param4_copy = param4;\n  if ((DAT_200000f8 != 0) && (*(int *)(DAT_200000f8 + 0x18) == 0)) {\n    initialize_memory_blocks_08006cb4(DAT_200000f8);\n  }\n  decode_and_process_input_data_080068f0_08006394(data_ptr,*(undefined4 *)(data_ptr + 8),input_param1,&stack_c,input_data_copy,&stack_c);\n  return;\n}\n\n",
            "current_name": "process_input_data_080068f0",
            "entrypoint": "0x080068f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080068f0": "process_input_data_080068f0",
                "iVar1": "data_ptr",
                "param_1": "input_param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uStack_4": "param4_copy",
                "uStack_8": "stack_var_8",
                "uStack_c": "stack_c",
                "uVar2": "input_data_copy"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006920": {
            "additional_data": {
                "DAT_200006a4": {
                    "allocated_memory": 1
                },
                "FUN_08006920": {
                    "allocate_and_assign_block": 1,
                    "allocate_and_assign_memory": 3,
                    "allocate_and_assign_memory_block": 3,
                    "allocate_and_check_memory": 1,
                    "allocate_and_set_param_value": 1,
                    "allocate_and_store": 1,
                    "allocate_and_store_memory": 4,
                    "allocate_memory_and_assign_block": 1,
                    "allocate_memory_and_store": 1,
                    "allocate_memory_and_store_result": 1,
                    "allocate_memory_and_update_param": 1,
                    "allocate_memory_block_and_update_param": 1,
                    "allocate_memory_if_needed": 1,
                    "allocate_memory_if_present": 1,
                    "initialize_memory": 2,
                    "initialize_memory_block": 7,
                    "initialize_memory_block_pointer": 1
                },
                "allocate_memory_block_080056d8": {
                    "allocate_memory_block": 1
                },
                "iVar1": {
                    "allocate_result": 1,
                    "allocated_block": 3,
                    "allocated_memory": 1,
                    "allocated_memory_block": 2,
                    "allocation_result": 13,
                    "block_alloc_result": 1,
                    "block_status": 1,
                    "memory_block": 4,
                    "memory_block_allocation_result": 1
                },
                "param_1": {
                    "memory_address": 1,
                    "memory_location": 1,
                    "output": 1,
                    "output_data_pointer": 1,
                    "output_param": 2,
                    "output_pointer": 6,
                    "output_ptr": 2,
                    "result": 9,
                    "result_address": 1,
                    "result_pointer": 4,
                    "result_ptr": 3
                },
                "param_2": {
                    "block_size": 12,
                    "bytes_to_allocate": 1,
                    "input_data": 1,
                    "input_size": 1,
                    "input_value": 2,
                    "memory_block_size": 1,
                    "memory_size": 2,
                    "requested_size": 1,
                    "size": 9,
                    "value": 1
                }
            },
            "called": [
                "FUN_080056d8"
            ],
            "calling": [
                "FUN_08006288"
            ],
            "code": "\nvoid initialize_memory_block_pointer_08006920(int *result,undefined4 block_size)\n\n{\n  int allocation_result;\n  \n  DAT_200006a4 = 0;\n  allocation_result = allocate_memory_block(block_size);\n  if ((allocation_result == -1) && (DAT_200006a4 != 0)) {\n    *result = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_memory_block_pointer_08006920",
            "entrypoint": "0x08006920",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006920": "initialize_memory_block_pointer_08006920",
                "allocate_memory_block_080056d8": "allocate_memory_block",
                "iVar1": "allocation_result",
                "param_1": "result",
                "param_2": "block_size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080069e4": {
            "additional_data": {
                "DAT_08007904": {
                    "const_1": 1
                },
                "DAT_200000f8": {
                    "data": 1,
                    "global_var": 1
                },
                "FUNC_08006cb4": {
                    "cleanup": 1,
                    "cleanup_data": 3,
                    "cleanup_function": 1,
                    "initialize_data": 1
                },
                "FUN_080069e4": {
                    "check_and_process_data": 1,
                    "process_and_initialize_data": 2,
                    "process_data": 27,
                    "process_function": 1
                },
                "VAR_08006a14": {
                    "error_flag": 1
                },
                "iVar1": {
                    "base_address": 1,
                    "data": 1,
                    "data_address": 7,
                    "data_offset": 8,
                    "data_ptr": 11,
                    "input_data": 1,
                    "local_var1": 1,
                    "temp_var": 1
                },
                "initialize_application_data_08006e10": {
                    "initialize_application_data": 5,
                    "initialize_data": 1
                },
                "param_1": {
                    "data_ptr1": 1,
                    "input_data": 1,
                    "output": 9,
                    "output1": 1,
                    "output_buffer": 3,
                    "output_data": 1,
                    "output_param": 13,
                    "output_ptr": 2
                },
                "param_2": {
                    "data": 1,
                    "data_param": 1,
                    "data_ptr": 1,
                    "data_ptr2": 1,
                    "input": 8,
                    "input1": 1,
                    "input_buffer": 3,
                    "input_data": 1,
                    "input_param": 12,
                    "input_ptr": 2
                },
                "process_data_080061f0": {
                    "handle_data_processing": 1,
                    "process_data": 2,
                    "process_data_080061f0": 1,
                    "process_data_helper": 2
                },
                "uVar2": {
                    "local_var2": 1,
                    "result": 27,
                    "return_value": 1,
                    "status": 1,
                    "u_value": 1
                },
                "uVar3": {
                    "data": 1,
                    "data_value": 2,
                    "flag": 3,
                    "flags": 20,
                    "input_value": 2,
                    "local_var3": 1,
                    "u_short_value": 1,
                    "ushort_value": 1
                }
            },
            "called": [
                "FUN_08006e10",
                "FUN_080061f0",
                "FUN_08006cb4"
            ],
            "calling": [
                "FUN_08006394",
                "FUN_08006344"
            ],
            "code": "\nuint process_and_initialize_data_080069e4(undefined4 *output_param,undefined4 *input_param)\n\n{\n  int data_ptr;\n  uint result;\n  ushort flags;\n  \n  data_ptr = DAT_200000f8;\n  if ((DAT_200000f8 != 0) && (*(int *)(DAT_200000f8 + 0x18) == 0)) {\n    initialize_memory_blocks_08006cb4(DAT_200000f8);\n  }\n  if (input_param == &DAT_08007904) {\n    input_param = *(undefined4 **)(data_ptr + 4);\n  }\n  else if (input_param == (undefined4 *)&DAT_08007924) {\n    input_param = *(undefined4 **)(data_ptr + 8);\n  }\n  else if (input_param == (undefined4 *)&DAT_080078e4) {\n    input_param = *(undefined4 **)(data_ptr + 0xc);\n  }\n  flags = *(ushort *)(input_param + 3);\n  result = (uint)flags;\n  if (-1 < (int)(result << 0x1c)) {\n    if (-1 < (int)(result << 0x1b)) {\n      *output_param = 9;\n      goto LAB_08006a14;\n    }\n    if ((int)(result << 0x1d) < 0) {\n      if ((undefined4 *)input_param[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)input_param[0xd] != input_param + 0x11) {\n          process_data(output_param);\n        }\n        input_param[0xd] = 0;\n      }\n      *(ushort *)(input_param + 3) = *(ushort *)(input_param + 3) & 0xffdb;\n      input_param[1] = 0;\n      *input_param = input_param[4];\n    }\n    *(ushort *)(input_param + 3) = *(ushort *)(input_param + 3) | 8;\n  }\n  if ((input_param[4] == 0) && ((*(ushort *)(input_param + 3) & 0x280) != 0x200)) {\n    initialize_application_data(output_param,input_param);\n  }\n  flags = *(ushort *)(input_param + 3);\n  result = flags & 1;\n  if ((flags & 1) == 0) {\n    if (-1 < (int)((uint)flags << 0x1e)) {\n      result = input_param[5];\n    }\n    input_param[2] = result;\n  }\n  else {\n    input_param[2] = 0;\n    input_param[6] = -input_param[5];\n  }\n  if (input_param[4] == 0) {\n    flags = *(ushort *)(input_param + 3);\n    result = (int)(short)flags & 0x80;\n    if (result != 0) {\nLAB_08006a14:\n      *(ushort *)(input_param + 3) = flags | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "code_backup": "\nuint FUN_080069e4(undefined4 *param_1,undefined4 *param_2)\n\n{\n  int iVar1;\n  uint uVar2;\n  ushort uVar3;\n  \n  iVar1 = DAT_200000f8;\n  if ((DAT_200000f8 != 0) && (*(int *)(DAT_200000f8 + 0x18) == 0)) {\n    FUNC_08006cb4(DAT_200000f8);\n  }\n  if (param_2 == &DAT_08007904) {\n    param_2 = *(undefined4 **)(iVar1 + 4);\n  }\n  else if (param_2 == (undefined4 *)&DAT_08007924) {\n    param_2 = *(undefined4 **)(iVar1 + 8);\n  }\n  else if (param_2 == (undefined4 *)&DAT_080078e4) {\n    param_2 = *(undefined4 **)(iVar1 + 0xc);\n  }\n  uVar3 = *(ushort *)(param_2 + 3);\n  uVar2 = (uint)uVar3;\n  if (-1 < (int)(uVar2 << 0x1c)) {\n    if (-1 < (int)(uVar2 << 0x1b)) {\n      *param_1 = 9;\n      goto LAB_08006a14;\n    }\n    if ((int)(uVar2 << 0x1d) < 0) {\n      if ((undefined4 *)param_2[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)param_2[0xd] != param_2 + 0x11) {\n          process_data_080061f0(param_1);\n        }\n        param_2[0xd] = 0;\n      }\n      *(ushort *)(param_2 + 3) = *(ushort *)(param_2 + 3) & 0xffdb;\n      param_2[1] = 0;\n      *param_2 = param_2[4];\n    }\n    *(ushort *)(param_2 + 3) = *(ushort *)(param_2 + 3) | 8;\n  }\n  if ((param_2[4] == 0) && ((*(ushort *)(param_2 + 3) & 0x280) != 0x200)) {\n    initialize_application_data_08006e10(param_1,param_2);\n  }\n  uVar3 = *(ushort *)(param_2 + 3);\n  uVar2 = uVar3 & 1;\n  if ((uVar3 & 1) == 0) {\n    if (-1 < (int)((uint)uVar3 << 0x1e)) {\n      uVar2 = param_2[5];\n    }\n    param_2[2] = uVar2;\n  }\n  else {\n    param_2[2] = 0;\n    param_2[6] = -param_2[5];\n  }\n  if (param_2[4] == 0) {\n    uVar3 = *(ushort *)(param_2 + 3);\n    uVar2 = (int)(short)uVar3 & 0x80;\n    if (uVar2 != 0) {\nLAB_08006a14:\n      *(ushort *)(param_2 + 3) = uVar3 | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    uVar2 = 0;\n  }\n  return uVar2;\n}\n\n",
            "current_name": "process_and_initialize_data_080069e4",
            "entrypoint": "0x080069e4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080069e4": "process_and_initialize_data_080069e4",
                "iVar1": "data_ptr",
                "initialize_application_data_08006e10": "initialize_application_data",
                "param_1": "output_param",
                "param_2": "input_param",
                "process_data_080061f0": "process_data",
                "uVar2": "result",
                "uVar3": "flags"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006ac0": {
            "additional_data": {
                "FUN_08006ac0": {
                    "execute_and_check": 1,
                    "execute_and_loop": 1,
                    "execute_and_process_data": 2,
                    "execute_binary_function": 1,
                    "execute_function": 7,
                    "execute_reverse": 1
                },
                "UNRECOVERED_JUMPTABLE_00": {
                    "jmp_table_func": 1,
                    "jump_table": 6,
                    "jump_table1": 1,
                    "jump_table_func": 1,
                    "jump_table_function": 1,
                    "jumptable": 3,
                    "recovered_jump_table": 1,
                    "recovery_jump_table": 1,
                    "unrecovered_jump_table": 6
                },
                "bVar11": {
                    "bool_value": 1,
                    "bool_var": 3,
                    "bool_var11": 1,
                    "boolean_variable": 1,
                    "condition": 2,
                    "condition_flag": 1,
                    "flag": 4,
                    "flag1": 1,
                    "is_condition_met": 1,
                    "is_condition_true": 2,
                    "is_conditional": 1,
                    "is_flag_set": 2,
                    "is_zero": 4,
                    "is_zero_flag": 1,
                    "reverse_flag": 1
                },
                "check_and_execute_function_08006f00": {
                    "check_and_execute": 2,
                    "check_and_execute_function": 3
                },
                "iVar2": {
                    "count": 3,
                    "counter": 1,
                    "function_result": 1,
                    "i_var": 1,
                    "initial_value": 1,
                    "int_value": 1,
                    "integer_var2": 1,
                    "offset": 4,
                    "reversei_var": 1,
                    "temp3": 1,
                    "temp_var": 4,
                    "temp_var1": 3,
                    "temporary_variable": 1,
                    "tmp_var": 1,
                    "value": 1,
                    "var1": 2,
                    "variable1": 1,
                    "variable2": 2
                },
                "iVar4": {
                    "loop_iterations": 1,
                    "temp_var1": 1,
                    "var4": 1
                },
                "iVar5": {
                    "var5": 1
                },
                "iVar7": {
                    "i_var_temp": 1,
                    "initial_offset": 1,
                    "integer_var7": 1,
                    "loop_count": 2,
                    "loop_counter": 4,
                    "loop_var1": 1,
                    "nested_value": 1,
                    "reversei_var2": 1,
                    "temp": 1,
                    "temp_count": 1,
                    "temp_value": 4,
                    "temp_var": 1,
                    "temp_var1": 1,
                    "temp_var2": 4,
                    "tmp_var2": 1,
                    "var2": 1,
                    "var6": 1,
                    "variable2": 1,
                    "variable7": 2
                },
                "iVar9": {
                    "initial_count": 1,
                    "integer_var9": 1,
                    "loop_counter2": 1,
                    "loop_index": 1,
                    "loop_iterations": 1,
                    "loop_limit": 1,
                    "loop_size": 1,
                    "loop_var2": 1,
                    "remaining_bytes": 1,
                    "remaining_offset": 2,
                    "remaining_vars": 1,
                    "reversei_var3": 1,
                    "temp2": 1,
                    "temp_counter": 1,
                    "temp_var2": 2,
                    "temp_var3": 4,
                    "tmp_var3": 1,
                    "var3": 2,
                    "variable3": 1,
                    "variable9": 2
                },
                "pcVar8": {
                    "callback_function": 2,
                    "code_pointer": 1,
                    "function_pointer": 8,
                    "function_pointer2": 1,
                    "function_ptr": 5,
                    "jump_function": 1,
                    "p_code": 1,
                    "pointer3": 1,
                    "pointer8": 1,
                    "recovery_function": 1,
                    "reverse_code": 1,
                    "reversed_code": 1
                },
                "piVar3": {
                    "array_pointer1": 1,
                    "data": 1,
                    "function_args": 1,
                    "function_data": 5,
                    "function_data_ptr": 1,
                    "function_parameters": 1,
                    "function_params": 1,
                    "function_pointer": 2,
                    "function_pointer_array": 1,
                    "function_ptrs": 1,
                    "p_int_var1": 1,
                    "p_params": 1,
                    "parameter1": 1,
                    "parameters": 2,
                    "pointer1": 2,
                    "pointer3": 2,
                    "pointer_array": 1,
                    "pointer_array1": 1,
                    "pointer_to_process_data": 1,
                    "ptr_function_data": 1,
                    "reverse_data": 1,
                    "reverse_params": 1
                },
                "piVar4": {
                    "another_function_pointer": 1,
                    "data_pointer": 1,
                    "p_int_var2": 1,
                    "p_temp": 1,
                    "pi_var_temp": 1,
                    "pointer4": 2,
                    "pointer_array2": 1,
                    "pointer_var": 3,
                    "processed_data": 1,
                    "temp_data": 2,
                    "temp_pointer": 1,
                    "temp_pointer1": 1
                },
                "piVar5": {
                    "pointer3": 1
                },
                "piVar6": {
                    "array_pointer3": 1,
                    "pointer4": 1
                },
                "piVar8": {
                    "array_pointer4": 1
                },
                "process_data_080061f0": {
                    "process_data": 1
                },
                "puVar1": {
                    "arg_pointer1": 1,
                    "array_pointer2": 1,
                    "data": 1,
                    "data_pointer": 2,
                    "data_ptr": 2,
                    "execute_result": 1,
                    "function_results": 1,
                    "input_data": 2,
                    "p_data": 1,
                    "p_result": 1,
                    "parameter2": 1,
                    "pointer": 1,
                    "pointer1": 2,
                    "pointer2": 2,
                    "pointer_to_data": 1,
                    "pointer_to_uint": 1,
                    "pointer_uint": 1,
                    "pointer_variable": 1,
                    "ptr_data": 1,
                    "result": 1,
                    "return_value": 1,
                    "reverse_data": 1,
                    "values": 1
                },
                "run_infinite_loop_0800573c": {
                    "run_infinite_loop": 5
                },
                "uVar1": {
                    "flags": 1
                },
                "uVar10": {
                    "another_uint_value": 1,
                    "original_data": 1,
                    "original_return_value": 1,
                    "original_value": 1,
                    "temp_data": 1,
                    "temp_uint_value": 1,
                    "temp_value": 3,
                    "temp_value2": 1,
                    "temp_var": 3,
                    "temp_var3": 2,
                    "temp_var4": 2,
                    "uint_var": 1,
                    "unsigned_variable3": 1,
                    "value": 1,
                    "value3": 1,
                    "var3": 1,
                    "variable10": 2
                },
                "uVar12": {
                    "infinite_loop_result": 1,
                    "loop_result": 4,
                    "result": 8,
                    "return_value": 4,
                    "reverse_u_var3": 1,
                    "unsigned_var12": 1,
                    "unsigned_variable4": 1,
                    "variable12": 1
                },
                "uVar5": {
                    "data": 2,
                    "data_value": 1,
                    "loop_counter": 1,
                    "loop_counter_uint": 1,
                    "offset_value": 1,
                    "reverse_u_var": 1,
                    "shifted_value": 1,
                    "temp": 1,
                    "u_value": 1,
                    "u_var5": 1,
                    "uint_value": 2,
                    "uint_var": 2,
                    "unsigned_var5": 1,
                    "unsigned_variable1": 1,
                    "ushort_value": 1,
                    "ushort_var": 1,
                    "value": 2,
                    "value1": 1,
                    "value2": 1,
                    "var1": 1,
                    "variable5": 2
                },
                "uVar6": {
                    "data_flag": 1,
                    "data_value": 1,
                    "flag": 3,
                    "flags": 5,
                    "loop_control_var": 1,
                    "loop_count": 1,
                    "loop_counter": 1,
                    "reverse_u_var2": 1,
                    "status_flag": 1,
                    "u_flags": 1,
                    "u_var6": 1,
                    "unsigned_var6": 1,
                    "unsigned_variable2": 1,
                    "ushort_value": 2,
                    "ushort_var": 2,
                    "ushort_var2": 1,
                    "value1": 1,
                    "value2": 1,
                    "var2": 1,
                    "variable6": 2
                }
            },
            "called": [
                "FUN_080061f0",
                "FUN_08006f00",
                "FUN_0800573c"
            ],
            "calling": [
                "FUN_0800611c",
                "FUN_08007090"
            ],
            "code": "\nvoid execute_binary_function_08006ac0(void)\n\n{\n  uint *pointer1;\n  int offset;\n  int *function_data;\n  int *pointer_var;\n  uint variable5;\n  ushort flags;\n  int temp_var2;\n  code *function_pointer;\n  int temp_var3;\n  uint temp_var;\n  code *jump_table;\n  bool flag;\n  undefined8 result;\n  \n  check_and_execute_function(6);\n  jump_table = (code *)0x8006acf;\n  result = run_infinite_loop(1);\n  function_data = (int *)((ulonglong)result >> 0x20);\n  pointer1 = (uint *)result;\n  flags = *(ushort *)(function_data + 3);\n  variable5 = (uint)flags;\n  if ((int)(variable5 << 0x1c) < 0) {\n    offset = function_data[4];\n    if (offset != 0) {\n      temp_var2 = variable5 << 0x1e;\n      flag = temp_var2 != 0;\n      if (flag) {\n        temp_var2 = 0;\n      }\n      temp_var3 = *function_data;\n      if (!flag) {\n        temp_var2 = function_data[5];\n      }\n      *function_data = offset;\n      function_data[2] = temp_var2;\n      for (temp_var3 = temp_var3 - offset; 0 < temp_var3; temp_var3 = temp_var3 - temp_var2) {\n        temp_var2 = (*(code *)function_data[10])(pointer1,function_data[8],offset,temp_var3);\n        if (temp_var2 < 1) {\n          flags = *(ushort *)(function_data + 3);\n          goto LAB_08006bc6;\n        }\n        offset = offset + temp_var2;\n      }\n    }\n  }\n  else if (((0 < function_data[1]) || (0 < function_data[0x10])) &&\n          (function_pointer = (code *)function_data[0xb], function_pointer != (code *)0x0)) {\n    temp_var = *pointer1;\n    *pointer1 = 0;\n    if ((flags & 0x1000) == 0) {\n      offset = (*function_pointer)(pointer1,function_data[8],variable5 & 0x1000,1);\n      if ((offset == -1) && (variable5 = *pointer1, variable5 != 0)) {\n        if ((variable5 != 0x1d) && (variable5 != 0x16)) {\n          *(ushort *)(function_data + 3) = *(ushort *)(function_data + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          (*jump_table)();\n          return;\n        }\n        *pointer1 = temp_var;\n        goto LAB_08006aea;\n      }\n    }\n    else {\n      offset = function_data[0x15];\n    }\n    if (((int)((uint)*(ushort *)(function_data + 3) << 0x1d) < 0) &&\n       (offset = offset - function_data[1], function_data[0xd] != 0)) {\n      offset = offset - function_data[0x10];\n    }\n    offset = (*(code *)function_data[0xb])(pointer1,function_data[8],offset,0);\n    flags = *(ushort *)(function_data + 3);\n    if ((offset == -1) &&\n       ((0x1d < *pointer1 || (-1 < (int)((0x20400001U >> (*pointer1 & 0xff)) << 0x1f))))) {\nLAB_08006bc6:\n      *(ushort *)(function_data + 3) = flags | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006bd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jump_table)(0xffffffff);\n      return;\n    }\n    function_data[1] = 0;\n    *function_data = function_data[4];\n    if (((int)((uint)flags << 0x13) < 0) && ((offset != -1 || (*pointer1 == 0)))) {\n      function_data[0x15] = offset;\n    }\n    pointer_var = (int *)function_data[0xd];\n    *pointer1 = temp_var;\n    if (pointer_var != (int *)0x0) {\n      if (pointer_var != function_data + 0x11) {\n        process_data(pointer1);\n      }\n      function_data[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08006b66. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jump_table)();\n      return;\n    }\n  }\nLAB_08006aea:\n                    /* WARNING: Could not recover jumptable at 0x08006aec. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)(0);\n  return;\n}\n\n",
            "current_name": "execute_binary_function_08006ac0",
            "entrypoint": "0x08006ac0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006ac0": "execute_binary_function_08006ac0",
                "UNRECOVERED_JUMPTABLE_00": "jump_table",
                "bVar11": "flag",
                "check_and_execute_function_08006f00": "check_and_execute_function",
                "iVar2": "offset",
                "iVar4": "temp_var1",
                "iVar7": "temp_var2",
                "iVar9": "temp_var3",
                "pcVar8": "function_pointer",
                "piVar3": "function_data",
                "piVar4": "pointer_var",
                "process_data_080061f0": "process_data",
                "puVar1": "pointer1",
                "run_infinite_loop_0800573c": "run_infinite_loop",
                "uVar1": "flags",
                "uVar10": "temp_var",
                "uVar12": "result",
                "uVar5": "variable5",
                "uVar6": "flags"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006be0": {
            "additional_data": {
                "FUN_08006be0": {
                    "process_data": 22,
                    "process_function": 1
                },
                "UNRECOVERED_JUMPTABLE_00": {
                    "jump_table": 14,
                    "jump_table_entry": 1,
                    "jump_table_ptr": 1,
                    "jump_table_var": 1,
                    "jumptable": 2,
                    "jumptable_function": 1,
                    "unrecovered_jump_table": 1
                },
                "bVar10": {
                    "bool_flag": 1,
                    "bool_var": 2,
                    "bool_var10": 1,
                    "flag": 3,
                    "flag2": 1,
                    "flag_var1": 1,
                    "is_negative": 1,
                    "is_true": 1,
                    "var10": 1
                },
                "iVar2": {
                    "condition": 1,
                    "config_var1": 1,
                    "count": 9,
                    "counter": 1,
                    "data_size": 1,
                    "index": 1,
                    "int_value": 1,
                    "offset": 5,
                    "param_value": 1,
                    "size": 1,
                    "temp_var": 1,
                    "temp_var1": 3,
                    "value": 1,
                    "value1": 1,
                    "var1": 1,
                    "var2": 2
                },
                "iVar6": {
                    "i_var6": 3,
                    "increment": 2,
                    "inner_var1": 1,
                    "int_value2": 1,
                    "loop_var": 1,
                    "loop_var1": 1,
                    "temp": 4,
                    "temp1": 1,
                    "temp3": 1,
                    "temp_int": 2,
                    "temp_var": 5,
                    "temp_var3": 1,
                    "temp_var5": 2,
                    "value": 1,
                    "value2": 1,
                    "var3": 2,
                    "var5": 1,
                    "var6": 1
                },
                "iVar8": {
                    "count": 1,
                    "counter": 1,
                    "i_var": 1,
                    "i_var8": 2,
                    "index": 1,
                    "int_value3": 1,
                    "length": 2,
                    "loop_count": 2,
                    "loop_counter": 3,
                    "loop_index": 2,
                    "loop_var": 2,
                    "loop_var1": 2,
                    "loop_var2": 1,
                    "remaining": 2,
                    "size": 1,
                    "temp4": 1,
                    "temp_int_2": 1,
                    "temp_var4": 1,
                    "temp_var6": 1,
                    "value3": 1,
                    "var6": 1,
                    "var8": 1
                },
                "param_1": {
                    "data": 7,
                    "data_array": 3,
                    "data_buffer": 1,
                    "data_pointer": 3,
                    "data_ptr": 4,
                    "input_array": 5,
                    "input_data": 4,
                    "input_param": 1,
                    "param1": 1,
                    "param_array": 1
                },
                "param_2": {
                    "config": 3,
                    "config_data": 1,
                    "data_info": 1,
                    "info": 1,
                    "info_ptr": 3,
                    "input_int_array": 1,
                    "options": 1,
                    "output_array": 4,
                    "output_data": 2,
                    "output_param": 1,
                    "param2": 1,
                    "param_array": 3,
                    "param_pointer": 4,
                    "param_ptr": 1,
                    "parameters": 1,
                    "params": 1,
                    "settings": 1
                },
                "pcVar7": {
                    "callback": 3,
                    "callback_fn": 1,
                    "callback_func": 3,
                    "code_ptr": 2,
                    "func": 1,
                    "func_ptr": 6,
                    "function_pointer": 6,
                    "function_ptr": 8,
                    "function_var": 1
                },
                "piVar3": {
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "pointer": 2,
                    "pointer1": 1,
                    "pointer_var": 3,
                    "pointer_var3": 1,
                    "ptr": 8,
                    "ptr_var": 2,
                    "temp": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 3,
                    "temp_var": 1,
                    "temp_var2": 3,
                    "var2": 1,
                    "var3": 1,
                    "var3_pointer": 1
                },
                "uVar1": {
                    "result": 13,
                    "return_value": 18
                },
                "uVar10": {
                    "b_var10": 1,
                    "bool_value": 2,
                    "bool_var": 5,
                    "boolean_value": 1,
                    "boolean_var": 1,
                    "check": 1,
                    "comparison_result": 1,
                    "condition": 1,
                    "condition1": 1,
                    "condition_flag": 1,
                    "flag": 1,
                    "flag2": 1,
                    "flag_check": 1,
                    "is_negative": 1,
                    "temp_bool": 1,
                    "temp_flag": 1,
                    "use_flag": 1
                },
                "uVar11": {
                    "jumptable_result": 1,
                    "temp_var_2": 1
                },
                "uVar4": {
                    "temp": 1,
                    "temp2": 1,
                    "temp_uint": 2,
                    "temp_value": 2,
                    "temp_var2": 2,
                    "temp_var3": 2,
                    "u_short_var": 1,
                    "u_var4": 2,
                    "ushort_value": 6,
                    "ushort_var": 1,
                    "value": 6,
                    "value2": 1,
                    "var1": 2,
                    "var3": 1,
                    "var4": 1
                },
                "uVar5": {
                    "flag": 10,
                    "flag_value": 1,
                    "flags": 2,
                    "original_ushort_value": 1,
                    "original_value": 1,
                    "temp_flag": 1,
                    "temp_ushort": 2,
                    "temp_var4": 2,
                    "u_short_val": 1,
                    "u_var5": 1,
                    "ushort_flag": 1,
                    "ushort_temp": 1,
                    "ushort_var": 1,
                    "ushort_var2": 1,
                    "ushort_var5": 1,
                    "var2": 2,
                    "var4": 1,
                    "var5": 1
                },
                "uVar9": {
                    "loop_var2": 1,
                    "old_value": 1,
                    "original_data_value": 1,
                    "original_value": 1,
                    "temp": 2,
                    "temp4": 1,
                    "temp5": 1,
                    "temp_uint_2": 1,
                    "temp_value": 8,
                    "temp_var": 3,
                    "temp_var2": 1,
                    "temp_var3": 2,
                    "temp_var5": 1,
                    "temp_var7": 1,
                    "u_var9": 2,
                    "uint_var": 1,
                    "var6": 1,
                    "var7": 1,
                    "var9": 1
                },
                "unaff_r4": {
                    "arg1": 2,
                    "register_4": 1,
                    "register_var1": 1,
                    "temp2": 1,
                    "unaff_r4": 7,
                    "unaff_register_4": 1,
                    "unaff_temp_var4": 1,
                    "unaff_value4": 1,
                    "unaff_var4": 2,
                    "unaffected_r4": 1,
                    "unused4": 1,
                    "unused_parameter1": 1,
                    "unused_value_1": 1,
                    "unused_var": 1,
                    "unused_var1": 5,
                    "unused_var_1": 1,
                    "var1": 1,
                    "var4": 2
                },
                "unaff_r5": {
                    "arg2": 2,
                    "register_5": 1,
                    "register_var2": 1,
                    "temp3": 1,
                    "unaff_r5": 7,
                    "unaff_register_5": 1,
                    "unaff_temp_var5": 1,
                    "unaff_value5": 1,
                    "unaff_var5": 2,
                    "unaffected_r5": 1,
                    "unused5": 1,
                    "unused_parameter2": 1,
                    "unused_value_2": 1,
                    "unused_var": 1,
                    "unused_var2": 5,
                    "unused_var_2": 1,
                    "var2": 1,
                    "var5": 2
                }
            },
            "called": [
                "FUN_08006cb4"
            ],
            "calling": [
                "FUN_08006344"
            ],
            "code": "\nundefined4 process_data_08006be0(uint *data,int *param_pointer)\n\n{\n  undefined4 return_value;\n  int count;\n  int *ptr;\n  uint ushort_value;\n  ushort flag;\n  int temp_var;\n  undefined4 unaff_r4;\n  undefined4 unaff_r5;\n  code *function_ptr;\n  int loop_counter;\n  uint temp_value;\n  code *jump_table;\n  bool flag;\n  \n  if (param_pointer[4] != 0) {\n    if ((data != (uint *)0x0) && (data[6] == 0)) {\n      initialize_memory_blocks_08006cb4();\n    }\n    if (param_pointer == &DAT_08007904) {\n      param_pointer = (int *)data[1];\n    }\n    else if (param_pointer == (int *)&DAT_08007924) {\n      param_pointer = (int *)data[2];\n    }\n    else if (param_pointer == (int *)&DAT_080078e4) {\n      param_pointer = (int *)data[3];\n    }\n    if (*(short *)(param_pointer + 3) != 0) {\n      flag = *(ushort *)(param_pointer + 3);\n      ushort_value = (uint)flag;\n      if ((int)(ushort_value << 0x1c) < 0) {\n        count = param_pointer[4];\n        if (count != 0) {\n          temp_var = ushort_value << 0x1e;\n          flag = temp_var != 0;\n          if (flag) {\n            temp_var = 0;\n          }\n          loop_counter = *param_pointer;\n          if (!flag) {\n            temp_var = param_pointer[5];\n          }\n          *param_pointer = count;\n          param_pointer[2] = temp_var;\n          for (loop_counter = loop_counter - count; 0 < loop_counter; loop_counter = loop_counter - temp_var) {\n            temp_var = (*(code *)param_pointer[10])(data,param_pointer[8],count,loop_counter,unaff_r4,unaff_r5);\n            if (temp_var < 1) {\n              flag = *(ushort *)(param_pointer + 3);\n              goto LAB_08006bc6;\n            }\n            count = count + temp_var;\n          }\n        }\n      }\n      else if (((0 < param_pointer[1]) || (0 < param_pointer[0x10])) &&\n              (function_ptr = (code *)param_pointer[0xb], function_ptr != (code *)0x0)) {\n        temp_value = *data;\n        *data = 0;\n        if ((flag & 0x1000) == 0) {\n          count = (*function_ptr)(data,param_pointer[8],ushort_value & 0x1000,1);\n          if ((count == -1) && (ushort_value = *data, ushort_value != 0)) {\n            if ((ushort_value != 0x1d) && (ushort_value != 0x16)) {\n              *(ushort *)(param_pointer + 3) = *(ushort *)(param_pointer + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              return_value = (*jump_table)();\n              return return_value;\n            }\n            *data = temp_value;\n            goto LAB_08006aea;\n          }\n        }\n        else {\n          count = param_pointer[0x15];\n        }\n        if (((int)((uint)*(ushort *)(param_pointer + 3) << 0x1d) < 0) &&\n           (count = count - param_pointer[1], param_pointer[0xd] != 0)) {\n          count = count - param_pointer[0x10];\n        }\n        count = (*(code *)param_pointer[0xb])(data,param_pointer[8],count,0);\n        flag = *(ushort *)(param_pointer + 3);\n        if ((count == -1) &&\n           ((0x1d < *data || (-1 < (int)((0x20400001U >> (*data & 0xff)) << 0x1f))))) {\nLAB_08006bc6:\n          *(ushort *)(param_pointer + 3) = flag | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006bd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          return_value = (*jump_table)(0xffffffff);\n          return return_value;\n        }\n        param_pointer[1] = 0;\n        *param_pointer = param_pointer[4];\n        if (((int)((uint)flag << 0x13) < 0) && ((count != -1 || (*data == 0)))) {\n          param_pointer[0x15] = count;\n        }\n        ptr = (int *)param_pointer[0xd];\n        *data = temp_value;\n        if (ptr != (int *)0x0) {\n          if (ptr != param_pointer + 0x11) {\n            process_data_08006be0_080061f0(data);\n          }\n          param_pointer[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08006b66. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          return_value = (*jump_table)();\n          return return_value;\n        }\n      }\nLAB_08006aea:\n                    /* WARNING: Could not recover jumptable at 0x08006aec. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      return_value = (*jump_table)(0);\n      return return_value;\n    }\n  }\n  return 0;\n}\n\n",
            "code_backup": "\nundefined4 FUN_08006be0(uint *param_1,int *param_2)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  int *piVar3;\n  uint uVar4;\n  ushort uVar5;\n  int iVar6;\n  undefined4 unaff_r4;\n  undefined4 unaff_r5;\n  code *pcVar7;\n  int iVar8;\n  uint uVar9;\n  code *UNRECOVERED_JUMPTABLE_00;\n  bool bVar10;\n  \n  if (param_2[4] != 0) {\n    if ((param_1 != (uint *)0x0) && (param_1[6] == 0)) {\n      FUNC_08006cb4();\n    }\n    if (param_2 == &DAT_08007904) {\n      param_2 = (int *)param_1[1];\n    }\n    else if (param_2 == (int *)&DAT_08007924) {\n      param_2 = (int *)param_1[2];\n    }\n    else if (param_2 == (int *)&DAT_080078e4) {\n      param_2 = (int *)param_1[3];\n    }\n    if (*(short *)(param_2 + 3) != 0) {\n      uVar5 = *(ushort *)(param_2 + 3);\n      uVar4 = (uint)uVar5;\n      if ((int)(uVar4 << 0x1c) < 0) {\n        iVar2 = param_2[4];\n        if (iVar2 != 0) {\n          iVar6 = uVar4 << 0x1e;\n          bVar10 = iVar6 != 0;\n          if (bVar10) {\n            iVar6 = 0;\n          }\n          iVar8 = *param_2;\n          if (!bVar10) {\n            iVar6 = param_2[5];\n          }\n          *param_2 = iVar2;\n          param_2[2] = iVar6;\n          for (iVar8 = iVar8 - iVar2; 0 < iVar8; iVar8 = iVar8 - iVar6) {\n            iVar6 = (*(code *)param_2[10])(param_1,param_2[8],iVar2,iVar8,unaff_r4,unaff_r5);\n            if (iVar6 < 1) {\n              uVar5 = *(ushort *)(param_2 + 3);\n              goto LAB_08006bc6;\n            }\n            iVar2 = iVar2 + iVar6;\n          }\n        }\n      }\n      else if (((0 < param_2[1]) || (0 < param_2[0x10])) &&\n              (pcVar7 = (code *)param_2[0xb], pcVar7 != (code *)0x0)) {\n        uVar9 = *param_1;\n        *param_1 = 0;\n        if ((uVar5 & 0x1000) == 0) {\n          iVar2 = (*pcVar7)(param_1,param_2[8],uVar4 & 0x1000,1);\n          if ((iVar2 == -1) && (uVar4 = *param_1, uVar4 != 0)) {\n            if ((uVar4 != 0x1d) && (uVar4 != 0x16)) {\n              *(ushort *)(param_2 + 3) = *(ushort *)(param_2 + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              uVar1 = (*UNRECOVERED_JUMPTABLE_00)();\n              return uVar1;\n            }\n            *param_1 = uVar9;\n            goto LAB_08006aea;\n          }\n        }\n        else {\n          iVar2 = param_2[0x15];\n        }\n        if (((int)((uint)*(ushort *)(param_2 + 3) << 0x1d) < 0) &&\n           (iVar2 = iVar2 - param_2[1], param_2[0xd] != 0)) {\n          iVar2 = iVar2 - param_2[0x10];\n        }\n        iVar2 = (*(code *)param_2[0xb])(param_1,param_2[8],iVar2,0);\n        uVar5 = *(ushort *)(param_2 + 3);\n        if ((iVar2 == -1) &&\n           ((0x1d < *param_1 || (-1 < (int)((0x20400001U >> (*param_1 & 0xff)) << 0x1f))))) {\nLAB_08006bc6:\n          *(ushort *)(param_2 + 3) = uVar5 | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006bd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          uVar1 = (*UNRECOVERED_JUMPTABLE_00)(0xffffffff);\n          return uVar1;\n        }\n        param_2[1] = 0;\n        *param_2 = param_2[4];\n        if (((int)((uint)uVar5 << 0x13) < 0) && ((iVar2 != -1 || (*param_1 == 0)))) {\n          param_2[0x15] = iVar2;\n        }\n        piVar3 = (int *)param_2[0xd];\n        *param_1 = uVar9;\n        if (piVar3 != (int *)0x0) {\n          if (piVar3 != param_2 + 0x11) {\n            process_data_080061f0(param_1);\n          }\n          param_2[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08006b66. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          uVar1 = (*UNRECOVERED_JUMPTABLE_00)();\n          return uVar1;\n        }\n      }\nLAB_08006aea:\n                    /* WARNING: Could not recover jumptable at 0x08006aec. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      uVar1 = (*UNRECOVERED_JUMPTABLE_00)(0);\n      return uVar1;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_data_08006be0",
            "entrypoint": "0x08006be0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006be0": "process_data_08006be0",
                "UNRECOVERED_JUMPTABLE_00": "jump_table",
                "bVar10": "flag",
                "iVar2": "count",
                "iVar6": "temp_var",
                "iVar8": "loop_counter",
                "param_1": "data",
                "param_2": "param_pointer",
                "pcVar7": "function_ptr",
                "piVar3": "ptr",
                "uVar1": "return_value",
                "uVar4": "ushort_value",
                "uVar5": "flag",
                "uVar9": "temp_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006c40": {
            "additional_data": {
                "0": {
                    "init_value": 1
                },
                "0x19": {
                    "init_value25": 1
                },
                "0xb": {
                    "func_ptr3": 1
                },
                "0xc": {
                    "label_ptr": 1
                },
                "0xe": {
                    "param3_copy": 1
                },
                "1": {
                    "init_value2": 1
                },
                "10": {
                    "func_ptr2": 1
                },
                "2": {
                    "init_value3": 1
                },
                "3": {
                    "param2_copy": 1
                },
                "4": {
                    "init_value4": 1
                },
                "5": {
                    "init_value5": 1
                },
                "6": {
                    "init_value6": 1
                },
                "8": {
                    "self_pointer": 1
                },
                "9": {
                    "func_ptr1": 1
                },
                "FUN_08006c40": {
                    "initialize_data": 7,
                    "initialize_data_struct": 1,
                    "initialize_data_structure": 5,
                    "initialize_data_structures": 1,
                    "initialize_function": 1,
                    "initialize_memory": 10,
                    "initialize_memory_structure": 1,
                    "initialize_parameters": 4,
                    "initialize_params": 1
                },
                "LAB_08006fb6_1": {
                    "label": 5,
                    "label08006fb6": 1,
                    "label1": 3,
                    "label_08006fb6_1": 1,
                    "label_1": 2,
                    "some_label": 4
                },
                "fill_memory_with_byte_080061e0": {
                    "fill_memory": 4,
                    "fill_memory_with_byte": 10,
                    "fill_memory_with_zero": 1,
                    "fill_memory_with_zeroes": 3,
                    "initialize_memory": 1
                },
                "outputArray": {
                    "array": 1
                },
                "param_1": {
                    "data": 4,
                    "data_array": 1,
                    "data_pointer": 1,
                    "data_struct": 1,
                    "data_struct_ptr": 1,
                    "data_structure": 5,
                    "memory": 6,
                    "memory_array": 1,
                    "memory_block": 1,
                    "memory_ptr": 1,
                    "memory_structure": 1,
                    "output": 1,
                    "output_array": 2,
                    "parameters": 3,
                    "params_array": 1,
                    "result": 1
                },
                "param_2": {
                    "initial_value_1": 1,
                    "param2": 1,
                    "value1": 23,
                    "value2": 1,
                    "value_1": 5
                },
                "param_3": {
                    "initial_value_2": 1,
                    "param3": 1,
                    "value2": 23,
                    "value3": 1,
                    "value_2": 5
                },
                "value1": {
                    "initial_value": 1
                },
                "value2": {
                    "initial_value2": 1
                }
            },
            "called": [
                "FUN_080061e0"
            ],
            "calling": [
                "FUN_08006cb4"
            ],
            "code": "\nvoid initialize_data_structure_08006c40(undefined4 *memory,undefined2 value1,undefined2 value2)\n\n{\n  *memory = 0;\n  memory[1] = 0;\n  memory[2] = 0;\n  *(undefined2 *)(memory + 3) = value1;\n  memory[0x19] = 0;\n  *(undefined2 *)((int)memory + 0xe) = value2;\n  memory[4] = 0;\n  memory[5] = 0;\n  memory[6] = 0;\n  fill_memory_with_byte(memory + 0x17,0,8);\n  memory[8] = memory;\n  memory[9] = 0x8006f39;\n  memory[10] = 0x8006f5b;\n  memory[0xb] = 0x8006f93;\n  memory[0xc] = &label;\n  return;\n}\n\n",
            "current_name": "initialize_data_structure_08006c40",
            "entrypoint": "0x08006c40",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006c40": "initialize_data_structure_08006c40",
                "LAB_08006fb6_1": "label",
                "fill_memory_with_byte_080061e0": "fill_memory_with_byte",
                "param_1": "memory",
                "param_2": "value1",
                "param_3": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006c88": {
            "additional_data": {
                "FUN_08006c88": {
                    "allocate_and_initialize_block": 1,
                    "allocate_and_initialize_memory": 12,
                    "allocate_and_initialize_memory_block": 10,
                    "initialize_and_allocate_memory": 1,
                    "initialize_memory_block": 7
                },
                "allocate_and_initialize_memory_block_08006288": {
                    "allocate_and_initialize_memory_block": 2
                },
                "fill_memory_with_byte_080061e0": {
                    "fill_memory_with_byte": 2
                },
                "iVar2": {
                    "allocated_memory_size": 1,
                    "allocated_size": 1,
                    "block_size": 13,
                    "byte_offset": 1,
                    "calculated_offset": 1,
                    "memory_offset": 2,
                    "memory_size": 2,
                    "offset": 6,
                    "total_size": 4
                },
                "param_1": {
                    "address": 1,
                    "allocation_size": 1,
                    "arg1": 1,
                    "base_address": 2,
                    "initial_value": 4,
                    "input": 1,
                    "input_parameter": 1,
                    "input_value": 1,
                    "memory_block": 1,
                    "memory_block_address": 2,
                    "memory_block_param": 2,
                    "memory_block_params": 1,
                    "memory_param": 2,
                    "param": 1,
                    "param1": 6,
                    "size": 3,
                    "target_address": 1
                },
                "param_2": {
                    "arg2": 1,
                    "block_count": 2,
                    "block_size": 2,
                    "count": 6,
                    "elements_count": 1,
                    "num_allocations": 1,
                    "num_blocks": 7,
                    "num_elements": 3,
                    "number_of_blocks": 1,
                    "param2": 5,
                    "size": 1,
                    "size_parameter": 1
                },
                "puVar1": {
                    "allocated_block": 5,
                    "allocated_memory": 6,
                    "allocated_memory_block": 1,
                    "memory_block": 10,
                    "memory_block_ptr": 3,
                    "memory_pointer": 1,
                    "memory_ptr": 1,
                    "ptr_to_block": 1,
                    "result": 2,
                    "result_pointer": 1
                }
            },
            "called": [
                "FUN_08006288",
                "FUN_080061e0"
            ],
            "calling": [
                "FUN_08006d14"
            ],
            "code": "\nundefined4 * allocate_and_initialize_memory_block_08006c88(undefined4 param1,int num_blocks)\n\n{\n  undefined4 *memory_block;\n  int block_size;\n  \n  block_size = (num_blocks + -1) * 0x68;\n  memory_block = (undefined4 *)allocate_and_initialize_memory_block_08006c88(param1,block_size + 0x74);\n  if (memory_block != (undefined4 *)0x0) {\n    *memory_block = 0;\n    memory_block[1] = num_blocks;\n    memory_block[2] = memory_block + 3;\n    fill_memory_with_byte(memory_block + 3,0,block_size + 0x68);\n  }\n  return memory_block;\n}\n\n",
            "current_name": "allocate_and_initialize_memory_block_08006c88",
            "entrypoint": "0x08006c88",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006c88": "allocate_and_initialize_memory_block_08006c88",
                "allocate_and_initialize_memory_block_08006288": "allocate_and_initialize_memory_block",
                "fill_memory_with_byte_080061e0": "fill_memory_with_byte",
                "iVar2": "block_size",
                "param_1": "param1",
                "param_2": "num_blocks",
                "puVar1": "memory_block"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006cb4": {
            "additional_data": {
                "DAT_200000fc": {
                    "data_block": 1
                },
                "FUN_08006cb4": {
                    "initialize_data": 2,
                    "initialize_data_blocks": 4,
                    "initialize_data_structure": 2,
                    "initialize_data_structures": 1,
                    "initialize_function": 1,
                    "initialize_if_needed": 1,
                    "initialize_memory": 15,
                    "initialize_memory_and_data": 1,
                    "initialize_memory_blocks": 3,
                    "initialize_structure": 1
                },
                "LAB_08006c34_1": {
                    "label": 1
                },
                "initialize_data_structure_08006c40": {
                    "initialize_data_structure": 12,
                    "initialize_structure": 5
                },
                "initialize_memory_block_08006d14": {
                    "allocate_memory_block": 5,
                    "create_block": 1,
                    "create_memory_block": 1,
                    "initialize_block": 3,
                    "initialize_memory_block": 7
                },
                "param_1": {
                    "blocks": 1,
                    "blocks_array": 1,
                    "data": 1,
                    "data_array": 1,
                    "data_blocks": 3,
                    "data_structure": 2,
                    "function_data": 1,
                    "function_parameters": 1,
                    "memory_array": 2,
                    "memory_block": 9,
                    "memory_blocks": 4,
                    "memory_blocks_array": 1,
                    "memory_data_array": 1,
                    "memory_ptr": 1,
                    "param": 1,
                    "structure_ptr": 1
                },
                "puVar2": {
                    "another_data_block": 1,
                    "check": 1,
                    "check_ptr": 1,
                    "data_ptr": 2,
                    "default_block": 2,
                    "default_value": 2,
                    "initialized_ptr": 1,
                    "initialized_ptr_variable_2": 1,
                    "pointer": 7,
                    "pointer_offset": 1,
                    "secondary_data": 1,
                    "temp": 1,
                    "temp_pointer": 2,
                    "temp_ptr": 8
                },
                "uVar1": {
                    "block_ptr": 1,
                    "initialization_result": 1,
                    "initialized_block": 3,
                    "initialized_value": 1,
                    "initialized_variable_1": 1,
                    "memory_block": 5,
                    "result": 18,
                    "return_value": 1
                }
            },
            "called": [
                "FUN_08006c40",
                "FUN_08006d14"
            ],
            "calling": [
                "FUN_08006394",
                "FUN_080069e4",
                "FUN_080068f0",
                "FUN_08006d14",
                "FUN_08006be0",
                "FUN_08006344"
            ],
            "code": "\nvoid initialize_memory_blocks_08006cb4(undefined4 *memory_block)\n\n{\n  undefined4 result;\n  undefined4 *temp_ptr;\n  \n  if (memory_block[6] == 0) {\n    memory_block[0x12] = 0;\n    memory_block[0x13] = 0;\n    memory_block[0x14] = 0;\n    temp_ptr = &DAT_200000fc;\n    memory_block[10] = &label;\n    if (memory_block == &DAT_200000fc) {\n      temp_ptr = (undefined4 *)0x1;\n    }\n    if (memory_block == &DAT_200000fc) {\n      memory_block[6] = temp_ptr;\n    }\n    result = initialize_memory_block();\n    memory_block[1] = result;\n    result = initialize_memory_block(memory_block);\n    memory_block[2] = result;\n    result = initialize_memory_block(memory_block);\n    memory_block[3] = result;\n    initialize_data_structure(memory_block[1],4,0);\n    initialize_data_structure(memory_block[2],9,1);\n    initialize_data_structure(memory_block[3],0x12,2);\n    memory_block[6] = 1;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_memory_blocks_08006cb4",
            "entrypoint": "0x08006cb4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006cb4": "initialize_memory_blocks_08006cb4",
                "LAB_08006c34_1": "label",
                "initialize_data_structure_08006c40": "initialize_data_structure",
                "initialize_memory_block_08006d14": "initialize_memory_block",
                "param_1": "memory_block",
                "puVar2": "temp_ptr",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006d14": {
            "additional_data": {
                "DAT_200000fc": {
                    "data": 2,
                    "data_block": 2,
                    "initialized_data": 2,
                    "memory_block_data": 1,
                    "resource_data": 1
                },
                "DAT_20000114": {
                    "data_flag": 1,
                    "flag": 2,
                    "initialized_flag": 1,
                    "is_data_initialized": 4,
                    "is_initialized": 1,
                    "memory_initialized": 1
                },
                "DAT_20000144": {
                    "block_data": 1,
                    "block_list_pointer": 1,
                    "block_pointer": 1,
                    "memory_block": 1,
                    "memory_block_list": 1,
                    "metadata_array": 1,
                    "resource_list_ptr": 1
                },
                "FILL_BYTE": {
                    "fill_byte": 1
                },
                "FUNC_08006cb4": {
                    "initialization_function": 1,
                    "initialize_data": 4,
                    "initialize_function": 2,
                    "initialize_memory": 1,
                    "initialize_resource": 1
                },
                "FUNC_08006d14": {
                    "initialize_memory_block": 1
                },
                "FUN_08006d14": {
                    "allocate_and_initialize_memory": 1,
                    "find_first_zero_value": 1,
                    "find_initialized_pointer": 1,
                    "find_unused_resource": 1,
                    "initialize_block": 1,
                    "initialize_data": 2,
                    "initialize_data_block": 2,
                    "initialize_data_structure": 3,
                    "initialize_memory": 2,
                    "initialize_memory_block": 8,
                    "process_data": 1,
                    "reverse_and_allocate_memory": 1
                },
                "PTR_FUN_08006c88": {
                    "allocate_and_initialize_memory_block": 1
                },
                "allocate_and_initialize_memory_block_08006c88": {
                    "allocate_and_initialize_block": 1,
                    "allocate_and_initialize_memory_block": 10,
                    "allocate_memory": 1
                },
                "fill_memory_with_byte_080061e0": {
                    "fill_memory": 1,
                    "fill_memory_block": 1,
                    "fill_memory_with_byte": 11,
                    "fill_memory_with_value": 1
                },
                "int": {
                    "int": 1
                },
                "param_1": {
                    "error_code": 5,
                    "error_flag": 3,
                    "error_message": 1,
                    "input_array": 1,
                    "input_param": 1,
                    "input_pointer": 1,
                    "mem_block_param": 1,
                    "out_param": 1,
                    "output": 7,
                    "output_buffer": 2,
                    "output_data": 1,
                    "output_param": 1,
                    "output_pointer": 2,
                    "param_array": 1,
                    "result": 1,
                    "result_code": 1,
                    "result_ptr": 1
                },
                "param_2": {
                    "arg1": 1,
                    "arg2": 1,
                    "code1": 1,
                    "config_param": 1,
                    "flag_param": 1,
                    "input1": 3,
                    "input_param1": 1,
                    "input_param_1": 2,
                    "input_param_2": 1,
                    "param": 1,
                    "param2": 15,
                    "param_2": 2,
                    "size": 1
                },
                "param_3": {
                    "arg2": 1,
                    "arg3": 1,
                    "code2": 1,
                    "init_param": 1,
                    "input2": 3,
                    "input_param2": 1,
                    "input_param_2": 2,
                    "input_param_3": 1,
                    "length": 1,
                    "param": 1,
                    "param3": 15,
                    "param_3": 2,
                    "unused_param": 1
                },
                "param_4": {
                    "arg3": 1,
                    "byte_param": 2,
                    "byte_value": 3,
                    "input3": 3,
                    "input_param3": 1,
                    "input_param_3": 2,
                    "input_param_4": 1,
                    "length_param": 1,
                    "param": 1,
                    "param4": 14,
                    "param_4": 1,
                    "value": 1
                },
                "piVar1": {
                    "alloc_block": 1,
                    "block": 1,
                    "block_pointer": 1,
                    "current_block": 10,
                    "current_element": 1,
                    "current_frequency": 1,
                    "current_item": 1,
                    "current_pointer": 3,
                    "current_pointer1": 2,
                    "current_ptr": 2,
                    "current_resource": 1,
                    "inner_buffer": 1,
                    "iterator": 1,
                    "next_pointer1": 1,
                    "pointer": 1,
                    "ptr1": 2,
                    "result_pointer": 1
                },
                "piVar2": {
                    "block_address": 1,
                    "curr_block": 1,
                    "current_block": 1,
                    "current_data": 1,
                    "current_element": 3,
                    "current_entry": 1,
                    "current_item": 1,
                    "current_location": 1,
                    "current_pointer": 2,
                    "current_pointer2": 2,
                    "current_record": 1,
                    "current_struct": 1,
                    "current_sub_block": 1,
                    "current_sub_element": 1,
                    "current_value": 1,
                    "element": 1,
                    "inner_pointer": 2,
                    "inner_ptr": 1,
                    "nested_item": 1,
                    "nested_pointer": 1,
                    "nested_ptr": 1,
                    "next_pointer2": 1,
                    "next_resource": 1,
                    "ptr2": 2,
                    "temp_buffer": 1
                },
                "ppiVar3": {
                    "block_list": 8,
                    "block_pointer": 2,
                    "block_ptr_ptr": 1,
                    "data_block_pointer": 2,
                    "data_list": 1,
                    "data_structure": 3,
                    "list_pointer": 1,
                    "list_ptr": 1,
                    "memory_block": 1,
                    "memory_block_pointer": 2,
                    "memory_block_ptr": 1,
                    "nested_pointer_array": 1,
                    "outer_pointer": 1,
                    "pointer_array": 2,
                    "pointer_ptr_ptr": 1,
                    "ptr_array": 2,
                    "resource_list": 1
                },
                "short": {
                    "short": 1
                },
                "undefined4": {
                    "undefined4": 1
                }
            },
            "called": [
                "FUN_08006cb4",
                "FUN_080061e0",
                "FUN_08006c88"
            ],
            "calling": [
                "FUN_08006cb4"
            ],
            "code": "\nint * initialize_memory_block_08006d14(undefined4 *output,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int *current_block;\n  int *current_element;\n  int **block_list;\n  \n  if (DAT_20000114 == 0) {\n    initialize_memory_blocks_08006cb4(&DAT_200000fc);\n  }\n  block_list = (int **)&DAT_20000144;\n  do {\n    current_element = block_list[2];\n    current_block = block_list[1];\n    while (current_block = (int *)((int)current_block + -1), -1 < (int)current_block) {\n      if (*(short *)(current_element + 3) == 0) {\n        *(undefined2 *)((int)current_element + 0xe) = 0xffff;\n        current_element[0x19] = 0;\n        *(undefined2 *)(current_element + 3) = 1;\n        *current_element = 0;\n        current_element[2] = 0;\n        current_element[1] = 0;\n        current_element[4] = 0;\n        current_element[5] = 0;\n        current_element[6] = 0;\n        fill_memory_with_byte(current_element + 0x17,0,8,1,param4);\n        current_element[0xd] = 0;\n        current_element[0xe] = 0;\n        current_element[0x12] = 0;\n        current_element[0x13] = 0;\n        return current_element;\n      }\n      current_element = current_element + 0x1a;\n    }\n    if (*block_list == (int *)0x0) {\n      current_block = (int *)allocate_and_initialize_memory_block_08006d14(output,4);\n      *block_list = current_block;\n      if (current_block == (int *)0x0) {\n        *output = 0xc;\n        return (int *)0x0;\n      }\n    }\n    block_list = (int **)*block_list;\n  } while( true );\n}\n\n",
            "code_backup": "\nint * FUN_08006d14(undefined4 *param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int *piVar1;\n  int *piVar2;\n  int **ppiVar3;\n  \n  if (DAT_20000114 == 0) {\n    FUNC_08006cb4(&DAT_200000fc);\n  }\n  ppiVar3 = (int **)&DAT_20000144;\n  do {\n    piVar2 = ppiVar3[2];\n    piVar1 = ppiVar3[1];\n    while (piVar1 = (int *)((int)piVar1 + -1), -1 < (int)piVar1) {\n      if (*(short *)(piVar2 + 3) == 0) {\n        *(undefined2 *)((int)piVar2 + 0xe) = 0xffff;\n        piVar2[0x19] = 0;\n        *(undefined2 *)(piVar2 + 3) = 1;\n        *piVar2 = 0;\n        piVar2[2] = 0;\n        piVar2[1] = 0;\n        piVar2[4] = 0;\n        piVar2[5] = 0;\n        piVar2[6] = 0;\n        fill_memory_with_byte_080061e0(piVar2 + 0x17,0,8,1,param_4);\n        piVar2[0xd] = 0;\n        piVar2[0xe] = 0;\n        piVar2[0x12] = 0;\n        piVar2[0x13] = 0;\n        return piVar2;\n      }\n      piVar2 = piVar2 + 0x1a;\n    }\n    if (*ppiVar3 == (int *)0x0) {\n      piVar1 = (int *)allocate_and_initialize_memory_block_08006c88(param_1,4);\n      *ppiVar3 = piVar1;\n      if (piVar1 == (int *)0x0) {\n        *param_1 = 0xc;\n        return (int *)0x0;\n      }\n    }\n    ppiVar3 = (int **)*ppiVar3;\n  } while( true );\n}\n\n",
            "current_name": "initialize_memory_block_08006d14",
            "entrypoint": "0x08006d14",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006d14": "initialize_memory_block_08006d14",
                "allocate_and_initialize_memory_block_08006c88": "allocate_and_initialize_memory_block",
                "fill_memory_with_byte_080061e0": "fill_memory_with_byte",
                "param_1": "output",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "piVar1": "current_block",
                "piVar2": "current_element",
                "ppiVar3": "block_list"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006dc8": {
            "additional_data": {
                "FUN_08006dc8": {
                    "analyze_memory": 1,
                    "calculate_memory_protection": 1,
                    "calculate_page_attributes": 1,
                    "check_memory_access": 1,
                    "check_memory_and_set_permission": 1,
                    "check_memory_page_validity": 1,
                    "check_memory_permissions": 2,
                    "decode_and_initialize": 1,
                    "determine_memory_type": 1,
                    "get_memory_information": 1,
                    "get_memory_page_attributes": 1,
                    "get_memory_page_size": 2,
                    "identify_memory_state": 1,
                    "identify_page_type": 1,
                    "initialize_and_check_memory": 4,
                    "initialize_flags": 1,
                    "initialize_memory": 3,
                    "initialize_memory_check": 1,
                    "initialize_memory_page": 2,
                    "initialize_memory_status": 1,
                    "initialize_page": 1,
                    "initialize_page_status": 1
                },
                "auStack_4c": {
                    "auxiliary_stack": 2,
                    "buffer": 2,
                    "local_array": 1,
                    "local_buffer": 1,
                    "local_stack": 1,
                    "stack_array": 1,
                    "stack_buffer": 1,
                    "stack_data": 1,
                    "stack_memory": 1,
                    "stack_var": 4,
                    "stack_variable": 1,
                    "temp_array": 3,
                    "temp_buffer": 3,
                    "temp_data": 1,
                    "temp_stack": 2,
                    "temp_stack_var": 1,
                    "temporary_array": 1,
                    "temporary_buffer": 1,
                    "temporary_data": 2,
                    "temporary_stack": 1
                },
                "iVar1": {
                    "error_code": 4,
                    "initialize_result": 2,
                    "initialize_status": 1,
                    "result": 13,
                    "result_value": 1,
                    "return_value": 4,
                    "return_value1": 1,
                    "status": 3
                },
                "initialize_memory_page_size_08007004": {
                    "initialize_memory_page_size": 1
                },
                "local_48": {
                    "buffer_value": 1,
                    "flags": 1,
                    "header_value": 1,
                    "local_flag": 2,
                    "local_flags": 1,
                    "local_value": 2,
                    "local_var": 4,
                    "local_variable": 5,
                    "local_variable1": 1,
                    "mask": 1,
                    "memory_perms": 1,
                    "page_attributes": 1,
                    "page_flags": 1,
                    "page_info": 1,
                    "page_permissions": 1,
                    "page_size": 1,
                    "struct_value": 1,
                    "temp": 1,
                    "temp_value": 1,
                    "temp_var": 1,
                    "value": 2
                },
                "param_1": {
                    "address": 1,
                    "arg1": 7,
                    "arguments": 1,
                    "base_address": 1,
                    "input": 1,
                    "input1": 1,
                    "input_param": 2,
                    "input_parameter": 1,
                    "input_value": 2,
                    "memory_handle": 1,
                    "page_address": 4,
                    "param1": 4,
                    "param_1": 2,
                    "param_address": 1,
                    "parameter_1": 1,
                    "status": 1
                },
                "param_2": {
                    "address": 1,
                    "arg2": 7,
                    "buffer_address": 1,
                    "data": 2,
                    "data_address": 1,
                    "data_param": 1,
                    "data_pointer": 2,
                    "header": 1,
                    "header_address": 1,
                    "input2": 1,
                    "input_array": 2,
                    "memory_address": 1,
                    "memory_info": 4,
                    "param2": 4,
                    "parameter_2": 1,
                    "struct_address": 1
                },
                "param_3": {
                    "arg3": 1,
                    "output": 2,
                    "output1": 1,
                    "output_data": 1,
                    "output_flag": 1,
                    "output_flags": 1,
                    "output_param": 6,
                    "output_parameter": 1,
                    "output_status": 1,
                    "output_value": 1,
                    "output_values": 1,
                    "output_variable": 1,
                    "page_flag": 1,
                    "param3": 3,
                    "permission": 1,
                    "result": 3,
                    "result_code": 1,
                    "result_flag": 1,
                    "result_pointer": 1,
                    "result_ptr": 1,
                    "status_code": 1
                },
                "param_4": {
                    "arg4": 1,
                    "flag": 3,
                    "flag_param": 1,
                    "flag_pointer": 1,
                    "flag_ptr": 1,
                    "flags": 2,
                    "flags_param": 1,
                    "is_executable": 1,
                    "is_page_valid": 1,
                    "output2": 1,
                    "output_flag": 2,
                    "output_param2": 1,
                    "output_result": 1,
                    "output_value": 1,
                    "page_status": 1,
                    "param4": 3,
                    "permission_flag": 1,
                    "permissions": 1,
                    "result": 2,
                    "result_param": 1,
                    "result_parameter": 1,
                    "status": 1,
                    "status_param": 2
                },
                "uVar2": {
                    "access_flag": 1,
                    "code": 1,
                    "flag": 2,
                    "flag_value": 1,
                    "flags": 1,
                    "memory_mode": 1,
                    "memory_state": 1,
                    "memory_type": 1,
                    "page_attributes": 1,
                    "page_size": 2,
                    "permission": 1,
                    "protection_value": 1,
                    "result": 1,
                    "return_constant": 1,
                    "return_value": 4,
                    "return_value2": 1,
                    "status": 3,
                    "value": 1
                }
            },
            "called": [
                "FUN_08007004"
            ],
            "calling": [
                "FUN_08006e10"
            ],
            "code": "\nundefined4 initialize_and_check_memory_08006dc8(undefined4 arg1,int arg2,undefined4 *output_param,uint *flag)\n\n{\n  int result;\n  undefined4 return_value;\n  undefined stack_var [4];\n  uint local_variable;\n  \n  if ((*(short *)(arg2 + 0xe) < 0) ||\n     (result = initialize_memory_page_size(arg1,(int)*(short *)(arg2 + 0xe),stack_var), result < 0)) {\n    *flag = 0;\n    if ((int)((uint)*(ushort *)(arg2 + 0xc) << 0x18) < 0) {\n      return_value = 0x40;\n      goto LAB_08006e08;\n    }\n  }\n  else {\n    *flag = (uint)((local_variable & 0xf000) == 0x2000);\n  }\n  return_value = 0x400;\nLAB_08006e08:\n  *output_param = return_value;\n  return 0;\n}\n\n",
            "current_name": "initialize_and_check_memory_08006dc8",
            "entrypoint": "0x08006dc8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006dc8": "initialize_and_check_memory_08006dc8",
                "auStack_4c": "stack_var",
                "iVar1": "result",
                "initialize_memory_page_size_08007004": "initialize_memory_page_size",
                "local_48": "local_variable",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "output_param",
                "param_4": "flag",
                "uVar2": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006e10": {
            "additional_data": {
                "FUN_08006e10": {
                    "initialize_and_check": 1,
                    "initialize_and_check_application": 1,
                    "initialize_application": 17,
                    "initialize_application_data": 1,
                    "initialize_memory": 9,
                    "initialize_memory_and_check": 1,
                    "initialize_program": 1
                },
                "allocate_and_initialize_memory_block_08006288": {
                    "allocate_and_initialize_memory_block": 3
                },
                "iVar2": {
                    "allocated_memory": 9,
                    "allocated_memory_block": 2,
                    "allocation_result": 2,
                    "allocation_status": 1,
                    "block_address": 1,
                    "memory_block": 11,
                    "memory_block_result": 1,
                    "memory_block_status": 1,
                    "result_2": 1,
                    "return_value2": 1
                },
                "initialize_and_check_application_08007028": {
                    "initialize_and_check_application": 3
                },
                "initialize_and_check_memory_08006dc8": {
                    "initialize_and_check_memory": 3
                },
                "local_14": {
                    "application_data": 4,
                    "application_memory": 1,
                    "application_ptr": 1,
                    "function_value": 1,
                    "local_buffer": 1,
                    "local_data": 2,
                    "local_memory": 3,
                    "local_memory2": 1,
                    "local_memory_block": 1,
                    "local_param_2": 1,
                    "local_ptr": 2,
                    "local_var2": 1,
                    "local_variable2": 3,
                    "local_variable_2": 3,
                    "memory_block_data": 1,
                    "memory_block_ptr": 1,
                    "memory_pointer": 1,
                    "memory_ptr": 1,
                    "optional_data": 1,
                    "param_2_copy": 1
                },
                "local_18": {
                    "allocated_memory": 1,
                    "application_size": 2,
                    "block_size": 3,
                    "initialized_data": 1,
                    "local_application": 1,
                    "local_application_handle": 1,
                    "local_buffer_size": 1,
                    "local_context": 1,
                    "local_memory": 1,
                    "local_memory1": 1,
                    "local_param_1": 1,
                    "local_size": 2,
                    "local_var": 1,
                    "local_var1": 1,
                    "local_variable1": 3,
                    "local_variable_1": 3,
                    "memory_block_size": 2,
                    "memory_size": 3,
                    "param_1_copy": 1,
                    "program_value": 1
                },
                "param_1": {
                    "app_pointer": 1,
                    "application": 2,
                    "application_context": 2,
                    "application_ctx": 1,
                    "application_data": 2,
                    "application_handle": 5,
                    "application_pointer": 1,
                    "application_ptr": 2,
                    "base_address": 3,
                    "data_segment": 1,
                    "first_param": 1,
                    "function_context": 1,
                    "function_parameter": 1,
                    "memory": 1,
                    "memory_address": 2,
                    "param": 1,
                    "param_1": 2,
                    "parameter1": 1,
                    "program_pointer": 1
                },
                "param_2": {
                    "app_data_pointer": 1,
                    "application_data": 7,
                    "application_info": 1,
                    "function_pointer": 1,
                    "header_ptr": 1,
                    "mem_info": 1,
                    "memory": 1,
                    "memory_block": 9,
                    "memory_ctx": 1,
                    "memory_data": 2,
                    "memory_info": 1,
                    "param_2": 2,
                    "parameter2": 1,
                    "second_param": 1,
                    "struct_ptr": 1
                },
                "uVar1": {
                    "initialization_result": 3,
                    "initialize_result": 1,
                    "initialized_flag": 3,
                    "initialized_memory": 1,
                    "initialized_value": 3,
                    "memory_check": 1,
                    "memory_check_result": 2,
                    "memory_initialized": 1,
                    "memory_status": 6,
                    "num_of_memory_blocks": 1,
                    "previous_result": 1,
                    "result": 3,
                    "result_1": 1,
                    "return_value": 1,
                    "status": 2
                }
            },
            "called": [
                "FUN_08006288",
                "FUN_08006dc8",
                "FUN_08007028"
            ],
            "calling": [
                "FUN_080069e4"
            ],
            "code": "\nvoid initialize_application_data_08006e10(int application_handle,int *memory_block)\n\n{\n  ushort memory_status;\n  int memory_block;\n  int block_size;\n  int *application_data;\n  \n  if (-1 < (int)((uint)*(ushort *)(memory_block + 3) << 0x1e)) {\n    block_size = application_handle;\n    application_data = memory_block;\n    memory_status = initialize_and_check_memory(application_handle,memory_block,&block_size,&application_data);\n    memory_block = allocate_and_initialize_memory_block(application_handle,block_size);\n    if (memory_block != 0) {\n      *(undefined **)(application_handle + 0x28) = &LAB_08006c34_1;\n      *memory_block = memory_block;\n      *(ushort *)(memory_block + 3) = *(ushort *)(memory_block + 3) | 0x80;\n      memory_block[4] = memory_block;\n      memory_block[5] = block_size;\n      if ((application_data != (int *)0x0) &&\n         (memory_block = initialize_and_check_application(application_handle,(int)*(short *)((int)memory_block + 0xe)), memory_block != 0)) {\n        *(ushort *)(memory_block + 3) = *(ushort *)(memory_block + 3) & 0xfffc | 1;\n      }\n      *(ushort *)(memory_block + 3) = memory_status | *(ushort *)(memory_block + 3);\n      return;\n    }\n    if ((int)(short)*(ushort *)(memory_block + 3) << 0x16 < 0) {\n      return;\n    }\n    *(ushort *)(memory_block + 3) = *(ushort *)(memory_block + 3) & 0xfffc | 2;\n  }\n  *memory_block = (int)memory_block + 0x47;\n  memory_block[4] = (int)memory_block + 0x47;\n  memory_block[5] = 1;\n  return;\n}\n\n",
            "current_name": "initialize_application_data_08006e10",
            "entrypoint": "0x08006e10",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006e10": "initialize_application_data_08006e10",
                "allocate_and_initialize_memory_block_08006288": "allocate_and_initialize_memory_block",
                "iVar2": "memory_block",
                "initialize_and_check_application_08007028": "initialize_and_check_application",
                "initialize_and_check_memory_08006dc8": "initialize_and_check_memory",
                "local_14": "application_data",
                "local_18": "block_size",
                "param_1": "application_handle",
                "param_2": "memory_block",
                "uVar1": "memory_status"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006e90": {
            "additional_data": {
                "FUN_08006e90": {
                    "find_char_in_string": 1,
                    "find_character": 18,
                    "find_character_in_string": 4,
                    "find_character_index": 1,
                    "find_character_position": 2,
                    "find_first_char": 1,
                    "find_first_occurrence": 4
                },
                "param_1": {
                    "input_string": 2,
                    "str": 2,
                    "string": 26,
                    "string_to_search": 1
                },
                "param_2": {
                    "char_to_find": 2,
                    "character": 21,
                    "character_to_find": 1,
                    "target": 1,
                    "target_char": 4,
                    "target_character": 2
                },
                "param_3": {
                    "length": 21,
                    "str_length": 1,
                    "string_length": 9
                },
                "pcVar1": {
                    "current_address": 1,
                    "current_char": 11,
                    "current_char_ptr": 2,
                    "current_character": 4,
                    "current_pointer": 1,
                    "current_position": 4,
                    "current_ptr": 2,
                    "ptr": 1,
                    "ptr_current_char": 1
                },
                "pcVar2": {
                    "current_char": 1,
                    "current_character": 1,
                    "current_position": 1,
                    "found_char": 1,
                    "found_char_ptr": 1,
                    "found_pointer": 1,
                    "matching_char_ptr": 1,
                    "next_char": 8,
                    "next_character": 2,
                    "next_position": 4,
                    "next_ptr": 2,
                    "previous_char": 1,
                    "previous_character": 1,
                    "ptr_previous_char": 1,
                    "result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08006394",
                "FUN_080066b0"
            ],
            "code": "\nchar * find_character_in_string_08006e90(char *string,char character,int length)\n\n{\n  char *current_char;\n  char *next_char;\n  \n  current_char = string;\n  do {\n    next_char = current_char;\n    if (next_char == string + length) {\n      return (char *)0x0;\n    }\n    current_char = next_char + 1;\n  } while (*next_char != character);\n  return next_char;\n}\n\n",
            "current_name": "find_character_in_string_08006e90",
            "entrypoint": "0x08006e90",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006e90": "find_character_in_string_08006e90",
                "param_1": "string",
                "param_2": "character",
                "param_3": "length",
                "pcVar1": "current_char",
                "pcVar2": "next_char"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006eac": {
            "called": [],
            "calling": [
                "FUN_080061f0",
                "FUN_08006288"
            ],
            "code": "\nvoid FUNC_08006eac(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08006eac",
            "entrypoint": "0x08006eac",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08006eac": "FUNC_08006eac"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08006eae": {
            "called": [],
            "calling": [
                "FUN_080061f0",
                "FUN_08006288"
            ],
            "code": "\nvoid FUNC_08006eae(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08006eae",
            "entrypoint": "0x08006eae",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08006eae": "FUNC_08006eae"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08006f00": {
            "additional_data": {
                "DAT_200000f8": {
                    "data": 2
                },
                "DAT_200006a4": {
                    "error_code": 2
                },
                "FUN_08006f00": {
                    "check_and_execute_function": 1,
                    "execute": 1,
                    "execute_command": 1,
                    "execute_function": 13,
                    "execute_operation": 1,
                    "perform_operation": 1,
                    "process_data": 5,
                    "process_param": 1,
                    "process_parameter": 2,
                    "process_parameter_value": 1,
                    "process_value": 1
                },
                "iVar3": {
                    "command_index": 1,
                    "current_value": 1,
                    "data": 4,
                    "data_index": 2,
                    "data_size": 1,
                    "data_value": 2,
                    "element_value": 1,
                    "error_code": 1,
                    "existing_value": 1,
                    "function_address": 1,
                    "function_index": 1,
                    "function_pointer": 4,
                    "function_ptr": 1,
                    "function_result": 1,
                    "index": 3,
                    "pointer": 1,
                    "value": 5
                },
                "in_lr": {
                    "link_register": 1,
                    "return_address": 6,
                    "special_register": 1,
                    "unused": 1,
                    "unused_lr": 1,
                    "unused_var3": 1,
                    "variable_lr": 1
                },
                "initialize_data_08005740": {
                    "initialize_data": 2
                },
                "param_1": {
                    "command": 1,
                    "data": 1,
                    "function_index": 9,
                    "index": 3,
                    "input": 7,
                    "input_index": 1,
                    "input_value": 4,
                    "operation": 1,
                    "param": 1,
                    "parameter": 2,
                    "value": 1
                },
                "pcVar4": {
                    "callback": 1,
                    "code_pointer": 2,
                    "command_func": 1,
                    "current_function": 1,
                    "function": 2,
                    "function_address": 1,
                    "function_pointer": 13,
                    "function_ptr": 9,
                    "function_to_execute": 1
                },
                "piVar1": {
                    "base_pointer": 1,
                    "command_result": 1,
                    "data": 1,
                    "data_array": 3,
                    "data_pointer": 9,
                    "data_ptr": 5,
                    "function_array": 1,
                    "function_pointer": 1,
                    "function_table": 1,
                    "pointer": 1,
                    "result": 5,
                    "return_status": 1,
                    "var_pointer": 1
                },
                "puVar5": {
                    "base_pointer_pointer": 1,
                    "command_list": 1,
                    "data_array_pointer": 2,
                    "data_pointer": 5,
                    "data_pointer_pointer": 3,
                    "data_pointer_ptr": 3,
                    "data_ptr": 1,
                    "data_ptr_ptr": 4,
                    "function_array_pointer": 1,
                    "function_table_ptr": 1,
                    "pointer": 1,
                    "pointer_array": 1,
                    "pointer_ptr": 1,
                    "pointer_to_data": 2,
                    "pointer_to_function": 1,
                    "ptr_to_data": 1,
                    "result_ptr": 2
                },
                "thunk_initialize_return_value_08005750": {
                    "initialize_return_value": 2
                },
                "uVar2": {
                    "initialization_value": 1,
                    "return_code": 1,
                    "return_value": 29
                },
                "unaff_r4": {
                    "parameter_4": 1,
                    "unused": 1,
                    "unused_r4": 1,
                    "unused_var1": 1,
                    "variable4": 1
                },
                "unaff_r5": {
                    "parameter_5": 1,
                    "unused": 1,
                    "unused_r5": 1,
                    "unused_var2": 1,
                    "variable5": 1
                }
            },
            "called": [
                "FUN_08005740",
                "thunk_FUN_08005750"
            ],
            "calling": [
                "FUN_08006ac0"
            ],
            "code": "\nint check_and_execute_function_08006f00(uint function_index)\n\n{\n  int *data_pointer;\n  undefined4 return_value;\n  int value;\n  code *function_pointer;\n  undefined4 unused_r4;\n  undefined4 parameter_5;\n  undefined4 return_address;\n  undefined4 *data_pointer;\n  \n  data_pointer = DAT_200000f8;\n  data_pointer = &DAT_200000f8;\n  if (0x1f < function_index) {\n    *DAT_200000f8 = 0x16;\n    return -1;\n  }\n  value = DAT_200000f8[0x11];\n  if ((value != 0) && (function_pointer = *(code **)(value + function_index * 4), function_pointer != (code *)0x0)) {\n    if (function_pointer != (code *)0x1) {\n      if (function_pointer == (code *)0xffffffff) {\n        *DAT_200000f8 = 0x16;\n        return 1;\n      }\n      *(undefined4 *)(value + function_index * 4) = 0;\n      (*function_pointer)(function_index);\n    }\n    return 0;\n  }\n  return_value = initialize_return_value(DAT_200000f8);\n  DAT_200006a4 = 0;\n  value = initialize_data(return_value,function_index,function_index,0,data_pointer,unused_r4,parameter_5,return_address);\n  if ((value == -1) && (DAT_200006a4 != 0)) {\n    *data_pointer = DAT_200006a4;\n  }\n  return value;\n}\n\n",
            "current_name": "check_and_execute_function_08006f00",
            "entrypoint": "0x08006f00",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006f00": "check_and_execute_function_08006f00",
                "iVar3": "value",
                "in_lr": "return_address",
                "initialize_data_08005740": "initialize_data",
                "param_1": "function_index",
                "pcVar4": "function_pointer",
                "piVar1": "data_pointer",
                "puVar5": "data_pointer",
                "thunk_initialize_return_value_08005750": "initialize_return_value",
                "uVar2": "return_value",
                "unaff_r4": "unused_r4",
                "unaff_r5": "parameter_5"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006f38": {
            "additional_data": {
                "FUN_08006f38": {
                    "calculate_updated_value": 1,
                    "initialize_and_check_application": 1,
                    "initialize_and_update_data": 1,
                    "initialize_and_update_value": 1,
                    "process_data": 2,
                    "update_application": 1,
                    "update_application_check": 1,
                    "update_application_data": 12,
                    "update_application_info": 1,
                    "update_application_state": 1,
                    "update_application_status": 1,
                    "update_application_value": 2,
                    "update_data": 1,
                    "update_record": 1,
                    "update_value": 2,
                    "update_values": 2
                },
                "bVar3": {
                    "is_initialized": 6,
                    "is_positive": 4,
                    "is_success": 5,
                    "is_successful": 8,
                    "is_valid": 8
                },
                "iVar1": {
                    "app_value": 1,
                    "init_result": 1,
                    "initialized_value": 2,
                    "processed_value": 1,
                    "result": 25,
                    "result_code": 1
                },
                "param_1": {
                    "app_pointer": 1,
                    "application": 1,
                    "application_data": 12,
                    "application_handle": 1,
                    "application_id": 2,
                    "application_info": 4,
                    "application_ptr": 1,
                    "application_version": 1,
                    "argument_1": 1,
                    "config_data": 1,
                    "param": 2,
                    "param1": 3,
                    "value1": 1
                },
                "param_2": {
                    "argument_2": 1,
                    "binary_data": 3,
                    "buffer": 1,
                    "data": 4,
                    "data_buffer": 4,
                    "data_offset": 1,
                    "data_pointer": 7,
                    "data_ptr": 3,
                    "input": 1,
                    "input_data": 1,
                    "param2": 3,
                    "record_address": 1,
                    "value2": 1
                },
                "uVar2": {
                    "new_data": 2,
                    "new_value": 2,
                    "updated_value": 27
                }
            },
            "called": [
                "FUN_0800706c"
            ],
            "calling": [],
            "code": "\nvoid update_application_data_08006f38(undefined4 application_data,int data_pointer)\n\n{\n  int result;\n  uint updated_value;\n  bool is_successful;\n  \n  result = initialize_and_check_application_0800706c(application_data,(int)*(short *)(data_pointer + 0xe));\n  is_successful = -1 < result;\n  if (is_successful) {\n    updated_value = *(int *)(data_pointer + 0x54) + result;\n  }\n  else {\n    updated_value = *(ushort *)(data_pointer + 0xc) & 0xffffefff;\n  }\n  if (is_successful) {\n    *(uint *)(data_pointer + 0x54) = updated_value;\n  }\n  if (!is_successful) {\n    *(short *)(data_pointer + 0xc) = (short)updated_value;\n  }\n  return;\n}\n\n",
            "current_name": "update_application_data_08006f38",
            "entrypoint": "0x08006f38",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006f38": "update_application_data_08006f38",
                "bVar3": "is_successful",
                "iVar1": "result",
                "param_1": "application_data",
                "param_2": "data_pointer",
                "uVar2": "updated_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006f5a": {
            "additional_data": {
                "DAT_200006a4": {
                    "global_result": 1
                },
                "FUN_08006f5a": {
                    "initialize_and_check_results": 1,
                    "initialize_and_process_data": 2,
                    "initialize_check_and_process_data": 1,
                    "initialize_data": 1,
                    "process_and_validate_data": 11,
                    "process_data": 4,
                    "process_data_and_validate": 3,
                    "process_validation": 1,
                    "validate_and_process_data": 2,
                    "validate_and_set_result": 1,
                    "validate_and_store_result": 1,
                    "validate_and_update_data": 3
                },
                "iVar1": {
                    "data_processing_result": 1,
                    "processing_result": 1,
                    "result": 6,
                    "result_code": 4,
                    "result_flag": 1,
                    "return_value": 2,
                    "validation_result": 13,
                    "validity_check": 1
                },
                "in_lr": {
                    "in_link_reg": 1,
                    "in_lr": 1,
                    "return_address": 2,
                    "temp3": 1,
                    "temp_3": 1,
                    "unused_lr": 1,
                    "unused_param": 3,
                    "unused_param_3": 3,
                    "var3": 1
                },
                "initialize_and_check_result_08007048": {
                    "initialize_and_check": 3,
                    "initialize_and_check_result": 2
                },
                "param_1": {
                    "output": 2,
                    "output_array": 1,
                    "output_buffer": 1,
                    "output_ptr": 1,
                    "result": 22,
                    "result_array": 2,
                    "result_buffer": 1,
                    "result_ptr": 1
                },
                "param_2": {
                    "binary_data": 1,
                    "data": 12,
                    "data_array": 2,
                    "data_block": 1,
                    "data_ptr": 10,
                    "data_struct_ptr": 1,
                    "input": 2,
                    "input_buffer": 1,
                    "input_data": 1
                },
                "param_3": {
                    "param1": 1,
                    "param3": 4,
                    "param_1": 1,
                    "param_3": 16,
                    "param_a": 5,
                    "param_val_1": 1,
                    "val_1": 1,
                    "value_1": 2
                },
                "param_4": {
                    "param2": 1,
                    "param4": 4,
                    "param_2": 1,
                    "param_4": 16,
                    "param_b": 5,
                    "param_val_2": 1,
                    "val_2": 1,
                    "value_2": 2
                },
                "process_data_and_validate_08005730": {
                    "process_and_validate_data": 3,
                    "process_data_and_validate": 2
                },
                "unaff_r4": {
                    "arg_1": 1,
                    "constant_param": 1,
                    "temp1": 1,
                    "temp_1": 1,
                    "temp_var_1": 1,
                    "unaff_r4": 2,
                    "unaffected_reg4": 1,
                    "unknown_var_1": 1,
                    "unused4": 1,
                    "unused_param": 3,
                    "unused_param_1": 4,
                    "var1": 1
                },
                "unaff_r5": {
                    "arg_2": 1,
                    "constant_param2": 1,
                    "temp2": 1,
                    "temp_2": 1,
                    "temp_var_2": 1,
                    "unaff_r5": 2,
                    "unaffected_reg5": 1,
                    "unknown_var_2": 1,
                    "unused5": 1,
                    "unused_param": 3,
                    "unused_param_2": 4,
                    "var2": 1
                }
            },
            "called": [
                "FUN_08007048",
                "FUN_08005730"
            ],
            "calling": [],
            "code": "\nvoid validate_and_process_data_08006f5a(int *result,int data,undefined4 param_3,undefined4 param_4)\n\n{\n  int validation_result;\n  undefined4 unused_param_1;\n  undefined4 unused_param_2;\n  undefined4 unused_param_3;\n  \n  if ((int)((uint)*(ushort *)(data + 0xc) << 0x17) < 0) {\n    initialize_and_check(result,(int)*(short *)(data + 0xe),0,2);\n  }\n  *(ushort *)(data + 0xc) = *(ushort *)(data + 0xc) & 0xefff;\n  DAT_200006a4 = 0;\n  validation_result = process_and_validate_data((int)*(short *)(data + 0xe),param_3,param_4,param_4,param_4,unused_param_1,\n                       unused_param_2,unused_param_3);\n  if ((validation_result == -1) && (DAT_200006a4 != 0)) {\n    *result = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "current_name": "validate_and_process_data_08006f5a",
            "entrypoint": "0x08006f5a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006f5a": "validate_and_process_data_08006f5a",
                "iVar1": "validation_result",
                "in_lr": "unused_param_3",
                "initialize_and_check_result_08007048": "initialize_and_check",
                "param_1": "result",
                "param_2": "data",
                "process_data_and_validate_08005730": "process_and_validate_data",
                "unaff_r4": "unused_param_1",
                "unaff_r5": "unused_param_2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006f92": {
            "additional_data": {
                "FUN_08006f92": {
                    "initialize_and_check_result": 2,
                    "initialize_and_set_flag": 1,
                    "initialize_and_update": 1,
                    "initialize_and_update_flags": 2,
                    "initialize_and_update_result": 4,
                    "initialize_and_update_results": 1,
                    "initialize_and_update_status": 4,
                    "initialize_and_update_value": 3,
                    "initialize_check_result": 4,
                    "initialize_check_results": 1,
                    "initialize_checked_result": 1,
                    "initialize_result_check": 1,
                    "initialize_result_status": 1,
                    "initialize_status": 1,
                    "update_param_and_check_result": 1,
                    "update_parameter_value": 1,
                    "update_status": 2
                },
                "bVar3": {
                    "is_error": 27,
                    "is_invalid": 1,
                    "is_negative": 2,
                    "is_result_minus_one": 1
                },
                "iVar1": {
                    "result": 30,
                    "result_check": 1
                },
                "param_1": {
                    "arg1": 7,
                    "input_param": 4,
                    "input_parameter": 2,
                    "param": 4,
                    "param1": 6,
                    "param_1": 3,
                    "parameter_1": 1,
                    "result": 1,
                    "status": 2,
                    "status_array": 1
                },
                "param_2": {
                    "arg2": 7,
                    "context": 1,
                    "data": 8,
                    "data_array": 1,
                    "data_param": 2,
                    "data_pointer": 1,
                    "data_structure": 1,
                    "input_param": 1,
                    "param2": 6,
                    "param_2": 2,
                    "parameter_2": 1
                },
                "uVar2": {
                    "flag": 2,
                    "flags": 1,
                    "modified_flag": 1,
                    "modified_flags": 2,
                    "modified_status": 1,
                    "modified_value": 7,
                    "new_value": 1,
                    "updated_flag": 1,
                    "updated_flags": 1,
                    "updated_value": 14
                }
            },
            "called": [
                "FUN_08007048"
            ],
            "calling": [],
            "code": "\nvoid initialize_and_update_status_08006f92(undefined4 arg1,int data)\n\n{\n  int result;\n  ushort updated_value;\n  bool is_error;\n  \n  result = initialize_and_check_result_08007048(arg1,(int)*(short *)(data + 0xe));\n  is_error = result == -1;\n  if (is_error) {\n    updated_value = *(ushort *)(data + 0xc) & 0xefff;\n  }\n  else {\n    *(int *)(data + 0x54) = result;\n    updated_value = *(ushort *)(data + 0xc) | 0x1000;\n  }\n  if (is_error) {\n    *(ushort *)(data + 0xc) = updated_value;\n  }\n  if (!is_error) {\n    *(ushort *)(data + 0xc) = updated_value;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_and_update_status_08006f92",
            "entrypoint": "0x08006f92",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006f92": "initialize_and_update_status_08006f92",
                "bVar3": "is_error",
                "iVar1": "result",
                "param_1": "arg1",
                "param_2": "data",
                "uVar2": "updated_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007004": {
            "additional_data": {
                "FUN_08007004": {
                    "configure_memory_page_size": 1,
                    "initialize_memory": 5,
                    "initialize_memory_page": 7,
                    "initialize_memory_page_size": 2,
                    "set_memory_and_return_error_if_not_successful": 1,
                    "set_memory_page": 4,
                    "set_memory_page_size": 6,
                    "set_memory_page_size_and_assign_result": 1,
                    "set_memory_page_size_and_update_param": 1,
                    "set_page_size": 2,
                    "set_param_and_check": 1
                },
                "iVar1": {
                    "error_code": 1,
                    "page_size_result": 1,
                    "result": 10,
                    "result_code": 2,
                    "return_value": 4,
                    "set_memory_page_size_result": 1,
                    "set_result": 2,
                    "status": 3
                },
                "param_1": {
                    "memory_pointer": 4,
                    "output": 1,
                    "output_address": 2,
                    "output_pointer": 3,
                    "output_ptr": 1,
                    "output_value": 2,
                    "output_variable": 1,
                    "result": 14,
                    "result_pointer": 2,
                    "result_ptr": 1
                },
                "param_2": {
                    "arg1": 2,
                    "input1": 1,
                    "input_1": 1,
                    "input_param1": 1,
                    "input_value1": 1,
                    "memory_size": 1,
                    "page_size": 10,
                    "size": 5,
                    "size1": 1,
                    "size_1": 1,
                    "size_param": 3,
                    "size_param1": 1,
                    "value1": 3
                },
                "param_3": {
                    "arg1": 1,
                    "arg2": 2,
                    "init_value": 1,
                    "input2": 1,
                    "input_2": 1,
                    "input_param2": 1,
                    "input_value2": 1,
                    "page_size_1": 1,
                    "page_start": 1,
                    "param3": 2,
                    "param_1": 1,
                    "param_2": 1,
                    "param_3": 5,
                    "param_a": 2,
                    "permission_1": 1,
                    "size": 1,
                    "size2": 1,
                    "size_2": 1,
                    "size_param2": 1,
                    "value2": 3
                },
                "param_4": {
                    "alignment": 1,
                    "arg2": 1,
                    "arg3": 2,
                    "default_value": 1,
                    "flag": 1,
                    "input3": 1,
                    "input_3": 1,
                    "input_param3": 1,
                    "input_value3": 1,
                    "page_end": 1,
                    "page_size": 1,
                    "page_size_2": 1,
                    "param4": 2,
                    "param_2": 1,
                    "param_4": 5,
                    "param_5": 1,
                    "param_b": 2,
                    "permission_2": 1,
                    "size3": 1,
                    "size_3": 1,
                    "size_param3": 1,
                    "value3": 3
                },
                "set_memory_page_size_0800571a": {
                    "set_memory_page_size": 1,
                    "set_page_size": 1
                }
            },
            "called": [
                "FUN_0800571a"
            ],
            "calling": [
                "FUN_08006dc8"
            ],
            "code": "\nvoid initialize_memory_page_size_08007004(int *result,undefined4 page_size,undefined4 param_3,undefined4 param_4)\n\n{\n  int result;\n  \n  DAT_200006a4 = 0;\n  result = set_memory_page_size(page_size,param_3,param_3,0,param_4);\n  if ((result == -1) && (DAT_200006a4 != 0)) {\n    *result = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_memory_page_size_08007004",
            "entrypoint": "0x08007004",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007004": "initialize_memory_page_size_08007004",
                "iVar1": "result",
                "param_1": "result",
                "param_2": "page_size",
                "set_memory_page_size_0800571a": "set_memory_page_size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007028": {
            "additional_data": {
                "DAT_200006a4": {
                    "application_status": 1
                },
                "FUN_08007028": {
                    "initialize_and_check": 1,
                    "initialize_and_check_application": 16,
                    "initialize_and_check_error": 3,
                    "initialize_and_check_errors": 2,
                    "initialize_and_check_result": 1,
                    "initialize_app_and_check_error": 1,
                    "initialize_application": 7
                },
                "iVar1": {
                    "app_init_result": 1,
                    "application_status": 1,
                    "init_result": 18,
                    "initialization_status": 1,
                    "initialize_result": 1,
                    "result": 5,
                    "result_value": 1,
                    "return_value": 1
                },
                "param_1": {
                    "output": 2,
                    "output_error": 1,
                    "output_result": 1,
                    "output_value": 5,
                    "result": 18,
                    "result_ptr": 3,
                    "status_pointer": 1
                },
                "param_2": {
                    "application_id": 3,
                    "application_param": 1,
                    "application_parameter": 1,
                    "config_value": 1,
                    "initial_value": 1,
                    "initialization_value": 2,
                    "input": 1,
                    "input_param": 6,
                    "input_parameter": 2,
                    "input_value": 12,
                    "value": 1
                }
            },
            "called": [
                "FUN_08005724"
            ],
            "calling": [
                "FUN_08006e10"
            ],
            "code": "\nvoid initialize_and_check_application_08007028(int *result,undefined4 input_value)\n\n{\n  int init_result;\n  \n  DAT_200006a4 = 0;\n  init_result = initialize_application_08005724(input_value);\n  if ((init_result == -1) && (DAT_200006a4 != 0)) {\n    *result = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_and_check_application_08007028",
            "entrypoint": "0x08007028",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007028": "initialize_and_check_application_08007028",
                "iVar1": "init_result",
                "param_1": "result",
                "param_2": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007048": {
            "additional_data": {
                "DAT_200006a4": {
                    "data_value": 1,
                    "error_value": 1
                },
                "FUN_08007048": {
                    "initialize": 2,
                    "initialize_and_assign_value": 1,
                    "initialize_and_assign_value_if_error": 1,
                    "initialize_and_check": 6,
                    "initialize_and_check_data": 1,
                    "initialize_and_check_error": 5,
                    "initialize_and_check_error_code": 1,
                    "initialize_and_check_errors": 1,
                    "initialize_and_check_function": 1,
                    "initialize_and_check_result": 8,
                    "initialize_and_copy_value": 1,
                    "initialize_and_get_error": 1,
                    "initialize_and_store_data": 1,
                    "initialize_and_update_value": 1
                },
                "iVar1": {
                    "init_result": 13,
                    "init_status": 1,
                    "initialize_result": 2,
                    "result": 10
                },
                "param_1": {
                    "output": 5,
                    "output_data": 1,
                    "output_param": 1,
                    "output_value": 5,
                    "output_variable": 1,
                    "result": 9,
                    "result_pointer": 1,
                    "result_ptr": 8
                },
                "param_2": {
                    "arg1": 12,
                    "input_1": 5,
                    "input_arg_1": 1,
                    "input_param_1": 2,
                    "input_parameter_1": 1,
                    "input_value1": 1,
                    "param_2": 4,
                    "param_a": 1,
                    "value1": 2,
                    "value_2": 1,
                    "var_2": 1
                },
                "param_3": {
                    "arg2": 12,
                    "input_2": 5,
                    "input_arg_2": 1,
                    "input_param_2": 2,
                    "input_parameter_2": 1,
                    "input_value2": 1,
                    "param_3": 4,
                    "param_b": 1,
                    "value2": 2,
                    "value_3": 1,
                    "var_3": 1
                },
                "param_4": {
                    "arg3": 12,
                    "input_3": 5,
                    "input_arg_3": 1,
                    "input_param_3": 2,
                    "input_parameter_3": 1,
                    "input_value3": 1,
                    "param_4": 4,
                    "param_c": 1,
                    "value3": 2,
                    "value_4": 1,
                    "var_4": 1
                }
            },
            "called": [
                "FUN_08005728"
            ],
            "calling": [
                "FUN_08006f92",
                "FUN_08006f5a"
            ],
            "code": "\nvoid initialize_and_check_result_08007048(int *result,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  int init_result;\n  \n  DAT_200006a4 = 0;\n  init_result = initialize_function_08005728(arg1,arg2,arg3,arg3,arg3);\n  if ((init_result == -1) && (DAT_200006a4 != 0)) {\n    *result = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_and_check_result_08007048",
            "entrypoint": "0x08007048",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007048": "initialize_and_check_result_08007048",
                "iVar1": "init_result",
                "param_1": "result",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800706c": {
            "additional_data": {
                "DAT_200006a4": {
                    "saved_error_code": 1
                },
                "FUN_0800706c": {
                    "init_and_check_application": 1,
                    "init_application": 1,
                    "initialize_and_check_application": 12,
                    "initialize_and_check_error": 2,
                    "initialize_and_check_errors": 1,
                    "initialize_app": 1,
                    "initialize_application": 12,
                    "initialize_application_error_handling": 1
                },
                "iVar1": {
                    "init_result": 19,
                    "initialization_result": 1,
                    "result": 4
                },
                "param_1": {
                    "error_code": 3,
                    "error_status": 1,
                    "output": 4,
                    "output_code": 1,
                    "output_error_code": 2,
                    "output_param": 1,
                    "output_ptr": 1,
                    "output_result": 2,
                    "output_value": 3,
                    "output_variable": 1,
                    "result": 8,
                    "result_code": 3,
                    "result_ptr": 1
                },
                "param_2": {
                    "arg1": 19,
                    "arg_2": 1,
                    "argument_1": 1,
                    "first_parameter": 1,
                    "input_1": 1,
                    "input_param_1": 1,
                    "input_value1": 1,
                    "param1": 1,
                    "param_2": 2,
                    "param_a": 1,
                    "parameter_2": 1,
                    "var_2": 1
                },
                "param_3": {
                    "arg2": 19,
                    "arg_3": 1,
                    "argument_2": 1,
                    "input_2": 1,
                    "input_param_2": 1,
                    "input_value2": 1,
                    "param2": 1,
                    "param_3": 2,
                    "param_b": 1,
                    "parameter_3": 1,
                    "second_parameter": 1,
                    "var_3": 1
                },
                "param_4": {
                    "arg3": 19,
                    "arg_4": 1,
                    "argument_3": 1,
                    "input_3": 1,
                    "input_param_3": 1,
                    "input_value3": 1,
                    "param3": 1,
                    "param_4": 2,
                    "parameter_4": 1,
                    "third_parameter": 1,
                    "var_4": 1
                }
            },
            "called": [
                "FUN_0800572c"
            ],
            "calling": [
                "FUN_08006f38"
            ],
            "code": "\nvoid initialize_and_check_application_0800706c(int *result,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  int init_result;\n  \n  DAT_200006a4 = 0;\n  init_result = initialize_application_0800572c(arg1,arg2,arg3,arg3,arg3);\n  if ((init_result == -1) && (DAT_200006a4 != 0)) {\n    *result = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_and_check_application_0800706c",
            "entrypoint": "0x0800706c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800706c": "initialize_and_check_application_0800706c",
                "iVar1": "init_result",
                "param_1": "result",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007090": {
            "additional_data": {
                "DAT_20000600": {
                    "data_00": 2,
                    "data_12": 4,
                    "value12": 1,
                    "value_12": 1,
                    "var_12": 1,
                    "variable_l": 1
                },
                "DAT_20000604": {
                    "data_04": 2,
                    "data_11": 4,
                    "value11": 1,
                    "value_11": 1,
                    "var_11": 1,
                    "variable_k": 1
                },
                "DAT_20000608": {
                    "data_08": 2,
                    "data_10": 4,
                    "value10": 1,
                    "value_10": 1,
                    "var_10": 1,
                    "variable_j": 1
                },
                "DAT_2000060c": {
                    "data_0c": 2,
                    "data_9": 4,
                    "value9": 1,
                    "value_9": 1,
                    "var_9": 1,
                    "variable_i": 1
                },
                "DAT_20000610": {
                    "data_10": 2,
                    "data_8": 4,
                    "value8": 1,
                    "value_8": 1,
                    "var_8": 1,
                    "variable_h": 1
                },
                "DAT_20000614": {
                    "data_14": 2,
                    "data_7": 4,
                    "value7": 1,
                    "value_7": 1,
                    "var_7": 1,
                    "variable_g": 1
                },
                "DAT_20000618": {
                    "data_18": 2,
                    "data_6": 4,
                    "value6": 1,
                    "value_6": 1,
                    "var_6": 1,
                    "variable_f": 1
                },
                "DAT_2000061c": {
                    "data_1c": 2,
                    "data_5": 4,
                    "value5": 1,
                    "value_5": 1,
                    "var_5": 1,
                    "variable_e": 1
                },
                "DAT_20000620": {
                    "data_20": 2,
                    "data_4": 4,
                    "value4": 1,
                    "value_4": 1,
                    "var_4": 1,
                    "variable_d": 1
                },
                "DAT_20000624": {
                    "data_24": 2,
                    "data_3": 4,
                    "value3": 1,
                    "value_3": 1,
                    "var_3": 1,
                    "variable_c": 1
                },
                "DAT_20000628": {
                    "data_2": 4,
                    "data_28": 2,
                    "value2": 1,
                    "value_2": 1,
                    "var_2": 1,
                    "variable_b": 1
                },
                "DAT_2000062c": {
                    "data_1": 4,
                    "data_2c": 2,
                    "value1": 1,
                    "value_1": 1,
                    "var_1": 1,
                    "variable_a": 1
                },
                "FUN_08007090": {
                    "execute_and_reset_flags": 1,
                    "execute_and_set_flags": 1,
                    "execute_and_update_data": 3,
                    "execute_and_update_flags": 1,
                    "execute_binary_function": 5,
                    "execute_function": 4,
                    "execute_function_and_update_data": 1,
                    "execute_main_function": 6,
                    "execute_original_function": 1,
                    "execute_recursive_function": 1,
                    "initialize_binary": 1,
                    "initialize_data": 3
                },
                "UNRECOVERED_JUMPTABLE": {
                    "execute_function": 3,
                    "execute_function_ptr": 1,
                    "function_pointer": 6,
                    "function_to_execute": 1,
                    "jump_table": 6,
                    "jumptable": 4,
                    "main_function_pointer": 2,
                    "next_function": 2,
                    "recursive_function": 1,
                    "reversed_jumptable": 1,
                    "target_function": 1
                },
                "execute_binary_function_08006ac0": {
                    "execute_binary_function": 17
                },
                "execute_main_function": {
                    "execute_main_function": 1
                }
            },
            "called": [
                "FUN_08006ac0"
            ],
            "calling": [
                "FUN_080060d4"
            ],
            "code": "\nvoid execute_main_function_08007090(void)\n\n{\n  code *jump_table;\n  \n  jump_table = execute_main_function_08007090;\n  execute_binary_function();\n  if (-1 < DAT_2000062c << 0x1f) {\n    DAT_2000062c = 1;\n  }\n  if (-1 < DAT_20000628 << 0x1f) {\n    DAT_20000628 = 1;\n  }\n  if (-1 < DAT_20000624 << 0x1f) {\n    DAT_20000624 = 1;\n  }\n  if (-1 < DAT_20000620 << 0x1f) {\n    DAT_20000620 = 1;\n  }\n  if (-1 < DAT_2000061c << 0x1f) {\n    DAT_2000061c = 1;\n  }\n  if (-1 < DAT_20000618 << 0x1f) {\n    DAT_20000618 = 1;\n  }\n  if (-1 < DAT_20000614 << 0x1f) {\n    DAT_20000614 = 1;\n  }\n  if (-1 < DAT_20000610 << 0x1f) {\n    DAT_20000610 = 1;\n  }\n  if (-1 < DAT_2000060c << 0x1f) {\n    DAT_2000060c = 1;\n  }\n  if (-1 < DAT_20000608 << 0x1f) {\n    DAT_20000608 = 1;\n  }\n  if (-1 < DAT_20000604 << 0x1f) {\n    DAT_20000604 = 1;\n  }\n  if (-1 < DAT_20000600 << 0x1f) {\n    DAT_20000600 = 1;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08007128. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)();\n  return;\n}\n\n",
            "current_name": "execute_main_function_08007090",
            "entrypoint": "0x08007090",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007090": "execute_main_function_08007090",
                "UNRECOVERED_JUMPTABLE": "jump_table",
                "execute_binary_function_08006ac0": "execute_binary_function"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007328": {
            "called": [],
            "calling": [
                "FUN_0800010c",
                "FUN_08006198"
            ],
            "code": "\nvoid FUNC_08007328(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08007328",
            "entrypoint": "0x08007328",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08007328": "FUNC_08007328"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08007334": {
            "called": [],
            "calling": [],
            "code": "\nvoid FUNC_08007334(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08007334",
            "entrypoint": "0x08007334",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08007334": "FUNC_08007334"
            },
            "skipped": true,
            "tags": []
        },
        "entry": {
            "called": [
                "FUN_08004d44",
                "FUN_08005f6c",
                "FUN_08006198"
            ],
            "calling": [],
            "code": "\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined *)(iVar1 + 0x20000000) < &DAT_2000015c; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x8007970);\n  }\n  for (puVar2 = &DAT_20000160; puVar2 < &DAT_200006a8; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  initialize_peripheral_registers_08004d44();\n  execute_functions_within_range_08006198();\n  UNRECOVERED_JUMPTABLE = (code *)0x8001c1a;\n  process_data_loop_08005f6c();\n                    /* WARNING: Could not recover jumptable at 0x08001c1a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "current_name": "entry",
            "entrypoint": "0x08001be8",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "thunk_FUN_08005750": {
            "additional_data": {
                "": {
                    "": 1
                },
                "1": {
                    "1": 1
                },
                "DAT_": {
                    "": 2,
                    "dat_": 1
                },
                "DAT_1": {
                    "constant_value": 1
                },
                "PTR_": {
                    "": 2,
                    "ptr_": 1
                },
                "PTR_1": {
                    "array_pointer": 1
                },
                "return": {
                    "result": 4,
                    "return": 1,
                    "status": 1
                },
                "return_1": {
                    "result": 1,
                    "status": 1
                },
                "thunk_FUN_08005750": {
                    "check_success": 1,
                    "get_constant_one": 1,
                    "get_one": 1,
                    "get_result": 1,
                    "get_return_value": 4,
                    "get_status": 4,
                    "get_true_value": 2,
                    "initialize": 11,
                    "initialize_constant": 1,
                    "initialize_flag": 1,
                    "initialize_program": 2,
                    "initialize_value": 1,
                    "is_always_true": 1
                },
                "undefined4": {
                    "bool": 2,
                    "int": 6,
                    "status": 1,
                    "uint32": 1,
                    "uint32_t": 1,
                    "void": 1
                }
            },
            "called": [
                "FUN_08005750"
            ],
            "calling": [
                "FUN_08006f00"
            ],
            "code": "\nint initialize_program_thunk_08005750(void)\n\n{\n  result 1;\n}\n\n",
            "current_name": "initialize_program_thunk_08005750",
            "entrypoint": "0x08006f34",
            "imported": false,
            "improved": true,
            "renaming": {
                "return": "result",
                "thunk_FUN_08005750": "initialize_program_thunk_08005750",
                "undefined4": "int"
            },
            "skipped": false,
            "tags": []
        }
    },
    "layers": [
        [
            "FUN_0800010c",
            "FUN_08000178",
            "FUN_08000190",
            "FUN_08000194",
            "FUN_0800040c",
            "FUN_0800042c",
            "FUN_080006d4",
            "FUN_080008ba",
            "FUN_0800092c",
            "FUN_08000a2c",
            "FUN_08000a58",
            "FUN_08000aa8",
            "FUN_08000ae8",
            "FUN_08001294",
            "FUN_08001cac",
            "FUN_08001cc4",
            "FUN_08001e40",
            "FUN_08001e48",
            "FUN_08001f80",
            "FUN_08002470",
            "FUN_08002494",
            "FUN_080024f8",
            "FUN_08002514",
            "FUN_08002540",
            "FUN_08002560",
            "FUN_08002582",
            "FUN_0800258c",
            "FUN_08002624",
            "FUN_08002810",
            "FUN_0800281e",
            "FUN_08002848",
            "FUN_080028d2",
            "FUN_080028de",
            "FUN_08002ab8",
            "FUN_08002ad8",
            "FUN_08002af8",
            "FUN_08002b84",
            "FUN_08002c10",
            "FUN_08002c54",
            "FUN_08002ca6",
            "FUN_08002db2",
            "FUN_08002efc",
            "FUN_08002f9c",
            "FUN_0800306c",
            "FUN_0800365c",
            "FUN_08003a68",
            "FUN_08003c44",
            "FUN_08004092",
            "FUN_08004110",
            "FUN_0800417c",
            "FUN_08004198",
            "FUN_0800455a",
            "FUN_080045a2",
            "FUN_080047e8",
            "FUN_080047f4",
            "FUN_0800480a",
            "FUN_08004828",
            "FUN_08004848",
            "FUN_08004884",
            "FUN_080049f0",
            "FUN_08004c5e",
            "FUN_08004c8a",
            "FUN_08004cb2",
            "FUN_08004ce2",
            "FUN_08004d06",
            "FUN_08004d18",
            "FUN_08004d40",
            "FUN_08004d44",
            "FUN_08004d90",
            "FUN_08004df4",
            "FUN_08004e70",
            "FUN_080055bc",
            "FUN_080056d8",
            "FUN_08005714",
            "FUN_0800571a",
            "FUN_08005724",
            "FUN_08005728",
            "FUN_0800572c",
            "FUN_0800573c",
            "FUN_08005740",
            "FUN_08005750",
            "FUN_0800591e",
            "FUN_08005a44",
            "FUN_08005b24",
            "FUN_08005b3c",
            "FUN_08005c1c",
            "FUN_08005cb6",
            "FUN_08005cc0",
            "FUN_08005f8c",
            "FUN_08006158",
            "FUN_08006198",
            "FUN_080061e0",
            "FUN_080061f0",
            "FUN_080065c0",
            "FUN_08006e90",
            "thunk_FUN_08005750"
        ],
        [
            "FUN_080004f8",
            "FUN_0800074c",
            "FUN_080009b8",
            "FUN_08000aec",
            "FUN_08001a66",
            "FUN_08001c3c",
            "FUN_08001f84",
            "FUN_080020f0",
            "FUN_08003688",
            "FUN_08003c50",
            "FUN_08003c70",
            "FUN_08003c90",
            "FUN_08003ea0",
            "FUN_080040b0",
            "FUN_0800412c",
            "FUN_080043b4",
            "FUN_08004974",
            "FUN_08004b34",
            "FUN_08004b94",
            "FUN_08004b9e",
            "FUN_08004bb0",
            "FUN_08004c30",
            "FUN_08004c48",
            "FUN_08004c78",
            "FUN_08004ca2",
            "FUN_08004cce",
            "FUN_08004df8",
            "FUN_08004e12",
            "FUN_08004e74",
            "FUN_08004ec4",
            "FUN_08004ef4",
            "FUN_0800548c",
            "FUN_080054b0",
            "FUN_08005568",
            "FUN_080055e0",
            "FUN_08005604",
            "FUN_08005c38",
            "FUN_08005c96",
            "FUN_08005ce8",
            "FUN_08006112",
            "FUN_080066b0",
            "FUN_08006920",
            "FUN_08006c40",
            "FUN_08006f00",
            "FUN_08007004",
            "FUN_08007028",
            "FUN_08007048",
            "FUN_0800706c"
        ],
        [
            "FUN_080009a8",
            "FUN_080009c8",
            "FUN_080009dc",
            "FUN_080009f0",
            "FUN_08001918",
            "FUN_08001c88",
            "FUN_08002004",
            "FUN_0800213c",
            "FUN_0800224c",
            "FUN_08002348",
            "FUN_08002cf2",
            "FUN_08002d1c",
            "FUN_0800316c",
            "FUN_08003ad4",
            "FUN_08003afa",
            "FUN_08003da4",
            "FUN_08003ed8",
            "FUN_08003f18",
            "FUN_08004204",
            "FUN_08004478",
            "FUN_080045fe",
            "FUN_08004618",
            "FUN_0800492c",
            "FUN_08004948",
            "FUN_080054d4",
            "FUN_08005510",
            "FUN_08005848",
            "FUN_08005890",
            "FUN_080058e0",
            "FUN_08005b54",
            "FUN_08005cd4",
            "FUN_08005d42",
            "FUN_08005d8a",
            "FUN_08005fc8",
            "FUN_08006288",
            "FUN_08006ac0",
            "FUN_08006dc8",
            "FUN_08006f38",
            "FUN_08006f92"
        ],
        [
            "FUN_08000a04",
            "FUN_08000a18",
            "FUN_080012a2",
            "FUN_080015b2",
            "FUN_08001814",
            "FUN_08001b48",
            "FUN_08001cd0",
            "FUN_08002384",
            "FUN_080032b4",
            "FUN_08003520",
            "FUN_0800441a",
            "FUN_080046b8",
            "FUN_08004b3c",
            "FUN_08004e20",
            "FUN_0800598a",
            "FUN_08005bb0",
            "FUN_08005d82",
            "FUN_08006c88",
            "FUN_08006e10"
        ],
        [
            "FUN_080012c0",
            "FUN_080012e8",
            "FUN_080015f8",
            "FUN_080016b4",
            "FUN_080018f8",
            "FUN_08001960",
            "FUN_080019f6",
            "FUN_080033b8",
            "FUN_08004a4c",
            "FUN_08004c52",
            "FUN_080057b4",
            "FUN_08005da8"
        ],
        [
            "FUN_08001310",
            "FUN_0800157c",
            "FUN_08001a44",
            "FUN_08001ab0",
            "FUN_08001c32",
            "FUN_08005754",
            "FUN_08005f2c"
        ],
        [
            "FUN_0800134e",
            "FUN_0800135a",
            "FUN_08001366",
            "FUN_0800138e",
            "FUN_08001550",
            "FUN_08001b18",
            "FUN_08005f40",
            "FUN_08005f5e"
        ],
        [
            "FUN_08000cd0",
            "FUN_080013a4"
        ],
        [
            "FUN_080014ba"
        ],
        [
            "FUN_08001510"
        ],
        [
            "FUN_08000b08"
        ],
        [
            "FUN_08007090"
        ],
        [
            "FUN_080060d4"
        ],
        [
            "FUN_080060e4"
        ],
        [
            "FUN_0800282c"
        ],
        [
            "FUN_080069e4",
            "FUN_08006be0",
            "FUN_08006d14"
        ],
        [
            "FUN_08006cb4"
        ],
        [
            "FUN_08006344"
        ],
        [
            "FUN_08006370"
        ],
        [
            "FUN_08006394"
        ],
        [
            "FUN_08006174",
            "FUN_080068f0"
        ],
        [
            "FUN_08004f4c",
            "FUN_0800611c"
        ],
        [
            "FUN_08005384",
            "FUN_08005a68"
        ],
        [
            "FUN_08000bcc",
            "FUN_080053d4"
        ],
        [
            "FUN_08005730",
            "FUN_08005f6c"
        ],
        [
            "FUN_08006f5a"
        ]
    ],
    "locked_functions": [],
    "used_tokens": 913764
}