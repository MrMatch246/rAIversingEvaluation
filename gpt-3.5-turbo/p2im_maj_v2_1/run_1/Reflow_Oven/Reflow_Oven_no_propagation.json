{
    "functions": {
        "FUN_0800010c": {
            "additional_data": {
                "DAT_20000160": {
                    "data_flag": 2,
                    "flag": 12,
                    "flag_variable": 1,
                    "status_flag_value": 1
                },
                "FUN_0800010c": {
                    "initialize_data": 2,
                    "initialize_data_flag": 1,
                    "initialize_data_if_not_set": 1,
                    "initialize_flag": 24,
                    "initialize_flag_if_empty": 1,
                    "initialize_status_flag": 1,
                    "update_flag_if_zero": 1
                },
                "param_1": {
                    "data_to_initialize": 1,
                    "input": 14,
                    "input_data": 1,
                    "input_param": 1,
                    "input_parameter": 1,
                    "input_value": 11,
                    "new_value": 1,
                    "status_flag": 1
                }
            },
            "called": [
                "FUN_08007328"
            ],
            "calling": [],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08000118) */\n\nundefined4 initialize_flag_if_empty_0800010c(undefined4 input)\n\n{\n  if ((char)DAT_20000160 == '\\0') {\n    DAT_20000160._0_1_ = '\\x01';\n  }\n  return input;\n}\n\n",
            "current_name": "initialize_flag_if_empty_0800010c",
            "entrypoint": "0x0800010c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800010c": "initialize_flag_if_empty_0800010c",
                "param_1": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000178": {
            "additional_data": {
                "FUN_08000178": {
                    "calculate_string_length": 1,
                    "find_end_of_string": 13,
                    "find_null_terminated": 1,
                    "find_null_termination": 1,
                    "find_string_length": 10,
                    "get_null_terminated_string_length": 1,
                    "get_string_length": 3,
                    "reverse_string": 1
                },
                "cVar1": {
                    "current_char": 19,
                    "current_char_value": 2,
                    "current_character": 8,
                    "current_character_value": 1,
                    "next_character": 1
                },
                "param_1": {
                    "input_string": 12,
                    "str": 10,
                    "string": 9
                },
                "pcVar2": {
                    "current_character": 2,
                    "next_char": 16,
                    "next_char_pointer": 1,
                    "next_char_ptr": 3,
                    "next_character": 7,
                    "next_character_ptr": 1,
                    "ptr_next_char": 1
                },
                "pcVar3": {
                    "current_char": 6,
                    "current_char_pointer": 1,
                    "current_char_ptr": 3,
                    "current_character": 4,
                    "current_character_ptr": 1,
                    "current_pos": 1,
                    "current_position": 4,
                    "current_ptr": 1,
                    "current_str_ptr": 1,
                    "current_string_position": 1,
                    "next_character": 1,
                    "ptr": 1,
                    "ptr_current_char": 1,
                    "string_pointer": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005ce8",
                "FUN_08005c96"
            ],
            "code": "\nchar * find_end_of_string_08000178(char *input_string)\n\n{\n  char current_char;\n  char *next_char;\n  char *current_char;\n  \n  current_char = input_string;\n  do {\n    next_char = current_char + 1;\n    current_char = *current_char;\n    current_char = next_char;\n  } while (current_char != '\\0');\n  return next_char + (-1 - (int)input_string);\n}\n\n",
            "current_name": "find_end_of_string_08000178",
            "entrypoint": "0x08000178",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000178": "find_end_of_string_08000178",
                "cVar1": "current_char",
                "param_1": "input_string",
                "pcVar2": "next_char",
                "pcVar3": "current_char"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000190": {
            "additional_data": {
                "FUN_08000190": {
                    "arithmetic_operation": 1,
                    "calculate": 7,
                    "calculate_result": 4,
                    "calculate_xor": 1,
                    "calculate_xored_value": 1,
                    "perform_arithmetic_operation": 1,
                    "reverse_binary_operation": 1,
                    "reverse_bits": 3,
                    "reverse_bits_and_operate": 1,
                    "reverse_bitwise_operations": 1,
                    "reverse_replacement": 1
                },
                "bVar13": {
                    "b_var13": 1,
                    "bool1": 1,
                    "bool_1": 1,
                    "bool_val_1": 1,
                    "check_1": 2,
                    "condition1": 4,
                    "condition_1": 4,
                    "equal_check_1": 1,
                    "flag1": 6,
                    "is_condition_met1": 2,
                    "is_divisible": 1,
                    "is_input2_zero": 1,
                    "is_zero": 4,
                    "is_zero1": 1,
                    "tmp_flag_1": 1
                },
                "bVar14": {
                    "b_var14": 1,
                    "bool2": 1,
                    "bool_2": 1,
                    "bool_val_2": 1,
                    "check_2": 2,
                    "condition": 1,
                    "condition2": 4,
                    "condition_2": 4,
                    "equal_check_2": 1,
                    "flag2": 6,
                    "is_condition_met": 1,
                    "is_condition_met2": 2,
                    "is_negative": 2,
                    "is_same": 1,
                    "is_zero": 1,
                    "is_zero2": 1,
                    "tmp_flag_2": 1
                },
                "bVar15": {
                    "b_var15": 1,
                    "bool3": 1,
                    "bool_3": 1,
                    "bool_val_3": 1,
                    "borrow": 1,
                    "carry": 1,
                    "check_3": 2,
                    "comparison_result": 1,
                    "condition3": 2,
                    "condition_3": 4,
                    "flag3": 6,
                    "is_carry": 2,
                    "is_condition_met3": 2,
                    "is_negative": 2,
                    "is_negative2": 1,
                    "is_negative_bit_set": 1,
                    "sign_flag": 1,
                    "tmp_flag_3": 1
                },
                "bVar2": {
                    "bit": 1,
                    "bit_flag": 1,
                    "byte_val": 1,
                    "carry": 8,
                    "carry1": 2,
                    "carry_1": 1,
                    "carry_bit": 2,
                    "carry_bit_1": 1,
                    "carry_flag1": 1,
                    "temp2": 3
                },
                "iVar1": {
                    "bit_count": 1,
                    "bit_count1": 1,
                    "bit_shift_1": 1,
                    "i": 1,
                    "i_var": 1,
                    "index1": 1,
                    "result1": 1,
                    "shift1": 3,
                    "shift_1": 2,
                    "shift_amount1": 1,
                    "shift_amount_1": 1,
                    "shift_bits_1": 1,
                    "shift_count1": 1,
                    "shifted_comparison": 1,
                    "shifted_count_1": 1,
                    "shifted_input_2": 1,
                    "shifted_var4": 1,
                    "temp1": 3,
                    "temp11": 1,
                    "temp6": 1,
                    "temp_var8": 1
                },
                "iVar8": {
                    "bit_count2": 1,
                    "bit_shift_2": 1,
                    "i_var2": 1,
                    "index2": 1,
                    "result2": 1,
                    "shift2": 3,
                    "shift_2": 2,
                    "shift_amount": 2,
                    "shift_amount2": 1,
                    "shift_amount_2": 1,
                    "shift_bits_2": 1,
                    "shift_count2": 1,
                    "shifted_count_2": 1,
                    "shifted_input_4": 1,
                    "shifted_result": 1,
                    "shifted_var2": 1,
                    "temp6": 3,
                    "temp7": 1,
                    "temp8": 3,
                    "temp_i": 1,
                    "temp_var9": 1,
                    "tmp_6": 1
                },
                "param_1": {
                    "a": 1,
                    "input1": 19,
                    "input_1": 10,
                    "operand1": 1
                },
                "param_2": {
                    "b": 1,
                    "input2": 19,
                    "input_2": 10,
                    "operand2": 1
                },
                "param_3": {
                    "c": 1,
                    "input3": 19,
                    "input_3": 10,
                    "operand3": 1
                },
                "param_4": {
                    "d": 1,
                    "input4": 19,
                    "input_4": 10,
                    "operand4": 1
                },
                "uVar10": {
                    "carry1": 1,
                    "new_2": 1,
                    "op2": 1,
                    "output_2": 1,
                    "result1": 1,
                    "result2": 3,
                    "result_2": 1,
                    "temp1": 1,
                    "temp10": 3,
                    "temp2": 1,
                    "temp3": 1,
                    "temp4": 1,
                    "temp8": 2,
                    "temp9": 1,
                    "temp_1": 2,
                    "temp_2": 1,
                    "temp_7": 1,
                    "temp_var5": 1,
                    "temp_var7": 1,
                    "temp_var_5": 1,
                    "temp_var_7": 1,
                    "tmp3": 1,
                    "tmp_8": 1,
                    "u_var10": 1,
                    "v": 1
                },
                "uVar11": {
                    "new_3": 1,
                    "output_3": 1,
                    "result1": 1,
                    "result2": 2,
                    "result3": 3,
                    "result_3": 1,
                    "shifted_input3": 1,
                    "temp10": 1,
                    "temp11": 3,
                    "temp2": 1,
                    "temp3": 1,
                    "temp4": 1,
                    "temp5": 1,
                    "temp9": 2,
                    "temp_2": 1,
                    "temp_3": 2,
                    "temp_8": 1,
                    "temp_var1": 1,
                    "temp_var_6": 1,
                    "temp_var_8": 1,
                    "tmp4": 1,
                    "tmp_9": 1,
                    "u_var11": 1,
                    "x_temp": 1
                },
                "uVar12": {
                    "carry2": 1,
                    "carry3": 1,
                    "new_4": 1,
                    "output_4": 1,
                    "result2": 1,
                    "result4": 3,
                    "result_4": 1,
                    "temp10": 2,
                    "temp11": 1,
                    "temp12": 3,
                    "temp3": 2,
                    "temp4": 1,
                    "temp6": 1,
                    "temp_3": 1,
                    "temp_4": 2,
                    "temp_9": 1,
                    "temp_var2": 1,
                    "temp_var6": 1,
                    "temp_var_7": 1,
                    "temp_var_9": 1,
                    "tmp5": 1,
                    "tmp_10": 1,
                    "u_var12": 1,
                    "y_temp": 1
                },
                "uVar3": {
                    "carry": 1,
                    "carry1": 1,
                    "result_1": 2,
                    "shifted_result": 1,
                    "sum_1": 1,
                    "temp1": 12,
                    "temp3": 3,
                    "temp_1": 3,
                    "temp_4": 1,
                    "temp_var1": 1,
                    "temp_var3": 1,
                    "temp_var_1": 2,
                    "tmp_1": 1
                },
                "uVar4": {
                    "carry2": 1,
                    "carry_2": 1,
                    "modified_input_2": 1,
                    "result1": 1,
                    "result_2": 1,
                    "result_low": 1,
                    "sum": 1,
                    "temp2": 11,
                    "temp4": 3,
                    "temp_2": 3,
                    "temp_5": 1,
                    "temp_var2": 1,
                    "temp_var4": 1,
                    "temp_var_2": 2,
                    "tmp_2": 1
                },
                "uVar5": {
                    "carry": 1,
                    "carry2": 1,
                    "carry3": 1,
                    "result2": 1,
                    "result_2": 1,
                    "result_3": 1,
                    "sum_2": 1,
                    "temp3": 11,
                    "temp5": 3,
                    "temp_3": 3,
                    "temp_6": 1,
                    "temp_var3": 1,
                    "temp_var5": 1,
                    "temp_var_3": 2,
                    "tmp_3": 1
                },
                "uVar6": {
                    "flipped_input4": 1,
                    "input2_shifted": 1,
                    "modified_input4": 1,
                    "param_4_xor": 1,
                    "result": 1,
                    "result2": 1,
                    "result_1": 1,
                    "result_3": 1,
                    "result_high": 1,
                    "reversed_input4": 1,
                    "temp1": 1,
                    "temp4": 8,
                    "temp6": 3,
                    "temp_2": 1,
                    "temp_4": 3,
                    "temp_value_1": 1,
                    "temp_var_4": 1,
                    "tmp1": 1,
                    "tmp_4": 1,
                    "x": 1
                },
                "uVar7": {
                    "input4_shifted": 1,
                    "modified_input_3": 1,
                    "result3": 1,
                    "result_2": 1,
                    "result_4": 1,
                    "temp2": 2,
                    "temp5": 8,
                    "temp7": 3,
                    "temp_5": 3,
                    "temp_7": 1,
                    "temp_value_2": 1,
                    "temp_var4": 1,
                    "temp_var6": 1,
                    "temp_var_5": 1,
                    "tmp2": 1,
                    "tmp_5": 1,
                    "var1": 1,
                    "y": 1
                },
                "uVar8": {
                    "var2": 1
                },
                "uVar9": {
                    "new_1": 1,
                    "op1": 1,
                    "output_1": 1,
                    "param_2_shifted": 1,
                    "partial_result": 1,
                    "result1": 5,
                    "result_1": 1,
                    "shifted_input": 1,
                    "shifted_input2": 4,
                    "shifted_input_2": 1,
                    "temp1": 1,
                    "temp7": 2,
                    "temp8": 1,
                    "temp9": 3,
                    "temp_1": 1,
                    "temp_6": 1,
                    "temp_var_4": 1,
                    "temp_var_6": 1,
                    "tmp_7": 1,
                    "u": 1,
                    "u_var9": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080016b4",
                "FUN_08001a66",
                "FUN_08005da8",
                "FUN_08001814"
            ],
            "code": "\nulonglong calculate_result_08000190(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int temp1;\n  byte carry;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  int temp8;\n  uint result1;\n  uint temp10;\n  uint temp11;\n  uint temp12;\n  bool flag1;\n  bool flag2;\n  bool flag3;\n  \n  temp4 = input4 ^ 0x80000000;\n  result1 = input2 << 1;\n  input4 = input4 << 1;\n  flag1 = ((input2 ^ temp4) & 0x7fffffff) == 0;\n  flag2 = flag1 && input1 == input3;\n  if (!flag1 || input1 != input3) {\n    flag2 = (result1 | input1) == 0;\n  }\n  if (!flag2) {\n    flag2 = (input4 | input3) == 0;\n  }\n  temp8 = (int)result1 >> 0x15;\n  if (!flag2) {\n    flag2 = temp8 == -1;\n  }\n  temp1 = (int)input4 >> 0x15;\n  if (!flag2) {\n    flag2 = temp1 == -1;\n  }\n  if (flag2) {\n    if (temp8 == -1 || temp1 == -1) {\n      result1 = temp4;\n      temp11 = input3;\n      if (temp8 == -1) {\n        result1 = input2;\n        temp11 = input1;\n      }\n      if (temp8 != -1 || temp1 != -1) {\n        input3 = temp11;\n        temp4 = result1;\n      }\n      flag2 = (temp11 | result1 << 0xc) == 0;\n      if (flag2) {\n        flag2 = (input3 | temp4 << 0xc) == 0;\n      }\n      if (flag2) {\n        flag2 = result1 == temp4;\n      }\n      if (!flag2) {\n        result1 = result1 | 0x80000;\n      }\n      return CONCAT44(result1,temp11);\n    }\n    if (((input2 ^ temp4) & 0x7fffffff) != 0 || input1 != input3) {\n      if ((result1 | input1) == 0) {\n        input1 = input3;\n        input2 = temp4;\n      }\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != temp4) {\n      return 0;\n    }\n    if (result1 >> 0x15 == 0) {\n      flag2 = (input1 & 0x80000000) != 0;\n      temp4 = input2 * 2 + (uint)flag2;\n      if (CARRY4(input2,input2) || CARRY4(input2 * 2,(uint)flag2)) {\n        temp4 = temp4 | 0x80000000;\n      }\n      return CONCAT44(temp4,input1 << 1);\n    }\n    if (result1 < 0xffc00000) {\n      return CONCAT44(input2 + 0x100000,input1);\n    }\n    input2 = input2 & 0x80000000;\nLAB_080003d4:\n    return (ulonglong)(input2 | 0x7ff00000) << 0x20;\n  }\n  result1 = result1 >> 0x15;\n  input4 = input4 >> 0x15;\n  temp11 = input4 - result1;\n  flag2 = temp11 != 0;\n  if (input4 < result1) {\n    temp11 = -temp11;\n  }\n  temp10 = input1;\n  temp5 = input2;\n  if (flag2 && result1 <= input4) {\n    result1 = result1 + temp11;\n    temp10 = input3;\n    temp5 = temp4;\n    input3 = input1;\n    temp4 = input2;\n  }\n  if (0x36 < temp11) {\n    return CONCAT44(temp5,temp10);\n  }\n  temp2 = temp5 & 0xfffff | 0x100000;\n  if ((temp5 & 0x80000000) != 0) {\n    flag2 = temp10 != 0;\n    temp10 = -temp10;\n    temp2 = -temp2 - (uint)flag2;\n  }\n  temp5 = temp4 & 0xfffff | 0x100000;\n  if ((temp4 & 0x80000000) != 0) {\n    flag2 = input3 != 0;\n    input3 = -input3;\n    temp5 = -temp5 - (uint)flag2;\n  }\n  if (result1 == temp11) {\n    temp5 = temp5 ^ 0x100000;\n    if (result1 == 0) {\n      temp2 = temp2 ^ 0x100000;\n      result1 = 1;\n    }\n    else {\n      temp11 = temp11 - 1;\n    }\n  }\n  temp4 = -temp11 + 0x20;\n  if ((int)temp11 < 0x21) {\n    temp12 = input3 << (temp4 & 0xff);\n    input3 = input3 >> (temp11 & 0xff);\n    temp1 = temp10 + input3;\n    temp3 = temp5 << (temp4 & 0xff);\n    temp4 = temp1 + temp3;\n    temp2 = temp2 + CARRY4(temp10,input3) + ((int)temp5 >> (temp11 & 0xff)) +\n            (uint)CARRY4(temp1,temp3);\n  }\n  else {\n    temp12 = temp5 << (-temp11 + 0x40 & 0xff);\n    if (input3 != 0) {\n      temp12 = temp12 | 2;\n    }\n    temp5 = (int)temp5 >> (temp11 - 0x20 & 0xff);\n    temp4 = temp10 + temp5;\n    temp2 = temp2 + ((int)temp5 >> 0x1f) + (uint)CARRY4(temp10,temp5);\n  }\n  input2 = temp2 & 0x80000000;\n  temp11 = temp2;\n  if ((int)temp2 < 0) {\n    flag2 = temp12 == 0;\n    temp12 = -temp12;\n    temp11 = -temp4;\n    temp4 = -(uint)!flag2 - temp4;\n    temp11 = -(uint)(flag2 <= temp11) - temp2;\n  }\n  if (0xfffff < temp11) {\n    temp10 = result1 - 1;\n    if (0x1fffff < temp11) {\n      temp10 = temp11 & 1;\n      temp11 = temp11 >> 1;\n      carry = (byte)temp4;\n      temp4 = (uint)(temp10 != 0) << 0x1f | temp4 >> 1;\n      temp12 = (uint)(carry & 1) << 0x1f | temp12 >> 1;\n      temp10 = result1;\n      if (0xffbfffff < result1 * 0x200000) goto LAB_080003d4;\n    }\nLAB_080002a0:\n    flag2 = 0x7fffffff < temp12;\n    if (temp12 == 0x80000000) {\n      flag2 = (temp4 & 1) != 0;\n    }\n    return CONCAT44(temp11 + temp10 * 0x100000 + (uint)CARRY4(temp4,(uint)flag2) | input2,\n                    temp4 + flag2);\n  }\n  flag1 = (temp12 & 0x80000000) != 0;\n  temp12 = temp12 << 1;\n  temp10 = temp4 * 2;\n  flag2 = CARRY4(temp4,temp4);\n  temp4 = temp4 * 2 + (uint)flag1;\n  temp11 = temp11 * 2 + (uint)(flag2 || CARRY4(temp10,(uint)flag1));\n  temp10 = result1 - 2;\n  if ((temp11 & 0x100000) != 0) goto LAB_080002a0;\n  temp5 = temp4;\n  result1 = temp11;\n  if (temp11 == 0) {\n    temp5 = 0;\n    result1 = temp4;\n  }\n  temp8 = LZCOUNT(result1);\n  if (temp11 == 0) {\n    temp8 = temp8 + 0x20;\n  }\n  temp11 = temp8 - 0xb;\n  flag3 = SBORROW4(temp11,0x20);\n  temp4 = temp8 - 0x2b;\n  flag2 = (int)temp4 < 0;\n  flag1 = temp4 == 0;\n  if ((int)temp11 < 0x20) {\n    flag3 = SCARRY4(temp4,0xc);\n    temp8 = temp8 + -0x1f;\n    flag2 = temp8 < 0;\n    flag1 = temp8 == 0;\n    temp4 = temp11;\n    if (!flag1 && flag2 == flag3) {\n      temp5 = result1 << (temp11 & 0xff);\n      result1 = result1 >> (0xcU - temp8 & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (flag1 || flag2 != flag3) {\n    temp12 = 0x20 - temp4;\n  }\n  result1 = result1 << (temp4 & 0xff);\n  if (flag1 || flag2 != flag3) {\n    result1 = result1 | temp5 >> (temp12 & 0xff);\n  }\n  if (flag1 || flag2 != flag3) {\n    temp5 = temp5 << (temp4 & 0xff);\n  }\nLAB_08000318:\n  if ((int)temp11 <= (int)temp10) {\n    return CONCAT44(result1 + (temp10 - temp11) * 0x100000 | input2,temp5);\n  }\n  temp4 = ~(temp10 - temp11);\n  if ((int)temp4 < 0x1f) {\n    temp8 = temp4 - 0x13;\n    if (temp8 != 0 && temp8 < 0 == SCARRY4(temp4 - 0x1f,0xc)) {\n      return CONCAT44(temp2,temp5 >> (0x20 - (0xcU - temp8) & 0xff) | result1 << (0xcU - temp8 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    temp4 = temp4 + 1;\n    return CONCAT44(input2 | result1 >> (temp4 & 0xff),\n                    temp5 >> (temp4 & 0xff) | result1 << (0x20 - temp4 & 0xff));\n  }\n  return CONCAT44(temp2,result1 >> (temp4 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "current_name": "calculate_result_08000190",
            "entrypoint": "0x08000190",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000190": "calculate_result_08000190",
                "bVar13": "flag1",
                "bVar14": "flag2",
                "bVar15": "flag3",
                "bVar2": "carry",
                "iVar1": "temp1",
                "iVar8": "temp8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar10": "temp10",
                "uVar11": "temp11",
                "uVar12": "temp12",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar5": "temp3",
                "uVar6": "temp4",
                "uVar7": "temp5",
                "uVar9": "result1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000194": {
            "additional_data": {
                "CARRY4": {
                    "carry4": 1
                },
                "CONCAT44": {
                    "combine": 1
                },
                "FUN_08000194": {
                    "calculate": 3,
                    "calculate_binary_operation": 1,
                    "calculate_result": 7,
                    "calculate_sum": 2,
                    "calculate_sum_and_shift": 1,
                    "calculate_u_long_long": 2,
                    "perform_calculation": 1,
                    "perform_unsigned_arithmetic_operation": 1,
                    "perform_unsigned_integer_arithmetic": 1,
                    "reverse_arithmetic": 1,
                    "reverse_binary_operation": 1,
                    "reverse_bytes": 1,
                    "reverse_calculate": 1
                },
                "LZCOUNT": {
                    "leading_zeroes_count": 1
                },
                "bVar13": {
                    "are_equal": 2,
                    "bool1": 1,
                    "carry_overflow": 1,
                    "check1": 1,
                    "check_equal": 1,
                    "condition1": 2,
                    "condition_1": 1,
                    "flag1": 3,
                    "input_equality_same_sign": 1,
                    "is_condition1_true": 1,
                    "is_equal": 4,
                    "is_equal_magnitude": 1,
                    "is_input2_equal_input4": 1,
                    "is_input_equal": 1,
                    "is_negative_shifted_a": 1,
                    "is_same_magnitude": 1,
                    "is_zero": 2,
                    "is_zero_flag": 1,
                    "temp_13": 1,
                    "temp_bool1": 2
                },
                "bVar14": {
                    "bool2": 1,
                    "check": 1,
                    "check2": 1,
                    "check_equal_and_zero": 1,
                    "condition": 3,
                    "condition1": 2,
                    "condition2": 2,
                    "condition_2": 1,
                    "condition_flag": 1,
                    "conditions_met": 1,
                    "flag2": 3,
                    "is_condition2_true": 1,
                    "is_condition_true": 1,
                    "is_equal2": 1,
                    "is_negative": 1,
                    "is_special_case": 1,
                    "is_zero": 3,
                    "is_zero_result": 1,
                    "temp_14": 1,
                    "temp_bool2": 2
                },
                "bVar15": {
                    "bool3": 1,
                    "borrow": 1,
                    "carry2": 1,
                    "check3": 1,
                    "check_result": 1,
                    "condition2": 2,
                    "condition3": 2,
                    "flag3": 3,
                    "is_carry": 2,
                    "is_condition3_true": 1,
                    "is_less_than_zero": 1,
                    "is_negative": 2,
                    "is_negative_shift1": 1,
                    "overflow_condition": 1,
                    "overflow_flag": 1,
                    "result_carry": 1,
                    "sign_flag": 1,
                    "signed_carry": 1,
                    "subtraction_overflow": 1,
                    "temp_15": 1,
                    "temp_bool3": 2
                },
                "bVar2": {
                    "carry": 9,
                    "carry1": 1,
                    "carry_1": 1,
                    "carry_bit": 3,
                    "carry_flag": 4,
                    "temp2": 1,
                    "temp6": 1,
                    "temp_2": 1,
                    "temp_byte": 1,
                    "var2": 1
                },
                "iVar1": {
                    "bit_shift_val1": 1,
                    "left_shift1": 1,
                    "shift1": 8,
                    "shift_1": 1,
                    "shift_amount2": 2,
                    "shift_right1": 2,
                    "shifted_input2": 2,
                    "shifted_input4": 1,
                    "shifted_input4_as_int": 1,
                    "shifted_input4_sign_in32": 1,
                    "shifted_input_4_divided": 1,
                    "shifted_operand_4_copy2": 1,
                    "temp1": 1,
                    "temp_1": 1,
                    "var1": 1
                },
                "iVar6": {
                    "bit_shift_val2": 1,
                    "divisor1": 1,
                    "right_shift1": 1,
                    "shift1": 1,
                    "shift2": 8,
                    "shift_2": 1,
                    "shift_amount": 1,
                    "shift_amount1": 2,
                    "shift_right2": 2,
                    "shift_val1": 1,
                    "shifted_input2": 1,
                    "shifted_input2_as_int": 1,
                    "shifted_input2_sign_in32": 1,
                    "shifted_input4": 1,
                    "shifted_input4_sign": 1,
                    "shifted_input_2_divided": 1,
                    "shifted_operand_2": 1,
                    "temp6": 1,
                    "temp_6": 1,
                    "var6": 1
                },
                "param_1": {
                    "a": 1,
                    "input1": 21,
                    "input_1": 3,
                    "input_value1": 1,
                    "num1": 2,
                    "operand_1": 1,
                    "x": 1
                },
                "param_2": {
                    "b": 1,
                    "input2": 21,
                    "input_2": 3,
                    "input_value2": 1,
                    "num2": 2,
                    "operand_2": 1,
                    "y": 1
                },
                "param_3": {
                    "a": 1,
                    "c": 1,
                    "input3": 21,
                    "input_3": 3,
                    "input_value3": 1,
                    "num3": 2,
                    "operand_3": 1
                },
                "param_3_temp": {
                    "input3_temp": 1
                },
                "param_4": {
                    "b": 1,
                    "d": 1,
                    "input4": 21,
                    "input_4": 3,
                    "input_value4": 1,
                    "num4": 2,
                    "operand_4": 1
                },
                "param_4_temp": {
                    "input4_temp": 1
                },
                "uVar10": {
                    "abs_diff": 1,
                    "abs_difference": 1,
                    "diff1": 1,
                    "difference": 7,
                    "input4": 1,
                    "magnitude_difference": 1,
                    "modified_input_3": 1,
                    "result2": 3,
                    "shifted_input3": 1,
                    "shifted_input4": 2,
                    "temp1": 1,
                    "temp10": 1,
                    "temp3": 1,
                    "temp4": 1,
                    "temp5": 1,
                    "temp7": 2,
                    "temp_10": 1,
                    "u_var10": 1,
                    "var10": 1
                },
                "uVar11": {
                    "bitwise_or": 1,
                    "carry": 1,
                    "carry2": 1,
                    "carry_bit": 1,
                    "carry_out1": 1,
                    "carry_partial_result": 1,
                    "carry_result": 1,
                    "diff2": 1,
                    "result1": 1,
                    "result3": 1,
                    "result4": 1,
                    "result_2": 1,
                    "temp1": 1,
                    "temp11": 1,
                    "temp2": 1,
                    "temp3": 1,
                    "temp4": 3,
                    "temp5": 1,
                    "temp6": 1,
                    "temp8": 2,
                    "temp_1": 1,
                    "temp_11": 1,
                    "temp_var3": 1,
                    "u_var11": 2,
                    "var11": 1
                },
                "uVar12": {
                    "bitwise_shift": 1,
                    "carry_out2": 1,
                    "overflow": 1,
                    "result1": 2,
                    "result2": 2,
                    "result4": 1,
                    "result_1": 1,
                    "result_lower_half": 1,
                    "sum": 1,
                    "sum1": 1,
                    "temp12": 1,
                    "temp2": 1,
                    "temp3": 1,
                    "temp4": 1,
                    "temp5": 3,
                    "temp6": 1,
                    "temp9": 2,
                    "temp_12": 1,
                    "temp_2": 1,
                    "temp_var4": 1,
                    "u_var12": 3,
                    "var12": 1
                },
                "uVar3": {
                    "result": 2,
                    "result1": 5,
                    "result_1": 1,
                    "shifted_operand_1": 1,
                    "sum1": 3,
                    "temp1": 13,
                    "temp3": 1,
                    "temp_1": 1,
                    "temp_3": 1,
                    "temp_var5": 1,
                    "var3": 1
                },
                "uVar4": {
                    "result2": 5,
                    "shifted_input_2": 1,
                    "shifted_operand_3": 1,
                    "shifted_result": 1,
                    "sum2": 2,
                    "temp1": 1,
                    "temp2": 13,
                    "temp4": 1,
                    "temp_2": 1,
                    "temp_4": 1,
                    "temp_var6": 1,
                    "var4": 1
                },
                "uVar5": {
                    "input2": 1,
                    "input2_shifted": 1,
                    "num2_shifted": 1,
                    "operand_2_copy": 1,
                    "product1": 1,
                    "result2": 1,
                    "result3": 4,
                    "result_2": 1,
                    "shifted_input4": 1,
                    "shifted_input_4": 1,
                    "temp1": 1,
                    "temp3": 11,
                    "temp5": 1,
                    "temp_5": 1,
                    "temp_var2": 1,
                    "var5": 1
                },
                "uVar7": {
                    "input2_shifted1": 1,
                    "shifted_b": 1,
                    "shifted_input1": 2,
                    "shifted_input2": 14,
                    "shifted_input_1": 1,
                    "shifted_input_2": 1,
                    "shifted_operand_2_copy": 1,
                    "shifted_y": 1,
                    "temp1": 1,
                    "temp2": 1,
                    "temp4": 2,
                    "temp7": 1,
                    "temp_7": 1,
                    "var7": 1
                },
                "uVar7_final": {
                    "output1": 1
                },
                "uVar7_temp": {
                    "shifted_input2_temp": 1
                },
                "uVar8": {
                    "divisor2": 1,
                    "input1": 1,
                    "num1_shifted": 1,
                    "output1": 1,
                    "result1": 3,
                    "result4": 1,
                    "result_1": 1,
                    "shifted_a": 1,
                    "shifted_input1": 2,
                    "shifted_input2": 2,
                    "shifted_input4": 3,
                    "shifted_input_3": 1,
                    "shifted_operand_4": 1,
                    "sum": 1,
                    "temp2": 2,
                    "temp4": 1,
                    "temp5": 2,
                    "temp8": 1,
                    "temp_8": 1,
                    "temp_var1": 1,
                    "var8": 1
                },
                "uVar9": {
                    "modified_input_4": 1,
                    "overflowed_result": 1,
                    "result1": 2,
                    "result2": 1,
                    "shifted_b": 1,
                    "shifted_d": 1,
                    "shifted_input3": 1,
                    "shifted_input4": 10,
                    "shifted_input_4": 1,
                    "shifted_operand_4_copy": 1,
                    "temp3": 2,
                    "temp4": 1,
                    "temp6": 2,
                    "temp9": 1,
                    "temp_9": 1,
                    "u_var9": 1,
                    "var9": 1
                },
                "uVar9_final": {
                    "output2": 1
                },
                "uVar9_temp": {
                    "shifted_input4_temp": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080015f8",
                "FUN_08000cd0",
                "FUN_080016b4",
                "FUN_08005da8"
            ],
            "code": "\nulonglong calculate_result_08000194(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int shift1;\n  byte carry;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  int shift2;\n  uint shifted_input2;\n  uint shifted_input4;\n  uint shifted_input4;\n  uint difference;\n  uint temp4;\n  uint u_var12;\n  bool is_equal;\n  bool flag2;\n  bool flag3;\n  \n  shifted_input2 = input2 << 1;\n  shifted_input4 = input4 << 1;\n  is_equal = ((input2 ^ input4) & 0x7fffffff) == 0;\n  flag2 = is_equal && input1 == input3;\n  if (!is_equal || input1 != input3) {\n    flag2 = (shifted_input2 | input1) == 0;\n  }\n  if (!flag2) {\n    flag2 = (shifted_input4 | input3) == 0;\n  }\n  shift2 = (int)shifted_input2 >> 0x15;\n  if (!flag2) {\n    flag2 = shift2 == -1;\n  }\n  shift1 = (int)shifted_input4 >> 0x15;\n  if (!flag2) {\n    flag2 = shift1 == -1;\n  }\n  if (flag2) {\n    if (shift2 == -1 || shift1 == -1) {\n      shifted_input4 = input4;\n      shifted_input2 = input3;\n      if (shift2 == -1) {\n        shifted_input4 = input2;\n        shifted_input2 = input1;\n      }\n      if (shift2 != -1 || shift1 != -1) {\n        input3 = shifted_input2;\n        input4 = shifted_input4;\n      }\n      flag2 = (shifted_input2 | shifted_input4 << 0xc) == 0;\n      if (flag2) {\n        flag2 = (input3 | input4 << 0xc) == 0;\n      }\n      if (flag2) {\n        flag2 = shifted_input4 == input4;\n      }\n      if (!flag2) {\n        shifted_input4 = shifted_input4 | 0x80000;\n      }\n      return combine(shifted_input4,shifted_input2);\n    }\n    if (((input2 ^ input4) & 0x7fffffff) != 0 || input1 != input3) {\n      if ((shifted_input2 | input1) == 0) {\n        input1 = input3;\n        input2 = input4;\n      }\n      return combine(input2,input1);\n    }\n    if (input2 != input4) {\n      return 0;\n    }\n    if (shifted_input2 >> 0x15 == 0) {\n      flag2 = (input1 & 0x80000000) != 0;\n      shifted_input4 = input2 * 2 + (uint)flag2;\n      if (carry4(input2,input2) || carry4(input2 * 2,(uint)flag2)) {\n        shifted_input4 = shifted_input4 | 0x80000000;\n      }\n      return combine(shifted_input4,input1 << 1);\n    }\n    if (shifted_input2 < 0xffc00000) {\n      return combine(input2 + 0x100000,input1);\n    }\n    input2 = input2 & 0x80000000;\nLAB_080003d4:\n    return (ulonglong)(input2 | 0x7ff00000) << 0x20;\n  }\n  shifted_input2 = shifted_input2 >> 0x15;\n  shifted_input4 = shifted_input4 >> 0x15;\n  difference = shifted_input4 - shifted_input2;\n  flag2 = difference != 0;\n  if (shifted_input4 < shifted_input2) {\n    difference = -difference;\n  }\n  shifted_input4 = input1;\n  temp3 = input2;\n  if (flag2 && shifted_input2 <= shifted_input4) {\n    shifted_input2 = shifted_input2 + difference;\n    shifted_input4 = input3;\n    temp3 = input4;\n    input3 = input1;\n    input4 = input2;\n  }\n  if (0x36 < difference) {\n    return combine(temp3,shifted_input4);\n  }\n  shifted_input4 = temp3 & 0xfffff | 0x100000;\n  if ((temp3 & 0x80000000) != 0) {\n    flag2 = shifted_input4 != 0;\n    shifted_input4 = -shifted_input4;\n    shifted_input4 = -shifted_input4 - (uint)flag2;\n  }\n  temp3 = input4 & 0xfffff | 0x100000;\n  if ((input4 & 0x80000000) != 0) {\n    flag2 = input3 != 0;\n    input3 = -input3;\n    temp3 = -temp3 - (uint)flag2;\n  }\n  if (shifted_input2 == difference) {\n    temp3 = temp3 ^ 0x100000;\n    if (shifted_input2 == 0) {\n      shifted_input4 = shifted_input4 ^ 0x100000;\n      shifted_input2 = 1;\n    }\n    else {\n      difference = difference - 1;\n    }\n  }\n  u_var12 = -difference + 0x20;\n  if ((int)difference < 0x21) {\n    temp4 = input3 << (u_var12 & 0xff);\n    input3 = input3 >> (difference & 0xff);\n    temp1 = shifted_input4 + input3;\n    temp2 = temp3 << (u_var12 & 0xff);\n    u_var12 = temp1 + temp2;\n    shifted_input4 = shifted_input4 + carry4(shifted_input4,input3) + ((int)temp3 >> (difference & 0xff)) +\n            (uint)carry4(temp1,temp2);\n  }\n  else {\n    temp4 = temp3 << (-difference + 0x40 & 0xff);\n    if (input3 != 0) {\n      temp4 = temp4 | 2;\n    }\n    temp3 = (int)temp3 >> (difference - 0x20 & 0xff);\n    u_var12 = shifted_input4 + temp3;\n    shifted_input4 = shifted_input4 + ((int)temp3 >> 0x1f) + (uint)carry4(shifted_input4,temp3);\n  }\n  input2 = shifted_input4 & 0x80000000;\n  difference = shifted_input4;\n  if ((int)shifted_input4 < 0) {\n    flag2 = temp4 == 0;\n    temp4 = -temp4;\n    difference = -u_var12;\n    u_var12 = -(uint)!flag2 - u_var12;\n    difference = -(uint)(flag2 <= difference) - shifted_input4;\n  }\n  if (0xfffff < difference) {\n    shifted_input4 = shifted_input2 - 1;\n    if (0x1fffff < difference) {\n      shifted_input4 = difference & 1;\n      difference = difference >> 1;\n      carry = (byte)u_var12;\n      u_var12 = (uint)(shifted_input4 != 0) << 0x1f | u_var12 >> 1;\n      temp4 = (uint)(carry & 1) << 0x1f | temp4 >> 1;\n      shifted_input4 = shifted_input2;\n      if (0xffbfffff < shifted_input2 * 0x200000) goto LAB_080003d4;\n    }\nLAB_080002a0:\n    flag2 = 0x7fffffff < temp4;\n    if (temp4 == 0x80000000) {\n      flag2 = (u_var12 & 1) != 0;\n    }\n    return combine(difference + shifted_input4 * 0x100000 + (uint)carry4(u_var12,(uint)flag2) | input2,\n                    u_var12 + flag2);\n  }\n  is_equal = (temp4 & 0x80000000) != 0;\n  temp4 = temp4 << 1;\n  shifted_input4 = u_var12 * 2;\n  flag2 = carry4(u_var12,u_var12);\n  u_var12 = u_var12 * 2 + (uint)is_equal;\n  difference = difference * 2 + (uint)(flag2 || carry4(shifted_input4,(uint)is_equal));\n  shifted_input4 = shifted_input2 - 2;\n  if ((difference & 0x100000) != 0) goto LAB_080002a0;\n  temp3 = u_var12;\n  shifted_input2 = difference;\n  if (difference == 0) {\n    temp3 = 0;\n    shifted_input2 = u_var12;\n  }\n  shift2 = leading_zeroes_count(shifted_input2);\n  if (difference == 0) {\n    shift2 = shift2 + 0x20;\n  }\n  u_var12 = shift2 - 0xb;\n  flag3 = SBORROW4(u_var12,0x20);\n  difference = shift2 - 0x2b;\n  flag2 = (int)difference < 0;\n  is_equal = difference == 0;\n  if ((int)u_var12 < 0x20) {\n    flag3 = Scarry4(difference,0xc);\n    shift2 = shift2 + -0x1f;\n    flag2 = shift2 < 0;\n    is_equal = shift2 == 0;\n    difference = u_var12;\n    if (!is_equal && flag2 == flag3) {\n      temp3 = shifted_input2 << (u_var12 & 0xff);\n      shifted_input2 = shifted_input2 >> (0xcU - shift2 & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (is_equal || flag2 != flag3) {\n    temp4 = 0x20 - difference;\n  }\n  shifted_input2 = shifted_input2 << (difference & 0xff);\n  if (is_equal || flag2 != flag3) {\n    shifted_input2 = shifted_input2 | temp3 >> (temp4 & 0xff);\n  }\n  if (is_equal || flag2 != flag3) {\n    temp3 = temp3 << (difference & 0xff);\n  }\nLAB_08000318:\n  if ((int)u_var12 <= (int)shifted_input4) {\n    return combine(shifted_input2 + (shifted_input4 - u_var12) * 0x100000 | input2,temp3);\n  }\n  difference = ~(shifted_input4 - u_var12);\n  if ((int)difference < 0x1f) {\n    shift2 = difference - 0x13;\n    if (shift2 != 0 && shift2 < 0 == Scarry4(difference - 0x1f,0xc)) {\n      return combine(shifted_input4,temp3 >> (0x20 - (0xcU - shift2) & 0xff) | shifted_input2 << (0xcU - shift2 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    difference = difference + 1;\n    return combine(input2 | shifted_input2 >> (difference & 0xff),\n                    temp3 >> (difference & 0xff) | shifted_input2 << (0x20 - difference & 0xff));\n  }\n  return combine(shifted_input4,shifted_input2 >> (difference - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "current_name": "calculate_result_08000194",
            "entrypoint": "0x08000194",
            "imported": false,
            "improved": true,
            "renaming": {
                "CARRY4": "carry4",
                "CONCAT44": "combine",
                "FUN_08000194": "calculate_result_08000194",
                "LZCOUNT": "leading_zeroes_count",
                "bVar13": "is_equal",
                "bVar14": "flag2",
                "bVar15": "flag3",
                "bVar2": "carry",
                "iVar1": "shift1",
                "iVar6": "shift2",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar10": "difference",
                "uVar11": "temp4",
                "uVar12": "u_var12",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar5": "temp3",
                "uVar7": "shifted_input2",
                "uVar8": "shifted_input4",
                "uVar9": "shifted_input4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800040c": {
            "additional_data": {
                "0": {
                    "zero": 1
                },
                "0U": {
                    "mask": 1,
                    "zero_u": 1
                },
                "0x13": {
                    "comparison2": 1
                },
                "0x15": {
                    "offset": 1
                },
                "0x1e": {
                    "comparison1": 1
                },
                "0x1f": {
                    "comparison3": 1
                },
                "0x20": {
                    "bit_size": 1
                },
                "0x432": {
                    "threshold": 1
                },
                "0xc": {
                    "shift_mask1": 1
                },
                "CONCAT44": {
                    "combine_bits": 1,
                    "combine_results": 1,
                    "combine_values": 1,
                    "concatenate": 1,
                    "concatenate_values": 1,
                    "join_values": 1
                },
                "FUN_0800040c": {
                    "bit_rotation": 1,
                    "bit_shift_function": 2,
                    "bitshift_operation": 1,
                    "bitwise_shift": 3,
                    "convert_and_shift": 1,
                    "convert_and_shift_bits": 1,
                    "decode_and_shift_bits": 1,
                    "reverse_and_shift": 1,
                    "reverse_bits": 9,
                    "reverse_bits_and_shift": 1,
                    "shift_and_combine": 4,
                    "shift_and_concat": 1,
                    "shift_and_concat_bits": 1,
                    "shift_and_concatenate": 4
                },
                "LAB_08000318": {
                    "apply_shift": 2,
                    "calculate_result": 1,
                    "continue_label": 1,
                    "end_of_calculation": 1,
                    "perform_shift": 1,
                    "process_shift": 1,
                    "shift_and_concatenate_loop": 1,
                    "shift_bits": 1,
                    "shifted_result": 1,
                    "skip_block": 1
                },
                "bVar5": {
                    "is_less_than_zero": 2,
                    "is_negative": 25,
                    "is_negative_length": 1,
                    "is_negative_shift": 2,
                    "less_than_zero": 1
                },
                "bVar6": {
                    "equals_zero": 1,
                    "is_zero": 27,
                    "is_zero_length": 1,
                    "is_zero_shift": 2
                },
                "bVar7": {
                    "borrow_flag": 1,
                    "carry_flag": 1,
                    "has_carry": 2,
                    "has_overflow": 1,
                    "is_borrow": 5,
                    "is_carry": 6,
                    "is_out_of_bounds": 1,
                    "is_overflow": 6,
                    "is_remainder_negative": 1,
                    "is_signed_overflow": 1,
                    "is_subtracted": 2,
                    "is_subtraction": 1,
                    "is_subtraction_overflow": 1,
                    "overflow": 2
                },
                "iVar3": {
                    "bit_count": 4,
                    "count": 8,
                    "leading_zero_count": 1,
                    "leading_zeroes": 3,
                    "leading_zeros": 12,
                    "lzcount": 1,
                    "num_bits": 1,
                    "shift_amount": 1
                },
                "in_r12": {
                    "extra_bits": 1,
                    "in_r12": 1,
                    "remainder": 1,
                    "remaining_bits": 16,
                    "remaining_length": 1,
                    "remaining_shift": 2,
                    "remaining_shift_amount": 2,
                    "reversed": 1,
                    "shift_amount": 1,
                    "shifted_bits": 1,
                    "shifted_by": 1,
                    "temp": 2,
                    "temp_var": 1
                },
                "param_1": {
                    "input": 21,
                    "input_num": 3,
                    "input_number": 1,
                    "input_value": 6
                },
                "uVar1": {
                    "combined_value": 1,
                    "concatenated": 1,
                    "concatenated_value": 2,
                    "output1": 1,
                    "output_upper": 1,
                    "result": 6,
                    "result1": 2,
                    "result64": 1,
                    "result_h": 1,
                    "result_low": 1,
                    "result_lower": 1,
                    "result_upper": 1,
                    "reversed": 1,
                    "shifted_bits": 2,
                    "shifted_num": 3,
                    "shifted_output": 1,
                    "shifted_result": 1,
                    "shifted_value": 3,
                    "shifted_value1": 1
                },
                "uVar2": {
                    "bit_count": 1,
                    "bit_length": 1,
                    "count": 1,
                    "output2": 1,
                    "result2": 2,
                    "shift_amount": 14,
                    "shift_amount1": 1,
                    "shift_count": 2,
                    "shiftable": 1,
                    "shifted": 1,
                    "shifted_value2": 1
                },
                "uVar4": {
                    "adjusted_bits": 1,
                    "adjusted_count": 1,
                    "lzcount_plus": 1,
                    "mask_value": 1,
                    "shift": 3,
                    "shift_amount": 7,
                    "shift_amount1": 1,
                    "shift_amount2": 1,
                    "shift_distance": 1,
                    "shift_limit": 2,
                    "shift_total": 1,
                    "shifted": 1,
                    "shifted_amount": 1,
                    "shifted_leading_zeros": 1,
                    "shifted_plus": 1,
                    "shifted_value": 2,
                    "temp": 2,
                    "total_bits": 2,
                    "total_length": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08000cd0",
                "FUN_080015f8",
                "FUN_08001918",
                "FUN_08005da8",
                "FUN_08001814"
            ],
            "code": "\nulonglong reverse_bits_and_shift_0800040c(uint input)\n\n{\n  uint result;\n  uint shift_amount;\n  int leading_zeros;\n  uint shift_amount;\n  uint remaining_bits;\n  bool is_negative;\n  bool is_zero;\n  bool is_carry;\n  \n  if (input == 0) {\n    return 0;\n  }\n  result = 0;\n  leading_zeros = LZCOUNT(input);\n  shift_amount = leading_zeros + 0x15;\n  is_carry = SBORROW4(shift_amount,0x20);\n  shift_amount = leading_zeros - 0xb;\n  is_negative = (int)shift_amount < 0;\n  is_zero = shift_amount == 0;\n  if (shift_amount < 0x20) {\n    is_carry = SCARRY4(shift_amount,0xc);\n    is_negative = false;\n    is_zero = leading_zeros + 1 == 0;\n    shift_amount = shift_amount;\n    if (!is_zero && is_carry == false) {\n      result = input << shift_amount;\n      input = input >> (0xcU - (leading_zeros + 1) & 0xff);\n      goto apply_shift;\n    }\n  }\n  if (is_zero || is_negative != is_carry) {\n    remaining_bits = 0x20 - shift_amount;\n  }\n  input = input << (shift_amount & 0xff);\n  if (is_zero || is_negative != is_carry) {\n    input = input | zero_u >> (remaining_bits & 0xff);\n  }\n  if (is_zero || is_negative != is_carry) {\n    result = 0 << (shift_amount & 0xff);\n  }\napply_shift:\n  if (shift_amount < 0x433) {\n    return combine_bits(input + (0x432 - shift_amount) * 0x100000,result);\n  }\n  shift_amount = ~(0x432 - shift_amount);\n  if (0x1e < (int)shift_amount) {\n    return (ulonglong)(input >> (shift_amount - 0x1f & 0xff));\n  }\n  leading_zeros = shift_amount - 0x13;\n  if (leading_zeros == 0 || leading_zeros < 0 != SCARRY4(shift_amount - 0x1f,0xc)) {\n    shift_amount = shift_amount + 1;\n    return combine_bits(input >> (shift_amount & 0xff),\n                    result >> (shift_amount & 0xff) | input << (0x20 - shift_amount & 0xff));\n  }\n  return (ulonglong)(result >> (0x20 - (0xcU - leading_zeros) & 0xff) | input << (0xcU - leading_zeros & 0xff));\n}\n\n",
            "current_name": "reverse_bits_and_shift_0800040c",
            "entrypoint": "0x0800040c",
            "imported": false,
            "improved": true,
            "renaming": {
                "0U": "zero_u",
                "CONCAT44": "combine_bits",
                "FUN_0800040c": "reverse_bits_and_shift_0800040c",
                "LAB_08000318": "apply_shift",
                "bVar5": "is_negative",
                "bVar6": "is_zero",
                "bVar7": "is_carry",
                "iVar3": "leading_zeros",
                "in_r12": "remaining_bits",
                "param_1": "input",
                "uVar1": "result",
                "uVar2": "shift_amount",
                "uVar4": "shift_amount"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800042c": {
            "additional_data": {
                "0x20": {
                    "bits_32": 1
                },
                "0x80000000": {
                    "sign_bit": 1
                },
                "0xc": {
                    "shift_amount": 1
                },
                "CONCAT44": {
                    "combine_result": 1,
                    "combine_to_u64": 1,
                    "result": 1
                },
                "FUN_0800042c": {
                    "bit_shift": 1,
                    "bit_shift_and_concat": 1,
                    "bit_shift_operation": 1,
                    "bit_shifting_operation": 1,
                    "bitwise_operation": 1,
                    "bitwise_shift": 1,
                    "bitwise_shift_and_concat": 1,
                    "bitwise_shift_concat": 1,
                    "calculate_shifted_value": 1,
                    "convert_to64_bit": 1,
                    "convert_to_u64": 1,
                    "convert_to_unsigned_long_long": 1,
                    "extract_bits_from_number": 1,
                    "reverse_and_shift_bits": 4,
                    "reverse_and_shift_left": 1,
                    "reverse_bits": 8,
                    "reverse_bits_and_shift": 1,
                    "reverse_shift_and_concat": 1,
                    "shift_and_combine_bits": 1,
                    "shift_and_concat_bits": 1
                },
                "LAB_08000318": {
                    "apply_shift": 1,
                    "bitwise_shift": 1,
                    "continue_shift": 1,
                    "end_of_calculation": 1
                },
                "LZCOUNT": {
                    "count_leading_zeroes": 1,
                    "leading_zero_count": 1
                },
                "SBORROW4": {
                    "signed_borrow": 1
                },
                "SCARRY4": {
                    "signed_carry": 1
                },
                "bVar7": {
                    "check_1": 1,
                    "has_remaining_bits": 1,
                    "is_less_than_zero": 1,
                    "is_negative": 16,
                    "is_negative_flag": 1,
                    "is_negative_shift": 2,
                    "is_shifted_by_leading_zeros": 1,
                    "is_zero_case": 1,
                    "leading_zeroes_negative": 1,
                    "need_shift": 1,
                    "negative_shift": 1,
                    "no_leading_zeros": 1,
                    "shift_direction": 1
                },
                "bVar8": {
                    "check_2": 1,
                    "is_equal_zero": 1,
                    "is_exact_shift": 1,
                    "is_lower_bound": 1,
                    "is_shifted_zero": 1,
                    "is_zero": 18,
                    "is_zero_flag": 1,
                    "is_zero_shift": 3,
                    "leading_zeroes_zero": 1,
                    "leading_zeros_zero": 1
                },
                "bVar9": {
                    "borrow_flag": 1,
                    "carry": 2,
                    "carry_flag": 4,
                    "carry_overflow": 1,
                    "has_carry": 3,
                    "is_carry": 2,
                    "is_carry_set": 1,
                    "is_negative_input": 1,
                    "is_overflow": 2,
                    "is_shifted_negative": 1,
                    "is_threshold_borrow": 1,
                    "is_upper_bound": 1,
                    "is_valid_shift": 1,
                    "leading_zeroes_carry": 1,
                    "needs_carry": 1,
                    "overflow": 4,
                    "sign_check": 1,
                    "signed_overflow": 1
                },
                "iVar4": {
                    "bit_count": 2,
                    "leading_zero_bits": 1,
                    "leading_zero_count": 2,
                    "leading_zeroes": 3,
                    "leading_zeros": 20,
                    "lz_count": 1,
                    "temp_var4": 1
                },
                "in_r12": {
                    "bits_to_shift": 1,
                    "constant": 1,
                    "remaining_bits": 14,
                    "right_shift_amount": 1,
                    "shift_mask": 2,
                    "shift_variable": 1,
                    "shifted_bits": 1,
                    "temp": 1,
                    "temp_var7": 1,
                    "temp_variable": 1,
                    "trailing_zeros": 1,
                    "unused": 1,
                    "zero_bits": 1
                },
                "new_variable_name_1": {
                    "new_name_1": 1
                },
                "new_variable_name_2": {
                    "new_name_2": 1
                },
                "param_1": {
                    "input": 17,
                    "input_number": 2,
                    "input_value": 9,
                    "num": 1,
                    "number": 1,
                    "value": 1
                },
                "uVar1": {
                    "bit_count": 3,
                    "bit_shifted": 1,
                    "bit_shifted_value": 1,
                    "count": 2,
                    "new_bits": 1,
                    "num_leading_zeros": 1,
                    "positive_input": 1,
                    "result": 4,
                    "result_low": 1,
                    "shift_amount": 2,
                    "shift_count": 5,
                    "shift_value": 1,
                    "shifted_bits": 1,
                    "shifted_input": 2,
                    "shifted_num": 1,
                    "shifted_value": 2,
                    "temp_var1": 1
                },
                "uVar16": {
                    "result1": 1
                },
                "uVar17": {
                    "result2": 1
                },
                "uVar2": {
                    "abs_input": 13,
                    "abs_input_value": 2,
                    "abs_num": 1,
                    "abs_number": 1,
                    "abs_value": 4,
                    "absolute_value": 2,
                    "result": 2,
                    "shifted_bits": 1,
                    "shifted_input": 1,
                    "temp": 1,
                    "temp_number": 1,
                    "temp_var2": 1
                },
                "uVar3": {
                    "shift_amount": 21,
                    "shift_count": 3,
                    "shift_mask": 1,
                    "shifted_bits2": 1,
                    "shifted_value": 1,
                    "temp_var3": 1,
                    "trailing_bits": 1
                },
                "uVar5": {
                    "16_minus_leading_zeros": 1,
                    "adjusted_bit_count": 2,
                    "adjusted_shift": 2,
                    "adjusted_shift_amount": 1,
                    "adjusted_shift_count": 1,
                    "combined_shift": 1,
                    "final_shift": 3,
                    "final_shift_amount": 2,
                    "mask": 1,
                    "new_bit_count": 1,
                    "new_leading_zeros": 1,
                    "new_shift_value": 1,
                    "shift_amount": 2,
                    "shift_limit": 3,
                    "shifted_value_threshold": 1,
                    "temp_var5": 1,
                    "total_bits": 3,
                    "total_shift": 1,
                    "total_shift_bits": 1,
                    "trailing_zeros": 1
                },
                "uVar6": {
                    "input_sign": 1,
                    "is_negative": 2,
                    "msb": 1,
                    "sign_bit": 22,
                    "sign_extension": 1,
                    "sign_mask": 2,
                    "temp_var6": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08000cd0",
                "FUN_08001918",
                "FUN_08005da8"
            ],
            "code": "\nulonglong reverse_bits_and_shift_0800042c(uint input)\n\n{\n  uint shift_count;\n  uint abs_input;\n  uint shift_amount;\n  int leading_zeros;\n  uint total_bits;\n  uint sign_bit;\n  uint remaining_bits;\n  bool is_negative;\n  bool is_zero;\n  bool carry_flag;\n  \n  if (input == 0) {\n    return 0;\n  }\n  sign_bit = input & 0x80000000;\n  abs_input = input;\n  if ((int)sign_bit < 0) {\n    abs_input = -input;\n  }\n  shift_count = 0;\n  leading_zeros = leading_zero_count(abs_input);\n  total_bits = leading_zeros + 0x15;\n  carry_flag = signed_borrow(total_bits,0x20);\n  shift_amount = leading_zeros - 0xb;\n  is_negative = (int)shift_amount < 0;\n  is_zero = shift_amount == 0;\n  if (total_bits < 0x20) {\n    carry_flag = signed_carry(shift_amount,0xc);\n    is_negative = false;\n    is_zero = leading_zeros + 1 == 0;\n    shift_amount = total_bits;\n    if (!is_zero && carry_flag == false) {\n      shift_count = abs_input << total_bits;\n      abs_input = abs_input >> (0xcU - (leading_zeros + 1) & 0xff);\n      goto apply_shift;\n    }\n  }\n  if (is_zero || is_negative != carry_flag) {\n    remaining_bits = 0x20 - shift_amount;\n  }\n  abs_input = abs_input << (shift_amount & 0xff);\n  if (is_zero || is_negative != carry_flag) {\n    abs_input = abs_input | 0U >> (remaining_bits & 0xff);\n  }\n  if (is_zero || is_negative != carry_flag) {\n    shift_count = 0 << (shift_amount & 0xff);\n  }\napply_shift:\n  if (total_bits < 0x433) {\n    return combine_to_u64(abs_input + (0x432 - total_bits) * 0x100000 | sign_bit,shift_count);\n  }\n  shift_amount = ~(0x432 - total_bits);\n  if (0x1e < (int)shift_amount) {\n    return combine_to_u64(input,abs_input >> (shift_amount - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  leading_zeros = shift_amount - 0x13;\n  if (leading_zeros == 0 || leading_zeros < 0 != signed_carry(shift_amount - 0x1f,0xc)) {\n    shift_amount = shift_amount + 1;\n    return combine_to_u64(sign_bit | abs_input >> (shift_amount & 0xff),\n                    shift_count >> (shift_amount & 0xff) | abs_input << (0x20 - shift_amount & 0xff));\n  }\n  return combine_to_u64(input,shift_count >> (0x20 - (0xcU - leading_zeros) & 0xff) | abs_input << (0xcU - leading_zeros & 0xff))\n         & 0x80000000ffffffff;\n}\n\n",
            "current_name": "reverse_bits_and_shift_0800042c",
            "entrypoint": "0x0800042c",
            "imported": false,
            "improved": true,
            "renaming": {
                "CONCAT44": "combine_to_u64",
                "FUN_0800042c": "reverse_bits_and_shift_0800042c",
                "LAB_08000318": "apply_shift",
                "LZCOUNT": "leading_zero_count",
                "SBORROW4": "signed_borrow",
                "SCARRY4": "signed_carry",
                "bVar7": "is_negative",
                "bVar8": "is_zero",
                "bVar9": "carry_flag",
                "iVar4": "leading_zeros",
                "in_r12": "remaining_bits",
                "param_1": "input",
                "uVar1": "shift_count",
                "uVar2": "abs_input",
                "uVar3": "shift_amount",
                "uVar5": "total_bits",
                "uVar6": "sign_bit"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080004f8": {
            "additional_data": {
                "FUN_080004f8": {
                    "calculate_combined_value": 1,
                    "calculate_floating_point_number": 1,
                    "calculate_intermediate_result": 1,
                    "calculate_mixed_value": 1,
                    "calculate_multiplication": 1,
                    "calculate_product": 9,
                    "calculate_result": 13
                },
                "bVar10": {
                    "bool_var2": 1,
                    "boolean2": 1,
                    "condition2": 4,
                    "flag2": 14,
                    "is_carry": 1,
                    "is_negative": 4,
                    "is_overflow": 1,
                    "is_overflow1": 1,
                    "is_zero2": 1,
                    "local_flag2": 1,
                    "temp_bool2": 1,
                    "variable2": 1
                },
                "bVar11": {
                    "bool_var3": 1,
                    "boolean3": 1,
                    "condition3": 4,
                    "flag3": 13,
                    "is_borrow": 2,
                    "is_negative": 1,
                    "is_negative1": 1,
                    "is_negative2": 2,
                    "is_overflow2": 1,
                    "local_flag3": 1,
                    "overflow": 1,
                    "subtraction_flag": 1,
                    "temp_bool3": 1,
                    "variable3": 1
                },
                "bVar9": {
                    "bool_var1": 1,
                    "boolean1": 1,
                    "condition1": 4,
                    "flag1": 14,
                    "is_zero": 7,
                    "is_zero1": 1,
                    "local_flag1": 1,
                    "temp_bool1": 1,
                    "variable1": 1
                },
                "iVar5": {
                    "i_var5": 1,
                    "result5": 2,
                    "sum": 6,
                    "temp3": 10,
                    "temp4": 1,
                    "temp5": 3,
                    "temp_3": 1,
                    "temp_value4": 1,
                    "temp_var4": 2,
                    "temp_var5": 1,
                    "var3": 3
                },
                "lVar2": {
                    "product2": 1,
                    "result": 1,
                    "result2": 10,
                    "temp": 7,
                    "temp1": 1,
                    "temp2": 3,
                    "temp_product": 1,
                    "temp_result": 1,
                    "temp_value": 1,
                    "temp_var": 3,
                    "temp_var2": 1,
                    "u_var30": 1
                },
                "param_1": {
                    "argument1": 1,
                    "bits1": 1,
                    "first_param": 1,
                    "input1": 16,
                    "input_param1": 3,
                    "input_var1": 1,
                    "value1": 6,
                    "value_1": 1,
                    "variable1": 1
                },
                "param_2": {
                    "argument2": 1,
                    "bits2": 1,
                    "input2": 16,
                    "input_param2": 3,
                    "input_var2": 1,
                    "second_param": 1,
                    "value2": 6,
                    "value_2": 1,
                    "variable2": 1
                },
                "param_3": {
                    "argument3": 1,
                    "bits3": 1,
                    "input3": 16,
                    "input_param3": 3,
                    "result": 1,
                    "third_param": 1,
                    "value3": 6,
                    "value_3": 1,
                    "variable3": 1
                },
                "param_4": {
                    "argument4": 1,
                    "bits4": 1,
                    "fourth_param": 1,
                    "input4": 16,
                    "input_param4": 3,
                    "input_var4": 1,
                    "value4": 6,
                    "value_4": 1,
                    "variable4": 1
                },
                "uVar1": {
                    "carry": 1,
                    "product1": 1,
                    "product_low": 1,
                    "result": 13,
                    "result1": 10,
                    "result_low": 1,
                    "temp1": 3,
                    "temp_var1": 1
                },
                "uVar10": {
                    "temp7": 1
                },
                "uVar11": {
                    "temp8": 1
                },
                "uVar12": {
                    "combined": 1,
                    "combined_bits": 1,
                    "combined_input": 7,
                    "combined_inputs": 2,
                    "combined_params": 1,
                    "combined_params_result": 1,
                    "combined_value": 3,
                    "combined_values": 1,
                    "concat_result": 1,
                    "concat_vars": 1,
                    "concatenated": 1,
                    "concatenated_result": 1,
                    "concatenated_value": 1,
                    "input64_bit_value": 1,
                    "input_parameters": 1,
                    "input_var_concat": 1,
                    "product": 1,
                    "result": 2,
                    "result10": 1,
                    "temp10": 1,
                    "temp8": 1
                },
                "uVar3": {
                    "bits3_masked": 1,
                    "mask1": 1,
                    "result1": 1,
                    "result3": 2,
                    "temp1": 13,
                    "temp2": 1,
                    "temp3": 3,
                    "temp_1": 1,
                    "temp_value2": 1,
                    "temp_var2": 2,
                    "temp_var3": 1,
                    "u_var3": 1,
                    "var1": 3
                },
                "uVar4": {
                    "bits2_masked": 1,
                    "mask2": 1,
                    "result2": 1,
                    "result4": 2,
                    "temp2": 13,
                    "temp3": 1,
                    "temp4": 3,
                    "temp_2": 1,
                    "temp_value3": 1,
                    "temp_var3": 1,
                    "temp_var4": 1,
                    "u_var3_c": 1,
                    "u_var4": 1,
                    "var2": 3
                },
                "uVar6": {
                    "bits2_masked_shifted": 1,
                    "carry": 1,
                    "result6": 2,
                    "temp1": 1,
                    "temp3": 3,
                    "temp4": 10,
                    "temp5": 1,
                    "temp6": 3,
                    "temp_4": 1,
                    "temp_value5": 1,
                    "temp_var5": 1,
                    "temp_var6": 1,
                    "u_var38": 1,
                    "u_var6": 1,
                    "var4": 3
                },
                "uVar7": {
                    "bits_masked": 1,
                    "mask": 2,
                    "max_value": 1,
                    "result3": 1,
                    "result7": 1,
                    "result8": 1,
                    "shift": 1,
                    "temp2": 1,
                    "temp4": 1,
                    "temp5": 4,
                    "temp6": 6,
                    "temp7": 1,
                    "temp8": 2,
                    "temp_6": 1,
                    "temp_value7": 1,
                    "temp_var7": 1,
                    "temp_var8": 1,
                    "u_var7": 1,
                    "var5": 1,
                    "var6": 2
                },
                "uVar8": {
                    "bits_shifted": 1,
                    "result4": 1,
                    "result8": 1,
                    "result9": 1,
                    "temp3": 1,
                    "temp5": 1,
                    "temp6": 4,
                    "temp7": 8,
                    "temp8": 1,
                    "temp9": 3,
                    "temp_7": 1,
                    "temp_value8": 1,
                    "temp_var8": 1,
                    "temp_var9": 1,
                    "u_var34": 1,
                    "u_var8": 1,
                    "var6": 1,
                    "var7": 2
                },
                "uVar9": {
                    "temp6": 1
                },
                "unaff_r5": {
                    "bits4_masked": 1,
                    "carry2": 1,
                    "result7": 1,
                    "temp4": 2,
                    "temp5": 8,
                    "temp6": 1,
                    "temp7": 2,
                    "temp_5": 1,
                    "temp_value6": 1,
                    "temp_var6": 2,
                    "temp_var7": 1,
                    "unaff_r5": 1,
                    "var5": 2
                }
            },
            "called": [
                "FUN_080006d4"
            ],
            "calling": [
                "FUN_080015f8",
                "FUN_080016b4",
                "FUN_08001918",
                "FUN_08005da8",
                "FUN_08001814"
            ],
            "code": "\nulonglong calculate_intermediate_result_080004f8(undefined4 input1,uint input2,uint input3,uint input4)\n\n{\n  ulonglong result;\n  longlong result2;\n  uint temp1;\n  uint temp2;\n  int temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  bool flag1;\n  bool flag2;\n  bool flag3;\n  ulonglong combined_input;\n  \n  combined_input = CONCAT44(input2,input1);\n  temp6 = 0x7ff;\n  temp2 = input2 >> 0x14 & 0x7ff;\n  flag1 = temp2 == 0;\n  if (!flag1) {\n    temp5 = input4 >> 0x14 & 0x7ff;\n    flag1 = temp5 == 0;\n  }\n  if (!flag1) {\n    flag1 = temp2 == 0x7ff;\n  }\n  if (!flag1) {\n    flag1 = temp5 == 0x7ff;\n  }\n  if (flag1) {\n    combined_input = FUN_080006d4();\n  }\n  temp1 = (uint)(combined_input >> 0x20);\n  temp3 = temp2 + temp5;\n  temp2 = temp1 ^ input4;\n  temp1 = temp1 & ~(temp6 << 0x15);\n  input4 = input4 & ~(temp6 << 0x15);\n  flag1 = ((uint)combined_input | temp1 << 0xc) == 0;\n  if (!flag1) {\n    flag1 = (input3 | input4 << 0xc) == 0;\n  }\n  temp1 = temp1 | 0x100000;\n  input4 = input4 | 0x100000;\n  if (flag1) {\n    input3 = (uint)combined_input | input3;\n    input4 = (temp2 & 0x80000000 | temp1) ^ input4;\n    temp2 = temp6 >> 1;\n    flag3 = SBORROW4(temp3,temp2);\n    temp4 = temp3 - temp2;\n    flag1 = temp4 == 0;\n    temp1 = temp4;\n    if (!flag1 && (int)temp2 <= temp3) {\n      flag3 = SBORROW4(temp6,temp4);\n      temp1 = temp6 - temp4;\n      flag1 = temp6 == temp4;\n    }\n    if (!flag1 && (int)temp1 < 0 == flag3) {\n      input4 = input4 | temp4 * 0x100000;\n    }\n    if (!flag1 && (int)temp1 < 0 == flag3) {\n      return CONCAT44(input4,input3);\n    }\n    input4 = input4 | 0x100000;\n    temp6 = 0;\n    flag3 = SBORROW4(temp4,1);\n    temp4 = temp4 - 1;\n    flag1 = temp4 == 0;\n    temp2 = temp4;\n  }\n  else {\n    result = (combined_input & 0xffffffff) * (ulonglong)input3;\n    combined_input = (combined_input & 0xffffffff) * (ulonglong)input4 +\n             (ulonglong)temp1 * (ulonglong)input3 + (result >> 0x20);\n    temp7 = (uint)combined_input;\n    result2 = (ulonglong)temp1 * (ulonglong)input4 + (combined_input >> 0x20);\n    temp6 = (uint)result2;\n    temp1 = (uint)((ulonglong)result2 >> 0x20);\n    if ((int)result != 0) {\n      temp7 = temp7 | 1;\n    }\n    temp4 = (temp3 + -0x3ff) - (uint)(temp1 < 0x200);\n    if (temp1 < 0x200) {\n      flag1 = (temp7 & 0x80000000) != 0;\n      temp7 = temp7 << 1;\n      result2 = CONCAT44(temp1 * 2 + (uint)(CARRY4(temp6,temp6) || CARRY4(temp6 * 2,(uint)flag1)),\n                       temp6 * 2 + (uint)flag1);\n    }\n    input4 = temp2 & 0x80000000 | (int)((ulonglong)result2 >> 0x20) << 0xb | (uint)result2 >> 0x15;\n    input3 = (uint)result2 << 0xb | temp7 >> 0x15;\n    temp6 = temp7 * 0x800;\n    flag2 = 0xfc < temp4;\n    flag3 = SBORROW4(temp4,0xfd);\n    temp1 = temp4 - 0xfd;\n    flag1 = temp1 == 0;\n    temp2 = temp1;\n    if (flag2 && !flag1) {\n      flag2 = 0x6ff < temp1;\n      flag3 = SBORROW4(temp1,0x700);\n      temp2 = temp4 - 0x7fd;\n      flag1 = temp1 == 0x700;\n    }\n    if (!flag2 || flag1) {\n      flag1 = 0x7fffffff < temp6;\n      if (temp6 == 0x80000000) {\n        flag1 = (temp7 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(input4 + temp4 * 0x100000 + (uint)CARRY4(input3,(uint)flag1),input3 + flag1\n                     );\n    }\n  }\n  if (!flag1 && (int)temp2 < 0 == flag3) {\n    return (ulonglong)(input4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  flag2 = SCARRY4(temp4,0x36);\n  flag1 = (int)(temp4 + 0x36) < 0;\n  flag3 = temp4 == 0xffffffca;\n  if (flag3 || flag1 != flag2) {\n    input3 = 0;\n  }\n  if (flag3 || flag1 != flag2) {\n    input4 = input4 & 0x80000000;\n  }\n  if (flag3 || flag1 != flag2) {\n    return CONCAT44(input4,input3);\n  }\n  temp2 = -temp4;\n  temp1 = temp2 - 0x20;\n  if (0x1f < (int)temp2) {\n    temp4 = input3 >> (temp1 & 0xff) | input4 << (0x20 - temp1 & 0xff);\n    temp2 = (input4 >> (temp1 & 0xff) & ~((input4 & 0x80000000) >> (temp1 & 0xff))) -\n            ((int)temp4 >> 0x1f);\n    if ((temp6 | input3 << (0x20 - temp1 & 0xff) | temp4 << 1) == 0) {\n      temp2 = temp2 & ~(temp4 >> 0x1f);\n    }\n    return CONCAT44(input4,temp2) & 0x80000000ffffffff;\n  }\n  temp3 = temp2 - 0x14;\n  if (temp3 == 0 || temp3 < 0 != SCARRY4(temp1,0xc)) {\n    temp7 = input3 << (temp4 + 0x20 & 0xff);\n    temp1 = input3 >> (temp2 & 0xff) | input4 << (temp4 + 0x20 & 0xff);\n    temp4 = temp1 + -((int)temp7 >> 0x1f);\n    if ((temp6 | temp7 << 1) == 0) {\n      temp4 = temp4 & ~(temp7 >> 0x1f);\n    }\n    return CONCAT44((input4 & 0x80000000) +\n                    ((input4 & 0x7fffffff) >> (temp2 & 0xff)) +\n                    (uint)CARRY4(temp1,-((int)temp7 >> 0x1f)),temp4);\n  }\n  temp2 = 0xc - temp3;\n  temp4 = input3 << (temp2 & 0xff);\n  temp2 = input3 >> (0x20 - temp2 & 0xff) | input4 << (temp2 & 0xff);\n  temp1 = temp2 + -((int)temp4 >> 0x1f);\n  if ((temp6 | temp4 << 1) == 0) {\n    temp1 = temp1 & ~(temp4 >> 0x1f);\n  }\n  return CONCAT44((input4 & 0x80000000) + (uint)CARRY4(temp2,-((int)temp4 >> 0x1f)),temp1);\n}\n\n",
            "current_name": "calculate_intermediate_result_080004f8",
            "entrypoint": "0x080004f8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080004f8": "calculate_intermediate_result_080004f8",
                "bVar10": "flag2",
                "bVar11": "flag3",
                "bVar9": "flag1",
                "iVar5": "temp3",
                "lVar2": "result2",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result",
                "uVar12": "combined_input",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar6": "temp4",
                "uVar7": "temp6",
                "uVar8": "temp7",
                "unaff_r5": "temp5"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080006d4": {
            "additional_data": {
                "FUN_080006d4": {
                    "binary_to_double": 1,
                    "bitwise_operation_check": 1,
                    "calculate_bitwise_result": 1,
                    "calculate_result": 2,
                    "calculate_shifted_value": 1,
                    "extract_bit_range": 1,
                    "reverse_bit_operations": 3,
                    "reverse_bit_patterns": 1,
                    "reverse_bits": 12,
                    "reverse_bits_and_concat": 1,
                    "reverse_bits_and_concatenate": 2,
                    "reverse_bitwise_operation": 1,
                    "reverse_bitwise_operations": 1,
                    "reverse_logical_operation": 1,
                    "shift_and_morph": 1
                },
                "bVar4": {
                    "bool_result": 1,
                    "check": 2,
                    "check_flag": 1,
                    "flag": 3,
                    "flag1": 1,
                    "is_zero": 22
                },
                "in_r12": {
                    "bit5": 7,
                    "bit_5": 1,
                    "bit_mask": 1,
                    "bitmask": 1,
                    "const1": 1,
                    "const_bit": 1,
                    "constant": 1,
                    "constant_val": 1,
                    "mask": 5,
                    "temp2": 3,
                    "temp5": 3,
                    "temp_2": 2,
                    "temp_4": 1,
                    "temp_5": 2
                },
                "param_1": {
                    "input1": 17,
                    "input_1": 10,
                    "input_bit1": 1,
                    "input_sign": 1,
                    "input_value_1": 1,
                    "value1": 1
                },
                "param_2": {
                    "input2": 17,
                    "input_2": 10,
                    "input_bit2": 1,
                    "input_exponent": 1,
                    "input_value_2": 1,
                    "value2": 1
                },
                "param_3": {
                    "input3": 17,
                    "input_3": 10,
                    "input_bit3": 1,
                    "input_fraction": 1,
                    "input_value_3": 1,
                    "value3": 1
                },
                "param_4": {
                    "input4": 17,
                    "input_4": 10,
                    "input_bit4": 1,
                    "input_misc": 1,
                    "input_value_4": 1,
                    "value4": 1
                },
                "uVar1": {
                    "bit1": 11,
                    "bit_1": 2,
                    "bit_mask_1": 1,
                    "bitwise_check_1": 1,
                    "msb1": 1,
                    "sign_bit": 1,
                    "temp1": 5,
                    "temp3": 1,
                    "temp6": 1,
                    "temp_2": 3,
                    "temp_3": 1,
                    "temp_5": 1,
                    "temp_bit1": 1
                },
                "uVar2": {
                    "bit2": 6,
                    "bit3": 4,
                    "bit_2": 1,
                    "bit_3": 1,
                    "bit_mask_2": 1,
                    "result_bit3": 1,
                    "shifted_param4": 1,
                    "temp": 2,
                    "temp2": 1,
                    "temp3": 4,
                    "temp4": 1,
                    "temp7": 1,
                    "temp_2": 1,
                    "temp_3": 3,
                    "temp_4": 1,
                    "temp_bit2": 1,
                    "temp_var_2": 1
                },
                "uVar3": {
                    "bit3": 5,
                    "bit4": 4,
                    "bit_3": 1,
                    "bit_4": 1,
                    "bitwise_check_2": 1,
                    "msb3": 1,
                    "result": 3,
                    "result_bit4": 1,
                    "temp3": 1,
                    "temp4": 4,
                    "temp5": 1,
                    "temp8": 1,
                    "temp_3": 1,
                    "temp_4": 3,
                    "temp_5": 1,
                    "temp_bit3": 1,
                    "updated_param2": 1
                },
                "uVar5": {
                    "flag2": 1,
                    "result": 1
                },
                "unaff_r4": {
                    "additional_value_1": 1,
                    "bit2": 6,
                    "bit4": 1,
                    "bit_2": 1,
                    "comparison_value": 1,
                    "max_iterations": 1,
                    "msb2": 1,
                    "temp1": 4,
                    "temp2": 5,
                    "temp_1": 6,
                    "temp_bit2": 1,
                    "temp_var_1": 1,
                    "unaff_value": 1,
                    "value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080004f8"
            ],
            "code": "\nulonglong reverse_bits_and_concatenate_080006d4(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint bit1;\n  uint bit2;\n  uint bit2;\n  uint bit3;\n  uint bit5;\n  bool is_zero;\n  \n  bit2 = bit5 & input4 >> 0x14;\n  if (bit2 != bit5 && bit2 != bit5) {\n    is_zero = (input1 | input2 << 1) == 0;\n    if (!is_zero) {\n      is_zero = (input3 | input4 << 1) == 0;\n    }\n    if (is_zero) {\n      return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n    }\n    if (bit2 == 0) {\n      bit3 = input2 & 0x80000000;\n      do {\n        bit1 = input1 & 0x80000000;\n        input1 = input1 << 1;\n        input2 = input2 * 2 + (uint)(bit1 != 0);\n      } while ((input2 & 0x100000) == 0);\n      input2 = input2 | bit3;\n      if (bit2 != 0) {\n        return CONCAT44(input2,input1);\n      }\n    }\n    do {\n      bit2 = input3 & 0x80000000;\n      input3 = input3 << 1;\n      input4 = input4 * 2 + (uint)(bit2 != 0);\n    } while ((input4 & 0x100000) == 0);\n    return CONCAT44(input2,input1);\n  }\n  is_zero = (input1 | input2 << 1) == 0;\n  if (is_zero) {\n    input2 = input4;\n    input1 = input3;\n  }\n  if (!is_zero) {\n    is_zero = (input3 | input4 << 1) == 0;\n  }\n  bit3 = input2;\n  if (((!is_zero) && ((bit2 != bit5 || ((input1 | input2 << 0xc) == 0)))) &&\n     ((bit2 != bit5 || (input1 = input3, bit3 = input4, (input3 | input4 << 0xc) == 0)))) {\n    return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  return CONCAT44(bit3,input1) | 0x7ff8000000000000;\n}\n\n",
            "current_name": "reverse_bits_and_concatenate_080006d4",
            "entrypoint": "0x080006d4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080006d4": "reverse_bits_and_concatenate_080006d4",
                "bVar4": "is_zero",
                "in_r12": "bit5",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "bit1",
                "uVar2": "bit2",
                "uVar3": "bit3",
                "unaff_r4": "bit2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800074c": {
            "additional_data": {
                "FUN_0800074c": {
                    "calculate_double": 1,
                    "calculate_float": 5,
                    "calculate_floating_point": 4,
                    "calculate_floating_point_representation": 1,
                    "calculate_floating_point_value": 5,
                    "calculate_super_calculation": 1
                },
                "bVar14": {
                    "bool1": 1,
                    "condition1": 4,
                    "flag1": 15,
                    "is_exponent_zero": 1,
                    "is_negative": 1,
                    "is_zero": 3,
                    "is_zero1": 2,
                    "is_zero_flag": 1,
                    "temp_bool1": 1,
                    "temp_var_15": 1,
                    "temp_var_8": 1
                },
                "bVar15": {
                    "bool2": 1,
                    "condition2": 4,
                    "flag2": 15,
                    "is_equal": 2,
                    "is_mantissa_zero": 1,
                    "is_positive": 1,
                    "is_zero": 1,
                    "is_zero2": 2,
                    "is_zero_check_flag": 1,
                    "temp_bool2": 1,
                    "temp_var_16": 1,
                    "temp_var_9": 1
                },
                "bVar16": {
                    "bool3": 1,
                    "carry": 2,
                    "carry_flag": 1,
                    "condition3": 4,
                    "flag3": 15,
                    "has_overflow": 1,
                    "is_carry": 1,
                    "is_negative": 1,
                    "is_negative_flag": 1,
                    "overflow_flag": 1,
                    "temp_bool3": 1,
                    "temp_var_10": 1,
                    "temp_var_17": 1
                },
                "bVar17": {
                    "carry_flag": 1,
                    "flag4": 2,
                    "has_carry": 1,
                    "overflow": 1,
                    "temp_calc_flag": 1,
                    "temp_var_18": 1
                },
                "iVar8": {
                    "difference": 6,
                    "difference_exponent": 1,
                    "exponent_diff": 1,
                    "exponent_difference": 2,
                    "significant_difference": 1,
                    "temp8": 15,
                    "temp_diff": 1,
                    "temp_var8": 1,
                    "temp_var_1": 1,
                    "temp_var_8": 1,
                    "var8": 1
                },
                "param_1": {
                    "function_param1": 1,
                    "input1": 16,
                    "input_param": 3,
                    "input_param_1": 2,
                    "param1": 1,
                    "sign": 4,
                    "sign_and_exponent": 1,
                    "sign_bit": 2,
                    "value1": 1
                },
                "param_2": {
                    "bit_field_param": 1,
                    "exponent": 3,
                    "exponent1": 1,
                    "exponent_bits": 2,
                    "exponent_significand": 1,
                    "first_input": 1,
                    "function_param2": 1,
                    "input2": 16,
                    "input_param_2": 2,
                    "mantissa": 1,
                    "raw_exponent": 1,
                    "significand_part1": 1
                },
                "param_3": {
                    "exponent": 2,
                    "exponent2": 1,
                    "fraction_bits": 1,
                    "function_param3": 1,
                    "input3": 16,
                    "input_param_3": 2,
                    "mantissa": 2,
                    "mantissa1": 1,
                    "raw_mantissa1": 1,
                    "second_input1": 1,
                    "shift_param": 1,
                    "significand_part2": 1,
                    "significant_bits_part_one": 1
                },
                "param_4": {
                    "function_param4": 1,
                    "input4": 16,
                    "input_param_4": 2,
                    "mantissa1": 1,
                    "mantissa2": 2,
                    "mask_param": 1,
                    "other_bits": 1,
                    "raw_mantissa2": 1,
                    "second_input2": 1,
                    "sign": 2,
                    "sign_and_exponent3": 1,
                    "significand": 1,
                    "significant_bits_part_two": 1
                },
                "uVar1": {
                    "bit1": 1,
                    "carry": 1,
                    "exponent": 2,
                    "is_zero": 1,
                    "normalized_exponent": 1,
                    "result_1": 1,
                    "rounded_exponent": 1,
                    "sign_bit": 1,
                    "temp1": 19,
                    "temp_var1": 1,
                    "temp_var_1": 1,
                    "var1": 1
                },
                "uVar10": {
                    "biased_exponent3": 1,
                    "exponent3": 1,
                    "exponent_sign": 1,
                    "mantissa1": 1,
                    "mantissa1_scaled": 1,
                    "normalized_mantissa1": 1,
                    "result3": 2,
                    "significand_part_one": 1,
                    "temp10": 6,
                    "temp11": 10,
                    "temp5": 1,
                    "temp8": 1,
                    "temp_var11": 1,
                    "temp_var_11": 1,
                    "temp_var_4": 1,
                    "var11": 1
                },
                "uVar11": {
                    "mantissa2_scaled": 1,
                    "mantissa3": 1,
                    "normalized_mantissa2": 1,
                    "result2": 1,
                    "result4": 2,
                    "result_low_half": 1,
                    "result_mantissa_high": 1,
                    "result_sign": 1,
                    "significand_part1_final": 1,
                    "significand_part_two": 1,
                    "temp11": 6,
                    "temp12": 10,
                    "temp_var12": 1,
                    "temp_var_12": 1,
                    "temp_var_5": 1,
                    "var12": 1
                },
                "uVar12": {
                    "difference": 2,
                    "difference_remainder": 1,
                    "mantissa_difference": 1,
                    "remainder": 1,
                    "result5": 2,
                    "result_mantissa_low": 1,
                    "significand_part2_final": 1,
                    "temp12": 6,
                    "temp13": 10,
                    "temp9": 1,
                    "temp_difference": 1,
                    "temp_var13": 1,
                    "temp_var_13": 1,
                    "temp_var_6": 1,
                    "var13": 1
                },
                "uVar13": {
                    "bit_11_mask": 1,
                    "denormalized_exponent": 1,
                    "flag": 1,
                    "mask": 1,
                    "max_exponent_bits": 1,
                    "maximum_exponent": 1,
                    "overflow": 1,
                    "result6": 2,
                    "shifted_significand": 1,
                    "temp10": 1,
                    "temp13": 5,
                    "temp14": 10,
                    "temp_sum": 1,
                    "temp_var14": 1,
                    "temp_var_14": 1,
                    "temp_var_7": 1,
                    "var14": 1
                },
                "uVar17": {
                    "combined_bits": 1,
                    "combined_value": 1,
                    "concatenated_result": 1,
                    "output": 2,
                    "result": 11,
                    "result_var": 1,
                    "return_value": 1,
                    "temp11": 1,
                    "temp15": 1,
                    "temp_result": 2,
                    "temp_var_11": 1
                },
                "uVar18": {
                    "new_bit": 1,
                    "result1": 1,
                    "temp_var1": 1,
                    "temp_var_19": 1
                },
                "uVar19": {
                    "result2": 1,
                    "result_exponent": 1,
                    "temp_var2": 1,
                    "temp_var_20": 1
                },
                "uVar2": {
                    "bit2": 1,
                    "exponent_bits": 1,
                    "mantissa1": 1,
                    "mantissa_shifted": 1,
                    "normalized_mantissa1": 1,
                    "result_2": 1,
                    "significant_bits": 1,
                    "temp": 1,
                    "temp2": 19,
                    "temp_var1": 1,
                    "temp_var2": 1,
                    "temp_var_2": 1,
                    "var2": 1
                },
                "uVar20": {
                    "result_mantissa": 1,
                    "temp_var3": 1,
                    "temp_var_21": 1
                },
                "uVar21": {
                    "temp_var4": 1,
                    "temp_var_22": 1
                },
                "uVar22": {
                    "temp_var5": 1,
                    "temp_var_23": 1
                },
                "uVar23": {
                    "temp_var6": 1,
                    "temp_var_24": 1
                },
                "uVar24": {
                    "temp_var7": 1,
                    "temp_var_25": 1
                },
                "uVar25": {
                    "temp_var8": 1,
                    "temp_var_26": 1
                },
                "uVar26": {
                    "temp_var9": 1,
                    "temp_var_27": 1
                },
                "uVar27": {
                    "temp_var10": 1,
                    "temp_var_28": 1
                },
                "uVar3": {
                    "bit3": 1,
                    "carry_out": 1,
                    "is_exponent_zero": 1,
                    "mantissa": 1,
                    "mantissa_shifted_right": 1,
                    "normalized_mantissa2": 1,
                    "result_3": 1,
                    "significant_bits_shifted": 1,
                    "temp3": 19,
                    "temp_var2": 1,
                    "temp_var3": 1,
                    "temp_var_3": 1,
                    "var3": 1
                },
                "uVar4": {
                    "bit4": 1,
                    "exponent": 1,
                    "exponent_shifted": 1,
                    "is_mantissa_zero": 1,
                    "result": 1,
                    "result_4": 1,
                    "shifted_mantissa": 1,
                    "temp1": 1,
                    "temp4": 19,
                    "temp_var3": 1,
                    "temp_var4": 1,
                    "temp_var_4": 1,
                    "var4": 1
                },
                "uVar5": {
                    "bit5": 1,
                    "carry": 1,
                    "is_exponent_max": 1,
                    "mantissa_bit": 1,
                    "result_5": 1,
                    "shifted_exponent": 1,
                    "temp2": 1,
                    "temp5": 19,
                    "temp_var4": 1,
                    "temp_var5": 1,
                    "temp_var_5": 1,
                    "unaff_r5": 1,
                    "var5": 1
                },
                "uVar6": {
                    "bit": 1,
                    "bit6": 1,
                    "exponent": 1,
                    "is_mantissa_max": 1,
                    "result_6": 1,
                    "shift": 1,
                    "temp": 1,
                    "temp3": 1,
                    "temp6": 19,
                    "temp_var5": 1,
                    "temp_var6": 1,
                    "temp_var_6": 1,
                    "var6": 1
                },
                "uVar7": {
                    "bit7": 1,
                    "mantissa2": 1,
                    "result": 1,
                    "result_7": 1,
                    "result_sign": 2,
                    "result_significant": 1,
                    "significand": 1,
                    "temp4": 1,
                    "temp7": 19,
                    "temp_var7": 1,
                    "temp_var_7": 1,
                    "var7": 1
                },
                "uVar9": {
                    "adjusted_exponent": 1,
                    "biased_exponent1": 1,
                    "exponent": 1,
                    "exponent_difference": 1,
                    "exponent_sum": 1,
                    "integer_part": 1,
                    "normalized_exponent": 1,
                    "result1": 3,
                    "sign_exponent": 1,
                    "temp9": 16,
                    "temp_var9": 1,
                    "temp_var_2": 1,
                    "temp_var_9": 1,
                    "var9": 1
                },
                "unaff_r5": {
                    "biased_exponent2": 1,
                    "exponent2": 1,
                    "input_sign": 1,
                    "mantissa2": 1,
                    "other_exponent_bits": 1,
                    "result2": 2,
                    "sign_shifted": 1,
                    "significant_bits_part_two_adjusted": 1,
                    "temp10": 10,
                    "temp_var10": 1,
                    "temp_var_10": 1,
                    "temp_var_3": 1,
                    "unaff_result": 1,
                    "unaffected_r5": 1,
                    "var10": 1
                }
            },
            "called": [
                "FUN_080008ba"
            ],
            "calling": [
                "FUN_080015f8",
                "FUN_08001918",
                "FUN_08005da8",
                "FUN_08001814"
            ],
            "code": "\nulonglong calculate_floating_point_value_0800074c(undefined4 input1,uint input2,uint input3,uint input4)\n\n{\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  int temp8;\n  uint temp9;\n  uint temp10;\n  uint temp11;\n  uint temp12;\n  uint temp13;\n  uint temp14;\n  bool flag1;\n  bool flag2;\n  bool flag3;\n  undefined8 result;\n  \n  result = CONCAT44(input2,input1);\n  temp14 = 0x7ff;\n  temp7 = input2 >> 0x14 & 0x7ff;\n  flag1 = temp7 == 0;\n  if (!flag1) {\n    temp10 = input4 >> 0x14 & 0x7ff;\n    flag1 = temp10 == 0;\n  }\n  if (!flag1) {\n    flag1 = temp7 == 0x7ff;\n  }\n  if (!flag1) {\n    flag1 = temp10 == 0x7ff;\n  }\n  if (flag1) {\n    result = FUN_080008ba();\n  }\n  temp9 = (uint)((ulonglong)result >> 0x20);\n  temp12 = (uint)result;\n  temp8 = temp7 - temp10;\n  if ((input3 | input4 << 0xc) == 0) {\n    temp7 = (temp9 ^ input4) & 0x80000000 | temp9 & 0xfffff;\n    flag3 = SCARRY4(temp8,temp14 >> 1);\n    temp9 = temp8 + (temp14 >> 1);\n    flag1 = (int)temp9 < 0;\n    flag2 = temp9 == 0;\n    if (!flag2 && flag1 == flag3) {\n      flag3 = SBORROW4(temp14,temp9);\n      flag1 = (int)(temp14 - temp9) < 0;\n      flag2 = temp14 == temp9;\n    }\n    if (!flag2 && flag1 == flag3) {\n      temp7 = temp7 | temp9 * 0x100000;\n    }\n    if (!flag2 && flag1 == flag3) {\n      return CONCAT44(temp7,temp12);\n    }\n    temp7 = temp7 | 0x100000;\n    temp14 = 0;\n    flag2 = SBORROW4(temp9,1);\n    temp9 = temp9 - 1;\n    flag1 = temp9 == 0;\n    temp3 = temp9;\n  }\n  else {\n    temp3 = (input4 << 0xc) >> 4 | 0x10000000 | input3 >> 0x18;\n    temp14 = input3 << 8;\n    temp11 = (temp9 << 0xc) >> 4 | 0x10000000 | temp12 >> 0x18;\n    temp12 = temp12 * 0x100;\n    temp7 = (temp9 ^ input4) & 0x80000000;\n    flag1 = temp3 <= temp11;\n    if (temp11 == temp3) {\n      flag1 = temp14 <= temp12;\n    }\n    temp8 = temp8 + (uint)flag1;\n    temp9 = temp8 + 0x3fd;\n    if (flag1 == false) {\n      temp3 = temp3 >> 1;\n      temp14 = (uint)((input3 >> 0x18 & 1) != 0) << 0x1f | temp14 >> 1;\n    }\n    temp13 = temp12 - temp14;\n    temp11 = (temp11 - temp3) - (uint)(temp12 < temp14);\n    temp4 = temp3 >> 1;\n    temp1 = (uint)((temp3 & 1) != 0) << 0x1f | temp14 >> 1;\n    temp12 = 0x100000;\n    temp3 = 0x80000;\n    while( true ) {\n      flag1 = temp1 <= temp13;\n      if (temp4 < temp11 || temp11 - temp4 < (uint)flag1) {\n        temp13 = temp13 - temp1;\n        temp12 = temp12 | temp3;\n        temp11 = (temp11 - temp4) - (uint)!flag1;\n      }\n      temp5 = temp4 >> 1;\n      temp1 = (uint)((temp4 & 1) != 0) << 0x1f | temp1 >> 1;\n      flag2 = temp1 <= temp13;\n      flag1 = temp11 - temp5 < (uint)flag2;\n      temp14 = temp11;\n      if (temp5 < temp11 || flag1) {\n        temp13 = temp13 - temp1;\n        temp14 = (temp11 - temp5) - (uint)!flag2;\n      }\n      if (temp5 < temp11 || flag1) {\n        temp12 = temp12 | temp3 >> 1;\n      }\n      temp11 = temp4 >> 2;\n      temp2 = (uint)((temp5 & 1) != 0) << 0x1f | temp1 >> 1;\n      flag2 = temp2 <= temp13;\n      flag1 = temp14 - temp11 < (uint)flag2;\n      temp5 = temp14;\n      if (temp11 < temp14 || flag1) {\n        temp13 = temp13 - temp2;\n        temp5 = (temp14 - temp11) - (uint)!flag2;\n      }\n      if (temp11 < temp14 || flag1) {\n        temp12 = temp12 | temp3 >> 2;\n      }\n      temp6 = temp4 >> 3;\n      temp1 = (uint)((temp11 & 1) != 0) << 0x1f | temp2 >> 1;\n      flag2 = temp1 <= temp13;\n      flag1 = temp5 - temp6 < (uint)flag2;\n      temp11 = temp5;\n      if (temp6 < temp5 || flag1) {\n        temp13 = temp13 - temp1;\n        temp11 = (temp5 - temp6) - (uint)!flag2;\n      }\n      if (temp6 < temp5 || flag1) {\n        temp12 = temp12 | temp3 >> 3;\n      }\n      temp14 = temp11 | temp13;\n      if (temp14 == 0) break;\n      temp11 = temp11 << 4 | temp13 >> 0x1c;\n      temp13 = temp13 << 4;\n      temp4 = temp4 & 0xfffffff8 | temp1 >> 0x1d;\n      temp1 = (temp2 >> 1) << 3;\n      temp3 = temp3 >> 4;\n      if (temp3 == 0) {\n        temp6 = temp4;\n        if ((temp7 & 0x100000) != 0) goto LAB_0800086a;\n        temp7 = temp7 | temp12;\n        temp12 = 0;\n        temp3 = 0x80000000;\n      }\n    }\n    if ((temp7 & 0x100000) == 0) {\n      temp7 = temp7 | temp12;\n      temp12 = 0;\n    }\nLAB_0800086a:\n    flag3 = 0xfc < temp9;\n    flag2 = SBORROW4(temp9,0xfd);\n    temp4 = temp8 + 0x300;\n    flag1 = temp4 == 0;\n    temp3 = temp4;\n    if (flag3 && !flag1) {\n      flag3 = 0x6ff < temp4;\n      flag2 = SBORROW4(temp4,0x700);\n      temp3 = temp8 - 0x400;\n      flag1 = temp4 == 0x700;\n    }\n    if (!flag3 || flag1) {\n      flag1 = temp6 <= temp11;\n      if (temp11 == temp6) {\n        flag1 = temp1 <= temp13;\n      }\n      if (temp11 == temp6 && temp13 == temp1) {\n        flag1 = (temp12 & 1) != 0;\n      }\n      return CONCAT44(temp7 + temp9 * 0x100000 + (uint)CARRY4(temp12,(uint)flag1),temp12 + flag1);\n    }\n  }\n  if (!flag1 && (int)temp3 < 0 == flag2) {\n    return (ulonglong)(temp7 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  flag3 = SCARRY4(temp9,0x36);\n  flag1 = (int)(temp9 + 0x36) < 0;\n  flag2 = temp9 == 0xffffffca;\n  if (flag2 || flag1 != flag3) {\n    temp12 = 0;\n  }\n  if (flag2 || flag1 != flag3) {\n    temp7 = temp7 & 0x80000000;\n  }\n  if (flag2 || flag1 != flag3) {\n    return CONCAT44(temp7,temp12);\n  }\n  temp3 = -temp9;\n  temp11 = temp3 - 0x20;\n  if (0x1f < (int)temp3) {\n    temp3 = temp12 >> (temp11 & 0xff) | temp7 << (0x20 - temp11 & 0xff);\n    temp9 = (temp7 >> (temp11 & 0xff) & ~((temp7 & 0x80000000) >> (temp11 & 0xff))) -\n            ((int)temp3 >> 0x1f);\n    if ((temp14 | temp12 << (0x20 - temp11 & 0xff) | temp3 << 1) == 0) {\n      temp9 = temp9 & ~(temp3 >> 0x1f);\n    }\n    return CONCAT44(temp7,temp9) & 0x80000000ffffffff;\n  }\n  temp8 = temp3 - 0x14;\n  if (temp8 != 0 && temp8 < 0 == SCARRY4(temp11,0xc)) {\n    temp9 = 0xc - temp8;\n    temp3 = temp12 << (temp9 & 0xff);\n    temp12 = temp12 >> (0x20 - temp9 & 0xff) | temp7 << (temp9 & 0xff);\n    temp9 = temp12 + -((int)temp3 >> 0x1f);\n    if ((temp14 | temp3 << 1) == 0) {\n      temp9 = temp9 & ~(temp3 >> 0x1f);\n    }\n    return CONCAT44((temp7 & 0x80000000) + (uint)CARRY4(temp12,-((int)temp3 >> 0x1f)),temp9);\n  }\n  temp11 = temp12 << (temp9 + 0x20 & 0xff);\n  temp12 = temp12 >> (temp3 & 0xff) | temp7 << (temp9 + 0x20 & 0xff);\n  temp9 = temp12 + -((int)temp11 >> 0x1f);\n  if ((temp14 | temp11 << 1) == 0) {\n    temp9 = temp9 & ~(temp11 >> 0x1f);\n  }\n  return CONCAT44((temp7 & 0x80000000) +\n                  ((temp7 & 0x7fffffff) >> (temp3 & 0xff)) +\n                  (uint)CARRY4(temp12,-((int)temp11 >> 0x1f)),temp9);\n}\n\n",
            "current_name": "calculate_floating_point_value_0800074c",
            "entrypoint": "0x0800074c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800074c": "calculate_floating_point_value_0800074c",
                "bVar14": "flag1",
                "bVar15": "flag2",
                "bVar16": "flag3",
                "iVar8": "temp8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "temp1",
                "uVar10": "temp11",
                "uVar11": "temp12",
                "uVar12": "temp13",
                "uVar13": "temp14",
                "uVar17": "result",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6",
                "uVar7": "temp7",
                "uVar9": "temp9",
                "unaff_r5": "temp10"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080008ba": {
            "additional_data": {
                "FUN_080008ba": {
                    "calculate_double_precision": 1,
                    "calculate_double_precision_number": 2,
                    "calculate_double_precision_value": 1,
                    "calculate_special_value": 1,
                    "convert_to_double": 1,
                    "decode_float": 1,
                    "extract_bits": 2,
                    "extract_floating_point_bits": 1,
                    "extract_ulonglong_bits": 1,
                    "extracted_function": 1,
                    "reverse_binary": 2,
                    "reverse_binary_extraction": 1,
                    "reverse_binary_operations": 1,
                    "reverse_bits": 3,
                    "reverse_bits_and_concatenate": 1,
                    "reverse_bits_float": 1,
                    "reverse_bitwise_operations": 1
                },
                "bVar4": {
                    "bool_var": 1,
                    "bool_var4": 1,
                    "check": 2,
                    "check_result": 1,
                    "condition_met": 1,
                    "flag": 5,
                    "is_zero": 16,
                    "temp5": 1,
                    "temp_var6": 1,
                    "temp_var_6": 1
                },
                "in_r12": {
                    "constant": 7,
                    "constant2": 1,
                    "constant_param": 1,
                    "constant_r12": 1,
                    "constant_value": 1,
                    "floating_point_bits_copy": 1,
                    "in_reg12": 1,
                    "in_register12": 1,
                    "mask": 2,
                    "mask2": 1,
                    "register_12": 1,
                    "temp2": 3,
                    "temp4": 3,
                    "temp5": 1,
                    "temp_var2": 3,
                    "temp_var_5": 1,
                    "tmp4": 1,
                    "value2": 1
                },
                "param_1": {
                    "exponent_1": 1,
                    "first_half_param1": 1,
                    "input1": 21,
                    "input_1": 3,
                    "input_param": 1,
                    "input_value1": 1,
                    "integer_part": 1,
                    "number_1": 1,
                    "value1": 1
                },
                "param_2": {
                    "fraction_1": 1,
                    "fractional_part": 1,
                    "input2": 21,
                    "input_2": 3,
                    "input_value2": 1,
                    "number_2": 1,
                    "second_half_param1": 1,
                    "shifted_param": 1,
                    "value2": 1
                },
                "param_3": {
                    "exponent_2": 1,
                    "exponent_part": 1,
                    "first_half_param2": 1,
                    "input3": 21,
                    "input_3": 3,
                    "input_param2": 1,
                    "input_value3": 1,
                    "number_3": 1,
                    "value3": 1
                },
                "param_4": {
                    "fraction_2": 1,
                    "input4": 21,
                    "input_4": 3,
                    "input_value4": 1,
                    "number_4": 1,
                    "second_half_param2": 1,
                    "shifted_param2": 1,
                    "sign_bit": 1,
                    "value4": 1
                },
                "uVar1": {
                    "bit1": 6,
                    "bit_1": 3,
                    "bit_check1": 2,
                    "bitwise_shift": 1,
                    "integer_bit": 1,
                    "temp1": 4,
                    "temp4": 1,
                    "temp_var1": 2,
                    "temp_var3": 3,
                    "temp_var_1": 1,
                    "var1": 1
                },
                "uVar2": {
                    "bit2": 4,
                    "bit_2": 1,
                    "bit_check2": 1,
                    "extracted_bits": 1,
                    "mask1": 1,
                    "mask2": 1,
                    "masked_param": 1,
                    "result1": 1,
                    "shifted_bit": 1,
                    "shifted_bit_check1": 1,
                    "shifted_bits": 1,
                    "shifted_fraction_2": 1,
                    "temp2": 4,
                    "temp3": 4,
                    "temp_var2": 2,
                    "temp_var4": 3,
                    "temp_var_3": 1,
                    "tmp2": 1,
                    "var2": 1
                },
                "uVar3": {
                    "bit3": 4,
                    "bit_3": 1,
                    "bit_check2": 1,
                    "current_bit": 1,
                    "current_fraction": 1,
                    "fractional_part_copy": 1,
                    "number_2_copy": 1,
                    "result": 1,
                    "result2": 1,
                    "temp2": 1,
                    "temp3": 4,
                    "temp4": 4,
                    "temp_var2": 1,
                    "temp_var3": 2,
                    "temp_var5": 3,
                    "temp_var_4": 1,
                    "tmp3": 1,
                    "updated_value2": 1,
                    "var3": 1
                },
                "unaff_r4": {
                    "bit2": 1,
                    "bit_2": 1,
                    "bit_check2": 1,
                    "constant1": 1,
                    "constant_r4": 1,
                    "control_param": 1,
                    "floating_point_bits": 1,
                    "mask1": 1,
                    "max_limit": 1,
                    "register_4": 1,
                    "temp1": 8,
                    "temp2": 4,
                    "temp_var1": 4,
                    "temp_var_2": 1,
                    "tmp1": 1,
                    "unaff_var4": 1,
                    "unaffected_r4": 1,
                    "value1": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800074c"
            ],
            "code": "\nulonglong reverse_bits_float_080008ba(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint bit1;\n  uint temp1;\n  uint temp2;\n  uint temp4;\n  uint constant;\n  bool is_zero;\n  \n  temp2 = constant & input4 >> 0x14;\n  temp4 = input2;\n  if (temp1 != constant || temp2 != constant) {\n    if (temp1 == constant) {\n      if (((input1 | input2 << 0xc) == 0) && (input1 = input3, temp4 = input4, temp2 != constant)\n         ) {\nLAB_0800072c:\n        return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (temp2 == constant) {\n      input1 = input3;\n      temp4 = input4;\n      if ((input3 | input4 << 0xc) == 0) {\nLAB_080006f0:\n        return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      is_zero = (input1 | input2 << 1) == 0;\n      if (!is_zero) {\n        is_zero = (input3 | input4 << 1) == 0;\n      }\n      if (!is_zero) {\n        if (temp1 == 0) {\n          temp4 = input2 & 0x80000000;\n          do {\n            bit1 = input1 & 0x80000000;\n            input1 = input1 << 1;\n            input2 = input2 * 2 + (uint)(bit1 != 0);\n          } while ((input2 & 0x100000) == 0);\n          input2 = input2 | temp4;\n          if (temp2 != 0) {\n            return CONCAT44(input2,input1);\n          }\n        }\n        do {\n          temp4 = input3 & 0x80000000;\n          input3 = input3 << 1;\n          input4 = input4 * 2 + (uint)(temp4 != 0);\n        } while ((input4 & 0x100000) == 0);\n        return CONCAT44(input2,input1);\n      }\n      if ((input1 | input2 << 1) != 0) goto LAB_0800072c;\n      if ((input3 | input4 << 1) != 0) goto LAB_080006f0;\n    }\n  }\n  return CONCAT44(temp4,input1) | 0x7ff8000000000000;\n}\n\n",
            "current_name": "reverse_bits_float_080008ba",
            "entrypoint": "0x080008ba",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080008ba": "reverse_bits_float_080008ba",
                "bVar4": "is_zero",
                "in_r12": "constant",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "bit1",
                "uVar2": "temp2",
                "uVar3": "temp4",
                "unaff_r4": "temp1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800092c": {
            "additional_data": {
                "DAT_": {
                    "": 1
                },
                "FUN_0800092c": {
                    "check_comparisons": 1,
                    "check_conditions": 1,
                    "check_equal_bits": 1,
                    "check_equal_params": 1,
                    "check_equality": 6,
                    "check_equality_with_conditions": 1,
                    "check_input_parameters": 1,
                    "check_parameters": 10,
                    "check_parameters_equality": 1,
                    "check_params": 1,
                    "check_params_and_compare": 1,
                    "check_params_equality": 1,
                    "compare_parameters": 1,
                    "compare_params": 1,
                    "compare_values": 2,
                    "validate_parameters": 1
                },
                "PTR_": {
                    "": 1
                },
                "bVar2": {
                    "all_zero": 1,
                    "are_inputs_zero": 2,
                    "are_parameters_zero": 2,
                    "are_params_zero": 1,
                    "are_values_zero": 6,
                    "flag1": 1,
                    "has_zero_value": 1,
                    "is_equal": 2,
                    "is_value_equal": 1,
                    "is_zero": 11,
                    "is_zero1": 2,
                    "params_equal": 1
                },
                "bVar3": {
                    "compare_result": 1,
                    "flag2": 1,
                    "is_bigger": 1,
                    "is_comparison_true": 1,
                    "is_condition_met": 1,
                    "is_condition_true": 1,
                    "is_input_different": 1,
                    "is_less": 1,
                    "is_less_or_equal": 2,
                    "is_less_than": 1,
                    "is_less_than_or_equal": 1,
                    "is_negative": 8,
                    "is_negative_or_equal": 2,
                    "is_param4_less_or_equal": 1,
                    "is_param4_less_than_param2": 2,
                    "is_param_d_less_than_param_b": 1,
                    "is_result_zero": 1,
                    "is_zero2": 1,
                    "is_zero_and_less_than": 1,
                    "less_than_equal": 1,
                    "params_order": 1
                },
                "param_1": {
                    "a": 3,
                    "equal2": 1,
                    "first_param": 1,
                    "first_parameter": 1,
                    "input1": 2,
                    "input_1": 2,
                    "input_val1": 1,
                    "param_a": 1,
                    "value1": 16,
                    "value_1": 3
                },
                "param_2": {
                    "b": 3,
                    "equal1": 1,
                    "input2": 2,
                    "input_2": 2,
                    "input_val2": 1,
                    "param_b": 1,
                    "second_param": 1,
                    "second_parameter": 1,
                    "value2": 16,
                    "value_2": 3
                },
                "param_3": {
                    "c": 3,
                    "input3": 2,
                    "input_3": 2,
                    "input_val3": 1,
                    "param_c": 1,
                    "shifted_input_3": 1,
                    "third_param": 1,
                    "third_parameter": 1,
                    "value3": 16,
                    "value_3": 3
                },
                "param_4": {
                    "d": 3,
                    "fourth_param": 1,
                    "fourth_parameter": 1,
                    "input4": 1,
                    "input_4": 1,
                    "input_val4": 1,
                    "param_d": 1,
                    "shifted_input_4": 1,
                    "shifted_param_4": 1,
                    "sign_bit_set": 1,
                    "value4": 16,
                    "value_4": 3
                },
                "return": {
                    "result": 4
                },
                "retval": {
                    "result": 1
                },
                "uVar1": {
                    "comparison_result": 1,
                    "result": 14,
                    "result_xor": 1,
                    "temp1": 1,
                    "temp_value": 1,
                    "temp_var1": 1,
                    "value_xor": 1,
                    "xor_result": 11
                }
            },
            "called": [],
            "calling": [
                "FUN_080009b8"
            ],
            "code": "\nuint check_parameters_equality_0800092c(uint value1,uint value2,uint value3,uint value4)\n\n{\n  uint result;\n  bool is_zero;\n  bool is_negative;\n  \n  if (((int)(value2 << 1) >> 0x15 == -1 || (int)(value4 << 1) >> 0x15 == -1) &&\n     ((((int)(value2 << 1) >> 0x15 == -1 && ((value1 | value2 << 0xc) != 0)) ||\n      (((int)(value4 << 1) >> 0x15 == -1 && ((value3 | value4 << 0xc) != 0)))))) {\n    result 1;\n  }\n  is_zero = (value1 | value2 << 1) == 0;\n  if (is_zero) {\n    is_zero = (value3 | value4 << 1) == 0;\n  }\n  if (!is_zero) {\n    is_zero = value2 == value4;\n  }\n  if (is_zero) {\n    is_zero = value1 == value3;\n  }\n  if (!is_zero) {\n    result = value2 ^ value4;\n    is_zero = result == 0;\n    if (-1 < (int)result) {\n      is_zero = value2 == value4;\n    }\n    is_negative = -1 < (int)result && value4 <= value2;\n    if (is_zero) {\n      is_negative = value3 <= value1;\n    }\n    value4 = (int)value4 >> 0x1f;\n    if (!is_negative) {\n      value4 = ~value4;\n    }\n    result value4 | 1;\n  }\n  result 0;\n}\n\n",
            "current_name": "check_parameters_equality_0800092c",
            "entrypoint": "0x0800092c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800092c": "check_parameters_equality_0800092c",
                "bVar2": "is_zero",
                "bVar3": "is_negative",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "return": "result",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080009a8": {
            "additional_data": {
                "FUN_080009a8": {
                    "call_other_function": 1,
                    "execute_function": 24,
                    "execute_sub_function": 1,
                    "perform_operation": 1,
                    "process_data": 4
                },
                "FUN_080009b8": {
                    "call_second_function": 1,
                    "call_sub_function": 8,
                    "call_subfunction": 1,
                    "execute_sub_function": 1,
                    "execute_subfunction": 1,
                    "invoke_sub_function": 1,
                    "perform_sub_function": 1,
                    "process_data": 2,
                    "sub_function": 6,
                    "sub_process_data": 1
                },
                "param_1": {
                    "arg1": 12,
                    "arg_1": 1,
                    "argument1": 4,
                    "argument_1": 2,
                    "data1": 3,
                    "input1": 5,
                    "input_param1": 2,
                    "input_param_1": 1,
                    "param1": 1
                },
                "param_2": {
                    "arg2": 12,
                    "arg_2": 1,
                    "argument2": 4,
                    "argument_2": 2,
                    "data2": 3,
                    "input2": 5,
                    "input_param2": 2,
                    "input_param_2": 1,
                    "param2": 1
                },
                "param_3": {
                    "arg3": 12,
                    "arg_3": 1,
                    "argument3": 4,
                    "argument_3": 2,
                    "data3": 3,
                    "input3": 4,
                    "input_param3": 2,
                    "input_param_3": 1,
                    "param3": 2
                },
                "param_4": {
                    "arg4": 12,
                    "arg_4": 1,
                    "argument4": 4,
                    "argument_4": 2,
                    "data4": 3,
                    "input4": 4,
                    "input_param4": 2,
                    "input_param_4": 1,
                    "param4": 2
                }
            },
            "called": [
                "FUN_080009b8"
            ],
            "calling": [
                "FUN_08000a18",
                "FUN_08000a04"
            ],
            "code": "\nvoid execute_sub_function_080009a8(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  FUN_080009b8(arg3,arg4,arg1,arg2);\n  return;\n}\n\n",
            "current_name": "execute_sub_function_080009a8",
            "entrypoint": "0x080009a8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080009a8": "execute_sub_function_080009a8",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080009b8": {
            "additional_data": {
                "FUN_0800092c": {
                    "calculate_result": 1,
                    "calculate_value": 1,
                    "execute_sub_function": 1,
                    "manipulate_data": 1,
                    "perform_action": 1,
                    "perform_calculation": 4,
                    "perform_operation": 8,
                    "process": 1,
                    "process_data": 6,
                    "reverse_and_process_data": 1,
                    "reversing_function": 1,
                    "sub_function": 1
                },
                "FUN_0800092c_param_1": {
                    "data_param1": 1,
                    "first_param": 1,
                    "value1": 1
                },
                "FUN_0800092c_param_2": {
                    "data_param2": 1,
                    "second_param": 1,
                    "value2": 1
                },
                "FUN_0800092c_param_3": {
                    "data_param3": 1,
                    "third_param": 1,
                    "value3": 1
                },
                "FUN_0800092c_param_4": {
                    "data_param4": 1,
                    "fourth_param": 1,
                    "value4": 1
                },
                "FUN_080009b8": {
                    "execute_and_return": 6,
                    "execute_and_return_param": 1,
                    "execute_function": 5,
                    "initialize": 10,
                    "initialize_function": 1,
                    "perform_operation": 1,
                    "process_param": 1,
                    "run_function": 2,
                    "start_function": 1
                },
                "param_1": {
                    "arg": 1,
                    "input": 13,
                    "input1": 1,
                    "input_param": 7,
                    "input_parameter": 2,
                    "input_value": 4,
                    "param_1": 1,
                    "value": 2
                },
                "param_2": {
                    "arg_1": 1,
                    "calculation_param_1": 1,
                    "data_1": 1,
                    "data_param1": 1,
                    "data_param_1": 1,
                    "first_param": 1,
                    "first_parameter": 1,
                    "input1": 2,
                    "input2": 1,
                    "op_param_1": 1,
                    "operand1": 1,
                    "param1": 1,
                    "param_2": 3,
                    "var_2": 1
                },
                "param_3": {
                    "arg_2": 1,
                    "calculation_param_2": 1,
                    "data_2": 1,
                    "data_param2": 1,
                    "data_param_2": 1,
                    "input2": 2,
                    "input3": 1,
                    "op_param_2": 1,
                    "operand2": 1,
                    "param2": 1,
                    "param_3": 3,
                    "second_param": 1,
                    "second_parameter": 1,
                    "var_3": 1
                },
                "param_4": {
                    "arg_3": 1,
                    "calculation_param_3": 1,
                    "data_3": 1,
                    "data_param3": 1,
                    "data_param_3": 1,
                    "input3": 2,
                    "input4": 1,
                    "op_param_3": 1,
                    "operand3": 1,
                    "param3": 1,
                    "param_4": 3,
                    "third_param": 1,
                    "third_parameter": 1,
                    "var_4": 1
                }
            },
            "called": [
                "FUN_0800092c"
            ],
            "calling": [
                "FUN_080009c8",
                "FUN_080009a8",
                "FUN_080009dc",
                "FUN_080009f0"
            ],
            "code": "\nundefined4 initialize_function_080009b8(undefined4 input)\n\n{\n  FUN_0800092c();\n  return input;\n}\n\n",
            "current_name": "initialize_function_080009b8",
            "entrypoint": "0x080009b8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080009b8": "initialize_function_080009b8",
                "param_1": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080009c8": {
            "additional_data": {
                "FUN_080009b8": {
                    "execute_task": 1,
                    "function_call": 1,
                    "initialize": 1,
                    "perform_additional_operations": 1
                },
                "FUN_080009c8": {
                    "check_if_character_is_non_zero": 1,
                    "check_if_character_is_not_null": 1,
                    "check_if_character_not_null": 3,
                    "check_if_initialized": 5,
                    "check_if_input_is_non_empty": 1,
                    "check_if_non_zero": 1,
                    "check_if_not_null": 1,
                    "check_if_not_zero": 2,
                    "check_if_null": 1,
                    "check_if_zr_empty": 1,
                    "check_input": 1,
                    "check_non_null_input": 1,
                    "check_non_zero": 1,
                    "check_non_zero_char": 2,
                    "check_non_zero_character": 1,
                    "check_non_zero_value": 1,
                    "check_nonzero_value": 1,
                    "check_not_null": 1,
                    "is_input_not_null": 1,
                    "is_input_valid": 1,
                    "is_non_zero_char": 1,
                    "is_not_zero": 1,
                    "is_null_character": 1
                },
                "in_ZR": {
                    "char_to_check": 1,
                    "character": 2,
                    "check_result": 1,
                    "flag": 1,
                    "input": 1,
                    "input_char": 8,
                    "input_character": 3,
                    "input_is_empty": 1,
                    "is_initialized": 5,
                    "is_not_null": 1,
                    "is_zero": 1,
                    "is_zr_not_empty": 1,
                    "result": 2,
                    "return_value": 3
                }
            },
            "called": [
                "FUN_080009b8"
            ],
            "calling": [
                "FUN_08000cd0"
            ],
            "code": "\nbool check_if_character_is_not_null_080009c8(void)\n\n{\n  char input_char;\n  \n  FUN_080009b8();\n  return input_char != '\\0';\n}\n\n",
            "current_name": "check_if_character_is_not_null_080009c8",
            "entrypoint": "0x080009c8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080009c8": "check_if_character_is_not_null_080009c8",
                "in_ZR": "input_char"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080009dc": {
            "additional_data": {
                "FUN_080009b8": {
                    "call_subfunction": 1,
                    "init_variables": 1,
                    "initialize": 1,
                    "initialize_cy": 1
                },
                "FUN_080009dc": {
                    "check_if_char_null": 1,
                    "check_if_cy_is_null": 2,
                    "check_if_empty": 1,
                    "check_if_input_empty": 1,
                    "check_if_input_is_empty": 4,
                    "check_if_input_is_null": 1,
                    "check_if_null_terminated": 4,
                    "check_if_string_empty": 1,
                    "check_input_string": 1,
                    "check_null_termination": 1,
                    "is_cy_null": 7,
                    "is_input_empty": 3,
                    "is_null_character": 1,
                    "is_null_terminated": 2,
                    "is_string_empty": 1
                },
                "in_CY": {
                    "char_input": 1,
                    "current_char": 2,
                    "cy": 2,
                    "cy_char": 1,
                    "cy_character": 1,
                    "cy_value": 1,
                    "input_char": 10,
                    "input_character": 11,
                    "input_cy": 2
                },
                "param_1": {
                    "parameter": 1
                }
            },
            "called": [
                "FUN_080009b8"
            ],
            "calling": [
                "FUN_08000cd0",
                "FUN_080016b4",
                "FUN_08001960",
                "FUN_080019f6",
                "FUN_08005da8",
                "FUN_08001814"
            ],
            "code": "\nbool check_if_string_empty_080009dc(void)\n\n{\n  char input_character;\n  \n  FUN_080009b8();\n  return input_character == '\\0';\n}\n\n",
            "current_name": "check_if_string_empty_080009dc",
            "entrypoint": "0x080009dc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080009dc": "check_if_string_empty_080009dc",
                "in_CY": "input_character"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080009f0": {
            "additional_data": {
                "FUN_080009b8": {
                    "calculate_result": 1,
                    "call_080009b8": 1,
                    "execute_operations": 1,
                    "execute_subfunction": 1,
                    "initialize": 1,
                    "initialize_flags": 1,
                    "initialize_parameters": 1,
                    "initialize_values": 1,
                    "perform_check": 1,
                    "perform_operation": 4,
                    "perform_operations": 1,
                    "process_data": 1,
                    "set_flags": 1
                },
                "FUN_080009f0": {
                    "check_and_return_result": 1,
                    "check_carry_and_zero": 6,
                    "check_conditions": 15,
                    "check_cy_and_zr": 3,
                    "check_cy_zr": 2,
                    "check_flags": 3,
                    "check_if_carry_or_zero": 1
                },
                "in_CY": {
                    "carry_flag": 20,
                    "has_carry": 1,
                    "is_carry": 2,
                    "is_carry_flag": 1,
                    "is_carry_set": 1,
                    "is_condition1_true": 1
                },
                "in_ZR": {
                    "is_condition2_true": 1,
                    "is_zero": 3,
                    "is_zero_result": 2,
                    "zero_flag": 17,
                    "zero_result": 1,
                    "zero_result_flag": 2
                },
                "param_1": {
                    "arg": 1,
                    "argument": 1,
                    "input": 2,
                    "input_param": 1,
                    "input_value": 1,
                    "param": 1
                }
            },
            "called": [
                "FUN_080009b8"
            ],
            "calling": [
                "FUN_08000cd0",
                "FUN_08005da8"
            ],
            "code": "\nbool check_conditions_080009f0(void)\n\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  \n  FUN_080009b8();\n  return !(bool)carry_flag || (bool)zero_flag;\n}\n\n",
            "current_name": "check_conditions_080009f0",
            "entrypoint": "0x080009f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080009f0": "check_conditions_080009f0",
                "in_CY": "carry_flag",
                "in_ZR": "zero_flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000a04": {
            "additional_data": {
                "FUN_080009a8": {
                    "execute_sub_function": 1,
                    "execute_sub_functions": 1,
                    "execute_subfunction": 2,
                    "initialize": 1,
                    "initialize_flags": 2,
                    "initialize_variables": 2,
                    "invoke_subfunction": 1,
                    "perform_initialization": 6,
                    "perform_operation": 1,
                    "perform_sub_operations": 1,
                    "perform_subroutine": 1,
                    "reset_flags": 1
                },
                "FUN_08000a04": {
                    "check_carry_and_zero": 4,
                    "check_carry_and_zero_flags": 1,
                    "check_carry_or_zero": 1,
                    "check_carry_zero_flag": 1,
                    "check_condition": 2,
                    "check_conditions": 2,
                    "check_cy_and_zr": 7,
                    "check_cy_zr": 4,
                    "check_cy_zr_flag": 1,
                    "check_error_condition": 1,
                    "check_execution_result": 1,
                    "check_flags": 2,
                    "check_zero_carry": 1,
                    "check_zero_flags": 1,
                    "check_zr_cy": 1,
                    "is_carry_or_zero": 1
                },
                "in_CY": {
                    "carry": 1,
                    "carry_flag": 11,
                    "has_carry": 1,
                    "is_carry": 3,
                    "is_carry_out": 1
                },
                "in_ZR": {
                    "is_zero": 5,
                    "zero_flag": 11,
                    "zero_result": 1
                },
                "param_1": {
                    "arg1": 2,
                    "first_param": 1,
                    "unused_param1": 1
                },
                "param_2": {
                    "arg2": 2,
                    "second_param": 1,
                    "unused_param2": 1
                },
                "param_3": {
                    "arg3": 2,
                    "third_param": 1,
                    "unused_param3": 1
                },
                "param_4": {
                    "arg4": 2,
                    "fourth_param": 1,
                    "unused_param4": 1
                }
            },
            "called": [
                "FUN_080009a8"
            ],
            "calling": [
                "FUN_08000cd0",
                "FUN_08001960"
            ],
            "code": "\nbool check_cy_and_zr_08000a04(void)\n\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  \n  FUN_080009a8();\n  return !(bool)carry_flag || (bool)zero_flag;\n}\n\n",
            "current_name": "check_cy_and_zr_08000a04",
            "entrypoint": "0x08000a04",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000a04": "check_cy_and_zr_08000a04",
                "in_CY": "carry_flag",
                "in_ZR": "zero_flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000a18": {
            "additional_data": {
                "FUN_080009a8": {
                    "do_something": 1,
                    "initialize_cy": 1,
                    "initialize_variables": 1
                },
                "FUN_08000a18": {
                    "check_for_null_termination": 1,
                    "check_if_cy_is_null": 2,
                    "check_if_cy_null": 1,
                    "check_if_empty": 1,
                    "check_if_end_of_string": 1,
                    "check_if_end_of_text": 1,
                    "check_if_in_cy_null": 1,
                    "check_if_input_empty": 1,
                    "check_if_input_is_empty": 1,
                    "check_if_input_is_null": 1,
                    "check_if_null_terminated": 9,
                    "check_if_string_is_empty": 1,
                    "check_null_terminated_input": 1,
                    "check_null_termination": 2,
                    "is_cy_empty": 1,
                    "is_cy_null": 2,
                    "is_input_empty": 1,
                    "is_null_character": 1,
                    "is_null_terminated": 2
                },
                "in_CY": {
                    "char_input": 1,
                    "character": 1,
                    "cy": 1,
                    "cy_char": 1,
                    "cy_character": 1,
                    "cy_input": 1,
                    "cy_value": 2,
                    "input_char": 8,
                    "input_character": 14,
                    "user_input": 1
                }
            },
            "called": [
                "FUN_080009a8"
            ],
            "calling": [
                "FUN_08000cd0",
                "FUN_080016b4",
                "FUN_08001960",
                "FUN_080019f6",
                "FUN_08005da8"
            ],
            "code": "\nbool check_if_null_terminated_08000a18(void)\n\n{\n  char input_character;\n  \n  FUN_080009a8();\n  return input_character == '\\0';\n}\n\n",
            "current_name": "check_if_null_terminated_08000a18",
            "entrypoint": "0x08000a18",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000a18": "check_if_null_terminated_08000a18",
                "in_CY": "input_character"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000a2c": {
            "additional_data": {
                "FUN_08000a2c": {
                    "check_condition": 1,
                    "check_conditions": 4,
                    "check_input_validity": 2,
                    "check_inputs": 1,
                    "check_param_values": 1,
                    "check_parameters": 8,
                    "check_parameters_validity": 1,
                    "check_params": 2,
                    "check_valid_inputs": 1,
                    "check_valid_parameters": 1,
                    "is_input_valid": 1,
                    "is_invalid_parameters": 1,
                    "is_valid_input": 3,
                    "is_valid_parameters": 2,
                    "is_valid_params": 1,
                    "perform_check": 1
                },
                "param_1": {
                    "first_parameter": 1,
                    "input1": 9,
                    "input_1": 6,
                    "number1": 1,
                    "param1": 1,
                    "value1": 6,
                    "value_1": 6,
                    "value_a": 1
                },
                "param_2": {
                    "input2": 9,
                    "input_2": 6,
                    "number2": 1,
                    "param2": 1,
                    "second_parameter": 1,
                    "shifted_value1": 1,
                    "value2": 5,
                    "value_2": 6,
                    "value_b": 1
                },
                "param_3": {
                    "input3": 9,
                    "input_3": 6,
                    "number3": 1,
                    "param3": 1,
                    "third_parameter": 1,
                    "value2": 1,
                    "value3": 5,
                    "value_3": 6,
                    "value_c": 1
                },
                "param_4": {
                    "fourth_parameter": 1,
                    "input4": 9,
                    "input_4": 6,
                    "number4": 1,
                    "param4": 1,
                    "shifted_value2": 1,
                    "value4": 5,
                    "value_4": 6,
                    "value_d": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005da8"
            ],
            "code": "\nundefined4 check_valid_parameters_08000a2c(uint input1,int input2,uint input3,int input4)\n\n{\n  if ((((input2 << 1) >> 0x15 != -1) || ((input1 | input2 << 0xc) == 0)) &&\n     (((input4 << 1) >> 0x15 != -1 || ((input3 | input4 << 0xc) == 0)))) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "check_valid_parameters_08000a2c",
            "entrypoint": "0x08000a2c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000a2c": "check_valid_parameters_08000a2c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000a58": {
            "additional_data": {
                "FUN_08000a58": {
                    "apply_bitwise_operation": 1,
                    "apply_transformation": 1,
                    "calculate_division": 1,
                    "calculate_final_value": 1,
                    "calculate_integer": 1,
                    "calculate_modified_value": 1,
                    "calculate_number": 1,
                    "calculate_result": 4,
                    "calculate_shifted_value": 2,
                    "calculate_value": 1,
                    "compute_result": 1,
                    "convert_signed_int": 1,
                    "convert_to_signed": 1,
                    "convert_to_signed_integer": 2,
                    "convert_unsigned_to_signed": 1,
                    "convert_value": 1,
                    "reverse_and_sanitize": 1,
                    "reverse_bits": 2,
                    "reverse_integer": 3,
                    "reverse_unsigned_integer": 1
                },
                "iVar2": {
                    "calculated_value": 1,
                    "calculation": 1,
                    "calculation_result": 2,
                    "modified_multiplier": 1,
                    "modified_param2": 1,
                    "multiplied_value": 5,
                    "multiplier": 1,
                    "new_value_1": 1,
                    "offset": 4,
                    "scaled_value": 2,
                    "shifted_and_offset_value": 1,
                    "shifted_value": 2,
                    "shifted_value_2": 2,
                    "temp": 1,
                    "temp2": 1,
                    "temp_var1": 1
                },
                "param_1": {
                    "dividend": 1,
                    "input1": 9,
                    "input_1": 3,
                    "input_num": 1,
                    "input_value": 8,
                    "input_value1": 4,
                    "input_value_1": 3,
                    "number1": 1,
                    "unsigned_value": 1
                },
                "param_2": {
                    "bit_mask": 1,
                    "divisor": 1,
                    "input2": 7,
                    "input_2": 3,
                    "input_value2": 3,
                    "input_value_2": 3,
                    "masked_multiplier": 1,
                    "modified_input2": 1,
                    "multiplier": 3,
                    "number2": 1,
                    "scale_factor": 1,
                    "shift_amount": 1,
                    "shift_count": 1,
                    "shift_value": 2,
                    "signed_value": 1,
                    "temp": 1
                },
                "uVar1": {
                    "converted_result": 1,
                    "converted_value": 1,
                    "divisor": 1,
                    "final_result": 1,
                    "final_value": 1,
                    "quotient": 1,
                    "result": 9,
                    "return_value": 1,
                    "shift_value": 1,
                    "shifted_bits": 1,
                    "shifted_value": 7,
                    "shifted_value_1": 1
                },
                "uVar1_transformed": {
                    "transformed_value": 1
                },
                "uVar2": {
                    "result": 1
                },
                "uVar3": {
                    "adjusted_shift_amount": 1,
                    "adjusted_value": 2,
                    "difference": 1,
                    "factor": 1,
                    "iteration": 1,
                    "mask": 1,
                    "masked_value": 1,
                    "modified_shift": 1,
                    "negated_shifted_value": 1,
                    "negative_shifted_value": 1,
                    "negative_value": 1,
                    "offset_value": 1,
                    "shift_adjustment": 1,
                    "shift_amount": 4,
                    "shift_value": 2,
                    "shifted_value2": 1,
                    "shifted_value_2": 1,
                    "subtract_result": 1,
                    "subtract_value": 1,
                    "temp_var": 1,
                    "threshold": 1
                },
                "uVar4": {
                    "result": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_08005da8"
            ],
            "code": "\nuint calculate_modified_value_08000a58(uint input1,uint input2)\n\n{\n  uint result;\n  int multiplied_value;\n  uint shift_amount;\n  \n  multiplied_value = input2 * 2 + 0x200000;\n  if (input2 * 2 < 0xffe00000) {\n    if (-1 < multiplied_value) {\n      return 0;\n    }\n    result = multiplied_value >> 0x15;\n    shift_amount = -result - 0x3e1;\n    if (result < 0xfffffc20 && shift_amount != 0) {\n      result = (input2 << 0xb | 0x80000000 | input1 >> 0x15) >> (shift_amount & 0xff);\n      if ((input2 & 0x80000000) != 0) {\n        result = -result;\n      }\n      return result;\n    }\n  }\n  else if ((input1 | input2 << 0xc) != 0) {\n    return 0;\n  }\n  input2 = input2 & 0x80000000;\n  if (input2 == 0) {\n    input2 = 0x7fffffff;\n  }\n  return input2;\n}\n\n",
            "current_name": "calculate_modified_value_08000a58",
            "entrypoint": "0x08000a58",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000a58": "calculate_modified_value_08000a58",
                "iVar2": "multiplied_value",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "result",
                "uVar3": "shift_amount"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000aa8": {
            "additional_data": {
                "0x15": {
                    "shift_amount": 1,
                    "shift_value": 1
                },
                "0x200000": {
                    "constant": 1,
                    "offset": 1
                },
                "0x3e1": {
                    "mask_value": 1
                },
                "0x80000000": {
                    "sign_bit": 2
                },
                "0xb": {
                    "shift_offset": 1
                },
                "0xffe00000": {
                    "limit": 1,
                    "upper_limit": 1
                },
                "0xffffffff": {
                    "error_code": 1
                },
                "FUN_08000aa8": {
                    "calculate_result": 1,
                    "calculate_shift_amount": 2,
                    "calculate_shift_value": 1,
                    "calculate_shifted_bits": 1,
                    "calculate_shifted_result": 1,
                    "calculate_shifted_value": 9,
                    "check_and_extract_bits": 1,
                    "check_overflow": 2,
                    "convert_to_binary": 1,
                    "find_shift_count": 1,
                    "reverse_and_scale": 1,
                    "reverse_bit_shift": 1,
                    "reverse_bits": 3,
                    "reverse_shift": 1,
                    "validate_and_shift": 2,
                    "validate_and_shift_bits": 2
                },
                "iVar1": {
                    "double_shifted_value": 1,
                    "intermediate_var": 1,
                    "multiplied_value": 1,
                    "new_value1": 1,
                    "scaled_input": 1,
                    "scaled_value": 1,
                    "shifted_input2": 1,
                    "shifted_value": 19,
                    "temp": 1,
                    "temp1": 2,
                    "temp_value": 2
                },
                "param_1": {
                    "input": 2,
                    "input1": 4,
                    "input_1": 2,
                    "input_data": 1,
                    "input_param_1": 1,
                    "input_value": 15,
                    "input_value1": 1,
                    "input_value_1": 1,
                    "num1": 1,
                    "value1": 2,
                    "value_param": 1
                },
                "param_2": {
                    "bit_count": 1,
                    "bit_mask": 2,
                    "flag": 1,
                    "input2": 4,
                    "input_2": 2,
                    "input_param_2": 1,
                    "input_value2": 1,
                    "input_value_2": 1,
                    "multiplication_factor": 1,
                    "multiplier": 1,
                    "num": 2,
                    "num2": 1,
                    "shift_amount": 7,
                    "shift_param": 1,
                    "shift_value": 3,
                    "value2": 2
                },
                "uVar2": {
                    "extracted_bits": 1,
                    "mask": 1,
                    "new_value2": 1,
                    "result": 3,
                    "shift": 1,
                    "shift_amount": 10,
                    "shift_count": 7,
                    "shift_value": 1,
                    "shifted_count": 1,
                    "shifted_result": 3,
                    "temp2": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08005da8"
            ],
            "code": "\nuint calculate_shifted_value_08000aa8(uint input_value,uint shift_amount)\n\n{\n  int shifted_value;\n  uint shift_amount;\n  \n  if ((shift_amount & 0x80000000) != 0) {\n    return 0;\n  }\n  shifted_value = shift_amount * 2 + 0x200000;\n  if (shift_amount * 2 < 0xffe00000) {\n    if (-1 < shifted_value) {\n      return 0;\n    }\n    shift_amount = -(shifted_value >> 0x15) - 0x3e1;\n    if (-1 < (int)shift_amount) {\n      return (shift_amount << 0xb | 0x80000000 | input_value >> 0x15) >> (shift_amount & 0xff);\n    }\n  }\n  else if ((input_value | shift_amount << 0xc) != 0) {\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "calculate_shifted_value_08000aa8",
            "entrypoint": "0x08000aa8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000aa8": "calculate_shifted_value_08000aa8",
                "iVar1": "shifted_value",
                "param_1": "input_value",
                "param_2": "shift_amount",
                "uVar2": "shift_amount"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000ae8": {
            "additional_data": {
                "FUN_08000ae8": {
                    "execute_interrupt": 1,
                    "execute_software_interrupt": 1,
                    "execute_system_call": 7,
                    "execute_system_interrupt": 2,
                    "get_screenshot": 1,
                    "get_system_info": 1,
                    "initialize_interrupt": 1,
                    "interrupt": 1,
                    "interrupt_software": 2,
                    "invoke_hardware_interrupt": 1,
                    "invoke_software_interrupt": 1,
                    "invoke_system_interrupt": 2,
                    "perform_system_interrupt": 2,
                    "send_software_interrupt": 6,
                    "software_interrupt": 1,
                    "trigger_software_interrupt": 1
                },
                "INTERRUPT_CODE": {
                    "interrupt_code": 1
                },
                "PTR_003f": {
                    "interrupt_code": 1
                },
                "PTR_08000ae8": {
                    "ptr_execute_software_interrupt": 1
                },
                "original_parameter_name_1": {
                    "none": 1
                },
                "original_variable_name_1": {
                    "none": 1
                },
                "software_interrupt": {
                    "call_interrupt": 1,
                    "execute_interrupt": 2,
                    "execute_software_interrupt": 1,
                    "interrupt_code": 2,
                    "interrupt_number": 1,
                    "invoke_interrupt": 2,
                    "invoke_software_interrupt": 1,
                    "invoke_system_call": 2,
                    "issue_interrupt": 1,
                    "trigger_interrupt": 6,
                    "trigger_software_interrupt": 1,
                    "trigger_system_interrupt": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08000aec"
            ],
            "code": "\nvoid send_software_interrupt_08000ae8(void)\n\n{\n  trigger_interrupt(0x3f);\n  return;\n}\n\n",
            "current_name": "send_software_interrupt_08000ae8",
            "entrypoint": "0x08000ae8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000ae8": "send_software_interrupt_08000ae8",
                "software_interrupt": "trigger_interrupt"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000aec": {
            "additional_data": {
                "DAT_2000017c": {
                    "flag": 2
                },
                "FUN_08000ae8": {
                    "perform_subroutine": 1
                },
                "FUN_08000aec": {
                    "execute_command": 1,
                    "execute_function": 17,
                    "execute_if_not_in_progress": 1,
                    "execute_operation": 1,
                    "execute_process": 1,
                    "execute_reverse_process": 1,
                    "execute_task": 1,
                    "initialize_and_call_function": 1,
                    "perform_operation": 1,
                    "process_data": 3,
                    "process_function": 1,
                    "reverse_and_call": 1
                },
                "param_1": {
                    "arg1": 2,
                    "command": 1,
                    "input": 2,
                    "input1": 4,
                    "input_1": 3,
                    "input_param": 8,
                    "input_param1": 4,
                    "input_value": 1,
                    "mode": 1,
                    "operation_param": 1,
                    "value1": 2,
                    "value_1": 2
                },
                "param_2": {
                    "input2": 1,
                    "input_2": 1,
                    "input_param2": 2,
                    "param1": 1,
                    "unused": 1,
                    "unused_param": 6,
                    "unused_param1": 1,
                    "value_2": 1
                },
                "param_3": {
                    "input3": 1,
                    "input_3": 1,
                    "input_param3": 2,
                    "param2": 1,
                    "unused": 1,
                    "unused_param2": 4,
                    "unused_param_2": 3,
                    "value_3": 1
                },
                "param_4": {
                    "arg4": 2,
                    "data_param": 1,
                    "execution_flag": 1,
                    "input2": 1,
                    "input4": 3,
                    "input_4": 3,
                    "input_param4": 4,
                    "output": 2,
                    "output_param": 6,
                    "param": 1,
                    "param3": 1,
                    "result_param": 2,
                    "value4": 2,
                    "value_4": 2
                },
                "uVar1": {
                    "execution_status": 1,
                    "result": 17,
                    "return_value": 7
                }
            },
            "called": [
                "FUN_08000ae8"
            ],
            "calling": [
                "FUN_08000bcc"
            ],
            "code": "\nundefined4 execute_function_08000aec(undefined4 input_param,undefined4 unused_param,undefined4 unused_param2,undefined4 output_param)\n\n{\n  undefined4 result;\n  \n  if (DAT_2000017c != 0) {\n    return 0;\n  }\n  result = FUN_08000ae8(1,input_param,0,0,output_param);\n  return result;\n}\n\n",
            "current_name": "execute_function_08000aec",
            "entrypoint": "0x08000aec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000aec": "execute_function_08000aec",
                "param_1": "input_param",
                "param_2": "unused_param",
                "param_3": "unused_param2",
                "param_4": "output_param",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000b08": {
            "additional_data": {
                "DAT_20000010": {
                    "data9": 1
                },
                "DAT_20000014": {
                    "data10": 1
                },
                "DAT_20000018": {
                    "data7": 1
                },
                "DAT_2000001c": {
                    "data8": 1
                },
                "DAT_20000020": {
                    "data5": 1
                },
                "DAT_20000024": {
                    "data6": 1
                },
                "DAT_20000028": {
                    "data14": 1
                },
                "DAT_2000002c": {
                    "data15": 1
                },
                "DAT_20000030": {
                    "data16": 1
                },
                "DAT_20000034": {
                    "data17": 1
                },
                "DAT_20000038": {
                    "data13": 1
                },
                "DAT_2000005c": {
                    "data12": 1
                },
                "DAT_2000006c": {
                    "data21": 1
                },
                "DAT_20000070": {
                    "data20": 1
                },
                "DAT_20000074": {
                    "data19": 1
                },
                "DAT_20000188": {
                    "data2": 1
                },
                "DAT_20000194": {
                    "data11": 1
                },
                "DAT_200001b8": {
                    "data3": 1
                },
                "DAT_200001c0": {
                    "data1": 1
                },
                "DAT_20000240": {
                    "data4": 1
                },
                "DAT_2000024c": {
                    "data18": 1
                },
                "FUN_08000b08": {
                    "execute_conditional_operations": 1,
                    "execute_conditional_tasks": 1,
                    "execute_function_if_conditions_met": 1,
                    "execute_initial_setup": 1,
                    "execute_post_initialization": 1,
                    "execute_special_functions": 1,
                    "execute_special_operations": 1,
                    "extract_relevant_data": 1,
                    "initialize_and_process_data": 1,
                    "initialize_subsystem": 1,
                    "initialize_system": 1,
                    "perform_actions": 1,
                    "process_binary_data": 1,
                    "process_data": 9,
                    "process_function": 1,
                    "process_input": 1,
                    "process_parameters": 2,
                    "process_params": 4
                },
                "FUN_08001510": {
                    "configure_settings": 1,
                    "initialize_data": 4,
                    "initialize_modules": 1,
                    "operate_on_data": 1,
                    "perform_action2": 1,
                    "perform_operation1": 1,
                    "perform_second_action": 1,
                    "process_data": 2,
                    "process_data1": 4,
                    "process_data_b": 1,
                    "process_data_section_a": 1,
                    "process_data_step1": 1,
                    "sub_function2": 2,
                    "update_data": 6,
                    "update_data1": 3
                },
                "FUN_0800157c": {
                    "analyze_data": 3,
                    "analyze_input": 1,
                    "calculate_checksum": 1,
                    "configure_modules": 1,
                    "configure_settings": 1,
                    "initialize_hardware": 1,
                    "modify_data": 2,
                    "perform_action": 1,
                    "perform_action3": 1,
                    "perform_operation": 1,
                    "perform_operation2": 1,
                    "perform_third_action": 1,
                    "print_data": 1,
                    "process_data2": 6,
                    "process_data_c": 1,
                    "process_data_section_b": 1,
                    "process_data_step2": 1,
                    "sub_function3": 2,
                    "update_data2": 3
                },
                "FUN_08001b18": {
                    "apply_transformation": 1,
                    "calculate_result": 1,
                    "extract_data": 1,
                    "init_data": 1,
                    "initialize_data": 4,
                    "perform_action1": 1,
                    "perform_first_action": 1,
                    "perform_subtask": 1,
                    "process_data": 2,
                    "process_data_a": 1,
                    "process_data_section_c": 1,
                    "reverse_bytes_order": 1,
                    "reverse_data": 9,
                    "reverse_value": 1,
                    "set_configs": 1,
                    "setup_data": 1,
                    "sub_function1": 2
                },
                "param_1": {
                    "arg1": 1,
                    "condition1": 4,
                    "condition_1": 1,
                    "data": 1,
                    "data_param": 1,
                    "data_ptr": 1,
                    "data_section_c_param1": 1,
                    "data_value": 1,
                    "flag": 4,
                    "flag1": 1,
                    "input1": 1,
                    "input_data": 1,
                    "input_flag": 3,
                    "is_condition_met": 1,
                    "is_first_param": 1,
                    "mode": 1,
                    "param1": 2,
                    "state": 1,
                    "status": 1,
                    "status_flag": 1,
                    "value1": 2
                },
                "param_2": {
                    "action_param1": 1,
                    "arg2": 1,
                    "check_value": 1,
                    "condition2": 4,
                    "condition_2": 1,
                    "data_section_b_param2": 1,
                    "flag2": 1,
                    "input2": 1,
                    "input_value": 2,
                    "is_second_param": 1,
                    "max_value": 1,
                    "option1": 1,
                    "param2": 3,
                    "setting_one": 1,
                    "value": 7,
                    "value2": 2,
                    "value4": 1,
                    "value_flag": 1
                },
                "param_3": {
                    "action_param2": 1,
                    "data_section_b_param3": 1,
                    "option2": 1,
                    "param3": 1,
                    "setting_two": 1,
                    "value5": 1
                },
                "param_4": {
                    "action_param3": 1,
                    "data_section_b_param4": 1,
                    "option3": 1,
                    "param4": 1,
                    "value3": 1,
                    "value_three": 1
                }
            },
            "called": [
                "FUN_08001510",
                "FUN_0800157c",
                "FUN_08001b18"
            ],
            "calling": [],
            "code": "\nvoid process_binary_data_08000b08(int flag,int value)\n\n{\n  if ((flag == 1) && (value == 0xffff)) {\n    FUN_08001b18(&DAT_200001c0,&DAT_20000188,&DAT_200001b8,&DAT_20000240,DAT_20000020,DAT_20000024,\n                 DAT_20000018,DAT_2000001c,DAT_20000010,DAT_20000014,0);\n    FUN_08001510(&DAT_20000194,DAT_2000005c,DAT_20000038,DAT_20000028,DAT_2000002c,DAT_20000030,\n                 DAT_20000034);\n    FUN_0800157c(&DAT_2000024c,DAT_20000074,DAT_20000070,DAT_2000006c);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "process_binary_data_08000b08",
            "entrypoint": "0x08000b08",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000b08": "process_binary_data_08000b08",
                "param_1": "flag",
                "param_2": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000bcc": {
            "additional_data": {
                "DAT_20000004": {
                    "component2": 1
                },
                "DAT_20000008": {
                    "variable6": 1
                },
                "DAT_20000060": {
                    "component3": 1
                },
                "DAT_20000064": {
                    "component1": 1
                },
                "DAT_20000194": {
                    "message_data": 1
                },
                "DAT_200001b0": {
                    "variable4": 1
                },
                "DAT_200001b4": {
                    "variable5": 1
                },
                "DAT_20000258": {
                    "variable3": 1
                },
                "DAT_2000036c": {
                    "buffer": 1
                },
                "FUNC_080058e8": {
                    "calculate_checksum": 1,
                    "calculate_time_remaining": 1,
                    "calibrate_sensor": 1,
                    "configure_delay": 1,
                    "configure_error_handler": 1,
                    "connect_to_network": 1,
                    "disable_interrupts": 1,
                    "execute_function": 1,
                    "initialize_component": 1,
                    "initialize_control": 1,
                    "initialize_display": 1,
                    "initialize_timer": 1,
                    "perform_action": 2,
                    "send_command": 1,
                    "stop_oven": 1,
                    "wait_for_completion": 1
                },
                "FUN_080005ec": {
                    "display_status": 1
                },
                "FUN_08000aec": {
                    "cleanup": 1,
                    "disable_function": 1,
                    "disable_oven": 3,
                    "disable_safety": 1,
                    "finalize_process": 1,
                    "perform_action": 1,
                    "perform_cleanup": 1,
                    "perform_system_check": 1,
                    "power_off": 2,
                    "power_off_oven": 1,
                    "power_off_system": 1,
                    "reset_oven": 1,
                    "reset_system": 1,
                    "run_oven_process": 1,
                    "shut_down_oven": 1,
                    "shutdown": 1,
                    "shutdown_oven": 3,
                    "start_device": 1,
                    "start_oven": 2,
                    "start_oven_cycle": 1,
                    "stop_oven": 3,
                    "stop_process": 1,
                    "terminate_process": 1
                },
                "FUN_08000bcc": {
                    "execute_reflow_process": 1,
                    "initialize_components": 1,
                    "initialize_device": 1,
                    "initialize_devices": 1,
                    "initialize_oven": 17,
                    "initialize_oven_controller": 2,
                    "initialize_reflow_oven": 2,
                    "initialize_reflow_process": 2,
                    "initialize_system": 3,
                    "setup_and_initialize_oven": 1
                },
                "FUN_0800135a": {
                    "clean_up": 1,
                    "clean_up_memory": 1,
                    "cleanup": 8,
                    "cleanup_data": 1,
                    "cleanup_device": 1,
                    "cleanup_oven": 2,
                    "cleanup_process": 1,
                    "cleanup_resources": 3,
                    "clear_data": 1,
                    "clear_message": 3,
                    "clear_params": 1,
                    "clear_settings": 1,
                    "finalize_data": 1,
                    "release_memory": 1,
                    "release_resources": 1,
                    "reset_config": 1,
                    "reset_display": 1,
                    "reset_oven_params": 1,
                    "reset_variables": 1
                },
                "FUN_08001366": {
                    "change_oven_mode": 1,
                    "configure_message": 1,
                    "configure_mode": 1,
                    "configure_oven": 1,
                    "configure_reflow_mode": 1,
                    "configure_temperature": 1,
                    "enable_feature": 2,
                    "enable_oven": 1,
                    "enable_reflow": 1,
                    "initialize_options": 1,
                    "set_flag": 1,
                    "set_flags": 1,
                    "set_label": 1,
                    "set_mode": 5,
                    "set_option": 1,
                    "set_oven_flags": 1,
                    "set_oven_mode": 3,
                    "set_oven_options": 1,
                    "set_reflow_mode": 1,
                    "set_reflow_profile": 1,
                    "set_temperature": 1,
                    "start_oven": 1,
                    "start_oven_cycle": 1,
                    "toggle_oven": 1
                },
                "FUN_080013a4": {
                    "configure_oven": 3,
                    "configure_oven_parameters": 1,
                    "configure_parameters": 1,
                    "configure_timer": 1,
                    "initialize_data": 2,
                    "initialize_memory": 1,
                    "set_config": 1,
                    "set_configuration": 1,
                    "set_initial_settings": 1,
                    "set_oven_parameters": 2,
                    "set_oven_params": 3,
                    "set_oven_settings": 2,
                    "set_oven_temperature": 1,
                    "set_parameters": 3,
                    "set_reflow_options": 1,
                    "set_reflow_temperature": 1,
                    "set_temperature": 5,
                    "set_timer": 1
                },
                "FUN_08001550": {
                    "activate_oven": 1,
                    "activate_timer": 1,
                    "configure_device": 1,
                    "configure_oven": 1,
                    "configure_reflow": 1,
                    "initialize_device": 2,
                    "initialize_display": 2,
                    "initialize_parameter": 1,
                    "initialize_sensor": 1,
                    "initialize_temperature_profile": 1,
                    "initialize_timer": 2,
                    "load_data": 1,
                    "set_configuration": 1,
                    "set_data": 1,
                    "set_oven_temperature": 1,
                    "set_profile": 1,
                    "set_temperature": 1,
                    "set_timer": 1,
                    "start_oven": 6,
                    "start_reflow_process": 2,
                    "start_timer": 2
                },
                "FUN_080057b4": {
                    "activate_component": 1,
                    "activate_function": 1,
                    "activate_setting": 1,
                    "configure_device": 5,
                    "configure_function": 1,
                    "configure_input": 1,
                    "configure_process": 1,
                    "configure_sensor": 1,
                    "control_device": 1,
                    "enable_component": 1,
                    "enable_control": 1,
                    "enable_feature": 2,
                    "enable_oven": 2,
                    "enable_sensor": 1,
                    "perform_action": 1,
                    "perform_operation": 1,
                    "reset_communication": 1,
                    "set_component_state": 1,
                    "set_io_status": 1,
                    "set_operating_mode": 1,
                    "set_oven_mode": 1,
                    "start_device": 1,
                    "start_oven": 1,
                    "start_process": 1,
                    "toggle_pin": 1
                },
                "FUN_08005848": {
                    "configure_component": 1,
                    "configure_device": 2,
                    "configure_io": 1,
                    "configure_output": 1,
                    "configure_oven": 2,
                    "configure_pin": 1,
                    "configure_sensor": 1,
                    "configure_setting": 1,
                    "enable_function": 1,
                    "execute_operation": 1,
                    "initialize_component": 2,
                    "initialize_device": 2,
                    "select_device": 1,
                    "set_configuration": 1,
                    "set_control_flag": 1,
                    "set_mode": 1,
                    "set_operating_mode": 1,
                    "set_oven_control": 1,
                    "set_oven_settings": 1,
                    "set_param": 1,
                    "set_parameter": 1,
                    "set_temperature": 3,
                    "set_variable": 1,
                    "setup_communication": 1,
                    "start_process": 1
                },
                "FUN_080058e0": {
                    "get_configuration": 1,
                    "get_current_temperature": 1,
                    "get_hardware_info": 1,
                    "get_initial_data": 1,
                    "get_oven_status": 2,
                    "get_sensor_data": 2,
                    "get_sensor_value": 2,
                    "get_system_time": 1,
                    "get_temperature": 7,
                    "get_time": 1,
                    "get_timer": 1,
                    "get_timestamp": 1,
                    "initialize_variables": 1
                },
                "FUN_080058e8": {
                    "disable_function": 1,
                    "set_timer": 1,
                    "shut_down_device": 1,
                    "start_oven": 1,
                    "wait_for_delay": 1
                },
                "FUN_08005a68": {
                    "calculate_temperature": 1,
                    "calibrate_sensor": 1,
                    "configure_io": 1,
                    "configure_oven": 1,
                    "configure_sensor": 2,
                    "configure_settings": 2,
                    "configure_timer": 2,
                    "enable_timer": 1,
                    "generate_code": 1,
                    "initialize_buffer": 1,
                    "initialize_counter": 1,
                    "initialize_device": 1,
                    "initialize_oven": 1,
                    "initialize_timer": 2,
                    "initialize_variable": 1,
                    "perform_action": 1,
                    "send_data": 1,
                    "set_delay": 1,
                    "set_oven_delay": 1,
                    "set_oven_program": 1,
                    "set_oven_temperature": 2,
                    "set_oven_timer": 1,
                    "set_temperature": 2,
                    "set_timer": 2
                },
                "FUN_08005c96": {
                    "display_message": 26,
                    "display_text": 2,
                    "log_message": 1,
                    "print_message": 1,
                    "set_oven_message": 1
                }
            },
            "called": [
                "FUN_080013a4",
                "FUN_08001366",
                "FUN_08001550",
                "FUN_08005a68",
                "FUN_080058e0",
                "FUN_08000aec",
                "FUN_08005c96",
                "FUN_0800135a",
                "FUN_08005848",
                "FUN_080058e8",
                "FUN_080057b4"
            ],
            "calling": [
                "FUN_08005f6c"
            ],
            "code": "\nvoid initialize_oven_controller_08000bcc(void)\n\n{\n  FUN_08005848(DAT_20000064,0);\n  FUN_080057b4(DAT_20000064,1);\n  FUN_08005848(DAT_20000004,0);\n  FUN_080057b4(DAT_20000004,1);\n  FUN_08005848(DAT_20000060,0);\n  FUN_080057b4(DAT_20000060,1);\n  FUN_08005848(DAT_20000004,1);\n  FUN_080013a4(&DAT_20000194,8,2,0);\n  FUN_08001550(&DAT_20000194,0,&DAT_20000008);\n  FUN_0800135a(&DAT_20000194);\n  FUN_08005c96(&DAT_20000194,\"Reflow\");\n  FUN_08001366(&DAT_20000194,0,1);\n  FUN_08005c96(&DAT_20000194,\"Oven 1.2\");\n  FUN_08005848(DAT_20000004,0);\n  FUNC_080058e8(0x9c4);\n  FUN_0800135a(&DAT_20000194);\n  FUN_08005a68(&DAT_2000036c,0xe100,6);\n  FUN_08005848(DAT_20000060,1);\n  DAT_20000258 = 2000;\n  DAT_200001b0 = FUN_080058e0();\n  DAT_200001b4 = FUN_080058e0();\n  FUN_08000aec(0);\n  return;\n}\n\n",
            "current_name": "initialize_oven_controller_08000bcc",
            "entrypoint": "0x08000bcc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000bcc": "initialize_oven_controller_08000bcc"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000cd0": {
            "additional_data": {
                "DAT_08007368": {
                    "ready_message": 1
                },
                "DAT_08007378": {
                    "error_message": 1
                },
                "DAT_20000004": {
                    "output_status_flag": 1
                },
                "DAT_20000060": {
                    "time_setpoint": 1
                },
                "DAT_20000068": {
                    "connection_status_flag": 1
                },
                "DAT_20000180": {
                    "reset_time": 1
                },
                "DAT_20000184": {
                    "sensor_connected": 1
                },
                "DAT_20000188": {
                    "input_data1": 1
                },
                "DAT_2000018c": {
                    "input_data2": 1
                },
                "DAT_20000190": {
                    "last_checked_time": 1
                },
                "DAT_20000194": {
                    "message_buffer": 1
                },
                "DAT_200001b0": {
                    "threshold2": 1
                },
                "DAT_200001b4": {
                    "threshold1": 1
                },
                "DAT_200001b8": {
                    "output_data1": 1
                },
                "DAT_200001bc": {
                    "output_data2": 1
                },
                "DAT_20000238": {
                    "error_code": 1
                },
                "DAT_20000239": {
                    "is_ready": 1
                },
                "DAT_20000248": {
                    "is_time_setpoint": 1
                },
                "DAT_2000024c": {
                    "starting_memory_address": 1
                },
                "DAT_20000250": {
                    "count": 1
                },
                "DAT_20000258": {
                    "time_difference": 1
                },
                "DAT_2000036c": {
                    "error_message_buffer": 1
                },
                "FUN_08000194": {
                    "calculate_new_setpoint": 1,
                    "calculate_params": 1,
                    "calculate_value": 1,
                    "calculate_value2": 2,
                    "perform_another_action": 1,
                    "perform_calculation": 1,
                    "perform_operation": 1
                },
                "FUN_0800040c": {
                    "calculate_difference": 4,
                    "calculate_duration": 1,
                    "calculate_sensor_time_difference": 1,
                    "calculate_time_difference": 1,
                    "calculate_value3": 2,
                    "get_duration": 1,
                    "perform_additional_action": 1
                },
                "FUN_0800042c": {
                    "calculate_checksum": 2,
                    "calculate_result": 1,
                    "calculate_value": 5,
                    "generate_value": 1,
                    "get_info": 1,
                    "get_setpoint": 1,
                    "perform_some_action": 1
                },
                "FUN_08000582": {
                    "print_message": 1
                },
                "FUN_080009c8": {
                    "check_condition": 4,
                    "check_condition1": 3,
                    "check_condition7": 1,
                    "check_conditions1": 1,
                    "check_value1": 1,
                    "perform_operation1": 1,
                    "process_data": 2,
                    "set_values": 1
                },
                "FUN_080009dc": {
                    "check_condition2": 3,
                    "check_condition5": 1,
                    "check_conditions2": 1,
                    "check_data": 1,
                    "check_error": 1,
                    "check_status": 1,
                    "check_validity": 1,
                    "check_value2": 1,
                    "perform_action": 1,
                    "perform_operation2": 1,
                    "validate_data": 1
                },
                "FUN_080009f0": {
                    "activate_relay": 1,
                    "check_condition2": 1,
                    "check_condition3": 1,
                    "check_condition4": 1,
                    "check_condition5": 1,
                    "check_conditions4": 1,
                    "check_status2": 1,
                    "check_value3": 1,
                    "perform_action": 1,
                    "perform_operation3": 1
                },
                "FUN_08000a04": {
                    "check_condition4": 1,
                    "check_time_setpoint": 1,
                    "check_value4": 1,
                    "do_operation": 1,
                    "execute_some_function": 1,
                    "get_data": 1,
                    "perform_action": 2,
                    "perform_action2": 1,
                    "perform_operation": 1,
                    "perform_operation4": 1,
                    "perform_task": 1,
                    "process_input": 1
                },
                "FUN_08000a18": {
                    "check_condition2": 1,
                    "check_condition3": 1,
                    "check_conditions3": 1,
                    "do_operation2": 1,
                    "perform_action": 1,
                    "perform_operation7": 1,
                    "process_data": 1
                },
                "FUN_08000cd0": {
                    "control_system_operation": 1,
                    "execute_sensor_data_processing": 1,
                    "handle_data_processing": 1,
                    "main_function": 1,
                    "perform_operation": 1,
                    "process_data": 6,
                    "update_and_check_data": 1,
                    "update_data": 1
                },
                "FUN_0800134e": {
                    "configure_data": 1,
                    "do_something": 1,
                    "print_message": 1,
                    "set_error_message": 1,
                    "update_data": 1,
                    "update_status3": 1
                },
                "FUN_0800135a": {
                    "clear_message": 1,
                    "initialize_data": 5,
                    "initialize_status": 1,
                    "initialize_status_message": 1,
                    "log_operation": 1,
                    "prepare_data": 1,
                    "print_function_name": 1,
                    "print_message": 1,
                    "print_message1": 1,
                    "update_data4": 1
                },
                "FUN_08001366": {
                    "append_status_message": 1,
                    "append_text": 1,
                    "configure_function": 1,
                    "modify_data": 2,
                    "print_message": 1,
                    "print_message2": 1,
                    "set_data": 2,
                    "set_flag": 1,
                    "set_message_flag": 1,
                    "update_data": 1,
                    "update_data5": 1,
                    "update_status2": 1
                },
                "FUN_080015f8": {
                    "allocate_memory": 11,
                    "create_data_file": 1,
                    "initialize_data": 1,
                    "update_threshold": 1
                },
                "FUN_080016b4": {
                    "check_condition3": 1,
                    "check_flag": 1,
                    "check_status2": 1,
                    "check_status3": 1,
                    "is_data_ready": 1,
                    "perform_action": 1
                },
                "FUN_080018f8": {
                    "initialize_data": 1,
                    "perform_operation": 1,
                    "update_data": 2,
                    "update_parameters": 1
                },
                "FUN_08001918": {
                    "initialize_data": 1,
                    "initialize_data3": 1,
                    "initialize_operation": 1,
                    "set_threshold": 1,
                    "set_timer": 4,
                    "set_timer_delay": 1,
                    "start_timer": 1,
                    "update_data": 1,
                    "update_data2": 2,
                    "update_timer": 1
                },
                "FUN_08001960": {
                    "configure_time_setpoint": 1,
                    "initialize_data": 2,
                    "initialize_data2": 2,
                    "print_data": 1,
                    "set_config_params": 1,
                    "set_initialization_data": 1,
                    "set_parameters": 1,
                    "set_timer": 1,
                    "set_values": 1,
                    "update_data": 3
                },
                "FUN_08001a44": {
                    "configure_time": 1,
                    "configure_timer": 1,
                    "enable_feature": 1,
                    "enable_functionality": 1,
                    "enable_timer": 1,
                    "initialize_data4": 1,
                    "perform_action": 2,
                    "set_variable": 1,
                    "start_timer": 1,
                    "update_data3": 2
                },
                "FUN_08005754": {
                    "calculate_value": 1,
                    "check_device_status": 1,
                    "check_if_possible": 1,
                    "check_sensor_connection": 1,
                    "check_status": 6,
                    "check_status2": 1,
                    "check_status3": 1,
                    "is_condition_met": 1,
                    "is_user_present": 1
                },
                "FUN_08005840": {
                    "set_flag": 1
                },
                "FUN_08005848": {
                    "perform_action2": 1,
                    "reset_data": 1,
                    "set_flag": 3,
                    "set_flag_state": 1,
                    "update_flag": 2,
                    "update_status": 4,
                    "update_status3": 1,
                    "update_time_status": 1
                },
                "FUN_08005890": {
                    "calculate_value": 3,
                    "check_input_validity": 1,
                    "check_time_status": 1,
                    "check_value": 1,
                    "get_function_result": 1,
                    "get_time": 1,
                    "perform_action1": 2,
                    "process_data": 1,
                    "process_value": 1,
                    "some_other_operation": 1,
                    "validate_input": 1
                },
                "FUN_080058e0": {
                    "get_counter": 1,
                    "get_counter_value": 5,
                    "get_current_time": 1,
                    "get_current_value": 2,
                    "get_current_value2": 1,
                    "get_sensor_data": 1,
                    "get_some_value3": 1,
                    "get_time": 1,
                    "get_timestamp": 1
                },
                "FUN_08005c96": {
                    "append_data": 1,
                    "append_to_buffer": 2,
                    "append_to_log": 1,
                    "append_to_message": 1,
                    "concatenate_strings": 1,
                    "convert_and_print": 1,
                    "copy_message": 1,
                    "format_data": 2,
                    "function2": 1,
                    "perform_action4": 1,
                    "print_info": 1,
                    "print_message": 1
                },
                "FUN_08005cd4": {
                    "print_message": 2
                },
                "FUN_08005d82": {
                    "display_message": 1,
                    "format_data": 1,
                    "function1": 1,
                    "perform_action3": 1,
                    "print_data": 4,
                    "print_message": 2,
                    "process_data": 1,
                    "update_counter": 1,
                    "write_message": 1,
                    "write_to_log": 1
                },
                "FUN_08005f2c": {
                    "format_buffer": 1,
                    "format_data": 2,
                    "format_message": 1,
                    "function3": 1,
                    "log_data": 1,
                    "more_operations": 1,
                    "perform_action5": 1,
                    "perform_operation5": 1,
                    "print_data2": 1,
                    "print_formatted_data": 1,
                    "print_status": 1,
                    "process_data2": 1,
                    "update_log_entry": 1
                },
                "FUN_08005f40": {
                    "another_operation": 1,
                    "format_data": 1,
                    "format_data2": 1,
                    "function4": 1,
                    "perform_action6": 1,
                    "perform_operation6": 1,
                    "print_data3": 1,
                    "print_error": 1,
                    "process_data": 1,
                    "process_data3": 1,
                    "transmit_data": 1,
                    "update_data": 1,
                    "update_entry": 1,
                    "update_status": 1
                },
                "PTR_s_Ready_2000003c": {
                    "ready_messages": 1
                },
                "allocateMemory": {
                    "allocate_memory": 1
                },
                "calculateDifference": {
                    "calculate_difference": 1
                },
                "checkCondition1": {
                    "check_condition1": 1
                },
                "checkCondition2": {
                    "check_condition2": 1
                },
                "checkCondition3": {
                    "check_condition3": 1
                },
                "configureTimer": {
                    "configure_timer": 1
                },
                "extraout_r1": {
                    "extra1": 1,
                    "extra_out1": 2,
                    "extra_result1": 4,
                    "extraout": 1,
                    "result4": 1,
                    "temp1": 1,
                    "temp2": 1,
                    "temp_var2": 1,
                    "temp_var4": 1,
                    "var4": 1
                },
                "extraout_r1_00": {
                    "extra2": 1,
                    "extra_out2": 2,
                    "extra_result2": 4,
                    "extraout_00": 1,
                    "result5": 1,
                    "temp2": 1,
                    "temp3": 1,
                    "temp_var3": 1,
                    "temp_var5": 1,
                    "var5": 1
                },
                "extraout_r1_01": {
                    "extra3": 1,
                    "extra_out3": 2,
                    "extra_result3": 4,
                    "extraout_01": 1,
                    "result6": 1,
                    "temp3": 1,
                    "temp4": 1,
                    "temp_var4": 1,
                    "temp_var6": 1,
                    "var6": 1
                },
                "formatData": {
                    "format_data": 1
                },
                "generateValue": {
                    "generate_value": 1
                },
                "getCounter": {
                    "counter": 1
                },
                "iVar3": {
                    "count": 1,
                    "counter": 4,
                    "index": 1,
                    "loop_counter": 1,
                    "result": 3,
                    "return_value": 3,
                    "status": 1,
                    "temp_var2": 1,
                    "value1": 1,
                    "var2": 2
                },
                "initializeData": {
                    "initialize_data": 1
                },
                "isConditionMet": {
                    "is_condition_met": 1
                },
                "performAction": {
                    "perform_action": 1
                },
                "printData": {
                    "print_data": 1
                },
                "printFormattedData": {
                    "print_formatted_data": 1
                },
                "processData": {
                    "process_data": 1
                },
                "processValue": {
                    "process_value": 1
                },
                "setFlag": {
                    "set_flag": 1
                },
                "setTimer": {
                    "set_timer": 1
                },
                "uVar1": {
                    "current_temperature": 1,
                    "lower_value": 1,
                    "new_value": 1,
                    "result": 3,
                    "result1": 6,
                    "return_value": 1,
                    "return_value1": 1,
                    "sensor_data": 1,
                    "value1": 3
                },
                "uVar2": {
                    "high_bits": 1,
                    "result2": 6,
                    "return_value2": 1,
                    "temp_value1": 1,
                    "temp_var1": 1,
                    "u_var32": 1,
                    "upper_value": 1,
                    "value1": 1,
                    "value2": 3,
                    "var1": 2
                },
                "uVar4": {
                    "low_bits": 1,
                    "result": 1,
                    "result3": 3,
                    "result4": 2,
                    "return_value4": 1,
                    "temp1": 1,
                    "temp_value2": 1,
                    "temp_var1": 1,
                    "temp_var3": 1,
                    "u_var40": 1,
                    "value2": 1,
                    "value3": 1,
                    "value4": 1,
                    "var3": 2
                },
                "uVar5": {
                    "result3": 1,
                    "result4": 2,
                    "result5": 2,
                    "result7": 1,
                    "return_value": 2,
                    "return_value5": 1,
                    "temp_result": 1,
                    "temp_value3": 1,
                    "temp_var5": 1,
                    "temp_var7": 1,
                    "u_var56": 1,
                    "value4": 1,
                    "value5": 1,
                    "var4": 1,
                    "var7": 1
                },
                "updateFlag": {
                    "update_flag": 1
                },
                "updateTimer": {
                    "update_timer": 1
                }
            },
            "called": [
                "FUN_0800042c",
                "FUN_08001918",
                "FUN_080009c8",
                "FUN_080009dc",
                "FUN_08005f2c",
                "FUN_08001a44",
                "FUN_08005cd4",
                "FUN_0800134e",
                "FUN_080016b4",
                "FUN_08000a18",
                "FUN_080018f8",
                "FUN_08001960",
                "FUN_08005c96",
                "FUN_0800135a",
                "FUN_0800040c",
                "FUN_080015f8",
                "FUN_08005d82",
                "FUN_08000a04",
                "FUN_08000194",
                "FUN_08005754",
                "FUN_08001366",
                "FUN_080058e0",
                "FUN_08005f40",
                "FUN_08005848",
                "FUN_080009f0",
                "FUN_08005890"
            ],
            "calling": [
                "FUN_08005f6c"
            ],
            "code": "\nvoid process_data_08000cd0(void)\n\n{\n  uint result1;\n  undefined4 result2;\n  int counter;\n  undefined4 result3;\n  undefined4 extra_result1;\n  undefined4 extra_result2;\n  undefined4 extra_result3;\n  undefined8 return_value;\n  \n  result1 = FUN_080058e0();\n  if (DAT_200001b4 < result1) {\n    DAT_200001b4 = DAT_200001b4 + 1000;\n    return_value = FUN_080015f8(&DAT_2000024c,0);\n    result3 = (undefined4)((ulonglong)return_value >> 0x20);\n    result2 = (undefined4)return_value;\n    DAT_20000188 = result2;\n    DAT_2000018c = result3;\n    counter = FUN_080009c8(result2,result3,0,0x40c38800);\n    if (((counter != 0) || (counter = FUN_080009c8(result2,result3,0,0x40c38880), counter != 0)) ||\n       (counter = FUN_080009c8(result2,result3,0,0x40c38900), counter != 0)) {\n      DAT_20000238 = 7;\n      DAT_20000239 = '\\0';\n    }\n  }\n  result1 = FUN_080058e0();\n  result2 = DAT_20000060;\n  if (DAT_200001b0 < result1) {\n    DAT_200001b0 = DAT_200001b0 + 1000;\n    if (DAT_20000239 == '\\x01') {\n      counter = FUN_08005890(DAT_20000060);\n      FUN_08005848(result2,counter == 0);\n      DAT_20000250 = DAT_20000250 + 1;\n      FUN_08005d82(&DAT_2000036c,DAT_20000250,10);\n      FUN_08005c96(&DAT_2000036c,&DAT_08007368);\n      FUN_08005f2c(&DAT_2000036c,extra_result1,DAT_20000240,DAT_20000244,2);\n      FUN_08005c96(&DAT_2000036c,&DAT_08007368);\n      FUN_08005f2c(&DAT_2000036c,extra_result2,DAT_20000188,DAT_2000018c,2);\n      FUN_08005c96(&DAT_2000036c,&DAT_08007368);\n      FUN_08005f40(&DAT_2000036c,extra_result3,DAT_200001b8,DAT_200001bc,2);\n    }\n    else {\n      FUN_08005848(DAT_20000060,1);\n    }\n    FUN_0800135a(&DAT_20000194);\n    FUN_08005c96(&DAT_20000194,(&PTR_s_Ready_2000003c)[DAT_20000238]);\n    FUN_08001366(&DAT_20000194,0,1);\n    if (DAT_20000238 == 7) {\n      FUN_08005c96(&DAT_20000194,\"TC Error!\");\n    }\n    else {\n      FUN_08005f2c(&DAT_20000194,2,DAT_20000188,DAT_2000018c,2);\n      FUN_0800134e(&DAT_20000194,0);\n      FUN_08005c96(&DAT_20000194,&DAT_08007378);\n    }\n  }\n  result3 = DAT_2000018c;\n  result2 = DAT_20000188;\n  switch(DAT_20000238) {\n  case 0:\n    counter = FUN_08000a04(DAT_20000188,DAT_2000018c,0,0x40490000);\n    if (counter == 0) {\n      if (DAT_20000248 == '\\x01') {\n        FUN_08005cd4(&DAT_2000036c,\"Time Setpoint Input Output\");\n        DAT_20000250 = 0;\n        DAT_2000025c = FUN_080058e0();\n        DAT_20000240 = 0;\n        DAT_20000244 = 0x4062c000;\n        return_value = FUN_0800042c(DAT_20000258);\n        FUN_08001960(&DAT_200001c0,(int)((ulonglong)return_value >> 0x20),0,0,return_value);\n        FUN_08001918(&DAT_200001c0,1000);\n        FUN_08001a44(&DAT_200001c0,1);\n        DAT_20000238 = 1;\n      }\n    }\n    else {\n      DAT_20000238 = 6;\n    }\n    break;\n  case 1:\n    DAT_20000239 = '\\x01';\n    counter = FUN_08000a04(DAT_20000188,DAT_2000018c,0,0x4062c000);\n    if (counter != 0) {\n      return_value = FUN_080058e0();\n      DAT_20000254 = (int)return_value + 9000;\n      FUN_080018f8(&DAT_200001c0,(int)((ulonglong)return_value >> 0x20),0,0x4072c000,0x9999999a,0x3fa99999,\n                   0,0x406f4000);\n      DAT_20000240 = 0;\n      DAT_20000244 = 0x40636000;\n      DAT_20000238 = 2;\n    }\n    break;\n  case 2:\n    result1 = FUN_080058e0();\n    if (DAT_20000254 < result1) {\n      counter = FUN_080058e0();\n      DAT_20000254 = counter + 9000;\n      return_value = FUN_08000194(DAT_20000240,DAT_20000244,0,0x40140000);\n      DAT_20000244 = (undefined4)((ulonglong)return_value >> 0x20);\n      DAT_20000240 = (undefined4)return_value;\n      return_value = FUN_08000a18(DAT_20000240,DAT_20000244,0,0x40690000);\n      if ((int)return_value != 0) {\n        FUN_080018f8(&DAT_200001c0,(int)((ulonglong)return_value >> 0x20),0,0x4072c000,0x9999999a,\n                     0x3fa99999,0,0x4075e000);\n        DAT_20000240 = 0;\n        DAT_20000244 = 0x406f4000;\n        DAT_20000238 = 3;\n      }\n    }\n    break;\n  case 3:\n    return_value = FUN_08000a04(DAT_20000188,DAT_2000018c,0,0x406ea000);\n    if ((int)return_value != 0) {\n      FUN_080018f8(&DAT_200001c0,(int)((ulonglong)return_value >> 0x20),0,0x4072c000,0x9999999a,0x3fa99999,\n                   0,0x4075e000);\n      DAT_20000240 = 0;\n      DAT_20000244 = 0x40590000;\n      DAT_20000238 = 4;\n    }\n    break;\n  case 4:\n    counter = FUN_080009f0(DAT_20000188,DAT_2000018c,0,0x40590000);\n    if (counter != 0) {\n      counter = FUN_080058e0();\n      DAT_20000180 = counter + 1000;\n      FUN_08005848(DAT_20000004,1);\n      DAT_20000239 = '\\0';\n      DAT_20000238 = 5;\n    }\n    break;\n  case 5:\n    result1 = FUN_080058e0();\n    if (DAT_20000180 < result1) {\n      FUN_08005848(DAT_20000004,0);\n      DAT_20000238 = 0;\n    }\n    break;\n  case 6:\n    counter = FUN_080009dc(DAT_20000188,DAT_2000018c,0,0x40490000);\n    if (counter != 0) {\n      DAT_20000238 = 0;\n    }\n    break;\n  case 7:\n    counter = FUN_080009c8(DAT_20000188,DAT_2000018c,0,0x40c38800);\n    if (((counter == 0) && (counter = FUN_080009c8(result2,result3,0,0x40c38880), counter == 0)) &&\n       (counter = FUN_080009c8(result2,result3,0,0x40c38900), counter == 0)) {\n      DAT_20000238 = 0;\n    }\n    else {\n      DAT_20000238 = 7;\n    }\n  }\n  if ((DAT_20000248 == '\\x01') && (DAT_20000239 == '\\x01')) {\n    DAT_20000239 = '\\0';\n    DAT_20000238 = 0;\n  }\n  if (DAT_20000184 == '\\x01') {\n    counter = FUN_08005754(DAT_20000068);\n    if (counter == 0) {\n      counter = FUN_080058e0();\n      if (0x32 < (uint)(counter - DAT_20000190)) {\n        DAT_20000184 = '\\x02';\n      }\n    }\n    else {\n      DAT_20000184 = '\\0';\n    }\n  }\n  else if (DAT_20000184 == '\\0') {\n    DAT_20000248 = '\\0';\n    counter = FUN_08005754(DAT_20000068);\n    if (counter == 0) {\n      DAT_20000190 = FUN_080058e0();\n      DAT_20000184 = '\\x01';\n    }\n  }\n  else if ((DAT_20000184 == '\\x02') && (counter = FUN_08005754(DAT_20000068), counter != 0)) {\n    DAT_20000248 = '\\x01';\n    DAT_20000184 = '\\0';\n  }\n  if (DAT_20000239 == '\\x01') {\n    counter = FUN_080058e0();\n    FUN_080016b4(&DAT_200001c0);\n    if (DAT_20000258 < (uint)(counter - DAT_2000025c)) {\n      DAT_2000025c = DAT_2000025c + DAT_20000258;\n    }\n    return_value = FUN_0800040c(counter - DAT_2000025c);\n    counter = FUN_080009dc((int)return_value,(int)((ulonglong)return_value >> 0x20),DAT_200001b8,DAT_200001bc);\n    if (counter == 0) {\n      FUN_08005848(DAT_20000064,0);\n    }\n    else {\n      FUN_08005848(DAT_20000064,1);\n    }\n  }\n  else {\n    FUN_08005848(DAT_20000064,0);\n  }\n  return;\n}\n\n",
            "current_name": "process_data_08000cd0",
            "entrypoint": "0x08000cd0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000cd0": "process_data_08000cd0",
                "extraout_r1": "extra_result1",
                "extraout_r1_00": "extra_result2",
                "extraout_r1_01": "extra_result3",
                "iVar3": "counter",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar4": "result3",
                "uVar5": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001294": {
            "additional_data": {
                "FUN_08001294": {
                    "assign_parameters": 1,
                    "initialize_data": 1,
                    "set_param_pointers": 1,
                    "set_param_values": 2,
                    "set_parameters": 8,
                    "set_params": 8,
                    "set_undefined_parameters": 1,
                    "store_parameters": 1,
                    "store_params": 3,
                    "store_params_in_memory": 1,
                    "update_data": 1,
                    "update_param_values": 1,
                    "update_params": 1,
                    "update_paramters": 1
                },
                "param_1": {
                    "base_address": 3,
                    "data": 1,
                    "data_address": 1,
                    "data_pointer": 1,
                    "memory_address": 1,
                    "obj_addr": 1,
                    "obj_pointer": 1,
                    "object_address": 14,
                    "object_pointer": 1,
                    "object_ptr": 1,
                    "param_struct_address": 1,
                    "struct_address": 1,
                    "struct_pointer": 2,
                    "struct_ptr": 1,
                    "target_address": 1
                },
                "param_2": {
                    "param1_value": 1,
                    "param2": 3,
                    "param2_value": 4,
                    "param_2_value": 2,
                    "param_value1": 1,
                    "parameter1": 2,
                    "parameter2": 1,
                    "parameter_1": 1,
                    "value1": 13,
                    "value2": 1,
                    "value_1": 2
                },
                "param_3": {
                    "param2_value": 1,
                    "param3": 3,
                    "param3_value": 4,
                    "param_3_value": 2,
                    "param_value2": 1,
                    "parameter2": 2,
                    "parameter3": 1,
                    "parameter_2": 1,
                    "value2": 13,
                    "value3": 1,
                    "value_2": 2
                },
                "param_4": {
                    "param3_value": 1,
                    "param4": 3,
                    "param4_value": 4,
                    "param_4_value": 2,
                    "param_value3": 1,
                    "parameter3": 2,
                    "parameter4": 1,
                    "parameter_3": 1,
                    "value3": 13,
                    "value4": 1,
                    "value_3": 2
                },
                "param_5": {
                    "param4_value": 1,
                    "param5": 3,
                    "param5_value": 4,
                    "param_5_value": 2,
                    "param_value4": 1,
                    "parameter4": 2,
                    "parameter5": 1,
                    "parameter_4": 1,
                    "value4": 13,
                    "value5": 1,
                    "value_4": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_080013a4"
            ],
            "code": "\nvoid set_undefined_parameters_08001294(int object_address,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *(undefined *)(object_address + 0x18) = value1;\n  *(undefined *)(object_address + 0x19) = value2;\n  *(undefined *)(object_address + 0x1a) = value3;\n  *(undefined *)(object_address + 0x1b) = value4;\n  return;\n}\n\n",
            "current_name": "set_undefined_parameters_08001294",
            "entrypoint": "0x08001294",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001294": "set_undefined_parameters_08001294",
                "param_1": "object_address",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080012a2": {
            "additional_data": {
                "FUN_080012a2": {
                    "apply_function_three_times": 1,
                    "execute_function": 9,
                    "execute_function_three_times": 1,
                    "execute_function_thrice": 1,
                    "execute_operation": 1,
                    "execute_operations": 3,
                    "execute_three_function_calls": 1,
                    "execute_twice": 1,
                    "initialize_communication": 1,
                    "initialize_values": 1,
                    "perform_action": 1,
                    "print_data_from_offset": 1,
                    "print_multiple_times": 1,
                    "print_sequence": 1,
                    "print_three_values": 1,
                    "process_data": 4,
                    "process_function": 1,
                    "process_param": 1
                },
                "FUN_08005848": {
                    "call_function_with_params": 1,
                    "call_special_function": 1,
                    "call_sub_function": 5,
                    "execute_operation": 1,
                    "execute_sub_function": 4,
                    "handle_data": 1,
                    "perform_action": 1,
                    "perform_operation": 5,
                    "print_data": 1,
                    "print_value": 1,
                    "print_with_options": 1,
                    "process_sub_function": 2,
                    "send_data": 1
                },
                "param_1": {
                    "arg": 1,
                    "base_address": 3,
                    "comm_buffer": 1,
                    "data": 1,
                    "data_address": 2,
                    "data_ptr": 1,
                    "data_structure": 1,
                    "function_input": 1,
                    "function_param": 2,
                    "input": 4,
                    "input_data": 1,
                    "input_param": 2,
                    "input_value": 2,
                    "offset": 1,
                    "operation_index": 1,
                    "operation_parameter": 1,
                    "param": 3,
                    "param1": 1,
                    "sequence_length": 1
                },
                "param_2": {
                    "action_type": 1,
                    "arg1": 2,
                    "flag": 4,
                    "operation_flag": 1,
                    "operation_type": 1,
                    "param1": 2,
                    "param2": 3,
                    "param_2": 1,
                    "param_value_1": 1,
                    "special_parameter1": 1,
                    "sub_func_param1": 1,
                    "sub_function_param1": 2
                },
                "param_3": {
                    "action_param": 1,
                    "arg1": 1,
                    "arg2": 2,
                    "count": 1,
                    "extra_parameter": 1,
                    "index": 1,
                    "option": 1,
                    "param2": 2,
                    "param3": 4,
                    "param_3": 1,
                    "param_value_2": 1,
                    "special_parameter2": 1,
                    "sub_func_param2": 1,
                    "sub_function_param2": 2
                },
                "param_4": {
                    "arg2": 1,
                    "arg3": 2,
                    "data": 3,
                    "data_array": 1,
                    "data_array_ptr": 1,
                    "data_buffer": 2,
                    "data_pointer": 1,
                    "param3": 2,
                    "param4": 3,
                    "param_4": 1,
                    "param_value_3": 1,
                    "pointer": 1,
                    "sub_func_param3": 1,
                    "sub_function_data": 1,
                    "sub_function_param3": 1
                }
            },
            "called": [
                "FUN_08005848"
            ],
            "calling": [
                "FUN_080012e8",
                "FUN_080012c0"
            ],
            "code": "\nvoid execute_function_thrice_080012a2(int input)\n\n{\n  FUN_08005848(*(undefined *)(input + 10),0);\n  FUN_08005848(*(undefined *)(input + 10),1);\n  FUN_08005848(*(undefined *)(input + 10),0);\n  return;\n}\n\n",
            "current_name": "execute_function_thrice_080012a2",
            "entrypoint": "0x080012a2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080012a2": "execute_function_thrice_080012a2",
                "param_1": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080012c0": {
            "additional_data": {
                "FUN_080012a2": {
                    "cleanup": 2,
                    "cleanup_data": 3,
                    "cleanup_memory": 1,
                    "cleanup_process": 1,
                    "reset_data": 1
                },
                "FUN_080012c0": {
                    "decode_and_process_data": 1,
                    "extract_bits_and_call": 1,
                    "extract_bits_and_call_function": 1,
                    "process_binary_data": 1,
                    "process_data": 19,
                    "process_input": 2,
                    "process_parameters": 1,
                    "reverse_and_modify_bits": 1,
                    "reverse_and_update_bits": 2,
                    "reverse_binary": 1,
                    "reverse_bit_order": 1
                },
                "FUN_08005848": {
                    "modify_bitwise_value": 1,
                    "process_byte": 5,
                    "process_element": 1,
                    "update_bit": 1
                },
                "param_1": {
                    "address": 3,
                    "buffer_address": 1,
                    "data": 1,
                    "data_address": 10,
                    "data_array": 2,
                    "data_offset": 2,
                    "data_pointer": 2,
                    "data_ptr": 5,
                    "data_start": 1,
                    "input_address": 1,
                    "input_array": 1,
                    "input_data": 1,
                    "memory_address": 1
                },
                "param_2": {
                    "bit_mask": 1,
                    "bit_shift": 1,
                    "bit_value": 2,
                    "bitmask": 4,
                    "control_bit": 1,
                    "flag": 2,
                    "flags": 1,
                    "input": 1,
                    "input_data": 1,
                    "input_value": 2,
                    "mask": 7,
                    "param": 1,
                    "param_value": 2,
                    "parameter": 1,
                    "value": 3,
                    "value_to_shift": 1
                },
                "uVar1": {
                    "bit_index": 3,
                    "counter": 7,
                    "i": 6,
                    "index": 9,
                    "iteration": 4,
                    "iteration_count": 1,
                    "iterator": 1
                }
            },
            "called": [
                "FUN_080012a2",
                "FUN_08005848"
            ],
            "calling": [
                "FUN_080013a4",
                "FUN_08001310"
            ],
            "code": "\nvoid decode_and_process_data_080012c0(int data_address,int mask)\n\n{\n  uint index;\n  \n  for (index = 0; (int)index < 4; index = index + 1) {\n    FUN_08005848(*(undefined *)(data_address + index + 0xb),mask >> (index & 0xff) & 1);\n  }\n  FUN_080012a2(data_address);\n  return;\n}\n\n",
            "current_name": "decode_and_process_data_080012c0",
            "entrypoint": "0x080012c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080012c0": "decode_and_process_data_080012c0",
                "param_1": "data_address",
                "param_2": "mask",
                "uVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080012e8": {
            "additional_data": {
                "FUN_080012a2": {
                    "clean_up_address": 1,
                    "cleanup": 1,
                    "cleanup_data": 1,
                    "cleanup_function": 1,
                    "finalize_reverse": 1
                },
                "FUN_080012e8": {
                    "extract_and_process_bits": 2,
                    "extract_bits_and_call_functions": 1,
                    "process_and_execute_bits": 1,
                    "process_binary_data": 1,
                    "process_bits": 2,
                    "process_data": 10,
                    "process_function": 1,
                    "process_params": 1,
                    "reverse_and_modify_bits": 1,
                    "reverse_and_process_bits": 1,
                    "reverse_and_update_bits": 2,
                    "reverse_binary": 2,
                    "reverse_binary_bits": 1,
                    "reverse_binary_data": 1,
                    "reverse_bits": 2
                },
                "FUN_08005848": {
                    "process_bit": 2,
                    "process_bit_operation": 1,
                    "process_byte": 1,
                    "process_data": 1,
                    "process_data_byte": 1
                },
                "param_1": {
                    "address": 4,
                    "array_address": 1,
                    "base_address": 1,
                    "binary_address": 2,
                    "data": 1,
                    "data_address": 8,
                    "data_array": 2,
                    "data_pointer": 1,
                    "data_ptr": 3,
                    "input": 1,
                    "input_address": 2,
                    "input_array": 2,
                    "input_parameter": 1,
                    "input_ptr": 1,
                    "start_address": 1
                },
                "param_2": {
                    "bit": 1,
                    "bit_mask": 4,
                    "bit_pattern": 2,
                    "bit_values": 1,
                    "bitmask": 3,
                    "bits": 1,
                    "data_to_reverse": 1,
                    "flag": 1,
                    "flags": 1,
                    "input": 2,
                    "input_number": 1,
                    "input_value": 6,
                    "mask": 3,
                    "shift_value": 2,
                    "value": 2
                },
                "param_4": {
                    "buffer": 1
                },
                "uVar1": {
                    "bit_index": 10,
                    "bit_iterator": 1,
                    "bit_position": 2,
                    "i": 2,
                    "index": 9,
                    "iteration": 1,
                    "iteration_count": 3,
                    "iterator": 1,
                    "loop_counter": 1
                }
            },
            "called": [
                "FUN_080012a2",
                "FUN_08005848"
            ],
            "calling": [
                "FUN_08001310"
            ],
            "code": "\nvoid process_binary_data_080012e8(int data_address,int input_value)\n\n{\n  uint bit_index;\n  \n  for (bit_index = 0; (int)bit_index < 8; bit_index = bit_index + 1) {\n    FUN_08005848(*(undefined *)(data_address + bit_index + 0xb),input_value >> (bit_index & 0xff) & 1);\n  }\n  FUN_080012a2(data_address);\n  return;\n}\n\n",
            "current_name": "process_binary_data_080012e8",
            "entrypoint": "0x080012e8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080012e8": "process_binary_data_080012e8",
                "param_1": "data_address",
                "param_2": "input_value",
                "uVar1": "bit_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001310": {
            "additional_data": {
                "0x10": {
                    "reverse_flag": 1
                },
                "DAT_0800xxxx": {
                    "data_flag": 1
                },
                "FUNC_08005848": {
                    "process_sub_function": 1
                },
                "FUN_080012c0": {
                    "convert_data": 1,
                    "execute_operation": 1,
                    "handle_data_path_a": 1,
                    "manipulate_data": 1,
                    "modify_data": 2,
                    "perform_data_operation": 1,
                    "perform_operation_1": 1,
                    "process_data3": 1,
                    "process_data_alternate": 1,
                    "process_data_block": 1,
                    "process_data_chunks": 1,
                    "process_data_part_one": 1,
                    "process_data_sub": 1,
                    "process_data_with_flags": 1,
                    "process_flagged_data": 1,
                    "process_flags": 1,
                    "process_sub_data": 1,
                    "process_sub_function_b": 1,
                    "process_when_flag_not_set": 1,
                    "reverse_bits": 1,
                    "reverse_data1": 2,
                    "reverse_nibble": 2,
                    "shift_data": 1
                },
                "FUN_080012e8": {
                    "handle_data_path_b": 1,
                    "perform_operation_2": 1,
                    "process_data": 1,
                    "process_data4": 1,
                    "process_data_part_two": 1,
                    "process_flagged_data": 1,
                    "process_sub_function_a": 1,
                    "process_unflagged_data": 1,
                    "process_when_flag_set": 1,
                    "reverse_data": 13,
                    "reverse_data2": 2,
                    "reverse_data_sub": 1,
                    "reverse_operation": 1
                },
                "FUN_08001310": {
                    "execute_function": 1,
                    "execute_operation": 1,
                    "process_data": 26,
                    "process_function": 2
                },
                "FUN_08005848": {
                    "execute_function": 5,
                    "execute_helper_function": 1,
                    "execute_operations": 1,
                    "handle_first": 1,
                    "helper_function_1": 1,
                    "process_data": 2,
                    "process_data2": 1,
                    "process_data_helper": 4,
                    "process_data_sub": 1,
                    "process_data_subfunction": 1,
                    "process_data_with_params": 1,
                    "process_input": 1,
                    "process_sub": 1,
                    "process_sub_data": 1,
                    "process_sub_function": 1,
                    "process_value": 1,
                    "update_data": 1
                },
                "PARAM_08005848": {
                    "subfunction_parameter": 1
                },
                "PTR_0800xxxx": {
                    "ptr_data": 1
                },
                "byte": {
                    "flags": 1
                },
                "param_1": {
                    "address": 3,
                    "data": 7,
                    "data_address": 4,
                    "data_pointer": 4,
                    "data_ptr": 6,
                    "input": 2,
                    "input_address": 1,
                    "input_param": 1,
                    "input_ptr": 1,
                    "input_variable": 1,
                    "subfunc_param1": 1
                },
                "param_2": {
                    "data": 3,
                    "data_size": 4,
                    "data_value": 7,
                    "flag": 1,
                    "flags": 7,
                    "subfunc_param2": 1,
                    "value": 7,
                    "value_param": 1
                },
                "param_3": {
                    "arg1": 11,
                    "arg_1": 1,
                    "param": 1,
                    "param1": 6,
                    "param3": 2,
                    "param_3": 2,
                    "param_a": 5,
                    "subfunc_param3": 1,
                    "undefined_param1": 1,
                    "var2": 1
                },
                "param_4": {
                    "arg": 1,
                    "arg2": 11,
                    "arg_2": 1,
                    "param2": 6,
                    "param4": 2,
                    "param_4": 2,
                    "param_b": 5,
                    "subfunc_param4": 1,
                    "undefined_param2": 1,
                    "var3": 1
                }
            },
            "called": [
                "FUN_080012e8",
                "FUN_080012c0",
                "FUN_08005848"
            ],
            "calling": [
                "FUN_0800134e",
                "FUN_08001366",
                "FUN_080013a4",
                "FUN_08001550",
                "FUN_0800135a",
                "FUN_0800138e"
            ],
            "code": "\nvoid process_data_08001310(int data,uint flags,undefined4 arg1,undefined4 arg2)\n\n{\n  FUN_08005848(*(undefined *)(data + 8),arg1,arg1,arg2,arg2);\n  if (*(char *)(data + 9) != -1) {\n    FUN_08005848(*(char *)(data + 9),0);\n  }\n  if ((*(flags *)(data + 0x13) & 0x10) == 0) {\n    FUN_080012c0(data,flags >> 4);\n    FUN_080012c0(data,flags);\n    return;\n  }\n  FUN_080012e8(data,flags);\n  return;\n}\n\n",
            "current_name": "process_data_08001310",
            "entrypoint": "0x08001310",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001310": "process_data_08001310",
                "byte": "flags",
                "param_1": "data",
                "param_2": "flags",
                "param_3": "arg1",
                "param_4": "arg2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800134e": {
            "additional_data": {
                "FUN_08001310": {
                    "execute_helper": 1,
                    "execute_operation": 1,
                    "execute_process": 1,
                    "execute_sub_function": 1,
                    "initialize_output": 1,
                    "perform_action": 2,
                    "perform_operation": 10,
                    "perform_task": 1,
                    "process_data": 1,
                    "process_sub": 1,
                    "process_subfunction": 1
                },
                "FUN_0800134e": {
                    "execute": 1,
                    "execute_action": 1,
                    "execute_and_return": 1,
                    "execute_and_return_status": 1,
                    "execute_function": 6,
                    "execute_main_function": 1,
                    "execute_reverse_operation": 1,
                    "execute_task": 2,
                    "improve_and_return_value": 1,
                    "initialize": 1,
                    "initialize_and_execute": 1,
                    "initialize_and_return": 3,
                    "initialize_and_return_one": 4,
                    "initialize_and_return_value": 1,
                    "process_data": 3,
                    "process_input": 1,
                    "update_and_return_value": 1
                },
                "param_1": {
                    "arg1": 6,
                    "arg_1": 1,
                    "argument_1": 1,
                    "data_1": 1,
                    "data_ptr": 1,
                    "input": 1,
                    "input1": 3,
                    "input_1": 6,
                    "input_param": 2,
                    "input_param1": 1,
                    "input_param_1": 2,
                    "input_parameter": 2,
                    "input_val_1": 1,
                    "input_value_1": 1,
                    "operation_arg1": 1,
                    "task_input": 1
                },
                "param_2": {
                    "arg2": 6,
                    "arg_2": 1,
                    "argument_2": 1,
                    "counter": 3,
                    "data_2": 1,
                    "data_size": 1,
                    "input2": 3,
                    "input_2": 6,
                    "input_param2": 1,
                    "input_param_2": 2,
                    "input_val_2": 1,
                    "input_value_2": 1,
                    "operation_arg2": 1,
                    "size": 2,
                    "task_value": 1
                },
                "param_3": {
                    "arg3": 5,
                    "arg_3": 1,
                    "constant": 2,
                    "constant_value": 1,
                    "data_3": 1,
                    "flag": 3,
                    "flag_param": 1,
                    "input3": 1,
                    "input_3": 1,
                    "input_param_3": 1,
                    "operation_arg3": 1,
                    "param_3": 2,
                    "task_flag": 1,
                    "unused_param": 1,
                    "unused_parameter": 1
                },
                "param_4": {
                    "arg4": 7,
                    "arg_4": 1,
                    "buffer": 1,
                    "config_param": 1,
                    "data": 3,
                    "data_4": 1,
                    "input4": 1,
                    "input_4": 1,
                    "input_param_4": 2,
                    "output": 3,
                    "output_param": 1,
                    "output_value": 1,
                    "param_4": 2,
                    "pointer_to_data": 1,
                    "result": 1,
                    "shared_param": 1,
                    "task_result": 1,
                    "temp": 1,
                    "unused_param": 1
                }
            },
            "called": [
                "FUN_08001310"
            ],
            "calling": [
                "FUN_08000cd0"
            ],
            "code": "\nundefined4 improve_and_return_value_0800134e(undefined4 input_1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  FUN_08001310(input_1,arg2,1,arg4,arg4);\n  return 1;\n}\n\n",
            "current_name": "improve_and_return_value_0800134e",
            "entrypoint": "0x0800134e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800134e": "improve_and_return_value_0800134e",
                "param_1": "input_1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800135a": {
            "additional_data": {
                "FUN_08001310": {
                    "execute_sub_function": 1,
                    "manipulate_data": 1,
                    "process_data": 4,
                    "process_input": 1,
                    "sub_function": 1
                },
                "FUN_0800135a": {
                    "execute_code": 1,
                    "execute_function": 1,
                    "initialize_and_process": 1,
                    "initialize_data": 5,
                    "initialize_function": 18,
                    "initialize_operation": 1,
                    "initialize_parameters": 2,
                    "initialize_variables": 1,
                    "process_data": 1
                },
                "param_1": {
                    "arg1": 7,
                    "argument_1": 2,
                    "data1": 2,
                    "data_buffer": 1,
                    "data_pointer": 1,
                    "first_parameter": 1,
                    "input1": 2,
                    "input_1": 2,
                    "input_data": 1,
                    "input_param": 2,
                    "input_param1": 3,
                    "input_parameter_1": 1,
                    "input_value1": 1,
                    "param1": 3,
                    "param_a": 1,
                    "value_1": 1
                },
                "param_2": {
                    "arg2": 6,
                    "argument_2": 2,
                    "buffer_size": 1,
                    "data2": 2,
                    "flag": 2,
                    "input2": 2,
                    "input_2": 2,
                    "input_param2": 2,
                    "input_parameter_2": 1,
                    "input_value2": 1,
                    "param2": 3,
                    "param_b": 1,
                    "second_parameter": 1,
                    "status_flag": 1,
                    "value_2": 1
                },
                "param_3": {
                    "arg3": 6,
                    "argument_3": 2,
                    "data3": 2,
                    "input3": 2,
                    "input_3": 2,
                    "input_param3": 2,
                    "input_parameter_3": 1,
                    "input_value3": 1,
                    "param3": 3,
                    "param_c": 1,
                    "third_parameter": 1,
                    "unused": 1,
                    "unused_param": 2,
                    "unused_parameter": 1,
                    "value_3": 1
                },
                "param_4": {
                    "arg4": 7,
                    "argument_4": 2,
                    "data4": 2,
                    "data_size": 1,
                    "fourth_parameter": 1,
                    "input4": 2,
                    "input_4": 2,
                    "input_param4": 3,
                    "input_parameter_4": 1,
                    "input_value4": 1,
                    "output_data": 1,
                    "output_param": 2,
                    "param4": 3,
                    "param_d": 1,
                    "user_data": 1,
                    "value_4": 1
                }
            },
            "called": [
                "FUN_08001310"
            ],
            "calling": [
                "FUN_08000cd0",
                "FUN_080013a4",
                "FUN_08000bcc"
            ],
            "code": "\nvoid initialize_function_0800135a(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  FUN_08001310(arg1,1,0,arg4,arg4);\n  return;\n}\n\n",
            "current_name": "initialize_function_0800135a",
            "entrypoint": "0x0800135a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800135a": "initialize_function_0800135a",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001366": {
            "additional_data": {
                "FUN_08001310": {
                    "helper_function": 1,
                    "perform_action": 1,
                    "process_data_internal": 1,
                    "process_sub_data": 1,
                    "sub_function": 1
                },
                "FUN_08001366": {
                    "copy_and_process_data": 1,
                    "execute_function": 1,
                    "process_data": 25,
                    "process_function": 2,
                    "process_input": 2
                },
                "cVar1": {
                    "byte_value": 6,
                    "char_val": 1,
                    "char_value": 6,
                    "char_var": 1,
                    "character": 5,
                    "character_value": 1,
                    "character_var": 1,
                    "current_char": 3,
                    "new_value": 1,
                    "next_char": 1,
                    "next_character": 1,
                    "selected_char": 1,
                    "selected_character": 2,
                    "temp_var": 1
                },
                "param_1": {
                    "address": 1,
                    "base_address": 1,
                    "data": 2,
                    "data_address": 3,
                    "data_buffer": 1,
                    "data_offset": 1,
                    "data_pointer": 8,
                    "data_ptr": 3,
                    "data_size": 1,
                    "input": 2,
                    "input_address": 4,
                    "input_buffer": 1,
                    "input_param": 1,
                    "input_param1": 1,
                    "input_pointer": 1
                },
                "param_2": {
                    "char_param": 1,
                    "char_value": 4,
                    "character": 4,
                    "flag": 16,
                    "input_char": 1,
                    "input_param2": 1,
                    "modifier": 1,
                    "offset": 2,
                    "param2": 1
                },
                "param_3": {
                    "buffer_size": 1,
                    "count": 1,
                    "data_size": 1,
                    "input_length": 1,
                    "input_param3": 1,
                    "length": 7,
                    "limit": 10,
                    "max_index": 1,
                    "max_length": 4,
                    "max_size": 1,
                    "max_value": 1,
                    "size": 2
                },
                "param_4": {
                    "additional_data": 1,
                    "data": 1,
                    "extra_param": 1,
                    "input": 1,
                    "input_param4": 1,
                    "param": 7,
                    "param4": 11,
                    "param_4": 2,
                    "param_four": 1,
                    "parameter": 2,
                    "some_data": 1,
                    "undefined": 1,
                    "unused_param": 1
                }
            },
            "called": [
                "FUN_08001310"
            ],
            "calling": [
                "FUN_08000cd0",
                "FUN_08000bcc"
            ],
            "code": "\nvoid copy_and_process_data_08001366(int data_pointer,char flag,uint limit,undefined4 param4)\n\n{\n  char char_value;\n  \n  if (3 < limit) {\n    limit = 3;\n  }\n  if ((int)(uint)*(byte *)(data_pointer + 0x17) <= (int)limit) {\n    limit = *(byte *)(data_pointer + 0x17) - 1 & 0xff;\n  }\n  char_value = *(char *)(limit + data_pointer + 0x18);\n  FUN_08001310(data_pointer,flag + char_value | 0x80,0,char_value,param4);\n  return;\n}\n\n",
            "current_name": "copy_and_process_data_08001366",
            "entrypoint": "0x08001366",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001366": "copy_and_process_data_08001366",
                "cVar1": "char_value",
                "param_1": "data_pointer",
                "param_2": "flag",
                "param_3": "limit",
                "param_4": "param4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800138e": {
            "additional_data": {
                "FUN_08001310": {
                    "call_other_function": 1,
                    "call_sub_function": 4,
                    "invoke_function": 1,
                    "process_input": 2,
                    "update_data": 2
                },
                "FUN_0800138e": {
                    "modify_and_call_function": 1,
                    "modify_flags_and_call_function": 1,
                    "set_and_call_function": 1,
                    "set_flag_and_call_function": 8,
                    "set_flag_and_update": 1,
                    "set_flag_and_update_value": 2,
                    "set_fourth_bit_and_call_other_function": 1,
                    "set_permission_flag": 1,
                    "update_and_call_sub_function": 1,
                    "update_byte_value": 1,
                    "update_data_and_call_function": 1,
                    "update_flag_and_call_function": 8,
                    "update_flag_and_call_subfunction": 1,
                    "update_flag_value": 1,
                    "update_flag_with_bitwise_or": 1,
                    "update_flags_and_call_sub_function": 1
                },
                "bVar1": {
                    "byte_value": 1,
                    "current_byte": 1,
                    "current_flag": 4,
                    "current_flag_value": 4,
                    "current_value": 2,
                    "current_value_of_flag": 1,
                    "data_byte": 1,
                    "flag": 5,
                    "flag_value": 2,
                    "old_flag_value": 1,
                    "original_byte": 1,
                    "original_flag": 3,
                    "original_flag_value": 1,
                    "original_value": 1
                },
                "param_1": {
                    "base_address": 1,
                    "data": 4,
                    "data_address": 4,
                    "data_pointer": 8,
                    "data_ptr": 3,
                    "input": 3,
                    "input_address": 3,
                    "memory_address": 1,
                    "object_address": 1,
                    "object_pointer": 1,
                    "pointer": 1,
                    "pointer_to_object": 1
                },
                "param_2": {
                    "arg2": 1,
                    "flag": 4,
                    "flag1": 1,
                    "flag_value": 2,
                    "new_value": 1,
                    "original_flag_with_c": 1,
                    "param2": 5,
                    "param_2": 2,
                    "parameter_2": 1,
                    "unused_param": 4,
                    "unused_param1": 1,
                    "unused_parameter": 1,
                    "val1": 1,
                    "value": 1,
                    "value1": 1
                },
                "param_3": {
                    "flag2": 1,
                    "param3": 7,
                    "param_3": 3,
                    "parameter_3": 1,
                    "unused": 1,
                    "unused_param": 4,
                    "unused_param2": 1,
                    "unused_parameter": 1,
                    "unused_parameter_1": 1,
                    "val2": 1,
                    "value2": 1
                },
                "param_4": {
                    "another_unused_param": 1,
                    "arg4": 1,
                    "buffer_address": 1,
                    "custom_data": 1,
                    "data": 1,
                    "data_param": 1,
                    "output_address": 1,
                    "param": 3,
                    "param4": 9,
                    "param_4": 2,
                    "parameter_4": 1,
                    "pointer_to_data": 1,
                    "unused": 1,
                    "unused_param": 2,
                    "unused_param3": 1,
                    "unused_parameter_2": 1,
                    "update_value": 1,
                    "val3": 1,
                    "value3": 1
                }
            },
            "called": [
                "FUN_08001310"
            ],
            "calling": [
                "FUN_080013a4"
            ],
            "code": "\nvoid set_flag_and_call_function_0800138e(int data_pointer,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  byte flag;\n  \n  flag = *(byte *)(data_pointer + 0x14);\n  *(byte *)(data_pointer + 0x14) = flag | 4;\n  FUN_08001310(data_pointer,flag | 0xc,0,param4,param4);\n  return;\n}\n\n",
            "current_name": "set_flag_and_call_function_0800138e",
            "entrypoint": "0x0800138e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800138e": "set_flag_and_call_function_0800138e",
                "bVar1": "flag",
                "param_1": "data_pointer",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080013a4": {
            "additional_data": {
                "0x13": {
                    "flag": 1
                },
                "0x14": {
                    "constant1": 1
                },
                "0x15": {
                    "constant2": 1
                },
                "0x17": {
                    "char_value": 1
                },
                "FUN_08001294": {
                    "copy_data": 6,
                    "copy_memory": 1,
                    "copy_values": 1,
                    "initialize_memory": 1,
                    "initialize_values": 1
                },
                "FUN_080012c0": {
                    "apply_transformation": 1,
                    "call_with_param": 1,
                    "configure_mode": 1,
                    "do_something": 1,
                    "execute_operation": 1,
                    "modify_flags": 1,
                    "perform_action": 4
                },
                "FUN_08001310": {
                    "call_with_param_and_flag": 1,
                    "do_another_thing": 1,
                    "execute_function": 2,
                    "execute_transformation": 1,
                    "perform_operation": 3,
                    "process_action": 1,
                    "process_flags": 1
                },
                "FUN_0800135a": {
                    "additional_processing": 1,
                    "cleanup": 1,
                    "cleanup_function": 1,
                    "cleanup_process": 1,
                    "do_something_else": 1,
                    "execute_action": 1,
                    "execute_task": 1,
                    "finalize_processing": 1,
                    "initialize_data": 1,
                    "process_data": 1
                },
                "FUN_0800138e": {
                    "cleanup": 1,
                    "finalize_data": 1,
                    "finalize_params": 1,
                    "finalize_process": 1,
                    "finalize_processing": 3,
                    "finalize_task": 1,
                    "finalize_transformation": 1,
                    "process_data2": 1
                },
                "FUN_080013a4": {
                    "activate_feature": 1,
                    "execute_process": 1,
                    "initialize_flags": 1,
                    "initialize_params": 1,
                    "initialize_settings": 1,
                    "process_data": 14,
                    "process_parameters": 3,
                    "process_params": 2,
                    "update_config": 1,
                    "update_data": 1,
                    "update_flags": 1,
                    "update_flags_and_call_functions": 1,
                    "update_params": 1
                },
                "FUN_080057b4": {
                    "enable_feature": 1,
                    "execute": 1,
                    "execute_action": 1,
                    "execute_command": 1,
                    "execute_step": 1,
                    "initialize_pointer": 1,
                    "perform_action": 1,
                    "perform_reset": 1,
                    "reset_byte": 1,
                    "reset_data2": 1
                },
                "FUN_08005848": {
                    "disable_feature": 1,
                    "finalize_memory": 1,
                    "reset": 1,
                    "reset_data": 3,
                    "reset_value": 2,
                    "reset_values": 1,
                    "undo_transformation": 1
                },
                "iVar1": {
                    "count1": 1,
                    "counter": 4,
                    "counter1": 2,
                    "index": 1,
                    "inner_var1": 1,
                    "iteration": 1,
                    "iteration_count": 1,
                    "limit": 1,
                    "loop_condition": 1,
                    "loop_count": 2,
                    "loop_counter": 9,
                    "loop_counter1": 2,
                    "loop_index": 1,
                    "value1": 1,
                    "var1": 3
                },
                "iVar2": {
                    "condition_counter": 1,
                    "count": 1,
                    "count2": 1,
                    "counter": 4,
                    "counter2": 2,
                    "i_var": 1,
                    "i_var2": 2,
                    "i_var_counter": 1,
                    "index": 7,
                    "inner_loop_counter": 3,
                    "inner_var2": 1,
                    "loop_counter2": 2,
                    "loop_index": 1,
                    "value2": 1,
                    "var2": 3
                },
                "param_1": {
                    "arg1": 2,
                    "base_address": 2,
                    "config": 1,
                    "context": 1,
                    "data": 6,
                    "data1": 1,
                    "data_pointer": 3,
                    "data_ptr": 4,
                    "feature_flag": 1,
                    "first_param": 1,
                    "flag_array": 1,
                    "input": 2,
                    "input_buffer": 1,
                    "input_param1": 1,
                    "param1": 2,
                    "param_ptr": 1,
                    "process_id": 1
                },
                "param_2": {
                    "arg1": 1,
                    "arg2": 2,
                    "data1": 1,
                    "data2": 1,
                    "input_param2": 1,
                    "offset": 3,
                    "param": 1,
                    "param1": 1,
                    "param2": 10,
                    "param_a": 1,
                    "param_value1": 1,
                    "second_param": 1,
                    "size": 3,
                    "start": 1,
                    "val1": 1,
                    "value": 1,
                    "value1": 1
                },
                "param_3": {
                    "arg2": 1,
                    "command": 1,
                    "count": 2,
                    "data2": 1,
                    "flag": 5,
                    "flag_value": 1,
                    "input_param3": 1,
                    "length": 1,
                    "num1": 1,
                    "num_parameters": 1,
                    "param2": 1,
                    "param3": 5,
                    "param_b": 1,
                    "param_value2": 1,
                    "size": 3,
                    "third_param": 1,
                    "val2": 1,
                    "value": 1,
                    "value1": 1,
                    "value2": 1
                },
                "param_4": {
                    "arg3": 1,
                    "check": 1,
                    "condition": 2,
                    "condition_flag": 1,
                    "flag": 10,
                    "fourth_param": 1,
                    "input_param4": 1,
                    "num2": 1,
                    "option": 1,
                    "param3": 1,
                    "param4": 6,
                    "param_c": 1,
                    "param_value3": 1,
                    "val3": 1,
                    "value2": 1,
                    "value3": 1
                }
            },
            "called": [
                "FUN_08001294",
                "FUN_080012c0",
                "FUN_08001310",
                "FUN_0800135a",
                "FUN_0800138e",
                "FUN_08005848",
                "FUN_080057b4"
            ],
            "calling": [
                "FUN_080014ba",
                "FUN_08000bcc"
            ],
            "code": "\nvoid process_data_080013a4(int data,int param2,int flag,int flag)\n\n{\n  int loop_counter;\n  int index;\n  \n  if (1 < flag) {\n    *(byte *)(data + 0x13) = *(byte *)(data + 0x13) | 8;\n  }\n  *(char *)(data + 0x17) = (char)flag;\n  FUN_08001294(data,0,0x40,param2,param2 + 0x40);\n  if ((flag != 0) && (flag == 1)) {\n    *(byte *)(data + 0x13) = *(byte *)(data + 0x13) | 4;\n  }\n  FUN_080057b4(*(undefined *)(data + 8),1);\n  if (*(char *)(data + 9) != -1) {\n    FUN_080057b4(*(char *)(data + 9),1);\n  }\n  FUN_080057b4(*(undefined *)(data + 10),1);\n  index = 0;\n  while( true ) {\n    if ((*(byte *)(data + 0x13) & 0x10) == 0) {\n      loop_counter = 4;\n    }\n    else {\n      loop_counter = 8;\n    }\n    if (loop_counter <= index) break;\n    FUN_080057b4(*(undefined *)(data + index + 0xb),1);\n    index = index + 1;\n  }\n  FUN_08005848(*(undefined *)(data + 8),0);\n  FUN_08005848(*(undefined *)(data + 10),0);\n  if (*(char *)(data + 9) != -1) {\n    FUN_08005848(*(char *)(data + 9),0);\n  }\n  if ((*(byte *)(data + 0x13) & 0x10) == 0) {\n    FUN_080012c0(data,3);\n    FUN_080012c0(data,3);\n    FUN_080012c0(data,3);\n    FUN_080012c0(data,2);\n  }\n  else {\n    FUN_08001310(data,*(byte *)(data + 0x13) | 0x20,0);\n    FUN_08001310(data,*(byte *)(data + 0x13) | 0x20,0);\n    FUN_08001310(data,*(byte *)(data + 0x13) | 0x20,0);\n  }\n  FUN_08001310(data,*(byte *)(data + 0x13) | 0x20,0);\n  *(undefined *)(data + 0x14) = 4;\n  FUN_0800138e(data);\n  FUN_0800135a(data);\n  *(undefined *)(data + 0x15) = 2;\n  FUN_08001310(data,6,0);\n  return;\n}\n\n",
            "current_name": "process_data_080013a4",
            "entrypoint": "0x080013a4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080013a4": "process_data_080013a4",
                "iVar1": "loop_counter",
                "iVar2": "index",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "flag",
                "param_4": "flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080014ba": {
            "additional_data": {
                "FUN_080013a4": {
                    "apply_updates": 1,
                    "call_another_function": 1,
                    "call_sub_function": 4,
                    "execute_action": 1,
                    "perform_action": 3,
                    "perform_operation": 3,
                    "process_data": 3,
                    "process_function": 1,
                    "process_params": 1,
                    "process_update": 1,
                    "sub_function": 1
                },
                "FUN_080014ba": {
                    "assign_values_and_call_function": 1,
                    "copy_parameters": 1,
                    "copy_params": 1,
                    "handle_params": 1,
                    "initialize_function": 1,
                    "initialize_parameters": 3,
                    "initialize_params": 5,
                    "set_function_arguments": 1,
                    "set_function_parameters": 2,
                    "set_function_params": 2,
                    "set_parameters": 3,
                    "set_parameters_and_call": 1,
                    "set_params": 1,
                    "set_params_and_call_function": 2,
                    "store_params_and_call_function": 1,
                    "update_function": 1,
                    "update_parameters": 3,
                    "update_params_and_call_function": 1
                },
                "param_1": {
                    "arg1": 1,
                    "base_address": 9,
                    "base_pointer": 1,
                    "buffer": 1,
                    "buffer_address": 1,
                    "data_address": 1,
                    "dest": 1,
                    "dst": 1,
                    "function_address": 1,
                    "function_base_address": 1,
                    "function_pointer": 4,
                    "obj_ptr": 1,
                    "object_address": 2,
                    "param_address": 1,
                    "param_base": 1,
                    "param_base_address": 1,
                    "param_ptr": 1,
                    "struct_address": 1,
                    "struct_pointer": 1
                },
                "param_10": {
                    "arg10": 1,
                    "new_value8": 1,
                    "param10": 8,
                    "param10_value": 2,
                    "param_10": 2,
                    "param_10_val": 1,
                    "parameter10": 1,
                    "undefined1": 1,
                    "undefined1_6": 1,
                    "undefined_param10": 1,
                    "undefined_val8": 1,
                    "undefined_value7": 2,
                    "undefined_value_6": 1,
                    "unknown8": 1,
                    "val8": 1,
                    "value8": 4,
                    "value_8": 2
                },
                "param_11": {
                    "arg11": 1,
                    "new_value9": 1,
                    "param11": 8,
                    "param11_value": 2,
                    "param_11": 2,
                    "param_11_val": 1,
                    "parameter11": 1,
                    "undefined1": 1,
                    "undefined1_7": 1,
                    "undefined_param11": 1,
                    "undefined_val9": 1,
                    "undefined_value8": 2,
                    "undefined_value_7": 1,
                    "unknown9": 1,
                    "val9": 1,
                    "value9": 4,
                    "value_9": 2
                },
                "param_12": {
                    "arg12": 1,
                    "new_value10": 1,
                    "param12": 8,
                    "param12_value": 2,
                    "param_12": 2,
                    "param_12_val": 1,
                    "parameter12": 1,
                    "undefined1": 1,
                    "undefined1_8": 1,
                    "undefined_param12": 1,
                    "undefined_val10": 1,
                    "undefined_value9": 2,
                    "undefined_value_8": 1,
                    "unknown10": 1,
                    "val10": 1,
                    "value10": 4,
                    "value_10": 2
                },
                "param_13": {
                    "arg13": 1,
                    "new_value11": 1,
                    "param13": 8,
                    "param13_value": 2,
                    "param_13": 2,
                    "param_13_val": 1,
                    "parameter13": 1,
                    "undefined1": 1,
                    "undefined1_9": 1,
                    "undefined_param13": 1,
                    "undefined_val11": 1,
                    "undefined_value10": 2,
                    "undefined_value_9": 1,
                    "unknown11": 1,
                    "val11": 1,
                    "value11": 4,
                    "value_11": 2
                },
                "param_2": {
                    "action_param1": 1,
                    "arg2": 1,
                    "condition": 5,
                    "flag": 20,
                    "length": 1,
                    "param2": 1,
                    "param_2_value": 1,
                    "size": 1
                },
                "param_3": {
                    "action_param2": 1,
                    "arg3": 1,
                    "new_value1": 1,
                    "param3": 7,
                    "param3_value": 2,
                    "param_3": 3,
                    "param_3_val": 1,
                    "undefined1": 3,
                    "undefined_param3": 1,
                    "undefined_parameter3": 1,
                    "undefined_val1": 1,
                    "undefined_value1": 1,
                    "unknown1": 1,
                    "val1": 1,
                    "value1": 5,
                    "value_1": 1
                },
                "param_4": {
                    "action_param3": 1,
                    "arg4": 1,
                    "new_value2": 1,
                    "param4": 7,
                    "param4_value": 2,
                    "param_4": 2,
                    "param_4_char": 1,
                    "param_4_val": 1,
                    "parameter4": 1,
                    "undefined4": 1,
                    "undefined4_1": 1,
                    "undefined4_param": 1,
                    "undefined4_value": 1,
                    "undefined_val2": 1,
                    "unknown2": 1,
                    "val2": 1,
                    "value1": 1,
                    "value2": 5,
                    "value_2": 1
                },
                "param_5": {
                    "arg5": 1,
                    "new_value3": 1,
                    "param5": 8,
                    "param5_value": 2,
                    "param_5": 2,
                    "param_5_val": 1,
                    "undefined1": 1,
                    "undefined1_1": 1,
                    "undefined_param5": 1,
                    "undefined_parameter5": 1,
                    "undefined_val3": 1,
                    "undefined_value2": 2,
                    "undefined_value_1": 1,
                    "unknown3": 1,
                    "val3": 1,
                    "value3": 4,
                    "value_3": 2
                },
                "param_6": {
                    "arg6": 1,
                    "new_value4": 1,
                    "param6": 8,
                    "param6_value": 2,
                    "param_6": 2,
                    "param_6_val": 1,
                    "parameter6": 1,
                    "undefined1": 1,
                    "undefined1_2": 1,
                    "undefined_param6": 1,
                    "undefined_val4": 1,
                    "undefined_value3": 2,
                    "undefined_value_2": 1,
                    "unknown4": 1,
                    "val4": 1,
                    "value4": 4,
                    "value_4": 2
                },
                "param_7": {
                    "arg7": 1,
                    "new_value5": 1,
                    "param7": 8,
                    "param7_value": 2,
                    "param_7": 2,
                    "param_7_val": 1,
                    "parameter7": 1,
                    "undefined1": 1,
                    "undefined1_3": 1,
                    "undefined_param7": 1,
                    "undefined_val5": 1,
                    "undefined_value4": 2,
                    "undefined_value_3": 1,
                    "unknown5": 1,
                    "val5": 1,
                    "value5": 4,
                    "value_5": 2
                },
                "param_8": {
                    "arg8": 1,
                    "new_value6": 1,
                    "param8": 8,
                    "param8_value": 2,
                    "param_8": 2,
                    "param_8_val": 1,
                    "parameter8": 1,
                    "undefined1": 1,
                    "undefined1_4": 1,
                    "undefined_param8": 1,
                    "undefined_val6": 1,
                    "undefined_value5": 2,
                    "undefined_value_4": 1,
                    "unknown6": 1,
                    "val6": 1,
                    "value6": 4,
                    "value_6": 2
                },
                "param_9": {
                    "arg9": 1,
                    "new_value7": 1,
                    "param9": 8,
                    "param9_value": 2,
                    "param_9": 2,
                    "param_9_val": 1,
                    "parameter9": 1,
                    "undefined1": 1,
                    "undefined1_5": 1,
                    "undefined_param9": 1,
                    "undefined_val7": 1,
                    "undefined_value6": 2,
                    "undefined_value_5": 1,
                    "unknown7": 1,
                    "val7": 1,
                    "value7": 4,
                    "value_7": 2
                }
            },
            "called": [
                "FUN_080013a4"
            ],
            "calling": [
                "FUN_08001510"
            ],
            "code": "\nvoid assign_values_and_call_function_080014ba(int base_address,int flag,undefined param3,undefined4 param4,undefined param5,\n                 undefined param6,undefined param7,undefined param8,undefined param9,\n                 undefined param10,undefined param11,undefined param12,undefined param13)\n\n{\n  *(undefined *)(base_address + 8) = param3;\n  *(char *)(base_address + 9) = (char)param4;\n  *(undefined *)(base_address + 10) = param5;\n  *(undefined *)(base_address + 0xb) = param6;\n  *(undefined *)(base_address + 0xc) = param7;\n  *(undefined *)(base_address + 0xd) = param8;\n  *(undefined *)(base_address + 0xe) = param9;\n  *(undefined *)(base_address + 0xf) = param10;\n  *(undefined *)(base_address + 0x10) = param11;\n  *(undefined *)(base_address + 0x11) = param12;\n  *(undefined *)(base_address + 0x12) = param13;\n  if (flag == 0) {\n    *(undefined *)(base_address + 0x13) = 0x10;\n  }\n  else {\n    *(undefined *)(base_address + 0x13) = 0;\n  }\n  FUN_080013a4(base_address,0x10,1,0,param4);\n  return;\n}\n\n",
            "current_name": "assign_values_and_call_function_080014ba",
            "entrypoint": "0x080014ba",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080014ba": "assign_values_and_call_function_080014ba",
                "param_1": "base_address",
                "param_10": "param10",
                "param_11": "param11",
                "param_12": "param12",
                "param_13": "param13",
                "param_2": "flag",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "param_6": "param6",
                "param_7": "param7",
                "param_8": "param8",
                "param_9": "param9"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001510": {
            "additional_data": {
                "FUN_080014ba": {
                    "call_sub_function": 1,
                    "helper_function": 1,
                    "modify_array": 1,
                    "operation_function": 1,
                    "perform_calculations": 1,
                    "perform_operation": 3,
                    "process_data": 5,
                    "process_function": 2,
                    "sub_function": 6
                },
                "FUN_08001510": {
                    "initialize": 1,
                    "initialize_and_call_function": 1,
                    "initialize_fun": 1,
                    "initialize_function": 24,
                    "initialize_param": 1,
                    "initialize_pointer": 3
                },
                "PTR_FUN_0800134e_1_080073f8": {
                    "function_pointer": 2
                },
                "param_1": {
                    "array": 7,
                    "data_pointer": 1,
                    "function_parameters": 1,
                    "output": 1,
                    "output_arr": 1,
                    "output_array": 12,
                    "output_buffer": 1,
                    "output_data": 1,
                    "parameter_array": 1,
                    "pointer": 1,
                    "result": 1,
                    "result_pointer": 2,
                    "sub_function_param1": 1
                },
                "param_2": {
                    "data_format": 1,
                    "index": 1,
                    "input1": 1,
                    "input_data1": 1,
                    "input_param_1": 1,
                    "input_parameter_1": 1,
                    "input_value": 1,
                    "input_value1": 4,
                    "input_value_1": 2,
                    "input_variable_1": 1,
                    "param2": 2,
                    "parameter_1": 1,
                    "sub_func_param1": 1,
                    "sub_function_param2": 1,
                    "value": 1,
                    "value1": 11
                },
                "param_3": {
                    "flag_value": 1,
                    "input2": 1,
                    "input_data2": 1,
                    "input_param_2": 1,
                    "input_parameter_1": 1,
                    "input_parameter_2": 1,
                    "input_value2": 4,
                    "input_value_2": 2,
                    "param3": 3,
                    "parameter_2": 1,
                    "sub_func_param2": 1,
                    "sub_function_param3": 1,
                    "value2": 11,
                    "value_1": 2
                },
                "param_4": {
                    "constant_value": 1,
                    "input3": 1,
                    "input_data3": 1,
                    "input_param_3": 1,
                    "input_parameter_2": 1,
                    "input_parameter_3": 1,
                    "input_value3": 4,
                    "input_value_3": 2,
                    "param4": 3,
                    "parameter_3": 1,
                    "sub_func_param3": 1,
                    "sub_function_param4": 1,
                    "value3": 11,
                    "value_2": 2
                },
                "param_5": {
                    "flag1": 3,
                    "input4": 1,
                    "input_data4": 1,
                    "input_param_4": 1,
                    "input_parameter_3": 1,
                    "input_parameter_4": 1,
                    "input_value4": 3,
                    "input_value_4": 2,
                    "param5": 4,
                    "param_a": 1,
                    "parameter_4": 1,
                    "sub_func_param4": 1,
                    "sub_function_param5": 1,
                    "undef_param5": 1,
                    "value4": 7,
                    "value_3": 2
                },
                "param_6": {
                    "flag2": 3,
                    "input5": 1,
                    "input_data5": 1,
                    "input_param_5": 1,
                    "input_parameter_5": 1,
                    "input_value5": 3,
                    "input_value_5": 3,
                    "input_variable_5": 1,
                    "param6": 5,
                    "param6_value": 1,
                    "param_6_value": 1,
                    "param_b": 1,
                    "parameter_5": 1,
                    "undef_param6": 1,
                    "value5": 7
                },
                "param_7": {
                    "flag3": 3,
                    "input6": 1,
                    "input_data6": 1,
                    "input_param_6": 1,
                    "input_parameter_6": 1,
                    "input_value6": 3,
                    "input_value_6": 3,
                    "input_variable_6": 1,
                    "param7": 5,
                    "param7_value": 1,
                    "param_7_value": 1,
                    "param_c": 1,
                    "parameter_6": 1,
                    "undef_param7": 1,
                    "value6": 7
                }
            },
            "called": [
                "FUN_080014ba"
            ],
            "calling": [
                "FUN_08000b08"
            ],
            "code": "\nundefined4 *\ninitialize_and_call_function_08001510(undefined4 *output_array,undefined4 value1,undefined4 value2,undefined4 value3,\n            undefined value4,undefined value5,undefined value6)\n\n{\n  output_array[1] = 0;\n  *output_array = &PTR_FUN_0800134e_1_080073f8;\n  FUN_080014ba(output_array,1,value1,0xff,value2,value3,value4,value5,value6,0,0,0,0);\n  return output_array;\n}\n\n",
            "current_name": "initialize_and_call_function_08001510",
            "entrypoint": "0x08001510",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001510": "initialize_and_call_function_08001510",
                "param_1": "output_array",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4",
                "param_6": "value5",
                "param_7": "value6"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001550": {
            "additional_data": {
                "FUN_08001550": {
                    "copy_data_to_functions": 1,
                    "extract_and_call_function": 1,
                    "process_and_call_functions": 1,
                    "process_and_execute": 1,
                    "process_data": 26,
                    "reverse_and_send_data": 1
                },
                "F_08001310": {
                    "initialize_data": 1
                },
                "iVar1": {
                    "counter": 1,
                    "i": 5,
                    "index": 19,
                    "iterator": 1,
                    "loop_counter": 1
                },
                "param_1": {
                    "array": 4,
                    "data": 8,
                    "data_array": 9,
                    "data_buffer": 1,
                    "data_pointer": 1,
                    "data_ptr": 6,
                    "function_pointers": 2
                },
                "param_2": {
                    "array_size": 3,
                    "bitmask": 1,
                    "byte_count": 1,
                    "count": 1,
                    "data_length": 4,
                    "data_mask": 1,
                    "data_size": 6,
                    "length": 7,
                    "num_elements": 1,
                    "size": 6
                },
                "param_3": {
                    "address": 1,
                    "buffer": 2,
                    "buffer_addr": 1,
                    "buffer_address": 1,
                    "data_address": 2,
                    "data_index": 1,
                    "data_offset": 5,
                    "data_start": 2,
                    "data_start_index": 1,
                    "input_array": 1,
                    "memory_address": 1,
                    "offset": 4,
                    "source": 1,
                    "source_address": 6,
                    "source_pointer": 1,
                    "values_address": 1
                }
            },
            "called": [
                "FUN_08001310"
            ],
            "calling": [
                "FUN_08000bcc"
            ],
            "code": "\nvoid process_data_08001550(undefined4 *data_array,uint length,int source_address)\n\n{\n  int index;\n  \n  FUN_08001310(data_array,(length & 7) << 3 | 0x40,0);\n  for (index = 0; index < 8; index = index + 1) {\n    (**(code **)*data_array)(data_array,*(undefined *)(source_address + index));\n  }\n  return;\n}\n\n",
            "current_name": "process_data_08001550",
            "entrypoint": "0x08001550",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001550": "process_data_08001550",
                "iVar1": "index",
                "param_1": "data_array",
                "param_2": "length",
                "param_3": "source_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800157c": {
            "additional_data": {
                "FUN_0800157c": {
                    "assign_and_call_functions": 1,
                    "copy_data": 1,
                    "copy_data_and_process": 2,
                    "copy_params_and_call_functions": 1,
                    "extract_parameters": 1,
                    "initialize_buffer": 3,
                    "initialize_data": 5,
                    "initialize_param": 1,
                    "initialize_parameters": 1,
                    "initialize_params": 4,
                    "populate_data": 1,
                    "process_data": 1,
                    "set_params_and_call_functions": 1,
                    "update_data": 1,
                    "update_data_buffer": 1,
                    "update_param_values": 1,
                    "update_param_with_values": 2,
                    "update_parameters": 2,
                    "update_params": 1
                },
                "FUN_080057b4": {
                    "apply_logic2": 1,
                    "call_first_function": 1,
                    "do_something": 1,
                    "do_something_with_param": 1,
                    "function1": 1,
                    "perform_operation": 1,
                    "perform_operation1": 1,
                    "perform_task1": 1,
                    "process_data": 2,
                    "process_data2": 1,
                    "process_data_2": 1,
                    "process_element": 1,
                    "process_param2": 1,
                    "process_param_value": 1,
                    "process_value": 9,
                    "process_value2": 1,
                    "reverse_data": 1,
                    "send_data": 1,
                    "update_value2": 1
                },
                "FUN_08005848": {
                    "analyze_value": 1,
                    "apply_function": 1,
                    "apply_logic1": 1,
                    "calculate_checksum": 1,
                    "call_second_function": 1,
                    "do_something_else_with_param": 1,
                    "function2": 1,
                    "manipulate_data": 1,
                    "manipulate_value": 1,
                    "modify_buffer": 1,
                    "modify_param_value": 1,
                    "modify_value": 3,
                    "perform_action": 1,
                    "perform_operation2": 1,
                    "perform_task2": 1,
                    "process_data": 1,
                    "process_data1": 1,
                    "process_data2": 1,
                    "process_data_1": 1,
                    "process_param1": 1,
                    "process_value1": 1,
                    "update_data": 2,
                    "update_params": 1,
                    "update_value": 1,
                    "update_value1": 1
                },
                "param_1": {
                    "buffer": 3,
                    "data": 6,
                    "data_buffer": 2,
                    "data_ptr": 1,
                    "dest": 1,
                    "dest_array": 1,
                    "destination_array": 1,
                    "output": 3,
                    "output_array": 4,
                    "output_buffer": 2,
                    "output_ptr": 1,
                    "param_array": 1,
                    "parameters": 1,
                    "params": 1,
                    "params_array": 1,
                    "updated_data": 1,
                    "updated_param_array": 1
                },
                "param_2": {
                    "char_value": 1,
                    "character": 4,
                    "data": 1,
                    "data_value": 1,
                    "input_char": 1,
                    "input_value": 1,
                    "new_value": 1,
                    "param_value": 1,
                    "source_value": 1,
                    "value": 9,
                    "value1": 8,
                    "value_1": 2
                },
                "param_3": {
                    "byte_1": 2,
                    "character": 2,
                    "data1": 1,
                    "data_1": 1,
                    "first_byte": 1,
                    "first_character": 1,
                    "param1": 1,
                    "param1_data": 1,
                    "param1_value": 1,
                    "param3_value": 1,
                    "param_3": 1,
                    "value1": 7,
                    "value2": 8,
                    "value_2": 2,
                    "var1": 1
                },
                "param_4": {
                    "byte_2": 2,
                    "data2": 1,
                    "data_2": 1,
                    "flag": 1,
                    "param2": 1,
                    "param2_data": 1,
                    "param2_value": 1,
                    "param4_value": 1,
                    "param_4": 1,
                    "second_byte": 1,
                    "second_character": 1,
                    "unknown": 1,
                    "value2": 7,
                    "value3": 8,
                    "value_3": 2,
                    "var2": 1
                }
            },
            "called": [
                "FUN_08005848",
                "FUN_080057b4"
            ],
            "calling": [
                "FUN_08000b08"
            ],
            "code": "\nundefined * initialize_data_0800157c(undefined *data,undefined4 value,undefined value2,undefined value3)\n\n{\n  *data = (char)value;\n  data[1] = value2;\n  data[2] = value3;\n  FUN_080057b4(value,0);\n  FUN_080057b4(data[1],1);\n  FUN_080057b4(data[2],1);\n  FUN_08005848(data[1],1);\n  FUN_08005848(data[2],0);\n  return data;\n}\n\n",
            "current_name": "initialize_data_0800157c",
            "entrypoint": "0x0800157c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800157c": "initialize_data_0800157c",
                "param_1": "data",
                "param_2": "value",
                "param_3": "value2",
                "param_4": "value3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080015b2": {
            "additional_data": {
                "FUN_080015b2": {
                    "bitwise_check": 1,
                    "bitwise_flag": 1,
                    "calculate_bitmask": 2,
                    "decode_bits": 1,
                    "extract_bit_mask": 1,
                    "extract_bit_values": 1,
                    "extract_bitmask": 1,
                    "extract_bits": 3,
                    "extract_bits_from_array": 1,
                    "extract_bits_from_data": 2,
                    "extract_bits_from_param": 2,
                    "extract_bitwise_flag": 1,
                    "get_binary_data": 1,
                    "get_bitwise_flags": 1,
                    "reverse_and_check_bits": 1,
                    "reverse_bit_sequence": 1,
                    "reverse_bits": 10
                },
                "FUN_08005848": {
                    "configure_bit": 1,
                    "perform_action": 1,
                    "set_bit": 5,
                    "set_bitwise_flag": 1,
                    "set_element": 1,
                    "set_flag": 1,
                    "set_param_flag": 1
                },
                "FUN_08005890": {
                    "check_bit": 5,
                    "check_bitwise_flag": 1,
                    "check_condition": 1,
                    "check_param_flag": 1,
                    "check_value": 1,
                    "is_bit_set": 1,
                    "is_non_zero": 1
                },
                "iVar1": {
                    "bit_check_result": 1,
                    "bit_status": 1,
                    "bit_value": 1,
                    "check_result": 5,
                    "comparison_result": 1,
                    "is_reversed": 1,
                    "is_set": 1,
                    "result": 20
                },
                "param_1": {
                    "array": 6,
                    "bit_position": 1,
                    "bit_sequence": 1,
                    "bit_value": 1,
                    "data": 2,
                    "data_array": 2,
                    "data_ptr": 1,
                    "flag_value": 1,
                    "input": 4,
                    "input_array": 10,
                    "input_data": 1,
                    "param": 1
                },
                "param_2": {
                    "bit": 2,
                    "bit_value": 2,
                    "element": 1,
                    "flag": 1,
                    "flag_1": 1,
                    "flag_value": 1
                },
                "param_3": {
                    "configure_type": 1,
                    "flag_1": 1,
                    "flag_2": 1,
                    "mode": 1,
                    "operation": 1,
                    "value": 3
                },
                "param_4": {
                    "configuration_data": 1,
                    "data": 3,
                    "flag_2": 1,
                    "flag_array": 1,
                    "ptr": 1,
                    "unused_array": 1
                },
                "uVar2": {
                    "bit_index": 16,
                    "bit_offset": 1,
                    "bit_position": 11,
                    "bit_shift": 1,
                    "bit_shift_count": 1,
                    "index": 1
                },
                "uVar3": {
                    "bit_mask": 3,
                    "bit_values": 1,
                    "bitmask": 3,
                    "bits_extracted": 1,
                    "decoded_value": 1,
                    "extracted_bits": 1,
                    "flag": 2,
                    "flag_value": 1,
                    "output": 2,
                    "result": 7,
                    "reversed_binary": 1,
                    "reversed_bits": 7,
                    "reversed_value": 1
                }
            },
            "called": [
                "FUN_08005848",
                "FUN_08005890"
            ],
            "calling": [
                "FUN_080015f8"
            ],
            "code": "\nuint reverse_and_check_bits_080015b2(undefined *input_array)\n\n{\n  int result;\n  uint bit_index;\n  uint reversed_bits;\n  \n  FUN_08005848(input_array[1],0);\n  reversed_bits = 0;\n  for (bit_index = 0x1f; -1 < (int)bit_index; bit_index = bit_index - 1) {\n    FUN_08005848(input_array[2],1);\n    result = FUN_08005890(*input_array);\n    if (result != 0) {\n      reversed_bits = reversed_bits | 1 << (bit_index & 0xff);\n    }\n    FUN_08005848(input_array[2],0);\n  }\n  FUN_08005848(input_array[1],1);\n  return reversed_bits;\n}\n\n",
            "current_name": "reverse_and_check_bits_080015b2",
            "entrypoint": "0x080015b2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080015b2": "reverse_and_check_bits_080015b2",
                "iVar1": "result",
                "param_1": "input_array",
                "uVar2": "bit_index",
                "uVar3": "reversed_bits"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080015f8": {
            "additional_data": {
                "FUN_08000194": {
                    "calculate_stage4_result": 1,
                    "calculate_value": 1
                },
                "FUN_0800040c": {
                    "calculate_stage3_result": 1,
                    "process_flag": 1
                },
                "FUN_080004f8": {
                    "calculate_stage2_result": 1,
                    "perform_operation": 1
                },
                "FUN_0800074c": {
                    "calculate_stage1_result": 1
                },
                "FUN_080015b2": {
                    "get_flag_output": 1,
                    "retrieve_flags": 1
                },
                "FUN_080015f8": {
                    "analyze_data": 1,
                    "calculate_result": 8,
                    "calculate_values": 1,
                    "convert_value": 1,
                    "extract_data": 1,
                    "extract_value": 1,
                    "perform_calculation": 1,
                    "process_binary_data": 1,
                    "process_data": 9,
                    "process_input": 1
                },
                "param_1": {
                    "arg1": 4,
                    "flag": 1,
                    "input": 1,
                    "input1": 3,
                    "input_1": 2,
                    "input_data": 2,
                    "input_flag": 2,
                    "input_param": 1,
                    "input_param_1": 1,
                    "input_value": 1,
                    "param1": 5,
                    "param_1": 1,
                    "param_a": 1,
                    "ptr": 1,
                    "status": 1,
                    "type_flag": 1,
                    "val1": 1,
                    "value_1": 1
                },
                "param_2": {
                    "arg2": 4,
                    "condition": 1,
                    "condition_flag": 1,
                    "flag": 7,
                    "input2": 2,
                    "input_2": 2,
                    "input_param_2": 1,
                    "input_value": 1,
                    "is_flag_set": 1,
                    "mode": 2,
                    "option": 1,
                    "param2": 5,
                    "param_b": 1,
                    "val2": 1,
                    "value": 1
                },
                "param_3": {
                    "arg3": 4,
                    "input2": 1,
                    "input3": 2,
                    "input_3": 2,
                    "input_param_3": 1,
                    "input_value2": 1,
                    "param1": 2,
                    "param3": 7,
                    "param_3": 4,
                    "param_c": 1,
                    "unused_param3": 1,
                    "val3": 1,
                    "value_2": 1
                },
                "param_4": {
                    "arg4": 4,
                    "flag": 1,
                    "input3": 1,
                    "input4": 2,
                    "input_4": 2,
                    "input_param_4": 1,
                    "input_value3": 1,
                    "param": 1,
                    "param2": 2,
                    "param4": 7,
                    "param4_value": 1,
                    "param_4": 4,
                    "param_d": 1,
                    "val4": 1,
                    "value": 1,
                    "value_3": 1
                },
                "uVar1": {
                    "extracted_value": 1,
                    "flag_output": 1,
                    "flags": 3,
                    "input_value": 1,
                    "result": 9,
                    "result1": 6,
                    "result_080015b2": 1,
                    "result_1": 4,
                    "result_var": 1,
                    "status": 1,
                    "temp_var1": 1,
                    "value": 1
                },
                "uVar2": {
                    "converted_result": 1,
                    "final_result": 2,
                    "modified_result": 1,
                    "output": 1,
                    "output_value": 1,
                    "processed_data": 4,
                    "processed_result": 1,
                    "result": 7,
                    "result2": 6,
                    "result_080004f8": 1,
                    "result_2": 4,
                    "temp_var2": 1
                }
            },
            "called": [
                "FUN_0800074c",
                "FUN_080015b2",
                "FUN_080004f8",
                "FUN_0800040c",
                "FUN_08000194"
            ],
            "calling": [
                "FUN_08000cd0"
            ],
            "code": "\nundefined8 process_binary_data_080015f8(undefined4 param1,int flag,undefined4 param3,undefined4 param4)\n\n{\n  uint result;\n  undefined8 result;\n  \n  result = FUN_080015b2();\n  if ((result & 0x10000) == 0) {\n    result = result >> 0x12;\n    result = FUN_0800040c(result & 0x1fff);\n    if ((result & 0x2000) != 0) {\n      result = FUN_0800040c(~result & 0x1fff);\n      result = FUN_08000194((int)result,(int)((ulonglong)result >> 0x20),0,0x3ff00000,param4);\n      result = CONCAT44((int)((ulonglong)result >> 0x20) + -0x80000000,(int)result);\n    }\n    result = FUN_080004f8((int)result,(int)((ulonglong)result >> 0x20),0,0x3fd00000);\n    if (flag == 1) {\n      result = FUN_080004f8((int)result,(int)((ulonglong)result >> 0x20),0,0x40220000);\n      result = FUN_0800074c((int)result,(int)((ulonglong)result >> 0x20),0,0x40140000);\n      result = FUN_08000194((int)result,(int)((ulonglong)result >> 0x20),0,0x40400000);\n      return result;\n    }\n  }\n  else {\n    result = result & 7;\n    if (result == 2) {\n      return 0x40c3888000000000;\n    }\n    if (result == 4) {\n      return 0x40c3890000000000;\n    }\n    if (result != 1) {\n      return 0;\n    }\n    result = 0x40c3880000000000;\n  }\n  return result;\n}\n\n",
            "current_name": "process_binary_data_080015f8",
            "entrypoint": "0x080015f8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080015f8": "process_binary_data_080015f8",
                "param_1": "param1",
                "param_2": "flag",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "result",
                "uVar2": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080016b4": {
            "additional_data": {
                "FUN_080016b4": {
                    "check_and_process_data": 1,
                    "check_and_update_values": 1,
                    "improved_func": 1,
                    "optimize_function": 1,
                    "process_data": 17,
                    "process_input": 1,
                    "validate_input": 1
                },
                "cVar1": {
                    "bool_value": 1,
                    "char_var1": 1,
                    "condition": 1,
                    "flag": 5,
                    "output_char": 1,
                    "output_flag": 1,
                    "result": 19,
                    "return_value": 1,
                    "valid_flag": 1
                },
                "cVar11": {
                    "char_value": 2,
                    "check_flag": 1,
                    "condition": 1,
                    "flag": 12,
                    "flag2": 1,
                    "processed_flag": 1,
                    "result": 2,
                    "temp_char1": 1,
                    "value": 1
                },
                "iVar2": {
                    "count": 1,
                    "data_len": 1,
                    "function_result": 1,
                    "initial_value": 1,
                    "result": 8,
                    "result1": 1,
                    "return_value": 2,
                    "some_var": 1,
                    "value": 3,
                    "value1": 9,
                    "var1": 3
                },
                "iVar3": {
                    "another_var": 1,
                    "check": 1,
                    "comparison_result": 7,
                    "error_code": 1,
                    "is_valid": 1,
                    "is_zero": 1,
                    "result2": 1,
                    "return_value": 1,
                    "status": 1,
                    "value2": 9,
                    "var2": 3
                },
                "local_38": {
                    "local_data_1": 1,
                    "local_var1": 8,
                    "local_var38": 1,
                    "local_variable": 1,
                    "new_var1": 1,
                    "temp1": 2,
                    "temp11": 1,
                    "temp13": 1,
                    "temp15": 8,
                    "temp16": 1,
                    "temp5": 1,
                    "temp8": 2,
                    "temp_15": 1,
                    "temp_value15": 1,
                    "temp_var1": 1
                },
                "param_1": {
                    "data": 9,
                    "data_pointer": 1,
                    "input": 9,
                    "input_data": 4,
                    "input_param": 7,
                    "input_value": 1
                },
                "uStack_34": {
                    "local_data_2": 1,
                    "local_var2": 8,
                    "new_var2": 1,
                    "stack_variable": 1,
                    "temp12": 1,
                    "temp14": 1,
                    "temp16": 8,
                    "temp17": 1,
                    "temp2": 2,
                    "temp6": 1,
                    "temp9": 2,
                    "temp_16": 1,
                    "temp_stack34": 1,
                    "temp_value16": 1,
                    "temp_var2": 1
                },
                "uVar10": {
                    "result2": 1,
                    "temp7": 16,
                    "temp_5": 1,
                    "temp_7": 1,
                    "temp_value7": 1,
                    "temp_var10": 2,
                    "temp_var7": 6,
                    "unknown7": 1,
                    "var6": 1,
                    "var9": 1
                },
                "uVar11": {
                    "char_param": 1,
                    "char_var": 2,
                    "flag": 1,
                    "temp8": 1,
                    "temp_6": 1,
                    "temp_var11": 1,
                    "valid_flag2": 1,
                    "var10": 1
                },
                "uVar12": {
                    "data_1": 1,
                    "fix_data1": 1,
                    "param1": 3,
                    "ptr_var1": 1,
                    "temp8": 11,
                    "temp9": 1,
                    "temp_8": 1,
                    "temp_value8": 1,
                    "temp_var12": 2,
                    "temp_var8": 5,
                    "unknown8": 1,
                    "val1": 1,
                    "var11": 1,
                    "var7": 1
                },
                "uVar13": {
                    "data_2": 1,
                    "fix_data2": 1,
                    "param2": 3,
                    "ptr_var2": 1,
                    "temp10": 1,
                    "temp9": 11,
                    "temp_9": 1,
                    "temp_value9": 1,
                    "temp_var13": 2,
                    "temp_var9": 5,
                    "unknown9": 1,
                    "val2": 1,
                    "var12": 1,
                    "var8": 1
                },
                "uVar14": {
                    "data_3": 1,
                    "param1_result": 1,
                    "param3": 1,
                    "temp10": 11,
                    "temp11": 1,
                    "temp4": 1,
                    "temp8": 1,
                    "temp_10": 1,
                    "temp_value10": 1,
                    "temp_var10": 5,
                    "temp_var14": 2,
                    "temp_var8": 1,
                    "unknown10": 1,
                    "val3": 1,
                    "var13": 1,
                    "var9": 1
                },
                "uVar15": {
                    "data_4": 1,
                    "fix_data3": 1,
                    "param2_result": 1,
                    "param4": 1,
                    "ptr_var3": 1,
                    "result1": 1,
                    "result_var1": 1,
                    "sub_function_result1": 1,
                    "temp11": 10,
                    "temp12": 1,
                    "temp9": 1,
                    "temp_11": 1,
                    "temp_value11": 1,
                    "temp_var11": 3,
                    "temp_var15": 2,
                    "unknown11": 1,
                    "val4": 1,
                    "var10": 1,
                    "var14": 1
                },
                "uVar16": {
                    "data_5": 1,
                    "fix_data4": 1,
                    "param3_result": 1,
                    "param5": 1,
                    "ptr_var4": 1,
                    "result2": 1,
                    "result_var2": 1,
                    "sub_function_result2": 1,
                    "temp10": 1,
                    "temp12": 10,
                    "temp13": 1,
                    "temp_12": 1,
                    "temp_value12": 1,
                    "temp_var12": 3,
                    "temp_var16": 2,
                    "unknown12": 1,
                    "val5": 1,
                    "var11": 1,
                    "var15": 1
                },
                "uVar17": {
                    "data_6": 1,
                    "final_result": 1,
                    "param4_result": 1,
                    "param6": 1,
                    "ptr_var5": 1,
                    "result3": 1,
                    "result_var3": 1,
                    "sub_function_result3": 1,
                    "temp11": 1,
                    "temp13": 10,
                    "temp14": 1,
                    "temp_13": 1,
                    "temp_value13": 1,
                    "temp_var13": 3,
                    "temp_var17": 2,
                    "unknown13": 1,
                    "val6": 1,
                    "var12": 1,
                    "var16": 1
                },
                "uVar18": {
                    "data_7": 1,
                    "fix_data5": 1,
                    "param5_result": 1,
                    "param7": 1,
                    "ptr_var6": 1,
                    "result4": 1,
                    "result_var4": 1,
                    "sub_function_result4": 1,
                    "temp12": 1,
                    "temp14": 10,
                    "temp15": 1,
                    "temp_14": 1,
                    "temp_value14": 1,
                    "temp_var14": 3,
                    "temp_var18": 2,
                    "unknown14": 1,
                    "val7": 1,
                    "var13": 1,
                    "var17": 1
                },
                "uVar4": {
                    "temp1": 17,
                    "temp_1": 2,
                    "temp_value1": 1,
                    "temp_var1": 6,
                    "temp_var4": 3,
                    "unknown1": 1,
                    "var3": 1
                },
                "uVar5": {
                    "data1": 1,
                    "temp2": 16,
                    "temp_2": 2,
                    "temp_value2": 1,
                    "temp_var2": 6,
                    "temp_var5": 2,
                    "unknown2": 1,
                    "var1": 1,
                    "var4": 1
                },
                "uVar6": {
                    "temp2": 1,
                    "temp3": 16,
                    "temp_3": 1,
                    "temp_value3": 1,
                    "temp_var3": 6,
                    "temp_var6": 2,
                    "unknown3": 1,
                    "value_1": 1,
                    "var2": 1,
                    "var5": 1
                },
                "uVar7": {
                    "temp3": 1,
                    "temp4": 16,
                    "temp_4": 1,
                    "temp_value4": 1,
                    "temp_var4": 6,
                    "temp_var7": 2,
                    "unknown4": 1,
                    "value_2": 1,
                    "var3": 1,
                    "var6": 1
                },
                "uVar8": {
                    "data2": 1,
                    "temp5": 16,
                    "temp_3": 1,
                    "temp_5": 1,
                    "temp_value5": 1,
                    "temp_var5": 6,
                    "temp_var8": 2,
                    "unknown5": 1,
                    "var4": 1,
                    "var7": 1
                },
                "uVar9": {
                    "result1": 1,
                    "temp6": 16,
                    "temp_4": 1,
                    "temp_6": 1,
                    "temp_value6": 1,
                    "temp_var6": 6,
                    "temp_var9": 2,
                    "unknown6": 1,
                    "var5": 1,
                    "var8": 1
                }
            },
            "called": [
                "FUN_08000a18",
                "FUN_080004f8",
                "FUN_080058e0",
                "FUN_08000190",
                "FUN_080009dc",
                "FUN_08000194"
            ],
            "calling": [
                "FUN_08000cd0"
            ],
            "code": "\nchar check_and_process_data_080016b4(int input)\n\n{\n  char result;\n  int value1;\n  int value2;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  undefined4 temp5;\n  undefined4 temp6;\n  undefined4 temp7;\n  char flag;\n  undefined4 temp8;\n  undefined4 temp9;\n  undefined4 temp10;\n  undefined8 temp11;\n  undefined8 temp12;\n  undefined8 temp13;\n  undefined8 temp14;\n  undefined4 temp15;\n  undefined4 temp16;\n  \n  flag = *(char *)(input + 0x70);\n  if (flag != '\\0') {\n    value1 = FUN_080058e0();\n    if ((uint)(value1 - *(int *)(input + 0x44)) < *(uint *)(input + 0x58)) {\n      flag = '\\0';\n    }\n    else {\n      temp2 = **(undefined4 **)(input + 0x38);\n      temp5 = (*(undefined4 **)(input + 0x38))[1];\n      temp11 = FUN_08000190(**(undefined4 **)(input + 0x40),(*(undefined4 **)(input + 0x40))[1])\n      ;\n      temp10 = (undefined4)((ulonglong)temp11 >> 0x20);\n      temp12 = FUN_08000190(temp2,temp5,*(undefined4 *)(input + 0x50),\n                            *(undefined4 *)(input + 0x54));\n      temp1 = (undefined4)((ulonglong)temp12 >> 0x20);\n      temp13 = FUN_080004f8((int)temp11,temp10,*(undefined4 *)(input + 0x20),\n                            *(undefined4 *)(input + 0x24));\n      temp13 = FUN_08000194((int)temp13,(int)((ulonglong)temp13 >> 0x20),\n                            *(undefined4 *)(input + 0x48),*(undefined4 *)(input + 0x4c));\n      *(undefined8 *)(input + 0x48) = temp13;\n      result = *(char *)(input + 0x71);\n      if (result == '\\0') {\n        temp14 = FUN_080004f8((int)temp12,temp1,*(undefined4 *)(input + 0x18),\n                              *(undefined4 *)(input + 0x1c));\n        temp13 = FUN_08000190((int)temp13,(int)((ulonglong)temp13 >> 0x20),(int)temp14,\n                              (int)((ulonglong)temp14 >> 0x20));\n        *(undefined8 *)(input + 0x48) = temp13;\n      }\n      temp3 = *(undefined4 *)(input + 0x48);\n      temp6 = *(undefined4 *)(input + 0x4c);\n      temp8 = *(undefined4 *)(undefined8 *)(input + 0x68);\n      temp9 = *(undefined4 *)(input + 0x6c);\n      temp13 = *(undefined8 *)(input + 0x68);\n      value2 = FUN_08000a18(temp3,temp6,temp8,temp9);\n      if (value2 == 0) {\n        temp4 = *(undefined4 *)(input + 0x60);\n        temp7 = *(undefined4 *)(input + 100);\n        value2 = FUN_080009dc(temp3,temp6);\n        if (value2 != 0) {\n          *(undefined4 *)(input + 0x48) = temp4;\n          *(undefined4 *)(input + 0x4c) = temp7;\n        }\n      }\n      else {\n        *(undefined4 *)(input + 0x48) = temp8;\n        *(undefined4 *)(input + 0x4c) = temp9;\n      }\n      if (result == '\\0') {\n        temp11 = 0;\n      }\n      else {\n        temp11 = FUN_080004f8((int)temp11,temp10,*(undefined4 *)(input + 0x18),\n                              *(undefined4 *)(input + 0x1c));\n      }\n      temp16 = (undefined4)((ulonglong)temp11 >> 0x20);\n      temp15 = (undefined4)temp11;\n      temp10 = *(undefined4 *)(input + 0x48);\n      temp3 = *(undefined4 *)(input + 0x4c);\n      temp11 = FUN_080004f8((int)temp12,temp1,*(undefined4 *)(input + 0x28),\n                            *(undefined4 *)(input + 0x2c));\n      temp11 = FUN_08000190(temp10,temp3,(int)temp11,(int)((ulonglong)temp11 >> 0x20));\n      temp11 = FUN_08000194(temp15,temp16,(int)temp11,(int)((ulonglong)temp11 >> 0x20));\n      temp10 = (undefined4)((ulonglong)temp11 >> 0x20);\n      value2 = FUN_080009dc(temp8,temp9,(int)temp11,temp10);\n      if (value2 == 0) {\n        temp13 = *(undefined8 *)(input + 0x60);\n        value2 = FUN_080009dc((int)temp11,temp10,*(undefined4 *)(undefined8 *)(input + 0x60),\n                             *(undefined4 *)(input + 100));\n        if (value2 == 0) {\n          temp13 = temp11;\n        }\n      }\n      **(undefined8 **)(input + 0x3c) = temp13;\n      *(undefined4 *)(input + 0x50) = temp2;\n      *(undefined4 *)(input + 0x54) = temp5;\n      *(int *)(input + 0x44) = value1;\n    }\n  }\n  return flag;\n}\n\n",
            "current_name": "check_and_process_data_080016b4",
            "entrypoint": "0x080016b4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080016b4": "check_and_process_data_080016b4",
                "cVar1": "result",
                "cVar11": "flag",
                "iVar2": "value1",
                "iVar3": "value2",
                "local_38": "temp15",
                "param_1": "input",
                "uStack_34": "temp16",
                "uVar10": "temp7",
                "uVar12": "temp8",
                "uVar13": "temp9",
                "uVar14": "temp10",
                "uVar15": "temp11",
                "uVar16": "temp12",
                "uVar17": "temp13",
                "uVar18": "temp14",
                "uVar4": "temp1",
                "uVar5": "temp2",
                "uVar6": "temp3",
                "uVar7": "temp4",
                "uVar8": "temp5",
                "uVar9": "temp6"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001814": {
            "additional_data": {
                "FUN_08001814": {
                    "initialize_data": 2,
                    "initialize_param": 1,
                    "initialize_parameters": 12,
                    "initialize_params": 15,
                    "initialize_values": 1
                },
                "bVar4": {
                    "flag_not_one": 1,
                    "is_condition_true": 1,
                    "is_flag_non_zero": 1,
                    "is_flag_not_equal_one": 1,
                    "is_flag_not_one": 1,
                    "is_flag_one": 3,
                    "is_flag_set": 9,
                    "is_flag_true": 4,
                    "is_input_flag_set": 1,
                    "is_not1": 1,
                    "is_not_equal": 2,
                    "is_not_one": 1,
                    "is_one": 1,
                    "is_param9_not1": 1,
                    "is_param9_one": 1,
                    "is_param_flag_true": 1,
                    "is_status_one": 1
                },
                "iVar1": {
                    "error_code": 1,
                    "result": 28,
                    "return_value": 1,
                    "status": 1
                },
                "param_1": {
                    "data": 1,
                    "data_array": 1,
                    "function_params": 1,
                    "out_params": 1,
                    "output_array": 6,
                    "output_params": 1,
                    "param_array": 3,
                    "parameter_array": 1,
                    "parameter_list": 1,
                    "parameters": 6,
                    "params": 5,
                    "params_array": 3,
                    "result_array": 1
                },
                "param_2": {
                    "input_param1": 1,
                    "param2": 12,
                    "param_2": 9,
                    "second_param": 1,
                    "unused": 3,
                    "unused_1": 2,
                    "unused_param": 1,
                    "unused_param1": 1
                },
                "param_3": {
                    "address": 1,
                    "input1": 7,
                    "input_1": 2,
                    "input_param1": 2,
                    "input_param2": 1,
                    "param1": 1,
                    "param3": 7,
                    "param_3": 3,
                    "param_a": 1,
                    "source1": 1,
                    "val1": 1,
                    "value1": 3,
                    "value_1": 1
                },
                "param_4": {
                    "input2": 6,
                    "input4": 1,
                    "input_2": 2,
                    "input_param2": 2,
                    "input_param3": 1,
                    "param2": 1,
                    "param4": 7,
                    "param_4": 3,
                    "param_b": 1,
                    "source2": 1,
                    "val2": 1,
                    "value": 1,
                    "value2": 3,
                    "value_2": 1
                },
                "param_5": {
                    "address1": 1,
                    "input2": 1,
                    "input3": 6,
                    "input_3": 2,
                    "input_param3": 2,
                    "input_param4": 1,
                    "param3": 1,
                    "param5": 7,
                    "param_5": 3,
                    "param_c": 1,
                    "source3": 1,
                    "val3": 1,
                    "value3": 3,
                    "value_3": 1
                },
                "param_6": {
                    "input4": 6,
                    "input5": 1,
                    "input_4": 2,
                    "input_param4": 2,
                    "input_param5": 1,
                    "param4": 1,
                    "param6": 7,
                    "param_6": 3,
                    "param_d": 1,
                    "source4": 1,
                    "val4": 1,
                    "value1": 1,
                    "value4": 3,
                    "value_4": 1
                },
                "param_7": {
                    "address2": 1,
                    "input3": 1,
                    "input5": 6,
                    "input_5": 2,
                    "input_param5": 2,
                    "input_param6": 1,
                    "param5": 1,
                    "param7": 7,
                    "param_7": 3,
                    "param_e": 1,
                    "source5": 1,
                    "val5": 1,
                    "value5": 3,
                    "value_5": 1
                },
                "param_8": {
                    "input6": 7,
                    "input_6": 2,
                    "input_param6": 2,
                    "input_param7": 1,
                    "param6": 1,
                    "param8": 7,
                    "param_8": 3,
                    "param_f": 1,
                    "source6": 1,
                    "val6": 1,
                    "value2": 1,
                    "value6": 3,
                    "value_6": 1
                },
                "param_9": {
                    "bool_param": 1,
                    "flag": 23,
                    "input_param7": 1,
                    "param9": 4,
                    "param_flag": 1,
                    "status": 1
                },
                "uVar2": {
                    "high_bits": 4,
                    "high_bytes": 1,
                    "high_part": 2,
                    "high_part_result": 1,
                    "high_result": 1,
                    "high_val": 1,
                    "high_value": 1,
                    "high_value_1": 1,
                    "param2_result": 1,
                    "result": 1,
                    "result2": 1,
                    "temp": 5,
                    "temp1": 1,
                    "temp_1": 1,
                    "temp_value": 1,
                    "temp_var": 3,
                    "u_var2": 1,
                    "upper32bit": 1,
                    "upper_bits": 1,
                    "upper_result": 1,
                    "upper_word": 1
                },
                "uVar3": {
                    "assigned_value": 1,
                    "bit_value": 1,
                    "bool_value": 1,
                    "byte_value": 1,
                    "flag": 1,
                    "flag_as_uint": 1,
                    "flag_value": 9,
                    "input_flag": 1,
                    "low_val": 1,
                    "low_value": 1,
                    "new_value": 1,
                    "param9_bit": 1,
                    "param_flag": 1,
                    "param_flag_value": 1,
                    "temp": 3,
                    "temp2": 1,
                    "temp_2": 1,
                    "u_var3": 1,
                    "value": 3
                },
                "uVar5": {
                    "first_result": 1,
                    "first_return_value": 1,
                    "func_result1": 2,
                    "func_return_value1": 1,
                    "function_result1": 2,
                    "result1": 3,
                    "result2": 1,
                    "result64": 1,
                    "temp1": 5,
                    "temp3": 1,
                    "temp_3": 1,
                    "temp_result1": 1,
                    "temp_val1": 1,
                    "temp_value1": 3,
                    "temp_value_1": 1,
                    "temp_var1": 4,
                    "temp_var2": 1,
                    "temporary_var1": 1
                },
                "uVar6": {
                    "func_result2": 2,
                    "func_return_value2": 1,
                    "function_result2": 2,
                    "result2": 3,
                    "result3": 1,
                    "result64_2": 1,
                    "second_result": 1,
                    "second_return_value": 1,
                    "temp2": 5,
                    "temp4": 1,
                    "temp_4": 1,
                    "temp_result2": 1,
                    "temp_val2": 1,
                    "temp_value2": 3,
                    "temp_value_2": 1,
                    "temp_var2": 4,
                    "temp_var3": 1,
                    "temporary_var2": 1
                },
                "uVar7": {
                    "func_result3": 2,
                    "func_return_value3": 1,
                    "function_result3": 2,
                    "result3": 3,
                    "result4": 1,
                    "result64_3": 1,
                    "temp3": 5,
                    "temp5": 1,
                    "temp_5": 1,
                    "temp_result3": 1,
                    "temp_val3": 1,
                    "temp_value3": 3,
                    "temp_value_3": 1,
                    "temp_var3": 4,
                    "temp_var4": 1,
                    "temporary_var3": 1,
                    "third_result": 1,
                    "third_return_value": 1
                }
            },
            "called": [
                "FUN_0800074c",
                "FUN_080004f8",
                "FUN_08000190",
                "FUN_0800040c",
                "FUN_080009dc"
            ],
            "calling": [
                "FUN_080018f8",
                "FUN_08001ab0"
            ],
            "code": "\nvoid initialize_params_08001814(undefined4 *parameters,undefined4 param2,undefined4 input1,undefined4 param4,\n                 undefined4 param5,undefined4 param6,undefined4 param7,undefined4 param8,\n                 int flag)\n\n{\n  int result;\n  undefined4 temp;\n  undefined flag_value;\n  bool is_flag_set;\n  undefined8 temp1;\n  undefined8 temp2;\n  undefined8 temp3;\n  \n  result = FUN_080009dc(input1,param4,0,0);\n  if (((result == 0) && (result = FUN_080009dc(param5,param6,0,0), result == 0)) &&\n     (result = FUN_080009dc(param7,param8,0,0), result == 0)) {\n    parameters[0xd] = flag;\n    is_flag_set = flag != 1;\n    if (is_flag_set) {\n      flag = 0;\n    }\n    flag_value = (undefined)flag;\n    if (!is_flag_set) {\n      flag_value = 1;\n    }\n    *(undefined *)((int)parameters + 0x71) = flag_value;\n    *parameters = input1;\n    parameters[1] = param4;\n    parameters[2] = param5;\n    parameters[3] = param6;\n    parameters[4] = param7;\n    parameters[5] = param8;\n    temp1 = FUN_0800040c(parameters[0x16]);\n    temp1 = FUN_0800074c((int)temp1,(int)((ulonglong)temp1 >> 0x20),0,0x408f4000);\n    temp = (undefined4)((ulonglong)temp1 >> 0x20);\n    parameters[6] = input1;\n    parameters[7] = param4;\n    temp2 = FUN_080004f8(param5,param6,(int)temp1,temp);\n    *(undefined8 *)(parameters + 8) = temp2;\n    temp1 = FUN_0800074c(param7,param8,(int)temp1,temp);\n    *(undefined8 *)(parameters + 10) = temp1;\n    if (parameters[0xc] == 1) {\n      temp3 = FUN_08000190(0,0,input1,param4);\n      *(undefined8 *)(parameters + 6) = temp3;\n      temp2 = FUN_08000190(0,0,(int)temp2,(int)((ulonglong)temp2 >> 0x20));\n      *(undefined8 *)(parameters + 8) = temp2;\n      temp1 = FUN_08000190(0,0,(int)temp1,(int)((ulonglong)temp1 >> 0x20));\n      *(undefined8 *)(parameters + 10) = temp1;\n    }\n  }\n  return;\n}\n\n",
            "current_name": "initialize_params_08001814",
            "entrypoint": "0x08001814",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001814": "initialize_params_08001814",
                "bVar4": "is_flag_set",
                "iVar1": "result",
                "param_1": "parameters",
                "param_2": "param2",
                "param_3": "input1",
                "param_4": "param4",
                "param_5": "param5",
                "param_6": "param6",
                "param_7": "param7",
                "param_8": "param8",
                "param_9": "flag",
                "uVar2": "temp",
                "uVar3": "flag_value",
                "uVar5": "temp1",
                "uVar6": "temp2",
                "uVar7": "temp3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080018f8": {
            "additional_data": {
                "FUN_08001814": {
                    "call_sub_function": 2,
                    "cleanup_system": 1,
                    "execute_initialization": 1,
                    "execute_startup_procedure": 1,
                    "execute_task": 1,
                    "initialize": 1,
                    "initialize_application": 1,
                    "initialize_data": 3,
                    "initialize_parameters": 4,
                    "initialize_resources": 1,
                    "initialize_sub_components": 1,
                    "initialize_sub_function": 1,
                    "initialize_subfunctions": 1,
                    "initialize_variables": 1,
                    "perform_initialization": 2,
                    "perform_subroutine": 1,
                    "set_parameters": 1,
                    "setup_environment": 2,
                    "setup_parameters": 1,
                    "subfunction": 1
                },
                "FUN_080018f8": {
                    "call_sub_functions": 1,
                    "execute_application": 1,
                    "execute_functions": 1,
                    "execute_initialization": 7,
                    "execute_main_function": 1,
                    "execute_preparation": 1,
                    "execute_setup": 1,
                    "initialize": 4,
                    "initialize_app": 2,
                    "initialize_application": 5,
                    "initialize_components": 1,
                    "initialize_function": 1,
                    "initialize_system": 3,
                    "process_data": 1,
                    "run_initialization": 1
                },
                "param_1": {
                    "data_pointer": 2,
                    "ptr1": 1
                },
                "param_2": {
                    "input_param2": 1,
                    "param2": 2
                },
                "param_3": {
                    "input_param3": 1,
                    "param3": 2
                },
                "param_4": {
                    "input_param4": 1,
                    "param4": 2
                }
            },
            "called": [
                "FUN_08001814"
            ],
            "calling": [
                "FUN_08000cd0"
            ],
            "code": "\nvoid initialize_application_080018f8(void)\n\n{\n  FUN_08001814();\n  return;\n}\n\n",
            "current_name": "initialize_application_080018f8",
            "entrypoint": "0x080018f8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080018f8": "initialize_application_080018f8"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001918": {
            "additional_data": {
                "FUN_0800040c": {
                    "fetch_data": 1
                },
                "FUN_0800042c": {
                    "allocate_memory": 1
                },
                "FUN_080004f8": {
                    "process_data2": 1
                },
                "FUN_0800074c": {
                    "perform_calculation": 1
                },
                "FUN_08001918": {
                    "calculate_and_update_values": 2,
                    "process_data": 11,
                    "process_params": 1,
                    "update_data": 8,
                    "update_param": 3,
                    "update_param1": 1,
                    "update_param_values": 1,
                    "update_parameters": 4
                },
                "param_1": {
                    "arg1": 2,
                    "base_address": 1,
                    "data": 5,
                    "data_address": 2,
                    "data_pointer": 2,
                    "data_ptr": 7,
                    "data_struct": 2,
                    "input_address": 1,
                    "input_data": 2,
                    "input_param": 1,
                    "input_ptr": 1,
                    "param1": 1,
                    "param_addr": 2,
                    "param_pointer": 2
                },
                "param_2": {
                    "arg2": 1,
                    "count": 10,
                    "data_size": 2,
                    "input_size": 1,
                    "length": 3,
                    "num_updates": 1,
                    "param2": 1,
                    "param_size": 1,
                    "param_value": 3,
                    "size": 6,
                    "value": 2
                },
                "param_3": {
                    "address1": 1,
                    "arg1": 2,
                    "arg3": 2,
                    "param1": 7,
                    "param3": 10,
                    "param_3": 2,
                    "param_a": 1,
                    "param_ptr": 1,
                    "param_three": 1,
                    "param_to_pass1": 1,
                    "temp_1": 1,
                    "value1": 1
                },
                "param_4": {
                    "address2": 1,
                    "arg2": 2,
                    "arg4": 2,
                    "param2": 7,
                    "param4": 10,
                    "param_4": 2,
                    "param_b": 1,
                    "param_four": 1,
                    "param_to_pass2": 1,
                    "temp_2": 1,
                    "unused": 1,
                    "value2": 1
                },
                "uVar1": {
                    "high_bits": 1,
                    "result1": 21,
                    "result_1": 1,
                    "result_a": 1,
                    "result_high": 1,
                    "result_upper": 1,
                    "temp1": 1,
                    "updated_value1": 1,
                    "upper_var1": 1,
                    "var1": 2
                },
                "uVar2": {
                    "func_result1": 1,
                    "function_result1": 1,
                    "ptr1": 1,
                    "result1": 3,
                    "result2": 20,
                    "result_2": 1,
                    "result_b": 1,
                    "temp2": 1,
                    "updated_value2": 1,
                    "var2": 1
                },
                "uVar3": {
                    "func_result2": 1,
                    "function_result2": 1,
                    "ptr2": 1,
                    "result2": 3,
                    "result3": 20,
                    "result_3": 1,
                    "result_c": 1,
                    "temp3": 1,
                    "updated_value3": 1,
                    "var3": 1
                }
            },
            "called": [
                "FUN_0800074c",
                "FUN_0800042c",
                "FUN_080004f8",
                "FUN_0800040c"
            ],
            "calling": [
                "FUN_08000cd0"
            ],
            "code": "\nvoid process_data_08001918(int data_ptr,int count,undefined4 param3,undefined4 param4)\n\n{\n  undefined4 result1;\n  undefined8 result2;\n  undefined8 result3;\n  \n  if (0 < count) {\n    result2 = FUN_0800042c(count);\n    result3 = FUN_0800040c(*(undefined4 *)(data_ptr + 0x58));\n    result2 = FUN_0800074c((int)result2,(int)((ulonglong)result2 >> 0x20),(int)result3,\n                         (int)((ulonglong)result3 >> 0x20),param4);\n    result1 = (undefined4)((ulonglong)result2 >> 0x20);\n    result3 = FUN_080004f8((int)result2,result1,*(undefined4 *)(data_ptr + 0x20),\n                         *(undefined4 *)(data_ptr + 0x24));\n    *(undefined8 *)(data_ptr + 0x20) = result3;\n    result2 = FUN_0800074c(*(undefined4 *)(data_ptr + 0x28),*(undefined4 *)(data_ptr + 0x2c),(int)result2,\n                         result1);\n    *(undefined8 *)(data_ptr + 0x28) = result2;\n    *(int *)(data_ptr + 0x58) = count;\n  }\n  return;\n}\n\n",
            "current_name": "process_data_08001918",
            "entrypoint": "0x08001918",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001918": "process_data_08001918",
                "param_1": "data_ptr",
                "param_2": "count",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001960": {
            "additional_data": {
                "FUN_08001960": {
                    "initialize_data": 1,
                    "initialize_data_structure": 1,
                    "initialize_parameters": 6,
                    "initialize_params": 3,
                    "store_and_check_values": 1,
                    "update_data": 5,
                    "update_device_info": 1,
                    "update_parameters": 5,
                    "update_params": 6,
                    "update_params_and_check": 1,
                    "update_params_and_values": 1
                },
                "iVar1": {
                    "result": 25,
                    "return_value": 3,
                    "status": 3
                },
                "param_1": {
                    "base": 1,
                    "base_address": 2,
                    "context": 1,
                    "data": 2,
                    "data_addr": 1,
                    "data_struct": 3,
                    "data_struct_ptr": 1,
                    "data_structure": 2,
                    "device_info": 1,
                    "obj": 1,
                    "obj_ptr": 3,
                    "object": 1,
                    "object_ptr": 1,
                    "param": 1,
                    "param1": 4,
                    "param_base": 1,
                    "param_buffer": 1,
                    "param_ptr": 1,
                    "struct_address": 1,
                    "struct_pointer": 1,
                    "struct_ptr": 1
                },
                "param_2": {
                    "arg2": 1,
                    "param2": 14,
                    "param_2": 4,
                    "unused": 4,
                    "unused1": 1,
                    "unused_param": 3,
                    "unused_param2": 1
                },
                "param_3": {
                    "address1": 1,
                    "input1": 1,
                    "new_param1": 14,
                    "new_value1": 5,
                    "param3": 1,
                    "param_3_value": 1,
                    "source1": 1,
                    "source_1": 1,
                    "source_param1": 1,
                    "updated_param1": 1,
                    "value1": 4
                },
                "param_4": {
                    "address2": 1,
                    "input2": 1,
                    "new_param2": 14,
                    "new_value2": 5,
                    "param4": 1,
                    "param_4_value": 1,
                    "source2": 1,
                    "source_2": 1,
                    "source_param2": 1,
                    "updated_param2": 1,
                    "value2": 4
                },
                "param_5": {
                    "dest1": 1,
                    "dest_1": 1,
                    "dest_param1": 1,
                    "input3": 1,
                    "new_param3": 14,
                    "new_value3": 5,
                    "param5": 1,
                    "param_5_value": 1,
                    "updated_param3": 1,
                    "value1": 1,
                    "value3": 4
                },
                "param_6": {
                    "dest2": 1,
                    "dest_2": 1,
                    "dest_param2": 1,
                    "input4": 1,
                    "new_param4": 14,
                    "new_value4": 5,
                    "param6": 1,
                    "param_6_value": 1,
                    "updated_param4": 1,
                    "value2": 1,
                    "value4": 4
                },
                "puVar2": {
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "pointer": 4,
                    "ptr": 12,
                    "ptr_to_data": 4,
                    "ptr_to_value": 2,
                    "ptr_to_values": 1,
                    "ptr_u_var2": 1,
                    "ptr_value": 1,
                    "ptr_var": 1,
                    "pu_var": 1,
                    "struct_ptr": 1
                },
                "uVar3": {
                    "data1": 4,
                    "stored_address1": 1,
                    "temp1": 3,
                    "temp_1": 1,
                    "temp_data1": 1,
                    "temp_value1": 2,
                    "temp_var1": 1,
                    "val1": 1,
                    "value1": 10,
                    "var1": 7
                },
                "uVar4": {
                    "data2": 4,
                    "stored_value1": 1,
                    "temp2": 3,
                    "temp_2": 1,
                    "temp_data2": 1,
                    "temp_value2": 2,
                    "temp_var2": 1,
                    "val2": 1,
                    "value2": 10,
                    "var2": 7
                },
                "uVar5": {
                    "data3": 4,
                    "stored_address2": 1,
                    "temp3": 3,
                    "temp_3": 1,
                    "temp_data3": 1,
                    "temp_value3": 2,
                    "temp_var3": 1,
                    "val3": 1,
                    "value3": 10,
                    "var3": 7
                },
                "uVar6": {
                    "data4": 4,
                    "stored_value2": 1,
                    "temp4": 3,
                    "temp_4": 1,
                    "temp_data4": 1,
                    "temp_value4": 2,
                    "temp_var4": 1,
                    "val4": 1,
                    "value4": 10,
                    "var4": 7
                }
            },
            "called": [
                "FUN_08000a18",
                "FUN_08000a04",
                "FUN_080009dc"
            ],
            "calling": [
                "FUN_08000cd0",
                "FUN_08001ab0"
            ],
            "code": "\nvoid update_params_and_values_08001960(int param1,undefined4 param2,undefined4 new_param1,undefined4 new_param2,\n                 undefined4 new_param3,undefined4 new_param4)\n\n{\n  int result;\n  undefined4 *ptr;\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  \n  result = FUN_08000a04(new_param1,new_param2,new_param3,new_param4,new_param2);\n  if (result == 0) {\n    *(undefined4 *)(param1 + 0x60) = new_param1;\n    *(undefined4 *)(param1 + 100) = new_param2;\n    *(undefined4 *)(param1 + 0x68) = new_param3;\n    *(undefined4 *)(param1 + 0x6c) = new_param4;\n    if (*(char *)(param1 + 0x70) != '\\0') {\n      ptr = *(undefined4 **)(param1 + 0x3c);\n      value1 = *ptr;\n      value3 = ptr[1];\n      result = FUN_080009dc(new_param3,new_param4,value1,value3);\n      if (result == 0) {\n        result = FUN_08000a18(new_param1,new_param2,value1,value3);\n        if (result != 0) {\n          *ptr = new_param1;\n          ptr[1] = new_param2;\n        }\n      }\n      else {\n        *ptr = new_param3;\n        ptr[1] = new_param4;\n      }\n      value1 = *(undefined4 *)(param1 + 0x48);\n      value3 = *(undefined4 *)(param1 + 0x4c);\n      value2 = *(undefined4 *)(param1 + 0x68);\n      value4 = *(undefined4 *)(param1 + 0x6c);\n      result = FUN_08000a18(value1,value3,value2,value4);\n      if (result != 0) {\n        *(undefined4 *)(param1 + 0x48) = value2;\n        *(undefined4 *)(param1 + 0x4c) = value4;\n        return;\n      }\n      value2 = *(undefined4 *)(param1 + 0x60);\n      value4 = *(undefined4 *)(param1 + 100);\n      result = FUN_080009dc(value1,value3,value2,value4);\n      if (result != 0) {\n        *(undefined4 *)(param1 + 0x48) = value2;\n        *(undefined4 *)(param1 + 0x4c) = value4;\n      }\n    }\n  }\n  return;\n}\n\n",
            "current_name": "update_params_and_values_08001960",
            "entrypoint": "0x08001960",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001960": "update_params_and_values_08001960",
                "iVar1": "result",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "new_param1",
                "param_4": "new_param2",
                "param_5": "new_param3",
                "param_6": "new_param4",
                "puVar2": "ptr",
                "uVar3": "value1",
                "uVar4": "value2",
                "uVar5": "value3",
                "uVar6": "value4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080019f6": {
            "additional_data": {
                "FUN_080009dc": {
                    "perform_action": 1
                },
                "FUN_08000a18": {
                    "check_condition": 1
                },
                "FUN_080019f6": {
                    "copy_data_from_pointers": 1,
                    "copy_values_and_check": 1,
                    "extract_data": 1,
                    "initialize_parameters": 1,
                    "process_data": 2,
                    "update_data": 6,
                    "update_data_and_check_validity": 1,
                    "update_function_parameters": 1,
                    "update_parameters": 1,
                    "update_params_and_check_validity": 1,
                    "update_pointer_values": 1,
                    "update_values": 4,
                    "update_values_based_on_arrays": 1,
                    "update_values_based_on_conditions": 1,
                    "update_values_based_on_pointers": 3,
                    "update_variable_values": 1,
                    "update_variables": 2,
                    "update_variables_based_on_pointers": 1,
                    "updated_process_data": 1
                },
                "iVar1": {
                    "process_result": 1,
                    "result": 26,
                    "return_value": 2,
                    "status": 2
                },
                "param_1": {
                    "address": 1,
                    "base_address": 3,
                    "base_pointer": 1,
                    "data": 6,
                    "data_address": 3,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "function_param": 1,
                    "input": 5,
                    "input_address": 1,
                    "input_struct": 1,
                    "param": 3,
                    "param1": 1,
                    "ptr": 2
                },
                "uVar2": {
                    "first_param": 1,
                    "first_ptr_value": 1,
                    "first_value": 4,
                    "param2": 1,
                    "pointer1": 2,
                    "pointer3": 1,
                    "ptr1": 1,
                    "result_value": 1,
                    "temp1": 4,
                    "temp_var": 1,
                    "temp_var1": 6,
                    "value1": 4,
                    "var1": 4
                },
                "uVar3": {
                    "array1": 1,
                    "data1": 1,
                    "first_value": 2,
                    "nested_pointer1": 1,
                    "param3": 1,
                    "pointer1": 3,
                    "pointer2": 1,
                    "ptr1": 4,
                    "ptr2": 1,
                    "ptr_value1": 1,
                    "second_param": 1,
                    "second_ptr_value": 1,
                    "second_value": 3,
                    "temp2": 1,
                    "temp_var2": 3,
                    "val1": 1,
                    "value1": 1,
                    "var1": 1,
                    "var2": 3
                },
                "uVar4": {
                    "array2": 1,
                    "data2": 1,
                    "nested_pointer2": 1,
                    "param4": 1,
                    "pointer2": 3,
                    "pointer3": 1,
                    "ptr2": 4,
                    "ptr3": 1,
                    "ptr_value2": 1,
                    "second_value": 2,
                    "temp3": 1,
                    "temp_var3": 3,
                    "third_param": 1,
                    "third_ptr_value": 1,
                    "third_value": 3,
                    "val2": 1,
                    "value2": 1,
                    "var2": 1,
                    "var3": 3
                },
                "uVar5": {
                    "data3": 1,
                    "fourth_param": 1,
                    "fourth_ptr_value": 1,
                    "fourth_value": 3,
                    "param5": 1,
                    "param_value2": 1,
                    "pointer2": 1,
                    "pointer4": 2,
                    "ptr4": 1,
                    "return_value": 1,
                    "second_value": 1,
                    "temp2": 2,
                    "temp4": 1,
                    "temp_var2": 2,
                    "temp_var4": 3,
                    "third_value": 1,
                    "val3": 1,
                    "value2": 3,
                    "var3": 1,
                    "var4": 3
                }
            },
            "called": [
                "FUN_08000a18",
                "FUN_080009dc"
            ],
            "calling": [
                "FUN_08001a44"
            ],
            "code": "\nvoid update_values_based_on_conditions_080019f6(int data)\n\n{\n  int result;\n  undefined4 temp_var1;\n  undefined4 ptr1;\n  undefined4 ptr2;\n  undefined4 value2;\n  \n  ptr1 = **(undefined4 **)(data + 0x3c);\n  ptr2 = (*(undefined4 **)(data + 0x3c))[1];\n  *(undefined4 *)(data + 0x48) = ptr1;\n  *(undefined4 *)(data + 0x4c) = ptr2;\n  temp_var1 = (*(undefined4 **)(data + 0x38))[1];\n  *(undefined4 *)(data + 0x50) = **(undefined4 **)(data + 0x38);\n  *(undefined4 *)(data + 0x54) = temp_var1;\n  temp_var1 = *(undefined4 *)(data + 0x68);\n  value2 = *(undefined4 *)(data + 0x6c);\n  result = FUN_08000a18(ptr1,ptr2,temp_var1,value2);\n  if (result == 0) {\n    temp_var1 = *(undefined4 *)(data + 0x60);\n    value2 = *(undefined4 *)(data + 100);\n    result = FUN_080009dc(ptr1,ptr2,temp_var1,value2);\n    if (result != 0) {\n      *(undefined4 *)(data + 0x48) = temp_var1;\n      *(undefined4 *)(data + 0x4c) = value2;\n    }\n    return;\n  }\n  *(undefined4 *)(data + 0x48) = temp_var1;\n  *(undefined4 *)(data + 0x4c) = value2;\n  return;\n}\n\n",
            "current_name": "update_values_based_on_conditions_080019f6",
            "entrypoint": "0x080019f6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080019f6": "update_values_based_on_conditions_080019f6",
                "iVar1": "result",
                "param_1": "data",
                "uVar2": "temp_var1",
                "uVar3": "ptr1",
                "uVar4": "ptr2",
                "uVar5": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001a44": {
            "additional_data": {
                "FUN_08001a44": {
                    "set_flag": 2,
                    "set_flag_based_on_condition": 1,
                    "set_flag_based_on_param": 1,
                    "set_flag_value": 1,
                    "update_flag": 10,
                    "update_flag_based_on_condition": 1,
                    "update_flag_based_on_param": 1,
                    "update_flag_value": 3,
                    "update_param": 1,
                    "update_param_value": 2,
                    "update_parameter_status": 2,
                    "update_parameter_value": 1,
                    "update_status": 5
                },
                "param_1": {
                    "address": 1,
                    "base_address": 11,
                    "data_address": 1,
                    "data_pointer": 1,
                    "flag_address": 2,
                    "flag_offset": 1,
                    "function_address": 1,
                    "input_data": 1,
                    "input_ptr": 1,
                    "memory_address": 1,
                    "object_address": 5,
                    "param_address": 1,
                    "parameter_address": 1,
                    "pointer": 1,
                    "ptr": 1,
                    "target": 1
                },
                "param_2": {
                    "condition": 8,
                    "flag": 7,
                    "flag_status": 1,
                    "flag_value": 7,
                    "new_value": 2,
                    "param_value": 1,
                    "status": 4,
                    "update_flag": 1
                },
                "uVar1": {
                    "flag": 4,
                    "flag_value": 2,
                    "new_flag": 1,
                    "new_flag_value": 4,
                    "new_status": 2,
                    "new_value": 11,
                    "status": 2,
                    "update_value": 1,
                    "updated_flag": 1,
                    "updated_status": 1
                }
            },
            "called": [
                "FUN_080019f6"
            ],
            "calling": [
                "FUN_08000cd0"
            ],
            "code": "\nvoid update_flag_value_08001a44(int base_address,int condition)\n\n{\n  undefined new_value;\n  \n  if (condition == 1) {\n    new_value = 1;\n    if (*(char *)(base_address + 0x70) == '\\0') {\n      FUN_080019f6();\n    }\n  }\n  else {\n    new_value = 0;\n  }\n  *(undefined *)(base_address + 0x70) = new_value;\n  return;\n}\n\n",
            "current_name": "update_flag_value_08001a44",
            "entrypoint": "0x08001a44",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001a44": "update_flag_value_08001a44",
                "param_1": "base_address",
                "param_2": "condition",
                "uVar1": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001a66": {
            "additional_data": {
                "FUN_08001a66": {
                    "update_data": 2,
                    "update_parameter": 2,
                    "update_parameters": 12,
                    "update_params": 11,
                    "update_values": 2,
                    "update_values_if_necessary": 1
                },
                "F_08001a66": {
                    "update_parameters": 1
                },
                "param_1": {
                    "base_address": 1,
                    "data": 1,
                    "data_address": 2,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "data_struct": 3,
                    "function_pointer": 1,
                    "obj_address": 2,
                    "object_addr": 1,
                    "object_address": 6,
                    "object_pointer": 1,
                    "param": 2,
                    "param1": 3,
                    "param_ptr": 1,
                    "parameter1": 2,
                    "ptr": 2,
                    "struct_address": 1
                },
                "param_2": {
                    "new_param": 13,
                    "new_param_value": 1,
                    "new_value": 11,
                    "param2": 3,
                    "parameter2": 2,
                    "value": 1
                },
                "param_3": {
                    "argument1": 1,
                    "first_param": 1,
                    "old_data1": 1,
                    "old_param1": 1,
                    "old_param_1": 1,
                    "old_param_value_1": 1,
                    "old_value1": 4,
                    "param1": 3,
                    "param1_value": 1,
                    "param3": 7,
                    "param_3": 4,
                    "param_a": 1,
                    "parameter3": 2,
                    "temp1": 1,
                    "var1": 1
                },
                "param_4": {
                    "argument2": 1,
                    "old_data2": 1,
                    "old_param2": 1,
                    "old_param_2": 1,
                    "old_param_value_2": 1,
                    "old_value2": 4,
                    "param2": 3,
                    "param2_value": 1,
                    "param4": 7,
                    "param_4": 4,
                    "param_b": 1,
                    "parameter4": 2,
                    "second_param": 1,
                    "secondary_value": 1,
                    "temp2": 1,
                    "var2": 1
                },
                "uVar1": {
                    "result": 24,
                    "result_address": 1,
                    "return_value": 4,
                    "updated_value": 1
                }
            },
            "called": [
                "FUN_08000190"
            ],
            "calling": [
                "FUN_08001ab0"
            ],
            "code": "\nvoid update_parameters_08001a66(int object_address,int new_param,undefined4 param3,undefined4 param4)\n\n{\n  undefined8 result;\n  \n  if ((*(char *)(object_address + 0x70) != '\\0') && (*(int *)(object_address + 0x30) != new_param)) {\n    result = FUN_08000190(0,0,*(undefined4 *)(object_address + 0x18),*(undefined4 *)(object_address + 0x1c),param4\n                        );\n    *(undefined8 *)(object_address + 0x18) = result;\n    result = FUN_08000190(0,0,*(undefined4 *)(object_address + 0x20),*(undefined4 *)(object_address + 0x24));\n    *(undefined8 *)(object_address + 0x20) = result;\n    result = FUN_08000190(0,0,*(undefined4 *)(object_address + 0x28),*(undefined4 *)(object_address + 0x2c));\n    *(undefined8 *)(object_address + 0x28) = result;\n  }\n  *(int *)(object_address + 0x30) = new_param;\n  return;\n}\n\n",
            "current_name": "update_parameters_08001a66",
            "entrypoint": "0x08001a66",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001a66": "update_parameters_08001a66",
                "param_1": "object_address",
                "param_2": "new_param",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001ab0": {
            "additional_data": {
                "0x38": {
                    "obj_offset2": 1
                },
                "0x3c": {
                    "obj_offset1": 1
                },
                "0x40": {
                    "obj_offset3": 1
                },
                "0x406fe000": {
                    "some_value": 1
                },
                "0x44": {
                    "result_offset": 1
                },
                "0x58": {
                    "constant": 1
                },
                "0x70": {
                    "flag": 1
                },
                "FUN_08001814": {
                    "initialize_other_data": 1,
                    "modify_data": 1,
                    "perform_operation": 2,
                    "perform_sub_function3": 1,
                    "process_data": 3,
                    "process_parameters": 1,
                    "update_data": 2,
                    "update_data_structure": 1,
                    "update_params": 1
                },
                "FUN_08001960": {
                    "do_something": 1,
                    "initialize_data": 2,
                    "initialize_inner_values": 1,
                    "initialize_memory": 1,
                    "initialize_obj": 1,
                    "initialize_object": 1,
                    "initialize_param1": 1,
                    "initialize_sub_data": 1,
                    "initialize_sub_function1": 1,
                    "set_initial_values": 2,
                    "set_values": 1
                },
                "FUN_08001a66": {
                    "apply_function": 1,
                    "perform_action": 2,
                    "perform_calculation": 1,
                    "perform_computation": 2,
                    "perform_sub_function2": 1,
                    "process_data": 2,
                    "process_params": 1,
                    "set_param": 1,
                    "update_param": 1,
                    "update_values": 1
                },
                "FUN_08001ab0": {
                    "initialize": 1,
                    "initialize_and_process_data": 1,
                    "initialize_data": 10,
                    "initialize_data_structure": 1,
                    "initialize_function": 5,
                    "initialize_parameters": 5,
                    "initialize_params": 5,
                    "initialize_variables": 1,
                    "initialize_widget": 1,
                    "update_params_and_return": 1
                },
                "FUN_080058e0": {
                    "calculate_difference": 2,
                    "calculate_something": 1,
                    "calculate_value": 4,
                    "get_calculated_result": 1,
                    "get_difference": 2,
                    "get_updated_result": 1,
                    "perform_action": 1
                },
                "extraout_r1": {
                    "additional_result": 1,
                    "extra": 1,
                    "extra_out": 1,
                    "extra_output": 3,
                    "extra_output1": 3,
                    "extra_result": 13,
                    "extra_return_value": 2,
                    "extraout": 1,
                    "out_result": 1,
                    "result": 2,
                    "return_value": 3
                },
                "iVar1": {
                    "calculated_result": 1,
                    "difference": 1,
                    "result": 27,
                    "return_value": 1
                },
                "param_1": {
                    "base_address": 3,
                    "data": 2,
                    "data_buffer": 1,
                    "data_pointer": 6,
                    "data_ptr": 2,
                    "data_struct": 2,
                    "data_structure": 2,
                    "function_data": 1,
                    "function_parameter": 1,
                    "function_parameter1": 1,
                    "function_params": 1,
                    "function_pointer": 2,
                    "obj_ptr": 1,
                    "object": 1,
                    "object_pointer": 1,
                    "param_pointer": 1,
                    "param_struct": 1,
                    "struct_ptr": 1,
                    "widget": 1
                },
                "param_10": {
                    "function_parameter10": 1,
                    "param10": 20,
                    "param9": 1,
                    "param_j": 2,
                    "parameter10": 1,
                    "val10": 1,
                    "value10": 4,
                    "value9": 1
                },
                "param_11": {
                    "function_parameter11": 1,
                    "param10": 1,
                    "param11": 20,
                    "param_k": 2,
                    "parameter11": 1,
                    "val11": 1,
                    "value10": 1,
                    "value11": 4
                },
                "param_12": {
                    "function_parameter12": 1,
                    "param11": 1,
                    "param12": 20,
                    "param_l": 2,
                    "parameter12": 1,
                    "val12": 1,
                    "value11": 1,
                    "value12": 3,
                    "value4": 1
                },
                "param_2": {
                    "function_parameter2": 1,
                    "param1": 1,
                    "param2": 20,
                    "param_a": 2,
                    "parameter1": 1,
                    "val1": 1,
                    "value1": 5
                },
                "param_3": {
                    "function_parameter3": 1,
                    "param2": 1,
                    "param3": 20,
                    "param_b": 2,
                    "parameter2": 1,
                    "val2": 1,
                    "value2": 5
                },
                "param_4": {
                    "function_parameter4": 1,
                    "param3": 1,
                    "param4": 20,
                    "param_c": 2,
                    "parameter3": 1,
                    "val3": 1,
                    "value3": 5
                },
                "param_5": {
                    "function_parameter5": 1,
                    "param4": 1,
                    "param5": 20,
                    "param_e": 2,
                    "parameter5": 1,
                    "val5": 1,
                    "value4": 1,
                    "value5": 4
                },
                "param_6": {
                    "function_parameter6": 1,
                    "param5": 1,
                    "param6": 20,
                    "param_f": 2,
                    "parameter6": 1,
                    "val6": 1,
                    "value5": 1,
                    "value6": 4
                },
                "param_7": {
                    "function_parameter7": 1,
                    "param6": 1,
                    "param7": 20,
                    "param_g": 2,
                    "parameter7": 1,
                    "val7": 1,
                    "value6": 1,
                    "value7": 4
                },
                "param_8": {
                    "function_parameter8": 1,
                    "param7": 1,
                    "param8": 20,
                    "param_h": 2,
                    "parameter8": 1,
                    "val8": 1,
                    "value7": 1,
                    "value8": 4
                },
                "param_9": {
                    "function_parameter9": 1,
                    "param8": 1,
                    "param9": 20,
                    "param_i": 2,
                    "parameter9": 1,
                    "val9": 1,
                    "value8": 1,
                    "value9": 4
                }
            },
            "called": [
                "FUN_080058e0",
                "FUN_08001960",
                "FUN_08001a66",
                "FUN_08001814"
            ],
            "calling": [
                "FUN_08001b18"
            ],
            "code": "\nint initialize_and_process_data_08001ab0(int data_pointer,undefined4 param2,undefined4 param3,undefined4 param4,\n                undefined4 param5,undefined4 param6,undefined4 param7,undefined4 param8,\n                undefined4 param9,undefined4 param10,undefined4 param11,undefined4 param12)\n\n{\n  int result;\n  undefined4 extra_result;\n  \n  *(undefined4 *)(data_pointer + 0x3c) = param3;\n  *(undefined4 *)(data_pointer + 0x38) = param2;\n  *(undefined4 *)(data_pointer + 0x40) = param4;\n  *(undefined *)(data_pointer + 0x70) = 0;\n  FUN_08001960(data_pointer,param2,0,0,0,0x406fe000);\n  *(undefined4 *)(data_pointer + 0x58) = 100;\n  FUN_08001a66(data_pointer,param12);\n  FUN_08001814(data_pointer,extra_result,param5,param6,param7,param8,param9,param10,param11);\n  result = FUN_080058e0();\n  *(int *)(data_pointer + 0x44) = result - *(int *)(data_pointer + 0x58);\n  return data_pointer;\n}\n\n",
            "current_name": "initialize_and_process_data_08001ab0",
            "entrypoint": "0x08001ab0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001ab0": "initialize_and_process_data_08001ab0",
                "extraout_r1": "extra_result",
                "iVar1": "result",
                "param_1": "data_pointer",
                "param_10": "param10",
                "param_11": "param11",
                "param_12": "param12",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "param_6": "param6",
                "param_7": "param7",
                "param_8": "param8",
                "param_9": "param9"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001b18": {
            "additional_data": {
                "FUN_08001ab0": {
                    "execute_action": 1,
                    "execute_operation": 1,
                    "execute_subfunction": 3,
                    "initialize": 4,
                    "initialize_execution": 1,
                    "initialize_subsystem": 1,
                    "initialize_system": 3,
                    "initialize_variables": 1,
                    "perform_additional_task": 1,
                    "perform_operation": 1,
                    "perform_sub_tasks": 1,
                    "some_helper_function": 1,
                    "sub_function": 1
                },
                "FUN_08001b18": {
                    "execute_and_return": 6,
                    "execute_function": 8,
                    "execute_task": 1,
                    "initialize": 3,
                    "initialize_and_return": 3,
                    "initialize_function": 3,
                    "process_data": 1,
                    "run_main_function": 1,
                    "run_subroutine": 1,
                    "start_process": 1
                },
                "param_1": {
                    "data": 1,
                    "input": 4,
                    "input_param": 10,
                    "input_parameter": 4,
                    "input_value": 10,
                    "parameter": 1,
                    "value": 1
                },
                "param_2": {
                    "param2": 2,
                    "param_2": 1,
                    "param_a": 1,
                    "sub_param1": 1
                },
                "param_3": {
                    "param3": 2,
                    "param_3": 1,
                    "param_b": 1,
                    "sub_param2": 1
                },
                "param_4": {
                    "param4": 2,
                    "param_4": 1,
                    "param_c": 1,
                    "sub_param3": 1
                }
            },
            "called": [
                "FUN_08001ab0"
            ],
            "calling": [
                "FUN_08000b08"
            ],
            "code": "\nundefined4 execute_function_08001b18(undefined4 input_param)\n\n{\n  FUN_08001ab0();\n  return input_param;\n}\n\n",
            "current_name": "execute_function_08001b18",
            "entrypoint": "0x08001b18",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001b18": "execute_function_08001b18",
                "param_1": "input_param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001b48": {
            "additional_data": {
                "FUN_08001b48": {
                    "initialize": 1,
                    "initialize_board": 4,
                    "initialize_device": 1,
                    "initialize_hardware": 21,
                    "initialize_peripheral_devices": 2,
                    "initialize_system": 2
                },
                "FUN_08002494": {
                    "configure": 1,
                    "configure_adc": 1,
                    "do_something": 1,
                    "init_connection": 1,
                    "init_system": 1,
                    "initialize_connection": 1,
                    "initialize_memory": 1,
                    "initialize_params": 1,
                    "initialize_serial": 1,
                    "initialize_timer": 1,
                    "perform_action": 1,
                    "print_value3": 1,
                    "process_data": 1,
                    "reset_timer": 1,
                    "reset_values": 1,
                    "set_options": 1,
                    "set_values": 2
                },
                "FUN_08002514": {
                    "calculate_time": 1,
                    "convert_time": 1,
                    "convert_to_seconds": 1,
                    "convert_units": 1,
                    "delay_execution": 1,
                    "delay_in_milliseconds": 1,
                    "delay_microseconds": 1,
                    "delay_milliseconds": 1,
                    "display_result": 1,
                    "divide_and_process": 1,
                    "initialize_timer": 1,
                    "print_value": 1,
                    "print_value1": 4,
                    "set_time": 1,
                    "write_value": 1
                },
                "FUN_08002560": {
                    "configure_system": 1,
                    "initialize_dma": 1,
                    "print_value2": 4,
                    "process_data": 1,
                    "process_flag": 1,
                    "set_delay": 1,
                    "set_device_mode": 1,
                    "set_flag": 1,
                    "set_led_state": 1,
                    "set_mode": 4,
                    "set_output_mode": 1,
                    "set_status": 1
                },
                "FUN_08003688": {
                    "check_array": 2,
                    "check_array_sizes": 1,
                    "check_config_values": 1,
                    "check_first_process": 1,
                    "check_flag1": 1,
                    "check_function1": 1,
                    "check_hardware": 1,
                    "check_hardware_settings": 1,
                    "check_initialization1": 1,
                    "check_input": 1,
                    "check_param1": 1,
                    "check_value": 1,
                    "configure_device": 1,
                    "configure_devices": 1,
                    "configure_uart": 1,
                    "initialize_device": 1,
                    "initialize_gpio": 1
                },
                "FUN_08003ad4": {
                    "check_flag2": 1,
                    "check_function2": 1,
                    "check_initialization2": 1,
                    "check_input2": 1,
                    "check_param5": 1,
                    "check_pin_mode": 1,
                    "check_second_process": 1,
                    "check_subsystem": 1,
                    "check_value": 2,
                    "check_variables": 1,
                    "configure_gpio": 1,
                    "configure_input": 1,
                    "configure_peripheral": 1,
                    "initialize_components": 1,
                    "initialize_peripheral": 1,
                    "process_value": 1,
                    "validate_param": 1
                },
                "FUN_08003c44": {
                    "calculate_value": 5,
                    "get_calculation": 1,
                    "get_configuration": 1,
                    "get_current_time": 1,
                    "get_delay": 1,
                    "get_hardware_count": 1,
                    "get_hardware_status": 1,
                    "get_process_result": 1,
                    "get_result": 1,
                    "get_system_clock": 1,
                    "get_timestamp": 2,
                    "get_value": 1,
                    "get_var": 1
                },
                "FUN_08003c90": {
                    "check_array2": 1,
                    "check_array_sizes2": 1,
                    "check_function3": 1,
                    "check_param_array2": 1,
                    "check_third_process": 1,
                    "configure_device": 1,
                    "configure_hardware": 2,
                    "configure_module": 1,
                    "configure_output": 1,
                    "configure_spi": 1,
                    "do_something": 1,
                    "initialize_subsystem": 1,
                    "modify_value": 1,
                    "process_data": 1,
                    "process_values": 1,
                    "send_settings": 1,
                    "update_value": 1
                },
                "FUN_08004d40": {
                    "log_error": 10,
                    "print_error": 2
                },
                "iVar1": {
                    "is_error": 1,
                    "result": 21,
                    "result1": 1,
                    "return_value": 2
                },
                "local_10": {
                    "adc_config": 1,
                    "baud_rate": 1,
                    "constant3": 1,
                    "constant4": 4,
                    "external_interrupt_config": 1,
                    "flag": 1,
                    "flag4": 1,
                    "hardware_count": 1,
                    "index": 1,
                    "param4": 2,
                    "param5": 1,
                    "sample_rate": 1,
                    "timer_config": 1,
                    "value2": 1,
                    "value4": 9,
                    "var10": 1,
                    "variable_four": 1
                },
                "local_14": {
                    "adc_config": 1,
                    "constant2": 1,
                    "constant3": 4,
                    "count": 1,
                    "dma_config": 1,
                    "flag3": 1,
                    "hardware_setting": 1,
                    "hardware_version": 1,
                    "interrupt_config": 1,
                    "interrupt_pin": 1,
                    "num_channels": 1,
                    "param3": 3,
                    "param4": 1,
                    "serial_settings": 1,
                    "value1": 1,
                    "value3": 9,
                    "var9": 1,
                    "variable_three": 1
                },
                "local_1c": {
                    "buffer_size": 2,
                    "button_pin": 1,
                    "constant1": 1,
                    "constant2": 4,
                    "device_setting": 1,
                    "flag2": 1,
                    "hardware_size": 1,
                    "param2": 3,
                    "param3": 1,
                    "peripheral_config": 1,
                    "size": 2,
                    "systick_config": 1,
                    "timer_config": 1,
                    "value2": 9,
                    "var8": 1,
                    "variable_two": 1
                },
                "local_20": {
                    "clock_config": 1,
                    "constant1": 4,
                    "count": 1,
                    "default_setting": 1,
                    "flag": 1,
                    "flag1": 1,
                    "gpio_config": 1,
                    "hardware_flag": 1,
                    "led_pin": 1,
                    "output_parameter": 1,
                    "param1": 3,
                    "param2": 1,
                    "pin_configuration": 1,
                    "pin_mode": 1,
                    "special_setting": 1,
                    "value1": 9,
                    "var7": 1,
                    "variable_one": 1
                },
                "local_30": {
                    "array": 3,
                    "array2": 1,
                    "array_flags": 1,
                    "array_of_values": 2,
                    "array_one": 1,
                    "array_sizes": 1,
                    "board_config": 1,
                    "buffer": 1,
                    "config_array": 1,
                    "config_values": 1,
                    "device_config": 1,
                    "device_settings": 1,
                    "gpio_config": 2,
                    "gpio_config_array": 1,
                    "hardware_config": 1,
                    "hardware_settings": 3,
                    "input_values": 1,
                    "mem_address_array": 1,
                    "param1": 1,
                    "param_array": 1,
                    "parameters": 1,
                    "uart_config": 1,
                    "values": 2
                },
                "local_34": {
                    "constant8": 1,
                    "counter": 1,
                    "drive_capability": 1,
                    "flag5": 2,
                    "flag9": 1,
                    "gpio_alternate": 1,
                    "input_calibration": 1,
                    "output_config": 1,
                    "param10": 1,
                    "param11": 1,
                    "param4": 1,
                    "param5": 1,
                    "param9": 1,
                    "parameter5": 1,
                    "pin_input_value": 1,
                    "size": 1,
                    "value10": 4,
                    "value5": 1,
                    "var6": 1,
                    "variable_ten": 1
                },
                "local_38": {
                    "address": 1,
                    "constant7": 1,
                    "flag4": 2,
                    "flag8": 1,
                    "gpio_mode_config": 1,
                    "gpio_speed": 1,
                    "input_threshold": 1,
                    "interrupt_trigger": 1,
                    "interrupt_type": 1,
                    "max_value": 1,
                    "param10": 1,
                    "param3": 1,
                    "param4": 1,
                    "param8": 1,
                    "param9": 1,
                    "parameter4": 1,
                    "pin_output_value": 1,
                    "resistor_value": 1,
                    "size": 1,
                    "value4": 3,
                    "value9": 4,
                    "var5": 1,
                    "variable_nine": 1
                },
                "local_3c": {
                    "constant6": 1,
                    "flag3": 2,
                    "flag7": 1,
                    "gpio_pull": 1,
                    "input_config": 1,
                    "iterator": 1,
                    "offset": 1,
                    "param3": 1,
                    "param7": 1,
                    "param8": 1,
                    "param9": 1,
                    "parameter3": 1,
                    "pull_up_down": 1,
                    "pull_up_value": 1,
                    "pullup": 1,
                    "value": 1,
                    "value3": 3,
                    "value8": 4,
                    "var4": 1,
                    "variable_eight": 1
                },
                "local_40": {
                    "constant5": 1,
                    "count": 1,
                    "flag2": 2,
                    "flag6": 1,
                    "gpio_mode": 1,
                    "initial_state": 1,
                    "input_config": 1,
                    "input_mode": 1,
                    "mode": 1,
                    "param2": 3,
                    "param6": 1,
                    "param7": 1,
                    "param8": 1,
                    "parameter2": 1,
                    "peripheral_flag": 1,
                    "pin_count": 1,
                    "pin_mode": 1,
                    "pin_number": 1,
                    "uart_pin_config": 1,
                    "value2": 3,
                    "value7": 4,
                    "var3": 1,
                    "variable_seven": 1
                },
                "local_44": {
                    "flag1": 2,
                    "flag5": 1,
                    "gpio_pin": 2,
                    "input_parameter2": 1,
                    "input_pin": 1,
                    "input_setting": 1,
                    "interrupt_pin": 1,
                    "param1": 3,
                    "param5": 1,
                    "param6": 1,
                    "param7": 1,
                    "parameter1": 1,
                    "peripheral_config": 1,
                    "pin_mode_value": 1,
                    "pin_number": 1,
                    "pin_values": 1,
                    "type": 1,
                    "value": 1,
                    "value1": 3,
                    "value6": 4,
                    "var2": 1,
                    "variable_six": 1
                },
                "local_4c": {
                    "adc_prescaler": 1,
                    "config_flag": 1,
                    "constant2": 1,
                    "constant6": 1,
                    "constant9": 1,
                    "flag": 1,
                    "input_buffer_size": 1,
                    "local_value": 1,
                    "number": 1,
                    "output_mode": 1,
                    "output_resistor": 1,
                    "param1": 1,
                    "param10": 1,
                    "param12": 1,
                    "param13": 1,
                    "param4": 1,
                    "param6": 1,
                    "parameter7": 1,
                    "params2": 1,
                    "pin_mode": 1,
                    "rate": 1,
                    "serial_baud_rate": 1,
                    "spi_config_size": 1,
                    "start_value": 1,
                    "value11": 3,
                    "value5": 1,
                    "value6": 1,
                    "var1": 1,
                    "variable_eleven": 1
                },
                "local_54": {
                    "adc_config2": 1,
                    "array1": 1,
                    "array2": 3,
                    "array_of_numbers": 1,
                    "array_of_values2": 1,
                    "array_sizes2": 1,
                    "array_two": 1,
                    "array_values": 1,
                    "configurations": 1,
                    "hardware_settings": 1,
                    "local_array": 1,
                    "module_config": 1,
                    "output_config2": 1,
                    "output_setting": 1,
                    "param11": 1,
                    "param12": 1,
                    "param3": 1,
                    "param5": 1,
                    "param_array": 1,
                    "param_array2": 1,
                    "parameter6": 1,
                    "params1": 1,
                    "pin_config_array": 1,
                    "serial_config": 1,
                    "series_values": 1,
                    "settings": 1,
                    "spi_config_data": 1,
                    "value5": 1
                },
                "local_c": {
                    "address": 2,
                    "baud_rate": 1,
                    "buffer_size": 1,
                    "constant1": 1,
                    "constant4": 1,
                    "constant5": 4,
                    "flag_setting": 1,
                    "hardware_address": 1,
                    "memory_address": 1,
                    "param4": 1,
                    "param5": 2,
                    "param6": 1,
                    "serial_config": 1,
                    "spi_config": 1,
                    "uart_config": 1,
                    "value5": 9,
                    "var11": 1,
                    "variable_five": 1
                },
                "param_1": {
                    "gpio_config_array": 1,
                    "value": 1
                },
                "param_2": {
                    "count": 1
                },
                "uVar2": {
                    "calculated_value": 1,
                    "device_config": 1,
                    "div_result": 1,
                    "divided_value": 1,
                    "elapsed_time": 2,
                    "hardware_count": 1,
                    "new_value": 1,
                    "result2": 3,
                    "time": 4,
                    "time_delay": 1,
                    "time_in_milliseconds": 1,
                    "timestamp": 1,
                    "value12": 1,
                    "value6": 2
                }
            },
            "called": [
                "FUN_08002560",
                "FUN_08003c90",
                "FUN_08003c44",
                "FUN_08004d40",
                "FUN_08003ad4",
                "FUN_08002494",
                "FUN_08002514",
                "FUN_08003688"
            ],
            "calling": [
                "FUN_08004c52"
            ],
            "code": "\nvoid initialize_hardware_08001b48(void)\n\n{\n  int result;\n  uint time;\n  undefined4 array2 [2];\n  undefined4 value11;\n  undefined4 value6;\n  undefined4 value7;\n  undefined4 value8;\n  undefined4 value9;\n  undefined4 value10;\n  undefined4 hardware_settings [4];\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  undefined4 value5;\n  \n  hardware_settings[0] = 2;\n  value1 = 1;\n  value2 = 0x10;\n  value3 = 2;\n  value4 = 0;\n  value5 = 0x380000;\n  result = FUN_08003688(hardware_settings);\n  if (result != 0) {\n    FUN_08004d40(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x88);\n  }\n  value6 = 0xf;\n  value7 = 2;\n  value8 = 0;\n  value9 = 0x400;\n  value10 = 0;\n  result = FUN_08003ad4(&value6);\n  if (result != 0) {\n    FUN_08004d40(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x95);\n  }\n  array2[0] = 2;\n  value11 = 0x8000;\n  result = FUN_08003c90(array2);\n  if (result != 0) {\n    FUN_08004d40(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x9c);\n  }\n  time = FUN_08003c44();\n  FUN_08002514(time / 1000);\n  FUN_08002560(4);\n  FUN_08002494(0xffffffff,0);\n  return;\n}\n\n",
            "current_name": "initialize_hardware_08001b48",
            "entrypoint": "0x08001b48",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001b48": "initialize_hardware_08001b48",
                "iVar1": "result",
                "local_10": "value4",
                "local_14": "value3",
                "local_1c": "value2",
                "local_20": "value1",
                "local_30": "hardware_settings",
                "local_34": "value10",
                "local_38": "value9",
                "local_3c": "value8",
                "local_40": "value7",
                "local_44": "value6",
                "local_4c": "value11",
                "local_54": "array2",
                "local_c": "value5",
                "uVar2": "time"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001c32": {
            "additional_data": {
                "FUN_08001c32": {
                    "execute_initial_function": 1,
                    "execute_initialization": 4,
                    "execute_main_function": 3,
                    "execute_operations": 1,
                    "execute_startup_routine": 1,
                    "initialize": 3,
                    "initialize_application": 5,
                    "initialize_program": 4,
                    "initialize_system": 9
                },
                "FUN_08004c52": {
                    "call_sub_function": 3,
                    "do_something": 1,
                    "execute_important_process": 1,
                    "execute_initialization": 6,
                    "execute_main_function": 1,
                    "execute_setup": 1,
                    "execute_startup": 1,
                    "execute_sub_function": 1,
                    "execute_subfunction": 1,
                    "execute_subroutine": 1,
                    "execute_task": 2,
                    "initialize_system": 1,
                    "perform_initialization": 4,
                    "perform_operation": 1,
                    "perform_secondary_task": 1,
                    "perform_subtask": 1,
                    "perform_system_check": 1,
                    "perform_system_setup": 1,
                    "perform_task": 2
                }
            },
            "called": [
                "FUN_08004c52"
            ],
            "calling": [
                "FUN_08005f5e"
            ],
            "code": "\nvoid initialize_system_08001c32(void)\n\n{\n  FUN_08004c52();\n  return;\n}\n\n",
            "current_name": "initialize_system_08001c32",
            "entrypoint": "0x08001c32",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001c32": "initialize_system_08001c32"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001c3a": {
            "called": [],
            "calling": [
                "FUN_08001c88"
            ],
            "code": "\nvoid FUNC_08001c3a(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08001c3a",
            "entrypoint": "0x08001c3a",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08001c3a": "FUNC_08001c3a"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08001c3c": {
            "additional_data": {
                "0": {
                    "zero": 1
                },
                "0xf": {
                    "max_limit": 1,
                    "max_value": 2,
                    "threshold": 15,
                    "threshold_value": 2
                },
                "0xffffffff": {
                    "constant": 1,
                    "constant3": 7,
                    "constant_c": 1,
                    "constant_value": 1,
                    "constant_value_3": 1,
                    "data_flag": 1,
                    "default_value": 1,
                    "max_value": 1,
                    "param1": 1,
                    "value1": 1
                },
                "1000": {
                    "constant1": 1,
                    "constant2": 1
                },
                "DAT_20000078": {
                    "another_value": 1,
                    "constant2": 10,
                    "constant3": 1,
                    "constant_b": 4,
                    "constant_value_2": 1,
                    "data2": 2,
                    "divisor": 2,
                    "frequency": 1,
                    "interval": 1,
                    "milliseconds": 1,
                    "rate": 1
                },
                "DAT_2000007c": {
                    "current_device_id": 1,
                    "current_setting": 1,
                    "current_value": 3,
                    "data": 2,
                    "data3": 1,
                    "data_value": 2,
                    "saved_data": 1,
                    "saved_param": 1,
                    "saved_parameter": 2,
                    "stored_data": 2,
                    "stored_input": 1,
                    "stored_param": 2,
                    "stored_value": 4,
                    "value2": 1
                },
                "DAT_20000084": {
                    "constant1": 11,
                    "constant_a": 4,
                    "constant_value_1": 1,
                    "data1": 2,
                    "dividend": 1,
                    "factor": 1,
                    "max_value": 1,
                    "some_value": 1,
                    "time_constant": 1,
                    "timer": 1,
                    "total_time": 1
                },
                "FUN_08001c3c": {
                    "check_and_set_parameter": 1,
                    "configure_device": 1,
                    "initialize": 1,
                    "initialize_and_set_data": 1,
                    "initialize_data": 13,
                    "initialize_device": 1,
                    "initialize_program": 1,
                    "initialize_value": 1,
                    "process_data": 1,
                    "process_input": 4,
                    "process_param": 1,
                    "process_parameter": 2,
                    "update_data": 1,
                    "validate_and_set_param": 1,
                    "verify_and_set_param": 1
                },
                "FUN_08002494": {
                    "do_something": 2,
                    "modify_data": 1,
                    "perform_action": 2,
                    "perform_operation": 5,
                    "process_data": 5,
                    "send_command": 1,
                    "set_data": 1,
                    "set_device_settings": 1,
                    "set_value": 1,
                    "set_values": 2,
                    "update_data": 4,
                    "write_data": 2
                },
                "FUN_08002514": {
                    "calculate_delay": 3,
                    "calculate_divisor": 1,
                    "calculate_factor": 2,
                    "calculate_interval": 2,
                    "calculate_ratio": 4,
                    "calculate_threshold": 1,
                    "calculate_value": 14
                },
                "iVar1": {
                    "result": 29,
                    "return_value": 1,
                    "status_code": 1
                },
                "param_1": {
                    "arg1": 1,
                    "command": 1,
                    "data_size": 1,
                    "data_value": 3,
                    "input": 1,
                    "input_param": 3,
                    "input_parameter": 4,
                    "input_value": 10,
                    "new_value": 1,
                    "value": 5,
                    "value1": 1
                },
                "param_2": {
                    "arg2": 1,
                    "data": 1,
                    "data_param": 1,
                    "max_value": 1,
                    "new_param1": 1,
                    "operation_parameter": 1,
                    "param1": 2,
                    "param2": 5,
                    "param_2": 1,
                    "parameter_2": 1,
                    "value2": 2
                },
                "param_3": {
                    "additional_parameter": 1,
                    "arg3": 1,
                    "flag": 1,
                    "new_param2": 1,
                    "param2": 2,
                    "param3": 5,
                    "param_3": 1,
                    "parameter_3": 1,
                    "value": 1,
                    "value3": 2
                }
            },
            "called": [
                "FUN_08002494",
                "FUN_08002514"
            ],
            "calling": [
                "FUN_08003afa",
                "FUN_08001c88"
            ],
            "code": "\nundefined4 initialize_and_set_data_08001c3c(uint input_value)\n\n{\n  int result;\n  \n  result = FUN_08002514(DAT_20000084 / (1000 / DAT_20000078));\n  if (result != 0) {\n    return 1;\n  }\n  if (0xf < input_value) {\n    return 1;\n  }\n  FUN_08002494(0xffffffff,input_value,0);\n  DAT_2000007c = input_value;\n  return 0;\n}\n\n",
            "current_name": "initialize_and_set_data_08001c3c",
            "entrypoint": "0x08001c3c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001c3c": "initialize_and_set_data_08001c3c",
                "iVar1": "result",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001c88": {
            "additional_data": {
                "DAT_40022000": {
                    "memory_flag": 1
                },
                "FUNC_08001c3a": {
                    "calculate_something": 1,
                    "call_function3": 1,
                    "configure_subsystem": 1,
                    "do_something": 3,
                    "execute_function": 1,
                    "execute_operation": 1,
                    "execute_task": 1,
                    "initialize": 1,
                    "initialize_configuration": 1,
                    "initialize_system": 1,
                    "perform_action": 7,
                    "perform_additional_operations": 1,
                    "perform_cleanup": 1,
                    "perform_initialization": 1,
                    "perform_task": 2
                },
                "FUN_08001c3a": {
                    "call_function": 1,
                    "perform_operation": 1
                },
                "FUN_08001c3c": {
                    "activate_feature": 1,
                    "adjust_value": 1,
                    "call_function2": 1,
                    "change_flag_value": 1,
                    "configure": 1,
                    "configure_device": 4,
                    "configure_function": 1,
                    "configure_hardware": 1,
                    "configure_system": 1,
                    "initialize_subsystem": 1,
                    "perform_action": 3,
                    "perform_operation": 1,
                    "process_data": 1,
                    "process_value": 1,
                    "set_and_return": 1,
                    "set_config": 1,
                    "set_configuration": 1,
                    "set_flag_and_return": 1,
                    "set_flag_value": 1,
                    "set_mode": 3,
                    "set_operation": 1,
                    "set_option": 1,
                    "set_threshold": 1,
                    "update_status": 1
                },
                "FUN_08001c88": {
                    "initialize": 2,
                    "initialize_and_configure": 1,
                    "initialize_and_configure_peripheral": 1,
                    "initialize_and_set_flag": 1,
                    "initialize_data": 1,
                    "initialize_device": 5,
                    "initialize_hardware": 1,
                    "initialize_system": 3,
                    "set_bit_flag_and_call_functions": 1,
                    "set_data_flag": 1,
                    "set_flag_and_call_functions": 6,
                    "set_flags_and_call_functions": 1,
                    "set_memory_flags": 1,
                    "update_and_call_functions": 1,
                    "update_device_flags": 1,
                    "update_flags_and_call_functions": 1,
                    "update_settings": 2,
                    "update_status_and_call_functions": 1
                },
                "FUN_08002470": {
                    "call_function1": 1,
                    "perform_action": 1,
                    "print_message": 1,
                    "set_configuration": 2,
                    "set_data": 1,
                    "set_device_mode": 3,
                    "set_flag": 9,
                    "set_flag_value": 2,
                    "set_flags": 1,
                    "set_memory_value": 1,
                    "set_option": 2,
                    "set_param_and_execute": 1,
                    "set_peripheral_config": 1,
                    "set_value": 3,
                    "update_data": 1,
                    "update_value": 1
                },
                "_DAT_40022000": {
                    "flag_variable_value": 1,
                    "hardware_status": 1
                },
                "param_1": {
                    "action": 1,
                    "config_value": 2,
                    "configuration": 1,
                    "configuration_id": 1,
                    "flag": 3,
                    "flag_value": 1,
                    "input": 1,
                    "input_param": 1,
                    "mode": 1,
                    "option": 3,
                    "setting": 1,
                    "value": 4
                }
            },
            "called": [
                "FUN_08002470",
                "FUN_08001c3a",
                "FUN_08001c3c"
            ],
            "calling": [
                "FUN_08004c52"
            ],
            "code": "\n\n\nundefined4 initialize_and_configure_peripheral_08001c88(void)\n\n{\n  _DAT_40022000 = _DAT_40022000 | 0x10;\n  FUN_08002470(3);\n  FUN_08001c3c(0xf);\n  FUNC_08001c3a();\n  return 0;\n}\n\n",
            "current_name": "initialize_and_configure_peripheral_08001c88",
            "entrypoint": "0x08001c88",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001c88": "initialize_and_configure_peripheral_08001c88"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001cac": {
            "additional_data": {
                "DAT_20000078": {
                    "initial_value": 2,
                    "input": 13,
                    "input_number": 1,
                    "input_value": 8,
                    "memory_value": 1,
                    "original_u_int": 1,
                    "prev_value": 1,
                    "total_value": 1,
                    "value": 2,
                    "value_to_add": 1
                },
                "DAT_200006a0": {
                    "accumulated_sum": 2,
                    "accumulated_value": 4,
                    "new_u_int": 1,
                    "result": 13,
                    "sum": 9,
                    "sum_variable": 1,
                    "updated_total": 1
                },
                "FUN_08001cac": {
                    "accumulate": 3,
                    "accumulate_numbers": 1,
                    "accumulate_sum": 1,
                    "add_data_to_global_variable": 1,
                    "add_prev_value_to_sum": 1,
                    "add_two_numbers": 1,
                    "add_values": 1,
                    "addition": 4,
                    "addition_function": 4,
                    "addition_operation": 1,
                    "addition_operation_from_memory": 1,
                    "calculate_sum": 3,
                    "update_data": 1,
                    "update_sum": 4,
                    "update_total": 1,
                    "update_u_int_with_sum": 1,
                    "update_value": 1,
                    "update_variable": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004b9e"
            ],
            "code": "\nvoid addition_function_08001cac(void)\n\n{\n  DAT_200006a0 = (uint)DAT_20000078 + DAT_200006a0;\n  return;\n}\n\n",
            "current_name": "addition_function_08001cac",
            "entrypoint": "0x08001cac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001cac": "addition_function_08001cac"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001cc4": {
            "additional_data": {
                "DAT_200006a0": {
                    "data": 9,
                    "data_entry_value": 1,
                    "data_pointer": 1,
                    "data_value": 3,
                    "global_data": 1,
                    "global_value": 1,
                    "global_variable": 6,
                    "return_value": 1
                },
                "FUN_08001cc4": {
                    "get_dat_value": 1,
                    "get_data": 9,
                    "get_data_entry": 1,
                    "get_data_pointer": 2,
                    "get_data_value": 4,
                    "get_global_data": 1,
                    "get_global_value": 6,
                    "get_global_variable": 6,
                    "get_return_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001f84",
                "FUN_08004b94",
                "FUN_08003afa",
                "FUN_08003c90",
                "FUN_080043b4",
                "FUN_08002384",
                "FUN_080020f0",
                "FUN_080053d4",
                "FUN_08001cd0",
                "FUN_08004478",
                "FUN_08003688"
            ],
            "code": "\nundefined4 get_data_value_08001cc4(void)\n\n{\n  return DAT_200006a0;\n}\n\n",
            "current_name": "get_data_value_08001cc4",
            "entrypoint": "0x08001cc4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001cc4": "get_data_value_08001cc4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001cd0": {
            "additional_data": {
                "FUN_08001cc4": {
                    "get_current_time": 1
                },
                "FUN_08001cd0": {
                    "calculate_descriptive_value": 1,
                    "calculate_function": 2,
                    "calculate_return_value": 1,
                    "calculate_time": 1,
                    "check_and_modify": 1,
                    "check_and_modify_flags": 1,
                    "check_and_process_data": 2,
                    "check_and_update_flags": 1,
                    "check_and_update_status": 2,
                    "check_condition_and_execute": 1,
                    "check_memory_access": 2,
                    "check_parameter_validity": 1,
                    "execute_code": 1,
                    "optimize_calculation": 1,
                    "perform_operation": 2,
                    "process_data": 3,
                    "process_input": 1,
                    "validate_input": 1
                },
                "LAB_08001de2": {
                    "loop_exit": 1
                },
                "iVar1": {
                    "initial_time": 3,
                    "initial_value": 18,
                    "start_address": 1,
                    "start_tick_count": 1,
                    "start_time": 3,
                    "start_timestamp": 1,
                    "start_value": 2,
                    "starting_value": 1,
                    "var1": 1
                },
                "iVar3": {
                    "comparison_value": 1,
                    "current_tick_count": 1,
                    "current_time": 3,
                    "current_value": 1,
                    "delta_time": 1,
                    "difference": 1,
                    "end_address": 1,
                    "end_time": 1,
                    "end_timestamp": 1,
                    "increment": 2,
                    "iteration": 1,
                    "iteration_count": 1,
                    "loop_counter": 2,
                    "new_value": 1,
                    "result2": 1,
                    "temp_value": 7,
                    "temporary_value": 1,
                    "threshold": 2,
                    "var3": 1,
                    "var_2": 1
                },
                "local_1c": {
                    "count": 1,
                    "counter": 26,
                    "current_iteration": 1,
                    "iteration_count": 1,
                    "local_counter": 1,
                    "var7": 1
                },
                "param_1": {
                    "data": 1,
                    "data_pointer": 2,
                    "input": 1,
                    "input_array": 5,
                    "input_data": 3,
                    "input_params": 3,
                    "input_pointer": 1,
                    "memory_access": 1,
                    "memory_access_params": 1,
                    "p_flags": 1,
                    "param_array": 1,
                    "param_list": 1,
                    "parameter": 1,
                    "parameter1": 1,
                    "parameter_array": 2,
                    "parameter_list": 1,
                    "parameters": 2,
                    "pointer_array": 3
                },
                "param_2": {
                    "condition": 2,
                    "count": 1,
                    "counter": 1,
                    "input_size": 1,
                    "input_value": 1,
                    "length": 2,
                    "limit": 6,
                    "max_value": 1,
                    "param": 1,
                    "parameter2": 1,
                    "size": 5,
                    "status": 1,
                    "threshold": 1,
                    "time_limit": 1,
                    "value": 5,
                    "value_to_check": 1
                },
                "puVar5": {
                    "array_pointer": 1,
                    "current_array": 1,
                    "current_param": 1,
                    "current_pointer": 3,
                    "current_ptr": 1,
                    "data": 5,
                    "data_pointer": 3,
                    "data_ptr": 1,
                    "flags": 3,
                    "flags_ptr": 1,
                    "input_values": 1,
                    "pointer": 3,
                    "pointer_to_parameter_array": 1,
                    "ptr": 2,
                    "ptr_array": 1,
                    "ptr_value": 1,
                    "values": 1,
                    "var5": 1
                },
                "uVar2": {
                    "calculation_result": 1,
                    "factor": 12,
                    "random_factor": 1,
                    "random_value": 10,
                    "random_variable": 1,
                    "result": 3,
                    "result1": 1,
                    "var2": 1,
                    "var_1": 1
                },
                "uVar4": {
                    "result": 18,
                    "return_status": 1,
                    "return_value": 10,
                    "status": 1,
                    "var4": 1
                },
                "uVar6": {
                    "adjusted_size": 1,
                    "adjusted_tick_count": 1,
                    "calculated_value": 4,
                    "calculation": 1,
                    "calculation_result": 8,
                    "computed_value": 4,
                    "modified_value": 1,
                    "new_value": 2,
                    "random_variable_2": 1,
                    "result": 2,
                    "result_value": 1,
                    "scaled_limit": 1,
                    "threshold": 1,
                    "total_iterations": 1,
                    "var6": 1,
                    "var_3": 1
                }
            },
            "called": [
                "FUN_08003da4",
                "FUN_08001cc4"
            ],
            "calling": [
                "FUN_08004a4c"
            ],
            "code": "\nundefined4 check_and_process_data_08001cd0(uint **input_array,uint limit)\n\n{\n  int initial_value;\n  uint factor;\n  int temp_value;\n  undefined4 result;\n  uint *data;\n  uint calculation_result;\n  uint counter;\n  \n  counter = 0;\n  initial_value = FUN_08001cc4();\n  calculation_result = DAT_20000084;\n  data = *input_array;\n  if ((data[2] & 0x100) == 0) {\n    if (((data[1] & 0x100) == 0) && ((data[0xb] & 0xf00000) == 0)) {\n      do {\n        if ((**input_array & 2) != 0) goto loop_exit;\n      } while ((limit == 0xffffffff) ||\n              ((limit != 0 && (temp_value = FUN_08001cc4(), (uint)(temp_value - initial_value) <= limit))));\n      input_array[10] = (uint *)((uint)input_array[10] | 4);\n      *(undefined *)(input_array + 9) = 0;\n      result = 3;\n    }\n    else {\n      factor = FUN_08003da4(2);\n      data = *input_array;\n      if (((data[4] & 0x24924924) == 0) && ((data[3] & 0x924924) == 0)) {\n        if ((data[4] & 0x12492492) == 0) {\n          if ((data[3] & 0x492492) == 0) {\n            temp_value = 0x14;\n          }\n          else {\n            temp_value = 0x29;\n          }\n        }\n        else {\n          temp_value = 0x29;\n        }\n      }\n      else if (((data[4] & 0x12492492) == 0) && ((data[3] & 0x492492) == 0)) {\n        temp_value = 0x54;\n      }\n      else if ((data[4] & 0x249249) == 0) {\n        if ((data[3] & 0x249249) == 0) {\n          temp_value = 0x54;\n        }\n        else {\n          temp_value = 0xfc;\n        }\n      }\n      else {\n        temp_value = 0xfc;\n      }\n      calculation_result = (calculation_result / factor) * temp_value;\n      for (; counter <= calculation_result && calculation_result - counter != 0; counter = counter + 1) {\n        if ((limit != 0xffffffff) &&\n           ((limit == 0 || (temp_value = FUN_08001cc4(), limit < (uint)(temp_value - initial_value))))) {\n          input_array[10] = (uint *)((uint)input_array[10] | 4);\n          *(undefined *)(input_array + 9) = 0;\n          return 3;\n        }\n      }\nloop_exit:\n      **input_array = 0xffffffed;\n      input_array[10] = (uint *)((uint)input_array[10] | 0x200);\n      if (((*input_array)[2] & 0xe0000) == 0xe0000) {\n        if (input_array[3] == (uint *)0x0) {\n          input_array[10] = (uint *)((uint)input_array[10] & 0xfffffeff);\n          if (((uint)input_array[10] & 0x1000) == 0) {\n            input_array[10] = (uint *)((uint)input_array[10] | 1);\n            result = 0;\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        result = 0;\n      }\n    }\n  }\n  else {\n    input_array[10] = (uint *)((uint)input_array[10] | 0x20);\n    *(undefined *)(input_array + 9) = 0;\n    result = 1;\n  }\n  return result;\n}\n\n",
            "current_name": "check_and_process_data_08001cd0",
            "entrypoint": "0x08001cd0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001cd0": "check_and_process_data_08001cd0",
                "LAB_08001de2": "loop_exit",
                "iVar1": "initial_value",
                "iVar3": "temp_value",
                "local_1c": "counter",
                "param_1": "input_array",
                "param_2": "limit",
                "puVar5": "data",
                "uVar2": "factor",
                "uVar4": "result",
                "uVar6": "calculation_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001e40": {
            "additional_data": {
                "0x4c": {
                    "offset": 6
                },
                "FUN_08001e40": {
                    "extract_data_offset": 1,
                    "get_memory_address": 1,
                    "get_memory_address_value": 1,
                    "get_memory_value": 1,
                    "get_offset": 1,
                    "get_offset_by_address": 1,
                    "get_offset_from_pointer": 4,
                    "get_offset_value": 14,
                    "get_value_at_offset": 3,
                    "get_value_from_offset": 2,
                    "get_value_from_pointer": 2
                },
                "param_1": {
                    "address": 1,
                    "arg_ptr": 1,
                    "base_address": 1,
                    "data_pointer": 1,
                    "input_array": 3,
                    "input_pointer": 3,
                    "memory_address": 3,
                    "offset_pointer": 8,
                    "offset_ptr": 3,
                    "pointer": 6,
                    "values": 1
                },
                "undefined4": {
                    "extracted_data": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004a4c"
            ],
            "code": "\nextracted_data get_value_at_offset_08001e40(int *offset_pointer)\n\n{\n  return *(extracted_data *)(*offset_pointer + 0x4c);\n}\n\n",
            "current_name": "get_value_at_offset_08001e40",
            "entrypoint": "0x08001e40",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001e40": "get_value_at_offset_08001e40",
                "param_1": "offset_pointer",
                "undefined4": "extracted_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001e48": {
            "additional_data": {
                "DAT_20000084": {
                    "constant": 1,
                    "constant_value": 1,
                    "data_variable": 1
                },
                "FUN_08001e48": {
                    "process_data": 1,
                    "update_config": 7,
                    "update_configuration": 10,
                    "update_data": 1,
                    "update_memory": 1,
                    "update_memory_values": 1,
                    "update_parameter": 1,
                    "update_parameters": 3,
                    "update_params": 2,
                    "update_registers": 1,
                    "update_values": 2
                },
                "local_c": {
                    "count": 4,
                    "counter": 19,
                    "delay": 2,
                    "iteration_count": 1,
                    "local_count": 1,
                    "loop_counter": 4
                },
                "param_1": {
                    "config": 14,
                    "config_data": 1,
                    "config_params": 1,
                    "config_ptr": 1,
                    "data": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "input_array": 1,
                    "memory_address": 1,
                    "memory_addresses": 1,
                    "param_array": 5,
                    "parameter_array": 1,
                    "register_list": 1,
                    "values": 1
                },
                "param_2": {
                    "data": 1,
                    "data_array": 1,
                    "data_ptr": 1,
                    "input_array": 1,
                    "input_values": 1,
                    "param_values": 2,
                    "settings": 4,
                    "update_values": 1,
                    "value1": 1,
                    "value_array": 2,
                    "value_pointer": 1,
                    "values": 13,
                    "values_ptr": 1
                },
                "uRam40012408": {
                    "bit_flags": 1,
                    "ram_variable": 1,
                    "register_value": 1
                },
                "uVar1": {
                    "result": 17,
                    "return_value": 9,
                    "status": 2
                },
                "uVar2": {
                    "data_value": 1,
                    "index": 8,
                    "index_modifier": 1,
                    "multiplier": 1,
                    "offset": 1,
                    "setting": 1,
                    "setting_value": 1,
                    "shift_amount": 2,
                    "shift_value": 3,
                    "temp": 1,
                    "temp_value": 2,
                    "value": 6
                }
            },
            "called": [],
            "calling": [
                "FUN_08004a4c"
            ],
            "code": "\nundefined4 update_configuration_08001e48(int *config,uint *values)\n\n{\n  undefined4 result;\n  uint index;\n  int counter;\n  \n  if (*(char *)(config + 9) == '\\x01') {\n    result = 2;\n  }\n  else {\n    *(undefined *)(config + 9) = 1;\n    index = values[1];\n    if (index < 7) {\n      index = index * 5 - 5;\n      *(uint *)(*config + 0x34) =\n           *values << (index & 0xff) | *(uint *)(*config + 0x34) & ~(0x1f << (index & 0xff));\n    }\n    else if (index < 0xd) {\n      index = index * 5 - 0x23;\n      *(uint *)(*config + 0x30) =\n           *values << (index & 0xff) | *(uint *)(*config + 0x30) & ~(0x1f << (index & 0xff));\n    }\n    else {\n      index = index * 5 - 0x41;\n      *(uint *)(*config + 0x2c) =\n           *values << (index & 0xff) | *(uint *)(*config + 0x2c) & ~(0x1f << (index & 0xff));\n    }\n    index = *values;\n    if (index < 10) {\n      *(uint *)(*config + 0x10) =\n           values[2] << (index * 3 & 0xff) |\n           *(uint *)(*config + 0x10) & ~(7 << (index * 3 & 0xff));\n    }\n    else {\n      index = index * 3 - 0x1e;\n      *(uint *)(*config + 0xc) =\n           values[2] << (index & 0xff) | *(uint *)(*config + 0xc) & ~(7 << (index & 0xff));\n    }\n    if (*values - 0x10 < 2) {\n      if (*config == 0x40012400) {\n        if ((ram_variable & 0x800000) == 0) {\n          ram_variable = ram_variable | 0x800000;\n          if (*values == 0x10) {\n            for (counter = (DAT_20000084 / 1000000) * 10; counter != 0; counter = counter + -1) {\n            }\n            result = 0;\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        config[10] = config[10] | 0x20;\n        result = 1;\n      }\n    }\n    else {\n      result = 0;\n    }\n    *(undefined *)(config + 9) = 0;\n  }\n  return result;\n}\n\n",
            "current_name": "update_configuration_08001e48",
            "entrypoint": "0x08001e48",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001e48": "update_configuration_08001e48",
                "local_c": "counter",
                "param_1": "config",
                "param_2": "values",
                "uRam40012408": "ram_variable",
                "uVar1": "result",
                "uVar2": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001f80": {
            "additional_data": {
                "0x28": {
                    "offset": 1
                },
                "FUN_08001f80": {
                    "get_data_from_offset": 1,
                    "get_data_point": 1,
                    "get_fourth_value": 1,
                    "get_memory_value": 2,
                    "get_offset_value": 8,
                    "get_parameter_value": 1,
                    "get_pointer_offset": 1,
                    "get_pointer_value": 5,
                    "get_value_at_offset": 6,
                    "get_value_from_offset": 4,
                    "get_value_from_pointer": 1
                },
                "param_1": {
                    "address": 3,
                    "array_address": 1,
                    "base_address": 12,
                    "data_pointer": 1,
                    "input_address": 2,
                    "input_offset": 1,
                    "input_value": 1,
                    "memory_address": 3,
                    "offset": 4,
                    "pointer_address": 1,
                    "resource_address": 1,
                    "source_pointer": 1
                },
                "ptr1": {
                    "value_ptr": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004a4c"
            ],
            "code": "\nundefined4 get_value_at_offset_08001f80(int base_address)\n\n{\n  return *(undefined4 *)(base_address + 0x28);\n}\n\n",
            "current_name": "get_value_at_offset_08001f80",
            "entrypoint": "0x08001f80",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001f80": "get_value_at_offset_08001f80",
                "param_1": "base_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001f84": {
            "additional_data": {
                "DAT_": {
                    "constant_": 1
                },
                "DAT_20000084": {
                    "constant": 1
                },
                "FUNC_08001cc4": {
                    "calculate_value": 1
                },
                "FUN_08001cc4": {
                    "calculate": 1,
                    "call_subfunction": 1,
                    "perform_action": 1,
                    "perform_operation": 2,
                    "perform_task": 1,
                    "sub_function": 1,
                    "sub_process_data": 1
                },
                "FUN_08001f84": {
                    "activate_device": 1,
                    "check_and_set_flag": 1,
                    "check_and_toggle_flag": 1,
                    "check_and_update_flag": 1,
                    "enable_and_check": 1,
                    "enable_feature": 4,
                    "enable_flag_and_do_something": 1,
                    "enable_processing": 1,
                    "execute_function": 1,
                    "handle_data_processing": 1,
                    "initialize_and_check": 1,
                    "initialize_and_check_flag": 1,
                    "initialize_and_check_status": 2,
                    "initialize_data": 1,
                    "initialize_processor": 1,
                    "perform_operation": 3,
                    "process_and_check_flags": 1,
                    "process_data": 2,
                    "set_flag_and_check": 1,
                    "toggle_flag_and_check": 1,
                    "update_flag_and_check": 2,
                    "update_flag_and_check_status": 1,
                    "validate_and_initialize_param": 1
                },
                "PTR_": {
                    "ptr_": 1
                },
                "iVar1": {
                    "comparison_result": 1,
                    "counter": 1,
                    "difference": 1,
                    "func_result": 1,
                    "function_result": 1,
                    "operation_result": 1,
                    "result": 13,
                    "result1": 3,
                    "result_value": 2,
                    "return_value": 3,
                    "temp_var1": 3
                },
                "iVar3": {
                    "array_index": 1,
                    "array_value": 2,
                    "data": 2,
                    "data_pointer": 1,
                    "data_value": 7,
                    "device": 1,
                    "element": 1,
                    "feature": 2,
                    "flag": 1,
                    "pointer_value": 2,
                    "processor_value": 1,
                    "ptr": 4,
                    "ptr_value": 3,
                    "temp_var2": 1,
                    "value": 1,
                    "value1": 1
                },
                "local_14": {
                    "count": 2,
                    "counter": 8,
                    "delay": 3,
                    "delay_count": 1,
                    "iteration_count": 3,
                    "loop_count": 1,
                    "loop_counter": 11,
                    "loop_var": 1,
                    "temp_var": 1
                },
                "param_1": {
                    "array": 2,
                    "array_pointer": 1,
                    "array_ptr": 1,
                    "data": 5,
                    "data_buffer": 1,
                    "data_pointer": 5,
                    "data_ptr": 2,
                    "device_ptr": 1,
                    "feature_data": 1,
                    "feature_state": 1,
                    "flag_array": 1,
                    "input_array": 4,
                    "input_parameters": 1,
                    "param_array": 1,
                    "pointer": 1,
                    "pointer_to_data": 1,
                    "processor": 1
                },
                "param_2": {
                    "data": 1,
                    "data_count": 1,
                    "input": 1,
                    "input_value": 4,
                    "length": 1,
                    "param": 4,
                    "param2": 2,
                    "param_2": 2,
                    "param_value": 1,
                    "size": 4,
                    "status": 1,
                    "value": 9
                },
                "uVar2": {
                    "result": 3,
                    "return_value": 17
                }
            },
            "called": [
                "FUN_08001cc4"
            ],
            "calling": [
                "FUN_08002384",
                "FUN_08002004"
            ],
            "code": "\nundefined4 set_flag_and_check_08001f84(int *data,undefined4 value)\n\n{\n  int result;\n  undefined4 return_value;\n  int data_value;\n  uint loop_counter;\n  \n  data_value = *data;\n  if ((*(uint *)(data_value + 8) & 1) == 0) {\n    *(uint *)(data_value + 8) = *(uint *)(data_value + 8) | 1;\n    for (loop_counter = DAT_20000084 / 1000000; loop_counter != 0; loop_counter = loop_counter - 1) {\n    }\n    data_value = FUN_08001cc4(data,value,DAT_20000084 * 0x431bde83);\n    do {\n      if ((*(uint *)(*data + 8) & 1) != 0) {\n        return 0;\n      }\n      result = FUN_08001cc4();\n    } while ((uint)(result - data_value) < 3);\n    data[10] = data[10] | 0x10;\n    data[0xb] = data[0xb] | 1;\n    *(undefined *)(data + 9) = 0;\n    return_value = 1;\n  }\n  else {\n    return_value = 0;\n  }\n  return return_value;\n}\n\n",
            "current_name": "set_flag_and_check_08001f84",
            "entrypoint": "0x08001f84",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001f84": "set_flag_and_check_08001f84",
                "iVar1": "result",
                "iVar3": "data_value",
                "local_14": "loop_counter",
                "param_1": "data",
                "param_2": "value",
                "uVar2": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002004": {
            "additional_data": {
                "DAT_40012404": {
                    "data_variable": 1
                },
                "FUN_08001f84": {
                    "check_conditions": 2,
                    "check_status": 1,
                    "do_something": 1,
                    "init_config": 1,
                    "initialize_config": 1,
                    "initialize_data": 1,
                    "initialize_flags": 1,
                    "initialize_parameter": 1,
                    "initialize_something": 1,
                    "initialize_value": 1,
                    "initialize_values": 1,
                    "initialize_variable": 1,
                    "perform_action": 1,
                    "perform_initialization": 2,
                    "some_function": 1,
                    "verify_data": 1
                },
                "FUN_08002004": {
                    "check_and_update_flags": 1,
                    "check_and_update_settings": 1,
                    "initialize_executable": 1,
                    "initialize_flags": 2,
                    "initialize_function": 4,
                    "initialize_param": 2,
                    "initialize_parameter": 1,
                    "initialize_parameters": 1,
                    "initialize_settings": 3,
                    "process_parameter": 2,
                    "update_config": 3,
                    "update_configuration": 2,
                    "update_control_flags": 1,
                    "update_flags_and_configuration": 1,
                    "update_flags_and_values": 1,
                    "update_function": 1,
                    "update_function_status": 1,
                    "update_parameter": 1,
                    "update_parameter_and_return": 1
                },
                "_DAT_40012404": {
                    "_dat_40012404": 1,
                    "data_value": 3,
                    "external_flags": 1,
                    "global_variable": 2,
                    "some_data": 1
                },
                "iVar1": {
                    "result": 26,
                    "return_code": 1,
                    "return_value": 3
                },
                "iVar3": {
                    "address": 1,
                    "another_result": 1,
                    "auxiliary_variable": 1,
                    "config_value": 1,
                    "current_address": 1,
                    "data": 1,
                    "data_variable": 1,
                    "i_var": 1,
                    "i_var3": 1,
                    "index": 1,
                    "other_var": 1,
                    "param_value": 1,
                    "temp": 1,
                    "temp_var": 1,
                    "value": 15,
                    "variable": 1
                },
                "param_1": {
                    "config": 4,
                    "config_ptr": 1,
                    "control_flags": 1,
                    "executable_data": 1,
                    "flags": 3,
                    "function_data": 1,
                    "function_parameters": 1,
                    "function_params": 1,
                    "param": 1,
                    "param_array": 1,
                    "parameter": 3,
                    "parameters": 8,
                    "settings": 4
                },
                "param_2": {
                    "another_parameter": 1,
                    "param2": 1
                },
                "puVar2": {
                    "base_address": 1,
                    "config_pointer": 2,
                    "data_pointer": 2,
                    "function_pointer": 1,
                    "param_pointer": 1,
                    "pointer": 7,
                    "pointer_var": 2,
                    "ptr": 12,
                    "ptr_data": 1,
                    "ptr_settings": 1
                }
            },
            "called": [
                "FUN_08001f84"
            ],
            "calling": [
                "FUN_08004a4c"
            ],
            "code": "\n\n\nint initialize_function_08002004(int *parameters)\n\n{\n  int result;\n  undefined4 *ptr;\n  int value;\n  \n  if (*(char *)(parameters + 9) != '\\x01') {\n    *(undefined *)(parameters + 9) = 1;\n    result = FUN_08001f84();\n    if (result == 0) {\n      parameters[10] = parameters[10] & 0xfffffcfeU | 0x100;\n      ptr = (undefined4 *)*parameters;\n      if ((ptr == (undefined4 *)0x40012800) && ((_DAT_40012404 & 0xf0000) != 0)) {\n        parameters[10] = parameters[10] | 0x100000;\n        if ((_DAT_40012404 & 0x400) != 0) {\n          parameters[10] = parameters[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      else {\n        parameters[10] = parameters[10] & 0xffefffff;\n        if ((ptr[1] & 0x400) != 0) {\n          parameters[10] = parameters[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      if ((parameters[10] & 0x1000U) == 0) {\n        parameters[0xb] = 0;\n      }\n      else {\n        parameters[0xb] = parameters[0xb] & 0xfffffff9;\n      }\n      *(undefined *)(parameters + 9) = 0;\n      *ptr = 0xfffffffd;\n      value = *parameters;\n      if (((*(uint *)(value + 8) & 0xe0000) == 0xe0000) &&\n         ((value != 0x40012800 || ((_DAT_40012404 & 0xf0000) == 0)))) {\n        *(uint *)(value + 8) = *(uint *)(value + 8) | 0x500000;\n      }\n      else {\n        *(uint *)(value + 8) = *(uint *)(value + 8) | 0x100000;\n      }\n    }\n    else {\n      *(undefined *)(parameters + 9) = 0;\n    }\n    return result;\n  }\n  return 2;\n}\n\n",
            "current_name": "initialize_function_08002004",
            "entrypoint": "0x08002004",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002004": "initialize_function_08002004",
                "iVar1": "result",
                "iVar3": "value",
                "param_1": "parameters",
                "puVar2": "ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080020f0": {
            "additional_data": {
                "FUN_08001cc4": {
                    "calculate_difference": 1,
                    "get_integer_value": 1,
                    "get_random_number": 2,
                    "get_random_value": 1
                },
                "FUN_080020f0": {
                    "check_and_modify_data": 2,
                    "check_and_modify_flags": 2,
                    "check_and_modify_values": 2,
                    "check_and_update_flag": 1,
                    "check_and_update_flags": 4,
                    "check_and_update_status": 1,
                    "check_and_update_values": 2,
                    "mark_entry_and_flags": 1,
                    "process_data": 2,
                    "set_flag_if_condition_met": 1,
                    "update_data_flags": 1,
                    "update_flags": 7,
                    "update_flags_and_bits": 1,
                    "update_status_flags": 1
                },
                "iVar1": {
                    "current_value": 1,
                    "first_result": 1,
                    "loop_count": 1,
                    "ptr_data_temp": 1,
                    "result": 2,
                    "result1": 4,
                    "result_value": 1,
                    "return_value": 2,
                    "temp_var1": 15,
                    "temp_variable_1": 1,
                    "value1": 1
                },
                "iVar2": {
                    "array_value": 1,
                    "initial_value": 2,
                    "ptr_data": 1,
                    "ptr_value2": 1,
                    "result2": 2,
                    "temp_var2": 15,
                    "temp_variable_2": 1,
                    "value": 6,
                    "value2": 1
                },
                "param_1": {
                    "array": 3,
                    "array_ptr": 1,
                    "data": 6,
                    "data_ptr": 2,
                    "entry_pointer": 1,
                    "flag_array": 1,
                    "input_array": 12,
                    "int_array": 1,
                    "param": 1,
                    "param_array": 1,
                    "parameters": 1,
                    "status_flags": 1
                }
            },
            "called": [
                "FUN_08001cc4"
            ],
            "calling": [
                "FUN_0800213c",
                "FUN_08002348",
                "FUN_08002384",
                "FUN_0800224c"
            ],
            "code": "\nundefined4 check_and_update_flags_080020f0(int *input_array)\n\n{\n  int temp_var1;\n  int temp_var2;\n  \n  temp_var2 = *input_array;\n  if ((*(uint *)(temp_var2 + 8) & 1) == 0) {\n    return 0;\n  }\n  *(uint *)(temp_var2 + 8) = *(uint *)(temp_var2 + 8) & 0xfffffffe;\n  temp_var2 = FUN_08001cc4();\n  do {\n    if ((*(uint *)(*input_array + 8) & 1) == 0) {\n      return 0;\n    }\n    temp_var1 = FUN_08001cc4();\n  } while ((uint)(temp_var1 - temp_var2) < 3);\n  input_array[10] = input_array[10] | 0x10;\n  input_array[0xb] = input_array[0xb] | 1;\n  return 1;\n}\n\n",
            "current_name": "check_and_update_flags_080020f0",
            "entrypoint": "0x080020f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080020f0": "check_and_update_flags_080020f0",
                "iVar1": "temp_var1",
                "iVar2": "temp_var2",
                "param_1": "input_array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800213c": {
            "additional_data": {
                "FUN_080020f0": {
                    "check_config_data": 1,
                    "check_data_validity": 1,
                    "check_device_status": 1,
                    "check_params": 1,
                    "check_status": 2,
                    "check_validity": 2,
                    "process_param": 1,
                    "validate_configuration": 1
                },
                "FUN_0800213c": {
                    "check_and_modify_param": 1,
                    "check_and_modify_parameters": 1,
                    "check_and_set_flags": 1,
                    "check_and_update_configuration": 1,
                    "check_params_and_set_flags": 1,
                    "extract_data_from_binary": 1,
                    "handle_action": 1,
                    "initialize_connection": 1,
                    "initialize_data": 1,
                    "initialize_device": 3,
                    "initialize_options": 1,
                    "initialize_peripheral": 1,
                    "process_data": 5,
                    "process_function": 1,
                    "process_params": 1,
                    "update_configuration": 1,
                    "update_state": 1,
                    "validate_and_configure": 1,
                    "validate_and_configure_parameters": 1,
                    "validate_input": 1,
                    "validate_param": 1,
                    "validate_parameters": 1
                },
                "FUN_08004974": {
                    "do_something": 1,
                    "execute_function": 1,
                    "initialize": 1,
                    "initialize_components": 1,
                    "initialize_configuration": 1,
                    "initialize_handler": 1,
                    "initialize_params": 1,
                    "initialize_pointer": 1,
                    "initialize_system": 1,
                    "reset_config": 1
                },
                "iVar1": {
                    "error_code": 1,
                    "is_valid": 1,
                    "result": 25,
                    "return_value": 3,
                    "status": 1
                },
                "param_1": {
                    "action_handler": 1,
                    "array": 1,
                    "config": 1,
                    "config_data": 1,
                    "configuration": 1,
                    "connection": 1,
                    "data": 6,
                    "data_array": 2,
                    "data_structure": 1,
                    "device": 1,
                    "device_config": 2,
                    "input": 1,
                    "input_array": 2,
                    "options": 1,
                    "param": 1,
                    "parameters": 4,
                    "params": 1,
                    "peripheral": 1,
                    "state": 1
                },
                "uVar2": {
                    "bitwise_or_result": 1,
                    "bitwise_result1": 1,
                    "bitwise_value1": 1,
                    "combined_flags": 3,
                    "combined_params": 1,
                    "combined_value": 2,
                    "combined_values": 2,
                    "flag": 1,
                    "flag1": 1,
                    "flag_1": 1,
                    "mask": 1,
                    "mask1": 2,
                    "temp_var1": 4,
                    "value1": 2,
                    "var1": 5,
                    "var2": 3
                },
                "uVar3": {
                    "additional_params": 1,
                    "additional_value": 1,
                    "bitwise_result2": 1,
                    "bitwise_value2": 1,
                    "condition_value": 1,
                    "flag": 2,
                    "flag2": 1,
                    "flag_2": 1,
                    "flag_value": 1,
                    "mask": 1,
                    "mask2": 2,
                    "modified_value": 1,
                    "other_flags": 1,
                    "temp_var2": 4,
                    "updated_value": 1,
                    "value": 1,
                    "value2": 2,
                    "var2": 5,
                    "var3": 3
                }
            },
            "called": [
                "FUN_08004974",
                "FUN_080020f0"
            ],
            "calling": [
                "FUN_08004a4c"
            ],
            "code": "\nundefined4 process_data_0800213c(int *data)\n\n{\n  int result;\n  uint var1;\n  uint var2;\n  \n  if (data == (int *)0x0) {\n    return 1;\n  }\n  if (data[10] == 0) {\n    data[0xb] = 0;\n    *(undefined *)(data + 9) = 0;\n    FUN_08004974();\n  }\n  result = FUN_080020f0(data);\n  if (((data[10] & 0x10U) == 0) && (result == 0)) {\n    data[10] = data[10] & 0xffffeefdU | 2;\n    var1 = data[1] | data[7] | data[3] << 1;\n    if (data[2] == 0x100) {\n      var2 = 0x100;\n    }\n    else {\n      var2 = 0;\n      if (data[2] == 1) {\n        var2 = 0x100;\n      }\n    }\n    if (data[5] == 1) {\n      if (data[3] == 0) {\n        var2 = var2 | (data[6] + -1) * 0x2000 | 0x800;\n      }\n      else {\n        data[10] = data[10] | 0x20;\n        data[0xb] = data[0xb] | 1;\n      }\n    }\n    *(uint *)(*data + 4) = var2 | *(uint *)(*data + 4) & 0xffff16ff;\n    *(uint *)(*data + 8) = *(uint *)(*data + 8) & 0xffe1f7fd | var1;\n    if ((data[2] == 0x100) || (data[2] == 1)) {\n      var2 = (data[4] + -1) * 0x100000;\n    }\n    else {\n      var2 = 0;\n    }\n    *(uint *)(*data + 0x2c) = var2 | *(uint *)(*data + 0x2c) & 0xff0fffff;\n    if (var1 != (*(uint *)(*data + 8) & 0xff1f0efe)) {\n      data[10] = data[10] & 0xffffffedU | 0x10;\n      data[0xb] = data[0xb] | 1;\n      return 1;\n    }\n    data[0xb] = 0;\n    data[10] = data[10] & 0xfffffffcU | 1;\n    return 0;\n  }\n  data[10] = data[10] | 0x10;\n  return 1;\n}\n\n",
            "current_name": "process_data_0800213c",
            "entrypoint": "0x0800213c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800213c": "process_data_0800213c",
                "iVar1": "result",
                "param_1": "data",
                "uVar2": "var1",
                "uVar3": "var2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800224c": {
            "additional_data": {
                "FUN_080020f0": {
                    "check_condition": 5,
                    "check_conditions": 1,
                    "check_initialization": 2,
                    "check_status": 2,
                    "check_validity": 1,
                    "initialize_function": 1,
                    "perform_additional_action": 1,
                    "perform_check": 1,
                    "sub_function1": 2,
                    "sub_function_1": 3
                },
                "FUN_0800224c": {
                    "clear_bits_and_reset_flags": 1,
                    "clear_memory": 1,
                    "improve_code": 1,
                    "improve_param_value": 1,
                    "initialize_memory": 2,
                    "initialize_param": 1,
                    "initialize_parameters": 1,
                    "process_parameter": 1,
                    "reconfigure_data": 1,
                    "reverse_and_initialize": 1,
                    "set_flags_and_clear_values": 1,
                    "set_memory_permissions": 1,
                    "set_values_and_reset": 1,
                    "update_and_check_flags": 1,
                    "update_memory_protection": 1,
                    "update_memory_regions": 1,
                    "update_param": 1,
                    "update_param_values": 1,
                    "update_parameter": 1,
                    "update_permissions": 2
                },
                "FUN_080049f0": {
                    "cleanup_function": 1,
                    "cleanup_memory": 1,
                    "do_something": 1,
                    "perform_action": 2,
                    "perform_cleanup": 2,
                    "perform_extra_actions": 1,
                    "perform_final_action": 1,
                    "perform_operation": 1,
                    "perform_operations": 1,
                    "process_data": 2,
                    "process_param_array": 1,
                    "sub_function2": 2,
                    "sub_function_2": 3
                },
                "PTR_08002250": {
                    "array_pointer": 1
                },
                "iVar1": {
                    "result": 25,
                    "return_value": 6
                },
                "param_1": {
                    "array_ptr": 2,
                    "data_pointer": 1,
                    "flags_array": 1,
                    "function_params": 1,
                    "input_array": 8,
                    "memory": 2,
                    "memory_address": 1,
                    "memory_array": 1,
                    "memory_ptr": 1,
                    "memory_region": 1,
                    "param": 2,
                    "param_array": 3,
                    "parameter": 2,
                    "parameters": 1,
                    "params": 2,
                    "permissions": 2
                }
            },
            "called": [
                "FUN_080020f0",
                "FUN_080049f0"
            ],
            "calling": [
                "FUN_08004a4c"
            ],
            "code": "\nint set_memory_permissions_0800224c(int *input_array)\n\n{\n  int result;\n  \n  if (input_array == (int *)0x0) {\n    result = 1;\n  }\n  else {\n    input_array[10] = input_array[10] | 2;\n    result = FUN_080020f0();\n    if (result == 0) {\n      *(undefined4 *)*input_array = 0xffffffe0;\n      *(uint *)(*input_array + 4) = *(uint *)(*input_array + 4) & 0xff3f0000;\n      *(uint *)(*input_array + 8) = *(uint *)(*input_array + 8) & 0xff0106f0;\n      *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) & 0xff000000;\n      *(uint *)(*input_array + 0x10) = *(uint *)(*input_array + 0x10) & 0xc0000000;\n      *(uint *)(*input_array + 0x14) = *(uint *)(*input_array + 0x14) & 0xfffff000;\n      *(uint *)(*input_array + 0x18) = *(uint *)(*input_array + 0x18) & 0xfffff000;\n      *(uint *)(*input_array + 0x1c) = *(uint *)(*input_array + 0x1c) & 0xfffff000;\n      *(uint *)(*input_array + 0x20) = *(uint *)(*input_array + 0x20) & 0xfffff000;\n      *(uint *)(*input_array + 0x24) = *(uint *)(*input_array + 0x24) & 0xfffff000;\n      *(uint *)(*input_array + 0x28) = *(uint *)(*input_array + 0x28) & 0xfffff000;\n      *(uint *)(*input_array + 0x2c) = *(uint *)(*input_array + 0x2c) & 0xff000000;\n      *(uint *)(*input_array + 0x2c) = *(uint *)(*input_array + 0x2c) & 0xff000000;\n      *(uint *)(*input_array + 0x30) = *(uint *)(*input_array + 0x30) & 0xc0000000;\n      *(uint *)(*input_array + 0x34) = *(uint *)(*input_array + 0x34) & 0xc0000000;\n      *(uint *)(*input_array + 0x38) = *(uint *)(*input_array + 0x38) & 0xffc00000;\n      *(uint *)(*input_array + 0x38) = *(uint *)(*input_array + 0x38) & 0xffc00000;\n      FUN_080049f0(input_array);\n      input_array[0xb] = 0;\n      input_array[10] = 0;\n    }\n    *(undefined *)(input_array + 9) = 0;\n  }\n  return result;\n}\n\n",
            "current_name": "set_memory_permissions_0800224c",
            "entrypoint": "0x0800224c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800224c": "set_memory_permissions_0800224c",
                "iVar1": "result",
                "param_1": "input_array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002348": {
            "additional_data": {
                "DAT_08002348": {
                    "flag_value": 1
                },
                "FUN_080020f0": {
                    "check_condition": 1,
                    "check_error": 1,
                    "check_other_conditions": 1,
                    "check_validity": 1,
                    "do_something": 1,
                    "execute_sub_function": 1,
                    "handle_processing": 1,
                    "parse_data": 1,
                    "process_data": 1,
                    "sub_function": 1,
                    "update_status": 1,
                    "verify_status": 1
                },
                "FUN_08002348": {
                    "check_and_modify": 1,
                    "check_and_modify_flag": 2,
                    "check_and_update_flag": 5,
                    "check_and_update_param": 1,
                    "check_and_update_status": 10,
                    "check_and_update_value": 5,
                    "check_flag_status": 1,
                    "check_param_validity": 1,
                    "check_permission": 1,
                    "check_status_and_update": 1,
                    "determine_status": 1,
                    "update_status": 1,
                    "validate_input": 1
                },
                "PTR_080020f0": {
                    "error_check_param": 1
                },
                "iVar1": {
                    "result": 27,
                    "return_value": 4
                },
                "param_1": {
                    "address": 1,
                    "arg1": 1,
                    "data": 2,
                    "flag_address": 1,
                    "flag_data": 1,
                    "input": 4,
                    "input_value": 5,
                    "object_ptr": 1,
                    "param": 4,
                    "permission": 1,
                    "status": 4,
                    "status_address": 1,
                    "status_data": 2,
                    "status_ptr": 1,
                    "struct_ptr": 1,
                    "value": 1
                },
                "ptr_24": {
                    "flag_ptr": 1
                },
                "uint": {
                    "unsigned_int": 1
                },
                "undefined": {
                    "byte": 1
                }
            },
            "called": [
                "FUN_080020f0"
            ],
            "calling": [
                "FUN_08004a4c"
            ],
            "code": "\nint check_status_and_update_08002348(int input_value)\n\n{\n  int result;\n  \n  if (*(char *)(input_value + 0x24) == '\\x01') {\n    return 2;\n  }\n  *(byte *)(input_value + 0x24) = 1;\n  result = FUN_080020f0();\n  if (result == 0) {\n    *(unsigned_int *)(input_value + 0x28) = *(unsigned_int *)(input_value + 0x28) & 0xffffeefe | 1;\n  }\n  *(byte *)(input_value + 0x24) = 0;\n  return result;\n}\n\n",
            "current_name": "check_status_and_update_08002348",
            "entrypoint": "0x08002348",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002348": "check_status_and_update_08002348",
                "iVar1": "result",
                "param_1": "input_value",
                "uint": "unsigned_int",
                "undefined": "byte"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002384": {
            "additional_data": {
                "FUC_08002384": {
                    "check_and_update_parameter_status": 1
                },
                "FUNKY_FUNCTION": {
                    "perform_operation": 1
                },
                "FUN_08001cc4": {
                    "get_current_value": 1,
                    "get_elapsed_time": 1,
                    "get_time": 1
                },
                "FUN_08001f84": {
                    "perform_action": 1,
                    "perform_operation": 2
                },
                "FUN_080020f0": {
                    "check_condition": 1,
                    "check_dependency": 1,
                    "check_status": 1
                },
                "FUN_08002384": {
                    "check_and_initialize": 1,
                    "check_and_modify_parameter": 1,
                    "check_and_modify_parameters": 1,
                    "check_and_process_data": 3,
                    "check_and_update_data": 1,
                    "check_and_update_status": 4,
                    "check_flag": 1,
                    "check_function_status": 2,
                    "check_status_and_control": 1,
                    "find_result": 1,
                    "handle_param1": 1,
                    "identify_issue_and_fix": 1,
                    "perform_task": 1,
                    "process_data": 4,
                    "validate_and_process_data": 1,
                    "validate_and_update_data": 1,
                    "validate_and_update_status": 1,
                    "validate_operation": 1
                },
                "FUN_08003da4": {
                    "calculate_divisor": 2,
                    "divide_values": 1
                },
                "iVar2": {
                    "result": 26,
                    "result2": 1,
                    "return_value": 3,
                    "status": 1
                },
                "iVar4": {
                    "initial_value": 2,
                    "initial_value1": 1,
                    "loop_counter": 1,
                    "loop_start": 2,
                    "loop_var1": 1,
                    "result4": 1,
                    "start": 1,
                    "start_time": 5,
                    "start_value": 3,
                    "temp_i_var": 1,
                    "temp_var1": 5,
                    "temp_var3": 1,
                    "temp_var4": 1,
                    "temp_var_1": 1,
                    "temp_variable": 1,
                    "temp_variable1": 1,
                    "tmp_var_1": 1,
                    "var4": 1,
                    "variable1": 1
                },
                "iVar5": {
                    "current": 1,
                    "current_i_var": 1,
                    "current_time": 5,
                    "current_value": 5,
                    "initial_value2": 1,
                    "loop_condition": 1,
                    "loop_counter": 1,
                    "loop_end": 1,
                    "loop_var2": 1,
                    "result5": 1,
                    "temp_var": 1,
                    "temp_var2": 5,
                    "temp_var4": 1,
                    "temp_var5": 1,
                    "temp_var_2": 1,
                    "temp_variable2": 1,
                    "tmp_var_2": 1,
                    "var5": 1,
                    "variable2": 1
                },
                "local_14": {
                    "count": 2,
                    "counter": 3,
                    "counter1": 1,
                    "iteration_count": 4,
                    "iterations": 1,
                    "loop_count": 4,
                    "loop_counter": 8,
                    "loop_counter_2": 1,
                    "loop_variable": 1,
                    "temp": 2,
                    "temp_var": 1,
                    "temp_variable": 1,
                    "times": 1,
                    "var14": 1
                },
                "original_function_name_1": {
                    "new_function_name_1": 1
                },
                "original_function_name_2": {
                    "new_function_name_2": 1
                },
                "param_1": {
                    "args": 1,
                    "array": 1,
                    "data": 8,
                    "data_array": 3,
                    "flag": 1,
                    "function_params": 1,
                    "input_array": 3,
                    "input_data": 1,
                    "param_array": 1,
                    "parameter": 2,
                    "parameters": 4,
                    "params": 1,
                    "status_array": 3
                },
                "uVar1": {
                    "constant1": 1,
                    "constant_1": 2,
                    "dividend": 6,
                    "division_factor": 1,
                    "division_result": 7,
                    "divisor": 2,
                    "num1": 1,
                    "quotient": 5,
                    "result1": 1,
                    "temp_var1": 2,
                    "value1": 1,
                    "var1": 1,
                    "variable1": 1
                },
                "uVar3": {
                    "call_result": 1,
                    "constant2": 1,
                    "constant_2": 2,
                    "dividend": 1,
                    "divider": 1,
                    "division_factor": 2,
                    "division_param": 1,
                    "division_value": 1,
                    "division_variable": 1,
                    "divisor": 11,
                    "num2": 1,
                    "quotient": 1,
                    "result3": 1,
                    "return_value": 1,
                    "temp_var2": 2,
                    "value2": 1,
                    "var2": 1,
                    "variable2": 1
                }
            },
            "called": [
                "FUN_08001f84",
                "FUN_08003da4",
                "FUN_08001cc4",
                "FUN_080020f0"
            ],
            "calling": [
                "FUN_08004a4c"
            ],
            "code": "\nint check_and_process_data_08002384(int *data)\n\n{\n  uint division_result;\n  int result;\n  uint divisor;\n  int start_time;\n  int current_time;\n  int loop_counter;\n  \n  if (*(char *)(data + 9) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(data + 9) = 1;\n  result = FUN_080020f0();\n  if (result == 0) {\n    data[10] = data[10] & 0xffffeefdU | 2;\n    division_result = DAT_20000084;\n    divisor = FUN_08003da4(2);\n    for (loop_counter = division_result / divisor << 1; loop_counter != 0; loop_counter = loop_counter + -1) {\n    }\n    FUN_08001f84(data);\n    *(uint *)(*data + 8) = *(uint *)(*data + 8) | 8;\n    start_time = FUN_08001cc4();\n    while (current_time = *data, (*(uint *)(current_time + 8) & 8) != 0) {\n      current_time = FUN_08001cc4();\n      if (10 < (uint)(current_time - start_time)) {\n        data[10] = data[10] & 0xffffffedU | 0x10;\n        *(undefined *)(data + 9) = 0;\n        return 1;\n      }\n    }\n    *(uint *)(current_time + 8) = *(uint *)(current_time + 8) | 4;\n    start_time = FUN_08001cc4();\n    while ((*(uint *)(*data + 8) & 4) != 0) {\n      current_time = FUN_08001cc4();\n      if (10 < (uint)(current_time - start_time)) {\n        data[10] = data[10] & 0xffffffedU | 0x10;\n        *(undefined *)(data + 9) = 0;\n        return 1;\n      }\n    }\n    data[10] = data[10] & 0xfffffffcU | 1;\n  }\n  *(undefined *)(data + 9) = 0;\n  return result;\n}\n\n",
            "current_name": "check_and_process_data_08002384",
            "entrypoint": "0x08002384",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002384": "check_and_process_data_08002384",
                "iVar2": "result",
                "iVar4": "start_time",
                "iVar5": "current_time",
                "local_14": "loop_counter",
                "param_1": "data",
                "uVar1": "division_result",
                "uVar3": "divisor"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002470": {
            "additional_data": {
                "0x5fa0000": {
                    "constant": 1,
                    "mask": 1
                },
                "0xf8ff": {
                    "clear_mask": 1
                },
                "FUN_08002470": {
                    "configure_peripheral": 1,
                    "set_bits_in_register": 1,
                    "set_configuration": 1,
                    "set_register_value": 1,
                    "set_shifted_bits_and_mask": 1,
                    "set_special_bits": 2,
                    "set_special_flag": 1,
                    "update_config_register": 2,
                    "update_config_value": 1,
                    "update_configuration": 5,
                    "update_control_register": 1,
                    "update_data": 2,
                    "update_data_register": 1,
                    "update_flags": 1,
                    "update_memory_register_value": 1,
                    "update_register": 1,
                    "update_register_value": 6,
                    "update_value_in_memory": 1
                },
                "_DAT_e000ed0c": {
                    "config_register": 3,
                    "configuration": 1,
                    "configuration_register": 1,
                    "configuration_value": 2,
                    "control_register": 2,
                    "current_value": 1,
                    "data_register": 3,
                    "existing_config": 1,
                    "hardware_config": 1,
                    "memory_register": 1,
                    "register": 2,
                    "register_value": 10,
                    "special_bits": 1
                },
                "param_1": {
                    "config": 1,
                    "config_value": 1,
                    "configuration": 2,
                    "flags": 2,
                    "input": 1,
                    "input_param": 1,
                    "input_value": 14,
                    "new_config": 1,
                    "new_value": 2,
                    "register_value": 2,
                    "value": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_08005f5e",
                "FUN_08001c88"
            ],
            "code": "\n\n\nvoid update_memory_register_value_08002470(uint input_value)\n\n{\n  _DAT_e000ed0c = (input_value & 7) << 8 | _DAT_e000ed0c & 0xf8ff | 0x5fa0000;\n  return;\n}\n\n",
            "current_name": "update_memory_register_value_08002470",
            "entrypoint": "0x08002470",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002470": "update_memory_register_value_08002470",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002494": {
            "additional_data": {
                "0xe000e400": {
                    "memory_offset_2": 1
                },
                "0xe000ed0c": {
                    "shift_register_address": 1
                },
                "0xe000ed14": {
                    "memory_offset_1": 1
                },
                "FUN_08002494": {
                    "apply_bitmask": 1,
                    "apply_bitwise_operations": 1,
                    "apply_mask_and_store": 1,
                    "decode_and_store": 1,
                    "reverse_bits_and_store": 1,
                    "set_bits_in_memory": 2,
                    "set_data_bits": 1,
                    "update_byte_value": 1,
                    "update_char_in_memory": 1,
                    "update_character": 2,
                    "update_character_data": 1,
                    "update_data": 4,
                    "update_data_in_memory": 1,
                    "update_memory": 6,
                    "update_memory_bit": 1,
                    "update_memory_location": 1,
                    "update_parameter_value": 1,
                    "update_register": 1,
                    "update_registers": 1,
                    "write_to_memory": 2
                },
                "char": {
                    "byte": 1
                },
                "param_1": {
                    "addr": 1,
                    "address": 14,
                    "char_index": 1,
                    "character_address": 1,
                    "character_index": 1,
                    "character_offset": 1,
                    "data_address": 1,
                    "data_index": 1,
                    "dest_address": 1,
                    "index": 2,
                    "input": 1,
                    "input_index": 1,
                    "input_value": 2,
                    "offset": 2,
                    "register_address": 1
                },
                "param_2": {
                    "bit_mask": 5,
                    "bit_mask1": 1,
                    "bitmask1": 1,
                    "data": 5,
                    "data_1": 1,
                    "input_data": 1,
                    "mask": 9,
                    "mask_value": 2,
                    "old_value": 1,
                    "register_mask": 1,
                    "register_value": 1,
                    "source": 2,
                    "value_to_set_bits_from": 1
                },
                "param_3": {
                    "bit_mask2": 1,
                    "bitmask2": 1,
                    "character_value": 1,
                    "data": 4,
                    "data_2": 1,
                    "destination": 2,
                    "existing_data": 1,
                    "mask": 6,
                    "new_value": 2,
                    "output_value": 1,
                    "update_value": 1,
                    "value": 9,
                    "value_to_set_bits_to": 1
                },
                "uVar1": {
                    "bitwise_and_result": 1,
                    "clamped_shift_amount": 1,
                    "final_value": 1,
                    "masked_value": 1,
                    "modified_mask": 1,
                    "new_byte_value": 1,
                    "result": 2,
                    "shift_amount": 11,
                    "shift_bits1": 1,
                    "shift_count": 2,
                    "shifted_bits": 3,
                    "shifted_bits_with_offset": 1,
                    "shifted_offset": 1,
                    "shifted_value": 2,
                    "updated_bits": 1
                },
                "uVar1_1": {
                    "bit_mask": 1,
                    "shifted_mask": 1
                },
                "uVar1_2": {
                    "shifted_data": 1
                },
                "uVar1_3": {
                    "masked_data": 1
                },
                "uVar1_updated": {
                    "shift_amount": 1
                },
                "uVar2": {
                    "adjusted_amount": 1,
                    "adjusted_bits": 1,
                    "adjusted_shift": 1,
                    "application_mask": 1,
                    "apply_mask": 1,
                    "bit_mask": 1,
                    "bit_position": 1,
                    "effective_shift": 1,
                    "inverse_shift_amount": 1,
                    "max_offset": 1,
                    "offset": 1,
                    "remaining_bits": 12,
                    "remaining_shift": 1,
                    "shift_amount": 1,
                    "shift_bits": 1,
                    "shift_bits2": 1,
                    "shifted_mask": 1,
                    "shifted_value": 1,
                    "updated_value": 1
                },
                "uVar2_1": {
                    "masked_data": 1
                },
                "uVar2_updated": {
                    "remaining_bits": 1
                },
                "uVar3": {
                    "adjusted_shift_amount": 1,
                    "shifted_mask": 2,
                    "update_mask": 1
                },
                "uVar4": {
                    "masked_bits": 1,
                    "shifted_result": 1,
                    "shifted_value": 1,
                    "updated_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005510",
                "FUN_08005568",
                "FUN_08001c3c",
                "FUN_08001b48"
            ],
            "code": "\n\n\nvoid update_char_in_memory_08002494(uint address,uint mask,uint value)\n\n{\n  uint shift_amount;\n  uint remaining_bits;\n  \n  shift_amount = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  remaining_bits = 7 - shift_amount;\n  if (3 < remaining_bits) {\n    remaining_bits = 4;\n  }\n  if (shift_amount + 4 < 7) {\n    shift_amount = 0;\n  }\n  else {\n    shift_amount = shift_amount - 3;\n  }\n  shift_amount = (mask & (1 << (remaining_bits & 0xff)) - 1U) << (shift_amount & 0xff) |\n          (1 << (shift_amount & 0xff)) - 1U & value;\n  if ((int)address < 0) {\n    *(byte *)((address & 0xf) + 0xe000ed14) = (byte)(shift_amount << 4);\n  }\n  else {\n    *(byte *)(address + 0xe000e400) = (byte)(shift_amount << 4);\n  }\n  return;\n}\n\n",
            "current_name": "update_char_in_memory_08002494",
            "entrypoint": "0x08002494",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002494": "update_char_in_memory_08002494",
                "char": "byte",
                "param_1": "address",
                "param_2": "mask",
                "param_3": "value",
                "uVar1": "shift_amount",
                "uVar2": "remaining_bits"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080024f8": {
            "additional_data": {
                "0x1f": {
                    "bit_mask": 1
                },
                "0x1fff1f00": {
                    "array_base": 1
                },
                "DAT_": {
                    "": 1
                },
                "FUN_080024f8": {
                    "initialize_bit": 1,
                    "set_bit": 11,
                    "set_bit_at_index": 6,
                    "set_bit_in_array": 10,
                    "set_bit_in_memory": 2,
                    "set_bit_value": 1
                },
                "PTR_": {
                    "": 1
                },
                "int": {
                    "array": 1,
                    "array_index": 1,
                    "integer": 1
                },
                "param_1": {
                    "bit_index": 10,
                    "bit_position": 2,
                    "index": 16,
                    "position": 3
                },
                "param_2": {
                    "array": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005510",
                "FUN_08005568"
            ],
            "code": "\nvoid set_bit_in_array_080024f8(uinteger index)\n\n{\n  if (-1 < (integer)index) {\n    *(integer *)((index >> 5) * 4 + -0x1fff1f00) = 1 << (index & 0x1f);\n  }\n  return;\n}\n\n",
            "current_name": "set_bit_in_array_080024f8",
            "entrypoint": "0x080024f8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080024f8": "set_bit_in_array_080024f8",
                "int": "integer",
                "param_1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002514": {
            "additional_data": {
                "0": {
                    "data_counter_value": 1
                },
                "0x1000000": {
                    "upper_limit": 1
                },
                "0xf0": {
                    "data_flag_value": 1
                },
                "7": {
                    "data_max_value": 1
                },
                "DAT_e000ed23": {
                    "config_value": 1,
                    "constant_value": 6,
                    "data_flag": 1,
                    "flag": 2,
                    "flag_value": 1,
                    "flags": 1,
                    "limit": 1,
                    "mask": 1,
                    "memory_data": 1,
                    "memory_flags": 1,
                    "memory_value": 1,
                    "register2": 1,
                    "register_2": 1,
                    "register_flag": 1,
                    "status": 6,
                    "status_flag": 1,
                    "status_flags": 1,
                    "task_priority": 1
                },
                "FUN_08002514": {
                    "initialize_data": 4,
                    "initialize_memory": 10,
                    "initialize_registers": 2,
                    "initiate_mission": 1,
                    "set_e000e014": 1,
                    "set_initial_values": 1,
                    "set_param_and_flag": 1,
                    "set_param_and_flags": 1,
                    "set_param_and_status": 1,
                    "set_param_values": 1,
                    "set_parameters": 5,
                    "set_registers": 1,
                    "update_memory_data": 1,
                    "update_register_value": 1
                },
                "_DAT_e000e010": {
                    "bit_mask": 1,
                    "constant_value": 2,
                    "control_register": 1,
                    "count": 1,
                    "counter": 2,
                    "data_max": 1,
                    "final_variable": 1,
                    "flag": 10,
                    "flag_value": 2,
                    "limit": 2,
                    "memory_permission": 1,
                    "register4": 1,
                    "register_4": 1,
                    "task_status": 1,
                    "threshold": 2,
                    "unused_variable2": 1
                },
                "_DAT_e000e014": {
                    "adjusted_input_value": 1,
                    "base_address": 1,
                    "data_index": 1,
                    "data_pointer": 2,
                    "lower_limit": 1,
                    "memory_address": 3,
                    "memory_location": 2,
                    "memory_offset": 1,
                    "memory_pointer": 1,
                    "memory_ptr": 1,
                    "memory_start": 1,
                    "mission_offset": 1,
                    "modified_value": 4,
                    "new_value": 2,
                    "param_minus_one": 1,
                    "register1": 1,
                    "register_1": 1,
                    "register_value": 2,
                    "target_address": 1,
                    "updated_value": 2
                },
                "_DAT_e000e018": {
                    "additional_data": 1,
                    "another_value": 1,
                    "another_variable": 1,
                    "count": 1,
                    "counter": 12,
                    "data_counter": 1,
                    "initialized_value": 1,
                    "memory_offset": 1,
                    "offset": 1,
                    "register3": 1,
                    "register_3": 1,
                    "reset_value": 1,
                    "task_progress": 1,
                    "temp_register": 1,
                    "unused_variable": 4,
                    "unused_variable1": 1
                },
                "param_1": {
                    "address": 1,
                    "data_size": 2,
                    "input": 1,
                    "input_size": 1,
                    "input_value": 8,
                    "mission_number": 1,
                    "new_value": 1,
                    "size": 1,
                    "value": 15
                }
            },
            "called": [],
            "calling": [
                "FUN_08001c3c",
                "FUN_08001b48"
            ],
            "code": "\n\n\nundefined4 initialize_memory_08002514(int value)\n\n{\n  if (value - 1U < 0x1000000) {\n    _DAT_e000e014 = value - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "initialize_memory_08002514",
            "entrypoint": "0x08002514",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002514": "initialize_memory_08002514",
                "param_1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002540": {
            "additional_data": {
                "FUNK_08002540": {
                    "set_bit": 1
                },
                "FUN_08002540": {
                    "set_bit": 9,
                    "set_bit_at_index": 1,
                    "set_bit_at_position": 1,
                    "set_bit_in_array": 7,
                    "set_bit_in_memory": 8,
                    "set_bit_value": 3,
                    "write_bit_in_memory": 1
                },
                "index": {
                    "bit_index": 1
                },
                "param_1": {
                    "bit_index": 15,
                    "bit_position": 5,
                    "index": 7,
                    "input": 1,
                    "position": 2,
                    "value": 1
                },
                "param_2": {
                    "value": 1
                },
                "param_3": {
                    "bit_array": 1
                }
            },
            "called": [],
            "calling": [],
            "code": "\nvoid set_bit_in_memory_08002540(uint bit_index)\n\n{\n  if (-1 < (int)bit_index) {\n    *(int *)(((bit_index >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (bit_index & 0x1f);\n  }\n  return;\n}\n\n",
            "current_name": "set_bit_in_memory_08002540",
            "entrypoint": "0x08002540",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002540": "set_bit_in_memory_08002540",
                "param_1": "bit_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002560": {
            "additional_data": {
                "DAT_e000e010": {
                    "flag_register": 1
                },
                "FUN_08002560": {
                    "set_bit_flag": 1,
                    "set_configuration_flag": 1,
                    "set_e000e010_bit": 4,
                    "set_flag": 3,
                    "set_flag_based_on_param": 1,
                    "set_flag_if_equals4": 1,
                    "set_hardware_flag": 1,
                    "set_param_flags": 1,
                    "set_status_flag": 1,
                    "toggle_flag": 1,
                    "update_control_register": 4,
                    "update_e000_e010": 1,
                    "update_flag": 3,
                    "update_peripheral_configuration": 1,
                    "update_status": 7
                },
                "_DAT_e000e010": {
                    "configuration_register": 1,
                    "control_register": 3,
                    "flag": 2,
                    "flag_register": 2,
                    "hardware_flag": 1,
                    "register": 2,
                    "register_e000e010": 1,
                    "register_value": 7,
                    "status_register": 8
                },
                "param_1": {
                    "config_type": 1,
                    "flag": 6,
                    "flag_value": 5,
                    "input": 2,
                    "input_value": 2,
                    "state": 1,
                    "status": 7,
                    "value": 7
                }
            },
            "called": [],
            "calling": [
                "FUN_08001b48"
            ],
            "code": "\n\n\nvoid update_status_08002560(int status)\n\n{\n  if (status != 4) {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n    return;\n  }\n  _DAT_e000e010 = _DAT_e000e010 | 4;\n  return;\n}\n\n",
            "current_name": "update_status_08002560",
            "entrypoint": "0x08002560",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002560": "update_status_08002560",
                "param_1": "status"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002580": {
            "called": [],
            "calling": [
                "FUN_08002582"
            ],
            "code": "\nvoid FUNC_08002580(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08002580",
            "entrypoint": "0x08002580",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08002580": "FUNC_08002580"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08002582": {
            "additional_data": {
                "FUNC_08002580": {
                    "call_sub_function": 2,
                    "do_something": 1,
                    "execute_initialization": 6,
                    "execute_main_logic": 1,
                    "execute_sub_function": 4,
                    "execute_subfunction": 1,
                    "initialize": 1,
                    "initialize_data": 2,
                    "perform_initialization": 5,
                    "perform_setup": 1,
                    "perform_subroutine": 1,
                    "perform_subtask": 2,
                    "perform_task": 3,
                    "subroutine": 1
                },
                "FUN_08002582": {
                    "execute_function": 3,
                    "execute_initialization": 1,
                    "execute_main_function": 6,
                    "execute_operation": 1,
                    "execute_operations": 1,
                    "execute_pre_task": 1,
                    "execute_previous_function": 1,
                    "execute_setup": 1,
                    "execute_setup_function": 1,
                    "execute_subroutine": 1,
                    "execute_task": 2,
                    "initialize": 3,
                    "initialize_system": 6,
                    "perform_initialization": 1,
                    "run_initialization": 1
                }
            },
            "called": [
                "FUN_08002580"
            ],
            "calling": [
                "FUN_08004b9e"
            ],
            "code": "\nvoid execute_previous_function_08002582(void)\n\n{\n  FUNC_08002580();\n  return;\n}\n\n",
            "current_name": "execute_previous_function_08002582",
            "entrypoint": "0x08002582",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002582": "execute_previous_function_08002582"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800258c": {
            "additional_data": {
                "0x21": {
                    "status": 1
                },
                "0xd": {
                    "callback_pointer": 1
                },
                "0xe": {
                    "value": 1
                },
                "0xfd": {
                    "callback": 1
                },
                "FUN_0800258c": {
                    "configure_data": 1,
                    "configure_device_settings": 1,
                    "configure_hardware_settings": 1,
                    "configure_memory_settings": 1,
                    "configure_options": 1,
                    "configure_peripheral": 2,
                    "configure_permissions": 1,
                    "configure_settings": 1,
                    "initialize_and_configure_device": 1,
                    "initialize_configuration": 1,
                    "initialize_data": 8,
                    "initialize_memory": 1,
                    "initialize_settings": 3,
                    "initialize_value": 1,
                    "initialize_values": 1,
                    "set_configuration": 2,
                    "set_data_and_flags": 1,
                    "set_memory_configuration": 1,
                    "update_data": 2
                },
                "PTR_40020008": {
                    "setting_option_1": 1
                },
                "PTR_4002001c": {
                    "setting_option_2": 1
                },
                "PTR_40020030": {
                    "setting_option_3": 1
                },
                "PTR_40020044": {
                    "setting_option_4": 1
                },
                "PTR_40020058": {
                    "setting_option_5": 1
                },
                "PTR_4002006c": {
                    "setting_option_6": 1
                },
                "PTR_DAT_40020004": {
                    "value": 1
                },
                "PTR_DAT_40020008": {
                    "pointer_a": 1
                },
                "PTR_DAT_4002001c": {
                    "pointer_b": 1
                },
                "PTR_DAT_40020030": {
                    "pointer_c": 1
                },
                "PTR_DAT_40020044": {
                    "pointer_d": 1
                },
                "PTR_DAT_40020058": {
                    "pointer_e": 1
                },
                "PTR_DAT_4002006c": {
                    "pointer_f": 1
                },
                "_DAT_40020004": {
                    "base_address": 1,
                    "buffer_size": 1,
                    "config_value": 1,
                    "configuration_value": 3,
                    "device_configuration": 1,
                    "flag": 2,
                    "global_data": 1,
                    "global_setting": 1,
                    "memory_config": 1,
                    "permission_level": 1,
                    "result": 1,
                    "result_value": 1,
                    "setting": 1,
                    "status": 2,
                    "target_value": 1
                },
                "_DAT_40020008": {
                    "ptr_1": 1
                },
                "_DAT_4002001c": {
                    "ptr_2": 1
                },
                "_DAT_40020030": {
                    "ptr_3": 1
                },
                "_DAT_40020044": {
                    "ptr_4": 1
                },
                "_DAT_40020058": {
                    "ptr_5": 1
                },
                "_DAT_4002006c": {
                    "ptr_6": 1
                },
                "char": {
                    "value": 1
                },
                "code": {
                    "function_to_call": 1
                },
                "param_1": {
                    "config": 5,
                    "data": 9,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "device_config": 1,
                    "hardware_settings": 1,
                    "memory": 1,
                    "options": 1,
                    "parameter": 1,
                    "parameters": 2,
                    "params": 1,
                    "peripheral_config": 1,
                    "pointer_array": 1,
                    "settings": 5
                },
                "puVar1": {
                    "address": 1,
                    "current_config": 2,
                    "current_data": 1,
                    "current_data_pointer": 1,
                    "current_option": 1,
                    "current_param": 3,
                    "current_pointer": 2,
                    "current_setting": 5,
                    "current_value": 5,
                    "peripheral_address": 1,
                    "pointer": 1,
                    "ptr": 3,
                    "ptr_1": 1,
                    "selected_option": 2,
                    "value": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_0800316c",
                "FUN_080046b8"
            ],
            "code": "\n\n\nundefined4 initialize_data_0800258c(uint **data)\n\n{\n  uint *current_value;\n  \n  if (*(value *)((int)data + 0x21) != '\\x02') {\n    data[0xe] = (uint *)0x4;\n    return 1;\n  }\n  **data = **data & 0xfffffff1;\n  **data = **data & 0xfffffffe;\n  current_value = *data;\n  if (current_value == (uint *)0x40020008) {\n    _DAT_40020004 = 1;\n  }\n  else if (current_value == (uint *)0x4002001c) {\n    _DAT_40020004 = 0x10;\n  }\n  else if (current_value == (uint *)0x40020030) {\n    _DAT_40020004 = 0x100;\n  }\n  else if (current_value == (uint *)0x40020044) {\n    _DAT_40020004 = 0x1000;\n  }\n  else if (current_value == (uint *)0x40020058) {\n    _DAT_40020004 = 0x10000;\n  }\n  else if (current_value == (uint *)0x4002006c) {\n    _DAT_40020004 = 0x100000;\n  }\n  else {\n    _DAT_40020004 = 0x1000000;\n  }\n  *(undefined *)((int)data + 0x21) = 1;\n  *(undefined *)(data + 8) = 0;\n  if (data[0xd] != (uint *)0x0) {\n    (*(function_to_call *)data[0xd])();\n    return 0;\n  }\n  return 0;\n}\n\n",
            "current_name": "initialize_data_0800258c",
            "entrypoint": "0x0800258c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800258c": "initialize_data_0800258c",
                "char": "value",
                "code": "function_to_call",
                "param_1": "data",
                "puVar1": "current_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002624": {
            "additional_data": {
                "FUN_08002624": {
                    "configure_registers": 1,
                    "process_bits": 1,
                    "process_data": 2,
                    "update_bits": 6,
                    "update_bits_based_on_flag": 1,
                    "update_config": 2,
                    "update_flags": 1,
                    "update_flags_and_registers": 1,
                    "update_memory": 1,
                    "update_memory_registers": 1,
                    "update_param1": 1,
                    "update_param_bits": 2,
                    "update_param_values": 1,
                    "update_parameter_values": 1,
                    "update_params": 1,
                    "update_registers": 7
                },
                "_DAT_40010400": {
                    "register2": 1
                },
                "_DAT_40010404": {
                    "register3": 1
                },
                "_DAT_40010408": {
                    "register4": 1
                },
                "_DAT_4001040c": {
                    "register5": 1
                },
                "_DAT_40021018": {
                    "register1": 1
                },
                "iVar7": {
                    "bit_offset": 3,
                    "bit_position": 2,
                    "bit_shift": 6,
                    "byte_index": 1,
                    "i_var1": 2,
                    "index": 1,
                    "index1": 2,
                    "shift": 2,
                    "shift_amount": 4,
                    "shift_amount1": 1,
                    "shift_idx": 1,
                    "shift_index": 1,
                    "shift_index1": 1,
                    "shifted_index": 1,
                    "temp_var1": 2,
                    "var1": 1
                },
                "iVar8": {
                    "data_idx": 1,
                    "i_var2": 1,
                    "index": 1,
                    "index2": 2,
                    "reg_index": 1,
                    "reg_value": 1,
                    "register_index": 18,
                    "register_offset": 1,
                    "shift_amount2": 1,
                    "shift_index2": 1,
                    "temp_var2": 2,
                    "var2": 1
                },
                "param_1": {
                    "array1": 1,
                    "bit_array": 1,
                    "bit_array1": 1,
                    "bitfield_1": 1,
                    "bits_to_update": 1,
                    "config": 1,
                    "config_set": 1,
                    "current_regs": 1,
                    "flags": 1,
                    "flags_array": 1,
                    "memory_address": 1,
                    "output": 1,
                    "output_array": 4,
                    "output_data": 1,
                    "output_params": 3,
                    "output_values": 1,
                    "param_array1": 2,
                    "register1": 1,
                    "register_array": 1,
                    "register_array1": 1,
                    "register_values": 2,
                    "register_values1": 1,
                    "regs_before": 1,
                    "result_array": 1
                },
                "param_2": {
                    "array2": 1,
                    "bit_array2": 1,
                    "bit_mask": 1,
                    "bit_values": 1,
                    "bitfield_2": 1,
                    "bits_array": 1,
                    "condition_values": 1,
                    "config_array": 1,
                    "config_value": 1,
                    "data_registers": 1,
                    "input": 2,
                    "input_array": 5,
                    "input_data": 1,
                    "input_params": 3,
                    "input_values": 2,
                    "new_regs": 1,
                    "param_array2": 2,
                    "register2": 1,
                    "register_array2": 1,
                    "register_values2": 1,
                    "regs_after": 1,
                    "update_flags": 1
                },
                "puVar1": {
                    "dest_reg_ptr": 1,
                    "destination": 1,
                    "output_pointer": 2,
                    "output_ptr": 5,
                    "p_array1": 1,
                    "param_ptr1": 1,
                    "pointer_to_memory_address": 1,
                    "register_pointer": 1,
                    "result_ptr": 1,
                    "updated_ptr": 1,
                    "updated_register1": 1
                },
                "uVar2": {
                    "bit": 1,
                    "bit_mask": 27,
                    "bit_mask_shifted": 1,
                    "flag_bit": 1,
                    "u_bitmask": 1
                },
                "uVar3": {
                    "bit_check": 8,
                    "bit_check_result": 1,
                    "bit_result": 4,
                    "bit_value": 3,
                    "bitwise_and_result": 2,
                    "condition": 1,
                    "config_bit": 1,
                    "current_register": 1,
                    "flag_check": 1,
                    "flag_mask": 1,
                    "input_bit": 2,
                    "input_bits": 1,
                    "masked_value": 1,
                    "param2_bit": 1,
                    "reg_bit": 1,
                    "temp": 1,
                    "value_check": 1
                },
                "uVar4": {
                    "bit_index": 14,
                    "bit_pos": 1,
                    "bit_position": 4,
                    "i": 1,
                    "idx": 1,
                    "index": 6,
                    "loop_counter": 2,
                    "reg_index": 1,
                    "register_index": 1
                },
                "uVar5": {
                    "condition": 1,
                    "condition_value": 2,
                    "config_value": 1,
                    "flag": 1,
                    "input_value": 1,
                    "opcode": 12,
                    "operation_code": 1,
                    "option": 1,
                    "param2_value": 1,
                    "switch_value": 2,
                    "value": 5,
                    "value_at_index1": 1,
                    "value_check": 1,
                    "var1": 1
                },
                "uVar6": {
                    "new_switch_value": 1,
                    "new_value": 15,
                    "offset": 2,
                    "output_value": 1,
                    "register_value": 1,
                    "result": 1,
                    "shifted_value": 1,
                    "update_value": 1,
                    "updated_value": 7,
                    "value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004974",
                "FUN_08004bb0",
                "FUN_08004f4c"
            ],
            "code": "\n\n\nvoid update_flags_and_registers_08002624(uint *output_array,uint *input_array)\n\n{\n  uint *output_ptr;\n  uint bit_mask;\n  uint bit_check;\n  uint bit_index;\n  uint opcode;\n  uint new_value;\n  int bit_shift;\n  int register_index;\n  \n  new_value = 0;\n  bit_index = 0;\n  do {\n    if (0xf < bit_index) {\n      return;\n    }\n    bit_mask = 1 << (bit_index & 0xff);\n    bit_check = *input_array & bit_mask;\n    if (bit_mask == bit_check) {\n      opcode = input_array[1];\n      if (opcode == 0x12) {\n        new_value = input_array[3] + 0xc;\n      }\n      else if (opcode < 0x13) {\n        if (opcode == 2) {\n          new_value = input_array[3] + 8;\n        }\n        else if (opcode < 3) {\n          if (opcode == 0) goto LAB_08002776;\n          if (opcode == 1) {\n            new_value = input_array[3];\n          }\n        }\n        else if (opcode == 3) {\n          new_value = 0;\n        }\n        else if (opcode == 0x11) {\n          new_value = input_array[3] + 4;\n        }\n      }\n      else if (opcode == 0x10210000) {\nLAB_08002776:\n        if (input_array[2] == 0) {\n          new_value = 4;\n        }\n        else if (input_array[2] == 1) {\n          output_array[4] = bit_mask;\n          new_value = 8;\n        }\n        else {\n          output_array[5] = bit_mask;\n          new_value = 8;\n        }\n      }\n      else if (opcode < 0x10210001) {\n        if ((opcode == 0x10110000) || (opcode == 0x10120000)) goto LAB_08002776;\n      }\n      else if ((opcode == 0x10310000) || ((opcode == 0x10320000 || (opcode == 0x10220000))))\n      goto LAB_08002776;\n      bit_mask = bit_index;\n      output_ptr = output_array;\n      if (0xff < bit_check) {\n        bit_mask = bit_index - 8;\n        output_ptr = output_array + 1;\n      }\n      *output_ptr = *output_ptr & ~(0xf << (bit_mask << 2 & 0xff)) | new_value << (bit_mask << 2 & 0xff);\n      if ((input_array[1] & 0x10000000) != 0) {\n        _DAT_40021018 = _DAT_40021018 | 1;\n        bit_shift = (bit_index & 3) << 2;\n        if (output_array == (uint *)0x40010800) {\n          register_index = 0;\n        }\n        else if (output_array == (uint *)0x40010c00) {\n          register_index = 1;\n        }\n        else if (output_array == (uint *)0x40011000) {\n          register_index = 2;\n        }\n        else if (output_array == (uint *)0x40011400) {\n          register_index = 3;\n        }\n        else {\n          register_index = 4;\n        }\n        *(uint *)(((bit_index >> 2) + 2) * 4 + 0x40010000) =\n             *(uint *)(((bit_index >> 2) + 2) * 4 + 0x40010000) & ~(0xf << bit_shift) | register_index << bit_shift;\n        if ((input_array[1] & 0x10000) == 0) {\n          _DAT_40010400 = _DAT_40010400 & ~bit_check;\n        }\n        else {\n          _DAT_40010400 = _DAT_40010400 | bit_check;\n        }\n        if ((input_array[1] & 0x20000) == 0) {\n          _DAT_40010404 = _DAT_40010404 & ~bit_check;\n        }\n        else {\n          _DAT_40010404 = _DAT_40010404 | bit_check;\n        }\n        if ((input_array[1] & 0x100000) == 0) {\n          _DAT_40010408 = _DAT_40010408 & ~bit_check;\n        }\n        else {\n          _DAT_40010408 = _DAT_40010408 | bit_check;\n        }\n        if ((input_array[1] & 0x200000) == 0) {\n          _DAT_4001040c = _DAT_4001040c & ~bit_check;\n        }\n        else {\n          _DAT_4001040c = bit_check | _DAT_4001040c;\n        }\n      }\n    }\n    bit_index = bit_index + 1;\n  } while( true );\n}\n\n",
            "current_name": "update_flags_and_registers_08002624",
            "entrypoint": "0x08002624",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002624": "update_flags_and_registers_08002624",
                "iVar7": "bit_shift",
                "iVar8": "register_index",
                "param_1": "output_array",
                "param_2": "input_array",
                "puVar1": "output_ptr",
                "uVar2": "bit_mask",
                "uVar3": "bit_check",
                "uVar4": "bit_index",
                "uVar5": "opcode",
                "uVar6": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002810": {
            "additional_data": {
                "0": {
                    "absent": 1
                },
                "1": {
                    "present": 1
                },
                "FUN_08002810": {
                    "check_bit": 18,
                    "check_bit_and_return": 1,
                    "check_bit_pattern": 1,
                    "check_bit_presence": 1,
                    "check_bit_set": 1,
                    "check_bitwise_and": 1,
                    "check_bitwise_combination": 1,
                    "check_bitwise_intersection": 1,
                    "check_flag": 1,
                    "check_param_bit": 2,
                    "check_param_flag": 1,
                    "is_bit_set": 1,
                    "is_param_bit_set": 1
                },
                "PTR_8": {
                    "bitmask": 1
                },
                "param_1": {
                    "address": 1,
                    "base_address": 2,
                    "data_address": 3,
                    "data_ptr": 1,
                    "input": 2,
                    "input_pointer": 1,
                    "input_ptr": 1,
                    "input_value": 9,
                    "memory_address": 1,
                    "offset": 2,
                    "ptr": 1,
                    "value": 7
                },
                "param_2": {
                    "bit_mask": 13,
                    "bit_pattern": 1,
                    "bitmask": 7,
                    "flag": 2,
                    "mask": 4,
                    "pattern": 1,
                    "value": 2,
                    "value_to_check": 1
                },
                "param_3": {
                    "bit_mask": 1
                },
                "return_undefined4": {
                    "result": 1
                },
                "var_1": {
                    "flag_mask": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004c48"
            ],
            "code": "\nundefined4 check_param_bit_08002810(int input_value,uint bit_mask)\n\n{\n  if ((bit_mask & *(uint *)(input_value + 8)) == 0) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "check_param_bit_08002810",
            "entrypoint": "0x08002810",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002810": "check_param_bit_08002810",
                "param_1": "input_value",
                "param_2": "bit_mask"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800281e": {
            "additional_data": {
                "DAT_": {
                    "": 1
                },
                "FUN_0800281e": {
                    "set_memory_value": 1,
                    "set_param": 2,
                    "set_param_value": 12,
                    "set_parameter": 2,
                    "set_parameter_value": 3,
                    "set_value": 1,
                    "set_value_based_on_condition": 1,
                    "update_data_value": 1,
                    "update_memory": 1,
                    "update_param_value": 2,
                    "update_parameter": 1,
                    "update_parameter_value": 3,
                    "update_value": 1
                },
                "PTR_": {
                    "": 1
                },
                "condition": {
                    "check_condition": 1
                },
                "is_shifted": {
                    "should_shift": 1
                },
                "object_address": {
                    "object_address": 1
                },
                "param_1": {
                    "address": 1,
                    "base_address": 7,
                    "buffer": 1,
                    "data_address": 1,
                    "data_struct": 1,
                    "obj_address": 2,
                    "obj_ptr": 1,
                    "object": 1,
                    "object_address": 11,
                    "object_base_address": 1,
                    "param_address": 1,
                    "ptr_to_data": 1,
                    "structure_address": 1,
                    "value_container": 1
                },
                "param_2": {
                    "new_value": 15,
                    "shifted_value": 1,
                    "value": 14,
                    "value_to_set": 1
                },
                "param_3": {
                    "condition": 1,
                    "flag": 2,
                    "is_shifted": 19,
                    "is_shifted_value": 1,
                    "shift": 1,
                    "shift_flag": 3,
                    "shift_value": 1,
                    "special_case": 1,
                    "use_shift": 1,
                    "use_shift_operation": 1
                },
                "parameter_value": {
                    "parameter_value": 1
                },
                "should_shift": {
                    "should_shift": 1
                },
                "value": {
                    "parameter_value": 1
                },
                "value_container": {
                    "value_storage": 1
                },
                "value_to_set": {
                    "new_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004c30"
            ],
            "code": "\nvoid set_param_value_0800281e(int object_address,int new_value,int is_shifted)\n\n{\n  if (is_shifted == 0) {\n    *(int *)(object_address + 0x10) = new_value << 0x10;\n    return;\n  }\n  *(int *)(object_address + 0x10) = new_value;\n  return;\n}\n\n",
            "current_name": "set_param_value_0800281e",
            "entrypoint": "0x0800281e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800281e": "set_param_value_0800281e",
                "param_1": "object_address",
                "param_2": "new_value",
                "param_3": "is_shifted"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800282c": {
            "additional_data": {
                "FUN_0800282c": {
                    "check_and_update_data": 1,
                    "update_and_call": 1,
                    "update_and_call_fun_080060e4": 1,
                    "update_and_call_function": 4,
                    "update_and_call_subroutine": 1,
                    "update_and_check_flag": 1,
                    "update_and_invoke_function": 1,
                    "update_critical_param": 1,
                    "update_dat_value_if_condition_met": 1,
                    "update_data": 4,
                    "update_data_and_call_fn": 1,
                    "update_data_and_call_function": 1,
                    "update_data_and_invoke_function": 1,
                    "update_data_check": 1,
                    "update_data_if_bit_set": 1,
                    "update_data_if_condition_met": 1,
                    "update_data_if_flag_set": 1,
                    "update_data_if_greater": 1,
                    "update_data_if_modified": 1,
                    "update_data_if_set": 1,
                    "update_flag_if_set": 1,
                    "update_global_and_call": 1,
                    "update_global_variable_if_condition_met": 1,
                    "update_param_and_call_function": 1,
                    "update_register_and_call": 1
                },
                "FUN_080060e4": {
                    "do_something": 1,
                    "execute_after_update": 1,
                    "execute_data_update": 1,
                    "execute_fun_080060e4": 1,
                    "execute_specific_function": 1,
                    "execute_update": 3,
                    "execute_updated_function": 2,
                    "handle_function_call": 1,
                    "invoke_helper_function": 1,
                    "perform_action": 3,
                    "perform_additional_processing": 2,
                    "perform_operation": 1,
                    "perform_task": 1,
                    "perform_update": 6,
                    "process_data": 1,
                    "process_data_change": 1
                },
                "_DAT_40010414": {
                    "current_status": 1,
                    "dat_value": 1,
                    "data": 5,
                    "data_flag": 3,
                    "data_register": 3,
                    "data_variable": 3,
                    "existing_data": 1,
                    "existing_flags": 1,
                    "flag_register": 1,
                    "global_data": 1,
                    "global_variable": 2,
                    "updated_data": 1,
                    "variable": 1
                },
                "param_1": {
                    "bit_flags": 1,
                    "critical_param": 1,
                    "data": 6,
                    "data_to_update": 2,
                    "flag": 2,
                    "flag_to_check": 1,
                    "flags": 1,
                    "input": 1,
                    "input_param": 1,
                    "input_parameter": 1,
                    "input_value": 6,
                    "new_data": 2,
                    "new_value": 1,
                    "param": 1,
                    "parameter": 1,
                    "updated_value": 1,
                    "value": 2
                }
            },
            "called": [
                "FUN_080060e4"
            ],
            "calling": [],
            "code": "\n\n\nvoid update_data_if_flag_set_0800282c(uint data)\n\n{\n  if ((_DAT_40010414 & data) != 0) {\n    _DAT_40010414 = data;\n    FUN_080060e4();\n  }\n  return;\n}\n\n",
            "current_name": "update_data_if_flag_set_0800282c",
            "entrypoint": "0x0800282c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800282c": "update_data_if_flag_set_0800282c",
                "param_1": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002848": {
            "additional_data": {
                "0x10": {
                    "display_mode_setting": 1,
                    "status_ptr": 1
                },
                "0x11": {
                    "config_value": 1,
                    "data": 1
                },
                "0x14": {
                    "condition": 2
                },
                "0x3d": {
                    "special_char": 1,
                    "symbol_flag": 1
                },
                "0x3e": {
                    "char_flag": 1,
                    "display_mode_char": 1
                },
                "0x4000": {
                    "constant_value_0x4000": 1
                },
                "0xfe": {
                    "mask1": 1
                },
                "0xffU": {
                    "constant_value_0xff_u": 1,
                    "mask2": 1
                },
                "FUN_08002848": {
                    "configure_display_mode": 1,
                    "decode_flags": 1,
                    "initialize_flags": 1,
                    "process_data": 1,
                    "process_parameter": 2,
                    "set_control_bits": 1,
                    "set_flag_based_on_condition": 1,
                    "set_flag_based_on_conditions": 4,
                    "set_flags": 1,
                    "set_flags_based_on_condition": 1,
                    "set_param": 1,
                    "set_permissions": 1,
                    "update_control_register": 1,
                    "update_flag_based_on_condition": 1,
                    "update_flag_value": 1,
                    "update_flags": 2,
                    "update_param": 1,
                    "update_register_value": 1,
                    "update_status": 8
                },
                "PTR_xxx": {
                    "ptr_xxx": 1
                },
                "byteArray": {
                    "byte_array": 1
                },
                "char": {
                    "ch": 1,
                    "char": 1,
                    "character": 1
                },
                "int": {
                    "int": 1,
                    "integer": 1
                },
                "param_1": {
                    "byte_array": 1,
                    "config_params": 2,
                    "data": 6,
                    "flag_info": 1,
                    "flags": 3,
                    "input": 1,
                    "input_array": 3,
                    "param": 2,
                    "param_array": 1,
                    "parameter": 2,
                    "permissions": 1,
                    "register": 1,
                    "status": 5,
                    "status_array": 1,
                    "status_data": 1
                },
                "uint": {
                    "unsigned_int": 1,
                    "unsigned_integer": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080033b8"
            ],
            "code": "\nundefined4 update_status_08002848(int *data)\n\n{\n  if (*(char *)((int)data + 0x3e) == '@') {\n    if (data[0x14] == 0) {\n      *(unsigned_integer *)(*data + 0x10) = data[0x11] & 0xfe;\n    }\n    else {\n      *(unsigned_integer *)(*data + 0x10) = data[0x11] & constant_value_0xff_u | 1;\n    }\n  }\n  else if (data[4] == 0x4000) {\n    if (*(char *)((int)data + 0x3d) == '!') {\n      *(unsigned_integer *)(*data + 0x10) = data[0x11] & 0xfe;\n    }\n    else {\n      *(unsigned_integer *)(*data + 0x10) = data[0x11] & constant_value_0xff_u | 1;\n    }\n  }\n  else if (data[0x14] == 0) {\n    *(unsigned_integer *)(*data + 0x10) = (unsigned_integer)(data[0x11] << 0x10) >> 0x17 & 6 | 0xf0;\n  }\n  else if (data[0x14] == 1) {\n    *(unsigned_integer *)(*data + 0x10) = (unsigned_integer)(data[0x11] << 0x10) >> 0x17 & 6 | 0xf1;\n  }\n  return 0;\n}\n\n",
            "current_name": "update_status_08002848",
            "entrypoint": "0x08002848",
            "imported": false,
            "improved": true,
            "renaming": {
                "0xffU": "constant_value_0xff_u",
                "FUN_08002848": "update_status_08002848",
                "param_1": "data",
                "uint": "unsigned_integer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080028d2": {
            "additional_data": {
                "0xff": {
                    "bit_mask": 1,
                    "byte_mask": 1,
                    "mask": 3
                },
                "FUN_080028d2": {
                    "copy_value_to_offset": 1,
                    "extract_and_assign_byte": 1,
                    "extract_and_assign_byte_value": 1,
                    "extract_byte_from_param": 1,
                    "fill_byte_value": 1,
                    "set_byte_from_parameter": 2,
                    "set_first_byte": 1,
                    "set_first_byte_to_value": 1,
                    "set_low_byte": 1,
                    "set_param_value": 3,
                    "set_parameter_value": 1,
                    "set_unsigned_value_from_parameter": 1,
                    "update_byte_value": 1,
                    "update_memory": 2,
                    "update_param_value": 2,
                    "update_parameter_value": 3,
                    "update_value": 4,
                    "update_value_from_parameter": 1,
                    "write_param_value_to_memory": 1,
                    "write_value_to_address": 1,
                    "write_value_to_memory": 1
                },
                "paramArray": {
                    "param_array": 1
                },
                "param_1": {
                    "address_ptr": 1,
                    "array": 1,
                    "array_ptr": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "input_array": 5,
                    "memory_address": 1,
                    "memory_block": 1,
                    "memory_pointer": 2,
                    "param_array": 6,
                    "param_list": 1,
                    "parameter": 4,
                    "parameter_array": 2,
                    "parameters": 1,
                    "pointer_to_data": 2,
                    "ptr_to_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080033b8"
            ],
            "code": "\nundefined4 update_value_from_parameter_080028d2(int *param_array)\n\n{\n  *(uint *)(*param_array + 0x10) = param_array[0x11] & 0xff;\n  return 0;\n}\n\n",
            "current_name": "update_value_from_parameter_080028d2",
            "entrypoint": "0x080028d2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080028d2": "update_value_from_parameter_080028d2",
                "param_1": "param_array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080028de": {
            "additional_data": {
                "0x0": {
                    "null": 1
                },
                "0x12": {
                    "flag_value_5": 1,
                    "some_value_3": 1
                },
                "0x14": {
                    "flag_offset": 1
                },
                "0x2": {
                    "flag_value_6": 1,
                    "some_value_4": 1
                },
                "0x2a": {
                    "short_offset": 1
                },
                "0x3d": {
                    "char_offset": 1
                },
                "0x3e": {
                    "char_offset_2": 1
                },
                "0x4": {
                    "flag_value_3": 1,
                    "some_value_1": 1
                },
                "0x8": {
                    "flag_value_4": 1,
                    "some_value_2": 1
                },
                "0xb": {
                    "offset_constant": 1
                },
                "0xc000": {
                    "flag_value_1": 1,
                    "some_constant": 1
                },
                "0xffff0000": {
                    "flag_value_2": 1,
                    "some_value": 1
                },
                "FUN_080028de": {
                    "apply_flags": 2,
                    "handle_input": 1,
                    "modify_flags": 2,
                    "process_input": 1,
                    "set_flag_based_on_condition": 1,
                    "set_flags": 2,
                    "update_flag": 1,
                    "update_flags": 18,
                    "update_flags_based_on_conditions": 1,
                    "update_permissions": 1,
                    "update_status_flags": 1
                },
                "param_1": {
                    "input": 1,
                    "input_data": 1,
                    "param": 3,
                    "param_array": 2,
                    "parameter": 1,
                    "parameters": 18,
                    "params": 5
                },
                "pointer1": {
                    "pointer1": 1
                },
                "pointer2": {
                    "pointer2": 1
                },
                "pointer3": {
                    "pointer3": 1
                },
                "puVar1": {
                    "current_param": 1,
                    "current_value": 1,
                    "flag": 1,
                    "flag_pointer": 1,
                    "flag_value": 1,
                    "flag_var": 1,
                    "param": 1,
                    "pointer": 3,
                    "pointer1": 1,
                    "ptr": 2,
                    "ptr1": 1,
                    "pu_var": 1,
                    "temp": 2,
                    "temp_ptr": 1,
                    "temp_var": 3,
                    "temp_var1": 1,
                    "temp_variable": 1,
                    "value": 5,
                    "value_to_check": 1,
                    "var1": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080033b8"
            ],
            "code": "\nundefined4 update_status_flags_080028de(uint **parameters)\n\n{\n  uint *value;\n  \n  value = parameters[0xb];\n  if ((*(char *)((int)parameters + 0x3d) == '\\\"') &&\n     ((parameters[0x14] != (uint *)0x0 || (*(char *)((int)parameters + 0x3e) != '@')))) {\n    if ((parameters[0x14] == (uint *)0x0) && (parameters[4] == (uint *)0xc000)) {\n      **parameters = **parameters | 0x100;\n      parameters[0x14] = (uint *)((int)parameters[0x14] + 1);\n    }\n    else {\n      if (*(short *)((int)parameters + 0x2a) == 0) {\n        **parameters = **parameters | 0x200;\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 1) {\n        if (value == (uint *)0xffff0000) {\n          **parameters = **parameters & 0xfffffbff;\n          value = *parameters;\n          if ((value[1] & 0x800) == 0) {\n            *value = *value | 0x200;\n          }\n          else {\n            *value = *value & 0xfffffbff;\n          }\n        }\n        else if (((value == (uint *)0x4) || (value == (uint *)0x8)) ||\n                (parameters[0xc] == (uint *)0x12)) {\n          **parameters = **parameters & 0xfffffbff;\n          **parameters = **parameters | 0x200;\n        }\n        else if (parameters[0xb] == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n        }\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 2) {\n        if (parameters[0xb] == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters | 0x800;\n          **parameters = **parameters & 0xfffffbff;\n        }\n        value = *parameters;\n        if ((value[1] & 0x800) != 0) {\n          value[1] = value[1] | 0x1000;\n        }\n      }\n      else {\n        **parameters = **parameters | 0x400;\n        value = *parameters;\n        if ((value[1] & 0x800) != 0) {\n          value[1] = value[1] | 0x1000;\n        }\n      }\n      parameters[0x14] = (uint *)0x0;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "update_status_flags_080028de",
            "entrypoint": "0x080028de",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080028de": "update_status_flags_080028de",
                "param_1": "parameters",
                "puVar1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ab8": {
            "additional_data": {
                "DAT_": {
                    "": 1
                },
                "FUN_08002ab8": {
                    "extract_byte": 1,
                    "extract_byte_and_decrement_count": 1,
                    "extract_byte_from_array": 1,
                    "extract_byte_from_data": 1,
                    "extract_byte_from_pointer": 1,
                    "extract_first_byte_and_decrement": 1,
                    "process_data": 2,
                    "update_and_decrement": 2,
                    "update_and_decrement_counter": 1,
                    "update_array": 1,
                    "update_array_entry": 1,
                    "update_buffer": 2,
                    "update_data": 3,
                    "update_param": 1,
                    "update_parameter": 1,
                    "update_parameter_value": 1,
                    "update_pointer": 2,
                    "update_pointer_and_decrement": 2,
                    "update_pointer_value": 3,
                    "update_value": 2,
                    "update_value_in_structure": 1
                },
                "PTR_": {
                    "": 1
                },
                "param_1": {
                    "array": 6,
                    "array_ptr": 1,
                    "buffer": 2,
                    "data": 3,
                    "data_buffer": 1,
                    "data_ptr": 1,
                    "input": 1,
                    "input_array": 3,
                    "int_array": 1,
                    "param": 1,
                    "parameter": 2,
                    "pointer": 3,
                    "pointer_array": 2,
                    "ptr_array": 1,
                    "structure": 1,
                    "values_array": 1
                },
                "pbVar1": {
                    "array_entry": 1,
                    "byte_array": 1,
                    "byte_pointer": 15,
                    "byte_ptr": 10,
                    "current_byte": 1,
                    "data_ptr": 1,
                    "next_byte": 1
                },
                "uint": {
                    "unsigned_int": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080033b8"
            ],
            "code": "\nundefined4 update_pointer_value_08002ab8(int *array)\n\n{\n  byte *byte_pointer;\n  \n  if (*(short *)((int)array + 0x2a) != 0) {\n    byte_pointer = (byte *)array[9];\n    array[9] = (int)(byte_pointer + 1);\n    *(unsigned_int *)(*array + 0x10) = (unsigned_int)*byte_pointer;\n    *(short *)((int)array + 0x2a) = *(short *)((int)array + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "current_name": "update_pointer_value_08002ab8",
            "entrypoint": "0x08002ab8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002ab8": "update_pointer_value_08002ab8",
                "param_1": "array",
                "pbVar1": "byte_pointer",
                "uint": "unsigned_int"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ad8": {
            "additional_data": {
                "DAT_": {
                    "": 1
                },
                "FUN_08002ad8": {
                    "increment_and_copy_to_next": 1,
                    "increment_and_copy_value": 2,
                    "update_and_decrement": 1,
                    "update_array": 2,
                    "update_array_element": 6,
                    "update_array_values": 1,
                    "update_char_pointer": 1,
                    "update_data": 9,
                    "update_param1": 1,
                    "update_parameter": 1,
                    "update_ptr_value": 1,
                    "update_string": 1,
                    "update_value": 3,
                    "update_value_in_array": 1
                },
                "PTR_": {
                    "": 1
                },
                "char": {
                    "character": 1
                },
                "int": {
                    "integer": 1
                },
                "param_1": {
                    "array": 13,
                    "data": 12,
                    "input_array": 1,
                    "int_array": 1,
                    "parameter": 1,
                    "pointer": 1,
                    "string_array": 1,
                    "values": 1
                },
                "puVar1": {
                    "array_element": 1,
                    "byte_pointer": 2,
                    "char_pointer": 1,
                    "current_pointer": 2,
                    "element_pointer": 2,
                    "element_ptr": 2,
                    "new_ptr": 1,
                    "next_byte": 1,
                    "next_char": 1,
                    "next_element": 1,
                    "next_element_ptr": 1,
                    "old_value": 1,
                    "pointer": 2,
                    "pointer_to_data": 2,
                    "ptr": 7,
                    "ptr1": 1,
                    "ptr_to_element": 1,
                    "target_element": 1,
                    "temp_pointer": 1
                },
                "short": {
                    "short": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080033b8"
            ],
            "code": "\nundefined4 update_data_08002ad8(integer *array)\n\n{\n  undefined *ptr;\n  \n  if (*(short *)((integer)array + 0x2a) != 0) {\n    ptr = (undefined *)array[9];\n    array[9] = (integer)(ptr + 1);\n    *ptr = (character)*(undefined4 *)(*array + 0x10);\n    *(short *)((integer)array + 0x2a) = *(short *)((integer)array + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "current_name": "update_data_08002ad8",
            "entrypoint": "0x08002ad8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002ad8": "update_data_08002ad8",
                "char": "character",
                "int": "integer",
                "param_1": "array",
                "puVar1": "ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002af8": {
            "additional_data": {
                "DAT_08002d34": {
                    "left_paren": 1
                },
                "DAT_08002d38": {
                    "right_paren": 1
                },
                "FUN_08002af8": {
                    "check_and_initialize": 1,
                    "check_and_process_data": 1,
                    "check_and_update_param": 1,
                    "check_inputs_and_initialize": 1,
                    "extract_and_process_data": 1,
                    "handle_input": 1,
                    "initialize_params": 1,
                    "process_data": 3,
                    "process_function": 2,
                    "process_input": 7,
                    "process_parameters": 3,
                    "process_params": 3,
                    "update_data": 1,
                    "update_params": 1,
                    "validate_and_initialize": 1,
                    "validate_input": 1,
                    "validate_input_and_set_parameters": 1,
                    "validate_parameters": 1
                },
                "param_1": {
                    "config": 1,
                    "data": 1,
                    "data_pointer": 3,
                    "data_ptr": 2,
                    "input_buffer": 1,
                    "input_data": 7,
                    "input_params": 2,
                    "input_pointer": 1,
                    "input_struct": 1,
                    "options": 1,
                    "param_a": 1,
                    "param_array": 1,
                    "param_list": 2,
                    "parameter_array": 3,
                    "parameters": 2,
                    "params": 1,
                    "pointer_array": 1
                },
                "param_2": {
                    "buffer": 1,
                    "buffer_pointer": 1,
                    "data": 2,
                    "data_pointer": 3,
                    "data_ptr": 3,
                    "input1": 1,
                    "input_data": 1,
                    "input_ptr": 2,
                    "optional_data": 2,
                    "optional_param": 1,
                    "param1": 1,
                    "param2": 1,
                    "param_1": 1,
                    "param_2": 2,
                    "param_a": 2,
                    "param_b": 1,
                    "param_object": 1,
                    "param_pointer": 1,
                    "param_ptr": 1,
                    "pointer_param": 1,
                    "source_ptr": 1,
                    "value": 1
                },
                "param_3": {
                    "buffer_size": 2,
                    "count": 2,
                    "data_length": 2,
                    "data_size": 2,
                    "input2": 1,
                    "input_size": 1,
                    "input_value": 1,
                    "length": 3,
                    "param2": 1,
                    "param3": 1,
                    "param_2_size": 1,
                    "param_3": 2,
                    "param_b": 2,
                    "param_c": 1,
                    "param_count": 2,
                    "param_length": 1,
                    "param_size": 1,
                    "size": 4,
                    "source_size": 1
                },
                "param_4": {
                    "additional_data": 3,
                    "buffer": 1,
                    "callback_fn": 1,
                    "data": 1,
                    "input3": 1,
                    "output": 1,
                    "output_data": 3,
                    "output_pointer": 1,
                    "output_ptr": 5,
                    "param3": 1,
                    "param4": 1,
                    "param_3": 1,
                    "param_4": 2,
                    "param_c": 2,
                    "param_d": 1,
                    "param_pointer": 1,
                    "param_pointer2": 1,
                    "required_param": 1,
                    "result": 1,
                    "result_array": 1,
                    "target_ptr": 1
                },
                "puVar2": {
                    "first_element": 1,
                    "first_ptr": 1,
                    "flag_pointer": 1,
                    "flag_ptr": 2,
                    "flags": 1,
                    "pointer": 3,
                    "pointer_var": 4,
                    "ptr": 9,
                    "ptr1": 1,
                    "ptr_data": 1,
                    "ptr_to_data": 1,
                    "ptr_to_input": 1,
                    "ptr_var": 1,
                    "temp_ptr": 4
                },
                "uVar1": {
                    "result": 25,
                    "return_value": 4,
                    "status": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08004e74"
            ],
            "code": "\nundefined4 process_input_08002af8(uint **input_data,uint *data_ptr,int size,uint *output_ptr)\n\n{\n  undefined4 result;\n  uint *ptr;\n  \n  if (*(char *)((int)input_data + 0x3d) == '(') {\n    if (data_ptr == (uint *)0x0) {\n      result = 1;\n    }\n    else if (size == 0) {\n      result = 1;\n    }\n    else if (*(char *)(input_data + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(input_data + 0xf) = 1;\n      ptr = *input_data;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **input_data = **input_data & 0xfffff7ff;\n      *(undefined *)((int)input_data + 0x3d) = 0x29;\n      *(undefined *)((int)input_data + 0x3e) = 0x20;\n      result = 0;\n      input_data[0x10] = (uint *)0x0;\n      input_data[9] = data_ptr;\n      *(short *)((int)input_data + 0x2a) = (short)size;\n      input_data[0xb] = output_ptr;\n      *(undefined2 *)(input_data + 10) = *(undefined2 *)((int)input_data + 0x2a);\n      *(undefined *)(input_data + 0xf) = 0;\n      (*input_data)[1] = (*input_data)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "current_name": "process_input_08002af8",
            "entrypoint": "0x08002af8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002af8": "process_input_08002af8",
                "param_1": "input_data",
                "param_2": "data_ptr",
                "param_3": "size",
                "param_4": "output_ptr",
                "puVar2": "ptr",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002b84": {
            "additional_data": {
                "FUN_08002b84": {
                    "check_and_set_flags": 1,
                    "check_and_update_flags": 1,
                    "check_param_validity": 1,
                    "detect_parenthesis": 1,
                    "execute_command": 1,
                    "initialize_data": 2,
                    "initialize_value": 1,
                    "parse_input": 1,
                    "process_data": 1,
                    "process_input": 3,
                    "process_parameter": 1,
                    "process_parameters": 2,
                    "process_params": 5,
                    "update_data": 1,
                    "update_param_info": 1,
                    "validate_input": 8
                },
                "param_1": {
                    "arg1": 1,
                    "command_input": 1,
                    "data_pointer": 1,
                    "data_ptr": 3,
                    "data_set": 1,
                    "input": 1,
                    "input_array": 1,
                    "input_data": 4,
                    "input_params": 1,
                    "input_pointer": 2,
                    "input_ptr": 2,
                    "p_param1": 1,
                    "param_array": 1,
                    "param_info": 1,
                    "param_list": 3,
                    "param_ptr": 3,
                    "parameter_array": 1,
                    "pointer": 1,
                    "pointer_array": 2
                },
                "param_2": {
                    "arg2": 1,
                    "buffer": 1,
                    "data": 1,
                    "data_pointer": 3,
                    "data_ptr": 4,
                    "input1": 1,
                    "input_data": 2,
                    "input_param": 1,
                    "input_pointer": 2,
                    "optional_param": 1,
                    "optional_parameter": 1,
                    "p_param2": 1,
                    "param2": 2,
                    "param_2": 1,
                    "param_ptr": 4,
                    "ptr": 1,
                    "ptr_value1": 1,
                    "source": 1,
                    "target": 1,
                    "value_ptr": 1
                },
                "param_3": {
                    "arg3": 1,
                    "data_length": 2,
                    "input2": 1,
                    "input_length": 1,
                    "input_size": 4,
                    "length": 4,
                    "num_elements": 1,
                    "param3": 3,
                    "param_3_len": 1,
                    "param_count": 1,
                    "param_length": 2,
                    "param_value": 1,
                    "parameter_length": 1,
                    "size": 6,
                    "source_length": 1,
                    "value_size": 1
                },
                "param_4": {
                    "address_ptr": 1,
                    "arg4": 1,
                    "buffer": 2,
                    "data": 1,
                    "data_buffer": 1,
                    "extra_data": 1,
                    "info_ptr": 1,
                    "input3": 1,
                    "output": 1,
                    "output_buffer": 2,
                    "output_data": 3,
                    "output_param": 1,
                    "output_pointer": 4,
                    "output_ptr": 1,
                    "p_param4": 1,
                    "param4": 2,
                    "param_4": 1,
                    "param_result": 1,
                    "ptr_value2": 1,
                    "result_ptr": 3,
                    "target": 1
                },
                "puVar2": {
                    "command_ptr": 1,
                    "data_ptr": 2,
                    "first_value_ptr": 1,
                    "flag_ptr": 1,
                    "param_ptr": 1,
                    "pointer": 2,
                    "pointer_var": 1,
                    "pointer_variable": 1,
                    "ptr": 10,
                    "ptr2": 1,
                    "ptr_1": 1,
                    "ptr_to_param_info": 1,
                    "ptr_to_pointer": 1,
                    "ptr_value": 1,
                    "ptr_var": 1,
                    "temp_pointer": 3,
                    "temp_ptr": 2
                },
                "uVar1": {
                    "result": 21,
                    "result_code": 1,
                    "return_code": 1,
                    "return_value": 7,
                    "status": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004e74"
            ],
            "code": "\nundefined4 validate_input_08002b84(uint **input_data,uint *param_ptr,int size,uint *output_pointer)\n\n{\n  undefined4 result;\n  uint *ptr;\n  \n  if (*(char *)((int)input_data + 0x3d) == '(') {\n    if (param_ptr == (uint *)0x0) {\n      result = 1;\n    }\n    else if (size == 0) {\n      result = 1;\n    }\n    else if (*(char *)(input_data + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(input_data + 0xf) = 1;\n      ptr = *input_data;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **input_data = **input_data & 0xfffff7ff;\n      *(undefined *)((int)input_data + 0x3d) = 0x2a;\n      *(undefined *)((int)input_data + 0x3e) = 0x20;\n      result = 0;\n      input_data[0x10] = (uint *)0x0;\n      input_data[9] = param_ptr;\n      *(short *)((int)input_data + 0x2a) = (short)size;\n      input_data[0xb] = output_pointer;\n      *(undefined2 *)(input_data + 10) = *(undefined2 *)((int)input_data + 0x2a);\n      *(undefined *)(input_data + 0xf) = 0;\n      (*input_data)[1] = (*input_data)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "current_name": "validate_input_08002b84",
            "entrypoint": "0x08002b84",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002b84": "validate_input_08002b84",
                "param_1": "input_data",
                "param_2": "param_ptr",
                "param_3": "size",
                "param_4": "output_pointer",
                "puVar2": "ptr",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002c10": {
            "additional_data": {
                "0x28": {
                    "open_parenthesis": 1
                },
                "0x300": {
                    "bit_9": 1
                },
                "0x400": {
                    "bit_10": 1
                },
                "FUN_08002c10": {
                    "initialize_data": 20,
                    "initialize_data_structure": 1,
                    "parse_input": 1,
                    "process_param": 1,
                    "set_bit_flags": 2,
                    "set_flags_and_values": 1,
                    "set_permissions": 2,
                    "update_flags_and_values": 2,
                    "update_permissions": 1
                },
                "param_1": {
                    "data": 8,
                    "data_pointer": 9,
                    "data_ptr": 2,
                    "data_structure": 1,
                    "flags": 1,
                    "input": 1,
                    "input_data": 3,
                    "param_list": 1,
                    "parameters": 1,
                    "permissions": 3,
                    "pointer": 1
                },
                "puVar1": {
                    "current_pointer": 1,
                    "data_pointer": 2,
                    "first_element": 6,
                    "first_permission": 2,
                    "param_entry": 1,
                    "pointer1": 2,
                    "pointer_to_data_structure": 1,
                    "pointer_variable": 1,
                    "ptr": 4,
                    "ptr1": 1,
                    "ptr_data": 3,
                    "ptr_to_permissions": 1,
                    "temp": 2,
                    "temp_ptr": 2,
                    "value": 1,
                    "value_ptr": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004ec4",
                "FUN_08004ef4"
            ],
            "code": "\nundefined4 initialize_data_structure_08002c10(uint **data_pointer)\n\n{\n  uint *first_element;\n  \n  if (*(char *)((int)data_pointer + 0x3d) != ' ') {\n    return 2;\n  }\n  *(undefined *)((int)data_pointer + 0x3d) = 0x28;\n  first_element = *data_pointer;\n  if ((*first_element & 1) == 0) {\n    *first_element = *first_element | 1;\n  }\n  **data_pointer = **data_pointer | 0x400;\n  (*data_pointer)[1] = (*data_pointer)[1] | 0x300;\n  return 0;\n}\n\n",
            "current_name": "initialize_data_structure_08002c10",
            "entrypoint": "0x08002c10",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002c10": "initialize_data_structure_08002c10",
                "param_1": "data_pointer",
                "puVar1": "first_element"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002c4e": {
            "called": [],
            "calling": [
                "FUN_08002db2",
                "FUN_08002efc"
            ],
            "code": "\nvoid FUNC_08002c4e(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08002c4e",
            "entrypoint": "0x08002c4e",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08002c4e": "FUNC_08002c4e"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08002c50": {
            "called": [],
            "calling": [
                "FUN_08002f9c",
                "FUN_0800306c"
            ],
            "code": "\nvoid FUNC_08002c50(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08002c50",
            "entrypoint": "0x08002c50",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08002c50": "FUNC_08002c50"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08002c52": {
            "called": [],
            "calling": [
                "FUN_08002d1c",
                "FUN_08002c54"
            ],
            "code": "\nvoid FUNC_08002c52(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08002c52",
            "entrypoint": "0x08002c52",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08002c52": "FUNC_08002c52"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08002c54": {
            "additional_data": {
                "FUNC_08002c52": {
                    "execute_additional_function": 3,
                    "execute_extra_processing": 1,
                    "execute_post_process": 1,
                    "execute_sub_function": 1,
                    "notify_completion": 1,
                    "perform_action": 3,
                    "perform_additional_action": 1,
                    "perform_additional_processing": 1,
                    "perform_additional_task": 1
                },
                "FUN_08002c54": {
                    "decode_and_process": 1,
                    "decode_and_process_data": 1,
                    "decode_and_update": 1,
                    "decode_data": 1,
                    "extract_byte_and_update": 1,
                    "extract_data": 1,
                    "parse_data": 1,
                    "process_binary_data": 1,
                    "process_data": 17,
                    "process_function": 2,
                    "process_input": 4
                },
                "cVar1": {
                    "char1": 1,
                    "char_code": 1,
                    "char_value": 8,
                    "char_var": 2,
                    "character": 12,
                    "character_variable": 1,
                    "closing_parenthesis": 1,
                    "first_char": 1,
                    "last_char": 1,
                    "last_character": 2
                },
                "param_1": {
                    "arg_array": 1,
                    "binary_data": 1,
                    "data": 16,
                    "data_array": 2,
                    "data_buffer": 2,
                    "data_ptr": 1,
                    "input": 2,
                    "input_array": 2,
                    "input_data": 1,
                    "input_ptr": 1,
                    "parameters": 1,
                    "params": 1
                },
                "pbVar2": {
                    "byte_data": 1,
                    "byte_pointer": 14,
                    "byte_ptr": 14,
                    "bytes": 1
                }
            },
            "called": [
                "FUN_08002c52"
            ],
            "calling": [
                "FUN_080033b8"
            ],
            "code": "\nundefined4 decode_and_process_data_08002c54(int *data)\n\n{\n  char character;\n  byte *byte_ptr;\n  \n  character = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    byte_ptr = (byte *)data[9];\n    data[9] = (int)(byte_ptr + 1);\n    *(uint *)(*data + 0x10) = (uint)*byte_ptr;\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (character == ')')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      data[0xc] = 0x21;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      FUNC_08002c52();\n    }\n    return 0;\n  }\n  return 0;\n}\n\n",
            "current_name": "decode_and_process_data_08002c54",
            "entrypoint": "0x08002c54",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002c54": "decode_and_process_data_08002c54",
                "cVar1": "character",
                "param_1": "data",
                "pbVar2": "byte_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ca4": {
            "called": [],
            "calling": [
                "FUN_080032b4",
                "FUN_08002ca6"
            ],
            "code": "\nvoid FUNC_08002ca4(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08002ca4",
            "entrypoint": "0x08002ca4",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08002ca4": "FUNC_08002ca4"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08002ca6": {
            "additional_data": {
                "FUNC_08002ca4": {
                    "call_another_function": 1,
                    "cleanup": 2,
                    "execute_function": 2,
                    "execute_process": 1,
                    "execute_subfunction": 1,
                    "generate_output": 1,
                    "handle_complete": 1,
                    "perform_action": 6,
                    "perform_additional_function": 1,
                    "post_process": 1
                },
                "FUN_08002ca6": {
                    "decrement_and_check": 1,
                    "process_data": 16,
                    "process_function": 1,
                    "process_input": 5,
                    "process_input_buffer": 1,
                    "process_param": 3,
                    "process_parameter": 1,
                    "update_and_check_value": 1,
                    "update_data": 1,
                    "update_param": 1
                },
                "cVar1": {
                    "char1": 2,
                    "char_1": 1,
                    "char_val": 1,
                    "char_value": 10,
                    "char_var": 3,
                    "character": 10,
                    "current_char": 1,
                    "flag": 2
                },
                "param_1": {
                    "array": 1,
                    "data": 14,
                    "data_array": 1,
                    "data_ptr": 2,
                    "input": 2,
                    "input_array": 4,
                    "input_buffer": 2,
                    "input_data": 1,
                    "param": 1,
                    "param_array": 2,
                    "parameter": 1
                },
                "puVar2": {
                    "byte_ptr": 1,
                    "current_char": 1,
                    "data_ptr": 1,
                    "new_ptr": 1,
                    "next_element": 1,
                    "next_pointer": 1,
                    "next_ptr": 1,
                    "pointer": 10,
                    "pointer_var": 1,
                    "ptr": 6,
                    "ptr1": 1,
                    "ptr_to_array_element": 1,
                    "ptr_to_char": 1,
                    "ptr_to_data": 1,
                    "ptr_to_undefined": 1,
                    "undefined_ptr": 1
                }
            },
            "called": [
                "FUN_08002ca4"
            ],
            "calling": [
                "FUN_080033b8"
            ],
            "code": "\nundefined4 process_data_08002ca6(int *data)\n\n{\n  char char_value;\n  undefined *pointer;\n  \n  char_value = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    pointer = (undefined *)data[9];\n    data[9] = (int)(pointer + 1);\n    *pointer = (char)*(undefined4 *)(*data + 0x10);\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (char_value == '*')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      data[0xc] = 0x22;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      FUNC_08002ca4();\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_data_08002ca6",
            "entrypoint": "0x08002ca6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002ca6": "process_data_08002ca6",
                "cVar1": "char_value",
                "param_1": "data",
                "puVar2": "pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002cf2": {
            "additional_data": {
                "FUN_08002cf2": {
                    "execute_function": 1,
                    "extract_and_call_function": 1,
                    "extract_and_process_data": 1,
                    "extract_data": 1,
                    "extract_data_and_call_function": 3,
                    "process_data": 17,
                    "reverse_endian_convert": 1,
                    "update_data": 1
                },
                "FUN_08004e74": {
                    "execute_action": 1,
                    "execute_operation": 1,
                    "handle_data": 2,
                    "perform_operation": 2,
                    "process_data": 1,
                    "process_params": 1,
                    "process_sub_function": 1
                },
                "param_1": {
                    "array": 1,
                    "array_ptr": 1,
                    "binary_data": 1,
                    "data": 10,
                    "data_pointer": 7,
                    "data_ptr": 5,
                    "input_array": 3,
                    "input_array_ptr": 1,
                    "input_data": 2
                },
                "param_2": {
                    "arg1": 4,
                    "argument_2": 1,
                    "flag1": 8,
                    "flag_1": 1,
                    "param2": 10,
                    "param_2": 3,
                    "param_a": 1,
                    "value1": 2,
                    "var1": 1
                },
                "param_3": {
                    "arg2": 4,
                    "argument_3": 1,
                    "flag2": 8,
                    "flag_2": 1,
                    "param3": 10,
                    "param_3": 3,
                    "param_b": 1,
                    "value2": 2,
                    "var2": 1
                },
                "param_4": {
                    "arg3": 4,
                    "argument_4": 1,
                    "flag3": 1,
                    "flag_3": 1,
                    "param": 2,
                    "param4": 15,
                    "param_4": 3,
                    "param_c": 1,
                    "value3": 2,
                    "var3": 1
                },
                "uVar1": {
                    "chosen_value": 3,
                    "result": 5,
                    "selected_index": 1,
                    "selected_val": 1,
                    "selected_value": 13,
                    "value": 2,
                    "value1": 3,
                    "value_to_pass": 2
                },
                "uVar2": {
                    "array_value": 1,
                    "data_flag": 2,
                    "data_mask": 1,
                    "data_value": 5,
                    "flag": 5,
                    "flag_val": 1,
                    "flag_value": 3,
                    "flags": 1,
                    "mask_value": 1,
                    "value": 6,
                    "value2": 4
                }
            },
            "called": [
                "FUN_08004e74"
            ],
            "calling": [
                "FUN_080033b8"
            ],
            "code": "\nundefined4 extract_and_process_data_08002cf2(int *data,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined2 selected_value;\n  uint value;\n  \n  value = *(uint *)(*data + 0x18);\n  if ((value & 0x80) == 0) {\n    selected_value = *(undefined2 *)(data + 3);\n  }\n  else {\n    selected_value = *(undefined2 *)(data + 6);\n  }\n  FUN_08004e74(data,(*(uint *)(*data + 0x18) & 4) == 0,selected_value,value,param4);\n  return 0;\n}\n\n",
            "current_name": "extract_and_process_data_08002cf2",
            "entrypoint": "0x08002cf2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002cf2": "extract_and_process_data_08002cf2",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "selected_value",
                "uVar2": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002d1c": {
            "additional_data": {
                "0x0": {
                    "zero": 1
                },
                "0x20": {
                    "space": 1
                },
                "0x21": {
                    "exclamation": 1
                },
                "0x4": {
                    "four": 1
                },
                "0x8": {
                    "eight": 1
                },
                "0xffff0000": {
                    "hex_ffff0000": 1
                },
                "0xfffffbff": {
                    "hex_fffffbff": 1
                },
                "FUNC_08002c52": {
                    "do_another_thing": 1,
                    "do_something_else": 1,
                    "do_task2": 2,
                    "execute_command": 1,
                    "execute_function": 2,
                    "execute_function_b": 1,
                    "handle_condition2": 1,
                    "handle_exception": 1,
                    "handle_exclamation": 1,
                    "handle_invalid_input": 1,
                    "perform_action": 6,
                    "perform_action2": 2,
                    "perform_action_b": 1,
                    "process_case2": 3,
                    "process_exclamation": 1,
                    "reset_param_array": 1,
                    "set_values2": 1,
                    "set_values_b": 1,
                    "update_data": 1
                },
                "FUN_08002d1c": {
                    "check_and_process_param": 1,
                    "initialize_param": 1,
                    "process_input_data": 1,
                    "process_param": 23,
                    "process_parameter": 3,
                    "update_parameter": 1
                },
                "FUN_08004ec4": {
                    "do_something": 2,
                    "do_task1": 2,
                    "execute_function_a": 1,
                    "handle_condition1": 1,
                    "handle_parenthesis": 1,
                    "handle_valid_input": 1,
                    "initialize_param": 1,
                    "initialize_param_array": 1,
                    "initialize_stuff": 1,
                    "perform_action1": 2,
                    "perform_action_a": 1,
                    "process_case1": 3,
                    "process_paren": 1,
                    "reset_data": 1,
                    "reset_function": 1,
                    "reset_param": 1,
                    "reset_params": 1,
                    "reset_state": 1,
                    "reset_values": 1,
                    "set_values1": 1,
                    "set_values_a": 1,
                    "update_flag": 1,
                    "update_status": 1,
                    "update_value": 1
                },
                "param_1": {
                    "input_data": 2,
                    "param": 10,
                    "param_array": 6,
                    "param_list": 4,
                    "parameter": 6,
                    "parameters": 3
                }
            },
            "called": [
                "FUN_08004ec4",
                "FUN_08002c52"
            ],
            "calling": [
                "FUN_08003520"
            ],
            "code": "\nundefined4 check_and_process_param_08002d1c(uint **param)\n\n{\n  if (((param[0xb] == (uint *)0x4) || (param[0xb] == (uint *)0x8)) &&\n     (*(char *)((int)param + 0x3d) == '(')) {\n    param[0xb] = (uint *)0xffff0000;\n    (*param)[1] = (*param)[1] & 0xfffff8ff;\n    (*param)[5] = 0xfffffbff;\n    **param = **param & 0xfffffbff;\n    param[0xc] = (uint *)0x0;\n    *(undefined *)((int)param + 0x3d) = 0x20;\n    *(undefined *)((int)param + 0x3e) = 0;\n    FUN_08004ec4();\n  }\n  else if (*(char *)((int)param + 0x3d) == '!') {\n    param[0xb] = (uint *)0xffff0000;\n    param[0xc] = (uint *)0x21;\n    *(undefined *)((int)param + 0x3d) = 0x20;\n    *(undefined *)((int)param + 0x3e) = 0;\n    (*param)[1] = (*param)[1] & 0xfffff8ff;\n    (*param)[5] = 0xfffffbff;\n    **param = **param & 0xfffffbff;\n    FUNC_08002c52();\n  }\n  else {\n    (*param)[5] = 0xfffffbff;\n  }\n  return 0;\n}\n\n",
            "current_name": "check_and_process_param_08002d1c",
            "entrypoint": "0x08002d1c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002d1c": "check_and_process_param_08002d1c",
                "param_1": "param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002db0": {
            "called": [],
            "calling": [
                "FUN_08002db2",
                "FUN_08002efc"
            ],
            "code": "\nvoid FUNC_08002db0(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08002db0",
            "entrypoint": "0x08002db0",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08002db0": "FUNC_08002db0"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08002db2": {
            "additional_data": {
                "FUNC_08002c4e": {
                    "function1": 1,
                    "function_c4e": 1,
                    "handle_case1": 7,
                    "handle_case_one": 1,
                    "handle_char_case": 1,
                    "handle_character": 1,
                    "perform_action1": 1,
                    "perform_action_1": 1,
                    "perform_action_a": 2,
                    "perform_operation1": 1,
                    "print_special_chars": 1,
                    "some_operation": 1
                },
                "FUNC_08002db0": {
                    "another_operation": 1,
                    "execute_special": 1,
                    "function2": 1,
                    "function_db0": 1,
                    "handle_at_case": 1,
                    "handle_case2": 7,
                    "handle_case_two": 1,
                    "perform_action2": 1,
                    "perform_action_2": 1,
                    "perform_action_b": 2,
                    "perform_operation2": 1,
                    "process_special_case": 1
                },
                "FUN_08002db2": {
                    "check_and_process_input": 1,
                    "handle_function": 1,
                    "improve_and_execute": 1,
                    "parse_input": 1,
                    "process_binary_data": 1,
                    "process_data": 7,
                    "process_function": 1,
                    "process_input": 3,
                    "process_param": 5,
                    "process_parameter": 1,
                    "process_params": 1,
                    "update_flags_and_process_data": 1,
                    "update_params": 1,
                    "update_settings": 1
                },
                "cVar1": {
                    "char1": 7,
                    "char_val": 1,
                    "char_value": 8,
                    "char_var": 5,
                    "character": 7,
                    "character_1": 1,
                    "first_char": 2
                },
                "param_1": {
                    "binary_data": 1,
                    "binary_params": 1,
                    "data": 7,
                    "function_arguments": 1,
                    "function_param": 1,
                    "input": 4,
                    "param": 1,
                    "param_array": 2,
                    "parameter": 3,
                    "parameters": 5,
                    "params": 3,
                    "ptr_array": 1,
                    "settings": 1
                },
                "puVar2": {
                    "pointer": 6,
                    "pointer2": 2,
                    "pointer_2": 1,
                    "pointer_value": 1,
                    "pointer_var": 5,
                    "ptr": 5,
                    "ptr_val": 1,
                    "ptr_value": 5,
                    "ptr_var": 3,
                    "ptr_var2": 1,
                    "temp_ptr": 1
                }
            },
            "called": [
                "FUN_08002c4e",
                "FUN_08002db0"
            ],
            "calling": [
                "FUN_080033b8"
            ],
            "code": "\nundefined4 update_flags_and_process_data_08002db2(uint **data)\n\n{\n  char char_value;\n  uint *pointer;\n  \n  char_value = *(char *)((int)data + 0x3d);\n  pointer = data[0xb];\n  if ((*(short *)(data + 10) == 0) && (char_value == '!')) {\n    if ((pointer == (uint *)0x4) || ((pointer == (uint *)0x8 || (pointer == (uint *)0xffff0000)))) {\n      (*data)[1] = (*data)[1] & 0xfffff8ff;\n      **data = **data | 0x200;\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      if (*(char *)((int)data + 0x3e) == '@') {\n        *(undefined *)((int)data + 0x3e) = 0;\n        FUNC_08002db0();\n      }\n      else {\n        *(undefined *)((int)data + 0x3e) = 0;\n        FUNC_08002c4e();\n      }\n    }\n    else {\n      (*data)[1] = (*data)[1] & 0xfffff8ff;\n      data[0xc] = (uint *)0x11;\n      *(undefined *)((int)data + 0x3e) = 0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      FUNC_08002c4e();\n    }\n  }\n  else if ((char_value == '!') || ((*(char *)((int)data + 0x3e) == '@' && (char_value == '\\\"')))) {\n    if (*(short *)((int)data + 0x2a) == 0) {\n      (*data)[1] = (*data)[1] & 0xfffffbff;\n    }\n    else if (*(char *)((int)data + 0x3e) == '@') {\n      if (data[0x14] == (uint *)0x0) {\n        if (data[0x13] == (uint *)0x1) {\n          (*data)[4] = (uint)data[0x12] & 0xff;\n          data[0x14] = (uint *)((int)data[0x14] + 2);\n        }\n        else {\n          (*data)[4] = (uint)((int)data[0x12] << 0x10) >> 0x18;\n          data[0x14] = (uint *)((int)data[0x14] + 1);\n        }\n      }\n      else if (data[0x14] == (uint *)0x1) {\n        (*data)[4] = (uint)data[0x12] & 0xff;\n        data[0x14] = (uint *)((int)data[0x14] + 1);\n      }\n      else if (data[0x14] == (uint *)0x2) {\n        if (*(char *)((int)data + 0x3d) == '\\\"') {\n          **data = **data | 0x100;\n        }\n        else if (*(char *)((int)data + 0x3d) == '!') {\n          pointer = data[9];\n          data[9] = (uint *)((int)pointer + 1);\n          (*data)[4] = (uint)*(byte *)pointer;\n          *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n        }\n      }\n    }\n    else {\n      pointer = data[9];\n      data[9] = (uint *)((int)pointer + 1);\n      (*data)[4] = (uint)*(byte *)pointer;\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "update_flags_and_process_data_08002db2",
            "entrypoint": "0x08002db2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002db2": "update_flags_and_process_data_08002db2",
                "cVar1": "char_value",
                "param_1": "data",
                "puVar2": "pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002efc": {
            "additional_data": {
                "@": {
                    "constant_at": 1
                },
                "FUNC_08002c4e": {
                    "execute_action_a": 1,
                    "execute_function1": 1,
                    "execute_function2": 1,
                    "execute_function_a": 1,
                    "func_b": 1,
                    "function_c4_e": 1,
                    "handle_case1": 1,
                    "handle_case_a": 1,
                    "handle_char_at": 1,
                    "handle_error": 2,
                    "handle_exclamation": 1,
                    "handle_flag_a": 1,
                    "handle_incorrect_command": 1,
                    "handle_input_data": 1,
                    "handle_invalid_data": 2,
                    "handle_special_case": 2,
                    "perform_action1": 2,
                    "perform_action_a": 2,
                    "process_case1": 1,
                    "process_condition_a": 1,
                    "reset_param": 1
                },
                "FUNC_08002db0": {
                    "execute_action_b": 1,
                    "execute_function1": 1,
                    "execute_function2": 1,
                    "execute_function_b": 1,
                    "func_a": 1,
                    "function_db0": 1,
                    "handle_at_symbol": 1,
                    "handle_case2": 1,
                    "handle_case_b": 1,
                    "handle_correct_command": 1,
                    "handle_default": 1,
                    "handle_default_case": 1,
                    "handle_descriptive_data": 1,
                    "handle_flag_b": 1,
                    "handle_normal_case": 1,
                    "handle_success": 2,
                    "handle_valid_data": 2,
                    "perform_action2": 2,
                    "perform_action_b": 2,
                    "process_case2": 1,
                    "process_condition_b": 1,
                    "update_param_alt": 1
                },
                "FUN_08002efc": {
                    "apply_transformation": 1,
                    "execute_command": 1,
                    "process_command": 1,
                    "process_data": 7,
                    "process_function": 1,
                    "process_input": 3,
                    "process_param": 5,
                    "process_parameter": 3,
                    "process_parameters": 3,
                    "update_function": 1,
                    "update_param": 1,
                    "update_parameter": 2,
                    "update_status_codes": 1
                },
                "param_1": {
                    "command_array": 1,
                    "command_params": 1,
                    "data": 6,
                    "input": 2,
                    "input_data": 2,
                    "input_params": 1,
                    "param": 3,
                    "param_array": 2,
                    "param_list": 1,
                    "parameter": 1,
                    "parameter_array": 1,
                    "parameter_list": 1,
                    "parameters": 9
                },
                "puVar1": {
                    "command_ptr": 1,
                    "current_param": 2,
                    "current_ptr": 1,
                    "flag": 1,
                    "p_var": 1,
                    "parameter_b": 1,
                    "parameter_value": 1,
                    "pointer": 2,
                    "pointer_var": 1,
                    "pointer_var1": 1,
                    "ptr": 1,
                    "ptr_to_uint": 1,
                    "ptr_value": 3,
                    "pu_var": 2,
                    "temp_ptr": 1,
                    "temp_var": 1,
                    "temp_var1": 1,
                    "value": 7,
                    "var1": 1
                }
            },
            "called": [
                "FUN_08002c4e",
                "FUN_08002db0"
            ],
            "calling": [
                "FUN_080033b8"
            ],
            "code": "\nundefined4 process_data_08002efc(uint **parameters)\n\n{\n  uint *value;\n  \n  value = parameters[0xb];\n  if (*(char *)((int)parameters + 0x3d) == '!') {\n    if (*(short *)((int)parameters + 0x2a) == 0) {\n      if (((value == (uint *)0x4) || (value == (uint *)0x8)) || (value == (uint *)0xffff0000)) {\n        (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n        **parameters = **parameters | 0x200;\n        parameters[0xc] = (uint *)0x0;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        if (*(char *)((int)parameters + 0x3e) == 'constant_at') {\n          *(undefined *)((int)parameters + 0x3e) = 0;\n          FUNC_08002db0();\n        }\n        else {\n          *(undefined *)((int)parameters + 0x3e) = 0;\n          FUNC_08002c4e();\n        }\n      }\n      else {\n        (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n        parameters[0xc] = (uint *)0x11;\n        *(undefined *)((int)parameters + 0x3e) = 0;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        FUNC_08002c4e();\n      }\n    }\n    else {\n      value = parameters[9];\n      parameters[9] = (uint *)((int)value + 1);\n      (*parameters)[4] = (uint)*(byte *)value;\n      *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_data_08002efc",
            "entrypoint": "0x08002efc",
            "imported": false,
            "improved": true,
            "renaming": {
                "@": "constant_at",
                "FUN_08002efc": "process_data_08002efc",
                "param_1": "parameters",
                "puVar1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002f9a": {
            "called": [],
            "calling": [
                "FUN_08002f9c",
                "FUN_0800306c"
            ],
            "code": "\nvoid FUNC_08002f9a(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08002f9a",
            "entrypoint": "0x08002f9a",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08002f9a": "FUNC_08002f9a"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08002f9c": {
            "additional_data": {
                "FUNC_08002c50": {
                    "handle_case1": 4,
                    "handle_case_a": 1,
                    "handle_case_at_symbol": 1,
                    "handle_char_at": 1,
                    "handle_character": 1,
                    "handle_input_a": 1,
                    "handle_invalid_char": 1,
                    "handle_unwanted_char": 1,
                    "normal_action": 1,
                    "perform_action1": 1,
                    "perform_action_a": 1,
                    "process_at_symbol": 1,
                    "process_condition1": 1,
                    "process_flag_a": 1
                },
                "FUNC_08002f9a": {
                    "handle_case2": 4,
                    "handle_case_b": 1,
                    "handle_input_b": 1,
                    "handle_other_cases": 2,
                    "handle_unwanted_char_email": 1,
                    "handle_valid_char": 1,
                    "perform_action2": 1,
                    "perform_action_b": 1,
                    "process_condition2": 1,
                    "process_data": 1,
                    "process_flag_b": 1,
                    "process_other_symbol": 1,
                    "reverse_action": 1
                },
                "FUN_08002f9c": {
                    "decode_string": 1,
                    "process_binary_data": 1,
                    "process_data": 7,
                    "process_input": 4,
                    "process_param": 4,
                    "process_parameter": 1,
                    "set_flags_based_on_conditions": 1,
                    "update_flag": 1,
                    "update_flags": 3,
                    "update_flags_and_call_subfunctions": 1,
                    "update_flags_and_process_data": 1,
                    "update_flags_and_process_input": 1,
                    "update_flags_and_values": 2,
                    "update_parameter": 2,
                    "update_parameter_flags": 1
                },
                "param_1": {
                    "arguments": 1,
                    "binary_data": 1,
                    "data": 6,
                    "data_pointer": 1,
                    "input": 1,
                    "input_array": 1,
                    "input_data": 2,
                    "input_params": 3,
                    "param": 2,
                    "param_ptr": 1,
                    "parameter": 2,
                    "parameters": 6,
                    "params": 2,
                    "pointer_array": 1,
                    "string_data": 1
                },
                "puVar1": {
                    "next_char": 1,
                    "pointer1": 1,
                    "pointer_var1": 1,
                    "ptr": 4,
                    "temp_pointer": 5,
                    "temp_ptr": 11,
                    "temp_ptr1": 2,
                    "temp_var": 2,
                    "temp_var1": 1,
                    "tmp_ptr": 1
                }
            },
            "called": [
                "FUN_08002c50",
                "FUN_08002f9a"
            ],
            "calling": [
                "FUN_080033b8"
            ],
            "code": "\nundefined4 update_flags_and_process_data_08002f9c(uint **parameters)\n\n{\n  uint *temp_ptr;\n  \n  if (*(char *)((int)parameters + 0x3d) == '\\\"') {\n    if (*(ushort *)((int)parameters + 0x2a) < 4) {\n      if (*(ushort *)((int)parameters + 0x2a) - 2 < 2) {\n        if (parameters[0xb] == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n          **parameters = **parameters | 0x800;\n        }\n        (*parameters)[1] = (*parameters)[1] & 0xfffffbff;\n      }\n      else {\n        if (parameters[0xb] == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n        }\n        (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n        temp_ptr = parameters[9];\n        parameters[9] = (uint *)((int)temp_ptr + 1);\n        *(char *)temp_ptr = (char)(*parameters)[4];\n        *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        parameters[0xc] = (uint *)0x0;\n        if (*(char *)((int)parameters + 0x3e) == '@') {\n          *(undefined *)((int)parameters + 0x3e) = 0;\n          FUNC_08002f9a();\n        }\n        else {\n          *(undefined *)((int)parameters + 0x3e) = 0;\n          FUNC_08002c50();\n        }\n      }\n    }\n    else {\n      temp_ptr = parameters[9];\n      parameters[9] = (uint *)((int)temp_ptr + 1);\n      *(char *)temp_ptr = (char)(*parameters)[4];\n      *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "update_flags_and_process_data_08002f9c",
            "entrypoint": "0x08002f9c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002f9c": "update_flags_and_process_data_08002f9c",
                "param_1": "parameters",
                "puVar1": "temp_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800306c": {
            "additional_data": {
                "$param_1": {
                    "input_param": 1
                },
                "$puVar1": {
                    "current_value": 1
                },
                "FUC_08002c50": {
                    "handle_case_at": 1
                },
                "FUNC_08002c50": {
                    "execute_case1": 1,
                    "handle_at_symbol": 1,
                    "handle_case1": 3,
                    "handle_case2": 1,
                    "handle_case_1": 1,
                    "handle_case_a": 2,
                    "handle_char_a": 1,
                    "handle_condition": 1,
                    "handle_condition1": 1,
                    "handle_error": 1,
                    "handle_invalid": 1,
                    "handle_non_special_character": 1,
                    "handle_regular_case": 1,
                    "handle_special_case_1": 1,
                    "handle_special_character": 1,
                    "perform_action1": 1,
                    "process_case2_fu": 1,
                    "process_condition1": 1,
                    "process_data": 1,
                    "process_error": 1
                },
                "FUNC_08002f9a": {
                    "execute_case2": 1,
                    "execute_function": 1,
                    "handle_case2": 3,
                    "handle_case3": 1,
                    "handle_case_2": 1,
                    "handle_case_b": 2,
                    "handle_case_not_at": 1,
                    "handle_char_not_a": 1,
                    "handle_condition2": 1,
                    "handle_data": 1,
                    "handle_special_case": 1,
                    "handle_special_case_2": 1,
                    "handle_special_character": 1,
                    "handle_valid": 1,
                    "perform_action2": 1,
                    "process_case2_fv": 1,
                    "process_condition2": 1,
                    "process_data": 1,
                    "process_flag": 1,
                    "process_success": 1,
                    "reset_param": 1
                },
                "FUN_0800306c": {
                    "parse_and_process_data": 1,
                    "process_data": 14,
                    "process_input": 3,
                    "process_param": 3,
                    "process_parameter": 5,
                    "process_parameters": 1,
                    "update_and_process_data": 1,
                    "update_data": 1,
                    "update_parameter": 1,
                    "update_parameters": 1
                },
                "param_1": {
                    "data": 11,
                    "data_ptr": 1,
                    "input": 3,
                    "input_data": 4,
                    "input_param": 1,
                    "input_params": 1,
                    "parameter": 2,
                    "parameters": 6,
                    "params": 1
                },
                "puVar1": {
                    "current_value": 5,
                    "element": 1,
                    "parameter_value": 1,
                    "pointer": 2,
                    "ptr": 2,
                    "ptr_val": 1,
                    "ptr_value": 2,
                    "temp_ptr": 1,
                    "val_ptr": 1,
                    "value": 10,
                    "value_ptr": 4,
                    "var1": 1
                }
            },
            "called": [
                "FUN_08002c50",
                "FUN_08002f9a"
            ],
            "calling": [
                "FUN_080033b8"
            ],
            "code": "\nundefined4 update_and_process_data_0800306c(uint **data)\n\n{\n  uint *value;\n  \n  value = data[0xb];\n  if (*(short *)((int)data + 0x2a) == 3) {\n    if (((value == (uint *)0x4) || (value == (uint *)0x8)) || (value == (uint *)0xffff0000)) {\n      **data = **data & 0xfffffbff;\n    }\n    value = data[9];\n    data[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  else if (*(short *)((int)data + 0x2a) == 2) {\n    if (((value == (uint *)0x4) || (value == (uint *)0x8)) || (value == (uint *)0xffff0000)) {\n      (*data)[1] = (*data)[1] & 0xfffffcff;\n      **data = **data | 0x200;\n    }\n    else {\n      if (value == (uint *)0x2) {\n        **data = **data | 0x400;\n      }\n      else {\n        **data = **data & 0xfffffbff;\n      }\n      (*data)[1] = (*data)[1] & 0xfffffcff;\n    }\n    value = data[9];\n    data[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    value = data[9];\n    data[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    *(undefined *)((int)data + 0x3d) = 0x20;\n    data[0xc] = (uint *)0x0;\n    if (*(char *)((int)data + 0x3e) == '@') {\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUNC_08002f9a();\n    }\n    else {\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUNC_08002c50();\n    }\n  }\n  else {\n    value = data[9];\n    data[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "current_name": "update_and_process_data_0800306c",
            "entrypoint": "0x0800306c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800306c": "update_and_process_data_0800306c",
                "param_1": "data",
                "puVar1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800316a": {
            "called": [],
            "calling": [
                "FUN_0800316c"
            ],
            "code": "\nvoid FUNC_0800316a(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800316a",
            "entrypoint": "0x0800316a",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800316a": "FUNC_0800316a"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800316c": {
            "additional_data": {
                "FUNC_0800316a": {
                    "process_func_a": 1,
                    "process_logic": 1,
                    "process_param": 1
                },
                "FUN_0800258c": {
                    "check_condition": 3,
                    "process_func_d": 1,
                    "validate_param": 1
                },
                "FUN_0800316a": {
                    "process_flag": 1
                },
                "FUN_0800316c": {
                    "improve_code": 1,
                    "parse_input": 1,
                    "process_data": 5,
                    "process_function": 1,
                    "process_param": 3,
                    "process_parameter": 1,
                    "update_param": 1
                },
                "FUN_08004ec4": {
                    "handle_condition": 1,
                    "handle_param": 1,
                    "handle_parenthesis": 1,
                    "perform_action1": 1,
                    "process_func_b": 1
                },
                "FUN_08004ef4": {
                    "execute_operation": 1,
                    "handle_default": 1,
                    "perform_action2": 1,
                    "process_data": 1,
                    "process_func_c": 1
                },
                "iVar1": {
                    "index": 9,
                    "index_var": 1,
                    "result": 12,
                    "return_value": 4,
                    "temp_var": 1,
                    "temp_variable1": 1,
                    "variable1": 1
                },
                "param_1": {
                    "data": 3,
                    "data_array": 1,
                    "function_parameters": 1,
                    "function_params": 1,
                    "input_array": 3,
                    "input_data": 2,
                    "input_params": 2,
                    "param": 4,
                    "param_array": 2,
                    "parameter": 2,
                    "parameter_1": 1,
                    "parameter_array": 1,
                    "parameters": 5,
                    "params": 1
                },
                "puVar2": {
                    "char_array": 1,
                    "char_pointer": 1,
                    "char_var": 1,
                    "pointer": 1,
                    "pointer1": 3,
                    "pointer2": 1,
                    "pointer_1": 3,
                    "pointer_2": 1,
                    "pointer_var": 2,
                    "pointer_var1": 1,
                    "pointer_var2": 1,
                    "pointer_var_1": 1,
                    "pointer_variable1": 1,
                    "ptr": 1,
                    "ptr1": 3,
                    "ptr2": 1,
                    "ptr_2": 1,
                    "ptr_var2": 1,
                    "ptr_variable": 1,
                    "temp_ptr": 1,
                    "temp_var1": 2
                },
                "puVar3": {
                    "data_array": 1,
                    "data_pointer2": 1,
                    "param_var": 1,
                    "pointer2": 4,
                    "pointer3": 1,
                    "pointer_2": 3,
                    "pointer_3": 1,
                    "pointer_var2": 3,
                    "pointer_var3": 1,
                    "pointer_var_2": 1,
                    "pointer_variable2": 1,
                    "ptr2": 3,
                    "ptr3": 1,
                    "ptr_3": 1,
                    "ptr_var3": 1,
                    "ptr_variable2": 1,
                    "temp": 1,
                    "temp_ptr_2": 1,
                    "temp_var2": 2
                }
            },
            "called": [
                "FUN_0800316a",
                "FUN_08004ec4",
                "FUN_08004ef4",
                "FUN_0800258c"
            ],
            "calling": [
                "FUN_080032b4",
                "FUN_08003520"
            ],
            "code": "\nvoid process_data_0800316c(uint **parameters)\n\n{\n  int result;\n  uint *pointer1;\n  uint *pointer2;\n  \n  if (*(byte *)((int)parameters + 0x3d) - 0x29 < 2) {\n    parameters[0xc] = (uint *)0x0;\n    *(undefined *)((int)parameters + 0x3d) = 0x28;\n  }\n  else {\n    if ((*(char *)((int)parameters + 0x3d) != '`') && (((*parameters)[1] & 0x800) == 0)) {\n      *(undefined *)((int)parameters + 0x3d) = 0x20;\n    }\n    parameters[0xc] = (uint *)0x0;\n    *(undefined *)((int)parameters + 0x3e) = 0;\n  }\n  **parameters = **parameters & 0xfffff7ff;\n  pointer2 = *parameters;\n  if ((pointer2[1] & 0x800) == 0) {\n    if (*(char *)((int)parameters + 0x3d) == '`') {\n      *(undefined *)((int)parameters + 0x3d) = 0x20;\n      parameters[0x10] = (uint *)0x0;\n      if ((pointer2[5] & 0x40) != 0) {\n        pointer1 = parameters[9];\n        parameters[9] = (uint *)((int)pointer1 + 1);\n        *(char *)pointer1 = (char)pointer2[4];\n      }\n      **parameters = **parameters & 0xfffffffe;\n      FUNC_0800316a(parameters);\n    }\n    else {\n      if ((pointer2[5] & 0x40) != 0) {\n        pointer1 = parameters[9];\n        parameters[9] = (uint *)((int)pointer1 + 1);\n        *(char *)pointer1 = (char)pointer2[4];\n      }\n      FUN_08004ef4(parameters);\n    }\n  }\n  else {\n    pointer2[1] = pointer2[1] & 0xfffff7ff;\n    if (*(char *)((int)parameters[0xd] + 0x21) == '\\x01') {\n      parameters[0xe][0xd] = (uint)&LAB_080035fc_1;\n      result = FUN_0800258c(parameters[0xe]);\n      if (result != 0) {\n        if (((*parameters)[5] & 0x40) != 0) {\n          pointer2 = parameters[9];\n          parameters[9] = (uint *)((int)pointer2 + 1);\n          *(char *)pointer2 = (char)(*parameters)[4];\n        }\n        **parameters = **parameters & 0xfffffffe;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        (*(code *)parameters[0xe][0xd])();\n      }\n    }\n    else {\n      parameters[0xd][0xd] = (uint)&LAB_080035fc_1;\n      result = FUN_0800258c(parameters[0xd]);\n      if (result != 0) {\n        **parameters = **parameters & 0xfffffffe;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        (*(code *)parameters[0xd][0xd])();\n      }\n    }\n  }\n  if ((*(char *)((int)parameters + 0x3d) == '(') && (((uint)parameters[0x10] & 4) != 0)) {\n    parameters[0xb] = (uint *)0xffff0000;\n    parameters[0xc] = (uint *)0x0;\n    *(undefined *)((int)parameters + 0x3d) = 0x20;\n    *(undefined *)((int)parameters + 0x3e) = 0;\n    FUN_08004ec4(parameters);\n  }\n  return;\n}\n\n",
            "current_name": "process_data_0800316c",
            "entrypoint": "0x0800316c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800316c": "process_data_0800316c",
                "iVar1": "result",
                "param_1": "parameters",
                "puVar2": "pointer1",
                "puVar3": "pointer2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080032b4": {
            "additional_data": {
                "FUNC_08002ca4": {
                    "clear_quotes": 1,
                    "handle_double_quote": 1
                },
                "FUN_08002ca4": {
                    "handle_double_quote": 1
                },
                "FUN_0800316c": {
                    "do_something": 2,
                    "perform_action": 1
                },
                "FUN_080032b4": {
                    "improve_extraction": 1,
                    "parse_and_process_input": 1,
                    "parse_and_update_data": 1,
                    "process_binary": 1,
                    "process_data": 6,
                    "process_function": 4,
                    "process_input": 3,
                    "process_param": 4,
                    "process_parameter": 2,
                    "process_parameter_array": 1,
                    "process_parameters": 2,
                    "update_configuration": 1,
                    "update_data": 1,
                    "update_permissions": 1
                },
                "FUN_08004ec4": {
                    "execute_function": 1,
                    "handle_parenthesis": 2
                },
                "cVar1": {
                    "c": 1,
                    "char1": 2,
                    "char_value": 7,
                    "char_var": 5,
                    "character": 6,
                    "character_var": 1,
                    "config_char": 1,
                    "current_char": 1,
                    "first_char": 4,
                    "parameter_char": 1,
                    "starting_char": 1,
                    "type": 1
                },
                "param_1": {
                    "binary_data": 1,
                    "config": 1,
                    "data": 6,
                    "data_ptr": 1,
                    "function_params": 1,
                    "input": 1,
                    "input_data": 4,
                    "param": 2,
                    "param_array": 1,
                    "param_list": 1,
                    "param_ptr_ptr": 1,
                    "parameter": 1,
                    "parameter_array": 1,
                    "parameter_list": 1,
                    "parameters": 5,
                    "params": 3
                },
                "puVar2": {
                    "current_parameter": 1,
                    "data_ptr": 1,
                    "param": 1,
                    "param_ptr": 1,
                    "permission_ptr": 1,
                    "pointer1": 4,
                    "pointer_2": 1,
                    "pointer_var_2": 2,
                    "ptr": 2,
                    "ptr1": 7,
                    "ptr_config": 1,
                    "ptr_var1": 7,
                    "ptr_var_2": 1,
                    "pu1": 1
                },
                "puVar3": {
                    "char_ptr": 1,
                    "pointer2": 4,
                    "pointer_3": 1,
                    "pointer_var_3": 2,
                    "ptr2": 9,
                    "ptr_config2": 1,
                    "ptr_var2": 7,
                    "ptr_var_3": 1,
                    "pu2": 1,
                    "temp_param": 1,
                    "temp_parameter": 1,
                    "temp_ptr": 2
                }
            },
            "called": [
                "FUN_08002ca4",
                "FUN_0800316c",
                "FUN_08004ec4"
            ],
            "calling": [
                "FUN_080033b8"
            ],
            "code": "\nundefined4 process_data_080032b4(uint **data)\n\n{\n  char char_value;\n  uint *ptr1;\n  uint *ptr2;\n  \n  char_value = *(char *)((int)data + 0x3d);\n  (*data)[1] = (*data)[1] & 0xfffff8ff;\n  **data = **data | 1;\n  **data = **data & 0xfffffbff;\n  ptr1 = *data;\n  if ((ptr1[1] & 0x800) != 0) {\n    if ((*(char *)((int)data + 0x3d) == '\\\"') || (*(char *)((int)data + 0x3d) == '*')) {\n      *(short *)((int)data + 0x2a) = (short)*(undefined4 *)(*data[0xe] + 4);\n    }\n    else {\n      *(short *)((int)data + 0x2a) = (short)*(undefined4 *)(*data[0xd] + 4);\n    }\n  }\n  if (*(short *)((int)data + 0x2a) != 0) {\n    if ((ptr1[5] & 4) != 0) {\n      ptr2 = data[9];\n      data[9] = (uint *)((int)ptr2 + 1);\n      *(char *)ptr2 = (char)ptr1[4];\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n    if (((*data)[5] & 0x40) != 0) {\n      ptr1 = data[9];\n      data[9] = (uint *)((int)ptr1 + 1);\n      *(char *)ptr1 = (char)(*data)[4];\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n    data[0x10] = (uint *)((uint)data[0x10] | 4);\n  }\n  if (data[0x10] == (uint *)0x0) {\n    if (((char_value == '(') || (char_value == '*')) || (char_value == ')')) {\n      data[0xb] = (uint *)0xffff0000;\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUN_08004ec4();\n    }\n    else if ((data[0xc] == (uint *)0x22) || (char_value == '\\\"')) {\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUNC_08002ca4();\n    }\n  }\n  else {\n    FUN_0800316c();\n  }\n  return 0;\n}\n\n",
            "current_name": "process_data_080032b4",
            "entrypoint": "0x080032b4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080032b4": "process_data_080032b4",
                "cVar1": "char_value",
                "param_1": "data",
                "puVar2": "ptr1",
                "puVar3": "ptr2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080033b8": {
            "additional_data": {
                "FUN_08002848": {
                    "process_condition3": 1
                },
                "FUN_080028d2": {
                    "process_condition2": 1
                },
                "FUN_080028de": {
                    "process_condition1": 1
                },
                "FUN_08002ab8": {
                    "execute_action9": 1
                },
                "FUN_08002ad8": {
                    "execute_action8": 1
                },
                "FUN_08002c54": {
                    "execute_action7": 1
                },
                "FUN_08002ca6": {
                    "execute_action6": 1
                },
                "FUN_08002cf2": {
                    "reverse_something": 1
                },
                "FUN_08002db2": {
                    "execute_action3": 1
                },
                "FUN_08002efc": {
                    "execute_action4": 1
                },
                "FUN_08002f9c": {
                    "execute_action1": 1
                },
                "FUN_0800306c": {
                    "execute_action2": 1
                },
                "FUN_080032b4": {
                    "execute_action5": 1
                },
                "FUN_080033b8": {
                    "check_permissions": 2,
                    "find_and_execute_operation": 1,
                    "optimize_function": 1,
                    "process_data": 18,
                    "process_flags": 3,
                    "process_function": 2,
                    "process_param": 1,
                    "process_parameters": 2
                },
                "iVar1": {
                    "array_element": 1,
                    "current_element": 1,
                    "data": 2,
                    "data_pointer": 1,
                    "data_value": 1,
                    "first_element": 1,
                    "first_value": 1,
                    "flag": 1,
                    "flag_ptr": 1,
                    "flag_value": 1,
                    "index": 1,
                    "input": 2,
                    "param1_value": 1,
                    "param_value": 2,
                    "ptr": 2,
                    "value": 8,
                    "var1": 4
                },
                "param_1": {
                    "array": 1,
                    "data": 14,
                    "data_pointer": 3,
                    "flags": 3,
                    "input": 1,
                    "input_array": 2,
                    "input_data": 1,
                    "input_param": 1,
                    "int_array": 1,
                    "param": 2,
                    "parameters": 2
                },
                "uVar2": {
                    "flag": 1,
                    "flag1": 12,
                    "flag_check1": 1,
                    "flag_value1": 1,
                    "flags1": 2,
                    "flags_1": 1,
                    "param2_value": 1,
                    "second_element": 1,
                    "second_value": 1,
                    "value1": 6,
                    "var1": 1,
                    "var2": 3
                },
                "uVar3": {
                    "flag2": 12,
                    "flag_check2": 1,
                    "flag_value2": 1,
                    "flags2": 2,
                    "flags_2": 1,
                    "mask": 1,
                    "param3_value": 1,
                    "third_element": 1,
                    "third_value": 1,
                    "value2": 6,
                    "var2": 1,
                    "var3": 3
                },
                "uVar4": {
                    "flag3": 12,
                    "flag_check3": 1,
                    "flag_value3": 1,
                    "flags3": 2,
                    "flags_3": 1,
                    "fourth_element": 1,
                    "fourth_value": 1,
                    "param4_value": 1,
                    "perm_flag": 1,
                    "value3": 6,
                    "var3": 1,
                    "var4": 3
                }
            },
            "called": [
                "FUN_08002f9c",
                "FUN_080028de",
                "FUN_08002848",
                "FUN_08002db2",
                "FUN_08002ad8",
                "FUN_080032b4",
                "FUN_08002ca6",
                "FUN_08002cf2",
                "FUN_08002c54",
                "FUN_0800306c",
                "FUN_080028d2",
                "FUN_08002ab8",
                "FUN_08002efc"
            ],
            "calling": [],
            "code": "\nvoid process_data_080033b8(int *data)\n\n{\n  int value;\n  uint flag1;\n  uint flag2;\n  uint flag3;\n  \n  value = *data;\n  flag3 = *(uint *)(value + 0x18);\n  flag1 = *(uint *)(value + 0x14);\n  flag2 = *(uint *)(value + 4);\n  if ((*(char *)((int)data + 0x3e) == '\\x10') || (*(char *)((int)data + 0x3e) == '@')) {\n    if (((flag1 & 0x10001) == 0) || ((flag2 & 0x200) == 0)) {\n      if (((flag1 & 0x10008) == 0) || ((flag2 & 0x200) == 0)) {\n        if (((flag1 & 0x10002) != 0) && ((flag2 & 0x200) != 0)) {\n          FUN_080028de(data);\n        }\n      }\n      else {\n        FUN_080028d2(data);\n      }\n    }\n    else {\n      FUN_08002848(data);\n    }\n    if ((flag3 & 0x100004) == 0) {\n      if ((((flag1 & 0x10040) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08002f9c(data);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_0800306c(data);\n        return;\n      }\n    }\n    else {\n      if ((((flag1 & 0x10080) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08002db2(data);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_08002efc(data);\n        return;\n      }\n    }\n  }\n  else {\n    if (((flag1 & 0x10002) != 0) && ((flag2 & 0x200) != 0)) {\n      FUN_08002cf2();\n      return;\n    }\n    if (((flag1 & 0x10010) != 0) && ((flag2 & 0x200) != 0)) {\n      FUN_080032b4(data);\n      return;\n    }\n    if ((flag3 & 0x100004) == 0) {\n      if ((((flag1 & 0x10040) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08002ca6(data);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_08002ad8(data);\n      }\n    }\n    else {\n      if ((((flag1 & 0x10080) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08002c54(data);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_08002ab8(data);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "current_name": "process_data_080033b8",
            "entrypoint": "0x080033b8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080033b8": "process_data_080033b8",
                "iVar1": "value",
                "param_1": "data",
                "uVar2": "flag1",
                "uVar3": "flag2",
                "uVar4": "flag3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003520": {
            "additional_data": {
                "CVar1": {
                    "char_value": 1
                },
                "FUN_08002d1c": {
                    "do_something": 2,
                    "execute_function1": 1,
                    "perform_action": 1,
                    "process_condition_true": 1,
                    "reverse_something": 1
                },
                "FUN_0800316c": {
                    "execute_function": 2,
                    "execute_function2": 1,
                    "handle_status_change": 1,
                    "perform_action": 2,
                    "perform_additional_actions": 1,
                    "print_flags": 1
                },
                "FUN_08003520": {
                    "analyze_flags_and_perform_actions": 1,
                    "check_and_modify_flags": 3,
                    "check_and_modify_param": 1,
                    "check_and_set_flags": 1,
                    "check_flags": 1,
                    "process_flags": 3,
                    "process_function": 1,
                    "process_params": 1,
                    "update_flags": 8,
                    "update_flags_and_perform_actions": 1,
                    "update_flags_and_state": 2,
                    "update_flags_and_values": 2,
                    "update_flags_based_on_conditions": 1,
                    "update_parameters": 1,
                    "update_permissions": 2,
                    "update_status_flags": 2
                },
                "cVar1": {
                    "char1": 2,
                    "char_value": 8,
                    "character": 13,
                    "character_value": 2,
                    "character_var": 2,
                    "character_variable": 1,
                    "check_char": 1,
                    "tmp_char": 1
                },
                "param_1": {
                    "args": 1,
                    "arguments": 1,
                    "data": 1,
                    "flags": 3,
                    "function_params": 1,
                    "input_array": 1,
                    "input_params": 5,
                    "param": 1,
                    "param_ptr": 1,
                    "parameter": 1,
                    "parameters": 9,
                    "params": 2,
                    "params_array": 1,
                    "permissions_data": 1,
                    "pointer": 1,
                    "pointer_array": 1
                },
                "puVar2": {
                    "array_pointer": 1,
                    "data": 1,
                    "param": 2,
                    "param_pointer": 1,
                    "param_value": 2,
                    "param_values": 1,
                    "pointer": 5,
                    "pointer2": 1,
                    "pointer_value": 1,
                    "pointer_var": 1,
                    "pointer_variable": 1,
                    "ptr": 6,
                    "ptr_flags": 1,
                    "ptr_param": 1,
                    "ptr_permissions": 1,
                    "ptr_to_input_params": 1,
                    "ptr_to_params": 1,
                    "ptr_to_params_array": 1,
                    "ptr_value": 1,
                    "uint_ptr": 1
                },
                "uVar3": {
                    "flag": 2,
                    "flag1": 10,
                    "flag_1": 1,
                    "flag_value": 1,
                    "flag_value1": 1,
                    "flag_var1": 1,
                    "flags_var": 1,
                    "status_flag": 1,
                    "status_flags": 1,
                    "value1": 8,
                    "value3": 1,
                    "value_1": 1,
                    "value_a": 1,
                    "variable3": 1
                },
                "uVar4": {
                    "control_flags": 1,
                    "flag2": 12,
                    "flag_2": 1,
                    "flag_mask": 1,
                    "flag_value2": 1,
                    "flag_var2": 1,
                    "second_status_flag": 1,
                    "value2": 8,
                    "value4": 1,
                    "value_2": 1,
                    "value_b": 1,
                    "value_var": 1,
                    "variable4": 1
                }
            },
            "called": [
                "FUN_08002d1c",
                "FUN_0800316c"
            ],
            "calling": [],
            "code": "\nvoid update_status_flags_08003520(uint **parameters)\n\n{\n  char character;\n  uint *ptr;\n  uint flag1;\n  uint flag2;\n  \n  ptr = *parameters;\n  flag1 = ptr[5];\n  flag2 = ptr[1];\n  if (((flag1 & 0x10100) != 0) && ((flag2 & 0x100) != 0)) {\n    parameters[0x10] = (uint *)((uint)parameters[0x10] | 1);\n    ptr[5] = 0xfffffeff;\n    **parameters = **parameters | 0x8000;\n  }\n  if (((flag1 & 0x10200) != 0) && ((flag2 & 0x100) != 0)) {\n    parameters[0x10] = (uint *)((uint)parameters[0x10] | 2);\n    (*parameters)[5] = 0xfffffdff;\n  }\n  if (((flag1 & 0x10400) != 0) && ((flag2 & 0x100) != 0)) {\n    character = *(char *)((int)parameters + 0x3d);\n    if (((*(char *)((int)parameters + 0x3e) == ' ') && (*(short *)((int)parameters + 0x2a) == 0)) &&\n       (((character == '!' || (character == ')')) || ((character == '(' && (parameters[0xc] == (uint *)0x21)))))) {\n      FUN_08002d1c(parameters);\n    }\n    else {\n      parameters[0x10] = (uint *)((uint)parameters[0x10] | 4);\n      if (*(char *)((int)parameters + 0x3e) == '\\x10') {\n        **parameters = **parameters | 0x200;\n      }\n      (*parameters)[5] = 0xfffffbff;\n    }\n  }\n  if (((flag1 & 0x10800) != 0) && ((flag2 & 0x100) != 0)) {\n    parameters[0x10] = (uint *)((uint)parameters[0x10] | 8);\n    (*parameters)[5] = 0xfffff7ff;\n  }\n  if (parameters[0x10] != (uint *)0x0) {\n    FUN_0800316c(parameters);\n  }\n  return;\n}\n\n",
            "current_name": "update_status_flags_08003520",
            "entrypoint": "0x08003520",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003520": "update_status_flags_08003520",
                "cVar1": "character",
                "param_1": "parameters",
                "puVar2": "ptr",
                "uVar3": "flag1",
                "uVar4": "flag2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800365c": {
            "additional_data": {
                "FUN_0800365c": {
                    "calculate_adjusted_delay": 1,
                    "calculate_adjusted_value": 1,
                    "calculate_delay": 15,
                    "calculate_duration": 2,
                    "calculate_duration_in_seconds": 1,
                    "calculate_iterations": 3,
                    "calculate_local_counter": 1,
                    "convert_param_to_iterations": 1,
                    "count_down": 1,
                    "delay": 1,
                    "delay_function": 3,
                    "multiply_and_decrement": 1
                },
                "bVar1": {
                    "is_adjusted_non_zero": 1,
                    "is_delay_complete": 1,
                    "is_not_zero": 1
                },
                "local_4": {
                    "adjusted_delay": 1,
                    "adjusted_value": 2,
                    "calculated_duration": 1,
                    "calculated_iterations": 1,
                    "counter": 3,
                    "delay": 1,
                    "delay_count": 10,
                    "delay_counter": 3,
                    "delay_value": 1,
                    "duration_count": 1,
                    "iteration_count": 1,
                    "iterations": 3,
                    "multiplied_value": 1,
                    "num_iterations": 1,
                    "remaining_iterations": 1
                },
                "param_1": {
                    "duration": 1,
                    "duration_in_milliseconds": 1,
                    "input": 5,
                    "input_delay": 1,
                    "input_param": 1,
                    "input_value": 21,
                    "milliseconds": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003688"
            ],
            "code": "\nvoid calculate_adjusted_delay_0800365c(int input_value)\n\n{\n  bool is_delay_complete;\n  int delay_count;\n  \n  delay_count = input_value * (DAT_20000084 / 8000);\n  do {\n    is_delay_complete = delay_count != 0;\n    delay_count = delay_count + -1;\n  } while (is_delay_complete);\n  return;\n}\n\n",
            "current_name": "calculate_adjusted_delay_0800365c",
            "entrypoint": "0x0800365c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800365c": "calculate_adjusted_delay_0800365c",
                "bVar1": "is_delay_complete",
                "local_4": "delay_count",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003688": {
            "additional_data": {
                "FUN_08001cc4": {
                    "get_current_time": 4,
                    "get_time": 3,
                    "helper_function": 1
                },
                "FUN_0800365c": {
                    "activate_function": 1,
                    "control_device": 1,
                    "set_flag": 4
                },
                "FUN_08003688": {
                    "check_and_control_devices": 2,
                    "check_and_modify_flags": 1,
                    "check_status": 3,
                    "perform_action": 1,
                    "perform_control_actions": 1,
                    "perform_operation": 2,
                    "process_data": 1,
                    "process_flags": 4
                },
                "_DAT_40007000": {
                    "another_status": 1,
                    "register5": 1,
                    "register6": 1,
                    "register_8": 1,
                    "register_value_4": 1
                },
                "_DAT_40021000": {
                    "register1": 1,
                    "register2": 1,
                    "register_2": 1,
                    "register_value_2": 1,
                    "system_status": 1
                },
                "_DAT_40021004": {
                    "device_status": 1,
                    "register1": 1,
                    "register2": 1,
                    "register_10": 1,
                    "register_value_1": 1
                },
                "_DAT_4002101c": {
                    "other_status": 1,
                    "register4": 1,
                    "register6": 1,
                    "register_5": 1,
                    "register_value_5": 1
                },
                "_DAT_40021020": {
                    "more_status": 1,
                    "register3": 1,
                    "register7": 1,
                    "register_9": 1,
                    "register_value_6": 1
                },
                "_DAT_40021024": {
                    "additional_status": 1,
                    "register4": 1,
                    "register5": 1,
                    "register_3": 1,
                    "register_value_3": 1
                },
                "_DAT_42420000": {
                    "extra_status": 1,
                    "register3": 1,
                    "register7": 1,
                    "register_value_7": 1
                },
                "_DAT_42420060": {
                    "register8": 2,
                    "register_11": 1,
                    "register_value_9": 1
                },
                "_DAT_42420480": {
                    "final_status": 1,
                    "register_value_8": 1
                },
                "bVar5": {
                    "bool_value": 1,
                    "bool_variable": 1,
                    "condition": 1,
                    "flag": 9,
                    "is_bit_set": 1,
                    "is_condition_met": 5,
                    "is_false": 1,
                    "is_flag": 1,
                    "is_flag_set": 6,
                    "is_set": 2,
                    "is_value": 1,
                    "is_value_true": 1,
                    "temp_var_2": 1
                },
                "iVar1": {
                    "counter1": 3,
                    "first_index": 1,
                    "first_iteration_variable": 1,
                    "initial_value": 4,
                    "iter1": 1,
                    "loop_var_1": 1,
                    "start": 1,
                    "start_time": 18,
                    "start_value": 1
                },
                "iVar2": {
                    "counter2": 3,
                    "current": 1,
                    "current_time": 19,
                    "current_value": 4,
                    "iter2": 1,
                    "loop_var_2": 1,
                    "second_index": 1,
                    "second_iteration_variable": 1
                },
                "param_1": {
                    "action_params": 1,
                    "config_params": 1,
                    "control_params": 1,
                    "data": 1,
                    "device_flags": 1,
                    "flags": 10,
                    "input_data": 2,
                    "param_array": 2,
                    "parameters": 5,
                    "params": 4,
                    "status": 1,
                    "status_array": 1,
                    "status_flags": 1
                },
                "uVar3": {
                    "result": 22,
                    "result_status": 1,
                    "return_val": 1,
                    "return_value": 5,
                    "status": 1
                },
                "uVar4": {
                    "action": 1,
                    "flag_value": 1,
                    "param": 1,
                    "param1_index1": 1,
                    "param1_index1_value": 1,
                    "param_1_value": 1,
                    "param_value": 4,
                    "temp": 1,
                    "temp_val": 1,
                    "temp_value": 1,
                    "temp_var": 1,
                    "temp_var_1": 1,
                    "u_variable": 1,
                    "value": 15
                }
            },
            "called": [
                "FUN_08001cc4",
                "FUN_0800365c"
            ],
            "calling": [
                "FUN_08001b48"
            ],
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nundefined4 process_flags_08003688(uint *flags)\n\n{\n  int start_time;\n  int current_time;\n  undefined4 result;\n  uint value;\n  bool flag;\n  \n  if ((*flags & 1) != 0) {\n    if (((_DAT_40021004 & 0xc) == 4) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) != 0)))) {\n      if (((_DAT_40021000 & 0x20000) != 0) && (flags[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      value = flags[1];\n      if (value == 0x10000) {\n        _DAT_40021000 = _DAT_40021000 | 0x10000;\n      }\n      else if (value == 0) {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      else if (value == 0x50000) {\n        _DAT_40021000 = _DAT_40021000 | 0x50000;\n      }\n      else {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      if (flags[1] == 0) {\n        start_time = FUN_08001cc4();\n        while ((_DAT_40021000 & 0x20000) != 0) {\n          current_time = FUN_08001cc4();\n          if (100 < (uint)(current_time - start_time)) {\n            return 3;\n          }\n        }\n      }\n      else {\n        start_time = FUN_08001cc4();\n        while ((_DAT_40021000 & 0x20000) == 0) {\n          current_time = FUN_08001cc4();\n          if (100 < (uint)(current_time - start_time)) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*flags & 2) != 0) {\n    if (((_DAT_40021004 & 0xc) == 0) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) == 0)))) {\n      if (((_DAT_40021000 & 2) != 0) && (flags[4] != 1)) {\n        return 1;\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | flags[5] << 3;\n    }\n    else if (flags[4] == 0) {\n      _DAT_42420000 = 0;\n      start_time = FUN_08001cc4();\n      while ((_DAT_40021000 & 2) != 0) {\n        current_time = FUN_08001cc4();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420000 = 1;\n      start_time = FUN_08001cc4();\n      while ((_DAT_40021000 & 2) == 0) {\n        current_time = FUN_08001cc4();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | flags[5] << 3;\n    }\n  }\n  if ((*flags & 8) != 0) {\n    if (flags[6] == 0) {\n      _DAT_42420480 = 0;\n      start_time = FUN_08001cc4();\n      while ((_DAT_40021024 & 2) != 0) {\n        current_time = FUN_08001cc4();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420480 = 1;\n      start_time = FUN_08001cc4();\n      while ((_DAT_40021024 & 2) == 0) {\n        current_time = FUN_08001cc4();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n      FUN_0800365c(1);\n    }\n  }\n  if ((*flags & 4) != 0) {\n    flag = (_DAT_4002101c & 0x10000000) == 0;\n    if (flag) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      start_time = FUN_08001cc4();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        current_time = FUN_08001cc4();\n        if (100 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    value = flags[3];\n    if (value == 1) {\n      _DAT_40021020 = _DAT_40021020 | 1;\n    }\n    else if (value == 0) {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    else if (value == 5) {\n      _DAT_40021020 = _DAT_40021020 | 5;\n    }\n    else {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    if (flags[3] == 0) {\n      start_time = FUN_08001cc4();\n      while ((_DAT_40021020 & 2) != 0) {\n        current_time = FUN_08001cc4();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      start_time = FUN_08001cc4();\n      while ((_DAT_40021020 & 2) == 0) {\n        current_time = FUN_08001cc4();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    if (flag) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if (flags[7] == 0) {\n    result = 0;\n  }\n  else if ((_DAT_40021004 & 0xc) == 8) {\n    result = 1;\n  }\n  else if (flags[7] == 2) {\n    _DAT_42420060 = 0;\n    start_time = FUN_08001cc4();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        if (flags[8] == 0x10000) {\n          _DAT_40021004 = _DAT_40021004 & 0xfffdffff | flags[2];\n        }\n        _DAT_40021004 = _DAT_40021004 & 0xffc2ffff | flags[8] | flags[9];\n        _DAT_42420060 = 1;\n        start_time = FUN_08001cc4();\n        do {\n          if ((_DAT_40021000 & 0x2000000) != 0) {\n            return 0;\n          }\n          current_time = FUN_08001cc4();\n        } while ((uint)(current_time - start_time) < 3);\n        return 3;\n      }\n      current_time = FUN_08001cc4();\n    } while ((uint)(current_time - start_time) < 3);\n    result = 3;\n  }\n  else {\n    _DAT_42420060 = 0;\n    start_time = FUN_08001cc4();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        return 0;\n      }\n      current_time = FUN_08001cc4();\n    } while ((uint)(current_time - start_time) < 3);\n    result = 3;\n  }\n  return result;\n}\n\n",
            "current_name": "process_flags_08003688",
            "entrypoint": "0x08003688",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003688": "process_flags_08003688",
                "bVar5": "flag",
                "iVar1": "start_time",
                "iVar2": "current_time",
                "param_1": "flags",
                "uVar3": "result",
                "uVar4": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003a68": {
            "additional_data": {
                "FUN_08003a68": {
                    "calculate_cycle_time": 1,
                    "calculate_delay": 20,
                    "calculate_execution_time": 3,
                    "calculate_result": 1,
                    "calculate_time": 1,
                    "calculate_timer_delay": 1,
                    "calculate_timer_overflow": 1,
                    "calculate_value": 2,
                    "get_processing_time": 1
                },
                "_DAT_40021004": {
                    "config": 1,
                    "control_register": 3,
                    "data": 1,
                    "data_register": 2,
                    "data_value": 3,
                    "flag": 1,
                    "hardware_status": 2,
                    "input_data": 2,
                    "input_value": 1,
                    "parameter1": 1,
                    "register_value": 5,
                    "status_register": 1
                },
                "byte": {
                    "byte_value": 1
                },
                "local_1c": {
                    "base_value": 1,
                    "config": 1,
                    "config_value": 1,
                    "constant": 1,
                    "constant5": 1,
                    "control_signal": 1,
                    "count": 1,
                    "counter": 6,
                    "cycles": 1,
                    "delay_constant": 2,
                    "delay_factor": 1,
                    "delay_multiplier": 1,
                    "destination_port": 1,
                    "execution_mode": 1,
                    "execution_threshold": 1,
                    "input_value": 3,
                    "local_var1": 1,
                    "loop_threshold": 1,
                    "multiplier": 2,
                    "offset": 1,
                    "priority": 1,
                    "status": 1
                },
                "uStack_10": {
                    "bitmask3": 1,
                    "byte_value3": 1,
                    "calculation_variable3": 1,
                    "config_value3": 1,
                    "constant2": 5,
                    "constant3": 1,
                    "constant_value": 1,
                    "data3": 1,
                    "data_2": 1,
                    "data_stack10": 1,
                    "divider1": 1,
                    "divisor": 1,
                    "initial_value": 1,
                    "input_param_3": 1,
                    "input_value3": 1,
                    "multiplier3": 2,
                    "multiplier_value": 1,
                    "parameter3": 1,
                    "stack_value1": 1,
                    "value2": 2,
                    "value3": 4,
                    "value_3": 1
                },
                "uStack_14": {
                    "bitmask2": 1,
                    "byte_value2": 1,
                    "calculation_variable2": 1,
                    "config_value2": 1,
                    "constant1": 2,
                    "constant2": 1,
                    "constant3": 2,
                    "constant_value": 1,
                    "data2": 1,
                    "data_3": 1,
                    "data_stack14": 1,
                    "divisor": 1,
                    "input_param_2": 1,
                    "input_value2": 1,
                    "multiplier": 1,
                    "multiplier2": 3,
                    "parameter2": 1,
                    "secondary_value": 1,
                    "stack_value2": 1,
                    "step_value": 1,
                    "value1": 1,
                    "value2": 4,
                    "value3": 1,
                    "value_2": 1
                },
                "uStack_18": {
                    "base_delay": 1,
                    "bitmask1": 1,
                    "byte_value": 2,
                    "calculation_result": 1,
                    "calculation_variable1": 1,
                    "config_value1": 1,
                    "constant1": 1,
                    "constant4": 2,
                    "data1": 1,
                    "data_4": 1,
                    "data_stack18": 1,
                    "input_param_1": 1,
                    "input_value1": 1,
                    "loop_counter": 1,
                    "multiplier": 2,
                    "multiplier1": 3,
                    "parameter1": 1,
                    "register_value": 1,
                    "source_port": 1,
                    "stack_value3": 1,
                    "value1": 4,
                    "value4": 1,
                    "value_1": 1
                },
                "uStack_c": {
                    "bitmask4": 1,
                    "byte_value4": 1,
                    "calculation_variable4": 1,
                    "config_value4": 1,
                    "constant": 1,
                    "constant1": 3,
                    "constant3": 2,
                    "constant4": 1,
                    "constant_value": 1,
                    "data4": 1,
                    "data_1": 1,
                    "data_stack_c": 1,
                    "divider2": 1,
                    "input_param_4": 1,
                    "input_value4": 1,
                    "multiplier4": 2,
                    "offset": 1,
                    "parameter4": 1,
                    "preset_value": 1,
                    "stack_value0": 1,
                    "value1": 1,
                    "value3": 1,
                    "value4": 4,
                    "value_4": 1
                },
                "uVar1": {
                    "delay": 4,
                    "delay_value": 1,
                    "execution_time": 1,
                    "result": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_08003afa"
            ],
            "code": "\n\n\nuint calculate_timer_delay_08003a68(void)\n\n{\n  uint delay;\n  undefined2 counter;\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 constant2;\n  undefined4 value4;\n  \n  value4 = 0x10100f0e;\n  constant2 = 0xd0c0b0a;\n  value2 = 0x9080706;\n  value1 = 0x5040302;\n  counter = 0x201;\n  if ((_DAT_40021004 & 0xc) == 8) {\n    delay = (uint)*(byte_value *)((int)&value1 + ((_DAT_40021004 << 10) >> 0x1c));\n    if ((_DAT_40021004 & 0x10000) == 0) {\n      delay = delay * 4000000;\n    }\n    else {\n      delay = (delay * 8000000) /\n              (uint)*(byte_value *)((int)&counter - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n    }\n  }\n  else {\n    delay = 8000000;\n  }\n  return delay;\n}\n\n",
            "current_name": "calculate_timer_delay_08003a68",
            "entrypoint": "0x08003a68",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003a68": "calculate_timer_delay_08003a68",
                "byte": "byte_value",
                "local_1c": "counter",
                "uStack_10": "constant2",
                "uStack_14": "value2",
                "uStack_18": "value1",
                "uStack_c": "value4",
                "uVar1": "delay"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003ad4": {
            "additional_data": {
                "DAT_0800772c": {
                    "lookup_table": 2,
                    "some_data": 1,
                    "timer_lookup_table": 1
                },
                "DAT_20000084": {
                    "decoded_data": 1,
                    "output_data": 1,
                    "result": 9,
                    "shifted_result": 1
                },
                "DAT_40021000": {
                    "other_hardware_config_reg": 1,
                    "other_settings": 1,
                    "some_flag": 1
                },
                "DAT_40021004": {
                    "current_settings": 1,
                    "data_flags": 1
                },
                "DAT_40022000": {
                    "data_count": 1,
                    "settings_mask": 1
                },
                "FUN_08001c3c": {
                    "perform_action": 2,
                    "perform_operation": 1,
                    "set_flags": 1,
                    "set_mode": 1
                },
                "FUN_08001cc4": {
                    "get_current_time": 5,
                    "get_elapsed_time": 1,
                    "get_time": 3,
                    "get_timer": 1,
                    "time_elapsed": 2
                },
                "FUN_08003a68": {
                    "calculate_value": 2,
                    "decode_data": 1,
                    "get_configuration_value": 1,
                    "get_data": 1,
                    "get_other_data": 1,
                    "get_some_value": 1,
                    "read_data": 1
                },
                "FUN_08003ad4": {
                    "decode_and_process_data": 1,
                    "initialize": 1,
                    "initialize_data": 1,
                    "initialize_hardware": 1,
                    "initialize_system": 2,
                    "perform_operation": 1,
                    "process_data": 5,
                    "update_config": 1,
                    "update_configuration": 1,
                    "update_data": 4,
                    "update_data_settings": 1,
                    "update_memory_settings": 1,
                    "update_resource_limits": 1,
                    "update_settings": 7
                },
                "FUN_08003afa": {
                    "check_config": 1
                },
                "_DAT_40021000": {
                    "configuration_register": 1,
                    "some_flag": 1
                },
                "_DAT_40021004": {
                    "config": 2,
                    "control_reg": 1,
                    "control_register": 3,
                    "current_status": 1,
                    "data_info": 1,
                    "flags": 3,
                    "hardware_config_reg": 1,
                    "memory_flags": 1,
                    "register_value": 2,
                    "status_flags": 1,
                    "status_register": 1,
                    "system_settings": 1
                },
                "_DAT_40022000": {
                    "bit_field": 1,
                    "buffer_size": 2,
                    "config_register": 1,
                    "config_value": 1,
                    "current_settings": 3,
                    "data_limit": 1,
                    "data_register": 1,
                    "flags": 1,
                    "global_settings": 1,
                    "hardware_status_reg": 1,
                    "max_value": 1,
                    "memory_size": 1,
                    "memory_value": 1,
                    "system_flags": 1,
                    "total_size": 1
                },
                "iVar1": {
                    "initial_time": 5,
                    "initial_value": 4,
                    "loop_start": 1,
                    "start": 1,
                    "start_time": 13,
                    "start_timer": 1,
                    "start_timestamp": 1,
                    "start_value": 1
                },
                "iVar2": {
                    "current": 1,
                    "current_time": 20,
                    "current_timer": 1,
                    "current_timestamp": 1,
                    "current_value": 3,
                    "loop_end": 1
                },
                "param_1": {
                    "array": 2,
                    "config_params": 4,
                    "data": 6,
                    "data_array": 1,
                    "data_ptr": 1,
                    "data_settings": 1,
                    "input_array": 1,
                    "input_data": 1,
                    "input_params": 1,
                    "options": 1,
                    "parameter1": 1,
                    "resource_flags": 1,
                    "settings": 9,
                    "system_config": 1
                },
                "param_2": {
                    "array_size": 1,
                    "config_param_count": 1,
                    "config_size": 1,
                    "count": 1,
                    "data_size": 2,
                    "input_size": 1,
                    "input_value": 1,
                    "length": 2,
                    "mask": 1,
                    "max_resource_value": 1,
                    "new_setting": 1,
                    "new_value": 1,
                    "num_config_params": 1,
                    "num_settings": 2,
                    "param_size": 1,
                    "parameter2": 1,
                    "setting_value": 1,
                    "size": 9,
                    "system_size": 1,
                    "value": 1
                },
                "uVar3": {
                    "config_flag": 1,
                    "result": 11,
                    "status": 5,
                    "temp": 3,
                    "temp_value": 4,
                    "temp_var": 2,
                    "temp_var1": 1,
                    "value": 4
                }
            },
            "called": [
                "FUN_08003afa"
            ],
            "calling": [
                "FUN_08001b48"
            ],
            "code": "\n\n\nundefined4 update_memory_settings_08003ad4(uint *settings,uint size)\n\n{\n  int start_time;\n  int current_time;\n  uint result;\n  \n  if ((_DAT_40022000 & 7) < size) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | size;\n    if (size != (size & 7)) {\n      return 1;\n    }\n  }\n  if ((*settings & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | settings[2];\n  }\n  if ((*settings & 1) != 0) {\n    result = settings[1];\n    if (result == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((result != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = result | _DAT_40021004 & 0xfffffffc;\n    start_time = FUN_08001cc4();\n    if (settings[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        current_time = FUN_08001cc4();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else if (settings[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        current_time = FUN_08001cc4();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        current_time = FUN_08001cc4();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (size < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | size;\n    if (size != (size & 7)) {\n      return 1;\n    }\n  }\n  if ((*settings & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | settings[3];\n  }\n  if ((*settings & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | settings[4] << 3;\n  }\n  result = FUN_08003a68();\n  DAT_20000084 = result >> (&DAT_0800772c)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_08001c3c(0xf);\n  return 0;\n}\n\n",
            "current_name": "update_memory_settings_08003ad4",
            "entrypoint": "0x08003ad4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003ad4": "update_memory_settings_08003ad4",
                "iVar1": "start_time",
                "iVar2": "current_time",
                "param_1": "settings",
                "param_2": "size",
                "uVar3": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003afa": {
            "additional_data": {
                "0xf": {
                    "mode_value": 1,
                    "output_constant": 1
                },
                "5000": {
                    "max_time_elapsed": 1,
                    "timeout": 1
                },
                "DAT_0800772c": {
                    "config_offset": 1,
                    "constant_value": 1,
                    "constants": 1,
                    "lookup_table": 1,
                    "mask_table": 1,
                    "shift_mapping": 1,
                    "shift_table": 1
                },
                "DAT_20000084": {
                    "config_value": 1,
                    "data": 2,
                    "output": 1,
                    "output_data": 1,
                    "output_value": 2,
                    "result": 13,
                    "updated_value": 1
                },
                "DAT_40021000": {
                    "some_flag": 1
                },
                "DAT_40021004": {
                    "data": 1,
                    "status_register": 1
                },
                "DAT_40022000": {
                    "config_register": 1,
                    "max_value": 1
                },
                "FUN_08001c3c": {
                    "perform_action": 1,
                    "set_bits": 1,
                    "set_control": 1,
                    "set_flag": 4,
                    "set_mode": 5,
                    "set_mode_func": 1,
                    "set_output": 1,
                    "set_result": 1,
                    "set_value": 1,
                    "update_control": 1
                },
                "FUN_08001cc4": {
                    "calculate_duration": 1,
                    "calculate_time_difference": 1,
                    "delay": 1,
                    "get_current_time": 9,
                    "get_elapsed_time": 2,
                    "get_time": 7,
                    "get_time_elapsed": 2,
                    "measure_elapsed_time": 1,
                    "time_func": 1
                },
                "FUN_08003a68": {
                    "calculate_output": 1,
                    "calculate_result": 2,
                    "calculate_something": 1,
                    "calculate_value": 8,
                    "get_bits": 1,
                    "get_data": 2,
                    "get_mask": 1,
                    "get_memory_configuration": 1,
                    "get_system_config": 1,
                    "get_value": 3,
                    "process_other_data": 1,
                    "read_data": 2,
                    "read_data_func": 1
                },
                "FUN_08003afa": {
                    "improve_code": 1,
                    "initialize_and_wait": 1,
                    "perform_operation": 1,
                    "process_data": 3,
                    "update_config": 1,
                    "update_data": 3,
                    "update_memory_configuration": 1,
                    "update_registers": 1,
                    "update_settings": 4
                },
                "_DAT_40021000": {
                    "config_info": 1,
                    "constant_1": 1,
                    "control_register": 2,
                    "control_register_1": 1,
                    "global_config": 1,
                    "hardware_config": 1,
                    "hardware_register": 1,
                    "hardware_status": 1,
                    "other_register": 1,
                    "reg_value_2": 1,
                    "register2": 2,
                    "register_2": 1,
                    "status_reg": 2,
                    "status_register": 3
                },
                "_DAT_40021004": {
                    "config_register": 1,
                    "config_value": 1,
                    "control_reg": 2,
                    "control_register": 5,
                    "current_settings": 1,
                    "device_info": 1,
                    "memory_config": 1,
                    "reg_value_1": 1,
                    "register1": 2,
                    "register_1": 1,
                    "register_value": 1,
                    "registers": 1,
                    "updated_data_register": 1,
                    "updated_status_register": 1
                },
                "_DAT_40022000": {
                    "another_register": 1,
                    "config_reg": 1,
                    "config_register": 2,
                    "control_register": 1,
                    "data_register": 1,
                    "device_config": 1,
                    "global_data": 1,
                    "limit_register": 1,
                    "max_value": 1,
                    "memory_address": 1,
                    "memory_register": 1,
                    "reg_value_3": 1,
                    "register3": 2,
                    "register_3": 1,
                    "total_memory": 1
                },
                "iVar1": {
                    "initial_duration": 1,
                    "initial_time": 7,
                    "initial_value": 3,
                    "start_time": 18
                },
                "iVar2": {
                    "current_duration": 1,
                    "current_time": 23,
                    "current_value": 3,
                    "end_time": 1
                },
                "param_1": {
                    "config_flags": 1,
                    "data_flags": 1,
                    "flags": 23,
                    "input_flags": 1,
                    "memory_flags": 1,
                    "settings": 2,
                    "settings_flags": 2
                },
                "param_2": {
                    "count": 1,
                    "data": 1,
                    "data_size": 1,
                    "limit": 3,
                    "max_connections": 1,
                    "max_value": 1,
                    "num_memory": 1,
                    "param": 2,
                    "selected_value": 1,
                    "value": 19
                },
                "uVar3": {
                    "condition_value": 1,
                    "control": 1,
                    "data_value": 1,
                    "flag_value": 3,
                    "flags_value": 1,
                    "mode": 1,
                    "option": 1,
                    "param1_value": 1,
                    "result": 5,
                    "return_value": 1,
                    "setting_value": 1,
                    "status": 5,
                    "sub_value": 1,
                    "temp_value": 2,
                    "type": 1,
                    "value": 4,
                    "value_condition": 1
                }
            },
            "called": [
                "FUN_08001cc4",
                "FUN_08001c3c",
                "FUN_08003a68"
            ],
            "calling": [
                "FUN_08003ad4"
            ],
            "code": "\n\n\nundefined4 update_settings_08003afa(uint *flags,uint value)\n\n{\n  int start_time;\n  int current_time;\n  uint status;\n  \n  if ((*flags & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | flags[2];\n  }\n  if ((*flags & 1) != 0) {\n    status = flags[1];\n    if (status == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((status != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = status | _DAT_40021004 & 0xfffffffc;\n    start_time = FUN_08001cc4();\n    if (flags[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        current_time = FUN_08001cc4();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else if (flags[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        current_time = FUN_08001cc4();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        current_time = FUN_08001cc4();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (value < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | value;\n    if (value != (value & 7)) {\n      return 1;\n    }\n  }\n  if ((*flags & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | flags[3];\n  }\n  if ((*flags & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | flags[4] << 3;\n  }\n  status = FUN_08003a68();\n  DAT_20000084 = status >> (&DAT_0800772c)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_08001c3c(0xf);\n  return 0;\n}\n\n",
            "current_name": "update_settings_08003afa",
            "entrypoint": "0x08003afa",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003afa": "update_settings_08003afa",
                "iVar1": "start_time",
                "iVar2": "current_time",
                "param_1": "flags",
                "param_2": "value",
                "uVar3": "status"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003c44": {
            "additional_data": {
                "DAT_20000084": {
                    "dat_value": 1,
                    "data": 12,
                    "data_ptr": 1,
                    "data_value": 4,
                    "default_value": 1,
                    "global_value": 4,
                    "global_variable": 1,
                    "global_variable_value": 1
                },
                "FUN_08003c44": {
                    "get_dat_value": 2,
                    "get_data": 12,
                    "get_data_from_global_variable": 1,
                    "get_data_ptr": 1,
                    "get_data_value": 7,
                    "get_default_value": 1,
                    "get_global_value": 5,
                    "get_global_variable": 1,
                    "get_global_variable_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003c70",
                "FUN_08003c50",
                "FUN_08001b48"
            ],
            "code": "\nundefined4 get_data_value_08003c44(void)\n\n{\n  return DAT_20000084;\n}\n\n",
            "current_name": "get_data_value_08003c44",
            "entrypoint": "0x08003c44",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003c44": "get_data_value_08003c44"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003c50": {
            "additional_data": {
                "DAT_0800773c": {
                    "constant2": 1,
                    "data": 2,
                    "shift_amount": 2,
                    "shift_array": 2,
                    "shift_table": 2
                },
                "FUNK_08003c44": {
                    "sub_function": 1
                },
                "FUNK_08003c50": {
                    "shifted_result": 1
                },
                "FUN_08003c44": {
                    "get_and_return_value": 1,
                    "get_initial_value": 4,
                    "get_original_value": 2,
                    "get_result": 1,
                    "get_return_value": 3,
                    "get_some_value": 2,
                    "get_unsigned_integer": 1,
                    "get_unsigned_value": 2,
                    "get_value": 5,
                    "get_value_from_subfunction": 1,
                    "retrieve_data": 1,
                    "sub_function": 1
                },
                "FUN_08003c50": {
                    "calculate_shifted_value": 1,
                    "extract_and_shift": 1,
                    "extract_bits_from_result": 1,
                    "extracted_function": 1,
                    "extracted_value_with_shift": 1,
                    "get_shifted_value": 4,
                    "shift_and_return": 2,
                    "shift_and_return_result": 1,
                    "shift_bits": 1,
                    "shift_right_and_return": 1,
                    "shift_value_based_on_input": 1,
                    "shifted_result": 4,
                    "shifted_return_value": 1,
                    "shifted_value": 3,
                    "shifted_value_based_on_constant": 1,
                    "shifted_value_based_on_memory": 1,
                    "shifted_value_by_index": 1,
                    "shifted_value_from_bitwise": 1,
                    "shifted_value_from_dat": 1,
                    "shifted_value_from_data": 1,
                    "shifted_value_from_func": 1
                },
                "_DAT_40021004": {
                    "constant": 1,
                    "constant1": 1,
                    "data_value": 2,
                    "initial_data": 1,
                    "initial_value": 1,
                    "input_data": 1,
                    "input_value": 7,
                    "offset": 1,
                    "some_value": 1,
                    "value": 1
                },
                "uVar1": {
                    "initial_value": 2,
                    "result": 4,
                    "result_of_sub_function": 1,
                    "return_value": 4,
                    "unsigned_value": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_08003c44"
            ],
            "calling": [
                "FUN_08004204"
            ],
            "code": "\n\n\nuint get_shifted_value_08003c50(void)\n\n{\n  uint return_value;\n  \n  return_value = FUN_08003c44();\n  return return_value >> (&DAT_0800773c)[(uint)(_DAT_40021004 << 0x15) >> 0x1d];\n}\n\n",
            "current_name": "get_shifted_value_08003c50",
            "entrypoint": "0x08003c50",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003c50": "get_shifted_value_08003c50",
                "uVar1": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003c70": {
            "additional_data": {
                "DAT_0800773c": {
                    "bit_shift_table": 1,
                    "bit_shift_value": 1,
                    "shift_amount": 2,
                    "shift_array": 2,
                    "shift_values": 1
                },
                "FUN_08003c44": {
                    "get_data": 4,
                    "get_initial_value": 5,
                    "get_input_value": 1,
                    "get_original_value": 4,
                    "get_return_value": 3,
                    "get_shift_value": 1,
                    "get_unsigned_value": 1,
                    "get_value": 2,
                    "get_value_from_subfunction": 4,
                    "get_value_function": 1,
                    "obtain_value": 1,
                    "sub_function": 2
                },
                "FUN_08003c70": {
                    "calculate_shifted_value": 1,
                    "decompiled_function": 1,
                    "get_shifted_value": 2,
                    "perform_function": 1,
                    "reverse_bit_shift": 1,
                    "reverse_bits": 2,
                    "reverse_shift": 1,
                    "shift_and_return": 5,
                    "shift_and_return_result": 2,
                    "shift_result_based_on_data": 1,
                    "shift_right_function": 1,
                    "shift_value_based_on_constant": 1,
                    "shift_value_based_on_input": 1,
                    "shift_value_function": 1,
                    "shifted_result": 1,
                    "shifted_return_value": 2,
                    "shifted_value": 4,
                    "shifted_value_by_bits": 1,
                    "shifted_value_by_index": 1,
                    "shifted_value_from_func": 1
                },
                "_DAT_40021004": {
                    "constant": 4,
                    "constant_value": 2,
                    "data": 2,
                    "data_value": 2,
                    "initial_value": 1,
                    "input_value": 1,
                    "input_variable": 1,
                    "shift_value": 1
                },
                "uVar1": {
                    "data": 2,
                    "initial_value": 1,
                    "result": 6,
                    "result_of_fun_08003c44": 1,
                    "return_value": 2,
                    "subfunction_value": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_08003c44"
            ],
            "calling": [
                "FUN_08003da4",
                "FUN_08004204"
            ],
            "code": "\n\n\nuint shift_and_return_result_08003c70(void)\n\n{\n  uint result;\n  \n  result = FUN_08003c44();\n  return result >> (&DAT_0800773c)[(uint)(_DAT_40021004 << 0x12) >> 0x1d];\n}\n\n",
            "current_name": "shift_and_return_result_08003c70",
            "entrypoint": "0x08003c70",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003c70": "shift_and_return_result_08003c70",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003c90": {
            "additional_data": {
                "FUN_08001cc4": {
                    "get_elapsed_time": 2,
                    "get_time": 1
                },
                "FUN_08003c90": {
                    "configure_device": 2,
                    "initialize_hardware": 1,
                    "process_flags": 4,
                    "reverse_and_update_flags": 1,
                    "set_configuration": 1,
                    "update_config": 1,
                    "update_configuration": 8,
                    "update_data": 1,
                    "update_flags": 1,
                    "update_flags_and_registers": 2,
                    "update_parameters": 1,
                    "update_register_values": 1,
                    "update_registers": 1,
                    "update_settings": 6
                },
                "_DAT_40007000": {
                    "device_status": 1,
                    "flag2": 1,
                    "flag3": 1,
                    "flag_register2": 1,
                    "hardware_reg2": 1,
                    "register2": 6
                },
                "_DAT_40021004": {
                    "control_register": 1,
                    "device_control": 1,
                    "flag5": 2,
                    "hardware_reg5": 1,
                    "register5": 6
                },
                "_DAT_4002101c": {
                    "config_flag": 1,
                    "flag1": 2,
                    "flag_register1": 1,
                    "hardware_reg1": 1,
                    "register1": 6
                },
                "_DAT_40021020": {
                    "device_settings": 1,
                    "flag2": 1,
                    "flag3": 1,
                    "flag_register3": 1,
                    "hardware_reg3": 1,
                    "register3": 6
                },
                "_DAT_42420440": {
                    "flag4": 2,
                    "hardware_reg4": 1,
                    "register4": 6,
                    "temp_value": 2
                },
                "bVar5": {
                    "flag": 3,
                    "flag_changed": 1,
                    "flag_set": 1,
                    "flag_updated": 1,
                    "has_flag": 2,
                    "is_bit_set": 3,
                    "is_first_flag_set": 1,
                    "is_flag_set": 13,
                    "is_unset": 1,
                    "need_to_update": 1,
                    "needs_update": 1,
                    "original_flag": 1,
                    "original_flag_state": 1,
                    "should_set_bit": 1
                },
                "iVar3": {
                    "counter1": 4,
                    "first_time": 1,
                    "initial_time": 1,
                    "initial_value": 7,
                    "loop_counter1": 2,
                    "loop_var1": 3,
                    "start_time": 6,
                    "start_value": 5,
                    "start_var": 1,
                    "timestamp1": 1
                },
                "iVar4": {
                    "counter2": 4,
                    "current_time": 8,
                    "current_value": 8,
                    "current_var": 1,
                    "end_value": 1,
                    "loop_counter2": 2,
                    "loop_var2": 3,
                    "new_value": 1,
                    "timestamp2": 1,
                    "updated_value": 2
                },
                "param_1": {
                    "config": 5,
                    "config_params": 3,
                    "configuration": 1,
                    "data": 1,
                    "device_config": 1,
                    "device_settings": 1,
                    "flags": 6,
                    "flags_and_registers": 2,
                    "hardware_config": 1,
                    "parameters": 1,
                    "register_values": 2,
                    "settings": 6
                },
                "uVar1": {
                    "bitwise_flag": 1,
                    "check_flag": 1,
                    "mask": 2,
                    "masked_value1": 1,
                    "old_status": 1,
                    "temp1": 6,
                    "temp_var1": 16,
                    "value1": 2,
                    "var1": 1
                },
                "uVar2": {
                    "masked_value2": 1,
                    "new_status": 1,
                    "old_value": 2,
                    "temp2": 6,
                    "temp_flag": 1,
                    "temp_var2": 16,
                    "updated_flag": 1,
                    "value2": 2,
                    "var2": 1
                }
            },
            "called": [
                "FUN_08001cc4"
            ],
            "calling": [
                "FUN_08001b48"
            ],
            "code": "\n\n\nundefined4 update_configuration_08003c90(uint *settings)\n\n{\n  uint temp_var1;\n  uint temp_var2;\n  int initial_value;\n  int current_value;\n  bool is_flag_set;\n  \n  if ((*settings & 1) != 0) {\n    is_flag_set = (_DAT_4002101c & 0x10000000) == 0;\n    if (is_flag_set) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      initial_value = FUN_08001cc4();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        current_value = FUN_08001cc4();\n        if (100 < (uint)(current_value - initial_value)) {\n          return 3;\n        }\n      }\n    }\n    if (((_DAT_40021020 & 0x300) != 0) && ((_DAT_40021020 & 0x300) != (settings[1] & 0x300))) {\n      temp_var2 = _DAT_40021020 & 0xfffffcff;\n      _DAT_42420440 = 0;\n      temp_var1 = _DAT_40021020 & 1;\n      _DAT_40021020 = temp_var2;\n      if (temp_var1 != 0) {\n        initial_value = FUN_08001cc4();\n        while ((_DAT_40021020 & 2) == 0) {\n          current_value = FUN_08001cc4();\n          if (5000 < (uint)(current_value - initial_value)) {\n            return 3;\n          }\n        }\n      }\n    }\n    _DAT_40021020 = _DAT_40021020 & 0xfffffcff | settings[1];\n    if (is_flag_set) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if ((*settings & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffff3fff | settings[2];\n  }\n  if ((*settings & 0x10) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffbfffff | settings[3];\n  }\n  return 0;\n}\n\n",
            "current_name": "update_configuration_08003c90",
            "entrypoint": "0x08003c90",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003c90": "update_configuration_08003c90",
                "bVar5": "is_flag_set",
                "iVar3": "initial_value",
                "iVar4": "current_value",
                "param_1": "settings",
                "uVar1": "temp_var1",
                "uVar2": "temp_var2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003da4": {
            "additional_data": {
                "FUN_08003da4": {
                    "calculate_delay": 3,
                    "calculate_execution_time": 1,
                    "calculate_frequency": 1,
                    "calculate_function_result": 1,
                    "calculate_function_value": 1,
                    "calculate_output_value": 1,
                    "calculate_parameter": 3,
                    "calculate_parameter_value": 6,
                    "calculate_result": 1,
                    "calculate_return_value": 3,
                    "calculate_value": 9,
                    "calculate_value_based_on_parameter": 1
                },
                "_DAT_40021000": {
                    "data_value_2": 1
                },
                "_DAT_40021004": {
                    "data_value_1": 1
                },
                "_DAT_40021020": {
                    "data_value_3": 1
                },
                "_DAT_40021024": {
                    "data_value_4": 1
                },
                "local_24": {
                    "config_value": 1,
                    "constant": 4,
                    "constant1": 2,
                    "constant5": 1,
                    "constant_1": 1,
                    "constant_5": 1,
                    "constant_value": 8,
                    "constant_value_1": 1,
                    "flag": 2,
                    "flags": 1,
                    "local_variable1": 1,
                    "magic_number": 1,
                    "multiplier": 1,
                    "random_value": 1,
                    "some_value": 2,
                    "some_variable": 1,
                    "temp_value": 1,
                    "value": 1
                },
                "param_1": {
                    "data_size": 1,
                    "input": 6,
                    "input_param": 3,
                    "input_parameter": 1,
                    "input_value": 13,
                    "mode": 1,
                    "parameter": 6
                },
                "uStack_14": {
                    "condition": 1,
                    "condition2": 1,
                    "constant1": 1,
                    "constant4": 3,
                    "constant5": 2,
                    "constant_1": 1,
                    "constant_4": 1,
                    "constant_5": 1,
                    "constant_value2": 1,
                    "constant_value5": 2,
                    "constant_value_5": 1,
                    "factor4": 1,
                    "local_variable5": 1,
                    "magic_number1": 1,
                    "one_more_variable": 1,
                    "setting": 1,
                    "stack_value4": 5,
                    "stack_value_2": 1,
                    "stack_value_4": 1,
                    "stack_variable4": 1,
                    "value": 1,
                    "value4": 1,
                    "value_4": 1
                },
                "uStack_18": {
                    "condition1": 1,
                    "configuration": 1,
                    "constant": 1,
                    "constant2": 1,
                    "constant3": 3,
                    "constant4": 2,
                    "constant_2": 1,
                    "constant_3": 1,
                    "constant_4": 1,
                    "constant_value3": 1,
                    "constant_value4": 2,
                    "constant_value_4": 1,
                    "factor3": 1,
                    "local_variable4": 1,
                    "magic_number2": 1,
                    "stack_value3": 5,
                    "stack_value_3": 1,
                    "stack_variable3": 1,
                    "threshold": 1,
                    "value3": 1,
                    "value_3": 1,
                    "yet_another_variable": 1
                },
                "uStack_1c": {
                    "constant": 1,
                    "constant2": 2,
                    "constant3": 3,
                    "constant_2": 1,
                    "constant_3": 2,
                    "constant_value3": 2,
                    "constant_value4": 1,
                    "constant_value_3": 1,
                    "factor2": 1,
                    "local_variable3": 1,
                    "magic_number3": 1,
                    "offset": 1,
                    "stack_value2": 5,
                    "stack_value_2": 1,
                    "stack_variable2": 1,
                    "value": 1,
                    "value2": 1,
                    "value_2": 1
                },
                "uStack_20": {
                    "another_variable": 1,
                    "bitmask": 1,
                    "constant": 1,
                    "constant1": 2,
                    "constant2": 3,
                    "constant4": 1,
                    "constant_1": 1,
                    "constant_2": 1,
                    "constant_4": 1,
                    "constant_value2": 2,
                    "constant_value5": 1,
                    "constant_value_2": 1,
                    "factor1": 1,
                    "local_variable2": 1,
                    "magic_number4": 1,
                    "multiplier": 2,
                    "stack_value1": 5,
                    "stack_value_1": 2,
                    "stack_variable1": 1,
                    "value1": 1,
                    "value_1": 1
                },
                "uVar1": {
                    "delay": 3,
                    "execution_time": 1,
                    "frequency": 1,
                    "output_value": 2,
                    "result": 21,
                    "return_value": 2
                }
            },
            "called": [
                "FUN_08003c70"
            ],
            "calling": [
                "FUN_08002384",
                "FUN_08001cd0"
            ],
            "code": "\n\n\nuint calculate_value_based_on_parameter_08003da4(int input_value)\n\n{\n  uint result;\n  undefined2 constant_value;\n  undefined4 stack_value1;\n  undefined4 stack_value2;\n  undefined4 stack_value3;\n  undefined4 stack_value4;\n  \n  stack_value4 = 0x10100f0e;\n  stack_value3 = 0xd0c0b0a;\n  stack_value2 = 0x9080706;\n  stack_value1 = 0x5040302;\n  constant_value = 0x201;\n  if (input_value == 2) {\n    result = FUN_08003c70();\n    result = result / ((((_DAT_40021004 << 0x10) >> 0x1e) + 1) * 2);\n  }\n  else if (input_value == 0x10) {\n    if ((_DAT_40021000 & 0x1000000) == 0) {\n      result = 0;\n    }\n    else {\n      if ((_DAT_40021004 & 0x10000) == 0) {\n        result = 4000000;\n      }\n      else {\n        result = 8000000 / *(byte *)((int)&constant_value - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n      }\n      result = result * *(byte *)((int)&stack_value1 + ((_DAT_40021004 << 10) >> 0x1c));\n      if ((_DAT_40021004 & 0x400000) == 0) {\n        result = (result * 2) / 3;\n      }\n    }\n  }\n  else if (input_value == 1) {\n    if ((_DAT_40021020 & 0x302) == 0x102) {\n      result = 0x8000;\n    }\n    else if (((_DAT_40021020 & 0x300) == 0x200) && ((_DAT_40021024 & 2) != 0)) {\n      result = 32000;\n    }\n    else if ((_DAT_40021020 & 0x300) == 0x300) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        result = 0;\n      }\n      else {\n        result = 0xf424;\n      }\n    }\n    else {\n      result = 0;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "current_name": "calculate_value_based_on_parameter_08003da4",
            "entrypoint": "0x08003da4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003da4": "calculate_value_based_on_parameter_08003da4",
                "local_24": "constant_value",
                "param_1": "input_value",
                "uStack_14": "stack_value4",
                "uStack_18": "stack_value3",
                "uStack_1c": "stack_value2",
                "uStack_20": "stack_value1",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003ea0": {
            "additional_data": {
                "DAT_00000011": {
                    "flag": 1
                },
                "DAT_40010414": {
                    "constant_value": 2,
                    "flag_value": 1,
                    "memory_address": 1
                },
                "DAT_40010414_2": {
                    "flag_constant": 1
                },
                "FUN_08003ea0": {
                    "check_and_initialize_flags": 2,
                    "check_and_set_flag": 1,
                    "initialize_data": 11,
                    "initialize_flags": 3,
                    "initialize_memory": 5,
                    "initialize_parameters": 1,
                    "initialize_program": 1,
                    "initialize_variable": 1,
                    "set_flags_and_value": 1,
                    "set_memory_attributes": 1,
                    "set_memory_protection_status": 1,
                    "update_data": 2,
                    "update_settings": 1
                },
                "FUN_08004d18": {
                    "execute_additional_action": 1,
                    "execute_post_initialization": 1,
                    "execute_reverse": 1,
                    "notify_update_settings": 1,
                    "perform_action": 5,
                    "perform_additional_action": 2,
                    "perform_additional_operation": 1,
                    "perform_additional_processing": 1,
                    "perform_additional_task": 2,
                    "perform_cleanup": 2,
                    "perform_extra_action": 1,
                    "perform_initialization": 1,
                    "perform_reset": 1,
                    "reset_data": 2,
                    "reset_flag": 1,
                    "reset_flag2": 1,
                    "reset_memory": 1,
                    "reset_memory_status": 1,
                    "reverse_bit": 1,
                    "reverse_data": 1
                },
                "FUN_08004d19": {
                    "perform_reverse": 1
                },
                "PTR_08003ea0": {
                    "pointer": 1,
                    "pointer_to_data": 1
                },
                "PTR_40010414": {
                    "flag_pointer": 1,
                    "memory_value": 1
                },
                "PTR_xxxxxxx": {
                    "xxxxxxx_ptr": 1
                },
                "_DAT_40010414": {
                    "constant": 1,
                    "constant_value": 2,
                    "data_address": 1,
                    "data_constant": 1,
                    "data_offset": 1,
                    "global_variable": 1,
                    "memory_address": 1,
                    "memory_size": 1,
                    "output_value": 1
                },
                "param_1": {
                    "data": 7,
                    "data_pointer": 4,
                    "data_ptr": 2,
                    "flags": 3,
                    "flags_ptr": 1,
                    "flags_value_pair": 1,
                    "input_params": 1,
                    "memory": 2,
                    "memory_block": 1,
                    "memory_pointer": 3,
                    "memory_status": 1,
                    "param": 1,
                    "parameters": 1,
                    "pointer": 1,
                    "settings_pointer": 1,
                    "variable_pointer": 1
                }
            },
            "called": [
                "FUN_08004d18"
            ],
            "calling": [],
            "code": "\n\n\nvoid initialize_data_08003ea0(uint **data)\n\n{\n  if (((**data & 2) != 0) && (((*data)[1] & 2) != 0)) {\n    FUN_08004d18();\n    (*data)[1] = 0xfffffffd;\n  }\n  _DAT_40010414 = 0x20000;\n  *(undefined *)((int)data + 0x11) = 1;\n  return;\n}\n\n",
            "current_name": "initialize_data_08003ea0",
            "entrypoint": "0x08003ea0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003ea0": "initialize_data_08003ea0",
                "param_1": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003ed8": {
            "additional_data": {
                "FUN_08003ed8": {
                    "initialize_data": 1,
                    "set_flag": 2,
                    "set_flag_and_call_function": 3,
                    "set_flag_and_call_subfunctions": 1,
                    "set_flag_and_invoke_function": 1,
                    "set_flags_and_execute_function": 1,
                    "update_and_reset_flags": 2,
                    "update_data": 6,
                    "update_data_and_call_another_function": 1,
                    "update_data_and_call_function": 1,
                    "update_flag_and_call_function": 1,
                    "update_param": 1,
                    "update_param_and_call_function": 1,
                    "update_param_value": 1,
                    "update_parameter": 2,
                    "update_parameter_and_call_function": 1,
                    "update_parameters": 1,
                    "update_status": 1,
                    "update_value": 1,
                    "update_value_and_call_function": 1,
                    "update_value_and_call_sub_function": 1
                },
                "FUN_08004b34": {
                    "call_another_function": 1,
                    "call_sub_function": 6,
                    "execute_sub_function": 1,
                    "invoke_sub_function": 1,
                    "perform_action": 2,
                    "perform_additional_checks": 1,
                    "perform_additional_task": 1,
                    "perform_some_operation": 1,
                    "perform_special_operation": 1,
                    "perform_sub_function": 1,
                    "process_data": 8,
                    "sub_function": 2
                },
                "param_1": {
                    "data": 4,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "data_to_update": 1,
                    "input": 2,
                    "input_array": 3,
                    "input_param": 1,
                    "input_params": 2,
                    "param": 3,
                    "param_array": 1,
                    "param_list": 1,
                    "param_ptr": 1,
                    "parameter": 2,
                    "parameters": 5,
                    "params": 1,
                    "pointers_array": 1
                },
                "puVar1": {
                    "current_data_ptr": 1,
                    "current_element": 1,
                    "current_param": 3,
                    "current_pointer": 1,
                    "data": 1,
                    "data_ptr": 1,
                    "param": 1,
                    "pointer": 9,
                    "pointer1": 1,
                    "pointer_to_data": 1,
                    "pointer_var": 1,
                    "ptr": 3,
                    "ptr1": 1,
                    "ptr_data": 1,
                    "ptr_to_param": 1,
                    "temp_ptr": 1,
                    "temp_var": 1,
                    "value_pointer": 1,
                    "var1": 1
                }
            },
            "called": [
                "FUN_08004b34"
            ],
            "calling": [
                "FUN_08004b3c"
            ],
            "code": "\nvoid update_data_and_call_another_function_08003ed8(uint **parameters)\n\n{\n  uint *pointer;\n  \n  *(undefined *)((int)parameters + 0x3d) = 2;\n  pointer = *parameters;\n  if ((pointer[8] & 0x1111) == 0) {\n    if ((pointer[8] & 0x444) == 0) {\n      *pointer = *pointer & 0xfffffffe;\n    }\n  }\n  FUN_08004b34(parameters);\n  *(undefined *)((int)parameters + 0x3d) = 0;\n  *(undefined *)(parameters + 0xf) = 0;\n  return;\n}\n\n",
            "current_name": "update_data_and_call_another_function_08003ed8",
            "entrypoint": "0x08003ed8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003ed8": "update_data_and_call_another_function_08003ed8",
                "param_1": "parameters",
                "puVar1": "pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003f12": {
            "called": [],
            "calling": [
                "FUN_08003f18"
            ],
            "code": "\nvoid FUNC_08003f12(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08003f12",
            "entrypoint": "0x08003f12",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08003f12": "FUNC_08003f12"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08003f14": {
            "called": [],
            "calling": [
                "FUN_08003f18"
            ],
            "code": "\nvoid FUNC_08003f14(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08003f14",
            "entrypoint": "0x08003f14",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08003f14": "FUNC_08003f14"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08003f16": {
            "called": [],
            "calling": [
                "FUN_08003f18"
            ],
            "code": "\nvoid FUNC_08003f16(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08003f16",
            "entrypoint": "0x08003f16",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08003f16": "FUNC_08003f16"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08003f18": {
            "additional_data": {
                "FUNC_08003f12": {
                    "check_and_update_flag": 1,
                    "condition1_action": 1,
                    "do_operation1": 1,
                    "execute_action": 1,
                    "execute_action1": 1,
                    "execute_if_flag_set": 1,
                    "handle_case1": 4,
                    "handle_case2": 1,
                    "handle_case_a": 1,
                    "handle_condition1": 1,
                    "handle_condition_1": 1,
                    "handle_event_condition1": 1,
                    "handle_flag0x2": 1,
                    "handle_flag1": 2,
                    "handle_flag_case1": 1,
                    "handle_value1": 1,
                    "process_condition": 1,
                    "process_option_group_a": 1,
                    "reverse_bitwise_checks1": 1,
                    "reversed_case1": 1
                },
                "FUNC_08003f14": {
                    "common_action": 1,
                    "do_operation2": 1,
                    "execute_action2": 1,
                    "execute_if_flag_not_set": 1,
                    "execute_task_a": 1,
                    "finalize_operation": 1,
                    "handle_case2": 4,
                    "handle_case_b": 1,
                    "handle_condition2": 1,
                    "handle_event_condition2": 1,
                    "handle_flag2": 1,
                    "handle_flag_case2": 1,
                    "perform_action": 2,
                    "perform_action1": 1,
                    "perform_action_1": 1,
                    "perform_operation": 1,
                    "process_action": 1,
                    "process_option_group_b": 1,
                    "process_value1": 1,
                    "reversed_case2": 1
                },
                "FUNC_08003f16": {
                    "condition3_action": 1,
                    "do_operation4": 1,
                    "execute_action5": 1,
                    "execute_flag_check2": 1,
                    "execute_function2": 1,
                    "execute_function_b": 1,
                    "execute_process": 1,
                    "execute_task_c": 1,
                    "handle_case3": 1,
                    "handle_case4": 3,
                    "handle_case_d": 1,
                    "handle_condition4": 1,
                    "handle_event_condition4": 1,
                    "handle_flag0x40": 1,
                    "handle_flag64": 1,
                    "perform_action3": 1,
                    "perform_action4": 1,
                    "perform_action_4": 1,
                    "perform_operation2": 1,
                    "process_option_group_d": 1,
                    "process_value2": 1,
                    "reversed_case4": 1
                },
                "FUNC_08004178": {
                    "condition5_action": 1,
                    "do_operation5": 1,
                    "execute_action6": 1,
                    "execute_flag_check3": 1,
                    "execute_function3": 1,
                    "execute_function_c": 1,
                    "execute_task_d": 1,
                    "handle_case4": 1,
                    "handle_case5": 1,
                    "handle_case6": 1,
                    "handle_case_e": 1,
                    "handle_condition5": 1,
                    "handle_event_condition6": 1,
                    "handle_flag0x20": 1,
                    "handle_flag32": 1,
                    "invoke_function_c": 1,
                    "perform_action5": 2,
                    "perform_action_5": 1,
                    "perform_operation3": 1,
                    "process_data": 1,
                    "process_data2": 1,
                    "reversed_case5": 1,
                    "special_function3": 1
                },
                "FUNC_0800417a": {
                    "condition2_action": 1,
                    "do_operation3": 1,
                    "execute_action4": 1,
                    "execute_flag_check1": 1,
                    "execute_function1": 1,
                    "execute_function_a": 1,
                    "execute_task_b": 1,
                    "handle_case3": 3,
                    "handle_case_c": 1,
                    "handle_condition3": 1,
                    "handle_event": 1,
                    "handle_event_condition3": 1,
                    "handle_flag0x80": 1,
                    "handle_flag128": 1,
                    "handle_value2": 1,
                    "perform_action2": 1,
                    "perform_action3": 1,
                    "perform_action_3": 1,
                    "perform_operation1": 1,
                    "process_option_group_c": 1,
                    "reverse_case": 1,
                    "reversed_case3": 1
                },
                "FUNC_08004e12": {
                    "update_flags": 1
                },
                "FUN_08003f18": {
                    "check_and_execute_actions": 1,
                    "check_and_process_flags": 1,
                    "check_and_update_flags": 1,
                    "execute_function": 1,
                    "handle_event": 1,
                    "process_data": 10,
                    "process_flags": 8,
                    "process_function": 2,
                    "process_input": 1,
                    "process_parameters": 1,
                    "process_params": 1,
                    "update_flags_and_perform_actions": 1,
                    "update_settings": 1
                },
                "FUN_08004df8": {
                    "check_condition": 1,
                    "condition4_action": 1,
                    "do_something": 1,
                    "function_c": 1,
                    "handle_condition_2": 1,
                    "handle_flag3": 1,
                    "initialize_1": 1,
                    "initialize_data": 2,
                    "initialize_function": 1,
                    "initialize_param": 1,
                    "invoke_function_a": 1,
                    "perform_action": 1,
                    "perform_action1": 1,
                    "perform_operation_a": 1,
                    "perform_task": 1,
                    "process_case": 1,
                    "process_condition1": 1,
                    "process_data_case": 1,
                    "process_event": 1,
                    "reinitialize_data": 1,
                    "reverse_bitwise_checks2": 1,
                    "reverse_data1": 1,
                    "special_function1": 1
                },
                "FUN_08004e12": {
                    "do_another_thing": 1,
                    "execute_action3": 1,
                    "function_a": 1,
                    "function_d": 1,
                    "handle_case5": 1,
                    "handle_event_condition5": 1,
                    "handle_flag0x1": 1,
                    "handle_flag_len4": 1,
                    "initialize_2": 1,
                    "invoke_function_b": 1,
                    "perform_action2": 1,
                    "perform_action4": 1,
                    "perform_action_2": 1,
                    "perform_operation_b": 1,
                    "process_condition2": 1,
                    "reverse_data": 4,
                    "reverse_data2": 1,
                    "reversing_action": 1,
                    "special_function2": 1,
                    "update_configuration": 1
                },
                "iVar1": {
                    "current_flag": 3,
                    "current_value": 2,
                    "data_value": 2,
                    "event_ptr": 1,
                    "param_value": 2,
                    "parameter_value": 1,
                    "pointer": 1,
                    "ptr": 3,
                    "ptr_var": 1,
                    "temp1": 1,
                    "temp_var": 1,
                    "value": 9,
                    "value1": 2
                },
                "param_1": {
                    "action_data": 1,
                    "data": 9,
                    "data_pointer": 1,
                    "event_data": 1,
                    "flags": 6,
                    "flags_array": 1,
                    "function_params": 1,
                    "input": 2,
                    "input_data": 1,
                    "input_list": 1,
                    "input_params": 1,
                    "param": 1,
                    "parameters": 1,
                    "settings": 1
                }
            },
            "called": [
                "FUN_08003f12",
                "FUN_08003f14",
                "FUN_0800417a",
                "FUN_08003f16",
                "FUN_08004df8",
                "FUN_08004e12",
                "FUN_08004178"
            ],
            "calling": [
                "FUN_08004e20"
            ],
            "code": "\nvoid process_data_08003f18(int *data)\n\n{\n  int value;\n  \n  value = *data;\n  if (((*(uint *)(value + 0x10) & 2) != 0) && ((*(uint *)(value + 0xc) & 2) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffd;\n    *(undefined *)(data + 7) = 1;\n    if ((*(uint *)(*data + 0x18) & 3) == 0) {\n      FUN_08004df8();\n      FUNC_08003f14(data);\n    }\n    else {\n      FUNC_08003f12();\n    }\n    *(undefined *)(data + 7) = 0;\n  }\n  value = *data;\n  if (((*(uint *)(value + 0x10) & 4) != 0) && ((*(uint *)(value + 0xc) & 4) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffb;\n    *(undefined *)(data + 7) = 2;\n    if ((*(uint *)(*data + 0x18) & 0x300) == 0) {\n      FUN_08004df8(data);\n      FUNC_08003f14(data);\n    }\n    else {\n      FUNC_08003f12(data);\n    }\n    *(undefined *)(data + 7) = 0;\n  }\n  value = *data;\n  if (((*(uint *)(value + 0x10) & 8) != 0) && ((*(uint *)(value + 0xc) & 8) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffff7;\n    *(undefined *)(data + 7) = 4;\n    if ((*(uint *)(*data + 0x1c) & 3) == 0) {\n      FUN_08004df8(data);\n      FUNC_08003f14(data);\n    }\n    else {\n      FUNC_08003f12(data);\n    }\n    *(undefined *)(data + 7) = 0;\n  }\n  value = *data;\n  if (((*(uint *)(value + 0x10) & 0x10) != 0) && ((*(uint *)(value + 0xc) & 0x10) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffef;\n    *(undefined *)(data + 7) = 8;\n    if ((*(uint *)(*data + 0x1c) & 0x300) == 0) {\n      FUN_08004df8(data);\n      FUNC_08003f14(data);\n    }\n    else {\n      FUNC_08003f12(data);\n    }\n    *(undefined *)(data + 7) = 0;\n  }\n  value = *data;\n  if (((*(uint *)(value + 0x10) & 1) != 0) && ((*(uint *)(value + 0xc) & 1) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffe;\n    FUN_08004e12(data);\n  }\n  value = *data;\n  if (((*(uint *)(value + 0x10) & 0x80) != 0) && ((*(uint *)(value + 0xc) & 0x80) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffff7f;\n    FUNC_0800417a(data);\n  }\n  value = *data;\n  if (((*(uint *)(value + 0x10) & 0x40) != 0) && ((*(uint *)(value + 0xc) & 0x40) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffbf;\n    FUNC_08003f16(data);\n  }\n  value = *data;\n  if (((*(uint *)(value + 0x10) & 0x20) != 0) && ((*(uint *)(value + 0xc) & 0x20) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffdf;\n    FUNC_08004178(data);\n  }\n  return;\n}\n\n",
            "current_name": "process_data_08003f18",
            "entrypoint": "0x08003f18",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003f18": "process_data_08003f18",
                "iVar1": "value",
                "param_1": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004092": {
            "additional_data": {
                "FUN_08004092": {
                    "set_bit_at_position": 1,
                    "toggle_bit_value": 1,
                    "update_bit": 6,
                    "update_bit_in_uint": 1,
                    "update_bit_in_value": 1,
                    "update_bit_in_variable": 1,
                    "update_bit_value": 6,
                    "update_bits": 2,
                    "update_bitwise": 2,
                    "update_bitwise_and_shift": 1,
                    "update_bitwise_operation": 1,
                    "update_bitwise_value": 5,
                    "update_flag": 1,
                    "update_value": 2
                },
                "param_1": {
                    "address": 3,
                    "base_address": 17,
                    "data": 4,
                    "data_ptr": 2,
                    "memory_address": 1,
                    "target": 1,
                    "uint_ptr": 1,
                    "value_ptr": 1,
                    "variable_address": 1
                },
                "param_2": {
                    "bit_index": 3,
                    "bit_offset": 1,
                    "bit_position": 27
                },
                "param_3": {
                    "bit_value": 10,
                    "new_bit_value": 1,
                    "new_value": 17,
                    "value": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_080040b0"
            ],
            "code": "\nvoid update_bit_in_value_08004092(int base_address,uint bit_position,int new_value)\n\n{\n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & ~(1 << (bit_position & 0xff));\n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) | new_value << (bit_position & 0xff);\n  return;\n}\n\n",
            "current_name": "update_bit_in_value_08004092",
            "entrypoint": "0x08004092",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004092": "update_bit_in_value_08004092",
                "param_1": "base_address",
                "param_2": "bit_position",
                "param_3": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080040b0": {
            "additional_data": {
                "0x40012c00": {
                    "constant_value": 1
                },
                "8": {
                    "index_value": 1
                },
                "FUN_08004092": {
                    "handle_binary_function": 1,
                    "initialize_value": 1,
                    "process_data": 5,
                    "process_memory": 1,
                    "set_parameters_and_call_function": 1,
                    "sub_function": 1
                },
                "FUN_080040b0": {
                    "improve_code_and_set_flag": 1,
                    "initialize_data": 3,
                    "initialize_flags": 5,
                    "initialize_flags_and_return_zero": 1,
                    "initialize_memory": 3,
                    "modify_and_flag": 1,
                    "modify_data": 1,
                    "sanitize_data": 1,
                    "set_flags_and_return_zero": 1,
                    "update_data": 1,
                    "update_flags": 1,
                    "update_flags_and_set_bit": 2,
                    "update_flags_and_set_indicator": 1,
                    "update_flags_and_status": 2,
                    "update_memory": 2
                },
                "PTR_FUN_08004092": {
                    "sub_function": 1
                },
                "param_1": {
                    "base_pointer": 1,
                    "current_data": 1,
                    "data": 3,
                    "data_array": 1,
                    "data_pointer": 4,
                    "flags": 1,
                    "input_array": 1,
                    "input_data": 1,
                    "input_pointer": 3,
                    "input_ptr": 1,
                    "memory": 3,
                    "memory_ptr": 1,
                    "param1": 1,
                    "param_1": 1,
                    "parameter1": 1,
                    "pointer": 1,
                    "pointer_array": 1,
                    "pointer_to_pointer": 1,
                    "ptr": 1,
                    "ptr_data": 1,
                    "ptr_param": 1
                },
                "param_2": {
                    "additional_info": 1,
                    "input_param": 1,
                    "input_value": 1,
                    "param": 5,
                    "param2": 2,
                    "param_2": 1,
                    "parameter": 2,
                    "parameter2": 1,
                    "status": 1,
                    "value": 16
                },
                "param_3": {
                    "counter": 1,
                    "flag": 2,
                    "index": 1,
                    "offset": 2,
                    "param3": 1,
                    "param_3": 1,
                    "start_idx": 1,
                    "unused": 1,
                    "unused_parameter": 1
                },
                "puVar1": {
                    "array_ptr": 1,
                    "current_data": 1,
                    "current_data_pointer": 2,
                    "current_memory": 1,
                    "current_pointer": 3,
                    "current_ptr": 1,
                    "data": 1,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "input_pointer": 1,
                    "memory_ptr": 1,
                    "pointer": 2,
                    "pointer_var1": 1,
                    "ptr": 4,
                    "ptr_data1": 1,
                    "ptr_value": 1,
                    "ptr_var": 1,
                    "temp_pointer": 3,
                    "temp_ptr": 3
                },
                "uRam40012c00": {
                    "constant1": 3,
                    "constant_ptr": 1,
                    "constant_ptr_1": 1,
                    "data_constant1": 1
                },
                "uRam40012c20": {
                    "constant2": 3,
                    "constant_ptr_2": 1,
                    "data_constant2": 1,
                    "flag1": 1,
                    "ram_value_1": 1,
                    "variable1": 1
                },
                "uRam40012c44": {
                    "constant3": 1,
                    "constant_ptr_3": 1,
                    "data_variable": 1,
                    "flag2": 1,
                    "flag_variable": 1,
                    "flags": 1,
                    "ram_value_2": 1,
                    "variable2": 1
                }
            },
            "called": [
                "FUN_08004092"
            ],
            "calling": [
                "FUN_08004b3c"
            ],
            "code": "\nundefined4 initialize_flags_and_return_zero_080040b0(uint **data_pointer,undefined4 value)\n\n{\n  uint *ptr;\n  \n  FUN_08004092(*data_pointer,value,0);\n  if (((*data_pointer == (uint *)0x40012c00) && ((constant2 & 0x1111) == 0)) &&\n     ((constant2 & 0x444) == 0)) {\n    constant_ptr_3 = constant_ptr_3 & 0xffff7fff;\n  }\n  ptr = *data_pointer;\n  if (((ptr[8] & 0x1111) == 0) && ((ptr[8] & 0x444) == 0)) {\n    *ptr = *ptr & 0xfffffffe;\n  }\n  *(undefined *)((int)data_pointer + 0x3d) = 1;\n  return 0;\n}\n\n",
            "current_name": "initialize_flags_and_return_zero_080040b0",
            "entrypoint": "0x080040b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080040b0": "initialize_flags_and_return_zero_080040b0",
                "param_1": "data_pointer",
                "param_2": "value",
                "puVar1": "ptr",
                "uRam40012c20": "constant2",
                "uRam40012c44": "constant_ptr_3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004110": {
            "additional_data": {
                "4": {
                    "bit_mask": 1
                },
                "FUN_08004110": {
                    "apply_bitwise_operations": 1,
                    "set_bits": 1,
                    "update_bit_field_value": 1,
                    "update_bit_value": 6,
                    "update_bitmask": 1,
                    "update_bits": 3,
                    "update_bits_of_uint": 1,
                    "update_bits_on_uint": 1,
                    "update_bitwise_flag": 1,
                    "update_bitwise_operation": 1,
                    "update_bitwise_value": 2,
                    "update_config": 1,
                    "update_data": 1,
                    "update_flag": 2,
                    "update_flags_based_on_param": 1,
                    "update_memory_value": 2,
                    "update_parameter_value": 1,
                    "update_registry_value": 1,
                    "update_value": 2,
                    "update_value_with_bit_mask": 1
                },
                "param_1": {
                    "address": 3,
                    "base_address": 20,
                    "config": 1,
                    "data": 1,
                    "data_address": 1,
                    "input_address": 1,
                    "memory_address": 1,
                    "object_address": 2,
                    "registry_address": 1
                },
                "param_2": {
                    "bit_mask": 1,
                    "bit_offset": 8,
                    "bit_position": 21,
                    "position": 1
                },
                "param_3": {
                    "bit_value": 8,
                    "new_value": 20,
                    "value": 1,
                    "value_to_set": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_0800412c"
            ],
            "code": "\nvoid update_value_with_bit_mask_08004110(int base_address,uint bit_position,int new_value)\n\n{\n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & ~(4 << (bit_position & 0xff));\n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) | new_value << (bit_position & 0xff);\n  return;\n}\n\n",
            "current_name": "update_value_with_bit_mask_08004110",
            "entrypoint": "0x08004110",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004110": "update_value_with_bit_mask_08004110",
                "param_1": "base_address",
                "param_2": "bit_position",
                "param_3": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800412c": {
            "additional_data": {
                "0x11": {
                    "value": 1
                },
                "0xFFFF7FFF": {
                    "bit_mask1": 1
                },
                "0xFFFFFFFE": {
                    "bit_mask2": 1
                },
                "FUN_08004110": {
                    "apply_changes": 1,
                    "internal_function": 1,
                    "modify_data": 1,
                    "modify_flags": 1,
                    "modify_value": 1,
                    "process_data": 2,
                    "sub_function": 1
                },
                "FUN_0800412c": {
                    "check_and_modify_values": 1,
                    "check_and_update_data": 1,
                    "clear_flags_and_bits": 1,
                    "improve_binary_analysis": 1,
                    "set_flags_and_values": 1,
                    "update_array": 1,
                    "update_data": 1,
                    "update_data_structure": 1,
                    "update_flag_values": 2,
                    "update_flags_and_values": 5,
                    "update_permissions": 1,
                    "update_value_flags": 1,
                    "update_values": 1
                },
                "param_1": {
                    "array": 1,
                    "array_pointer": 1,
                    "array_ptr": 1,
                    "binary_parameter": 1,
                    "data": 6,
                    "data_array": 2,
                    "data_ptr": 2,
                    "flag_array_ptr": 1,
                    "input_array": 2,
                    "input_data": 1,
                    "input_ptr": 1,
                    "param1": 1,
                    "param_1": 1,
                    "param_array": 4,
                    "parameter_1": 1,
                    "parameter_array": 1,
                    "permissions_pointer": 1,
                    "pointer_array": 1,
                    "values": 1,
                    "var1": 1
                },
                "param_1_08004110": {
                    "data_to_modify": 1,
                    "value": 1
                },
                "param_2": {
                    "additional_parameter": 1,
                    "flag": 1,
                    "num_flags": 1,
                    "param": 5,
                    "param2": 1,
                    "param_2": 1,
                    "param_value": 5,
                    "parameter_2": 1,
                    "parameter_value": 1,
                    "permission_flag": 1,
                    "size": 1,
                    "value": 11,
                    "var2": 1
                },
                "param_2_08004110": {
                    "size": 1,
                    "value_to_modify": 1
                },
                "param_3": {
                    "flag_index": 1,
                    "index": 2,
                    "param3": 2,
                    "param_3": 1,
                    "unused": 1,
                    "var3": 1
                },
                "param_3_08004110": {
                    "flag": 1,
                    "offset": 1
                },
                "param_array": {
                    "array": 1
                },
                "param_value": {
                    "value": 1
                },
                "parameter_1": {
                    "parameter_1": 1
                },
                "puVar1": {
                    "array": 1,
                    "array_ptr": 2,
                    "current_array": 2,
                    "current_array_ptr": 1,
                    "current_element": 1,
                    "current_permissions": 1,
                    "current_ptr": 2,
                    "data": 2,
                    "data_pointer": 1,
                    "flag_array": 1,
                    "pointer": 6,
                    "pointer1": 2,
                    "pointer_to_binary": 1,
                    "pointer_to_param1": 1,
                    "pointer_var": 1,
                    "ptr": 1,
                    "ptr_to_data": 1,
                    "ptr_to_param": 1,
                    "temp_var": 1,
                    "value": 1,
                    "values_pointer": 1
                },
                "puVar1_0800412c": {
                    "ptr_to_data_2": 1
                }
            },
            "called": [
                "FUN_08004110"
            ],
            "calling": [
                "FUN_08004b3c"
            ],
            "code": "\nundefined4 update_flags_and_values_0800412c(uint **data,undefined4 value)\n\n{\n  uint *pointer;\n  \n  FUN_08004110(*data,value,0);\n  pointer = *data;\n  if (((pointer[8] & 0x1111) == 0) && ((pointer[8] & 0x444) == 0)) {\n    pointer[0x11] = pointer[0x11] & 0xffff7fff;\n  }\n  pointer = *data;\n  if (((pointer[8] & 0x1111) == 0) && ((pointer[8] & 0x444) == 0)) {\n    *pointer = *pointer & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "current_name": "update_flags_and_values_0800412c",
            "entrypoint": "0x0800412c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800412c": "update_flags_and_values_0800412c",
                "param_1": "data",
                "param_2": "value",
                "puVar1": "pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004178": {
            "called": [],
            "calling": [
                "FUN_08003f18"
            ],
            "code": "\nvoid FUNC_08004178(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08004178",
            "entrypoint": "0x08004178",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08004178": "FUNC_08004178"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800417a": {
            "called": [],
            "calling": [
                "FUN_08003f18"
            ],
            "code": "\nvoid FUNC_0800417a(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800417a",
            "entrypoint": "0x0800417a",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800417a": "FUNC_0800417a"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800417c": {
            "additional_data": {
                "0x14": {
                    "flag2": 1,
                    "mask2": 2,
                    "mask2_offset": 3,
                    "offset2": 1,
                    "value2_offset": 1
                },
                "0x3a": {
                    "char_pos": 1
                },
                "0xc": {
                    "flag1": 1,
                    "mask1": 2,
                    "mask1_offset": 3,
                    "offset1": 1,
                    "value1_offset": 1
                },
                "0xfffffedf": {
                    "mask1": 1
                },
                "0xfffffffe": {
                    "mask2": 1
                },
                "FUN_0800417c": {
                    "clear_bits": 2,
                    "clear_bits_and_set_flag": 2,
                    "clear_bits_and_set_space": 1,
                    "clear_bitwise_flags": 1,
                    "clear_flags": 5,
                    "clear_flags_and_set_space_char": 1,
                    "clear_flags_and_set_space_character": 1,
                    "mask_bits_and_set_char": 1,
                    "set_bitmask_and_value": 1,
                    "update_configuration": 1,
                    "update_data": 1,
                    "update_flags": 3,
                    "update_flags_and_character": 1,
                    "update_flags_and_value": 2,
                    "update_flags_and_values": 4,
                    "update_memory": 1,
                    "update_memory_values": 1,
                    "update_parameters": 1,
                    "update_values": 1
                },
                "param_1": {
                    "arg1": 1,
                    "array": 3,
                    "array_pointer": 1,
                    "configuration": 1,
                    "data": 2,
                    "data_pointer": 2,
                    "data_ptr": 2,
                    "flags": 6,
                    "input_array": 2,
                    "input_data": 1,
                    "input_pointer": 1,
                    "input_ptr": 1,
                    "memory_address": 4,
                    "parameters": 1,
                    "ptr": 1,
                    "values": 1
                },
                "undefined": {
                    "unknown_type": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080046b8"
            ],
            "code": "\nvoid update_flags_and_values_0800417c(int *flags)\n\n{\n  *(uint *)(*flags + 0xc) = *(uint *)(*flags + 0xc) & 0xfffffedf;\n  *(uint *)(*flags + 0x14) = *(uint *)(*flags + 0x14) & 0xfffffffe;\n  *(unknown_type *)((int)flags + 0x3a) = 0x20;\n  return;\n}\n\n",
            "current_name": "update_flags_and_values_0800417c",
            "entrypoint": "0x0800417c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800417c": "update_flags_and_values_0800417c",
                "param_1": "flags",
                "undefined": "unknown_type"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004198": {
            "additional_data": {
                "FUN_08004198": {
                    "check_and_update": 1,
                    "decode_and_update": 1,
                    "decode_and_update_value": 2,
                    "decode_byte": 1,
                    "decode_data": 4,
                    "extract_and_modify": 1,
                    "extract_data": 2,
                    "extract_parameter_value": 1,
                    "extract_value": 1,
                    "parse_data": 2,
                    "parse_input": 1,
                    "process_data": 11,
                    "process_input": 2,
                    "update_data": 1
                },
                "param_1": {
                    "data": 11,
                    "data_arr": 1,
                    "data_array": 3,
                    "data_pointer": 1,
                    "data_ptr": 5,
                    "input": 4,
                    "input_array": 1,
                    "input_buffer": 1,
                    "input_data": 2,
                    "parameter_list": 1,
                    "value_array": 1
                },
                "pbVar2": {
                    "byte_array": 1,
                    "byte_pointer": 7,
                    "byte_ptr": 14,
                    "current_byte": 4,
                    "data_ptr": 3
                },
                "sVar1": {
                    "count": 6,
                    "counter": 4,
                    "iteration_count": 1,
                    "loop_counter": 1,
                    "remaining_attempts": 1,
                    "remaining_count": 1,
                    "remaining_elements": 1,
                    "remaining_iterations": 9,
                    "remaining_loops": 2,
                    "remaining_steps": 2,
                    "remaining_value_count": 1,
                    "updated_counter": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080046b8"
            ],
            "code": "\nundefined4 process_data_08004198(int *data)\n\n{\n  short remaining_iterations;\n  byte *byte_ptr;\n  \n  if (*(char *)((int)data + 0x39) != '!') {\n    return 2;\n  }\n  if (data[2] == 0x1000) {\n    *(uint *)(*data + 4) = *(ushort *)data[8] & 0x1ff;\n    if (data[4] == 0) {\n      data[8] = data[8] + 2;\n    }\n    else {\n      data[8] = data[8] + 1;\n    }\n  }\n  else {\n    byte_ptr = (byte *)data[8];\n    data[8] = (int)(byte_ptr + 1);\n    *(uint *)(*data + 4) = (uint)*byte_ptr;\n  }\n  remaining_iterations = *(short *)((int)data + 0x26) + -1;\n  *(short *)((int)data + 0x26) = remaining_iterations;\n  if (remaining_iterations == 0) {\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xffffff7f;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x40;\n    return 0;\n  }\n  return 0;\n}\n\n",
            "current_name": "process_data_08004198",
            "entrypoint": "0x08004198",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004198": "process_data_08004198",
                "param_1": "data",
                "pbVar2": "byte_ptr",
                "sVar1": "remaining_iterations"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004204": {
            "additional_data": {
                "FUD_08003c50": {
                    "calculate_value1": 1
                },
                "FUD_08003c70": {
                    "calculate_value2": 1
                },
                "FUN_08003c50": {
                    "calculate_value1": 1
                },
                "FUN_08003c70": {
                    "calculate_value2": 1
                },
                "FUN_08004204": {
                    "calculate_and_set_values": 1,
                    "calculate_and_store_value": 1,
                    "calculate_and_update_value": 2,
                    "calculate_checksum": 1,
                    "calculate_function_value": 1,
                    "calculate_new_values": 2,
                    "calculate_result": 5,
                    "calculate_score": 1,
                    "calculate_value": 1,
                    "calculate_values": 6,
                    "calculate_values_and_update": 1,
                    "update_config": 1,
                    "update_configuration": 1,
                    "update_parameters": 3,
                    "update_values": 2,
                    "update_variable": 1
                },
                "iRam40013808": {
                    "computed_value": 1,
                    "memory_address": 1,
                    "output": 1,
                    "output_value": 1,
                    "updated_value": 1
                },
                "iVar1": {
                    "calculation1": 1,
                    "calculation_result1": 1,
                    "result1": 21,
                    "value1": 5,
                    "value1_1": 1,
                    "value_1": 2
                },
                "iVar10": {
                    "base_address": 2,
                    "calculation10": 1,
                    "input_address": 1,
                    "input_pointer": 2,
                    "input_ptr": 1,
                    "result10": 18,
                    "value10": 4,
                    "value1_2": 1,
                    "value_10": 1
                },
                "iVar2": {
                    "calculation2": 1,
                    "calculation_result2": 1,
                    "result2": 21,
                    "value1_3": 1,
                    "value2": 5,
                    "value_2": 2
                },
                "iVar3": {
                    "calculation3": 1,
                    "calculation_result3": 1,
                    "result3": 21,
                    "value1_4": 1,
                    "value3": 5,
                    "value_3": 2
                },
                "iVar4": {
                    "calculation4": 1,
                    "calculation_result4": 1,
                    "result4": 21,
                    "value1_5": 1,
                    "value4": 5,
                    "value_4": 2
                },
                "iVar5": {
                    "calculation5": 1,
                    "calculation_result5": 1,
                    "result5": 21,
                    "value1_6": 1,
                    "value5": 5,
                    "value_5": 2
                },
                "iVar6": {
                    "calculation6": 1,
                    "calculation_result6": 1,
                    "result6": 21,
                    "value2_1": 1,
                    "value6": 5,
                    "value_6": 2
                },
                "iVar7": {
                    "calculation7": 1,
                    "calculation_result7": 1,
                    "result7": 21,
                    "value2_2": 1,
                    "value7": 5,
                    "value_7": 2
                },
                "iVar8": {
                    "calculation8": 1,
                    "calculation_result8": 1,
                    "result8": 21,
                    "value2_3": 1,
                    "value8": 5,
                    "value_8": 2
                },
                "iVar9": {
                    "calculation9": 1,
                    "calculation_result9": 1,
                    "result9": 21,
                    "value2_4": 1,
                    "value9": 5,
                    "value_9": 2
                },
                "param_1": {
                    "config": 2,
                    "input": 6,
                    "input_array": 7,
                    "input_data": 1,
                    "input_params": 2,
                    "input_values": 1,
                    "inputs": 1,
                    "parameters": 10,
                    "params": 1
                }
            },
            "called": [
                "FUN_08003c70",
                "FUN_08003c50"
            ],
            "calling": [
                "FUN_0800441a"
            ],
            "code": "\nvoid calculate_new_values_08004204(int *parameters)\n\n{\n  int result1;\n  int result2;\n  int result3;\n  int result4;\n  int result5;\n  int result6;\n  int result7;\n  int result8;\n  int result9;\n  int result10;\n  \n  *(uint *)(*parameters + 0x10) = *(uint *)(*parameters + 0x10) & 0xffffcfff | parameters[3];\n  *(uint *)(*parameters + 0xc) =\n       parameters[2] | parameters[4] | parameters[5] | *(uint *)(*parameters + 0xc) & 0xffffe9f3;\n  *(uint *)(*parameters + 0x14) = *(uint *)(*parameters + 0x14) & 0xfffffcff | parameters[6];\n  result10 = *parameters;\n  if (result10 != 0x40013800) {\n    result1 = FUN_08003c50();\n    result6 = parameters[1];\n    result2 = FUN_08003c50();\n    result7 = parameters[1];\n    result3 = FUN_08003c50();\n    result8 = parameters[1];\n    result4 = FUN_08003c50();\n    result9 = parameters[1];\n    result5 = FUN_08003c50();\n    *(uint *)(result10 + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(result4 * 0x19) / (uint)(result9 << 2) +\n                        (int)(((ulonglong)(uint)(result5 * 0x19) / (ulonglong)(uint)(parameters[1] << 2))\n                             / 100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n         ((((uint)(result2 * 0x19) / (uint)(result7 << 2) +\n           (int)(((ulonglong)(uint)(result3 * 0x19) / (ulonglong)(uint)(result8 << 2)) / 100) * -100) *\n           0x10 + 0x32) / 100 & 0xf0) +\n         (int)(((ulonglong)(uint)(result1 * 0x19) / (ulonglong)(uint)(result6 << 2)) / 100) * 0x10;\n    return;\n  }\n  result10 = FUN_08003c70();\n  result5 = parameters[1];\n  result1 = FUN_08003c70();\n  result6 = parameters[1];\n  result2 = FUN_08003c70();\n  result7 = parameters[1];\n  result3 = FUN_08003c70();\n  result8 = parameters[1];\n  result4 = FUN_08003c70();\n  updated_value = ((uint)((int)((ulonglong)\n                               (((uint)(result3 * 0x19) / (uint)(result8 << 2) +\n                                (int)(((ulonglong)(uint)(result4 * 0x19) /\n                                      (ulonglong)(uint)(parameters[1] << 2)) / 100) * -100) * 0x10 +\n                               0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n                 ((((uint)(result1 * 0x19) / (uint)(result6 << 2) +\n                   (int)(((ulonglong)(uint)(result2 * 0x19) / (ulonglong)(uint)(result7 << 2)) / 100) *\n                   -100) * 0x10 + 0x32) / 100 & 0xf0) +\n                 (int)(((ulonglong)(uint)(result10 * 0x19) / (ulonglong)(uint)(result5 << 2)) / 100) *\n                 0x10;\n  return;\n}\n\n",
            "current_name": "calculate_new_values_08004204",
            "entrypoint": "0x08004204",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004204": "calculate_new_values_08004204",
                "iRam40013808": "updated_value",
                "iVar1": "result1",
                "iVar10": "result10",
                "iVar2": "result2",
                "iVar3": "result3",
                "iVar4": "result4",
                "iVar5": "result5",
                "iVar6": "result6",
                "iVar7": "result7",
                "iVar8": "result8",
                "iVar9": "result9",
                "param_1": "parameters"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080043b4": {
            "additional_data": {
                "FUN_08001cc4": {
                    "get_comparison_value": 1,
                    "get_current_permission": 1,
                    "get_param_value": 1,
                    "get_result": 1
                },
                "FUN_080043b4": {
                    "check_and_update_flags": 1,
                    "check_condition": 3,
                    "check_condition_and_modify": 3,
                    "check_conditions": 2,
                    "check_conditions_and_update": 1,
                    "check_config": 1,
                    "check_flags_and_set": 1,
                    "check_parameter": 1,
                    "check_parameters": 5,
                    "check_params": 6,
                    "check_params_and_modify": 1,
                    "check_params_validity": 1,
                    "check_permissions": 1,
                    "check_valid_params": 1,
                    "check_validity": 1,
                    "validate_and_modify_data": 1,
                    "validate_params": 1
                },
                "iVar1": {
                    "comparison_result": 1,
                    "current": 1,
                    "difference": 2,
                    "result": 17,
                    "result_difference": 1,
                    "return_value": 3
                },
                "param_1": {
                    "arg1": 1,
                    "array": 1,
                    "array_ptr": 2,
                    "config_array": 1,
                    "data": 1,
                    "param_array": 8,
                    "param_list": 2,
                    "param_ptr": 1,
                    "parameter": 1,
                    "permissions": 1,
                    "pointer": 2,
                    "pointer_array": 6,
                    "pointer_to_array": 1,
                    "pointer_to_parameters": 1,
                    "ptr_array": 2
                },
                "param_2": {
                    "arg2": 1,
                    "bit_mask": 1,
                    "bitmask": 3,
                    "check_flag": 1,
                    "check_value": 1,
                    "condition1": 1,
                    "flag": 4,
                    "flag_mask": 1,
                    "flags": 2,
                    "input_value1": 1,
                    "mask": 6,
                    "mask1": 1,
                    "mask_value": 1,
                    "requested_permission": 1,
                    "value": 4,
                    "value1": 2
                },
                "param_3": {
                    "arg3": 1,
                    "bool_check": 1,
                    "condition": 4,
                    "condition1": 1,
                    "condition2": 1,
                    "desired_result": 2,
                    "expected": 1,
                    "expected_flag": 1,
                    "expected_result": 7,
                    "expected_value": 3,
                    "flag1": 1,
                    "input_value2": 1,
                    "is_allowed": 1,
                    "is_flag_set": 1,
                    "is_true": 3,
                    "is_valid": 1,
                    "value2": 1
                },
                "param_4": {
                    "arg4": 1,
                    "base_value": 1,
                    "compare_value": 1,
                    "comparison_val": 1,
                    "comparison_value": 9,
                    "current_permission": 1,
                    "current_value": 1,
                    "initial_value": 1,
                    "input_value3": 1,
                    "limit": 1,
                    "reference_value": 1,
                    "threshold": 2,
                    "threshold_value": 1,
                    "value": 3,
                    "value1": 2,
                    "value2": 1,
                    "value3": 1,
                    "value_to_compare": 1,
                    "variable1": 1
                },
                "param_5": {
                    "arg5": 1,
                    "input_value4": 1,
                    "limit": 3,
                    "limit_value": 1,
                    "max_difference": 11,
                    "permission_threshold": 1,
                    "range": 1,
                    "threshold": 8,
                    "value2": 2,
                    "value4": 1,
                    "variable2": 1
                }
            },
            "called": [
                "FUN_08001cc4"
            ],
            "calling": [
                "FUN_08004478"
            ],
            "code": "\nundefined4 check_params_and_modify_080043b4(uint **param_array,uint mask,uint expected_result,int comparison_value,uint max_difference)\n\n{\n  int result;\n  \n  do {\n    if (((mask & ~**param_array) == 0) != expected_result) {\n      return 0;\n    }\n  } while ((max_difference == 0xffffffff) ||\n          ((max_difference != 0 && (result = FUN_08001cc4(), (uint)(result - comparison_value) <= max_difference))));\n  (*param_array)[3] = (*param_array)[3] & 0xfffffe5f;\n  (*param_array)[5] = (*param_array)[5] & 0xfffffffe;\n  *(undefined *)((int)param_array + 0x39) = 0x20;\n  *(undefined *)((int)param_array + 0x3a) = 0x20;\n  *(undefined *)(param_array + 0xe) = 0;\n  return 3;\n}\n\n",
            "current_name": "check_params_and_modify_080043b4",
            "entrypoint": "0x080043b4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080043b4": "check_params_and_modify_080043b4",
                "iVar1": "result",
                "param_1": "param_array",
                "param_2": "mask",
                "param_3": "expected_result",
                "param_4": "comparison_value",
                "param_5": "max_difference"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004418": {
            "called": [],
            "calling": [
                "FUN_0800441a"
            ],
            "code": "\nvoid FUNC_08004418(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08004418",
            "entrypoint": "0x08004418",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08004418": "FUNC_08004418"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800441a": {
            "additional_data": {
                "0x10": {
                    "data_value2": 1,
                    "offset_2": 1
                },
                "0x14": {
                    "data_value3": 1,
                    "offset_3": 1
                },
                "0x20": {
                    "new_flag_3": 1,
                    "new_flag_value": 1
                },
                "0x2000": {
                    "data_flag_value": 1,
                    "new_flag_2": 1
                },
                "0x24": {
                    "flag_value": 1,
                    "new_flag_1": 1
                },
                "0x39": {
                    "flag": 1,
                    "flag_1": 1
                },
                "0x3a": {
                    "new_flag_4": 1,
                    "new_flag_value2": 1
                },
                "0xc": {
                    "data_value1": 1,
                    "offset_1": 1
                },
                "0xf": {
                    "count": 1,
                    "offset_4": 1
                },
                "0xffffb7ff": {
                    "data_value2_mask": 1,
                    "mask_2": 1
                },
                "0xffffdfff": {
                    "data_value1_mask": 1,
                    "mask_1": 1
                },
                "0xffffffd5": {
                    "data_value3_mask": 1,
                    "mask_3": 1
                },
                "FUNC_08004418": {
                    "clear_flags": 1,
                    "clear_function": 1,
                    "do_something": 1,
                    "execute_action": 1,
                    "execute_task": 1,
                    "initialize_array": 1,
                    "initialize_config": 2,
                    "initialize_data": 1,
                    "initialize_func": 1,
                    "initialize_function": 1,
                    "initialize_global_variable": 1,
                    "initialize_process": 1,
                    "reset_data": 6,
                    "reset_flags": 2,
                    "reset_function": 9
                },
                "FUN_08004204": {
                    "apply_changes": 1,
                    "call_sub_function": 1,
                    "manipulate_array": 1,
                    "perform_operation": 1,
                    "process_config": 1,
                    "process_data": 12,
                    "process_function": 1,
                    "process_param": 3,
                    "process_parameter": 1,
                    "process_params": 1,
                    "process_sub_param": 1,
                    "update_config": 1,
                    "update_data": 2,
                    "update_function": 1,
                    "update_param": 1,
                    "update_param_values": 1
                },
                "FUN_0800441a": {
                    "check_and_modify_data": 1,
                    "check_and_update_parameters": 1,
                    "execute_instructions": 1,
                    "handle_param": 1,
                    "initialize_data": 7,
                    "initialize_flags": 1,
                    "initialize_param": 2,
                    "initialize_params": 1,
                    "parse_data": 1,
                    "process_data": 1,
                    "process_param": 3,
                    "process_parameter": 2,
                    "update_configuration": 1,
                    "update_data_structure": 1,
                    "update_parameter": 1,
                    "validate_and_configure_param": 1,
                    "validate_and_process_data": 1,
                    "validate_input": 1,
                    "validate_parameter": 1
                },
                "char": {
                    "character": 2
                },
                "char_0x39": {
                    "flag_char": 1
                },
                "dataPtr": {
                    "data_pointer": 1
                },
                "data_array": {
                    "data_array": 1
                },
                "int": {
                    "integer": 2
                },
                "param_1": {
                    "config": 1,
                    "data": 4,
                    "data_array": 1,
                    "data_pointer": 4,
                    "data_ptr": 2,
                    "data_structure": 1,
                    "input_array": 1,
                    "input_param": 1,
                    "input_ptr": 1,
                    "instructions": 1,
                    "param": 6,
                    "parameter": 4,
                    "parameters": 2,
                    "params": 1,
                    "pointer": 1
                },
                "process_data": {
                    "process_data": 1
                },
                "reset_data": {
                    "reset_data": 1
                },
                "uint": {
                    "unsigned_integer": 2
                },
                "uint_ptr_0x10": {
                    "flag_ptr2": 1
                },
                "uint_ptr_0x14": {
                    "flag_ptr3": 1
                },
                "uint_ptr_0xc": {
                    "flag_ptr": 1
                },
                "undefined4": {
                    "result": 1,
                    "return_type": 1
                }
            },
            "called": [
                "FUN_08004418",
                "FUN_08004204"
            ],
            "calling": [
                "FUN_08004f4c"
            ],
            "code": "\nreturn_type initialize_data_0800441a(integer *param)\n\n{\n  if (param != (integer *)0x0) {\n    if (*(character *)((integer)param + 0x39) == '\\0') {\n      *(undefined *)(param + 0xe) = 0;\n      FUNC_08004418();\n    }\n    *(undefined *)((integer)param + 0x39) = 0x24;\n    *(unsigned_integer *)(*param + 0xc) = *(unsigned_integer *)(*param + 0xc) & 0xffffdfff;\n    FUN_08004204(param);\n    *(unsigned_integer *)(*param + 0x10) = *(unsigned_integer *)(*param + 0x10) & 0xffffb7ff;\n    *(unsigned_integer *)(*param + 0x14) = *(unsigned_integer *)(*param + 0x14) & 0xffffffd5;\n    *(unsigned_integer *)(*param + 0xc) = *(unsigned_integer *)(*param + 0xc) | 0x2000;\n    param[0xf] = 0;\n    *(undefined *)((integer)param + 0x39) = 0x20;\n    *(undefined *)((integer)param + 0x3a) = 0x20;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "initialize_data_0800441a",
            "entrypoint": "0x0800441a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800441a": "initialize_data_0800441a",
                "char": "character",
                "int": "integer",
                "param_1": "param",
                "uint": "unsigned_integer",
                "undefined4": "return_type"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004478": {
            "additional_data": {
                "FUN_08001cc4": {
                    "get_magic_value": 1,
                    "handle_input": 1,
                    "helper_function": 1,
                    "initialize": 9,
                    "initialize_connection": 1,
                    "initialize_data": 1,
                    "sub_function_1": 1
                },
                "FUN_080043b4": {
                    "another_helper_function": 1,
                    "handle_sub_function": 1,
                    "perform_operation": 2,
                    "process_command": 1,
                    "process_data_chunk": 2,
                    "process_element": 1,
                    "process_sub_data": 2,
                    "process_subdata": 1,
                    "process_subfunction": 1,
                    "send_data": 1,
                    "sub_function_2": 1,
                    "transfer_data": 1
                },
                "FUN_08004478": {
                    "decode_message": 1,
                    "parse_data": 2,
                    "parse_input": 1,
                    "process_data": 23,
                    "process_input": 1,
                    "process_input_data": 1,
                    "validate_input": 1
                },
                "iVar1": {
                    "loop_counter": 1,
                    "result": 22,
                    "return_status": 1,
                    "return_value": 4,
                    "status": 2,
                    "temp_variable_1": 1
                },
                "param_1": {
                    "address": 1,
                    "array": 1,
                    "data": 9,
                    "data_buffer": 4,
                    "data_length": 1,
                    "data_pointer": 2,
                    "data_ptr": 5,
                    "input_array": 4,
                    "input_buffer": 2,
                    "input_data": 1,
                    "message_ptr": 1
                },
                "param_2": {
                    "buffer": 2,
                    "buffer_ptr": 1,
                    "command_buffer": 1,
                    "data": 4,
                    "data_array": 2,
                    "data_buffer": 1,
                    "data_ptr": 1,
                    "input": 4,
                    "input_buffer": 3,
                    "input_data": 5,
                    "input_string": 1,
                    "short_array_pointer": 1,
                    "short_array_ptr": 1,
                    "ushort_array": 1,
                    "ushort_pointer": 1,
                    "ushort_ptr": 1,
                    "values": 1
                },
                "param_3": {
                    "array_length": 5,
                    "buffer_size": 5,
                    "command_length": 1,
                    "count": 1,
                    "data_length": 4,
                    "data_size": 1,
                    "input_buffer_size": 1,
                    "input_count": 1,
                    "input_length": 4,
                    "input_size": 2,
                    "length": 3,
                    "num_elements": 1,
                    "num_values": 1,
                    "size": 1
                },
                "param_4": {
                    "additional_param": 1,
                    "param": 5,
                    "param1": 1,
                    "param4": 12,
                    "param_4": 10,
                    "parameter4": 1,
                    "value": 1
                },
                "uVar2": {
                    "new_status": 1,
                    "output": 1,
                    "result": 6,
                    "return_value": 14,
                    "status": 9
                }
            },
            "called": [
                "FUN_08001cc4",
                "FUN_080043b4"
            ],
            "calling": [
                "FUN_080053d4"
            ],
            "code": "\nundefined4 process_input_data_08004478(int *data,ushort *input_data,int buffer_size,undefined4 param4)\n\n{\n  int result;\n  undefined4 return_value;\n  \n  if (*(char *)((int)data + 0x39) == ' ') {\n    if (input_data == (ushort *)0x0) {\n      return_value = 1;\n    }\n    else if (buffer_size == 0) {\n      return_value = 1;\n    }\n    else if (*(char *)(data + 0xe) == '\\x01') {\n      return_value = 2;\n    }\n    else {\n      *(undefined *)(data + 0xe) = 1;\n      data[0xf] = 0;\n      *(undefined *)((int)data + 0x39) = 0x21;\n      return_value = FUN_08001cc4();\n      *(short *)(data + 9) = (short)buffer_size;\n      *(short *)((int)data + 0x26) = (short)buffer_size;\n      while (*(short *)((int)data + 0x26) != 0) {\n        *(short *)((int)data + 0x26) = *(short *)((int)data + 0x26) + -1;\n        if (data[2] == 0x1000) {\n          result = FUN_080043b4(data,0x80,0,return_value,param4);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*data + 4) = *input_data & 0x1ff;\n          if (data[4] == 0) {\n            input_data = input_data + 1;\n          }\n          else {\n            input_data = (ushort *)((int)input_data + 1);\n          }\n        }\n        else {\n          result = FUN_080043b4(data,0x80,0,return_value,param4);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*data + 4) = (uint)*(byte *)input_data;\n          input_data = (ushort *)((int)input_data + 1);\n        }\n      }\n      result = FUN_080043b4(data,0x40,0,return_value,param4);\n      if (result == 0) {\n        *(undefined *)((int)data + 0x39) = 0x20;\n        *(undefined *)(data + 0xe) = 0;\n        return_value = 0;\n      }\n      else {\n        return_value = 3;\n      }\n    }\n  }\n  else {\n    return_value = 2;\n  }\n  return return_value;\n}\n\n",
            "current_name": "process_input_data_08004478",
            "entrypoint": "0x08004478",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004478": "process_input_data_08004478",
                "iVar1": "result",
                "param_1": "data",
                "param_2": "input_data",
                "param_3": "buffer_size",
                "param_4": "param4",
                "uVar2": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800455a": {
            "additional_data": {
                "0x21": {
                    "flag_value": 1,
                    "new_char": 1,
                    "space_char": 1
                },
                "0x26": {
                    "param3": 1,
                    "variable3": 1
                },
                "0x39": {
                    "char_value": 1,
                    "flag": 2,
                    "space_char": 1
                },
                "0xc": {
                    "mask": 1,
                    "ptr_value": 1
                },
                "0xe": {
                    "flag": 1,
                    "status": 1
                },
                "0xf": {
                    "counter": 1,
                    "param4": 1,
                    "variable4": 1
                },
                "2": {
                    "error_invalid_input_size": 1
                },
                "8": {
                    "param1": 1,
                    "variable1": 1
                },
                "9": {
                    "param2": 1,
                    "variable2": 1
                },
                "FUN_0800455a": {
                    "check_input": 1,
                    "initialize_data": 6,
                    "initialize_parameters": 1,
                    "parse_input": 1,
                    "parse_input_parameters": 1,
                    "process_data": 5,
                    "process_input": 1,
                    "process_parameters": 1,
                    "process_params": 1,
                    "update_data": 2,
                    "update_param_values": 1,
                    "update_parameters": 1,
                    "update_params": 1,
                    "validate_and_initialize": 1,
                    "validate_input": 3,
                    "validate_inputs": 3
                },
                "dataArray": {
                    "data_array": 1
                },
                "dataPointer": {
                    "data": 1
                },
                "param_1": {
                    "array": 1,
                    "buffer": 1,
                    "data": 9,
                    "data_array": 2,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "input": 2,
                    "input_array": 5,
                    "input_buffer": 1,
                    "input_data": 2,
                    "param_array": 1,
                    "parameters": 3,
                    "struct_pointer": 1
                },
                "param_2": {
                    "length": 1,
                    "param_a": 1,
                    "size": 1,
                    "size1": 1,
                    "value1": 21,
                    "value_1": 5
                },
                "param_3": {
                    "param_b": 1,
                    "size2": 1,
                    "value": 2,
                    "value2": 21,
                    "value_2": 5
                },
                "value1": {
                    "new_value1": 1,
                    "value1": 1
                },
                "value2": {
                    "new_value2": 1,
                    "value2": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005568",
                "FUN_08005604"
            ],
            "code": "\nundefined4 initialize_data_0800455a(int *data,int value1,int value2)\n\n{\n  if (*(char *)((int)data + 0x39) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(char *)(data + 0xe) != '\\x01') {\n    data[8] = value1;\n    *(short *)(data + 9) = (short)value2;\n    *(short *)((int)data + 0x26) = (short)value2;\n    data[0xf] = 0;\n    *(undefined *)((int)data + 0x39) = 0x21;\n    *(undefined *)(data + 0xe) = 0;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x80;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "current_name": "initialize_data_0800455a",
            "entrypoint": "0x0800455a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800455a": "initialize_data_0800455a",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080045a2": {
            "additional_data": {
                "0": {
                    "zero": 1
                },
                "0x14": {
                    "bitwise_operand2": 1,
                    "condition_bits2": 1
                },
                "0x20": {
                    "condition_bits3": 1
                },
                "0x22": {
                    "char_assignment_value": 1,
                    "new_character": 1,
                    "replacement_char": 1
                },
                "0x2e": {
                    "array_element4": 1,
                    "offset_1": 1,
                    "short_value2": 1
                },
                "0x3a": {
                    "char_check_variable": 1,
                    "char_offset": 1,
                    "character": 1
                },
                "0xb": {
                    "array_element3": 1,
                    "short_value": 1
                },
                "0xc": {
                    "bitwise_operand1": 1,
                    "condition_bits": 1
                },
                "0xe": {
                    "array_element2": 1,
                    "flag": 1,
                    "offset_2": 1
                },
                "0xf": {
                    "array_element5": 1,
                    "status": 1
                },
                "10": {
                    "array_element1": 1,
                    "array_index": 1
                },
                "FUN_080045a2": {
                    "check_and_update_data": 1,
                    "check_input": 1,
                    "check_input_validity": 1,
                    "initialize_data": 2,
                    "process_data": 3,
                    "process_input": 2,
                    "update_configuration": 1,
                    "update_data": 2,
                    "update_parameter": 2,
                    "validate_input": 11,
                    "validate_input_and_initialize": 1,
                    "validate_inputs": 1,
                    "validate_parameters": 1,
                    "validate_params": 2
                },
                "char": {
                    "character": 1
                },
                "configArray": {
                    "config_array": 1
                },
                "input_data": {
                    "input_array": 1
                },
                "input_ptr": {
                    "input_buffer": 1
                },
                "int": {
                    "integer": 1
                },
                "param_1": {
                    "array": 3,
                    "array_ptr": 1,
                    "config_array": 1,
                    "data": 5,
                    "data_array": 2,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "input": 1,
                    "input_array": 9,
                    "input_data": 3,
                    "input_ptr": 1,
                    "parameter_array": 2
                },
                "param_2": {
                    "length": 2,
                    "param2": 1,
                    "size": 4,
                    "value1": 14,
                    "value_1": 10
                },
                "param_3": {
                    "param3": 1,
                    "value": 6,
                    "value2": 14,
                    "value_2": 10
                },
                "return": {
                    "result": 1
                },
                "short": {
                    "short_integer": 1
                },
                "short_value": {
                    "short_value_2": 1
                },
                "size": {
                    "buffer_size": 1
                },
                "uint": {
                    "unsigned_integer": 1
                },
                "undefined4": {
                    "result": 1
                },
                "validate_input": {
                    "check_input": 1
                },
                "validate_input_2": {
                    "check_input_again": 1
                },
                "value": {
                    "data_value": 1
                },
                "value1": {
                    "value1": 1
                },
                "value2": {
                    "value2": 1
                },
                "value_1": {
                    "length_value": 1
                },
                "value_2": {
                    "short_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005510",
                "FUN_080054d4"
            ],
            "code": "\nresult validate_input_and_initialize_080045a2(integer *input_array,integer value1,integer value2)\n\n{\n  if (*(character *)((integer)input_array + 0x3a) != ' ') {\n    result 2;\n  }\n  if (value1 == 0) {\n    result 1;\n  }\n  if (value2 == 0) {\n    result 1;\n  }\n  if (*(character *)(input_array + 0xe) != '\\x01') {\n    input_array[10] = value1;\n    *(short_integer *)(input_array + 0xb) = (short_integer)value2;\n    *(short_integer *)((integer)input_array + 0x2e) = (short_integer)value2;\n    input_array[0xf] = 0;\n    *(undefined *)((integer)input_array + 0x3a) = 0x22;\n    *(undefined *)(input_array + 0xe) = 0;\n    *(unsigned_integer *)(*input_array + 0xc) = *(unsigned_integer *)(*input_array + 0xc) | 0x100;\n    *(unsigned_integer *)(*input_array + 0x14) = *(unsigned_integer *)(*input_array + 0x14) | 1;\n    *(unsigned_integer *)(*input_array + 0xc) = *(unsigned_integer *)(*input_array + 0xc) | 0x20;\n    result 0;\n  }\n  result 2;\n}\n\n",
            "current_name": "validate_input_and_initialize_080045a2",
            "entrypoint": "0x080045a2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080045a2": "validate_input_and_initialize_080045a2",
                "char": "character",
                "int": "integer",
                "param_1": "input_array",
                "param_2": "value1",
                "param_3": "value2",
                "return": "result",
                "short": "short_integer",
                "uint": "unsigned_integer",
                "undefined4": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080045fe": {
            "additional_data": {
                "0x39": {
                    "value": 1
                },
                "0xc": {
                    "array_offset": 1
                },
                "0xffffffbf": {
                    "mask": 1
                },
                "DAT_": {
                    "unchanged": 1
                },
                "FUN_080045fe": {
                    "apply_permission": 1,
                    "clear_bit_and_set_character": 1,
                    "modify_param": 1,
                    "modify_parameters": 1,
                    "set_flag": 1,
                    "set_flag_and_call_function": 6,
                    "set_flag_to_space": 1,
                    "update_and_call_function": 1,
                    "update_bit_and_set_flag": 1,
                    "update_flag_and_call_function": 1,
                    "update_flags_and_call_function": 4,
                    "update_flags_and_value": 2,
                    "update_parameter": 3,
                    "update_parameter_value": 1,
                    "update_permissions": 2,
                    "update_value_and_call_function": 4
                },
                "FUN_08005604": {
                    "call_secondary_function": 1,
                    "call_sub_function": 1,
                    "do_something": 1,
                    "execute_additional_function": 1,
                    "execute_function": 3,
                    "execute_secondary_function": 1,
                    "execute_some_action": 1,
                    "execute_sub_function": 5,
                    "perform_action": 5,
                    "perform_additional_action": 1,
                    "perform_additional_task": 3,
                    "perform_additional_tasks": 1,
                    "perform_task": 1,
                    "print_info": 1
                },
                "PTR_": {
                    "unchanged": 1
                },
                "param_1": {
                    "array": 1,
                    "array_pointer": 2,
                    "data": 2,
                    "data_pointer": 2,
                    "flag": 1,
                    "flag_container_ptr": 1,
                    "flag_pointer": 2,
                    "flag_ptr": 1,
                    "input_array": 2,
                    "input_param": 1,
                    "input_pointer": 2,
                    "input_ptr": 2,
                    "param": 5,
                    "parameter": 2,
                    "parameter_array": 1,
                    "pointer": 2,
                    "ptr": 1,
                    "value_ptr": 1
                }
            },
            "called": [
                "FUN_08005604"
            ],
            "calling": [
                "FUN_080046b8"
            ],
            "code": "\nundefined4 set_flag_and_call_function_080045fe(int *param)\n\n{\n  *(uint *)(*param + 0xc) = *(uint *)(*param + 0xc) & 0xffffffbf;\n  *(undefined *)((int)param + 0x39) = 0x20;\n  FUN_08005604();\n  return 0;\n}\n\n",
            "current_name": "set_flag_and_call_function_080045fe",
            "entrypoint": "0x080045fe",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080045fe": "set_flag_and_call_function_080045fe",
                "param_1": "param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004618": {
            "additional_data": {
                "FUN_08004618": {
                    "extract_value": 1,
                    "parse_and_process_data": 1,
                    "parse_and_process_input": 1,
                    "parse_data": 2,
                    "parse_input": 2,
                    "parse_string": 8,
                    "parse_string_parameter": 1,
                    "process_binary_data": 2,
                    "process_data": 6,
                    "process_input": 3,
                    "process_input_data": 1,
                    "process_input_string": 1,
                    "process_parameter": 1
                },
                "FUN_080055e0": {
                    "execute_function": 1
                },
                "param_1": {
                    "array": 1,
                    "data": 7,
                    "data_array": 1,
                    "data_ptr": 2,
                    "input": 3,
                    "input_array": 4,
                    "input_data": 8,
                    "input_string": 1,
                    "param": 1,
                    "parameters": 1,
                    "str_ptr": 1
                },
                "pbVar1": {
                    "byte_pointer": 6,
                    "byte_ptr": 17,
                    "data_bytes": 1,
                    "output_byte": 3,
                    "output_byte_ptr": 1
                },
                "puVar3": {
                    "dest_ptr": 1,
                    "new_data_ptr": 1,
                    "output_byte_ptr": 2,
                    "output_byte_ptr2": 1,
                    "output_puvar3": 1,
                    "pointer_to_undefined": 1,
                    "undefined_pointer": 5,
                    "undefined_ptr": 16
                },
                "sVar2": {
                    "count": 3,
                    "counter": 10,
                    "decremented_value": 3,
                    "loop_counter": 1,
                    "remaining_count": 2,
                    "remaining_iterations": 3,
                    "remaining_loops": 2,
                    "short_result": 2,
                    "short_val": 1,
                    "short_var": 1,
                    "temp_short": 1
                }
            },
            "called": [
                "FUN_080055e0"
            ],
            "calling": [
                "FUN_080046b8"
            ],
            "code": "\nundefined4 parse_string_parameter_08004618(int *input_data)\n\n{\n  byte *byte_ptr;\n  short counter;\n  undefined *undefined_ptr;\n  \n  if (*(char *)((int)input_data + 0x3a) != '\\\"') {\n    return 2;\n  }\n  if (input_data[2] == 0x1000) {\n    if (input_data[4] == 0) {\n      *(ushort *)input_data[10] = (ushort)((uint)(*(int *)(*input_data + 4) << 0x17) >> 0x17);\n      input_data[10] = input_data[10] + 2;\n    }\n    else {\n      *(ushort *)input_data[10] = (ushort)*(undefined4 *)(*input_data + 4) & 0xff;\n      input_data[10] = input_data[10] + 1;\n    }\n  }\n  else if (input_data[4] == 0) {\n    undefined_ptr = (undefined *)input_data[10];\n    input_data[10] = (int)(undefined_ptr + 1);\n    *undefined_ptr = (char)*(undefined4 *)(*input_data + 4);\n  }\n  else {\n    byte_ptr = (byte *)input_data[10];\n    input_data[10] = (int)(byte_ptr + 1);\n    *byte_ptr = (byte)*(undefined4 *)(*input_data + 4) & 0x7f;\n  }\n  counter = *(short *)((int)input_data + 0x2e) + -1;\n  *(short *)((int)input_data + 0x2e) = counter;\n  if (counter != 0) {\n    return 0;\n  }\n  *(uint *)(*input_data + 0xc) = *(uint *)(*input_data + 0xc) & 0xffffffdf;\n  *(uint *)(*input_data + 0xc) = *(uint *)(*input_data + 0xc) & 0xfffffeff;\n  *(uint *)(*input_data + 0x14) = *(uint *)(*input_data + 0x14) & 0xfffffffe;\n  *(undefined *)((int)input_data + 0x3a) = 0x20;\n  FUN_080055e0();\n  return 0;\n}\n\n",
            "current_name": "parse_string_parameter_08004618",
            "entrypoint": "0x08004618",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004618": "parse_string_parameter_08004618",
                "param_1": "input_data",
                "pbVar1": "byte_ptr",
                "puVar3": "undefined_ptr",
                "sVar2": "counter"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080046b8": {
            "additional_data": {
                "FUNC_0800258c": {
                    "check_validity": 1
                },
                "FUNC_08005650": {
                    "cleanup": 5,
                    "execute_function4": 1,
                    "execute_function_b": 1,
                    "reset_flags": 1
                },
                "FUN_0800258c": {
                    "check_flag_condition": 1,
                    "check_return_value": 1,
                    "check_something": 1,
                    "execute_function6": 1,
                    "execute_function_f": 1,
                    "handle_error": 1,
                    "perform_operation": 1,
                    "process_data": 1
                },
                "FUN_0800417c": {
                    "call_func_a": 1,
                    "execute_function5": 1,
                    "execute_function_a": 1,
                    "handle_case4": 1,
                    "handle_flag_condition": 1,
                    "perform_action4": 1,
                    "perform_action_a": 1,
                    "process_flag_seven": 1,
                    "process_flags_case4": 1
                },
                "FUN_08004198": {
                    "call_func_d": 1,
                    "execute_function2": 1,
                    "execute_function_e": 1,
                    "handle_case2": 1,
                    "handle_flag_condition": 1,
                    "perform_action2": 1,
                    "perform_action_d": 1,
                    "process_flag_eight": 1,
                    "process_flags_case2": 1
                },
                "FUN_080045fe": {
                    "call_func_b": 1,
                    "execute_function3": 1,
                    "execute_function_c": 1,
                    "handle_case3": 1,
                    "handle_flag_condition": 1,
                    "perform_action3": 1,
                    "perform_action_b": 1,
                    "process_flag_six": 1,
                    "process_flags_case3": 1
                },
                "FUN_08004618": {
                    "call_func_c": 1,
                    "execute_function1": 1,
                    "execute_function_d": 1,
                    "handle_case1": 1,
                    "handle_flag_condition": 1,
                    "perform_action1": 1,
                    "perform_action_c": 1,
                    "process_flag_five": 1,
                    "process_flags_case1": 1
                },
                "FUN_080046b8": {
                    "check_and_execute_actions": 1,
                    "check_and_execute_flags": 1,
                    "check_and_handle_conditions": 1,
                    "check_and_process_flags": 3,
                    "check_and_update_flags": 1,
                    "check_condition_and_execute": 2,
                    "check_conditions_and_execute": 1,
                    "check_conditions_and_perform_actions": 3,
                    "check_flags": 1,
                    "check_flags_and_call_function": 1,
                    "check_flags_and_execute": 2,
                    "check_flags_and_execute_action": 1,
                    "check_permissions": 1,
                    "perform_action_based_on_flags": 1,
                    "process_data": 3,
                    "process_data_checks": 1,
                    "process_flags": 4,
                    "process_input": 1,
                    "process_param": 1,
                    "validate_and_execute_operation": 1
                },
                "FUN_08005650": {
                    "cleanup": 1
                },
                "LAB_080047d8_1": {
                    "label1": 1,
                    "label_address": 1
                },
                "PTR_FUNC_08005650": {
                    "execute_function": 1
                },
                "PTR_FUN_0800258c": {
                    "execute_function_and_get_status": 1
                },
                "PTR_FUN_0800417c": {
                    "execute_if_not_set_flag": 1
                },
                "PTR_FUN_08004198": {
                    "execute_if_flags_and_mask_set2": 1
                },
                "PTR_FUN_080045fe": {
                    "execute_if_flags_set": 1
                },
                "PTR_FUN_08004618": {
                    "execute_if_flags_and_mask_set": 1
                },
                "iVar1": {
                    "index": 3,
                    "result": 22,
                    "return_value": 4,
                    "status": 2
                },
                "param_1": {
                    "action_flags": 1,
                    "arguments": 1,
                    "data": 5,
                    "data_array": 1,
                    "flags": 4,
                    "function_args": 1,
                    "input": 1,
                    "input_data": 1,
                    "input_pointer": 1,
                    "param": 1,
                    "parameters": 9,
                    "params": 4,
                    "pointer_array": 1
                },
                "puVar3": {
                    "array_pointer": 1,
                    "current_pointer": 1,
                    "data_pointer": 1,
                    "flag_array": 2,
                    "param1": 1,
                    "param_values": 1,
                    "pointer": 7,
                    "pointer1": 1,
                    "ptr": 9,
                    "ptr1": 1,
                    "ptr_to_action_flags": 1,
                    "ptr_to_flags": 1,
                    "ptr_value": 1,
                    "ptr_var": 1,
                    "values": 1
                },
                "uVar2": {
                    "flag2": 5,
                    "flag_value": 4,
                    "flags_value": 1,
                    "param3_value": 1,
                    "value": 1,
                    "value1": 10,
                    "value2": 6,
                    "value_1": 1,
                    "value_2": 1,
                    "var2": 1
                },
                "uVar4": {
                    "check_flag": 1,
                    "check_value": 1,
                    "flag": 7,
                    "flag3": 1,
                    "flag4": 2,
                    "flag5": 1,
                    "flag_value": 2,
                    "flag_value2": 1,
                    "is_flag_zero": 1,
                    "u_var4": 1,
                    "value1": 1,
                    "value2": 5,
                    "value4": 4,
                    "value_2": 1,
                    "value_check": 1,
                    "var4": 1
                },
                "uVar5": {
                    "condition_check": 1,
                    "current_flag": 1,
                    "first_flag": 1,
                    "flag": 1,
                    "flag1": 3,
                    "flag5": 2,
                    "flag_value1": 1,
                    "param1_value": 1,
                    "status": 1,
                    "value": 1,
                    "value1": 1,
                    "value2": 5,
                    "value3": 5,
                    "value5": 4,
                    "value_1": 1,
                    "value_3": 1,
                    "var5": 1
                }
            },
            "called": [
                "FUN_0800417c",
                "FUN_08005650",
                "FUN_080045fe",
                "FUN_08004618",
                "FUN_08004198",
                "FUN_0800258c"
            ],
            "calling": [],
            "code": "\nvoid check_and_process_flags_080046b8(uint **parameters)\n\n{\n  int result;\n  uint value1;\n  uint *ptr;\n  uint flag;\n  uint value2;\n  \n  ptr = *parameters;\n  value2 = *ptr;\n  value1 = ptr[3];\n  if ((((value2 & 0xf) == 0) && ((value2 & 0x20) != 0)) && ((value1 & 0x20) != 0)) {\n    FUN_08004618(parameters);\n    return;\n  }\n  if (((value2 & 0xf) == 0) || ((flag = ptr[5] & 1, flag == 0 && ((value1 & 0x120) == 0)))) {\n    if (((value2 & 0x80) != 0) && ((value1 & 0x80) != 0)) {\n      FUN_08004198(parameters);\n      return;\n    }\n    if (((value2 & 0x40) != 0) && ((value1 & 0x40) != 0)) {\n      FUN_080045fe(parameters);\n    }\n  }\n  else {\n    if (((value2 & 1) != 0) && ((value1 & 0x100) != 0)) {\n      parameters[0xf] = (uint *)((uint)parameters[0xf] | 1);\n    }\n    if (((value2 & 4) != 0) && (flag != 0)) {\n      parameters[0xf] = (uint *)((uint)parameters[0xf] | 2);\n    }\n    if (((value2 & 2) != 0) && (flag != 0)) {\n      parameters[0xf] = (uint *)((uint)parameters[0xf] | 4);\n    }\n    if (((value2 & 8) != 0) && (flag != 0)) {\n      parameters[0xf] = (uint *)((uint)parameters[0xf] | 8);\n    }\n    if (parameters[0xf] != (uint *)0x0) {\n      if (((value2 & 0x20) != 0) && ((value1 & 0x20) != 0)) {\n        FUN_08004618(parameters);\n      }\n      if ((((uint)parameters[0xf] & 8) == 0) && (((*parameters)[5] & 0x40) == 0)) {\n        FUNC_08005650(parameters);\n        parameters[0xf] = (uint *)0x0;\n        return;\n      }\n      FUN_0800417c(parameters);\n      ptr = *parameters;\n      if ((ptr[5] & 0x40) == 0) {\n        FUNC_08005650(parameters);\n        return;\n      }\n      ptr[5] = ptr[5] & 0xffffffbf;\n      if (parameters[0xd] == (uint *)0x0) {\n        FUNC_08005650(parameters);\n        return;\n      }\n      parameters[0xd][0xd] = (uint)&label_address;\n      result = FUN_0800258c(parameters[0xd]);\n      if (result != 0) {\n        (*(code *)parameters[0xd][0xd])();\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "current_name": "check_and_process_flags_080046b8",
            "entrypoint": "0x080046b8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080046b8": "check_and_process_flags_080046b8",
                "LAB_080047d8_1": "label_address",
                "iVar1": "result",
                "param_1": "parameters",
                "puVar3": "ptr",
                "uVar2": "value1",
                "uVar4": "flag",
                "uVar5": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080047e8": {
            "additional_data": {
                "0x39": {
                    "offset2": 2
                },
                "0x3a": {
                    "offset1": 2
                },
                "DAT_": {
                    "": 1,
                    "dat": 1
                },
                "FUN_080047e8": {
                    "bitwise_or": 1,
                    "combine_bits": 2,
                    "combine_byte_values": 1,
                    "combine_bytes": 27
                },
                "PTR_": {
                    "ptr": 1
                },
                "PTR_0x39": {
                    "byte_address2": 1
                },
                "PTR_0x3a": {
                    "byte_address1": 1
                },
                "byte": {
                    "combined_byte": 1
                },
                "byte_1": {
                    "byte1": 1
                },
                "byte_2": {
                    "byte2": 1
                },
                "param_1": {
                    "address": 8,
                    "address_offset": 1,
                    "base_address": 2,
                    "input": 14,
                    "input_value": 2,
                    "offset": 4
                }
            },
            "called": [],
            "calling": [
                "FUN_080054b0",
                "FUN_0800548c"
            ],
            "code": "\ncombined_byte combine_bytes_080047e8(int input)\n\n{\n  return *(combined_byte *)(input + 0x3a) | *(combined_byte *)(input + 0x39);\n}\n\n",
            "current_name": "combine_bytes_080047e8",
            "entrypoint": "0x080047e8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080047e8": "combine_bytes_080047e8",
                "byte": "combined_byte",
                "param_1": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080047f4": {
            "additional_data": {
                "DAT_": {
                    "dat_": 1
                },
                "DAT_XXXX": {
                    "unchanged": 1
                },
                "FUN_080047f4": {
                    "bitwise_check": 1,
                    "bitwise_extraction": 2,
                    "bitwise_shift_and_mask": 1,
                    "check_bit": 2,
                    "extract_bit": 1,
                    "extract_bit_at_index": 1,
                    "extract_bit_from_integer": 1,
                    "extract_bit_from_u_int": 1,
                    "extract_bit_from_uint": 3,
                    "extracted_bit": 1,
                    "get_bit": 2,
                    "get_bit_from_uint": 1,
                    "get_bit_value": 9,
                    "get_bit_value_at_offset": 1,
                    "get_flag_bit": 1,
                    "retrieve_bit": 2
                },
                "PTR_": {
                    "ptr_": 1
                },
                "PTR_XXXX": {
                    "unchanged": 1
                },
                "original_variable_name_1": {
                    "shifted": 1
                },
                "original_variable_name_2": {
                    "index": 1
                },
                "param_1": {
                    "bit_number": 1,
                    "bit_position": 1,
                    "data": 1,
                    "flag_id": 1,
                    "index": 2,
                    "input": 1,
                    "input_index": 1,
                    "input_num": 1,
                    "input_uint": 1,
                    "input_value": 9,
                    "value": 12
                },
                "param_2": {
                    "address": 4,
                    "address_offset": 1,
                    "array": 2,
                    "array_address": 6,
                    "array_base_address": 1,
                    "array_pointer": 1,
                    "array_ptr": 3,
                    "base_address": 6,
                    "data_address": 1,
                    "data_array": 2,
                    "data_start": 1,
                    "integer": 1,
                    "pointer": 1,
                    "pointer_offset": 1
                },
                "param_3": {
                    "bit_index": 1,
                    "bit_shift_amount": 1,
                    "mask": 1
                },
                "return_value": {
                    "bit_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005848",
                "FUN_080057b4",
                "FUN_08005890"
            ],
            "code": "\nuint get_bit_value_at_offset_080047f4(uint value,int array_address)\n\n{\n  return *(uint *)(array_address + ((value << 0x18) >> 0x1c) * 4) >> (value & 0xf) & 1;\n}\n\n",
            "current_name": "get_bit_value_at_offset_080047f4",
            "entrypoint": "0x080047f4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080047f4": "get_bit_value_at_offset_080047f4",
                "param_1": "value",
                "param_2": "array_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800480a": {
            "additional_data": {
                "FUN_0800480a": {
                    "apply_bitmask": 1,
                    "bitwise_or_shift": 1,
                    "insert_bit_into_array": 1,
                    "set_bit": 5,
                    "set_bit_in_array": 10,
                    "set_bit_value_at_position": 1,
                    "store_bit_at_index": 1,
                    "update_bit": 4,
                    "update_bit_array": 1,
                    "update_bit_in_array": 1,
                    "update_bit_value": 1,
                    "update_bitwise_operation": 1,
                    "update_data": 1,
                    "update_memory": 1,
                    "write_bit": 1
                },
                "param_1": {
                    "bit_index": 7,
                    "bit_number": 1,
                    "bit_position": 14,
                    "index": 1,
                    "input_value": 6,
                    "value": 2
                },
                "param_2": {
                    "array": 11,
                    "array_address": 11,
                    "array_base": 1,
                    "array_pointer": 1,
                    "array_ptr": 2,
                    "bit_array": 1,
                    "data_array": 2,
                    "data_buffer": 1,
                    "memory_address": 1
                },
                "uVar1": {
                    "array_index": 4,
                    "bit_index": 1,
                    "byte_index": 4,
                    "byte_offset": 2,
                    "index": 5,
                    "shift_amount": 1,
                    "shifted_index": 8,
                    "shifted_position": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080057b4"
            ],
            "code": "\nvoid set_bit_in_array_0800480a(uint bit_position,int array)\n\n{\n  uint shifted_index;\n  \n  shifted_index = (bit_position << 0x18) >> 0x1c;\n  *(uint *)(array + shifted_index * 4) = *(uint *)(array + shifted_index * 4) | 1 << (bit_position & 0xf);\n  return;\n}\n\n",
            "current_name": "set_bit_in_array_0800480a",
            "entrypoint": "0x0800480a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800480a": "set_bit_in_array_0800480a",
                "param_1": "bit_position",
                "param_2": "array",
                "uVar1": "shifted_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004828": {
            "additional_data": {
                "1": {
                    "bit_mask": 1
                },
                "FUN_08004828": {
                    "modify_memory_bits": 1,
                    "reverse_bits": 1,
                    "set_bit_value": 1,
                    "update_bit": 8,
                    "update_bit_at_position": 1,
                    "update_bit_in_array": 8,
                    "update_bit_in_memory": 1,
                    "update_bit_value": 4,
                    "update_bits": 1,
                    "update_data": 1,
                    "update_value_at_index": 1,
                    "update_value_at_offset": 1,
                    "update_value_in_array": 1
                },
                "param_1": {
                    "bit": 1,
                    "bit_index": 4,
                    "bit_position": 15,
                    "data_index": 1,
                    "index": 1,
                    "index_value": 1,
                    "input": 2,
                    "input_value": 3,
                    "val": 1,
                    "value": 2
                },
                "param_2": {
                    "arr": 1,
                    "array": 5,
                    "array_address": 11,
                    "array_base_address": 1,
                    "array_pointer": 1,
                    "buffer": 1,
                    "data": 3,
                    "data_address": 1,
                    "data_arr": 1,
                    "data_array": 1,
                    "data_pointer": 2,
                    "mem_address": 1,
                    "memory_address": 2
                },
                "uVar1": {
                    "array_index": 1,
                    "bit_index": 1,
                    "bit_position": 2,
                    "byte_index": 2,
                    "byte_position": 1,
                    "index": 3,
                    "index_in_array": 1,
                    "offset": 1,
                    "shifted_bit_position": 2,
                    "shifted_bits": 1,
                    "shifted_index": 8,
                    "shifted_position": 2,
                    "shifted_value": 1,
                    "target_index": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080057b4"
            ],
            "code": "\nvoid update_bit_in_array_08004828(uint bit_position,int array_address)\n\n{\n  uint shifted_index;\n  \n  shifted_index = (bit_position << 0x18) >> 0x1c;\n  *(uint *)(array_address + shifted_index * 4) = *(uint *)(array_address + shifted_index * 4) & ~(1 << (bit_position & 0xf));\n  return;\n}\n\n",
            "current_name": "update_bit_in_array_08004828",
            "entrypoint": "0x08004828",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004828": "update_bit_in_array_08004828",
                "param_1": "bit_position",
                "param_2": "array_address",
                "uVar1": "shifted_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004848": {
            "additional_data": {
                "0": {
                    "0x40010800": 2,
                    "addr_0": 1,
                    "addr_case_0": 1,
                    "address0": 1,
                    "address_0": 3,
                    "base_address": 2,
                    "case_value0": 1,
                    "mapped_value_0": 1,
                    "mem_address_0": 1,
                    "mem_address_1": 1,
                    "memory_address_0": 3
                },
                "1": {
                    "0x40010c00": 2,
                    "addr_1": 1,
                    "addr_case_1": 1,
                    "address1": 1,
                    "address_1": 3,
                    "case_value1": 1,
                    "mapped_value_1": 1,
                    "mem_address_1": 1,
                    "mem_address_2": 1,
                    "memory_address_1": 3,
                    "second_address": 1
                },
                "2": {
                    "0x40011000": 2,
                    "addr_2": 1,
                    "addr_case_2": 1,
                    "address2": 1,
                    "address_2": 3,
                    "case_value2": 1,
                    "mapped_value_2": 1,
                    "mem_address_2": 1,
                    "mem_address_3": 1,
                    "memory_address_2": 3,
                    "third_address": 1
                },
                "3": {
                    "0x40011400": 2,
                    "addr_3": 1,
                    "addr_case_3": 1,
                    "address3": 1,
                    "address_3": 3,
                    "case_value3": 1,
                    "fourth_address": 1,
                    "mapped_value_3": 1,
                    "mem_address_3": 1,
                    "mem_address_4": 1,
                    "memory_address_3": 3
                },
                "4": {
                    "0x40011800": 2,
                    "addr_4": 1,
                    "addr_case_4": 1,
                    "address4": 1,
                    "address_4": 3,
                    "case_value4": 1,
                    "fifth_address": 1,
                    "mapped_value_4": 1,
                    "mem_address_4": 1,
                    "mem_address_5": 1,
                    "memory_address_4": 3
                },
                "FUN_08004848": {
                    "get_address": 1,
                    "get_address_from_param": 1,
                    "get_memory_address": 20,
                    "get_memory_location": 1,
                    "get_memory_offset": 1,
                    "map_param_to_address": 5,
                    "map_parameter_value": 2
                },
                "case_0": {
                    "base_address": 1
                },
                "case_1": {
                    "address_a": 1
                },
                "case_2": {
                    "address_b": 1
                },
                "case_3": {
                    "address_c": 1
                },
                "case_4": {
                    "address_d": 1
                },
                "param_1": {
                    "index": 5,
                    "input": 8,
                    "input_num": 1,
                    "input_number": 1,
                    "input_value": 5,
                    "option": 1,
                    "param": 6,
                    "parameter": 1,
                    "value": 3
                },
                "return": {
                    "address": 2,
                    "memory_address": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005848",
                "FUN_08005890"
            ],
            "code": "\nundefined4 get_memory_address_08004848(undefined4 input)\n\n{\n  switch(input) {\n  case 0:\n    address 0x40010800;\n  case 1:\n    address 0x40010c00;\n  case 2:\n    address 0x40011000;\n  case 3:\n    address 0x40011400;\n  case 4:\n    address 0x40011800;\n  default:\n    address 0;\n  }\n}\n\n",
            "current_name": "get_memory_address_08004848",
            "entrypoint": "0x08004848",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004848": "get_memory_address_08004848",
                "param_1": "input",
                "return": "address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004884": {
            "additional_data": {
                "FUN_08004884": {
                    "apply_flag_to_address": 1,
                    "configure_peripheral": 1,
                    "set_control_bits": 1,
                    "set_dat_40021018": 1,
                    "set_device_address": 1,
                    "set_flag": 1,
                    "set_flag_and_return_address": 5,
                    "set_flag_for_address": 1,
                    "set_flag_offset": 1,
                    "set_flags_and_return_address": 2,
                    "set_memory_address": 3,
                    "set_memory_and_return_address": 1,
                    "set_memory_permission": 1,
                    "set_memory_permissions": 1,
                    "set_peripheral_access": 1,
                    "set_permissions": 1,
                    "set_port_and_return_address": 1,
                    "set_register_value": 5,
                    "set_register_values": 1,
                    "update_flag_and_return": 1
                },
                "_DAT_40021018": {
                    "flag_offset": 1,
                    "peripheral_register": 1,
                    "register_value": 3
                },
                "param_1": {
                    "address_type": 1,
                    "device_index": 1,
                    "flag": 7,
                    "flag_index": 3,
                    "flag_number": 1,
                    "input": 1,
                    "input_value": 2,
                    "memory_region": 1,
                    "option": 1,
                    "peripheral_index": 2,
                    "permission": 1,
                    "permission_level": 1,
                    "port_number": 1,
                    "register_index": 4,
                    "value": 4
                },
                "uVar1": {
                    "address": 10,
                    "base_address": 1,
                    "new_address": 3,
                    "new_value": 1,
                    "output": 1,
                    "output_value": 2,
                    "register_address": 1,
                    "result": 1,
                    "return_address": 6,
                    "return_value": 5
                }
            },
            "called": [],
            "calling": [
                "FUN_08004974",
                "FUN_08004bb0",
                "FUN_08004f4c"
            ],
            "code": "\n\n\nundefined4 set_flag_and_return_address_08004884(undefined4 flag)\n\n{\n  undefined4 address;\n  \n  switch(flag) {\n  case 0:\n    _DAT_40021018 = _DAT_40021018 | 4;\n    address = 0x40010800;\n    break;\n  case 1:\n    _DAT_40021018 = _DAT_40021018 | 8;\n    address = 0x40010c00;\n    break;\n  case 2:\n    _DAT_40021018 = _DAT_40021018 | 0x10;\n    address = 0x40011000;\n    break;\n  case 3:\n    _DAT_40021018 = _DAT_40021018 | 0x20;\n    address = 0x40011400;\n    break;\n  case 4:\n    _DAT_40021018 = _DAT_40021018 | 0x40;\n    address = 0x40011800;\n    break;\n  default:\n    address = 0;\n  }\n  return address;\n}\n\n",
            "current_name": "set_flag_and_return_address_08004884",
            "entrypoint": "0x08004884",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004884": "set_flag_and_return_address_08004884",
                "param_1": "flag",
                "uVar1": "address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800492c": {
            "additional_data": {
                "FUN_0800492c": {
                    "calculate_modified_value": 1,
                    "calculate_result": 4,
                    "calculate_shift_bits": 1,
                    "calculate_shift_value": 1,
                    "calculate_shifted_value": 8,
                    "calculate_threshold": 1,
                    "calculate_value": 1,
                    "check_and_convert_value": 1,
                    "check_input_range": 1,
                    "extract_and_shift_bits": 2,
                    "extract_bit": 1,
                    "extracted_function": 2,
                    "get_shifted_value": 4,
                    "process_function": 1,
                    "process_value": 1,
                    "validate_input": 1
                },
                "iVar1": {
                    "calculated_value": 1,
                    "result": 25,
                    "result_1": 1,
                    "shifted_value": 4
                },
                "param_1": {
                    "arg1": 2,
                    "input": 2,
                    "input1": 9,
                    "input_1": 6,
                    "input_param": 2,
                    "input_param1": 1,
                    "input_param_1": 1,
                    "input_value": 6,
                    "value_1": 1,
                    "var1": 1
                },
                "param_2": {
                    "arg2": 2,
                    "input2": 8,
                    "input_2": 5,
                    "input_param_2": 1,
                    "unused": 1,
                    "unused_param": 7,
                    "value_2": 1,
                    "var2": 1
                },
                "param_3": {
                    "arg3": 2,
                    "array_size": 1,
                    "array_start": 1,
                    "data": 1,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "input3": 9,
                    "input_3": 6,
                    "input_param3": 1,
                    "input_param_3": 1,
                    "param_3": 1,
                    "second_input": 1,
                    "unused_param": 1,
                    "unused_param2": 1,
                    "value_3": 1,
                    "var3": 1
                },
                "param_4": {
                    "arg4": 2,
                    "array_end": 1,
                    "data_length": 1,
                    "input4": 9,
                    "input_4": 6,
                    "input_param4": 1,
                    "input_param_4": 1,
                    "param_4": 1,
                    "size": 3,
                    "third_input": 1,
                    "unused_param": 1,
                    "unused_param3": 1,
                    "unused_param_2": 1,
                    "value_4": 1,
                    "var4": 1
                },
                "uVar2": {
                    "bit_value": 1,
                    "converted_value": 1,
                    "modified_value": 1,
                    "result": 3,
                    "shifted_bits": 2,
                    "shifted_result": 9,
                    "shifted_value": 13,
                    "threshold": 1
                }
            },
            "called": [
                "FUN_08004cce"
            ],
            "calling": [
                "FUN_08004a4c"
            ],
            "code": "\nuint calculate_shifted_value_0800492c(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  int result;\n  uint shifted_value;\n  \n  result = FUN_08004cce(input1,&DAT_08007400,input3,input4,input4);\n  shifted_value = (uint)(result << 0xc) >> 0x1b;\n  if (0x10 < shifted_value - 1) {\n    shifted_value = 0;\n  }\n  return shifted_value;\n}\n\n",
            "current_name": "calculate_shifted_value_0800492c",
            "entrypoint": "0x0800492c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800492c": "calculate_shifted_value_0800492c",
                "iVar1": "result",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar2": "shifted_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004948": {
            "additional_data": {
                "0": {
                    "return_code_4": 1
                },
                "0xc": {
                    "return_code_5": 1
                },
                "2": {
                    "shift_value": 1
                },
                "3": {
                    "return_code_1": 1
                },
                "4": {
                    "return_code_2": 1
                },
                "8": {
                    "return_code_3": 1
                },
                "FUN_08004948": {
                    "analyze_input": 1,
                    "calculate_return_code": 1,
                    "calculate_return_value": 2,
                    "check_and_return": 1,
                    "check_result": 4,
                    "check_return_value": 1,
                    "check_shifted_value": 2,
                    "classify_value": 1,
                    "decode_value": 1,
                    "determine_output_value": 1,
                    "get_operation_result": 1,
                    "get_result": 1,
                    "get_return_code": 1,
                    "get_return_value": 2,
                    "get_shift_value": 1,
                    "get_shifted_value": 1,
                    "parse_data": 1,
                    "parse_input": 1,
                    "process_data": 2,
                    "process_input": 4,
                    "process_return_value": 1
                },
                "iVar1": {
                    "result": 31
                },
                "param_1": {
                    "input": 4,
                    "input1": 5,
                    "input_1": 4,
                    "input_param": 7,
                    "input_param1": 1,
                    "input_param_1": 1,
                    "input_value": 7,
                    "input_var": 1,
                    "value": 1
                },
                "param_2": {
                    "constant": 1,
                    "constant_param_1": 1,
                    "data_1": 1,
                    "input2": 5,
                    "input_2": 4,
                    "input_param2": 1,
                    "input_param_2": 1,
                    "param2": 6,
                    "param_2": 3,
                    "unused_param": 7,
                    "unused_param1": 1
                },
                "param_3": {
                    "additional_param": 1,
                    "another_param": 1,
                    "constant_param_2": 1,
                    "data_2": 1,
                    "data_param": 2,
                    "flag": 1,
                    "input3": 5,
                    "input_3": 4,
                    "input_param3": 1,
                    "input_param_3": 1,
                    "lookup_table": 1,
                    "param3": 7,
                    "param_3": 3,
                    "unused_param": 1,
                    "unused_param2": 1
                },
                "param_4": {
                    "another_param": 1,
                    "code": 1,
                    "constant_param_3": 1,
                    "count_param": 1,
                    "data_3": 1,
                    "input4": 5,
                    "input_4": 4,
                    "input_param4": 1,
                    "input_param_4": 1,
                    "param4": 6,
                    "param_4": 4,
                    "size_param": 1,
                    "unused_param": 1,
                    "unused_param3": 1,
                    "value": 1,
                    "yet_another_param": 1
                },
                "uVar2": {
                    "shifted_bits": 2,
                    "shifted_result": 18,
                    "shifted_value": 11
                }
            },
            "called": [
                "FUN_08004cce"
            ],
            "calling": [
                "FUN_08004b3c"
            ],
            "code": "\nundefined4 get_return_code_08004948(undefined4 input_param,undefined4 unused_param,undefined4 param3,undefined4 param4)\n\n{\n  int result;\n  uint shifted_result;\n  \n  result = FUN_08004cce(input_param,&DAT_080074b4,param3,param4,param4);\n  shifted_result = (uint)(result << 0xc) >> 0x1b;\n  if (shifted_result == 3) {\n    return 8;\n  }\n  if (shifted_result != 4) {\n    if (shifted_result != 2) {\n      return 0;\n    }\n    return 4;\n  }\n  return 0xc;\n}\n\n",
            "current_name": "get_return_code_08004948",
            "entrypoint": "0x08004948",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004948": "get_return_code_08004948",
                "iVar1": "result",
                "param_1": "input_param",
                "param_2": "unused_param",
                "param_3": "param3",
                "param_4": "param4",
                "uVar2": "shifted_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004974": {
            "additional_data": {
                "FUN_08002624": {
                    "update_status": 1
                },
                "FUN_08004884": {
                    "process_data": 1
                },
                "FUN_08004974": {
                    "execute_command": 1,
                    "extract_and_update_flag": 1,
                    "initialize_flag": 3,
                    "initialize_flags": 2,
                    "process_binary_data": 1,
                    "process_data": 4,
                    "process_value": 1,
                    "set_flag_and_call_function": 1,
                    "update_data": 2,
                    "update_data_and_send": 1,
                    "update_data_flags": 1,
                    "update_flag": 1,
                    "update_flag_and_call_function": 1,
                    "update_flags": 1,
                    "update_flags_and_call_sub_function": 1,
                    "update_register_value": 1,
                    "update_setting": 1,
                    "update_status": 3,
                    "update_status_flag": 1
                },
                "iVar3": {
                    "current_flag": 1,
                    "current_setting": 1,
                    "current_status": 2,
                    "current_value": 6,
                    "data": 1,
                    "data_value": 2,
                    "flag": 3,
                    "flag_comparison": 1,
                    "flag_value": 4,
                    "initial_value": 1,
                    "input_value": 2,
                    "input_value_copy": 1,
                    "original_value": 2,
                    "value": 3,
                    "var_value": 1
                },
                "local_10": {
                    "another_value": 1,
                    "arg2": 1,
                    "arg3": 1,
                    "bit_mask": 1,
                    "constant2": 10,
                    "constant_0": 2,
                    "counter": 1,
                    "extra_flag": 1,
                    "offset": 2,
                    "param2": 2,
                    "param_3_new": 1,
                    "temp": 1,
                    "temp_value": 1,
                    "value": 1,
                    "value2": 5
                },
                "local_14": {
                    "arg1": 1,
                    "arg2": 1,
                    "bit_shift": 1,
                    "constant1": 10,
                    "constant_1": 1,
                    "constant_3": 1,
                    "count": 2,
                    "flag_value": 1,
                    "mask": 1,
                    "num_iterations": 1,
                    "param1": 2,
                    "param_2_new": 1,
                    "size": 1,
                    "some_value": 1,
                    "update_flag": 1,
                    "value1": 5
                },
                "local_18": {
                    "bit_check": 1,
                    "bit_flag": 1,
                    "bit_index": 1,
                    "bit_mask": 22,
                    "bitmask": 5,
                    "shifted_bit": 1
                },
                "param_1": {
                    "command": 1,
                    "data": 2,
                    "data_pointer": 6,
                    "flag": 2,
                    "flag_address": 1,
                    "flag_pointer": 4,
                    "flag_ptr": 1,
                    "input": 1,
                    "input_data": 4,
                    "input_pointer": 1,
                    "parameter1": 1,
                    "register_value": 1,
                    "setting_flag": 1,
                    "status": 2,
                    "status_flag": 1,
                    "status_pointer": 1,
                    "value": 1
                },
                "param_2": {
                    "additional_param": 1,
                    "data": 1,
                    "flag": 1,
                    "input_value": 1,
                    "new_parameter_value": 1,
                    "param": 12,
                    "param2": 3,
                    "param_2": 2,
                    "param_flag": 1,
                    "param_value": 3,
                    "parameter2": 1,
                    "setting_value": 1,
                    "value": 3
                },
                "uVar1": {
                    "result": 30,
                    "updated_setting": 1
                },
                "uVar2": {
                    "data_flag": 2,
                    "flag": 4,
                    "flag_bitmask": 1,
                    "flag_register": 1,
                    "flag_value": 5,
                    "flags": 1,
                    "modified_flag": 2,
                    "modified_value": 1,
                    "register_mask": 1,
                    "setting_mask": 1,
                    "status": 1,
                    "updated_data": 1,
                    "updated_flag": 2,
                    "updated_flags": 2,
                    "updated_status": 2,
                    "updated_value": 4
                }
            },
            "called": [
                "FUN_08002624",
                "FUN_08004884"
            ],
            "calling": [
                "FUN_0800213c"
            ],
            "code": "\n\n\nvoid update_flags_and_call_sub_function_08004974(int *data_pointer,undefined4 param)\n\n{\n  undefined4 result;\n  uint flag_value;\n  int current_value;\n  uint bit_mask;\n  undefined4 constant1;\n  undefined4 constant2;\n  \n  current_value = *data_pointer;\n  if (current_value == 0x40012400) {\n    flag_value = _DAT_40021018 | 0x200;\n    current_value = 0x200;\n    _DAT_40021018 = flag_value;\n  }\n  else {\n    flag_value = 0x40012800;\n    if (current_value == 0x40012800) {\n      flag_value = _DAT_40021018 | 0x400;\n      current_value = 0x400;\n      _DAT_40021018 = flag_value;\n    }\n  }\n  result = FUN_08004884((uint)((int)(char)DAT_20000080 << 0x18) >> 0x1c,param,flag_value,current_value);\n  bit_mask = 1 << (DAT_20000080 & 0xf) & 0xffff;\n  constant1 = 3;\n  constant2 = 0;\n  FUN_08002624(result,&bit_mask);\n  return;\n}\n\n",
            "current_name": "update_flags_and_call_sub_function_08004974",
            "entrypoint": "0x08004974",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004974": "update_flags_and_call_sub_function_08004974",
                "iVar3": "current_value",
                "local_10": "constant2",
                "local_14": "constant1",
                "local_18": "bit_mask",
                "param_1": "data_pointer",
                "param_2": "param",
                "uVar1": "result",
                "uVar2": "flag_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080049f0": {
            "additional_data": {
                "0xfffffbff": {
                    "clear_bit_mask_1": 1
                },
                "0xfffffdff": {
                    "clear_bit_mask_2": 1
                },
                "FUN_080049f0": {
                    "clear_memory_permissions": 1,
                    "configure_registers": 1,
                    "update_config": 1,
                    "update_configuration": 1,
                    "update_control_registers": 9,
                    "update_data": 1,
                    "update_flags": 1,
                    "update_flags_based_on_value": 1,
                    "update_memory_access_permissions": 1,
                    "update_memory_permissions": 1,
                    "update_memory_protection": 5,
                    "update_peripheral_settings": 1,
                    "update_permissions": 1,
                    "update_register": 1,
                    "update_register_flags": 1,
                    "update_registers": 1,
                    "update_registers_based_on_value": 1,
                    "update_settings": 1,
                    "update_values_based_on_param": 1
                },
                "_DAT_4002100c": {
                    "control_register1": 5,
                    "control_register_a": 1,
                    "data_register_1": 1,
                    "flag1": 1,
                    "memory_control_register1": 1,
                    "memory_permission_register1": 1,
                    "memory_protection_register_1": 1,
                    "register0c": 1,
                    "register1": 8,
                    "register1_value": 1,
                    "register_0c_value": 1,
                    "register_1": 1,
                    "register_a": 3
                },
                "_DAT_40021018": {
                    "control_register2": 5,
                    "control_register_b": 1,
                    "data_register_2": 1,
                    "flag2": 1,
                    "memory_control_register2": 1,
                    "memory_permission_register2": 1,
                    "memory_protection_register_2": 1,
                    "register18": 1,
                    "register2": 8,
                    "register2_value": 1,
                    "register_18_value": 1,
                    "register_2": 1,
                    "register_b": 3
                },
                "param_1": {
                    "address": 3,
                    "config": 1,
                    "config_ptr": 1,
                    "control_register": 1,
                    "data": 3,
                    "input_ptr": 1,
                    "input_value": 1,
                    "memory": 1,
                    "memory_address": 5,
                    "param": 1,
                    "peripheral_address": 1,
                    "register": 1,
                    "register_value": 3,
                    "registers": 1,
                    "settings": 1,
                    "value": 4,
                    "value_ptr": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800224c"
            ],
            "code": "\n\n\nvoid update_control_registers_080049f0(int *memory_address)\n\n{\n  if (*memory_address != 0x40012400) {\n    if (*memory_address == 0x40012800) {\n      _DAT_4002100c = _DAT_4002100c & 0xfffffbff;\n      _DAT_40021018 = _DAT_40021018 & 0xfffffbff;\n    }\n    return;\n  }\n  _DAT_4002100c = _DAT_4002100c & 0xfffffdff;\n  _DAT_40021018 = _DAT_40021018 & 0xfffffdff;\n  return;\n}\n\n",
            "current_name": "update_control_registers_080049f0",
            "entrypoint": "0x080049f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080049f0": "update_control_registers_080049f0",
                "param_1": "memory_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004a4c": {
            "additional_data": {
                "DAT_08007400": {
                    "data": 1
                },
                "DAT_20000080": {
                    "byte_param": 1,
                    "flag_data": 1,
                    "global_var": 1,
                    "unknown_value": 1,
                    "user_char": 1
                },
                "FUN_08001cd0": {
                    "check_condition4": 1,
                    "check_flag": 1,
                    "function9": 1,
                    "function_called_g": 1,
                    "parse_data": 1,
                    "perform_operation3": 1,
                    "process_data": 3,
                    "process_data2": 1
                },
                "FUN_08001e40": {
                    "extract_user": 1,
                    "function2": 1,
                    "function_called_a": 1,
                    "get_result": 1,
                    "get_result_value": 1,
                    "get_special_value": 1,
                    "perform_operation5": 1,
                    "process_result": 1,
                    "retrieve_value": 1,
                    "reverse": 1,
                    "reverse_something": 1
                },
                "FUN_08001e48": {
                    "check_buffer": 1,
                    "check_data": 1,
                    "check_input_params": 1,
                    "create_data": 1,
                    "function10": 1,
                    "function_called_b": 1,
                    "operate": 1,
                    "parse_buffer": 1,
                    "process_data3": 1,
                    "process_value": 1
                },
                "FUN_08001f80": {
                    "calculate_result": 1,
                    "check_condition5": 1,
                    "check_flag": 1,
                    "check_flags": 1,
                    "check_value": 1,
                    "check_value4": 1,
                    "function8": 1,
                    "function_called_h": 1,
                    "get_flag": 1,
                    "perform_operation4": 1
                },
                "FUN_08002004": {
                    "check_condition3": 1,
                    "check_condition5": 1,
                    "check_condition_4": 1,
                    "check_status5": 1,
                    "check_value6": 1,
                    "function12": 1,
                    "function_called_f": 1,
                    "perform_operation2": 1,
                    "reverse_another_thing": 1,
                    "reverse_data": 1,
                    "reverse_something_else": 1
                },
                "FUN_0800213c": {
                    "check_condition": 3,
                    "check_status": 1,
                    "check_value": 1,
                    "check_var1": 1,
                    "function4": 1,
                    "function_called_y": 1,
                    "get_status": 1,
                    "perform_operation": 1,
                    "validate_input": 1
                },
                "FUN_0800224c": {
                    "check_condition4": 1,
                    "check_condition7": 1,
                    "check_condition_3": 1,
                    "check_status4": 1,
                    "check_value5": 1,
                    "function11": 1,
                    "function_called_e": 1,
                    "perform_operation7": 1,
                    "reverse_data": 1,
                    "reverse_something_again": 1
                },
                "FUN_08002348": {
                    "check_condition3": 1,
                    "check_condition6": 1,
                    "check_condition_2": 1,
                    "check_status3": 1,
                    "check_value3": 1,
                    "check_var3": 1,
                    "function6": 1,
                    "function_called_d": 1,
                    "perform_operation6": 1,
                    "process_data": 1,
                    "reverse_something_else": 1
                },
                "FUN_08002384": {
                    "check_condition": 1,
                    "check_condition2": 2,
                    "check_status": 1,
                    "check_status2": 1,
                    "check_value2": 1,
                    "check_var2": 1,
                    "function5": 1,
                    "function_called_c": 1,
                    "perform_operation1": 1,
                    "validate_data": 1
                },
                "FUN_0800492c": {
                    "calculate_important_value": 1,
                    "calculate_length": 1,
                    "check_length": 3,
                    "check_size": 1,
                    "function1": 1,
                    "function_called_z": 1,
                    "get_counter_value": 1,
                    "get_num_attempts": 1,
                    "get_size": 1
                },
                "FUN_08004a4c": {
                    "check_and_process_binary": 1,
                    "check_and_process_data": 2,
                    "check_binary_integrity": 1,
                    "extract_binary_information": 1,
                    "parse_and_validate_input": 1,
                    "process_data": 1,
                    "reverse_binary_extraction": 1,
                    "validate_and_process_data": 3,
                    "validate_function": 1,
                    "validate_input": 1,
                    "validate_user": 1,
                    "validate_user_input": 1,
                    "verify_data": 1,
                    "verify_input_and_process": 1
                },
                "FUN_08004c78": {
                    "check_data": 1,
                    "check_data_validity": 1,
                    "check_input": 1,
                    "check_param": 1,
                    "function3": 1,
                    "function_called_x": 1,
                    "initialize": 1,
                    "initialize_buffer": 2,
                    "initialize_data": 1,
                    "process_input": 1
                },
                "FUN_080061e0": {
                    "function7": 1,
                    "initialize_buffer": 6,
                    "initialize_memory": 1,
                    "initialize_variables": 2
                },
                "iVar1": {
                    "error_code": 1,
                    "result": 4,
                    "status": 2
                },
                "local_10": {
                    "constant2": 3,
                    "constant_10": 1,
                    "constant_2": 1,
                    "flag_6": 1,
                    "local_variable12": 1,
                    "temp6": 1,
                    "temp7": 1,
                    "temp8": 2,
                    "temp_5": 1,
                    "temp_7": 1,
                    "temp_8": 2,
                    "temp_value_9": 1,
                    "temp_var7": 2,
                    "temp_var9": 2,
                    "tmp5": 1,
                    "unused_var5": 1,
                    "var2": 1,
                    "var6": 1,
                    "var7": 1,
                    "var8": 5
                },
                "local_1c": {
                    "const_value": 1,
                    "constant": 1,
                    "constant1": 3,
                    "constant_1": 1,
                    "constant_value": 1,
                    "flag_3": 1,
                    "flag_5": 1,
                    "local_variable11": 1,
                    "size": 1,
                    "temp5": 1,
                    "temp6": 1,
                    "temp7": 2,
                    "temp_7": 2,
                    "temp_value_8": 1,
                    "temp_var6": 2,
                    "temp_var8": 2,
                    "var1": 1,
                    "var5": 1,
                    "var7": 5
                },
                "local_20": {
                    "constant_4": 1,
                    "flag8": 1,
                    "flag_8": 1,
                    "local_variable10": 1,
                    "temp5": 1,
                    "temp6": 3,
                    "temp8": 1,
                    "temp_6": 3,
                    "temp_7": 1,
                    "temp_value_7": 1,
                    "temp_var7": 3,
                    "temp_var9": 2,
                    "tmp7": 1,
                    "unused_var7": 1,
                    "var6": 6,
                    "var8": 1,
                    "zero": 1
                },
                "local_24": {
                    "flag7": 1,
                    "flag_4": 1,
                    "local_variable9": 1,
                    "temp4": 3,
                    "temp5": 3,
                    "temp_4": 1,
                    "temp_5": 3,
                    "temp_value_6": 1,
                    "temp_var5": 2,
                    "temp_var6": 3,
                    "tmp4": 1,
                    "unused_var4": 1,
                    "value_5": 1,
                    "var4": 1,
                    "var5": 6
                },
                "local_28": {
                    "constant_3": 1,
                    "flag6": 1,
                    "flag_7": 1,
                    "local_variable8": 1,
                    "one": 1,
                    "temp4": 3,
                    "temp7": 1,
                    "temp8": 1,
                    "temp_4": 3,
                    "temp_6": 1,
                    "temp_value_5": 1,
                    "temp_var5": 3,
                    "temp_var8": 2,
                    "tmp6": 1,
                    "unused_var6": 1,
                    "var4": 6,
                    "var7": 1
                },
                "local_2c": {
                    "flag5": 1,
                    "flag_3": 1,
                    "local_variable7": 1,
                    "temp3": 6,
                    "temp_3": 4,
                    "temp_value_4": 1,
                    "temp_var4": 5,
                    "tmp3": 1,
                    "unused_var3": 1,
                    "value_4": 1,
                    "var3": 7
                },
                "local_30": {
                    "flag4": 1,
                    "flag_2": 1,
                    "local_variable6": 1,
                    "temp2": 6,
                    "temp_2": 4,
                    "temp_value_3": 1,
                    "temp_var3": 5,
                    "tmp2": 1,
                    "unused_var2": 1,
                    "value_3": 1,
                    "var2": 7
                },
                "local_34": {
                    "flag3": 1,
                    "flag_1": 1,
                    "local_variable5": 1,
                    "temp1": 6,
                    "temp_1": 4,
                    "temp_value_2": 1,
                    "temp_var2": 5,
                    "tmp1": 1,
                    "unused_var1": 1,
                    "value_2": 1,
                    "var1": 7
                },
                "local_38": {
                    "buffer": 20,
                    "data": 2,
                    "local_variable4": 1,
                    "temp": 1,
                    "temp_value_1": 1,
                    "temp_var1": 5
                },
                "local_3c": {
                    "check_flag_2": 1,
                    "condition2": 1,
                    "count": 1,
                    "flag2": 16,
                    "flag_2": 5,
                    "local_variable3": 1,
                    "status": 1,
                    "success_flag_2": 1,
                    "valid2": 1,
                    "value_1": 1
                },
                "local_40": {
                    "check_flag_1": 1,
                    "condition1": 1,
                    "flag": 3,
                    "flag1": 15,
                    "flag_1": 5,
                    "is_valid_length": 1,
                    "local_variable2": 1,
                    "state": 1,
                    "success_flag_1": 1,
                    "valid1": 1
                },
                "local_44": {
                    "binary_length": 1,
                    "buffer_size": 1,
                    "check_value": 2,
                    "count": 1,
                    "counter": 2,
                    "data_length": 4,
                    "length": 9,
                    "length_check": 1,
                    "local_variable1": 1,
                    "num_attempts": 2,
                    "num_iterations": 1,
                    "size": 2,
                    "value": 3
                },
                "local_46": {
                    "decoded_value": 1,
                    "final_result": 1,
                    "is_valid": 1,
                    "output": 1,
                    "output_data": 1,
                    "output_value": 3,
                    "parsed_value": 1,
                    "result": 21
                },
                "param_1": {
                    "binary_data": 1,
                    "data": 2,
                    "input": 4,
                    "input_data": 10,
                    "input_param": 6,
                    "input_parameter": 3,
                    "input_value": 4
                },
                "uVar2": {
                    "flag": 1,
                    "flags": 5,
                    "value": 1
                }
            },
            "called": [
                "FUN_0800492c",
                "FUN_08001e40",
                "FUN_08004c78",
                "FUN_0800213c",
                "FUN_08002384",
                "FUN_08002348",
                "FUN_080061e0",
                "FUN_08001f80",
                "FUN_08001cd0",
                "FUN_08001e48",
                "FUN_0800224c",
                "FUN_08002004"
            ],
            "calling": [
                "FUN_08005754"
            ],
            "code": "\nundefined2 validate_and_process_data_08004a4c(undefined4 input_data)\n\n{\n  int result;\n  uint flags;\n  undefined2 result;\n  uint length;\n  undefined4 flag1;\n  undefined4 flag2;\n  int buffer;\n  undefined4 var1;\n  undefined4 var2;\n  undefined4 var3;\n  undefined4 var4;\n  undefined4 var5;\n  undefined4 var6;\n  undefined4 var7;\n  undefined4 var8;\n  \n  FUN_080061e0(&buffer,0,0x30);\n  length = 0;\n  flag1 = 0;\n  flag2 = 0;\n  result = 0;\n  buffer = FUN_08004c78(input_data,&DAT_08007400);\n  if (buffer == 0) {\n    result = 0;\n  }\n  else {\n    var1 = 0;\n    var2 = 0;\n    var3 = 0;\n    var5 = 0;\n    var7 = 0xe0000;\n    var8 = 0;\n    var4 = 1;\n    var6 = 0;\n    DAT_20000080 = (undefined)input_data;\n    result = FUN_0800213c(&buffer);\n    if (result == 0) {\n      length = FUN_0800492c(input_data);\n      if (length < 0x12) {\n        flag1 = 1;\n        flag2 = 2;\n        result = FUN_08001e48(&buffer,&length);\n        if (result == 0) {\n          result = FUN_08002384(&buffer);\n          if (result == 0) {\n            result = FUN_08002004(&buffer);\n            if (result == 0) {\n              result = FUN_08001cd0(&buffer,10);\n              if (result == 0) {\n                flags = FUN_08001f80(&buffer);\n                if ((flags & 0x200) != 0) {\n                  result = FUN_08001e40(&buffer);\n                }\n                result = FUN_08002348(&buffer);\n                if (result == 0) {\n                  result = FUN_0800224c(&buffer);\n                  if (result != 0) {\n                    result = 0;\n                  }\n                }\n                else {\n                  result = 0;\n                }\n              }\n              else {\n                result = 0;\n              }\n            }\n            else {\n              result = 0;\n            }\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        result = 0;\n      }\n    }\n    else {\n      result = 0;\n    }\n  }\n  return result;\n}\n\n",
            "current_name": "validate_and_process_data_08004a4c",
            "entrypoint": "0x08004a4c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004a4c": "validate_and_process_data_08004a4c",
                "iVar1": "result",
                "local_10": "var8",
                "local_1c": "var7",
                "local_20": "var6",
                "local_24": "var5",
                "local_28": "var4",
                "local_2c": "var3",
                "local_30": "var2",
                "local_34": "var1",
                "local_38": "buffer",
                "local_3c": "flag2",
                "local_40": "flag1",
                "local_44": "length",
                "local_46": "result",
                "param_1": "input_data",
                "uVar2": "flags"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004b34": {
            "additional_data": {
                "FUN_08004b34": {
                    "execute_application": 3,
                    "execute_initial_function": 2,
                    "execute_initial_logic": 1,
                    "execute_initialization": 9,
                    "execute_main_function": 2,
                    "execute_startup_function": 1,
                    "initialize": 4,
                    "initialize_and_execute": 1,
                    "initialize_application": 3,
                    "initialize_function": 1,
                    "initialize_system": 3,
                    "start_binary_processing": 1
                },
                "FUN_08004d90": {
                    "call_sub_function": 2,
                    "execute_initialization": 1,
                    "execute_main_task": 1,
                    "execute_operation": 1,
                    "execute_sub_function": 4,
                    "execute_subfunction": 1,
                    "execute_system_initialization": 1,
                    "initialize_data": 3,
                    "initialize_parameters": 3,
                    "perform_action": 2,
                    "perform_data_processing": 1,
                    "perform_initialization": 4,
                    "perform_main_task": 1,
                    "perform_operation": 3,
                    "process_data": 3
                },
                "param_1": {
                    "data": 2,
                    "data_array": 1,
                    "data_pointer": 2,
                    "input": 1,
                    "input_array": 3,
                    "input_data": 3,
                    "operation_parameter": 1,
                    "sub_function_argument": 1,
                    "system_initialization_data": 1
                }
            },
            "called": [
                "FUN_08004d90"
            ],
            "calling": [
                "FUN_08003ed8"
            ],
            "code": "\nvoid execute_initialization_08004b34(void)\n\n{\n  FUN_08004d90();\n  return;\n}\n\n",
            "current_name": "execute_initialization_08004b34",
            "entrypoint": "0x08004b34",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004b34": "execute_initialization_08004b34"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004b3c": {
            "additional_data": {
                "FUN_08003ed8": {
                    "cleanup": 6,
                    "cleanup_buffer": 1,
                    "cleanup_result_array": 1,
                    "cleanup_results": 1,
                    "cleanup_results_array": 1
                },
                "FUN_080040b0": {
                    "handle_flag_false": 1,
                    "handle_flag_set": 2,
                    "handle_flags": 1,
                    "handle_non_critical": 1,
                    "handle_non_flag": 1,
                    "process_array": 1,
                    "process_data_with_flags": 1,
                    "process_result_array1": 1,
                    "process_results_array": 1
                },
                "FUN_0800412c": {
                    "handle_critical": 1,
                    "handle_flag": 1,
                    "handle_flag_not_set": 1,
                    "handle_flag_true": 1,
                    "handle_flag_unset": 1,
                    "handle_flags": 1,
                    "process_data_without_flags": 1,
                    "process_flags": 1,
                    "process_result_array2": 1,
                    "reverse_array": 1
                },
                "FUN_08004948": {
                    "check_condition": 2,
                    "check_conditions": 1,
                    "check_error": 1,
                    "check_error_code": 1,
                    "check_status": 4,
                    "validate_result": 1
                },
                "FUN_08004b3c": {
                    "analyze_data": 1,
                    "analyze_param": 1,
                    "extract_and_process_data": 1,
                    "process_data": 26,
                    "process_function": 1
                },
                "FUN_08004c78": {
                    "calculate_result": 1,
                    "get_data": 1,
                    "get_initial_value": 2,
                    "initialize_array": 2,
                    "initialize_buffer": 1,
                    "initialize_result_array": 1,
                    "initialize_results_array": 1
                },
                "FUN_08004cce": {
                    "calculate_flag": 1,
                    "calculate_flags": 1,
                    "check_flag": 1,
                    "get_flag": 1,
                    "get_flags": 2,
                    "perform_computation": 1,
                    "perform_operation": 2,
                    "retrieve_flags": 1
                },
                "iVar1": {
                    "error_code": 2,
                    "result": 19,
                    "return_value": 1,
                    "status": 5,
                    "status_variable": 1
                },
                "local_50": {
                    "array": 2,
                    "buffer": 1,
                    "data": 2,
                    "data_array": 10,
                    "result_array": 6,
                    "results": 5,
                    "results_array": 1,
                    "temp_array": 1,
                    "values": 3
                },
                "param_1": {
                    "arg": 1,
                    "data": 10,
                    "input": 8,
                    "input_data": 8,
                    "input_param": 4
                },
                "uVar2": {
                    "flag": 9,
                    "flag_value": 1,
                    "flag_variable": 1,
                    "flags": 14,
                    "status": 1
                }
            },
            "called": [
                "FUN_08004cce",
                "FUN_08004948",
                "FUN_08004c78",
                "FUN_08003ed8",
                "FUN_0800412c",
                "FUN_080040b0"
            ],
            "calling": [
                "FUN_080057b4"
            ],
            "code": "\nvoid extract_and_process_data_08004b3c(undefined4 data)\n\n{\n  int result;\n  uint flags;\n  int data_array [17];\n  \n  data_array[0] = FUN_08004c78(data,&DAT_080074b4);\n  if ((data_array[0] != 0) &&\n     ((((result = FUN_08004948(data), result == 0 || (result == 4)) || (result == 8)) ||\n      ((result == 0xc || (result == 0x18)))))) {\n    flags = FUN_08004cce(data,&DAT_080074b4);\n    if ((flags & 0x100000) == 0) {\n      FUN_080040b0(data_array,result);\n    }\n    else {\n      FUN_0800412c(data_array,result);\n    }\n    FUN_08003ed8(data_array);\n  }\n  return;\n}\n\n",
            "current_name": "extract_and_process_data_08004b3c",
            "entrypoint": "0x08004b3c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004b3c": "extract_and_process_data_08004b3c",
                "iVar1": "result",
                "local_50": "data_array",
                "param_1": "data",
                "uVar2": "flags"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004b94": {
            "additional_data": {
                "FUN_08001cc4": {
                    "call_helper_function": 1,
                    "call_initialization": 1,
                    "called_function": 1,
                    "do_something": 1,
                    "execute_initialization": 2,
                    "execute_process": 1,
                    "execute_startup": 1,
                    "execute_startup_operations": 1,
                    "execute_startup_process": 1,
                    "initialize_components": 2,
                    "initialize_configuration": 1,
                    "initialize_internal_data": 1,
                    "initialize_module": 1,
                    "initialize_resources": 1,
                    "initialize_subsystem": 1,
                    "load_data": 2,
                    "perform_initial_setup": 2,
                    "perform_initialization": 7,
                    "sub_function": 1,
                    "sub_initialize": 1,
                    "subfunction": 1
                },
                "FUN_08004b94": {
                    "execute_initialization": 1,
                    "execute_startup_function": 1,
                    "initialize": 11,
                    "initialize_and_execute": 1,
                    "initialize_application": 7,
                    "initialize_components": 1,
                    "initialize_program": 1,
                    "initialize_system": 8
                }
            },
            "called": [
                "FUN_08001cc4"
            ],
            "calling": [
                "FUN_080058e0"
            ],
            "code": "\nvoid initialize_system_08004b94(void)\n\n{\n  FUN_08001cc4();\n  return;\n}\n\n",
            "current_name": "initialize_system_08004b94",
            "entrypoint": "0x08004b94",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004b94": "initialize_system_08004b94"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004b9c": {
            "called": [],
            "calling": [
                "FUN_08004b9e"
            ],
            "code": "\nvoid FUNC_08004b9c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08004b9c",
            "entrypoint": "0x08004b9c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08004b9c": "FUNC_08004b9c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08004b9e": {
            "additional_data": {
                "FUNC_08004b9c": {
                    "cleanup": 1,
                    "configure_settings": 1,
                    "execute_some_operation": 1,
                    "execute_sub_function2": 1,
                    "execute_subfunction": 1,
                    "handle_special_cases": 1,
                    "initialize_components": 1,
                    "initialize_graphics": 1,
                    "initialize_process": 1,
                    "perform_action": 1,
                    "perform_additional_task": 1,
                    "perform_additional_tasks": 1,
                    "perform_cleanup": 5,
                    "perform_finalization": 2,
                    "perform_system_checks": 1,
                    "perform_task": 6,
                    "process_data": 1,
                    "secondary_setup_function": 1,
                    "sub_function3": 1
                },
                "FUN_08001cac": {
                    "check_security": 1,
                    "configure_settings": 2,
                    "do_task2": 1,
                    "execute_initialization": 1,
                    "execute_sub_function3": 1,
                    "initialize_components": 4,
                    "initialize_environment": 1,
                    "initialize_network": 1,
                    "initialize_resources": 2,
                    "initialize_system": 3,
                    "load_configuration": 2,
                    "perform_initialization": 3,
                    "perform_preparation": 1,
                    "setup": 1,
                    "setup_environment": 5,
                    "sub_function1": 1
                },
                "FUN_08002582": {
                    "check_input": 1,
                    "configure_settings": 2,
                    "display_user_interface": 1,
                    "do_task1": 1,
                    "execute_operation": 1,
                    "execute_secondary_function": 1,
                    "execute_secondary_tasks": 1,
                    "execute_step": 1,
                    "execute_sub_function1": 1,
                    "execute_subroutine": 1,
                    "handle_interrupts": 1,
                    "initialize_components": 3,
                    "initialize_data": 1,
                    "initialize_data_structures": 1,
                    "initialize_graphics": 1,
                    "initialize_resources": 3,
                    "load_data": 3,
                    "load_resources": 1,
                    "perform_analysis": 1,
                    "perform_calculations": 1,
                    "perform_initialization": 1,
                    "perform_security_checks": 1,
                    "sub_function2": 1
                },
                "FUN_08004b9e": {
                    "execute_application": 1,
                    "execute_initialization": 1,
                    "execute_initialization_process": 1,
                    "execute_main_function": 1,
                    "execute_main_process": 1,
                    "execute_main_program": 1,
                    "execute_main_tasks": 1,
                    "execute_setup_function": 1,
                    "initialize": 2,
                    "initialize_and_execute": 1,
                    "initialize_application": 1,
                    "initialize_program": 5,
                    "initialize_system": 8
                }
            },
            "called": [
                "FUN_08004b9c",
                "FUN_08002582",
                "FUN_08001cac"
            ],
            "calling": [],
            "code": "\nvoid initialize_system_08004b9e(void)\n\n{\n  FUN_08001cac();\n  FUN_08002582();\n  FUNC_08004b9c();\n  return;\n}\n\n",
            "current_name": "initialize_system_08004b9e",
            "entrypoint": "0x08004b9e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004b9e": "initialize_system_08004b9e"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004bb0": {
            "additional_data": {
                "FUN_08004bb0": {
                    "configure_device": 1,
                    "configure_hardware": 1,
                    "configure_peripheral": 3,
                    "handle_param": 1,
                    "initialize": 1,
                    "initialize_component": 1,
                    "initialize_device": 5,
                    "initialize_function": 2,
                    "initialize_gpio": 1,
                    "initialize_hardware": 1,
                    "initialize_module": 1,
                    "initialize_peripheral": 8,
                    "initialize_registers": 1,
                    "initialize_registry": 1,
                    "initialize_settings": 1,
                    "setup_peripheral": 2
                },
                "_DAT_40010004": {
                    "another_register": 1,
                    "reg2": 1,
                    "register2": 6,
                    "register_b": 1,
                    "system_register": 1
                },
                "_DAT_40021018": {
                    "peripheral_register": 1,
                    "reg1": 1,
                    "register1": 6,
                    "register_a": 1,
                    "some_register": 1
                },
                "local_14": {
                    "condition": 1,
                    "constant": 7,
                    "constant1": 1,
                    "constant_three": 1,
                    "constant_value": 6,
                    "flag": 1,
                    "local_param3": 4,
                    "local_var": 3,
                    "local_var3": 4,
                    "local_variable": 2,
                    "value": 1
                },
                "local_18": {
                    "config_ptr": 1,
                    "data2": 1,
                    "local_param2": 6,
                    "local_param3": 3,
                    "local_param_3": 1,
                    "local_var2": 4,
                    "new_config2": 1,
                    "new_option_param": 1,
                    "new_param3": 2,
                    "new_parameter3": 1,
                    "new_value2": 1,
                    "param2_copy": 2,
                    "param3_copy": 6,
                    "param_b_new": 1
                },
                "local_1c": {
                    "data1": 1,
                    "data_ptr": 1,
                    "local_param1": 6,
                    "local_param2": 3,
                    "local_param_2": 1,
                    "local_var1": 4,
                    "new_config1": 1,
                    "new_config_param": 1,
                    "new_param2": 2,
                    "new_parameter2": 1,
                    "new_value1": 1,
                    "param1_copy": 2,
                    "param2_copy": 6,
                    "param_a_new": 1
                },
                "local_20": {
                    "bit_mask": 22,
                    "bitmask": 3,
                    "flag": 1,
                    "mask": 4,
                    "pin_mask": 1
                },
                "param_1": {
                    "config_param1": 1,
                    "device": 1,
                    "device_config": 1,
                    "device_id": 4,
                    "device_type": 4,
                    "flag": 1,
                    "input": 2,
                    "input_param": 2,
                    "input_value": 8,
                    "module_id": 1,
                    "parameter": 1,
                    "peripheral_id": 1,
                    "peripheral_type": 2,
                    "pin": 1,
                    "pin_number": 1
                },
                "param_2": {
                    "config1": 1,
                    "config_param": 1,
                    "config_param2": 1,
                    "data": 1,
                    "param1": 4,
                    "param2": 15,
                    "param2_val": 1,
                    "param_2": 1,
                    "param_a": 1,
                    "parameter1": 1,
                    "parameter2": 3,
                    "value1": 1
                },
                "param_3": {
                    "config": 1,
                    "config2": 1,
                    "config_param3": 1,
                    "option_param": 1,
                    "param2": 4,
                    "param3": 15,
                    "param3_val": 1,
                    "param_3": 1,
                    "param_b": 1,
                    "parameter2": 1,
                    "parameter3": 3,
                    "value2": 1
                },
                "uVar1": {
                    "adjusted_device_id": 1,
                    "adjusted_param": 1,
                    "adjusted_value": 1,
                    "config_result": 1,
                    "configured_value": 1,
                    "converted_id": 1,
                    "converted_value": 2,
                    "module_id_shifted": 1,
                    "normalized_device_type": 1,
                    "output_value": 1,
                    "processed_param": 1,
                    "processed_value": 2,
                    "result": 4,
                    "shifted_device": 1,
                    "shifted_input": 1,
                    "shifted_param": 3,
                    "shifted_param1": 1,
                    "shifted_peripheral": 1,
                    "shifted_peripheral_type": 1,
                    "shifted_value": 3,
                    "translated_value": 2
                }
            },
            "called": [
                "FUN_08002624",
                "FUN_08004884"
            ],
            "calling": [
                "FUN_080057b4"
            ],
            "code": "\n\n\nvoid initialize_peripheral_08004bb0(uint input_value,undefined4 param2,undefined4 param3)\n\n{\n  undefined4 result;\n  uint bit_mask;\n  undefined4 param2_copy;\n  undefined4 local_param2;\n  undefined4 constant;\n  \n  result = FUN_08004884((input_value << 0x18) >> 0x1c);\n  bit_mask = 1 << (input_value & 0xf) & 0xffff;\n  constant = 3;\n  _DAT_40021018 = _DAT_40021018 | 1;\n  if ((input_value - 0xd & 0xff) < 2) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n  }\n  if (((input_value == 0xf) || (input_value == 0x13)) || (input_value == 0x14)) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n  }\n  param2_copy = param2;\n  local_param2 = param3;\n  FUN_08002624(result,&bit_mask);\n  return;\n}\n\n",
            "current_name": "initialize_peripheral_08004bb0",
            "entrypoint": "0x08004bb0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004bb0": "initialize_peripheral_08004bb0",
                "local_14": "constant",
                "local_18": "local_param2",
                "local_1c": "param2_copy",
                "local_20": "bit_mask",
                "param_1": "input_value",
                "param_2": "param2",
                "param_3": "param3",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004c30": {
            "additional_data": {
                "FUN_0800281e": {
                    "execute_action": 1,
                    "execute_function": 2,
                    "execute_process": 1,
                    "perform_action": 1,
                    "perform_operation": 4,
                    "perform_sub_action": 1,
                    "process_data": 6,
                    "process_flag": 1,
                    "update_flag": 1
                },
                "FUN_08004c30": {
                    "choose_action_based_on_param3": 1,
                    "choose_function_based_on_condition": 1,
                    "choose_function_based_on_param": 1,
                    "decide_execution_based_on_condition": 1,
                    "execute_based_on_condition": 1,
                    "execute_logic": 1,
                    "execute_operation": 1,
                    "perform_action_based_on_parameter": 1,
                    "perform_action_based_on_value": 1,
                    "process_condition": 2,
                    "process_decision": 1,
                    "process_flag": 1,
                    "process_input": 1,
                    "process_param": 12,
                    "process_parameter": 2,
                    "toggle_flag_based_on_condition": 1,
                    "update_status": 1
                },
                "param_1": {
                    "arg1": 6,
                    "arg_1": 1,
                    "config": 1,
                    "context": 1,
                    "data1": 1,
                    "flag_pointer": 1,
                    "func_param1": 1,
                    "function_pointer": 1,
                    "input": 1,
                    "input1": 6,
                    "input_1": 1,
                    "input_param": 1,
                    "input_ptr": 1,
                    "input_value": 1,
                    "param1": 3,
                    "param_value": 1,
                    "status": 1,
                    "sub_action_param1": 1,
                    "value1": 1
                },
                "param_2": {
                    "arg2": 6,
                    "arg_2": 1,
                    "data2": 1,
                    "flag": 1,
                    "flags": 1,
                    "func_param2": 1,
                    "input": 1,
                    "input2": 6,
                    "input_2": 1,
                    "input_data": 1,
                    "input_flag": 1,
                    "input_param2": 1,
                    "input_value": 1,
                    "param2": 3,
                    "param_flag": 1,
                    "sub_action_param2": 1,
                    "value": 1,
                    "value2": 1,
                    "value_pointer": 1
                },
                "param_3": {
                    "condition": 12,
                    "decision": 1,
                    "flag": 9,
                    "func_param3": 1,
                    "is_zero": 1,
                    "option": 2,
                    "param3": 1,
                    "param_count": 1,
                    "sub_action_param3": 1,
                    "switch_value": 1,
                    "type": 1
                },
                "param_4": {
                    "additional_data": 1,
                    "arg3": 2,
                    "arg4": 3,
                    "arg_4": 1,
                    "data": 9,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "extra_data": 1,
                    "function_param4": 1,
                    "input": 1,
                    "param": 1,
                    "param4": 3,
                    "param_data": 1,
                    "param_ptr": 1
                }
            },
            "called": [
                "FUN_0800281e"
            ],
            "calling": [
                "FUN_08005848"
            ],
            "code": "\nvoid process_param_08004c30(undefined4 input1,undefined2 input2,int condition,undefined4 data)\n\n{\n  if (condition == 0) {\n    FUN_0800281e(input1,input2,0,data,data);\n    return;\n  }\n  FUN_0800281e(input1,input2,1,data,data);\n  return;\n}\n\n",
            "current_name": "process_param_08004c30",
            "entrypoint": "0x08004c30",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004c30": "process_param_08004c30",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "condition",
                "param_4": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004c48": {
            "additional_data": {
                "FUN_08002810": {
                    "call_sub_function": 3,
                    "call_subfunction": 2,
                    "do_something": 1,
                    "execute_sub_function": 1,
                    "invoke_sub_function": 1,
                    "perform_operation": 3,
                    "perform_sub_operation": 1,
                    "perform_task": 1,
                    "process_data": 5,
                    "process_sub_function": 1,
                    "reverse_integer": 1,
                    "sub_function": 1
                },
                "FUN_08004c48": {
                    "call_and_return": 1,
                    "call_sub_function": 1,
                    "execute": 1,
                    "execute_func": 1,
                    "execute_function": 18,
                    "execute_main_function": 2,
                    "execute_process": 1,
                    "execute_task": 1,
                    "initialize": 2,
                    "initialize_data": 1,
                    "process_data": 1
                },
                "param_1": {
                    "address": 1,
                    "arg1": 7,
                    "argument_1": 1,
                    "data": 1,
                    "initial_value": 1,
                    "input1": 3,
                    "input_1": 4,
                    "input_arg1": 1,
                    "input_param": 1,
                    "input_param_1": 1,
                    "operation": 1,
                    "param1": 2,
                    "param_1": 2,
                    "sub_arg1": 1,
                    "sub_function_param1": 1,
                    "task_param1": 1,
                    "value1": 2
                },
                "param_2": {
                    "arg2": 7,
                    "argument_2": 1,
                    "counter": 1,
                    "data": 1,
                    "flags": 2,
                    "identifier": 1,
                    "input2": 3,
                    "input_2": 4,
                    "input_arg2": 1,
                    "input_param_2": 1,
                    "param2": 2,
                    "param_2": 2,
                    "sub_arg2": 1,
                    "sub_function_param2": 1,
                    "task_param2": 1,
                    "value2": 2
                },
                "param_3": {
                    "arg3": 10,
                    "argument_3": 1,
                    "input3": 4,
                    "input_3": 4,
                    "input_arg3": 1,
                    "input_param_3": 1,
                    "param1": 1,
                    "param3": 3,
                    "param_3": 2,
                    "size": 1,
                    "task_param3": 1,
                    "third_param": 1,
                    "value3": 1
                },
                "param_4": {
                    "arg4": 10,
                    "argument_4": 1,
                    "fourth_param": 1,
                    "input4": 4,
                    "input_4": 4,
                    "input_arg4": 1,
                    "input_param_4": 1,
                    "offset": 1,
                    "param2": 1,
                    "param4": 3,
                    "param_4": 2,
                    "task_param4": 1,
                    "value4": 1
                }
            },
            "called": [
                "FUN_08002810"
            ],
            "calling": [
                "FUN_08005890"
            ],
            "code": "\nvoid execute_main_function_08004c48(undefined4 arg1,undefined2 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  FUN_08002810(arg1,arg2,arg3,arg4,arg4);\n  return;\n}\n\n",
            "current_name": "execute_main_function_08004c48",
            "entrypoint": "0x08004c48",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004c48": "execute_main_function_08004c48",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004c52": {
            "additional_data": {
                "FUN_08001b48": {
                    "configure_settings": 1,
                    "execute_action": 1,
                    "execute_setup": 1,
                    "initialize_component_b": 4,
                    "initialize_components": 1,
                    "initialize_data": 1,
                    "initialize_devices": 1,
                    "initialize_function_2": 1,
                    "initialize_module2": 1,
                    "initialize_module_b": 1,
                    "initialize_part2": 1,
                    "initialize_peripherals": 1,
                    "initialize_second_component": 2,
                    "initialize_second_process": 1,
                    "initialize_sub_function2": 1,
                    "initialize_subcomponent2": 1,
                    "initialize_subfunction2": 1,
                    "initialize_subsystem2": 5,
                    "initialize_subsystem_b": 2,
                    "perform_action": 1,
                    "perform_preparations": 1,
                    "setup": 1
                },
                "FUN_08001c88": {
                    "initialize": 1,
                    "initialize_component_a": 4,
                    "initialize_first_component": 2,
                    "initialize_first_process": 1,
                    "initialize_function_1": 1,
                    "initialize_module": 1,
                    "initialize_module1": 1,
                    "initialize_module_a": 1,
                    "initialize_part1": 1,
                    "initialize_sensors": 1,
                    "initialize_sub_function1": 1,
                    "initialize_subcomponent1": 1,
                    "initialize_subfunction": 1,
                    "initialize_subfunction1": 1,
                    "initialize_subsystem": 1,
                    "initialize_subsystem1": 5,
                    "initialize_subsystem_a": 2,
                    "initialize_system": 1,
                    "perform_initialization": 2,
                    "perform_preprocessing": 1,
                    "perform_system_configuration": 1
                },
                "FUN_08004c52": {
                    "execute_init_functions": 2,
                    "execute_initialization": 3,
                    "initialize": 3,
                    "initialize_application": 3,
                    "initialize_components": 2,
                    "initialize_program": 8,
                    "initialize_system": 8,
                    "initialize_system_components": 1,
                    "run_startup_tasks": 1
                }
            },
            "called": [
                "FUN_08001c88",
                "FUN_08001b48"
            ],
            "calling": [
                "FUN_08001c32"
            ],
            "code": "\nvoid initialize_system_components_08004c52(void)\n\n{\n  FUN_08001c88();\n  FUN_08001b48();\n  return;\n}\n\n",
            "current_name": "initialize_system_components_08004c52",
            "entrypoint": "0x08004c52",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004c52": "initialize_system_components_08004c52"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004c5e": {
            "additional_data": {
                "DAT_08004c5e": {
                    "array_position": 1
                },
                "FUN_08004c5e": {
                    "find_integer_offset": 1,
                    "find_match": 2,
                    "find_matching_value": 1,
                    "find_matching_value_index": 1,
                    "find_param_in_list": 1,
                    "find_parameter_value": 2,
                    "find_value": 5,
                    "find_value_by_index": 1,
                    "find_value_by_key": 4,
                    "find_value_in_array": 5,
                    "find_value_in_buffer": 1,
                    "find_value_in_list": 1,
                    "find_value_index": 4,
                    "find_value_offset": 1,
                    "find_value_position": 1
                },
                "PTR_08001234": {
                    "ptr_next_value": 1
                },
                "PTR_08005678": {
                    "ptr_result": 1
                },
                "break": {
                    "found": 1
                },
                "loc_2": {
                    "current_element": 1
                },
                "loc_3": {
                    "offset": 1
                },
                "param_1": {
                    "index": 1,
                    "key": 4,
                    "target": 1,
                    "target_value": 8,
                    "value": 9,
                    "value_to_find": 8
                },
                "param_2": {
                    "address_pointer": 1,
                    "array": 13,
                    "array_of_values": 2,
                    "array_ptr": 3,
                    "buffer": 1,
                    "data": 4,
                    "data_array": 2,
                    "input_array": 1,
                    "list": 3,
                    "values": 1
                },
                "result": {
                    "found_value": 1
                }
            },
            "called": [
                "FUN_08004c5e"
            ],
            "calling": [
                "FUN_08004c5e",
                "FUN_08004c78"
            ],
            "code": "\nundefined4 find_value_in_array_08004c5e(int value,char *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      return 0;\n    }\n    if (*array == value) found;\n    array = array + 0xc;\n  }\n  return *(undefined4 *)(array + 4);\n}\n\n",
            "current_name": "find_value_in_array_08004c5e",
            "entrypoint": "0x08004c5e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004c5e": "find_value_in_array_08004c5e",
                "break": "found",
                "param_1": "value",
                "param_2": "array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004c78": {
            "additional_data": {
                "FUN_08004c5e": {
                    "perform_action": 1,
                    "process_data": 1,
                    "process_input": 3,
                    "process_param_2": 1
                },
                "FUN_08004c78": {
                    "check_and_return_result": 1,
                    "check_error_status": 1,
                    "check_if_valid_parameter": 1,
                    "check_param": 7,
                    "check_param_and_call_another_function": 1,
                    "check_param_and_call_function": 1,
                    "check_param_is_valid": 1,
                    "check_param_validity": 1,
                    "check_parameter": 2,
                    "check_parameter_validity": 1,
                    "check_return_value": 2,
                    "check_valid_param": 1,
                    "check_validity": 1,
                    "do_something": 1,
                    "process_input": 1,
                    "process_param": 2,
                    "process_param_1": 1,
                    "process_parameter_value": 1,
                    "validate_param": 3,
                    "validate_parameter": 1
                },
                "param_1": {
                    "error_code": 1,
                    "input": 6,
                    "input_param": 11,
                    "input_parameter": 1,
                    "input_value": 9,
                    "value": 3
                },
                "param_2": {
                    "data": 1,
                    "input_buffer": 2,
                    "input_string": 1,
                    "parameter_array": 1
                },
                "uVar1": {
                    "result": 21,
                    "result_value": 1,
                    "return_value": 5
                }
            },
            "called": [
                "FUN_08004c5e"
            ],
            "calling": [
                "FUN_080053d4",
                "FUN_08005384",
                "FUN_08004a4c",
                "FUN_08004b3c",
                "FUN_08004f4c"
            ],
            "code": "\nundefined4 check_param_is_valid_08004c78(int input_param)\n\n{\n  undefined4 result;\n  \n  if (input_param != -1) {\n    result = FUN_08004c5e();\n    return result;\n  }\n  return 0;\n}\n\n",
            "current_name": "check_param_is_valid_08004c78",
            "entrypoint": "0x08004c78",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004c78": "check_param_is_valid_08004c78",
                "param_1": "input_param",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004c8a": {
            "additional_data": {
                "DAT_": {
                    "dat_": 1
                },
                "FUN_08004c8a": {
                    "find_character": 4,
                    "find_character_by_id": 1,
                    "find_character_index": 1,
                    "find_character_offset": 1,
                    "find_character_position": 1,
                    "find_element_by_value": 1,
                    "find_element_index": 2,
                    "find_exact_match": 1,
                    "find_first_occurrence": 1,
                    "find_index_by_value": 1,
                    "find_param_position": 1,
                    "find_value_in_array": 7,
                    "find_value_in_list": 1,
                    "find_value_index": 8
                },
                "PTR_": {
                    "ptr_": 1
                },
                "array": {
                    "array_ptr": 1
                },
                "int": {
                    "index": 1
                },
                "param_1": {
                    "character": 4,
                    "character_code": 1,
                    "character_to_find": 2,
                    "element": 1,
                    "id": 1,
                    "search_value": 1,
                    "target_element": 1,
                    "target_param": 1,
                    "target_value": 3,
                    "value": 10,
                    "value_to_find": 6
                },
                "param_2": {
                    "array": 12,
                    "array_ptr": 2,
                    "character_array": 3,
                    "character_data": 1,
                    "character_list": 2,
                    "current_value": 1,
                    "data": 1,
                    "data_array": 3,
                    "list": 1,
                    "list_ptr": 1,
                    "param_array": 1,
                    "str": 1,
                    "string": 1,
                    "string_ptr": 1
                }
            },
            "called": [
                "FUN_08004c8a"
            ],
            "calling": [
                "FUN_08004c8a",
                "FUN_08004ca2"
            ],
            "code": "\nindex find_index_by_value_08004c8a(index value,char *array)\n\n{\n  while( true ) {\n    if (*(index *)(array + 4) == 0) {\n      return -1;\n    }\n    if (*(index *)(array + 4) == value) break;\n    array = array + 0xc;\n  }\n  return (index)*array;\n}\n\n",
            "current_name": "find_index_by_value_08004c8a",
            "entrypoint": "0x08004c8a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004c8a": "find_index_by_value_08004c8a",
                "int": "index",
                "param_1": "value",
                "param_2": "array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004ca2": {
            "additional_data": {
                "FUN_08004c8a": {
                    "get_value": 1,
                    "process_input": 1
                },
                "FUN_08004ca2": {
                    "check_for_nonzero": 1,
                    "check_if_non_zero_return_value": 1,
                    "check_input": 1,
                    "check_param": 12,
                    "check_parameter": 7,
                    "check_return_value": 2,
                    "check_valid_param": 1,
                    "check_value": 2,
                    "get_return_value": 1,
                    "get_value_or_default": 1,
                    "process_parameter": 1,
                    "validate_input": 1
                },
                "param_1": {
                    "input": 12,
                    "input_param": 4,
                    "input_parameter": 2,
                    "input_value": 10,
                    "value": 3
                },
                "param_2": {
                    "char_array": 1
                },
                "uVar1": {
                    "result": 24,
                    "return_value": 6
                }
            },
            "called": [
                "FUN_08004c8a"
            ],
            "calling": [
                "FUN_08005b54",
                "FUN_08005384"
            ],
            "code": "\nundefined4 check_valid_param_08004ca2(int input)\n\n{\n  undefined4 result;\n  \n  if (input != 0) {\n    result = FUN_08004c8a();\n    return result;\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "check_valid_param_08004ca2",
            "entrypoint": "0x08004ca2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004ca2": "check_valid_param_08004ca2",
                "param_1": "input",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004cb2": {
            "additional_data": {
                "FUN_08004cb2": {
                    "find_data_index": 1,
                    "find_match": 1,
                    "find_matching_value": 1,
                    "find_param_value": 1,
                    "find_value": 2,
                    "find_value_based_on_key": 1,
                    "find_value_by_index": 5,
                    "find_value_by_key": 3,
                    "find_value_in_array": 8,
                    "find_value_in_buffer": 1,
                    "find_value_index": 5,
                    "find_value_offset": 1,
                    "search_value": 1
                },
                "break": {
                    "found_key": 1
                },
                "param_1": {
                    "index": 2,
                    "key": 3,
                    "key_to_find": 1,
                    "search_value": 2,
                    "target_value": 6,
                    "value": 12,
                    "value_to_find": 5
                },
                "param_2": {
                    "array": 13,
                    "array_of_values": 2,
                    "array_ptr": 4,
                    "buffer": 1,
                    "data": 3,
                    "data_array": 5,
                    "param_values": 1,
                    "values": 1,
                    "values_list": 1
                }
            },
            "called": [
                "FUN_08004cb2"
            ],
            "calling": [
                "FUN_08004cce",
                "FUN_08004cb2"
            ],
            "code": "\nundefined4 find_value_by_index_08004cb2(int value,char *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      return 0xffffffff;\n    }\n    if (*array == value) found_key;\n    array = array + 0xc;\n  }\n  return *(undefined4 *)(array + 8);\n}\n\n",
            "current_name": "find_value_by_index_08004cb2",
            "entrypoint": "0x08004cb2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004cb2": "find_value_by_index_08004cb2",
                "break": "found_key",
                "param_1": "value",
                "param_2": "array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004cce": {
            "additional_data": {
                "FUN_08004cb2": {
                    "process_sub_function": 1,
                    "sub_function": 1
                },
                "FUN_08004cce": {
                    "calculate_result": 1,
                    "calculate_return_value": 1,
                    "check_error_status": 1,
                    "check_param": 1,
                    "check_return_value": 1,
                    "convert_param_to_result": 1,
                    "get_result": 1,
                    "get_return_value": 1,
                    "process_input": 4,
                    "process_param": 7,
                    "process_parameter": 4,
                    "process_return_value": 1,
                    "translate_error_code": 1
                },
                "fun_08004cb2": {
                    "get_result": 1
                },
                "param_1": {
                    "error_code": 2,
                    "input": 5,
                    "input_param": 7,
                    "input_parameter": 1,
                    "input_value": 15
                },
                "param_2": {
                    "data_param": 1,
                    "sub_function_param": 1
                },
                "uVar1": {
                    "function_result": 1,
                    "result": 21,
                    "return_value": 7,
                    "translated_code": 1
                }
            },
            "called": [
                "FUN_08004cb2"
            ],
            "calling": [
                "FUN_0800492c",
                "FUN_08004948",
                "FUN_08004b3c",
                "FUN_08004f4c"
            ],
            "code": "\nundefined4 process_param_08004cce(int input_value)\n\n{\n  undefined4 result;\n  \n  if (input_value == -1) {\n    return 0xffffffff;\n  }\n  result = FUN_08004cb2();\n  return result;\n}\n\n",
            "current_name": "process_param_08004cce",
            "entrypoint": "0x08004cce",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004cce": "process_param_08004cce",
                "param_1": "input_value",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004ce2": {
            "additional_data": {
                "FUN_08004ce2": {
                    "check_character": 1,
                    "check_exists": 1,
                    "check_if_value_exists": 1,
                    "check_match": 2,
                    "check_value_in_array": 3,
                    "check_value_presence": 1,
                    "compare_numbers": 1,
                    "compare_param_char": 1,
                    "compare_param_with_array": 2,
                    "compare_parameters": 1,
                    "compare_values": 9,
                    "find_match": 1,
                    "find_param_in_list": 1,
                    "find_value": 2,
                    "find_value_in_array": 2,
                    "find_value_in_string": 1,
                    "search_in_array": 1
                },
                "param_1": {
                    "character_to_find": 1,
                    "input_value": 1,
                    "number_1": 1,
                    "search_value": 1,
                    "target": 1,
                    "target_value": 2,
                    "value": 10,
                    "value1": 5,
                    "value_1": 4,
                    "value_to_check": 3,
                    "value_to_compare": 1,
                    "value_to_find": 1
                },
                "param_2": {
                    "array": 10,
                    "array_of_values": 4,
                    "array_ptr": 1,
                    "buffer": 1,
                    "char_array": 1,
                    "character_array": 1,
                    "number_array": 1,
                    "param_list": 1,
                    "search_array": 1,
                    "string": 3,
                    "value_2": 1,
                    "values_array": 6
                }
            },
            "called": [],
            "calling": [
                "FUN_080057b4"
            ],
            "code": "\nundefined4 compare_values_08004ce2(int value,char *array)\n\n{\n  if (value == -1) {\n    return 0;\n  }\n  while( true ) {\n    if (*array == -1) {\n      return 0;\n    }\n    if (value == *array) break;\n    array = array + 0xc;\n  }\n  return 1;\n}\n\n",
            "current_name": "compare_values_08004ce2",
            "entrypoint": "0x08004ce2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004ce2": "compare_values_08004ce2",
                "param_1": "value",
                "param_2": "array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004d06": {
            "additional_data": {
                "FUN_08004d06": {
                    "compare_and_return": 3,
                    "compare_and_return_non_zero": 7,
                    "compare_and_return_non_zero_param": 1,
                    "compare_and_return_nonzero": 2,
                    "compare_and_return_smaller": 8,
                    "compare_and_return_smaller_value": 1,
                    "compare_and_return_zero": 4,
                    "compare_and_select_zero": 1,
                    "compare_numbers": 1,
                    "find_non_zero_param": 1,
                    "find_non_zero_value": 1,
                    "find_nonzero": 1
                },
                "param_1": {
                    "first_number": 2,
                    "first_param": 1,
                    "first_value": 1,
                    "input1": 1,
                    "num1": 1,
                    "number1": 3,
                    "value1": 14,
                    "value_1": 8
                },
                "param_2": {
                    "input2": 1,
                    "num2": 1,
                    "number2": 3,
                    "second_number": 2,
                    "second_param": 1,
                    "second_value": 1,
                    "value2": 14,
                    "value_2": 8
                }
            },
            "called": [],
            "calling": [
                "FUN_08004f4c"
            ],
            "code": "\nint compare_and_return_non_zero_param_08004d06(int value1,int value2)\n\n{\n  if (value1 != value2) {\n    if (value1 == 0) {\n      return value2;\n    }\n    if (value2 == 0) {\n      return value1;\n    }\n    value1 = 0;\n  }\n  return value1;\n}\n\n",
            "current_name": "compare_and_return_non_zero_param_08004d06",
            "entrypoint": "0x08004d06",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004d06": "compare_and_return_non_zero_param_08004d06",
                "param_1": "value1",
                "param_2": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004d18": {
            "additional_data": {
                "": {
                    "": 1
                },
                "DAT_20000260": {
                    "callback": 3,
                    "callback_function": 13,
                    "callback_function_pointer": 5,
                    "callback_function_ptr": 1,
                    "callback_pointer": 1,
                    "callback_ptr": 1,
                    "function_pointer": 1
                },
                "DAT_20000278": {
                    "callback_argument": 3,
                    "callback_data": 15,
                    "callback_function_argument": 2,
                    "callback_parameter": 1,
                    "data": 3,
                    "function_argument": 1
                },
                "FUN_08004d18": {
                    "execute_callback": 15,
                    "execute_callback_function": 9,
                    "execute_callback_if_available": 2,
                    "execute_callback_if_defined": 1,
                    "execute_callback_if_not_null": 1,
                    "execute_function": 1,
                    "execute_function_if_not_null": 1,
                    "invoke_function_if_not_null": 1
                },
                "callbackFunction": {
                    "": 1,
                    "callback_function": 2
                },
                "code": {
                    "callback_function": 4,
                    "function_pointer": 1
                },
                "executeCallback": {
                    "execute_callback": 1
                },
                "executeCallbackFunction": {
                    "execute_callback_function": 1
                },
                "executeCallbackIfAvailable": {
                    "execute_callback_if_function_exists": 1
                },
                "executeCallbackIfDefined": {
                    "": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003ea0"
            ],
            "code": "\nvoid execute_callback_function_08004d18(void)\n\n{\n  if (DAT_20000260 != (callback_function *)0x0) {\n    (*DAT_20000260)(DAT_20000278);\n  }\n  return;\n}\n\n",
            "current_name": "execute_callback_function_08004d18",
            "entrypoint": "0x08004d18",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004d18": "execute_callback_function_08004d18",
                "code": "callback_function"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004d40": {
            "additional_data": {
                "": {
                    "": 1
                },
                "DAT_": {
                    "": 1,
                    "dat_": 4,
                    "unchanged": 1
                },
                "FUN_08004d40": {
                    "do_nothing_loop": 1,
                    "infinite_loop": 27,
                    "infinite_loop_function": 1,
                    "keep_running": 1
                },
                "PTR_": {
                    "": 1,
                    "ptr_": 4,
                    "unchanged": 1
                },
                "PTR_Function_1": {
                    "function1": 1
                },
                "PTR_Function_2": {
                    "function2": 1
                },
                "do": {
                    "do": 2,
                    "infinite_loop": 1,
                    "start_loop": 1
                },
                "true": {
                    "always_true": 1,
                    "infinite": 1,
                    "true": 1
                }
            },
            "called": [
                "FUN_08004d40"
            ],
            "calling": [
                "FUN_08004d40",
                "FUN_08001b48"
            ],
            "code": "\nvoid infinite_loop_function_08004d40(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( infinite );\n}\n\n",
            "current_name": "infinite_loop_function_08004d40",
            "entrypoint": "0x08004d40",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004d40": "infinite_loop_function_08004d40",
                "true": "infinite"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004d44": {
            "additional_data": {
                "FUN_08004d44": {
                    "configure_hardware": 1,
                    "configure_memory": 2,
                    "configure_peripheral": 1,
                    "configure_registers": 1,
                    "initialize_device": 1,
                    "initialize_flags": 1,
                    "initialize_hardware": 2,
                    "initialize_memory": 5,
                    "initialize_memory_registers": 1,
                    "initialize_peripheral": 1,
                    "initialize_peripheral_registers": 1,
                    "initialize_peripherals": 1,
                    "initialize_registers": 10,
                    "initialize_system": 3
                },
                "_DAT_40021000": {
                    "config_register1": 1,
                    "control_register": 3,
                    "control_register0": 1,
                    "control_register1": 3,
                    "device_control_reg1": 1,
                    "device_control_register1": 1,
                    "flags": 1,
                    "memory_configuration_register": 1,
                    "memory_register1": 1,
                    "peripheral_config_reg1": 1,
                    "peripheral_register1": 1,
                    "peripheral_register_a": 1,
                    "register1": 7,
                    "register_a": 4,
                    "registers_mask": 1,
                    "system_config_register": 1,
                    "system_control_register": 1
                },
                "_DAT_40021004": {
                    "config_register2": 1,
                    "control_register": 1,
                    "control_register1": 1,
                    "control_register2": 3,
                    "device_control_reg2": 1,
                    "device_control_register2": 1,
                    "interrupt_register": 1,
                    "mask": 1,
                    "memory_register2": 1,
                    "peripheral_config_reg2": 1,
                    "peripheral_register2": 1,
                    "peripheral_register_b": 1,
                    "register2": 7,
                    "register_b": 4,
                    "registers_value": 1,
                    "status_register": 2,
                    "system_clock_config": 1
                },
                "_DAT_40021008": {
                    "config_register": 1,
                    "config_register3": 1,
                    "control_register2": 1,
                    "device_control_register3": 1,
                    "device_status_reg": 1,
                    "interrupt_control_register": 1,
                    "interrupt_priority": 1,
                    "interrupt_vector_offset": 1,
                    "memory_address": 2,
                    "memory_register3": 1,
                    "memory_size": 1,
                    "peripheral_config_reg3": 1,
                    "peripheral_register3": 1,
                    "peripheral_register_c": 1,
                    "register3": 7,
                    "register_c": 4,
                    "timer_config": 1,
                    "timer_control_register": 1,
                    "timer_register": 1,
                    "value": 1
                },
                "_DAT_e000ed08": {
                    "base_address": 1,
                    "cpu_configuration_register": 1,
                    "device_control_register4": 1,
                    "interrupt_config": 1,
                    "interrupt_control_register": 2,
                    "interrupt_ctrl_reg": 1,
                    "interrupt_enable_register": 2,
                    "interrupt_register": 3,
                    "memory_register4": 1,
                    "peripheral_config_reg4": 1,
                    "peripheral_register4": 1,
                    "peripheral_register_d": 1,
                    "register": 1,
                    "register4": 7,
                    "register_d": 4,
                    "system_control": 1,
                    "system_control_register": 2
                }
            },
            "called": [],
            "calling": [
                "entry"
            ],
            "code": "\n\n\nvoid initialize_memory_registers_08004d44(void)\n\n{\n  _DAT_40021000 = _DAT_40021000 & 0xfef2ffff | 1;\n  _DAT_40021004 = _DAT_40021004 & 0xf8800000;\n  _DAT_40021008 = 0x9f0000;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "current_name": "initialize_memory_registers_08004d44",
            "entrypoint": "0x08004d44",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004d44": "initialize_memory_registers_08004d44"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004d90": {
            "additional_data": {
                "0x40000000": {
                    "flag_2": 1
                },
                "0x40000400": {
                    "flag_3": 1
                },
                "0x40000800": {
                    "flag_4": 1
                },
                "0x40012c00": {
                    "flag_1": 1
                },
                "DAT_40021018": {
                    "flag_register_one": 1,
                    "setting_flag1": 1
                },
                "DAT_4002101c": {
                    "flag_register_two": 1,
                    "setting_flag2": 1
                },
                "FUN_08004d90": {
                    "apply_settings": 1,
                    "clear_flags": 1,
                    "update_configuration": 1,
                    "update_configurations": 1,
                    "update_data": 1,
                    "update_data_based_on_value": 1,
                    "update_data_flags": 2,
                    "update_flags": 2,
                    "update_flags_based_on_param": 3,
                    "update_memory_flags": 1,
                    "update_memory_permissions": 1,
                    "update_memory_registers": 1,
                    "update_permissions": 1,
                    "update_register_value": 2,
                    "update_register_values": 3,
                    "update_registers": 3,
                    "update_settings": 6
                },
                "_DAT_40021018": {
                    "config_register1": 1,
                    "data_flag1": 1,
                    "data_flags_register_1": 1,
                    "data_register1": 2,
                    "flag1": 3,
                    "flag_method_a": 1,
                    "flags": 1,
                    "flags_register": 1,
                    "memory_flag_a": 1,
                    "permissions_register": 1,
                    "register1": 2,
                    "register1_value": 1,
                    "register_a": 1,
                    "register_setting_a": 1,
                    "register_value1": 3,
                    "register_value_1": 1,
                    "register_value_a": 1,
                    "setting_1": 1
                },
                "_DAT_4002101c": {
                    "config_register2": 1,
                    "data_flag2": 1,
                    "data_flags_register_2": 1,
                    "data_register2": 2,
                    "flag2": 3,
                    "flag_method_b": 1,
                    "flags2": 1,
                    "memory_flag_b": 1,
                    "more_flags_register": 1,
                    "register2": 2,
                    "register2_value": 1,
                    "register_b": 1,
                    "register_setting_b": 1,
                    "register_value2": 3,
                    "register_value_2": 1,
                    "register_value_b": 1,
                    "setting_2": 1,
                    "status_register": 1
                },
                "param_1": {
                    "config_value": 1,
                    "configuration": 1,
                    "data": 1,
                    "data_ptr": 1,
                    "data_value": 1,
                    "flag_ptr": 1,
                    "flags": 2,
                    "input": 1,
                    "input_value": 1,
                    "memory_address": 3,
                    "param": 2,
                    "parameter": 1,
                    "register_value": 6,
                    "setting": 1,
                    "setting_value": 3,
                    "settings": 3,
                    "value": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08004b34"
            ],
            "code": "\n\n\nvoid update_settings_08004d90(int *register_value)\n\n{\n  if (*register_value == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 & 0xfffff7ff;\n  }\n  if (*register_value == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffe;\n  }\n  if (*register_value == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffd;\n  }\n  if (*register_value == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffb;\n  }\n  return;\n}\n\n",
            "current_name": "update_settings_08004d90",
            "entrypoint": "0x08004d90",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004d90": "update_settings_08004d90",
                "param_1": "register_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004df4": {
            "additional_data": {
                "FUN_08004df4": {
                    "add_four_to_value": 1,
                    "decrement_by_four": 1,
                    "decrement_value": 1,
                    "subtract_by_four": 2,
                    "subtract_four": 26
                },
                "local_var_1": {
                    "result": 1
                },
                "param_1": {
                    "input": 4,
                    "input_num": 3,
                    "input_number": 4,
                    "input_value": 6,
                    "new_value": 1,
                    "num": 2,
                    "output": 1,
                    "result": 8,
                    "value": 2
                },
                "param_2": {
                    "new_num": 1,
                    "output": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004df8",
                "FUN_08004e12"
            ],
            "code": "\nint subtract_by_four_08004df4(int result)\n\n{\n  return result + -4;\n}\n\n",
            "current_name": "subtract_by_four_08004df4",
            "entrypoint": "0x08004df4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004df4": "subtract_by_four_08004df4",
                "param_1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004df8": {
            "additional_data": {
                "0x1c": {
                    "callback_flag_offset": 1
                },
                "0x4c": {
                    "callback_function_offset": 1
                },
                "FUNK_08004df4": {
                    "get_function_address": 1
                },
                "FUN_08004df4": {
                    "get_callback": 1,
                    "get_callback_address": 5,
                    "get_callback_function": 1,
                    "get_callback_function_address": 1,
                    "get_callback_manager": 1,
                    "get_callback_pointer": 2,
                    "get_callback_result": 2,
                    "get_code_address_function": 1,
                    "get_code_ptr": 1,
                    "get_function_address": 3,
                    "get_function_pointer": 5,
                    "obtain_function_result": 1
                },
                "FUN_08004df8": {
                    "execute_callback": 1,
                    "execute_callback_if_condition_met": 2,
                    "execute_callback_if_condition_true": 2,
                    "execute_callback_if_enabled": 7,
                    "execute_callback_if_flag_set": 2,
                    "execute_callback_if_needed": 5,
                    "execute_code": 1,
                    "execute_code_function": 1,
                    "execute_code_if_condition": 1,
                    "execute_code_if_flag_set": 1,
                    "execute_function_if_condition_met": 3,
                    "execute_function_if_needed": 1,
                    "execute_function_if_param_set": 1,
                    "execute_if_condition_met": 2,
                    "execute_optional_function": 1
                },
                "code": {
                    "function": 1,
                    "function_pointer": 1
                },
                "iVar1": {
                    "callback": 2,
                    "callback_address": 3,
                    "callback_function": 1,
                    "callback_manager": 1,
                    "callback_pointer": 2,
                    "callback_result": 5,
                    "code_address": 1,
                    "code_ptr": 1,
                    "code_result": 1,
                    "func_pointer": 1,
                    "function_address": 1,
                    "function_pointer": 4,
                    "function_result": 2,
                    "result": 3,
                    "return_value": 3
                },
                "param_1": {
                    "address": 1,
                    "callback_arg": 1,
                    "callback_data": 10,
                    "callback_param": 2,
                    "callback_parameter": 3,
                    "code_flag": 1,
                    "condition": 2,
                    "input": 1,
                    "input_data": 1,
                    "input_param": 2,
                    "input_parameter": 3,
                    "input_value": 3,
                    "value": 1
                }
            },
            "called": [
                "FUN_08004df4"
            ],
            "calling": [
                "FUN_08003f18"
            ],
            "code": "\nvoid execute_callback_if_enabled_08004df8(int callback_data)\n\n{\n  int callback_result;\n  \n  callback_result = FUN_08004df4();\n  if ((*(function **)(callback_result + 0x4c) != (function *)0x0) && (*(char *)(callback_data + 0x1c) == '\\x01')) {\n    (**(function **)(callback_result + 0x4c))(callback_result,0);\n  }\n  return;\n}\n\n",
            "current_name": "execute_callback_if_enabled_08004df8",
            "entrypoint": "0x08004df8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004df8": "execute_callback_if_enabled_08004df8",
                "code": "function",
                "iVar1": "callback_result",
                "param_1": "callback_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004e12": {
            "additional_data": {
                "FUNC_08004df4": {
                    "retrieve_sub_function": 1
                },
                "FUN_08004df4": {
                    "fetch_sub_function_address": 1,
                    "find_callback_function": 1,
                    "get_callback": 2,
                    "get_callback_address": 8,
                    "get_callback_function_address": 3,
                    "get_callback_ptr": 1,
                    "get_first_sub_function_address": 1,
                    "get_function_address": 2,
                    "get_function_info": 1,
                    "get_function_pointer": 7,
                    "get_sub_function_address": 1,
                    "get_value_from_pointer": 1
                },
                "FUN_08004e12": {
                    "execute_callback": 11,
                    "execute_callback_function": 4,
                    "execute_caller_function": 1,
                    "execute_first_sub_function": 1,
                    "execute_function": 5,
                    "execute_function_from_pointer": 2,
                    "execute_function_if_not_null": 2,
                    "execute_optional_function": 1,
                    "execute_sub_function": 3
                },
                "iVar1": {
                    "callback_address": 3,
                    "callback_function": 1,
                    "callback_function_address": 1,
                    "function_address": 1,
                    "function_details": 1,
                    "function_pointer": 6,
                    "function_ptr": 1,
                    "result": 2,
                    "sub_function_address": 2
                },
                "param_1": {
                    "address": 1,
                    "argument": 1,
                    "function_info": 1,
                    "input": 4,
                    "input_parameter": 2,
                    "unused_parameter": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_08004df4"
            ],
            "calling": [
                "FUN_08003f18"
            ],
            "code": "\nvoid execute_callback_function_08004e12(void)\n\n{\n  int function_pointer;\n  \n  function_pointer = FUN_08004df4();\n  if (*(code **)(function_pointer + 0x48) != (code *)0x0) {\n    (**(code **)(function_pointer + 0x48))();\n  }\n  return;\n}\n\n",
            "current_name": "execute_callback_function_08004e12",
            "entrypoint": "0x08004e12",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004e12": "execute_callback_function_08004e12",
                "iVar1": "function_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004e20": {
            "additional_data": {
                "FUN_08003f18": {
                    "call_helper_function": 1,
                    "execute_action": 1,
                    "execute_function": 4,
                    "execute_operation": 1,
                    "execute_sub_function": 6,
                    "execute_subfunction": 2,
                    "perform_action": 2,
                    "perform_task": 1,
                    "process_data": 11
                },
                "FUN_08004e20": {
                    "check_and_call_another_function": 2,
                    "check_and_call_function": 8,
                    "check_and_call_sub_function": 3,
                    "check_and_execute": 2,
                    "check_and_execute_function": 9,
                    "check_and_execute_sub_function": 1,
                    "check_and_invoke_recovered_function": 1,
                    "check_and_update_data": 1,
                    "check_data_and_call_function": 3,
                    "execute_if_data_available": 1
                },
                "param_1": {
                    "array_pointer": 1,
                    "data": 4,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "function_arguments": 1,
                    "function_parameter": 1,
                    "input_list": 1,
                    "sub_function_param": 1
                }
            },
            "called": [
                "FUN_08003f18"
            ],
            "calling": [],
            "code": "\nvoid check_and_execute_sub_function_08004e20(void)\n\n{\n  if (DAT_2000027c != 0) {\n    FUN_08003f18();\n  }\n  return;\n}\n\n",
            "current_name": "check_and_execute_sub_function_08004e20",
            "entrypoint": "0x08004e20",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004e20": "check_and_execute_sub_function_08004e20"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004e70": {
            "additional_data": {
                "FUN_08004e70": {
                    "add_four": 1,
                    "decrement_by_four": 1,
                    "subtract_four": 28,
                    "subtract_four_from_input": 1
                },
                "local_1": {
                    "result": 1
                },
                "param_1": {
                    "initial_value": 1,
                    "input": 7,
                    "input_num": 1,
                    "input_number": 2,
                    "input_value": 5,
                    "num": 4,
                    "num_minus_four": 1,
                    "number": 1,
                    "original_value": 1,
                    "output": 2,
                    "result": 6
                },
                "param_2": {
                    "new_parameter_name_2": 1
                },
                "param_n": {
                    "new_parameter_name_n": 1
                },
                "result": {
                    "new_num": 1,
                    "new_result": 1
                },
                "return": {
                    "result": 1
                },
                "var_1": {
                    "result": 1
                },
                "var_n": {
                    "new_variable_name_n": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004ec4",
                "FUN_08004ef4",
                "FUN_08004e74"
            ],
            "code": "\nint subtract_four_from_input_08004e70(int input)\n\n{\n  result input + -4;\n}\n\n",
            "current_name": "subtract_four_from_input_08004e70",
            "entrypoint": "0x08004e70",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004e70": "subtract_four_from_input_08004e70",
                "param_1": "input",
                "return": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004e74": {
            "additional_data": {
                "0x0": {
                    "null": 1
                },
                "0x20": {
                    "param1_value": 1,
                    "value": 1
                },
                "8": {
                    "buffer_size": 1,
                    "param2_value": 1
                },
                "FUM_08004e70": {
                    "initialize_vars": 1
                },
                "FUN_08002af8": {
                    "copy_data": 5,
                    "copy_to_buffer": 1,
                    "handle_case2": 1,
                    "handle_case_b": 1,
                    "handle_function": 1,
                    "manipulate_data": 1,
                    "perform_action2": 2,
                    "perform_operation": 1,
                    "perform_operation_b": 1,
                    "process_code_block": 1,
                    "process_data": 1,
                    "process_data1": 1,
                    "process_data3": 1,
                    "process_param_a": 1,
                    "process_params": 1,
                    "process_result": 2,
                    "process_sub_func2": 1,
                    "read_data": 1,
                    "save_config": 1,
                    "update_data": 1,
                    "update_flag": 1
                },
                "FUN_08002b84": {
                    "copy_value": 1,
                    "do_something": 1,
                    "handle_case1": 1,
                    "handle_case_a": 1,
                    "handle_condition": 1,
                    "initialize_value": 1,
                    "perform_action1": 2,
                    "perform_operation": 1,
                    "perform_operation_a": 1,
                    "process_block": 1,
                    "process_condition": 2,
                    "process_config": 1,
                    "process_data": 1,
                    "process_data2": 2,
                    "process_data_block": 1,
                    "process_data_flag": 1,
                    "process_param": 1,
                    "process_param_b": 1,
                    "process_sub_func1": 1,
                    "set_flag": 3,
                    "write_data": 2
                },
                "FUN_08004e70": {
                    "get_control_data": 1,
                    "get_function_pointer": 1,
                    "get_function_result": 1,
                    "get_function_return_value": 1,
                    "get_memory": 1,
                    "get_memory_address": 1,
                    "get_pointer": 1,
                    "get_result": 2,
                    "get_return_value": 8,
                    "get_some_value": 1,
                    "get_temp_var": 1,
                    "get_value": 1,
                    "initialize": 2,
                    "initialize_result": 2,
                    "obtain_data": 1,
                    "obtain_result": 1
                },
                "FUN_08004e74": {
                    "check_and_process_params": 2,
                    "check_and_update_parameter": 1,
                    "check_params": 2,
                    "check_params_and_process": 1,
                    "process_data": 5,
                    "process_function_parameters": 1,
                    "process_input": 1,
                    "process_parameters": 7,
                    "process_params": 5,
                    "update_configuration": 1,
                    "update_data": 2,
                    "update_function": 1,
                    "update_parameters": 1
                },
                "INFO": {
                    "info": 1
                },
                "code": {
                    "code_ptr": 1,
                    "function_ptr": 1
                },
                "iVar1": {
                    "func_ret_val": 1,
                    "function_pointer": 1,
                    "function_result": 1,
                    "local_var1": 1,
                    "result": 17,
                    "return_value": 5,
                    "temp_var": 1,
                    "updated_value": 1,
                    "var1": 1
                },
                "param_1": {
                    "arg1": 5,
                    "array_pointer": 1,
                    "config1": 1,
                    "config_pointer": 1,
                    "data": 2,
                    "data_buffer": 1,
                    "data_ptr": 1,
                    "input_array": 2,
                    "input_buffer": 1,
                    "input_data": 3,
                    "input_param": 1,
                    "input_param1": 2,
                    "input_ptr": 1,
                    "param1": 6,
                    "param1_ptr": 1,
                    "param_1": 1
                },
                "param_2": {
                    "arg2": 5,
                    "config2": 1,
                    "flag": 11,
                    "flag_param": 1,
                    "input_param2": 2,
                    "param2": 6,
                    "param2_ptr": 1,
                    "param_2": 1,
                    "param_flag": 1
                },
                "param_3": {
                    "arg3": 5,
                    "check_val": 1,
                    "check_value": 1,
                    "compare_value": 2,
                    "comparison_param": 1,
                    "comparison_value": 1,
                    "config3": 1,
                    "constant": 1,
                    "input_param3": 2,
                    "offset": 1,
                    "param3": 7,
                    "param_3": 1,
                    "param_value": 1,
                    "target": 2,
                    "value": 3
                },
                "param_4": {
                    "arg4": 5,
                    "code_parameter": 1,
                    "config4": 1,
                    "data": 1,
                    "data_ptr": 1,
                    "extra_parameter": 1,
                    "input_param4": 2,
                    "param": 3,
                    "param4": 7,
                    "param4_ptr": 1,
                    "param_4": 1,
                    "param_data": 1,
                    "param_value": 1,
                    "ptr": 2,
                    "undefined_param": 1,
                    "unused_parameter": 1
                }
            },
            "called": [
                "FUN_08002b84",
                "FUN_08004e70",
                "FUN_08002af8"
            ],
            "calling": [
                "FUN_08002cf2"
            ],
            "code": "\nvoid check_params_and_process_08004e74(int param1,int flag,int param3,undefined4 param4)\n\n{\n  int result;\n  \n  result = FUN_08004e70();\n  if (param3 == *(int *)(param1 + 0xc)) {\n    if (flag == 0) {\n      *(undefined *)(result + 0x88) = 0;\n      *(undefined *)(result + 0x5c) = 0;\n      if (*(code_ptr **)(result + 100) != (code_ptr *)0x0) {\n        (**(code_ptr **)(result + 100))();\n      }\n      FUN_08002af8(param1,result + 0x68,*(undefined *)(result + 0x88),8);\n      return;\n    }\n    *(undefined *)(result + 0x5c) = 1;\n    FUN_08002b84(param1,result + 0x68,0x20,8,param4);\n  }\n  return;\n}\n\n",
            "current_name": "check_params_and_process_08004e74",
            "entrypoint": "0x08004e74",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004e74": "check_params_and_process_08004e74",
                "code": "code_ptr",
                "iVar1": "result",
                "param_1": "param1",
                "param_2": "flag",
                "param_3": "param3",
                "param_4": "param4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004ec4": {
            "additional_data": {
                "FUM_08002c10": {
                    "handle_input": 1
                },
                "FUN_08002c10": {
                    "call_subfunction": 1,
                    "do_something": 1,
                    "execute_another_function_if_conditions_met": 1,
                    "execute_cleanup": 1,
                    "execute_function": 1,
                    "execute_general_code": 1,
                    "execute_second_function": 1,
                    "finalize_command": 1,
                    "finalize_execution": 2,
                    "perform_action": 2,
                    "perform_additional_task": 1,
                    "perform_cleanup": 5,
                    "perform_cleanup_operations": 1,
                    "perform_operation": 1,
                    "perform_other_task": 1,
                    "perform_task": 1,
                    "process_data": 1,
                    "process_input": 1,
                    "process_parameter": 1,
                    "run_secondary_function": 1
                },
                "FUN_08004e70": {
                    "get_callback_function": 1,
                    "get_callback_function_address": 1,
                    "get_callback_handler": 1,
                    "get_callback_pointer": 1,
                    "get_code_ptr": 1,
                    "get_command_info": 1,
                    "get_function_address": 8,
                    "get_function_data": 1,
                    "get_function_info": 3,
                    "get_function_pointer": 10,
                    "get_function_ptr": 2
                },
                "FUN_08004ec4": {
                    "execute_callback": 1,
                    "execute_callback_function": 1,
                    "execute_callback_if_condition_met": 1,
                    "execute_callback_if_valid": 1,
                    "execute_code": 4,
                    "execute_code_block": 1,
                    "execute_command": 2,
                    "execute_function": 10,
                    "execute_function_if_condition_met": 3,
                    "execute_function_if_conditions_met": 3,
                    "execute_function_if_needed": 1,
                    "execute_special_code": 1,
                    "process_function": 1
                },
                "PTR_FUN_08002c10": {
                    "execute_function": 1
                },
                "code": {
                    "function_pointer": 1
                },
                "iVar1": {
                    "address": 1,
                    "callback_address": 1,
                    "callback_handler": 1,
                    "callback_pointer": 1,
                    "callback_result": 1,
                    "code_ptr": 1,
                    "command_info": 1,
                    "function_address": 1,
                    "function_pointer": 7,
                    "function_ptr": 1,
                    "function_result": 4,
                    "result": 5,
                    "return_value": 2,
                    "var1": 1
                },
                "iVar2": {
                    "param1": 1
                },
                "iVar3": {
                    "param2": 1
                },
                "param_1": {
                    "arg": 1,
                    "argument": 1,
                    "callback_address_parameter": 1,
                    "callback_param": 2,
                    "command": 1,
                    "command_arg": 1,
                    "data": 1,
                    "function_argument": 1,
                    "input": 2,
                    "input_param": 5,
                    "input_parameter": 4,
                    "input_value": 1,
                    "param": 4,
                    "parameter": 3
                }
            },
            "called": [
                "FUN_08002c10",
                "FUN_08004e70"
            ],
            "calling": [
                "FUN_0800316c",
                "FUN_08002d1c",
                "FUN_080032b4"
            ],
            "code": "\nvoid execute_function_if_condition_met_08004ec4(undefined4 input_param)\n\n{\n  int function_pointer;\n  \n  function_pointer = FUN_08004e70();\n  if (((*(function_pointer **)(function_pointer + 0x60) != (function_pointer *)0x0) && (*(char *)(function_pointer + 0x5c) == '\\x01')) &&\n     (*(char *)(function_pointer + 0x2c) != ' ')) {\n    (**(function_pointer **)(function_pointer + 0x60))(function_pointer + 0x68);\n  }\n  FUN_08002c10(input_param);\n  return;\n}\n\n",
            "current_name": "execute_function_if_condition_met_08004ec4",
            "entrypoint": "0x08004ec4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004ec4": "execute_function_if_condition_met_08004ec4",
                "code": "function_pointer",
                "iVar1": "function_pointer",
                "param_1": "input_param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004ef4": {
            "additional_data": {
                "0x5d": {
                    "flag": 1,
                    "offset": 2
                },
                "FUN_08002c10": {
                    "call_function": 3,
                    "call_if_char_is_zero": 1,
                    "call_if_flag_set": 1,
                    "call_sub_function": 3,
                    "execute_function": 4,
                    "execute_if_char_not_set": 1,
                    "execute_if_condition_met": 1,
                    "execute_if_flag_set": 1,
                    "perform_action": 3,
                    "perform_operation": 1,
                    "print_if_flag_set": 1,
                    "process_data": 1,
                    "process_input": 2,
                    "update_flag": 1
                },
                "FUN_08004e70": {
                    "get_char_address": 2,
                    "get_flag_status": 2,
                    "get_flag_value": 2,
                    "get_memory_address": 3,
                    "get_offset": 1,
                    "get_pointer_value": 1,
                    "get_query_result": 1,
                    "get_random_value": 1,
                    "get_result": 3,
                    "get_return_value": 2,
                    "get_value": 1,
                    "get_variable_value": 1
                },
                "FUN_08004ef4": {
                    "check_and_call_function": 15,
                    "check_and_execute": 1,
                    "check_and_execute_function": 5,
                    "check_and_perform_action": 1,
                    "check_and_process_data": 1,
                    "check_and_update_flag": 1,
                    "check_and_update_variable": 1,
                    "check_flag": 2,
                    "check_flag_and_call_function": 1,
                    "check_if_flag_is_set": 1,
                    "check_if_flag_set": 1,
                    "check_if_value_is_set": 1
                },
                "char": {
                    "character": 1
                },
                "iVar1": {
                    "function_result": 1,
                    "offset": 1,
                    "result": 24,
                    "return_value": 5
                },
                "param_1": {
                    "arg": 1,
                    "argument": 1,
                    "data": 3,
                    "function_argument": 1,
                    "input": 11,
                    "input_data": 2,
                    "input_param": 3,
                    "input_parameter": 3,
                    "input_ptr": 1,
                    "param": 4,
                    "parameter": 1
                },
                "undefined4": {
                    "void": 1
                }
            },
            "called": [
                "FUN_08002c10",
                "FUN_08004e70"
            ],
            "calling": [
                "FUN_0800316c"
            ],
            "code": "\nvoid check_flag_and_call_function_08004ef4(void input)\n\n{\n  int result;\n  \n  result = FUN_08004e70();\n  if (*(character *)(result + 0x5d) == '\\0') {\n    FUN_08002c10(input);\n  }\n  return;\n}\n\n",
            "current_name": "check_flag_and_call_function_08004ef4",
            "entrypoint": "0x08004ef4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004ef4": "check_flag_and_call_function_08004ef4",
                "char": "character",
                "iVar1": "result",
                "param_1": "input",
                "undefined4": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004f4c": {
            "additional_data": {
                "DAT_0800441a": {
                    "uart_configure": 1
                },
                "DAT_08004884": {
                    "uart_get_config_value": 1
                },
                "DAT_08004c78": {
                    "uart_configure_peripheral_pin": 1
                },
                "DAT_08004cce": {
                    "uart_peripheral_data_get_value": 1
                },
                "DAT_080068f0": {
                    "uart_print_error_message": 1
                },
                "DAT_08007604": {
                    "data2": 1,
                    "peripheral_data2": 1,
                    "pins_config2": 1,
                    "uart_peripheral2": 1,
                    "uart_peripheral_data2": 1,
                    "uart_pin_config2": 1,
                    "uart_pin_config_array2": 1,
                    "uart_setting2": 1
                },
                "DAT_0800764c": {
                    "data1": 1,
                    "peripheral_data1": 1,
                    "pins_config1": 1,
                    "uart_peripheral1": 1,
                    "uart_peripheral_data1": 1,
                    "uart_pin_config1": 1,
                    "uart_pin_config_array1": 1,
                    "uart_setting1": 1
                },
                "DAT_2000032c": {
                    "uart_base": 1,
                    "uart_pin_port_array": 1,
                    "uart_port_array": 1,
                    "uart_register": 1
                },
                "DAT_4002100c": {
                    "peripheral1_register1": 1
                },
                "DAT_40021010": {
                    "peripheral2_register1": 1
                },
                "DAT_40021018": {
                    "peripheral1_register2": 1
                },
                "DAT_4002101c": {
                    "peripheral2_register2": 1
                },
                "FUN_08002624": {
                    "configure_gpio": 1,
                    "configure_pin": 5,
                    "configure_uart": 1,
                    "configure_uart_peripheral": 1,
                    "configure_uart_pins": 1,
                    "set_pin_config": 1,
                    "set_pin_value": 1,
                    "set_register": 1,
                    "set_uart_pin": 1,
                    "set_uart_pins_config": 1
                },
                "FUN_0800441a": {
                    "configure_uart_pins": 1,
                    "init_peripheral": 1,
                    "initialize": 1,
                    "initialize_pin": 1,
                    "initialize_pin_data": 1,
                    "initialize_uart": 4,
                    "initialize_uart_config": 1,
                    "initialize_uart_interrupt": 1,
                    "initialize_uart_registers": 1
                },
                "FUN_08004884": {
                    "calculate_mask": 1,
                    "calculate_pins_configuration": 1,
                    "calculate_uart_config": 2,
                    "calculate_uart_setting": 1,
                    "calculate_value": 1,
                    "get_pin_config": 1,
                    "get_uart_config": 2,
                    "get_uart_permutation": 1,
                    "get_uart_type": 1,
                    "map_pin_mode": 1,
                    "shift_uart_config": 1
                },
                "FUN_08004c78": {
                    "get_config_value": 1,
                    "get_periph_from_pin": 1,
                    "get_peripheral": 7,
                    "get_peripheral_address": 1,
                    "get_peripheral_from_pin": 2,
                    "get_pin_config": 1,
                    "get_uart_peripheral_config": 1
                },
                "FUN_08004c78_1": {
                    "get_peripheral": 1,
                    "get_pin_config": 1
                },
                "FUN_08004c78_2": {
                    "get_peripheral": 1
                },
                "FUN_08004c78_param_1": {
                    "pin_number": 1
                },
                "FUN_08004cce": {
                    "calculate_uart_config": 1,
                    "calculate_value": 1,
                    "calculate_value2": 1,
                    "get_pin_af": 1,
                    "get_pin_config": 3,
                    "get_pin_config_data": 1,
                    "get_pin_configuration": 1,
                    "get_pin_mode_value": 1,
                    "get_pin_setting": 1,
                    "get_uart_config": 1,
                    "get_uart_pin_configuration": 1,
                    "get_uart_pin_setting": 1
                },
                "FUN_08004d06": {
                    "check_uart_pins": 3,
                    "check_uart_pins_match": 1,
                    "configure_uart": 4,
                    "get_peripheral": 1,
                    "match_uart_pins": 1,
                    "validate_uart_pin": 1,
                    "validate_uart_pin_config": 1,
                    "validate_uart_pins": 2
                },
                "FUN_08004f4c": {
                    "configure_serial_pins": 1,
                    "configure_uart": 2,
                    "configure_uart_pin": 1,
                    "configure_uart_pins": 19,
                    "initialize_uart_peripheral": 1,
                    "initialize_uart_pin": 2,
                    "initialize_uart_pin_config": 1,
                    "initialize_uart_pins": 4
                },
                "FUN_080068f0": {
                    "display_error": 1,
                    "print_error": 6,
                    "print_error_message": 7
                },
                "_DAT_40010004": {
                    "gpio_moder": 1,
                    "uart_config": 1,
                    "uart_mode_register": 1
                },
                "_DAT_4002100c": {
                    "register1": 1,
                    "uart0_c1": 1,
                    "uart0_configure": 1,
                    "uart1_base": 1,
                    "uart1_control_register": 1,
                    "uart1_cr1": 1,
                    "uart_gpioafrl_register1": 1,
                    "uart_port_a_config_register": 1,
                    "uart_register1": 1
                },
                "_DAT_40021010": {
                    "gpio_register1": 1,
                    "register3": 1,
                    "uart1_c1": 1,
                    "uart1_configure": 1,
                    "uart2_base": 1,
                    "uart2_control_register": 1,
                    "uart2_cr1": 1,
                    "uart_gpioafrh_register": 1,
                    "uart_port_b_config_register": 1
                },
                "_DAT_40021018": {
                    "gpioa_base": 1,
                    "register2": 1,
                    "uart0_c4": 1,
                    "uart0_mode": 1,
                    "uart1_cr3": 1,
                    "uart_control2_register": 1,
                    "uart_gpiocrl_register": 1,
                    "uart_port_a_control_register": 1,
                    "uart_register2": 1
                },
                "_DAT_4002101c": {
                    "gpio_register2": 1,
                    "gpiob_base": 1,
                    "register4": 1,
                    "uart1_c4": 1,
                    "uart1_mode": 1,
                    "uart2_cr3": 1,
                    "uart_control3_register": 1,
                    "uart_gpiocrh_register": 1,
                    "uart_port_b_control_register": 1
                },
                "iVar1": {
                    "peripheral1": 4,
                    "peripheral_pin1": 1,
                    "pin1_config": 1,
                    "pin1_periph": 1,
                    "pin1_result": 1,
                    "uart_peripheral1": 3,
                    "uart_pin1": 9,
                    "uart_pin1_periph": 2,
                    "uart_pin1_peripheral": 2,
                    "uart_pin1_result": 1,
                    "uart_pin_1": 2,
                    "uart_pin_config": 2,
                    "uart_pin_periph1": 1,
                    "uart_pin_peripheral1": 1
                },
                "iVar2": {
                    "peripheral2": 4,
                    "peripheral_pin2": 1,
                    "peripheral_status": 1,
                    "pin2_config": 1,
                    "pin2_periph": 1,
                    "pin2_result": 1,
                    "uart_peripheral2": 3,
                    "uart_peripheral_config": 1,
                    "uart_pin2": 9,
                    "uart_pin2_periph": 2,
                    "uart_pin2_peripheral": 2,
                    "uart_pin2_result": 1,
                    "uart_pin_2": 2,
                    "uart_pin_periph2": 1,
                    "uart_pin_peripheral2": 1
                },
                "local_14": {
                    "config_value1": 1,
                    "constant_3": 1,
                    "constant_value": 1,
                    "data_bits": 1,
                    "dummy": 1,
                    "function_code": 1,
                    "function_param": 1,
                    "gpio_mode": 1,
                    "number_of_pins": 1,
                    "pin_config": 1,
                    "selected_pin": 1,
                    "uart_conf": 1,
                    "uart_config2_bits": 1,
                    "uart_config2_shifted": 1,
                    "uart_config3": 3,
                    "uart_config_bit6": 1,
                    "uart_config_flag": 1,
                    "uart_index": 1,
                    "uart_misc3": 1,
                    "uart_mode": 2,
                    "uart_pin1_config": 1,
                    "uart_pin2_config": 1,
                    "uart_pin3_config": 1,
                    "uart_pin_config5": 1,
                    "uart_pin_config_size": 1,
                    "uart_pin_count": 1,
                    "uart_settings": 1,
                    "uart_type": 1
                },
                "local_18": {
                    "alternate_function": 2,
                    "baud_rate": 1,
                    "bit_mask3": 1,
                    "config2": 1,
                    "mask3": 1,
                    "pin2_mask": 1,
                    "pin2_shift": 1,
                    "pin_af": 1,
                    "pin_config2": 2,
                    "pin_config_shift": 1,
                    "pin_config_value": 1,
                    "pin_mask3": 2,
                    "pin_shift": 1,
                    "shift_value": 1,
                    "shifted_value": 2,
                    "stop_bits": 1,
                    "uart_config_bit2_0": 1,
                    "uart_misc2": 1,
                    "uart_pin1_alt_fn": 1,
                    "uart_pin2_bit_shifted": 1,
                    "uart_pin2_shifted": 1,
                    "uart_pin3_mask": 1,
                    "uart_pin_config2": 1,
                    "uart_pin_config4": 1,
                    "uart_pin_mask3": 1,
                    "uart_pull_mode": 1,
                    "uart_shift": 1
                },
                "local_1c": {
                    "baud_rate": 1,
                    "bit_mask2": 1,
                    "config1": 1,
                    "gpio_config": 2,
                    "mask2": 1,
                    "pin2_config": 1,
                    "pin2_mask": 1,
                    "pin_config": 1,
                    "pin_config1": 2,
                    "pin_config_bits": 2,
                    "pin_mask2": 2,
                    "pin_mode": 1,
                    "pin_mux_reg": 1,
                    "pin_offset": 1,
                    "pin_settings": 1,
                    "shifted_configuration": 1,
                    "uart_config_bit5_3": 1,
                    "uart_flag": 1,
                    "uart_misc1": 1,
                    "uart_pin1_config": 1,
                    "uart_pin2_bit": 2,
                    "uart_pin2_mask": 1,
                    "uart_pin_config1": 1,
                    "uart_pin_config3": 1,
                    "uart_pin_mask2": 1,
                    "uart_pin_mux": 1
                },
                "local_20": {
                    "bit_mask1": 2,
                    "bitmask": 1,
                    "mask": 1,
                    "mask1": 1,
                    "pin1_mask": 2,
                    "pin_map1": 1,
                    "pin_mask": 10,
                    "pin_mask1": 3,
                    "pin_shift": 1,
                    "uart_pin1_bit": 3,
                    "uart_pin1_mask": 1,
                    "uart_pin_mask": 2,
                    "uart_pin_mask1": 3
                },
                "param_1": {
                    "config_data": 1,
                    "pin_array": 1,
                    "pin_config": 6,
                    "pin_config_array": 1,
                    "pin_configuration": 3,
                    "pin_info": 1,
                    "pins": 5,
                    "uart_config": 2,
                    "uart_pin": 1,
                    "uart_pin_config": 3,
                    "uart_pins": 7
                },
                "param_2": {
                    "gpio_pins": 1
                },
                "param_3": {
                    "uart_base": 1
                },
                "param_4": {
                    "uart_config": 1
                },
                "uVar3": {
                    "peripheral": 1,
                    "peripheral1": 1,
                    "pin_config1": 2,
                    "uart_config": 4,
                    "uart_config1": 8,
                    "uart_periph1": 1,
                    "uart_peripherals": 1,
                    "uart_permutation1": 1,
                    "uart_pin1": 1,
                    "uart_pin1_config": 2,
                    "uart_pin1_mode": 1,
                    "uart_pin1_settings": 1,
                    "uart_pin1_value": 1,
                    "uart_pin2_mask": 1,
                    "uart_pin_1_configuration": 1,
                    "uart_pin_config1": 1,
                    "uart_pin_mode": 1,
                    "uart_pin_setting1": 1,
                    "uart_pin_value": 1
                },
                "uVar3_param_1": {
                    "shift_amount": 1
                },
                "uVar4": {
                    "peripheral2": 1,
                    "pin2_value": 1,
                    "pin_config": 2,
                    "pin_config2": 2,
                    "pin_config_data": 1,
                    "pin_mode": 1,
                    "uart_config": 1,
                    "uart_config2": 8,
                    "uart_periph2": 1,
                    "uart_permutation2": 1,
                    "uart_pin1_mask": 1,
                    "uart_pin2": 1,
                    "uart_pin2_config": 2,
                    "uart_pin2_mode": 1,
                    "uart_pin2_settings": 1,
                    "uart_pin2_value": 1,
                    "uart_pin_2_configuration": 1,
                    "uart_pin_bit_masks": 1,
                    "uart_pin_config2": 1,
                    "uart_pin_setting": 1,
                    "uart_pin_setting2": 1
                }
            },
            "called": [
                "FUN_08002624",
                "FUN_08004cce",
                "FUN_08004d06",
                "FUN_08004c78",
                "FUN_080068f0",
                "FUN_0800441a",
                "FUN_08004884"
            ],
            "calling": [
                "FUN_08005a68",
                "FUN_08005384"
            ],
            "code": "\n\n\nvoid configure_uart_pins_08004f4c(int *uart_pins)\n\n{\n  int uart_pin1;\n  int uart_pin2;\n  undefined4 uart_config1;\n  uint uart_config2;\n  uint pin_mask;\n  uint pin_mask2;\n  uint shifted_value;\n  undefined4 uart_config3;\n  \n  if (uart_pins != (int *)0x0) {\n    uart_pin1 = FUN_08004c78((int)*(char *)(uart_pins + 0x16),&DAT_0800764c);\n    uart_pin2 = FUN_08004c78((int)*(char *)((int)uart_pins + 0x59),&DAT_08007604);\n    if ((uart_pin2 == 0) || (uart_pin1 == 0)) {\n      FUN_080068f0(\"ERROR: at least one UART pin has no peripheral\\n\",uart_pin2);\n    }\n    else {\n      uart_pin1 = FUN_08004d06(uart_pin1);\n      *uart_pins = uart_pin1;\n      if (uart_pin1 == 0) {\n        FUN_080068f0(\"ERROR: U(S)ART pins mismatch\\n\");\n      }\n      else {\n        if (uart_pin1 == 0x40013800) {\n          _DAT_4002100c = _DAT_4002100c & 0xffffbfff;\n          _DAT_40021018 = _DAT_40021018 | 0x4000;\n          *(undefined *)(uart_pins + 0x11) = 0;\n          *(undefined *)((int)uart_pins + 0x5a) = 0x25;\n        }\n        else if (uart_pin1 == 0x40004400) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffdffff;\n          _DAT_4002101c = _DAT_4002101c | 0x20000;\n          *(undefined *)(uart_pins + 0x11) = 1;\n          *(undefined *)((int)uart_pins + 0x5a) = 0x26;\n        }\n        else if (uart_pin1 == 0x40004800) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffbffff;\n          _DAT_4002101c = _DAT_4002101c | 0x40000;\n          *(undefined *)(uart_pins + 0x11) = 2;\n          *(undefined *)((int)uart_pins + 0x5a) = 0x27;\n        }\n        uart_config1 = FUN_08004884((uint)((int)*(char *)((int)uart_pins + 0x59) << 0x18) >> 0x1c);\n        uart_config2 = FUN_08004cce((int)*(char *)((int)uart_pins + 0x59),&DAT_08007604);\n        pin_mask = 1 << (*(byte *)((int)uart_pins + 0x59) & 0xf) & 0xffff;\n        pin_mask2 = (uart_config2 >> 3 & 1) << 4 | uart_config2 & 7;\n        shifted_value = (uart_config2 << 0x1a) >> 0x1e;\n        _DAT_40021018 = _DAT_40021018 | 1;\n        switch((uart_config2 << 0x11) >> 0x19) {\n        case 1:\n          _DAT_40010004 = _DAT_40010004 | 0x7000001;\n          break;\n        case 2:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          break;\n        case 3:\n          _DAT_40010004 = _DAT_40010004 | 0x7000002;\n          break;\n        case 4:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          break;\n        case 5:\n          _DAT_40010004 = _DAT_40010004 | 0x7000004;\n          break;\n        case 6:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          break;\n        case 7:\n          _DAT_40010004 = _DAT_40010004 | 0x7000008;\n          break;\n        case 8:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          break;\n        case 9:\n          _DAT_40010004 = _DAT_40010004 | 0x7000030;\n          break;\n        case 10:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          break;\n        case 0xb:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          break;\n        case 0xc:\n          _DAT_40010004 = _DAT_40010004 | 0x70000c0;\n          break;\n        case 0xd:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          break;\n        case 0xe:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          break;\n        case 0xf:\n          _DAT_40010004 = _DAT_40010004 | 0x7000300;\n          break;\n        case 0x10:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          break;\n        case 0x11:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          break;\n        case 0x12:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          break;\n        case 0x13:\n          _DAT_40010004 = _DAT_40010004 | 0x7000c00;\n          break;\n        case 0x14:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          break;\n        case 0x15:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          break;\n        case 0x16:\n          _DAT_40010004 = _DAT_40010004 | 0x7001000;\n          break;\n        case 0x17:\n          _DAT_40010004 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          break;\n        case 0x1b:\n          _DAT_40010004 = _DAT_40010004 | 0x7008000;\n          break;\n        case 0x1c:\n          _DAT_40010004 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          break;\n        case 0x21:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff;\n          break;\n        case 0x22:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          break;\n        case 0x23:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          break;\n        case 0x24:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n        }\n        uart_config3 = 3;\n        FUN_08002624(uart_config1,&pin_mask);\n        uart_config1 = FUN_08004884((uint)((int)*(char *)(uart_pins + 0x16) << 0x18) >> 0x1c);\n        uart_config2 = FUN_08004cce((int)*(char *)(uart_pins + 0x16),&DAT_0800764c);\n        pin_mask = 1 << (*(byte *)(uart_pins + 0x16) & 0xf) & 0xffff;\n        pin_mask2 = (uart_config2 >> 3 & 1) << 4 | uart_config2 & 7;\n        shifted_value = (uart_config2 << 0x1a) >> 0x1e;\n        FUN_08002624(uart_config1,&pin_mask);\n        (&DAT_2000032c)[*(byte *)(uart_pins + 0x11)] = uart_pins + 1;\n        uart_pins[1] = *uart_pins;\n        uart_pins[2] = uart_pins[0x12];\n        uart_pins[3] = uart_pins[0x13];\n        uart_pins[4] = uart_pins[0x14];\n        uart_pins[5] = uart_pins[0x15];\n        uart_pins[6] = 0xc;\n        uart_pins[7] = 0;\n        uart_pins[8] = 0;\n        FUN_0800441a(uart_pins + 1);\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "configure_uart_pins_08004f4c",
            "entrypoint": "0x08004f4c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004f4c": "configure_uart_pins_08004f4c",
                "iVar1": "uart_pin1",
                "iVar2": "uart_pin2",
                "local_14": "uart_config3",
                "local_18": "shifted_value",
                "local_1c": "pin_mask2",
                "local_20": "pin_mask",
                "param_1": "uart_pins",
                "uVar3": "uart_config1",
                "uVar4": "uart_config2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005384": {
            "additional_data": {
                "DAT_08007604": {
                    "data2": 1,
                    "data_2": 1,
                    "param_data": 1
                },
                "DAT_0800764c": {
                    "data1": 1,
                    "data_1": 1,
                    "flag": 1
                },
                "DAT_20000088": {
                    "data_array": 1,
                    "data_to_print": 1,
                    "result_data": 1
                },
                "DAT_200000d0": {
                    "constant": 1,
                    "constant_value1": 1,
                    "constant_value2": 1,
                    "data3": 3,
                    "data_entry3": 1,
                    "game_time": 1,
                    "setting3": 1,
                    "some_value1": 1,
                    "timer": 1
                },
                "DAT_200000d4": {
                    "constant": 1,
                    "counter1": 1,
                    "counter2": 1,
                    "data5": 3,
                    "data_entry5": 1,
                    "game_score": 1,
                    "setting5": 1,
                    "some_value2": 1
                },
                "DAT_200000d8": {
                    "constant": 1,
                    "counter2": 1,
                    "counter3": 1,
                    "data6": 3,
                    "data_entry6": 1,
                    "game_level": 1,
                    "setting6": 1,
                    "some_value3": 1
                },
                "DAT_200000dc": {
                    "constant": 1,
                    "counter1": 1,
                    "data4": 3,
                    "data_entry4": 1,
                    "setting4": 1
                },
                "DAT_200000e0": {
                    "constant": 1,
                    "constant_value1": 1,
                    "data2": 3,
                    "data_entry2": 1,
                    "flag_count": 1,
                    "game_type": 1,
                    "operation_type": 1,
                    "setting2": 1,
                    "value": 1
                },
                "DAT_200000e1": {
                    "converted_address": 1,
                    "data1": 3,
                    "data_entry1": 1,
                    "game_data": 1,
                    "processed_param": 1,
                    "processed_value": 1,
                    "result_value": 1,
                    "setting1": 1
                },
                "FUN_08004c78": {
                    "fetch_data_from_memory": 1,
                    "get_address": 1,
                    "get_flag_value": 1,
                    "get_game_data": 1,
                    "get_result": 1,
                    "get_value": 1,
                    "perform_action": 2,
                    "retrieve_value": 1
                },
                "FUN_08004ca2": {
                    "convert_address": 1,
                    "get_value": 1,
                    "prepare_game_data": 1,
                    "process_data": 1,
                    "process_param": 1,
                    "process_value": 3,
                    "retrieve_value": 1
                },
                "FUN_08004f4c": {
                    "display_data": 1,
                    "display_result": 1,
                    "print_data": 5,
                    "process_data": 1,
                    "start_game": 1
                },
                "FUN_08005384": {
                    "initialize_data": 26,
                    "initialize_data_structures": 1,
                    "initialize_game_data": 1,
                    "initialize_program": 1,
                    "initialize_settings": 1,
                    "initialize_system": 1
                },
                "iVar1": {
                    "first_result": 1,
                    "result": 23,
                    "result1": 6
                },
                "initializeData": {
                    "initialize_data": 1
                },
                "param_1": {
                    "value_type": 1
                },
                "uVar2": {
                    "data": 1,
                    "error_code": 1,
                    "input": 1,
                    "param": 4,
                    "param2": 2,
                    "result": 1,
                    "result2": 7,
                    "second_result": 10,
                    "value": 2,
                    "variable": 1
                }
            },
            "called": [
                "FUN_08004c78",
                "FUN_08004ca2",
                "FUN_08004f4c"
            ],
            "calling": [
                "FUN_080053d4"
            ],
            "code": "\nvoid initialize_data_structures_08005384(void)\n\n{\n  int result;\n  undefined4 second_result;\n  \n  result = FUN_08004c78(2,&DAT_0800764c);\n  if (result != 0) {\n    second_result = FUN_08004c78(2,&DAT_0800764c);\n    DAT_200000e1 = FUN_08004ca2(second_result,&DAT_08007604);\n    DAT_200000e0 = 2;\n    DAT_200000d0 = 0x2580;\n    DAT_200000dc = 0;\n    DAT_200000d4 = 0;\n    DAT_200000d8 = 0;\n    FUN_08004f4c(&DAT_20000088);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_data_structures_08005384",
            "entrypoint": "0x08005384",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005384": "initialize_data_structures_08005384",
                "iVar1": "result",
                "uVar2": "second_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080053d4": {
            "additional_data": {
                "DAT_0800764c": {
                    "array": 1,
                    "array_data": 1,
                    "check_data": 1,
                    "config_data": 2,
                    "constant_array": 1,
                    "constant_data": 1,
                    "constant_data_array": 1,
                    "constant_value": 1,
                    "data_array": 1,
                    "some_data": 1
                },
                "DAT_200000cc": {
                    "array_length": 2,
                    "condition_value": 1,
                    "constant_value": 1,
                    "counter": 1,
                    "counter_limit": 1,
                    "data_limit": 1,
                    "data_value": 2,
                    "dynamic_data": 1,
                    "dynamic_variable": 1,
                    "limit": 1,
                    "limit_value": 2,
                    "loop_limit": 1,
                    "max_index": 1,
                    "some_data": 1
                },
                "DAT_2000032c": {
                    "array_data": 2,
                    "data_array": 6,
                    "dynamic_array": 1
                },
                "FUN_08001cc4": {
                    "get_current_time": 4,
                    "get_current_value": 2,
                    "get_initial_value": 3,
                    "get_old_value": 1,
                    "get_time": 1
                },
                "FUN_08004478": {
                    "apply_operation": 1,
                    "manipulate_data": 1,
                    "perform_operation": 4,
                    "process_data": 4,
                    "process_data_and_value": 1,
                    "reverse_data": 1
                },
                "FUN_08004c78": {
                    "check_array_value": 1,
                    "check_condition": 1,
                    "check_data_array": 1,
                    "check_result": 1,
                    "check_value": 1,
                    "get_config_value": 1,
                    "get_configuration_value": 2,
                    "get_new_value": 1,
                    "perform_check": 2
                },
                "FUN_08005384": {
                    "check_condition": 1,
                    "check_configuration": 1,
                    "check_configuration_value": 1,
                    "check_constant_value": 1,
                    "check_counter": 1,
                    "handle_negative_case": 1,
                    "perform_action": 1,
                    "perform_additional_check": 1,
                    "perform_operation": 1,
                    "print_info": 1,
                    "process_limit_value": 1
                },
                "FUN_080053d4": {
                    "check_and_execute_function": 1,
                    "check_and_execute_operation": 2,
                    "check_and_process_data": 1,
                    "check_data": 1,
                    "execute_function": 1,
                    "find_matching_value": 1,
                    "perform_operation": 1,
                    "verify_and_process_data": 1,
                    "verify_input": 1
                },
                "iVar1": {
                    "first_value": 1,
                    "initial_status": 3,
                    "initial_value": 8,
                    "old_value": 1,
                    "previous_result": 1,
                    "previous_status": 1,
                    "result1": 7,
                    "result_1": 4,
                    "start_time": 2,
                    "start_time_in_func": 1,
                    "value_1": 1,
                    "var1": 1
                },
                "iVar2": {
                    "check_result": 1,
                    "config_value": 2,
                    "function_result": 1,
                    "new_value": 1,
                    "operation_result": 2,
                    "result": 7,
                    "result2": 7,
                    "result_2": 4,
                    "result_value": 1,
                    "second_value": 1,
                    "status": 1,
                    "temp_value": 1,
                    "value_2": 1,
                    "var2": 1
                },
                "param_1": {
                    "array_element": 1,
                    "data_pointer": 1,
                    "initialized_value": 1,
                    "input1": 2,
                    "input_1": 1,
                    "input_data": 2,
                    "input_param": 4,
                    "input_param_1": 1,
                    "input_value": 6,
                    "input_value1": 1,
                    "input_value_1": 1,
                    "param1": 2,
                    "result_ptr": 1,
                    "start_time": 1,
                    "status": 4,
                    "undefined_parameter": 1,
                    "value1": 1
                },
                "param_2": {
                    "count": 1,
                    "counter": 1,
                    "data": 2,
                    "data_length": 1,
                    "execution_code": 1,
                    "flag": 1,
                    "initial_result": 1,
                    "initial_value": 1,
                    "input": 1,
                    "input2": 2,
                    "input_2": 1,
                    "input_array": 1,
                    "input_data": 1,
                    "input_param_2": 1,
                    "input_parameter": 1,
                    "input_pointer": 1,
                    "input_value": 3,
                    "input_value2": 1,
                    "input_value_2": 1,
                    "output_param": 2,
                    "param2": 2,
                    "target_value": 1,
                    "value": 2,
                    "value2": 1
                },
                "param_3": {
                    "input_param_3": 1,
                    "input_value": 2
                },
                "param_4": {
                    "delay_value": 1,
                    "input_param_4": 1,
                    "unknown_value": 1
                },
                "uVar3": {
                    "array_index": 1,
                    "counter": 6,
                    "index": 13,
                    "iteration_count": 3,
                    "loop_counter": 7,
                    "loop_iterator": 1
                }
            },
            "called": [
                "FUN_08001cc4",
                "FUN_08004c78",
                "FUN_08005384",
                "FUN_08004478"
            ],
            "calling": [
                "FUN_08005730"
            ],
            "code": "\nuint check_and_execute_function_080053d4(undefined4 input_value,uint input_value)\n\n{\n  int initial_value;\n  int result2;\n  uint index;\n  \n  initial_value = FUN_08001cc4();\n  result2 = FUN_08004c78(2,&DAT_0800764c);\n  if (result2 == 0) {\n    return 0;\n  }\n  for (index = 0;\n      (index < 5 &&\n      (((&DAT_2000032c)[index] == 0 ||\n       (result2 = FUN_08004c78(2,&DAT_0800764c), *(int *)(&DAT_2000032c)[index] != result2))));\n      index = index + 1 & 0xff) {\n  }\n  if (4 < index) {\n    if ((4 < DAT_200000cc) && (FUN_08005384(), 4 < DAT_200000cc)) {\n      return 0;\n    }\n    index = (uint)DAT_200000cc;\n  }\n  do {\n    result2 = FUN_08004478((&DAT_2000032c)[index],input_value,input_value & 0xffff,1000);\n    if (result2 == 0) {\n      return input_value;\n    }\n    result2 = FUN_08001cc4();\n  } while ((uint)(result2 - initial_value) < 1000);\n  return 0;\n}\n\n",
            "current_name": "check_and_execute_function_080053d4",
            "entrypoint": "0x080053d4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080053d4": "check_and_execute_function_080053d4",
                "iVar1": "initial_value",
                "iVar2": "result2",
                "param_1": "input_value",
                "param_2": "input_value",
                "uVar3": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800548c": {
            "additional_data": {
                "0x22": {
                    "target_byte_mask": 1
                },
                "FUN_080047e8": {
                    "calculate_and_return_value": 1,
                    "calculate_checksum": 1,
                    "decode_byte": 1,
                    "get_bit_pattern": 1,
                    "get_bit_representation": 1,
                    "get_byte_value": 1,
                    "get_encoded_value": 1,
                    "get_flag": 1,
                    "get_flag_byte": 1,
                    "get_flag_status": 1,
                    "get_flag_value": 2
                },
                "FUN_0800548c": {
                    "check_condition": 2,
                    "check_flag": 5,
                    "check_flag_condition": 1,
                    "check_flag_pattern": 1,
                    "check_flag_status": 1,
                    "check_flag_validity": 5,
                    "check_flag_value": 1,
                    "is_bitwise_22": 1,
                    "is_condition_met": 1,
                    "is_flag_set": 7,
                    "is_magic_number_valid": 1,
                    "is_option_enabled": 1,
                    "is_param1_bit_set": 1,
                    "is_param_valid": 1,
                    "is_set_to_twenty_two": 1,
                    "validate_condition": 1
                },
                "byte": {
                    "byte_value": 1
                },
                "param_1": {
                    "flag": 11,
                    "flag_index": 2,
                    "flag_value": 7,
                    "input_value": 7,
                    "magic_number": 1,
                    "option_index": 1,
                    "value": 2
                },
                "uVar1": {
                    "computed_value": 1,
                    "converted_value": 1,
                    "decoded_value": 1,
                    "flag": 1,
                    "function_result": 2,
                    "option_value": 1,
                    "processed_value": 1,
                    "result": 22,
                    "return_value": 1
                }
            },
            "called": [
                "FUN_080047e8"
            ],
            "calling": [
                "FUN_08005510",
                "FUN_080054d4"
            ],
            "code": "\nbool check_flag_validity_0800548c(int flag)\n\n{\n  uint result;\n  \n  result = FUN_080047e8((&DAT_2000032c)[*(byte_value *)(flag + 0x44)]);\n  return (result & 0x22) == 0x22;\n}\n\n",
            "current_name": "check_flag_validity_0800548c",
            "entrypoint": "0x0800548c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800548c": "check_flag_validity_0800548c",
                "byte": "byte_value",
                "param_1": "flag",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080054b0": {
            "additional_data": {
                "FUN_080047e8": {
                    "get_bitwise_result": 1,
                    "get_byte_value": 1,
                    "get_flag": 1,
                    "get_flag_value": 2
                },
                "FUN_080054b0": {
                    "check_condition": 2,
                    "check_conditions": 1,
                    "check_critical_bit": 1,
                    "check_flag": 1,
                    "check_flag_condition": 1,
                    "check_flag_status": 1,
                    "check_flag_validity": 1,
                    "check_flags": 1,
                    "is_bit_set": 1,
                    "is_certain_param_combo_valid": 1,
                    "is_condition_met": 2,
                    "is_condition_true": 1,
                    "is_critical_param": 1,
                    "is_desirable_value": 1,
                    "is_desired_value_present": 1,
                    "is_flag_set": 5,
                    "is_message_flag_set": 1,
                    "is_param_flag_set": 1,
                    "is_param_set": 1,
                    "is_param_valid": 1,
                    "is_returning_true": 1,
                    "is_subtype_restriction_fulfilled": 1,
                    "is_valid_condition": 1,
                    "is_valid_input": 1,
                    "is_valid_param": 1
                },
                "byte": {
                    "byte_value": 4,
                    "flag_byte": 1,
                    "input_byte": 3
                },
                "param_1": {
                    "flag": 1,
                    "flag_index": 2,
                    "flag_value": 6,
                    "input_param": 1,
                    "input_value": 17,
                    "message_address": 1,
                    "subtype_code": 1,
                    "value": 2
                },
                "uVar1": {
                    "flag_result": 1,
                    "flag_value": 2,
                    "func_result": 1,
                    "function_result": 6,
                    "result": 20
                }
            },
            "called": [
                "FUN_080047e8"
            ],
            "calling": [],
            "code": "\nbool is_param_flag_set_080054b0(int input_value)\n\n{\n  uint result;\n  \n  result = FUN_080047e8((&DAT_2000032c)[*(byte_value *)(input_value + 0x44)]);\n  return (result & 0x21) == 0x21;\n}\n\n",
            "current_name": "is_param_flag_set_080054b0",
            "entrypoint": "0x080054b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080054b0": "is_param_flag_set_080054b0",
                "byte": "byte_value",
                "param_1": "input_value",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080054d4": {
            "additional_data": {
                "0": {
                    "success_code": 1
                },
                "0xffffffff": {
                    "error_code": 1
                },
                "1": {
                    "data_size": 1
                },
                "FUM_0800548c": {
                    "check_success": 1
                },
                "FUNG_0800548c": {
                    "check_condition": 1
                },
                "FUN_080045a2": {
                    "copy_and_process_data": 1,
                    "copy_data": 2,
                    "copy_data_to_destination": 1,
                    "modify_value": 1,
                    "perform_operation": 2,
                    "process_data": 18,
                    "process_data_block": 1,
                    "process_data_element": 1
                },
                "FUN_0800548c": {
                    "check_condition": 13,
                    "check_data": 1,
                    "check_data_validity": 3,
                    "check_if_valid": 1,
                    "check_if_valid_data": 1,
                    "check_validity": 3,
                    "check_value": 1,
                    "is_data_valid": 1,
                    "is_input_valid": 1,
                    "is_valid_address": 1
                },
                "FUN_080054d4": {
                    "copy_and_process_data": 3,
                    "copy_data": 1,
                    "copy_data_and_perform_action": 1,
                    "extract_and_process_data": 3,
                    "extract_data": 10,
                    "extract_data_and_call_function": 2,
                    "extract_data_and_process": 1,
                    "extract_data_from_binary": 3,
                    "extract_param_and_call_function": 1,
                    "extract_param_value": 1,
                    "extract_parameter": 1,
                    "extract_value": 1,
                    "extract_value_from_binary": 1,
                    "get_data_from_binary": 1,
                    "process_data": 1
                },
                "byte": {
                    "index": 2,
                    "offset": 1
                },
                "iVar1": {
                    "result": 26,
                    "return_value": 1
                },
                "param_1": {
                    "binary_address": 1,
                    "binary_data": 2,
                    "binary_data_pointer": 1,
                    "data_address": 3,
                    "data_length": 1,
                    "data_pointer": 3,
                    "data_ptr": 2,
                    "input": 5,
                    "input_data": 4,
                    "input_pointer": 1,
                    "input_size": 1,
                    "input_value": 4,
                    "param": 1,
                    "source_addr": 1,
                    "value": 1
                },
                "param_2": {
                    "dest_ptr": 1,
                    "extracted_data": 3,
                    "extracted_data_pointer": 1,
                    "output": 6,
                    "output_buffer": 3,
                    "output_data": 8,
                    "output_parameter": 1,
                    "output_pointer": 3,
                    "output_ptr": 3,
                    "output_value": 2
                },
                "param_3": {
                    "action_flag": 1,
                    "arg1": 2,
                    "operation_result": 1,
                    "param1": 1,
                    "param3": 2,
                    "param_3": 6,
                    "size": 13,
                    "size_of_data": 1,
                    "size_of_extracted_data": 1,
                    "value_1": 2,
                    "value_a": 1
                },
                "param_4": {
                    "additional_param": 1,
                    "arg2": 2,
                    "extra_data": 1,
                    "param": 2,
                    "param2": 1,
                    "param4": 3,
                    "param_4": 16,
                    "parameter": 1,
                    "unknown_parameter": 1,
                    "value_2": 2,
                    "value_b": 1
                }
            },
            "called": [
                "FUN_0800548c",
                "FUN_080045a2"
            ],
            "calling": [
                "FUN_0800598a"
            ],
            "code": "\nundefined4 extract_data_and_process_080054d4(int input,undefined *output_data,undefined4 size,undefined4 param_4)\n\n{\n  int result;\n  \n  if (input == 0) {\n    return 0xffffffff;\n  }\n  result = FUN_0800548c();\n  if (result == 0) {\n    *output_data = *(undefined *)(input + 0x45);\n    FUN_080045a2((&DAT_2000032c)[*(index *)(input + 0x44)],input + 0x45,1,&DAT_2000032c,param_4);\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "extract_data_and_process_080054d4",
            "entrypoint": "0x080054d4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080054d4": "extract_data_and_process_080054d4",
                "byte": "index",
                "iVar1": "result",
                "param_1": "input",
                "param_2": "output_data",
                "param_3": "size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005510": {
            "additional_data": {
                "FUN_08002494": {
                    "perform_action1": 1,
                    "process_data": 4,
                    "process_data_chunk": 1,
                    "update_param": 2,
                    "update_value": 4
                },
                "FUN_080024f8": {
                    "cleanup": 1,
                    "cleanup_data": 1,
                    "cleanup_value": 1,
                    "do_something": 1,
                    "finalize_process": 2,
                    "finalize_processing": 1,
                    "finalize_update": 1,
                    "perform_action": 1,
                    "perform_action2": 1,
                    "process_character": 1,
                    "process_value": 1
                },
                "FUN_080045a2": {
                    "execute_function": 1,
                    "modify_data": 1,
                    "perform_action": 1,
                    "perform_action3": 1,
                    "perform_operation": 1,
                    "process_data": 2,
                    "process_data_part": 1,
                    "transfer_data": 1,
                    "update_value": 1
                },
                "FUN_0800548c": {
                    "check_condition": 2,
                    "check_data": 1,
                    "check_result": 1,
                    "check_success": 1,
                    "check_validity": 4,
                    "check_value": 3
                },
                "FUN_08005510": {
                    "initialize_data": 3,
                    "inject_parameter_value": 1,
                    "process_data": 3,
                    "process_input": 1,
                    "process_parameter": 1,
                    "register_data": 1,
                    "store_data": 1,
                    "update_data": 20
                },
                "iVar1": {
                    "func_result": 1,
                    "result": 28,
                    "return_value1": 1,
                    "success": 1
                },
                "param_1": {
                    "data": 11,
                    "data_address": 2,
                    "data_pointer": 6,
                    "data_ptr": 8,
                    "input_data": 1,
                    "input_param": 1,
                    "parameter": 2
                },
                "param_2": {
                    "data_value": 1,
                    "new_data": 1,
                    "new_param1": 1,
                    "new_value": 11,
                    "value": 9,
                    "value1": 8
                },
                "param_3": {
                    "new_param2": 1,
                    "param": 1,
                    "param1": 1,
                    "param3": 4,
                    "param_3": 3,
                    "ptr1": 3,
                    "temp_param": 1,
                    "unknown_value": 1,
                    "unused": 1,
                    "unused1": 3,
                    "unused_param": 4,
                    "value2": 8
                },
                "param_4": {
                    "additional_param": 1,
                    "new_param3": 1,
                    "param2": 2,
                    "param4": 7,
                    "param_4": 4,
                    "ptr2": 3,
                    "unused": 1,
                    "unused2": 3,
                    "unused_param2": 2,
                    "value3": 7
                },
                "uVar2": {
                    "byte_index": 1,
                    "byte_value": 3,
                    "data_index": 1,
                    "index": 26
                }
            },
            "called": [
                "FUN_08002494",
                "FUN_080024f8",
                "FUN_0800548c",
                "FUN_080045a2"
            ],
            "calling": [
                "FUN_08005a68"
            ],
            "code": "\nvoid update_data_08005510(int data,undefined4 new_value,undefined4 value2,undefined4 param4)\n\n{\n  int result;\n  uint index;\n  \n  if (data != 0) {\n    result = FUN_0800548c();\n    if (result == 0) {\n      index = (uint)*(byte *)(data + 0x44);\n      *(undefined4 *)(&DAT_200002dc + index * 4) = new_value;\n      *(int *)(&DAT_200002f0 + index * 4) = data;\n      FUN_08002494((int)*(char *)(data + 0x5a),0,1,index,param4);\n      FUN_080024f8((int)*(char *)(data + 0x5a));\n      FUN_080045a2((&DAT_2000032c)[*(byte *)(data + 0x44)],data + 0x45,1);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "update_data_08005510",
            "entrypoint": "0x08005510",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005510": "update_data_08005510",
                "iVar1": "result",
                "param_1": "data",
                "param_2": "new_value",
                "param_3": "value2",
                "param_4": "param4",
                "uVar2": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005568": {
            "additional_data": {
                "DAT_20000304": {
                    "address_list": 1
                },
                "DAT_20000318": {
                    "value_list": 1
                },
                "FUN_08002494": {
                    "adjust_data": 1,
                    "initialize_buffer": 1,
                    "perform_action_a": 1,
                    "process_data": 1,
                    "set_data": 1,
                    "set_flag": 2,
                    "set_initial_values": 1,
                    "set_offset": 1,
                    "update_data_parameters": 1,
                    "update_data_part1": 1,
                    "update_data_range": 1,
                    "update_threshold": 1
                },
                "FUN_080024f8": {
                    "apply_changes": 1,
                    "finalize_data": 1,
                    "perform_action": 2,
                    "perform_action_b": 1,
                    "process_data": 5,
                    "process_flag": 2,
                    "update_data_part2": 1
                },
                "FUN_0800455a": {
                    "apply_changes": 1,
                    "execute_operation": 2,
                    "perform_action": 5,
                    "perform_action_c": 1,
                    "process_data": 1,
                    "update_data_part3": 1,
                    "update_flag": 1,
                    "update_values": 1
                },
                "FUN_08005568": {
                    "populate_data": 1,
                    "process_data": 2,
                    "set_param_and_update": 1,
                    "update_data": 22,
                    "update_data_and_call_functions": 1,
                    "update_data_and_execute": 1,
                    "update_data_structure": 1,
                    "update_parameter_data": 1,
                    "update_record": 1
                },
                "bVar1": {
                    "byte_val": 1,
                    "byte_value": 14,
                    "data_offset": 1,
                    "data_value": 1,
                    "index": 10,
                    "param_byte": 1,
                    "record_index": 1,
                    "selected_index": 1,
                    "value": 1
                },
                "param_1": {
                    "action_ptr": 1,
                    "data": 1,
                    "data_address": 6,
                    "data_pointer": 9,
                    "data_ptr": 10,
                    "flag_array": 1,
                    "param": 1,
                    "param_value": 1,
                    "record": 1
                },
                "param_2": {
                    "flag_offset": 1,
                    "new_data": 1,
                    "new_value": 24,
                    "param": 1,
                    "param_value": 1,
                    "value": 3
                },
                "param_3": {
                    "check": 1,
                    "flag_value": 1
                }
            },
            "called": [
                "FUN_08002494",
                "FUN_080024f8",
                "FUN_0800455a"
            ],
            "calling": [],
            "code": "\nvoid update_data_and_call_functions_08005568(int data_ptr,undefined4 new_value)\n\n{\n  byte byte_value;\n  \n  if (data_ptr != 0) {\n    byte_value = *(byte *)(data_ptr + 0x44);\n    *(undefined4 *)(&DAT_20000304 + (uint)byte_value * 4) = new_value;\n    *(int *)(&DAT_20000318 + (uint)byte_value * 4) = data_ptr;\n    FUN_08002494((int)*(char *)(data_ptr + 0x5a),0,2);\n    FUN_080024f8((int)*(char *)(data_ptr + 0x5a));\n    FUN_0800455a((&DAT_2000032c)[*(byte *)(data_ptr + 0x44)],\n                 *(int *)(data_ptr + 100) + (uint)*(ushort *)(data_ptr + 0x6a),1);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "update_data_and_call_functions_08005568",
            "entrypoint": "0x08005568",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005568": "update_data_and_call_functions_08005568",
                "bVar1": "byte_value",
                "param_1": "data_ptr",
                "param_2": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080055bc": {
            "additional_data": {
                "FUN_080055bc": {
                    "check_value": 1,
                    "find_element_index": 3,
                    "find_index": 5,
                    "find_key_index": 1,
                    "find_match": 1,
                    "find_matching_index": 2,
                    "find_value": 1,
                    "find_value_in_array": 1,
                    "find_value_index": 15
                },
                "param_1": {
                    "element": 2,
                    "input": 1,
                    "input_number": 1,
                    "input_value": 7,
                    "key": 1,
                    "value": 19
                },
                "uVar1": {
                    "found_index": 1,
                    "index": 28,
                    "matching_index": 1,
                    "result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005604",
                "FUN_080055e0"
            ],
            "code": "\nuint find_value_index_080055bc(int value)\n\n{\n  uint index;\n  \n  if (value == 0) {\n    index = 5;\n  }\n  else {\n    index = 0;\n    while( true ) {\n      if (4 < index) {\n        return index;\n      }\n      if (value == (&DAT_2000032c)[index]) break;\n      index = index + 1 & 0xff;\n    }\n  }\n  return index;\n}\n\n",
            "current_name": "find_value_index_080055bc",
            "entrypoint": "0x080055bc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080055bc": "find_value_index_080055bc",
                "param_1": "value",
                "uVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080055e0": {
            "additional_data": {
                "FUN_080055bc": {
                    "get_action_code": 1,
                    "get_condition": 1,
                    "get_execution_count": 1,
                    "get_function_index": 3,
                    "get_function_value": 1,
                    "get_index": 1,
                    "get_selected_function_index": 2,
                    "get_sub_function_id": 1,
                    "get_sub_function_index": 6,
                    "get_subfunction_index": 1,
                    "get_value": 3
                },
                "FUN_080055e0": {
                    "execute_action": 1,
                    "execute_function": 5,
                    "execute_function_based_on_condition": 2,
                    "execute_function_based_on_index": 1,
                    "execute_function_based_on_value": 2,
                    "execute_functions": 1,
                    "execute_next_action": 1,
                    "execute_selected_function": 2,
                    "execute_sub_function": 15,
                    "execute_subfunction": 1
                },
                "param_1": {
                    "condition": 1,
                    "index": 1,
                    "input": 2,
                    "unused_parameter": 2
                },
                "uVar1": {
                    "action_code": 1,
                    "action_index": 1,
                    "function_index": 2,
                    "function_value": 1,
                    "index": 1,
                    "result": 3,
                    "return_value": 2,
                    "sub_function_id": 1,
                    "sub_function_index": 12,
                    "value": 4
                }
            },
            "called": [
                "FUN_080055bc"
            ],
            "calling": [
                "FUN_08004618"
            ],
            "code": "\nvoid execute_sub_function_080055e0(void)\n\n{\n  uint sub_function_index;\n  \n  sub_function_index = FUN_080055bc();\n  if (sub_function_index < 5) {\n    (**(code **)(&DAT_200002dc + sub_function_index * 4))(*(undefined4 *)(&DAT_200002f0 + sub_function_index * 4));\n  }\n  return;\n}\n\n",
            "current_name": "execute_sub_function_080055e0",
            "entrypoint": "0x080055e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080055e0": "execute_sub_function_080055e0",
                "uVar1": "sub_function_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005604": {
            "additional_data": {
                "DAT_20000304": {
                    "array_of_functions": 1,
                    "function_addresses": 1,
                    "function_array": 1,
                    "function_pointer_array": 1,
                    "function_table": 1,
                    "functions_ptr": 1
                },
                "DAT_20000318": {
                    "addresses": 1,
                    "array_of_addresses": 1,
                    "data": 1,
                    "data_addresses": 1,
                    "data_array": 1,
                    "function_array": 1
                },
                "DAT_2000032c": {
                    "byte_array": 3,
                    "data": 1
                },
                "FUN_0800455a": {
                    "execute_action": 2,
                    "execute_operation": 2,
                    "execute_task": 1,
                    "perform_action": 10,
                    "perform_operation": 1,
                    "process_data": 2,
                    "send_data": 1,
                    "update_data": 1
                },
                "FUN_080055bc": {
                    "get_index": 1,
                    "get_random_index": 8,
                    "get_random_number": 3,
                    "get_random_value": 3,
                    "get_result": 3,
                    "get_some_value": 1,
                    "obtain_address": 1
                },
                "FUN_08005604": {
                    "execute_function": 11,
                    "execute_operation": 1,
                    "execute_selected_action": 1,
                    "execute_selected_operation": 1,
                    "extract_and_process_data": 1,
                    "process_binary_func": 1,
                    "process_data": 6,
                    "process_function": 1
                },
                "iVar2": {
                    "action_result": 1,
                    "result": 14,
                    "return_value": 12,
                    "status": 1,
                    "status_code": 1,
                    "sub_result": 2
                },
                "iVar3": {
                    "address": 6,
                    "data": 4,
                    "data_address": 3,
                    "data_pointer": 4,
                    "data_ptr": 3,
                    "function_address": 1,
                    "function_pointer": 6,
                    "ptr": 1,
                    "random_value": 1,
                    "selected_action": 1,
                    "selected_item": 1
                },
                "param_1": {
                    "action_param1": 1,
                    "data": 1,
                    "input": 1,
                    "input_param": 2
                },
                "param_2": {
                    "action_param2": 1,
                    "offset": 1,
                    "param_a": 1,
                    "value1": 1
                },
                "param_3": {
                    "action_param3": 1,
                    "flag": 1,
                    "param_b": 1,
                    "value2": 1
                },
                "uVar1": {
                    "index": 4,
                    "random_index": 9,
                    "random_number": 3,
                    "random_value": 1,
                    "result": 13,
                    "return_value": 1
                }
            },
            "called": [
                "FUN_080055bc",
                "FUN_0800455a"
            ],
            "calling": [
                "FUN_080045fe"
            ],
            "code": "\nvoid execute_function_08005604(void)\n\n{\n  uint result;\n  int result;\n  int function_pointer;\n  \n  result = FUN_080055bc();\n  function_pointer = *(int *)(&DAT_20000318 + result * 4);\n  if ((result < 5) && (result = (**(code **)(&DAT_20000304 + result * 4))(function_pointer), result != -1)) {\n    FUN_0800455a((&DAT_2000032c)[*(byte *)(function_pointer + 0x44)],\n                 *(int *)(function_pointer + 100) + (uint)*(ushort *)(function_pointer + 0x6a),1);\n  }\n  return;\n}\n\n",
            "current_name": "execute_function_08005604",
            "entrypoint": "0x08005604",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005604": "execute_function_08005604",
                "iVar2": "result",
                "iVar3": "function_pointer",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005650": {
            "called": [],
            "calling": [
                "FUN_080046b8"
            ],
            "code": "\nvoid FUNC_08005650(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08005650",
            "entrypoint": "0x08005650",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08005650": "FUNC_08005650"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080056d8": {
            "additional_data": {
                "DAT_20000340": {
                    "current_buffer": 1,
                    "current_memory": 14,
                    "current_memory_pointer": 1,
                    "current_pointer": 2,
                    "current_position": 2,
                    "current_ptr": 2,
                    "global_memory": 1,
                    "memory_start": 1
                },
                "DAT_200006a4": {
                    "error_code": 19,
                    "error_flag": 1,
                    "error_status": 1,
                    "error_value": 1
                },
                "DAT_200006a8": {
                    "beginning_of_stack": 1,
                    "default_buffer": 1,
                    "default_memory": 8,
                    "default_memory_block": 1,
                    "default_memory_start": 1,
                    "default_ptr": 1,
                    "initial_memory": 3,
                    "initial_memory_pointer": 1,
                    "initial_pointer": 1,
                    "initial_position": 1,
                    "stack_end": 1,
                    "start_position": 1
                },
                "FUN_080056d8": {
                    "allocate_memory": 26,
                    "get_memory": 1,
                    "get_memory_block": 2,
                    "get_next_buffer": 1,
                    "reserve_stack_space": 1
                },
                "param_1": {
                    "buffer_size": 1,
                    "memory_size": 1,
                    "requested_size": 1,
                    "size": 27,
                    "space_to_reserve": 1
                },
                "puVar1": {
                    "allocated_memory": 27,
                    "memory_block": 2,
                    "next_buffer": 1,
                    "reserved_space_pointer": 1
                },
                "stack0x00000000": {
                    "end_of_memory": 1,
                    "end_of_stack": 1,
                    "stack_base_address": 1,
                    "stack_bottom": 2,
                    "stack_end_address": 1,
                    "stack_ptr": 1,
                    "stack_top": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08006920"
            ],
            "code": "\nundefined * allocate_memory_080056d8(int size)\n\n{\n  undefined *allocated_memory;\n  \n  if (DAT_20000340 == (undefined *)0x0) {\n    DAT_20000340 = &DAT_200006a8;\n  }\n  allocated_memory = DAT_20000340;\n  if (DAT_20000340 + size <= &stack_bottom) {\n    DAT_20000340 = DAT_20000340 + size;\n    return allocated_memory;\n  }\n  DAT_200006a4 = 0xc;\n  return (undefined *)0xffffffff;\n}\n\n",
            "current_name": "allocate_memory_080056d8",
            "entrypoint": "0x080056d8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080056d8": "allocate_memory_080056d8",
                "param_1": "size",
                "puVar1": "allocated_memory",
                "stack0x00000000": "stack_bottom"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005714": {
            "additional_data": {
                "": {
                    "": 1
                },
                "0xffffffff": {
                    "default_value": 1,
                    "error_value": 1,
                    "invalid_return_code": 1
                },
                "FUN_08005714": {
                    "get_default_return_value": 2,
                    "get_default_value": 3,
                    "get_error_code": 8,
                    "get_error_status": 1,
                    "get_return_code": 1,
                    "get_return_value": 4,
                    "initialize": 1,
                    "initialize_error_code": 4,
                    "initialize_return_code": 1,
                    "initialize_return_value": 3,
                    "initialize_value": 3
                },
                "return": {
                    "error_code": 1,
                    "result": 1,
                    "return_value": 1,
                    "value": 1
                },
                "undefined4": {
                    "error_code": 2,
                    "initialize_value": 1,
                    "int": 1,
                    "uint32": 5,
                    "uint32_t": 4,
                    "unsigned_int": 1,
                    "void": 1
                }
            },
            "called": [],
            "calling": [],
            "code": "\nuint32 get_default_return_value_08005714(void)\n\n{\n  return_value 0xffffffff;\n}\n\n",
            "current_name": "get_default_return_value_08005714",
            "entrypoint": "0x08005714",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005714": "get_default_return_value_08005714",
                "return": "return_value",
                "undefined4": "uint32"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800571a": {
            "additional_data": {
                "0x2000": {
                    "default_value": 1
                },
                "FUN_0800571a": {
                    "initialize_memory": 7,
                    "initialize_memory_block": 1,
                    "initialize_memory_segment": 1,
                    "set_memory_block_size": 1,
                    "set_memory_flags": 1,
                    "set_memory_page": 1,
                    "set_memory_page_size": 9,
                    "set_memory_permissions": 1,
                    "set_memory_protection": 1,
                    "set_memory_protection_flags": 1,
                    "set_memory_size": 3,
                    "set_memory_value": 1,
                    "set_page_size": 3
                },
                "param_1": {
                    "address": 1,
                    "base_address": 3,
                    "data_pointer": 1,
                    "flags": 1,
                    "initial_value": 1,
                    "memory_pointer": 1,
                    "page_address": 2,
                    "page_pointer": 1,
                    "param": 1,
                    "param1": 6,
                    "param_1": 2,
                    "result": 5,
                    "result_code": 1,
                    "status": 1,
                    "unused": 1,
                    "unused_param": 1,
                    "value": 2
                },
                "param_2": {
                    "address": 4,
                    "base_address": 1,
                    "buffer": 1,
                    "buffer_address": 1,
                    "buffer_offset": 1,
                    "flags": 1,
                    "memory_address": 10,
                    "memory_base_address": 1,
                    "memory_block_address": 1,
                    "memory_offset": 3,
                    "memory_pointer": 1,
                    "memory_ptr": 1,
                    "memory_segment_address": 1,
                    "page_info": 2,
                    "param2": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08007004"
            ],
            "code": "\nundefined4 set_memory_page_size_0800571a(undefined4 param1,int memory_address)\n\n{\n  *(undefined4 *)(memory_address + 4) = 0x2000;\n  return 0;\n}\n\n",
            "current_name": "set_memory_page_size_0800571a",
            "entrypoint": "0x0800571a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800571a": "set_memory_page_size_0800571a",
                "param_1": "param1",
                "param_2": "memory_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005724": {
            "additional_data": {
                "": {
                    "": 1
                },
                "1": {
                    "1": 1
                },
                "FUN_08005724": {
                    "check_return_value": 1,
                    "descriptive_function_name": 1,
                    "get_default_value": 2,
                    "get_one": 3,
                    "get_return_value": 7,
                    "get_status": 1,
                    "initialize": 6,
                    "initialize_application": 2,
                    "initialize_flag": 1,
                    "initialize_flags": 1,
                    "initialize_program": 2,
                    "initialize_return_code": 1,
                    "initialize_return_value": 2,
                    "return_one": 1
                },
                "PTR_param_1": {
                    "parameter_1": 1
                },
                "PTR_param_2": {
                    "parameter_2": 1
                },
                "return": {
                    "result": 2,
                    "return": 1,
                    "status": 1
                },
                "return_value": {
                    "ret_code": 1
                },
                "undefined4": {
                    "int": 4,
                    "result": 1,
                    "uint32_t": 2,
                    "void": 5
                }
            },
            "called": [],
            "calling": [
                "FUN_08007028"
            ],
            "code": "\nvoid initialize_application_08005724(void)\n\n{\n  result 1;\n}\n\n",
            "current_name": "initialize_application_08005724",
            "entrypoint": "0x08005724",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005724": "initialize_application_08005724",
                "return": "result",
                "undefined4": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005728": {
            "additional_data": {
                "DAT_": {
                    "dat_": 1
                },
                "FUN_08005728": {
                    "clear_function_return_value": 1,
                    "get_default_value": 3,
                    "get_zero": 1,
                    "get_zero_value": 1,
                    "initialize": 14,
                    "initialize_application": 3,
                    "initialize_data": 1,
                    "initialize_function": 1,
                    "initialize_null_value": 1,
                    "initialize_program": 2,
                    "initialize_return_value": 1,
                    "initialize_something": 1,
                    "terminate_program": 1
                },
                "PTR_": {
                    "ptr_": 1
                },
                "PTR_FUN_08005728": {
                    "ptr_initialize": 1
                },
                "result": {
                    "return_value": 1
                },
                "return": {
                    "result": 1
                },
                "undefined4": {
                    "int": 2,
                    "uint32_t": 1,
                    "void": 11
                },
                "undefined4_FUN_08005728": {
                    "get_zero": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08007048"
            ],
            "code": "\nvoid initialize_application_08005728(void)\n\n{\n  result 0;\n}\n\n",
            "current_name": "initialize_application_08005728",
            "entrypoint": "0x08005728",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005728": "initialize_application_08005728",
                "return": "result",
                "undefined4": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800572c": {
            "additional_data": {
                "DAT_": {
                    "dat_": 1
                },
                "DAT_5678": {
                    "constant": 1
                },
                "FUN_0800572c": {
                    "calculate_default_value": 1,
                    "clear_memory": 1,
                    "clear_registers": 1,
                    "empty_function": 1,
                    "get_default_value": 4,
                    "get_return_value": 1,
                    "get_zero": 2,
                    "initialize": 10,
                    "initialize_application": 1,
                    "initialize_function": 2,
                    "initialize_program": 2,
                    "initialize_status": 1,
                    "initialize_zero": 1,
                    "reverse_binary": 1
                },
                "PTR_": {
                    "ptr_": 1
                },
                "PTR_1234": {
                    "buffer": 1
                },
                "get_zero": {
                    "get_zero": 1
                },
                "return": {
                    "success": 1
                },
                "undefined4": {
                    "int": 4,
                    "void": 11
                }
            },
            "called": [],
            "calling": [
                "FUN_0800706c"
            ],
            "code": "\nvoid initialize_program_0800572c(void)\n\n{\n  success 0;\n}\n\n",
            "current_name": "initialize_program_0800572c",
            "entrypoint": "0x0800572c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800572c": "initialize_program_0800572c",
                "return": "success",
                "undefined4": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005730": {
            "additional_data": {
                "FUN_080053d4": {
                    "call_function": 2,
                    "call_sub_function": 1,
                    "execute_sub_function": 1,
                    "invoke_sub_function": 1,
                    "perform_computation": 1,
                    "process": 1,
                    "process_data": 8,
                    "reverse": 1,
                    "reverse_data": 1,
                    "reverse_numbers": 1,
                    "reverse_sequence": 1,
                    "reverse_uint": 1
                },
                "FUN_08005730": {
                    "call_sub_function": 1,
                    "call_sub_functions": 2,
                    "call_subroutine": 1,
                    "execute_function": 16,
                    "execute_functions": 1,
                    "execute_main_function": 1,
                    "execute_process": 1,
                    "execute_sub_functions": 1,
                    "execute_subfunction": 1,
                    "initialize": 3,
                    "initialize_and_execute": 1,
                    "initialize_function": 1,
                    "process_data": 1
                },
                "param_1": {
                    "arg1": 11,
                    "argument1": 1,
                    "data": 1,
                    "first_param": 1,
                    "not_used": 1,
                    "param1": 1,
                    "param_1": 2,
                    "param_a": 1,
                    "sub_arg1": 1,
                    "sub_func_arg1": 1,
                    "undefined_param_1": 1,
                    "unknown_parameter_1": 1,
                    "unused": 2,
                    "unused1": 1,
                    "unused_param": 4,
                    "unused_param1": 1
                },
                "param_2": {
                    "arg1": 1,
                    "arg2": 11,
                    "argument2": 1,
                    "data1": 1,
                    "data_param": 1,
                    "input1": 2,
                    "input_param": 3,
                    "input_param1": 2,
                    "input_value_1": 1,
                    "param1": 1,
                    "param2": 1,
                    "param_b": 1,
                    "second_param": 1,
                    "size": 1,
                    "sub_arg2": 1,
                    "sub_func_arg2": 1,
                    "unknown_parameter_2": 1
                },
                "param_3": {
                    "arg2": 1,
                    "arg3": 14,
                    "argument3": 1,
                    "buffer": 1,
                    "buffer_param": 2,
                    "input2": 3,
                    "input_param": 1,
                    "input_param2": 1,
                    "input_value_2": 1,
                    "param2": 1,
                    "param3": 1,
                    "param_b": 1,
                    "third_param": 1,
                    "unknown_parameter_3": 1,
                    "unused_param1": 1
                },
                "param_4": {
                    "arg3": 1,
                    "arg4": 14,
                    "argument4": 1,
                    "fourth_param": 1,
                    "input3": 2,
                    "input_value_3": 1,
                    "length_param": 1,
                    "not_used": 1,
                    "output_param": 1,
                    "param3": 1,
                    "param4": 1,
                    "param_c": 1,
                    "size_param": 1,
                    "unknown_parameter_4": 1,
                    "unused_param": 1,
                    "unused_param2": 2
                }
            },
            "called": [
                "FUN_080053d4"
            ],
            "calling": [
                "FUN_08006f5a"
            ],
            "code": "\nvoid execute_main_function_08005730(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  FUN_080053d4(arg2,arg3,arg3,arg4,arg4);\n  return;\n}\n\n",
            "current_name": "execute_main_function_08005730",
            "entrypoint": "0x08005730",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005730": "execute_main_function_08005730",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800573c": {
            "additional_data": {
                "DAT_": {
                    "": 2,
                    "dat_": 1,
                    "preserve": 1
                },
                "DAT_0800573c": {
                    "dat1": 1
                },
                "DAT_5678": {
                    "dat_5678": 1
                },
                "DAT_XXXXX": {
                    "unchanged": 1
                },
                "FUN_0800573c": {
                    "endless_loop": 3,
                    "infinite_loop": 26,
                    "run_infinite_loop": 2
                },
                "Original": {
                    "improved": 1
                },
                "PTR_": {
                    "": 2,
                    "preserve": 1,
                    "ptr_": 1
                },
                "PTR_00112233": {
                    "ptr1": 1
                },
                "PTR_0800573c": {
                    "infinite_loop_ptr": 1,
                    "ptr1": 1
                },
                "PTR_1234": {
                    "ptr_1234": 1
                },
                "PTR_44556677": {
                    "ptr2": 1
                },
                "PTR_XXXXX": {
                    "unchanged": 1
                },
                "do": {
                    "do": 1
                },
                "more_descriptive_variable_name_1": {
                    "unchanged_variable": 1
                },
                "more_descriptive_variable_name_2": {
                    "another_unchanged_variable": 1
                },
                "original_function_name": {
                    "more_descriptive_function_name": 1
                },
                "original_variable_name_n": {
                    "skipped_variable": 1
                },
                "true": {
                    "true": 1
                }
            },
            "called": [
                "FUN_0800573c"
            ],
            "calling": [
                "FUN_08006ac0",
                "FUN_0800573c"
            ],
            "code": "\nvoid run_infinite_loop_0800573c(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "current_name": "run_infinite_loop_0800573c",
            "entrypoint": "0x0800573c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800573c": "run_infinite_loop_0800573c"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005740": {
            "additional_data": {
                "": {
                    "": 1
                },
                "DAT_200006a4": {
                    "data": 1,
                    "data_size": 4,
                    "data_value": 6,
                    "data_variable": 2,
                    "initial_value": 2,
                    "initialized_value": 2,
                    "value": 6
                },
                "DA_200006a4": {
                    "data_to_initialize": 1
                },
                "FUN_08005740": {
                    "initialize_constant": 1,
                    "initialize_counter": 1,
                    "initialize_data": 19,
                    "initialize_default_settings": 1,
                    "initialize_value": 7,
                    "set_data_and_return": 1,
                    "set_initial_value": 1
                },
                "initializedData": {
                    "data_size": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08006f00"
            ],
            "code": "\nundefined4 initialize_data_08005740(void)\n\n{\n  DAT_200006a4 = 0x16;\n  return 0xffffffff;\n}\n\n",
            "current_name": "initialize_data_08005740",
            "entrypoint": "0x08005740",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005740": "initialize_data_08005740"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005750": {
            "additional_data": {
                "FUN_08005750": {
                    "check_success": 2,
                    "determine_success": 1,
                    "get_one": 3,
                    "get_return_value": 4,
                    "get_value": 2,
                    "initialize": 8,
                    "initialize_application": 1,
                    "initialize_flag": 2,
                    "initialize_function": 1,
                    "initialize_process": 1,
                    "initialize_program": 2,
                    "initialize_return_code": 1,
                    "initialize_return_value": 1,
                    "is_one": 1,
                    "return_one": 1
                },
                "ret": {
                    "result": 1
                },
                "return": {
                    "result": 4,
                    "return_value": 1,
                    "status": 2
                },
                "return_value": {
                    "result": 1
                },
                "undefined4": {
                    "bool": 2,
                    "int": 6,
                    "status": 1,
                    "uint32": 1,
                    "void": 2
                }
            },
            "called": [],
            "calling": [
                "thunk_FUN_08005750"
            ],
            "code": "\nint initialize_flag_08005750(void)\n\n{\n  result 1;\n}\n\n",
            "current_name": "initialize_flag_08005750",
            "entrypoint": "0x08005750",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005750": "initialize_flag_08005750",
                "ret": "result",
                "return": "result",
                "undefined4": "int"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005754": {
            "additional_data": {
                "FUN_08004a4c": {
                    "calculate_shifted_value": 1,
                    "compute_shifted_value": 1,
                    "get_shifted_output": 1
                },
                "FUN_08005754": {
                    "decode_and_shift": 2,
                    "decode_character": 1,
                    "decode_data": 1,
                    "decode_value": 3,
                    "extract_and_manipulate_data": 1,
                    "extract_character": 1,
                    "extract_data": 1,
                    "extract_value": 1,
                    "extracted_data": 1,
                    "get_modified_value": 2,
                    "get_reversed_value": 1,
                    "get_shifted_value": 1,
                    "get_transformed_value": 1,
                    "lookup_value": 1,
                    "map_param_value_to_output": 1,
                    "map_value": 1,
                    "map_value_to_code": 1,
                    "map_value_to_shifted_output": 1,
                    "process_data": 2,
                    "reverse_and_shift": 1,
                    "transform_data": 3,
                    "translate_character": 1
                },
                "F_UNFUN_08005754": {
                    "find_value": 1
                },
                "bVar1": {
                    "flag": 1,
                    "is_in_range": 2,
                    "is_input_valid": 1,
                    "is_input_value_valid": 1,
                    "is_less_than": 5,
                    "is_less_than_0x3_c": 1,
                    "is_less_than_0x3c": 5,
                    "is_less_than_0xe": 1,
                    "is_less_than_14": 1,
                    "is_less_than_3c": 1,
                    "is_less_than_three_c": 1,
                    "is_less_than_threshold": 4,
                    "is_small": 1,
                    "is_small_value": 2,
                    "is_valid_input": 1,
                    "is_valid_range": 2,
                    "is_within_range": 1
                },
                "cVar2": {
                    "char_value": 2,
                    "character": 4,
                    "character_value": 1,
                    "decoded_char": 4,
                    "decoded_character": 2,
                    "extracted_char": 3,
                    "extracted_value": 1,
                    "mapped_character": 1,
                    "mapped_value": 2,
                    "result": 2,
                    "result_char": 4,
                    "result_character": 1,
                    "reversed_character": 1,
                    "transformed_value": 1,
                    "translated_character": 1,
                    "value_at_index": 1
                },
                "param_1": {
                    "data": 1,
                    "input": 3,
                    "input_character": 1,
                    "input_value": 20,
                    "value": 6
                },
                "uVar3": {
                    "decoded_value": 1,
                    "mapped_value": 1,
                    "output_value": 5,
                    "result": 14,
                    "result_uint": 1,
                    "result_value": 3,
                    "return_value": 3,
                    "shifted_output": 1,
                    "shifted_value": 2
                }
            },
            "called": [
                "FUN_08004a4c"
            ],
            "calling": [
                "FUN_08000cd0"
            ],
            "code": "\nuint map_value_to_code_08005754(uint input_value)\n\n{\n  bool is_less_than;\n  char result_char;\n  uint result;\n  \n  if (input_value < 0xe) {\n    if (input_value + 0x2e < 0x3c) {\n      is_less_than = true;\n    }\n    else {\n      is_less_than = false;\n    }\n  }\n  else {\n    is_less_than = input_value < 0x3c;\n  }\n  if (is_less_than) {\n    if (input_value < 0xe) {\n      input_value = input_value + 0x2e;\n    }\n    result_char = (&DAT_080076f0)[input_value];\n  }\n  else {\n    result_char = -1;\n  }\n  if (result_char == -1) {\n    result = 0;\n  }\n  else {\n    result = FUN_08004a4c();\n    if (DAT_200000f4 != 0xc) {\n      if (DAT_200000f4 < 0xc) {\n        return result >> (0xc - DAT_200000f4 & 0xff);\n      }\n      return result << (DAT_200000f4 - 0xc & 0xff);\n    }\n  }\n  return result;\n}\n\n",
            "current_name": "map_value_to_code_08005754",
            "entrypoint": "0x08005754",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005754": "map_value_to_code_08005754",
                "bVar1": "is_less_than",
                "cVar2": "result_char",
                "param_1": "input_value",
                "uVar3": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080057b4": {
            "additional_data": {
                "DAT_080074b4": {
                    "constant2": 1,
                    "data2": 1
                },
                "DAT_20000344": {
                    "constant1": 1,
                    "data1": 1
                },
                "FUN_080047f4": {
                    "calculate_result": 1,
                    "calculate_something": 1,
                    "get_data": 1,
                    "perform_operation": 3,
                    "process_data": 1,
                    "process_data_item": 1,
                    "process_value": 1,
                    "retrieve_data": 1,
                    "reverse_bits": 1
                },
                "FUN_0800480a": {
                    "finalize": 1,
                    "finalize_action": 1,
                    "finalize_execution": 1,
                    "finalize_handling": 1,
                    "finalize_operation": 1,
                    "finalize_process": 2,
                    "finalize_processing": 1,
                    "process_update": 1,
                    "update_status": 1,
                    "write_result": 1
                },
                "FUN_08004828": {
                    "configure_data": 1,
                    "do_something": 1,
                    "modify_data": 1,
                    "perform_action": 1,
                    "prepare_data": 1,
                    "process_buffer": 1,
                    "save_data": 1,
                    "update_data": 2,
                    "update_param": 1,
                    "update_state": 1
                },
                "FUN_08004b3c": {
                    "cleanup": 4,
                    "cleanup_action": 1,
                    "cleanup_data": 2,
                    "cleanup_task": 1,
                    "reset_setting": 1,
                    "reset_value": 1,
                    "undo_operation": 1
                },
                "FUN_08004bb0": {
                    "adjust_params": 1,
                    "do_something": 1,
                    "perform_action": 1,
                    "perform_operation": 1,
                    "perform_task": 1,
                    "process_data": 1,
                    "set_options": 1,
                    "set_param_value": 1,
                    "update_setting": 1,
                    "update_value": 1
                },
                "FUN_08004ce2": {
                    "check_condition": 1,
                    "check_data": 2,
                    "check_value": 2,
                    "do_something": 1,
                    "execute_action": 1,
                    "execute_task": 1,
                    "perform_action": 1,
                    "perform_task": 2
                },
                "FUN_080057b4": {
                    "execute_action": 2,
                    "execute_code": 1,
                    "execute_command": 1,
                    "execute_function": 5,
                    "execute_operation": 4,
                    "execute_process": 1,
                    "handle_operation": 1,
                    "handle_param": 1,
                    "process_data": 13,
                    "process_param": 1
                },
                "iVar1": {
                    "result": 23,
                    "result1": 5,
                    "return_value": 2
                },
                "iVar3": {
                    "buffer_index": 1,
                    "code": 1,
                    "command_value": 1,
                    "current_index": 2,
                    "data_index": 4,
                    "data_value": 1,
                    "function_index": 1,
                    "index": 10,
                    "lookup_index": 1,
                    "operation_index": 1,
                    "param_value": 1,
                    "target_index": 1,
                    "value": 5
                },
                "param_1": {
                    "action_type": 1,
                    "command_index": 1,
                    "index": 9,
                    "input_index": 7,
                    "input_length": 1,
                    "input_param": 1,
                    "input_size": 2,
                    "input_value": 2,
                    "operation_id": 1,
                    "operation_type": 3,
                    "option": 1,
                    "param_index": 1,
                    "value": 1
                },
                "param_2": {
                    "action_type": 3,
                    "command": 1,
                    "execution_type": 1,
                    "mode": 17,
                    "operation_type": 1,
                    "option": 4,
                    "param1": 2,
                    "parameter1": 1,
                    "parameter_value": 1
                },
                "param_3": {
                    "address": 1,
                    "arg1": 3,
                    "arg3": 1,
                    "config": 1,
                    "param": 3,
                    "param1": 1,
                    "param2": 2,
                    "param3": 10,
                    "param3_value": 1,
                    "param_3": 2,
                    "param_a": 1,
                    "param_buffer": 1,
                    "param_ptr": 1,
                    "parameter2": 1,
                    "parameter_size": 1,
                    "value": 1
                },
                "param_4": {
                    "arg2": 3,
                    "arg4": 1,
                    "buffer": 2,
                    "data": 7,
                    "data_buffer": 3,
                    "data_pointer": 1,
                    "data_ptr": 3,
                    "param2": 1,
                    "param4": 5,
                    "param4_ptr": 1,
                    "param_4": 1,
                    "param_b": 1,
                    "param_buffer": 2
                },
                "puVar2": {
                    "array": 1,
                    "array_pointer": 1,
                    "array_ptr": 2,
                    "command_array": 1,
                    "current_index_pointer": 1,
                    "data": 2,
                    "data_pointer": 3,
                    "data_ptr": 9,
                    "lookup_array": 1,
                    "lookup_table": 1,
                    "operation_array": 1,
                    "param_array": 1,
                    "ptr": 4,
                    "ptr_codes": 1,
                    "target_ptr": 1
                }
            },
            "called": [
                "FUN_0800480a",
                "FUN_08004ce2",
                "FUN_080047f4",
                "FUN_08004bb0",
                "FUN_08004b3c",
                "FUN_08004828"
            ],
            "calling": [
                "FUN_080013a4",
                "FUN_0800157c",
                "FUN_08000bcc"
            ],
            "code": "\nvoid process_data_080057b4(uint index,undefined4 mode,undefined4 param3,undefined *data)\n\n{\n  int result;\n  undefined *data_ptr;\n  int index;\n  \n  if (index < 0x3c) {\n    index = (int)(char)(&DAT_080076f0)[index];\n    data_ptr = &DAT_080076f0;\n  }\n  else {\n    index = -1;\n    data_ptr = data;\n  }\n  if (index != -1) {\n    result = FUN_080047f4(index,&DAT_20000344,param3,data_ptr,data);\n    if (result != 0) {\n      result = FUN_08004ce2(index,&DAT_080074b4);\n      if (result != 0) {\n        FUN_08004b3c(index);\n      }\n      FUN_08004828(index,&DAT_20000344);\n    }\n    switch(mode) {\n    case 0:\n      FUN_08004bb0(index,0);\n      break;\n    case 1:\n      FUN_08004bb0(index,1,0);\n      break;\n    case 2:\n      FUN_08004bb0(index,0,1);\n      break;\n    case 3:\n      FUN_08004bb0(index,0,2);\n    }\n    FUN_0800480a(index,&DAT_20000358);\n  }\n  return;\n}\n\n",
            "current_name": "process_data_080057b4",
            "entrypoint": "0x080057b4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080057b4": "process_data_080057b4",
                "iVar1": "result",
                "iVar3": "index",
                "param_1": "index",
                "param_2": "mode",
                "param_3": "param3",
                "param_4": "data",
                "puVar2": "data_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005848": {
            "additional_data": {
                "DAT_080076f0": {
                    "character_array": 1
                },
                "FUN_080047f4": {
                    "calculate_something": 1,
                    "check_condition": 1,
                    "find_valid_value": 1,
                    "get_data": 1,
                    "process_element": 1,
                    "process_lookup": 1,
                    "process_value": 4
                },
                "FUN_08004848": {
                    "calculate_shifted_value": 2,
                    "calculate_value": 1,
                    "compute": 1,
                    "convert_value": 1,
                    "modify_value": 2,
                    "reverse_bits": 1,
                    "shift_bits": 1,
                    "shift_value": 1
                },
                "FUN_08004c30": {
                    "apply_changes": 1,
                    "apply_operation": 1,
                    "apply_transformation": 1,
                    "perform_operation": 1,
                    "send_data": 1,
                    "set_bit": 1,
                    "update_data": 3,
                    "update_result": 1
                },
                "FUN_08005848": {
                    "decode_and_print_value": 1,
                    "decode_and_process_data": 1,
                    "extract_data": 2,
                    "process_data": 24,
                    "process_parameter": 1
                },
                "iVar1": {
                    "result": 29,
                    "return_value": 2
                },
                "param_1": {
                    "data": 1,
                    "data_index": 1,
                    "index": 15,
                    "input": 1,
                    "input_index": 7,
                    "input_param": 1,
                    "input_value": 2,
                    "parameter": 1,
                    "value": 2
                },
                "param_2": {
                    "config_param1": 1,
                    "constant": 1,
                    "param1": 3,
                    "param2": 11,
                    "param_2": 3,
                    "param_a": 4,
                    "value1": 8
                },
                "param_3": {
                    "config_param2": 1,
                    "param2": 3,
                    "param3": 12,
                    "param_3": 3,
                    "param_b": 4,
                    "value2": 8
                },
                "param_4": {
                    "data": 18,
                    "data_array": 1,
                    "data_block": 1,
                    "data_pointer": 2,
                    "data_ptr": 3,
                    "input_data": 2,
                    "param4": 3,
                    "param_array": 1
                },
                "puVar3": {
                    "array": 1,
                    "char_array": 1,
                    "data_array": 1,
                    "data_pointer": 1,
                    "data_ptr": 5,
                    "lookup_array": 3,
                    "modified_data": 1,
                    "pointer": 8,
                    "ptr": 3,
                    "ptr_data": 2,
                    "source": 1,
                    "source_data": 3
                },
                "uVar2": {
                    "calculated_value": 1,
                    "computed_value": 2,
                    "converted_value": 1,
                    "decoded_value": 1,
                    "masked_value": 1,
                    "modified_index": 1,
                    "modified_value": 3,
                    "shifted_value": 18,
                    "transformed_value": 2,
                    "value": 1
                },
                "uVar4": {
                    "array_value": 1,
                    "byte_value": 1,
                    "char_index": 1,
                    "char_value": 5,
                    "character": 1,
                    "data": 1,
                    "data_value": 1,
                    "element": 1,
                    "index": 3,
                    "lookup": 1,
                    "lookup_value": 1,
                    "selected_value": 1,
                    "temp": 1,
                    "value": 12
                }
            },
            "called": [
                "FUN_08004848",
                "FUN_080047f4",
                "FUN_08004c30"
            ],
            "calling": [
                "FUN_08000cd0",
                "FUN_080012e8",
                "FUN_080013a4",
                "FUN_080015b2",
                "FUN_0800157c",
                "FUN_080012a2",
                "FUN_08001310",
                "FUN_080012c0",
                "FUN_08000bcc"
            ],
            "code": "\nvoid decode_and_process_data_08005848(uint index,undefined4 param2,undefined4 param3,undefined *data)\n\n{\n  int result;\n  undefined4 shifted_value;\n  undefined *pointer;\n  uint value;\n  \n  if (index < 0x3c) {\n    value = (uint)(char)(&DAT_080076f0)[index];\n    pointer = &DAT_080076f0;\n  }\n  else {\n    value = 0xffffffff;\n    pointer = data;\n  }\n  if ((value != 0xffffffff) &&\n     (result = FUN_080047f4(value,&DAT_20000358,param3,pointer,data), result != 0)) {\n    shifted_value = FUN_08004848((value << 0x18) >> 0x1c);\n    FUN_08004c30(shifted_value,1 << (value & 0xf) & 0xffff,param2);\n  }\n  return;\n}\n\n",
            "current_name": "decode_and_process_data_08005848",
            "entrypoint": "0x08005848",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005848": "decode_and_process_data_08005848",
                "iVar1": "result",
                "param_1": "index",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "data",
                "puVar3": "pointer",
                "uVar2": "shifted_value",
                "uVar4": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005890": {
            "additional_data": {
                "FUN_080047f4": {
                    "check_data_validity": 1,
                    "check_index": 1,
                    "check_value": 1,
                    "check_value_in_array": 1,
                    "compare_value": 1,
                    "get_result": 1
                },
                "FUN_08004848": {
                    "calculate_shifted_value": 1,
                    "create_shifted_value": 1,
                    "get_shifted_character": 1,
                    "get_shifted_value": 2,
                    "shift_value": 1
                },
                "FUN_08004c48": {
                    "apply_bitwise_operation": 1,
                    "apply_mask": 2,
                    "apply_operation": 1,
                    "check_bit": 1,
                    "perform_operation": 1
                },
                "FUN_08005890": {
                    "check_char_validity": 1,
                    "check_character": 8,
                    "check_character_validity": 8,
                    "check_character_value": 1,
                    "check_condition": 1,
                    "check_condition_and_call": 1,
                    "check_data_validity": 1,
                    "check_input_value": 1,
                    "check_parameter_value": 1,
                    "check_permission": 1,
                    "check_validity": 2,
                    "check_value": 3,
                    "process_parameter": 1,
                    "reverse_and_check": 1
                },
                "cVar1": {
                    "has_permission": 1,
                    "is_valid": 17,
                    "is_valid_character": 1,
                    "result": 11,
                    "return_value": 1
                },
                "iVar2": {
                    "check_result": 4,
                    "comparison_result": 2,
                    "function_result": 1,
                    "result": 19,
                    "return_value": 1,
                    "status": 4
                },
                "param_1": {
                    "character": 10,
                    "character_code": 3,
                    "data": 1,
                    "index": 1,
                    "input": 1,
                    "input_char": 3,
                    "input_value": 3,
                    "permission_value": 1,
                    "value": 8
                },
                "uVar3": {
                    "shifted": 1,
                    "shifted_character": 1,
                    "shifted_value": 29
                },
                "uVar4": {
                    "array_index": 1,
                    "array_value": 1,
                    "data": 1,
                    "index": 6,
                    "lookup_index": 11,
                    "lookup_result": 2,
                    "lookup_value": 7,
                    "table_index": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_08004848",
                "FUN_080047f4",
                "FUN_08004c48"
            ],
            "calling": [
                "FUN_08000cd0",
                "FUN_080015b2"
            ],
            "code": "\nchar check_character_validity_08005890(uint character)\n\n{\n  char is_valid;\n  int result;\n  undefined4 shifted_value;\n  uint lookup_index;\n  \n  if (character < 0x3c) {\n    lookup_index = (uint)(char)(&DAT_080076f0)[character];\n  }\n  else {\n    lookup_index = 0xffffffff;\n  }\n  if (lookup_index == 0xffffffff) {\n    is_valid = '\\0';\n  }\n  else {\n    result = FUN_080047f4(lookup_index,&DAT_20000358);\n    if (result == 0) {\n      is_valid = '\\0';\n    }\n    else {\n      shifted_value = FUN_08004848((lookup_index << 0x18) >> 0x1c);\n      is_valid = FUN_08004c48(shifted_value,1 << (lookup_index & 0xf) & 0xffff);\n    }\n  }\n  if (is_valid != '\\0') {\n    is_valid = '\\x01';\n  }\n  return is_valid;\n}\n\n",
            "current_name": "check_character_validity_08005890",
            "entrypoint": "0x08005890",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005890": "check_character_validity_08005890",
                "cVar1": "is_valid",
                "iVar2": "result",
                "param_1": "character",
                "uVar3": "shifted_value",
                "uVar4": "lookup_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080058e0": {
            "additional_data": {
                "FUN_08004b94": {
                    "execute_function": 1,
                    "execute_initial_setup": 1,
                    "execute_initialization": 8,
                    "load_data": 1,
                    "perform_action": 1,
                    "perform_initial_setup": 1,
                    "perform_initialization": 15,
                    "perform_startup_tasks": 1,
                    "reset_system": 1,
                    "setup_configuration": 1
                },
                "FUN_080058e0": {
                    "execute_initialization": 5,
                    "initialize": 4,
                    "initialize_application": 2,
                    "initialize_program": 4,
                    "initialize_system": 16
                }
            },
            "called": [
                "FUN_08004b94"
            ],
            "calling": [
                "FUN_08000cd0",
                "FUN_080016b4",
                "FUN_08001ab0",
                "FUN_08000bcc"
            ],
            "code": "\nvoid initialize_system_080058e0(void)\n\n{\n  FUN_08004b94();\n  return;\n}\n\n",
            "current_name": "initialize_system_080058e0",
            "entrypoint": "0x080058e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080058e0": "initialize_system_080058e0"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080058e8": {
            "called": [],
            "calling": [
                "FUN_08000bcc"
            ],
            "code": "\nvoid FUNC_080058e8(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080058e8",
            "entrypoint": "0x080058e8",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080058e8": "FUNC_080058e8"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800591e": {
            "additional_data": {
                "0x134": {
                    "offset1": 5,
                    "value1_offset": 1
                },
                "0x136": {
                    "offset2": 5,
                    "value2_offset": 1
                },
                "0x3f": {
                    "mask": 1
                },
                "0x40": {
                    "offset": 1
                },
                "FUN_0800591e": {
                    "calculate_adjusted_value": 1,
                    "calculate_checksum": 12,
                    "calculate_difference": 2,
                    "calculate_final_value": 1,
                    "calculate_masked_value": 1,
                    "calculate_offset": 8,
                    "calculate_result": 4,
                    "calculate_shift_value": 1,
                    "calculate_value": 1
                },
                "param_1": {
                    "address": 1,
                    "base_address": 7,
                    "data_address": 6,
                    "input": 3,
                    "input_value": 11,
                    "offset": 2,
                    "value": 1
                },
                "param_2": {
                    "offset": 1
                },
                "short": {
                    "short_value": 1,
                    "ushort": 1,
                    "value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005a18"
            ],
            "code": "\nuushort calculate_checksum_0800591e(int input_value)\n\n{\n  return (*(ushort *)(input_value + 0x134) + 0x40) - *(ushort *)(input_value + 0x136) & 0x3f;\n}\n\n",
            "current_name": "calculate_checksum_0800591e",
            "entrypoint": "0x0800591e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800591e": "calculate_checksum_0800591e",
                "param_1": "input_value",
                "short": "ushort"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800598a": {
            "additional_data": {
                "FUN_0800598a": {
                    "process_data": 1,
                    "update_and_increment_index": 1,
                    "update_data": 27,
                    "update_value_if_not_equal": 1,
                    "validate_and_update_data": 1
                },
                "iVar1": {
                    "error_code": 1,
                    "result": 29
                },
                "local_9": {
                    "new_byte": 1,
                    "new_data": 3,
                    "new_element": 1,
                    "new_value": 24,
                    "updated_value": 1,
                    "value": 1
                },
                "param_1": {
                    "data": 12,
                    "data_address": 2,
                    "data_pointer": 8,
                    "data_ptr": 5,
                    "data_struct": 2,
                    "input": 2
                },
                "uVar2": {
                    "current_index": 1,
                    "incremented_index": 1,
                    "new_index": 22,
                    "next_index": 1,
                    "updated_index": 5
                }
            },
            "called": [
                "FUN_080054d4"
            ],
            "calling": [],
            "code": "\nvoid validate_and_update_data_0800598a(int data)\n\n{\n  int result;\n  ushort new_index;\n  undefined new_value;\n  \n  result = FUN_080054d4(data,&new_value);\n  if ((result == 0) &&\n     (new_index = *(short *)(data + 0x60) + 1U & 0x3f, new_index != *(ushort *)(data + 0x62))) {\n    *(undefined *)(*(int *)(data + 0x5c) + (uint)*(ushort *)(data + 0x60)) = new_value;\n    *(ushort *)(data + 0x60) = new_index;\n  }\n  return;\n}\n\n",
            "current_name": "validate_and_update_data_0800598a",
            "entrypoint": "0x0800598a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800598a": "validate_and_update_data_0800598a",
                "iVar1": "result",
                "local_9": "new_value",
                "param_1": "data",
                "uVar2": "new_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005a18": {
            "called": [
                "FUN_0800591e"
            ],
            "calling": [
                "FUN_08005f6c"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08005a1e) */\n/* WARNING: Removing unreachable block (ram,0x08005a30) */\n/* WARNING: Removing unreachable block (ram,0x08005a26) */\n/* WARNING: Removing unreachable block (ram,0x08005a38) */\n\nvoid FUNC_08005a18(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08005a18",
            "entrypoint": "0x08005a18",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08005a18": "FUNC_08005a18"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08005a44": {
            "additional_data": {
                "0": {
                    "offset_value2": 1
                },
                "0x11": {
                    "field1_initial_value": 1,
                    "initial_value1": 1,
                    "initial_value_a": 1,
                    "offset_value1": 2,
                    "offset_value_1": 1,
                    "value1": 4,
                    "value_offset1": 1
                },
                "0x130": {
                    "field1_offset": 1,
                    "offset1": 7,
                    "offset_1": 1,
                    "offset_a": 1
                },
                "0x134": {
                    "field2_offset": 1,
                    "offset2": 5,
                    "offset_2": 1,
                    "offset_b": 1,
                    "value1": 2
                },
                "0x136": {
                    "field3_offset": 1,
                    "offset3": 5,
                    "offset_3": 1,
                    "offset_c": 1,
                    "value2": 2
                },
                "0x138": {
                    "field4_offset": 1,
                    "offset2": 2,
                    "offset4": 5,
                    "offset_4": 1,
                    "offset_d": 1
                },
                "0x13c": {
                    "field5_offset": 1,
                    "offset5": 5,
                    "offset_5": 1,
                    "offset_e": 1,
                    "value3": 2
                },
                "0x13e": {
                    "field6_offset": 1,
                    "offset6": 5,
                    "offset_6": 1,
                    "offset_f": 1,
                    "value4": 2
                },
                "0x51": {
                    "field4_initial_value": 1,
                    "initial_value2": 1,
                    "initial_value_d": 1,
                    "offset_value2": 1,
                    "offset_value_2": 1,
                    "value2": 3,
                    "value4": 1,
                    "value_offset2": 1
                },
                "FUN_08005a44": {
                    "initialize_data": 7,
                    "initialize_data_struct": 1,
                    "initialize_data_structure": 1,
                    "initialize_data_structures": 2,
                    "initialize_function": 2,
                    "initialize_memory": 1,
                    "initialize_memory_block": 1,
                    "initialize_param": 1,
                    "initialize_param_struct": 1,
                    "initialize_param_values": 1,
                    "initialize_parameters": 8,
                    "initialize_struct": 1,
                    "initialize_structure": 1,
                    "initialize_values": 1,
                    "set_initial_values": 1,
                    "set_parameters": 1
                },
                "param_1": {
                    "base_address": 14,
                    "data_address": 2,
                    "data_pointer": 2,
                    "data_struct": 2,
                    "data_struct_addr": 1,
                    "data_structure": 1,
                    "data_structure_address": 1,
                    "function_parameter": 1,
                    "input": 1,
                    "memory_block_address": 1,
                    "param": 3,
                    "param_struct": 1,
                    "struct_address": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005b54"
            ],
            "code": "\nvoid initialize_data_structures_08005a44(int base_address)\n\n{\n  *(int *)(base_address + 0x130) = base_address + 0x11;\n  *(undefined2 *)(base_address + 0x134) = 0;\n  *(undefined2 *)(base_address + 0x136) = 0;\n  *(int *)(base_address + 0x138) = base_address + 0x51;\n  *(undefined2 *)(base_address + 0x13c) = 0;\n  *(undefined2 *)(base_address + 0x13e) = 0;\n  return;\n}\n\n",
            "current_name": "initialize_data_structures_08005a44",
            "entrypoint": "0x08005a44",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005a44": "initialize_data_structures_08005a44",
                "param_1": "base_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005a68": {
            "additional_data": {
                "FUN_08004f4c": {
                    "configure_port": 1,
                    "initialize_serial_buffer": 2
                },
                "FUN_08005510": {
                    "initialize_port": 1,
                    "set_hardware_serial_mode": 1,
                    "set_serial_config": 1
                },
                "FUN_08005a68": {
                    "configure_hardware_serial": 3,
                    "configure_serial": 3,
                    "configure_serial_port": 2,
                    "initialize_hardware_serial": 3,
                    "initialize_serial": 4,
                    "initialize_serial_communication": 6,
                    "initialize_serial_port": 8,
                    "set_serial_options": 1,
                    "set_serial_params": 1
                },
                "FUN_0800611c": {
                    "handle_error": 3
                },
                "UNRECOVERED_JUMPTABLE": {
                    "error_handler": 2,
                    "jmp_table": 1,
                    "jump_table": 12,
                    "jump_table_address": 2,
                    "jump_table_function": 1,
                    "jumptable": 2,
                    "jumptable_function": 2,
                    "recovered_jumptable": 1,
                    "recovery_jumptable": 1,
                    "unrecovered_jump_table": 3
                },
                "bVar2": {
                    "bits": 1,
                    "config_bit": 1,
                    "config_bits": 7,
                    "config_bits_mask": 1,
                    "config_byte_mask": 3,
                    "config_mask": 5,
                    "config_value": 2,
                    "configuration_bits": 1,
                    "control_bits_masked": 1,
                    "option_mask": 1,
                    "parity_bits": 1,
                    "serial_config_bit": 1,
                    "serial_config_bits": 1,
                    "serial_config_mask": 1,
                    "serial_settings_bit": 1,
                    "setting_bits": 1,
                    "settings_bits": 1,
                    "settings_mask": 1
                },
                "extraout_r1": {
                    "bits": 1,
                    "data_bits": 3,
                    "extra_output": 9,
                    "extra_output1": 1,
                    "extra_value": 1,
                    "index": 2,
                    "local_variable": 1,
                    "result": 5,
                    "return_code": 1,
                    "return_value": 1,
                    "status": 2,
                    "temp": 1,
                    "temp_1": 1,
                    "temp_var1": 1
                },
                "extraout_r4": {
                    "temp_var": 1
                },
                "iVar3": {
                    "config_byte_options": 1,
                    "config_count": 2,
                    "config_index": 2,
                    "config_level": 1,
                    "config_option": 2,
                    "config_options": 1,
                    "config_value": 13,
                    "configuration_level": 1,
                    "data_bits": 4,
                    "mode": 1,
                    "num_bits": 1,
                    "serial_settings_count": 1,
                    "settings_count": 1
                },
                "param_1": {
                    "instance": 1,
                    "port": 1,
                    "port_address": 2,
                    "port_pointer": 1,
                    "serial": 1,
                    "serial_communication_object": 1,
                    "serial_port": 17,
                    "serial_port_address": 7
                },
                "param_2": {
                    "baud_rate": 31
                },
                "param_3": {
                    "config": 7,
                    "config_bits": 1,
                    "config_byte": 5,
                    "configuration": 1,
                    "control_bits": 1,
                    "data_bits_and_parity": 1,
                    "options": 2,
                    "serial_config": 9,
                    "serial_settings": 1,
                    "settings": 3
                },
                "pbVar4": {
                    "byte_pointer": 14,
                    "byte_ptr": 2,
                    "config_pointer": 2,
                    "config_ptr": 2,
                    "data_buffer": 1,
                    "data_pointer": 1,
                    "pointer_to_serial_port_address": 1,
                    "port_bits": 1,
                    "port_byte": 1,
                    "port_ptr": 2,
                    "ptr_to_byte": 1,
                    "ptr_val": 1,
                    "serial_data": 1,
                    "temp_2": 1
                },
                "pcVar1": {
                    "error_message": 19,
                    "error_msg": 2,
                    "error_string": 10
                },
                "unaff_r4": {
                    "char_val": 1,
                    "char_variable": 1,
                    "character": 3,
                    "config_char": 1,
                    "config_mask1": 1,
                    "config_string": 1,
                    "data_bits": 1,
                    "parity_error": 1,
                    "port_char": 1,
                    "serial_character": 1,
                    "stop_bits": 2,
                    "uart_char": 1,
                    "unaff_char": 2,
                    "unaff_r4": 2,
                    "unaff_value": 1,
                    "unaff_value4": 1,
                    "unaff_var4": 1,
                    "unaffected_r4": 1,
                    "unaffected_reg4": 1,
                    "unaffected_register4": 3,
                    "unaffected_register_4": 1,
                    "unaffected_variable4": 1,
                    "unaffixed_variable1": 1,
                    "uninitialized_value": 1
                },
                "unaff_r6": {
                    "address": 1,
                    "base_address": 3,
                    "config_offset": 2,
                    "core_index": 1,
                    "core_offset": 1,
                    "offset": 7,
                    "path": 1,
                    "unaff_index": 1,
                    "unaff_int": 2,
                    "unaff_r6": 2,
                    "unaff_value6": 1,
                    "unaff_var6": 1,
                    "unaffected_r6": 1,
                    "unaffected_reg6": 1,
                    "unaffected_register6": 3,
                    "unaffected_register_6": 1,
                    "unaffected_variable6": 1,
                    "unaffixed_variable2": 1
                }
            },
            "called": [
                "FUN_08005510",
                "FUN_08004f4c",
                "FUN_0800611c"
            ],
            "calling": [
                "FUN_08000bcc"
            ],
            "code": "\nvoid initialize_serial_port_08005a68(int serial_port,undefined4 baud_rate,byte serial_config)\n\n{\n  uint extra_output;\n  char *error_message;\n  byte config_bits;\n  int config_value;\n  byte *byte_pointer;\n  char character;\n  int offset;\n  code *jump_table;\n  \n  *(undefined4 *)(serial_port + 0x11c) = baud_rate;\n  *(byte *)(serial_port + 0x140) = serial_config;\n  config_bits = serial_config & 7;\n  if (config_bits == 4) {\n    config_value = 7;\n  }\n  else if (config_bits == 6) {\n    config_value = 8;\n  }\n  else if (config_bits == 2) {\n    config_value = 6;\n  }\n  else {\n    config_value = 0;\n  }\n  if ((serial_config & 0x30) == 0x30) {\n    *(undefined4 *)(serial_port + 0x128) = 0x600;\n    config_value = config_value + 1;\n  }\n  else if ((serial_config & 0x20) == 0) {\n    *(undefined4 *)(serial_port + 0x128) = 0;\n  }\n  else {\n    *(undefined4 *)(serial_port + 0x128) = 0x400;\n    config_value = config_value + 1;\n  }\n  if ((serial_config & 8) == 0) {\n    *(undefined4 *)(serial_port + 0x124) = 0;\n  }\n  else {\n    *(undefined4 *)(serial_port + 0x124) = 0x2000;\n  }\n  if (config_value == 8) {\n    *(undefined4 *)(serial_port + 0x120) = 0;\n  }\n  else if (config_value == 9) {\n    *(undefined4 *)(serial_port + 0x120) = 0x1000;\n  }\n  else {\n    config_value = 0;\n  }\n  if (config_value != 0) {\n    FUN_08004f4c(serial_port + 0xd4);\n    FUN_08005510(serial_port + 0xd4,0x800598b);\n    return;\n  }\n  error_message = \"void HardwareSerial::begin(long unsigned int, byte)\";\n  jump_table = (code *)0x8005b12;\n  FUN_0800611c(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/cores/arduino/HardwareSerial.cpp\"\n               ,299,\"void HardwareSerial::begin(long unsigned int, byte)\",\"databits!=0\");\n  byte_pointer = *(byte **)(extra_output + offset);\n  error_message[0x1e] = character;\n  *(undefined *)(*byte_pointer + 0x1e) = 0;\n  if (extra_output < 0x3c) {\n    uRam0000012d = (&DAT_080076f0)[extra_output];\n  }\n  else {\n    uRam0000012d = 0xff;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08005b30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)();\n  return;\n}\n\n",
            "current_name": "initialize_serial_port_08005a68",
            "entrypoint": "0x08005a68",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005a68": "initialize_serial_port_08005a68",
                "UNRECOVERED_JUMPTABLE": "jump_table",
                "bVar2": "config_bits",
                "extraout_r1": "extra_output",
                "iVar3": "config_value",
                "param_1": "serial_port",
                "param_2": "baud_rate",
                "param_3": "serial_config",
                "pbVar4": "byte_pointer",
                "pcVar1": "error_message",
                "unaff_r4": "character",
                "unaff_r6": "offset"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005b24": {
            "additional_data": {
                "FUN_08005b24": {
                    "extract_jump_table_entry": 1,
                    "set_byte_based_on_index": 1,
                    "set_byte_based_on_value": 1,
                    "set_byte_value": 3,
                    "set_default_value": 3,
                    "set_function_parameter": 1,
                    "set_function_pointer_and_execute": 1,
                    "set_memory_value": 4,
                    "set_memory_value_with_threshold": 1,
                    "set_param_value": 1,
                    "set_parameter_value": 1,
                    "set_result_value": 1,
                    "set_return_value": 1,
                    "set_return_value_based_on_input": 1,
                    "set_return_value_based_on_param": 1,
                    "set_special_value": 1,
                    "set_threshold_value": 4,
                    "update_data": 2,
                    "update_parameter_and_jump": 1,
                    "update_value_and_call": 1
                },
                "UNRECOVERED_JUMPTABLE": {
                    "dynamic_jump_table": 1,
                    "jump_table": 6
                },
                "param_1": {
                    "address": 8,
                    "base_address": 8,
                    "buffer_address": 1,
                    "data_address": 2,
                    "destination_address": 2,
                    "input_address": 1,
                    "memory_address": 5,
                    "object_address": 1,
                    "output_address": 1,
                    "target_address": 2
                },
                "param_2": {
                    "index": 11,
                    "input_value": 3,
                    "threshold": 1,
                    "value": 11,
                    "value_index": 5
                },
                "uVar1": {
                    "byte_value": 2,
                    "default_value": 2,
                    "entry_value": 1,
                    "memory_byte": 1,
                    "memory_value": 2,
                    "new_value": 4,
                    "parameter_value": 1,
                    "return_value": 2,
                    "selected_value": 1,
                    "special_value": 1,
                    "threshold": 3,
                    "updated_value": 3,
                    "value": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08005b54"
            ],
            "code": "\nvoid set_memory_value_with_threshold_08005b24(int base_address,uint index)\n\n{\n  undefined new_value;\n  code *jump_table;\n  \n  if (index < 0x3c) {\n    new_value = (&DAT_080076f0)[index];\n  }\n  else {\n    new_value = 0xff;\n  }\n  *(undefined *)(base_address + 0x12d) = new_value;\n                    /* WARNING: Could not recover jumptable at 0x08005b30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)();\n  return;\n}\n\n",
            "current_name": "set_memory_value_with_threshold_08005b24",
            "entrypoint": "0x08005b24",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005b24": "set_memory_value_with_threshold_08005b24",
                "UNRECOVERED_JUMPTABLE": "jump_table",
                "param_1": "base_address",
                "param_2": "index",
                "uVar1": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005b3c": {
            "additional_data": {
                "FUN_08005b3c": {
                    "assign_byte_value": 1,
                    "copy_data_to_destination": 1,
                    "copy_value_to_memory": 2,
                    "extracted_value": 1,
                    "set_byte_after_offset": 1,
                    "set_byte_at_offset": 1,
                    "set_byte_value": 9,
                    "set_byte_value_at_offset": 1,
                    "set_default_value": 3,
                    "set_memory_value": 2,
                    "set_value_at_offset": 1,
                    "set_value_to_memory": 1,
                    "update_buffer": 1,
                    "update_data_field": 1,
                    "update_memory_value": 1,
                    "update_parameter_value": 2,
                    "update_value": 2
                },
                "param_1": {
                    "address": 3,
                    "base_address": 14,
                    "buffer_address": 2,
                    "destination": 1,
                    "destination_address": 2,
                    "memory_address": 5,
                    "offset": 1,
                    "output_address": 1,
                    "target_address": 2
                },
                "param_2": {
                    "index": 25,
                    "offset": 4,
                    "source_index": 2
                },
                "uVar1": {
                    "byte_value": 6,
                    "data_value": 1,
                    "default_value": 4,
                    "memory_value": 1,
                    "new_value": 1,
                    "update_value": 1,
                    "value": 12
                }
            },
            "called": [],
            "calling": [
                "FUN_08005b54"
            ],
            "code": "\nvoid set_byte_value_at_offset_08005b3c(int base_address,uint index)\n\n{\n  undefined value;\n  \n  if (index < 0x3c) {\n    value = (&DAT_080076f0)[index];\n  }\n  else {\n    value = 0xff;\n  }\n  *(undefined *)(base_address + 300) = value;\n  return;\n}\n\n",
            "current_name": "set_byte_value_at_offset_08005b3c",
            "entrypoint": "0x08005b3c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005b3c": "set_byte_value_at_offset_08005b3c",
                "param_1": "base_address",
                "param_2": "index",
                "uVar1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005b54": {
            "additional_data": {
                "DAT_08007604": {
                    "data1": 1
                },
                "DAT_0800764c": {
                    "data2": 1
                },
                "DAT_2000036c": {
                    "user_data": 1
                },
                "FUN_08004ca2": {
                    "calculate_value": 1,
                    "get_boolean_result": 1,
                    "get_byte_value": 1,
                    "get_default_value": 1,
                    "get_flag": 1,
                    "get_flag_value": 2,
                    "get_initial_value": 1,
                    "get_modified_value": 1,
                    "get_new_value": 1,
                    "get_output": 1,
                    "get_random_value": 1,
                    "get_result": 1,
                    "get_some_value": 1,
                    "get_undefined_value": 4,
                    "get_value": 9,
                    "get_value_from_param": 1,
                    "process_value": 1,
                    "reverse_data": 1
                },
                "FUN_08005a44": {
                    "execute_function": 1,
                    "execute_process": 1,
                    "finalize_initialization": 5,
                    "finalize_param": 1,
                    "finalize_parameter": 1,
                    "finalize_params": 2,
                    "finalize_process": 2,
                    "perform_operation": 1,
                    "perform_task": 1,
                    "process_data": 5,
                    "process_function": 1,
                    "process_parameters": 6,
                    "process_params": 2,
                    "process_settings": 1
                },
                "FUN_08005b24": {
                    "do_something": 3,
                    "execute_process": 1,
                    "first_operation": 1,
                    "func1": 1,
                    "function_a": 1,
                    "handle_case1": 1,
                    "initialize_and_copy": 1,
                    "initialize_data": 1,
                    "initialize_data_with_params": 1,
                    "initialize_flag": 1,
                    "initialize_special_values": 1,
                    "initialize_values": 1,
                    "operation1": 1,
                    "perform_action": 1,
                    "perform_action1": 1,
                    "perform_operation1": 2,
                    "process_data": 2,
                    "process_value": 1,
                    "reverse_data": 3,
                    "reverse_operation1": 1,
                    "set_initial_values": 1,
                    "set_parameters1": 1,
                    "set_params": 1,
                    "set_settings_value": 1
                },
                "FUN_08005b3c": {
                    "do_another_thing": 2,
                    "do_something": 1,
                    "do_something_else": 1,
                    "enable_process": 1,
                    "finalize_data": 1,
                    "finalize_initialization": 1,
                    "func2": 1,
                    "function_b": 1,
                    "handle_case2": 1,
                    "operation2": 1,
                    "perform_action": 2,
                    "perform_action2": 1,
                    "perform_another_action": 1,
                    "perform_operation": 1,
                    "perform_operation2": 2,
                    "print_info": 1,
                    "print_params": 1,
                    "print_value": 1,
                    "reverse_and_set_flag": 1,
                    "reverse_flag": 1,
                    "reverse_operation2": 1,
                    "second_operation": 1,
                    "set_flag": 2,
                    "set_parameters2": 1,
                    "set_settings_flag": 1,
                    "update_value": 1
                },
                "FUN_08005b54": {
                    "initialize": 1,
                    "initialize_data": 5,
                    "initialize_function": 2,
                    "initialize_param": 1,
                    "initialize_parameter": 1,
                    "initialize_parameters": 14,
                    "initialize_params": 6,
                    "initialize_settings": 1
                },
                "PTR_LAB_080059c8_1_08007804": {
                    "label_pointer": 2,
                    "ptr_label": 1
                },
                "param_1": {
                    "data": 3,
                    "data_pointer": 2,
                    "function_params": 1,
                    "output_array": 2,
                    "param_array": 3,
                    "parameter_array": 2,
                    "parameters": 11,
                    "parameters_array": 1,
                    "params": 5,
                    "settings": 1
                },
                "param_2": {
                    "data": 1,
                    "input": 1,
                    "input_param": 1,
                    "input_value": 3,
                    "param": 1,
                    "param2": 3,
                    "param_a": 1,
                    "param_value": 2,
                    "param_value_1": 1,
                    "value": 5,
                    "value1": 11,
                    "var1": 1
                },
                "param_3": {
                    "additional_param": 1,
                    "flag": 2,
                    "index": 1,
                    "output_param": 1,
                    "param": 1,
                    "param1": 1,
                    "param3": 5,
                    "param_3": 1,
                    "param_b": 1,
                    "param_value": 1,
                    "param_value_2": 1,
                    "target_value": 1,
                    "temporary_value": 1,
                    "value": 1,
                    "value2": 11,
                    "var2": 1
                },
                "param_4": {
                    "additional_data": 1,
                    "additional_param": 1,
                    "constant_value": 1,
                    "data": 2,
                    "extra_param": 1,
                    "param": 1,
                    "param2": 1,
                    "param4": 5,
                    "param_4": 1,
                    "param_c": 1,
                    "param_index": 1,
                    "param_value_3": 1,
                    "secondary_param": 1,
                    "size": 1,
                    "value3": 11,
                    "var3": 1
                },
                "uVar1": {
                    "flag_value": 1,
                    "result": 13,
                    "result1": 1,
                    "return_value": 2,
                    "temp_value": 1,
                    "temp_var": 1
                }
            },
            "called": [
                "FUN_08004ca2",
                "FUN_08005a44",
                "FUN_08005b24",
                "FUN_08005b3c"
            ],
            "calling": [
                "FUN_08005bb0"
            ],
            "code": "\nundefined4 *\ninitialize_parameters_08005b54(undefined4 *parameters,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  undefined result;\n  \n  parameters[1] = 0;\n  parameters[2] = 1000;\n  *parameters = &PTR_LAB_080059c8_1_08007804;\n  if (parameters == (undefined4 *)&DAT_2000036c) {\n    FUN_08005b24(&DAT_2000036c,0,value2,&DAT_2000036c,value3);\n    FUN_08005b3c(&DAT_2000036c,1);\n  }\n  else {\n    result = FUN_08004ca2(value1,&DAT_08007604);\n    *(undefined *)((int)parameters + 0x12d) = result;\n    result = FUN_08004ca2(value1,&DAT_0800764c);\n    *(undefined *)(parameters + 0x4b) = result;\n  }\n  FUN_08005a44(parameters);\n  return parameters;\n}\n\n",
            "current_name": "initialize_parameters_08005b54",
            "entrypoint": "0x08005b54",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005b54": "initialize_parameters_08005b54",
                "param_1": "parameters",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005bb0": {
            "additional_data": {
                "DAT_2000036c": {
                    "data": 1,
                    "data1": 1,
                    "data_buffer": 1,
                    "data_pointer": 1,
                    "data_ptr": 3
                },
                "FUN_08005b54": {
                    "call_sub_function": 1,
                    "call_subfunction": 2,
                    "do_something": 1,
                    "execute_sub_function": 1,
                    "handle_data": 1,
                    "perform_action": 2,
                    "perform_operation": 1,
                    "process_data": 9,
                    "process_subfunction": 1,
                    "send_data": 1,
                    "sub_function": 1,
                    "update_data": 1
                },
                "FUN_08005bb0": {
                    "check_and_call_function": 5,
                    "check_and_execute_operation": 1,
                    "check_and_handle_param": 1,
                    "check_and_process_param": 1,
                    "check_and_update_params": 1,
                    "check_first_param": 1,
                    "check_for_special_value": 1,
                    "check_param": 3,
                    "check_param_1": 1,
                    "check_param_and_call_function": 1,
                    "check_validity_and_call_subfunction": 1,
                    "handle_param": 1,
                    "handle_param_check": 1,
                    "process_data": 1,
                    "process_input": 1,
                    "process_param": 3,
                    "process_param_1": 1,
                    "process_param_values": 1,
                    "process_parameters": 1,
                    "process_params": 2,
                    "validate_params": 1
                },
                "param_1": {
                    "action": 1,
                    "check": 1,
                    "check_flag": 1,
                    "check_value": 3,
                    "first_param": 1,
                    "flag": 2,
                    "input": 1,
                    "input_condition": 1,
                    "input_flag": 2,
                    "input_param": 1,
                    "input_value": 2,
                    "param1": 1,
                    "param_check": 1,
                    "param_flag": 1,
                    "status": 8,
                    "value": 1,
                    "value1": 2
                },
                "param_2": {
                    "code_value": 1,
                    "comparison_value": 2,
                    "condition_value": 1,
                    "flag": 2,
                    "flag_param": 1,
                    "flag_value": 1,
                    "input_value": 1,
                    "param": 1,
                    "param2": 1,
                    "param_value": 2,
                    "second_param": 1,
                    "special_value": 1,
                    "value": 12,
                    "value2": 2,
                    "value_check": 1,
                    "value_flag": 1
                },
                "param_3": {
                    "additional_param1": 1,
                    "arg1": 5,
                    "arg3": 1,
                    "arg_1": 1,
                    "data1": 1,
                    "data_param_1": 1,
                    "option1": 1,
                    "param": 1,
                    "param1": 3,
                    "param3": 2,
                    "param_3": 6,
                    "param_a": 2,
                    "param_value1": 1,
                    "parameter_3": 1,
                    "third_param": 1,
                    "value1": 1,
                    "value3": 2
                },
                "param_4": {
                    "additional_param2": 1,
                    "arg2": 5,
                    "arg4": 1,
                    "arg_2": 1,
                    "argument": 1,
                    "data2": 1,
                    "data_param_2": 1,
                    "fourth_param": 1,
                    "option2": 1,
                    "param2": 3,
                    "param4": 2,
                    "param_4": 6,
                    "param_b": 2,
                    "param_value2": 1,
                    "parameter_4": 1,
                    "value2": 1,
                    "value4": 2
                }
            },
            "called": [
                "FUN_08005b54"
            ],
            "calling": [],
            "code": "\nvoid check_param_and_call_function_08005bb0(int status,int value,undefined4 param_3,undefined4 param_4)\n\n{\n  if (status != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    FUN_08005b54(&DAT_2000036c,0x40004400,param_3,0xffff,param_4);\n  }\n  return;\n}\n\n",
            "current_name": "check_param_and_call_function_08005bb0",
            "entrypoint": "0x08005bb0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005bb0": "check_param_and_call_function_08005bb0",
                "param_1": "status",
                "param_2": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005c1c": {
            "additional_data": {
                "FUN_08005c1c": {
                    "initialize_data": 24,
                    "initialize_data_structure": 1,
                    "initialize_function": 1,
                    "initialize_parameters": 1,
                    "set_data": 2,
                    "set_parameters": 1,
                    "update_param_data": 1
                },
                "param_1": {
                    "data_pointer": 12,
                    "data_ptr": 4,
                    "data_structure": 1,
                    "output": 1,
                    "output_array": 2,
                    "output_buffer": 3,
                    "output_data": 4,
                    "output_param": 1,
                    "output_pointer": 2,
                    "output_ptr": 1
                },
                "param_2": {
                    "input_param1": 2,
                    "value1": 22,
                    "value2": 3,
                    "value_1": 4
                },
                "param_3": {
                    "input_param2": 2,
                    "value2": 22,
                    "value3": 3,
                    "value_2": 4
                },
                "param_4": {
                    "input_param3": 2,
                    "value3": 22,
                    "value4": 3,
                    "value_3": 4
                },
                "param_5": {
                    "input_param4": 2,
                    "value4": 22,
                    "value5": 3,
                    "value_4": 4
                },
                "param_6": {
                    "value5": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005c38"
            ],
            "code": "\nvoid initialize_data_structure_08005c1c(undefined4 *data_pointer,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *data_pointer = &DAT_08007858;\n  *(undefined *)(data_pointer + 1) = value1;\n  *(undefined *)((int)data_pointer + 5) = value2;\n  *(undefined *)((int)data_pointer + 6) = value3;\n  *(undefined *)((int)data_pointer + 7) = value4;\n  return;\n}\n\n",
            "current_name": "initialize_data_structure_08005c1c",
            "entrypoint": "0x08005c1c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005c1c": "initialize_data_structure_08005c1c",
                "param_1": "data_pointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005c38": {
            "additional_data": {
                "FUN_08005c1c": {
                    "call_function_with_params": 1,
                    "initialize_data": 4,
                    "initialize_memory": 2,
                    "perform_specific_action": 1,
                    "process_data": 1
                },
                "FUN_08005c38": {
                    "check_parameters": 10,
                    "check_params": 5,
                    "check_params_and_call_function": 6,
                    "check_params_and_execute": 1,
                    "process_input": 2,
                    "process_inputs": 1,
                    "process_parameters": 4,
                    "process_params": 1,
                    "validate_parameters": 1
                },
                "param_1": {
                    "condition1": 1,
                    "first_param": 3,
                    "flag": 3,
                    "input1": 1,
                    "input_param1": 1,
                    "input_value": 1,
                    "is_one": 1,
                    "mode": 1,
                    "param_flag": 1,
                    "parameter1": 1,
                    "return_value": 1,
                    "status": 1,
                    "status_code": 1,
                    "val1": 1,
                    "value1": 6,
                    "value_1": 6,
                    "var1": 1
                },
                "param_2": {
                    "condition2": 1,
                    "data_length": 1,
                    "flag_value": 2,
                    "input2": 1,
                    "input_param2": 1,
                    "is_max_value": 1,
                    "param_value": 1,
                    "parameter2": 1,
                    "second_param": 3,
                    "val2": 1,
                    "value": 5,
                    "value2": 6,
                    "value_2": 6,
                    "var2": 1
                }
            },
            "called": [
                "FUN_08005c1c"
            ],
            "calling": [],
            "code": "\nvoid check_params_and_call_function_08005c38(int value1,int value2)\n\n{\n  if ((value1 == 1) && (value2 == 0xffff)) {\n    FUN_08005c1c(&DAT_200004b0,0,0,0,0);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "check_params_and_call_function_08005c38",
            "entrypoint": "0x08005c38",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005c38": "check_params_and_call_function_08005c38",
                "param_1": "value1",
                "param_2": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005c96": {
            "additional_data": {
                "FUN_08000178": {
                    "allocate_memory": 1,
                    "decode_string": 2,
                    "get_char_pointer": 1,
                    "get_modified_argument": 1,
                    "get_modified_param": 1,
                    "get_reversed_string": 1,
                    "get_string": 7,
                    "get_string_from_param": 1,
                    "reverse_string": 4
                },
                "FUN_08005c96": {
                    "execute_and_return": 1,
                    "execute_function": 15,
                    "execute_function_with_params": 1,
                    "execute_operation": 1,
                    "execute_subfunction": 1,
                    "perform_action_with_param": 1,
                    "perform_operation": 1,
                    "process": 1,
                    "process_data": 2,
                    "process_function": 2,
                    "process_param": 2,
                    "run_operation": 1
                },
                "param_1": {
                    "array": 4,
                    "array_ptr": 3,
                    "data": 3,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "func_array": 1,
                    "function_array": 1,
                    "function_params": 1,
                    "function_pointer": 8,
                    "function_ptr": 2,
                    "input_arr": 1,
                    "input_array": 1,
                    "param_array": 3,
                    "string": 1
                },
                "param_2": {
                    "argument": 2,
                    "array_length": 4,
                    "array_size": 2,
                    "input": 1,
                    "input_size": 1,
                    "input_value": 3,
                    "length": 2,
                    "param_count": 1,
                    "param_size": 2,
                    "size": 13
                },
                "param_3": {
                    "arg1": 7,
                    "arg_1": 1,
                    "arg_3": 1,
                    "data1": 1,
                    "extra_param1": 1,
                    "input_value": 1,
                    "param1": 1,
                    "param3": 5,
                    "param_1": 1,
                    "param_3": 6,
                    "param_value1": 2,
                    "result1": 1,
                    "unused_param": 2,
                    "unused_parameter": 1
                },
                "param_4": {
                    "additional_param": 3,
                    "arg2": 7,
                    "arg_2": 1,
                    "arg_4": 1,
                    "data2": 1,
                    "extra_param2": 1,
                    "output_value": 1,
                    "param2": 1,
                    "param4": 5,
                    "param_2": 1,
                    "param_4": 6,
                    "param_value2": 2,
                    "result2": 1
                },
                "uVar1": {
                    "allocated_memory": 1,
                    "allocation_result": 1,
                    "decoded_string": 2,
                    "modified_param": 1,
                    "output_value": 1,
                    "result": 19,
                    "return_value": 1
                }
            },
            "called": [
                "FUN_08000178"
            ],
            "calling": [
                "FUN_08005cd4",
                "FUN_08000cd0",
                "FUN_08000bcc",
                "FUN_08005da8"
            ],
            "code": "\nundefined4 execute_function_with_params_08005c96(int *function_pointer,int size,undefined4 arg1,undefined4 arg2)\n\n{\n  undefined4 result;\n  \n  if (size != 0) {\n    result = FUN_08000178(size);\n    result = (**(code **)(*function_pointer + 4))(function_pointer,size,result,*(code **)(*function_pointer + 4),arg2);\n    return result;\n  }\n  return 0;\n}\n\n",
            "current_name": "execute_function_with_params_08005c96",
            "entrypoint": "0x08005c96",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005c96": "execute_function_with_params_08005c96",
                "param_1": "function_pointer",
                "param_2": "size",
                "param_3": "arg1",
                "param_4": "arg2",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005cb6": {
            "additional_data": {
                "FUN_08005cb6": {
                    "execute_code": 7,
                    "execute_code_function": 1,
                    "execute_function": 22,
                    "execute_pointer_function": 1
                },
                "param_1": {
                    "code_pointer": 2,
                    "code_to_execute": 1,
                    "function_pointer": 20,
                    "function_ptr": 5,
                    "param_list": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005d42",
                "FUN_08005da8"
            ],
            "code": "\nvoid execute_code_function_08005cb6(undefined4 *function_pointer)\n\n{\n  (**(code **)*function_pointer)();\n  return;\n}\n\n",
            "current_name": "execute_code_function_08005cb6",
            "entrypoint": "0x08005cb6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005cb6": "execute_code_function_08005cb6",
                "param_1": "function_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005cc0": {
            "additional_data": {
                "FUN_08005cc0": {
                    "execute_callback": 8,
                    "execute_callback_function": 1,
                    "execute_code": 1,
                    "execute_function": 18,
                    "execute_function_with_params": 1,
                    "execute_operation": 1
                },
                "code": {
                    "function_to_execute": 1
                },
                "param_1": {
                    "array_pointer": 1,
                    "callback": 4,
                    "callback_data": 1,
                    "callback_ptr": 2,
                    "callback_table": 1,
                    "function_address": 1,
                    "function_pointer": 13,
                    "function_ptr": 7,
                    "operation_ptr": 1
                },
                "param_2": {
                    "arg1": 13,
                    "arg_1": 2,
                    "argument1": 1,
                    "argument_1": 2,
                    "callback_param_1": 1,
                    "param1": 2,
                    "param2": 2,
                    "param_1": 1,
                    "param_2": 1,
                    "unknown_param1": 1
                },
                "param_3": {
                    "arg2": 13,
                    "arg_2": 2,
                    "argument2": 1,
                    "argument_2": 2,
                    "callback_param_2": 1,
                    "param2": 2,
                    "param3": 2,
                    "param_2": 1,
                    "param_3": 1,
                    "unknown_param2": 1
                },
                "param_4": {
                    "arg3": 13,
                    "arg_3": 2,
                    "argument3": 1,
                    "argument_3": 2,
                    "callback_param_3": 1,
                    "callback_parameter": 1,
                    "custom_argument": 1,
                    "data_ptr": 1,
                    "param": 1,
                    "param3": 2,
                    "param4": 3,
                    "param_3": 1,
                    "param_4": 1,
                    "unknown_param3": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005cd4",
                "FUN_08005f40"
            ],
            "code": "\nvoid execute_function_with_params_08005cc0(int *function_pointer,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  (**(function_to_execute **)(*function_pointer + 4))(function_pointer,&DAT_0800786c,2,*(function_to_execute **)(*function_pointer + 4),arg3);\n  return;\n}\n\n",
            "current_name": "execute_function_with_params_08005cc0",
            "entrypoint": "0x08005cc0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005cc0": "execute_function_with_params_08005cc0",
                "code": "function_to_execute",
                "param_1": "function_pointer",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005cd4": {
            "additional_data": {
                "FUN_08005c96": {
                    "calculate_second_value": 1,
                    "compute_value": 1,
                    "perform_first_operation": 1,
                    "prepare_data": 1
                },
                "FUN_08005cc0": {
                    "calculate_first_value": 1,
                    "parse_input": 1,
                    "perform_second_operation": 1,
                    "process_input": 1
                },
                "FUN_08005cd4": {
                    "add_function_results": 1,
                    "calculate_sum": 19,
                    "calculate_sum_with_results": 1,
                    "sum_of_function_results": 3,
                    "sum_of_functions": 2,
                    "sum_of_sub_functions": 2,
                    "sum_variables": 1
                },
                "F_08005cd4": {
                    "calculate_sum": 1
                },
                "iVar1": {
                    "first_result": 2,
                    "result1": 27,
                    "result_of_fun_08005c96": 1
                },
                "iVar2": {
                    "result2": 27,
                    "result_of_fun_08005cc0": 1,
                    "second_result": 2
                },
                "param_1": {
                    "input": 13,
                    "input_param": 3,
                    "input_parameter": 1,
                    "input_value": 13
                },
                "param_2": {
                    "value": 1
                },
                "param_3": {
                    "arg1": 1
                },
                "param_4": {
                    "arg2": 1
                }
            },
            "called": [
                "FUN_08005cc0",
                "FUN_08005c96"
            ],
            "calling": [
                "FUN_08000cd0"
            ],
            "code": "\nint calculate_sum_with_results_08005cd4(undefined4 input)\n\n{\n  int result1;\n  int result2;\n  \n  result1 = FUN_08005c96();\n  result2 = FUN_08005cc0(input);\n  return result2 + result1;\n}\n\n",
            "current_name": "calculate_sum_with_results_08005cd4",
            "entrypoint": "0x08005cd4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005cd4": "calculate_sum_with_results_08005cd4",
                "iVar1": "result1",
                "iVar2": "result2",
                "param_1": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005ce8": {
            "additional_data": {
                "FUN_08000178": {
                    "reverse_string": 1
                },
                "FUN_08005ce8": {
                    "convert_and_call": 1,
                    "convert_and_call_function": 1,
                    "convert_base": 13,
                    "convert_decimal_to_base": 1,
                    "convert_decimal_to_base_n": 1,
                    "convert_int_to_base_n": 1,
                    "convert_number": 1,
                    "convert_number_base": 1,
                    "convert_number_to_string": 1,
                    "convert_to_base": 10
                },
                "cVar1": {
                    "char_value": 3,
                    "char_var": 1,
                    "converted_char": 1,
                    "converted_digit": 1,
                    "digit": 8
                },
                "local_15": {
                    "buffer": 4,
                    "char_array": 1,
                    "converted_arr": 1,
                    "converted_number": 7,
                    "converted_value": 2,
                    "digits": 1,
                    "hex_string": 1,
                    "output_array": 1,
                    "output_buffer": 1,
                    "result": 6,
                    "result_buffer": 1,
                    "result_str_array": 1,
                    "temp_array": 2,
                    "temp_string": 1,
                    "tmp_array": 1
                },
                "param_1": {
                    "arr": 1,
                    "array": 6,
                    "function_pointer": 1,
                    "input": 3,
                    "input_arr": 1,
                    "input_array": 7,
                    "input_num": 1,
                    "input_pointer": 1,
                    "input_ptr": 1,
                    "input_value": 1,
                    "number": 1,
                    "number_array": 1,
                    "output": 2,
                    "output_string": 1,
                    "result": 2,
                    "result_ptr": 1
                },
                "param_2": {
                    "base10_num": 1,
                    "decimal_number": 2,
                    "decimal_value": 1,
                    "input_number": 2,
                    "input_value": 2,
                    "num": 3,
                    "number": 18,
                    "value": 2
                },
                "param_3": {
                    "base": 29,
                    "base_value": 1,
                    "new_base": 1
                },
                "pcVar5": {
                    "buffer": 1,
                    "char_ptr": 1,
                    "character": 1,
                    "current_char": 2,
                    "current_digit": 1,
                    "digit_arr": 1,
                    "hex_digits": 1,
                    "output": 2,
                    "output_array": 2,
                    "output_ptr": 1,
                    "output_string": 1,
                    "ptr": 3,
                    "ptr_converted_value": 1,
                    "result_array": 1,
                    "result_str": 1
                },
                "uVar2": {
                    "output_value": 1,
                    "result": 17,
                    "return_value": 1
                },
                "uVar3": {
                    "remainder": 19
                },
                "uVar4": {
                    "quotient": 19
                }
            },
            "called": [
                "FUN_08000178"
            ],
            "calling": [
                "FUN_08005d42",
                "FUN_08005d8a"
            ],
            "code": "\nundefined4 convert_int_to_base_n_08005ce8(int *input_array,uint number,uint base)\n\n{\n  char digit;\n  undefined4 result;\n  uint remainder;\n  uint quotient;\n  char *ptr;\n  char converted_number [9];\n  \n  converted_number[1] = 0;\n  if ((int)base < 2) {\n    base = 10;\n  }\n  ptr = converted_number + 1;\n  do {\n    quotient = number / base;\n    remainder = (number & 0xff) - (quotient * base & 0xff) & 0xff;\n    ptr = ptr + -1;\n    digit = (char)remainder;\n    if (remainder < 10) {\n      digit = digit + '0';\n    }\n    else {\n      digit = digit + '7';\n    }\n    *ptr = digit;\n    number = quotient;\n  } while (quotient != 0);\n  if (ptr == (char *)0x0) {\n    result = 0;\n  }\n  else {\n    result = FUN_08000178(ptr);\n    result = (**(code **)(*input_array + 4))(input_array,ptr,result);\n  }\n  return result;\n}\n\n",
            "current_name": "convert_int_to_base_n_08005ce8",
            "entrypoint": "0x08005ce8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005ce8": "convert_int_to_base_n_08005ce8",
                "cVar1": "digit",
                "local_15": "converted_number",
                "param_1": "input_array",
                "param_2": "number",
                "param_3": "base",
                "pcVar5": "ptr",
                "uVar2": "result",
                "uVar3": "remainder",
                "uVar4": "quotient"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005d42": {
            "additional_data": {
                "FUN_08005cb6": {
                    "add_negative_sign": 2,
                    "append_minus": 1,
                    "append_minus_sign": 1,
                    "handle_negative_value": 1,
                    "prepend_minus": 1,
                    "prepend_minus_sign": 2,
                    "print_minus": 1,
                    "print_negative": 1
                },
                "FUN_08005ce8": {
                    "calculate_value": 1,
                    "convert_to_base": 5,
                    "convert_to_base_with_padding": 1,
                    "convert_value": 1,
                    "perform_calculation": 1,
                    "process_value": 1
                },
                "FUN_08005d42": {
                    "calculate_result": 2,
                    "convert_integer_to_string": 1,
                    "convert_num_to_ascii": 1,
                    "convert_number": 1,
                    "convert_number_to_string": 1,
                    "convert_to_base": 1,
                    "decode_and_convert": 2,
                    "decode_number": 1,
                    "format_number": 1,
                    "parse_and_convert": 1,
                    "parse_and_convert_number": 1,
                    "parse_integer": 2,
                    "parse_number": 3,
                    "parse_param": 1,
                    "process_data": 5,
                    "process_input": 3,
                    "process_number": 2,
                    "process_parameters": 1,
                    "process_value": 1
                },
                "iVar1": {
                    "result": 28,
                    "result_1": 1
                },
                "iVar2": {
                    "neg_prefix": 1,
                    "negate_flag": 1,
                    "negative": 6,
                    "negative_flag": 13,
                    "negative_result": 1,
                    "negative_sign": 1,
                    "result_2": 1,
                    "shifted_result": 1,
                    "sub_result": 1,
                    "temp": 3
                },
                "param_1": {
                    "array": 6,
                    "callback": 1,
                    "callback_fn": 1,
                    "data": 2,
                    "data_ptr": 5,
                    "function_array": 1,
                    "function_pointer": 1,
                    "function_pointers": 1,
                    "function_ptr": 2,
                    "function_table": 1,
                    "input": 3,
                    "input_array": 1,
                    "input_function": 1,
                    "input_ptr": 2,
                    "output_array": 1,
                    "output_stream": 1,
                    "pointer": 1
                },
                "param_2": {
                    "input_length": 1,
                    "input_number": 1,
                    "input_value": 3,
                    "input_value_1": 1,
                    "number": 10,
                    "value": 13,
                    "value1": 1,
                    "value_1": 1
                },
                "param_3": {
                    "base": 24,
                    "base_value": 1,
                    "input_flag": 1,
                    "input_value_2": 1,
                    "option": 1,
                    "type": 1,
                    "value2": 1,
                    "value_2": 1
                }
            },
            "called": [
                "FUN_08005ce8",
                "FUN_08005cb6"
            ],
            "calling": [
                "FUN_08005d82"
            ],
            "code": "\nint parse_and_convert_number_08005d42(undefined4 *array,uint value,uint base)\n\n{\n  int result;\n  int negative_flag;\n  \n  if (base == 0) {\n    result = (**(code **)*array)(array,value & 0xff);\n    return result;\n  }\n  if (base != 10) {\n    result = FUN_08005ce8(array,value,base & 0xff);\n    return result;\n  }\n  if (-1 < (int)value) {\n    result = FUN_08005ce8(array,value,10);\n    return result;\n  }\n  result = FUN_08005cb6(array,0x2d);\n  negative_flag = FUN_08005ce8(array,-value,10);\n  return negative_flag + result;\n}\n\n",
            "current_name": "parse_and_convert_number_08005d42",
            "entrypoint": "0x08005d42",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005d42": "parse_and_convert_number_08005d42",
                "iVar1": "result",
                "iVar2": "negative_flag",
                "param_1": "array",
                "param_2": "value",
                "param_3": "base"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005d82": {
            "additional_data": {
                "FUN_08005d42": {
                    "execute_function": 1,
                    "execute_secondary_function": 1,
                    "execute_sub_function": 3,
                    "initialize": 1,
                    "initialize_values": 1,
                    "perform_initialization": 4,
                    "perform_operation": 2,
                    "perform_reset": 1,
                    "perform_sub_task": 1,
                    "process_data": 10,
                    "sub_function": 1
                },
                "FUN_08005d82": {
                    "execute_function": 3,
                    "execute_initial_function": 1,
                    "execute_initialization": 8,
                    "execute_initiation_process": 1,
                    "execute_main_function": 7,
                    "execute_reset": 1,
                    "execute_sub_functions": 1,
                    "execute_task": 1,
                    "initialize": 3,
                    "initialize_and_execute": 1,
                    "initialize_application": 1,
                    "initialize_binary": 1,
                    "initialize_system": 1,
                    "run_initialization": 1
                },
                "param_1": {
                    "arg1": 1,
                    "array": 1,
                    "array_pointer": 2,
                    "array_ptr": 1,
                    "buffer": 1,
                    "data": 1,
                    "data_array": 3,
                    "data_buffer": 2,
                    "data_pointer": 4,
                    "data_ptr": 6,
                    "input_array": 1,
                    "new_param1": 1,
                    "param_array": 2,
                    "parameter_1": 1,
                    "ptr_parameter": 1,
                    "reset_ptr": 1,
                    "sub_function_param1": 1
                },
                "param_2": {
                    "arg2": 1,
                    "array_size": 2,
                    "buffer_size": 1,
                    "data_size": 2,
                    "length": 2,
                    "new_param2": 1,
                    "parameter_2": 1,
                    "size": 13,
                    "size1": 1,
                    "size_1": 1,
                    "size_of_array": 1,
                    "size_param": 1,
                    "start": 1,
                    "sub_function_param2": 1,
                    "value1": 1
                },
                "param_3": {
                    "arg3": 1,
                    "count": 10,
                    "count_param": 1,
                    "data_count": 1,
                    "data_flags": 1,
                    "data_length": 1,
                    "end": 1,
                    "flags": 1,
                    "index": 2,
                    "initial_value": 2,
                    "length": 2,
                    "limit": 1,
                    "new_param3": 1,
                    "parameter_3": 1,
                    "size2": 1,
                    "size_2": 1,
                    "sub_function_param3": 1,
                    "value2": 1
                }
            },
            "called": [
                "FUN_08005d42"
            ],
            "calling": [
                "FUN_08000cd0",
                "FUN_08005da8"
            ],
            "code": "\nvoid execute_main_function_08005d82(void)\n\n{\n  FUN_08005d42();\n  return;\n}\n\n",
            "current_name": "execute_main_function_08005d82",
            "entrypoint": "0x08005d82",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005d82": "execute_main_function_08005d82"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005d8a": {
            "additional_data": {
                "FUN_08005ce8": {
                    "execute_sub_function": 2,
                    "execute_with_data": 1,
                    "perform_calculation": 1,
                    "perform_operation": 2,
                    "process_arguments": 1,
                    "process_chunk": 1,
                    "process_data": 1,
                    "process_flag": 1,
                    "process_input": 3,
                    "process_param": 1,
                    "process_segment": 1,
                    "process_sub_data": 3,
                    "process_sub_function": 1
                },
                "FUN_08005d8a": {
                    "execute_function": 12,
                    "execute_operation": 5,
                    "execute_or_call_back": 1,
                    "execute_or_invoke": 1,
                    "handle_param": 1,
                    "perform_action": 1,
                    "process_data": 9,
                    "process_input": 1
                },
                "param_1": {
                    "array": 2,
                    "data": 5,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "func_ptr": 2,
                    "function_pointer": 14,
                    "function_ptr": 2,
                    "input_array": 1,
                    "input_data": 1,
                    "operation": 1
                },
                "param_2": {
                    "arg1": 3,
                    "data": 1,
                    "input1": 2,
                    "input_param1": 3,
                    "input_parameter": 1,
                    "input_size": 1,
                    "input_value": 3,
                    "length": 7,
                    "param1": 1,
                    "param_value": 1,
                    "parameter2": 2,
                    "size": 2,
                    "value": 1,
                    "value1": 2,
                    "value_1": 1
                },
                "param_3": {
                    "arg2": 3,
                    "condition": 1,
                    "flag": 14,
                    "input2": 2,
                    "input_param2": 3,
                    "mask": 1,
                    "param2": 1,
                    "parameter3": 2,
                    "selected_value": 1,
                    "value2": 2,
                    "value_2": 1
                },
                "param_4": {
                    "additional_param": 5,
                    "additional_parameter": 1,
                    "arg": 2,
                    "arg3": 3,
                    "argument": 1,
                    "code_pointer": 1,
                    "extra_argument": 1,
                    "extra_param": 6,
                    "input3": 1,
                    "param": 2,
                    "param3": 1,
                    "param4": 1,
                    "parameter4": 2,
                    "unknown": 1,
                    "unused_param": 1,
                    "value3": 2
                }
            },
            "called": [
                "FUN_08005ce8"
            ],
            "calling": [
                "FUN_08005da8"
            ],
            "code": "\nvoid execute_function_08005d8a(undefined4 *function_pointer,uint length,uint flag,undefined4 extra_param)\n\n{\n  if (flag != 0) {\n    FUN_08005ce8(function_pointer,length,flag & 0xff);\n    return;\n  }\n  (**(code **)*function_pointer)(function_pointer,length & 0xff,0,*(code **)*function_pointer,extra_param);\n  return;\n}\n\n",
            "current_name": "execute_function_08005d8a",
            "entrypoint": "0x08005d8a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005d8a": "execute_function_08005d8a",
                "param_1": "function_pointer",
                "param_2": "length",
                "param_3": "flag",
                "param_4": "extra_param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005da8": {
            "additional_data": {
                "FUNK_080009f0": {
                    "check_condition2": 1
                },
                "FUN_08000190": {
                    "calculate_final_sum": 1,
                    "perform_more_operations": 1,
                    "sub_function14": 1
                },
                "FUN_08000194": {
                    "calculate_sum": 1,
                    "perform_operation": 1,
                    "sub_function7": 1
                },
                "FUN_0800040c": {
                    "calculate_average": 1,
                    "get_value": 1,
                    "sub_function9": 1
                },
                "FUN_0800042c": {
                    "extract_value": 1,
                    "sub_function11": 1
                },
                "FUN_080004f8": {
                    "perform_another_operation": 1,
                    "process_value_again": 1,
                    "sub_function13": 1
                },
                "FUN_080005cb6": {
                    "sub_function10": 1
                },
                "FUN_080005d82": {
                    "sub_function12": 1
                },
                "FUN_0800074c": {
                    "calculate": 1,
                    "perform_calculation": 1,
                    "sub_function6": 1
                },
                "FUN_080009dc": {
                    "check_condition6": 1,
                    "check_range": 1,
                    "sub_function2": 1
                },
                "FUN_080009f0": {
                    "check_value": 1,
                    "sub_function3": 1
                },
                "FUN_08000a18": {
                    "calculate_range": 1,
                    "check_condition4": 1,
                    "sub_function5": 1
                },
                "FUN_08000a2c": {
                    "calculate_value": 1,
                    "check_condition": 1,
                    "sub_function1": 1
                },
                "FUN_08000a58": {
                    "convert_value": 1,
                    "get_other_value": 1
                },
                "FUN_08000aa8": {
                    "get_some_value": 1,
                    "get_variable": 1,
                    "sub_function8": 1
                },
                "FUN_08005c96": {
                    "execute_function": 1,
                    "process_value": 1,
                    "sub_function4": 1
                },
                "FUN_08005cb6": {
                    "add_value": 1,
                    "execute_another_function": 1
                },
                "FUN_08005d82": {
                    "execute_while_function": 1
                },
                "FUN_08005d8a": {
                    "execute_else_function": 1,
                    "reverse_value": 1,
                    "sub_function15": 1
                },
                "FUN_08005da8": {
                    "analyze_binary": 1,
                    "calculate_result": 2,
                    "process_data": 1
                },
                "F_UNK_1": {
                    "i_var1": 1
                },
                "F_UNK_2": {
                    "u_var2": 1
                },
                "F_UNK_4": {
                    "i_var3": 1
                },
                "F_UNK_5": {
                    "b_var4": 1
                },
                "F_UNK_6": {
                    "u_var5": 1
                },
                "F_UNK_7": {
                    "u_var6": 1
                },
                "bVar4": {
                    "byte_val": 1,
                    "byte_var": 5,
                    "counter": 5,
                    "loop_counter": 1,
                    "loop_var": 1,
                    "temp3": 6,
                    "temp_byte": 1,
                    "temp_var3": 9,
                    "temp_var_3": 1
                },
                "iVar1": {
                    "result": 27,
                    "result1": 3
                },
                "iVar3": {
                    "result3": 3,
                    "sub_result": 1,
                    "temp2": 6,
                    "temp_result": 4,
                    "temp_result2": 1,
                    "temp_var": 1,
                    "temp_var2": 12,
                    "temp_var_2": 2
                },
                "param_1": {
                    "arg1": 8,
                    "arg_1": 1,
                    "first_parameter": 1,
                    "input1": 7,
                    "input_1": 2,
                    "input_param": 1,
                    "input_param_1": 3,
                    "input_parameter1": 1,
                    "input_ptr": 1,
                    "param1": 5,
                    "param_1": 1
                },
                "param_2": {
                    "arg2": 8,
                    "arg_2": 1,
                    "config_param": 1,
                    "input2": 7,
                    "input_2": 2,
                    "input_param_2": 3,
                    "input_parameter2": 1,
                    "output_ptr": 1,
                    "param2": 5,
                    "param_2": 1,
                    "second_parameter": 1
                },
                "param_3": {
                    "arg3": 8,
                    "arg_3": 1,
                    "data_param": 1,
                    "input3": 7,
                    "input_3": 2,
                    "input_param_3": 3,
                    "input_parameter3": 1,
                    "param3": 5,
                    "param_3": 1,
                    "param_a": 1,
                    "third_parameter": 1
                },
                "param_4": {
                    "arg4": 8,
                    "arg_4": 1,
                    "fourth_parameter": 1,
                    "input4": 7,
                    "input_4": 2,
                    "input_param_4": 3,
                    "input_parameter4": 1,
                    "param4": 5,
                    "param_4": 1,
                    "param_b": 1,
                    "value_param": 1
                },
                "param_5": {
                    "arg5": 8,
                    "arg_5": 1,
                    "byte_input": 1,
                    "fifth_parameter": 1,
                    "input5": 6,
                    "input_5": 2,
                    "input_param_5": 3,
                    "input_parameter5": 1,
                    "num_iterations": 1,
                    "param5": 5,
                    "param_5": 1,
                    "param_c": 1
                },
                "uVar2": {
                    "config_value": 1,
                    "result2": 3,
                    "temp": 1,
                    "temp1": 6,
                    "temp_result": 1,
                    "temp_var": 2,
                    "temp_var1": 11,
                    "temp_var2": 1,
                    "temp_var_1": 2,
                    "undefined_var": 1,
                    "unknown_var": 1
                },
                "uVar5": {
                    "calc_result": 1,
                    "calc_var1": 1,
                    "intermediate_result1": 1,
                    "result5": 1,
                    "temp1": 1,
                    "temp4": 6,
                    "temp_long": 1,
                    "temp_val1": 1,
                    "temp_var3": 4,
                    "temp_var4": 9,
                    "temp_var_3": 1,
                    "temp_var_4": 1,
                    "ulong_var1": 1,
                    "var5": 1
                },
                "uVar6": {
                    "calc_var2": 1,
                    "intermediate_result2": 1,
                    "result6": 1,
                    "temp2": 1,
                    "temp5": 6,
                    "temp_long2": 1,
                    "temp_val2": 1,
                    "temp_value": 1,
                    "temp_var4": 4,
                    "temp_var5": 9,
                    "temp_var_4": 1,
                    "temp_var_5": 1,
                    "ulong_var2": 1,
                    "var6": 1
                }
            },
            "called": [
                "FUN_08005d82",
                "FUN_08000a2c",
                "FUN_0800042c",
                "FUN_08005d8a",
                "FUN_080009dc",
                "FUN_08000194",
                "FUN_08000a58",
                "FUN_08000aa8",
                "FUN_0800074c",
                "FUN_08000a18",
                "FUN_080004f8",
                "FUN_08000190",
                "FUN_08005c96",
                "FUN_08005cb6",
                "FUN_0800040c",
                "FUN_080009f0"
            ],
            "calling": [
                "FUN_08005f2c"
            ],
            "code": "\nint calculate_result_08005da8(undefined4 arg1,undefined4 arg2,undefined4 arg3,uint arg4,byte arg5)\n\n{\n  int result;\n  undefined4 temp_var1;\n  int temp_var2;\n  byte temp_var3;\n  undefined8 temp_var4;\n  undefined8 temp_var5;\n  \n  result = FUN_08000a2c(arg3,arg4,arg3,arg4);\n  if (result == 0) {\n    result = FUN_08000a2c(arg3,arg4 & 0x7fffffff,0xffffffff,0x7fefffff);\n    if ((result == 0) &&\n       (result = FUN_080009f0(arg3,arg4 & 0x7fffffff,0xffffffff,0x7fefffff), result == 0)) {\n      result = FUN_08005c96(arg1,&DAT_08007860);\n    }\n    else {\n      result = FUN_08000a18(arg3,arg4,0xe0000000,0x41efffff);\n      if (result == 0) {\n        result = FUN_080009dc(arg3,arg4,0xe0000000,0xc1efffff);\n        if (result == 0) {\n          result = FUN_080009dc(arg3,arg4,0,0);\n          if (result == 0) {\n            result = 0;\n          }\n          else {\n            result = FUN_08005cb6(arg1,0x2d);\n            arg4 = arg4 + 0x80000000;\n          }\n          temp_var4 = 0x3fe0000000000000;\n          for (temp_var3 = 0; temp_var1 = (undefined4)((ulonglong)temp_var4 >> 0x20), temp_var3 < arg5;\n              temp_var3 = temp_var3 + 1) {\n            temp_var4 = FUN_0800074c((int)temp_var4,temp_var1,0,0x40240000);\n          }\n          temp_var4 = FUN_08000194(arg3,arg4,(int)temp_var4,temp_var1);\n          temp_var1 = FUN_08000aa8();\n          temp_var5 = FUN_0800040c();\n          temp_var4 = FUN_08000190((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20),(int)temp_var5,\n                               (int)((ulonglong)temp_var5 >> 0x20));\n          temp_var2 = FUN_08005d8a(arg1,temp_var1,10);\n          result = result + temp_var2;\n          if (arg5 != 0) {\n            temp_var2 = FUN_08005c96(arg1,&DAT_08007868);\n            result = result + temp_var2;\n          }\n          while (arg5 != 0) {\n            temp_var4 = FUN_080004f8((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20),0,0x40240000);\n            temp_var1 = FUN_08000a58();\n            temp_var2 = FUN_08005d82(arg1,temp_var1,10);\n            result = result + temp_var2;\n            temp_var5 = FUN_0800042c(temp_var1);\n            temp_var4 = FUN_08000190((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20),(int)temp_var5,\n                                 (int)((ulonglong)temp_var5 >> 0x20));\n            arg5 = arg5 - 1;\n          }\n        }\n        else {\n          result = FUN_08005c96(arg1,&DAT_08007864);\n        }\n      }\n      else {\n        result = FUN_08005c96(arg1,&DAT_08007864);\n      }\n    }\n  }\n  else {\n    result = FUN_08005c96(arg1,&DAT_0800785c);\n  }\n  return result;\n}\n\n",
            "current_name": "calculate_result_08005da8",
            "entrypoint": "0x08005da8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005da8": "calculate_result_08005da8",
                "bVar4": "temp_var3",
                "iVar1": "result",
                "iVar3": "temp_var2",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "param_5": "arg5",
                "uVar2": "temp_var1",
                "uVar5": "temp_var4",
                "uVar6": "temp_var5"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005f2c": {
            "additional_data": {
                "FUN_08005da8": {
                    "call_subfunction": 1,
                    "do_something": 1,
                    "execute_custom_function": 1,
                    "execute_operation": 1,
                    "execute_startup_code": 1,
                    "execute_sub_function": 2,
                    "execute_task": 2,
                    "initialize": 1,
                    "initialize_application": 1,
                    "initialize_data": 1,
                    "initialize_subsystems": 1,
                    "load_configuration": 1,
                    "perform_initialization": 4,
                    "perform_operation": 2,
                    "perform_sub_function": 1,
                    "perform_system_setup": 1,
                    "perform_task": 1,
                    "process_data": 1,
                    "sub_function": 1
                },
                "FUN_08005f2c": {
                    "execute_application": 1,
                    "execute_initial_setup": 3,
                    "execute_initialization": 5,
                    "execute_main_function": 2,
                    "initialize": 5,
                    "initialize_and_execute": 1,
                    "initialize_application": 7,
                    "initialize_main": 1,
                    "initialize_system": 6
                },
                "param_1": {
                    "arg1": 16,
                    "config": 1,
                    "input1": 2,
                    "param1": 3,
                    "setup_param1": 1,
                    "task_parameter1": 1,
                    "undefined_arg1": 1,
                    "unknown_param1": 1,
                    "value1": 1
                },
                "param_2": {
                    "arg2": 16,
                    "data": 1,
                    "input2": 2,
                    "param2": 3,
                    "setup_param2": 1,
                    "task_parameter2": 1,
                    "undefined_arg2": 1,
                    "unknown_param2": 1,
                    "value2": 1
                },
                "param_3": {
                    "arg3": 16,
                    "input3": 2,
                    "param3": 3,
                    "settings": 1,
                    "setup_param3": 1,
                    "task_parameter3": 1,
                    "undefined_arg3": 1,
                    "unknown_param3": 1,
                    "value3": 1
                },
                "param_4": {
                    "arg4": 12,
                    "count": 5,
                    "flags": 1,
                    "length": 1,
                    "param4": 3,
                    "parameter4": 1,
                    "setup_param4": 1,
                    "size": 1,
                    "task_parameter4": 1,
                    "unknown_param4": 1
                },
                "param_5": {
                    "arg5": 12,
                    "flag": 7,
                    "option": 1,
                    "param5": 3,
                    "parameter5": 1,
                    "setup_param5": 1,
                    "task_parameter5": 1,
                    "unknown_param5": 1
                }
            },
            "called": [
                "FUN_08005da8"
            ],
            "calling": [
                "FUN_08000cd0",
                "FUN_08005f40"
            ],
            "code": "\nvoid initialize_application_08005f2c(void)\n\n{\n  FUN_08005da8();\n  return;\n}\n\n",
            "current_name": "initialize_application_08005f2c",
            "entrypoint": "0x08005f2c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005f2c": "initialize_application_08005f2c"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005f40": {
            "additional_data": {
                "FUND_beginsAdding": {
                    "calculate_sum_of_functions": 1
                },
                "FUN_08005cc0": {
                    "perform_computation": 1
                },
                "FUN_08005f2c": {
                    "get_initial_value": 1
                },
                "FUN_08005f40": {
                    "addi_vars": 1,
                    "addition_function": 2,
                    "addition_with_function_results": 1,
                    "calculate_sum": 22,
                    "sum_of_functions": 1,
                    "sum_of_sub_functions": 1,
                    "sum_of_two_functions": 1,
                    "sum_values": 1
                },
                "iVar1": {
                    "first_result": 1,
                    "first_value": 1,
                    "fun_one_result": 1,
                    "initial_value": 1,
                    "result1": 26,
                    "result_1": 1
                },
                "iVar2": {
                    "computed_value": 1,
                    "fun_two_result": 1,
                    "result2": 26,
                    "result_2": 1,
                    "second_result": 1,
                    "second_value": 1
                },
                "param_1": {
                    "data": 1,
                    "input": 12,
                    "input_param": 2,
                    "input_parameter": 3,
                    "input_value": 12,
                    "value": 1
                }
            },
            "called": [
                "FUN_08005cc0",
                "FUN_08005f2c"
            ],
            "calling": [
                "FUN_08000cd0"
            ],
            "code": "\nint calculate_sum_08005f40(undefined4 input)\n\n{\n  int result1;\n  int result2;\n  \n  result1 = FUN_08005f2c();\n  result2 = FUN_08005cc0(input);\n  return result2 + result1;\n}\n\n",
            "current_name": "calculate_sum_08005f40",
            "entrypoint": "0x08005f40",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005f40": "calculate_sum_08005f40",
                "iVar1": "result1",
                "iVar2": "result2",
                "param_1": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005f5c": {
            "called": [],
            "calling": [
                "FUN_08005f6c"
            ],
            "code": "\nvoid FUNC_08005f5c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08005f5c",
            "entrypoint": "0x08005f5c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08005f5c": "FUNC_08005f5c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08005f5e": {
            "additional_data": {
                "FUN_08001c32": {
                    "do_something": 2,
                    "do_task": 1,
                    "execute_initialization": 1,
                    "execute_operation": 1,
                    "perform_additional_setup": 3,
                    "perform_additional_task": 1,
                    "perform_additional_tasks": 1,
                    "perform_initial_setup": 1,
                    "perform_initialization": 13,
                    "perform_operation": 1,
                    "perform_secondary_action": 1,
                    "perform_secondary_operation": 1,
                    "perform_task": 1,
                    "perform_task_a": 1,
                    "set_up_user_interface": 1
                },
                "FUN_08002470": {
                    "call_other_function": 1,
                    "change_settings": 1,
                    "execute_task": 1,
                    "log_event": 1,
                    "perform_primary_operation": 1,
                    "process_data": 1,
                    "set_app_mode": 1,
                    "set_binary_value": 1,
                    "set_configuration": 8,
                    "set_configuration_value": 1,
                    "set_count": 1,
                    "set_initial_parameter": 1,
                    "set_initial_values": 2,
                    "set_initialization": 1,
                    "set_iterations": 1,
                    "set_log_level": 1,
                    "set_mode": 3,
                    "set_param": 1,
                    "set_parameter_value": 1,
                    "set_system_parameters": 1
                },
                "FUN_08005f5e": {
                    "execute_initial_operations": 1,
                    "execute_initial_setup": 1,
                    "execute_initialization": 1,
                    "execute_main_function": 1,
                    "initialize": 5,
                    "initialize_and_call_functions": 1,
                    "initialize_and_execute": 1,
                    "initialize_app": 1,
                    "initialize_application": 11,
                    "initialize_binary": 1,
                    "initialize_components": 1,
                    "initialize_program": 2,
                    "initialize_system": 4
                },
                "param_1": {
                    "config_value": 1,
                    "configuration": 1,
                    "count": 5,
                    "mode": 1,
                    "num_iterations": 1,
                    "number": 1,
                    "number_of_calls": 1,
                    "number_of_iterations": 1,
                    "number_of_parameters": 1,
                    "setting_value": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_08001c32",
                "FUN_08002470"
            ],
            "calling": [
                "FUN_08006198"
            ],
            "code": "\nvoid initialize_application_08005f5e(void)\n\n{\n  FUN_08002470(3);\n  FUN_08001c32();\n  return;\n}\n\n",
            "current_name": "initialize_application_08005f5e",
            "entrypoint": "0x08005f5e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005f5e": "initialize_application_08005f5e"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005f6c": {
            "additional_data": {
                "FUNC_08005a18": {
                    "cleanup": 1,
                    "execute_action": 1,
                    "execute_code": 1,
                    "execute_second_function": 1,
                    "execute_task": 7,
                    "generate_output": 1,
                    "handle_interrupt": 1,
                    "perform_action": 3,
                    "post_processing": 1,
                    "process_data": 7,
                    "update_data": 5,
                    "update_state": 1,
                    "update_status": 1
                },
                "FUNC_08005f5c": {
                    "execute_first_function": 1,
                    "initialize": 16,
                    "initialize_environment": 2,
                    "initialize_resources": 1,
                    "initialize_system": 10,
                    "pre_processing": 1
                },
                "FUN_08000bcc": {
                    "check_condition": 1,
                    "cleanup": 2,
                    "configure": 1,
                    "configure_options": 1,
                    "configure_settings": 1,
                    "execute_third_function": 1,
                    "initialize": 1,
                    "initialize_components": 3,
                    "initialize_environment": 1,
                    "initialize_resources": 2,
                    "initiate_task": 1,
                    "perform_operation2": 1,
                    "perform_operation_b": 1,
                    "perform_setup": 1,
                    "perform_startup_tasks": 1,
                    "prepare_data": 1,
                    "set_up_environment": 1,
                    "setup": 8,
                    "setup_environment": 2
                },
                "FUN_08000cd0": {
                    "do_something": 1,
                    "execute_fourth_function": 1,
                    "execute_task": 1,
                    "perform_action": 8,
                    "perform_operation": 5,
                    "perform_operation1": 1,
                    "perform_operation_1": 1,
                    "perform_operation_a": 1,
                    "perform_some_operation": 1,
                    "perform_task": 8,
                    "process_data": 2,
                    "process_task": 1
                },
                "FUN_08005f6c": {
                    "continuous_execution": 1,
                    "execute_function": 1,
                    "execute_function_loop": 1,
                    "execute_infinite_loop": 5,
                    "execute_loop": 5,
                    "execute_main_loop": 2,
                    "execute_operations": 1,
                    "main_loop": 2,
                    "run_continuous_loop": 1,
                    "run_infinite_loop": 6,
                    "run_loop": 3,
                    "run_main_loop": 1
                }
            },
            "called": [
                "FUN_08000cd0",
                "FUN_08005f5c",
                "FUN_08005a18",
                "FUN_08000bcc"
            ],
            "calling": [
                "entry"
            ],
            "code": "\nvoid execute_infinite_loop_08005f6c(void)\n\n{\n  FUNC_08005f5c();\n  FUN_08000bcc();\n  do {\n    FUN_08000cd0();\n    FUNC_08005a18();\n  } while( true );\n}\n\n",
            "current_name": "execute_infinite_loop_08005f6c",
            "entrypoint": "0x08005f6c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005f6c": "execute_infinite_loop_08005f6c"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005f8c": {
            "additional_data": {
                "FUN_08005f8c": {
                    "count_binary_ones": 1,
                    "count_bits": 4,
                    "count_bits_set": 8,
                    "count_set_bits": 18
                },
                "cVar1": {
                    "bit_count": 25,
                    "bits_count": 1,
                    "count": 4,
                    "ones_count": 1
                },
                "param_1": {
                    "decimal_number": 1,
                    "input": 2,
                    "input_num": 1,
                    "input_number": 3,
                    "input_value": 2,
                    "num": 11,
                    "number": 11
                }
            },
            "called": [],
            "calling": [
                "FUN_080060e4"
            ],
            "code": "\nchar count_bits_set_08005f8c(uint num)\n\n{\n  char bit_count;\n  \n  bit_count = '\\0';\n  for (; num != 1; num = num >> 1) {\n    bit_count = bit_count + '\\x01';\n  }\n  return bit_count;\n}\n\n",
            "current_name": "count_bits_set_08005f8c",
            "entrypoint": "0x08005f8c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005f8c": "count_bits_set_08005f8c",
                "cVar1": "bit_count",
                "param_1": "num"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005fc8": {
            "additional_data": {
                "DAT_200004b8": {
                    "config_value1": 1,
                    "data1": 1
                },
                "DAT_200004c4": {
                    "config_value2": 1,
                    "data2": 1
                },
                "DAT_200004cc": {
                    "config_value3": 1,
                    "data3": 1
                },
                "DAT_200004d8": {
                    "config_value4": 1,
                    "data4": 1
                },
                "DAT_200004e0": {
                    "config_value5": 1,
                    "data5": 1
                },
                "DAT_200004ec": {
                    "config_value6": 1,
                    "data6": 1
                },
                "DAT_200004f4": {
                    "config_value7": 1,
                    "data7": 1
                },
                "DAT_20000500": {
                    "config_value8": 1,
                    "data8": 1
                },
                "DAT_20000508": {
                    "config_value9": 1,
                    "data9": 1
                },
                "DAT_20000514": {
                    "config_value10": 1,
                    "data10": 1
                },
                "DAT_2000051c": {
                    "config_value11": 1,
                    "data11": 1
                },
                "DAT_20000528": {
                    "config_value12": 1,
                    "data12": 1
                },
                "DAT_20000530": {
                    "config_value13": 1,
                    "data13": 1
                },
                "DAT_2000053c": {
                    "config_value14": 1,
                    "data14": 1
                },
                "DAT_20000544": {
                    "config_value15": 1,
                    "data15": 1
                },
                "DAT_20000550": {
                    "config_value16": 1,
                    "data16": 1
                },
                "DAT_20000558": {
                    "config_value17": 1,
                    "data17": 1
                },
                "DAT_20000564": {
                    "config_value18": 1,
                    "data18": 1
                },
                "DAT_2000056c": {
                    "config_value19": 1,
                    "data19": 1
                },
                "DAT_20000578": {
                    "config_value20": 1,
                    "data20": 1
                },
                "DAT_20000580": {
                    "config_value21": 1,
                    "data21": 1
                },
                "DAT_2000058c": {
                    "config_value22": 1,
                    "data22": 1
                },
                "DAT_20000594": {
                    "config_value23": 1,
                    "data23": 1
                },
                "DAT_200005a0": {
                    "config_value24": 1,
                    "data24": 1
                },
                "DAT_200005a8": {
                    "config_value25": 1,
                    "data25": 1
                },
                "DAT_200005b4": {
                    "config_value26": 1,
                    "data26": 1
                },
                "DAT_200005bc": {
                    "config_value27": 1,
                    "data27": 1
                },
                "DAT_200005c8": {
                    "config_value28": 1,
                    "data28": 1
                },
                "DAT_200005d0": {
                    "config_value29": 1,
                    "data29": 1
                },
                "DAT_200005dc": {
                    "config_value30": 1,
                    "data30": 1
                },
                "DAT_200005e4": {
                    "config_value31": 1,
                    "data31": 1
                },
                "DAT_200005f0": {
                    "config_value32": 1,
                    "data32": 1
                },
                "FUN_08005fc8": {
                    "initialize_configuration": 1,
                    "initialize_data": 24,
                    "initialize_parameters": 5,
                    "initialize_variables": 1
                },
                "FUN_08006112": {
                    "call_another_function": 1,
                    "call_function": 1,
                    "call_sub_function": 1,
                    "execute_function": 3,
                    "perform_action": 2,
                    "perform_initialization": 1,
                    "perform_operation": 3,
                    "perform_task": 2,
                    "process_data": 13
                },
                "LAB_08005fa0_1": {
                    "label": 1,
                    "label1": 3,
                    "some_pointer": 1,
                    "unused_label": 1
                },
                "funPtr1": {
                    "function_pointer1": 1
                },
                "funPtr2": {
                    "function_pointer2": 1
                },
                "isFirstParam": {
                    "is_first_param": 1
                },
                "newVar1": {
                    "new_variable1": 1
                },
                "newVar2": {
                    "new_variable2": 1
                },
                "param_1": {
                    "condition": 6,
                    "condition1": 1,
                    "flag": 10,
                    "input_flag": 1,
                    "input_param": 1,
                    "is_first_param": 1,
                    "status": 6,
                    "status_flag": 1,
                    "unused_param": 1,
                    "value": 1,
                    "value1": 2
                },
                "param_2": {
                    "condition2": 1,
                    "flag": 2,
                    "flag_param": 1,
                    "input_value": 1,
                    "second_param": 1,
                    "unused_param": 1,
                    "value": 21,
                    "value2": 2,
                    "value_flag": 1
                },
                "param_3": {
                    "arg1": 1,
                    "param3": 4,
                    "param_3": 2,
                    "unknown1": 2,
                    "unknown_param": 1,
                    "unknown_parameter": 1,
                    "unused": 1,
                    "unused1": 5,
                    "unused_param": 8,
                    "unused_param1": 2,
                    "unused_param3": 1,
                    "unused_parameter": 1
                },
                "param_4": {
                    "additional_param": 1,
                    "another_param": 1,
                    "another_unknown_param": 1,
                    "arg2": 1,
                    "data_argument": 1,
                    "data_ptr": 1,
                    "input_param": 1,
                    "param": 4,
                    "param4": 4,
                    "param_4": 3,
                    "param_value": 1,
                    "unknown2": 2,
                    "unused2": 5,
                    "unused_param": 1,
                    "unused_param2": 2,
                    "unused_param4": 1,
                    "variable": 1
                },
                "secondParam": {
                    "second_param": 1
                }
            },
            "called": [
                "FUN_08006112"
            ],
            "calling": [],
            "code": "\nvoid initialize_data_08005fc8(int flag,int value,undefined4 unused_param,undefined4 unused2)\n\n{\n  if (flag != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    DAT_200004b8 = 6;\n    DAT_200004c4 = 0;\n    DAT_200004cc = 7;\n    DAT_200004d8 = 0;\n    DAT_200004e0 = 8;\n    DAT_200004ec = 0;\n    DAT_200004f4 = 9;\n    DAT_20000500 = 0;\n    DAT_20000508 = 10;\n    DAT_20000514 = 0;\n    DAT_2000051c = 0x17;\n    DAT_20000528 = 0;\n    DAT_20000530 = 0x17;\n    DAT_2000053c = 0;\n    DAT_20000544 = 0x17;\n    DAT_20000550 = 0;\n    DAT_20000558 = 0x17;\n    DAT_20000564 = 0;\n    DAT_2000056c = 0x17;\n    DAT_20000578 = 0;\n    DAT_20000580 = 0x28;\n    DAT_2000058c = 0;\n    DAT_20000594 = 0x28;\n    DAT_200005a0 = 0;\n    DAT_200005a8 = 0x28;\n    DAT_200005b4 = 0;\n    DAT_200005bc = 0x28;\n    DAT_200005c8 = 0;\n    DAT_200005d0 = 0x28;\n    DAT_200005dc = 0;\n    DAT_200005e4 = 0x28;\n    DAT_200005f0 = 0;\n    FUN_08006112(0,&label1,&DAT_20000000,&DAT_200004b8,unused2);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_data_08005fc8",
            "entrypoint": "0x08005fc8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005fc8": "initialize_data_08005fc8",
                "LAB_08005fa0_1": "label1",
                "param_1": "flag",
                "param_2": "value",
                "param_3": "unused_param",
                "param_4": "unused2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080060d4": {
            "additional_data": {
                "DAT_200004c4": {
                    "data_array": 2
                },
                "FUN_08005f8c": {
                    "calculate_index": 1,
                    "get_index_of_data": 1,
                    "get_valid_index": 1
                },
                "FUN_080060d4": {
                    "execute_action": 1,
                    "execute_conditional_function": 1,
                    "execute_function": 9,
                    "execute_function_or_continue": 1,
                    "execute_function_or_fallback": 1,
                    "execute_next_function": 1,
                    "execute_next_operation": 2,
                    "execute_operation": 2,
                    "execute_or_recurse": 1,
                    "execute_process_or_fallback": 1,
                    "process_data": 6,
                    "process_param": 2,
                    "process_parameter": 1
                },
                "FUN_08007090": {
                    "initialize": 2,
                    "initialize_data": 6,
                    "initialize_variables": 1,
                    "perform_cleanup": 1
                },
                "iVar1": {
                    "function_index": 1,
                    "index": 24,
                    "operation_result": 1,
                    "result": 2,
                    "result_index": 2,
                    "return_value": 1
                },
                "param_1": {
                    "action": 1,
                    "arg": 2,
                    "context": 1,
                    "current_data": 1,
                    "data": 3,
                    "function_index": 1,
                    "function_param": 1,
                    "function_parameter": 1,
                    "function_pointer": 2,
                    "function_ptr": 1,
                    "input": 7,
                    "input_param": 1,
                    "input_parameter": 2,
                    "input_value": 2,
                    "operation_parameter": 1,
                    "operation_ptr": 1,
                    "parameter": 2,
                    "process_id": 1
                }
            },
            "called": [
                "FUN_08007090"
            ],
            "calling": [
                "FUN_080060e4"
            ],
            "code": "\nvoid execute_function_or_fallback_080060d4(int input)\n\n{\n  int index;\n  \n  if (*(int *)(input + 8) != 0) {\n    (**(code **)(input + 0xc))();\n    return;\n  }\n  FUN_08007090();\n  index = FUN_08005f8c();\n  if ((&DAT_200004c4)[index * 5] != 0) {\n    execute_function_or_fallback_080060d4();\n  }\n  return;\n}\n\n",
            "current_name": "execute_function_or_fallback_080060d4",
            "entrypoint": "0x080060d4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080060d4": "execute_function_or_fallback_080060d4",
                "iVar1": "index",
                "param_1": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080060e4": {
            "additional_data": {
                "DAT_200004c4": {
                    "function_array": 1
                },
                "FUN_08005f8c": {
                    "check_condition": 1,
                    "get_array_index": 9,
                    "get_char": 1,
                    "get_condition_value": 1,
                    "get_data_index": 1,
                    "get_data_type": 1,
                    "get_flag_value": 1,
                    "get_function_index": 3,
                    "get_index": 1,
                    "get_index_of_non_zero": 1,
                    "get_index_of_non_zero_entry": 1,
                    "get_index_of_non_zero_item": 1,
                    "get_param_index": 1,
                    "get_result_value": 1,
                    "get_return_value": 1,
                    "get_selected_option": 1,
                    "get_valid_index": 5
                },
                "FUN_080060d4": {
                    "execute_action": 4,
                    "execute_code": 1,
                    "execute_function": 15,
                    "execute_if_not_empty": 1,
                    "execute_next_step": 1,
                    "execute_selected_function": 1,
                    "execute_sub_function": 1,
                    "invoke_function": 2,
                    "perform_action": 4,
                    "update_data_item": 1
                },
                "FUN_080060e4": {
                    "check_and_call": 1,
                    "check_and_call_function": 7,
                    "check_and_execute": 1,
                    "check_and_execute_action": 1,
                    "check_and_execute_function": 13,
                    "check_and_invoke_function": 2,
                    "check_and_update_data": 1,
                    "check_data_and_perform_action": 1,
                    "check_function_and_call": 1,
                    "check_if_condition_is_met": 1,
                    "check_if_data_exists": 2
                },
                "iVar1": {
                    "array_index": 2,
                    "condition_result": 1,
                    "data_index": 1,
                    "function_index": 1,
                    "index": 9,
                    "result": 2
                },
                "param_1": {
                    "input": 2
                }
            },
            "called": [
                "FUN_08005f8c",
                "FUN_080060d4"
            ],
            "calling": [
                "FUN_0800282c"
            ],
            "code": "\nvoid check_and_execute_function_080060e4(void)\n\n{\n  int index;\n  \n  index = FUN_08005f8c();\n  if ((&DAT_200004c4)[index * 5] != 0) {\n    FUN_080060d4();\n  }\n  return;\n}\n\n",
            "current_name": "check_and_execute_function_080060e4",
            "entrypoint": "0x080060e4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080060e4": "check_and_execute_function_080060e4",
                "iVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006112": {
            "additional_data": {
                "FUN_08006112": {
                    "call_and_return": 1,
                    "call_other_function": 1,
                    "call_sub_function": 2,
                    "call_subfunction": 1,
                    "copy_parameters": 1,
                    "execute_08006112": 1,
                    "execute_and_return_result": 1,
                    "execute_first_function": 1,
                    "execute_func_with_params": 2,
                    "execute_function": 12,
                    "execute_param_operations": 1,
                    "execute_reverse_operation": 1,
                    "initialize_function": 1,
                    "perform_operation": 1,
                    "process_data": 1
                },
                "FUN_08006158": {
                    "calculate_08006158": 1,
                    "calculate_result": 4,
                    "calculate_value": 3,
                    "call_sub_function_helper": 1,
                    "copy_data": 1,
                    "execute_function": 1,
                    "execute_operation": 1,
                    "execute_second_function": 1,
                    "perform_calculation": 1,
                    "perform_computation": 1,
                    "perform_operation": 5,
                    "perform_reverse": 1,
                    "perform_reverse_operation": 1,
                    "perform_task": 1,
                    "process_data": 3,
                    "reverse_and_process": 1,
                    "reverse_data": 2
                },
                "longlong": {
                    "result": 1
                },
                "param_1": {
                    "arg1": 4,
                    "argument_1": 2,
                    "data1": 1,
                    "data_1": 1,
                    "first_parameter": 2,
                    "input1": 5,
                    "input_1": 1,
                    "input_arg1": 1,
                    "input_param": 1,
                    "input_param1": 1,
                    "input_param_1": 2,
                    "input_parameter1": 2,
                    "param_1": 1,
                    "param_1_ptr": 1,
                    "param_destination": 1,
                    "param_one": 1,
                    "param_pointer": 1,
                    "parameter1": 1,
                    "value_1": 1,
                    "variable1": 1
                },
                "param_2": {
                    "arg2": 4,
                    "argument_2": 2,
                    "data2": 1,
                    "data_2": 1,
                    "input2": 5,
                    "input_2": 1,
                    "input_arg2": 1,
                    "input_param2": 1,
                    "input_param_2": 2,
                    "input_parameter2": 2,
                    "output_param": 1,
                    "param_2": 1,
                    "param_2_ptr": 1,
                    "param_source": 1,
                    "param_two": 1,
                    "param_value": 1,
                    "parameter2": 1,
                    "second_parameter": 2,
                    "value_2": 1,
                    "variable2": 1
                },
                "uint": {
                    "type2": 1
                },
                "undefined4": {
                    "type1": 1
                }
            },
            "called": [
                "FUN_08006158"
            ],
            "calling": [
                "FUN_08005fc8"
            ],
            "code": "\nvoid execute_first_function_08006112(type1 input1,type1 input2)\n\n{\n  FUN_08006158(input2,input1);\n  return;\n}\n\n",
            "current_name": "execute_first_function_08006112",
            "entrypoint": "0x08006112",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006112": "execute_first_function_08006112",
                "param_1": "input1",
                "param_2": "input2",
                "undefined4": "type1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800611c": {
            "additional_data": {
                "FUN_0800611c": {
                    "assertion_failed": 16,
                    "assertion_failed_message": 1,
                    "assertion_failure_log": 1,
                    "check_assertion": 5,
                    "handle_assertion_failed": 1,
                    "handle_assertion_failure": 1,
                    "process_assertion": 1,
                    "validate_assertion": 5
                },
                "FUN_08006174": {
                    "print_error_message": 1
                },
                "FUN_08006ac0": {
                    "get_return_value": 1
                },
                "param_1": {
                    "assertion": 3,
                    "file": 15,
                    "file_name": 11,
                    "message": 1,
                    "parameter1": 1
                },
                "param_2": {
                    "file": 2,
                    "file_name": 1,
                    "filename": 1,
                    "line": 12,
                    "line_number": 14,
                    "parameter2": 1
                },
                "param_3": {
                    "assertion": 3,
                    "assertion_description": 1,
                    "assertion_expression": 1,
                    "assertion_message": 8,
                    "assertion_string": 1,
                    "condition": 4,
                    "file_name": 1,
                    "function_name": 4,
                    "line": 2,
                    "line_number": 1,
                    "message": 5
                },
                "param_4": {
                    "additional_info": 3,
                    "assertion_expression": 1,
                    "assertion_message": 2,
                    "extra_info": 2,
                    "function": 12,
                    "function_name": 10,
                    "line_number": 1
                },
                "pcVar2": {
                    "additional_info": 4,
                    "additional_message": 1,
                    "additional_text": 2,
                    "appendix": 1,
                    "delimiter": 3,
                    "error_message": 1,
                    "extra_message": 2,
                    "extra_text": 1,
                    "function_message": 1,
                    "message": 2,
                    "message_prefix": 1,
                    "message_suffix": 1,
                    "prefix": 3,
                    "ptr_pc_var2": 1,
                    "separator": 1,
                    "string_additional_info": 1,
                    "suffix": 4
                },
                "uVar1": {
                    "assert_flag": 1,
                    "assert_function": 1,
                    "assert_ptr": 1,
                    "assertion": 3,
                    "assertion_context": 1,
                    "assertion_failed_code": 1,
                    "assertion_flag": 5,
                    "assertion_flags": 1,
                    "assertion_format": 1,
                    "assertion_message": 2,
                    "assertion_msg": 1,
                    "assertion_ptr": 1,
                    "error_code": 1,
                    "file": 1,
                    "file_line": 2,
                    "file_pointer": 2,
                    "file_ptr": 1,
                    "metadata": 1,
                    "ptr_u_var1": 1,
                    "ptr_value": 2,
                    "some_variable": 1
                },
                "uVar3": {
                    "result": 23,
                    "return_value": 6,
                    "u_var3": 1
                },
                "uVar4": {
                    "additional_info2": 1,
                    "additional_message_flag": 1,
                    "assertion_expression_copy": 1,
                    "assertion_message_suffix": 1,
                    "extra_arg": 1,
                    "extra_arguments": 1,
                    "extra_info": 4,
                    "extra_info_copy": 1,
                    "extra_message": 1,
                    "file": 1,
                    "func_param": 1,
                    "function_flag": 1,
                    "function_name": 2,
                    "function_name_copy": 2,
                    "info": 1,
                    "message_suffix": 1,
                    "modifier": 1,
                    "param_4": 2,
                    "return_value_ptr": 1,
                    "some_variable2": 1,
                    "suffix": 1,
                    "temp_param_4": 1,
                    "temp_var": 1,
                    "u_var4": 1,
                    "undefined_value": 1
                }
            },
            "called": [
                "FUN_08006ac0",
                "FUN_08006174"
            ],
            "calling": [
                "FUN_08005a68"
            ],
            "code": "\nvoid handle_assertion_failed_0800611c(undefined4 file,undefined4 line_number,char *assertion_message,undefined4 function)\n\n{\n  undefined4 assertion_flag;\n  char *additional_info;\n  undefined8 result;\n  undefined4 extra_info;\n  \n  assertion_flag = *(undefined4 *)(DAT_200000f8 + 0xc);\n  extra_info = function;\n  if (assertion_message == (char *)0x0) goto LAB_08006140;\n  additional_info = \", function: \";\n  do {\n    FUN_08006174(assertion_flag,\"assertion \\\"%s\\\" failed: file \\\"%s\\\", line %d%s%s\\n\",function,file,line_number\n                 ,additional_info,assertion_message,extra_info);\n    result = FUN_08006ac0();\n    line_number = (undefined4)((ulonglong)result >> 0x20);\n    assertion_flag = (undefined4)result;\nLAB_08006140:\n    assertion_message = \"\";\n    additional_info = assertion_message;\n  } while( true );\n}\n\n",
            "current_name": "handle_assertion_failed_0800611c",
            "entrypoint": "0x0800611c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800611c": "handle_assertion_failed_0800611c",
                "param_1": "file",
                "param_2": "line_number",
                "param_3": "assertion_message",
                "param_4": "function",
                "pcVar2": "additional_info",
                "uVar1": "assertion_flag",
                "uVar3": "result",
                "uVar4": "extra_info"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006158": {
            "additional_data": {
                "FUN_08006158": {
                    "left_shift_by32_bits": 2,
                    "left_shift_param_to_long_long": 1,
                    "left_shift_to_high_bits": 1,
                    "shift_and_expand": 1,
                    "shift_left32_bits": 1,
                    "shift_left64_bits": 4,
                    "shift_left_by32": 3,
                    "shift_left_by32_bits": 8,
                    "shift_left_param_to64_bits": 1,
                    "shift_left_with_zero_fill": 2,
                    "shift_param_to_high_bits": 1,
                    "shift_param_to_long_long": 1,
                    "shift_parameter_value": 1,
                    "shift_unsigned_long_long": 2,
                    "shift_unsigned_long_long_left": 1
                },
                "param_1": {
                    "arg1": 1,
                    "data": 1,
                    "flags": 4,
                    "input": 1,
                    "input1": 2,
                    "input_param": 1,
                    "input_value": 7,
                    "number_of_bits": 1,
                    "param": 1,
                    "param1": 4,
                    "parameter1": 1,
                    "source_value": 2,
                    "undefined_value": 1,
                    "unused_parameter": 2,
                    "value": 2
                },
                "param_2": {
                    "arg2": 1,
                    "bit_count": 1,
                    "bitmask": 1,
                    "bits": 1,
                    "bits_to_shift": 1,
                    "input": 1,
                    "input2": 2,
                    "input_shift_value": 1,
                    "input_value": 2,
                    "number_of_bits": 1,
                    "number_to_shift": 1,
                    "param2": 1,
                    "shift_amount": 5,
                    "value": 8,
                    "value_to_shift": 4
                },
                "param_3": {
                    "new_parameter_name3": 1,
                    "output": 1
                },
                "param_n": {
                    "new_parameter_name_n": 1
                },
                "ulonglong": {
                    "result": 1,
                    "unsigned_long_long": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08006112"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08006160) */\n\nlonglong left_shift_by32_bits_08006158(undefined4 input_value,uint value)\n\n{\n  return (result)value << 0x20;\n}\n\n",
            "current_name": "left_shift_by32_bits_08006158",
            "entrypoint": "0x08006158",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006158": "left_shift_by32_bits_08006158",
                "param_1": "input_value",
                "param_2": "value",
                "ulonglong": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006174": {
            "additional_data": {
                "FUN_08006174": {
                    "calculate_something": 1,
                    "execute_function": 2,
                    "execute_operation": 1,
                    "execute_reverse_operation": 1,
                    "extract_data_from_binary": 1,
                    "extracted_function": 1,
                    "process_binary_function": 1,
                    "process_data": 10,
                    "reverse_bytes": 1
                },
                "FUN_08006394": {
                    "calculate_result": 1,
                    "reverse_binary": 1,
                    "reverse_bytes": 1
                },
                "param_1": {
                    "arg1": 1,
                    "data1": 1,
                    "data_param1": 1,
                    "data_pointer": 1,
                    "function_ptr": 1,
                    "input1": 15,
                    "input_param": 2,
                    "input_param1": 5,
                    "input_param_1": 1,
                    "param1": 2,
                    "parameter1": 1
                },
                "param_2": {
                    "arg2": 1,
                    "data2": 1,
                    "data_param2": 1,
                    "data_ptr": 1,
                    "input2": 15,
                    "input_param2": 5,
                    "input_param_2": 1,
                    "output_param": 1,
                    "param2": 2,
                    "param_pointer": 1,
                    "parameter2": 1
                },
                "param_3": {
                    "arg3": 1,
                    "buffer": 3,
                    "buffer1": 1,
                    "byte_array": 1,
                    "byte_param": 2,
                    "byte_pointer": 1,
                    "byte_ptr": 1,
                    "data1": 2,
                    "data_buffer": 1,
                    "data_param3": 1,
                    "data_ptr": 1,
                    "input3": 2,
                    "input_buffer": 1,
                    "input_data": 1,
                    "input_param3": 4,
                    "output1": 3,
                    "output_param_1": 1,
                    "param3": 3,
                    "pointer1": 1
                },
                "param_4": {
                    "arg4": 1,
                    "buffer2": 1,
                    "data2": 2,
                    "data_param4": 1,
                    "info_ptr": 1,
                    "input4": 2,
                    "input_param4": 4,
                    "int_array": 1,
                    "int_param": 2,
                    "int_pointer": 1,
                    "int_ptr": 1,
                    "output": 2,
                    "output2": 3,
                    "output_buffer": 1,
                    "output_data": 1,
                    "output_param_2": 1,
                    "param4": 3,
                    "pointer2": 1,
                    "processing_status": 1,
                    "result": 1
                },
                "uStack_4": {
                    "another_stack_variable": 1,
                    "data4": 1,
                    "int_output": 1,
                    "output2_buffer": 1,
                    "output2_extra": 1,
                    "output_param_4": 1,
                    "output_ptr": 1,
                    "param4_copy": 1,
                    "pointer4": 1,
                    "processed_data2": 1,
                    "stack_data2": 2,
                    "stack_param2": 2,
                    "stack_parameter2": 1,
                    "stack_variable2": 2,
                    "temp2": 3,
                    "temp_param2": 1,
                    "temp_stack2": 1,
                    "temp_stack_value2": 1,
                    "temp_var2": 4,
                    "temporary": 1
                },
                "uStack_8": {
                    "buffer_ptr": 1,
                    "byte_input": 1,
                    "data": 1,
                    "data3": 1,
                    "output1_buffer": 1,
                    "output1_extra": 1,
                    "output_param_3": 1,
                    "param3_copy": 1,
                    "pointer3": 1,
                    "processed_data1": 1,
                    "stack_data1": 2,
                    "stack_param": 1,
                    "stack_param1": 1,
                    "stack_parameter1": 1,
                    "stack_variable": 1,
                    "stack_variable1": 2,
                    "temp1": 3,
                    "temp_param1": 1,
                    "temp_stack1": 1,
                    "temp_stack_value1": 1,
                    "temp_var1": 4
                }
            },
            "called": [
                "FUN_08006394"
            ],
            "calling": [
                "FUN_0800611c"
            ],
            "code": "\nvoid process_data_08006174(undefined4 input1,undefined4 input2,undefined4 input_param3,undefined4 input_param4)\n\n{\n  undefined4 temp_var1;\n  undefined4 temp_var2;\n  \n  temp_var1 = input_param3;\n  temp_var2 = input_param4;\n  FUN_08006394(DAT_200000f8,input1,input2,&temp_var1,input1,&temp_var1);\n  return;\n}\n\n",
            "current_name": "process_data_08006174",
            "entrypoint": "0x08006174",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006174": "process_data_08006174",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input_param3",
                "param_4": "input_param4",
                "uStack_4": "temp_var2",
                "uStack_8": "temp_var1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006198": {
            "additional_data": {
                "FUNC_08007328": {
                    "cleanup": 6,
                    "cleanup_operations": 1,
                    "do_something": 1,
                    "execute_final_function": 1,
                    "execute_post_functions": 1,
                    "execute_pre_processing": 1,
                    "final_function": 1,
                    "perform_cleanup": 3,
                    "print_result": 1,
                    "reset_function": 1,
                    "reset_system": 1
                },
                "FUN_08005f5e": {
                    "execute_sub_function": 1,
                    "important_task": 1,
                    "perform_action": 1,
                    "perform_initial_check": 1,
                    "perform_task": 2,
                    "reinitialize": 1,
                    "reverse_data": 6,
                    "reverse_data_flow": 1,
                    "reverse_something": 1,
                    "reverse_string": 2,
                    "reversing_sub_function": 1
                },
                "FUN_08006198": {
                    "execute_all_functions": 2,
                    "execute_code": 1,
                    "execute_function_list": 1,
                    "execute_functions": 18,
                    "execute_sequential_functions": 1,
                    "execute_sub_functions": 6,
                    "execute_subfunctions": 1,
                    "run_functions": 1
                },
                "iVar1": {
                    "i": 2,
                    "index": 18,
                    "iteration_count": 1,
                    "iterator": 1,
                    "loop_index": 1
                }
            },
            "called": [
                "FUN_08007328",
                "FUN_08005f5e"
            ],
            "calling": [
                "entry"
            ],
            "code": "\nvoid execute_sub_functions_08006198(void)\n\n{\n  int index;\n  \n  for (index = 0; index != 0; index = index + 1) {\n    (*(code *)(&DAT_08007944)[index])();\n  }\n  FUNC_08007328();\n  for (index = 0; index != 10; index = index + 1) {\n    (*(code *)(&DAT_08007944)[index])();\n  }\n  return;\n}\n\n",
            "current_name": "execute_sub_functions_08006198",
            "entrypoint": "0x08006198",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006198": "execute_sub_functions_08006198",
                "iVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080061e0": {
            "additional_data": {
                "FUN_080061e0": {
                    "fill_array_with_value": 1,
                    "fill_memory": 13,
                    "fill_memory_block": 2,
                    "fill_memory_range": 1,
                    "fill_memory_with": 2,
                    "fill_memory_with_byte": 1,
                    "fill_with": 1,
                    "fill_with_value": 1,
                    "initialize_memory": 5,
                    "memset": 4
                },
                "end_of_memory": {
                    "end_of_memory": 1
                },
                "length": {
                    "memory_length": 1
                },
                "memory": {
                    "memory": 1
                },
                "param_1": {
                    "array": 2,
                    "buffer": 1,
                    "dest": 1,
                    "dest_pointer": 1,
                    "destination": 9,
                    "memory": 10,
                    "memory_block": 2,
                    "memory_pointer": 1,
                    "memory_start": 3,
                    "target": 1
                },
                "param_2": {
                    "value": 30,
                    "value_to_fill": 1
                },
                "param_3": {
                    "count": 1,
                    "length": 11,
                    "num_bytes": 3,
                    "num_elements": 2,
                    "num_of_bytes": 1,
                    "size": 13
                },
                "puVar1": {
                    "end": 2,
                    "end_address": 7,
                    "end_memory": 4,
                    "end_of_destination": 1,
                    "end_of_memory": 3,
                    "end_pointer": 2,
                    "end_ptr": 3,
                    "memory_end": 2
                },
                "value": {
                    "initial_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08006d14",
                "FUN_08006c40",
                "FUN_08006c88",
                "FUN_08004a4c"
            ],
            "code": "\nvoid fill_memory_block_080061e0(undefined *memory,undefined value,int size)\n\n{\n  undefined *end_address;\n  \n  end_address = memory + size;\n  for (; memory != end_address; memory = memory + 1) {\n    *memory = value;\n  }\n  return;\n}\n\n",
            "current_name": "fill_memory_block_080061e0",
            "entrypoint": "0x080061e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080061e0": "fill_memory_block_080061e0",
                "param_1": "memory",
                "param_2": "value",
                "param_3": "size",
                "puVar1": "end_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080061f0": {
            "additional_data": {
                "DAT_200005f8": {
                    "global_ptr": 1,
                    "head_ptr": 1
                },
                "FUNC_08006eac": {
                    "preprocess_data": 1,
                    "process_func_b": 1,
                    "reverse_data": 1
                },
                "FUNC_08006eae": {
                    "do_something": 1,
                    "process_func_a": 1
                },
                "FUN_080061f0": {
                    "extract_info": 1,
                    "handle_param": 1,
                    "process_data": 11,
                    "process_param": 1,
                    "rearrange_data": 1,
                    "reorder_linked_list": 1,
                    "update_data": 3,
                    "update_data_structure": 3,
                    "update_linked_list": 1,
                    "update_pointer": 1
                },
                "extraout_r1": {
                    "extra_out": 1,
                    "extra_out_ptr": 1,
                    "extra_output": 8,
                    "extra_var1": 1,
                    "temp": 1,
                    "temp1": 4,
                    "temp_ptr": 3,
                    "temp_ptr1": 3,
                    "temp_res": 1,
                    "temp_var1": 2,
                    "temporary": 1
                },
                "param_1": {
                    "data": 1,
                    "data_ptr": 1,
                    "output": 15,
                    "output_array": 3,
                    "result": 9,
                    "result_ptr": 2
                },
                "param_2": {
                    "array_size": 2,
                    "count": 3,
                    "data_length": 2,
                    "data_size": 2,
                    "input_array_length": 1,
                    "input_length": 1,
                    "input_size": 5,
                    "length": 2,
                    "num_elements": 1,
                    "size": 12
                },
                "param_3": {
                    "arg1": 1,
                    "arg3": 1,
                    "arg_1": 1,
                    "data1": 1,
                    "input1": 1,
                    "param1": 1,
                    "param3": 14,
                    "param_3": 5,
                    "param_value1": 1,
                    "unused_param": 1,
                    "value1": 4
                },
                "param_4": {
                    "arg2": 1,
                    "arg4": 1,
                    "arg_2": 1,
                    "data2": 1,
                    "input2": 1,
                    "param2": 1,
                    "param4": 14,
                    "param_4": 5,
                    "param_value2": 1,
                    "unused_param2": 1,
                    "value2": 4
                },
                "piVar3": {
                    "current_value": 1,
                    "pointer3": 1,
                    "pointer_var3": 1,
                    "temp": 1,
                    "temp4": 4,
                    "temp_int_var": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 2,
                    "temp_ptr4": 1,
                    "temp_ptr_3": 1,
                    "temp_var": 8,
                    "temp_var1": 2,
                    "temp_var3": 3,
                    "temp_var4": 2,
                    "temp_var_3": 1,
                    "tmp_ptr": 1
                },
                "ppiVar1": {
                    "curr_ptr": 1,
                    "current": 1,
                    "current_chunk": 1,
                    "current_pointer": 1,
                    "current_pointer1": 1,
                    "current_ptr": 3,
                    "current_ptr1": 1,
                    "pointer1": 1,
                    "ptr_var1": 1,
                    "temp2": 4,
                    "temp_pointer_var1": 1,
                    "temp_ptr1": 6,
                    "temp_ptr2": 3,
                    "temp_ptr_1": 2,
                    "temp_var1": 1,
                    "temp_var2": 2,
                    "temp_var_1": 1
                },
                "ppiVar2": {
                    "current_pointer2": 1,
                    "current_ptr2": 1,
                    "next": 1,
                    "next_chunk": 1,
                    "next_pointer": 1,
                    "next_ptr": 4,
                    "pointer2": 1,
                    "ptr_var2": 1,
                    "temp3": 4,
                    "temp_pointer_var2": 1,
                    "temp_ptr2": 6,
                    "temp_ptr3": 3,
                    "temp_ptr_2": 2,
                    "temp_var2": 1,
                    "temp_var3": 2,
                    "temp_var_2": 1
                },
                "ppiVar4": {
                    "pointer4": 1,
                    "prev": 1,
                    "prev_chunk": 1,
                    "prev_ptr": 2,
                    "previous_pointer": 1,
                    "previous_ptr": 1,
                    "ptr1": 1,
                    "ptr_var4": 1,
                    "temp5": 4,
                    "temp_pointer1": 1,
                    "temp_pointer_var3": 1,
                    "temp_ptr1": 1,
                    "temp_ptr3": 4,
                    "temp_ptr4": 4,
                    "temp_ptr5": 1,
                    "temp_ptr_3": 1,
                    "temp_ptr_4": 1,
                    "temp_var4": 1,
                    "temp_var5": 2,
                    "temp_var_4": 1
                },
                "ppiVar5": {
                    "adjusted_ptr": 3,
                    "chunk_ptr": 1,
                    "current_pointer": 1,
                    "new_node": 1,
                    "new_ptr": 2,
                    "pointer5": 1,
                    "ptr2": 1,
                    "ptr_var5": 1,
                    "temp6": 4,
                    "temp_pointer2": 1,
                    "temp_ptr2": 1,
                    "temp_ptr4": 2,
                    "temp_ptr5": 3,
                    "temp_ptr6": 1,
                    "temp_ptr_4": 1,
                    "temp_ptr_5": 1,
                    "temp_var5": 1,
                    "temp_var6": 2,
                    "temp_var_5": 1,
                    "updated_pointer": 1,
                    "updated_ptr": 1
                }
            },
            "called": [
                "FUN_08006eae",
                "FUN_08006eac"
            ],
            "calling": [
                "FUN_08006ac0",
                "FUN_080069e4"
            ],
            "code": "\nvoid process_data_080061f0(undefined4 *output,int size,undefined4 param3,undefined4 param4)\n\n{\n  int **extra_output;\n  int **temp_ptr1;\n  int **temp_ptr2;\n  int *temp_var;\n  int **temp_ptr3;\n  int **temp6;\n  \n  if (size == 0) {\n    return;\n  }\n  temp6 = (int **)(size + -4);\n  if (*(int *)(size + -4) < 0) {\n    temp6 = (int **)((int)temp6 + *(int *)(size + -4));\n  }\n  FUNC_08006eac();\n  temp_ptr2 = (int **)&DAT_200005f8;\n  if (DAT_200005f8 == (int **)0x0) {\n    temp6[1] = (int *)0x0;\n    temp_ptr1 = extra_output;\n    DAT_200005f8 = temp6;\n  }\n  else {\n    temp_ptr2 = DAT_200005f8;\n    if (temp6 < DAT_200005f8) {\n      temp_ptr1 = (int **)*temp6;\n      temp_ptr2 = (int **)((int)temp6 + (int)temp_ptr1);\n      if (DAT_200005f8 == temp_ptr2) {\n        temp_var = *DAT_200005f8;\n        DAT_200005f8 = (int **)DAT_200005f8[1];\n        temp_ptr2 = (int **)((int)temp_var + (int)temp_ptr1);\n        *temp6 = (int *)temp_ptr2;\n      }\n      temp6[1] = (int *)DAT_200005f8;\n      DAT_200005f8 = temp6;\n    }\n    else {\n      do {\n        temp_ptr3 = temp_ptr2;\n        temp_ptr2 = (int **)temp_ptr3[1];\n        if (temp_ptr2 == (int **)0x0) break;\n      } while (temp_ptr2 <= temp6);\n      temp_ptr1 = (int **)*temp_ptr3;\n      if ((int **)((int)temp_ptr3 + (int)temp_ptr1) == temp6) {\n        temp_ptr1 = (int **)((int)temp_ptr1 + (int)*temp6);\n        *temp_ptr3 = (int *)temp_ptr1;\n        if (temp_ptr2 == (int **)((int)temp_ptr3 + (int)temp_ptr1)) {\n          temp_var = *temp_ptr2;\n          temp_ptr2 = (int **)temp_ptr2[1];\n          temp_ptr1 = (int **)((int)temp_ptr1 + (int)temp_var);\n          *temp_ptr3 = (int *)temp_ptr1;\n          temp_ptr3[1] = (int *)temp_ptr2;\n        }\n      }\n      else if (temp6 < (int **)((int)temp_ptr3 + (int)temp_ptr1)) {\n        *output = 0xc;\n      }\n      else {\n        temp_ptr1 = (int **)((int)temp6 + (int)*temp6);\n        if (temp_ptr2 == temp_ptr1) {\n          temp_var = *temp_ptr2;\n          temp_ptr2 = (int **)temp_ptr2[1];\n          temp_ptr1 = (int **)((int)temp_var + (int)*temp6);\n          *temp6 = (int *)temp_ptr1;\n        }\n        temp6[1] = (int *)temp_ptr2;\n        temp_ptr3[1] = (int *)temp6;\n      }\n    }\n  }\n  FUNC_08006eae(output,temp_ptr1,temp_ptr2,param4);\n  return;\n}\n\n",
            "current_name": "process_data_080061f0",
            "entrypoint": "0x080061f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080061f0": "process_data_080061f0",
                "extraout_r1": "extra_output",
                "param_1": "output",
                "param_2": "size",
                "param_3": "param3",
                "param_4": "param4",
                "piVar3": "temp_var",
                "ppiVar1": "temp_ptr1",
                "ppiVar2": "temp_ptr2",
                "ppiVar4": "temp_ptr3",
                "ppiVar5": "temp6"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006288": {
            "additional_data": {
                "DAT_200005f8": {
                    "first_block": 3,
                    "head_node": 1,
                    "linked_list_head": 1,
                    "memory_list": 1
                },
                "DAT_200005fc": {
                    "initialized": 6
                },
                "FUNC_08006eac": {
                    "initialize_blocks": 1,
                    "initialize_memory": 4,
                    "initialize_memory_block": 1,
                    "initialize_memory_manager": 2,
                    "initialize_resources": 1
                },
                "FUNC_08006eae": {
                    "clean_up": 1,
                    "clean_up_memory": 1,
                    "cleanup": 1,
                    "cleanup_memory": 2,
                    "cleanup_resources": 1,
                    "free_memory_block": 4,
                    "release_memory_block": 1
                },
                "FUN_08006288": {
                    "allocate_and_initialize": 1,
                    "allocate_and_set_data": 1,
                    "allocate_and_store_memory": 1,
                    "allocate_memory": 16,
                    "allocate_memory_block": 10,
                    "reallocate_memory": 1,
                    "reallocate_memory_block": 1
                },
                "FUN_08006920": {
                    "allocate_additional_memory": 2,
                    "allocate_block": 2,
                    "allocate_memory": 2,
                    "allocate_memory_block": 1,
                    "allocate_more_memory": 1,
                    "allocate_new_memory_block": 1,
                    "create_memory_block": 1,
                    "find_free_block": 1
                },
                "iVar2": {
                    "block_difference": 2,
                    "block_size": 3,
                    "block_size_diff": 1,
                    "difference": 14,
                    "offset": 3,
                    "remaining_size": 2,
                    "remaining_space": 3,
                    "size_difference": 2,
                    "temp_var": 1
                },
                "param_1": {
                    "block": 1,
                    "block_pointer": 1,
                    "mem_address": 1,
                    "memory_block": 1,
                    "output": 2,
                    "output_address_ptr": 1,
                    "output_buffer": 2,
                    "output_ptr": 7,
                    "ptr_result": 1,
                    "result": 11,
                    "result_ptr": 2
                },
                "param_2": {
                    "block_size": 1,
                    "data_size": 1,
                    "input_size": 2,
                    "requested_size": 3,
                    "required_size": 1,
                    "size": 23
                },
                "puVar1": {
                    "current": 2,
                    "current_block": 22,
                    "current_block_ptr": 1,
                    "current_node": 2,
                    "current_ptr": 3,
                    "next_ptr": 1
                },
                "puVar3": {
                    "current_block": 1,
                    "current_node_next": 1,
                    "current_ptr": 1,
                    "next_block": 8,
                    "next_ptr": 2,
                    "prev_block": 1,
                    "previous": 1,
                    "previous_block": 13,
                    "previous_node": 1,
                    "previous_ptr": 1,
                    "temp": 1
                },
                "puVar5": {
                    "block_to_modify": 1,
                    "current_node_previous": 1,
                    "last_block": 6,
                    "last_ptr": 1,
                    "new_block": 1,
                    "next_block": 1,
                    "prev_prev_block": 1,
                    "prev_ptr": 1,
                    "previous": 1,
                    "previous_block": 9,
                    "previous_block_next": 2,
                    "previous_next": 1,
                    "previous_node": 1,
                    "previous_previous_block": 1,
                    "previous_previous_ptr": 1,
                    "previous_ptr": 1,
                    "updated_previous_block": 1
                },
                "uVar4": {
                    "block_difference": 9,
                    "block_difference_check": 1,
                    "block_size_diff": 1,
                    "block_size_difference": 3,
                    "diff": 3,
                    "difference": 5,
                    "difference_check": 1,
                    "node_difference": 1,
                    "offset": 1,
                    "remaining": 1,
                    "remaining_size": 1,
                    "size_difference": 3
                },
                "uVar6": {
                    "aligned_size": 4,
                    "allocated_size": 14,
                    "block_size": 4,
                    "new_block_size": 8,
                    "new_size": 1
                }
            },
            "called": [
                "FUN_08006eae",
                "FUN_08006eac",
                "FUN_08006920"
            ],
            "calling": [
                "FUN_08006e10",
                "FUN_08006c88"
            ],
            "code": "\nuint allocate_memory_block_08006288(undefined4 *result,uint size)\n\n{\n  uint *current_block;\n  int difference;\n  uint *previous_block;\n  uint block_difference;\n  uint *previous_block;\n  uint allocated_size;\n  \n  allocated_size = (size + 3 & 0xfffffffc) + 8;\n  if (allocated_size < 0xc) {\n    allocated_size = 0xc;\n  }\n  if (((int)allocated_size < 0) || (allocated_size < size)) {\n    *result = 0xc;\n  }\n  else {\n    FUNC_08006eac();\n    current_block = DAT_200005f8;\n    previous_block = DAT_200005f8;\n    while (previous_block = current_block, previous_block != (uint *)0x0) {\n      block_difference = *previous_block - allocated_size;\n      if (-1 < (int)block_difference) {\n        if (block_difference < 0xc) {\n          if (previous_block == previous_block) {\n            current_block = (uint *)previous_block[1];\n            DAT_200005f8 = current_block;\n          }\n          else {\n            current_block = (uint *)previous_block[1];\n          }\n          if (previous_block != previous_block) {\n            previous_block[1] = (uint)current_block;\n            previous_block = previous_block;\n          }\n        }\n        else {\n          *previous_block = block_difference;\n          *(uint *)((int)previous_block + block_difference) = allocated_size;\n          previous_block = (uint *)((int)previous_block + block_difference);\n        }\n        goto LAB_080062ec;\n      }\n      previous_block = previous_block;\n      current_block = (uint *)previous_block[1];\n    }\n    if (DAT_200005fc == 0) {\n      DAT_200005fc = FUN_08006920(result);\n    }\n    current_block = (uint *)FUN_08006920(result,allocated_size);\n    if ((current_block != (uint *)0xffffffff) &&\n       ((previous_block = (uint *)((int)current_block + 3U & 0xfffffffc), current_block == previous_block ||\n        (difference = FUN_08006920(result,(int)previous_block - (int)current_block), difference != -1)))) {\n      *previous_block = allocated_size;\nLAB_080062ec:\n      FUNC_08006eae(result);\n      allocated_size = (int)previous_block + 0xbU & 0xfffffff8;\n      difference = allocated_size - (int)(previous_block + 1);\n      if (difference != 0) {\n        *(int *)((int)previous_block + difference) = -difference;\n        return allocated_size;\n      }\n      return allocated_size;\n    }\n    *result = 0xc;\n    FUNC_08006eae(result);\n  }\n  return 0;\n}\n\n",
            "current_name": "allocate_memory_block_08006288",
            "entrypoint": "0x08006288",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006288": "allocate_memory_block_08006288",
                "iVar2": "difference",
                "param_1": "result",
                "param_2": "size",
                "puVar1": "current_block",
                "puVar3": "previous_block",
                "puVar5": "previous_block",
                "uVar4": "block_difference",
                "uVar6": "allocated_size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006344": {
            "additional_data": {
                "DAT_080078e4": {
                    "const3": 1,
                    "dat_080078e4": 1,
                    "data_3": 2
                },
                "DAT_08007904": {
                    "const1": 1,
                    "dat_08007904": 1,
                    "data_1": 2
                },
                "DAT_08007924": {
                    "const2": 1,
                    "dat_08007924": 1,
                    "data_2": 2
                },
                "FUM_08006cb4": {
                    "handle_null_pointer": 1
                },
                "FUN_08006344": {
                    "decode_byte": 1,
                    "process_byte": 4,
                    "process_data": 1,
                    "process_input": 23,
                    "process_parameter": 1,
                    "read_and_store_byte": 1
                },
                "FUN_080069e4": {
                    "calculate_offset": 1,
                    "calculate_value": 3,
                    "check_condition": 3,
                    "decode_helper": 1,
                    "process_sub_func1": 1,
                    "process_sub_function1": 1,
                    "reverse_bytes": 1,
                    "subfunction1": 1,
                    "validate_input": 2
                },
                "FUN_08006be0": {
                    "check_buffer_limit": 1,
                    "check_condition": 2,
                    "perform_operation": 4,
                    "process_buffer": 1,
                    "process_data": 1,
                    "process_sub_func3": 1,
                    "process_sub_function3": 1,
                    "subfunction3": 1,
                    "update_state": 1,
                    "update_variables": 1,
                    "validate_input": 1
                },
                "FUN_08006cb4": {
                    "execute_function": 1,
                    "handle_condition": 1,
                    "handle_error": 1,
                    "handle_null": 1,
                    "handle_special_case": 1,
                    "handle_zero_input": 1,
                    "perform_action": 5,
                    "process_sub_func2": 1,
                    "process_sub_function2": 1,
                    "subfunction2": 1
                },
                "FUn_080069e4": {
                    "check_condition": 1
                },
                "iVar1": {
                    "index": 2,
                    "temp1": 2,
                    "temp_length": 1,
                    "temp_value": 1,
                    "temp_var": 4,
                    "temp_var1": 13,
                    "temp_var_1": 1
                },
                "param_1": {
                    "arg1": 3,
                    "argument1": 1,
                    "context": 1,
                    "data": 4,
                    "data_ptr": 1,
                    "data_structure": 1,
                    "input": 3,
                    "input_1": 1,
                    "input_data": 3,
                    "input_param": 3,
                    "input_param1": 2,
                    "input_pointer": 1,
                    "input_ptr": 1,
                    "param": 1,
                    "param1": 3,
                    "pointer": 1,
                    "ptr": 1
                },
                "param_2": {
                    "byte": 1,
                    "byte_data": 1,
                    "byte_input": 1,
                    "byte_to_decode": 1,
                    "byte_val": 4,
                    "byte_value": 7,
                    "data": 1,
                    "input_2": 1,
                    "input_byte": 10,
                    "input_param2": 2,
                    "new_byte": 1,
                    "param2": 1
                },
                "param_3": {
                    "buffer": 6,
                    "byte_array": 3,
                    "byte_pointer": 2,
                    "byte_ptr_ptr": 1,
                    "bytes": 1,
                    "data": 2,
                    "data_array": 2,
                    "data_pointer": 1,
                    "data_ptr_ptr": 1,
                    "input_3": 1,
                    "input_array": 2,
                    "input_buffer": 1,
                    "input_data": 1,
                    "input_param3": 2,
                    "input_ptr": 2,
                    "input_ptr_ptr": 1,
                    "param3": 1,
                    "ptr_arr": 1
                },
                "pbVar2": {
                    "array_ptr": 1,
                    "buffer_length": 1,
                    "buffer_ptr": 1,
                    "byte_ptr": 1,
                    "end_of_buffer": 1,
                    "end_pointer": 2,
                    "index": 1,
                    "last_byte": 2,
                    "last_ptr": 1,
                    "ptr1": 1,
                    "ptr_2": 1,
                    "temp2": 2,
                    "temp_buffer": 1,
                    "temp_var2": 14,
                    "temp_var_2": 1
                },
                "pbVar3": {
                    "data_ptr": 1,
                    "offset_byte": 1,
                    "offset_pointer": 1,
                    "pb_var3": 1,
                    "ptr": 1,
                    "ptr2": 1,
                    "ptr_3": 1,
                    "temp3": 2,
                    "temp_pointer": 1,
                    "temp_ptr": 1,
                    "temp_var3": 14,
                    "temp_var_3": 1,
                    "ushort_buffer": 1,
                    "ushort_pointer": 1,
                    "ushort_ptr": 2,
                    "ushort_value": 1
                },
                "uVar4": {
                    "byte_result": 1,
                    "byte_val_converted": 1,
                    "converted_input": 1,
                    "decoded_byte": 1,
                    "output": 1,
                    "result": 15,
                    "return_val": 2,
                    "return_value": 9
                }
            },
            "called": [
                "FUN_080069e4",
                "FUN_08006cb4",
                "FUN_08006be0"
            ],
            "calling": [
                "FUN_08006370"
            ],
            "code": "\nuint process_input_08006344(int data,byte input_byte,byte **buffer)\n\n{\n  int temp_var1;\n  byte *temp_var2;\n  byte *temp_var3;\n  uint result;\n  \n  temp_var2 = buffer[2] + -1;\n  buffer[2] = temp_var2;\n  if ((-1 < (int)temp_var2) ||\n     (((int)buffer[6] <= (int)temp_var2 && (temp_var2 = (byte *)(uint)input_byte, temp_var2 != (byte *)0xa))))\n  {\n    temp_var2 = *buffer;\n    *buffer = temp_var2 + 1;\n    *temp_var2 = input_byte;\n    return (uint)input_byte;\n  }\n  if ((data != 0) && (*(int *)(data + 0x18) == 0)) {\n    FUN_08006cb4();\n  }\n  if (buffer == (byte **)&DAT_08007904) {\n    buffer = *(byte ***)(data + 4);\n  }\n  else if (buffer == (byte **)&DAT_08007924) {\n    buffer = *(byte ***)(data + 8);\n  }\n  else if (buffer == (byte **)&DAT_080078e4) {\n    buffer = *(byte ***)(data + 0xc);\n  }\n  buffer[2] = buffer[6];\n  temp_var3 = (byte *)(uint)*(ushort *)(buffer + 3);\n  temp_var1 = (int)temp_var3 << 0x1c;\n  if (((temp_var1 < 0) && (temp_var3 = buffer[4], temp_var3 != (byte *)0x0)) ||\n     (temp_var1 = FUN_080069e4(data,buffer,temp_var1,temp_var3,temp_var2), temp_var1 == 0)) {\n    result = (uint)input_byte;\n    temp_var1 = (int)*buffer - (int)buffer[4];\n    if ((temp_var1 < (int)buffer[5]) || (temp_var1 = FUN_08006be0(data,buffer), temp_var1 == 0)) {\n      buffer[2] = buffer[2] + -1;\n      temp_var2 = *buffer;\n      *buffer = temp_var2 + 1;\n      *temp_var2 = input_byte;\n      if ((byte *)(temp_var1 + 1) != buffer[5]) {\n        if (-1 < (int)((uint)*(ushort *)(buffer + 3) << 0x1f)) {\n          return result;\n        }\n        if (result != 10) {\n          return result;\n        }\n      }\n      temp_var1 = FUN_08006be0(data,buffer);\n      if (temp_var1 == 0) {\n        return result;\n      }\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "process_input_08006344",
            "entrypoint": "0x08006344",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006344": "process_input_08006344",
                "iVar1": "temp_var1",
                "param_1": "data",
                "param_2": "input_byte",
                "param_3": "buffer",
                "pbVar2": "temp_var2",
                "pbVar3": "temp_var3",
                "uVar4": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006370": {
            "additional_data": {
                "FUN_08006370": {
                    "check_and_process_data": 1,
                    "find_index": 1,
                    "iterate_and_call_function": 1,
                    "iterate_and_process": 2,
                    "iterate_and_process_bytes": 1,
                    "process_array": 5,
                    "process_data": 19,
                    "reverse_and_increment": 1
                },
                "iVar1": {
                    "index": 1,
                    "result": 26,
                    "result_index": 2,
                    "return_value": 2
                },
                "iVar3": {
                    "array_index": 1,
                    "counter": 3,
                    "current_index": 13,
                    "current_length": 7,
                    "current_position": 1,
                    "current_size": 4,
                    "data_index": 1,
                    "index": 1
                },
                "param_1": {
                    "arg1": 2,
                    "argument_1": 2,
                    "first_param": 1,
                    "input1": 4,
                    "input_1": 3,
                    "input_param": 2,
                    "input_param_1": 2,
                    "input_parameter": 1,
                    "input_size": 2,
                    "input_value": 2,
                    "param1": 3,
                    "some_param": 1,
                    "value1": 3,
                    "value_1": 2,
                    "var1": 1
                },
                "param_2": {
                    "another_param": 1,
                    "another_parameter": 1,
                    "arg2": 2,
                    "argument_2": 2,
                    "current_byte": 1,
                    "input2": 4,
                    "input_2": 3,
                    "input_param_2": 2,
                    "output_param": 2,
                    "output_value": 1,
                    "param2": 4,
                    "second_param": 1,
                    "target_value": 1,
                    "value2": 3,
                    "value_2": 2,
                    "var2": 1
                },
                "param_3": {
                    "array": 5,
                    "buffer": 1,
                    "byte_array": 3,
                    "data": 11,
                    "data_array": 4,
                    "data_pointer": 1,
                    "data_ptr": 4,
                    "input_array": 2
                },
                "param_4": {
                    "array_length": 10,
                    "data_length": 3,
                    "data_size": 4,
                    "length": 9,
                    "size": 5
                },
                "puVar2": {
                    "current_element": 1,
                    "end": 1,
                    "end_address": 2,
                    "end_of_array": 6,
                    "end_of_data": 4,
                    "end_pointer": 2,
                    "end_ptr": 15
                }
            },
            "called": [
                "FUN_08006344"
            ],
            "calling": [
                "FUN_08006394"
            ],
            "code": "\nint check_and_process_data_08006370(undefined4 input1,undefined4 input2,undefined *data,int array_length)\n\n{\n  int result;\n  undefined *end_ptr;\n  int current_index;\n  \n  end_ptr = data + array_length;\n  current_index = array_length;\n  do {\n    if (data == end_ptr) {\n      return 0;\n    }\n    result = FUN_08006344(input1,*data,input2,array_length,current_index);\n    array_length = result + 1;\n    data = data + 1;\n  } while (array_length != 0);\n  return result;\n}\n\n",
            "current_name": "check_and_process_data_08006370",
            "entrypoint": "0x08006370",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006370": "check_and_process_data_08006370",
                "iVar1": "result",
                "iVar3": "current_index",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "data",
                "param_4": "array_length",
                "puVar2": "end_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006394": {
            "additional_data": {
                "FUN_08006370": {
                    "copy_string": 1,
                    "handle_format_specifier": 1,
                    "process_bytes": 1,
                    "process_data": 2,
                    "process_data_field": 1
                },
                "FUN_08006394": {
                    "analyze_data": 1,
                    "decode_and_process": 1,
                    "extract_binary_data": 1,
                    "extract_data_from_binary": 1,
                    "parse_and_process_data": 3,
                    "parse_arguments": 1,
                    "parse_data": 1,
                    "parse_format_string": 2,
                    "parse_input": 2,
                    "process_data": 4,
                    "process_input": 2,
                    "process_parameters": 1,
                    "process_string": 1
                },
                "FUN_080066b0": {
                    "convert_arg_to_binary": 1,
                    "convert_data": 1,
                    "convert_numeric": 1,
                    "execute_conversion": 1,
                    "process_conversion_specifier": 1,
                    "process_specifier": 1
                },
                "FUN_080069e4": {
                    "check_condition": 1,
                    "check_if_pointer_valid": 1,
                    "check_specifier_validity": 1,
                    "validate_data_length": 1,
                    "validate_format_specifier": 1,
                    "verify_parameters": 1
                },
                "FUN_08006cb4": {
                    "handle_error": 2,
                    "handle_null_pointer": 1,
                    "some_function": 1,
                    "warning_message": 1
                },
                "FUN_08006e90": {
                    "find_char_in_string": 3,
                    "find_char_index": 1,
                    "find_character": 1,
                    "get_character_class": 1
                },
                "FUX_08006cb4": {
                    "check_for_null_arg_list": 1
                },
                "bVar3": {
                    "bool_var": 1,
                    "condition": 1,
                    "flag": 4,
                    "flag_value": 1,
                    "flag_var": 1,
                    "found_digit": 2,
                    "found_digits": 1,
                    "found_flag": 1,
                    "found_number": 1,
                    "has_digit": 1,
                    "is_number": 5,
                    "is_numeric": 6,
                    "is_true": 3,
                    "is_valid": 1,
                    "is_valid_number": 1
                },
                "iVar1": {
                    "result": 25,
                    "result_code": 1,
                    "result_var": 1,
                    "return_value": 2,
                    "status": 1
                },
                "iVar6": {
                    "counter": 1,
                    "i_var": 1,
                    "iteration_var": 1,
                    "iteration_variable": 1,
                    "loop_var": 1,
                    "num": 1,
                    "num_digits": 1,
                    "sub_result2": 1,
                    "temp": 3,
                    "temp_int": 1,
                    "temp_var": 8,
                    "temp_var2": 3,
                    "temp_var_2": 2,
                    "temporary_value": 1,
                    "value": 3,
                    "var1": 1
                },
                "local_30": {
                    "alignment_flag": 1,
                    "alternate_flag": 1,
                    "asterisk": 1,
                    "asterisk_width": 1,
                    "const4": 1,
                    "constant4": 1,
                    "error": 1,
                    "hash": 1,
                    "hash_flag": 1,
                    "length_modifier": 3,
                    "local_var": 1,
                    "local_var11": 1,
                    "local_var3": 1,
                    "local_var30": 1,
                    "local_var5": 1,
                    "local_var_30": 1,
                    "mask4": 1,
                    "pointer": 1,
                    "temp2": 3,
                    "temp_value3": 1,
                    "temp_var": 1,
                    "unknown": 1,
                    "unused_flag": 1,
                    "zero_flag": 2,
                    "zero_padding": 1
                },
                "local_45": {
                    "alignment": 2,
                    "alternate_form": 1,
                    "alternate_form_flag": 1,
                    "byte_var3": 1,
                    "const3": 1,
                    "constant3": 1,
                    "flag": 1,
                    "flag3": 2,
                    "flag5": 1,
                    "flags2": 1,
                    "hash": 1,
                    "hash_flag": 2,
                    "local_byte4": 1,
                    "local_char": 1,
                    "local_var10": 1,
                    "mask3": 1,
                    "pad_char": 1,
                    "prefix_char": 1,
                    "sign": 2,
                    "sign_flag": 2,
                    "temp_byte4": 1,
                    "temp_var": 1,
                    "zero": 1,
                    "zero_flag": 3
                },
                "local_6e": {
                    "0x30": 1,
                    "byte_var2": 1,
                    "char_y": 1,
                    "const2": 1,
                    "constant2": 1,
                    "flag2": 2,
                    "flag4": 1,
                    "flag_b": 1,
                    "local_byte3": 1,
                    "local_flag3": 1,
                    "local_var9": 1,
                    "mask2": 1,
                    "plus": 3,
                    "plus_flag": 10,
                    "sign_flag": 1,
                    "temp_byte3": 1,
                    "temp_var": 1,
                    "zero_pad": 1
                },
                "local_6f": {
                    "0x20": 1,
                    "alternate_form": 1,
                    "byte_var1": 1,
                    "char_x": 1,
                    "const1": 1,
                    "constant": 1,
                    "flag1": 2,
                    "flag3": 1,
                    "flag_a": 1,
                    "local_byte2": 1,
                    "local_flag2": 1,
                    "local_var8": 1,
                    "mask1": 1,
                    "space": 3,
                    "space_flag": 11,
                    "temp_byte2": 1,
                    "temp_var": 1
                },
                "local_70": {
                    "ch": 1,
                    "character": 1,
                    "conversion": 1,
                    "conversion_character": 1,
                    "conversion_specifier": 9,
                    "conversion_type": 1,
                    "current_byte": 2,
                    "current_char": 3,
                    "format_char": 3,
                    "format_specifier": 1,
                    "local_byte1": 1,
                    "local_var7": 1,
                    "specifier": 3,
                    "temp_byte": 1,
                    "temp_var": 1,
                    "type": 1
                },
                "local_74": {
                    "bytes_processed": 1,
                    "local_var4": 1,
                    "local_var6": 1,
                    "output_count": 1,
                    "output_length": 1,
                    "output_size": 1,
                    "processed_bytes": 1,
                    "total": 1,
                    "total_bytes": 2,
                    "total_bytes_written": 2,
                    "total_characters": 2,
                    "total_counter": 1,
                    "total_extracted_chars": 1,
                    "total_len": 2,
                    "total_length": 10,
                    "total_size": 3
                },
                "local_7c": {
                    "counter": 1,
                    "field_length": 1,
                    "field_width": 3,
                    "input_value": 1,
                    "integer_value": 1,
                    "length": 1,
                    "local_var2": 1,
                    "local_var3": 1,
                    "local_var5": 1,
                    "local_var_7c": 1,
                    "num": 1,
                    "num_space_or_dash": 1,
                    "numeric_value2": 1,
                    "precision": 2,
                    "sub_counter": 1,
                    "temp_value2": 1,
                    "temp_var": 1,
                    "width": 11
                },
                "local_80": {
                    "alignment": 1,
                    "format_specifier": 1,
                    "length2": 1,
                    "local_value": 1,
                    "local_var": 1,
                    "local_var2": 1,
                    "local_var4": 1,
                    "local_var80": 1,
                    "local_var_80": 1,
                    "optional_width": 1,
                    "padding": 3,
                    "padding_char": 2,
                    "size": 1,
                    "temp": 1,
                    "temp1": 1,
                    "temp_field_width": 1,
                    "temp_value": 2,
                    "temp_var": 1,
                    "temp_var2": 1,
                    "temp_var3": 1,
                    "temp_var_3": 1,
                    "temporary_value": 1,
                    "unknown": 1,
                    "unused_var": 1,
                    "width": 3
                },
                "local_84": {
                    "accuracy": 1,
                    "decimal_places": 1,
                    "field_width": 1,
                    "flag2": 1,
                    "length1": 1,
                    "local_temp": 1,
                    "local_var1": 1,
                    "local_var3": 1,
                    "loop_counter": 1,
                    "modifier_value": 1,
                    "negative_value": 1,
                    "numeric_value": 1,
                    "precision": 16,
                    "temp_var": 1,
                    "width": 2
                },
                "local_88": {
                    "flag1": 1,
                    "flag_bits": 1,
                    "flag_value": 1,
                    "flag_var": 1,
                    "flags": 22,
                    "format_flags": 1,
                    "local_flag": 2,
                    "local_var2": 1,
                    "modifier": 1
                },
                "local_8c": {
                    "arg_index": 1,
                    "counter_ptr": 3,
                    "error_code_ptr": 1,
                    "int_pointer": 1,
                    "local_arr": 1,
                    "local_array": 1,
                    "local_ptr": 1,
                    "local_var1": 1,
                    "local_variables": 2,
                    "output": 2,
                    "output_length_ptr": 2,
                    "output_param": 1,
                    "output_pointer": 2,
                    "output_ptr": 6,
                    "output_ptr_local": 1,
                    "output_size_ptr": 2,
                    "param_list": 1,
                    "pointer_array": 1,
                    "ptr_stack": 1
                },
                "param_1": {
                    "arg1": 2,
                    "binary_data": 1,
                    "binary_param": 1,
                    "data": 4,
                    "data_ptr": 1,
                    "data_size": 1,
                    "format_string": 2,
                    "input": 5,
                    "input1": 1,
                    "input_buffer": 1,
                    "input_data": 3,
                    "input_param": 3,
                    "input_ptr": 2,
                    "input_size": 1,
                    "input_struct": 1,
                    "input_value1": 1,
                    "param_1": 1
                },
                "param_2": {
                    "arg2": 2,
                    "arg_list": 1,
                    "config": 2,
                    "data_param": 2,
                    "data_ptr": 1,
                    "extra_param": 1,
                    "format": 1,
                    "format_arguments": 1,
                    "format_ptr": 1,
                    "format_specifier": 8,
                    "info": 1,
                    "input2": 1,
                    "input_param": 1,
                    "input_value2": 1,
                    "options": 1,
                    "output_data": 1,
                    "param_2": 1,
                    "param_ptr": 1,
                    "parameter_list": 1,
                    "search_string": 1,
                    "setting_param": 1
                },
                "param_3": {
                    "arg3": 1,
                    "buffer": 1,
                    "buffer_param": 1,
                    "byte_array": 2,
                    "data": 1,
                    "data_buffer": 1,
                    "data_string": 1,
                    "format_string": 2,
                    "input": 1,
                    "input_buffer": 1,
                    "input_bytes": 2,
                    "input_data": 1,
                    "input_str": 1,
                    "input_string": 5,
                    "output_buffer": 2,
                    "output_data": 1,
                    "output_string": 2,
                    "param_3": 1,
                    "pattern": 1,
                    "string": 2,
                    "string_param": 1
                },
                "param_4": {
                    "arg4": 2,
                    "bytes_written": 2,
                    "counter": 2,
                    "counter_param": 1,
                    "error_code": 1,
                    "input4": 1,
                    "length": 2,
                    "output": 3,
                    "output_counter": 1,
                    "output_length": 3,
                    "output_param": 4,
                    "output_ptr": 2,
                    "output_size": 3,
                    "output_value": 2,
                    "param_4": 1,
                    "total_chars_extracted": 1
                },
                "pbVar4": {
                    "buffer_pointer": 1,
                    "buffer_ptr": 1,
                    "byte_pointer1": 1,
                    "byte_pointer_var1": 1,
                    "byte_ptr": 3,
                    "byte_ptr1": 3,
                    "current_byte": 3,
                    "current_char": 8,
                    "current_char_ptr": 1,
                    "input_ptr": 1,
                    "p": 1,
                    "pointer_to_byte": 1,
                    "ptr": 2,
                    "ptr1": 1,
                    "ptr_byte1": 1,
                    "string_ptr": 1
                },
                "pbVar5": {
                    "byte_pointer2": 1,
                    "byte_pointer_var2": 1,
                    "byte_ptr2": 4,
                    "current_byte": 3,
                    "current_char": 2,
                    "current_pointer": 1,
                    "end_input_ptr": 1,
                    "next_byte": 3,
                    "next_char": 7,
                    "next_char_ptr": 1,
                    "prev_char": 1,
                    "ptr2": 1,
                    "ptr_byte2": 1,
                    "ptr_current": 1,
                    "string_ptr": 1,
                    "temp_ptr": 1
                },
                "piVar2": {
                    "count_ptr": 1,
                    "counter": 1,
                    "counter_ptr": 2,
                    "int_ptr": 1,
                    "local_array": 1,
                    "local_counter": 1,
                    "output_length_ptr": 1,
                    "output_ptr": 1,
                    "output_size_ptr": 1,
                    "pointer": 2,
                    "pointer_value": 1,
                    "pointer_var": 3,
                    "ptr": 4,
                    "ptr_var": 3,
                    "temp": 1,
                    "temp_pointer": 2,
                    "temp_ptr": 3,
                    "temp_var": 1
                },
                "unaff_r9": {
                    "additional_value": 1,
                    "offset": 1,
                    "output": 1,
                    "result": 1,
                    "result_size": 1,
                    "return_value": 2,
                    "status": 2,
                    "sub_result": 1,
                    "temp": 2,
                    "temp_register": 1,
                    "temp_value": 1,
                    "temp_var": 5,
                    "temp_var1": 1,
                    "temporary_variable": 1,
                    "unaff_param": 1,
                    "unaff_r9": 4,
                    "unaffected_reg": 1,
                    "unaffected_register": 1,
                    "unknown": 1,
                    "unused": 1
                }
            },
            "called": [
                "FUN_08006e90",
                "FUN_080069e4",
                "FUN_08006370",
                "FUN_08006cb4",
                "FUN_080066b0"
            ],
            "calling": [
                "FUN_08006174",
                "FUN_080068f0"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08006568) */\n\nint parse_and_process_data_08006394(int input,undefined4 *format_specifier,byte *input_string,int *output_param)\n\n{\n  int result;\n  int *ptr;\n  bool is_numeric;\n  byte *current_char;\n  byte *next_char;\n  int temp_var;\n  int temp_var;\n  int *output_ptr;\n  uint flags;\n  int precision;\n  undefined4 width;\n  int width;\n  int total_length;\n  byte conversion_specifier;\n  undefined space_flag;\n  undefined plus_flag;\n  undefined zero_flag;\n  undefined4 temp2;\n  \n  output_ptr = output_param;\n  if ((input != 0) && (*(int *)(input + 0x18) == 0)) {\n    FUN_08006cb4();\n  }\n  if (format_specifier == &DAT_08007904) {\n    format_specifier = *(undefined4 **)(input + 4);\n  }\n  else if (format_specifier == (undefined4 *)&DAT_08007924) {\n    format_specifier = *(undefined4 **)(input + 8);\n  }\n  else if (format_specifier == (undefined4 *)&DAT_080078e4) {\n    format_specifier = *(undefined4 **)(input + 0xc);\n  }\n  if (((-1 < (int)((uint)*(ushort *)(format_specifier + 3) << 0x1c)) || (format_specifier[4] == 0)) &&\n     (temp_var = FUN_080069e4(input,format_specifier), temp_var != 0)) {\n    return -1;\n  }\n  total_length = 0;\n  space_flag = 0x20;\n  plus_flag = 0x30;\n  current_char = input_string;\nLAB_080063d6:\n  next_char = current_char;\n  if (*next_char != 0) goto LAB_0800648c;\n  goto LAB_080063e0;\nLAB_0800648c:\n  current_char = next_char + 1;\n  if (*next_char != 0x25) goto LAB_080063d6;\nLAB_080063e0:\n  temp_var = (int)next_char - (int)input_string;\n  if (temp_var != 0) {\n    result = FUN_08006370(input,format_specifier,input_string,temp_var);\n    if (result == -1) {\nLAB_08006580:\n      if ((int)((uint)*(ushort *)(format_specifier + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return total_length;\n    }\n    total_length = total_length + temp_var;\n  }\n  if (*next_char == 0) goto LAB_08006580;\n  flags = 0;\n  width = 0;\n  precision = -1;\n  width = 0;\n  zero_flag = 0;\n  temp2 = 0;\n  current_char = next_char + 1;\n  while( true ) {\n    temp_var = FUN_08006e90(\"#-0+ \",*current_char);\n    input_string = current_char + 1;\n    if (temp_var == 0) break;\n    flags = 1 << (temp_var + 0xf7ff8750U & 0xff) | flags;\n    current_char = input_string;\n  }\n  if ((int)(flags << 0x1b) < 0) {\n    zero_flag = 0x20;\n  }\n  if ((int)(flags << 0x1c) < 0) {\n    zero_flag = 0x2b;\n  }\n  if (*current_char == 0x2a) {\n    ptr = output_ptr + 1;\n    temp_var = *output_ptr;\n    output_ptr = ptr;\n    if (temp_var < 0) {\n      width = -temp_var;\n      flags = flags | 2;\n      goto LAB_080064be;\n    }\n  }\n  else {\n    is_numeric = false;\n    temp_var = width;\n    input_string = current_char;\n    while( true ) {\n      if (9 < *input_string - 0x30) break;\n      temp_var = temp_var * 10 + (*input_string - 0x30);\n      is_numeric = true;\n      input_string = input_string + 1;\n    }\n    if (!is_numeric) goto LAB_080064be;\n  }\n  width = temp_var;\nLAB_080064be:\n  if (*input_string == 0x2e) {\n    if (input_string[1] == 0x2a) {\n      input_string = input_string + 2;\n      ptr = output_ptr + 1;\n      precision = *output_ptr;\n      output_ptr = ptr;\n      if (precision < 0) {\n        precision = -1;\n      }\n    }\n    else {\n      is_numeric = false;\n      temp_var = 0;\n      precision = 0;\n      while( true ) {\n        input_string = input_string + 1;\n        if (9 < *input_string - 0x30) break;\n        temp_var = temp_var * 10 + (*input_string - 0x30);\n        is_numeric = true;\n      }\n      if (is_numeric) {\n        precision = temp_var;\n      }\n    }\n  }\n  temp_var = FUN_08006e90(&DAT_080078b6,*input_string,3);\n  if (temp_var != 0) {\n    input_string = input_string + 1;\n    flags = flags | 0x40 << (temp_var + 0xf7ff874aU & 0xff);\n  }\n  conversion_specifier = *input_string;\n  input_string = input_string + 1;\n  temp_var = FUN_08006e90(\"efgEFG\",conversion_specifier,6);\n  if (temp_var == 0) {\n    temp_var = FUN_080066b0(input,&flags,format_specifier,0x8006371,&output_ptr);\n    if (temp_var == -1) goto LAB_08006580;\n  }\n  else {\n    output_ptr = (int *)(((int)output_ptr + 7U & 0xfffffff8) + 8);\n  }\n  total_length = total_length + temp_var;\n  current_char = input_string;\n  goto LAB_080063d6;\n}\n\n",
            "current_name": "parse_and_process_data_08006394",
            "entrypoint": "0x08006394",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006394": "parse_and_process_data_08006394",
                "bVar3": "is_numeric",
                "iVar1": "result",
                "iVar6": "temp_var",
                "local_30": "temp2",
                "local_45": "zero_flag",
                "local_6e": "plus_flag",
                "local_6f": "space_flag",
                "local_70": "conversion_specifier",
                "local_74": "total_length",
                "local_7c": "width",
                "local_80": "width",
                "local_84": "precision",
                "local_88": "flags",
                "local_8c": "output_ptr",
                "param_1": "input",
                "param_2": "format_specifier",
                "param_3": "input_string",
                "param_4": "output_param",
                "pbVar4": "current_char",
                "pbVar5": "next_char",
                "piVar2": "ptr",
                "unaff_r9": "temp_var"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080065c0": {
            "additional_data": {
                "FUN_080065c0": {
                    "calculate_buffer_size": 1,
                    "calculate_data_length": 1,
                    "calculate_output_size": 1,
                    "calculate_total_size": 1,
                    "decode_and_process_data": 3,
                    "decode_data": 1,
                    "decompiled_function": 1,
                    "decompress_data": 1,
                    "extracted_function": 1,
                    "parse_data": 2,
                    "process_data": 16,
                    "process_input": 1,
                    "update_data": 1
                },
                "bVar5": {
                    "check": 1,
                    "check_condition": 1,
                    "check_flag": 2,
                    "condition": 3,
                    "condition_flag": 1,
                    "flag": 8,
                    "is_condition_met": 1,
                    "is_condition_true": 1,
                    "is_flag_set": 2,
                    "is_negative": 1,
                    "is_set": 1,
                    "is_true": 3,
                    "is_valid": 1,
                    "is_verified": 1,
                    "is_zero": 1,
                    "should_process": 2,
                    "should_write": 1
                },
                "iVar1": {
                    "i": 2,
                    "index": 15,
                    "index1": 3,
                    "iteration": 3,
                    "iteration_index_1": 1,
                    "iterator1": 1,
                    "loop_counter": 2,
                    "loop_index": 1,
                    "result": 3
                },
                "iVar2": {
                    "callback_result": 2,
                    "index2": 3,
                    "iteration_index_2": 1,
                    "iterator2": 1,
                    "j": 2,
                    "process_result": 1,
                    "result": 15,
                    "return_value": 1,
                    "status": 3,
                    "temp": 2
                },
                "param_1": {
                    "data": 8,
                    "data_ptr": 1,
                    "input": 8,
                    "input1": 1,
                    "input_data": 6,
                    "input_param": 1,
                    "input_value": 5,
                    "param1": 1
                },
                "param_2": {
                    "buffer": 1,
                    "compressed_data": 1,
                    "data": 7,
                    "data_array": 5,
                    "data_buffer": 1,
                    "header": 2,
                    "info_array": 2,
                    "info_ptr": 1,
                    "input": 2,
                    "input_array": 6,
                    "parameters": 1,
                    "params": 2
                },
                "param_3": {
                    "buffer_size": 1,
                    "decompressed_size": 1,
                    "output": 7,
                    "output_array": 1,
                    "output_length": 5,
                    "output_param": 1,
                    "output_ptr": 1,
                    "output_size": 10,
                    "output_value": 3,
                    "result": 1
                },
                "param_4": {
                    "additional_param": 1,
                    "another_param": 1,
                    "constant_value": 2,
                    "context": 1,
                    "data_length": 1,
                    "input2": 1,
                    "param": 10,
                    "param4": 4,
                    "param_4": 9,
                    "param_value": 1
                },
                "param_5": {
                    "callback": 17,
                    "callback_func": 3,
                    "callback_function": 10,
                    "process_byte": 1
                },
                "uVar3": {
                    "buffer_size": 1,
                    "max_buffer_size": 1,
                    "max_data_length": 1,
                    "max_decompressed_size": 1,
                    "max_length": 5,
                    "max_size": 10,
                    "max_value": 11,
                    "maximum_length": 1
                },
                "uVar4": {
                    "added_value": 1,
                    "additional_length": 1,
                    "bytes_written": 1,
                    "count": 2,
                    "counter": 2,
                    "extra": 1,
                    "extra_length": 1,
                    "extra_value": 1,
                    "index": 1,
                    "new_size": 1,
                    "new_value": 2,
                    "offset": 8,
                    "start_index": 1,
                    "temp": 3,
                    "temp_length": 1,
                    "temp_size": 1,
                    "updated_length": 1,
                    "updated_value": 1,
                    "value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080066b0"
            ],
            "code": "\nundefined4\ndecode_and_process_data_080065c0(undefined4 input,uint *data,uint *output_size,undefined4 param,code *callback)\n\n{\n  int index;\n  int result;\n  uint max_value;\n  uint offset;\n  bool flag;\n  \n  max_value = data[4];\n  if ((int)data[4] < (int)data[2]) {\n    max_value = data[2];\n  }\n  *output_size = max_value;\n  if (*(char *)((int)data + 0x43) != '\\0') {\n    *output_size = max_value + 1;\n  }\n  if ((int)(*data << 0x1a) < 0) {\n    *output_size = *output_size + 2;\n  }\n  if ((*data & 6) == 0) {\n    for (index = 0; index < (int)(data[3] - *output_size); index = index + 1) {\n      result = (*callback)(input,param,(int)data + 0x19,1);\n      if (result == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  max_value = (uint)*(byte *)((int)data + 0x43);\n  if (max_value != 0) {\n    max_value = 1;\n  }\n  offset = max_value;\n  if ((int)(*data << 0x1a) < 0) {\n    *(undefined *)((int)data + max_value + 0x43) = 0x30;\n    offset = max_value + 2;\n    *(undefined *)((int)data + max_value + 0x44) = *(undefined *)((int)data + 0x45);\n  }\n  index = (*callback)(input,param,(int)data + 0x43,offset);\n  if (index != -1) {\n    max_value = data[3];\n    flag = (*data & 6) != 4;\n    if (flag) {\n      max_value = 0;\n    }\n    offset = 0;\n    if (!flag) {\n      max_value = max_value - *output_size;\n    }\n    if (!flag) {\n      max_value = max_value & ~((int)max_value >> 0x1f);\n    }\n    if ((int)data[4] < (int)data[2]) {\n      max_value = max_value + (data[2] - data[4]);\n    }\n    while( true ) {\n      if (max_value == offset) {\n        return 0;\n      }\n      index = (*callback)(input,param,(int)data + 0x1a,1);\n      if (index == -1) break;\n      offset = offset + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "decode_and_process_data_080065c0",
            "entrypoint": "0x080065c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080065c0": "decode_and_process_data_080065c0",
                "bVar5": "flag",
                "iVar1": "index",
                "iVar2": "result",
                "param_1": "input",
                "param_2": "data",
                "param_3": "output_size",
                "param_4": "param",
                "param_5": "callback",
                "uVar3": "max_value",
                "uVar4": "offset"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080066b0": {
            "additional_data": {
                "FUN_080066b0": {
                    "convert_and_copy_data": 1,
                    "convert_and_format_data": 1,
                    "convert_and_process_data": 1,
                    "decode_and_process": 1,
                    "decode_and_process_data": 5,
                    "extract_and_process_data": 1,
                    "parse_and_execute": 1,
                    "parse_and_process_data": 1,
                    "parse_and_transform_input": 1,
                    "parse_input_data": 1,
                    "parse_number": 1
                },
                "bVar1": {
                    "byte_val": 7,
                    "byte_value": 16,
                    "byte_var": 8
                },
                "iVar2": {
                    "counter": 1,
                    "index": 9,
                    "index_1": 1,
                    "index_var": 2,
                    "int_val": 1,
                    "int_var": 4,
                    "int_var1": 4,
                    "iteration_variable": 1,
                    "loop_index": 1,
                    "loop_var": 2,
                    "loop_variable": 1,
                    "result": 3,
                    "temp_var1": 1
                },
                "iVar4": {
                    "index": 1,
                    "index2": 1,
                    "index_2": 1,
                    "index_var2": 1,
                    "inner_counter": 1,
                    "inner_index": 2,
                    "inner_iteration_variable": 1,
                    "inner_loop_index": 1,
                    "inner_loop_var": 2,
                    "inner_result": 1,
                    "int_var": 2,
                    "int_var2": 8,
                    "loop_var1": 1,
                    "result": 3,
                    "temp": 1,
                    "temp_var": 1,
                    "temporary_variable": 1,
                    "tmp_index": 1
                },
                "local_24": {
                    "local_arr": 1,
                    "local_array": 19,
                    "local_uint_array": 1,
                    "local_variables": 1,
                    "local_variables_array": 1,
                    "local_vars": 3,
                    "result": 1,
                    "temp_arr": 1,
                    "temp_array": 1,
                    "uint_array": 1
                },
                "param_1": {
                    "arg1": 3,
                    "arg_1": 1,
                    "data": 1,
                    "input": 3,
                    "input1": 2,
                    "input_param": 3,
                    "input_param_1": 1,
                    "input_value": 1,
                    "input_value_1": 1,
                    "param1": 10,
                    "param_1": 3,
                    "param_in": 2
                },
                "param_2": {
                    "data": 6,
                    "data_array": 1,
                    "data_ptr": 2,
                    "input": 2,
                    "input2": 1,
                    "input_array": 7,
                    "input_array_1": 1,
                    "input_data": 2,
                    "input_param_2": 1,
                    "number": 1,
                    "param2": 4,
                    "param_array": 2,
                    "uint_array": 1
                },
                "param_3": {
                    "arg2": 1,
                    "arg3": 2,
                    "arg_2": 1,
                    "input3": 2,
                    "input_length": 1,
                    "input_param2": 1,
                    "input_param_3": 1,
                    "input_value_2": 1,
                    "param": 2,
                    "param3": 12,
                    "param_3": 5,
                    "param_out": 1,
                    "value": 1
                },
                "param_4": {
                    "callback": 6,
                    "callback_func": 2,
                    "callback_function": 9,
                    "compare_function": 1,
                    "conversion_func": 1,
                    "function_ptr": 3,
                    "function_to_call": 1,
                    "input4": 1,
                    "input_func": 1,
                    "input_function": 1,
                    "input_param_4": 1,
                    "param4": 4
                },
                "param_5": {
                    "arg3": 1,
                    "arg5": 1,
                    "array_ptr": 1,
                    "callback_args": 1,
                    "callback_data": 1,
                    "counter": 1,
                    "input5": 1,
                    "input_array_ptr": 1,
                    "input_double_pointer": 1,
                    "input_param_5": 1,
                    "output": 1,
                    "output_array": 2,
                    "output_array_pointer": 2,
                    "output_data": 1,
                    "output_param": 1,
                    "output_pointer": 1,
                    "output_ptr": 1,
                    "param5": 7,
                    "param_5": 2,
                    "param_arr": 1,
                    "param_array_ptr": 2
                },
                "pcVar11": {
                    "char_pointer": 1,
                    "char_pointer2": 2,
                    "char_pointer_2": 2,
                    "char_ptr": 2,
                    "char_ptr2": 6,
                    "char_var": 1,
                    "char_var1": 1,
                    "char_var2": 2,
                    "char_var_2": 1,
                    "output": 2,
                    "output_ptr": 1,
                    "output_string": 1,
                    "pc_var1": 1,
                    "pointer2": 1,
                    "ptr_hex_chars": 1,
                    "result_ptr": 2,
                    "reversed_str": 1,
                    "str_ptr": 1,
                    "temp_char": 1,
                    "temp_char_ptr": 1
                },
                "pcVar12": {
                    "buffer": 1,
                    "char_pointer3": 2,
                    "char_pointer_3": 2,
                    "char_ptr2": 1,
                    "char_ptr3": 5,
                    "char_ptr_var": 1,
                    "char_var1": 1,
                    "char_var2": 2,
                    "char_var3": 2,
                    "data_ptr": 1,
                    "data_ptr_inc": 1,
                    "input": 1,
                    "input_str": 1,
                    "output_buffer": 1,
                    "pc_var2": 1,
                    "pointer1": 1,
                    "ptr_byte": 1,
                    "result_str": 1,
                    "str": 1,
                    "str_ptr": 1,
                    "string_pointer": 1,
                    "string_ptr": 1,
                    "temp_ptr": 1
                },
                "pcVar5": {
                    "char_array_var": 1,
                    "char_pointer": 3,
                    "char_pointer_1": 1,
                    "char_ptr": 7,
                    "char_ptr1": 1,
                    "char_var": 2,
                    "char_var1": 1,
                    "hex_chars": 5,
                    "hex_digits": 3,
                    "hex_string": 3,
                    "hexadecimal": 1,
                    "hexadecimal_string": 1,
                    "str_var": 2
                },
                "ppcVar8": {
                    "char_double_pointer": 1,
                    "char_ptr_ptr": 3,
                    "char_ptr_ptr_var": 1,
                    "double_char_array_var": 1,
                    "double_char_pointer": 1,
                    "ptr_ptr": 1,
                    "ptr_ptr_ptr": 1,
                    "str_ptr_ptr": 1
                },
                "ppuVar7": {
                    "callback_ptr": 1,
                    "double_pointer": 2,
                    "double_pointer_var": 1,
                    "ptr_ptr": 3,
                    "ptr_ptr_var": 2,
                    "uint_ptr_ptr": 1
                },
                "puVar3": {
                    "array_pointer": 1,
                    "pointer": 4,
                    "pointer_var": 1,
                    "pointer_var1": 2,
                    "pointer_variable": 1,
                    "ptr": 6,
                    "ptr_data": 2,
                    "ptr_to_uint": 1,
                    "ptr_value": 1,
                    "ptr_var": 7,
                    "ptr_var1": 1,
                    "temp_pointer": 1,
                    "temp_pointer_1": 1,
                    "uint_ptr": 2
                },
                "uVar10": {
                    "another_uint": 1,
                    "data": 1,
                    "length": 1,
                    "length_value": 1,
                    "num": 1,
                    "original_value": 1,
                    "result_var2": 1,
                    "secondary_result_value": 1,
                    "temp": 4,
                    "temp_value": 5,
                    "temp_value_3": 1,
                    "temp_var2": 1,
                    "temp_var3": 1,
                    "u_var3": 1,
                    "uint_val3": 2,
                    "uint_var3": 5,
                    "uint_var_3": 1,
                    "unsigned_variable_3": 1,
                    "value3": 1
                },
                "uVar6": {
                    "base": 2,
                    "base_value": 2,
                    "bit_value": 1,
                    "data_type": 1,
                    "data_value": 1,
                    "flags": 1,
                    "temp_val": 1,
                    "temp_value": 1,
                    "temp_value_1": 1,
                    "temp_var": 3,
                    "u_var1": 1,
                    "uint_val": 2,
                    "uint_var": 4,
                    "uint_var1": 4,
                    "unsigned_variable": 1,
                    "value": 4,
                    "value1": 1
                },
                "uVar9": {
                    "converted_value": 2,
                    "data": 1,
                    "num_digits": 1,
                    "number": 1,
                    "result": 5,
                    "result_uint": 1,
                    "result_value": 1,
                    "result_var": 1,
                    "result_var1": 1,
                    "return_value": 1,
                    "temp_value_2": 1,
                    "temp_var2": 1,
                    "u_var2": 1,
                    "uint_val2": 2,
                    "uint_var2": 5,
                    "uint_var_2": 1,
                    "unsigned_variable_2": 1,
                    "val": 1,
                    "value": 2,
                    "value2": 1
                }
            },
            "called": [
                "FUN_08006e90",
                "FUN_080065c0"
            ],
            "calling": [
                "FUN_08006394"
            ],
            "code": "\nuint decode_and_process_data_080066b0(undefined4 param1,uint *input_array,undefined4 param3,code *callback_function,uint **param5)\n\n{\n  byte byte_value;\n  int index;\n  uint *ptr_var;\n  int int_var2;\n  char *char_ptr;\n  uint uint_var1;\n  uint **ptr_ptr;\n  char **char_ptr_ptr;\n  uint result;\n  uint uint_var3;\n  char *char_ptr2;\n  char *char_ptr3;\n  uint local_array [2];\n  \n  byte_value = *(byte *)(input_array + 6);\n  char_ptr3 = (char *)((int)input_array + 0x43);\n  if (byte_value != 0x6e) {\n    if (byte_value < 0x6f) {\n      if (byte_value != 99) {\n        if (byte_value < 100) {\n          if (byte_value == 0) goto LAB_0800686a;\n          if (byte_value != 0x58) goto LAB_080066e0;\n          *(undefined *)((int)input_array + 0x45) = 0x58;\n          char_ptr = \"0123456789ABCDEF\";\nLAB_080067fa:\n          uint_var1 = *input_array;\n          ptr_var = *param5;\n          *param5 = ptr_var + 1;\n          if (((uint_var1 & 0x80) == 0) && ((int)(uint_var1 << 0x19) < 0)) {\n            result = (uint)*(ushort *)ptr_var;\n          }\n          else {\n            result = *ptr_var;\n          }\n          if ((int)(uint_var1 << 0x1f) < 0) {\n            *input_array = uint_var1 | 0x20;\n          }\n          if (result == 0) {\n            *input_array = *input_array & 0xffffffdf;\n          }\n          uint_var1 = 0x10;\nLAB_08006790:\n          *(undefined *)((int)input_array + 0x43) = 0;\n        }\n        else {\n          if ((byte_value != 100) && (byte_value != 0x69)) goto LAB_080066e0;\n          result = *input_array;\n          ptr_var = *param5;\n          if ((result & 0x80) == 0) {\n            *param5 = ptr_var + 1;\n            if ((result & 0x40) == 0) goto LAB_08006700;\n            result = (uint)(short)*(ushort *)ptr_var;\n          }\n          else {\n            *param5 = ptr_var + 1;\nLAB_08006700:\n            result = *ptr_var;\n          }\n          if ((int)result < 0) {\n            result = -result;\n            *(undefined *)((int)input_array + 0x43) = 0x2d;\n          }\n          char_ptr = \"0123456789ABCDEF\";\n          uint_var1 = 10;\n        }\n        uint_var3 = input_array[1];\n        input_array[2] = uint_var3;\n        char_ptr2 = char_ptr3;\n        if ((int)uint_var3 < 0) {\n          if (result != 0) goto LAB_0800682e;\nLAB_080068dc:\n          *(char *)((int)input_array + 0x42) = *char_ptr;\n          char_ptr2 = (char *)((int)input_array + 0x42);\n        }\n        else {\n          *input_array = *input_array & 0xfffffffb;\n          if (result == 0) {\n            if (uint_var3 != 0) goto LAB_080068dc;\n          }\n          else {\nLAB_0800682e:\n            do {\n              uint_var3 = result / uint_var1;\n              char_ptr2 = char_ptr2 + -1;\n              *char_ptr2 = char_ptr[result - uint_var1 * uint_var3];\n              result = uint_var3;\n            } while (uint_var3 != 0);\n          }\n        }\n        if (((uint_var1 == 8) && ((int)(*input_array << 0x1f) < 0)) && ((int)input_array[1] <= (int)input_array[4]))\n        {\n          char_ptr2[-1] = '0';\n          char_ptr2 = char_ptr2 + -1;\n        }\n        input_array[4] = (int)char_ptr3 - (int)char_ptr2;\n        char_ptr3 = char_ptr2;\n        goto LAB_080067d6;\n      }\n      ptr_var = *param5;\n      *param5 = ptr_var + 1;\n      *(char *)((int)input_array + 0x42) = (char)*ptr_var;\nLAB_08006740:\n      char_ptr3 = (char *)((int)input_array + 0x42);\n      result = 1;\n    }\n    else {\n      if (byte_value != 0x73) {\n        if (byte_value < 0x74) {\n          if (byte_value == 0x6f) {\nLAB_08006766:\n            result = *input_array;\n            ptr_var = *param5;\n            if ((result & 0x80) == 0) {\n              *param5 = ptr_var + 1;\n              if ((result & 0x40) == 0) goto LAB_08006774;\n              result = (uint)*(ushort *)ptr_var;\n            }\n            else {\n              *param5 = ptr_var + 1;\nLAB_08006774:\n              result = *ptr_var;\n            }\n            if (byte_value == 0x6f) {\n              uint_var1 = 8;\n            }\n            else {\n              uint_var1 = 10;\n            }\n            char_ptr = \"0123456789ABCDEF\";\n            goto LAB_08006790;\n          }\n          if (byte_value == 0x70) {\n            *input_array = *input_array | 0x20;\nLAB_08006726:\n            char_ptr = \"0123456789abcdef\";\n            *(undefined *)((int)input_array + 0x45) = 0x78;\n            goto LAB_080067fa;\n          }\n        }\n        else {\n          if (byte_value == 0x75) goto LAB_08006766;\n          if (byte_value == 0x78) goto LAB_08006726;\n        }\nLAB_080066e0:\n        *(byte *)((int)input_array + 0x42) = byte_value;\n        goto LAB_08006740;\n      }\n      char_ptr_ptr = (char **)*param5;\n      *param5 = (uint *)(char_ptr_ptr + 1);\n      char_ptr3 = *char_ptr_ptr;\n      index = FUN_08006e90(char_ptr3,0,input_array[1]);\n      if (index != 0) {\n        input_array[1] = index - (int)char_ptr3;\n      }\n      result = input_array[1];\n    }\n    input_array[4] = result;\n    *(undefined *)((int)input_array + 0x43) = 0;\n    goto LAB_080067d6;\n  }\n  result = *input_array;\n  ptr_ptr = (uint **)*param5;\n  uint_var1 = input_array[5];\n  if ((result & 0x80) == 0) {\n    *param5 = (uint *)(ptr_ptr + 1);\n    ptr_var = *ptr_ptr;\n    if ((result & 0x40) == 0) goto LAB_08006856;\n    *(short *)ptr_var = (short)uint_var1;\n  }\n  else {\n    *param5 = (uint *)(ptr_ptr + 1);\n    ptr_var = *ptr_ptr;\nLAB_08006856:\n    *ptr_var = uint_var1;\n  }\nLAB_0800686a:\n  input_array[4] = 0;\nLAB_080067d6:\n  index = FUN_080065c0(param1,input_array,local_array,param3,callback_function);\n  if ((index == -1) || (index = (*callback_function)(param1,param3,char_ptr3,input_array[4]), index == -1)) {\nLAB_080067ea:\n    result = 0xffffffff;\n  }\n  else {\n    if ((int)(*input_array << 0x1e) < 0) {\n      for (index = 0; index < (int)(input_array[3] - local_array[0]); index = index + 1) {\n        int_var2 = (*callback_function)(param1,param3,(int)input_array + 0x19,1);\n        if (int_var2 == -1) goto LAB_080067ea;\n      }\n    }\n    result = input_array[3];\n    if ((int)input_array[3] < (int)local_array[0]) {\n      result = local_array[0];\n    }\n  }\n  return result;\n}\n\n",
            "current_name": "decode_and_process_data_080066b0",
            "entrypoint": "0x080066b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080066b0": "decode_and_process_data_080066b0",
                "bVar1": "byte_value",
                "iVar2": "index",
                "iVar4": "int_var2",
                "local_24": "local_array",
                "param_1": "param1",
                "param_2": "input_array",
                "param_3": "param3",
                "param_4": "callback_function",
                "param_5": "param5",
                "pcVar11": "char_ptr2",
                "pcVar12": "char_ptr3",
                "pcVar5": "char_ptr",
                "ppcVar8": "char_ptr_ptr",
                "ppuVar7": "ptr_ptr",
                "puVar3": "ptr_var",
                "uVar10": "uint_var3",
                "uVar6": "uint_var1",
                "uVar9": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080068f0": {
            "additional_data": {
                "FUN_08006394": {
                    "perform_operation": 1,
                    "process_data": 1
                },
                "FUN_080068f0": {
                    "execute_binary_function": 1,
                    "execute_function": 6,
                    "execute_reverse": 1,
                    "extract_data": 1,
                    "initialize": 1,
                    "initialize_and_call_functions": 1,
                    "initialize_and_call_subfunction": 1,
                    "initialize_function": 2,
                    "initialize_variables": 1,
                    "process_data": 6,
                    "process_function": 3
                },
                "FUN_08006cb4": {
                    "check_and_execute": 1
                },
                "iVar1": {
                    "data": 1,
                    "data_address": 8,
                    "data_pointer": 9,
                    "data_ptr": 3,
                    "data_value": 1,
                    "data_var": 1,
                    "data_var1": 1,
                    "data_variable1": 2,
                    "i_var": 1,
                    "local_var1": 1,
                    "var5": 1,
                    "variable1": 2
                },
                "param_1": {
                    "arg1": 6,
                    "argument1": 2,
                    "data_param1": 1,
                    "first_param": 1,
                    "input1": 6,
                    "input_param": 3,
                    "input_param1": 7,
                    "input_parameter1": 2,
                    "ptr1": 1,
                    "value1": 1,
                    "var1": 1
                },
                "param_2": {
                    "arg2": 6,
                    "argument2": 2,
                    "data_param2": 1,
                    "input2": 6,
                    "input_param2": 7,
                    "input_parameter2": 2,
                    "param2": 2,
                    "param_2": 1,
                    "ptr2": 1,
                    "second_param": 1,
                    "value2": 1,
                    "var2": 1
                },
                "param_3": {
                    "arg3": 6,
                    "argument3": 2,
                    "data_param3": 1,
                    "input3": 6,
                    "input_param3": 7,
                    "input_parameter3": 2,
                    "param3": 2,
                    "param_3": 1,
                    "ptr3": 1,
                    "third_param": 1,
                    "value3": 1,
                    "var3": 1
                },
                "param_4": {
                    "arg4": 6,
                    "argument4": 2,
                    "data_param4": 1,
                    "fourth_param": 1,
                    "input4": 6,
                    "input_param4": 7,
                    "input_parameter4": 2,
                    "param4": 2,
                    "param_4": 1,
                    "ptr4": 1,
                    "value4": 1,
                    "var4": 1
                },
                "uStack_4": {
                    "arg4": 1,
                    "arg4_copy": 4,
                    "copied_param4": 1,
                    "data_stack_4": 1,
                    "fourth_var": 1,
                    "input4_copy": 3,
                    "local_variable2": 1,
                    "param4": 1,
                    "param4_copy": 1,
                    "stack_4": 1,
                    "stack_var3": 2,
                    "stack_var_4": 1,
                    "stack_variable3": 2,
                    "temp_stack_var3": 1,
                    "temp_var3": 2,
                    "temp_variable3": 1,
                    "temporary_stack_value3": 1,
                    "var9": 1
                },
                "uStack_8": {
                    "arg3": 1,
                    "arg3_copy": 4,
                    "copied_param3": 1,
                    "data_stack_8": 1,
                    "input3_copy": 3,
                    "param3": 1,
                    "param3_copy": 1,
                    "stack_8": 1,
                    "stack_var2": 2,
                    "stack_var_8": 1,
                    "stack_variable2": 2,
                    "temp_stack_var2": 1,
                    "temp_var2": 2,
                    "temp_variable2": 1,
                    "temporary_stack_value2": 1,
                    "third_var": 1,
                    "var8": 1
                },
                "uStack_c": {
                    "arg2": 1,
                    "arg2_copy": 4,
                    "copied_param2": 1,
                    "data_stack_c": 1,
                    "input2_copy": 3,
                    "local_variable1": 1,
                    "param2": 1,
                    "param2_copy": 1,
                    "second_var": 1,
                    "stack_c": 1,
                    "stack_var1": 2,
                    "stack_var_c": 1,
                    "stack_variable1": 2,
                    "temp_stack_var": 1,
                    "temp_var1": 2,
                    "temp_variable1": 1,
                    "temporary_stack_value1": 1,
                    "var7": 1
                },
                "uVar2": {
                    "arg1": 1,
                    "arg1_copy": 4,
                    "copied_param1": 1,
                    "data_var2": 1,
                    "data_variable2": 2,
                    "first_var": 1,
                    "input": 1,
                    "input1_copy": 2,
                    "local_var2": 1,
                    "param1": 1,
                    "param1_copy": 3,
                    "parameter1": 1,
                    "return_value": 1,
                    "temp_parameter": 1,
                    "temp_value": 1,
                    "temp_var": 6,
                    "var6": 1,
                    "variable2": 2
                }
            },
            "called": [
                "FUN_08006cb4",
                "FUN_08006394"
            ],
            "calling": [
                "FUN_08004f4c"
            ],
            "code": "\nvoid execute_binary_function_080068f0(undefined4 input_param1,undefined4 input_param2,undefined4 input_param3,undefined4 input_param4)\n\n{\n  int data_pointer;\n  undefined4 temp_var;\n  undefined4 arg2_copy;\n  undefined4 arg3_copy;\n  undefined4 arg4_copy;\n  \n  data_pointer = DAT_200000f8;\n  temp_var = input_param1;\n  arg2_copy = input_param2;\n  arg3_copy = input_param3;\n  arg4_copy = input_param4;\n  if ((DAT_200000f8 != 0) && (*(int *)(DAT_200000f8 + 0x18) == 0)) {\n    FUN_08006cb4(DAT_200000f8);\n  }\n  FUN_08006394(data_pointer,*(undefined4 *)(data_pointer + 8),input_param1,&arg2_copy,temp_var,&arg2_copy);\n  return;\n}\n\n",
            "current_name": "execute_binary_function_080068f0",
            "entrypoint": "0x080068f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080068f0": "execute_binary_function_080068f0",
                "iVar1": "data_pointer",
                "param_1": "input_param1",
                "param_2": "input_param2",
                "param_3": "input_param3",
                "param_4": "input_param4",
                "uStack_4": "arg4_copy",
                "uStack_8": "arg3_copy",
                "uStack_c": "arg2_copy",
                "uVar2": "temp_var"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006920": {
            "additional_data": {
                "DAT_200006a4": {
                    "extracted_value": 1,
                    "temp_data": 1
                },
                "FUN_080056d8": {
                    "get_processed_data": 1,
                    "get_translation": 1,
                    "retrieve_error_code": 1
                },
                "FUN_08006920": {
                    "check_and_update_value": 1,
                    "extract_and_assign_value": 1,
                    "extract_and_set_error_code": 1,
                    "extract_and_store_value": 1,
                    "extract_data": 1,
                    "extract_error_code": 1,
                    "extract_integer_from_binary": 1,
                    "extract_param_and_check_error": 1,
                    "extract_result": 1,
                    "find_error_and_assign": 1,
                    "process_data": 4,
                    "process_data_and_assign_to_pointer": 1,
                    "process_function": 1,
                    "translate_value_to_param": 1,
                    "update_param": 3,
                    "update_param_if_error": 2,
                    "update_param_if_negative": 1,
                    "update_param_if_negative_ret_val": 1,
                    "update_param_with_result": 2,
                    "update_param_with_return_value": 1,
                    "update_parameter": 1,
                    "update_parameter_if_invalid": 1,
                    "update_result": 1,
                    "validate_and_set_result": 1
                },
                "PTR_200006a4": {
                    "temp_var": 1
                },
                "iVar1": {
                    "error_code": 1,
                    "function_result": 3,
                    "result": 19,
                    "return_value": 6,
                    "status": 1
                },
                "param_1": {
                    "error_code": 1,
                    "error_code_ptr": 1,
                    "output": 5,
                    "output_data": 1,
                    "output_param": 4,
                    "output_value": 2,
                    "output_variable": 2,
                    "result": 7,
                    "result_param": 1,
                    "result_pointer": 4,
                    "result_ptr": 2,
                    "updated_param": 1
                },
                "param_2": {
                    "input": 8,
                    "input_data": 3,
                    "input_param": 5,
                    "input_parameter": 1,
                    "input_value": 14
                }
            },
            "called": [
                "FUN_080056d8"
            ],
            "calling": [
                "FUN_08006288"
            ],
            "code": "\nvoid update_param_with_result_08006920(int *result,undefined4 input_value)\n\n{\n  int result;\n  \n  DAT_200006a4 = 0;\n  result = FUN_080056d8(input_value);\n  if ((result == -1) && (DAT_200006a4 != 0)) {\n    *result = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "current_name": "update_param_with_result_08006920",
            "entrypoint": "0x08006920",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006920": "update_param_with_result_08006920",
                "iVar1": "result",
                "param_1": "result",
                "param_2": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080069e4": {
            "additional_data": {
                "0xffffffff": {
                    "result_value": 1
                },
                "DAT_200000f8": {
                    "data_address_constant": 1
                },
                "FUN_080061f0": {
                    "check_condition": 1,
                    "cleanup_data": 1,
                    "cleanup_function2": 1,
                    "handle_error": 5,
                    "handle_exception": 1,
                    "process_data": 1,
                    "process_data_helper2": 1,
                    "process_input": 2,
                    "reset_data": 1
                },
                "FUN_080069e4": {
                    "check_and_update_data": 1,
                    "decode_and_transform_data": 1,
                    "decode_and_update_flags": 1,
                    "extract_data": 1,
                    "parse_data": 1,
                    "perform_operation": 1,
                    "process_data": 13,
                    "process_param_values": 1,
                    "reordered_params_and_variables": 1,
                    "reverse_bits_and_update_flags": 1,
                    "update_flags": 1,
                    "update_param": 1,
                    "update_param_and_return": 1,
                    "update_parameters_and_flags": 1,
                    "update_state": 1
                },
                "FUN_08006cb4": {
                    "cleanup": 2,
                    "cleanup_data": 5,
                    "finalize_data": 1,
                    "initialize_data": 1,
                    "perform_cleanup": 2,
                    "process_data_check": 1,
                    "reset_global_var": 1,
                    "validate_data": 1
                },
                "FUN_08006e10": {
                    "execute_task": 1,
                    "handle_error": 1,
                    "handle_null": 1,
                    "perform_action": 1,
                    "process_data": 2,
                    "process_data_helper1": 1,
                    "process_error": 1,
                    "process_if_condition": 1
                },
                "FUn_08006cb4": {
                    "cleanup_function1": 1
                },
                "iVar1": {
                    "base_addr": 1,
                    "base_address": 5,
                    "data": 1,
                    "data1": 1,
                    "data_address": 5,
                    "data_offset": 1,
                    "data_pointer": 3,
                    "data_ptr": 8,
                    "global_var": 1,
                    "temp_var": 1,
                    "temp_var1": 1,
                    "var1": 3
                },
                "param_1": {
                    "output": 7,
                    "output_data": 2,
                    "output_param": 10,
                    "output_ptr": 5,
                    "output_value": 2,
                    "parameter1": 1,
                    "result": 2,
                    "state_ptr": 1
                },
                "param_2": {
                    "data": 3,
                    "input": 6,
                    "input_data": 3,
                    "input_param": 10,
                    "input_ptr": 5,
                    "input_value": 1,
                    "option_ptr": 1,
                    "parameter2": 1
                },
                "uVar2": {
                    "int_value": 1,
                    "result": 24,
                    "return_value": 2,
                    "short_var": 1,
                    "value": 2,
                    "var1": 1
                },
                "uVar3": {
                    "flag": 5,
                    "flags": 12,
                    "input_data_value": 1,
                    "input_param_value": 2,
                    "option_flags": 1,
                    "param2_value": 1,
                    "temp_value": 1,
                    "temp_var2": 1,
                    "ushort_value": 1,
                    "ushort_var": 1,
                    "value": 4,
                    "var2": 1
                }
            },
            "called": [
                "FUN_08006e10",
                "FUN_08006cb4",
                "FUN_080061f0"
            ],
            "calling": [
                "FUN_08006344",
                "FUN_08006394"
            ],
            "code": "\nuint process_data_080069e4(undefined4 *output_param,undefined4 *input_param)\n\n{\n  int data_ptr;\n  uint result;\n  ushort flags;\n  \n  data_ptr = DAT_200000f8;\n  if ((DAT_200000f8 != 0) && (*(int *)(DAT_200000f8 + 0x18) == 0)) {\n    FUN_08006cb4(DAT_200000f8);\n  }\n  if (input_param == &DAT_08007904) {\n    input_param = *(undefined4 **)(data_ptr + 4);\n  }\n  else if (input_param == (undefined4 *)&DAT_08007924) {\n    input_param = *(undefined4 **)(data_ptr + 8);\n  }\n  else if (input_param == (undefined4 *)&DAT_080078e4) {\n    input_param = *(undefined4 **)(data_ptr + 0xc);\n  }\n  flags = *(ushort *)(input_param + 3);\n  result = (uint)flags;\n  if (-1 < (int)(result << 0x1c)) {\n    if (-1 < (int)(result << 0x1b)) {\n      *output_param = 9;\n      goto LAB_08006a14;\n    }\n    if ((int)(result << 0x1d) < 0) {\n      if ((undefined4 *)input_param[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)input_param[0xd] != input_param + 0x11) {\n          FUN_080061f0(output_param);\n        }\n        input_param[0xd] = 0;\n      }\n      *(ushort *)(input_param + 3) = *(ushort *)(input_param + 3) & 0xffdb;\n      input_param[1] = 0;\n      *input_param = input_param[4];\n    }\n    *(ushort *)(input_param + 3) = *(ushort *)(input_param + 3) | 8;\n  }\n  if ((input_param[4] == 0) && ((*(ushort *)(input_param + 3) & 0x280) != 0x200)) {\n    FUN_08006e10(output_param,input_param);\n  }\n  flags = *(ushort *)(input_param + 3);\n  result = flags & 1;\n  if ((flags & 1) == 0) {\n    if (-1 < (int)((uint)flags << 0x1e)) {\n      result = input_param[5];\n    }\n    input_param[2] = result;\n  }\n  else {\n    input_param[2] = 0;\n    input_param[6] = -input_param[5];\n  }\n  if (input_param[4] == 0) {\n    flags = *(ushort *)(input_param + 3);\n    result = (int)(short)flags & 0x80;\n    if (result != 0) {\nLAB_08006a14:\n      *(ushort *)(input_param + 3) = flags | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "current_name": "process_data_080069e4",
            "entrypoint": "0x080069e4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080069e4": "process_data_080069e4",
                "iVar1": "data_ptr",
                "param_1": "output_param",
                "param_2": "input_param",
                "uVar2": "result",
                "uVar3": "flags"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006ac0": {
            "additional_data": {
                "FUN_0800573c": {
                    "extract_data": 7,
                    "extract_integer": 1,
                    "extract_value": 2,
                    "extract_values": 1,
                    "get_data": 3,
                    "get_input_data": 1,
                    "get_value": 3,
                    "get_values": 1,
                    "perform_operation": 1,
                    "process_data": 1,
                    "retrieve_data": 1
                },
                "FUN_080061f0": {
                    "clean_up": 1,
                    "cleanup": 1,
                    "cleanup_data": 3,
                    "cleanup_function": 1,
                    "cleanup_memory": 3,
                    "execute_operation": 1,
                    "modify_value": 1,
                    "perform_action_on_data": 1,
                    "perform_operation": 1,
                    "process_data": 4,
                    "process_value": 1,
                    "release_memory": 1,
                    "reset_data": 1,
                    "reset_pointer": 1,
                    "reset_values": 1
                },
                "FUN_08006ac0": {
                    "extract_and_improve": 1,
                    "process_binary_function": 1,
                    "process_data": 3
                },
                "FUN_08006f00": {
                    "initialize": 7,
                    "initialize_counter": 1,
                    "initialize_data": 2,
                    "initialize_parameter": 1,
                    "initialize_something": 2,
                    "initialize_sub_function": 1,
                    "initialize_value": 2,
                    "initialize_variable": 3,
                    "initialize_variables": 2
                },
                "UNRECOVERED_JUMPTABLE_00": {
                    "jump_table": 12,
                    "jump_table1": 1,
                    "jumptable": 3,
                    "unrecoverable_jump_table": 1,
                    "unrecovered_jump_table": 3,
                    "unrecovered_table": 1
                },
                "VOID_FUN_08006f00": {
                    "initialize": 1
                },
                "bVar11": {
                    "bool_var": 4,
                    "boolean1": 1,
                    "boolean_var1": 1,
                    "boolean_variable": 1,
                    "flag": 3,
                    "is_condition_true": 1,
                    "is_flag_set": 1,
                    "is_offset_zero": 1,
                    "is_temp_counter_zero": 1,
                    "is_true": 3,
                    "is_zero": 4
                },
                "bVar8": {
                    "flag": 1
                },
                "iVar10": {
                    "temp2": 1,
                    "temp_var": 1
                },
                "iVar2": {
                    "counter": 2,
                    "counter_1": 1,
                    "first_variable": 1,
                    "index": 2,
                    "int_value": 1,
                    "int_var1": 1,
                    "int_var2": 1,
                    "integer1": 1,
                    "integer_var": 1,
                    "length": 1,
                    "offset": 2,
                    "result": 1,
                    "temp": 1,
                    "temp_var1": 1,
                    "value": 1,
                    "var1": 1,
                    "variable1": 4
                },
                "iVar7": {
                    "another_integer_var": 1,
                    "counter": 1,
                    "counter_2": 1,
                    "extra_offset": 1,
                    "i_var1": 1,
                    "initial_value": 1,
                    "int_var2": 1,
                    "int_var7": 1,
                    "integer2": 1,
                    "loop_counter": 1,
                    "second_variable": 1,
                    "temp": 1,
                    "temp_count": 1,
                    "temp_counter": 1,
                    "temp_index": 1,
                    "temp_length": 1,
                    "temp_value": 1,
                    "temp_var2": 1,
                    "var2": 1,
                    "variable2": 2,
                    "variable4": 2
                },
                "iVar9": {
                    "counter": 1,
                    "counter_3": 1,
                    "initial_value": 1,
                    "int_var3": 1,
                    "int_var9": 1,
                    "integer3": 1,
                    "length": 1,
                    "loop_count": 1,
                    "loop_counter": 1,
                    "loop_remaining": 1,
                    "num_iterations": 1,
                    "remaining_bytes": 1,
                    "start_index": 1,
                    "temp": 1,
                    "temp_var3": 1,
                    "third_variable": 1,
                    "var1": 1,
                    "var3": 1,
                    "variable3": 2,
                    "variable5": 2,
                    "yet_another_integer_var": 1
                },
                "param_1": {
                    "input_param": 1,
                    "input_value": 1,
                    "num": 1
                },
                "pcVar10": {
                    "process_code": 1
                },
                "pcVar8": {
                    "callback": 3,
                    "callback_func": 2,
                    "callback_function": 2,
                    "function_pointer": 4,
                    "function_pointer1": 1,
                    "function_ptr": 2,
                    "function_ptr1": 1,
                    "function_var": 1,
                    "operation": 1,
                    "pointer4": 1
                },
                "piVar3": {
                    "array_pointer": 1,
                    "data_array": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "info_ptr": 1,
                    "input_array": 2,
                    "int_pointer1": 1,
                    "int_ptr": 1,
                    "parameter_list": 1,
                    "parameters": 1,
                    "pointer2": 4,
                    "pointer_1": 1,
                    "pointer_2": 1,
                    "pointer_to_ints": 1,
                    "pointer_var": 2,
                    "pointer_var1": 1,
                    "ptr3": 1,
                    "ptr_data": 2
                },
                "piVar4": {
                    "another_pointer_var": 1,
                    "int_ptr2": 1,
                    "pointer3": 4,
                    "pointer_3": 2,
                    "pointer_var2": 1,
                    "ptr_temp": 1,
                    "secondary_array_pointer": 1,
                    "temp_array": 1,
                    "temp_data": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 1
                },
                "puVar1": {
                    "data": 1,
                    "data_pointer": 1,
                    "data_ptr": 3,
                    "input_pointer": 1,
                    "param_pointer": 1,
                    "pointer1": 5,
                    "pointer_1": 1,
                    "pointer_2": 1,
                    "pointer_to_uint": 1,
                    "pointer_var2": 1,
                    "pointer_var3": 1,
                    "ptr1": 1,
                    "ptr_uint": 1,
                    "uint_ptr": 1,
                    "uint_var": 1,
                    "value": 1,
                    "value_ptr": 1
                },
                "puVar4": {
                    "ptr_result": 1
                },
                "uVar1": {
                    "extracted_data": 1
                },
                "uVar10": {
                    "original_value": 1,
                    "saved_value": 1,
                    "temp_uint": 2,
                    "temp_value": 2,
                    "uint_var": 1,
                    "uint_var2": 1,
                    "unsigned_integer2": 1,
                    "value": 1,
                    "value3": 1,
                    "value_3": 1,
                    "var2": 1,
                    "variable6": 3,
                    "yet_another_ushort_var": 1
                },
                "uVar11": {
                    "result": 1
                },
                "uVar12": {
                    "extracted_data": 1,
                    "result": 4,
                    "result_ptr": 1,
                    "result_value": 1,
                    "return_value": 2,
                    "u_var3": 1,
                    "ulonglong_var": 1,
                    "undefined_var": 1,
                    "unsigned_long1": 1,
                    "user_data": 1,
                    "value4": 1,
                    "value_4": 1,
                    "variable7": 2
                },
                "uVar5": {
                    "converted_value": 1,
                    "data": 1,
                    "data_size": 1,
                    "data_value": 1,
                    "flag_value": 1,
                    "input_value": 1,
                    "temp_value": 2,
                    "u_var": 1,
                    "uint_value": 1,
                    "uint_var": 2,
                    "unsigned_integer1": 1,
                    "ushort_value": 1,
                    "ushort_var": 2,
                    "value": 3,
                    "value1": 1,
                    "value_1": 1,
                    "variable2": 2,
                    "variable4": 1
                },
                "uVar6": {
                    "another_ushort_var": 1,
                    "data_flag": 1,
                    "extracted_value": 1,
                    "flag": 7,
                    "flags": 1,
                    "input_flag": 1,
                    "temp_ushort": 1,
                    "u_var2": 1,
                    "unsigned_short1": 1,
                    "ushort_value": 1,
                    "ushort_var": 2,
                    "ushort_var2": 1,
                    "value2": 1,
                    "value_2": 1,
                    "variable3": 2,
                    "variable5": 1
                }
            },
            "called": [
                "FUN_08006f00",
                "FUN_0800573c",
                "FUN_080061f0"
            ],
            "calling": [
                "FUN_08007090",
                "FUN_0800611c"
            ],
            "code": "\nvoid process_data_08006ac0(void)\n\n{\n  uint *pointer1;\n  int variable1;\n  int *pointer2;\n  int *pointer3;\n  uint value;\n  ushort flag;\n  int variable4;\n  code *function_pointer;\n  int variable5;\n  uint variable6;\n  code *jump_table;\n  bool bool_var;\n  undefined8 result;\n  \n  FUN_08006f00(6);\n  jump_table = (code *)0x8006acf;\n  result = FUN_0800573c(1);\n  pointer2 = (int *)((ulonglong)result >> 0x20);\n  pointer1 = (uint *)result;\n  flag = *(ushort *)(pointer2 + 3);\n  value = (uint)flag;\n  if ((int)(value << 0x1c) < 0) {\n    variable1 = pointer2[4];\n    if (variable1 != 0) {\n      variable4 = value << 0x1e;\n      bool_var = variable4 != 0;\n      if (bool_var) {\n        variable4 = 0;\n      }\n      variable5 = *pointer2;\n      if (!bool_var) {\n        variable4 = pointer2[5];\n      }\n      *pointer2 = variable1;\n      pointer2[2] = variable4;\n      for (variable5 = variable5 - variable1; 0 < variable5; variable5 = variable5 - variable4) {\n        variable4 = (*(code *)pointer2[10])(pointer1,pointer2[8],variable1,variable5);\n        if (variable4 < 1) {\n          flag = *(ushort *)(pointer2 + 3);\n          goto LAB_08006bc6;\n        }\n        variable1 = variable1 + variable4;\n      }\n    }\n  }\n  else if (((0 < pointer2[1]) || (0 < pointer2[0x10])) &&\n          (function_pointer = (code *)pointer2[0xb], function_pointer != (code *)0x0)) {\n    variable6 = *pointer1;\n    *pointer1 = 0;\n    if ((flag & 0x1000) == 0) {\n      variable1 = (*function_pointer)(pointer1,pointer2[8],value & 0x1000,1);\n      if ((variable1 == -1) && (value = *pointer1, value != 0)) {\n        if ((value != 0x1d) && (value != 0x16)) {\n          *(ushort *)(pointer2 + 3) = *(ushort *)(pointer2 + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          (*jump_table)();\n          return;\n        }\n        *pointer1 = variable6;\n        goto LAB_08006aea;\n      }\n    }\n    else {\n      variable1 = pointer2[0x15];\n    }\n    if (((int)((uint)*(ushort *)(pointer2 + 3) << 0x1d) < 0) &&\n       (variable1 = variable1 - pointer2[1], pointer2[0xd] != 0)) {\n      variable1 = variable1 - pointer2[0x10];\n    }\n    variable1 = (*(code *)pointer2[0xb])(pointer1,pointer2[8],variable1,0);\n    flag = *(ushort *)(pointer2 + 3);\n    if ((variable1 == -1) &&\n       ((0x1d < *pointer1 || (-1 < (int)((0x20400001U >> (*pointer1 & 0xff)) << 0x1f))))) {\nLAB_08006bc6:\n      *(ushort *)(pointer2 + 3) = flag | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006bd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jump_table)(0xffffffff);\n      return;\n    }\n    pointer2[1] = 0;\n    *pointer2 = pointer2[4];\n    if (((int)((uint)flag << 0x13) < 0) && ((variable1 != -1 || (*pointer1 == 0)))) {\n      pointer2[0x15] = variable1;\n    }\n    pointer3 = (int *)pointer2[0xd];\n    *pointer1 = variable6;\n    if (pointer3 != (int *)0x0) {\n      if (pointer3 != pointer2 + 0x11) {\n        FUN_080061f0(pointer1);\n      }\n      pointer2[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08006b66. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jump_table)();\n      return;\n    }\n  }\nLAB_08006aea:\n                    /* WARNING: Could not recover jumptable at 0x08006aec. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)(0);\n  return;\n}\n\n",
            "current_name": "process_data_08006ac0",
            "entrypoint": "0x08006ac0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006ac0": "process_data_08006ac0",
                "UNRECOVERED_JUMPTABLE_00": "jump_table",
                "bVar11": "bool_var",
                "iVar2": "variable1",
                "iVar7": "variable4",
                "iVar9": "variable5",
                "pcVar8": "function_pointer",
                "piVar3": "pointer2",
                "piVar4": "pointer3",
                "puVar1": "pointer1",
                "uVar1": "extracted_data",
                "uVar10": "variable6",
                "uVar12": "result",
                "uVar5": "value",
                "uVar6": "flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006be0": {
            "additional_data": {
                "FUN_08006be0": {
                    "execute_instructions": 1,
                    "process_data": 10,
                    "process_function": 1
                },
                "FUN_08006cb4": {
                    "helper_function": 1
                },
                "UNRECOVERED_JUMPTABLE_00": {
                    "jmp_table": 1,
                    "jump_table": 10,
                    "jump_table_00": 1,
                    "jump_table_func": 1,
                    "jumptable": 5,
                    "jumptable_00": 1,
                    "jumptable_function": 1,
                    "recovered_jumptable": 1,
                    "recovered_table": 1,
                    "unrecovered_jumptable": 1
                },
                "bVar10": {
                    "bool_var": 3,
                    "boolean": 1,
                    "boolean_var": 1,
                    "check_flag": 1,
                    "flag": 3,
                    "flag_var": 1,
                    "is_true": 1,
                    "temp_bool": 1,
                    "var11": 1
                },
                "bVar11": {
                    "flag": 1
                },
                "iVar10": {
                    "flag": 1
                },
                "iVar2": {
                    "buffer_size": 1,
                    "count": 5,
                    "count1": 1,
                    "counter": 2,
                    "current_value": 1,
                    "info_var": 1,
                    "length": 2,
                    "loop_counter1": 1,
                    "num_iterations": 1,
                    "offset": 1,
                    "output_array_val": 1,
                    "size": 1,
                    "temp_int": 1,
                    "temp_var1": 4,
                    "temp_variable": 1,
                    "value": 3,
                    "value_1": 1,
                    "var1": 2,
                    "var2": 1
                },
                "iVar6": {
                    "count": 1,
                    "counter": 1,
                    "i_var6": 1,
                    "increment": 2,
                    "loop_counter2": 1,
                    "loop_var": 1,
                    "remainder": 1,
                    "step": 1,
                    "temp2": 1,
                    "temp3": 1,
                    "temp_i_var": 1,
                    "temp_int": 1,
                    "temp_int2": 1,
                    "temp_integer": 1,
                    "temp_value": 1,
                    "temp_var2": 2,
                    "temp_var3": 3,
                    "temp_var4": 1,
                    "temp_var5": 1,
                    "temp_var_3": 2,
                    "temp_variable": 1,
                    "temporary_variable": 1,
                    "value_3": 1,
                    "var2": 1,
                    "var5": 1,
                    "var6": 1
                },
                "iVar8": {
                    "counter": 2,
                    "counter2": 1,
                    "i_var": 1,
                    "i_var8": 2,
                    "loop_count": 1,
                    "loop_counter": 2,
                    "loop_counter3": 1,
                    "loop_var1": 1,
                    "loop_variable": 1,
                    "remaining": 1,
                    "temp3": 1,
                    "temp_int2": 1,
                    "temp_int3": 1,
                    "temp_offset": 1,
                    "temp_var3": 1,
                    "temp_var4": 2,
                    "temp_var5": 1,
                    "temp_var8": 1,
                    "temp_var_6": 1,
                    "temp_variable": 1,
                    "temp_variable_2": 1,
                    "value_4": 1,
                    "var3": 2,
                    "var8": 2,
                    "var9": 1
                },
                "param_1": {
                    "array": 1,
                    "array1": 2,
                    "array_param": 3,
                    "array_ptr": 1,
                    "data": 3,
                    "data_array": 2,
                    "data_buffer": 2,
                    "data_pointer": 1,
                    "input": 1,
                    "input_array": 3,
                    "input_data": 2,
                    "input_list": 1,
                    "input_params": 2,
                    "param1": 1,
                    "param_array": 3,
                    "parameter_1": 1,
                    "pointer_array": 1,
                    "uint_array": 1
                },
                "param_2": {
                    "array2": 2,
                    "config": 2,
                    "config_params": 1,
                    "data_array": 1,
                    "data_buffer": 1,
                    "flag_array": 1,
                    "info_pointer": 1,
                    "instructions": 1,
                    "int_array": 2,
                    "options": 1,
                    "output_array": 2,
                    "output_data": 2,
                    "output_list": 1,
                    "output_params": 1,
                    "param2": 1,
                    "param_array": 2,
                    "param_pointer": 1,
                    "param_pointer_array": 1,
                    "param_ptr": 1,
                    "parameter_2": 1,
                    "pointer_param": 3,
                    "struct_data": 1,
                    "struct_ptr": 1
                },
                "pcVar7": {
                    "callback": 2,
                    "callback_function": 1,
                    "code_pointer": 1,
                    "func_pointer": 1,
                    "function_pointer": 12,
                    "function_ptr": 11,
                    "instruction_function": 1,
                    "pointer_to_var7": 1,
                    "var8": 1
                },
                "piVar3": {
                    "auxiliary_buffer": 1,
                    "info_ptr": 1,
                    "pointer": 6,
                    "pointer_var": 1,
                    "pointer_var1": 1,
                    "ptr": 3,
                    "ptr_data": 1,
                    "ptr_offset": 1,
                    "ptr_to_var3": 1,
                    "ptr_var": 1,
                    "temp": 1,
                    "temp_array": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 4,
                    "temp_var": 1,
                    "temp_var2": 3,
                    "value_2": 1,
                    "var2": 1,
                    "var_pointer": 1
                },
                "uVar1": {
                    "output": 1,
                    "result": 15,
                    "return_value": 14,
                    "temp3": 1
                },
                "uVar10": {
                    "bool_flag": 1,
                    "bool_result": 1,
                    "bool_value": 3,
                    "bool_var": 2,
                    "bool_var1": 1,
                    "bool_variable": 1,
                    "boolean": 1,
                    "condition": 1,
                    "flag": 1,
                    "temp2": 1,
                    "temp_u_var4": 1,
                    "temp_var10": 1,
                    "u32_flag": 1,
                    "u_var10": 1
                },
                "uVar4": {
                    "instruction": 1,
                    "param_value": 1,
                    "temp": 3,
                    "temp1": 1,
                    "temp_u_var": 1,
                    "temp_uint": 2,
                    "temp_value": 1,
                    "temp_value1": 1,
                    "temp_var": 2,
                    "temp_var1": 2,
                    "temp_var2": 1,
                    "temp_var3": 1,
                    "temp_var_1": 1,
                    "u16_data": 1,
                    "u_var4": 1,
                    "ushort_value": 3,
                    "ushort_var": 4,
                    "ushort_variable": 1,
                    "value": 1,
                    "var3": 1,
                    "var4": 1
                },
                "uVar5": {
                    "flag": 5,
                    "param_count": 1,
                    "temp2": 1,
                    "temp_flag": 1,
                    "temp_u_var2": 1,
                    "temp_ushort": 2,
                    "temp_value2": 1,
                    "temp_var2": 2,
                    "temp_var3": 1,
                    "temp_var4": 1,
                    "temp_var_2": 2,
                    "u16_flag": 1,
                    "ushort_result": 1,
                    "ushort_temp": 1,
                    "ushort_val": 1,
                    "ushort_value": 3,
                    "ushort_var": 1,
                    "ushort_var2": 1,
                    "ushort_variable": 1,
                    "value": 1,
                    "var4": 1,
                    "var5": 1
                },
                "uVar9": {
                    "saved_input": 1,
                    "saved_value": 1,
                    "temp": 1,
                    "temp1": 1,
                    "temp2": 1,
                    "temp4": 1,
                    "temp_u_var3": 1,
                    "temp_uint2": 2,
                    "temp_value": 2,
                    "temp_value3": 1,
                    "temp_value_2": 1,
                    "temp_var3": 2,
                    "temp_var4": 1,
                    "temp_var5": 1,
                    "temp_var6": 1,
                    "temp_var9": 1,
                    "temp_var_4": 1,
                    "temp_var_7": 1,
                    "u32_data": 1,
                    "u_var": 1,
                    "u_var9": 2,
                    "uint_value": 3,
                    "uint_var": 1,
                    "var10": 1,
                    "var9": 1
                },
                "unaff_r4": {
                    "i_var4": 1,
                    "param1": 1,
                    "param4": 1,
                    "register_4": 1,
                    "temp4": 1,
                    "temp_unaff_r4": 1,
                    "temp_var6": 1,
                    "temp_var_4": 1,
                    "unaff_r4": 4,
                    "unaff_reg4": 1,
                    "unaff_var1": 2,
                    "unaffected_r4": 1,
                    "unaffected_reg4": 2,
                    "unaffected_reg_4": 1,
                    "unaffected_register1": 1,
                    "unaffected_register_4": 2,
                    "unaffected_var1": 1,
                    "unaffected_variable_r4": 1,
                    "unassigned_variable4": 1,
                    "unused_var1": 1,
                    "value1": 1,
                    "var1": 2,
                    "var6": 1,
                    "variable1": 1
                },
                "unaff_r5": {
                    "i_var5": 1,
                    "param2": 1,
                    "param5": 1,
                    "register_5": 1,
                    "temp5": 1,
                    "temp_unaff_r5": 1,
                    "temp_var7": 1,
                    "temp_var_5": 1,
                    "unaff_r5": 4,
                    "unaff_reg5": 1,
                    "unaff_var2": 2,
                    "unaffected_r5": 1,
                    "unaffected_reg5": 2,
                    "unaffected_reg_5": 1,
                    "unaffected_register2": 1,
                    "unaffected_register_5": 2,
                    "unaffected_var2": 1,
                    "unaffected_variable_r5": 1,
                    "unassigned_variable5": 1,
                    "unused_var2": 1,
                    "value2": 1,
                    "var2": 2,
                    "var7": 1,
                    "variable2": 1
                }
            },
            "called": [
                "FUN_08006cb4"
            ],
            "calling": [
                "FUN_08006344"
            ],
            "code": "\nundefined4 process_data_08006be0(uint *array_param,int *pointer_param)\n\n{\n  undefined4 result;\n  int count;\n  int *pointer;\n  uint ushort_var;\n  ushort flag;\n  int temp_var3;\n  undefined4 unaff_r4;\n  undefined4 unaff_r5;\n  code *function_pointer;\n  int var8;\n  uint uint_value;\n  code *jump_table;\n  bool flag;\n  \n  if (pointer_param[4] != 0) {\n    if ((array_param != (uint *)0x0) && (array_param[6] == 0)) {\n      FUN_08006cb4();\n    }\n    if (pointer_param == &DAT_08007904) {\n      pointer_param = (int *)array_param[1];\n    }\n    else if (pointer_param == (int *)&DAT_08007924) {\n      pointer_param = (int *)array_param[2];\n    }\n    else if (pointer_param == (int *)&DAT_080078e4) {\n      pointer_param = (int *)array_param[3];\n    }\n    if (*(short *)(pointer_param + 3) != 0) {\n      flag = *(ushort *)(pointer_param + 3);\n      ushort_var = (uint)flag;\n      if ((int)(ushort_var << 0x1c) < 0) {\n        count = pointer_param[4];\n        if (count != 0) {\n          temp_var3 = ushort_var << 0x1e;\n          flag = temp_var3 != 0;\n          if (flag) {\n            temp_var3 = 0;\n          }\n          var8 = *pointer_param;\n          if (!flag) {\n            temp_var3 = pointer_param[5];\n          }\n          *pointer_param = count;\n          pointer_param[2] = temp_var3;\n          for (var8 = var8 - count; 0 < var8; var8 = var8 - temp_var3) {\n            temp_var3 = (*(code *)pointer_param[10])(array_param,pointer_param[8],count,var8,unaff_r4,unaff_r5);\n            if (temp_var3 < 1) {\n              flag = *(ushort *)(pointer_param + 3);\n              goto LAB_08006bc6;\n            }\n            count = count + temp_var3;\n          }\n        }\n      }\n      else if (((0 < pointer_param[1]) || (0 < pointer_param[0x10])) &&\n              (function_pointer = (code *)pointer_param[0xb], function_pointer != (code *)0x0)) {\n        uint_value = *array_param;\n        *array_param = 0;\n        if ((flag & 0x1000) == 0) {\n          count = (*function_pointer)(array_param,pointer_param[8],ushort_var & 0x1000,1);\n          if ((count == -1) && (ushort_var = *array_param, ushort_var != 0)) {\n            if ((ushort_var != 0x1d) && (ushort_var != 0x16)) {\n              *(ushort *)(pointer_param + 3) = *(ushort *)(pointer_param + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              result = (*jump_table)();\n              return result;\n            }\n            *array_param = uint_value;\n            goto LAB_08006aea;\n          }\n        }\n        else {\n          count = pointer_param[0x15];\n        }\n        if (((int)((uint)*(ushort *)(pointer_param + 3) << 0x1d) < 0) &&\n           (count = count - pointer_param[1], pointer_param[0xd] != 0)) {\n          count = count - pointer_param[0x10];\n        }\n        count = (*(code *)pointer_param[0xb])(array_param,pointer_param[8],count,0);\n        flag = *(ushort *)(pointer_param + 3);\n        if ((count == -1) &&\n           ((0x1d < *array_param || (-1 < (int)((0x20400001U >> (*array_param & 0xff)) << 0x1f))))) {\nLAB_08006bc6:\n          *(ushort *)(pointer_param + 3) = flag | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006bd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          result = (*jump_table)(0xffffffff);\n          return result;\n        }\n        pointer_param[1] = 0;\n        *pointer_param = pointer_param[4];\n        if (((int)((uint)flag << 0x13) < 0) && ((count != -1 || (*array_param == 0)))) {\n          pointer_param[0x15] = count;\n        }\n        pointer = (int *)pointer_param[0xd];\n        *array_param = uint_value;\n        if (pointer != (int *)0x0) {\n          if (pointer != pointer_param + 0x11) {\n            FUN_080061f0(array_param);\n          }\n          pointer_param[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08006b66. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          result = (*jump_table)();\n          return result;\n        }\n      }\nLAB_08006aea:\n                    /* WARNING: Could not recover jumptable at 0x08006aec. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      result = (*jump_table)(0);\n      return result;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_data_08006be0",
            "entrypoint": "0x08006be0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006be0": "process_data_08006be0",
                "UNRECOVERED_JUMPTABLE_00": "jump_table",
                "bVar10": "flag",
                "iVar2": "count",
                "iVar6": "temp_var3",
                "iVar8": "var8",
                "param_1": "array_param",
                "param_2": "pointer_param",
                "pcVar7": "function_pointer",
                "piVar3": "pointer",
                "uVar1": "result",
                "uVar4": "ushort_var",
                "uVar5": "flag",
                "uVar9": "uint_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006c40": {
            "additional_data": {
                "FUN_080061e0": {
                    "fill_array": 1,
                    "fill_data": 1,
                    "fill_memory": 1,
                    "initialize_array": 4,
                    "initialize_data": 1,
                    "initialize_memory": 10,
                    "initialize_subarray": 1,
                    "set_initial_values": 1,
                    "set_memory": 9
                },
                "FUN_08006c40": {
                    "initialize_data": 8,
                    "initialize_data_struct": 1,
                    "initialize_data_structure": 6,
                    "initialize_param": 3,
                    "initialize_param_array": 1,
                    "initialize_parameters": 7,
                    "initialize_params": 3,
                    "initialize_struct": 2
                },
                "LAB_08006fb6_1": {
                    "label": 1,
                    "label1": 1
                },
                "param_1": {
                    "array": 3,
                    "buffer": 1,
                    "data": 3,
                    "data_array": 1,
                    "data_structure": 3,
                    "mem": 1,
                    "mem_array": 1,
                    "mem_ptr": 1,
                    "memory": 6,
                    "memory_array": 1,
                    "memory_block": 1,
                    "memory_pointer": 1,
                    "parameters": 4,
                    "struct_pointer": 2,
                    "subarray": 1,
                    "values": 1
                },
                "param_2": {
                    "default_byte": 1,
                    "default_value": 5,
                    "fill_value": 1,
                    "initial_value": 8,
                    "val": 1,
                    "value": 7,
                    "value1": 8
                },
                "param_3": {
                    "array_size": 1,
                    "count": 1,
                    "length": 9,
                    "num_bytes": 1,
                    "size": 11,
                    "value2": 8
                }
            },
            "called": [
                "FUN_080061e0"
            ],
            "calling": [
                "FUN_08006cb4"
            ],
            "code": "\nvoid initialize_data_structure_08006c40(undefined4 *memory,undefined2 value1,undefined2 size)\n\n{\n  *memory = 0;\n  memory[1] = 0;\n  memory[2] = 0;\n  *(undefined2 *)(memory + 3) = value1;\n  memory[0x19] = 0;\n  *(undefined2 *)((int)memory + 0xe) = size;\n  memory[4] = 0;\n  memory[5] = 0;\n  memory[6] = 0;\n  FUN_080061e0(memory + 0x17,0,8);\n  memory[8] = memory;\n  memory[9] = 0x8006f39;\n  memory[10] = 0x8006f5b;\n  memory[0xb] = 0x8006f93;\n  memory[0xc] = &label;\n  return;\n}\n\n",
            "current_name": "initialize_data_structure_08006c40",
            "entrypoint": "0x08006c40",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006c40": "initialize_data_structure_08006c40",
                "LAB_08006fb6_1": "label",
                "param_1": "memory",
                "param_2": "value1",
                "param_3": "size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006c88": {
            "additional_data": {
                "FUN_080061e0": {
                    "clear_memory": 1,
                    "initialize_memory": 13,
                    "initialize_values": 1,
                    "memset_array": 1
                },
                "FUN_08006288": {
                    "allocate_memory": 16
                },
                "FUN_08006c88": {
                    "allocate_and_initialize_memory": 1,
                    "initialize_and_allocate_memory": 1,
                    "initialize_array": 4,
                    "initialize_data_structure": 24,
                    "initialize_memory_block": 1
                },
                "iVar2": {
                    "calculated_index": 1,
                    "index": 5,
                    "offset": 24,
                    "size": 1
                },
                "param_1": {
                    "arg1": 4,
                    "array": 1,
                    "base_pointer": 1,
                    "data": 6,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "data_structure": 1,
                    "input": 1,
                    "input_array": 3,
                    "input_data": 1,
                    "input_param": 2,
                    "input_parameter": 1,
                    "input_pointer": 1,
                    "input_value": 3,
                    "ptr": 1,
                    "start_address": 1,
                    "value": 1
                },
                "param_2": {
                    "allocation_size": 1,
                    "arg2": 1,
                    "array_length": 1,
                    "array_size": 2,
                    "count": 1,
                    "iteration_count": 1,
                    "memory_size": 2,
                    "number_of_elements": 1,
                    "size": 20,
                    "total_size": 1
                },
                "param_3": {
                    "length": 2,
                    "memory_length": 1,
                    "memory_size": 1,
                    "size": 2
                },
                "puVar1": {
                    "allocated_array": 1,
                    "allocated_memory": 3,
                    "array": 1,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "data_structure": 6,
                    "data_structure_ptr": 1,
                    "memory_block": 1,
                    "memory_pointer": 1,
                    "new_array": 2,
                    "new_pointer": 1,
                    "new_structure": 1,
                    "pointer": 2,
                    "pointer_to_data": 2,
                    "ptr": 2,
                    "ptr_result": 1,
                    "ptr_to_data_structure": 1,
                    "result_pointer": 1,
                    "result_ptr": 1
                }
            },
            "called": [
                "FUN_080061e0",
                "FUN_08006288"
            ],
            "calling": [
                "FUN_08006d14"
            ],
            "code": "\nundefined4 * initialize_data_structure_08006c88(undefined4 data,int size)\n\n{\n  undefined4 *data_structure;\n  int offset;\n  \n  offset = (size + -1) * 0x68;\n  data_structure = (undefined4 *)FUN_08006288(data,offset + 0x74);\n  if (data_structure != (undefined4 *)0x0) {\n    *data_structure = 0;\n    data_structure[1] = size;\n    data_structure[2] = data_structure + 3;\n    FUN_080061e0(data_structure + 3,0,offset + 0x68);\n  }\n  return data_structure;\n}\n\n",
            "current_name": "initialize_data_structure_08006c88",
            "entrypoint": "0x08006c88",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006c88": "initialize_data_structure_08006c88",
                "iVar2": "offset",
                "param_1": "data",
                "param_2": "size",
                "puVar1": "data_structure"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006cb4": {
            "additional_data": {
                "DAT_200000fc": {
                    "some_data": 1
                },
                "FUN_08006c40": {
                    "initialize_array_element": 1,
                    "initialize_memory": 2,
                    "modify_data": 1,
                    "set_array_values": 1,
                    "set_data": 2,
                    "set_data_value": 6,
                    "set_memory": 4,
                    "set_memory_attributes": 1,
                    "set_memory_value": 1,
                    "set_param_values": 1,
                    "set_values": 10
                },
                "FUN_08006cb4": {
                    "initialize_data": 22,
                    "initialize_param": 2,
                    "initialize_parameters": 5,
                    "initialize_params": 2
                },
                "FUN_08006d14": {
                    "allocate_memory": 26,
                    "create_array": 1,
                    "create_data": 1,
                    "create_int_array": 1,
                    "get_integer_value": 1
                },
                "LAB_08006c34_1": {
                    "constant_value": 1,
                    "default_pointer": 1,
                    "label": 1
                },
                "param_1": {
                    "data": 16,
                    "data_array": 3,
                    "data_pointer": 3,
                    "param": 1,
                    "param_array": 1,
                    "parameters": 4,
                    "params": 3
                },
                "param_2": {
                    "size": 2
                },
                "param_3": {
                    "attribute1": 1,
                    "index": 1
                },
                "param_4": {
                    "attribute2": 1,
                    "type": 1
                },
                "puVar2": {
                    "new_pointer": 1,
                    "pointer": 12,
                    "ptr": 2,
                    "temp": 2,
                    "temp_pointer": 4,
                    "temp_ptr": 7,
                    "temp_var": 1,
                    "temp_var2": 1,
                    "temporary_pointer": 1
                },
                "uVar1": {
                    "new_variable1": 1,
                    "result": 22,
                    "return_value": 7,
                    "temp_var1": 1
                }
            },
            "called": [
                "FUN_08006d14",
                "FUN_08006c40"
            ],
            "calling": [
                "FUN_08006d14",
                "FUN_080069e4",
                "FUN_08006344",
                "FUN_080068f0",
                "FUN_08006394",
                "FUN_08006be0"
            ],
            "code": "\nvoid initialize_data_08006cb4(undefined4 *data)\n\n{\n  undefined4 result;\n  undefined4 *pointer;\n  \n  if (data[6] == 0) {\n    data[0x12] = 0;\n    data[0x13] = 0;\n    data[0x14] = 0;\n    pointer = &DAT_200000fc;\n    data[10] = &label;\n    if (data == &DAT_200000fc) {\n      pointer = (undefined4 *)0x1;\n    }\n    if (data == &DAT_200000fc) {\n      data[6] = pointer;\n    }\n    result = FUN_08006d14();\n    data[1] = result;\n    result = FUN_08006d14(data);\n    data[2] = result;\n    result = FUN_08006d14(data);\n    data[3] = result;\n    FUN_08006c40(data[1],4,0);\n    FUN_08006c40(data[2],9,1);\n    FUN_08006c40(data[3],0x12,2);\n    data[6] = 1;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_data_08006cb4",
            "entrypoint": "0x08006cb4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006cb4": "initialize_data_08006cb4",
                "LAB_08006c34_1": "label",
                "param_1": "data",
                "puVar2": "pointer",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006d14": {
            "additional_data": {
                "DAT_200000fc": {
                    "data_buffer": 1,
                    "global_data": 1,
                    "initial_data": 1,
                    "resource_table_param": 1
                },
                "DAT_20000114": {
                    "": 1,
                    "data_flag": 5,
                    "global_flag": 1,
                    "initialized": 1,
                    "initialized_flag": 2,
                    "is_initialized": 1,
                    "is_resource_table_initialized": 1
                },
                "DAT_20000144": {
                    "array_list_head": 1,
                    "data_array": 1,
                    "data_ptr_array": 1,
                    "resource_list_head": 1
                },
                "FUN_080061e0": {
                    "fill_data": 1,
                    "initialize_array": 4,
                    "initialize_data": 1,
                    "initialize_inner_variable": 1,
                    "initialize_memory": 2,
                    "initialize_object": 1,
                    "initialize_sub_element": 1,
                    "initialize_sub_entry": 1,
                    "reset_data": 1,
                    "set_initial_values": 1,
                    "set_resource_entry_properties": 1,
                    "set_values": 1,
                    "zero_memory": 1
                },
                "FUN_08006c88": {
                    "allocate_memory": 17,
                    "create_entry": 1
                },
                "FUN_08006cb4": {
                    "initialize_array": 1,
                    "initialize_dat_200000fc": 1,
                    "initialize_data": 13,
                    "initialize_data_table": 1,
                    "initialize_entry": 1,
                    "initialize_global_data": 1,
                    "initialize_if_needed": 1,
                    "initialize_resource_table": 1,
                    "initialize_variable": 1,
                    "initialize_variables": 1
                },
                "FUN_08006d14": {
                    "check_and_initialize_data": 1,
                    "extract_data_from_binary": 1,
                    "find_and_initialize_objects": 2,
                    "find_first_available_int": 1,
                    "find_initialized_memory": 1,
                    "find_initialized_variable": 1,
                    "find_matching_pointer": 1,
                    "find_pointer": 1,
                    "find_unused_resource": 2,
                    "find_valid_entry": 1,
                    "initialize_data": 2,
                    "initialize_data_structure": 1,
                    "initiate_process": 1,
                    "process_data": 3
                },
                "param_1": {
                    "array_pointer": 1,
                    "data": 1,
                    "data_array": 1,
                    "data_pointer": 1,
                    "error": 1,
                    "error_code": 2,
                    "error_flag": 1,
                    "input_array": 1,
                    "input_buffer": 1,
                    "input_data": 1,
                    "input_pointer": 2,
                    "input_ptr": 2,
                    "output": 1,
                    "output_array": 1,
                    "output_param": 1,
                    "output_pointer": 1,
                    "output_value": 1,
                    "output_var": 1,
                    "pointer_array": 1,
                    "resource_table": 1,
                    "result": 6,
                    "result_pointer": 1,
                    "result_ptr": 1
                },
                "param_2": {
                    "": 1,
                    "arg2": 2,
                    "input1": 4,
                    "input_param_1": 1,
                    "input_value1": 1,
                    "input_var1": 1,
                    "length_1": 1,
                    "param2": 11,
                    "param_2": 5,
                    "size": 2,
                    "unknown": 1,
                    "value1": 1
                },
                "param_3": {
                    "": 1,
                    "arg3": 2,
                    "input2": 4,
                    "input_param_2": 1,
                    "input_value2": 1,
                    "input_var2": 1,
                    "length_2": 1,
                    "param3": 11,
                    "param_3": 6,
                    "unknown": 1,
                    "value": 1,
                    "value2": 1
                },
                "param_4": {
                    "": 1,
                    "arg4": 2,
                    "input3": 4,
                    "input_param_3": 1,
                    "input_value3": 1,
                    "input_var3": 1,
                    "param4": 11,
                    "param_4": 8,
                    "size": 1,
                    "value3": 1
                },
                "piVar1": {
                    "current_array_element": 1,
                    "current_data": 1,
                    "current_element": 1,
                    "current_entry": 1,
                    "current_int": 1,
                    "current_item": 1,
                    "current_num": 1,
                    "current_pointer": 7,
                    "current_pointer1": 1,
                    "current_ptr": 4,
                    "current_resource": 2,
                    "current_source": 1,
                    "inner_loop_counter": 1,
                    "inner_loop_index": 1,
                    "inner_pointer1": 1,
                    "inner_variable_1": 1,
                    "iterator": 1,
                    "iterator1": 1,
                    "new_pointer": 1,
                    "object_index": 1,
                    "subarray_ptr": 1
                },
                "piVar2": {
                    "current_array": 1,
                    "current_array_pointer": 1,
                    "current_array_ptr": 1,
                    "current_element": 1,
                    "current_pointer": 1,
                    "current_pointer2": 2,
                    "current_resource_entry": 1,
                    "current_sub_element": 1,
                    "current_target": 1,
                    "current_value": 1,
                    "inner_loop_pointer": 1,
                    "inner_pointer": 5,
                    "inner_pointer2": 1,
                    "inner_ptr": 1,
                    "inner_variable_2": 1,
                    "iterator2": 1,
                    "nested_loop_pointer": 1,
                    "nested_pointer": 2,
                    "nested_ptr": 1,
                    "next_ptr": 1,
                    "object_ptr": 2,
                    "ptr_to_data": 1,
                    "resource": 1,
                    "sub_entry": 1
                },
                "ppiVar3": {
                    "array_list": 1,
                    "array_of_arrays_ptr": 1,
                    "array_pointer_pointer": 1,
                    "data_pointer_array": 1,
                    "data_ptr": 1,
                    "double_pointer": 1,
                    "entry_list": 1,
                    "item_list": 1,
                    "linked_list": 1,
                    "list_ptr": 1,
                    "memory_array": 1,
                    "nested_pointer_pointer": 1,
                    "nested_ptr_list": 1,
                    "object_list_ptr": 2,
                    "outer_loop_pointer": 1,
                    "outer_ptr": 1,
                    "parent_loop_pointer": 1,
                    "pointer_array": 6,
                    "pointer_list": 1,
                    "pointer_pointer": 1,
                    "pointer_pointer_array": 1,
                    "pointer_to_pointer": 1,
                    "ptr_to_ptr": 1,
                    "resource_list": 2
                }
            },
            "called": [
                "FUN_080061e0",
                "FUN_08006cb4",
                "FUN_08006c88"
            ],
            "calling": [
                "FUN_08006cb4"
            ],
            "code": "\nint * check_and_initialize_data_08006d14(undefined4 *result,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int *current_pointer;\n  int *inner_pointer;\n  int **pointer_array;\n  \n  if (DAT_20000114 == 0) {\n    FUN_08006cb4(&DAT_200000fc);\n  }\n  pointer_array = (int **)&DAT_20000144;\n  do {\n    inner_pointer = pointer_array[2];\n    current_pointer = pointer_array[1];\n    while (current_pointer = (int *)((int)current_pointer + -1), -1 < (int)current_pointer) {\n      if (*(short *)(inner_pointer + 3) == 0) {\n        *(undefined2 *)((int)inner_pointer + 0xe) = 0xffff;\n        inner_pointer[0x19] = 0;\n        *(undefined2 *)(inner_pointer + 3) = 1;\n        *inner_pointer = 0;\n        inner_pointer[2] = 0;\n        inner_pointer[1] = 0;\n        inner_pointer[4] = 0;\n        inner_pointer[5] = 0;\n        inner_pointer[6] = 0;\n        FUN_080061e0(inner_pointer + 0x17,0,8,1,param4);\n        inner_pointer[0xd] = 0;\n        inner_pointer[0xe] = 0;\n        inner_pointer[0x12] = 0;\n        inner_pointer[0x13] = 0;\n        return inner_pointer;\n      }\n      inner_pointer = inner_pointer + 0x1a;\n    }\n    if (*pointer_array == (int *)0x0) {\n      current_pointer = (int *)FUN_08006c88(result,4);\n      *pointer_array = current_pointer;\n      if (current_pointer == (int *)0x0) {\n        *result = 0xc;\n        return (int *)0x0;\n      }\n    }\n    pointer_array = (int **)*pointer_array;\n  } while( true );\n}\n\n",
            "current_name": "check_and_initialize_data_08006d14",
            "entrypoint": "0x08006d14",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006d14": "check_and_initialize_data_08006d14",
                "param_1": "result",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "piVar1": "current_pointer",
                "piVar2": "inner_pointer",
                "ppiVar3": "pointer_array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006dc8": {
            "additional_data": {
                "FUN_08006dc8": {
                    "analyze_file": 1,
                    "calculate_permissions": 1,
                    "check_access": 1,
                    "check_and_assign_permission": 1,
                    "check_and_set_permission_flag": 1,
                    "check_file_permissions": 5,
                    "check_file_type": 1,
                    "check_memory_permissions": 1,
                    "check_permission": 2,
                    "check_permissions": 9,
                    "check_program_status": 1,
                    "determine_permission": 1,
                    "determine_permission_status": 1,
                    "extract_and_analyze_flags": 1,
                    "extract_flags": 1,
                    "identify_memory_segment": 1,
                    "process_file_permissions": 1,
                    "process_function": 1
                },
                "auStack_4c": {
                    "auxiliary_stack": 1,
                    "buffer": 1,
                    "local_buffer": 1,
                    "stack_array": 2,
                    "stack_buffer": 3,
                    "stack_data": 1,
                    "stack_temp": 1,
                    "stack_var": 2,
                    "stack_variable": 1,
                    "temp": 1,
                    "temp_array": 2,
                    "temp_buffer": 6,
                    "temp_stack": 7,
                    "temporary_array": 1,
                    "temporary_buffer": 1
                },
                "iVar1": {
                    "error_code": 3,
                    "function_result": 1,
                    "permission_check_result": 1,
                    "result": 16,
                    "return_value": 4,
                    "status": 6
                },
                "local_48": {
                    "file_attributes": 3,
                    "file_flags": 1,
                    "file_permissions": 1,
                    "file_type": 1,
                    "flags": 4,
                    "local_array": 1,
                    "local_flags": 4,
                    "local_value": 2,
                    "local_var": 3,
                    "local_variable": 4,
                    "status": 1,
                    "temp_value": 3,
                    "temp_var": 1,
                    "value": 2
                },
                "param_1": {
                    "arg1": 1,
                    "buffer": 1,
                    "data": 1,
                    "file": 1,
                    "file_data": 1,
                    "file_pointer": 1,
                    "h_file": 1,
                    "handle": 1,
                    "input": 3,
                    "input_1": 1,
                    "input_buffer": 2,
                    "input_data": 1,
                    "input_file_handle": 1,
                    "input_parameter": 1,
                    "input_pointer": 1,
                    "param1": 7,
                    "param_1": 3,
                    "program": 1,
                    "ptr1": 1,
                    "status": 1
                },
                "param_2": {
                    "arg2": 1,
                    "array_address": 1,
                    "buffer_size": 1,
                    "data": 2,
                    "file_header": 2,
                    "file_header_offset": 1,
                    "file_info_buffer": 1,
                    "header_offset": 1,
                    "info": 2,
                    "info_pointer": 1,
                    "input_2": 1,
                    "input_buffer": 1,
                    "input_data": 2,
                    "input_ptr": 1,
                    "input_size": 1,
                    "location": 1,
                    "metadata": 1,
                    "offset": 1,
                    "param2": 8,
                    "permissions": 1
                },
                "param_3": {
                    "file_status": 1,
                    "file_type": 1,
                    "output": 3,
                    "output_1": 1,
                    "output_data": 1,
                    "output_flags": 3,
                    "output_parameter": 1,
                    "output_permission": 1,
                    "output_status": 1,
                    "output_value": 1,
                    "param3": 4,
                    "permission_flag": 2,
                    "permission_status": 1,
                    "result": 4,
                    "result1": 1,
                    "result_code": 1,
                    "result_status": 1,
                    "result_value": 1,
                    "status": 2
                },
                "param_4": {
                    "flag": 1,
                    "flag_parameter": 1,
                    "flags": 5,
                    "is_executable": 3,
                    "is_memory_valid": 1,
                    "output": 1,
                    "output_2": 1,
                    "output_flag": 3,
                    "output_result": 1,
                    "output_value": 2,
                    "param4": 4,
                    "permission_flag": 1,
                    "permissions": 1,
                    "ptr3": 1,
                    "result": 2,
                    "result2": 1,
                    "result_flag": 1,
                    "status": 1
                },
                "uVar2": {
                    "access_level": 1,
                    "file_permission": 1,
                    "flag": 3,
                    "flag_value": 1,
                    "flags": 1,
                    "new_flag": 1,
                    "output_code": 1,
                    "permission": 10,
                    "permission_flag": 2,
                    "permission_value": 5,
                    "return_value": 1,
                    "segment_type": 1,
                    "status_code": 2
                }
            },
            "called": [
                "FUN_08007004"
            ],
            "calling": [
                "FUN_08006e10"
            ],
            "code": "\nundefined4 check_file_permissions_08006dc8(undefined4 param1,int param2,undefined4 *result,uint *flags)\n\n{\n  int result;\n  undefined4 permission;\n  undefined temp_stack [4];\n  uint local_variable;\n  \n  if ((*(short *)(param2 + 0xe) < 0) ||\n     (result = FUN_08007004(param1,(int)*(short *)(param2 + 0xe),temp_stack), result < 0)) {\n    *flags = 0;\n    if ((int)((uint)*(ushort *)(param2 + 0xc) << 0x18) < 0) {\n      permission = 0x40;\n      goto LAB_08006e08;\n    }\n  }\n  else {\n    *flags = (uint)((local_variable & 0xf000) == 0x2000);\n  }\n  permission = 0x400;\nLAB_08006e08:\n  *result = permission;\n  return 0;\n}\n\n",
            "current_name": "check_file_permissions_08006dc8",
            "entrypoint": "0x08006dc8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006dc8": "check_file_permissions_08006dc8",
                "auStack_4c": "temp_stack",
                "iVar1": "result",
                "local_48": "local_variable",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "result",
                "param_4": "flags",
                "uVar2": "permission"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006e10": {
            "additional_data": {
                "FUN_08006288": {
                    "process_sub_function3": 1
                },
                "FUN_08006dc8": {
                    "process_sub_function1": 1
                },
                "FUN_08006e10": {
                    "process_binary_data": 1,
                    "process_data": 16,
                    "process_function": 6,
                    "process_params": 1,
                    "update_data": 2,
                    "update_function": 1,
                    "validate_and_update_parameters": 1
                },
                "FUN_08007028": {
                    "process_sub_function2": 1
                },
                "F_UND_08006e10": {
                    "validate_and_update_data": 1
                },
                "iVar2": {
                    "check": 1,
                    "check_flag": 1,
                    "check_result": 1,
                    "error_code": 2,
                    "is_valid": 1,
                    "loop_counter": 1,
                    "result": 4,
                    "result2": 2,
                    "result_2": 1,
                    "result_var2": 1,
                    "return_value": 8,
                    "status": 8
                },
                "local_14": {
                    "another_variable": 1,
                    "local_array": 3,
                    "local_data": 1,
                    "local_data2": 2,
                    "local_param2": 1,
                    "local_params": 1,
                    "local_value_2": 1,
                    "local_var2": 5,
                    "local_variable2": 2,
                    "temp2": 4,
                    "temp_array": 2,
                    "temp_data": 1,
                    "temp_output": 1,
                    "temp_param2": 1,
                    "temp_pointer": 1,
                    "temp_var2": 4
                },
                "local_18": {
                    "local_data": 3,
                    "local_data1": 2,
                    "local_data_offset": 1,
                    "local_param1": 1,
                    "local_value": 2,
                    "local_value_1": 1,
                    "local_var1": 5,
                    "local_variable1": 2,
                    "some_variable": 1,
                    "temp1": 4,
                    "temp_input": 1,
                    "temp_param": 1,
                    "temp_value": 2,
                    "temp_var": 1,
                    "temp_var1": 4
                },
                "param_1": {
                    "binary_data": 1,
                    "data": 1,
                    "data_length": 1,
                    "data_offset": 1,
                    "data_pointer": 4,
                    "data_ptr": 1,
                    "input": 8,
                    "input_data": 2,
                    "input_param": 4,
                    "input_param1": 1,
                    "input_value": 6,
                    "param1": 1
                },
                "param_2": {
                    "buffer": 1,
                    "data": 6,
                    "data_array": 1,
                    "data_ptr": 1,
                    "data_struct": 1,
                    "input_param2": 1,
                    "output": 4,
                    "output_array": 6,
                    "output_buffer": 1,
                    "output_data": 2,
                    "output_param": 3,
                    "param2": 1,
                    "param_array": 1,
                    "parameters": 1,
                    "params": 1
                },
                "uVar1": {
                    "combined_flags": 1,
                    "flag": 2,
                    "modified_value": 1,
                    "result": 20,
                    "result1": 2,
                    "result_1": 1,
                    "result_flag": 2,
                    "result_var": 1,
                    "result_var1": 1
                }
            },
            "called": [
                "FUN_08006dc8",
                "FUN_08007028",
                "FUN_08006288"
            ],
            "calling": [
                "FUN_080069e4"
            ],
            "code": "\nvoid process_binary_data_08006e10(int input,int *output_array)\n\n{\n  ushort result;\n  int return_value;\n  int local_var1;\n  int *local_var2;\n  \n  if (-1 < (int)((uint)*(ushort *)(output_array + 3) << 0x1e)) {\n    local_var1 = input;\n    local_var2 = output_array;\n    result = FUN_08006dc8(input,output_array,&local_var1,&local_var2);\n    return_value = FUN_08006288(input,local_var1);\n    if (return_value != 0) {\n      *(undefined **)(input + 0x28) = &LAB_08006c34_1;\n      *output_array = return_value;\n      *(ushort *)(output_array + 3) = *(ushort *)(output_array + 3) | 0x80;\n      output_array[4] = return_value;\n      output_array[5] = local_var1;\n      if ((local_var2 != (int *)0x0) &&\n         (return_value = FUN_08007028(input,(int)*(short *)((int)output_array + 0xe)), return_value != 0)) {\n        *(ushort *)(output_array + 3) = *(ushort *)(output_array + 3) & 0xfffc | 1;\n      }\n      *(ushort *)(output_array + 3) = result | *(ushort *)(output_array + 3);\n      return;\n    }\n    if ((int)(short)*(ushort *)(output_array + 3) << 0x16 < 0) {\n      return;\n    }\n    *(ushort *)(output_array + 3) = *(ushort *)(output_array + 3) & 0xfffc | 2;\n  }\n  *output_array = (int)output_array + 0x47;\n  output_array[4] = (int)output_array + 0x47;\n  output_array[5] = 1;\n  return;\n}\n\n",
            "current_name": "process_binary_data_08006e10",
            "entrypoint": "0x08006e10",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006e10": "process_binary_data_08006e10",
                "iVar2": "return_value",
                "local_14": "local_var2",
                "local_18": "local_var1",
                "param_1": "input",
                "param_2": "output_array",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006e90": {
            "additional_data": {
                "FUN_08006e90": {
                    "find_char": 1,
                    "find_char_in_string": 2,
                    "find_character": 16,
                    "find_character_in_string": 3,
                    "find_character_index": 1,
                    "find_first_occurrence": 8
                },
                "param_1": {
                    "input_string": 4,
                    "str": 4,
                    "string": 23
                },
                "param_2": {
                    "char_to_find": 1,
                    "character": 22,
                    "character_to_find": 1,
                    "target": 1,
                    "target_char": 5,
                    "target_character": 1
                },
                "param_3": {
                    "input_length": 2,
                    "length": 23,
                    "str_length": 1,
                    "string_length": 4
                },
                "pcVar1": {
                    "curr_char": 1,
                    "current_char": 14,
                    "current_char_ptr": 3,
                    "current_character": 3,
                    "current_position": 3,
                    "current_ptr": 1,
                    "ptr": 1
                },
                "pcVar2": {
                    "current_char": 1,
                    "current_character": 1,
                    "current_ptr": 1,
                    "found_char": 1,
                    "next_char": 14,
                    "next_char_ptr": 2,
                    "next_character": 3,
                    "next_position": 2,
                    "next_ptr": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08006394",
                "FUN_080066b0"
            ],
            "code": "\nchar * find_character_in_string_08006e90(char *string,char character,int length)\n\n{\n  char *current_char;\n  char *next_char;\n  \n  current_char = string;\n  do {\n    next_char = current_char;\n    if (next_char == string + length) {\n      return (char *)0x0;\n    }\n    current_char = next_char + 1;\n  } while (*next_char != character);\n  return next_char;\n}\n\n",
            "current_name": "find_character_in_string_08006e90",
            "entrypoint": "0x08006e90",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006e90": "find_character_in_string_08006e90",
                "param_1": "string",
                "param_2": "character",
                "param_3": "length",
                "pcVar1": "current_char",
                "pcVar2": "next_char"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006eac": {
            "called": [],
            "calling": [
                "FUN_080061f0",
                "FUN_08006288"
            ],
            "code": "\nvoid FUNC_08006eac(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08006eac",
            "entrypoint": "0x08006eac",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08006eac": "FUNC_08006eac"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08006eae": {
            "called": [],
            "calling": [
                "FUN_080061f0",
                "FUN_08006288"
            ],
            "code": "\nvoid FUNC_08006eae(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08006eae",
            "entrypoint": "0x08006eae",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08006eae": "FUNC_08006eae"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08006f00": {
            "additional_data": {
                "DAT_200000f8": {
                    "array": 1,
                    "data_array": 1,
                    "function_table": 1
                },
                "DAT_200006a4": {
                    "error_value": 1,
                    "temp_value": 1
                },
                "FUN_08005740": {
                    "execute_code": 1,
                    "execute_sub_function": 1,
                    "perform_action": 1,
                    "perform_operation": 1,
                    "process_data": 3
                },
                "FUN_08006f00": {
                    "execute_command": 1,
                    "execute_function": 16,
                    "execute_process": 1,
                    "handle_function": 1,
                    "handle_param": 2,
                    "process_function": 1,
                    "process_input": 3,
                    "process_param": 2,
                    "process_param_value": 1,
                    "process_parameter": 3
                },
                "iVar3": {
                    "code_pointer": 1,
                    "current_address": 1,
                    "current_index": 1,
                    "element": 1,
                    "element_value": 1,
                    "func_ptr": 1,
                    "function_address": 2,
                    "function_index": 1,
                    "function_pointer": 6,
                    "function_ptr": 2,
                    "function_value": 1,
                    "index": 6,
                    "pc_var_ptr": 1,
                    "ptr": 1,
                    "temp_var": 1,
                    "value": 3,
                    "var1": 1
                },
                "in_lr": {
                    "in_lr": 1,
                    "inherited_var": 1,
                    "return_address": 2,
                    "unknown_3": 1,
                    "unused_register_lr": 1,
                    "unused_variable3": 1,
                    "unused_variable_3": 1
                },
                "param_1": {
                    "command_id": 1,
                    "function_index": 5,
                    "index": 6,
                    "input": 5,
                    "input_param": 4,
                    "input_value": 5,
                    "param_value": 1,
                    "parameter": 4
                },
                "pcVar4": {
                    "callback_func": 1,
                    "callback_function": 1,
                    "code_pointer": 1,
                    "code_ptr": 1,
                    "function": 7,
                    "function_p": 1,
                    "function_pointer": 9,
                    "function_ptr": 10
                },
                "piVar1": {
                    "array_ptr": 2,
                    "command_table": 1,
                    "data": 1,
                    "data_array": 4,
                    "data_pointer": 3,
                    "data_pointer1": 1,
                    "data_ptr": 3,
                    "first_element": 1,
                    "function_table": 2,
                    "function_table_ptr": 1,
                    "output": 1,
                    "output_value": 1,
                    "pointer_i": 1,
                    "pointer_var": 1,
                    "previous_index_ptr": 1,
                    "ptr_array": 1,
                    "ptr_data": 1,
                    "ptr_function": 1,
                    "result": 3,
                    "start_address": 1
                },
                "puVar5": {
                    "array_ptr_ptr": 1,
                    "command_table_ptr": 1,
                    "data_array_pointer": 1,
                    "data_array_ptr": 1,
                    "data_pointer": 1,
                    "data_pointer2": 1,
                    "data_pointer_pointer": 2,
                    "data_ptr": 3,
                    "data_ptr_ptr": 2,
                    "function_table_pointer": 1,
                    "function_table_ptr": 1,
                    "function_table_ptr_ptr": 1,
                    "pointer": 1,
                    "pointer_p": 1,
                    "pointer_to_data_array": 1,
                    "pointer_to_element": 1,
                    "pointer_to_output": 1,
                    "pointer_var2": 1,
                    "pointer_variable": 1,
                    "previous_index_ptr_ptr": 1,
                    "ptr": 1,
                    "ptr_data": 1,
                    "ptr_to_array": 1,
                    "ptr_to_data": 1,
                    "ptr_to_result": 1,
                    "ptr_variable": 1,
                    "start_address_ptr": 1
                },
                "thunk_FUN_08005750": {
                    "get_data": 1,
                    "get_result": 2,
                    "get_return_value": 1,
                    "get_thunk_result": 1,
                    "get_value_from_thunk": 1,
                    "initialize_function_ptr": 1
                },
                "uVar2": {
                    "result": 22,
                    "return_value": 4,
                    "status": 1,
                    "thunk_result": 4
                },
                "unaff_r4": {
                    "temp_var4": 1,
                    "unaff_r4": 1,
                    "unaffected_var4": 1,
                    "unknown_1": 1,
                    "unused_register_4": 1,
                    "unused_variable": 1,
                    "unused_variable_1": 1
                },
                "unaff_r5": {
                    "temp_var5": 1,
                    "unaff_r5": 1,
                    "unaffected_var5": 1,
                    "unknown_2": 1,
                    "unused_register_5": 1,
                    "unused_variable2": 1,
                    "unused_variable_2": 1
                }
            },
            "called": [
                "thunk_FUN_08005750",
                "FUN_08005740"
            ],
            "calling": [
                "FUN_08006ac0"
            ],
            "code": "\nint execute_function_08006f00(uint index)\n\n{\n  int *data_array;\n  undefined4 result;\n  int index;\n  code *function_ptr;\n  undefined4 unused_variable_1;\n  undefined4 unaff_r5;\n  undefined4 return_address;\n  undefined4 *data_ptr;\n  \n  data_array = DAT_200000f8;\n  data_ptr = &DAT_200000f8;\n  if (0x1f < index) {\n    *DAT_200000f8 = 0x16;\n    return -1;\n  }\n  index = DAT_200000f8[0x11];\n  if ((index != 0) && (function_ptr = *(code **)(index + index * 4), function_ptr != (code *)0x0)) {\n    if (function_ptr != (code *)0x1) {\n      if (function_ptr == (code *)0xffffffff) {\n        *DAT_200000f8 = 0x16;\n        return 1;\n      }\n      *(undefined4 *)(index + index * 4) = 0;\n      (*function_ptr)(index);\n    }\n    return 0;\n  }\n  result = thunk_FUN_08005750(DAT_200000f8);\n  DAT_200006a4 = 0;\n  index = FUN_08005740(result,index,index,0,data_ptr,unused_variable_1,unaff_r5,return_address);\n  if ((index == -1) && (DAT_200006a4 != 0)) {\n    *data_array = DAT_200006a4;\n  }\n  return index;\n}\n\n",
            "current_name": "execute_function_08006f00",
            "entrypoint": "0x08006f00",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006f00": "execute_function_08006f00",
                "iVar3": "index",
                "in_lr": "return_address",
                "param_1": "index",
                "pcVar4": "function_ptr",
                "piVar1": "data_array",
                "puVar5": "data_ptr",
                "uVar2": "result",
                "unaff_r4": "unused_variable_1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006f38": {
            "additional_data": {
                "FUN_08006f38": {
                    "update_data": 5,
                    "update_param": 1,
                    "update_value": 23,
                    "update_variable": 1,
                    "update_variable_value": 1
                },
                "F_0800706c": {
                    "calculate_value": 1
                },
                "bVar3": {
                    "condition": 1,
                    "is_greater": 1,
                    "is_positive": 25,
                    "is_valid": 4
                },
                "iVar1": {
                    "result": 30,
                    "return_value": 1
                },
                "param_1": {
                    "array": 1,
                    "array_pointer": 1,
                    "data": 4,
                    "data1": 1,
                    "data_array": 1,
                    "data_buffer": 1,
                    "data_pointer": 2,
                    "input": 1,
                    "input_array": 5,
                    "input_data": 3,
                    "input_parameter1": 1,
                    "new_value": 2,
                    "param": 2,
                    "param1": 1,
                    "param_1": 1,
                    "param_pointer": 1,
                    "parameter1": 1,
                    "ptr1": 1,
                    "target": 1
                },
                "param_2": {
                    "address": 5,
                    "array_offset": 1,
                    "data": 3,
                    "data_address": 1,
                    "data_offset": 2,
                    "input_parameter2": 1,
                    "offset": 10,
                    "param": 1,
                    "param2": 1,
                    "param_2": 1,
                    "param_offset": 1,
                    "parameter2": 1,
                    "ptr2": 1,
                    "struct_offset": 1,
                    "struct_pointer": 1
                },
                "uVar2": {
                    "new_data": 2,
                    "new_value": 11,
                    "updated_value": 18
                }
            },
            "called": [
                "FUN_0800706c"
            ],
            "calling": [],
            "code": "\nvoid update_variable_value_08006f38(undefined4 input_array,int offset)\n\n{\n  int result;\n  uint updated_value;\n  bool is_positive;\n  \n  result = FUN_0800706c(input_array,(int)*(short *)(offset + 0xe));\n  is_positive = -1 < result;\n  if (is_positive) {\n    updated_value = *(int *)(offset + 0x54) + result;\n  }\n  else {\n    updated_value = *(ushort *)(offset + 0xc) & 0xffffefff;\n  }\n  if (is_positive) {\n    *(uint *)(offset + 0x54) = updated_value;\n  }\n  if (!is_positive) {\n    *(short *)(offset + 0xc) = (short)updated_value;\n  }\n  return;\n}\n\n",
            "current_name": "update_variable_value_08006f38",
            "entrypoint": "0x08006f38",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006f38": "update_variable_value_08006f38",
                "bVar3": "is_positive",
                "iVar1": "result",
                "param_1": "input_array",
                "param_2": "offset",
                "uVar2": "updated_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006f5a": {
            "additional_data": {
                "DAT_200006a4": {
                    "data": 1,
                    "data_value": 1,
                    "error_value": 1
                },
                "FUN_08005730": {
                    "process_data": 1,
                    "reverse_data": 2
                },
                "FUN_08006f5a": {
                    "decreased_value_if_negative": 1,
                    "extract_data_and_check_error": 1,
                    "extract_data_and_update": 1,
                    "handle_data": 3,
                    "process_data": 12,
                    "reverse_and_copy_shorts": 1,
                    "update_data": 2,
                    "update_function": 1,
                    "validate_and_process_data": 1,
                    "validate_and_update_data": 1
                },
                "FUN_08007048": {
                    "process_data": 1,
                    "process_data_helper": 1,
                    "update_array": 1
                },
                "iVar1": {
                    "error_check_result": 1,
                    "operation_result": 1,
                    "result": 22,
                    "return_value": 6
                },
                "in_lr": {
                    "": 1,
                    "in_lr": 2,
                    "link_register": 3,
                    "param4_3": 1,
                    "param_7": 1,
                    "return_address": 2,
                    "temp3": 1,
                    "temporary_3": 1,
                    "unnamed_param_lr": 1,
                    "unused3": 4,
                    "unused_param3": 4,
                    "unused_var3": 1,
                    "var3": 1,
                    "var_c": 1
                },
                "param_1": {
                    "data_array": 1,
                    "data_buffer": 1,
                    "data_pointer": 2,
                    "input_array": 2,
                    "output": 6,
                    "output_array": 9,
                    "output_buffer": 2,
                    "output_data": 3,
                    "output_ptr": 1,
                    "result": 1,
                    "result_array": 1,
                    "result_ptr": 2
                },
                "param_2": {
                    "buffer_address": 1,
                    "data": 2,
                    "data_address": 2,
                    "data_pointer": 2,
                    "data_ptr": 4,
                    "input": 4,
                    "input_address": 1,
                    "input_array": 6,
                    "input_buffer": 2,
                    "input_data": 3,
                    "input_ptr": 2,
                    "param_pointer": 2
                },
                "param_3": {
                    "arg1": 1,
                    "config_param1": 1,
                    "param": 1,
                    "param1": 7,
                    "param3": 7,
                    "param_3": 8,
                    "param_a": 5,
                    "value1": 1
                },
                "param_4": {
                    "arg2": 1,
                    "config_param2": 1,
                    "param": 1,
                    "param2": 7,
                    "param4": 7,
                    "param_4": 8,
                    "param_b": 5,
                    "value2": 1
                },
                "unaff_r4": {
                    "param4_1": 2,
                    "param_5": 1,
                    "register_4": 2,
                    "temp1": 2,
                    "temp_var1": 1,
                    "temporary_1": 1,
                    "unaff_r4": 2,
                    "unnamed_param_4": 1,
                    "unused1": 4,
                    "unused_param": 1,
                    "unused_param1": 4,
                    "unused_var1": 3,
                    "var1": 3,
                    "var_a": 1
                },
                "unaff_r5": {
                    "param4_2": 2,
                    "param_6": 1,
                    "register_5": 2,
                    "temp2": 2,
                    "temp_var2": 1,
                    "temporary_2": 1,
                    "unaff_r5": 2,
                    "unnamed_param_5": 1,
                    "unused2": 4,
                    "unused_param2": 5,
                    "unused_var2": 3,
                    "var2": 3,
                    "var_b": 1
                }
            },
            "called": [
                "FUN_08007048",
                "FUN_08005730"
            ],
            "calling": [],
            "code": "\nvoid validate_and_process_data_08006f5a(int *output_array,int input_array,undefined4 param_3,undefined4 param_4)\n\n{\n  int result;\n  undefined4 unused1;\n  undefined4 unused_param2;\n  undefined4 unused_param3;\n  \n  if ((int)((uint)*(ushort *)(input_array + 0xc) << 0x17) < 0) {\n    FUN_08007048(output_array,(int)*(short *)(input_array + 0xe),0,2);\n  }\n  *(ushort *)(input_array + 0xc) = *(ushort *)(input_array + 0xc) & 0xefff;\n  DAT_200006a4 = 0;\n  result = FUN_08005730((int)*(short *)(input_array + 0xe),param_3,param_4,param_4,param_4,unused1,\n                       unused_param2,unused_param3);\n  if ((result == -1) && (DAT_200006a4 != 0)) {\n    *output_array = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "current_name": "validate_and_process_data_08006f5a",
            "entrypoint": "0x08006f5a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006f5a": "validate_and_process_data_08006f5a",
                "iVar1": "result",
                "in_lr": "unused_param3",
                "param_1": "output_array",
                "param_2": "input_array",
                "unaff_r4": "unused1",
                "unaff_r5": "unused_param2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006f92": {
            "additional_data": {
                "FUN_08006f92": {
                    "process_data": 2,
                    "process_function": 1,
                    "set_and_check_value": 1,
                    "update_data": 1,
                    "update_flag": 4,
                    "update_flag_and_value": 2,
                    "update_flag_based_on_value": 1,
                    "update_flag_values": 1,
                    "update_flags_and_value": 1,
                    "update_parameter": 1,
                    "update_status": 9,
                    "update_value": 4,
                    "update_variable_status": 1
                },
                "bVar3": {
                    "is_error": 21,
                    "is_invalid": 2,
                    "is_negative": 5,
                    "is_negative_one": 1,
                    "is_result_negative": 1,
                    "is_value_invalid": 1
                },
                "iVar1": {
                    "result": 29,
                    "return_value": 2
                },
                "param_1": {
                    "address": 1,
                    "array": 1,
                    "buffer": 1,
                    "data": 4,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "data_structure": 1,
                    "device": 1,
                    "flag_array": 1,
                    "flag_data": 1,
                    "input_array": 2,
                    "input_data": 2,
                    "input_parameter": 1,
                    "param": 3,
                    "param1": 1,
                    "param_1": 1,
                    "param_a": 1,
                    "ptr_array": 1,
                    "status": 4,
                    "status_array": 1,
                    "value": 1
                },
                "param_2": {
                    "address": 4,
                    "array_index": 1,
                    "data": 10,
                    "data_address": 1,
                    "data_offset": 5,
                    "data_ptr": 1,
                    "index": 1,
                    "offset": 2,
                    "param2": 1,
                    "param_b": 1,
                    "param_offset": 1,
                    "status_ptr": 1,
                    "struct_address": 1,
                    "struct_offset": 1
                },
                "uVar2": {
                    "flag": 3,
                    "flag_value": 1,
                    "modified_value": 6,
                    "new_flag": 2,
                    "new_flags": 1,
                    "new_status": 2,
                    "status": 1,
                    "status_flag": 1,
                    "updated_flag": 1,
                    "updated_flags": 1,
                    "updated_value": 12
                }
            },
            "called": [
                "FUN_08007048"
            ],
            "calling": [],
            "code": "\nvoid update_flags_and_value_08006f92(undefined4 status,int data)\n\n{\n  int result;\n  ushort updated_value;\n  bool is_error;\n  \n  result = FUN_08007048(status,(int)*(short *)(data + 0xe));\n  is_error = result == -1;\n  if (is_error) {\n    updated_value = *(ushort *)(data + 0xc) & 0xefff;\n  }\n  else {\n    *(int *)(data + 0x54) = result;\n    updated_value = *(ushort *)(data + 0xc) | 0x1000;\n  }\n  if (is_error) {\n    *(ushort *)(data + 0xc) = updated_value;\n  }\n  if (!is_error) {\n    *(ushort *)(data + 0xc) = updated_value;\n  }\n  return;\n}\n\n",
            "current_name": "update_flags_and_value_08006f92",
            "entrypoint": "0x08006f92",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006f92": "update_flags_and_value_08006f92",
                "bVar3": "is_error",
                "iVar1": "result",
                "param_1": "status",
                "param_2": "data",
                "uVar2": "updated_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007004": {
            "additional_data": {
                "DAT_200006a4": {
                    "error_value": 1
                },
                "FUN_0800571a": {
                    "calculate_error_code": 1,
                    "calculate_result": 1,
                    "compute_result": 1,
                    "find_error_code": 1,
                    "process_data": 1,
                    "sub_function": 1
                },
                "FUN_08007004": {
                    "check_and_assign_value": 1,
                    "check_and_update_value": 2,
                    "execute_unary_operation": 1,
                    "extract_and_assign_value": 1,
                    "extract_and_store_error_code": 1,
                    "extract_data": 1,
                    "extract_error_code": 2,
                    "extract_error_message": 1,
                    "extract_error_value": 2,
                    "extract_integer": 1,
                    "extract_return_value": 2,
                    "extract_value_from_array": 1,
                    "extract_value_from_binary": 1,
                    "find_and_store_error": 1,
                    "find_error_and_set_value": 1,
                    "improve_code": 1,
                    "process_and_store_result": 1,
                    "process_function": 1,
                    "process_function_results": 1,
                    "reverse_and_store": 1,
                    "reverse_and_update_value": 1,
                    "update_param_if_error": 2,
                    "update_param_if_needed": 1
                },
                "FUn_0800571a": {
                    "process_data": 1
                },
                "iVar1": {
                    "error_code": 3,
                    "function_result": 1,
                    "result": 16,
                    "result_code": 1,
                    "return_value": 7,
                    "status": 2
                },
                "param_1": {
                    "error": 1,
                    "error_code": 2,
                    "output": 7,
                    "output_error": 1,
                    "output_param": 1,
                    "output_ptr": 2,
                    "output_value": 2,
                    "result": 10,
                    "result_pointer": 2,
                    "result_ptr": 1,
                    "updated_param": 1
                },
                "param_2": {
                    "arg1": 2,
                    "input1": 14,
                    "input_1": 5,
                    "input_a": 1,
                    "input_param1": 3,
                    "input_param_1": 2,
                    "input_value1": 1,
                    "input_value_1": 1,
                    "param_2": 1,
                    "param_a": 1
                },
                "param_3": {
                    "arg2": 2,
                    "input2": 14,
                    "input_2": 5,
                    "input_b": 1,
                    "input_param2": 3,
                    "input_param_2": 2,
                    "input_value2": 1,
                    "input_value_2": 1,
                    "param_3": 1,
                    "param_b": 1
                },
                "param_4": {
                    "arg3": 2,
                    "input3": 13,
                    "input_3": 5,
                    "input_c": 1,
                    "input_param3": 3,
                    "input_param_3": 2,
                    "input_value3": 1,
                    "input_value_3": 1,
                    "param3": 1,
                    "param_4": 1,
                    "param_c": 1
                }
            },
            "called": [
                "FUN_0800571a"
            ],
            "calling": [
                "FUN_08006dc8"
            ],
            "code": "\nvoid extract_and_store_error_code_08007004(int *result,undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  int result;\n  \n  DAT_200006a4 = 0;\n  result = FUN_0800571a(input1,input2,input2,0,input3);\n  if ((result == -1) && (DAT_200006a4 != 0)) {\n    *result = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "current_name": "extract_and_store_error_code_08007004",
            "entrypoint": "0x08007004",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007004": "extract_and_store_error_code_08007004",
                "iVar1": "result",
                "param_1": "result",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007028": {
            "additional_data": {
                "DAT_200006a4": {
                    "secondary_result": 1
                },
                "FUN_08005724": {
                    "get_unknown_value": 1,
                    "get_value": 1
                },
                "FUN_08007028": {
                    "check_and_assign_value": 1,
                    "check_and_update_value": 3,
                    "extract_and_assign": 1,
                    "extract_and_assign_value": 2,
                    "extract_and_store_value": 1,
                    "extract_error_message": 1,
                    "find_and_assign_result": 1,
                    "find_and_assign_value": 3,
                    "find_and_set_value": 1,
                    "find_and_update_param": 1,
                    "process_data": 4,
                    "process_parameters": 1,
                    "reverse_and_set_param1": 1,
                    "reverse_and_store": 1,
                    "reverse_and_update_value": 1,
                    "update_param1_if_error": 1,
                    "update_param_if_error": 2,
                    "update_param_if_negative": 1,
                    "update_value_if_negative": 1,
                    "update_value_if_negative_or_not_equal_one": 1
                },
                "iVar1": {
                    "error_check_result": 1,
                    "function_result": 1,
                    "result": 13,
                    "return_value": 14
                },
                "param_1": {
                    "error": 1,
                    "output": 8,
                    "output_param": 1,
                    "output_value": 4,
                    "output_variable": 1,
                    "result": 9,
                    "result_pointer": 3,
                    "result_ptr": 2,
                    "return_value": 1,
                    "reverse_result": 1
                },
                "param_2": {
                    "input": 13,
                    "input_data": 1,
                    "input_error_code": 1,
                    "input_param": 1,
                    "input_parameter": 1,
                    "input_value": 12,
                    "unknown_value": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_08005724"
            ],
            "calling": [
                "FUN_08006e10"
            ],
            "code": "\nvoid process_data_08007028(int *result,undefined4 input)\n\n{\n  int return_value;\n  \n  DAT_200006a4 = 0;\n  return_value = FUN_08005724(input);\n  if ((return_value == -1) && (DAT_200006a4 != 0)) {\n    *result = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "current_name": "process_data_08007028",
            "entrypoint": "0x08007028",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007028": "process_data_08007028",
                "iVar1": "return_value",
                "param_1": "result",
                "param_2": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007048": {
            "additional_data": {
                "DAT_200006a4": {
                    "extracted_error_code": 1,
                    "temp_value": 1
                },
                "FUN_08005728": {
                    "calculate_result": 1
                },
                "FUN_08007048": {
                    "check_and_update_value": 1,
                    "copy_error_code_if_invalid": 1,
                    "extract_and_assign_data": 1,
                    "extract_and_assign_value": 1,
                    "extract_and_set_value": 2,
                    "extract_data": 2,
                    "extract_data_from_binary": 1,
                    "extract_error_code": 2,
                    "extract_integer_if_needed": 1,
                    "process_binary_data": 1,
                    "process_data": 1,
                    "reverse_and_assign_value": 1,
                    "reverse_and_check": 1,
                    "reverse_and_store_value": 1,
                    "update_param": 1,
                    "update_param1_if_error": 1,
                    "update_param_if_error": 5,
                    "update_parameter_if_needed": 1,
                    "update_parameter_value": 1,
                    "update_result": 1,
                    "update_value_if_error": 1
                },
                "iVar1": {
                    "result": 14,
                    "return_value": 13,
                    "sub_function_result": 1
                },
                "param_1": {
                    "data_output": 1,
                    "error_code": 3,
                    "output": 4,
                    "output_array": 1,
                    "output_ptr": 2,
                    "output_value": 6,
                    "result": 11,
                    "result_pointer": 3
                },
                "param_2": {
                    "arg1": 9,
                    "input1": 7,
                    "input_1": 2,
                    "input_arg1": 1,
                    "input_param1": 1,
                    "input_param_1": 1,
                    "input_parameter1": 1,
                    "input_value1": 2,
                    "param1": 2,
                    "param2": 2,
                    "param_2": 1,
                    "parameter1": 1,
                    "value1": 1
                },
                "param_3": {
                    "arg2": 9,
                    "input2": 7,
                    "input_2": 2,
                    "input_arg2": 1,
                    "input_param2": 1,
                    "input_param_2": 1,
                    "input_parameter2": 1,
                    "input_value2": 2,
                    "param2": 2,
                    "param3": 2,
                    "param_3": 1,
                    "parameter2": 1,
                    "value2": 1
                },
                "param_4": {
                    "arg3": 9,
                    "input3": 7,
                    "input_3": 2,
                    "input_arg3": 1,
                    "input_param3": 1,
                    "input_param_3": 1,
                    "input_parameter3": 1,
                    "input_value3": 2,
                    "param3": 2,
                    "param4": 2,
                    "param_4": 1,
                    "parameter3": 1,
                    "value3": 1
                }
            },
            "called": [
                "FUN_08005728"
            ],
            "calling": [
                "FUN_08006f92",
                "FUN_08006f5a"
            ],
            "code": "\nvoid update_param_if_error_08007048(int *result,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  int result;\n  \n  DAT_200006a4 = 0;\n  result = FUN_08005728(arg1,arg2,arg3,arg3,arg3);\n  if ((result == -1) && (DAT_200006a4 != 0)) {\n    *result = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "current_name": "update_param_if_error_08007048",
            "entrypoint": "0x08007048",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007048": "update_param_if_error_08007048",
                "iVar1": "result",
                "param_1": "result",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800706c": {
            "additional_data": {
                "DAT_200006a4": {
                    "error_code": 1,
                    "temp_value": 1
                },
                "FUN_0800572c": {
                    "calculate_result": 2,
                    "check_result": 1,
                    "process_data": 1
                },
                "FUN_0800706c": {
                    "apply_error_handling": 1,
                    "check_and_update_value": 2,
                    "copy_if_negative": 1,
                    "extract_and_assign_error": 1,
                    "extract_and_assign_value": 1,
                    "extract_data": 1,
                    "extract_error_code": 2,
                    "extract_failure_value": 1,
                    "handle_failure_and_set_result": 1,
                    "process_data": 2,
                    "process_function": 1,
                    "reverse_and_store_result": 1,
                    "reverse_and_store_value": 2,
                    "update_array_if_error": 1,
                    "update_param_and_check_error": 1,
                    "update_param_if_error": 3,
                    "update_param_if_negative": 1,
                    "update_param_with_return_value": 1,
                    "update_parameter": 1,
                    "update_parameter_if_error": 1,
                    "update_parameter_if_needed": 2,
                    "update_result": 1,
                    "update_return_value": 1
                },
                "iVar1": {
                    "error_code": 1,
                    "function_result": 1,
                    "output": 1,
                    "result": 12,
                    "return_value": 12,
                    "status": 1
                },
                "param_1": {
                    "array": 1,
                    "error_code": 1,
                    "output": 3,
                    "output_param": 2,
                    "output_pointer": 1,
                    "output_value": 5,
                    "result": 11,
                    "result_pointer": 2,
                    "result_ptr": 4,
                    "value": 1
                },
                "param_2": {
                    "arg1": 6,
                    "input1": 7,
                    "input_1": 5,
                    "input_param1": 1,
                    "input_param_1": 2,
                    "input_value1": 2,
                    "param2": 1,
                    "param_2": 3,
                    "param_a": 3
                },
                "param_3": {
                    "arg2": 6,
                    "input2": 7,
                    "input_2": 5,
                    "input_param2": 1,
                    "input_param_2": 2,
                    "input_value2": 2,
                    "param3": 1,
                    "param_3": 3,
                    "param_b": 3
                },
                "param_4": {
                    "arg3": 6,
                    "input3": 7,
                    "input_3": 5,
                    "input_param3": 1,
                    "input_param_3": 2,
                    "input_value3": 2,
                    "param4": 1,
                    "param_4": 3,
                    "param_c": 3
                }
            },
            "called": [
                "FUN_0800572c"
            ],
            "calling": [
                "FUN_08006f38"
            ],
            "code": "\nvoid extract_and_assign_value_0800706c(int *result,undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  int return_value;\n  \n  DAT_200006a4 = 0;\n  return_value = FUN_0800572c(input1,input2,input3,input3,input3);\n  if ((return_value == -1) && (DAT_200006a4 != 0)) {\n    *result = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "current_name": "extract_and_assign_value_0800706c",
            "entrypoint": "0x0800706c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800706c": "extract_and_assign_value_0800706c",
                "iVar1": "return_value",
                "param_1": "result",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007090": {
            "additional_data": {
                "DAT_20000600": {
                    "data12": 1
                },
                "DAT_20000604": {
                    "data11": 1
                },
                "DAT_20000608": {
                    "data10": 1
                },
                "DAT_2000060c": {
                    "data9": 1
                },
                "DAT_20000610": {
                    "data8": 1
                },
                "DAT_20000614": {
                    "data7": 1
                },
                "DAT_20000618": {
                    "data6": 1
                },
                "DAT_2000061c": {
                    "data5": 1
                },
                "DAT_20000620": {
                    "data4": 1
                },
                "DAT_20000624": {
                    "data3": 1
                },
                "DAT_20000628": {
                    "data2": 1
                },
                "DAT_2000062c": {
                    "data1": 1
                },
                "FUN_08006ac0": {
                    "clear_flags": 1,
                    "do_something": 3,
                    "execute_function": 1,
                    "execute_initialization": 1,
                    "execute_sub_function": 1,
                    "execute_subfunction": 2,
                    "initialize": 1,
                    "initialize_data": 2,
                    "initialize_registers": 1,
                    "initialize_variables": 1,
                    "perform_cleanup": 1,
                    "perform_initialization": 8,
                    "perform_operation": 2,
                    "perform_preparation": 1,
                    "reset_function": 1,
                    "some_helper_function": 1,
                    "sub_function": 3
                },
                "FUN_08007090": {
                    "check_and_set_flags": 1,
                    "execute_code": 1,
                    "initialize_data": 7,
                    "initialize_flags": 5,
                    "initialize_program": 1,
                    "initialize_variables": 4,
                    "update_data": 3,
                    "update_data_flags": 1,
                    "update_data_values": 4,
                    "update_flags": 1,
                    "update_flags_and_call_function": 1,
                    "update_status_registers": 1,
                    "update_values": 1
                },
                "UNRECOVERED_JUMPTABLE": {
                    "function_pointer": 1,
                    "jump_table": 6
                }
            },
            "called": [
                "FUN_08006ac0"
            ],
            "calling": [
                "FUN_080060d4"
            ],
            "code": "\nvoid update_data_values_08007090(void)\n\n{\n  code *jump_table;\n  \n  jump_table = update_data_values_08007090;\n  FUN_08006ac0();\n  if (-1 < DAT_2000062c << 0x1f) {\n    DAT_2000062c = 1;\n  }\n  if (-1 < DAT_20000628 << 0x1f) {\n    DAT_20000628 = 1;\n  }\n  if (-1 < DAT_20000624 << 0x1f) {\n    DAT_20000624 = 1;\n  }\n  if (-1 < DAT_20000620 << 0x1f) {\n    DAT_20000620 = 1;\n  }\n  if (-1 < DAT_2000061c << 0x1f) {\n    DAT_2000061c = 1;\n  }\n  if (-1 < DAT_20000618 << 0x1f) {\n    DAT_20000618 = 1;\n  }\n  if (-1 < DAT_20000614 << 0x1f) {\n    DAT_20000614 = 1;\n  }\n  if (-1 < DAT_20000610 << 0x1f) {\n    DAT_20000610 = 1;\n  }\n  if (-1 < DAT_2000060c << 0x1f) {\n    DAT_2000060c = 1;\n  }\n  if (-1 < DAT_20000608 << 0x1f) {\n    DAT_20000608 = 1;\n  }\n  if (-1 < DAT_20000604 << 0x1f) {\n    DAT_20000604 = 1;\n  }\n  if (-1 < DAT_20000600 << 0x1f) {\n    DAT_20000600 = 1;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08007128. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)();\n  return;\n}\n\n",
            "current_name": "update_data_values_08007090",
            "entrypoint": "0x08007090",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007090": "update_data_values_08007090",
                "UNRECOVERED_JUMPTABLE": "jump_table"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007328": {
            "called": [],
            "calling": [
                "FUN_08006198",
                "FUN_0800010c"
            ],
            "code": "\nvoid FUNC_08007328(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08007328",
            "entrypoint": "0x08007328",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08007328": "FUNC_08007328"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08007334": {
            "called": [],
            "calling": [],
            "code": "\nvoid FUNC_08007334(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08007334",
            "entrypoint": "0x08007334",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08007334": "FUNC_08007334"
            },
            "skipped": true,
            "tags": []
        },
        "entry": {
            "called": [
                "FUN_08006198",
                "FUN_08004d44",
                "FUN_08005f6c"
            ],
            "calling": [],
            "code": "\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined *)(iVar1 + 0x20000000) < &DAT_2000015c; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x8007970);\n  }\n  for (puVar2 = &DAT_20000160; puVar2 < &DAT_200006a8; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_08004d44();\n  FUN_08006198();\n  UNRECOVERED_JUMPTABLE = (code *)0x8001c1a;\n  FUN_08005f6c();\n                    /* WARNING: Could not recover jumptable at 0x08001c1a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "current_name": "entry",
            "entrypoint": "0x08001be8",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "thunk_FUN_08005750": {
            "additional_data": {
                "FUN_08005750": {
                    "calculate_result": 3,
                    "calculate_return_value": 6,
                    "calculate_value": 5,
                    "get_initial_value": 1,
                    "get_program_version": 1,
                    "get_result": 1,
                    "get_return_value": 1,
                    "get_return_value_helper": 1,
                    "get_status_internal": 1,
                    "main_logic": 1,
                    "perform_initialization": 1,
                    "retrieve_important_value": 1,
                    "retrieve_status": 2,
                    "retrieve_value": 2,
                    "retrieved_status": 1,
                    "update_status": 1
                },
                "PTR_FUN_08005750": {
                    "return_value": 1
                },
                "thunk_FUN_08005750": {
                    "calculate_result": 1,
                    "get_important_value": 1,
                    "get_magic_number": 1,
                    "get_result": 6,
                    "get_return_value": 11,
                    "get_status": 4,
                    "initialize": 2,
                    "initialize_program": 1,
                    "initialize_return_value": 2,
                    "initialize_status": 1
                }
            },
            "called": [
                "FUN_08005750"
            ],
            "calling": [
                "FUN_08006f00"
            ],
            "code": "\nundefined4 get_return_value_thunk_08005750(void)\n\n{\n  return 1;\n}\n\n",
            "current_name": "get_return_value_thunk_08005750",
            "entrypoint": "0x08006f34",
            "imported": false,
            "improved": true,
            "renaming": {
                "thunk_FUN_08005750": "get_return_value_thunk_08005750"
            },
            "skipped": false,
            "tags": []
        }
    },
    "layers": [
        [
            "FUN_0800010c",
            "FUN_08000178",
            "FUN_08000190",
            "FUN_08000194",
            "FUN_0800040c",
            "FUN_0800042c",
            "FUN_080004f8",
            "FUN_080006d4",
            "FUN_0800074c",
            "FUN_080008ba",
            "FUN_0800092c",
            "FUN_080009a8",
            "FUN_080009b8",
            "FUN_080009c8",
            "FUN_080009dc",
            "FUN_080009f0",
            "FUN_08000a04",
            "FUN_08000a18",
            "FUN_08000a2c",
            "FUN_08000a58",
            "FUN_08000aa8",
            "FUN_08000ae8",
            "FUN_08000aec",
            "FUN_08000b08",
            "FUN_08000bcc",
            "FUN_08000cd0",
            "FUN_08001294",
            "FUN_080012a2",
            "FUN_080012c0",
            "FUN_080012e8",
            "FUN_08001310",
            "FUN_0800134e",
            "FUN_0800135a",
            "FUN_08001366",
            "FUN_0800138e",
            "FUN_080013a4",
            "FUN_080014ba",
            "FUN_08001510",
            "FUN_08001550",
            "FUN_0800157c",
            "FUN_080015b2",
            "FUN_080015f8",
            "FUN_080016b4",
            "FUN_08001814",
            "FUN_080018f8",
            "FUN_08001918",
            "FUN_08001960",
            "FUN_080019f6",
            "FUN_08001a44",
            "FUN_08001a66",
            "FUN_08001ab0",
            "FUN_08001b18",
            "FUN_08001b48",
            "FUN_08001c32",
            "FUN_08001c3c",
            "FUN_08001c88",
            "FUN_08001cac",
            "FUN_08001cc4",
            "FUN_08001cd0",
            "FUN_08001e40",
            "FUN_08001e48",
            "FUN_08001f80",
            "FUN_08001f84",
            "FUN_08002004",
            "FUN_080020f0",
            "FUN_0800213c",
            "FUN_0800224c",
            "FUN_08002348",
            "FUN_08002384",
            "FUN_08002470",
            "FUN_08002494",
            "FUN_080024f8",
            "FUN_08002514",
            "FUN_08002540",
            "FUN_08002560",
            "FUN_08002582",
            "FUN_0800258c",
            "FUN_08002624",
            "FUN_08002810",
            "FUN_0800281e",
            "FUN_0800282c",
            "FUN_08002848",
            "FUN_080028d2",
            "FUN_080028de",
            "FUN_08002ab8",
            "FUN_08002ad8",
            "FUN_08002af8",
            "FUN_08002b84",
            "FUN_08002c10",
            "FUN_08002c54",
            "FUN_08002ca6",
            "FUN_08002cf2",
            "FUN_08002d1c",
            "FUN_08002db2",
            "FUN_08002efc",
            "FUN_08002f9c",
            "FUN_0800306c",
            "FUN_0800316c",
            "FUN_080032b4",
            "FUN_080033b8",
            "FUN_08003520",
            "FUN_0800365c",
            "FUN_08003688",
            "FUN_08003a68",
            "FUN_08003ad4",
            "FUN_08003afa",
            "FUN_08003c44",
            "FUN_08003c50",
            "FUN_08003c70",
            "FUN_08003c90",
            "FUN_08003da4",
            "FUN_08003ea0",
            "FUN_08003ed8",
            "FUN_08003f18",
            "FUN_08004092",
            "FUN_080040b0",
            "FUN_08004110",
            "FUN_0800412c",
            "FUN_0800417c",
            "FUN_08004198",
            "FUN_08004204",
            "FUN_080043b4",
            "FUN_0800441a",
            "FUN_08004478",
            "FUN_0800455a",
            "FUN_080045a2",
            "FUN_080045fe",
            "FUN_08004618",
            "FUN_080046b8",
            "FUN_080047e8",
            "FUN_080047f4",
            "FUN_0800480a",
            "FUN_08004828",
            "FUN_08004848",
            "FUN_08004884",
            "FUN_0800492c",
            "FUN_08004948",
            "FUN_08004974",
            "FUN_080049f0",
            "FUN_08004a4c",
            "FUN_08004b34",
            "FUN_08004b3c",
            "FUN_08004b94",
            "FUN_08004b9e",
            "FUN_08004bb0",
            "FUN_08004c30",
            "FUN_08004c48",
            "FUN_08004c52",
            "FUN_08004c5e",
            "FUN_08004c78",
            "FUN_08004c8a",
            "FUN_08004ca2",
            "FUN_08004cb2",
            "FUN_08004cce",
            "FUN_08004ce2",
            "FUN_08004d06",
            "FUN_08004d18",
            "FUN_08004d40",
            "FUN_08004d44",
            "FUN_08004d90",
            "FUN_08004df4",
            "FUN_08004df8",
            "FUN_08004e12",
            "FUN_08004e20",
            "FUN_08004e70",
            "FUN_08004e74",
            "FUN_08004ec4",
            "FUN_08004ef4",
            "FUN_08004f4c",
            "FUN_08005384",
            "FUN_080053d4",
            "FUN_0800548c",
            "FUN_080054b0",
            "FUN_080054d4",
            "FUN_08005510",
            "FUN_08005568",
            "FUN_080055bc",
            "FUN_080055e0",
            "FUN_08005604",
            "FUN_080056d8",
            "FUN_08005714",
            "FUN_0800571a",
            "FUN_08005724",
            "FUN_08005728",
            "FUN_0800572c",
            "FUN_08005730",
            "FUN_0800573c",
            "FUN_08005740",
            "FUN_08005750",
            "FUN_08005754",
            "FUN_080057b4",
            "FUN_08005848",
            "FUN_08005890",
            "FUN_080058e0",
            "FUN_0800591e",
            "FUN_0800598a",
            "FUN_08005a44",
            "FUN_08005a68",
            "FUN_08005b24",
            "FUN_08005b3c",
            "FUN_08005b54",
            "FUN_08005bb0",
            "FUN_08005c1c",
            "FUN_08005c38",
            "FUN_08005c96",
            "FUN_08005cb6",
            "FUN_08005cc0",
            "FUN_08005cd4",
            "FUN_08005ce8",
            "FUN_08005d42",
            "FUN_08005d82",
            "FUN_08005d8a",
            "FUN_08005da8",
            "FUN_08005f2c",
            "FUN_08005f40",
            "FUN_08005f5e",
            "FUN_08005f6c",
            "FUN_08005f8c",
            "FUN_08005fc8",
            "FUN_080060d4",
            "FUN_080060e4",
            "FUN_08006112",
            "FUN_0800611c",
            "FUN_08006158",
            "FUN_08006174",
            "FUN_08006198",
            "FUN_080061e0",
            "FUN_080061f0",
            "FUN_08006288",
            "FUN_08006344",
            "FUN_08006370",
            "FUN_08006394",
            "FUN_080065c0",
            "FUN_080066b0",
            "FUN_080068f0",
            "FUN_08006920",
            "FUN_080069e4",
            "FUN_08006ac0",
            "FUN_08006be0",
            "FUN_08006c40",
            "FUN_08006c88",
            "FUN_08006cb4",
            "FUN_08006d14",
            "FUN_08006dc8",
            "FUN_08006e10",
            "FUN_08006e90",
            "FUN_08006f00",
            "thunk_FUN_08005750",
            "FUN_08006f38",
            "FUN_08006f5a",
            "FUN_08006f92",
            "FUN_08007004",
            "FUN_08007028",
            "FUN_08007048",
            "FUN_0800706c",
            "FUN_08007090"
        ]
    ],
    "locked_functions": [],
    "used_tokens": 901730
}