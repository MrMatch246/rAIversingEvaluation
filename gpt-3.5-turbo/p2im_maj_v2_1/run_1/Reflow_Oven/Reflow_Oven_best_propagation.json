{
    "functions": {
        "FUN_0800010c": {
            "additional_data": {
                "DAT_20000160": {
                    "dat_flag": 1,
                    "data_flag": 3,
                    "flag": 14,
                    "flag_initialized": 1,
                    "flag_value": 1,
                    "flag_variable": 4,
                    "toggle_flag": 1
                },
                "FUNC_08007328": {
                    "perform_additional_checks": 1
                },
                "FUN_0800010c": {
                    "initialize_data": 1,
                    "initialize_data_flag": 2,
                    "initialize_flag": 21,
                    "initialize_flag_if_needed": 1,
                    "initialize_if_flag_not_set": 1,
                    "initialize_toggle_flag": 1,
                    "set_flag_if_unset": 1,
                    "update_dat_value": 1,
                    "update_flag_if_not_set": 1,
                    "update_flag_if_zero": 1
                },
                "initializeFlag": {
                    "set_flag": 1
                },
                "param_1": {
                    "flag": 2,
                    "input": 11,
                    "input_data": 2,
                    "input_flag": 1,
                    "input_param": 7,
                    "input_parameter": 1,
                    "input_value": 7
                }
            },
            "called": [
                "FUN_08007328"
            ],
            "calling": [],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08000118) */\n\nundefined4 initialize_data_flag_0800010c(undefined4 input)\n\n{\n  if ((char)DAT_20000160 == '\\0') {\n    DAT_20000160._0_1_ = '\\x01';\n  }\n  return input;\n}\n\n",
            "current_name": "initialize_data_flag_0800010c",
            "entrypoint": "0x0800010c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800010c": "initialize_data_flag_0800010c",
                "param_1": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000178": {
            "additional_data": {
                "FUN_08000178": {
                    "calculate_string_length": 1,
                    "find_end_of_string": 15,
                    "find_last_character": 1,
                    "find_null_char": 1,
                    "find_null_terminated_string": 3,
                    "find_null_terminator": 1,
                    "find_null_terminator_index": 1,
                    "find_string_end": 1,
                    "find_string_length": 3,
                    "get_null_terminated_string_length": 1,
                    "get_parameter_length": 1,
                    "get_string_length": 2
                },
                "cVar1": {
                    "current_char": 16,
                    "current_char_value": 2,
                    "current_character": 6,
                    "current_character_value": 2,
                    "current_value": 1,
                    "temp_character": 1
                },
                "param_1": {
                    "input_string": 11,
                    "str": 7,
                    "string": 13
                },
                "pcVar2": {
                    "current_char": 1,
                    "current_character": 1,
                    "current_ptr": 1,
                    "next_char": 12,
                    "next_char_pointer": 1,
                    "next_char_ptr": 3,
                    "next_character": 9,
                    "next_character_ptr": 1,
                    "next_ptr": 1
                },
                "pcVar3": {
                    "current_char": 7,
                    "current_char_pointer": 1,
                    "current_char_ptr": 2,
                    "current_character": 4,
                    "current_character_ptr": 1,
                    "current_pos": 2,
                    "current_position": 2,
                    "current_ptr": 1,
                    "next_character": 1,
                    "next_ptr": 1,
                    "ptr": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005ce8",
                "FUN_08005c96"
            ],
            "code": "\nchar * find_end_of_string_08000178(char *string)\n\n{\n  char current_char;\n  char *next_char;\n  char *current_char;\n  \n  current_char = string;\n  do {\n    next_char = current_char + 1;\n    current_char = *current_char;\n    current_char = next_char;\n  } while (current_char != '\\0');\n  return next_char + (-1 - (int)string);\n}\n\n",
            "current_name": "find_end_of_string_08000178",
            "entrypoint": "0x08000178",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000178": "find_end_of_string_08000178",
                "cVar1": "current_char",
                "param_1": "string",
                "pcVar2": "next_char",
                "pcVar3": "current_char"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000190": {
            "additional_data": {
                "CARRY4": {
                    "check_clamped": 1
                },
                "FUN_08000190": {
                    "calculate": 7,
                    "calculate_combined_value": 1,
                    "calculate_integer": 1,
                    "calculate_integer_product": 1,
                    "calculate_result": 5,
                    "calculate_unsigned_product": 2,
                    "calculate_value": 1,
                    "optimized_function": 1,
                    "perform_arithmetic": 1,
                    "perform_unsigned_arithmetic": 1,
                    "reverse_binary_operation": 3,
                    "reverse_bits": 3,
                    "reverse_logic": 1
                },
                "LZCOUNT": {
                    "count_leading_zeros": 1
                },
                "bVar13": {
                    "b_var13": 1,
                    "bool_var1": 1,
                    "check_1": 1,
                    "cond_1": 1,
                    "condition1": 6,
                    "condition_1": 1,
                    "flag1": 3,
                    "flag_1": 1,
                    "is_condition1_met": 1,
                    "is_equal": 5,
                    "is_flag1": 1,
                    "is_zero": 6,
                    "temp13": 1,
                    "temp_bool_1": 1,
                    "temp_var13": 1
                },
                "bVar14": {
                    "b_var14": 1,
                    "bool_var2": 1,
                    "check_2": 1,
                    "cond_2": 1,
                    "condition": 1,
                    "condition1": 2,
                    "condition2": 6,
                    "condition_2": 1,
                    "flag": 1,
                    "flag2": 3,
                    "flag_2": 1,
                    "is_condition2_met": 1,
                    "is_condition_met": 2,
                    "is_flag2": 1,
                    "is_match": 1,
                    "is_true": 2,
                    "is_zero": 2,
                    "temp14": 1,
                    "temp_bool_2": 1,
                    "temp_var14": 1
                },
                "bVar15": {
                    "b_var15": 1,
                    "bool_var3": 1,
                    "borrow_flag": 1,
                    "check_3": 1,
                    "cond_3": 1,
                    "condition2": 2,
                    "condition3": 5,
                    "condition_3": 1,
                    "flag3": 3,
                    "flag_3": 1,
                    "is_carry": 2,
                    "is_condition3_met": 1,
                    "is_flag3": 1,
                    "is_less": 1,
                    "is_negative": 3,
                    "is_overflow": 1,
                    "is_set": 1,
                    "sub_flag": 1,
                    "temp15": 1,
                    "temp_bool_3": 1,
                    "temp_var15": 1
                },
                "bVar2": {
                    "bit": 1,
                    "bit1": 1,
                    "bitwise_and": 1,
                    "carry": 6,
                    "carry1": 1,
                    "carry_bit": 2,
                    "carry_flag": 2,
                    "temp12": 1,
                    "temp2": 1,
                    "temp_3": 1,
                    "temp_byte": 1,
                    "temp_result_9": 1,
                    "temp_var2": 1
                },
                "iVar1": {
                    "bit_offset1": 1,
                    "bit_shift_1": 1,
                    "carry1": 1,
                    "index1": 1,
                    "result2_shifted": 1,
                    "result_1": 1,
                    "shift1": 3,
                    "shift_amount": 1,
                    "shift_amount1": 1,
                    "shift_amount2": 1,
                    "shift_amount_1": 3,
                    "shift_right_amount1": 1,
                    "shifted_input2": 1,
                    "shifted_output_1": 1,
                    "shifted_right1": 1,
                    "shifted_value1": 1,
                    "temp1": 1,
                    "temp5": 1,
                    "temp6": 2,
                    "temp_1": 1,
                    "temp_result_7": 1,
                    "temp_var1": 1
                },
                "iVar8": {
                    "bit_offset2": 1,
                    "bit_shift_2": 1,
                    "carry2": 1,
                    "index2": 1,
                    "result1_shifted": 1,
                    "result_2": 1,
                    "shift2": 3,
                    "shift_amount": 2,
                    "shift_amount2": 2,
                    "shift_amount3": 1,
                    "shift_amount_2": 3,
                    "shift_right_amount2": 1,
                    "shifted_input4": 1,
                    "shifted_output_2": 1,
                    "shifted_right2": 1,
                    "temp10": 1,
                    "temp6": 1,
                    "temp7": 1,
                    "temp8": 1,
                    "temp_2": 1,
                    "temp_6": 1,
                    "temp_result_8": 1,
                    "temp_var6": 1,
                    "temp_var8": 1
                },
                "param_1": {
                    "a": 1,
                    "input1": 17,
                    "input_1": 7,
                    "input_a": 1,
                    "num1": 4,
                    "x": 1
                },
                "param_2": {
                    "b": 1,
                    "input2": 17,
                    "input_2": 7,
                    "input_b": 1,
                    "num2": 4,
                    "y": 1
                },
                "param_3": {
                    "a": 1,
                    "c": 1,
                    "input3": 17,
                    "input_3": 6,
                    "input_c": 1,
                    "num3": 3,
                    "output_1": 1,
                    "result1": 1
                },
                "param_4": {
                    "b": 1,
                    "d": 1,
                    "input4": 17,
                    "input_4": 6,
                    "input_d": 1,
                    "num4": 3,
                    "output_2": 1,
                    "result2": 1
                },
                "uVar10": {
                    "mask2": 1,
                    "masked_input2": 1,
                    "operand_2": 1,
                    "result1_final": 1,
                    "result_5": 1,
                    "result_low": 1,
                    "shifted_input1": 1,
                    "shifted_input2_right15_bits_with_carry": 1,
                    "temp1": 2,
                    "temp10": 1,
                    "temp2": 2,
                    "temp4": 2,
                    "temp6": 1,
                    "temp8": 2,
                    "temp9": 1,
                    "temp_4": 2,
                    "temp_8": 1,
                    "temp_result_4": 1,
                    "temp_uint_7": 1,
                    "temp_var": 1,
                    "temp_var10": 1,
                    "temp_var5": 1,
                    "u_var10": 1,
                    "v": 1
                },
                "uVar11": {
                    "masked_input3": 1,
                    "modified_input_3": 1,
                    "operand_3": 1,
                    "result": 1,
                    "result2_final": 1,
                    "result_6": 1,
                    "result_low": 1,
                    "shifted_input2": 1,
                    "shifted_input4_right15_bits": 1,
                    "shifted_result2": 1,
                    "temp10": 1,
                    "temp11": 1,
                    "temp2": 2,
                    "temp3": 3,
                    "temp5": 2,
                    "temp9": 2,
                    "temp_5": 2,
                    "temp_6": 1,
                    "temp_9": 1,
                    "temp_uint_8": 1,
                    "temp_var11": 1,
                    "temp_var2": 1,
                    "temp_var3": 1,
                    "u_var11": 1,
                    "x": 1
                },
                "uVar12": {
                    "masked_result": 1,
                    "operand_4": 1,
                    "overflow": 1,
                    "result2_partial_shifted": 1,
                    "result_7": 1,
                    "shifted_input3": 1,
                    "shifted_input4_right15_bits_with_carry": 1,
                    "temp": 2,
                    "temp10": 2,
                    "temp11": 1,
                    "temp12": 1,
                    "temp3": 2,
                    "temp4": 3,
                    "temp6": 1,
                    "temp7": 1,
                    "temp_10": 1,
                    "temp_6": 2,
                    "temp_7": 1,
                    "temp_result_1": 1,
                    "temp_uint_9": 1,
                    "temp_var12": 1,
                    "temp_var3": 1,
                    "temp_var4": 1,
                    "u_var12": 1,
                    "y": 1
                },
                "uVar3": {
                    "carry": 2,
                    "result1": 3,
                    "result_low": 1,
                    "sum1": 2,
                    "temp": 1,
                    "temp1": 7,
                    "temp3": 1,
                    "temp4": 2,
                    "temp6": 1,
                    "temp_1": 4,
                    "temp_4": 1,
                    "temp_result_5": 1,
                    "temp_uint_1": 1,
                    "temp_value1": 1,
                    "temp_var3": 1,
                    "temp_var_1": 1
                },
                "uVar4": {
                    "carry2": 1,
                    "mask1": 2,
                    "mask_1": 1,
                    "num1_masked": 1,
                    "result1": 1,
                    "result2": 2,
                    "result_3": 1,
                    "result_high": 1,
                    "result_low": 1,
                    "temp2": 7,
                    "temp4": 1,
                    "temp5": 2,
                    "temp7": 1,
                    "temp_2": 4,
                    "temp_result_2": 1,
                    "temp_uint_2": 1,
                    "temp_value2": 1,
                    "temp_var4": 1,
                    "temp_var8": 1
                },
                "uVar5": {
                    "num2_masked": 1,
                    "result2": 1,
                    "result3": 2,
                    "result_high": 1,
                    "shifted_result1": 1,
                    "sum2": 2,
                    "temp1": 1,
                    "temp3": 7,
                    "temp5": 1,
                    "temp6": 2,
                    "temp8": 1,
                    "temp_3": 4,
                    "temp_5": 1,
                    "temp_result_6": 1,
                    "temp_uint_3": 1,
                    "temp_value3": 1,
                    "temp_var5": 1,
                    "temp_var9": 1,
                    "temp_var_2": 1
                },
                "uVar6": {
                    "bitwise_xor": 1,
                    "input2_shifted": 1,
                    "modified_input_4": 1,
                    "mul2_result": 1,
                    "num2_shifted": 1,
                    "param_4_xor": 1,
                    "partial_sum": 1,
                    "result1": 1,
                    "result_1": 4,
                    "shifted_value2": 1,
                    "temp1": 3,
                    "temp2": 1,
                    "temp4": 5,
                    "temp6": 1,
                    "temp_1": 1,
                    "temp_4": 2,
                    "temp_uint_4": 1,
                    "temp_var1": 1,
                    "temp_var6": 1,
                    "uvar6": 1,
                    "xored_input4": 1
                },
                "uVar7": {
                    "input1_shifted": 1,
                    "mask2": 1,
                    "num1_shifted": 1,
                    "num4_shifted": 1,
                    "partial_carry": 1,
                    "result2": 1,
                    "result_2": 3,
                    "result_4": 1,
                    "shifted_value3": 1,
                    "temp2": 2,
                    "temp3": 1,
                    "temp4": 1,
                    "temp5": 5,
                    "temp7": 2,
                    "temp9": 1,
                    "temp_2": 1,
                    "temp_5": 2,
                    "temp_result_3": 1,
                    "temp_uint_5": 1,
                    "temp_var7": 2,
                    "uvar7": 1
                },
                "uVar9": {
                    "masked_input1": 1,
                    "modified_input_2": 1,
                    "modified_num2": 1,
                    "num2_shifted": 1,
                    "num2_shifted_partial": 1,
                    "operand_1": 1,
                    "param_2_shifted": 1,
                    "result2": 1,
                    "result_2": 1,
                    "result_high": 4,
                    "shifted_input2": 2,
                    "shifted_input2_right15_bits": 1,
                    "shifted_input_2": 1,
                    "temp1": 2,
                    "temp2": 1,
                    "temp3": 1,
                    "temp7": 2,
                    "temp8": 1,
                    "temp9": 1,
                    "temp_3": 1,
                    "temp_7": 1,
                    "temp_uint_6": 1,
                    "temp_var2": 1,
                    "temp_var9": 1,
                    "u": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080016b4",
                "FUN_08005da8",
                "FUN_08001a66",
                "FUN_08001814"
            ],
            "code": "\nulonglong calculate_result_08000190(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int shift1;\n  byte carry;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  int shift_amount_2;\n  uint result_high;\n  uint temp1;\n  uint temp3;\n  uint temp4;\n  bool is_zero;\n  bool condition2;\n  bool condition3;\n  \n  temp4 = input4 ^ 0x80000000;\n  result_high = input2 << 1;\n  input4 = input4 << 1;\n  is_zero = ((input2 ^ temp4) & 0x7fffffff) == 0;\n  condition2 = is_zero && input1 == input3;\n  if (!is_zero || input1 != input3) {\n    condition2 = (result_high | input1) == 0;\n  }\n  if (!condition2) {\n    condition2 = (input4 | input3) == 0;\n  }\n  shift_amount_2 = (int)result_high >> 0x15;\n  if (!condition2) {\n    condition2 = shift_amount_2 == -1;\n  }\n  shift1 = (int)input4 >> 0x15;\n  if (!condition2) {\n    condition2 = shift1 == -1;\n  }\n  if (condition2) {\n    if (shift_amount_2 == -1 || shift1 == -1) {\n      result_high = temp4;\n      temp3 = input3;\n      if (shift_amount_2 == -1) {\n        result_high = input2;\n        temp3 = input1;\n      }\n      if (shift_amount_2 != -1 || shift1 != -1) {\n        input3 = temp3;\n        temp4 = result_high;\n      }\n      condition2 = (temp3 | result_high << 0xc) == 0;\n      if (condition2) {\n        condition2 = (input3 | temp4 << 0xc) == 0;\n      }\n      if (condition2) {\n        condition2 = result_high == temp4;\n      }\n      if (!condition2) {\n        result_high = result_high | 0x80000;\n      }\n      return CONCAT44(result_high,temp3);\n    }\n    if (((input2 ^ temp4) & 0x7fffffff) != 0 || input1 != input3) {\n      if ((result_high | input1) == 0) {\n        input1 = input3;\n        input2 = temp4;\n      }\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != temp4) {\n      return 0;\n    }\n    if (result_high >> 0x15 == 0) {\n      condition2 = (input1 & 0x80000000) != 0;\n      temp4 = input2 * 2 + (uint)condition2;\n      if (check_clamped(input2,input2) || check_clamped(input2 * 2,(uint)condition2)) {\n        temp4 = temp4 | 0x80000000;\n      }\n      return CONCAT44(temp4,input1 << 1);\n    }\n    if (result_high < 0xffc00000) {\n      return CONCAT44(input2 + 0x100000,input1);\n    }\n    input2 = input2 & 0x80000000;\nLAB_080003d4:\n    return (ulonglong)(input2 | 0x7ff00000) << 0x20;\n  }\n  result_high = result_high >> 0x15;\n  input4 = input4 >> 0x15;\n  temp3 = input4 - result_high;\n  condition2 = temp3 != 0;\n  if (input4 < result_high) {\n    temp3 = -temp3;\n  }\n  temp1 = input1;\n  temp5 = input2;\n  if (condition2 && result_high <= input4) {\n    result_high = result_high + temp3;\n    temp1 = input3;\n    temp5 = temp4;\n    input3 = input1;\n    temp4 = input2;\n  }\n  if (0x36 < temp3) {\n    return CONCAT44(temp5,temp1);\n  }\n  temp2 = temp5 & 0xfffff | 0x100000;\n  if ((temp5 & 0x80000000) != 0) {\n    condition2 = temp1 != 0;\n    temp1 = -temp1;\n    temp2 = -temp2 - (uint)condition2;\n  }\n  temp5 = temp4 & 0xfffff | 0x100000;\n  if ((temp4 & 0x80000000) != 0) {\n    condition2 = input3 != 0;\n    input3 = -input3;\n    temp5 = -temp5 - (uint)condition2;\n  }\n  if (result_high == temp3) {\n    temp5 = temp5 ^ 0x100000;\n    if (result_high == 0) {\n      temp2 = temp2 ^ 0x100000;\n      result_high = 1;\n    }\n    else {\n      temp3 = temp3 - 1;\n    }\n  }\n  temp4 = -temp3 + 0x20;\n  if ((int)temp3 < 0x21) {\n    temp4 = input3 << (temp4 & 0xff);\n    input3 = input3 >> (temp3 & 0xff);\n    temp1 = temp1 + input3;\n    temp3 = temp5 << (temp4 & 0xff);\n    temp4 = temp1 + temp3;\n    temp2 = temp2 + check_clamped(temp1,input3) + ((int)temp5 >> (temp3 & 0xff)) +\n            (uint)check_clamped(temp1,temp3);\n  }\n  else {\n    temp4 = temp5 << (-temp3 + 0x40 & 0xff);\n    if (input3 != 0) {\n      temp4 = temp4 | 2;\n    }\n    temp5 = (int)temp5 >> (temp3 - 0x20 & 0xff);\n    temp4 = temp1 + temp5;\n    temp2 = temp2 + ((int)temp5 >> 0x1f) + (uint)check_clamped(temp1,temp5);\n  }\n  input2 = temp2 & 0x80000000;\n  temp3 = temp2;\n  if ((int)temp2 < 0) {\n    condition2 = temp4 == 0;\n    temp4 = -temp4;\n    temp3 = -temp4;\n    temp4 = -(uint)!condition2 - temp4;\n    temp3 = -(uint)(condition2 <= temp3) - temp2;\n  }\n  if (0xfffff < temp3) {\n    temp1 = result_high - 1;\n    if (0x1fffff < temp3) {\n      temp1 = temp3 & 1;\n      temp3 = temp3 >> 1;\n      carry = (byte)temp4;\n      temp4 = (uint)(temp1 != 0) << 0x1f | temp4 >> 1;\n      temp4 = (uint)(carry & 1) << 0x1f | temp4 >> 1;\n      temp1 = result_high;\n      if (0xffbfffff < result_high * 0x200000) goto LAB_080003d4;\n    }\nLAB_080002a0:\n    condition2 = 0x7fffffff < temp4;\n    if (temp4 == 0x80000000) {\n      condition2 = (temp4 & 1) != 0;\n    }\n    return CONCAT44(temp3 + temp1 * 0x100000 + (uint)check_clamped(temp4,(uint)condition2) | input2,\n                    temp4 + condition2);\n  }\n  is_zero = (temp4 & 0x80000000) != 0;\n  temp4 = temp4 << 1;\n  temp1 = temp4 * 2;\n  condition2 = check_clamped(temp4,temp4);\n  temp4 = temp4 * 2 + (uint)is_zero;\n  temp3 = temp3 * 2 + (uint)(condition2 || check_clamped(temp1,(uint)is_zero));\n  temp1 = result_high - 2;\n  if ((temp3 & 0x100000) != 0) goto LAB_080002a0;\n  temp5 = temp4;\n  result_high = temp3;\n  if (temp3 == 0) {\n    temp5 = 0;\n    result_high = temp4;\n  }\n  shift_amount_2 = count_leading_zeros(result_high);\n  if (temp3 == 0) {\n    shift_amount_2 = shift_amount_2 + 0x20;\n  }\n  temp3 = shift_amount_2 - 0xb;\n  condition3 = SBORROW4(temp3,0x20);\n  temp4 = shift_amount_2 - 0x2b;\n  condition2 = (int)temp4 < 0;\n  is_zero = temp4 == 0;\n  if ((int)temp3 < 0x20) {\n    condition3 = Scheck_clamped(temp4,0xc);\n    shift_amount_2 = shift_amount_2 + -0x1f;\n    condition2 = shift_amount_2 < 0;\n    is_zero = shift_amount_2 == 0;\n    temp4 = temp3;\n    if (!is_zero && condition2 == condition3) {\n      temp5 = result_high << (temp3 & 0xff);\n      result_high = result_high >> (0xcU - shift_amount_2 & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (is_zero || condition2 != condition3) {\n    temp4 = 0x20 - temp4;\n  }\n  result_high = result_high << (temp4 & 0xff);\n  if (is_zero || condition2 != condition3) {\n    result_high = result_high | temp5 >> (temp4 & 0xff);\n  }\n  if (is_zero || condition2 != condition3) {\n    temp5 = temp5 << (temp4 & 0xff);\n  }\nLAB_08000318:\n  if ((int)temp3 <= (int)temp1) {\n    return CONCAT44(result_high + (temp1 - temp3) * 0x100000 | input2,temp5);\n  }\n  temp4 = ~(temp1 - temp3);\n  if ((int)temp4 < 0x1f) {\n    shift_amount_2 = temp4 - 0x13;\n    if (shift_amount_2 != 0 && shift_amount_2 < 0 == Scheck_clamped(temp4 - 0x1f,0xc)) {\n      return CONCAT44(temp2,temp5 >> (0x20 - (0xcU - shift_amount_2) & 0xff) | result_high << (0xcU - shift_amount_2 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    temp4 = temp4 + 1;\n    return CONCAT44(input2 | result_high >> (temp4 & 0xff),\n                    temp5 >> (temp4 & 0xff) | result_high << (0x20 - temp4 & 0xff));\n  }\n  return CONCAT44(temp2,result_high >> (temp4 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "current_name": "calculate_result_08000190",
            "entrypoint": "0x08000190",
            "imported": false,
            "improved": true,
            "renaming": {
                "CARRY4": "check_clamped",
                "FUN_08000190": "calculate_result_08000190",
                "LZCOUNT": "count_leading_zeros",
                "bVar13": "is_zero",
                "bVar14": "condition2",
                "bVar15": "condition3",
                "bVar2": "carry",
                "iVar1": "shift1",
                "iVar8": "shift_amount_2",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar10": "temp1",
                "uVar11": "temp3",
                "uVar12": "temp4",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar5": "temp3",
                "uVar6": "temp4",
                "uVar7": "temp5",
                "uVar9": "result_high"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000194": {
            "additional_data": {
                "FUN_08000194": {
                    "calculate": 3,
                    "calculate_concatenation": 2,
                    "calculate_product": 1,
                    "calculate_result": 6,
                    "calculate_x": 1,
                    "gcd": 1,
                    "perform_arithmetic_operation": 1,
                    "perform_bitwise_operations": 1,
                    "perform_math_operation": 1,
                    "reverse_binary_operation": 4,
                    "reverse_calculate": 1
                },
                "bVar13": {
                    "both_inputs_same_sign": 1,
                    "check": 1,
                    "check1": 1,
                    "check_1": 1,
                    "cond1": 1,
                    "condition1": 2,
                    "condition_1": 1,
                    "flag1": 5,
                    "has_input_diff": 1,
                    "is_carry1": 1,
                    "is_diff_zero": 1,
                    "is_difference_positive": 1,
                    "is_equal": 4,
                    "is_equality": 1,
                    "is_input2_input4_equal": 1,
                    "is_inputs_equal": 1,
                    "is_same_half_size": 1,
                    "is_same_sign": 1,
                    "is_zero": 2,
                    "var13": 1
                },
                "bVar14": {
                    "check2": 1,
                    "check_2": 1,
                    "cond2": 1,
                    "condition": 1,
                    "condition1": 1,
                    "condition2": 2,
                    "condition_1": 1,
                    "condition_2": 1,
                    "condition_met": 1,
                    "flag1": 1,
                    "flag2": 5,
                    "is_carry2": 1,
                    "is_condition_met": 1,
                    "is_condition_true": 1,
                    "is_intermediate_result_zero": 1,
                    "is_matching_condition": 1,
                    "is_negative": 1,
                    "is_zero": 4,
                    "is_zero_output": 1,
                    "result": 1,
                    "var14": 1
                },
                "bVar15": {
                    "carry_flag": 1,
                    "check3": 1,
                    "check_3": 1,
                    "compare_result": 1,
                    "cond3": 1,
                    "condition2": 1,
                    "condition3": 1,
                    "condition_2": 1,
                    "condition_3": 1,
                    "flag2": 1,
                    "flag3": 5,
                    "is_carry": 3,
                    "is_carry3": 1,
                    "is_carry_set": 1,
                    "is_diff": 1,
                    "is_negative": 4,
                    "is_negative_shift": 1,
                    "is_shift_carry": 1,
                    "var15": 1
                },
                "bVar2": {
                    "carry": 8,
                    "carry_bit": 7,
                    "carry_flag": 3,
                    "lsb_of_sum2": 1,
                    "temp2": 2,
                    "temp6": 1,
                    "var2": 1
                },
                "iVar1": {
                    "d_shifted_sign_bit": 1,
                    "num4_shifted_sign": 1,
                    "offset1": 1,
                    "shift1": 6,
                    "shift_amount1": 1,
                    "shift_amount2": 1,
                    "shift_amount_1": 2,
                    "shift_count1": 1,
                    "shift_right_amount1": 1,
                    "shifted_input1": 1,
                    "shifted_input2": 1,
                    "shifted_input4_sign": 2,
                    "shifted_input_2": 2,
                    "shifted_input_4": 1,
                    "shifted_operand4_shifted": 1,
                    "shifted_param2": 1,
                    "temp1": 2,
                    "var1": 1
                },
                "iVar6": {
                    "b_shifted_sign_bit": 1,
                    "num2_shifted_sign": 1,
                    "offset2": 1,
                    "shift2": 6,
                    "shift_amount": 1,
                    "shift_amount1": 1,
                    "shift_amount2": 1,
                    "shift_amount_2": 2,
                    "shift_count2": 1,
                    "shift_right_amount2": 1,
                    "shifted_input2_msb": 1,
                    "shifted_input2_sign": 2,
                    "shifted_input3": 1,
                    "shifted_input4_shifted": 1,
                    "shifted_input_2_sign": 1,
                    "shifted_input_4": 1,
                    "shifted_operand2_shifted": 1,
                    "shifted_param4": 1,
                    "temp6": 2,
                    "var6": 2
                },
                "param_1": {
                    "a": 2,
                    "input1": 16,
                    "input_1": 5,
                    "num1": 3,
                    "operand1": 2,
                    "value1": 1
                },
                "param_2": {
                    "b": 2,
                    "input2": 16,
                    "input_2": 5,
                    "num2": 3,
                    "operand2": 2,
                    "value2": 1
                },
                "param_3": {
                    "c": 2,
                    "input3": 16,
                    "input_3": 5,
                    "num3": 3,
                    "operand3": 2,
                    "value3": 1
                },
                "param_4": {
                    "d": 2,
                    "input4": 16,
                    "input_4": 5,
                    "num4": 3,
                    "operand4": 2,
                    "value4": 1
                },
                "uVar10": {
                    "absolute_difference": 2,
                    "b2": 1,
                    "diff_shifted": 1,
                    "difference": 3,
                    "input_diff": 1,
                    "modified_input4": 1,
                    "operand_difference": 1,
                    "result2": 2,
                    "result3": 1,
                    "shift_difference": 1,
                    "shifted_carry_sum1": 1,
                    "shifted_operand4": 1,
                    "temp1": 1,
                    "temp10": 2,
                    "temp3": 1,
                    "temp4": 1,
                    "temp5": 1,
                    "temp7": 2,
                    "temp_4": 1,
                    "temp_7": 2,
                    "var10": 2
                },
                "uVar11": {
                    "carry": 1,
                    "carry2": 1,
                    "carry_bit": 1,
                    "operand1_shifted_carry": 1,
                    "result1_shifted": 1,
                    "result3": 2,
                    "shifted_carry_sum2": 1,
                    "shifted_input2_with_carry": 1,
                    "temp1": 2,
                    "temp11": 2,
                    "temp2": 1,
                    "temp3": 1,
                    "temp4": 3,
                    "temp5": 1,
                    "temp6": 1,
                    "temp8": 2,
                    "temp_5": 1,
                    "temp_8": 2,
                    "temp_value": 1,
                    "temp_var11": 1,
                    "var11": 2
                },
                "uVar12": {
                    "result": 1,
                    "result2_shifted": 1,
                    "result4": 2,
                    "result_1": 1,
                    "result_2": 1,
                    "shifted_input2_with_carry_and_sign": 1,
                    "sum": 2,
                    "temp12": 2,
                    "temp2": 3,
                    "temp3": 1,
                    "temp4": 1,
                    "temp5": 3,
                    "temp6": 1,
                    "temp7": 1,
                    "temp9": 2,
                    "temp_6": 1,
                    "temp_9": 2,
                    "temp_var12": 1,
                    "var12": 2
                },
                "uVar16": {
                    "result_2": 1
                },
                "uVar17": {
                    "result_2_high": 1
                },
                "uVar3": {
                    "carry1": 1,
                    "mask": 1,
                    "mask1": 1,
                    "operand1_add_operand3": 1,
                    "result1": 1,
                    "result_1": 1,
                    "shifted_input2": 1,
                    "sum": 1,
                    "sum1": 4,
                    "temp1": 9,
                    "temp3": 2,
                    "temp_1": 3,
                    "var3": 2
                },
                "uVar4": {
                    "carry2": 1,
                    "mask2": 1,
                    "operand2_add_operand4": 1,
                    "result2": 1,
                    "shifted_input4": 1,
                    "shifted_input_3": 1,
                    "shifted_result_2": 1,
                    "sum2": 4,
                    "temp1": 1,
                    "temp2": 9,
                    "temp4": 2,
                    "temp_2": 3,
                    "var4": 2
                },
                "uVar5": {
                    "b_normalized": 1,
                    "input2_var": 1,
                    "mask3": 1,
                    "normalized_result": 1,
                    "operand2_shifted": 1,
                    "result2": 1,
                    "result3": 1,
                    "shifted_input2": 1,
                    "shifted_input3": 1,
                    "shifted_input4": 1,
                    "shifted_input_2": 1,
                    "sum3": 1,
                    "temp2": 2,
                    "temp3": 6,
                    "temp5": 2,
                    "temp_3": 3,
                    "temp_var5": 1,
                    "u_var5": 1,
                    "var5": 2
                },
                "uVar6": {
                    "operand2_shifted_carry": 1
                },
                "uVar7": {
                    "b_shifted": 1,
                    "carry_shifted_sum1": 1,
                    "input2_shifted_by21": 1,
                    "num2_shifted": 1,
                    "shifted_input2": 7,
                    "shifted_input2_shifted": 1,
                    "shifted_input_2_normalized": 1,
                    "shifted_input_2_shifted": 1,
                    "shifted_input_2_times_2": 1,
                    "shifted_operand1": 1,
                    "shifted_operand2": 1,
                    "temp1": 1,
                    "temp3": 1,
                    "temp4": 3,
                    "temp7": 2,
                    "temp_4": 2,
                    "var7": 2,
                    "x": 1
                },
                "uVar8": {
                    "a_shifted": 1,
                    "input1_var": 1,
                    "operand1_shifted": 1,
                    "result1": 3,
                    "result_high": 1,
                    "shifted_input1": 1,
                    "shifted_input4": 4,
                    "shifted_input_4_sign": 1,
                    "shifted_operand2": 1,
                    "shifted_result_2_normalized": 1,
                    "shifted_sum2": 1,
                    "temp1": 1,
                    "temp2": 1,
                    "temp5": 3,
                    "temp8": 2,
                    "temp_5": 2,
                    "temp_var8": 1,
                    "var8": 2,
                    "y": 1
                },
                "uVar9": {
                    "a2": 1,
                    "carry_shifted_sum2": 1,
                    "d_shifted": 1,
                    "input4_shifted_by21": 1,
                    "input_2_normalized": 1,
                    "modified_input2": 1,
                    "num4_shifted": 1,
                    "result1": 2,
                    "result2": 2,
                    "result_low": 1,
                    "shifted_input4": 4,
                    "shifted_input_4_shifted": 1,
                    "shifted_operand3": 1,
                    "shifted_operand4": 1,
                    "temp3": 1,
                    "temp4": 1,
                    "temp6": 2,
                    "temp9": 2,
                    "temp_6": 2,
                    "var9": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_080015f8",
                "FUN_080016b4",
                "FUN_08005da8",
                "FUN_08000cd0"
            ],
            "code": "\nulonglong calculate_result_08000194(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int shift1;\n  byte carry;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  int shift2;\n  uint shifted_input2;\n  uint shifted_input4;\n  uint shifted_input4;\n  uint difference;\n  uint temp4;\n  uint temp2;\n  bool flag1;\n  bool flag2;\n  bool flag3;\n  \n  shifted_input2 = input2 << 1;\n  shifted_input4 = input4 << 1;\n  flag1 = ((input2 ^ input4) & 0x7fffffff) == 0;\n  flag2 = flag1 && input1 == input3;\n  if (!flag1 || input1 != input3) {\n    flag2 = (shifted_input2 | input1) == 0;\n  }\n  if (!flag2) {\n    flag2 = (shifted_input4 | input3) == 0;\n  }\n  shift2 = (int)shifted_input2 >> 0x15;\n  if (!flag2) {\n    flag2 = shift2 == -1;\n  }\n  shift1 = (int)shifted_input4 >> 0x15;\n  if (!flag2) {\n    flag2 = shift1 == -1;\n  }\n  if (flag2) {\n    if (shift2 == -1 || shift1 == -1) {\n      shifted_input4 = input4;\n      shifted_input2 = input3;\n      if (shift2 == -1) {\n        shifted_input4 = input2;\n        shifted_input2 = input1;\n      }\n      if (shift2 != -1 || shift1 != -1) {\n        input3 = shifted_input2;\n        input4 = shifted_input4;\n      }\n      flag2 = (shifted_input2 | shifted_input4 << 0xc) == 0;\n      if (flag2) {\n        flag2 = (input3 | input4 << 0xc) == 0;\n      }\n      if (flag2) {\n        flag2 = shifted_input4 == input4;\n      }\n      if (!flag2) {\n        shifted_input4 = shifted_input4 | 0x80000;\n      }\n      return CONCAT44(shifted_input4,shifted_input2);\n    }\n    if (((input2 ^ input4) & 0x7fffffff) != 0 || input1 != input3) {\n      if ((shifted_input2 | input1) == 0) {\n        input1 = input3;\n        input2 = input4;\n      }\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != input4) {\n      return 0;\n    }\n    if (shifted_input2 >> 0x15 == 0) {\n      flag2 = (input1 & 0x80000000) != 0;\n      shifted_input4 = input2 * 2 + (uint)flag2;\n      if (CARRY4(input2,input2) || CARRY4(input2 * 2,(uint)flag2)) {\n        shifted_input4 = shifted_input4 | 0x80000000;\n      }\n      return CONCAT44(shifted_input4,input1 << 1);\n    }\n    if (shifted_input2 < 0xffc00000) {\n      return CONCAT44(input2 + 0x100000,input1);\n    }\n    input2 = input2 & 0x80000000;\nLAB_080003d4:\n    return (ulonglong)(input2 | 0x7ff00000) << 0x20;\n  }\n  shifted_input2 = shifted_input2 >> 0x15;\n  shifted_input4 = shifted_input4 >> 0x15;\n  difference = shifted_input4 - shifted_input2;\n  flag2 = difference != 0;\n  if (shifted_input4 < shifted_input2) {\n    difference = -difference;\n  }\n  shifted_input4 = input1;\n  temp3 = input2;\n  if (flag2 && shifted_input2 <= shifted_input4) {\n    shifted_input2 = shifted_input2 + difference;\n    shifted_input4 = input3;\n    temp3 = input4;\n    input3 = input1;\n    input4 = input2;\n  }\n  if (0x36 < difference) {\n    return CONCAT44(temp3,shifted_input4);\n  }\n  shifted_input4 = temp3 & 0xfffff | 0x100000;\n  if ((temp3 & 0x80000000) != 0) {\n    flag2 = shifted_input4 != 0;\n    shifted_input4 = -shifted_input4;\n    shifted_input4 = -shifted_input4 - (uint)flag2;\n  }\n  temp3 = input4 & 0xfffff | 0x100000;\n  if ((input4 & 0x80000000) != 0) {\n    flag2 = input3 != 0;\n    input3 = -input3;\n    temp3 = -temp3 - (uint)flag2;\n  }\n  if (shifted_input2 == difference) {\n    temp3 = temp3 ^ 0x100000;\n    if (shifted_input2 == 0) {\n      shifted_input4 = shifted_input4 ^ 0x100000;\n      shifted_input2 = 1;\n    }\n    else {\n      difference = difference - 1;\n    }\n  }\n  temp2 = -difference + 0x20;\n  if ((int)difference < 0x21) {\n    temp4 = input3 << (temp2 & 0xff);\n    input3 = input3 >> (difference & 0xff);\n    temp1 = shifted_input4 + input3;\n    temp2 = temp3 << (temp2 & 0xff);\n    temp2 = temp1 + temp2;\n    shifted_input4 = shifted_input4 + CARRY4(shifted_input4,input3) + ((int)temp3 >> (difference & 0xff)) +\n            (uint)CARRY4(temp1,temp2);\n  }\n  else {\n    temp4 = temp3 << (-difference + 0x40 & 0xff);\n    if (input3 != 0) {\n      temp4 = temp4 | 2;\n    }\n    temp3 = (int)temp3 >> (difference - 0x20 & 0xff);\n    temp2 = shifted_input4 + temp3;\n    shifted_input4 = shifted_input4 + ((int)temp3 >> 0x1f) + (uint)CARRY4(shifted_input4,temp3);\n  }\n  input2 = shifted_input4 & 0x80000000;\n  difference = shifted_input4;\n  if ((int)shifted_input4 < 0) {\n    flag2 = temp4 == 0;\n    temp4 = -temp4;\n    difference = -temp2;\n    temp2 = -(uint)!flag2 - temp2;\n    difference = -(uint)(flag2 <= difference) - shifted_input4;\n  }\n  if (0xfffff < difference) {\n    shifted_input4 = shifted_input2 - 1;\n    if (0x1fffff < difference) {\n      shifted_input4 = difference & 1;\n      difference = difference >> 1;\n      carry = (byte)temp2;\n      temp2 = (uint)(shifted_input4 != 0) << 0x1f | temp2 >> 1;\n      temp4 = (uint)(carry & 1) << 0x1f | temp4 >> 1;\n      shifted_input4 = shifted_input2;\n      if (0xffbfffff < shifted_input2 * 0x200000) goto LAB_080003d4;\n    }\nLAB_080002a0:\n    flag2 = 0x7fffffff < temp4;\n    if (temp4 == 0x80000000) {\n      flag2 = (temp2 & 1) != 0;\n    }\n    return CONCAT44(difference + shifted_input4 * 0x100000 + (uint)CARRY4(temp2,(uint)flag2) | input2,\n                    temp2 + flag2);\n  }\n  flag1 = (temp4 & 0x80000000) != 0;\n  temp4 = temp4 << 1;\n  shifted_input4 = temp2 * 2;\n  flag2 = CARRY4(temp2,temp2);\n  temp2 = temp2 * 2 + (uint)flag1;\n  difference = difference * 2 + (uint)(flag2 || CARRY4(shifted_input4,(uint)flag1));\n  shifted_input4 = shifted_input2 - 2;\n  if ((difference & 0x100000) != 0) goto LAB_080002a0;\n  temp3 = temp2;\n  shifted_input2 = difference;\n  if (difference == 0) {\n    temp3 = 0;\n    shifted_input2 = temp2;\n  }\n  shift2 = LZCOUNT(shifted_input2);\n  if (difference == 0) {\n    shift2 = shift2 + 0x20;\n  }\n  temp2 = shift2 - 0xb;\n  flag3 = SBORROW4(temp2,0x20);\n  difference = shift2 - 0x2b;\n  flag2 = (int)difference < 0;\n  flag1 = difference == 0;\n  if ((int)temp2 < 0x20) {\n    flag3 = SCARRY4(difference,0xc);\n    shift2 = shift2 + -0x1f;\n    flag2 = shift2 < 0;\n    flag1 = shift2 == 0;\n    difference = temp2;\n    if (!flag1 && flag2 == flag3) {\n      temp3 = shifted_input2 << (temp2 & 0xff);\n      shifted_input2 = shifted_input2 >> (0xcU - shift2 & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (flag1 || flag2 != flag3) {\n    temp4 = 0x20 - difference;\n  }\n  shifted_input2 = shifted_input2 << (difference & 0xff);\n  if (flag1 || flag2 != flag3) {\n    shifted_input2 = shifted_input2 | temp3 >> (temp4 & 0xff);\n  }\n  if (flag1 || flag2 != flag3) {\n    temp3 = temp3 << (difference & 0xff);\n  }\nLAB_08000318:\n  if ((int)temp2 <= (int)shifted_input4) {\n    return CONCAT44(shifted_input2 + (shifted_input4 - temp2) * 0x100000 | input2,temp3);\n  }\n  difference = ~(shifted_input4 - temp2);\n  if ((int)difference < 0x1f) {\n    shift2 = difference - 0x13;\n    if (shift2 != 0 && shift2 < 0 == SCARRY4(difference - 0x1f,0xc)) {\n      return CONCAT44(shifted_input4,temp3 >> (0x20 - (0xcU - shift2) & 0xff) | shifted_input2 << (0xcU - shift2 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    difference = difference + 1;\n    return CONCAT44(input2 | shifted_input2 >> (difference & 0xff),\n                    temp3 >> (difference & 0xff) | shifted_input2 << (0x20 - difference & 0xff));\n  }\n  return CONCAT44(shifted_input4,shifted_input2 >> (difference - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "current_name": "calculate_result_08000194",
            "entrypoint": "0x08000194",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000194": "calculate_result_08000194",
                "bVar13": "flag1",
                "bVar14": "flag2",
                "bVar15": "flag3",
                "bVar2": "carry",
                "iVar1": "shift1",
                "iVar6": "shift2",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar10": "difference",
                "uVar11": "temp4",
                "uVar12": "temp2",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar5": "temp3",
                "uVar7": "shifted_input2",
                "uVar8": "shifted_input4",
                "uVar9": "shifted_input4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800040c": {
            "additional_data": {
                "0U": {
                    "constant4": 1
                },
                "0x13": {
                    "constant8": 1
                },
                "0x15": {
                    "constant1": 1
                },
                "0x1f": {
                    "constant7": 1
                },
                "0x20": {
                    "constant19": 1
                },
                "0x32": {
                    "constant10": 1
                },
                "0x432": {
                    "constant6": 1
                },
                "0x433": {
                    "constant5": 1
                },
                "0xc": {
                    "constant20": 1
                },
                "0xff": {
                    "constant13": 1
                },
                "0xffffffff": {
                    "constant12": 1
                },
                "0xffffffffffffffff": {
                    "constant11": 1
                },
                "CONCAT44": {
                    "concat_values": 1,
                    "concatenate": 1
                },
                "FUN_0800040c": {
                    "bit_shifting": 1,
                    "bit_shifting_operation": 1,
                    "bitwise_shift": 1,
                    "decode_and_shift": 2,
                    "extract_and_shift_bits": 1,
                    "perform_bit_operations": 1,
                    "reverse_and_shift": 1,
                    "reverse_and_shift_bits": 3,
                    "reverse_bits": 7,
                    "reverse_bitshift": 1,
                    "shift_and_combine": 2,
                    "shift_and_concat": 4,
                    "shift_and_concatenate": 5,
                    "shift_and_concatenate_bits": 1
                },
                "LAB_08000318": {
                    "apply_shift": 1,
                    "bit_extraction": 1,
                    "end_of_calculation": 1,
                    "end_of_loop": 1,
                    "finish_shift": 1,
                    "perform_shift": 1,
                    "shift_label": 1,
                    "shift_left_label": 1,
                    "shift_right_loop_start": 1
                },
                "bVar5": {
                    "is_less_than_zero": 1,
                    "is_negative": 23,
                    "is_negative_shift": 4,
                    "negative_shift": 2
                },
                "bVar6": {
                    "is_equal_zero": 1,
                    "is_zero": 23,
                    "is_zero_shift": 4,
                    "no_shift": 1,
                    "zero_shift": 1
                },
                "bVar7": {
                    "bigger_than32": 1,
                    "carry": 3,
                    "carry_bool": 1,
                    "carry_flag": 1,
                    "has_carry": 1,
                    "is_borrow": 5,
                    "is_borrowed": 1,
                    "is_carry": 2,
                    "is_out_of_bounds": 1,
                    "is_overflow": 6,
                    "is_shift_greater_than32": 1,
                    "is_subtracted": 1,
                    "is_subtraction_borrow": 1,
                    "is_underflow": 1,
                    "overflow_detected": 1,
                    "overflow_flag": 1,
                    "overflow_subtraction": 1,
                    "shift_overflow": 1
                },
                "iVar3": {
                    "bit_count": 8,
                    "bits_count": 1,
                    "count": 6,
                    "high_bit_position": 1,
                    "leading_zeros": 10,
                    "leading_zeros_count": 1,
                    "lz_count": 2,
                    "lzcount_result": 1,
                    "shift_amount": 1
                },
                "in_r12": {
                    "bit_mask": 1,
                    "bit_width": 1,
                    "in_r12": 1,
                    "mask": 2,
                    "remaining_bits": 20,
                    "remaining_shift": 1,
                    "remaining_shift_count": 1,
                    "shift_amount3": 1,
                    "shift_rem": 1,
                    "shifted_bits": 1
                },
                "param_1": {
                    "input": 22,
                    "input_number": 2,
                    "input_val": 1,
                    "input_value": 5,
                    "result_low": 1
                },
                "uVar1": {
                    "concatenated": 2,
                    "output": 2,
                    "output_val": 1,
                    "result": 2,
                    "result1": 2,
                    "result_high": 2,
                    "result_low": 1,
                    "result_upper": 1,
                    "shifted_bits": 1,
                    "shifted_result": 3,
                    "shifted_result1": 1,
                    "shifted_val": 1,
                    "shifted_value": 5,
                    "shifted_value_high": 1,
                    "upper_bits": 6
                },
                "uVar2": {
                    "lower_bits": 1,
                    "result2": 1,
                    "shift": 1,
                    "shift_amount": 22,
                    "shift_amount1": 1,
                    "shift_amt": 1,
                    "shifted_amount": 1
                },
                "uVar4": {
                    "addition_amount": 1,
                    "adjusted_amount": 1,
                    "adjusted_bit_count": 3,
                    "adjusted_count": 1,
                    "adjusted_shift": 3,
                    "constant": 1,
                    "effective_shift": 1,
                    "new_shift_amount": 1,
                    "offset": 4,
                    "shift_amount": 4,
                    "shift_amount2": 1,
                    "shift_amt": 2,
                    "shift_value": 1,
                    "shifted_amount": 2,
                    "shifted_count": 1,
                    "shifted_value_plus": 1,
                    "total_bits": 2,
                    "u_var4": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080015f8",
                "FUN_08005da8",
                "FUN_08000cd0",
                "FUN_08001918",
                "FUN_08001814"
            ],
            "code": "\nulonglong reverse_and_shift_bits_0800040c(uint input)\n\n{\n  uint upper_bits;\n  uint shift_amount;\n  int leading_zeros;\n  uint offset;\n  uint remaining_bits;\n  bool is_negative;\n  bool is_zero;\n  bool is_overflow;\n  \n  if (input == 0) {\n    return 0;\n  }\n  upper_bits = 0;\n  leading_zeros = LZCOUNT(input);\n  offset = leading_zeros + 0x15;\n  is_overflow = SBORROW4(offset,0x20);\n  shift_amount = leading_zeros - 0xb;\n  is_negative = (int)shift_amount < 0;\n  is_zero = shift_amount == 0;\n  if (offset < 0x20) {\n    is_overflow = SCARRY4(shift_amount,0xc);\n    is_negative = false;\n    is_zero = leading_zeros + 1 == 0;\n    shift_amount = offset;\n    if (!is_zero && is_overflow == false) {\n      upper_bits = input << offset;\n      input = input >> (0xcU - (leading_zeros + 1) & 0xff);\n      goto finish_shift;\n    }\n  }\n  if (is_zero || is_negative != is_overflow) {\n    remaining_bits = 0x20 - shift_amount;\n  }\n  input = input << (shift_amount & 0xff);\n  if (is_zero || is_negative != is_overflow) {\n    input = input | constant4 >> (remaining_bits & 0xff);\n  }\n  if (is_zero || is_negative != is_overflow) {\n    upper_bits = 0 << (shift_amount & 0xff);\n  }\nfinish_shift:\n  if (offset < 0x433) {\n    return concat_values(input + (0x432 - offset) * 0x100000,upper_bits);\n  }\n  shift_amount = ~(0x432 - offset);\n  if (0x1e < (int)shift_amount) {\n    return (ulonglong)(input >> (shift_amount - 0x1f & 0xff));\n  }\n  leading_zeros = shift_amount - 0x13;\n  if (leading_zeros == 0 || leading_zeros < 0 != SCARRY4(shift_amount - 0x1f,0xc)) {\n    shift_amount = shift_amount + 1;\n    return concat_values(input >> (shift_amount & 0xff),\n                    upper_bits >> (shift_amount & 0xff) | input << (0x20 - shift_amount & 0xff));\n  }\n  return (ulonglong)(upper_bits >> (0x20 - (0xcU - leading_zeros) & 0xff) | input << (0xcU - leading_zeros & 0xff));\n}\n\n",
            "current_name": "reverse_and_shift_bits_0800040c",
            "entrypoint": "0x0800040c",
            "imported": false,
            "improved": true,
            "renaming": {
                "0U": "constant4",
                "CONCAT44": "concat_values",
                "FUN_0800040c": "reverse_and_shift_bits_0800040c",
                "LAB_08000318": "finish_shift",
                "bVar5": "is_negative",
                "bVar6": "is_zero",
                "bVar7": "is_overflow",
                "iVar3": "leading_zeros",
                "in_r12": "remaining_bits",
                "param_1": "input",
                "uVar1": "upper_bits",
                "uVar2": "shift_amount",
                "uVar4": "offset"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800042c": {
            "additional_data": {
                "0x100000": {
                    "additional_shift": 1
                },
                "0x13": {
                    "limit_adjustment": 1
                },
                "0x15": {
                    "additional_bits": 1
                },
                "0x1e": {
                    "limit_subtraction": 1
                },
                "0x20": {
                    "bit_count": 1
                },
                "0x432": {
                    "limit_total_bits": 1
                },
                "0x433": {
                    "max_total_bits": 1
                },
                "0x80000000": {
                    "sign_bit": 1
                },
                "0xb": {
                    "min_shift": 1
                },
                "0xc": {
                    "max_shift": 1
                },
                "CONCAT44": {
                    "combine_values": 1
                },
                "FUN_0800042c": {
                    "bit_count_with_shift": 1,
                    "bit_shift": 1,
                    "bit_shift_and_concat": 1,
                    "bitwise_operation": 1,
                    "bitwise_shift": 2,
                    "bitwise_shift_and_combine": 1,
                    "bitwise_shift_and_concat": 1,
                    "convert_unsigned_to_long_long": 1,
                    "reverse_and_shift_bits": 3,
                    "reverse_bits": 13,
                    "reverse_shift": 1,
                    "shift_and_concat": 2,
                    "shift_and_concatenate": 1,
                    "shift_and_mask": 1,
                    "shift_operation": 1
                },
                "LAB_08000318": {
                    "end_label": 1,
                    "perform_additional_shift": 1
                },
                "LZCOUNT": {
                    "count_leading_zeros": 1,
                    "leading_zero_count": 1
                },
                "SCARRY4": {
                    "is_subtraction_carry": 1
                },
                "bVar7": {
                    "compare_result1": 1,
                    "has_leading_zeros": 2,
                    "has_negative_shift": 1,
                    "is_negative": 17,
                    "is_negative_count": 1,
                    "is_negative_or_zero": 1,
                    "is_negative_shift": 2,
                    "leading_zeros_flag": 1,
                    "need_right_shift": 1,
                    "negative_shift": 1,
                    "shift_less_than_zero": 1,
                    "small_shift": 1
                },
                "bVar8": {
                    "compare_result2": 1,
                    "count_zero": 1,
                    "is_shift_zero": 1,
                    "is_zero": 17,
                    "is_zero_count": 1,
                    "is_zero_shift": 3,
                    "need_zero_shift": 1,
                    "shift_equal_to_zero": 1,
                    "zero_shift": 2,
                    "zero_shift_flag": 1,
                    "zeros_flag": 1
                },
                "bVar9": {
                    "carry": 1,
                    "carry_flag": 6,
                    "carry_overflow": 1,
                    "compare_result3": 1,
                    "is_borrow": 1,
                    "is_carry": 7,
                    "is_negative": 2,
                    "is_overflowing": 1,
                    "is_shift_carry": 1,
                    "is_underflow": 1,
                    "negative_input": 1,
                    "overflow": 5,
                    "signed": 1,
                    "subtract_overflow": 1
                },
                "iVar4": {
                    "adjusted_shift": 1,
                    "bit_count": 4,
                    "count": 3,
                    "leading_zeros": 22,
                    "lzcount_result": 1
                },
                "in_r12": {
                    "bit_mask": 2,
                    "mask_index": 1,
                    "mask_value": 1,
                    "padding_amount": 1,
                    "remaining_bits": 18,
                    "remaining_shift": 1,
                    "shift_value": 1,
                    "temp": 3,
                    "temp_variable": 1
                },
                "param_1": {
                    "input": 21,
                    "input_num": 2,
                    "input_value": 2,
                    "num": 2,
                    "number": 4
                },
                "uVar1": {
                    "bit_count": 2,
                    "convert_result": 1,
                    "count": 3,
                    "counter": 1,
                    "final_shifted_value": 1,
                    "leading_zeros": 1,
                    "ones_count": 1,
                    "output": 3,
                    "positive_input": 1,
                    "result": 3,
                    "shift_amount": 2,
                    "shift_count": 2,
                    "shift_result": 2,
                    "shifted_amount": 1,
                    "shifted_num": 1,
                    "shifted_result_high": 1,
                    "shifted_value": 2,
                    "temp_count": 1,
                    "total_bits": 1,
                    "zero_count": 1
                },
                "uVar2": {
                    "abs_input": 14,
                    "abs_input_value": 1,
                    "abs_num": 4,
                    "abs_number": 4,
                    "abs_value": 1,
                    "absolute_input": 1,
                    "absolute_value": 1,
                    "combined_bits": 2,
                    "input_abs": 1,
                    "temp": 1,
                    "temp_mask": 1
                },
                "uVar3": {
                    "additional_shift": 1,
                    "num_shift": 1,
                    "remaining_bits": 1,
                    "shift": 3,
                    "shift_amount": 13,
                    "shift_amt": 1,
                    "shift_count": 5,
                    "shift_distance": 1,
                    "shift_mask": 1,
                    "shift_value": 2,
                    "shifted_amount2": 1,
                    "shifted_zeros": 1
                },
                "uVar5": {
                    "adjusted_bit_count": 1,
                    "adjusted_count": 2,
                    "adjusted_shift_count": 1,
                    "base_shift": 1,
                    "combined_shift": 1,
                    "extra_shift": 1,
                    "final_shift": 5,
                    "final_shift_amount": 2,
                    "final_shift_amt": 1,
                    "final_shift_distance": 1,
                    "new_shift_amount": 1,
                    "normalized_shift": 1,
                    "required_bits": 1,
                    "required_shift_amount": 1,
                    "shift_amount": 2,
                    "shift_distance": 1,
                    "shifted_amount": 1,
                    "shifted_count": 1,
                    "threshold": 1,
                    "total_bit_count": 1,
                    "total_bits": 4
                },
                "uVar6": {
                    "input_sign": 2,
                    "is_negative": 1,
                    "sign_bit": 25,
                    "sign_ext": 1,
                    "sign_mask": 1,
                    "unsigned_flag": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0",
                "FUN_08001918"
            ],
            "code": "\nulonglong reverse_and_shift_bits_0800042c(uint input)\n\n{\n  uint result;\n  uint abs_input;\n  uint shift_amount;\n  int leading_zeros;\n  uint final_shift;\n  uint sign_bit;\n  uint remaining_bits;\n  bool is_negative;\n  bool is_zero;\n  bool is_carry;\n  \n  if (input == 0) {\n    return 0;\n  }\n  sign_bit = input & 0x80000000;\n  abs_input = input;\n  if ((int)sign_bit < 0) {\n    abs_input = -input;\n  }\n  result = 0;\n  leading_zeros = leading_zero_count(abs_input);\n  final_shift = leading_zeros + 0x15;\n  is_carry = SBORROW4(final_shift,0x20);\n  shift_amount = leading_zeros - 0xb;\n  is_negative = (int)shift_amount < 0;\n  is_zero = shift_amount == 0;\n  if (final_shift < 0x20) {\n    is_carry = is_subtraction_carry(shift_amount,0xc);\n    is_negative = false;\n    is_zero = leading_zeros + 1 == 0;\n    shift_amount = final_shift;\n    if (!is_zero && is_carry == false) {\n      result = abs_input << final_shift;\n      abs_input = abs_input >> (0xcU - (leading_zeros + 1) & 0xff);\n      goto perform_additional_shift;\n    }\n  }\n  if (is_zero || is_negative != is_carry) {\n    remaining_bits = 0x20 - shift_amount;\n  }\n  abs_input = abs_input << (shift_amount & 0xff);\n  if (is_zero || is_negative != is_carry) {\n    abs_input = abs_input | 0U >> (remaining_bits & 0xff);\n  }\n  if (is_zero || is_negative != is_carry) {\n    result = 0 << (shift_amount & 0xff);\n  }\nperform_additional_shift:\n  if (final_shift < 0x433) {\n    return combine_values(abs_input + (0x432 - final_shift) * 0x100000 | sign_bit,result);\n  }\n  shift_amount = ~(0x432 - final_shift);\n  if (0x1e < (int)shift_amount) {\n    return combine_values(input,abs_input >> (shift_amount - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  leading_zeros = shift_amount - 0x13;\n  if (leading_zeros == 0 || leading_zeros < 0 != is_subtraction_carry(shift_amount - 0x1f,0xc)) {\n    shift_amount = shift_amount + 1;\n    return combine_values(sign_bit | abs_input >> (shift_amount & 0xff),\n                    result >> (shift_amount & 0xff) | abs_input << (0x20 - shift_amount & 0xff));\n  }\n  return combine_values(input,result >> (0x20 - (0xcU - leading_zeros) & 0xff) | abs_input << (0xcU - leading_zeros & 0xff))\n         & 0x80000000ffffffff;\n}\n\n",
            "current_name": "reverse_and_shift_bits_0800042c",
            "entrypoint": "0x0800042c",
            "imported": false,
            "improved": true,
            "renaming": {
                "CONCAT44": "combine_values",
                "FUN_0800042c": "reverse_and_shift_bits_0800042c",
                "LAB_08000318": "perform_additional_shift",
                "LZCOUNT": "leading_zero_count",
                "SCARRY4": "is_subtraction_carry",
                "bVar7": "is_negative",
                "bVar8": "is_zero",
                "bVar9": "is_carry",
                "iVar4": "leading_zeros",
                "in_r12": "remaining_bits",
                "param_1": "input",
                "uVar1": "result",
                "uVar2": "abs_input",
                "uVar3": "shift_amount",
                "uVar5": "final_shift",
                "uVar6": "sign_bit"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080004f8": {
            "additional_data": {
                "FUN_080004f8": {
                    "calculate": 2,
                    "calculate_arithmetic": 1,
                    "calculate_checksum": 1,
                    "calculate_product": 6,
                    "calculate_result": 16,
                    "calculate_sum_and_product": 1,
                    "calculate_unsigned_multiply_add": 1
                },
                "bVar10": {
                    "bool_var2": 1,
                    "check2": 1,
                    "condition2": 4,
                    "flag2": 12,
                    "flag_2": 2,
                    "is_borrow": 1,
                    "is_carry": 1,
                    "is_condition2": 1,
                    "is_less_than": 1,
                    "is_negative": 4,
                    "is_true2": 1,
                    "is_zero2": 1,
                    "temp_flag2": 1
                },
                "bVar11": {
                    "bool_var3": 1,
                    "carry_flag": 1,
                    "check3": 1,
                    "condition3": 4,
                    "flag3": 12,
                    "flag_3": 2,
                    "is_borrow": 1,
                    "is_condition3": 1,
                    "is_condition_met": 1,
                    "is_negative": 3,
                    "is_negative2": 1,
                    "is_overflow": 1,
                    "is_true3": 1,
                    "temp_flag3": 1
                },
                "bVar9": {
                    "bool_var1": 1,
                    "check1": 1,
                    "condition1": 4,
                    "flag1": 12,
                    "flag_1": 2,
                    "is_condition1": 1,
                    "is_true1": 1,
                    "is_zero": 7,
                    "is_zero1": 1,
                    "temp_flag1": 1
                },
                "iVar5": {
                    "i_var5": 2,
                    "result5": 1,
                    "sum": 5,
                    "sum2": 1,
                    "sum_of_bits": 1,
                    "sum_params": 1,
                    "temp3": 8,
                    "temp5": 7,
                    "temp_3": 1,
                    "temp_var3": 1,
                    "temp_var_4": 1,
                    "var3": 2
                },
                "lVar2": {
                    "add_result": 1,
                    "operand2": 1,
                    "product2": 2,
                    "result2": 6,
                    "result_2": 1,
                    "sum1": 1,
                    "temp": 7,
                    "temp2": 7,
                    "temp_result": 1,
                    "temp_result_high": 1,
                    "temp_var": 3
                },
                "param_1": {
                    "input1": 26,
                    "input_1": 1,
                    "input_param1": 1,
                    "input_param_1": 2,
                    "value1": 1
                },
                "param_2": {
                    "input2": 26,
                    "input_2": 1,
                    "input_param2": 1,
                    "input_param_2": 2,
                    "value2": 1
                },
                "param_3": {
                    "input3": 26,
                    "input_3": 1,
                    "input_param3": 1,
                    "input_param_3": 2,
                    "value3": 1
                },
                "param_4": {
                    "input4": 26,
                    "input_4": 1,
                    "input_param4": 1,
                    "input_param_4": 2,
                    "value4": 1
                },
                "reverse_bits_080006d4": {
                    "reverse_bits": 4
                },
                "uVar1": {
                    "mul_result": 1,
                    "multiplication_result_low": 1,
                    "operand1": 1,
                    "product": 3,
                    "product1": 3,
                    "result": 7,
                    "result1": 6,
                    "result_1": 1,
                    "result_low": 1,
                    "temp1": 7
                },
                "uVar12": {
                    "combined": 1,
                    "combined_input": 6,
                    "combined_inputs": 1,
                    "combined_params": 5,
                    "combined_values": 1,
                    "combined_vars": 1,
                    "computation_result": 1,
                    "concat_params": 1,
                    "concat_result": 1,
                    "concat_var": 1,
                    "concatenated_input": 1,
                    "concatenated_inputs": 2,
                    "concatenated_params": 1,
                    "concatenated_result": 1,
                    "concatenated_value": 1,
                    "result": 3,
                    "reversed_bits": 1,
                    "temp8": 1,
                    "value": 1
                },
                "uVar3": {
                    "extracted_bits": 1,
                    "high_part1": 1,
                    "mask1": 1,
                    "result3": 1,
                    "shifted_param3": 1,
                    "sum": 1,
                    "temp1": 11,
                    "temp3": 7,
                    "temp_1": 1,
                    "temp_var1": 1,
                    "temp_var_2": 1,
                    "u_var3": 2,
                    "var1": 2
                },
                "uVar4": {
                    "bit_mask": 1,
                    "high_part2": 1,
                    "mask2": 1,
                    "result4": 1,
                    "shifted_param4": 1,
                    "temp2": 11,
                    "temp4": 7,
                    "temp_2": 1,
                    "temp_var2": 1,
                    "temp_var_3": 1,
                    "u_var4": 3,
                    "var2": 2
                },
                "uVar6": {
                    "difference": 2,
                    "result6": 1,
                    "temp1": 2,
                    "temp3": 3,
                    "temp4": 8,
                    "temp6": 7,
                    "temp_4": 1,
                    "temp_var4": 1,
                    "temp_var_5": 1,
                    "u_var6": 3,
                    "var4": 2
                },
                "uVar7": {
                    "bit_mask2": 1,
                    "carry": 1,
                    "result7": 1,
                    "temp2": 1,
                    "temp3": 1,
                    "temp5": 5,
                    "temp6": 6,
                    "temp7": 2,
                    "temp8": 5,
                    "temp_6": 1,
                    "temp_var5": 1,
                    "temp_var_7": 1,
                    "u_var7": 3,
                    "var5": 1,
                    "var6": 1
                },
                "uVar8": {
                    "product_low_part": 1,
                    "result8": 1,
                    "shifted_value": 1,
                    "temp3": 1,
                    "temp4": 1,
                    "temp6": 5,
                    "temp7": 6,
                    "temp8": 2,
                    "temp9": 5,
                    "temp_7": 1,
                    "temp_result_low": 1,
                    "temp_var6": 1,
                    "temp_var_8": 1,
                    "u_var8": 2,
                    "var6": 1,
                    "var7": 1
                },
                "uVar9": {
                    "mask": 1
                },
                "unaff_r5": {
                    "bit_mask1": 1,
                    "input4_11bits": 1,
                    "temp2": 1,
                    "temp4": 3,
                    "temp5": 6,
                    "temp7": 5,
                    "temp_5": 1,
                    "temp_var_6": 1,
                    "unaff_r5": 1,
                    "var5": 1
                }
            },
            "called": [
                "FUN_080006d4"
            ],
            "calling": [
                "FUN_080015f8",
                "FUN_080016b4",
                "FUN_08005da8",
                "FUN_08001918",
                "FUN_08001814"
            ],
            "code": "\nulonglong calculate_result_080004f8(undefined4 input1,uint input2,uint input3,uint input4)\n\n{\n  ulonglong result;\n  longlong temp;\n  uint temp1;\n  uint temp2;\n  int temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  bool flag1;\n  bool flag2;\n  bool flag3;\n  ulonglong combined_input;\n  \n  combined_input = CONCAT44(input2,input1);\n  temp6 = 0x7ff;\n  temp2 = input2 >> 0x14 & 0x7ff;\n  flag1 = temp2 == 0;\n  if (!flag1) {\n    temp5 = input4 >> 0x14 & 0x7ff;\n    flag1 = temp5 == 0;\n  }\n  if (!flag1) {\n    flag1 = temp2 == 0x7ff;\n  }\n  if (!flag1) {\n    flag1 = temp5 == 0x7ff;\n  }\n  if (flag1) {\n    combined_input = reverse_bits();\n  }\n  temp1 = (uint)(combined_input >> 0x20);\n  temp3 = temp2 + temp5;\n  temp2 = temp1 ^ input4;\n  temp1 = temp1 & ~(temp6 << 0x15);\n  input4 = input4 & ~(temp6 << 0x15);\n  flag1 = ((uint)combined_input | temp1 << 0xc) == 0;\n  if (!flag1) {\n    flag1 = (input3 | input4 << 0xc) == 0;\n  }\n  temp1 = temp1 | 0x100000;\n  input4 = input4 | 0x100000;\n  if (flag1) {\n    input3 = (uint)combined_input | input3;\n    input4 = (temp2 & 0x80000000 | temp1) ^ input4;\n    temp2 = temp6 >> 1;\n    flag3 = SBORROW4(temp3,temp2);\n    temp4 = temp3 - temp2;\n    flag1 = temp4 == 0;\n    temp1 = temp4;\n    if (!flag1 && (int)temp2 <= temp3) {\n      flag3 = SBORROW4(temp6,temp4);\n      temp1 = temp6 - temp4;\n      flag1 = temp6 == temp4;\n    }\n    if (!flag1 && (int)temp1 < 0 == flag3) {\n      input4 = input4 | temp4 * 0x100000;\n    }\n    if (!flag1 && (int)temp1 < 0 == flag3) {\n      return CONCAT44(input4,input3);\n    }\n    input4 = input4 | 0x100000;\n    temp6 = 0;\n    flag3 = SBORROW4(temp4,1);\n    temp4 = temp4 - 1;\n    flag1 = temp4 == 0;\n    temp2 = temp4;\n  }\n  else {\n    result = (combined_input & 0xffffffff) * (ulonglong)input3;\n    combined_input = (combined_input & 0xffffffff) * (ulonglong)input4 +\n             (ulonglong)temp1 * (ulonglong)input3 + (result >> 0x20);\n    temp7 = (uint)combined_input;\n    temp = (ulonglong)temp1 * (ulonglong)input4 + (combined_input >> 0x20);\n    temp6 = (uint)temp;\n    temp1 = (uint)((ulonglong)temp >> 0x20);\n    if ((int)result != 0) {\n      temp7 = temp7 | 1;\n    }\n    temp4 = (temp3 + -0x3ff) - (uint)(temp1 < 0x200);\n    if (temp1 < 0x200) {\n      flag1 = (temp7 & 0x80000000) != 0;\n      temp7 = temp7 << 1;\n      temp = CONCAT44(temp1 * 2 + (uint)(CARRY4(temp6,temp6) || CARRY4(temp6 * 2,(uint)flag1)),\n                       temp6 * 2 + (uint)flag1);\n    }\n    input4 = temp2 & 0x80000000 | (int)((ulonglong)temp >> 0x20) << 0xb | (uint)temp >> 0x15;\n    input3 = (uint)temp << 0xb | temp7 >> 0x15;\n    temp6 = temp7 * 0x800;\n    flag2 = 0xfc < temp4;\n    flag3 = SBORROW4(temp4,0xfd);\n    temp1 = temp4 - 0xfd;\n    flag1 = temp1 == 0;\n    temp2 = temp1;\n    if (flag2 && !flag1) {\n      flag2 = 0x6ff < temp1;\n      flag3 = SBORROW4(temp1,0x700);\n      temp2 = temp4 - 0x7fd;\n      flag1 = temp1 == 0x700;\n    }\n    if (!flag2 || flag1) {\n      flag1 = 0x7fffffff < temp6;\n      if (temp6 == 0x80000000) {\n        flag1 = (temp7 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(input4 + temp4 * 0x100000 + (uint)CARRY4(input3,(uint)flag1),input3 + flag1\n                     );\n    }\n  }\n  if (!flag1 && (int)temp2 < 0 == flag3) {\n    return (ulonglong)(input4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  flag2 = SCARRY4(temp4,0x36);\n  flag1 = (int)(temp4 + 0x36) < 0;\n  flag3 = temp4 == 0xffffffca;\n  if (flag3 || flag1 != flag2) {\n    input3 = 0;\n  }\n  if (flag3 || flag1 != flag2) {\n    input4 = input4 & 0x80000000;\n  }\n  if (flag3 || flag1 != flag2) {\n    return CONCAT44(input4,input3);\n  }\n  temp2 = -temp4;\n  temp1 = temp2 - 0x20;\n  if (0x1f < (int)temp2) {\n    temp4 = input3 >> (temp1 & 0xff) | input4 << (0x20 - temp1 & 0xff);\n    temp2 = (input4 >> (temp1 & 0xff) & ~((input4 & 0x80000000) >> (temp1 & 0xff))) -\n            ((int)temp4 >> 0x1f);\n    if ((temp6 | input3 << (0x20 - temp1 & 0xff) | temp4 << 1) == 0) {\n      temp2 = temp2 & ~(temp4 >> 0x1f);\n    }\n    return CONCAT44(input4,temp2) & 0x80000000ffffffff;\n  }\n  temp3 = temp2 - 0x14;\n  if (temp3 == 0 || temp3 < 0 != SCARRY4(temp1,0xc)) {\n    temp7 = input3 << (temp4 + 0x20 & 0xff);\n    temp1 = input3 >> (temp2 & 0xff) | input4 << (temp4 + 0x20 & 0xff);\n    temp4 = temp1 + -((int)temp7 >> 0x1f);\n    if ((temp6 | temp7 << 1) == 0) {\n      temp4 = temp4 & ~(temp7 >> 0x1f);\n    }\n    return CONCAT44((input4 & 0x80000000) +\n                    ((input4 & 0x7fffffff) >> (temp2 & 0xff)) +\n                    (uint)CARRY4(temp1,-((int)temp7 >> 0x1f)),temp4);\n  }\n  temp2 = 0xc - temp3;\n  temp4 = input3 << (temp2 & 0xff);\n  temp2 = input3 >> (0x20 - temp2 & 0xff) | input4 << (temp2 & 0xff);\n  temp1 = temp2 + -((int)temp4 >> 0x1f);\n  if ((temp6 | temp4 << 1) == 0) {\n    temp1 = temp1 & ~(temp4 >> 0x1f);\n  }\n  return CONCAT44((input4 & 0x80000000) + (uint)CARRY4(temp2,-((int)temp4 >> 0x1f)),temp1);\n}\n\n",
            "current_name": "calculate_result_080004f8",
            "entrypoint": "0x080004f8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080004f8": "calculate_result_080004f8",
                "bVar10": "flag2",
                "bVar11": "flag3",
                "bVar9": "flag1",
                "iVar5": "temp3",
                "lVar2": "temp",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "reverse_bits_080006d4": "reverse_bits",
                "uVar1": "result",
                "uVar12": "combined_input",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar6": "temp4",
                "uVar7": "temp6",
                "uVar8": "temp7",
                "unaff_r5": "temp5"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080006d4": {
            "additional_data": {
                "FUN_080006d4": {
                    "bitwise_operation": 1,
                    "bitwise_operation_with_shift_check": 1,
                    "calculate_bitwise": 1,
                    "calculate_bitwise_and_shift": 1,
                    "calculate_bitwise_operation": 1,
                    "calculate_result": 2,
                    "calculate_shifted_value": 2,
                    "extract_bit": 1,
                    "reverse_bit_concatenation": 1,
                    "reverse_bit_operations": 1,
                    "reverse_bits": 12,
                    "reverse_bitwise_operation": 4,
                    "reverse_bitwise_operations": 2
                },
                "bVar4": {
                    "check": 1,
                    "condition": 1,
                    "flag": 2,
                    "is_zero": 23,
                    "is_zero_flag": 1,
                    "temp_var4": 1
                },
                "in_r12": {
                    "bit5": 3,
                    "bit_5": 3,
                    "constant1": 1,
                    "constant_1": 1,
                    "constant_value": 1,
                    "mask": 3,
                    "temp2": 4,
                    "temp4": 1,
                    "temp5": 4,
                    "temp_5": 5,
                    "temp_r12": 1,
                    "temp_reg_12": 1,
                    "temporary5": 1,
                    "variable_r12": 1
                },
                "param_1": {
                    "input1": 14,
                    "input_1": 11,
                    "input_a": 1,
                    "input_val_1": 1,
                    "num1": 2,
                    "result_2": 1,
                    "value1": 1
                },
                "param_2": {
                    "input2": 14,
                    "input_2": 11,
                    "input_b": 1,
                    "input_val_2": 1,
                    "num2": 2,
                    "result_3": 1,
                    "value2": 1
                },
                "param_3": {
                    "input3": 14,
                    "input_3": 11,
                    "input_c": 1,
                    "input_val_3": 1,
                    "num3": 2,
                    "result_4": 1,
                    "value3": 1
                },
                "param_4": {
                    "input4": 14,
                    "input_4": 11,
                    "input_d": 1,
                    "input_val_4": 1,
                    "num4": 2,
                    "result_5": 1,
                    "value4": 1
                },
                "uVar1": {
                    "bit1": 9,
                    "bit_1": 3,
                    "input_1_bitmask": 1,
                    "result_2": 1,
                    "shifted_input_1": 1,
                    "temp1": 4,
                    "temp2": 1,
                    "temp_1": 3,
                    "temp_2": 2,
                    "temp_u1": 1,
                    "temp_var1": 1,
                    "temp_var_1": 1,
                    "temporary4": 1,
                    "tmp_shifted_bit": 1
                },
                "uVar2": {
                    "bit2": 6,
                    "bit3": 3,
                    "bit_2": 1,
                    "bit_3": 3,
                    "mask_2": 1,
                    "result2": 1,
                    "shifted_input_2": 1,
                    "temp2": 1,
                    "temp3": 3,
                    "temp6": 1,
                    "temp_3": 5,
                    "temp_u2": 1,
                    "temp_var2": 1,
                    "temp_var_2": 1,
                    "temporary2": 1,
                    "tmp_bit": 1
                },
                "uVar3": {
                    "bit3": 4,
                    "bit4": 3,
                    "bit_4": 2,
                    "output": 1,
                    "result": 2,
                    "result1": 2,
                    "result_1": 2,
                    "return_val": 1,
                    "shifted_input_3": 1,
                    "temp3": 1,
                    "temp4": 4,
                    "temp_4": 3,
                    "temp_6": 1,
                    "temp_u3": 1,
                    "temp_var3": 1,
                    "temp_var_3": 1,
                    "temporary3": 1
                },
                "uVar4": {
                    "result2": 1
                },
                "uVar5": {
                    "bit4": 1
                },
                "unaff_r4": {
                    "bit2": 4,
                    "bit_2": 3,
                    "limit": 1,
                    "mask_1": 1,
                    "temp": 1,
                    "temp1": 6,
                    "temp2": 4,
                    "temp_1": 2,
                    "temp_2": 3,
                    "temp_r4": 1,
                    "temp_reg_4": 1,
                    "temporary1": 1,
                    "unchanged_input": 1,
                    "value": 1,
                    "variable_r4": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080004f8"
            ],
            "code": "\nulonglong reverse_bits_080006d4(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint bit1;\n  uint temp1;\n  uint bit2;\n  uint temp4;\n  uint temp_5;\n  bool is_zero;\n  \n  bit2 = temp_5 & input4 >> 0x14;\n  if (temp1 != temp_5 && bit2 != temp_5) {\n    is_zero = (input1 | input2 << 1) == 0;\n    if (!is_zero) {\n      is_zero = (input3 | input4 << 1) == 0;\n    }\n    if (is_zero) {\n      return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n    }\n    if (temp1 == 0) {\n      temp4 = input2 & 0x80000000;\n      do {\n        bit1 = input1 & 0x80000000;\n        input1 = input1 << 1;\n        input2 = input2 * 2 + (uint)(bit1 != 0);\n      } while ((input2 & 0x100000) == 0);\n      input2 = input2 | temp4;\n      if (bit2 != 0) {\n        return CONCAT44(input2,input1);\n      }\n    }\n    do {\n      bit2 = input3 & 0x80000000;\n      input3 = input3 << 1;\n      input4 = input4 * 2 + (uint)(bit2 != 0);\n    } while ((input4 & 0x100000) == 0);\n    return CONCAT44(input2,input1);\n  }\n  is_zero = (input1 | input2 << 1) == 0;\n  if (is_zero) {\n    input2 = input4;\n    input1 = input3;\n  }\n  if (!is_zero) {\n    is_zero = (input3 | input4 << 1) == 0;\n  }\n  temp4 = input2;\n  if (((!is_zero) && ((temp1 != temp_5 || ((input1 | input2 << 0xc) == 0)))) &&\n     ((bit2 != temp_5 || (input1 = input3, temp4 = input4, (input3 | input4 << 0xc) == 0)))) {\n    return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  return CONCAT44(temp4,input1) | 0x7ff8000000000000;\n}\n\n",
            "current_name": "reverse_bits_080006d4",
            "entrypoint": "0x080006d4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080006d4": "reverse_bits_080006d4",
                "bVar4": "is_zero",
                "in_r12": "temp_5",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "bit1",
                "uVar2": "bit2",
                "uVar3": "temp4",
                "unaff_r4": "temp1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800074c": {
            "additional_data": {
                "FUN_0800074c": {
                    "calculate": 1,
                    "calculate_double_precision": 1,
                    "calculate_double_sum": 1,
                    "calculate_float": 2,
                    "calculate_floating_point": 8,
                    "calculate_floating_point_value": 2,
                    "calculate_unsigned_division": 2,
                    "optimized_function": 1
                },
                "bVar14": {
                    "condition1": 5,
                    "condition_1": 1,
                    "first_zero_flag": 1,
                    "flag1": 9,
                    "flag_1": 1,
                    "is_zero": 7,
                    "is_zero1": 3,
                    "temp_bool1": 1,
                    "temp_var15": 2,
                    "temp_var_15": 1
                },
                "bVar15": {
                    "condition2": 5,
                    "condition_2": 1,
                    "flag2": 9,
                    "flag_2": 1,
                    "is_equal": 6,
                    "is_negative": 2,
                    "is_zero2": 2,
                    "second_zero_flag": 1,
                    "temp_bool2": 1,
                    "temp_var16": 2,
                    "temp_var_16": 1
                },
                "bVar16": {
                    "carry_flag": 2,
                    "condition3": 3,
                    "condition_3": 1,
                    "flag3": 9,
                    "flag_3": 1,
                    "is_carry": 4,
                    "is_negative": 3,
                    "is_overflow": 1,
                    "overflow": 2,
                    "overflow_flag": 1,
                    "temp_bool3": 1,
                    "temp_var17": 2,
                    "temp_var_17": 1
                },
                "bVar17": {
                    "flag4": 2,
                    "is_carry": 2,
                    "overflow": 1,
                    "reverse_flag": 1
                },
                "iVar8": {
                    "difference": 13,
                    "exponent_diff": 1,
                    "exponent_difference": 2,
                    "temp8": 9,
                    "temp_8": 1,
                    "temp_var8": 3,
                    "temp_var_8": 1
                },
                "param_1": {
                    "count": 1,
                    "exponent1": 1,
                    "input1": 14,
                    "input_1": 1,
                    "input_flag": 1,
                    "input_param1": 2,
                    "input_param_1": 4,
                    "input_parameter1": 1,
                    "num_bits": 1,
                    "sign": 2,
                    "signed_exponent": 1,
                    "value1": 2
                },
                "param_2": {
                    "exponent": 2,
                    "fraction_part": 1,
                    "input1": 2,
                    "input2": 14,
                    "input_2": 1,
                    "input_param2": 2,
                    "input_param_2": 4,
                    "input_parameter2": 1,
                    "sign": 1,
                    "significand1": 1,
                    "value2": 2
                },
                "param_3": {
                    "exponent": 1,
                    "exponent2": 1,
                    "input2": 2,
                    "input3": 14,
                    "input_3": 1,
                    "input_param3": 2,
                    "input_param_3": 4,
                    "input_parameter3": 1,
                    "mantissa_high": 2,
                    "temp1": 1,
                    "value3": 2
                },
                "param_4": {
                    "input3": 2,
                    "input4": 14,
                    "input_4": 1,
                    "input_param4": 2,
                    "input_param_4": 4,
                    "input_parameter4": 1,
                    "mantissa": 1,
                    "mantissa_low": 2,
                    "significand2": 1,
                    "temp2": 1,
                    "value4": 2
                },
                "reverse_bits_check_080008ba": {
                    "check_reversed_bits": 1,
                    "reverse_bits_check": 1
                },
                "uVar1": {
                    "bit1": 1,
                    "bit_count": 1,
                    "bit_mask": 1,
                    "bit_shift_1": 1,
                    "bit_value1": 1,
                    "carry_bit": 1,
                    "dividend": 1,
                    "exponent_bits": 1,
                    "flag1": 1,
                    "mask": 1,
                    "normalized_exponent": 1,
                    "quotient": 1,
                    "result1": 1,
                    "temp1": 12,
                    "temp_1": 1,
                    "temp_var1": 3,
                    "temp_var_1": 1,
                    "value1": 1
                },
                "uVar10": {
                    "normalized_divisor": 1,
                    "normalized_exponent2": 1,
                    "packed_data1": 1,
                    "result10": 1,
                    "result2": 4,
                    "second_mantissa_bits": 1,
                    "second_param3": 1,
                    "shifted_low_1": 1,
                    "shifted_value1": 1,
                    "sum2": 1,
                    "temp10": 2,
                    "temp11": 8,
                    "temp2": 1,
                    "temp_10": 1,
                    "temp_divisor": 1,
                    "temp_var11": 3,
                    "temp_var8": 1,
                    "temp_var_11": 1
                },
                "uVar11": {
                    "exponent_value": 1,
                    "final_exponent": 1,
                    "final_result": 1,
                    "normalized_fraction2": 1,
                    "packed_data2": 1,
                    "product": 1,
                    "result11": 1,
                    "result3": 4,
                    "result_mantissa": 1,
                    "second_param4": 1,
                    "shifted_low_2": 1,
                    "shifted_value2": 1,
                    "temp11": 1,
                    "temp12": 8,
                    "temp_11": 1,
                    "temp_dividend": 1,
                    "temp_var12": 3,
                    "temp_var_12": 1,
                    "value1": 1
                },
                "uVar12": {
                    "bit_difference": 1,
                    "difference2": 3,
                    "difference_fraction": 1,
                    "overflow_bits": 1,
                    "result12": 1,
                    "result4": 3,
                    "shifted_low_3": 1,
                    "temp12": 2,
                    "temp13": 8,
                    "temp3": 1,
                    "temp_12": 1,
                    "temp_difference": 1,
                    "temp_var13": 3,
                    "temp_var6": 1,
                    "temp_var9": 1,
                    "temp_var_13": 1,
                    "value2": 1
                },
                "uVar13": {
                    "bit_mask": 1,
                    "carry_flag": 1,
                    "constant1": 1,
                    "constant_1": 1,
                    "mask": 3,
                    "max_value": 3,
                    "overflow_flag": 1,
                    "remainder": 1,
                    "result13": 1,
                    "result5": 1,
                    "temp13": 1,
                    "temp14": 8,
                    "temp4": 1,
                    "temp9": 1,
                    "temp_13": 1,
                    "temp_var14": 3,
                    "temp_var_14": 1,
                    "value": 1
                },
                "uVar17": {
                    "combined_input": 1,
                    "combined_inputs": 2,
                    "combined_shifted_values": 1,
                    "combined_value": 1,
                    "combined_values": 1,
                    "combined_vars": 1,
                    "concatenated_result": 1,
                    "result": 8,
                    "reverse_bits_result": 1,
                    "reversed_bits": 1,
                    "reversed_result": 1,
                    "temp15": 2,
                    "temp9": 1,
                    "temp_var18": 2,
                    "temp_var_18": 1
                },
                "uVar18": {
                    "bit_mask": 1,
                    "new_significand1": 1,
                    "result1": 1,
                    "result_temp1": 1,
                    "temp10": 1
                },
                "uVar19": {
                    "new_significand2": 1,
                    "result2": 1,
                    "result_temp2": 1
                },
                "uVar2": {
                    "bit2": 1,
                    "bit_shift_2": 1,
                    "bit_value2": 1,
                    "divisor": 1,
                    "flag2": 1,
                    "normalized_fraction": 1,
                    "remainder": 1,
                    "result2": 1,
                    "temp1": 1,
                    "temp2": 12,
                    "temp_2": 1,
                    "temp_var1": 2,
                    "temp_var2": 3,
                    "temp_var_2": 1,
                    "u_var2": 1,
                    "unaff_r5": 1,
                    "value2": 1
                },
                "uVar20": {
                    "result_temp3": 1
                },
                "uVar3": {
                    "bit3": 1,
                    "bit_shift_3": 1,
                    "bit_value3": 1,
                    "exponent_bits_flag": 1,
                    "flag3": 1,
                    "quotient": 1,
                    "result3": 1,
                    "temp2": 1,
                    "temp3": 13,
                    "temp_3": 1,
                    "temp_var1": 1,
                    "temp_var2": 2,
                    "temp_var3": 3,
                    "temp_var_3": 1,
                    "u_var3": 1,
                    "value3": 1
                },
                "uVar4": {
                    "bit4": 1,
                    "bit_shift_4": 1,
                    "bit_value4": 1,
                    "flag4": 1,
                    "mantissa_bits_flag": 1,
                    "remainder": 1,
                    "result4": 1,
                    "temp3": 1,
                    "temp4": 13,
                    "temp_4": 1,
                    "temp_var2": 1,
                    "temp_var3": 2,
                    "temp_var4": 3,
                    "temp_var_4": 1,
                    "u_var4": 1,
                    "value4": 1
                },
                "uVar5": {
                    "bit5": 1,
                    "bit_shift_5": 1,
                    "bit_value5": 1,
                    "exponent_bits_flag2": 1,
                    "flag5": 1,
                    "result5": 1,
                    "temp": 1,
                    "temp4": 1,
                    "temp5": 13,
                    "temp_5": 1,
                    "temp_var3": 1,
                    "temp_var4": 2,
                    "temp_var5": 3,
                    "temp_var_5": 1,
                    "u_var5": 1,
                    "value5": 1
                },
                "uVar6": {
                    "bit6": 1,
                    "bit_shift_6": 1,
                    "bit_value6": 1,
                    "flag6": 1,
                    "mantissa_bits_flag2": 1,
                    "result6": 1,
                    "shift": 1,
                    "temp5": 1,
                    "temp6": 13,
                    "temp_6": 1,
                    "temp_var4": 1,
                    "temp_var5": 2,
                    "temp_var6": 3,
                    "temp_var_6": 1,
                    "u_var6": 1,
                    "value6": 1
                },
                "uVar7": {
                    "bit7": 1,
                    "bit_shift_7": 1,
                    "bit_value7": 1,
                    "flag7": 1,
                    "result": 1,
                    "result7": 1,
                    "result_sign": 1,
                    "temp6": 1,
                    "temp7": 13,
                    "temp_7": 1,
                    "temp_var5": 1,
                    "temp_var6": 2,
                    "temp_var7": 3,
                    "temp_var_7": 1,
                    "u_var7": 1,
                    "value7": 1
                },
                "uVar8": {
                    "result8": 1
                },
                "uVar9": {
                    "count": 1,
                    "first_mantissa_bits": 1,
                    "floating_part1": 1,
                    "normalized_dividend": 1,
                    "result1": 4,
                    "result9": 1,
                    "shifted_difference": 1,
                    "shifted_high_1": 1,
                    "sum": 1,
                    "sum1": 2,
                    "temp1": 1,
                    "temp9": 10,
                    "temp_9": 1,
                    "temp_var7": 1,
                    "temp_var9": 3,
                    "temp_var_9": 1
                },
                "unaff_r5": {
                    "bit8": 1,
                    "exponent_difference": 1,
                    "flag8": 1,
                    "floating_part2": 1,
                    "second_param2": 1,
                    "shifted_high_2": 1,
                    "temp10": 8,
                    "temp8": 1,
                    "temp_var10": 3,
                    "temp_var_10": 1,
                    "unaff_r5": 1,
                    "unaff_var1": 1,
                    "value5": 1,
                    "value8": 1
                }
            },
            "called": [
                "FUN_080008ba"
            ],
            "calling": [
                "FUN_080015f8",
                "FUN_08005da8",
                "FUN_08001918",
                "FUN_08001814"
            ],
            "code": "\nulonglong calculate_floating_point_value_0800074c(undefined4 input1,uint input2,uint input3,uint input4)\n\n{\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  int difference;\n  uint temp9;\n  uint temp10;\n  uint temp11;\n  uint temp12;\n  uint temp13;\n  uint temp14;\n  bool flag1;\n  bool flag2;\n  bool flag3;\n  undefined8 result;\n  \n  result = CONCAT44(input2,input1);\n  temp14 = 0x7ff;\n  temp7 = input2 >> 0x14 & 0x7ff;\n  flag1 = temp7 == 0;\n  if (!flag1) {\n    temp10 = input4 >> 0x14 & 0x7ff;\n    flag1 = temp10 == 0;\n  }\n  if (!flag1) {\n    flag1 = temp7 == 0x7ff;\n  }\n  if (!flag1) {\n    flag1 = temp10 == 0x7ff;\n  }\n  if (flag1) {\n    result = reverse_bits_check();\n  }\n  temp9 = (uint)((ulonglong)result >> 0x20);\n  temp12 = (uint)result;\n  difference = temp7 - temp10;\n  if ((input3 | input4 << 0xc) == 0) {\n    temp7 = (temp9 ^ input4) & 0x80000000 | temp9 & 0xfffff;\n    flag3 = SCARRY4(difference,temp14 >> 1);\n    temp9 = difference + (temp14 >> 1);\n    flag1 = (int)temp9 < 0;\n    flag2 = temp9 == 0;\n    if (!flag2 && flag1 == flag3) {\n      flag3 = SBORROW4(temp14,temp9);\n      flag1 = (int)(temp14 - temp9) < 0;\n      flag2 = temp14 == temp9;\n    }\n    if (!flag2 && flag1 == flag3) {\n      temp7 = temp7 | temp9 * 0x100000;\n    }\n    if (!flag2 && flag1 == flag3) {\n      return CONCAT44(temp7,temp12);\n    }\n    temp7 = temp7 | 0x100000;\n    temp14 = 0;\n    flag2 = SBORROW4(temp9,1);\n    temp9 = temp9 - 1;\n    flag1 = temp9 == 0;\n    temp3 = temp9;\n  }\n  else {\n    temp3 = (input4 << 0xc) >> 4 | 0x10000000 | input3 >> 0x18;\n    temp14 = input3 << 8;\n    temp11 = (temp9 << 0xc) >> 4 | 0x10000000 | temp12 >> 0x18;\n    temp12 = temp12 * 0x100;\n    temp7 = (temp9 ^ input4) & 0x80000000;\n    flag1 = temp3 <= temp11;\n    if (temp11 == temp3) {\n      flag1 = temp14 <= temp12;\n    }\n    difference = difference + (uint)flag1;\n    temp9 = difference + 0x3fd;\n    if (flag1 == false) {\n      temp3 = temp3 >> 1;\n      temp14 = (uint)((input3 >> 0x18 & 1) != 0) << 0x1f | temp14 >> 1;\n    }\n    temp13 = temp12 - temp14;\n    temp11 = (temp11 - temp3) - (uint)(temp12 < temp14);\n    temp4 = temp3 >> 1;\n    temp1 = (uint)((temp3 & 1) != 0) << 0x1f | temp14 >> 1;\n    temp12 = 0x100000;\n    temp3 = 0x80000;\n    while( true ) {\n      flag1 = temp1 <= temp13;\n      if (temp4 < temp11 || temp11 - temp4 < (uint)flag1) {\n        temp13 = temp13 - temp1;\n        temp12 = temp12 | temp3;\n        temp11 = (temp11 - temp4) - (uint)!flag1;\n      }\n      temp5 = temp4 >> 1;\n      temp1 = (uint)((temp4 & 1) != 0) << 0x1f | temp1 >> 1;\n      flag2 = temp1 <= temp13;\n      flag1 = temp11 - temp5 < (uint)flag2;\n      temp14 = temp11;\n      if (temp5 < temp11 || flag1) {\n        temp13 = temp13 - temp1;\n        temp14 = (temp11 - temp5) - (uint)!flag2;\n      }\n      if (temp5 < temp11 || flag1) {\n        temp12 = temp12 | temp3 >> 1;\n      }\n      temp11 = temp4 >> 2;\n      temp2 = (uint)((temp5 & 1) != 0) << 0x1f | temp1 >> 1;\n      flag2 = temp2 <= temp13;\n      flag1 = temp14 - temp11 < (uint)flag2;\n      temp5 = temp14;\n      if (temp11 < temp14 || flag1) {\n        temp13 = temp13 - temp2;\n        temp5 = (temp14 - temp11) - (uint)!flag2;\n      }\n      if (temp11 < temp14 || flag1) {\n        temp12 = temp12 | temp3 >> 2;\n      }\n      temp6 = temp4 >> 3;\n      temp1 = (uint)((temp11 & 1) != 0) << 0x1f | temp2 >> 1;\n      flag2 = temp1 <= temp13;\n      flag1 = temp5 - temp6 < (uint)flag2;\n      temp11 = temp5;\n      if (temp6 < temp5 || flag1) {\n        temp13 = temp13 - temp1;\n        temp11 = (temp5 - temp6) - (uint)!flag2;\n      }\n      if (temp6 < temp5 || flag1) {\n        temp12 = temp12 | temp3 >> 3;\n      }\n      temp14 = temp11 | temp13;\n      if (temp14 == 0) break;\n      temp11 = temp11 << 4 | temp13 >> 0x1c;\n      temp13 = temp13 << 4;\n      temp4 = temp4 & 0xfffffff8 | temp1 >> 0x1d;\n      temp1 = (temp2 >> 1) << 3;\n      temp3 = temp3 >> 4;\n      if (temp3 == 0) {\n        temp6 = temp4;\n        if ((temp7 & 0x100000) != 0) goto LAB_0800086a;\n        temp7 = temp7 | temp12;\n        temp12 = 0;\n        temp3 = 0x80000000;\n      }\n    }\n    if ((temp7 & 0x100000) == 0) {\n      temp7 = temp7 | temp12;\n      temp12 = 0;\n    }\nLAB_0800086a:\n    flag3 = 0xfc < temp9;\n    flag2 = SBORROW4(temp9,0xfd);\n    temp4 = difference + 0x300;\n    flag1 = temp4 == 0;\n    temp3 = temp4;\n    if (flag3 && !flag1) {\n      flag3 = 0x6ff < temp4;\n      flag2 = SBORROW4(temp4,0x700);\n      temp3 = difference - 0x400;\n      flag1 = temp4 == 0x700;\n    }\n    if (!flag3 || flag1) {\n      flag1 = temp6 <= temp11;\n      if (temp11 == temp6) {\n        flag1 = temp1 <= temp13;\n      }\n      if (temp11 == temp6 && temp13 == temp1) {\n        flag1 = (temp12 & 1) != 0;\n      }\n      return CONCAT44(temp7 + temp9 * 0x100000 + (uint)CARRY4(temp12,(uint)flag1),temp12 + flag1);\n    }\n  }\n  if (!flag1 && (int)temp3 < 0 == flag2) {\n    return (ulonglong)(temp7 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  flag3 = SCARRY4(temp9,0x36);\n  flag1 = (int)(temp9 + 0x36) < 0;\n  flag2 = temp9 == 0xffffffca;\n  if (flag2 || flag1 != flag3) {\n    temp12 = 0;\n  }\n  if (flag2 || flag1 != flag3) {\n    temp7 = temp7 & 0x80000000;\n  }\n  if (flag2 || flag1 != flag3) {\n    return CONCAT44(temp7,temp12);\n  }\n  temp3 = -temp9;\n  temp11 = temp3 - 0x20;\n  if (0x1f < (int)temp3) {\n    temp3 = temp12 >> (temp11 & 0xff) | temp7 << (0x20 - temp11 & 0xff);\n    temp9 = (temp7 >> (temp11 & 0xff) & ~((temp7 & 0x80000000) >> (temp11 & 0xff))) -\n            ((int)temp3 >> 0x1f);\n    if ((temp14 | temp12 << (0x20 - temp11 & 0xff) | temp3 << 1) == 0) {\n      temp9 = temp9 & ~(temp3 >> 0x1f);\n    }\n    return CONCAT44(temp7,temp9) & 0x80000000ffffffff;\n  }\n  difference = temp3 - 0x14;\n  if (difference != 0 && difference < 0 == SCARRY4(temp11,0xc)) {\n    temp9 = 0xc - difference;\n    temp3 = temp12 << (temp9 & 0xff);\n    temp12 = temp12 >> (0x20 - temp9 & 0xff) | temp7 << (temp9 & 0xff);\n    temp9 = temp12 + -((int)temp3 >> 0x1f);\n    if ((temp14 | temp3 << 1) == 0) {\n      temp9 = temp9 & ~(temp3 >> 0x1f);\n    }\n    return CONCAT44((temp7 & 0x80000000) + (uint)CARRY4(temp12,-((int)temp3 >> 0x1f)),temp9);\n  }\n  temp11 = temp12 << (temp9 + 0x20 & 0xff);\n  temp12 = temp12 >> (temp3 & 0xff) | temp7 << (temp9 + 0x20 & 0xff);\n  temp9 = temp12 + -((int)temp11 >> 0x1f);\n  if ((temp14 | temp11 << 1) == 0) {\n    temp9 = temp9 & ~(temp11 >> 0x1f);\n  }\n  return CONCAT44((temp7 & 0x80000000) +\n                  ((temp7 & 0x7fffffff) >> (temp3 & 0xff)) +\n                  (uint)CARRY4(temp12,-((int)temp11 >> 0x1f)),temp9);\n}\n\n",
            "current_name": "calculate_floating_point_value_0800074c",
            "entrypoint": "0x0800074c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800074c": "calculate_floating_point_value_0800074c",
                "bVar14": "flag1",
                "bVar15": "flag2",
                "bVar16": "flag3",
                "iVar8": "difference",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "reverse_bits_check_080008ba": "reverse_bits_check",
                "uVar1": "temp1",
                "uVar10": "temp11",
                "uVar11": "temp12",
                "uVar12": "temp13",
                "uVar13": "temp14",
                "uVar17": "result",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6",
                "uVar7": "temp7",
                "uVar9": "temp9",
                "unaff_r5": "temp10"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080008ba": {
            "additional_data": {
                "FUN_080008ba": {
                    "calculate_double": 1,
                    "calculate_double_from_parameters": 1,
                    "calculate_double_precision": 2,
                    "calculate_float": 1,
                    "convert_to_double": 2,
                    "convert_to_double_precision": 1,
                    "decode_and_combine": 1,
                    "decode_float": 1,
                    "decode_float_bits": 1,
                    "parse_floating_point": 1,
                    "reverse_and_normalize_float": 1,
                    "reverse_binary_operation": 1,
                    "reverse_bits": 4,
                    "reverse_bits_and_generate_float": 1,
                    "reverse_bits_check": 1,
                    "reverse_bits_to_float": 1,
                    "reverse_number_bits": 1,
                    "reversed_binary_operation": 1
                },
                "bVar4": {
                    "bool_var": 1,
                    "check_result": 1,
                    "flag": 3,
                    "flag1": 1,
                    "flag_1": 1,
                    "is_zero": 23,
                    "temp_var6": 1
                },
                "in_r12": {
                    "bit4": 1,
                    "bit5": 3,
                    "bit_5": 1,
                    "const_val": 1,
                    "constant": 1,
                    "constant2": 2,
                    "constant_1": 2,
                    "constant_value": 1,
                    "in_reg1": 1,
                    "in_register_12": 1,
                    "input4_copy": 1,
                    "mask": 2,
                    "mask2": 1,
                    "rand_val2": 1,
                    "register12": 1,
                    "result2": 2,
                    "temp4": 1,
                    "temp5": 3,
                    "temp_2": 1,
                    "temp_var2": 1,
                    "temp_var5": 1,
                    "temporary_variable2": 1,
                    "zero": 1
                },
                "param_1": {
                    "input1": 19,
                    "input_1": 4,
                    "integer_part": 1,
                    "num1": 1,
                    "number1": 2,
                    "number_1": 1,
                    "operand1": 1,
                    "sign_bit": 1,
                    "value_1": 1
                },
                "param_2": {
                    "exponent": 1,
                    "fractional_part": 1,
                    "input2": 19,
                    "input_2": 4,
                    "num2": 1,
                    "number2": 2,
                    "number_2": 1,
                    "operand2": 1,
                    "value_2": 1
                },
                "param_3": {
                    "exponent_part": 1,
                    "fraction": 1,
                    "input3": 19,
                    "input_3": 4,
                    "num3": 1,
                    "number3": 2,
                    "number_3": 1,
                    "operand3": 1,
                    "value_3": 1
                },
                "param_4": {
                    "input4": 19,
                    "input_4": 4,
                    "negative_zero": 1,
                    "num4": 1,
                    "number4": 2,
                    "number_4": 1,
                    "operand4": 1,
                    "sign_bit": 1,
                    "value_4": 1
                },
                "uVar1": {
                    "bit1": 11,
                    "bit_1": 1,
                    "bit_check1": 1,
                    "bit_mask1": 1,
                    "bit_shifted_input1": 1,
                    "bitwise_input1": 1,
                    "highest_bit_1": 1,
                    "integer_bit": 1,
                    "shifted_input1": 1,
                    "temp1": 2,
                    "temp2": 1,
                    "temp_3": 1,
                    "temp_4": 1,
                    "temp_bit1": 2,
                    "temp_var1": 1,
                    "temp_var3": 1,
                    "temp_var_1": 1,
                    "var1": 1
                },
                "uVar2": {
                    "bit2": 5,
                    "bit3": 3,
                    "bit_3": 1,
                    "bit_check2": 1,
                    "bit_mask2": 1,
                    "masked_input4": 1,
                    "masked_result": 1,
                    "masked_variable": 1,
                    "shifted": 1,
                    "shifted_constant": 1,
                    "temp2": 2,
                    "temp3": 3,
                    "temp_2": 1,
                    "temp_4": 1,
                    "temp_bit2": 2,
                    "temp_var3": 1,
                    "temp_var4": 1,
                    "temp_var_2": 2,
                    "tmp2": 1,
                    "var2": 1
                },
                "uVar3": {
                    "bit3": 4,
                    "bit4": 3,
                    "bit_4": 1,
                    "current_input2": 1,
                    "current_number": 1,
                    "input2_copy": 1,
                    "result1": 1,
                    "temp": 3,
                    "temp3": 2,
                    "temp4": 3,
                    "temp_3": 1,
                    "temp_5": 1,
                    "temp_bit3": 2,
                    "temp_var4": 1,
                    "temp_var5": 1,
                    "temp_var_3": 2,
                    "tmp3": 1,
                    "tmp_num": 1,
                    "var3": 1
                },
                "unaff_r4": {
                    "bit2": 3,
                    "bit_2": 1,
                    "checker": 1,
                    "comparison_number": 1,
                    "constant": 2,
                    "constant1": 1,
                    "input5": 1,
                    "mask1": 1,
                    "rand_val1": 1,
                    "register4": 1,
                    "result1": 1,
                    "temp": 1,
                    "temp1": 3,
                    "temp2": 2,
                    "temp_1": 2,
                    "temp_var1": 1,
                    "temp_var2": 1,
                    "temp_var_1": 1,
                    "temporary_variable1": 1,
                    "tmp1": 1,
                    "unaff_val1": 1,
                    "unaffected_r4": 1,
                    "unaffected_var4": 1,
                    "var1": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800074c"
            ],
            "code": "\nulonglong reverse_bits_check_080008ba(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint bit1;\n  uint temp1;\n  uint bit2;\n  uint bit3;\n  uint bit5;\n  bool is_zero;\n  \n  bit2 = bit5 & input4 >> 0x14;\n  bit3 = input2;\n  if (temp1 != bit5 || bit2 != bit5) {\n    if (temp1 == bit5) {\n      if (((input1 | input2 << 0xc) == 0) && (input1 = input3, bit3 = input4, bit2 != bit5)\n         ) {\nLAB_0800072c:\n        return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (bit2 == bit5) {\n      input1 = input3;\n      bit3 = input4;\n      if ((input3 | input4 << 0xc) == 0) {\nLAB_080006f0:\n        return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      is_zero = (input1 | input2 << 1) == 0;\n      if (!is_zero) {\n        is_zero = (input3 | input4 << 1) == 0;\n      }\n      if (!is_zero) {\n        if (temp1 == 0) {\n          bit3 = input2 & 0x80000000;\n          do {\n            bit1 = input1 & 0x80000000;\n            input1 = input1 << 1;\n            input2 = input2 * 2 + (uint)(bit1 != 0);\n          } while ((input2 & 0x100000) == 0);\n          input2 = input2 | bit3;\n          if (bit2 != 0) {\n            return CONCAT44(input2,input1);\n          }\n        }\n        do {\n          bit3 = input3 & 0x80000000;\n          input3 = input3 << 1;\n          input4 = input4 * 2 + (uint)(bit3 != 0);\n        } while ((input4 & 0x100000) == 0);\n        return CONCAT44(input2,input1);\n      }\n      if ((input1 | input2 << 1) != 0) goto LAB_0800072c;\n      if ((input3 | input4 << 1) != 0) goto LAB_080006f0;\n    }\n  }\n  return CONCAT44(bit3,input1) | 0x7ff8000000000000;\n}\n\n",
            "current_name": "reverse_bits_check_080008ba",
            "entrypoint": "0x080008ba",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080008ba": "reverse_bits_check_080008ba",
                "bVar4": "is_zero",
                "in_r12": "bit5",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "bit1",
                "uVar2": "bit2",
                "uVar3": "bit3",
                "unaff_r4": "temp1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800092c": {
            "additional_data": {
                "FUN_0800092c": {
                    "check_conditions": 3,
                    "check_equal_values": 1,
                    "check_equality": 3,
                    "check_equality_and_bitwise_operations": 1,
                    "check_param_equality": 1,
                    "check_parameters": 14,
                    "check_parameters_equality": 3,
                    "check_parameters_match": 1,
                    "check_params": 1,
                    "check_values_and_compare": 1,
                    "compare_parameters": 1,
                    "validate_inputs": 1
                },
                "bVar2": {
                    "are_values_equal": 1,
                    "check1": 1,
                    "cond1": 1,
                    "condition1": 1,
                    "inputs_are_zero": 1,
                    "is_all_zero": 1,
                    "is_any_zero": 1,
                    "is_equal": 3,
                    "is_input_zero": 1,
                    "is_param1_or2_zero": 1,
                    "is_zero": 17,
                    "is_zero_inputs": 1,
                    "is_zero_var": 1
                },
                "bVar3": {
                    "check2": 1,
                    "cond2": 1,
                    "condition2": 1,
                    "is_bitwise_comparison_true": 1,
                    "is_equal_and_positive": 1,
                    "is_greater": 1,
                    "is_greater_or_equal": 1,
                    "is_greater_than": 1,
                    "is_greater_than_zero": 1,
                    "is_less": 3,
                    "is_less_or_equal": 3,
                    "is_less_than_or_equal": 1,
                    "is_less_than_zero": 1,
                    "is_negative": 7,
                    "is_negative_or_equal": 1,
                    "is_negative_var": 1,
                    "is_param4_less_than_or_equal_to_param2": 1,
                    "is_param4_smaller_than_param2": 1,
                    "is_result_positive": 1,
                    "is_result_zero": 1,
                    "should_return_one": 1
                },
                "param_1": {
                    "a": 4,
                    "first_param": 1,
                    "input1": 2,
                    "input_1": 3,
                    "input_var_1": 1,
                    "num1": 1,
                    "val1": 1,
                    "value1": 13,
                    "value_1": 5
                },
                "param_2": {
                    "b": 4,
                    "input2": 2,
                    "input_2": 3,
                    "input_var_2": 1,
                    "num2": 1,
                    "second_param": 1,
                    "val2": 1,
                    "value2": 13,
                    "value_2": 4,
                    "value_3": 1
                },
                "param_3": {
                    "c": 4,
                    "input3": 2,
                    "input_3": 3,
                    "input_var_3": 1,
                    "num3": 1,
                    "third_param": 1,
                    "val3": 1,
                    "value3": 13,
                    "value_2": 1,
                    "value_3": 4
                },
                "param_4": {
                    "d": 4,
                    "fourth_param": 1,
                    "input4": 2,
                    "input_4": 3,
                    "input_var_4": 1,
                    "num4": 1,
                    "val4": 1,
                    "value4": 13,
                    "value_4": 5
                },
                "return": {
                    "result": 3
                },
                "uVar1": {
                    "abs_diff": 1,
                    "result": 22,
                    "temp1": 1,
                    "xor_result": 7
                }
            },
            "called": [],
            "calling": [
                "FUN_080009b8"
            ],
            "code": "\nuint check_parameters_equality_0800092c(uint value1,uint value2,uint value3,uint value4)\n\n{\n  uint result;\n  bool is_zero;\n  bool is_negative;\n  \n  if (((int)(value2 << 1) >> 0x15 == -1 || (int)(value4 << 1) >> 0x15 == -1) &&\n     ((((int)(value2 << 1) >> 0x15 == -1 && ((value1 | value2 << 0xc) != 0)) ||\n      (((int)(value4 << 1) >> 0x15 == -1 && ((value3 | value4 << 0xc) != 0)))))) {\n    result 1;\n  }\n  is_zero = (value1 | value2 << 1) == 0;\n  if (is_zero) {\n    is_zero = (value3 | value4 << 1) == 0;\n  }\n  if (!is_zero) {\n    is_zero = value2 == value4;\n  }\n  if (is_zero) {\n    is_zero = value1 == value3;\n  }\n  if (!is_zero) {\n    result = value2 ^ value4;\n    is_zero = result == 0;\n    if (-1 < (int)result) {\n      is_zero = value2 == value4;\n    }\n    is_negative = -1 < (int)result && value4 <= value2;\n    if (is_zero) {\n      is_negative = value3 <= value1;\n    }\n    value4 = (int)value4 >> 0x1f;\n    if (!is_negative) {\n      value4 = ~value4;\n    }\n    result value4 | 1;\n  }\n  result 0;\n}\n\n",
            "current_name": "check_parameters_equality_0800092c",
            "entrypoint": "0x0800092c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800092c": "check_parameters_equality_0800092c",
                "bVar2": "is_zero",
                "bVar3": "is_negative",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "return": "result",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080009a8": {
            "additional_data": {
                "FUM_080009a8": {
                    "compare_double": 1
                },
                "FUN_080009a8": {
                    "compare_and_return": 2,
                    "compare_and_return_result": 1,
                    "compare_and_set": 1,
                    "compare_cd_equals": 1,
                    "compare_floating_point_numbers": 3,
                    "compare_floating_point_values": 4,
                    "compare_floats": 12,
                    "compare_inputs": 1,
                    "compare_values": 1,
                    "perform_cdcmpeq": 1,
                    "perform_comparison": 3
                },
                "FUN_080009b8": {
                    "additional_function": 1,
                    "get_comparison_result": 1,
                    "get_next_float": 1
                },
                "param_1": {
                    "arg1": 1,
                    "comparison_result": 3,
                    "float1": 1,
                    "input1": 4,
                    "input_param1": 1,
                    "param_a": 1,
                    "result": 13,
                    "unused_param1": 1,
                    "value1": 4
                },
                "param_2": {
                    "arg2": 1,
                    "comparison_status": 1,
                    "flags": 1,
                    "float2": 1,
                    "input2": 4,
                    "input_param2": 1,
                    "length": 1,
                    "param_b": 1,
                    "size": 2,
                    "status": 8,
                    "temp": 1,
                    "unused_param": 1,
                    "unused_param2": 1,
                    "unused_parameter": 1,
                    "value2": 4
                },
                "param_3": {
                    "compare_input1": 1,
                    "compare_param1": 1,
                    "compare_value": 1,
                    "compare_value1": 1,
                    "comparison_value1": 1,
                    "first_float": 1,
                    "float1": 8,
                    "float3": 1,
                    "float_value1": 1,
                    "flt1": 1,
                    "input1": 1,
                    "input3": 1,
                    "operand1": 2,
                    "param_x": 1,
                    "value1": 7,
                    "value3": 1,
                    "x": 1
                },
                "param_4": {
                    "compare_input2": 1,
                    "compare_param2": 1,
                    "compare_value2": 1,
                    "comparison_value2": 1,
                    "float2": 8,
                    "float4": 1,
                    "float_value2": 1,
                    "flt2": 1,
                    "input2": 1,
                    "input4": 1,
                    "operand2": 2,
                    "param_y": 1,
                    "second_float": 1,
                    "target_value": 1,
                    "value2": 7,
                    "value4": 1,
                    "y": 1
                }
            },
            "called": [
                "FUN_080009b8"
            ],
            "calling": [
                "FUN_08000a04",
                "FUN_08000a18"
            ],
            "code": "\nvoid compare_floats_080009a8(undefined4 result,undefined4 status,undefined4 float1,undefined4 float2)\n\n{\n  __aeabi_cdcmpeq(float1,float2,result,status);\n  return;\n}\n\n",
            "current_name": "compare_floats_080009a8",
            "entrypoint": "0x080009a8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080009a8": "compare_floats_080009a8",
                "param_1": "result",
                "param_2": "status",
                "param_3": "float1",
                "param_4": "float2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080009b8": {
            "additional_data": {
                "FUN_0800092c": {
                    "calculate_output": 1,
                    "calculate_result": 3,
                    "combine_numbers": 1,
                    "execute_sub_function": 1,
                    "optimized_operation": 1,
                    "perform_arithmetic": 2,
                    "perform_calculation": 5,
                    "perform_operation": 4,
                    "perform_operations": 1,
                    "reverse_operation": 1
                },
                "FUN_080009b8": {
                    "apply_operation": 1,
                    "calculate": 4,
                    "calculate_result": 4,
                    "calculate_return_value": 1,
                    "calculate_something": 1,
                    "convert_param": 1,
                    "convert_to_float": 3,
                    "convert_to_undefined4": 1,
                    "decompiled_function": 1,
                    "perform_calculation": 3,
                    "perform_operation": 1,
                    "process_parameter": 1,
                    "process_value": 1
                },
                "__eqdf2": {
                    "compare_floats": 1,
                    "perform_calculation": 1,
                    "perform_operation": 2
                },
                "param_1": {
                    "input": 6,
                    "input1": 2,
                    "input_param": 3,
                    "input_param_1": 1,
                    "input_value": 10,
                    "num1": 2,
                    "operand1": 2,
                    "param_a": 1,
                    "parameter1": 1,
                    "value": 2,
                    "value1": 1
                },
                "param_2": {
                    "calc_param_2": 1,
                    "data_2": 1,
                    "input1": 1,
                    "input2": 2,
                    "input_param_2": 1,
                    "num2": 2,
                    "operand1": 2,
                    "operand2": 2,
                    "operation_1": 1,
                    "operation_param1": 1,
                    "param2": 1,
                    "param_b": 1,
                    "parameter1": 1,
                    "parameter2": 1,
                    "value1": 1,
                    "value2": 1,
                    "value_1": 1,
                    "value_2": 1,
                    "var1": 1
                },
                "param_3": {
                    "calc_param_3": 1,
                    "data_3": 1,
                    "input2": 1,
                    "input3": 2,
                    "input_param_3": 1,
                    "num3": 2,
                    "operand2": 2,
                    "operand3": 2,
                    "operation_2": 1,
                    "operation_param2": 1,
                    "param3": 1,
                    "param_c": 1,
                    "parameter2": 1,
                    "parameter3": 1,
                    "value2": 1,
                    "value3": 1,
                    "value_2": 1,
                    "value_3": 1,
                    "var2": 1
                },
                "param_4": {
                    "calc_param_4": 1,
                    "data_4": 1,
                    "input3": 1,
                    "input4": 2,
                    "input_param_4": 1,
                    "num4": 2,
                    "operand3": 2,
                    "operand4": 2,
                    "operation_3": 1,
                    "operation_param3": 1,
                    "param4": 1,
                    "param_d": 1,
                    "parameter3": 1,
                    "parameter4": 1,
                    "value3": 1,
                    "value4": 1,
                    "value_3": 1,
                    "value_4": 1,
                    "var3": 1
                }
            },
            "called": [
                "FUN_0800092c"
            ],
            "calling": [
                "FUN_080009c8",
                "FUN_080009dc",
                "FUN_080009f0",
                "FUN_080009a8"
            ],
            "code": "\nundefined4 calculate_result_080009b8(undefined4 input_value)\n\n{\n  perform_operation();\n  return input_value;\n}\n\n",
            "current_name": "calculate_result_080009b8",
            "entrypoint": "0x080009b8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080009b8": "calculate_result_080009b8",
                "__eqdf2": "perform_operation",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080009c8": {
            "additional_data": {
                "FUN_080009b8": {
                    "check_equality": 1
                },
                "FUN_080009c8": {
                    "check_condition": 6,
                    "check_equality": 1,
                    "check_if_cdcmpeq_not_zero": 1,
                    "check_if_char_not_null": 1,
                    "check_if_non_zero": 1,
                    "check_if_not_equal": 1,
                    "check_if_not_equal_to_zero": 1,
                    "check_if_not_equal_zero": 1,
                    "check_if_not_zero": 5,
                    "check_if_zero": 3,
                    "check_non_zero_value": 1,
                    "check_nonzero": 1,
                    "check_nonzero_value": 1,
                    "check_result": 1,
                    "check_zero_chars": 1,
                    "is_comparison_true": 1,
                    "is_not_zero": 3,
                    "is_zero": 1
                },
                "__aeabi_cdcmpeq": {
                    "compare_floats": 1
                },
                "in_ZR": {
                    "character": 1,
                    "comparison_result": 2,
                    "condition_result": 1,
                    "input_character": 2,
                    "is_not_zero": 5,
                    "is_not_zero_result": 1,
                    "is_zero_char": 1,
                    "result": 18
                }
            },
            "called": [
                "FUN_080009b8"
            ],
            "calling": [
                "FUN_08000cd0"
            ],
            "code": "\nbool check_if_not_equal_to_zero_080009c8(void)\n\n{\n  char result;\n  \n  compare_floats();\n  return result != '\\0';\n}\n\n",
            "current_name": "check_if_not_equal_to_zero_080009c8",
            "entrypoint": "0x080009c8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080009c8": "check_if_not_equal_to_zero_080009c8",
                "__aeabi_cdcmpeq": "compare_floats",
                "in_ZR": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080009dc": {
            "additional_data": {
                "FUN_080009b8": {
                    "check_condition": 1
                },
                "FUN_080009dc": {
                    "check_if_char_is_null": 1,
                    "check_if_cy_is_null": 1,
                    "check_if_empty": 1,
                    "check_if_empty_string": 1,
                    "check_if_input_is_empty": 3,
                    "check_if_input_is_null": 1,
                    "check_if_null": 5,
                    "check_if_null_character": 1,
                    "check_if_null_character_present": 1,
                    "check_if_null_or_empty": 1,
                    "check_if_string_empty": 1,
                    "check_if_string_is_empty": 1,
                    "check_if_zero": 3,
                    "check_null_termination": 1,
                    "is_cy_null": 4,
                    "is_cy_zero": 1,
                    "is_infinite_loop": 1,
                    "is_input_empty": 2,
                    "is_null_terminated": 1
                },
                "in_CY": {
                    "cy_char": 1,
                    "input_char": 16,
                    "input_character": 12,
                    "input_cy": 1,
                    "is_null": 1
                }
            },
            "called": [
                "FUN_080009b8"
            ],
            "calling": [
                "FUN_080016b4",
                "FUN_080019f6",
                "FUN_08005da8",
                "FUN_08001960",
                "FUN_08000cd0",
                "FUN_08001814"
            ],
            "code": "\nbool check_if_cy_is_null_080009dc(void)\n\n{\n  char input_char;\n  \n  __aeabi_cdcmpeq();\n  return input_char == '\\0';\n}\n\n",
            "current_name": "check_if_cy_is_null_080009dc",
            "entrypoint": "0x080009dc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080009dc": "check_if_cy_is_null_080009dc",
                "in_CY": "input_char"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080009f0": {
            "additional_data": {
                "FUN_080009b8": {
                    "calculate_checksum": 1
                },
                "FUN_080009f0": {
                    "check_abscmp_result": 1,
                    "check_carry_flag": 1,
                    "check_carry_zero": 1,
                    "check_condition": 1,
                    "check_conditions": 2,
                    "check_equality": 9,
                    "check_equality_condition": 1,
                    "check_equality_flag": 1,
                    "check_for_equal_condition": 1,
                    "check_if_equal_or_zero": 1,
                    "check_zero_carry": 1,
                    "check_zero_comparison": 1,
                    "check_zero_condition": 1,
                    "check_zero_or_nan": 1,
                    "check_zero_or_negative": 1,
                    "compare_and_return": 1,
                    "compare_bitwise_and": 1,
                    "compare_returns_zero": 1,
                    "is_carry_zero_or_result_zero": 1,
                    "is_carry_zero_or_value_zero": 1,
                    "is_zero_or_equal": 1,
                    "is_zero_or_not_equal": 1
                },
                "in_CY": {
                    "carry_flag": 8,
                    "carry_result": 2,
                    "comparison_result": 1,
                    "is_carry": 6,
                    "is_carry_flag": 1,
                    "is_carry_result": 4,
                    "is_carry_set": 3,
                    "is_condition_1_true": 1,
                    "is_equal": 1,
                    "is_equal_to": 1,
                    "is_nan_result": 1,
                    "is_not_zero": 1,
                    "not_equal_flags": 1
                },
                "in_ZR": {
                    "equal_flags": 1,
                    "is_condition_2_true": 1,
                    "is_zero": 8,
                    "is_zero_result": 10,
                    "zero_flag": 6,
                    "zero_result": 4,
                    "zero_result_flag": 1
                },
                "param_1": {
                    "input": 1,
                    "input_param": 2,
                    "input_value": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_080009b8"
            ],
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0"
            ],
            "code": "\nbool check_equality_condition_080009f0(void)\n\n{\n  undefined is_zero_result;\n  undefined carry_flag;\n  \n  __aeabi_cdcmpeq();\n  return !(bool)carry_flag || (bool)is_zero_result;\n}\n\n",
            "current_name": "check_equality_condition_080009f0",
            "entrypoint": "0x080009f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080009f0": "check_equality_condition_080009f0",
                "in_CY": "carry_flag",
                "in_ZR": "is_zero_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000a04": {
            "additional_data": {
                "FUN_080009a8": {
                    "initialize_params": 1,
                    "process_data": 1,
                    "process_parameters": 1
                },
                "FUN_08000a04": {
                    "check_abi_conditions": 1,
                    "check_carry_or_zero": 1,
                    "check_cdr": 1,
                    "check_cdr_or_zero": 1,
                    "check_comparison_result": 3,
                    "check_condition": 4,
                    "check_condition_and_return": 1,
                    "check_conditions": 3,
                    "check_double_comparison": 1,
                    "check_if_condition_true": 1,
                    "check_le_constraints": 1,
                    "check_less_or_equal": 1,
                    "check_order": 1,
                    "check_order_condition": 1,
                    "check_order_greater_or_equal": 1,
                    "check_zero_comparison": 1,
                    "is_cdr_equal_or_less": 1,
                    "is_cdr_greater_than_or_equal": 1,
                    "is_cdr_less_or_equal": 1,
                    "is_comparison_true": 1,
                    "is_condition_satisfied": 1,
                    "is_cy_zr_flag_set": 1,
                    "is_smaller_or_equal": 1
                },
                "in_CY": {
                    "carry_flag": 7,
                    "comparision_result": 1,
                    "is_carry": 10,
                    "is_carry_result": 1,
                    "is_carry_set": 6,
                    "is_compare_result": 1,
                    "is_cy_flag_set": 1
                },
                "in_ZR": {
                    "is_less_or_equal_zero": 1,
                    "is_zero": 9,
                    "is_zero_result": 8,
                    "is_zr_flag_set": 1,
                    "zero_flag": 6,
                    "zero_result": 1,
                    "zero_result_flag": 1
                },
                "param_1": {
                    "arg1": 4,
                    "input_1": 1,
                    "param_1": 1,
                    "source": 1,
                    "unnamed_param_1": 1
                },
                "param_2": {
                    "arg2": 4,
                    "destination": 1,
                    "input_2": 1,
                    "param_2": 1,
                    "unnamed_param_2": 1
                },
                "param_3": {
                    "arg3": 4,
                    "input_3": 1,
                    "length": 1,
                    "param_3": 1,
                    "unnamed_param_3": 1
                },
                "param_4": {
                    "arg4": 4,
                    "flags": 1,
                    "input_4": 1,
                    "param_4": 1,
                    "unnamed_param_4": 1
                }
            },
            "called": [
                "FUN_080009a8"
            ],
            "calling": [
                "FUN_08001960",
                "FUN_08000cd0"
            ],
            "code": "\nbool check_order_condition_08000a04(void)\n\n{\n  undefined is_zero;\n  undefined is_carry;\n  \n  __aeabi_cdrcmple();\n  return !(bool)is_carry || (bool)is_zero;\n}\n\n",
            "current_name": "check_order_condition_08000a04",
            "entrypoint": "0x08000a04",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000a04": "check_order_condition_08000a04",
                "in_CY": "is_carry",
                "in_ZR": "is_zero"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000a18": {
            "additional_data": {
                "FUN_080009a8": {
                    "another_function": 1,
                    "do_something": 1,
                    "initialize_variables": 2,
                    "perform_complex_operation": 1,
                    "sub_function": 1
                },
                "FUN_08000a18": {
                    "check_for_null": 1,
                    "check_if_char_is_zero": 1,
                    "check_if_empty": 1,
                    "check_if_in_cy_is_null": 1,
                    "check_if_null": 6,
                    "check_if_zero": 1,
                    "check_null_termination": 1,
                    "is_c_in_zero": 1,
                    "is_character_null": 1,
                    "is_cy_null": 4,
                    "is_cy_zero": 1,
                    "is_empty": 1,
                    "is_input_null": 1,
                    "is_null": 2,
                    "is_null_char_present": 1,
                    "is_null_character": 2,
                    "is_null_character_present": 1,
                    "is_null_terminated": 1,
                    "is_null_terminated_string": 1,
                    "is_string_empty": 1,
                    "is_zero_character": 1
                },
                "__aeabi_cdrcmple": {
                    "compare": 1,
                    "compare_and_return": 1,
                    "compare_and_set_z_flag": 1,
                    "compare_character_double": 1,
                    "compare_character_with_zero": 1,
                    "compare_cy": 1,
                    "compare_input_with_zero": 1
                },
                "in_CY": {
                    "char_value": 1,
                    "character": 6,
                    "character_in": 1,
                    "cy": 1,
                    "cy_char": 1,
                    "input_char": 8,
                    "input_character": 11,
                    "input_value": 1,
                    "is_null": 1
                },
                "param_1": {
                    "param_1": 1
                },
                "param_2": {
                    "param_2": 1
                },
                "param_3": {
                    "param_3": 1
                },
                "param_4": {
                    "param_4": 1
                }
            },
            "called": [
                "FUN_080009a8"
            ],
            "calling": [
                "FUN_080016b4",
                "FUN_080019f6",
                "FUN_08005da8",
                "FUN_08001960",
                "FUN_08000cd0"
            ],
            "code": "\nbool check_if_in_cy_is_null_08000a18(void)\n\n{\n  char input_character;\n  \n  compare_and_return();\n  return input_character == '\\0';\n}\n\n",
            "current_name": "check_if_in_cy_is_null_08000a18",
            "entrypoint": "0x08000a18",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000a18": "check_if_in_cy_is_null_08000a18",
                "__aeabi_cdrcmple": "compare_and_return",
                "in_CY": "input_character"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000a2c": {
            "additional_data": {
                "FUN_08000a2c": {
                    "check_conditions": 2,
                    "check_inputs": 2,
                    "check_param_validity": 1,
                    "check_parameters": 10,
                    "check_params": 6,
                    "check_params_valid": 1,
                    "check_params_validity": 1,
                    "check_valid_params": 1,
                    "is_valid_input": 4,
                    "is_valid_parameters": 1,
                    "validate_inputs": 1,
                    "validate_parameters": 1
                },
                "param_1": {
                    "arg1": 1,
                    "first_param": 1,
                    "input1": 7,
                    "input_1": 7,
                    "input_param1": 1,
                    "input_param_1": 1,
                    "param1": 1,
                    "value1": 8,
                    "value_1": 4
                },
                "param_2": {
                    "arg2": 1,
                    "input2": 6,
                    "input_2": 7,
                    "input_param2": 1,
                    "input_param_2": 1,
                    "param2": 1,
                    "second_param": 1,
                    "shift1": 1,
                    "value2": 8,
                    "value_2": 4
                },
                "param_3": {
                    "arg3": 1,
                    "input2": 1,
                    "input3": 6,
                    "input_3": 7,
                    "input_param3": 1,
                    "input_param_3": 1,
                    "param3": 1,
                    "third_param": 1,
                    "value3": 8,
                    "value_3": 4
                },
                "param_4": {
                    "arg4": 1,
                    "fourth_param": 1,
                    "input4": 6,
                    "input_4": 7,
                    "input_param4": 1,
                    "input_param_4": 1,
                    "param4": 1,
                    "shift2": 1,
                    "value4": 8,
                    "value_4": 4
                }
            },
            "called": [],
            "calling": [
                "FUN_08005da8"
            ],
            "code": "\nundefined4 check_parameters_08000a2c(uint value1,int value2,uint value3,int value4)\n\n{\n  if ((((value2 << 1) >> 0x15 != -1) || ((value1 | value2 << 0xc) == 0)) &&\n     (((value4 << 1) >> 0x15 != -1 || ((value3 | value4 << 0xc) == 0)))) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "check_parameters_08000a2c",
            "entrypoint": "0x08000a2c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000a2c": "check_parameters_08000a2c",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000a58": {
            "additional_data": {
                "FUN_08000a58": {
                    "calculate_absolute_value": 1,
                    "calculate_inverse": 1,
                    "calculate_new_value": 1,
                    "calculate_result": 1,
                    "calculate_shifted_value": 1,
                    "calculate_signed_integer": 2,
                    "calculate_unsigned_conversion": 1,
                    "calculate_unsigned_division": 1,
                    "calculate_unsigned_integer": 1,
                    "calculate_unsigned_result": 1,
                    "calculate_value_from_params": 1,
                    "convert_and_extract": 1,
                    "convert_integer": 1,
                    "convert_param_to_unsigned": 1,
                    "convert_to_fixed_point": 1,
                    "convert_to_negative": 1,
                    "convert_to_signed_int": 1,
                    "convert_to_signed_integer": 1,
                    "convert_to_two_complement": 1,
                    "convert_to_twos_complement": 1,
                    "convert_to_unsigned_int": 1,
                    "convert_unsigned_to_signed": 2,
                    "reverse": 1,
                    "reverse_and_shift": 1,
                    "reverse_bits": 2,
                    "reverse_calculation": 1,
                    "reverse_sign": 1,
                    "reverse_unsigned_integer": 1
                },
                "iVar2": {
                    "adjusted_divisor": 1,
                    "adjusted_shift_amount": 1,
                    "calculated_value": 1,
                    "calculated_value2": 1,
                    "calculation_result": 1,
                    "intermediate_value": 1,
                    "masked_value": 1,
                    "offset": 3,
                    "result": 1,
                    "result2": 2,
                    "result_2": 1,
                    "scaled_int2": 1,
                    "scaled_modifier": 1,
                    "scaled_value": 1,
                    "shift_value": 1,
                    "shifted_input2": 1,
                    "shifted_multiplier": 1,
                    "temp1": 1,
                    "temp2": 1,
                    "temp_result": 1,
                    "temp_value": 3,
                    "temp_var": 1,
                    "translated_value": 1,
                    "val1": 1
                },
                "param_1": {
                    "dividend": 1,
                    "input": 1,
                    "input1": 5,
                    "input_1": 2,
                    "input_a": 1,
                    "input_num": 1,
                    "input_number1": 1,
                    "input_value": 8,
                    "input_value1": 5,
                    "integer_1": 1,
                    "unsigned_input": 1,
                    "unsigned_int1": 1,
                    "unsigned_value": 1,
                    "value": 1,
                    "value1": 1
                },
                "param_2": {
                    "bit_mask": 1,
                    "divisor": 1,
                    "filtered_multiplier": 1,
                    "input2": 5,
                    "input_2": 1,
                    "input_b": 1,
                    "input_multiplier": 1,
                    "input_number2": 1,
                    "input_value2": 5,
                    "integer_2": 1,
                    "mask": 1,
                    "modified_input_2": 1,
                    "modified_modifier": 1,
                    "modified_value": 1,
                    "multiplier": 4,
                    "shift_amount": 4,
                    "unsigned_int2": 1
                },
                "param_2_updated": {
                    "clamped_multiplier": 1
                },
                "uVar": {
                    "result": 1
                },
                "uVar1": {
                    "final_result": 1,
                    "final_value": 1,
                    "masked_result": 1,
                    "multiplier": 1,
                    "quotient": 1,
                    "result": 7,
                    "result34": 1,
                    "result4": 1,
                    "result_1": 1,
                    "shift_value": 1,
                    "shifted_input_value": 1,
                    "shifted_int1": 1,
                    "shifted_mask": 1,
                    "shifted_multiplier": 1,
                    "shifted_result": 3,
                    "shifted_value": 4,
                    "temp1": 1,
                    "unsigned_result": 1
                },
                "uVar1_updated": {
                    "shifted_result": 1
                },
                "uVar2": {
                    "result": 2
                },
                "uVar3": {
                    "adjusted_int1": 1,
                    "adjusted_new_shift_amount": 1,
                    "adjusted_offset": 1,
                    "adjusted_value": 1,
                    "difference": 2,
                    "final_value": 1,
                    "mask": 1,
                    "negative_shift": 1,
                    "offset": 2,
                    "offset_check": 1,
                    "remainder": 1,
                    "result": 1,
                    "result3": 2,
                    "result_3": 1,
                    "shift_amount": 3,
                    "shift_count": 1,
                    "shifted_value": 2,
                    "shifted_value_difference": 1,
                    "subtracted_value": 1,
                    "temp": 1,
                    "temp3": 1,
                    "threshold": 1,
                    "val2": 1
                },
                "uVar4": {
                    "result": 1,
                    "shift_count": 1,
                    "shifted_int2": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005da8"
            ],
            "code": "\nuint reverse_bits_08000a58(uint input_value,uint input2)\n\n{\n  uint result;\n  int temp_value;\n  uint shift_amount;\n  \n  temp_value = input2 * 2 + 0x200000;\n  if (input2 * 2 < 0xffe00000) {\n    if (-1 < temp_value) {\n      return 0;\n    }\n    result = temp_value >> 0x15;\n    shift_amount = -result - 0x3e1;\n    if (result < 0xfffffc20 && shift_amount != 0) {\n      result = (input2 << 0xb | 0x80000000 | input_value >> 0x15) >> (shift_amount & 0xff);\n      if ((input2 & 0x80000000) != 0) {\n        result = -result;\n      }\n      return result;\n    }\n  }\n  else if ((input_value | input2 << 0xc) != 0) {\n    return 0;\n  }\n  input2 = input2 & 0x80000000;\n  if (input2 == 0) {\n    input2 = 0x7fffffff;\n  }\n  return input2;\n}\n\n",
            "current_name": "reverse_bits_08000a58",
            "entrypoint": "0x08000a58",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000a58": "reverse_bits_08000a58",
                "iVar2": "temp_value",
                "param_1": "input_value",
                "param_2": "input2",
                "uVar": "result",
                "uVar1": "result",
                "uVar3": "shift_amount"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000aa8": {
            "additional_data": {
                "FUN_08000aa8": {
                    "binary_conversion": 1,
                    "binary_to_bitmask": 1,
                    "calculate_shift_amount": 1,
                    "calculate_shift_value": 1,
                    "calculate_shifted_bits": 1,
                    "calculate_shifted_result": 1,
                    "calculate_shifted_value": 8,
                    "check_overflow_and_shift": 1,
                    "check_overflow_division": 1,
                    "convert_to_fixed_point": 1,
                    "decode_param": 1,
                    "get_shifted_value": 1,
                    "invert_variable_bits": 1,
                    "perform_calculation": 1,
                    "reverse_binary_conversion": 1,
                    "reverse_binary_operation": 1,
                    "reverse_bits": 2,
                    "validate_and_shift": 1,
                    "validate_input": 2,
                    "validate_param": 1,
                    "verify_and_shift": 1
                },
                "iVar1": {
                    "computed_value": 1,
                    "intermediate_var1": 1,
                    "modified_binary": 1,
                    "multiplied_value": 1,
                    "result1": 1,
                    "scaled_value": 1,
                    "shifted_bitmask": 1,
                    "shifted_value": 13,
                    "shifted_value_1": 1,
                    "shifted_value_plus_offset": 1,
                    "temp": 1,
                    "temp1": 1,
                    "temp_value": 3,
                    "temp_var": 1,
                    "temp_var1": 1,
                    "temp_var_1": 2
                },
                "param_1": {
                    "data_1": 1,
                    "input1": 3,
                    "input_1": 2,
                    "input_param": 1,
                    "input_parameter_1": 1,
                    "input_value": 13,
                    "input_value1": 1,
                    "input_value_1": 4,
                    "input_var_1": 1,
                    "shifted_value": 1,
                    "value": 2,
                    "value1": 1
                },
                "param_2": {
                    "binary_value": 2,
                    "bit_count": 1,
                    "bit_shift": 1,
                    "bitmask": 1,
                    "data_2": 1,
                    "input2": 3,
                    "input_2": 2,
                    "input_parameter_2": 1,
                    "input_value": 1,
                    "input_value2": 1,
                    "input_value_2": 4,
                    "input_var_2": 1,
                    "mask": 1,
                    "param": 1,
                    "scale_factor": 1,
                    "shift": 1,
                    "shift_amount": 4,
                    "shift_value": 2,
                    "value2": 1,
                    "value_param": 1
                },
                "uVar2": {
                    "conversion_factor": 1,
                    "intermediate_var2": 1,
                    "result": 4,
                    "result2": 1,
                    "shift_amount": 14,
                    "shift_count": 2,
                    "shifted_amount": 1,
                    "shifted_result": 1,
                    "shifted_value": 1,
                    "shifted_value_2": 1,
                    "temp2": 1,
                    "temp_var2": 1,
                    "temp_var_2": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08005da8"
            ],
            "code": "\nuint calculate_shifted_value_08000aa8(uint input_value,uint shift_amount)\n\n{\n  int shifted_value;\n  uint shift_amount;\n  \n  if ((shift_amount & 0x80000000) != 0) {\n    return 0;\n  }\n  shifted_value = shift_amount * 2 + 0x200000;\n  if (shift_amount * 2 < 0xffe00000) {\n    if (-1 < shifted_value) {\n      return 0;\n    }\n    shift_amount = -(shifted_value >> 0x15) - 0x3e1;\n    if (-1 < (int)shift_amount) {\n      return (shift_amount << 0xb | 0x80000000 | input_value >> 0x15) >> (shift_amount & 0xff);\n    }\n  }\n  else if ((input_value | shift_amount << 0xc) != 0) {\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "calculate_shifted_value_08000aa8",
            "entrypoint": "0x08000aa8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000aa8": "calculate_shifted_value_08000aa8",
                "iVar1": "shifted_value",
                "param_1": "input_value",
                "param_2": "shift_amount",
                "uVar2": "shift_amount"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000ae8": {
            "additional_data": {
                "0x3f": {
                    "file_read": 1
                },
                "FUN_08000ae8": {
                    "call_interrupt": 1,
                    "call_system_interrupt": 1,
                    "execute_interrupt": 1,
                    "execute_software_interrupt": 10,
                    "execute_system_call": 5,
                    "execute_system_interrupt": 1,
                    "get_interrupt_data": 1,
                    "initialize_software_interrupt": 1,
                    "initiate_system_interrupt": 1,
                    "invoke_system_call": 1,
                    "invoke_system_interrupt": 1,
                    "perform_software_interrupt": 1,
                    "perform_system_call": 1,
                    "send_interrupt": 1,
                    "send_system_interrupt": 1,
                    "trigger_software_interrupt": 3
                },
                "software_interrupt": {
                    "call_software_interrupt": 1,
                    "execute_interrupt": 4,
                    "execute_system_call": 1,
                    "handle_interrupt": 1,
                    "interrupt": 1,
                    "interrupt_handler": 1,
                    "invoke_interrupt": 6,
                    "invoke_system_call": 2,
                    "perform_interrupt": 2,
                    "system_call": 2,
                    "trigger_interrupt": 4,
                    "trigger_software_interrupt": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08000aec"
            ],
            "code": "\nvoid execute_software_interrupt_08000ae8(void)\n\n{\n  invoke_interrupt(0x3f);\n  return;\n}\n\n",
            "current_name": "execute_software_interrupt_08000ae8",
            "entrypoint": "0x08000ae8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000ae8": "execute_software_interrupt_08000ae8",
                "software_interrupt": "invoke_interrupt"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000aec": {
            "additional_data": {
                "DAT_2000017c": {
                    "condition_check": 1
                },
                "FUN_08000ae8": {
                    "initialization_function": 1
                },
                "FUN_08000aec": {
                    "afl_wrapper": 1,
                    "call_afl_function": 2,
                    "call_afl_with_param": 1,
                    "execute_afl_call": 19,
                    "execute_afl_function": 3,
                    "execute_operation": 1,
                    "perform_afl_call": 1,
                    "process_data": 1,
                    "reverse_binary": 1
                },
                "param_1": {
                    "arg1": 3,
                    "input": 1,
                    "input1": 2,
                    "input_1": 1,
                    "input_data": 1,
                    "input_param": 13,
                    "input_param1": 3,
                    "input_parameter": 4,
                    "input_value": 3
                },
                "param_2": {
                    "arg2": 1,
                    "input2": 1,
                    "unused_param": 6,
                    "unused_param2": 1,
                    "unused_parameter": 1
                },
                "param_3": {
                    "arg3": 1,
                    "input3": 1,
                    "unused_param": 2,
                    "unused_param2": 3,
                    "unused_param3": 1,
                    "unused_parameter": 1
                },
                "param_4": {
                    "additional_param": 1,
                    "another_param": 1,
                    "arg4": 3,
                    "callback_func": 2,
                    "flag_param": 1,
                    "input4": 2,
                    "input_4": 1,
                    "input_param2": 1,
                    "input_param4": 3,
                    "output": 1,
                    "output_data": 1,
                    "output_param": 7,
                    "output_parameter": 4,
                    "output_ptr": 1,
                    "output_value": 2
                },
                "uVar1": {
                    "afl_call_result": 1,
                    "afl_result": 1,
                    "afl_return_value": 2,
                    "result": 12,
                    "return_value": 1
                }
            },
            "called": [
                "FUN_08000ae8"
            ],
            "calling": [
                "FUN_08000bcc"
            ],
            "code": "\nundefined4 execute_afl_call_08000aec(undefined4 input_param,undefined4 unused_param,undefined4 unused_param2,undefined4 output_param)\n\n{\n  undefined4 result;\n  \n  if (DAT_2000017c != 0) {\n    return 0;\n  }\n  result = aflCall(1,input_param,0,0,output_param);\n  return result;\n}\n\n",
            "current_name": "execute_afl_call_08000aec",
            "entrypoint": "0x08000aec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000aec": "execute_afl_call_08000aec",
                "param_1": "input_param",
                "param_2": "unused_param",
                "param_3": "unused_param2",
                "param_4": "output_param",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000b08": {
            "additional_data": {
                "DAT_20000010": {
                    "param7": 1,
                    "var_5": 1
                },
                "DAT_20000014": {
                    "param8": 1,
                    "var_6": 1
                },
                "DAT_20000018": {
                    "param5": 1,
                    "var_3": 1
                },
                "DAT_2000001c": {
                    "param6": 1,
                    "var_4": 1
                },
                "DAT_20000020": {
                    "param3": 1,
                    "var_1": 1
                },
                "DAT_20000024": {
                    "param4": 1,
                    "var_2": 1
                },
                "DAT_20000028": {
                    "lcd_data7": 1,
                    "var_9": 1
                },
                "DAT_2000002c": {
                    "lcd_data8": 1,
                    "var_10": 1
                },
                "DAT_20000030": {
                    "lcd_data9": 1,
                    "var_11": 1
                },
                "DAT_20000034": {
                    "lcd_data10": 1,
                    "var_12": 1
                },
                "DAT_20000038": {
                    "lcd_data6": 1,
                    "var_8": 1
                },
                "DAT_2000005c": {
                    "lcd_data5": 1,
                    "var_7": 1
                },
                "DAT_2000006c": {
                    "max_data4": 1,
                    "var_15": 1
                },
                "DAT_20000070": {
                    "max_data3": 1,
                    "var_14": 1
                },
                "DAT_20000074": {
                    "max_data2": 1,
                    "var_13": 1
                },
                "DAT_20000188": {
                    "lcd_data2": 1,
                    "pid_controller_settings": 1
                },
                "DAT_20000194": {
                    "lcd_data4": 1,
                    "lcd_screen_data": 1
                },
                "DAT_200001b8": {
                    "lcd_data3": 1,
                    "pid_controller_config": 1
                },
                "DAT_200001c0": {
                    "lcd_data1": 1,
                    "pid_controller_data": 1
                },
                "DAT_20000240": {
                    "pid_controller_gains": 1,
                    "pid_data": 1
                },
                "DAT_2000024c": {
                    "max_data": 1,
                    "temperature_sensor_data": 1
                },
                "DIGITAL_PIN_INPUT": {
                    "temp_sensor_pin": 1
                },
                "DIGITAL_PIN_INPUT1": {
                    "relay_pin": 1
                },
                "DIGITAL_PIN_OUTPUT": {
                    "output_pin": 1
                },
                "DIGITAL_PIN_OUTPUT1": {
                    "second_output_pin": 1
                },
                "DIGITAL_PIN_OUTPUT2": {
                    "third_output_pin": 1
                },
                "DIGITAL_PIN_OUTPUT3": {
                    "fourth_output_pin": 1
                },
                "FUN_08000b08": {
                    "initialize_components": 6,
                    "initialize_devices": 12,
                    "initialize_display": 1,
                    "initialize_hardware": 3,
                    "initialize_hardware_components": 2,
                    "initialize_modules": 1,
                    "initialize_peripherals": 6
                },
                "FUN_08001510": {
                    "initialize_max31855": 1
                },
                "FUN_0800157c": {
                    "update_liquid_crystal": 1
                },
                "FUN_08001b18": {
                    "initialize_pid": 1
                },
                "LiquidCrystal": {
                    "initialize_display": 1,
                    "initialize_lcd": 11,
                    "initialize_liquid_crystal": 7,
                    "initialize_liquid_crystal_display": 1,
                    "initialize_liquid_crystal_lcd": 1,
                    "setup_liquid_crystal": 2
                },
                "LiquidCrystalP1": {
                    "rs_pin": 1
                },
                "LiquidCrystalP2": {
                    "enable_pin": 1
                },
                "LiquidCrystalP3": {
                    "d4_pin": 1
                },
                "LiquidCrystalP4": {
                    "d5_pin": 1
                },
                "LiquidCrystalP5": {
                    "d6_pin": 1
                },
                "LiquidCrystalP6": {
                    "d7_pin": 1
                },
                "MAX31855": {
                    "configure_max31855": 1,
                    "initialize_max31855": 12,
                    "initialize_max31855_sensor": 1,
                    "initialize_sensor": 1,
                    "initialize_temp_sensor": 1,
                    "initialize_temperature_sensor": 6,
                    "initialize_thermocouple": 1
                },
                "PID": {
                    "configure_pid": 2,
                    "initialize_pid": 17,
                    "initialize_pid_controller": 4
                },
                "param_1": {
                    "condition1": 3,
                    "device1": 1,
                    "device_flag": 1,
                    "device_param1": 1,
                    "flag": 3,
                    "input1": 1,
                    "input_one": 1,
                    "input_param1": 2,
                    "is_param1_equals1": 1,
                    "is_param1_set": 1,
                    "max_data": 1,
                    "mode": 3,
                    "param1": 6,
                    "param_value1": 1,
                    "parameter1": 1,
                    "status": 1,
                    "value1": 3
                },
                "param_2": {
                    "condition2": 3,
                    "device2": 1,
                    "device_param2": 1,
                    "flag": 1,
                    "input2": 1,
                    "input_param2": 2,
                    "input_two": 1,
                    "is_param2_equals_ffff": 1,
                    "param2": 7,
                    "param2_value": 1,
                    "param_value2": 1,
                    "parameter2": 1,
                    "parameter_flag": 1,
                    "value": 6,
                    "value2": 3
                },
                "param_3": {
                    "param3": 1
                },
                "param_4": {
                    "param4": 1
                }
            },
            "called": [
                "FUN_08001b18",
                "FUN_0800157c",
                "FUN_08001510"
            ],
            "calling": [],
            "code": "\nvoid initialize_devices_08000b08(int param1,int param2)\n\n{\n  if ((param1 == 1) && (param2 == 0xffff)) {\n    initialize_pid(&DAT_200001c0,&DAT_20000188,&DAT_200001b8,&DAT_20000240,DAT_20000020,DAT_20000024,\n        DAT_20000018,DAT_2000001c,DAT_20000010,DAT_20000014,0);\n    initialize_lcd(&DAT_20000194,DAT_2000005c,DAT_20000038,DAT_20000028,DAT_2000002c,DAT_20000030,\n                  DAT_20000034);\n    initialize_max31855(&DAT_2000024c,DAT_20000074,DAT_20000070,DAT_2000006c);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_devices_08000b08",
            "entrypoint": "0x08000b08",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000b08": "initialize_devices_08000b08",
                "LiquidCrystal": "initialize_lcd",
                "MAX31855": "initialize_max31855",
                "PID": "initialize_pid",
                "param_1": "param1",
                "param_2": "param2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000bcc": {
            "additional_data": {
                "BEGIN": {
                    "begin": 2,
                    "begin_serial_communication": 1
                },
                "CLEAR": {
                    "clear": 1,
                    "clear_lcd": 1
                },
                "CLEAR_LCD": {
                    "clear_lcd": 1
                },
                "CREATE_CHAR": {
                    "create_char": 2,
                    "create_custom_character": 1
                },
                "DAT_200001b0": {
                    "start_millis": 1
                },
                "DAT_200001b4": {
                    "current_millis": 1
                },
                "DAT_20000258": {
                    "wait_time": 1
                },
                "DELAY": {
                    "delay": 4,
                    "delay_milliseconds": 1
                },
                "DIGITALWRITE": {
                    "set_pin_value": 1
                },
                "DIGITAL_WRITE": {
                    "digital_write": 3,
                    "set_digital_pin": 2,
                    "set_pin_state": 1
                },
                "DIGITAL_WRITE_PIN": {
                    "digital_write_pin": 1
                },
                "EXECUTE_SUB_FUNCTION": {
                    "display_text": 1,
                    "execute_sub_function": 2
                },
                "FUNC_080058e8": {
                    "do_something": 1,
                    "execute": 1,
                    "execute_function": 2,
                    "execute_unspecified_function": 1,
                    "function1": 1,
                    "perform_action": 3,
                    "perform_function": 3,
                    "perform_operation": 1,
                    "perform_some_action": 1,
                    "unused_function": 1
                },
                "FUN_08000bcc": {
                    "initialize_and_configure": 1,
                    "initialize_and_configure_display": 1,
                    "initialize_and_display_lcd": 1,
                    "initialize_and_execute_oven": 1,
                    "initialize_and_start_oven": 1,
                    "initialize_device": 1,
                    "initialize_oven": 15,
                    "initialize_oven_control": 1,
                    "initialize_oven_controller": 2,
                    "initialize_oven_system": 3,
                    "initialize_reflow_oven": 4
                },
                "INITIALIZE_LCD": {
                    "initialize_lcd": 2
                },
                "INIT_LCD": {
                    "initialize_lcd": 1
                },
                "MILLIS": {
                    "get_current_milliseconds": 1
                },
                "PINMODE": {
                    "set_pin_mode": 1
                },
                "PIN_MODE": {
                    "configure_pin_mode": 1,
                    "pin_mode": 4,
                    "set_pin_mode": 2
                },
                "SET_CURSOR": {
                    "set_cursor": 2
                },
                "SET_CURSOR_POSITION": {
                    "set_cursor_position": 1
                },
                "START_FORKSERVER": {
                    "start_forkserver": 2
                },
                "START_FORK_SERVER": {
                    "start_fork_server": 1
                },
                "begin": {
                    "begin_communication": 4,
                    "begin_serial_communication": 3,
                    "initialize_ethernet": 2,
                    "initialize_serial": 1,
                    "initialize_serial_communication": 8,
                    "initialize_server": 1,
                    "start_communication": 1
                },
                "clear": {
                    "clear_display": 2,
                    "clear_lcd": 14,
                    "clear_screen": 4
                },
                "configure_and_write_gpio_pin_08005848": {
                    "configure_and_write_gpio_pin": 13
                },
                "configure_gpio_pin_080057b4": {
                    "configure_gpio_pin": 15
                },
                "createChar": {
                    "create_character": 4,
                    "create_custom_char": 4,
                    "create_custom_character": 9,
                    "define_character": 1,
                    "define_custom_character": 2
                },
                "delay": {
                    "delay": 1,
                    "delay_execution": 1,
                    "delay_milliseconds": 8,
                    "delay_ms": 1,
                    "pause": 5,
                    "pause_execution": 2,
                    "wait": 1
                },
                "digitalWrite": {
                    "set_digital_output": 1,
                    "set_digital_pin_state": 1,
                    "set_pin_output": 1,
                    "set_pin_state": 4,
                    "set_pin_value": 1
                },
                "execute_afl_call_08000aec": {
                    "execute_afl_call": 15
                },
                "execute_sub_function_08005c96": {
                    "display_menu_option": 1,
                    "display_message": 12,
                    "display_on_lcd": 1,
                    "display_text": 2,
                    "execute_sub_function": 11,
                    "print_text_on_lcd": 1,
                    "show_message": 1
                },
                "get_current_milliseconds_080058e0": {
                    "get_current_milliseconds": 15
                },
                "initialize_lcd_080013a4": {
                    "initialize_lcd": 29
                },
                "initialize_serial_communication_08005a68": {
                    "initialize_serial": 1,
                    "initialize_serial_communication": 15
                },
                "millis": {
                    "get_current_milliseconds": 8,
                    "get_current_time": 1
                },
                "pinMode": {
                    "configure_pin": 1,
                    "configure_pin_mode": 3,
                    "set_pin_mode": 3
                },
                "send_data_packet_0800135a": {
                    "send_data_packet": 15
                },
                "send_data_to_server_08001550": {
                    "send_data_to_server": 15
                },
                "send_modified_data_08001366": {
                    "send_modified_data": 15
                },
                "setCursor": {
                    "move_cursor": 9,
                    "set_cursor_position": 3,
                    "set_lc_dcursor": 3,
                    "set_lcd_cursor": 2,
                    "set_lcd_cursor_position": 2,
                    "set_position": 1
                },
                "startForkserver": {
                    "start_fork_server": 12,
                    "start_server": 7
                }
            },
            "called": [
                "FUN_08005a68",
                "FUN_08001366",
                "FUN_08001550",
                "FUN_080058e0",
                "FUN_080013a4",
                "FUN_0800135a",
                "FUN_080058e8",
                "FUN_08005848",
                "FUN_08000aec",
                "FUN_08005c96",
                "FUN_080057b4"
            ],
            "calling": [
                "FUN_08005f6c"
            ],
            "code": "\nvoid initialize_reflow_oven_08000bcc(void)\n\n{\n  set_pin_state(DAT_20000064,0);\n  configure_pin_mode(DAT_20000064,1);\n  set_pin_state(DAT_20000004,0);\n  configure_pin_mode(DAT_20000004,1);\n  set_pin_state(DAT_20000060,0);\n  configure_pin_mode(DAT_20000060,1);\n  set_pin_state(DAT_20000004,1);\n  initialize_lcd(&DAT_20000194,8,2,0);\n  create_custom_character(&DAT_20000194,0,&DAT_20000008);\n  clear_lcd(&DAT_20000194);\n  display_message(&DAT_20000194,\"Reflow\");\n  move_cursor(&DAT_20000194,0,1);\n  display_message(&DAT_20000194,\"Oven 1.2\");\n  set_pin_state(DAT_20000004,0);\n  delay_milliseconds(0x9c4);\n  clear_lcd(&DAT_20000194);\n  initialize_serial_communication(&DAT_2000036c,0xe100,6);\n  set_pin_state(DAT_20000060,1);\n  DAT_20000258 = 2000;\n  DAT_200001b0 = get_current_milliseconds();\n  DAT_200001b4 = get_current_milliseconds();\n  start_fork_server(0);\n  return;\n}\n\n",
            "current_name": "initialize_reflow_oven_08000bcc",
            "entrypoint": "0x08000bcc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000bcc": "initialize_reflow_oven_08000bcc",
                "begin": "initialize_serial_communication",
                "clear": "clear_lcd",
                "createChar": "create_custom_character",
                "delay": "delay_milliseconds",
                "digitalWrite": "set_pin_state",
                "execute_sub_function_08005c96": "display_message",
                "initialize_lcd_080013a4": "initialize_lcd",
                "millis": "get_current_milliseconds",
                "pinMode": "configure_pin_mode",
                "setCursor": "move_cursor",
                "startForkserver": "start_fork_server"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000cd0": {
            "additional_data": {
                "Compute": {
                    "calculate": 3,
                    "calculate_temperature": 1,
                    "compute": 2,
                    "compute_control": 1,
                    "compute_value": 1
                },
                "DAR_200001c0": {
                    "pid_controller": 1
                },
                "DAT_08007368": {
                    "constant_data": 1,
                    "constant_value1": 1,
                    "cursor_position": 1,
                    "format_string1": 1,
                    "format_string_2": 1,
                    "literal_string": 1,
                    "message1": 1,
                    "new_line_string": 1,
                    "read_buffer1": 1,
                    "ready_string": 1,
                    "string1": 1,
                    "sub_function1": 1,
                    "sub_function_data1": 1,
                    "sub_function_output1": 1
                },
                "DAT_08007378": {
                    "constant_data2": 1,
                    "constant_value2": 1,
                    "format_string2": 1,
                    "print_message": 1,
                    "read_buffer2": 1,
                    "sub_function2": 1,
                    "sub_function_data2": 1,
                    "sub_function_output2": 1,
                    "success_string": 1,
                    "tc_error_string": 1
                },
                "DAT_20000004": {
                    "digital_pin": 1,
                    "digital_pin_number": 1,
                    "gpio_pin1": 1,
                    "gpio_pin_number": 1,
                    "heater_relay_pin": 1,
                    "heating_element_pin": 1,
                    "output_pin": 3,
                    "pin1": 1,
                    "pin_index2": 1,
                    "pin_number_3": 1,
                    "relay_pin": 2,
                    "some_pin1": 1
                },
                "DAT_2000003c": {
                    "print_ready_text": 1
                },
                "DAT_20000060": {
                    "control_pin": 2,
                    "digital_pin_number2": 1,
                    "gpio_pin": 1,
                    "input_pin": 2,
                    "io_control_pin": 1,
                    "led_pin": 1,
                    "output_pin": 1,
                    "pin3": 1,
                    "pin_number": 2,
                    "pin_number_2": 1,
                    "some_pin2": 1,
                    "status_led_pin": 1
                },
                "DAT_20000064": {
                    "analog_output_pin": 1,
                    "cooling_fan_pin": 1,
                    "digital_pin": 1,
                    "fan_relay_pin": 1,
                    "gpio_pin2": 1,
                    "led_pin": 1,
                    "pin2": 1,
                    "pin_index3": 1,
                    "pin_number_4": 1,
                    "some_pin4": 1,
                    "status_led": 1
                },
                "DAT_20000068": {
                    "analog_input_pin": 1,
                    "analog_input_pin_temp": 1,
                    "analog_pin": 5,
                    "analog_pin_number": 4,
                    "some_pin3": 1,
                    "temperature_sensor_pin": 1
                },
                "DAT_2000006c": {
                    "analog_read_temp": 1
                },
                "DAT_20000180": {
                    "delay_time": 1,
                    "failure_off_time": 1,
                    "future_time": 1,
                    "next_gpio_off_time": 1,
                    "output_on_millis": 1,
                    "output_toggle_millis": 1,
                    "previous_millis4": 1,
                    "relay_on_millis": 1,
                    "time_delay": 1,
                    "timer": 1,
                    "turn_off_millis": 1,
                    "turn_off_time": 2
                },
                "DAT_20000184": {
                    "adc_state": 1,
                    "analog_input_state": 1,
                    "analog_pin_status": 1,
                    "analog_read_state": 2,
                    "analog_read_status": 1,
                    "analog_state": 1,
                    "analog_status": 3,
                    "button_state": 2,
                    "failure_status": 1,
                    "is_temperature_out_of_range": 1,
                    "null_check_flag": 1,
                    "output_off_state": 1,
                    "sensor_status": 1
                },
                "DAT_20000188": {
                    "analog_read_result": 1,
                    "current_temp": 2,
                    "current_temp_integer": 1,
                    "temp_int_part": 1,
                    "temp_reading_low": 1,
                    "temperature": 3,
                    "temperature1": 2,
                    "temperature_display1": 1,
                    "temperature_low": 1,
                    "temperature_value1": 2,
                    "temperature_value_1": 1,
                    "thermo_value_lower": 1,
                    "thermocouple_reading_low": 1,
                    "thermocouple_value_low_bits": 1
                },
                "DAT_2000018c": {
                    "current_temp_fraction": 1,
                    "current_temp_high": 1,
                    "current_thermocouple_data_upper": 1,
                    "humidity": 1,
                    "previous_temp": 1,
                    "setpoint": 1,
                    "temp_decimal_part": 1,
                    "temp_reading_high": 1,
                    "temperature2": 2,
                    "temperature_display2": 1,
                    "temperature_high": 1,
                    "temperature_high_bits": 1,
                    "temperature_value2": 2,
                    "temperature_value_2": 1,
                    "thermo_value_upper": 1,
                    "thermocouple_reading_high": 1,
                    "thermocouple_value_high_bits": 1
                },
                "DAT_20000190": {
                    "adc_previous_millis": 1,
                    "analog_input_time": 1,
                    "analog_read_last_millis": 1,
                    "analog_read_millis": 1,
                    "analog_time": 1,
                    "analog_timer": 1,
                    "button_press_millis": 1,
                    "button_pressed_millis": 1,
                    "failure_start_time": 1,
                    "last_analog_read_millis": 1,
                    "last_analog_read_time": 1,
                    "last_non_zero_analog_read_time": 1,
                    "previous_millis3": 1,
                    "previous_time3": 1,
                    "reference_time": 1,
                    "temperature_out_of_range_start_time": 1,
                    "zero_millis": 1
                },
                "DAT_20000194": {
                    "buffer2": 2,
                    "data_buffer2": 1,
                    "display_buffer": 1,
                    "info_buffer": 1,
                    "lcd": 1,
                    "lcd_buffer": 3,
                    "output_buffer": 2,
                    "print_buffer": 2,
                    "print_buffer_tc_error": 1,
                    "print_data_buffer2": 1,
                    "println_buffer2": 1,
                    "screen_data": 1,
                    "temp_array2": 1
                },
                "DAT_200001b0": {
                    "last_execution_time": 1,
                    "last_pin_toggle": 1,
                    "last_update_output_pin": 1,
                    "next_gpio_reset_update": 1,
                    "next_read_time2": 1,
                    "previous_control_millis": 2,
                    "previous_digital_pin_millis": 1,
                    "previous_millis2": 3,
                    "previous_millis_io": 1,
                    "previous_millis_output": 1,
                    "previous_status_led_reading_time": 1,
                    "previous_switch_millis": 1,
                    "previous_time2": 2,
                    "previous_time_2": 1,
                    "target_time2": 1
                },
                "DAT_200001b4": {
                    "last_millis": 1,
                    "last_update_thermocouple": 1,
                    "last_update_time": 1,
                    "next_read_time1": 1,
                    "next_thermocouple_update": 1,
                    "previous_millis1": 3,
                    "previous_millis_tc": 1,
                    "previous_millis_temperature": 1,
                    "previous_tc_reading_time": 1,
                    "previous_temp_millis": 3,
                    "previous_thermocouple_millis": 1,
                    "previous_time1": 2,
                    "previous_time_1": 1,
                    "target_time1": 1
                },
                "DAT_200001b8": {
                    "current_temp_int": 1,
                    "data1": 1,
                    "error_low_value": 1,
                    "message2": 1,
                    "min_temperature_value": 1,
                    "output_value": 1,
                    "output_value1": 1,
                    "param1": 1,
                    "param4": 1,
                    "parameter1": 1,
                    "print_value1": 1,
                    "print_value3": 1,
                    "temp_setpoint": 1,
                    "value1": 1,
                    "value3": 1,
                    "value_3": 1
                },
                "DAT_200001bc": {
                    "current_temp_dec": 1,
                    "data2": 1,
                    "error_high_value": 1,
                    "max_temperature_value": 1,
                    "message3": 1,
                    "new_temp": 1,
                    "output_value2": 1,
                    "param2": 1,
                    "param5": 1,
                    "parameter2": 1,
                    "print_value2": 1,
                    "print_value4": 1,
                    "temp_hysteresis": 1,
                    "tempreature_sensor_reading": 1,
                    "value2": 1,
                    "value4": 1,
                    "value_4": 1
                },
                "DAT_200001c0": {
                    "control_object": 1,
                    "controller_params": 1,
                    "pid_controller": 4,
                    "pid_controller_object": 1,
                    "pid_object": 1,
                    "some_object": 1,
                    "temp_array3": 1,
                    "temperature_controller": 2,
                    "thermostat": 2
                },
                "DAT_200001c4": {
                    "output": 1
                },
                "DAT_200001c8": {
                    "derivative_term": 1
                },
                "DAT_200001cc": {
                    "integral_term": 1
                },
                "DAT_200001dc": {
                    "temp_error_flag": 1
                },
                "DAT_200001e4": {
                    "temp_error_count": 1
                },
                "DAT_200001e8": {
                    "output_toggle_flag": 1
                },
                "DAT_2000022c": {
                    "difference": 1
                },
                "DAT_20000230": {
                    "output_text_buffer": 1,
                    "proportional_term": 1
                },
                "DAT_20000238": {
                    "control_state": 2,
                    "controller_state": 1,
                    "error_state": 1,
                    "error_status": 1,
                    "function_state": 1,
                    "state": 10,
                    "status_2": 1,
                    "thermocouple_error": 2
                },
                "DAT_20000239": {
                    "execute_flag": 1,
                    "execute_flag1": 1,
                    "execute_function": 1,
                    "execute_print_number_flag": 1,
                    "execute_state": 1,
                    "flag": 2,
                    "flag_2": 1,
                    "is_computing": 1,
                    "is_first_execution": 1,
                    "is_output_on": 1,
                    "is_printing": 1,
                    "is_printing_enabled": 1,
                    "is_ready": 3,
                    "output_pin_status": 1,
                    "print_flag": 1,
                    "thermocouple_read_flag": 1
                },
                "DAT_20000240": {
                    "min_value": 1,
                    "output_sum": 1,
                    "output_value1": 2,
                    "parameter4": 1,
                    "pid_output1": 1,
                    "print_value1": 2,
                    "setpoint": 1,
                    "target_temp_int": 1,
                    "temperature_setpoint": 1,
                    "time": 1,
                    "value1": 2
                },
                "DAT_20000244": {
                    "input_value": 1,
                    "max_value": 1,
                    "output": 1,
                    "output_delta": 1,
                    "output_value2": 2,
                    "parameter5": 1,
                    "pid_output2": 1,
                    "print_value2": 2,
                    "target_temp_dec": 1,
                    "temperature_input": 1,
                    "value2": 2
                },
                "DAT_20000248": {
                    "execute_flag2": 1,
                    "flag2": 1,
                    "is_button_pressed": 3,
                    "is_gpio_on": 1,
                    "is_new_reading": 1,
                    "is_pin_high": 1,
                    "is_time_set": 3,
                    "is_tuning": 1,
                    "manual_control_flag": 1,
                    "needs_initialization": 1,
                    "pid_controller_enabled": 1,
                    "pin_status_flag": 1,
                    "time_setpoint_flag": 1,
                    "time_status": 1
                },
                "DAT_2000024c": {
                    "pin_data": 1,
                    "thermo_couple_address": 1,
                    "thermo_data": 1,
                    "thermo_id": 1,
                    "thermocouple_address": 5,
                    "thermocouple_data": 8,
                    "thermocouple_sensor_data": 1
                },
                "DAT_20000250": {
                    "counter": 7,
                    "counter_2": 1,
                    "cycle_count": 1,
                    "digital_pin_count": 1,
                    "execute_count": 1,
                    "execution_count": 2,
                    "manual_control_count": 1,
                    "output_counter": 1,
                    "print_counter": 1,
                    "read_count": 1,
                    "reading_count": 1,
                    "switch_count": 1
                },
                "DAT_20000254": {
                    "future_time2": 1,
                    "next_execution_time": 1,
                    "next_interval": 1,
                    "next_time_2": 1,
                    "next_tuning_millis": 1,
                    "target_millis": 1,
                    "temperature_out_of_range_end_time": 1,
                    "tuning_end_time": 1,
                    "tuning_millis": 2
                },
                "DAT_20000258": {
                    "analog_input_interval": 1,
                    "execution_period": 1,
                    "sample_interval": 1,
                    "sample_time": 8,
                    "temperature_check_interval": 1,
                    "time_limit": 1,
                    "tuning_time": 1,
                    "tuning_value": 1
                },
                "DAT_2000025c": {
                    "init_millis": 1,
                    "last_time": 1,
                    "prev_analog_input_time": 1,
                    "previous_execution_time": 1,
                    "previous_millis": 1,
                    "previous_millis3": 1,
                    "previous_time_4": 1,
                    "temperature_check_start_time": 1
                },
                "DAT_2000036c": {
                    "buffer1": 2,
                    "data_buffer": 1,
                    "data_buffer3": 1,
                    "output_buffer": 2,
                    "output_string_buffer": 1,
                    "print_buffer": 4,
                    "print_data": 1,
                    "print_data_buffer": 1,
                    "println_buffer": 1,
                    "sum_buffer": 1,
                    "temp_array1": 1
                },
                "DIGITALREAD": {
                    "digital_read": 1
                },
                "DIGITALWRITE": {
                    "digital_write": 1
                },
                "FUND_08000cd0": {
                    "control_loop": 1
                },
                "FUN_08000cd0": {
                    "control_temperature": 6,
                    "improve_thermocouple_readings": 1,
                    "process_temperatures": 1,
                    "temperature_control": 4,
                    "temperature_control_loop": 1,
                    "temperature_controller": 2,
                    "thermocouple_control": 1,
                    "thermocouple_temperature_control": 1,
                    "update_temperature_control": 3,
                    "update_temperature_data_and_control": 1,
                    "update_thermocouple_data": 6,
                    "update_thermocouple_temperature": 1
                },
                "SETCURSOR": {
                    "set_cursor": 1
                },
                "SetMode": {
                    "set_mode": 6
                },
                "SetOutputLimits": {
                    "set_output_limits": 7
                },
                "SetSampleTime": {
                    "set_sample_time": 6
                },
                "SetTunings": {
                    "set_tunings": 5
                },
                "__aeabi_dadd": {
                    "add_float_values": 1,
                    "add_floats": 1,
                    "float_add": 1
                },
                "__aeabi_dcmpeq": {
                    "check_if_equal": 1,
                    "compare_double_values": 1,
                    "compare_float_values": 1,
                    "compare_floats": 2,
                    "compare_floats_for_equality": 1,
                    "double_compare_equal": 1
                },
                "__aeabi_dcmpge": {
                    "compare_float_values_greater_than_equal_to": 1,
                    "compare_floats_greater_than_or_equal": 1,
                    "float_greater_or_equal": 1
                },
                "__aeabi_dcmpgt": {
                    "compare_float_values_greater_than": 1,
                    "compare_floats_greater_than": 1,
                    "float_greater_than": 1
                },
                "__aeabi_dcmple": {
                    "compare_float_values_less_than_equal_to": 1,
                    "compare_floats_less_than_or_equal": 1,
                    "float_less_or_equal": 1
                },
                "__aeabi_dcmplt": {
                    "compare_float_values_less_than": 1,
                    "compare_floats_less_than": 1,
                    "float_less_than": 1
                },
                "__floatsidf": {
                    "convert_int32_to_float": 1,
                    "int_to_float": 1,
                    "integer_to_float": 1
                },
                "__floatunsidf": {
                    "convert_u_int32_to_float": 1,
                    "unsigned_int_to_float": 1,
                    "unsigned_integer_to_float": 1
                },
                "analogRead": {
                    "get_analog_input": 1,
                    "get_pin_analog_value": 1,
                    "read_analog": 1,
                    "read_analog_pin": 4
                },
                "base_address": {
                    "base_address": 1
                },
                "calculateNewValue": {
                    "calculate_new_value": 1
                },
                "calculateResult": {
                    "calculate_result": 1
                },
                "calculateSumAndExecuteCallback": {
                    "calculate_sum_and_execute_callback": 1
                },
                "calculate_new_value_080016b4": {
                    "calculate_new_value": 8
                },
                "calculate_result_08000194": {
                    "calculate_result": 6,
                    "calculate_result2": 2
                },
                "calculate_result_080001a8": {
                    "calculate_result3": 1
                },
                "calculate_result_080001ac": {
                    "calculate_result4": 1
                },
                "calculate_result_080015f8": {
                    "calculate_result": 12
                },
                "calculate_sum_and_execute_callback_08005f40": {
                    "calculate_sum_and_execute": 1,
                    "calculate_sum_and_execute_callback": 5,
                    "calculate_sum_and_execute_callback2": 1,
                    "sum_and_execute_callback": 1
                },
                "calculate_sum_of_sub_functions_08005cd4": {
                    "calculate_sum": 4,
                    "calculate_sum_and_execute_callback": 3,
                    "calculate_sum_of_functions": 2,
                    "calculate_sum_of_sub_functions": 3,
                    "calculate_sum_of_subfunctions": 1
                },
                "character": {
                    "data_character": 1
                },
                "checkEqualityCondition": {
                    "check_equality_condition": 1
                },
                "checkIfCyIsNull": {
                    "check_if_cy_is_null": 1
                },
                "checkIfECyIsNotNull": {
                    "check_if_e_cy_is_not_null": 1
                },
                "checkIfECyIsNull": {
                    "check_if_e_cy_is_null": 1
                },
                "checkIfInCyIsNull": {
                    "check_if_in_cy_is_null": 1
                },
                "checkIfNotEqualToZero": {
                    "check_if_not_equal_to_zero": 1
                },
                "checkOrderCondition": {
                    "check_order_condition": 1
                },
                "checkPinStatus": {
                    "check_pin_status": 1
                },
                "check_equality_condition_080009f0": {
                    "check_equality_condition": 8,
                    "is_equality_condition": 1
                },
                "check_if_cy_is_null_080009dc": {
                    "check_if_cy_is_null": 3,
                    "is_cy_null": 3,
                    "is_thermocouple_null": 1
                },
                "check_if_in_cy_is_null_08000a18": {
                    "check_if_in_cy_is_null": 2,
                    "is_cy_null": 1,
                    "is_in_cy_null": 2,
                    "is_thermocouple_null": 1
                },
                "check_if_not_equal_to_zero_080009c8": {
                    "check_if_not_equal_to_zero": 1,
                    "check_if_not_zero": 1,
                    "is_not_equal_to_zero": 2,
                    "is_not_equal_zero": 1,
                    "is_not_zero": 1
                },
                "check_order_condition_08000a04": {
                    "check_order_condition": 5,
                    "is_order_condition": 1
                },
                "check_pin_status_08005890": {
                    "check_pin_status": 5,
                    "is_pin_high": 1
                },
                "clear": {
                    "clear": 1,
                    "clear_buffer": 2,
                    "clear_data": 1,
                    "clear_screen": 1
                },
                "configureAndWriteGpioPin": {
                    "configure_and_write_gpio": 1
                },
                "configure_and_write_gpio_pin_08005848": {
                    "configure_and_write_gpio": 1,
                    "configure_and_write_gpio_pin": 7,
                    "configure_and_write_pin": 2
                },
                "data": {
                    "data": 1
                },
                "data_address": {
                    "data_address": 1
                },
                "data_length": {
                    "data_length": 1
                },
                "digitalRead": {
                    "get_digital_input": 1,
                    "get_pin_digital_state": 1,
                    "read_digital": 1,
                    "read_digital_pin": 5
                },
                "digitalWrite": {
                    "set_digital_output": 1,
                    "set_pin_digital_state": 1,
                    "write_digital": 1,
                    "write_digital_pin": 5
                },
                "execute_print_number_or_execute_function_08005d82": {
                    "execute_print_number_or_execute_function": 1,
                    "execute_print_number_or_function": 2,
                    "print_number": 1,
                    "print_number_or_execute_function": 8,
                    "print_number_or_function": 1,
                    "print_or_execute": 1
                },
                "execute_sub_function_08005c96": {
                    "execute_sub_function": 14
                },
                "execute_sub_function_08005c96_2": {
                    "execute_sub_function2": 1
                },
                "extraout_r1": {
                    "cursor_setting": 1,
                    "extra_out1": 1,
                    "extra_output1": 3,
                    "extra_result_1": 1,
                    "extra_var1": 1,
                    "lower_float": 1,
                    "param1": 2,
                    "parameter1": 1,
                    "print_flag": 3,
                    "print_format1": 1,
                    "print_function_arg1": 1,
                    "temp2": 1,
                    "temp_low": 1,
                    "temp_lower": 1,
                    "temp_result1": 1,
                    "temp_var_3": 1,
                    "unused1": 1,
                    "var2": 1
                },
                "extraout_r1_00": {
                    "extra_out2": 1,
                    "extra_output2": 3,
                    "extra_result_2": 1,
                    "extra_var2": 1,
                    "param2": 2,
                    "param3": 1,
                    "parameter2": 1,
                    "print_flag1": 2,
                    "print_flag2": 1,
                    "print_format2": 1,
                    "print_function_arg2": 1,
                    "print_setting1": 1,
                    "temp3": 1,
                    "temp_high1": 1,
                    "temp_result2": 1,
                    "temp_var_4": 1,
                    "time_display": 1,
                    "unused2": 1,
                    "var3": 1
                },
                "extraout_r1_01": {
                    "extra_out3": 1,
                    "extra_output3": 3,
                    "extra_result_3": 1,
                    "extra_var3": 1,
                    "param3": 2,
                    "param4": 1,
                    "parameter3": 1,
                    "print_flag2": 2,
                    "print_format3": 1,
                    "print_function_arg3": 1,
                    "print_setting2": 1,
                    "println_flag": 1,
                    "temp4": 1,
                    "temp_display": 1,
                    "temp_low1": 1,
                    "temp_result3": 1,
                    "temp_var_5": 1,
                    "unused3": 1,
                    "var4": 1
                },
                "flag": {
                    "operation_flag": 1
                },
                "flags": {
                    "data_flags": 1
                },
                "getAdcValue": {
                    "read_adc_value": 1
                },
                "getCurrentMilliseconds": {
                    "get_current_milliseconds": 1
                },
                "get_adc_value_08005754": {
                    "get_adc_value": 8
                },
                "get_current_milliseconds_080058e0": {
                    "get_current_millis": 2,
                    "get_current_milliseconds": 7
                },
                "iVar3": {
                    "comparison_result": 10,
                    "result": 1,
                    "status": 1,
                    "temp": 2,
                    "temp_comparison": 1,
                    "temp_comparison_result": 1,
                    "temp_value": 1,
                    "temp_var": 5,
                    "temp_variable": 4
                },
                "initProcessParams": {
                    "initialize_process_params": 1
                },
                "initialize_process_params": {
                    "initialize_params": 1
                },
                "initialize_process_params_080018f8": {
                    "initialize_params": 2,
                    "initialize_process_parameters": 1,
                    "initialize_process_params": 6
                },
                "input": {
                    "input": 1
                },
                "input_value": {
                    "adc_value": 1
                },
                "inverseAndShiftBits": {
                    "reverse_and_shift_bits": 1
                },
                "millis": {
                    "get_current_millis": 3,
                    "get_current_milliseconds": 2,
                    "get_current_time": 3,
                    "get_milliseconds": 1
                },
                "new_param1": {
                    "new_parameter1": 1
                },
                "new_param2": {
                    "new_parameter2": 1
                },
                "new_value": {
                    "new_value": 1
                },
                "object_address": {
                    "param_address": 1
                },
                "output_value": {
                    "result_value": 1
                },
                "param": {
                    "temp_param": 1
                },
                "param1": {
                    "input1": 1
                },
                "param2": {
                    "input2": 1
                },
                "param3": {
                    "param3": 1
                },
                "param4": {
                    "param4": 1
                },
                "param_size": {
                    "buffer_size": 1
                },
                "pin_data": {
                    "pin_data": 1
                },
                "pin_index": {
                    "pin_number": 1
                },
                "print": {
                    "print": 1,
                    "print_data": 5,
                    "print_message": 1,
                    "print_output": 1,
                    "print_to_serial": 1
                },
                "printFloatWrapper": {
                    "print_float": 1,
                    "print_float_wrapper": 1
                },
                "print_float_wrapper_08005f2c": {
                    "print_float": 2,
                    "print_float_wrapper": 5
                },
                "println": {
                    "print_data1": 1,
                    "print_data_and_new_line": 1,
                    "print_data_and_newline": 1,
                    "print_data_line": 1,
                    "print_data_new_line": 1,
                    "print_message_line": 1,
                    "println": 1,
                    "println_to_serial": 1
                },
                "readThermocouple": {
                    "get_thermocouple_data": 1,
                    "get_thermocouple_reading": 2,
                    "read_temperature": 1,
                    "read_thermocouple": 1,
                    "read_thermocouple_data": 2
                },
                "reverseAndShiftBits_0800040c": {
                    "reverse_and_shift_bits": 1
                },
                "reverseAndShiftBits_0800042c": {
                    "reverse_and_shift_bits": 1
                },
                "reverse_and_shift_bits_0800040c": {
                    "reverse_and_shift": 1,
                    "reverse_and_shift_bits": 2,
                    "reverse_and_shift_bits2": 1
                },
                "reverse_and_shift_bits_0800042c": {
                    "reverse_and_shift": 1,
                    "reverse_and_shift_bits": 5,
                    "reverse_and_shift_bits2": 1
                },
                "sendDataPacket": {
                    "send_data_packet": 1
                },
                "sendModifiedData": {
                    "send_modified_data": 1
                },
                "send_data_and_return_success_0800134e": {
                    "send_data": 3,
                    "send_data_and_return_success": 9
                },
                "send_data_packet_0800135a": {
                    "send_data_packet": 6
                },
                "send_data_with_success_check_0800134e": {
                    "send_data_with_success_check": 1
                },
                "send_modified_data_08001366": {
                    "send_modified_data": 9
                },
                "setCursor": {
                    "set_cursor": 2,
                    "set_cursor_pos": 1,
                    "set_cursor_position": 2
                },
                "setMode": {
                    "set_mode": 1
                },
                "setSampleTime": {
                    "set_sample_time": 1
                },
                "size": {
                    "data_size": 1
                },
                "socket": {
                    "socket_address": 1
                },
                "uVar1": {
                    "current_millis": 20,
                    "current_milliseconds": 1,
                    "current_time": 8
                },
                "uVar2": {
                    "data_pin": 1,
                    "digital_pin": 1,
                    "input_pin": 1,
                    "last_pin_state": 1,
                    "output_pin": 4,
                    "output_value": 1,
                    "pin": 1,
                    "pin_index": 2,
                    "pin_number": 7,
                    "previous_time": 1,
                    "read_result_low": 1,
                    "read_thermocouple_result_lower": 1,
                    "setpoint_pin": 1,
                    "temp_integer": 1,
                    "temperature": 3,
                    "temperature_pin": 1,
                    "temperature_setpoint": 1
                },
                "uVar4": {
                    "current_state": 1,
                    "high_bits": 1,
                    "output_pin": 1,
                    "output_value_high_bits": 1,
                    "pin_value": 1,
                    "read_result_high": 1,
                    "read_thermocouple_result_upper": 1,
                    "shifted_temperature": 1,
                    "temp1": 1,
                    "temp_conversion": 1,
                    "temp_float_part": 1,
                    "temp_high": 1,
                    "temp_msb": 1,
                    "temp_upper": 1,
                    "temp_value": 1,
                    "temp_value_upper": 1,
                    "temp_var": 1,
                    "temp_var2": 1,
                    "temp_var_2": 1,
                    "temp_variable2": 1,
                    "temperature1": 1,
                    "temperature_high": 2,
                    "temperature_value": 1,
                    "upper_float": 1,
                    "upper_result": 1,
                    "upper_value": 1,
                    "value_pin": 1
                },
                "uVar5": {
                    "calculation_result": 1,
                    "elapsed_time": 1,
                    "float_result": 1,
                    "read_thermocouple_result": 2,
                    "result": 8,
                    "return_value": 1,
                    "temp_reading": 1,
                    "temp_result": 1,
                    "temp_value": 1,
                    "temp_var3": 1,
                    "temp_var_6": 1,
                    "temperature": 1,
                    "temperature2": 1,
                    "temperature_low": 1,
                    "thermo_result": 1,
                    "thermo_value": 1,
                    "thermocouple_data": 2,
                    "thermocouple_reading": 2,
                    "thermocouple_value": 1
                },
                "updateParamStatus": {
                    "update_param_status": 1
                },
                "updateParameters": {
                    "update_parameters": 1
                },
                "updateParamsAndCompare": {
                    "update_params_and_compare": 1
                },
                "update_param_status_08001a44": {
                    "update_param_status": 7,
                    "update_parameter": 1
                },
                "update_parameters_08001918": {
                    "update_parameters": 6,
                    "update_params": 1
                },
                "update_params_and_compare_08001960": {
                    "update_parameters_and_compare": 1,
                    "update_params_and_compare": 3
                },
                "value": {
                    "new_value": 1
                }
            },
            "called": [
                "FUN_080009dc",
                "FUN_0800042c",
                "FUN_08005890",
                "FUN_08001a44",
                "FUN_08000a18",
                "FUN_08005f2c",
                "FUN_08005d82",
                "FUN_080016b4",
                "FUN_080058e0",
                "FUN_08001366",
                "FUN_08005848",
                "FUN_08005c96",
                "FUN_080009c8",
                "FUN_0800134e",
                "FUN_080018f8",
                "FUN_08005f40",
                "FUN_08000a04",
                "FUN_08005754",
                "FUN_080015f8",
                "FUN_08000194",
                "FUN_080009f0",
                "FUN_0800135a",
                "FUN_08005cd4",
                "FUN_08001960",
                "FUN_08001918",
                "FUN_0800040c"
            ],
            "calling": [
                "FUN_08005f6c"
            ],
            "code": "\nvoid update_temperature_data_and_control_08000cd0(void)\n\n{\n  uint current_millis;\n  undefined4 pin_number;\n  int comparison_result;\n  undefined4 temperature_high;\n  undefined4 extra_output1;\n  undefined4 extra_output2;\n  undefined4 extra_output3;\n  undefined8 result;\n  \n  current_millis = get_current_millis();\n  if (DAT_200001b4 < current_millis) {\n    DAT_200001b4 = DAT_200001b4 + 1000;\n    result = read_thermocouple_data(&DAT_2000024c,0);\n    temperature_high = (undefined4)((ulonglong)result >> 0x20);\n    pin_number = (undefined4)result;\n    DAT_20000188 = pin_number;\n    DAT_2000018c = temperature_high;\n    comparison_result = compare_floats(pin_number,temperature_high,0,0x40c38800);\n    if (((comparison_result != 0) || (comparison_result = compare_floats(pin_number,temperature_high,0,0x40c38880), comparison_result != 0)) ||\n       (comparison_result = compare_floats(pin_number,temperature_high,0,0x40c38900), comparison_result != 0)) {\n      DAT_20000238 = 7;\n      DAT_20000239 = '\\0';\n    }\n  }\n  current_millis = get_current_millis();\n  pin_number = DAT_20000060;\n  if (DAT_200001b0 < current_millis) {\n    DAT_200001b0 = DAT_200001b0 + 1000;\n    if (DAT_20000239 == '\\x01') {\n      comparison_result = read_digital_pin(DAT_20000060);\n      write_digital_pin(pin_number,comparison_result == 0);\n      DAT_20000250 = DAT_20000250 + 1;\n      print_number_or_execute_function(&DAT_2000036c,DAT_20000250,10);\n      execute_sub_function(&DAT_2000036c,&DAT_08007368);\n      print_data(&DAT_2000036c,extra_output1,DAT_20000240,DAT_20000244,2);\n      execute_sub_function(&DAT_2000036c,&DAT_08007368);\n      print_data(&DAT_2000036c,extra_output2,DAT_20000188,DAT_2000018c,2);\n      execute_sub_function(&DAT_2000036c,&DAT_08007368);\n      print_data_new_line(&DAT_2000036c,extra_output3,DAT_200001b8,DAT_200001bc,2);\n    }\n    else {\n      write_digital_pin(DAT_20000060,1);\n    }\n    clear_buffer(&DAT_20000194);\n    execute_sub_function(&DAT_20000194,(&PTR_s_Ready_2000003c)[DAT_20000238]);\n    set_cursor(&DAT_20000194,0,1);\n    if (DAT_20000238 == 7) {\n      execute_sub_function(&DAT_20000194,\"TC Error!\");\n    }\n    else {\n      print_data(&DAT_20000194,2,DAT_20000188,DAT_2000018c,2);\n      send_data_and_return_success(&DAT_20000194,0);\n      execute_sub_function(&DAT_20000194,&DAT_08007378);\n    }\n  }\n  temperature_high = DAT_2000018c;\n  pin_number = DAT_20000188;\n  switch(DAT_20000238) {\n  case 0:\n    comparison_result = compare_float_values_greater_than_equal_to(DAT_20000188,DAT_2000018c,0,0x40490000);\n    if (comparison_result == 0) {\n      if (DAT_20000248 == '\\x01') {\n        calculate_sum(&DAT_2000036c,\"Time Setpoint Input Output\");\n        DAT_20000250 = 0;\n        DAT_2000025c = get_current_millis();\n        DAT_20000240 = 0;\n        DAT_20000244 = 0x4062c000;\n        result = integer_to_float(DAT_20000258);\n        set_output_limits(&DAT_200001c0,(int)((ulonglong)result >> 0x20),0,0,result);\n        set_sample_time(&DAT_200001c0,1000);\n        set_mode(&DAT_200001c0,1);\n        DAT_20000238 = 1;\n      }\n    }\n    else {\n      DAT_20000238 = 6;\n    }\n    break;\n  case 1:\n    DAT_20000239 = '\\x01';\n    comparison_result = compare_float_values_greater_than_equal_to(DAT_20000188,DAT_2000018c,0,0x4062c000);\n    if (comparison_result != 0) {\n      result = get_current_millis();\n      DAT_20000254 = (int)result + 9000;\n      set_tunings(&DAT_200001c0,(int)((ulonglong)result >> 0x20),0,0x4072c000,0x9999999a,0x3fa99999,0,\n                 0x406f4000);\n      DAT_20000240 = 0;\n      DAT_20000244 = 0x40636000;\n      DAT_20000238 = 2;\n    }\n    break;\n  case 2:\n    current_millis = get_current_millis();\n    if (DAT_20000254 < current_millis) {\n      comparison_result = get_current_millis();\n      DAT_20000254 = comparison_result + 9000;\n      result = float_add(DAT_20000240,DAT_20000244,0,0x40140000);\n      DAT_20000244 = (undefined4)((ulonglong)result >> 0x20);\n      DAT_20000240 = (undefined4)result;\n      result = compare_floats_greater_than(DAT_20000240,DAT_20000244,0,0x40690000);\n      if ((int)result != 0) {\n        set_tunings(&DAT_200001c0,(int)((ulonglong)result >> 0x20),0,0x4072c000,0x9999999a,0x3fa99999,\n                   0,0x4075e000);\n        DAT_20000240 = 0;\n        DAT_20000244 = 0x406f4000;\n        DAT_20000238 = 3;\n      }\n    }\n    break;\n  case 3:\n    result = compare_float_values_greater_than_equal_to(DAT_20000188,DAT_2000018c,0,0x406ea000);\n    if ((int)result != 0) {\n      set_tunings(&DAT_200001c0,(int)((ulonglong)result >> 0x20),0,0x4072c000,0x9999999a,0x3fa99999,0,\n                 0x4075e000);\n      DAT_20000240 = 0;\n      DAT_20000244 = 0x40590000;\n      DAT_20000238 = 4;\n    }\n    break;\n  case 4:\n    comparison_result = compare_float_values_less_than_equal_to(DAT_20000188,DAT_2000018c,0,0x40590000);\n    if (comparison_result != 0) {\n      comparison_result = get_current_millis();\n      DAT_20000180 = comparison_result + 1000;\n      write_digital_pin(DAT_20000004,1);\n      DAT_20000239 = '\\0';\n      DAT_20000238 = 5;\n    }\n    break;\n  case 5:\n    current_millis = get_current_millis();\n    if (DAT_20000180 < current_millis) {\n      write_digital_pin(DAT_20000004,0);\n      DAT_20000238 = 0;\n    }\n    break;\n  case 6:\n    comparison_result = float_less_than(DAT_20000188,DAT_2000018c,0,0x40490000);\n    if (comparison_result != 0) {\n      DAT_20000238 = 0;\n    }\n    break;\n  case 7:\n    comparison_result = compare_floats(DAT_20000188,DAT_2000018c,0,0x40c38800);\n    if (((comparison_result == 0) && (comparison_result = compare_floats(pin_number,temperature_high,0,0x40c38880), comparison_result == 0)) &&\n       (comparison_result = compare_floats(pin_number,temperature_high,0,0x40c38900), comparison_result == 0)) {\n      DAT_20000238 = 0;\n    }\n    else {\n      DAT_20000238 = 7;\n    }\n  }\n  if ((DAT_20000248 == '\\x01') && (DAT_20000239 == '\\x01')) {\n    DAT_20000239 = '\\0';\n    DAT_20000238 = 0;\n  }\n  if (DAT_20000184 == '\\x01') {\n    comparison_result = read_analog_pin(DAT_20000068);\n    if (comparison_result == 0) {\n      comparison_result = get_current_millis();\n      if (0x32 < (uint)(comparison_result - DAT_20000190)) {\n        DAT_20000184 = '\\x02';\n      }\n    }\n    else {\n      DAT_20000184 = '\\0';\n    }\n  }\n  else if (DAT_20000184 == '\\0') {\n    DAT_20000248 = '\\0';\n    comparison_result = read_analog_pin(DAT_20000068);\n    if (comparison_result == 0) {\n      DAT_20000190 = get_current_millis();\n      DAT_20000184 = '\\x01';\n    }\n  }\n  else if ((DAT_20000184 == '\\x02') && (comparison_result = read_analog_pin(DAT_20000068), comparison_result != 0)) {\n    DAT_20000248 = '\\x01';\n    DAT_20000184 = '\\0';\n  }\n  if (DAT_20000239 == '\\x01') {\n    comparison_result = get_current_millis();\n    calculate(&DAT_200001c0);\n    if (DAT_20000258 < (uint)(comparison_result - DAT_2000025c)) {\n      DAT_2000025c = DAT_2000025c + DAT_20000258;\n    }\n    result = convert_u_int32_to_float(comparison_result - DAT_2000025c);\n    comparison_result = float_less_than((int)result,(int)((ulonglong)result >> 0x20),DAT_200001b8,DAT_200001bc);\n    if (comparison_result == 0) {\n      write_digital_pin(DAT_20000064,0);\n    }\n    else {\n      write_digital_pin(DAT_20000064,1);\n    }\n  }\n  else {\n    write_digital_pin(DAT_20000064,0);\n  }\n  return;\n}\n\n",
            "current_name": "update_temperature_data_and_control_08000cd0",
            "entrypoint": "0x08000cd0",
            "imported": false,
            "improved": true,
            "renaming": {
                "Compute": "calculate",
                "FUN_08000cd0": "update_temperature_data_and_control_08000cd0",
                "SetMode": "set_mode",
                "SetOutputLimits": "set_output_limits",
                "SetSampleTime": "set_sample_time",
                "SetTunings": "set_tunings",
                "__aeabi_dadd": "float_add",
                "__aeabi_dcmpeq": "compare_floats",
                "__aeabi_dcmpge": "compare_float_values_greater_than_equal_to",
                "__aeabi_dcmpgt": "compare_floats_greater_than",
                "__aeabi_dcmple": "compare_float_values_less_than_equal_to",
                "__aeabi_dcmplt": "float_less_than",
                "__floatsidf": "integer_to_float",
                "__floatunsidf": "convert_u_int32_to_float",
                "analogRead": "read_analog_pin",
                "calculate_sum_of_sub_functions_08005cd4": "calculate_sum",
                "clear": "clear_buffer",
                "digitalRead": "read_digital_pin",
                "digitalWrite": "write_digital_pin",
                "execute_print_number_or_execute_function_08005d82": "print_number_or_execute_function",
                "execute_sub_function_08005c96": "execute_sub_function",
                "extraout_r1": "extra_output1",
                "extraout_r1_00": "extra_output2",
                "extraout_r1_01": "extra_output3",
                "iVar3": "comparison_result",
                "millis": "get_current_millis",
                "print": "print_data",
                "println": "print_data_new_line",
                "readThermocouple": "read_thermocouple_data",
                "send_data_and_return_success_0800134e": "send_data_and_return_success",
                "setCursor": "set_cursor",
                "uVar1": "current_millis",
                "uVar2": "pin_number",
                "uVar4": "temperature_high",
                "uVar5": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001294": {
            "additional_data": {
                "FUN_08001294": {
                    "assign_params": 1,
                    "set_bytes_in_memory": 1,
                    "set_function_parameters": 1,
                    "set_parameters": 7,
                    "set_params": 13,
                    "set_undefined_parameters": 1,
                    "set_undefined_values": 3,
                    "store_params": 2,
                    "update_parameters": 1,
                    "update_params": 1
                },
                "param_1": {
                    "base_address": 5,
                    "data": 1,
                    "data_address": 2,
                    "function_address": 1,
                    "obj": 1,
                    "obj_address": 3,
                    "object": 2,
                    "object_address": 12,
                    "object_pointer": 1,
                    "object_ptr": 1,
                    "ptr_value": 1,
                    "target_address": 1
                },
                "param_2": {
                    "param2": 2,
                    "param2_value": 1,
                    "parameter1": 2,
                    "parameter2": 1,
                    "value1": 21,
                    "value2": 2,
                    "value_1": 2
                },
                "param_3": {
                    "param3": 2,
                    "param3_value": 1,
                    "parameter2": 2,
                    "parameter3": 1,
                    "value2": 21,
                    "value3": 2,
                    "value_2": 2
                },
                "param_4": {
                    "param4": 2,
                    "param4_value": 1,
                    "parameter3": 2,
                    "parameter4": 1,
                    "value3": 21,
                    "value4": 2,
                    "value_3": 2
                },
                "param_5": {
                    "param5": 2,
                    "param5_value": 1,
                    "parameter4": 2,
                    "parameter5": 1,
                    "value4": 21,
                    "value5": 2,
                    "value_4": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_080013a4"
            ],
            "code": "\nvoid set_params_08001294(int object_address,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *(undefined *)(object_address + 0x18) = value1;\n  *(undefined *)(object_address + 0x19) = value2;\n  *(undefined *)(object_address + 0x1a) = value3;\n  *(undefined *)(object_address + 0x1b) = value4;\n  return;\n}\n\n",
            "current_name": "set_params_08001294",
            "entrypoint": "0x08001294",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001294": "set_params_08001294",
                "param_1": "object_address",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080012a2": {
            "additional_data": {
                "FUN_080012a2": {
                    "digital_signal_control": 1,
                    "digital_write_sequence": 1,
                    "initialize_digital_pin": 2,
                    "reset_gpio_pin": 1,
                    "set_pin_states": 1,
                    "toggle_digital_output": 1,
                    "toggle_digital_pin": 4,
                    "toggle_digital_pin_state": 3,
                    "toggle_gpio": 1,
                    "toggle_gpio_state": 1,
                    "toggle_output_pin": 1,
                    "toggle_pin": 1,
                    "toggle_pin_on_off": 1,
                    "toggle_pin_state": 10,
                    "turn_on_and_off_digital_pin": 1,
                    "turn_on_off_led": 1
                },
                "digitalWrite": {
                    "set_pin_state": 2
                },
                "param_1": {
                    "gpio_pin": 3,
                    "led_pin": 1,
                    "pin_address": 2,
                    "pin_index": 6,
                    "pin_number": 19
                },
                "param_4": {
                    "data_pointer": 1,
                    "gpio_data": 1,
                    "gpio_port": 1,
                    "led_status": 1,
                    "pin_mode": 1,
                    "pin_mode_ptr": 1,
                    "pin_state": 1,
                    "pin_value_array": 1
                }
            },
            "called": [
                "FUN_08005848"
            ],
            "calling": [
                "FUN_080012e8",
                "FUN_080012c0"
            ],
            "code": "\nvoid toggle_digital_pin_state_080012a2(int pin_number)\n\n{\n  set_pin_state(*(undefined *)(pin_number + 10),0);\n  set_pin_state(*(undefined *)(pin_number + 10),1);\n  set_pin_state(*(undefined *)(pin_number + 10),0);\n  return;\n}\n\n",
            "current_name": "toggle_digital_pin_state_080012a2",
            "entrypoint": "0x080012a2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080012a2": "toggle_digital_pin_state_080012a2",
                "digitalWrite": "set_pin_state",
                "param_1": "pin_number"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080012c0": {
            "additional_data": {
                "FUN_080012a2": {
                    "initialize_pins": 1
                },
                "FUN_080012c0": {
                    "configure_pins_and_pulse_enable": 1,
                    "digital_write_loop": 4,
                    "digital_write_multiple": 2,
                    "digital_write_multiple_bits": 3,
                    "set_digital_output": 1,
                    "set_digital_pins": 1,
                    "set_output_bits": 2,
                    "set_registers": 1,
                    "update_digital_output": 1,
                    "update_digital_outputs": 2,
                    "update_digital_pins": 6,
                    "update_gpio": 1,
                    "update_gpio_pins": 1,
                    "update_output_bits": 1,
                    "update_outputs": 1,
                    "update_pins_and_pulse_enable": 1,
                    "write_bits_to_pins": 1,
                    "write_digital_bits": 1
                },
                "FUN_08005848": {
                    "pulse_enable": 1
                },
                "param_1": {
                    "address": 1,
                    "base_address": 5,
                    "device": 1,
                    "device_address": 3,
                    "device_base_address": 1,
                    "gpio_base_address": 1,
                    "pin": 1,
                    "pin_address": 3,
                    "pin_array": 3,
                    "pin_array_address": 1,
                    "pin_array_base": 1,
                    "pin_base": 2,
                    "pin_base_address": 3,
                    "pin_number": 1,
                    "port": 1,
                    "port_address": 3
                },
                "param_2": {
                    "bit_pattern": 1,
                    "data": 15,
                    "data_to_write": 2,
                    "data_value": 1,
                    "digital_value": 1,
                    "output_data": 1,
                    "output_value": 2,
                    "value": 8
                },
                "uVar1": {
                    "bit_index": 20,
                    "bit_position": 1,
                    "i": 5,
                    "index": 4,
                    "iteration": 1
                }
            },
            "called": [
                "FUN_080012a2",
                "FUN_08005848"
            ],
            "calling": [
                "FUN_080013a4",
                "FUN_08001310"
            ],
            "code": "\nvoid update_output_bits_080012c0(int base_address,int data)\n\n{\n  uint bit_index;\n  \n  for (bit_index = 0; (int)bit_index < 4; bit_index = bit_index + 1) {\n    digitalWrite(*(undefined *)(base_address + bit_index + 0xb),data >> (bit_index & 0xff) & 1);\n  }\n  pulseEnable(base_address);\n  return;\n}\n\n",
            "current_name": "update_output_bits_080012c0",
            "entrypoint": "0x080012c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080012c0": "update_output_bits_080012c0",
                "param_1": "base_address",
                "param_2": "data",
                "uVar1": "bit_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080012e8": {
            "additional_data": {
                "FUN_080012a2": {
                    "initialize_pin": 1
                },
                "FUN_080012e8": {
                    "digital_write_bits": 2,
                    "digital_write_loop": 2,
                    "set_bits_based_on_value": 1,
                    "set_bits_on_digital_pins": 1,
                    "set_digital_bits": 1,
                    "set_digital_outputs": 1,
                    "set_digital_pins": 1,
                    "update_digital_pins": 3,
                    "update_digital_state": 1,
                    "update_gpio": 1,
                    "update_gpio_bits": 1,
                    "update_gpio_pins": 1,
                    "update_output_pins": 2,
                    "update_pins_with_bits": 1,
                    "update_port_bits": 1,
                    "write_bits": 2,
                    "write_bits_and_pulse_enable": 1,
                    "write_bits_to_digital_pins": 1,
                    "write_bits_to_gpio": 2,
                    "write_bits_to_pins": 1,
                    "write_bits_to_port": 1,
                    "write_bits_to_port_and_pulse_enable": 1,
                    "write_digital_bits": 1,
                    "write_serial_bits": 1
                },
                "FUN_08005848": {
                    "write_to_pin": 1
                },
                "digitalWrite": {
                    "set_pin_state": 1
                },
                "param_1": {
                    "address": 2,
                    "base_address": 3,
                    "data_pin": 2,
                    "device": 1,
                    "device_address": 4,
                    "device_pin": 1,
                    "gpio_base": 1,
                    "gpio_pins": 1,
                    "output_pin": 1,
                    "pin_address": 4,
                    "pin_array": 2,
                    "pin_base_address": 3,
                    "pin_offset": 1,
                    "port_address": 4,
                    "register_address": 1
                },
                "param_2": {
                    "data": 20,
                    "output_data": 2,
                    "output_value": 1,
                    "pin_value": 1,
                    "value": 7
                },
                "pulseEnable": {
                    "send_pulse": 2
                },
                "uVar1": {
                    "bit_index": 28,
                    "i": 2,
                    "iter": 1
                }
            },
            "called": [
                "FUN_080012a2",
                "FUN_08005848"
            ],
            "calling": [
                "FUN_08001310"
            ],
            "code": "\nvoid write_bits_to_digital_pins_080012e8(int port_address,int data)\n\n{\n  uint bit_index;\n  \n  for (bit_index = 0; (int)bit_index < 8; bit_index = bit_index + 1) {\n    set_pin_state(*(undefined *)(port_address + bit_index + 0xb),data >> (bit_index & 0xff) & 1);\n  }\n  send_pulse(port_address);\n  return;\n}\n\n",
            "current_name": "write_bits_to_digital_pins_080012e8",
            "entrypoint": "0x080012e8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080012e8": "write_bits_to_digital_pins_080012e8",
                "digitalWrite": "set_pin_state",
                "param_1": "port_address",
                "param_2": "data",
                "pulseEnable": "send_pulse",
                "uVar1": "bit_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001310": {
            "additional_data": {
                "DAT_": {
                    "data": 1
                },
                "DIGITAL_PIN_1": {
                    "pin1": 1
                },
                "DIGITAL_PIN_2": {
                    "pin2": 1
                },
                "FUN_080012c0": {
                    "write4bits": 3,
                    "write8_bits": 1,
                    "write8bits": 2,
                    "write_8bits": 1,
                    "write_byte_helper": 1,
                    "write_data8bits": 1,
                    "write_eight_bits": 1,
                    "write_low_nibble": 1,
                    "write_nibble_low": 1
                },
                "FUN_080012e8": {
                    "digital_write": 1,
                    "digital_write_pin": 1,
                    "set_pin_value": 1,
                    "write4_bits": 1,
                    "write4bits": 2,
                    "write_4bits": 1,
                    "write_data4bits": 1,
                    "write_four_bits": 1,
                    "write_high_nibble": 1,
                    "write_lower_nibble_helper": 1,
                    "write_nibble_high": 1
                },
                "FUN_08001310": {
                    "digital_io_operations": 1,
                    "digital_write_and_write_bits": 1,
                    "digital_write_with_data": 1,
                    "digital_write_wrapper": 1,
                    "display_data": 1,
                    "function_name": 1,
                    "initialize_device": 2,
                    "initialize_display": 4,
                    "initialize_lcd": 3,
                    "perform_digital_write": 1,
                    "perform_operation": 1,
                    "print_data": 1,
                    "process_data": 1,
                    "send_data": 1,
                    "update_display": 1,
                    "write_data": 8,
                    "write_data_to_digital_pins": 1,
                    "write_to_lcd": 1
                },
                "FUN_08005848": {
                    "digital_write": 9,
                    "serial_write": 1,
                    "write8bits": 2
                },
                "digitalWrite": {
                    "set_pin_state": 2
                },
                "param_1": {
                    "address": 1,
                    "base_address": 1,
                    "data": 2,
                    "data_pin": 3,
                    "data_pin_index": 1,
                    "data_pointer": 1,
                    "data_port": 1,
                    "data_ptr": 1,
                    "device": 4,
                    "device_address": 2,
                    "display": 3,
                    "display_address": 1,
                    "lcd_address": 2,
                    "lcd_config": 1,
                    "lcd_instance": 1,
                    "parameter1": 1,
                    "pin": 3,
                    "port": 2
                },
                "param_2": {
                    "data": 14,
                    "data_value": 4,
                    "display_byte": 1,
                    "parameter2": 1,
                    "value": 11
                },
                "param_3": {
                    "command": 1,
                    "constant_1": 1,
                    "data_pin": 3,
                    "digital_high": 1,
                    "digital_value1": 1,
                    "enable_pin": 1,
                    "high_bit": 1,
                    "high_nibble": 1,
                    "high_nibble_mask": 1,
                    "high_value": 1,
                    "io_value_1": 1,
                    "low": 1,
                    "mode_one": 1,
                    "param1": 1,
                    "param3": 1,
                    "parameter3": 1,
                    "pin": 1,
                    "pin1": 4,
                    "pin_a": 2,
                    "pin_high": 1,
                    "pin_level_high": 1,
                    "pin_mode1": 1,
                    "target1": 1,
                    "value1": 1,
                    "value2": 1
                },
                "param_4": {
                    "buffer": 1,
                    "clock_pin": 1,
                    "constant_2": 1,
                    "data": 1,
                    "digital_low": 1,
                    "digital_value2": 1,
                    "high": 1,
                    "io_value_2": 1,
                    "latch_pin": 1,
                    "low_bit": 1,
                    "low_nibble": 1,
                    "low_nibble_mask": 1,
                    "low_value": 1,
                    "mode_two": 1,
                    "param2": 1,
                    "param4": 1,
                    "parameter4": 1,
                    "pin2": 4,
                    "pin_b": 2,
                    "pin_level_low": 1,
                    "pin_low": 1,
                    "pin_mode2": 1,
                    "register_select_pin": 1,
                    "target2": 1,
                    "value": 1,
                    "value2": 1,
                    "value_ptr": 1
                },
                "param_5": {
                    "pin3": 1,
                    "pin_c": 1
                },
                "param_6": {
                    "pin4": 1,
                    "pin_d": 1
                },
                "prop_1": {
                    "register": 1
                },
                "prop_2": {
                    "register_state": 1
                },
                "prop_3": {
                    "display_mode": 1
                },
                "write4bits": {
                    "write_4_bits": 1,
                    "write_data4bits": 1,
                    "write_data_as4_bits": 1,
                    "write_data_bits4": 1,
                    "write_four_bits": 8,
                    "write_half_bytes": 1,
                    "write_lower_bits": 1,
                    "write_lower_nibble": 1,
                    "write_nibble": 1
                },
                "write8bits": {
                    "write8bits": 1,
                    "write_8_bits": 1,
                    "write_byte": 2,
                    "write_bytes": 1,
                    "write_data8bits": 1,
                    "write_data_as8_bits": 1,
                    "write_data_bits8": 1,
                    "write_eight_bits": 8,
                    "write_upper_bits": 1
                }
            },
            "called": [
                "FUN_080012e8",
                "FUN_080012c0",
                "FUN_08005848"
            ],
            "calling": [
                "FUN_0800134e",
                "FUN_0800138e",
                "FUN_08001366",
                "FUN_08001550",
                "FUN_080013a4",
                "FUN_0800135a"
            ],
            "code": "\nvoid write_data_to_digital_pins_08001310(int device,uint data,undefined4 pin1,undefined4 pin2)\n\n{\n  set_pin_state(*(undefined *)(device + 8),pin1,pin1,pin2,pin2);\n  if (*(char *)(device + 9) != -1) {\n    set_pin_state(*(char *)(device + 9),0);\n  }\n  if ((*(byte *)(device + 0x13) & 0x10) == 0) {\n    write_four_bits(device,data >> 4);\n    write_four_bits(device,data);\n    return;\n  }\n  write_eight_bits(device,data);\n  return;\n}\n\n",
            "current_name": "write_data_to_digital_pins_08001310",
            "entrypoint": "0x08001310",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001310": "write_data_to_digital_pins_08001310",
                "digitalWrite": "set_pin_state",
                "param_1": "device",
                "param_2": "data",
                "param_3": "pin1",
                "param_4": "pin2",
                "write4bits": "write_four_bits",
                "write8bits": "write_eight_bits"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800134e": {
            "additional_data": {
                "FUN_08001310": {
                    "handle_send": 5,
                    "process_data": 9
                },
                "FUN_0800134e": {
                    "send_and_return": 1,
                    "send_and_return_1": 1,
                    "send_and_return_status": 1,
                    "send_and_return_success": 1,
                    "send_and_return_true": 1,
                    "send_data": 22,
                    "send_data_and_return_success": 1,
                    "send_data_over_network": 1,
                    "send_data_to_server": 1,
                    "send_message": 1
                },
                "param_1": {
                    "data_length": 1,
                    "data_socket": 1,
                    "socket": 18,
                    "socket_descriptor": 7,
                    "socket_fd": 3,
                    "status": 1
                },
                "param_2": {
                    "buffer": 11,
                    "data": 13,
                    "data_buffer": 4,
                    "flags": 1,
                    "message": 1,
                    "size": 1
                },
                "param_3": {
                    "additional_param": 1,
                    "buffer_size": 1,
                    "data_length": 2,
                    "data_size": 1,
                    "flag": 1,
                    "length": 2,
                    "size": 7
                },
                "param_4": {
                    "another_param": 1,
                    "buffer_length": 2,
                    "buffer_size": 1,
                    "data": 1,
                    "data_length": 2,
                    "data_size": 1,
                    "flags": 13,
                    "length": 3,
                    "size": 6,
                    "size_of_data": 1
                }
            },
            "called": [
                "FUN_08001310"
            ],
            "calling": [
                "FUN_08000cd0"
            ],
            "code": "\nundefined4 send_data_and_return_success_0800134e(undefined4 socket,undefined4 data,undefined4 size,undefined4 flags)\n\n{\n  send(socket,data,1,flags,flags);\n  return 1;\n}\n\n",
            "current_name": "send_data_and_return_success_0800134e",
            "entrypoint": "0x0800134e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800134e": "send_data_and_return_success_0800134e",
                "param_1": "socket",
                "param_2": "data",
                "param_3": "size",
                "param_4": "flags"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800135a": {
            "additional_data": {
                "FUN_08001310": {
                    "process_data": 2,
                    "send": 3,
                    "send_data": 1,
                    "send_message": 1,
                    "send_packet": 1
                },
                "FUN_0800135a": {
                    "send_data": 26,
                    "send_data_packet": 1,
                    "send_message": 2
                },
                "param_1": {
                    "param1": 1,
                    "socket": 21,
                    "socket_descriptor": 4,
                    "socket_fd": 4,
                    "socket_id": 1
                },
                "param_2": {
                    "arg1": 1,
                    "buffer_size": 1,
                    "data_length": 4,
                    "data_type": 1,
                    "flag": 4,
                    "flags": 4,
                    "length": 2,
                    "message_length": 3,
                    "message_size": 1,
                    "message_type": 1,
                    "packet_length": 1,
                    "param": 1,
                    "param2": 1
                },
                "param_3": {
                    "arg2": 1,
                    "arg3": 1,
                    "buffer_param": 1,
                    "data_size": 1,
                    "param_3": 4,
                    "param_a": 1,
                    "unused_1": 1,
                    "unused_param_1": 1
                },
                "param_4": {
                    "arg3": 1,
                    "arg4": 1,
                    "buffer": 3,
                    "buffer_address": 1,
                    "buffer_size": 1,
                    "data": 12,
                    "data_buffer": 3,
                    "message": 1,
                    "message_data": 1,
                    "param_4": 3,
                    "param_b": 1,
                    "payload": 1,
                    "unused_2": 1,
                    "unused_param_2": 1
                },
                "send": {
                    "send_message": 1
                }
            },
            "called": [
                "FUN_08001310"
            ],
            "calling": [
                "FUN_08000bcc",
                "FUN_080013a4",
                "FUN_08000cd0"
            ],
            "code": "\nvoid send_data_packet_0800135a(undefined4 socket,undefined4 data_length,undefined4 param_3,undefined4 data)\n\n{\n  send_message(socket,1,0,data,data);\n  return;\n}\n\n",
            "current_name": "send_data_packet_0800135a",
            "entrypoint": "0x0800135a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800135a": "send_data_packet_0800135a",
                "param_1": "socket",
                "param_2": "data_length",
                "param_4": "data",
                "send": "send_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001366": {
            "additional_data": {
                "FUN_08001310": {
                    "send": 1
                },
                "FUN_08001366": {
                    "send_char_with_offset": 1,
                    "send_character": 3,
                    "send_character_and_signal": 1,
                    "send_character_with_adjustment": 1,
                    "send_character_with_header": 1,
                    "send_character_with_limit": 3,
                    "send_character_with_param": 1,
                    "send_data": 8,
                    "send_data_packet": 1,
                    "send_message": 2,
                    "send_modified": 1,
                    "send_modified_data": 6,
                    "send_processed_data": 1,
                    "send_updated_data": 1
                },
                "cVar1": {
                    "adjusted_character": 1,
                    "buffer_character": 1,
                    "byte_value": 2,
                    "char_value": 3,
                    "character": 7,
                    "current_byte": 1,
                    "current_char": 2,
                    "current_character": 1,
                    "current_data": 1,
                    "current_data_byte": 1,
                    "extracted_byte": 1,
                    "message_content": 1,
                    "modified_char": 3,
                    "next_character": 1,
                    "offset_data": 1,
                    "selected_char": 2,
                    "selected_character": 2
                },
                "param_1": {
                    "address": 1,
                    "buffer": 5,
                    "buffer_ptr": 1,
                    "character_buffer": 2,
                    "character_pointer": 1,
                    "data": 1,
                    "data_address": 2,
                    "data_buffer": 4,
                    "data_pointer": 2,
                    "data_ptr": 2,
                    "input": 1,
                    "message_buffer": 1,
                    "socket": 4,
                    "socket_fd": 2,
                    "socket_id": 1,
                    "user_id": 1
                },
                "param_2": {
                    "byte_value": 1,
                    "char_to_add": 2,
                    "character": 7,
                    "data": 5,
                    "data_char": 1,
                    "data_segment": 1,
                    "data_type": 1,
                    "flag": 1,
                    "header": 1,
                    "input": 1,
                    "input_char": 2,
                    "input_character": 2,
                    "message_type": 1,
                    "offset": 3,
                    "signal": 1,
                    "user_data": 1
                },
                "param_3": {
                    "buffer_size": 1,
                    "character_limit": 1,
                    "data_len": 1,
                    "data_length": 2,
                    "header_length": 1,
                    "length": 5,
                    "limit": 4,
                    "max_character_count": 1,
                    "max_data_size": 1,
                    "max_length": 7,
                    "max_size": 1,
                    "max_value": 2,
                    "maximum_character_index": 1,
                    "offset": 1,
                    "segment_length": 1,
                    "size": 1
                },
                "param_4": {
                    "additional_data": 2,
                    "additional_param": 3,
                    "context": 1,
                    "extra_data": 1,
                    "extra_info": 1,
                    "extra_param": 4,
                    "param": 4,
                    "param4": 6,
                    "param_4": 7,
                    "parameter": 1,
                    "undefined_value": 1
                },
                "send": {
                    "send_data": 3
                }
            },
            "called": [
                "FUN_08001310"
            ],
            "calling": [
                "FUN_08000bcc",
                "FUN_08000cd0"
            ],
            "code": "\nvoid send_modified_data_08001366(int buffer,char character,uint max_length,undefined4 param_4)\n\n{\n  char character;\n  \n  if (3 < max_length) {\n    max_length = 3;\n  }\n  if ((int)(uint)*(byte *)(buffer + 0x17) <= (int)max_length) {\n    max_length = *(byte *)(buffer + 0x17) - 1 & 0xff;\n  }\n  character = *(char *)(max_length + buffer + 0x18);\n  send_data(buffer,character + character | 0x80,0,character,param_4);\n  return;\n}\n\n",
            "current_name": "send_modified_data_08001366",
            "entrypoint": "0x08001366",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001366": "send_modified_data_08001366",
                "cVar1": "character",
                "param_1": "buffer",
                "param_2": "character",
                "param_3": "max_length",
                "send": "send_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800138e": {
            "additional_data": {
                "FUN_0800138e": {
                    "enable_object": 1,
                    "set_flag_and_send": 10,
                    "set_flag_and_send_data": 2,
                    "set_flags_and_send_data": 1,
                    "set_permission_flags": 1,
                    "update_and_send_data": 7,
                    "update_and_send_flags": 1,
                    "update_flag_and_send": 2,
                    "update_flag_and_send_data": 1,
                    "update_flags_and_send": 1,
                    "update_flags_and_send_data": 1,
                    "update_send_byte": 1,
                    "update_send_flag": 1,
                    "update_send_flags": 1
                },
                "bVar1": {
                    "byte_value": 2,
                    "current_byte": 3,
                    "current_flag": 3,
                    "current_flag_value": 1,
                    "current_flags": 3,
                    "current_value": 4,
                    "data_byte": 1,
                    "flag": 1,
                    "flag_value": 1,
                    "flags": 2,
                    "original_byte": 1,
                    "original_flag": 2,
                    "original_flags": 2,
                    "original_value": 1,
                    "previous_flag": 1
                },
                "param_1": {
                    "buffer_address": 1,
                    "data": 2,
                    "data_address": 5,
                    "data_pointer": 8,
                    "data_ptr": 10,
                    "device": 1,
                    "input_ptr": 1,
                    "object_address": 1,
                    "object_index": 1,
                    "object_pointer": 1
                },
                "param_2": {
                    "ignored_param": 1,
                    "param2": 8,
                    "param_2": 5,
                    "unused_param": 3,
                    "unused_param1": 1,
                    "unused_param_1": 1,
                    "value": 1
                },
                "param_3": {
                    "ignored_param": 1,
                    "param3": 5,
                    "param_3": 5,
                    "unused_param": 1,
                    "unused_param2": 2,
                    "unused_param_2": 1
                },
                "param_4": {
                    "additional_parameter": 1,
                    "buffer_pointer": 1,
                    "callback_param": 1,
                    "context_ptr": 1,
                    "data": 1,
                    "data_address": 1,
                    "extra_param": 1,
                    "extra_parameter": 1,
                    "param": 2,
                    "param4": 10,
                    "param_4": 6,
                    "send_param": 1,
                    "socket": 1,
                    "unused_param": 1,
                    "unused_param3": 1,
                    "unused_param_3": 1
                },
                "send": {
                    "send_data": 8
                }
            },
            "called": [
                "FUN_08001310"
            ],
            "calling": [
                "FUN_080013a4"
            ],
            "code": "\nvoid set_flag_and_send_data_0800138e(int data_ptr,undefined4 param2,undefined4 param_3,undefined4 param4)\n\n{\n  byte current_value;\n  \n  current_value = *(byte *)(data_ptr + 0x14);\n  *(byte *)(data_ptr + 0x14) = current_value | 4;\n  send_data(data_ptr,current_value | 0xc,0,param4,param4);\n  return;\n}\n\n",
            "current_name": "set_flag_and_send_data_0800138e",
            "entrypoint": "0x0800138e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800138e": "set_flag_and_send_data_0800138e",
                "bVar1": "current_value",
                "param_1": "data_ptr",
                "param_2": "param2",
                "param_4": "param4",
                "send": "send_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080013a4": {
            "additional_data": {
                "FUN_08001294": {
                    "pin_mode": 1,
                    "set_digital_write": 1
                },
                "FUN_080012c0": {
                    "digital_write": 1,
                    "set_high": 1,
                    "set_pin_mode": 1
                },
                "FUN_08001310": {
                    "send_data": 1,
                    "write4bits": 2
                },
                "FUN_0800135a": {
                    "pin_mode": 1,
                    "send": 1,
                    "send_command": 1
                },
                "FUN_0800138e": {
                    "set_bit": 1,
                    "set_row_offsets": 2
                },
                "FUN_080013a4": {
                    "init_lcd": 2,
                    "initialize_display": 13,
                    "initialize_lcd": 16
                },
                "FUN_080057b4": {
                    "display": 1,
                    "pulse_enable": 1,
                    "send_command": 1
                },
                "FUN_08005848": {
                    "send": 2,
                    "send_command": 1
                },
                "clear": {
                    "clear": 1,
                    "clear_display": 6,
                    "clear_lcd": 3
                },
                "digitalWrite": {
                    "set_digital_write": 1,
                    "set_pin_digital_output": 1,
                    "set_pin_state": 2,
                    "set_pin_value": 1,
                    "write_digital": 1
                },
                "display": {
                    "display": 3,
                    "display_data": 2,
                    "display_lcd": 2,
                    "display_text_on_lcd": 1,
                    "set_display": 1
                },
                "iVar1": {
                    "bit_check": 1,
                    "bit_count": 1,
                    "delay_value": 1,
                    "i": 2,
                    "index": 1,
                    "limit": 1,
                    "loop_count": 5,
                    "loop_counter": 2,
                    "loop_counter1": 1,
                    "loop_index": 3,
                    "loop_index1": 1,
                    "loop_variable": 1,
                    "mode": 1,
                    "num_iterations": 1,
                    "num_lines": 1,
                    "offset": 2,
                    "pin_mode_index": 1,
                    "pin_mode_loop_idx": 1,
                    "row_offset": 2,
                    "row_offsets": 1,
                    "step": 1
                },
                "iVar2": {
                    "counter": 5,
                    "digital_write_loop_idx": 1,
                    "i": 4,
                    "index": 4,
                    "j": 2,
                    "loop_counter": 1,
                    "loop_counter2": 1,
                    "loop_index2": 1,
                    "loop_variable_2": 1,
                    "offset": 1,
                    "offset_count": 1,
                    "offset_counter": 1,
                    "offset_index": 1,
                    "pin_count": 1,
                    "pin_counter": 1,
                    "pin_index": 3,
                    "row_index": 1,
                    "row_offset_index": 1
                },
                "initializeLCD": {
                    "initialize_lcd": 2,
                    "set_lcd_properties": 1
                },
                "param_1": {
                    "display": 4,
                    "display_address": 5,
                    "display_data": 1,
                    "display_ptr": 3,
                    "lcd": 3,
                    "lcd_address": 6,
                    "lcd_config": 1,
                    "lcd_context": 1,
                    "lcd_controller": 1,
                    "lcd_handle": 1,
                    "lcd_handle1": 1,
                    "lcd_instance": 1,
                    "lcd_interface": 1,
                    "lcd_ptr": 2
                },
                "param_2": {
                    "data_pin": 2,
                    "en_pin": 1,
                    "param2": 2,
                    "param_2": 2,
                    "pin": 2,
                    "pin0": 1,
                    "pin1": 5,
                    "pin_data": 1,
                    "pin_e": 1,
                    "pin_en": 2,
                    "pin_number1": 1,
                    "pin_offset": 1,
                    "pin_rs": 3,
                    "pin_sck": 1,
                    "rs": 2,
                    "rs_pin": 3,
                    "sda_pin": 1
                },
                "param_3": {
                    "cols": 1,
                    "display_function": 1,
                    "enable": 1,
                    "num_lines": 7,
                    "num_rows": 4,
                    "param3_value": 1,
                    "param_3": 1,
                    "pin2": 5,
                    "pin_enable": 1,
                    "pin_mosi": 1,
                    "row_num": 1,
                    "rows": 5,
                    "rs_pin": 1,
                    "screen_rows": 1
                },
                "param_4": {
                    "backlight": 3,
                    "backlight_pin": 2,
                    "cols": 2,
                    "d4": 1,
                    "d4_d7_pins": 1,
                    "enable_pin": 1,
                    "has_sda": 1,
                    "initialize_first_line": 1,
                    "mode": 3,
                    "num_columns": 1,
                    "param4": 2,
                    "param4_value": 1,
                    "param_4": 4,
                    "pin3": 2,
                    "pin_d4": 1,
                    "rs_pin": 1,
                    "toggle_reset": 1,
                    "using_backlight": 1,
                    "using_bargraph": 1,
                    "value": 1
                },
                "pinMode": {
                    "set_pin_mode": 8
                },
                "send": {
                    "send": 1,
                    "send_command": 1,
                    "send_data": 5,
                    "send_data_to_lcd": 2
                },
                "setRowOffsets": {
                    "calculate_offsets": 1,
                    "calculate_row_offsets": 1,
                    "set_lcd_row_offsets": 2,
                    "set_row_offsets": 4,
                    "set_row_pins": 1
                },
                "write4bits": {
                    "send_data": 1,
                    "write4_bit_to_lcd": 1,
                    "write4_bits": 1,
                    "write4bits": 2,
                    "write_four_bits": 3,
                    "write_lcd4bits": 1
                },
                "write_and_send": {
                    "write_and_send_byte": 1
                }
            },
            "called": [
                "FUN_0800138e",
                "FUN_0800135a",
                "FUN_080012c0",
                "FUN_08001294",
                "FUN_08005848",
                "FUN_08001310",
                "FUN_080057b4"
            ],
            "calling": [
                "FUN_08000bcc",
                "FUN_080014ba"
            ],
            "code": "\nvoid initialize_lcd_080013a4(int lcd_address,int pin1,int num_lines,int param_4)\n\n{\n  int loop_count;\n  int counter;\n  \n  if (1 < num_lines) {\n    *(byte *)(lcd_address + 0x13) = *(byte *)(lcd_address + 0x13) | 8;\n  }\n  *(char *)(lcd_address + 0x17) = (char)num_lines;\n  set_row_offsets(lcd_address,0,0x40,pin1,pin1 + 0x40);\n  if ((param_4 != 0) && (num_lines == 1)) {\n    *(byte *)(lcd_address + 0x13) = *(byte *)(lcd_address + 0x13) | 4;\n  }\n  set_pin_mode(*(undefined *)(lcd_address + 8),1);\n  if (*(char *)(lcd_address + 9) != -1) {\n    set_pin_mode(*(char *)(lcd_address + 9),1);\n  }\n  set_pin_mode(*(undefined *)(lcd_address + 10),1);\n  counter = 0;\n  while( true ) {\n    if ((*(byte *)(lcd_address + 0x13) & 0x10) == 0) {\n      loop_count = 4;\n    }\n    else {\n      loop_count = 8;\n    }\n    if (loop_count <= counter) break;\n    set_pin_mode(*(undefined *)(lcd_address + counter + 0xb),1);\n    counter = counter + 1;\n  }\n  set_pin_state(*(undefined *)(lcd_address + 8),0);\n  set_pin_state(*(undefined *)(lcd_address + 10),0);\n  if (*(char *)(lcd_address + 9) != -1) {\n    set_pin_state(*(char *)(lcd_address + 9),0);\n  }\n  if ((*(byte *)(lcd_address + 0x13) & 0x10) == 0) {\n    write_four_bits(lcd_address,3);\n    write_four_bits(lcd_address,3);\n    write_four_bits(lcd_address,3);\n    write_four_bits(lcd_address,2);\n  }\n  else {\n    send_data(lcd_address,*(byte *)(lcd_address + 0x13) | 0x20,0);\n    send_data(lcd_address,*(byte *)(lcd_address + 0x13) | 0x20,0);\n    send_data(lcd_address,*(byte *)(lcd_address + 0x13) | 0x20,0);\n  }\n  send_data(lcd_address,*(byte *)(lcd_address + 0x13) | 0x20,0);\n  *(undefined *)(lcd_address + 0x14) = 4;\n  display(lcd_address);\n  clear_display(lcd_address);\n  *(undefined *)(lcd_address + 0x15) = 2;\n  send_data(lcd_address,6,0);\n  return;\n}\n\n",
            "current_name": "initialize_lcd_080013a4",
            "entrypoint": "0x080013a4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080013a4": "initialize_lcd_080013a4",
                "clear": "clear_display",
                "digitalWrite": "set_pin_state",
                "iVar1": "loop_count",
                "iVar2": "counter",
                "param_1": "lcd_address",
                "param_2": "pin1",
                "param_3": "num_lines",
                "pinMode": "set_pin_mode",
                "send": "send_data",
                "setRowOffsets": "set_row_offsets",
                "write4bits": "write_four_bits"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080014ba": {
            "additional_data": {
                "FUN_080014ba": {
                    "initialize_device": 2,
                    "initialize_display": 3,
                    "initialize_lcd": 4,
                    "initialize_lcd_parameters": 2,
                    "initialize_lcd_params": 2,
                    "initialize_lcd_with_params": 1,
                    "initialize_memory": 1,
                    "initialize_param_values": 1,
                    "initialize_parameters": 4,
                    "set_lcd_data": 2,
                    "set_lcd_parameters": 5,
                    "set_lcd_params": 2,
                    "update_lcd_params": 1
                },
                "LCD_OFFSET_1": {
                    "offset_1": 1
                },
                "LCD_OFFSET_2": {
                    "offset_2": 1
                },
                "initialize_lcd_080013a4": {
                    "initialize_lcd": 16
                },
                "lcd_address": {
                    "lcd_addr": 1,
                    "lcd_address": 2
                },
                "num_lines": {
                    "lcd_num_lines": 1,
                    "lines": 1,
                    "num_lines": 1,
                    "num_rows": 1,
                    "number_of_lines": 1
                },
                "param_1": {
                    "device_address": 2,
                    "display_address": 3,
                    "lcd_address": 24,
                    "memory_address": 2
                },
                "param_10": {
                    "data_8": 2,
                    "display_param_10": 1,
                    "display_param_8": 1,
                    "lcd_param_10": 1,
                    "lcd_param_8": 1,
                    "param_10": 15,
                    "param_10_new": 1,
                    "param_10_undefined": 1,
                    "param_10_value": 1,
                    "undefined": 1,
                    "undefined_param_10": 3,
                    "undefined_value_7": 1,
                    "value8": 1,
                    "value_10": 1
                },
                "param_11": {
                    "data_9": 2,
                    "display_param_11": 1,
                    "display_param_9": 1,
                    "lcd_param_11": 1,
                    "lcd_param_9": 1,
                    "param_11": 15,
                    "param_11_new": 1,
                    "param_11_undefined": 1,
                    "param_11_value": 1,
                    "undefined": 1,
                    "undefined_param_11": 3,
                    "undefined_value_8": 1,
                    "value9": 1,
                    "value_11": 1
                },
                "param_12": {
                    "data_10": 2,
                    "display_param_10": 1,
                    "display_param_12": 1,
                    "lcd_param_10": 1,
                    "lcd_param_12": 1,
                    "param_12": 15,
                    "param_12_new": 1,
                    "param_12_undefined": 1,
                    "param_12_value": 1,
                    "undefined": 1,
                    "undefined_param_12": 3,
                    "undefined_value_9": 1,
                    "value10": 1,
                    "value_12": 1
                },
                "param_13": {
                    "data_11": 2,
                    "display_param_11": 1,
                    "display_param_13": 1,
                    "lcd_param_11": 1,
                    "lcd_param_13": 1,
                    "param_13": 15,
                    "param_13_new": 1,
                    "param_13_undefined": 1,
                    "param_13_value": 1,
                    "undefined": 1,
                    "undefined_param_13": 3,
                    "undefined_value_10": 1,
                    "value11": 1,
                    "value_13": 1
                },
                "param_2": {
                    "condition": 1,
                    "flag": 5,
                    "is_initialized": 4,
                    "is_param_2_zero": 3,
                    "is_set_to_zero": 1,
                    "is_zero": 9,
                    "num_lines": 3,
                    "option": 1,
                    "param_value": 1,
                    "pin1": 2,
                    "zero_flag": 1
                },
                "param_3": {
                    "data_1": 2,
                    "display_param_1": 1,
                    "display_param_3": 1,
                    "display_value": 1,
                    "lcd_param_1": 1,
                    "lcd_param_3": 1,
                    "num_lines": 2,
                    "param_3": 12,
                    "param_3_new": 1,
                    "param_3_undefined": 1,
                    "param_3_value": 1,
                    "undefined1": 1,
                    "undefined_param_3": 3,
                    "undefined_value_1": 1,
                    "value1": 1,
                    "value_3": 1
                },
                "param_4": {
                    "character_code": 1,
                    "character_param": 1,
                    "display_param_2": 1,
                    "display_param_4": 1,
                    "flag": 1,
                    "initialize_lcd_param_4": 1,
                    "lcd_param_4": 1,
                    "num_lines": 2,
                    "param_4": 7,
                    "param_4_as_char": 1,
                    "param_4_value": 2,
                    "pin": 1,
                    "pin1": 3,
                    "pin_num": 1,
                    "pin_number": 1,
                    "pin_param": 1,
                    "pin_value": 2,
                    "undefined4": 1,
                    "value2": 1,
                    "value_4": 1
                },
                "param_5": {
                    "data_3": 2,
                    "display_param_3": 1,
                    "display_param_5": 1,
                    "lcd_param_3": 1,
                    "lcd_param_5": 1,
                    "param_5": 15,
                    "param_5_new": 1,
                    "param_5_undefined": 1,
                    "param_5_value": 1,
                    "undefined": 1,
                    "undefined_param_5": 3,
                    "undefined_value_2": 1,
                    "value3": 1,
                    "value_5": 1
                },
                "param_6": {
                    "data_4": 2,
                    "display_param_4": 1,
                    "display_param_6": 1,
                    "lcd_param_4": 1,
                    "lcd_param_6": 1,
                    "param_6": 15,
                    "param_6_new": 1,
                    "param_6_undefined": 1,
                    "param_6_value": 1,
                    "undefined": 1,
                    "undefined_param_6": 3,
                    "undefined_value_3": 1,
                    "value4": 1,
                    "value_6": 1
                },
                "param_7": {
                    "data_5": 2,
                    "display_param_5": 1,
                    "display_param_7": 1,
                    "lcd_param_5": 1,
                    "lcd_param_7": 1,
                    "param_7": 15,
                    "param_7_new": 1,
                    "param_7_undefined": 1,
                    "param_7_value": 1,
                    "undefined": 1,
                    "undefined_param_7": 3,
                    "undefined_value_4": 1,
                    "value5": 1,
                    "value_7": 1
                },
                "param_8": {
                    "data_6": 2,
                    "display_param_6": 1,
                    "display_param_8": 1,
                    "lcd_param_6": 1,
                    "lcd_param_8": 1,
                    "param_8": 15,
                    "param_8_new": 1,
                    "param_8_undefined": 1,
                    "param_8_value": 1,
                    "undefined": 1,
                    "undefined_param_8": 3,
                    "undefined_value_5": 1,
                    "value6": 1,
                    "value_8": 1
                },
                "param_9": {
                    "data_7": 2,
                    "display_param_7": 1,
                    "display_param_9": 1,
                    "lcd_param_7": 1,
                    "lcd_param_9": 1,
                    "param_9": 15,
                    "param_9_new": 1,
                    "param_9_undefined": 1,
                    "param_9_value": 1,
                    "undefined": 1,
                    "undefined_param_9": 3,
                    "undefined_value_6": 1,
                    "value7": 1,
                    "value_9": 1
                },
                "pin1": {
                    "lcd_pin1": 1,
                    "lcd_pin_1": 1,
                    "num_columns": 1,
                    "pin1": 1,
                    "pin_1": 1,
                    "pin_value": 1
                }
            },
            "called": [
                "FUN_080013a4"
            ],
            "calling": [
                "FUN_08001510"
            ],
            "code": "\nvoid initialize_lcd_parameters_080014ba(int lcd_address,int is_zero,undefined param_3,undefined4 param_4,undefined param_5,\n                 undefined param_6,undefined param_7,undefined param_8,undefined param_9,\n                 undefined lcd_address0,undefined lcd_address1,undefined lcd_address2,undefined lcd_address3)\n\n{\n  *(undefined *)(lcd_address + 8) = param_3;\n  *(char *)(lcd_address + 9) = (char)param_4;\n  *(undefined *)(lcd_address + 10) = param_5;\n  *(undefined *)(lcd_address + 0xb) = param_6;\n  *(undefined *)(lcd_address + 0xc) = param_7;\n  *(undefined *)(lcd_address + 0xd) = param_8;\n  *(undefined *)(lcd_address + 0xe) = param_9;\n  *(undefined *)(lcd_address + 0xf) = lcd_address0;\n  *(undefined *)(lcd_address + 0x10) = lcd_address1;\n  *(undefined *)(lcd_address + 0x11) = lcd_address2;\n  *(undefined *)(lcd_address + 0x12) = lcd_address3;\n  if (is_zero == 0) {\n    *(undefined *)(lcd_address + 0x13) = 0x10;\n  }\n  else {\n    *(undefined *)(lcd_address + 0x13) = 0;\n  }\n  initialize_lcd(lcd_address,0x10,1,0,param_4);\n  return;\n}\n\n",
            "current_name": "initialize_lcd_parameters_080014ba",
            "entrypoint": "0x080014ba",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080014ba": "initialize_lcd_parameters_080014ba",
                "initialize_lcd_080013a4": "initialize_lcd",
                "param_1": "lcd_address",
                "param_2": "is_zero"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001510": {
            "additional_data": {
                "FUN_08001510": {
                    "initialize_and_configure_display": 2,
                    "initialize_and_configure_lcd": 5,
                    "initialize_and_return_lcd": 1,
                    "initialize_and_return_lcd_parameters": 1,
                    "initialize_and_return_lcd_success": 1,
                    "initialize_and_send_data": 1,
                    "initialize_and_setup_lcd": 6,
                    "initialize_lcd": 3,
                    "initialize_lcd_and_return": 3,
                    "initialize_lcd_and_return_ptr": 1,
                    "initialize_lcd_and_send_data": 2,
                    "initialize_lcd_and_setup_send_data": 1,
                    "initialize_lcd_function": 1,
                    "initialize_lcd_with_send_data": 1,
                    "set_lcd_parameters": 1,
                    "setup_lcd_and_return_result": 1
                },
                "initialize_lcd_parameters_080014ba": {
                    "initialize_lcd_parameters": 1
                },
                "param_1": {
                    "display_data": 1,
                    "display_parameters": 1,
                    "lcd_address": 2,
                    "lcd_address_pointer": 1,
                    "lcd_address_ptr": 1,
                    "lcd_and_return": 1,
                    "lcd_data": 2,
                    "lcd_data_buffer": 1,
                    "lcd_info_ptr": 1,
                    "lcd_parameters": 14,
                    "lcd_params": 4,
                    "lcd_ptr": 1,
                    "lcd_settings": 1
                },
                "param_2": {
                    "address": 1,
                    "address_of_lcd": 1,
                    "is_zero": 6,
                    "is_zero_flag": 2,
                    "lcd_address": 20,
                    "lcd_address_pointer": 1
                },
                "param_3": {
                    "is_zero": 5,
                    "padding": 1,
                    "param3": 1,
                    "param_3": 23,
                    "unknown_param": 1
                },
                "param_4": {
                    "param4": 1,
                    "param_4": 29,
                    "unknown_param2": 1
                },
                "param_5": {
                    "param5": 1,
                    "param_5": 29,
                    "unknown_param3": 1
                },
                "param_6": {
                    "param6": 1,
                    "param_6": 29,
                    "unknown_param4": 1
                },
                "param_7": {
                    "param7": 1,
                    "param_7": 29,
                    "unknown_param5": 1
                }
            },
            "called": [
                "FUN_080014ba"
            ],
            "calling": [
                "FUN_08000b08"
            ],
            "code": "\nundefined4 *\ninitialize_lcd_and_setup_send_data_08001510(undefined4 *lcd_parameters,undefined4 lcd_address,undefined4 param_3,undefined4 param_4,\n            undefined param_5,undefined param_6,undefined param_7)\n\n{\n  lcd_parameters[1] = 0;\n  *lcd_parameters = &PTR_send_data_and_return_success_0800134e_1_080073f8;\n  initialize_lcd_parameters(lcd_parameters,1,lcd_address,0xff,param_3,param_4,param_5,param_6,param_7,0,0,0,0);\n  return lcd_parameters;\n}\n\n",
            "current_name": "initialize_lcd_and_setup_send_data_08001510",
            "entrypoint": "0x08001510",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001510": "initialize_lcd_and_setup_send_data_08001510",
                "initialize_lcd_parameters_080014ba": "initialize_lcd_parameters",
                "param_1": "lcd_parameters",
                "param_2": "lcd_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001550": {
            "additional_data": {
                "FUN_08001550": {
                    "send_and_process_data": 1,
                    "send_data": 24,
                    "send_data_and_execute": 1,
                    "send_data_to_device": 2,
                    "send_data_to_server": 3
                },
                "iVar1": {
                    "counter": 3,
                    "i": 4,
                    "index": 21,
                    "loop_counter": 1
                },
                "param_1": {
                    "buffer": 1,
                    "data": 7,
                    "data_array": 2,
                    "data_buffer": 4,
                    "data_ptr": 9,
                    "device": 1,
                    "device_ptr": 1,
                    "server_connection": 1,
                    "socket": 4,
                    "target_address": 1
                },
                "param_2": {
                    "data_len": 1,
                    "data_length": 7,
                    "data_size": 5,
                    "flag": 1,
                    "flags": 7,
                    "length": 4,
                    "num_bytes": 1,
                    "size": 5
                },
                "param_3": {
                    "buffer": 7,
                    "buffer_addr": 1,
                    "buffer_address": 1,
                    "buffer_ptr": 1,
                    "data": 1,
                    "data_address": 5,
                    "data_array": 1,
                    "data_array_start": 1,
                    "data_buffer": 1,
                    "data_ptr": 2,
                    "data_start": 1,
                    "input_data": 1,
                    "source_addr": 2,
                    "source_address": 5,
                    "source_data": 1
                }
            },
            "called": [
                "FUN_08001310"
            ],
            "calling": [
                "FUN_08000bcc"
            ],
            "code": "\nvoid send_data_to_server_08001550(undefined4 *data_ptr,uint data_length,int buffer)\n\n{\n  int index;\n  \n  send(data_ptr,(data_length & 7) << 3 | 0x40,0);\n  for (index = 0; index < 8; index = index + 1) {\n    (**(code **)*data_ptr)(data_ptr,*(undefined *)(buffer + index));\n  }\n  return;\n}\n\n",
            "current_name": "send_data_to_server_08001550",
            "entrypoint": "0x08001550",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001550": "send_data_to_server_08001550",
                "iVar1": "index",
                "param_1": "data_ptr",
                "param_2": "data_length",
                "param_3": "buffer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800157c": {
            "additional_data": {
                "FUN_0800157c": {
                    "configure_and_set_pins": 1,
                    "configure_gpio": 1,
                    "configure_io": 1,
                    "configure_pin_modes": 1,
                    "configure_pin_modes_and_write_values": 1,
                    "initialize_board": 1,
                    "initialize_device": 1,
                    "initialize_gpio": 5,
                    "initialize_io": 9,
                    "initialize_peripheral": 1,
                    "initialize_pin_modes": 1,
                    "initialize_pin_modes_and_states": 1,
                    "initialize_pin_modes_and_values": 1,
                    "initialize_pins": 3,
                    "initialize_ports": 1,
                    "set_pin_modes_and_values": 1,
                    "set_pins_and_values": 1
                },
                "digitalWrite": {
                    "set_pin_state": 1,
                    "write_digital": 1,
                    "write_digital_value": 2,
                    "write_pin": 1,
                    "write_pin_state": 1,
                    "write_to_pin": 1
                },
                "param_1": {
                    "board_data": 1,
                    "device_config": 1,
                    "gpio_array": 1,
                    "gpio_config": 1,
                    "gpio_pins": 3,
                    "io_array": 2,
                    "io_config": 1,
                    "io_pins": 1,
                    "io_ports": 1,
                    "output_pin_values": 1,
                    "output_pins": 2,
                    "output_values": 1,
                    "peripheral": 1,
                    "pin_array": 6,
                    "pin_config": 2,
                    "pin_values": 2,
                    "port": 2,
                    "port_values": 1
                },
                "param_2": {
                    "digital_pin": 1,
                    "input_pin": 3,
                    "output_pin": 1,
                    "output_pin1": 1,
                    "output_port": 1,
                    "pin": 1,
                    "pin1": 14,
                    "pin_1": 4,
                    "pin_number": 5
                },
                "param_3": {
                    "input_mode": 4,
                    "input_pin1": 2,
                    "input_port1": 1,
                    "mode1": 1,
                    "mode_pin1": 1,
                    "output_pin1": 3,
                    "pin2": 8,
                    "pin2_mode": 4,
                    "pin2_state": 2,
                    "pin_2": 2,
                    "pin_2_mode": 1,
                    "pin_mode1": 1,
                    "pin_mode_1": 1
                },
                "param_4": {
                    "input_pin2": 2,
                    "input_port2": 1,
                    "mode2": 1,
                    "mode_pin2": 1,
                    "output_mode": 4,
                    "output_pin2": 3,
                    "pin2_state": 2,
                    "pin3": 8,
                    "pin3_mode": 2,
                    "pin3_state": 2,
                    "pin_3": 2,
                    "pin_3_mode": 1,
                    "pin_mode2": 1,
                    "pin_mode_2": 1
                },
                "pinMode": {
                    "set_pin_mode": 7
                }
            },
            "called": [
                "FUN_08005848",
                "FUN_080057b4"
            ],
            "calling": [
                "FUN_08000b08"
            ],
            "code": "\nundefined * initialize_io_0800157c(undefined *pin_array,undefined4 pin1,undefined pin2,undefined pin3)\n\n{\n  *pin_array = (char)pin1;\n  pin_array[1] = pin2;\n  pin_array[2] = pin3;\n  set_pin_mode(pin1,0);\n  set_pin_mode(pin_array[1],1);\n  set_pin_mode(pin_array[2],1);\n  write_digital_value(pin_array[1],1);\n  write_digital_value(pin_array[2],0);\n  return pin_array;\n}\n\n",
            "current_name": "initialize_io_0800157c",
            "entrypoint": "0x0800157c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800157c": "initialize_io_0800157c",
                "digitalWrite": "write_digital_value",
                "param_1": "pin_array",
                "param_2": "pin1",
                "param_3": "pin2",
                "param_4": "pin3",
                "pinMode": "set_pin_mode"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080015b2": {
            "additional_data": {
                "FUN_080015b2": {
                    "decode_binary": 1,
                    "decode_bits": 2,
                    "decode_bits_and_return_value": 1,
                    "extract_binary_data": 1,
                    "extract_bits": 1,
                    "extract_data_from_binary": 1,
                    "read_bits_from_pins": 1,
                    "read_bits_from_port": 1,
                    "read_reverse_bits": 1,
                    "reverse_binary": 1,
                    "reverse_bits": 18,
                    "reverse_digital_read": 1,
                    "reverse_read_bits": 1
                },
                "FUN_08005890": {
                    "check_bit": 1
                },
                "digitalWrite": {
                    "set_pin_state": 1
                },
                "iVar1": {
                    "bit_value": 7,
                    "digital_value": 2,
                    "input_bit": 1,
                    "input_status": 1,
                    "input_value": 2,
                    "pin_value": 3,
                    "read_bit": 2,
                    "read_result": 2,
                    "read_value": 10,
                    "temp_variable": 1
                },
                "param_1": {
                    "binary_data": 2,
                    "bits_array": 1,
                    "data": 3,
                    "data_ptr": 1,
                    "device_pins": 1,
                    "gpio_pins": 1,
                    "input": 2,
                    "input_array": 3,
                    "input_data": 1,
                    "input_pins": 1,
                    "params": 1,
                    "pin_array": 4,
                    "pin_config": 1,
                    "pin_configuration": 1,
                    "pin_status": 1,
                    "pins": 6,
                    "port_pins": 1
                },
                "param_2": {
                    "unused_param1": 1
                },
                "param_3": {
                    "unused_param2": 1
                },
                "param_4": {
                    "unused_param3": 1
                },
                "uVar2": {
                    "bit_count": 2,
                    "bit_counter": 1,
                    "bit_idx": 1,
                    "bit_index": 15,
                    "bit_position": 11,
                    "index": 1
                },
                "uVar3": {
                    "decoded_value": 4,
                    "extracted_data": 1,
                    "result": 8,
                    "reversed_bits": 11,
                    "reversed_data": 1,
                    "reversed_value": 6
                }
            },
            "called": [
                "FUN_08005890",
                "FUN_08005848"
            ],
            "calling": [
                "FUN_080015f8"
            ],
            "code": "\nuint read_reverse_bits_080015b2(undefined *pins)\n\n{\n  int read_value;\n  uint bit_index;\n  uint reversed_bits;\n  \n  set_pin_state(pins[1],0);\n  reversed_bits = 0;\n  for (bit_index = 0x1f; -1 < (int)bit_index; bit_index = bit_index - 1) {\n    set_pin_state(pins[2],1);\n    read_value = digitalRead(*pins);\n    if (read_value != 0) {\n      reversed_bits = reversed_bits | 1 << (bit_index & 0xff);\n    }\n    set_pin_state(pins[2],0);\n  }\n  set_pin_state(pins[1],1);\n  return reversed_bits;\n}\n\n",
            "current_name": "read_reverse_bits_080015b2",
            "entrypoint": "0x080015b2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080015b2": "read_reverse_bits_080015b2",
                "digitalWrite": "set_pin_state",
                "iVar1": "read_value",
                "param_1": "pins",
                "uVar2": "bit_index",
                "uVar3": "reversed_bits"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080015f8": {
            "additional_data": {
                "FUN_08000194": {
                    "convert_to_float": 1
                },
                "FUN_0800040c": {
                    "multiply": 1
                },
                "FUN_080004f8": {
                    "read_data": 1
                },
                "FUN_0800074c": {
                    "multiply_add": 1
                },
                "FUN_080015b2": {
                    "check_flag": 1
                },
                "FUN_080015f8": {
                    "calculate_float_value": 1,
                    "calculate_result": 18,
                    "calculate_value": 5,
                    "convert_data": 1,
                    "process_data": 5,
                    "read_data_and_process": 1
                },
                "param_1": {
                    "arg1": 1,
                    "data": 4,
                    "data_size": 2,
                    "data_type": 1,
                    "first_param": 1,
                    "flag": 1,
                    "flags": 1,
                    "input1": 3,
                    "input_a": 1,
                    "input_flag": 2,
                    "input_flags": 1,
                    "input_param": 2,
                    "input_value": 1,
                    "param1": 6,
                    "status": 2,
                    "value": 1,
                    "value1": 1
                },
                "param_2": {
                    "arg2": 1,
                    "calc_option": 1,
                    "calculation_type": 4,
                    "code": 1,
                    "data_flag": 1,
                    "flag": 7,
                    "input2": 3,
                    "input_b": 1,
                    "mode": 3,
                    "operation_flag": 1,
                    "option": 2,
                    "param2": 4,
                    "param_count": 1,
                    "second_param": 1
                },
                "param_3": {
                    "arg3": 1,
                    "input3": 3,
                    "input_c": 1,
                    "param1": 2,
                    "param2": 1,
                    "param3": 11,
                    "param_3": 4,
                    "param_a": 1,
                    "third_param": 1,
                    "unused_param": 1,
                    "unused_param1": 2,
                    "unused_param_1": 1,
                    "value2": 1
                },
                "param_4": {
                    "additional_param": 1,
                    "arg4": 1,
                    "fourth_param": 1,
                    "input4": 3,
                    "input_d": 1,
                    "param2": 2,
                    "param3": 1,
                    "param4": 11,
                    "param_4": 4,
                    "param_b": 1,
                    "result_precision": 1,
                    "unused_param2": 2,
                    "unused_param_2": 1,
                    "value3": 1
                },
                "uVar1": {
                    "data": 24,
                    "data_value": 3,
                    "read_data_result": 1,
                    "read_result": 1,
                    "read_value": 1
                },
                "uVar2": {
                    "result": 28,
                    "result_value": 2
                }
            },
            "called": [
                "FUN_080004f8",
                "FUN_08000194",
                "FUN_080015b2",
                "FUN_0800074c",
                "FUN_0800040c"
            ],
            "calling": [
                "FUN_08000cd0"
            ],
            "code": "\nundefined8 calculate_result_080015f8(undefined4 param1,int flag,undefined4 param3,undefined4 param4)\n\n{\n  uint data;\n  undefined8 result;\n  \n  data = readData();\n  if ((data & 0x10000) == 0) {\n    data = data >> 0x12;\n    result = __floatunsidf(data & 0x1fff);\n    if ((data & 0x2000) != 0) {\n      result = __floatunsidf(~data & 0x1fff);\n      result = __aeabi_dadd((int)result,(int)((ulonglong)result >> 0x20),0,0x3ff00000,param4);\n      result = CONCAT44((int)((ulonglong)result >> 0x20) + -0x80000000,(int)result);\n    }\n    result = __muldf3((int)result,(int)((ulonglong)result >> 0x20),0,0x3fd00000);\n    if (flag == 1) {\n      result = __muldf3((int)result,(int)((ulonglong)result >> 0x20),0,0x40220000);\n      result = __divdf3((int)result,(int)((ulonglong)result >> 0x20),0,0x40140000);\n      result = __aeabi_dadd((int)result,(int)((ulonglong)result >> 0x20),0,0x40400000);\n      return result;\n    }\n  }\n  else {\n    data = data & 7;\n    if (data == 2) {\n      return 0x40c3888000000000;\n    }\n    if (data == 4) {\n      return 0x40c3890000000000;\n    }\n    if (data != 1) {\n      return 0;\n    }\n    result = 0x40c3880000000000;\n  }\n  return result;\n}\n\n",
            "current_name": "calculate_result_080015f8",
            "entrypoint": "0x080015f8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080015f8": "calculate_result_080015f8",
                "param_1": "param1",
                "param_2": "flag",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "data",
                "uVar2": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080016b4": {
            "additional_data": {
                "FUN_080016b4": {
                    "calculate_and_set_values": 1,
                    "calculate_and_store_result": 2,
                    "calculate_and_update_value": 1,
                    "calculate_modified_value": 1,
                    "calculate_new_value": 6,
                    "calculate_result": 5,
                    "calculate_time_elapsed": 1,
                    "calculate_value": 3,
                    "process_data": 1,
                    "update_data": 4,
                    "update_status": 1,
                    "update_values": 1
                },
                "F_080016b4": {
                    "calculate_coefficient": 1
                },
                "cVar1": {
                    "char_value": 1,
                    "condition": 1,
                    "condition2": 1,
                    "flag": 3,
                    "flag_1": 1,
                    "output_flag": 1,
                    "output_value": 1,
                    "result": 20,
                    "result_char": 1
                },
                "cVar11": {
                    "condition": 1,
                    "condition1": 1,
                    "flag": 4,
                    "initial_char": 1,
                    "is_updated": 1,
                    "output": 1,
                    "output_value": 1,
                    "result": 4,
                    "return_value": 4,
                    "should_calculate": 1,
                    "status": 1
                },
                "iVar2": {
                    "current_millis": 8,
                    "current_time": 22
                },
                "iVar3": {
                    "cmp_result": 1,
                    "comparison": 1,
                    "comparison_result": 25
                },
                "local_38": {
                    "local_var1": 2,
                    "local_var38": 1,
                    "local_variable1": 1,
                    "mul_result_low": 2,
                    "new_value1_low": 1,
                    "new_value4": 1,
                    "return_value1": 1,
                    "temp12": 1,
                    "temp13": 2,
                    "temp14_u": 1,
                    "temp15": 1,
                    "temp9": 2,
                    "temp_value15": 1,
                    "temp_value38": 1,
                    "temp_var11": 1,
                    "temp_var14": 2,
                    "temp_var15": 1,
                    "temp_var16": 1,
                    "temp_var19": 1,
                    "temp_var1_3": 1,
                    "temp_var38": 2
                },
                "param_1": {
                    "data": 5,
                    "input": 5,
                    "input_data": 2,
                    "input_param": 2,
                    "input_value": 15,
                    "position": 1,
                    "status": 1
                },
                "uStack_34": {
                    "local_var2": 2,
                    "local_variable2": 1,
                    "mul_result_high": 2,
                    "new_value1_high": 1,
                    "new_value3_high": 1,
                    "return_value2": 1,
                    "stack_var34": 2,
                    "temp10": 2,
                    "temp13": 1,
                    "temp14": 2,
                    "temp15_u": 1,
                    "temp16": 1,
                    "temp_value16": 1,
                    "temp_value34": 1,
                    "temp_var12": 1,
                    "temp_var15": 2,
                    "temp_var16": 1,
                    "temp_var17": 1,
                    "temp_var1_2_1": 1,
                    "temp_var20": 1,
                    "temp_var34": 1
                },
                "uVar10": {
                    "default_temp": 1,
                    "new_value2": 2,
                    "smaller_val_high": 1,
                    "temp7": 8,
                    "temp_value10": 1,
                    "temp_value7": 1,
                    "temp_var10": 6,
                    "temp_var7": 7,
                    "threshold2_1": 1
                },
                "uVar11": {
                    "char_value": 1,
                    "flag": 1,
                    "flag_var": 1,
                    "temp_result3": 1,
                    "temp_var11": 2,
                    "temp_var8": 1
                },
                "uVar12": {
                    "first_value": 1,
                    "greater_val_low": 1,
                    "limit1": 2,
                    "max_value": 1,
                    "max_value1": 4,
                    "min_value1": 1,
                    "temp7_u": 1,
                    "temp8": 1,
                    "temp_value12": 1,
                    "temp_value8": 1,
                    "temp_var12": 6,
                    "temp_var8": 5,
                    "temp_var9": 1,
                    "threshold1": 1,
                    "threshold_value1": 1,
                    "value2_high": 1,
                    "var12": 1
                },
                "uVar13": {
                    "greater_val_high": 1,
                    "limit2": 2,
                    "max_value2": 4,
                    "min_value": 1,
                    "min_value2": 1,
                    "new_value1": 1,
                    "second_value": 1,
                    "temp8_u": 1,
                    "temp9": 1,
                    "temp_value13": 1,
                    "temp_value9": 1,
                    "temp_var10": 1,
                    "temp_var13": 6,
                    "temp_var9": 5,
                    "threshold2": 1,
                    "threshold_value2": 1,
                    "var13": 1
                },
                "uVar14": {
                    "difference1_high": 1,
                    "result_high1": 1,
                    "sub_result_a_high": 1,
                    "temp10": 1,
                    "temp1_high": 1,
                    "temp8": 6,
                    "temp9_u": 1,
                    "temp_result4": 1,
                    "temp_value10": 1,
                    "temp_value14": 1,
                    "temp_var10": 5,
                    "temp_var11": 1,
                    "temp_var14": 6,
                    "temp_var2_2_1": 1,
                    "temp_var8": 1,
                    "var14": 1
                },
                "uVar15": {
                    "accumulated_value1": 1,
                    "calculation_result1": 1,
                    "difference1": 1,
                    "mul_result": 1,
                    "result1": 2,
                    "result_low1": 1,
                    "sub_result_a": 1,
                    "temp1": 1,
                    "temp10_u": 1,
                    "temp11": 1,
                    "temp9": 4,
                    "temp_value11": 1,
                    "temp_value15": 1,
                    "temp_var11": 4,
                    "temp_var12": 1,
                    "temp_var15": 6,
                    "temp_var2_2": 1,
                    "var15": 1
                },
                "uVar16": {
                    "accumulated_value2": 1,
                    "calculation_result2": 1,
                    "difference2": 1,
                    "result2": 2,
                    "result_high2": 1,
                    "sub_result1": 1,
                    "sub_result_b": 1,
                    "temp10": 4,
                    "temp11_u": 1,
                    "temp12": 1,
                    "temp2": 1,
                    "temp_value12": 1,
                    "temp_value16": 1,
                    "temp_var12": 4,
                    "temp_var13": 1,
                    "temp_var16": 6,
                    "temp_var2": 1,
                    "var16": 1
                },
                "uVar17": {
                    "accumulated_value3": 1,
                    "add_result": 2,
                    "final_result": 3,
                    "final_value": 2,
                    "new_result": 1,
                    "result1": 2,
                    "result3": 1,
                    "result_low2": 1,
                    "result_var": 1,
                    "sum1": 1,
                    "temp11": 2,
                    "temp12_u": 1,
                    "temp13": 1,
                    "temp_value13": 1,
                    "temp_value17": 1,
                    "temp_var13": 2,
                    "temp_var14": 1,
                    "temp_var17": 6
                },
                "uVar18": {
                    "accumulated_value4": 1,
                    "calculation_default": 1,
                    "mul_result": 2,
                    "result2": 1,
                    "result2_updated": 1,
                    "result3": 1,
                    "result4": 1,
                    "sub_result2": 1,
                    "temp11": 2,
                    "temp12": 2,
                    "temp13_u": 1,
                    "temp14": 1,
                    "temp_value14": 1,
                    "temp_value18": 1,
                    "temp_var13": 2,
                    "temp_var14": 2,
                    "temp_var15": 1,
                    "temp_var18": 6,
                    "temp_var3": 1,
                    "value1": 1
                },
                "uVar4": {
                    "difference2_high": 1,
                    "sub_result_b_high": 1,
                    "temp1": 8,
                    "temp1_u": 1,
                    "temp2_high": 1,
                    "temp_result1": 1,
                    "temp_value1": 1,
                    "temp_value4": 1,
                    "temp_var1": 7,
                    "temp_var2_1": 1,
                    "temp_var4": 7
                },
                "uVar5": {
                    "temp2": 8,
                    "temp2_u": 1,
                    "temp_value2": 1,
                    "temp_value5": 1,
                    "temp_var2": 7,
                    "temp_var5": 7,
                    "val_a": 1,
                    "value1": 2,
                    "var1": 2
                },
                "uVar6": {
                    "cmp_result_low": 1,
                    "result1_high": 1,
                    "temp3": 8,
                    "temp3_u": 1,
                    "temp_result2": 1,
                    "temp_value3": 1,
                    "temp_value6": 1,
                    "temp_var3": 7,
                    "temp_var6": 7,
                    "threshold2_2": 1,
                    "value1_high": 1
                },
                "uVar7": {
                    "default_value1": 1,
                    "new_value1": 1,
                    "new_value3": 1,
                    "smaller_val_low": 1,
                    "temp4": 8,
                    "temp4_u": 1,
                    "temp_value4": 1,
                    "temp_value7": 1,
                    "temp_var4": 7,
                    "temp_var7": 7,
                    "threshold1_1": 1
                },
                "uVar8": {
                    "temp5": 8,
                    "temp5_u": 1,
                    "temp_value5": 1,
                    "temp_value8": 1,
                    "temp_var5": 7,
                    "temp_var8": 7,
                    "val_b": 1,
                    "value2": 2,
                    "var2": 2
                },
                "uVar9": {
                    "cmp_result_high": 1,
                    "default_value2": 1,
                    "result2": 1,
                    "temp6": 8,
                    "temp6_u": 1,
                    "temp_value6": 1,
                    "temp_value9": 1,
                    "temp_var6": 7,
                    "temp_var9": 7,
                    "value2": 1,
                    "var4": 1
                }
            },
            "called": [
                "FUN_080009dc",
                "FUN_080004f8",
                "FUN_08000194",
                "FUN_08000190",
                "FUN_080058e0",
                "FUN_08000a18"
            ],
            "calling": [
                "FUN_08000cd0"
            ],
            "code": "\nchar calculate_new_value_080016b4(int input_value)\n\n{\n  char result;\n  int current_time;\n  int comparison_result;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  undefined4 temp5;\n  undefined4 temp6;\n  undefined4 temp7;\n  char return_value;\n  undefined4 temp_var12;\n  undefined4 temp_var13;\n  undefined4 temp_var14;\n  undefined8 temp_var15;\n  undefined8 temp_var16;\n  undefined8 temp_var17;\n  undefined8 temp_var18;\n  undefined4 temp13;\n  undefined4 stack_var34;\n  \n  return_value = *(char *)(input_value + 0x70);\n  if (return_value != '\\0') {\n    current_time = millis();\n    if ((uint)(current_time - *(int *)(input_value + 0x44)) < *(uint *)(input_value + 0x58)) {\n      return_value = '\\0';\n    }\n    else {\n      temp2 = **(undefined4 **)(input_value + 0x38);\n      temp5 = (*(undefined4 **)(input_value + 0x38))[1];\n      temp_var15 = __subdf3(**(undefined4 **)(input_value + 0x40),(*(undefined4 **)(input_value + 0x40))[1]);\n      temp_var14 = (undefined4)((ulonglong)temp_var15 >> 0x20);\n      temp_var16 = __subdf3(temp2,temp5,*(undefined4 *)(input_value + 0x50),*(undefined4 *)(input_value + 0x54))\n      ;\n      temp1 = (undefined4)((ulonglong)temp_var16 >> 0x20);\n      temp_var17 = __muldf3((int)temp_var15,temp_var14,*(undefined4 *)(input_value + 0x20),\n                        *(undefined4 *)(input_value + 0x24));\n      temp_var17 = __aeabi_dadd((int)temp_var17,(int)((ulonglong)temp_var17 >> 0x20),\n                            *(undefined4 *)(input_value + 0x48),*(undefined4 *)(input_value + 0x4c));\n      *(undefined8 *)(input_value + 0x48) = temp_var17;\n      result = *(char *)(input_value + 0x71);\n      if (result == '\\0') {\n        temp_var18 = __muldf3((int)temp_var16,temp1,*(undefined4 *)(input_value + 0x18),\n                          *(undefined4 *)(input_value + 0x1c));\n        temp_var17 = __subdf3((int)temp_var17,(int)((ulonglong)temp_var17 >> 0x20),(int)temp_var18,\n                          (int)((ulonglong)temp_var18 >> 0x20));\n        *(undefined8 *)(input_value + 0x48) = temp_var17;\n      }\n      temp3 = *(undefined4 *)(input_value + 0x48);\n      temp6 = *(undefined4 *)(input_value + 0x4c);\n      temp_var12 = *(undefined4 *)(undefined8 *)(input_value + 0x68);\n      temp_var13 = *(undefined4 *)(input_value + 0x6c);\n      temp_var17 = *(undefined8 *)(input_value + 0x68);\n      comparison_result = __aeabi_dcmpgt(temp3,temp6,temp_var12,temp_var13);\n      if (comparison_result == 0) {\n        temp4 = *(undefined4 *)(input_value + 0x60);\n        temp7 = *(undefined4 *)(input_value + 100);\n        comparison_result = __aeabi_dcmplt(temp3,temp6);\n        if (comparison_result != 0) {\n          *(undefined4 *)(input_value + 0x48) = temp4;\n          *(undefined4 *)(input_value + 0x4c) = temp7;\n        }\n      }\n      else {\n        *(undefined4 *)(input_value + 0x48) = temp_var12;\n        *(undefined4 *)(input_value + 0x4c) = temp_var13;\n      }\n      if (result == '\\0') {\n        temp_var15 = 0;\n      }\n      else {\n        temp_var15 = __muldf3((int)temp_var15,temp_var14,*(undefined4 *)(input_value + 0x18),\n                          *(undefined4 *)(input_value + 0x1c));\n      }\n      stack_var34 = (undefined4)((ulonglong)temp_var15 >> 0x20);\n      temp13 = (undefined4)temp_var15;\n      temp_var14 = *(undefined4 *)(input_value + 0x48);\n      temp3 = *(undefined4 *)(input_value + 0x4c);\n      temp_var15 = __muldf3((int)temp_var16,temp1,*(undefined4 *)(input_value + 0x28),\n                        *(undefined4 *)(input_value + 0x2c));\n      temp_var15 = __subdf3(temp_var14,temp3,(int)temp_var15,(int)((ulonglong)temp_var15 >> 0x20));\n      temp_var15 = __aeabi_dadd(temp13,stack_var34,(int)temp_var15,(int)((ulonglong)temp_var15 >> 0x20));\n      temp_var14 = (undefined4)((ulonglong)temp_var15 >> 0x20);\n      comparison_result = __aeabi_dcmplt(temp_var12,temp_var13,(int)temp_var15,temp_var14);\n      if (comparison_result == 0) {\n        temp_var17 = *(undefined8 *)(input_value + 0x60);\n        comparison_result = __aeabi_dcmplt((int)temp_var15,temp_var14,*(undefined4 *)(undefined8 *)(input_value + 0x60),\n                               *(undefined4 *)(input_value + 100));\n        if (comparison_result == 0) {\n          temp_var17 = temp_var15;\n        }\n      }\n      **(undefined8 **)(input_value + 0x3c) = temp_var17;\n      *(undefined4 *)(input_value + 0x50) = temp2;\n      *(undefined4 *)(input_value + 0x54) = temp5;\n      *(int *)(input_value + 0x44) = current_time;\n    }\n  }\n  return return_value;\n}\n\n",
            "current_name": "calculate_new_value_080016b4",
            "entrypoint": "0x080016b4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080016b4": "calculate_new_value_080016b4",
                "cVar1": "result",
                "cVar11": "return_value",
                "iVar2": "current_time",
                "iVar3": "comparison_result",
                "local_38": "temp13",
                "param_1": "input_value",
                "uStack_34": "stack_var34",
                "uVar10": "temp7",
                "uVar12": "temp_var12",
                "uVar13": "temp_var13",
                "uVar14": "temp_var14",
                "uVar15": "temp_var15",
                "uVar16": "temp_var16",
                "uVar17": "temp_var17",
                "uVar18": "temp_var18",
                "uVar4": "temp1",
                "uVar5": "temp2",
                "uVar6": "temp3",
                "uVar7": "temp4",
                "uVar8": "temp5",
                "uVar9": "temp6"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001814": {
            "additional_data": {
                "FUN_08000190": {
                    "float_division": 1
                },
                "FUN_0800040c": {
                    "convert_to_unsigned_float": 1
                },
                "FUN_080004f8": {
                    "convert_to_float": 1
                },
                "FUN_0800074c": {
                    "float_multiplication": 1
                },
                "FUN_080009dc": {
                    "check_condition": 1
                },
                "FUN_08001814": {
                    "calculate_and_set_values": 1,
                    "calculate_and_store_parameters": 1,
                    "calculate_and_store_results": 1,
                    "calculate_and_store_values": 1,
                    "calculate_parameters": 1,
                    "improve_and_store_parameters": 1,
                    "initialize_parameters": 2,
                    "initialize_params": 2,
                    "initialize_values": 1,
                    "parse_params": 1,
                    "process_data": 2,
                    "process_parameters": 1,
                    "process_params": 8,
                    "update_data": 1,
                    "update_params": 5
                },
                "bVar4": {
                    "flag": 1,
                    "flag2": 1,
                    "flag_check": 3,
                    "flag_set": 1,
                    "is_condition_true": 1,
                    "is_flag_equal_one": 1,
                    "is_flag_not_equal_one": 1,
                    "is_flag_one": 1,
                    "is_flag_set": 1,
                    "is_flag_true": 2,
                    "is_not_equal": 2,
                    "is_not_equal_to1": 1,
                    "is_not_equal_to_one": 3,
                    "is_not_one": 1,
                    "is_not_special": 1,
                    "is_one": 1,
                    "is_param_not_equal_to1": 1,
                    "is_true": 1,
                    "is_zero": 1,
                    "not_equal_flag": 1,
                    "param_not_one_flag": 1,
                    "temporary_flag": 1,
                    "var2": 1,
                    "verify_condition": 1
                },
                "iVar1": {
                    "compare_result": 1,
                    "comparison1": 1,
                    "comparison_result": 13,
                    "is_in_range": 1,
                    "is_less": 2,
                    "is_less_than": 9,
                    "is_less_than_flag": 1,
                    "is_lower_bound_valid": 1,
                    "result": 1
                },
                "param_1": {
                    "data_ptr": 1,
                    "output": 6,
                    "output_array": 9,
                    "output_data": 1,
                    "output_params": 1,
                    "param_array": 2,
                    "parameters": 1,
                    "parameters_array": 1,
                    "params": 3,
                    "result_array": 6
                },
                "param_2": {
                    "arg2": 1,
                    "input1": 6,
                    "input_param1": 1,
                    "input_param_1": 1,
                    "lower_bound": 1,
                    "param1": 3,
                    "param2": 9,
                    "param_2": 1,
                    "param_a": 1,
                    "unused": 1,
                    "unused_param": 1,
                    "value1": 3,
                    "var1": 1,
                    "x1": 1
                },
                "param_3": {
                    "current_min_x": 1,
                    "first_param": 1,
                    "float_value1": 1,
                    "input1": 3,
                    "input2": 5,
                    "input_param2": 1,
                    "input_param_2": 1,
                    "left_val1": 1,
                    "lower_bound1": 1,
                    "old_lower_bound": 1,
                    "param2": 1,
                    "param3": 2,
                    "param_b": 1,
                    "start_val1": 1,
                    "start_value": 1,
                    "threshold1": 1,
                    "value1": 2,
                    "value2": 3,
                    "var2": 1,
                    "x1": 1,
                    "x2": 1
                },
                "param_4": {
                    "current_max_x": 1,
                    "end_val1": 1,
                    "end_value": 1,
                    "float_value2": 1,
                    "input2": 3,
                    "input3": 4,
                    "input_param3": 1,
                    "input_param_3": 1,
                    "old_upper_bound": 1,
                    "param3": 1,
                    "param4": 2,
                    "param_c": 1,
                    "right_val1": 1,
                    "second_param": 1,
                    "threshold1": 1,
                    "threshold2": 1,
                    "upper_bound1": 1,
                    "value2": 2,
                    "value3": 3,
                    "var3": 1,
                    "x3": 1,
                    "y1": 1
                },
                "param_5": {
                    "current_min_y": 1,
                    "float_value3": 1,
                    "input3": 4,
                    "input4": 4,
                    "input_param4": 1,
                    "input_param_4": 1,
                    "left_val2": 1,
                    "lower_bound2": 1,
                    "new_lower_bound": 1,
                    "param4": 1,
                    "param5": 2,
                    "param_d": 1,
                    "start_val2": 1,
                    "third_param": 1,
                    "val1": 1,
                    "value1": 1,
                    "value3": 2,
                    "value4": 3,
                    "var4": 1,
                    "x2": 1,
                    "x4": 1
                },
                "param_6": {
                    "current_max_y": 1,
                    "end_val2": 1,
                    "float_value4": 1,
                    "fourth_param": 1,
                    "input4": 4,
                    "input5": 4,
                    "input_param5": 1,
                    "input_param_5": 1,
                    "new_upper_bound": 1,
                    "param5": 1,
                    "param6": 2,
                    "param_e": 1,
                    "right_val2": 1,
                    "upper_bound2": 1,
                    "val2": 1,
                    "value2": 1,
                    "value4": 2,
                    "value5": 3,
                    "var5": 1,
                    "x5": 1,
                    "y2": 1
                },
                "param_7": {
                    "current_min_z": 1,
                    "fifth_param": 1,
                    "float_value5": 1,
                    "input5": 4,
                    "input6": 4,
                    "input_param6": 1,
                    "input_param_6": 1,
                    "left_val3": 1,
                    "lower_bound3": 1,
                    "param6": 1,
                    "param7": 2,
                    "param_f": 1,
                    "start_range": 1,
                    "start_val3": 1,
                    "val3": 1,
                    "value3": 1,
                    "value5": 2,
                    "value6": 3,
                    "var6": 1,
                    "x3": 1,
                    "x6": 1
                },
                "param_8": {
                    "current_max_z": 1,
                    "end_range": 1,
                    "end_val3": 1,
                    "float_value6": 1,
                    "input6": 4,
                    "input7": 4,
                    "input_param7": 1,
                    "input_param_7": 1,
                    "param7": 1,
                    "param8": 2,
                    "param_g": 1,
                    "right_val3": 1,
                    "sixth_param": 1,
                    "upper_bound3": 1,
                    "val4": 1,
                    "value4": 1,
                    "value6": 2,
                    "value7": 3,
                    "var7": 1,
                    "x7": 1,
                    "y3": 1
                },
                "param_9": {
                    "boolean_flag": 1,
                    "condition": 4,
                    "flag": 17,
                    "input8": 2,
                    "input_flag": 1,
                    "input_param8": 1,
                    "input_param_8": 1,
                    "param8": 1,
                    "param_9": 1,
                    "param_is_one": 1,
                    "var8": 1
                },
                "uVar2": {
                    "dividend": 1,
                    "dividend_high": 1,
                    "divisor_high": 2,
                    "float_result": 1,
                    "high_bits": 2,
                    "quotient": 2,
                    "quotient_high": 1,
                    "quotient_temp": 1,
                    "result": 2,
                    "result1": 3,
                    "result_high": 1,
                    "shifted_result": 1,
                    "temp": 4,
                    "temp1": 1,
                    "temp_var": 4,
                    "temporary_var": 1,
                    "u_var2": 1,
                    "upper_part": 1
                },
                "uVar3": {
                    "bitwise_flag": 1,
                    "bool_value": 1,
                    "converted_input8": 1,
                    "dividend_low": 1,
                    "flag_value": 8,
                    "new_value": 2,
                    "param_is_one_flag": 1,
                    "quotient_low": 1,
                    "result2": 3,
                    "special_value": 1,
                    "temp2": 1,
                    "temp_var_2": 1,
                    "u_flag": 1,
                    "u_var3": 3,
                    "val": 1,
                    "value_to_store": 2,
                    "var1": 1
                },
                "uVar5": {
                    "calculation1": 1,
                    "calculation_result1": 2,
                    "converted_input1": 1,
                    "converted_value": 2,
                    "dividend": 2,
                    "division_result1": 3,
                    "division_var": 1,
                    "float_value": 1,
                    "float_value1": 1,
                    "param_float": 1,
                    "result1": 5,
                    "temp1": 2,
                    "temp3": 1,
                    "temp_value1": 1,
                    "temp_var1": 2,
                    "temp_var_3": 1,
                    "u_var5": 2,
                    "var3": 1
                },
                "uVar6": {
                    "calculation2": 1,
                    "calculation_result2": 2,
                    "float_value2": 1,
                    "mul_result": 2,
                    "multiplication_result": 4,
                    "multiplication_var": 1,
                    "product": 1,
                    "product1": 1,
                    "product_result": 1,
                    "result2": 5,
                    "temp2": 2,
                    "temp4": 1,
                    "temp_result_mul": 1,
                    "temp_value2": 1,
                    "temp_var2": 2,
                    "temp_var_4": 1,
                    "u_var6": 2,
                    "var4": 1
                },
                "uVar7": {
                    "calculation3": 1,
                    "calculation_result3": 2,
                    "difference": 1,
                    "difference_result": 1,
                    "float_value3": 1,
                    "result3": 5,
                    "sub_result": 2,
                    "subtraction_result": 5,
                    "subtraction_var": 1,
                    "temp3": 2,
                    "temp5": 1,
                    "temp_result_sub": 1,
                    "temp_value3": 1,
                    "temp_var3": 2,
                    "temp_var_5": 1,
                    "u_var7": 2,
                    "var5": 1
                }
            },
            "called": [
                "FUN_080009dc",
                "FUN_080004f8",
                "FUN_08000190",
                "FUN_0800074c",
                "FUN_0800040c"
            ],
            "calling": [
                "FUN_080018f8",
                "FUN_08001ab0"
            ],
            "code": "\nvoid process_params_08001814(undefined4 *output_array,undefined4 param2,undefined4 input2,undefined4 input3,\n                 undefined4 input4,undefined4 input5,undefined4 input5,undefined4 input6,\n                 int flag)\n\n{\n  int comparison_result;\n  undefined4 temp;\n  undefined flag_value;\n  bool flag_check;\n  undefined8 result1;\n  undefined8 result2;\n  undefined8 subtraction_result;\n  \n  comparison_result = __aeabi_dcmplt(input2,input3,0,0);\n  if (((comparison_result == 0) && (comparison_result = __aeabi_dcmplt(input4,input5,0,0), comparison_result == 0)) &&\n     (comparison_result = __aeabi_dcmplt(input5,input6,0,0), comparison_result == 0)) {\n    output_array[0xd] = flag;\n    flag_check = flag != 1;\n    if (flag_check) {\n      flag = 0;\n    }\n    flag_value = (undefined)flag;\n    if (!flag_check) {\n      flag_value = 1;\n    }\n    *(undefined *)((int)output_array + 0x71) = flag_value;\n    *output_array = input2;\n    output_array[1] = input3;\n    output_array[2] = input4;\n    output_array[3] = input5;\n    output_array[4] = input5;\n    output_array[5] = input6;\n    result1 = __floatunsidf(output_array[0x16]);\n    result1 = __divdf3((int)result1,(int)((ulonglong)result1 >> 0x20),0,0x408f4000);\n    temp = (undefined4)((ulonglong)result1 >> 0x20);\n    output_array[6] = input2;\n    output_array[7] = input3;\n    result2 = __muldf3(input4,input5,(int)result1,temp);\n    *(undefined8 *)(output_array + 8) = result2;\n    result1 = __divdf3(input5,input6,(int)result1,temp);\n    *(undefined8 *)(output_array + 10) = result1;\n    if (output_array[0xc] == 1) {\n      subtraction_result = __subdf3(0,0,input2,input3);\n      *(undefined8 *)(output_array + 6) = subtraction_result;\n      result2 = __subdf3(0,0,(int)result2,(int)((ulonglong)result2 >> 0x20));\n      *(undefined8 *)(output_array + 8) = result2;\n      result1 = __subdf3(0,0,(int)result1,(int)((ulonglong)result1 >> 0x20));\n      *(undefined8 *)(output_array + 10) = result1;\n    }\n  }\n  return;\n}\n\n",
            "current_name": "process_params_08001814",
            "entrypoint": "0x08001814",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001814": "process_params_08001814",
                "bVar4": "flag_check",
                "iVar1": "comparison_result",
                "param_1": "output_array",
                "param_2": "param2",
                "param_3": "input2",
                "param_4": "input3",
                "param_5": "input4",
                "param_6": "input5",
                "param_7": "input5",
                "param_8": "input6",
                "param_9": "flag",
                "uVar2": "temp",
                "uVar3": "flag_value",
                "uVar5": "result1",
                "uVar6": "result2",
                "uVar7": "subtraction_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080018f8": {
            "additional_data": {
                "FUN_080018f8": {
                    "initialize_parameters": 4,
                    "initialize_params": 9,
                    "initialize_process_params": 1,
                    "process_and_return_output": 1,
                    "process_and_return_params": 1,
                    "process_parameters": 12,
                    "process_params": 3
                },
                "input2": {
                    "input1": 1,
                    "input2": 6,
                    "input_param2": 6,
                    "param2": 7,
                    "param3": 1
                },
                "input3": {
                    "input2": 2,
                    "input3": 9,
                    "input_param3": 6,
                    "param3": 3,
                    "param4": 1
                },
                "output_array": {
                    "output": 2,
                    "output_array": 3
                },
                "param1": {
                    "output_array": 2
                },
                "param2": {
                    "output": 2,
                    "output_array": 10,
                    "output_param": 1,
                    "output_size": 1,
                    "param2": 5,
                    "parameter2": 1,
                    "second_param": 1
                },
                "process_params_08001814": {
                    "process_parameters": 4,
                    "process_parameters_internal": 1,
                    "process_params": 10,
                    "process_params_internal": 1
                }
            },
            "called": [
                "FUN_08001814"
            ],
            "calling": [
                "FUN_08000cd0"
            ],
            "code": "\nvoid initialize_process_params_080018f8(void)\n\n{\n  process_params();\n  return;\n}\n\n",
            "current_name": "initialize_process_params_080018f8",
            "entrypoint": "0x080018f8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080018f8": "initialize_process_params_080018f8",
                "process_params_08001814": "process_params"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001918": {
            "additional_data": {
                "FUN_0800040c": {
                    "convert_int_to_double2": 1,
                    "convert_unsigned_int_to_float": 1,
                    "get_value": 1
                },
                "FUN_0800042c": {
                    "convert_float_to_unsigned_int": 1,
                    "convert_int_to_double": 1,
                    "get_address": 1
                },
                "FUN_080004f8": {
                    "convert_float_to_int1": 1,
                    "convert_to_float": 1,
                    "convert_unsigned_to_double": 1
                },
                "FUN_0800074c": {
                    "convert_float_to_int2": 1,
                    "convert_to_unsigned_float": 1,
                    "convert_unsigned_to_double2": 1
                },
                "FUN_08001918": {
                    "calculate_and_update_values": 2,
                    "calculate_div_mul": 1,
                    "calculate_dividend": 1,
                    "calculate_division_and_multiplication": 2,
                    "calculate_new_values": 3,
                    "calculate_updated_values": 1,
                    "compute_division_and_multiplication": 1,
                    "update_data": 1,
                    "update_param": 1,
                    "update_parameter": 1,
                    "update_parameter_value": 1,
                    "update_parameters": 9,
                    "update_params": 4,
                    "update_params_and_calculate": 1,
                    "update_values": 2
                },
                "__divdf3": {
                    "divide_floats": 1
                },
                "__floatsidf": {
                    "convert_to_int": 1
                },
                "__floatunsidf": {
                    "convert_to_unsigned_int": 1
                },
                "__muldf3": {
                    "multiply_floats": 1
                },
                "param_1": {
                    "address": 1,
                    "arg1": 1,
                    "context": 1,
                    "current_params": 1,
                    "data": 2,
                    "data_address": 2,
                    "data_struct": 1,
                    "data_struct_ptr": 1,
                    "input": 3,
                    "input_buffer": 3,
                    "input_data": 2,
                    "input_data_ptr": 1,
                    "memory_address": 1,
                    "obj_address": 1,
                    "obj_ptr": 1,
                    "object_ptr": 1,
                    "p_data": 1,
                    "param1": 2,
                    "param_address": 1,
                    "parameter1": 2,
                    "ptr": 2
                },
                "param_2": {
                    "arg2": 1,
                    "count": 5,
                    "new_param": 1,
                    "new_param_value": 2,
                    "new_value": 6,
                    "num_iterations": 6,
                    "param2": 1,
                    "param_value": 1,
                    "size": 1,
                    "value": 7
                },
                "param_3": {
                    "arg3": 1,
                    "count1": 1,
                    "float_divisor1": 1,
                    "float_param_1": 1,
                    "float_scale1": 1,
                    "float_value1": 1,
                    "param1": 6,
                    "param3": 7,
                    "temp1": 1,
                    "temp_value1": 1,
                    "unk_param1": 1,
                    "unknown1": 2,
                    "unknown_float1": 1,
                    "unknown_value1": 1,
                    "unknown_value_1": 1,
                    "unused_param1": 1,
                    "val1": 1,
                    "value1": 1,
                    "var1": 1
                },
                "param_4": {
                    "arg4": 1,
                    "count2": 1,
                    "float_divisor2": 1,
                    "float_param_2": 1,
                    "float_scale2": 1,
                    "float_value2": 1,
                    "param2": 6,
                    "param4": 7,
                    "temp2": 1,
                    "temp_value2": 1,
                    "unk_param2": 1,
                    "unknown2": 2,
                    "unknown_float2": 1,
                    "unknown_value2": 1,
                    "unknown_value_2": 1,
                    "unused_param2": 1,
                    "val2": 1,
                    "value2": 1,
                    "var2": 1
                },
                "uVar1": {
                    "div_result": 2,
                    "div_result_high": 1,
                    "dividend": 1,
                    "division_result_high": 1,
                    "new_value_high": 1,
                    "quotient": 8,
                    "result": 1,
                    "result1": 8,
                    "result_hi": 1,
                    "result_high": 1,
                    "temp1": 3,
                    "temp_value3": 1,
                    "upper_div_result": 1,
                    "upper_result": 1
                },
                "uVar2": {
                    "conversion_result": 1,
                    "converted_count": 1,
                    "converted_num_iterations": 2,
                    "count_float": 1,
                    "div_result": 1,
                    "dividend": 1,
                    "float_arg1": 1,
                    "float_new_param": 1,
                    "float_new_value": 1,
                    "float_num_iterations": 3,
                    "float_param2": 1,
                    "float_size": 1,
                    "float_value": 2,
                    "float_value1": 4,
                    "float_value3": 1,
                    "floating_value1": 1,
                    "new_param_value_float": 1,
                    "new_value_float": 1,
                    "param2_float": 1,
                    "param_float": 1,
                    "result2": 1,
                    "temp2": 3
                },
                "uVar3": {
                    "conversion_factor": 1,
                    "converted_float_param": 1,
                    "converted_input_data": 1,
                    "converted_param1": 1,
                    "data_float": 1,
                    "data_value": 1,
                    "divisor": 2,
                    "float_arg2": 1,
                    "float_input": 1,
                    "float_param1": 2,
                    "float_unsigned": 1,
                    "float_value": 2,
                    "float_value2": 4,
                    "float_value4": 1,
                    "float_var1": 1,
                    "floating_value2": 1,
                    "mul_result": 1,
                    "param1_float": 1,
                    "param_float": 1,
                    "param_float2": 1,
                    "result3": 1,
                    "temp3": 3,
                    "value": 1
                }
            },
            "called": [
                "FUN_080004f8",
                "FUN_0800042c",
                "FUN_0800074c",
                "FUN_0800040c"
            ],
            "calling": [
                "FUN_08000cd0"
            ],
            "code": "\nvoid update_parameters_08001918(int input,int value,undefined4 param3,undefined4 param4)\n\n{\n  undefined4 result1;\n  undefined8 float_value1;\n  undefined8 float_value2;\n  \n  if (0 < value) {\n    float_value1 = convert_to_int(value);\n    float_value2 = convert_to_unsigned_int(*(undefined4 *)(input + 0x58));\n    float_value1 = divide_floats((int)float_value1,(int)((ulonglong)float_value1 >> 0x20),(int)float_value2,\n                     (int)((ulonglong)float_value2 >> 0x20),param4);\n    result1 = (undefined4)((ulonglong)float_value1 >> 0x20);\n    float_value2 = multiply_floats((int)float_value1,result1,*(undefined4 *)(input + 0x20),\n                     *(undefined4 *)(input + 0x24));\n    *(undefined8 *)(input + 0x20) = float_value2;\n    float_value1 = divide_floats(*(undefined4 *)(input + 0x28),*(undefined4 *)(input + 0x2c),(int)float_value1,\n                     result1);\n    *(undefined8 *)(input + 0x28) = float_value1;\n    *(int *)(input + 0x58) = value;\n  }\n  return;\n}\n\n",
            "current_name": "update_parameters_08001918",
            "entrypoint": "0x08001918",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001918": "update_parameters_08001918",
                "__divdf3": "divide_floats",
                "__floatsidf": "convert_to_int",
                "__floatunsidf": "convert_to_unsigned_int",
                "__muldf3": "multiply_floats",
                "param_1": "input",
                "param_2": "value",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "result1",
                "uVar2": "float_value1",
                "uVar3": "float_value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001960": {
            "additional_data": {
                "FUN_08001960": {
                    "process_params": 1,
                    "update_data": 4,
                    "update_param": 1,
                    "update_parameters": 7,
                    "update_params": 11,
                    "update_params_and_compare": 2,
                    "update_values": 4,
                    "update_values_if_needed": 1
                },
                "iVar1": {
                    "compare_result": 3,
                    "comparison_result": 25,
                    "is_current_min_greater_than_or_equal_to_current_max": 1,
                    "is_equal": 1,
                    "result": 1
                },
                "param_1": {
                    "arg1": 1,
                    "base_address": 6,
                    "base_ptr": 1,
                    "context": 1,
                    "data": 2,
                    "data_buffer": 1,
                    "data_pointer": 1,
                    "data_struct": 2,
                    "function_data": 1,
                    "input_struct": 1,
                    "obj": 3,
                    "obj_address": 2,
                    "obj_ptr": 2,
                    "object": 3,
                    "object_pointer": 1,
                    "object_ptr": 1,
                    "param_pointer": 1,
                    "param_ptr": 1
                },
                "param_2": {
                    "arg1": 1,
                    "arg2": 3,
                    "param1": 1,
                    "param2": 9,
                    "param_2": 2,
                    "param_pointer2": 1,
                    "ptr1": 1,
                    "temp_1": 1,
                    "unnamed_param2": 1,
                    "unused": 7,
                    "unused1": 2,
                    "unused_param": 1,
                    "unused_parameter1": 1
                },
                "param_3": {
                    "current_min": 1,
                    "current_value": 1,
                    "current_x": 1,
                    "new_param1": 11,
                    "new_val1": 1,
                    "new_value1": 4,
                    "old_param1": 2,
                    "param1": 1,
                    "param_a": 1,
                    "val1": 1,
                    "value1": 7
                },
                "param_4": {
                    "current_max": 1,
                    "current_y": 1,
                    "new_param2": 11,
                    "new_val2": 1,
                    "new_value": 1,
                    "new_value2": 4,
                    "old_param2": 2,
                    "param2": 1,
                    "param_b": 1,
                    "val2": 1,
                    "value2": 7
                },
                "param_5": {
                    "check_value1": 1,
                    "comparison_value": 1,
                    "current_value1": 1,
                    "new_min": 1,
                    "new_param1": 2,
                    "new_param3": 11,
                    "new_value3": 2,
                    "new_x": 1,
                    "param3": 1,
                    "param_c": 1,
                    "prev_val1": 1,
                    "val3": 1,
                    "value3": 7
                },
                "param_6": {
                    "check_value2": 1,
                    "current_value2": 1,
                    "new_max": 1,
                    "new_param2": 2,
                    "new_param4": 11,
                    "new_value4": 2,
                    "new_y": 1,
                    "param4": 1,
                    "param_d": 1,
                    "prev_val2": 1,
                    "threshold_value": 1,
                    "val4": 1,
                    "value4": 7
                },
                "puVar2": {
                    "array_ptr": 1,
                    "data": 1,
                    "data_pointer": 3,
                    "data_ptr": 2,
                    "param3_and4_ptr": 1,
                    "param_array_ptr": 1,
                    "param_pointer": 1,
                    "parameter_ptr": 1,
                    "pointer": 1,
                    "pointer_to_data": 1,
                    "pointer_var": 1,
                    "ptr": 6,
                    "ptr2": 1,
                    "ptr_to_compare_parameters": 1,
                    "ptr_to_data": 3,
                    "ptr_to_value": 3,
                    "ptr_to_values": 2,
                    "ptr_to_var": 1
                },
                "uVar3": {
                    "array_value1": 1,
                    "compare_param1": 1,
                    "compare_value1": 1,
                    "current_value1": 1,
                    "data1": 3,
                    "data_min": 1,
                    "data_value1": 1,
                    "old_value1": 1,
                    "param3": 1,
                    "param_array_value1": 1,
                    "prev_value1": 2,
                    "ptr_data1": 1,
                    "ptr_to_value1": 1,
                    "ptr_val1": 2,
                    "temp1": 3,
                    "temp_value1": 6,
                    "temp_var1": 2,
                    "val1": 1,
                    "value1": 1
                },
                "uVar4": {
                    "compare_param2": 1,
                    "compare_value2": 1,
                    "current_value2": 1,
                    "data2": 2,
                    "data_max": 1,
                    "data_value2": 1,
                    "new_value1": 1,
                    "param4": 1,
                    "param_array_value2": 1,
                    "prev_value2": 2,
                    "ptr_data2": 1,
                    "ptr_to_value2": 1,
                    "ptr_val2": 2,
                    "temp2": 3,
                    "temp_3": 1,
                    "temp_value1": 1,
                    "temp_value2": 6,
                    "temp_var2": 2,
                    "val2": 1,
                    "value2": 1
                },
                "uVar5": {
                    "array_value2": 1,
                    "compare_value3": 1,
                    "comparison_value1": 1,
                    "data2": 1,
                    "data3": 2,
                    "data_value3": 1,
                    "new_data_min": 1,
                    "new_param1_temp": 1,
                    "new_temp_value1": 1,
                    "new_value1": 1,
                    "old_value2": 1,
                    "param1": 1,
                    "prev_val1_copy": 1,
                    "ptr_data3": 1,
                    "ptr_to_value3": 1,
                    "ptr_val3": 1,
                    "temp3": 3,
                    "temp_value1": 2,
                    "temp_value3": 6,
                    "temp_var3": 2,
                    "tmp_val1": 1
                },
                "uVar6": {
                    "compare_value4": 1,
                    "comparison_value2": 1,
                    "data4": 2,
                    "data_value4": 1,
                    "new_data_max": 1,
                    "new_param2_temp": 1,
                    "new_temp_value2": 1,
                    "new_value2": 2,
                    "param2": 1,
                    "prev_val2_copy": 1,
                    "ptr_data4": 1,
                    "ptr_to_value4": 1,
                    "ptr_val4": 1,
                    "temp4": 3,
                    "temp_4": 1,
                    "temp_value2": 3,
                    "temp_value4": 6,
                    "temp_var4": 2,
                    "tmp_val2": 1
                }
            },
            "called": [
                "FUN_080009dc",
                "FUN_08000a04",
                "FUN_08000a18"
            ],
            "calling": [
                "FUN_08001ab0",
                "FUN_08000cd0"
            ],
            "code": "\nvoid update_params_and_compare_08001960(int base_address,undefined4 param2,undefined4 new_param1,undefined4 new_param2,\n                 undefined4 new_param3,undefined4 new_param4)\n\n{\n  int comparison_result;\n  undefined4 *ptr;\n  undefined4 temp_value1;\n  undefined4 temp_value2;\n  undefined4 temp_value3;\n  undefined4 temp_value4;\n  \n  comparison_result = __aeabi_dcmpge(new_param1,new_param2,new_param3,new_param4,new_param2);\n  if (comparison_result == 0) {\n    *(undefined4 *)(base_address + 0x60) = new_param1;\n    *(undefined4 *)(base_address + 100) = new_param2;\n    *(undefined4 *)(base_address + 0x68) = new_param3;\n    *(undefined4 *)(base_address + 0x6c) = new_param4;\n    if (*(char *)(base_address + 0x70) != '\\0') {\n      ptr = *(undefined4 **)(base_address + 0x3c);\n      temp_value1 = *ptr;\n      temp_value3 = ptr[1];\n      comparison_result = __aeabi_dcmplt(new_param3,new_param4,temp_value1,temp_value3);\n      if (comparison_result == 0) {\n        comparison_result = __aeabi_dcmpgt(new_param1,new_param2,temp_value1,temp_value3);\n        if (comparison_result != 0) {\n          *ptr = new_param1;\n          ptr[1] = new_param2;\n        }\n      }\n      else {\n        *ptr = new_param3;\n        ptr[1] = new_param4;\n      }\n      temp_value1 = *(undefined4 *)(base_address + 0x48);\n      temp_value3 = *(undefined4 *)(base_address + 0x4c);\n      temp_value2 = *(undefined4 *)(base_address + 0x68);\n      temp_value4 = *(undefined4 *)(base_address + 0x6c);\n      comparison_result = __aeabi_dcmpgt(temp_value1,temp_value3,temp_value2,temp_value4);\n      if (comparison_result != 0) {\n        *(undefined4 *)(base_address + 0x48) = temp_value2;\n        *(undefined4 *)(base_address + 0x4c) = temp_value4;\n        return;\n      }\n      temp_value2 = *(undefined4 *)(base_address + 0x60);\n      temp_value4 = *(undefined4 *)(base_address + 100);\n      comparison_result = __aeabi_dcmplt(temp_value1,temp_value3,temp_value2,temp_value4);\n      if (comparison_result != 0) {\n        *(undefined4 *)(base_address + 0x48) = temp_value2;\n        *(undefined4 *)(base_address + 0x4c) = temp_value4;\n      }\n    }\n  }\n  return;\n}\n\n",
            "current_name": "update_params_and_compare_08001960",
            "entrypoint": "0x08001960",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001960": "update_params_and_compare_08001960",
                "iVar1": "comparison_result",
                "param_1": "base_address",
                "param_2": "param2",
                "param_3": "new_param1",
                "param_4": "new_param2",
                "param_5": "new_param3",
                "param_6": "new_param4",
                "puVar2": "ptr",
                "uVar3": "temp_value1",
                "uVar4": "temp_value2",
                "uVar5": "temp_value3",
                "uVar6": "temp_value4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080019f6": {
            "additional_data": {
                "FUN_080019f6": {
                    "check_and_swap_values": 1,
                    "compare_and_assign": 1,
                    "compare_and_assign_values": 2,
                    "compare_and_replace_values": 1,
                    "compare_and_set_min_max_values": 1,
                    "compare_and_set_values": 4,
                    "compare_and_set_variables": 1,
                    "compare_and_swap": 1,
                    "compare_and_swap_values": 1,
                    "compare_and_update_values": 4,
                    "compare_values_and_update": 1,
                    "evaluate_and_update_values": 1,
                    "find_largest_value": 2,
                    "find_largest_values": 1,
                    "find_max_and_min": 1,
                    "update_data": 1,
                    "update_parameters": 1,
                    "update_values": 4,
                    "update_variable_based_on_comparison": 1,
                    "update_variables": 1
                },
                "iVar1": {
                    "comparison_result": 27,
                    "result": 4
                },
                "param_1": {
                    "address": 1,
                    "array": 1,
                    "base_address": 3,
                    "data": 2,
                    "data_array": 1,
                    "data_pointer": 1,
                    "input": 11,
                    "input_array": 1,
                    "input_data": 1,
                    "input_param": 2,
                    "input_value": 1,
                    "obj_ptr": 1,
                    "object_address": 1,
                    "object_ptr": 1,
                    "parameter": 1,
                    "ptr_to_values": 1,
                    "value_container": 1
                },
                "uVar2": {
                    "current_val1": 1,
                    "first_compare_value": 1,
                    "first_comparison_operand": 1,
                    "first_value": 10,
                    "largest_value": 1,
                    "largest_value1": 1,
                    "max_value": 2,
                    "min_value": 1,
                    "new_value": 1,
                    "temp_value_1": 1,
                    "temp_var1": 4,
                    "value1": 6,
                    "value1_1": 1
                },
                "uVar3": {
                    "array_value1": 1,
                    "current_value1": 1,
                    "data_value1": 1,
                    "first_pointer_value": 1,
                    "first_value": 2,
                    "input_value1": 1,
                    "ptr_array1": 1,
                    "ptr_value1": 1,
                    "second_compare_value1": 1,
                    "second_comparison_operand": 1,
                    "second_value": 8,
                    "val1_ptr": 1,
                    "value1": 4,
                    "value1_2": 1,
                    "value2": 4,
                    "value_1": 1,
                    "var1": 1
                },
                "uVar4": {
                    "array_value2": 1,
                    "current_value2": 1,
                    "data_value2": 1,
                    "input_value2": 1,
                    "ptr_value2": 1,
                    "second_compare_value2": 1,
                    "second_pointer_value": 1,
                    "second_value": 3,
                    "temp1": 1,
                    "third_comparison_operand": 1,
                    "third_value": 7,
                    "val2_ptr": 1,
                    "value2": 5,
                    "value2_1": 1,
                    "value3": 3,
                    "value_2": 1,
                    "var2": 1
                },
                "uVar5": {
                    "current_val2": 1,
                    "fourth_comparison_operand": 1,
                    "fourth_value": 7,
                    "largest_value2": 1,
                    "max_value": 1,
                    "min_value": 2,
                    "second_value": 2,
                    "temp2": 1,
                    "temp_value": 1,
                    "temp_value_2": 1,
                    "temp_var2": 4,
                    "third_compare_value": 1,
                    "third_value": 1,
                    "value2": 1,
                    "value2_2": 1,
                    "value3": 2,
                    "value4": 3
                }
            },
            "called": [
                "FUN_080009dc",
                "FUN_08000a18"
            ],
            "calling": [
                "FUN_08001a44"
            ],
            "code": "\nvoid compare_values_and_update_080019f6(int input)\n\n{\n  int comparison_result;\n  undefined4 first_value;\n  undefined4 second_value;\n  undefined4 third_value;\n  undefined4 fourth_value;\n  \n  second_value = **(undefined4 **)(input + 0x3c);\n  third_value = (*(undefined4 **)(input + 0x3c))[1];\n  *(undefined4 *)(input + 0x48) = second_value;\n  *(undefined4 *)(input + 0x4c) = third_value;\n  first_value = (*(undefined4 **)(input + 0x38))[1];\n  *(undefined4 *)(input + 0x50) = **(undefined4 **)(input + 0x38);\n  *(undefined4 *)(input + 0x54) = first_value;\n  first_value = *(undefined4 *)(input + 0x68);\n  fourth_value = *(undefined4 *)(input + 0x6c);\n  comparison_result = __aeabi_dcmpgt(second_value,third_value,first_value,fourth_value);\n  if (comparison_result == 0) {\n    first_value = *(undefined4 *)(input + 0x60);\n    fourth_value = *(undefined4 *)(input + 100);\n    comparison_result = __aeabi_dcmplt(second_value,third_value,first_value,fourth_value);\n    if (comparison_result != 0) {\n      *(undefined4 *)(input + 0x48) = first_value;\n      *(undefined4 *)(input + 0x4c) = fourth_value;\n    }\n    return;\n  }\n  *(undefined4 *)(input + 0x48) = first_value;\n  *(undefined4 *)(input + 0x4c) = fourth_value;\n  return;\n}\n\n",
            "current_name": "compare_values_and_update_080019f6",
            "entrypoint": "0x080019f6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080019f6": "compare_values_and_update_080019f6",
                "iVar1": "comparison_result",
                "param_1": "input",
                "uVar2": "first_value",
                "uVar3": "second_value",
                "uVar4": "third_value",
                "uVar5": "fourth_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001a44": {
            "additional_data": {
                "FUN_08001a44": {
                    "initialize_param_flag": 1,
                    "set_flag": 4,
                    "set_flag_based_on_condition": 1,
                    "set_flag_based_on_parameter": 1,
                    "set_flag_if_initialized": 2,
                    "set_flag_if_param2_is_one": 1,
                    "set_flag_if_param_is_one": 2,
                    "set_flag_value": 1,
                    "set_initialization_flag": 2,
                    "set_initialized_flag": 1,
                    "update_flag": 5,
                    "update_flag_if_initialized": 1,
                    "update_flag_value": 1,
                    "update_param_status": 1,
                    "update_param_value": 1,
                    "update_parameter": 1,
                    "update_parameter_value": 1,
                    "update_status": 4
                },
                "Initialize": {
                    "initialize": 1,
                    "initialize_function": 1
                },
                "param_1": {
                    "address": 4,
                    "affected_address": 1,
                    "base_address": 5,
                    "data_address": 1,
                    "data_pointer": 1,
                    "flag_address": 1,
                    "function_address": 1,
                    "memory_address": 3,
                    "obj_address": 1,
                    "object_address": 10,
                    "param_address": 1,
                    "ptr_to_memory": 1,
                    "target_address": 1
                },
                "param_2": {
                    "check_value": 2,
                    "condition": 2,
                    "flag": 11,
                    "flag_value": 9,
                    "status": 2,
                    "status_flag": 2,
                    "value": 3
                },
                "uVar1": {
                    "flag": 5,
                    "flag_status": 2,
                    "flag_to_set": 1,
                    "flag_value": 3,
                    "new_flag_value": 4,
                    "new_status": 3,
                    "new_value": 10,
                    "status": 1,
                    "updated_flag_value": 1,
                    "updated_value": 1
                }
            },
            "called": [
                "FUN_080019f6"
            ],
            "calling": [
                "FUN_08000cd0"
            ],
            "code": "\nvoid update_param_status_08001a44(int object_address,int flag)\n\n{\n  undefined new_value;\n  \n  if (flag == 1) {\n    new_value = 1;\n    if (*(char *)(object_address + 0x70) == '\\0') {\n      initialize();\n    }\n  }\n  else {\n    new_value = 0;\n  }\n  *(undefined *)(object_address + 0x70) = new_value;\n  return;\n}\n\n",
            "current_name": "update_param_status_08001a44",
            "entrypoint": "0x08001a44",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001a44": "update_param_status_08001a44",
                "Initialize": "initialize",
                "param_1": "object_address",
                "param_2": "flag",
                "uVar1": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001a66": {
            "additional_data": {
                "FUN_08001a66": {
                    "update_and_assign_values": 1,
                    "update_and_set_values": 1,
                    "update_parameters": 8,
                    "update_params": 9,
                    "update_values": 10,
                    "update_values_if_changed": 2
                },
                "__subdf3": {
                    "compute_subtraction": 1,
                    "perform_subtraction": 1
                },
                "data_structure": {
                    "data": 1
                },
                "new_value": {
                    "value": 1
                },
                "param_1": {
                    "data": 4,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "data_struct": 3,
                    "data_structure": 1,
                    "input_data": 1,
                    "input_struct": 1,
                    "instance": 1,
                    "obj": 1,
                    "obj_address": 1,
                    "obj_ptr": 3,
                    "object_address": 4,
                    "object_pointer": 1,
                    "object_ptr": 2,
                    "param_pointer": 1,
                    "param_ptr": 1,
                    "struct_address": 3,
                    "structure_offset": 1
                },
                "param_2": {
                    "input_value": 1,
                    "new_param": 7,
                    "new_param_value": 2,
                    "new_value": 19,
                    "value": 1,
                    "value_to_update": 1
                },
                "param_3": {
                    "old_value_1": 1,
                    "param1": 2,
                    "param3": 9,
                    "prev_value1": 1,
                    "temp_param3": 1,
                    "temp_param_1": 1,
                    "temp_value1": 2,
                    "temp_value_1": 1,
                    "unknown_param1": 1,
                    "unused1": 1,
                    "unused_param": 3,
                    "unused_param1": 5,
                    "unused_param_1": 1,
                    "value1": 1,
                    "var1": 1
                },
                "param_4": {
                    "old_value_2": 1,
                    "param2": 2,
                    "param4": 10,
                    "param_4": 1,
                    "param_4_value": 1,
                    "prev_value2": 1,
                    "temp_param4": 1,
                    "temp_param_2": 1,
                    "temp_value2": 2,
                    "temp_value_2": 1,
                    "undefined_value": 1,
                    "unknown_param2": 1,
                    "unused2": 1,
                    "unused_param2": 4,
                    "unused_param_2": 1,
                    "value2": 1,
                    "var2": 1
                },
                "result": {
                    "result": 1
                },
                "temp_value_1": {
                    "temp1": 1
                },
                "temp_value_2": {
                    "temp2": 1
                },
                "uVar1": {
                    "calculated_value": 1,
                    "computed_result": 1,
                    "result": 23,
                    "updated_value": 1
                }
            },
            "called": [
                "FUN_08000190"
            ],
            "calling": [
                "FUN_08001ab0"
            ],
            "code": "\nvoid update_values_if_changed_08001a66(int object_address,int new_value,undefined4 param3,undefined4 param4)\n\n{\n  undefined8 result;\n  \n  if ((*(char *)(object_address + 0x70) != '\\0') && (*(int *)(object_address + 0x30) != new_value)) {\n    result = compute_subtraction(0,0,*(undefined4 *)(object_address + 0x18),*(undefined4 *)(object_address + 0x1c),param4);\n    *(undefined8 *)(object_address + 0x18) = result;\n    result = compute_subtraction(0,0,*(undefined4 *)(object_address + 0x20),*(undefined4 *)(object_address + 0x24));\n    *(undefined8 *)(object_address + 0x20) = result;\n    result = compute_subtraction(0,0,*(undefined4 *)(object_address + 0x28),*(undefined4 *)(object_address + 0x2c));\n    *(undefined8 *)(object_address + 0x28) = result;\n  }\n  *(int *)(object_address + 0x30) = new_value;\n  return;\n}\n\n",
            "current_name": "update_values_if_changed_08001a66",
            "entrypoint": "0x08001a66",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001a66": "update_values_if_changed_08001a66",
                "__subdf3": "compute_subtraction",
                "param_1": "object_address",
                "param_2": "new_value",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001ab0": {
            "additional_data": {
                "FUNGURB": {
                    "update_controller_params": 1
                },
                "FUN_08001ab0": {
                    "initialize_controller": 24,
                    "process_parameters": 1,
                    "set_and_process_params": 1,
                    "update_controller_params": 4
                },
                "SetControllerDirection": {
                    "set_controller_direction": 20,
                    "set_direction": 1
                },
                "SetOutputLimits": {
                    "set_limits": 1,
                    "set_output_limits": 20
                },
                "extraout_r1": {
                    "additional_output": 1,
                    "extra_out": 1,
                    "extra_output": 6,
                    "extra_result": 1,
                    "extra_return_val": 1,
                    "new_param": 1,
                    "output": 5,
                    "output1": 1,
                    "output_array": 1,
                    "output_limit": 1,
                    "output_value": 1,
                    "result1": 1,
                    "return_value": 7
                },
                "get_current_milliseconds_080058e0": {
                    "get_current_milliseconds": 4
                },
                "iVar1": {
                    "current_millis": 5,
                    "current_milliseconds": 6,
                    "current_time": 8,
                    "millis_difference": 1,
                    "milliseconds": 2,
                    "milliseconds_diff": 1,
                    "milliseconds_difference": 1,
                    "milliseconds_elapsed": 1,
                    "time_difference": 1
                },
                "milis": {
                    "get_current_milliseconds": 1
                },
                "millis": {
                    "get_current_milliseconds": 12,
                    "get_current_milliseconds_080058e0": 1,
                    "get_millis": 1,
                    "get_milliseconds": 2
                },
                "param_1": {
                    "base_address": 6,
                    "controller": 3,
                    "controller_address": 22
                },
                "param_10": {
                    "input6": 2,
                    "input7": 2,
                    "param10": 15,
                    "param8": 3,
                    "param9": 4,
                    "param_10": 3
                },
                "param_11": {
                    "input7": 2,
                    "input8": 2,
                    "param10": 4,
                    "param11": 15,
                    "param9": 3,
                    "param_11": 3
                },
                "param_12": {
                    "controller_direction": 12,
                    "direction": 2,
                    "param10": 1,
                    "param11": 2,
                    "param12": 11,
                    "param4": 1,
                    "param_12": 2
                },
                "param_2": {
                    "input1": 1,
                    "limit_param": 1,
                    "param1": 5,
                    "param2": 21,
                    "param_2": 2,
                    "parameter2": 1
                },
                "param_3": {
                    "input2": 1,
                    "param2": 5,
                    "param3": 21,
                    "param_3": 3,
                    "parameter3": 1
                },
                "param_4": {
                    "input3": 1,
                    "param3": 5,
                    "param4": 21,
                    "param_4": 3,
                    "parameter4": 1
                },
                "param_5": {
                    "input1": 2,
                    "input2": 7,
                    "param4": 4,
                    "param5": 13,
                    "param_5": 3
                },
                "param_6": {
                    "input2": 2,
                    "input3": 7,
                    "param5": 4,
                    "param6": 13,
                    "param_6": 3
                },
                "param_7": {
                    "input3": 2,
                    "input4": 2,
                    "param5": 3,
                    "param6": 4,
                    "param7": 15,
                    "param_7": 3
                },
                "param_8": {
                    "input4": 2,
                    "input5": 2,
                    "param6": 3,
                    "param7": 4,
                    "param8": 15,
                    "param_8": 3
                },
                "param_9": {
                    "input5": 2,
                    "input6": 2,
                    "param7": 3,
                    "param8": 4,
                    "param9": 15,
                    "param_9": 3
                },
                "process_params_08001814": {
                    "process_parameters": 3,
                    "process_params": 19,
                    "update_params_and_compare": 1
                },
                "update_params_and_compare_08001960": {
                    "update_and_compare_params": 1,
                    "update_params_and_compare": 5
                },
                "update_values_if_changed_08001a66": {
                    "update_values_if_changed": 6
                }
            },
            "called": [
                "FUN_080058e0",
                "FUN_08001960",
                "FUN_08001a66",
                "FUN_08001814"
            ],
            "calling": [
                "FUN_08001b18"
            ],
            "code": "\nint initialize_controller_08001ab0(int controller_address,undefined4 param2,undefined4 param3,undefined4 param4,\n                undefined4 param5,undefined4 param6,undefined4 param7,undefined4 param8,\n                undefined4 param9,undefined4 param10,undefined4 param11,undefined4 controller_direction)\n\n{\n  int current_time;\n  undefined4 return_value;\n  \n  *(undefined4 *)(controller_address + 0x3c) = param3;\n  *(undefined4 *)(controller_address + 0x38) = param2;\n  *(undefined4 *)(controller_address + 0x40) = param4;\n  *(undefined *)(controller_address + 0x70) = 0;\n  set_output_limits(controller_address,param2,0,0,0,0x406fe000);\n  *(undefined4 *)(controller_address + 0x58) = 100;\n  set_controller_direction(controller_address,controller_direction);\n  process_params(controller_address,return_value,param5,param6,param7,param8,param9,param10,param11);\n  current_time = get_current_milliseconds();\n  *(int *)(controller_address + 0x44) = current_time - *(int *)(controller_address + 0x58);\n  return controller_address;\n}\n\n",
            "current_name": "initialize_controller_08001ab0",
            "entrypoint": "0x08001ab0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001ab0": "initialize_controller_08001ab0",
                "SetControllerDirection": "set_controller_direction",
                "SetOutputLimits": "set_output_limits",
                "extraout_r1": "return_value",
                "iVar1": "current_time",
                "millis": "get_current_milliseconds",
                "param_1": "controller_address",
                "param_10": "param10",
                "param_11": "param11",
                "param_12": "controller_direction",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "param_6": "param6",
                "param_7": "param7",
                "param_8": "param8",
                "param_9": "param9",
                "process_params_08001814": "process_params"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001b18": {
            "additional_data": {
                "FUN_08001b18": {
                    "initialize": 1,
                    "initialize_and_return": 11,
                    "initialize_and_return_controller": 1,
                    "initialize_and_return_param": 13,
                    "initialize_and_return_parameter": 1,
                    "initialize_controller": 3,
                    "initialize_controller_and_return": 1
                },
                "controller_address": {
                    "address": 1,
                    "controller_addr": 3
                },
                "initialize_controller_08001ab0": {
                    "initialize_controller": 25,
                    "initialize_controller_sub": 1
                },
                "param2": {
                    "parameter2": 1,
                    "sub_param2": 1
                },
                "param3": {
                    "parameter3": 1,
                    "sub_param3": 1
                },
                "param4": {
                    "parameter4": 1,
                    "sub_param4": 1
                },
                "param_1": {
                    "controller_address": 1,
                    "input": 3,
                    "input_param": 12,
                    "input_parameter": 3,
                    "input_value": 4,
                    "param": 4,
                    "parameter": 1,
                    "result": 1,
                    "return_value": 1,
                    "user_input": 1
                }
            },
            "called": [
                "FUN_08001ab0"
            ],
            "calling": [
                "FUN_08000b08"
            ],
            "code": "\nundefined4 initialize_and_return_param_08001b18(undefined4 input_param)\n\n{\n  initialize_controller();\n  return input_param;\n}\n\n",
            "current_name": "initialize_and_return_param_08001b18",
            "entrypoint": "0x08001b18",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001b18": "initialize_and_return_param_08001b18",
                "initialize_controller_08001ab0": "initialize_controller",
                "param_1": "input_param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001b48": {
            "additional_data": {
                "FUN_08001b48": {
                    "configure_clock": 2,
                    "configure_clocks": 2,
                    "configure_hardware": 1,
                    "configure_system": 3,
                    "configure_system_clock": 3,
                    "initialize_clock": 1,
                    "initialize_clocks": 1,
                    "initialize_hardware": 2,
                    "initialize_system": 16
                },
                "FUN_08002494": {
                    "configure_nvic_priority": 1,
                    "set_sys_tick_config": 1,
                    "set_systick_config": 1
                },
                "FUN_08002514": {
                    "configure_interrupt_vector": 1,
                    "error_handler": 2
                },
                "FUN_08002560": {
                    "configure_system_tick": 1,
                    "set_error_priority": 1,
                    "set_priority": 1
                },
                "FUN_08003688": {
                    "configure_clock": 1,
                    "osc_periph_clk_config": 1,
                    "setup_flash_latency": 1
                },
                "FUN_08003ad4": {
                    "clock_config": 1,
                    "configure_oscillator": 1,
                    "wait_plllock": 1
                },
                "FUN_08003c44": {
                    "get_hclk_freq": 1,
                    "get_pll_status": 1,
                    "get_system_frequency": 1
                },
                "FUN_08003c90": {
                    "configure_nvic": 1,
                    "configure_periph_clock": 1,
                    "update_sys_tick": 1
                },
                "FUN_08004d40": {
                    "configure_nvic_priority_group": 1,
                    "configure_systick": 1,
                    "start_sys_tick": 1
                },
                "HAL_NVIC_SetPriority": {
                    "set_nvic_priority": 2,
                    "set_priority": 1
                },
                "HAL_RCCEx_PeriphCLKConfig": {
                    "configure_periph_clock": 3
                },
                "HAL_RCC_ClockConfig": {
                    "configure_clock": 2,
                    "configure_clocks": 1
                },
                "HAL_RCC_GetHCLKFreq": {
                    "get_hclk_frequency": 3
                },
                "HAL_RCC_OscConfig": {
                    "configure_oscillator": 3
                },
                "HAL_SYSTICK_CLKSourceConfig": {
                    "configure_sys_tick_clock_source": 2,
                    "configure_systick_clock": 1
                },
                "HAL_SYSTICK_Config": {
                    "configure_sys_tick": 2,
                    "configure_systick": 1
                },
                "_Error_Handler": {
                    "error_handler": 1,
                    "handle_error": 2
                },
                "iVar1": {
                    "error_code": 1,
                    "result": 13,
                    "return_value": 1,
                    "state": 1,
                    "status": 1
                },
                "initializeSystem_result": {
                    "initialize_system_result": 1
                },
                "initializeSystem_status": {
                    "initialize_system_status": 1
                },
                "local_10": {
                    "ahb_prescaler": 2,
                    "apb2_clock_divider": 1,
                    "apb2_prescaler": 1,
                    "apb2_prescaler_config": 1,
                    "clk_mgmt_config": 1,
                    "clock_config_param3": 1,
                    "clock_config_sws": 1,
                    "clock_divider": 1,
                    "clock_output": 1,
                    "enable_periph_clk": 1,
                    "flash_latency": 1,
                    "hclk_config": 1,
                    "osc_config_hse_divider": 1,
                    "osc_config_param4": 1,
                    "pclk1_prescaler": 1,
                    "pclk_config": 1,
                    "peripheral_config": 1,
                    "pll_state": 1,
                    "sys_tick_config": 1,
                    "system_clk_source": 1,
                    "system_clock_divider": 1,
                    "systick_config_param": 1,
                    "var4": 1
                },
                "local_14": {
                    "apb1_clock_divider": 1,
                    "apb1_prescaler": 2,
                    "apb1_prescaler_config": 1,
                    "clock_config_param2": 2,
                    "clock_config_source": 1,
                    "clock_divider": 1,
                    "clock_prescaler": 1,
                    "clock_source": 2,
                    "clock_type": 1,
                    "config_clock": 1,
                    "hal_rcc_osc_config_unknown": 1,
                    "hclk_prescaler": 1,
                    "osc_config_param3": 1,
                    "peripheral_clock_config_param": 1,
                    "peripheral_clock_division": 1,
                    "peripheral_config": 3,
                    "pll_mul": 1,
                    "pll_multiplier": 1,
                    "power_supply_config": 1,
                    "rcc_clk_init_struct": 1,
                    "source_conf": 1,
                    "sys_clock_config": 1,
                    "var3": 1,
                    "voltage_scale": 2
                },
                "local_1c": {
                    "ahb_prescaler": 2,
                    "ahb_prescaler_config": 1,
                    "clock_config": 2,
                    "clock_config_param1": 2,
                    "clock_config_value": 1,
                    "clock_divider": 2,
                    "clock_frequency": 2,
                    "clock_source": 2,
                    "configure_value": 1,
                    "external_clock_frequency": 1,
                    "flash_latency": 2,
                    "gpio_config": 2,
                    "osc_config_clock_type": 1,
                    "osc_config_param2": 1,
                    "osc_periph_clk_config": 1,
                    "oscillator_config": 1,
                    "periph_clk_init2": 1,
                    "pll_source": 1,
                    "sysclk_config_param": 1,
                    "sysclk_freq": 1,
                    "system_clock_divider": 1,
                    "system_clock_frequency": 1,
                    "var2": 1
                },
                "local_20": {
                    "clk_divider": 1,
                    "clock_conf": 1,
                    "clock_config": 4,
                    "clock_config_param": 1,
                    "clock_source": 5,
                    "clock_source_config": 1,
                    "configure_flag": 1,
                    "cpu_voltage_scale": 1,
                    "enable_clock": 1,
                    "osc_config_param1": 1,
                    "osc_config_result": 1,
                    "oscillator_config": 1,
                    "oscillator_config_length": 1,
                    "oscillator_source": 1,
                    "oscillator_state": 1,
                    "periph_clk_init": 1,
                    "rtc_clock_config": 1,
                    "startup_time": 1,
                    "sysclk_source": 1,
                    "system_clock_config": 1,
                    "system_clock_source": 2,
                    "usb_clock_source": 1,
                    "var1": 1
                },
                "local_30": {
                    "config_oscillator": 1,
                    "osc_config": 2,
                    "osc_config_array": 2,
                    "osc_config_params": 2,
                    "oscillator_conf": 1,
                    "oscillator_config": 14,
                    "oscillator_config_array": 1,
                    "oscillator_config_params": 1,
                    "oscillator_params": 1,
                    "power_config": 1
                },
                "local_34": {
                    "ahb_divider": 1,
                    "apb1_clock": 1,
                    "apb1_divider": 2,
                    "apb1_prescaler": 1,
                    "clock_config2_param5": 1,
                    "clock_config_param5": 1,
                    "clock_config_var5": 1,
                    "clock_pll_multiplication_factor": 1,
                    "clock_source_config_param5": 1,
                    "fast_clock": 1,
                    "flash_config": 1,
                    "hsediv": 1,
                    "pclk2_divider": 1,
                    "pclk2_prescaler": 1,
                    "pclk_config": 1,
                    "pll_multiplier_config_param": 1,
                    "pll_state": 1,
                    "plldivider": 1,
                    "pllmul": 1,
                    "pllprediv": 1,
                    "prescaler_config": 1,
                    "return_val": 1,
                    "sysclk_source": 2
                },
                "local_38": {
                    "ahb_clock": 1,
                    "ahb_clock_divider": 1,
                    "ahb_divider": 2,
                    "ahb_prescaler": 1,
                    "apb1_clock_divider": 1,
                    "apb2_clock_divider": 1,
                    "apb2_prescaler": 1,
                    "apb2_prescaler_config_param": 1,
                    "clock_config2_param4": 1,
                    "clock_config_param4": 1,
                    "clock_config_var4": 1,
                    "clock_prescaler": 1,
                    "clock_source_config_param4": 1,
                    "hclk_config": 1,
                    "hse_prediv": 2,
                    "hserange": 1,
                    "hsi_divider": 1,
                    "hsiclockdivider": 1,
                    "interrupt_priority": 1,
                    "pclk1_divider": 1,
                    "pclk1_prescaler": 1,
                    "pll_divider": 1,
                    "pll_source": 1,
                    "pllsource": 1,
                    "pllxtpre": 1,
                    "rcc_periph_clk_config": 1,
                    "sysclock_source": 1
                },
                "local_3c": {
                    "ahb_divider": 1,
                    "apb1_clock_divider": 1,
                    "apb1_prescaler": 1,
                    "apb1_prescaler_config_param": 1,
                    "clock_config2_param3": 1,
                    "clock_config_param3": 1,
                    "clock_config_var3": 1,
                    "clock_source_config_param3": 1,
                    "counter": 1,
                    "hclk_divider": 1,
                    "hclk_prescaler": 1,
                    "hclk_source": 1,
                    "hse_prediv": 1,
                    "hse_state": 2,
                    "hseprediv": 1,
                    "pll_divider": 1,
                    "pll_mul": 1,
                    "pll_mul_value": 1,
                    "pll_source": 2,
                    "pllmul": 1,
                    "pllmultiplier": 1,
                    "reserved": 1,
                    "sys_clk": 1,
                    "sys_tick_clk_config": 1,
                    "sysclock_output": 1,
                    "voltage_scale_config": 1
                },
                "local_40": {
                    "ahb_clock_divider": 1,
                    "ahb_prescaler": 1,
                    "clock_config2_param2": 1,
                    "clock_config_param2": 1,
                    "clock_config_status": 1,
                    "clock_config_var2": 1,
                    "clock_divider": 1,
                    "clock_divisor": 1,
                    "clock_source": 1,
                    "clock_source_config_param": 1,
                    "clock_source_config_param2": 1,
                    "flash_config": 1,
                    "flash_latency": 1,
                    "hse_prediv_value": 1,
                    "hsepredivdiv": 1,
                    "oscillator_type": 1,
                    "pll_config_n": 1,
                    "pll_source": 3,
                    "pllmul": 1,
                    "prescaler": 1,
                    "sys_clk_divider": 1,
                    "sys_clock_source": 1,
                    "sys_config": 2,
                    "sys_tick_config": 1,
                    "sysclk_divider": 1,
                    "sysclk_prescaler": 1,
                    "sysclk_source": 2
                },
                "local_44": {
                    "clk_div_rcc": 1,
                    "clk_init": 1,
                    "clk_init_type_def": 1,
                    "clk_source_config": 1,
                    "clock_config": 2,
                    "clock_config2_param1": 1,
                    "clock_config_param1": 1,
                    "clock_config_var1": 1,
                    "clock_configuration": 1,
                    "clock_on_hse": 1,
                    "clock_source": 3,
                    "clock_source_config_param": 1,
                    "clock_source_info": 1,
                    "clock_source_params": 1,
                    "hse_bypass": 1,
                    "hse_config": 1,
                    "hsiclock": 1,
                    "pll_config_m": 1,
                    "rcc_clk_init": 1,
                    "rcc_clk_init_struct": 1,
                    "rcc_clock_cfg": 1,
                    "rcc_clock_config": 1,
                    "rcc_config": 2,
                    "rcc_peripherals": 1,
                    "sysclk_source": 2,
                    "system_clock_source_config": 1
                },
                "local_4c": {
                    "ahb_prediv_value": 1,
                    "clk48_config": 1,
                    "ex_periph_config": 1,
                    "external_clock_divider": 1,
                    "i2s_clock_config": 1,
                    "mco_prescaler": 1,
                    "periph_clk_config_param": 1,
                    "periph_clk_config_status": 1,
                    "periph_clk_config_var": 1,
                    "periph_clk_init_struct": 1,
                    "periph_clock_config_result": 1,
                    "peripheral_clk_config3": 1,
                    "peripheral_clk_init": 1,
                    "peripheral_clock_config": 1,
                    "peripheral_clock_config_param2": 1,
                    "peripheral_clock_divider": 3,
                    "pll2_mul": 1,
                    "pll_source": 1,
                    "prescaler": 1,
                    "rcc_periph": 1,
                    "rtc_clock_config_param": 1,
                    "usb_clock": 1,
                    "usb_clock_divider": 2
                },
                "local_54": {
                    "clock_config": 1,
                    "external_clock_config": 1,
                    "gpio_config": 1,
                    "periph_clk": 1,
                    "periph_clk_config": 2,
                    "periph_clk_config_array": 2,
                    "periph_clock_config_param": 1,
                    "periph_config": 1,
                    "peripheral_clk_config": 1,
                    "peripheral_clk_config2": 1,
                    "peripheral_clock_cfg": 1,
                    "peripheral_clock_conf": 1,
                    "peripheral_clock_config": 4,
                    "peripheral_clock_config_param1": 1,
                    "peripheral_clock_params": 1,
                    "peripheral_config": 2,
                    "pll_config": 1,
                    "rcc_osc_init_struct": 1,
                    "usb_clock_init": 1
                },
                "local_c": {
                    "ahb_prescaler": 1,
                    "apb1_prescaler": 3,
                    "apb2_prescaler": 1,
                    "clock_config": 1,
                    "clock_config_hclk": 1,
                    "clock_config_param4": 1,
                    "clock_config_result": 1,
                    "config_value": 1,
                    "osc_config_param5": 1,
                    "osc_config_pll": 1,
                    "osc_periph_clk": 1,
                    "pclk2_prescaler": 1,
                    "peripheral_clk_config": 1,
                    "peripheral_clock": 3,
                    "peripheral_clock_config": 3,
                    "pll_source": 1,
                    "sys_config": 1,
                    "system_clock": 1,
                    "uart1_clock_selection": 1,
                    "var5": 1,
                    "voltage_range": 1
                },
                "uVar2": {
                    "hclk_freq": 10,
                    "hclk_frequency": 6,
                    "sys_tick_config_value": 1,
                    "sys_tick_reload_value": 1
                }
            },
            "called": [
                "FUN_08003c44",
                "FUN_08003ad4",
                "FUN_08003688",
                "FUN_08002514",
                "FUN_08002560",
                "FUN_08004d40",
                "FUN_08002494",
                "FUN_08003c90"
            ],
            "calling": [
                "FUN_08004c52"
            ],
            "code": "\nvoid initialize_system_08001b48(void)\n\n{\n  int result;\n  uint hclk_freq;\n  undefined4 peripheral_clock_config [2];\n  undefined4 peripheral_clock_divider;\n  undefined4 clock_source;\n  undefined4 pll_source;\n  undefined4 hse_state;\n  undefined4 hse_prediv;\n  undefined4 sysclk_source;\n  undefined4 oscillator_config [4];\n  undefined4 clock_source;\n  undefined4 clock_divider;\n  undefined4 peripheral_config;\n  undefined4 ahb_prescaler;\n  undefined4 peripheral_clock_config;\n  \n  oscillator_config[0] = 2;\n  clock_source = 1;\n  clock_divider = 0x10;\n  peripheral_config = 2;\n  ahb_prescaler = 0;\n  peripheral_clock_config = 0x380000;\n  result = configure_oscillator(oscillator_config);\n  if (result != 0) {\n    handle_error(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                   ,0x88);\n  }\n  clock_source = 0xf;\n  pll_source = 2;\n  hse_state = 0;\n  hse_prediv = 0x400;\n  sysclk_source = 0;\n  result = configure_clock(&clock_source);\n  if (result != 0) {\n    handle_error(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                   ,0x95);\n  }\n  peripheral_clock_config[0] = 2;\n  peripheral_clock_divider = 0x8000;\n  result = configure_periph_clock(peripheral_clock_config);\n  if (result != 0) {\n    handle_error(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                   ,0x9c);\n  }\n  hclk_freq = get_hclk_frequency();\n  configure_sys_tick(hclk_freq / 1000);\n  configure_sys_tick_clock_source(4);\n  set_nvic_priority(0xffffffff,0);\n  return;\n}\n\n",
            "current_name": "initialize_system_08001b48",
            "entrypoint": "0x08001b48",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001b48": "initialize_system_08001b48",
                "HAL_NVIC_SetPriority": "set_nvic_priority",
                "HAL_RCCEx_PeriphCLKConfig": "configure_periph_clock",
                "HAL_RCC_ClockConfig": "configure_clock",
                "HAL_RCC_GetHCLKFreq": "get_hclk_frequency",
                "HAL_RCC_OscConfig": "configure_oscillator",
                "HAL_SYSTICK_CLKSourceConfig": "configure_sys_tick_clock_source",
                "HAL_SYSTICK_Config": "configure_sys_tick",
                "_Error_Handler": "handle_error",
                "iVar1": "result",
                "local_10": "ahb_prescaler",
                "local_14": "peripheral_config",
                "local_1c": "clock_divider",
                "local_20": "clock_source",
                "local_30": "oscillator_config",
                "local_34": "sysclk_source",
                "local_38": "hse_prediv",
                "local_3c": "hse_state",
                "local_40": "pll_source",
                "local_44": "clock_source",
                "local_4c": "peripheral_clock_divider",
                "local_54": "peripheral_clock_config",
                "local_c": "peripheral_clock_config",
                "uVar2": "hclk_freq"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001be8": {
            "additional_data": {
                "FUN_08001be8": {
                    "copy_data_and_execute_main": 1,
                    "copy_data_and_initialize": 2,
                    "copy_data_to_memory": 1,
                    "copy_memory_and_initialize": 2,
                    "initialize_and_run": 1,
                    "initialize_memory_and_call_main": 1,
                    "initialize_program": 1,
                    "initialize_system": 22
                },
                "FUN_08004d44": {
                    "copy_data_to_memory": 1,
                    "initialize_system": 1
                },
                "FUN_08005f6c": {
                    "main_function": 1,
                    "perform_main": 1
                },
                "FUN_08006198": {
                    "initialize_c_standard_library": 1,
                    "initialize_variables": 1
                },
                "SystemInit": {
                    "initialize_hardware": 1
                },
                "UNRECOVERED_JUMPTABLE": {
                    "j_table": 1,
                    "jmp_table": 2,
                    "jump_table": 18,
                    "jumptable": 5,
                    "unrecovered_jump_table": 2,
                    "unrecovered_jumptable": 1
                },
                "__libc_init_array": {
                    "initialize_library": 1
                },
                "iVar1": {
                    "counter": 3,
                    "i": 4,
                    "index": 16,
                    "iterator": 1,
                    "loop_index": 1,
                    "offset": 4
                },
                "puVar2": {
                    "current_pointer": 1,
                    "data_pointer": 5,
                    "data_ptr": 1,
                    "pointer": 3,
                    "ptr": 18
                }
            },
            "called": [
                "FUN_08004d44",
                "FUN_08006198",
                "FUN_08005f6c"
            ],
            "calling": [],
            "code": "\nvoid initialize_system_08001be8(void)\n\n{\n  int index;\n  undefined4 *ptr;\n  code *jump_table;\n  \n  for (index = 0; (undefined *)(index + 0x20000000) < &DAT_2000015c; index = index + 4) {\n    *(undefined4 *)(index + 0x20000000) = *(undefined4 *)(index + 0x8007970);\n  }\n  for (ptr = &DAT_20000160; ptr < &DAT_200006a8; ptr = ptr + 1) {\n    *ptr = 0;\n  }\n  initialize_hardware();\n  initialize_library();\n  jump_table = (code *)0x8001c1a;\n  main();\n                    /* WARNING: Could not recover jumptable at 0x08001c1a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)();\n  return;\n}\n\n",
            "current_name": "initialize_system_08001be8",
            "entrypoint": "0x08001be8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001be8": "initialize_system_08001be8",
                "SystemInit": "initialize_hardware",
                "UNRECOVERED_JUMPTABLE": "jump_table",
                "__libc_init_array": "initialize_library",
                "iVar1": "index",
                "puVar2": "ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001c32": {
            "additional_data": {
                "FUN_08001c32": {
                    "initialize_hardware": 7,
                    "initialize_hardware_config": 10,
                    "initialize_hardware_configuration": 14
                },
                "FUN_08004c52": {
                    "configure_hardware": 6,
                    "configure_hw": 2,
                    "execute_additional_task": 1,
                    "execute_subfunction": 1,
                    "perform_additional_actions": 1,
                    "perform_additional_configuration": 1,
                    "perform_additional_initialization": 1,
                    "perform_additional_processing": 1,
                    "perform_additional_setup": 9,
                    "perform_additional_tasks": 4,
                    "perform_subtask": 1,
                    "reconfigure_hardware": 2,
                    "reset_hardware_configuration": 1
                },
                "hw_config_init": {
                    "initialize_hardware": 1,
                    "initialize_hardware_config": 2,
                    "initialize_hardware_configuration": 1
                }
            },
            "called": [
                "FUN_08004c52"
            ],
            "calling": [
                "FUN_08005f5e"
            ],
            "code": "\nvoid initialize_hardware_configuration_08001c32(void)\n\n{\n  initialize_hardware_config();\n  return;\n}\n\n",
            "current_name": "initialize_hardware_configuration_08001c32",
            "entrypoint": "0x08001c32",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001c32": "initialize_hardware_configuration_08001c32",
                "hw_config_init": "initialize_hardware_config"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001c3a": {
            "called": [],
            "calling": [
                "FUN_08001c88"
            ],
            "code": "\nvoid FUNC_08001c3a(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08001c3a",
            "entrypoint": "0x08001c3a",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08001c3a": "FUNC_08001c3a"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08001c3c": {
            "additional_data": {
                "DAT_20000078": {
                    "desired_milliseconds": 1,
                    "milliseconds": 1,
                    "sys_tick_config2": 1,
                    "sys_tick_interval_in_ms": 1,
                    "systick_period": 1,
                    "ticks_per_second": 1,
                    "timer_frequency": 1
                },
                "DAT_2000007c": {
                    "current_priority": 4,
                    "current_priority_level": 1,
                    "interrupt_priority": 1,
                    "stored_priority": 1
                },
                "DAT_20000084": {
                    "sys_tick_clock": 1,
                    "sys_tick_clock_hz": 1,
                    "sys_tick_config1": 1,
                    "sys_tick_interval": 1,
                    "system_ticks_per_second": 1,
                    "systick_interval": 1,
                    "systick_reload_value": 1
                },
                "FUN_08001c3c": {
                    "configure_and_set_systick_priority": 1,
                    "configure_sys_tick": 11,
                    "configure_systick": 3,
                    "configure_systick_timer": 1,
                    "initialize_sys_tick": 7,
                    "initialize_sys_tick_and_nvic": 1,
                    "initialize_sys_tick_interrupt": 1,
                    "initialize_systick": 6
                },
                "FUN_08002494": {
                    "adjust_sys_tick": 1
                },
                "FUN_08002514": {
                    "set_priority": 1
                },
                "HAL_NVIC_SetPriority": {
                    "set_interrupt_priority": 3,
                    "set_nvic_priority": 1,
                    "set_priority": 1
                },
                "HAL_SYSTICK_Config": {
                    "configure_sys_tick": 5,
                    "configure_sys_tick_interval": 1
                },
                "iVar1": {
                    "config_result": 12,
                    "config_status": 4,
                    "result": 5,
                    "systick_config_result": 6,
                    "systick_config_status": 3,
                    "systick_initialization_result": 1
                },
                "param_1": {
                    "priority": 8,
                    "priority_level": 23
                },
                "param_2": {
                    "param2": 1
                },
                "param_3": {
                    "param3": 1
                }
            },
            "called": [
                "FUN_08002514",
                "FUN_08002494"
            ],
            "calling": [
                "FUN_08001c88",
                "FUN_08003afa"
            ],
            "code": "\nundefined4 configure_sys_tick_08001c3c(uint priority_level)\n\n{\n  int config_result;\n  \n  config_result = configure_sys_tick_08001c3c(DAT_20000084 / (1000 / DAT_20000078));\n  if (config_result != 0) {\n    return 1;\n  }\n  if (0xf < priority_level) {\n    return 1;\n  }\n  set_interrupt_priority(0xffffffff,priority_level,0);\n  DAT_2000007c = priority_level;\n  return 0;\n}\n\n",
            "current_name": "configure_sys_tick_08001c3c",
            "entrypoint": "0x08001c3c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001c3c": "configure_sys_tick_08001c3c",
                "HAL_NVIC_SetPriority": "set_interrupt_priority",
                "HAL_SYSTICK_Config": "configure_sys_tick",
                "iVar1": "config_result",
                "param_1": "priority_level"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001c88": {
            "additional_data": {
                "FUNC_08001c3a": {
                    "auxiliary_operation": 1,
                    "initialize_system": 1,
                    "perform_pre_init_tasks": 2,
                    "perform_pre_processing": 1,
                    "perform_system_setup": 1
                },
                "FUN_08001c3a": {
                    "configure_peripheral": 1,
                    "configure_timer": 1,
                    "initialize_hardware": 1,
                    "initialize_nvic": 1,
                    "initialize_peripheral": 1,
                    "perform_action_a": 1,
                    "perform_initialization": 3,
                    "perform_pre_init_tasks": 1
                },
                "FUN_08001c3c": {
                    "configure_hardware": 1,
                    "configure_nvic": 1,
                    "configure_peripheral": 1,
                    "configure_setting": 1,
                    "configure_system": 3,
                    "initialize_subsystem": 1,
                    "perform_action_b": 1,
                    "perform_operation": 1,
                    "process_data": 1,
                    "set_configuration": 1,
                    "set_priority": 2,
                    "update_config": 1,
                    "update_configuration": 1
                },
                "FUN_08001c88": {
                    "initialize_hal": 4,
                    "initialize_hardware": 16,
                    "initialize_peripheral": 1,
                    "initialize_peripheral_devices": 1,
                    "initialize_system": 9
                },
                "FUN_08002470": {
                    "enable_interrupt": 1,
                    "enable_peripheral": 1,
                    "handle_operation": 1,
                    "init_timer": 1,
                    "initialize_hal": 1,
                    "initialize_nvic": 1,
                    "initialize_tick": 2,
                    "initialize_timer": 1,
                    "perform_action_c": 1,
                    "perform_initialization": 1,
                    "perform_operation": 1,
                    "perform_post_processing": 1,
                    "set_priority": 1,
                    "set_system_priority": 1,
                    "setup_interrupts": 1
                },
                "HAL_InitTick": {
                    "init_tick": 2,
                    "initialize_system_tick": 2,
                    "initialize_tick": 13,
                    "initialize_tick_timer": 1
                },
                "HAL_MspInit": {
                    "init_hal_peripherals": 1,
                    "initialize_gpio": 1,
                    "initialize_hal_msp": 1,
                    "initialize_hardware_specific": 1,
                    "initialize_mcu": 1,
                    "initialize_msp": 9,
                    "initialize_periph": 1,
                    "initialize_peripheral": 1,
                    "initialize_peripheral_dependencies": 1,
                    "initialize_peripherals": 1
                },
                "HAL_NVIC_SetPriorityGrouping": {
                    "configure_interrupt_priority": 1,
                    "set_interrupt_priority": 1,
                    "set_interrupt_priority_group": 4,
                    "set_interrupt_priority_grouping": 5,
                    "set_nvic_priority_group": 1,
                    "set_priority_grouping": 6
                },
                "_DAT_40022000": {
                    "device_flags": 1,
                    "hardware_flags": 1,
                    "peripheral_status": 1,
                    "system_flags": 1
                },
                "param_1": {
                    "config_value": 1,
                    "initialize_nvic_param": 1,
                    "input_parameter": 1,
                    "new_param": 1,
                    "param": 1,
                    "subsystem_parameter": 1,
                    "value": 2
                }
            },
            "called": [
                "FUN_08001c3a",
                "FUN_08001c3c",
                "FUN_08002470"
            ],
            "calling": [
                "FUN_08004c52"
            ],
            "code": "\n\n\nundefined4 initialize_hardware_08001c88(void)\n\n{\n  _DAT_40022000 = _DAT_40022000 | 0x10;\n  set_priority_grouping(3);\n  initialize_tick(0xf);\n  initialize_msp();\n  return 0;\n}\n\n",
            "current_name": "initialize_hardware_08001c88",
            "entrypoint": "0x08001c88",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001c88": "initialize_hardware_08001c88",
                "HAL_InitTick": "initialize_tick",
                "HAL_MspInit": "initialize_msp",
                "HAL_NVIC_SetPriorityGrouping": "set_priority_grouping"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001cac": {
            "additional_data": {
                "DAT_20000078": {
                    "added_value": 1,
                    "addend": 1,
                    "global_variable": 2,
                    "global_variable_to_add": 1,
                    "input": 12,
                    "input_value": 9,
                    "input_variable": 1,
                    "value_to_add": 2
                },
                "DAT_200006a0": {
                    "accumulated_sum": 1,
                    "accumulated_value": 2,
                    "accumulator": 1,
                    "result": 18,
                    "sum": 4,
                    "sum_of_variables": 1,
                    "sum_variable": 1,
                    "updated_sum": 1,
                    "updated_value": 1
                },
                "FUN_08001cac": {
                    "accumulate_sum": 1,
                    "accumulate_values": 1,
                    "accumulate_variables": 1,
                    "add_data_to_global_variable": 2,
                    "add_data_to_variable": 1,
                    "add_global_variable_to_accumulator": 1,
                    "add_global_variable_to_data": 1,
                    "add_global_variable_to_itself": 2,
                    "add_values": 4,
                    "add_variables": 1,
                    "addition": 1,
                    "addition_operation": 4,
                    "calculate_sum": 1,
                    "increase_sum": 1,
                    "increment_value": 1,
                    "sum_pointer_to_sum": 1,
                    "sum_variables": 1,
                    "update_data": 1,
                    "update_sum": 3,
                    "update_value": 1,
                    "update_variable": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004b9e"
            ],
            "code": "\nvoid addition_operation_08001cac(void)\n\n{\n  DAT_200006a0 = (uint)DAT_20000078 + DAT_200006a0;\n  return;\n}\n\n",
            "current_name": "addition_operation_08001cac",
            "entrypoint": "0x08001cac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001cac": "addition_operation_08001cac"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001cc4": {
            "additional_data": {
                "DAT_200006a0": {
                    "data": 13,
                    "data_offset": 1,
                    "data_variable": 1,
                    "global_variable": 2,
                    "global_variable_value": 1,
                    "result": 2
                },
                "FUN_08001cc4": {
                    "get_dat_value": 2,
                    "get_dat_variable": 1,
                    "get_data": 13,
                    "get_data_from_memory": 1,
                    "get_data_offset": 1,
                    "get_data_value": 8,
                    "get_data_variable": 1,
                    "get_global_value": 1,
                    "get_global_variable": 2,
                    "get_global_variable_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003688",
                "FUN_08001f84",
                "FUN_08001cd0",
                "FUN_08002384",
                "FUN_08004b94",
                "FUN_08003afa",
                "FUN_080043b4",
                "FUN_080020f0",
                "FUN_080053d4",
                "FUN_08004478",
                "FUN_08003c90"
            ],
            "code": "\nundefined4 get_data_value_08001cc4(void)\n\n{\n  return DAT_200006a0;\n}\n\n",
            "current_name": "get_data_value_08001cc4",
            "entrypoint": "0x08001cc4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001cc4": "get_data_value_08001cc4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001cd0": {
            "additional_data": {
                "DAT_20000084": {
                    "constant": 1,
                    "constant_value": 1,
                    "default_delay": 1
                },
                "FUN_08001cd0": {
                    "calculate_clock_init_time": 1,
                    "calculate_delay": 13,
                    "calculate_delay_time": 1,
                    "calculate_frequency": 1,
                    "calculate_function": 1,
                    "calculate_new_value": 1,
                    "calculate_time_difference": 1,
                    "calculate_time_elapsed": 2,
                    "calculate_timeout": 1,
                    "calculate_wait_time": 1,
                    "check_and_delay": 1,
                    "check_and_modify_settings": 1,
                    "check_and_process_data": 1,
                    "perform_operation": 1
                },
                "HAL_GetTick": {
                    "get_current_tick": 1,
                    "get_current_time": 1
                },
                "HAL_RCCEx_GetPeriphCLKFreq": {
                    "get_peripheral_clock_freq": 1,
                    "get_system_clock_freq": 1
                },
                "iVar1": {
                    "current_tick": 1,
                    "current_time": 2,
                    "start_tick": 4,
                    "start_tick_count": 1,
                    "start_time": 18,
                    "tick_start": 3
                },
                "iVar3": {
                    "current_tick": 1,
                    "delay": 10,
                    "delay_increment": 1,
                    "delay_ticks": 1,
                    "delay_time": 1,
                    "duration": 1,
                    "increment": 1,
                    "interval": 2,
                    "iteration": 1,
                    "iteration_var": 1,
                    "loop_counter": 2,
                    "multiplier": 2,
                    "tick_diff": 1,
                    "ticks": 1,
                    "time_elapsed": 2,
                    "var3": 1,
                    "wait_time": 1
                },
                "local_1c": {
                    "counter": 18,
                    "current_delay": 6,
                    "current_ticks": 1,
                    "current_time": 1,
                    "current_value": 2,
                    "delay_counter": 1,
                    "iteration_count": 1
                },
                "param_1": {
                    "clock_data": 1,
                    "config": 3,
                    "data": 4,
                    "data_pointer": 1,
                    "input_data": 3,
                    "input_params": 5,
                    "param_array": 2,
                    "param_list": 1,
                    "parameter": 1,
                    "parameter1": 2,
                    "parameter_1": 1,
                    "parameter_array": 1,
                    "parameter_list": 1,
                    "parameters": 3,
                    "ptr_array": 1,
                    "settings_array": 1
                },
                "param_2": {
                    "delay_limit": 2,
                    "max_delay": 1,
                    "max_wait_time": 1,
                    "parameter2": 2,
                    "parameter_2": 1,
                    "parameter_value": 1,
                    "time_limit": 2,
                    "timeout": 20,
                    "timeout_threshold": 1
                },
                "puVar5": {
                    "clock_config": 1,
                    "config_ptr": 1,
                    "current_params": 1,
                    "data": 3,
                    "data_ptr": 6,
                    "flags": 2,
                    "input_params_ptr": 1,
                    "param": 1,
                    "param_array": 1,
                    "pointer": 1,
                    "pointer_to_value": 1,
                    "pointer_var": 1,
                    "ptr": 1,
                    "ptr_data": 5,
                    "ptr_to_parameters": 1,
                    "settings": 1,
                    "values": 2
                },
                "uVar2": {
                    "clk_freq": 1,
                    "clock_freq": 5,
                    "clock_frequency": 5,
                    "freq": 2,
                    "frequency": 5,
                    "periph_clk_freq": 1,
                    "periph_freq": 6,
                    "periph_frequency": 1,
                    "peripheral_clock_freq": 1,
                    "peripheral_clock_frequency": 1,
                    "peripheral_freq": 1,
                    "system_clock_freq": 1
                },
                "uVar4": {
                    "result": 23,
                    "return_val": 1,
                    "return_value": 4
                },
                "uVar6": {
                    "adjusted_value": 1,
                    "adjusted_wait_time": 1,
                    "calculated_delay": 4,
                    "calculated_time": 1,
                    "calculated_value": 2,
                    "calculation": 1,
                    "calculation_result": 2,
                    "delay_duration": 1,
                    "delay_range": 1,
                    "delay_threshold": 3,
                    "delay_time": 2,
                    "limit": 1,
                    "multiplier": 1,
                    "result": 1,
                    "target_delay": 2,
                    "target_frequency": 1,
                    "target_time": 1,
                    "timeout_limit": 1,
                    "total_time": 1,
                    "var6": 1
                }
            },
            "called": [
                "FUN_08001cc4",
                "FUN_08003da4"
            ],
            "calling": [
                "FUN_08004a4c"
            ],
            "code": "\nundefined4 calculate_delay_time_08001cd0(uint **input_params,uint timeout)\n\n{\n  int start_time;\n  uint periph_freq;\n  int delay;\n  undefined4 result;\n  uint *data_ptr;\n  uint calculated_delay;\n  uint counter;\n  \n  counter = 0;\n  start_time = get_current_tick();\n  calculated_delay = DAT_20000084;\n  data_ptr = *input_params;\n  if ((data_ptr[2] & 0x100) == 0) {\n    if (((data_ptr[1] & 0x100) == 0) && ((data_ptr[0xb] & 0xf00000) == 0)) {\n      do {\n        if ((**input_params & 2) != 0) goto LAB_08001de2;\n      } while ((timeout == 0xffffffff) ||\n              ((timeout != 0 && (delay = get_current_tick(), (uint)(delay - start_time) <= timeout))));\n      input_params[10] = (uint *)((uint)input_params[10] | 4);\n      *(undefined *)(input_params + 9) = 0;\n      result = 3;\n    }\n    else {\n      periph_freq = get_system_clock_freq(2);\n      data_ptr = *input_params;\n      if (((data_ptr[4] & 0x24924924) == 0) && ((data_ptr[3] & 0x924924) == 0)) {\n        if ((data_ptr[4] & 0x12492492) == 0) {\n          if ((data_ptr[3] & 0x492492) == 0) {\n            delay = 0x14;\n          }\n          else {\n            delay = 0x29;\n          }\n        }\n        else {\n          delay = 0x29;\n        }\n      }\n      else if (((data_ptr[4] & 0x12492492) == 0) && ((data_ptr[3] & 0x492492) == 0)) {\n        delay = 0x54;\n      }\n      else if ((data_ptr[4] & 0x249249) == 0) {\n        if ((data_ptr[3] & 0x249249) == 0) {\n          delay = 0x54;\n        }\n        else {\n          delay = 0xfc;\n        }\n      }\n      else {\n        delay = 0xfc;\n      }\n      calculated_delay = (calculated_delay / periph_freq) * delay;\n      for (; counter <= calculated_delay && calculated_delay - counter != 0; counter = counter + 1) {\n        if ((timeout != 0xffffffff) &&\n           ((timeout == 0 || (delay = get_current_tick(), timeout < (uint)(delay - start_time))))) {\n          input_params[10] = (uint *)((uint)input_params[10] | 4);\n          *(undefined *)(input_params + 9) = 0;\n          return 3;\n        }\n      }\nLAB_08001de2:\n      **input_params = 0xffffffed;\n      input_params[10] = (uint *)((uint)input_params[10] | 0x200);\n      if (((*input_params)[2] & 0xe0000) == 0xe0000) {\n        if (input_params[3] == (uint *)0x0) {\n          input_params[10] = (uint *)((uint)input_params[10] & 0xfffffeff);\n          if (((uint)input_params[10] & 0x1000) == 0) {\n            input_params[10] = (uint *)((uint)input_params[10] | 1);\n            result = 0;\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        result = 0;\n      }\n    }\n  }\n  else {\n    input_params[10] = (uint *)((uint)input_params[10] | 0x20);\n    *(undefined *)(input_params + 9) = 0;\n    result = 1;\n  }\n  return result;\n}\n\n",
            "current_name": "calculate_delay_time_08001cd0",
            "entrypoint": "0x08001cd0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001cd0": "calculate_delay_time_08001cd0",
                "HAL_GetTick": "get_current_tick",
                "HAL_RCCEx_GetPeriphCLKFreq": "get_system_clock_freq",
                "iVar1": "start_time",
                "iVar3": "delay",
                "local_1c": "counter",
                "param_1": "input_params",
                "param_2": "timeout",
                "puVar5": "data_ptr",
                "uVar2": "periph_freq",
                "uVar4": "result",
                "uVar6": "calculated_delay"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001e40": {
            "additional_data": {
                "0x4c": {
                    "offset": 3,
                    "offset_constant": 1
                },
                "FUN_08001e40": {
                    "extract_value_from_pointer": 1,
                    "get_fourth_pointer_value": 1,
                    "get_memory_location": 1,
                    "get_memory_value": 2,
                    "get_offset": 7,
                    "get_offset_value": 17,
                    "get_pointer_value": 1,
                    "get_value_at_offset": 1
                },
                "offsetValue": {
                    "offset_address": 1
                },
                "original_variable_name_1": {
                    "offset": 1
                },
                "original_variable_name_2": {
                    "result": 1
                },
                "param_1": {
                    "address": 1,
                    "array": 1,
                    "input_array": 1,
                    "input_pointer": 5,
                    "input_ptr": 1,
                    "memory_address": 2,
                    "memory_pointer": 1,
                    "offset": 2,
                    "offset_list": 1,
                    "offset_pointer": 7,
                    "offset_ptr": 6,
                    "pointer": 2,
                    "value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004a4c"
            ],
            "code": "\nundefined4 get_value_at_offset_08001e40(int *offset_pointer)\n\n{\n  return *(undefined4 *)(*offset_pointer + 0x4c);\n}\n\n",
            "current_name": "get_value_at_offset_08001e40",
            "entrypoint": "0x08001e40",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001e40": "get_value_at_offset_08001e40",
                "param_1": "offset_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001e48": {
            "additional_data": {
                "0": {
                    "exit_result": 1
                },
                "0x10": {
                    "limit_d": 1
                },
                "0x20": {
                    "another_flag": 1
                },
                "0x40012400": {
                    "some_constant": 1
                },
                "0x800000": {
                    "some_flag": 1
                },
                "0xd": {
                    "limit_b": 1
                },
                "1": {
                    "standard_result": 1
                },
                "2": {
                    "limit_c": 1
                },
                "7": {
                    "limit_a": 1
                },
                "DAT_20000084": {
                    "constant_value": 2,
                    "some_data": 1
                },
                "FUN_08001e48": {
                    "initialize_config": 1,
                    "set_configuration": 1,
                    "update_config": 2,
                    "update_configuration": 8,
                    "update_data": 3,
                    "update_param": 1,
                    "update_parameter": 1,
                    "update_parameters": 2,
                    "update_params": 2,
                    "update_registers": 1,
                    "update_settings": 4,
                    "update_values": 3
                },
                "local_c": {
                    "count": 6,
                    "counter": 16,
                    "delay": 1,
                    "iteration": 1,
                    "local_variable": 1,
                    "loop_counter": 6
                },
                "param_1": {
                    "array": 1,
                    "config": 4,
                    "config_params": 1,
                    "config_pointer": 1,
                    "config_ptr": 5,
                    "configuration": 2,
                    "data": 3,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "device": 1,
                    "param_array": 3,
                    "parameter_array": 1,
                    "params": 1,
                    "params_array": 1,
                    "registers": 1,
                    "settings": 4
                },
                "param_2": {
                    "data": 2,
                    "data_array": 2,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "input_ptr": 1,
                    "param_values": 1,
                    "params_ptr": 1,
                    "value_array": 1,
                    "values": 18,
                    "values_array": 1,
                    "values_ptr": 1
                },
                "uRam40012408": {
                    "flag_value": 1,
                    "ram_value": 1,
                    "shared_var": 1,
                    "some_var": 1
                },
                "uVar1": {
                    "result": 18,
                    "return_value": 10,
                    "status": 2
                },
                "uVar2": {
                    "data_value": 1,
                    "index": 11,
                    "offset": 1,
                    "shift_amount": 2,
                    "shift_value": 1,
                    "temp": 1,
                    "temp_value": 2,
                    "temp_var": 1,
                    "temp_variable": 1,
                    "tmp_value": 1,
                    "value": 8
                }
            },
            "called": [],
            "calling": [
                "FUN_08004a4c"
            ],
            "code": "\nundefined4 update_configuration_08001e48(int *config_ptr,uint *values)\n\n{\n  undefined4 result;\n  uint index;\n  int counter;\n  \n  if (*(char *)(config_ptr + 9) == '\\x01') {\n    result = 2;\n  }\n  else {\n    *(undefined *)(config_ptr + 9) = 1;\n    index = values[1];\n    if (index < 7) {\n      index = index * 5 - 5;\n      *(uint *)(*config_ptr + 0x34) =\n           *values << (index & 0xff) | *(uint *)(*config_ptr + 0x34) & ~(0x1f << (index & 0xff));\n    }\n    else if (index < 0xd) {\n      index = index * 5 - 0x23;\n      *(uint *)(*config_ptr + 0x30) =\n           *values << (index & 0xff) | *(uint *)(*config_ptr + 0x30) & ~(0x1f << (index & 0xff));\n    }\n    else {\n      index = index * 5 - 0x41;\n      *(uint *)(*config_ptr + 0x2c) =\n           *values << (index & 0xff) | *(uint *)(*config_ptr + 0x2c) & ~(0x1f << (index & 0xff));\n    }\n    index = *values;\n    if (index < 10) {\n      *(uint *)(*config_ptr + 0x10) =\n           values[2] << (index * 3 & 0xff) |\n           *(uint *)(*config_ptr + 0x10) & ~(7 << (index * 3 & 0xff));\n    }\n    else {\n      index = index * 3 - 0x1e;\n      *(uint *)(*config_ptr + 0xc) =\n           values[2] << (index & 0xff) | *(uint *)(*config_ptr + 0xc) & ~(7 << (index & 0xff));\n    }\n    if (*values - 0x10 < 2) {\n      if (*config_ptr == 0x40012400) {\n        if ((flag_value & 0x800000) == 0) {\n          flag_value = flag_value | 0x800000;\n          if (*values == 0x10) {\n            for (counter = (DAT_20000084 / 1000000) * 10; counter != 0; counter = counter + -1) {\n            }\n            result = 0;\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        config_ptr[10] = config_ptr[10] | 0x20;\n        result = 1;\n      }\n    }\n    else {\n      result = 0;\n    }\n    *(undefined *)(config_ptr + 9) = 0;\n  }\n  return result;\n}\n\n",
            "current_name": "update_configuration_08001e48",
            "entrypoint": "0x08001e48",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001e48": "update_configuration_08001e48",
                "local_c": "counter",
                "param_1": "config_ptr",
                "param_2": "values",
                "uRam40012408": "flag_value",
                "uVar1": "result",
                "uVar2": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001f80": {
            "additional_data": {
                "0x28": {
                    "offset": 1
                },
                "FUN_08001f80": {
                    "get_address_from_offset": 1,
                    "get_data_from_offset": 1,
                    "get_memory_value": 2,
                    "get_offset": 1,
                    "get_offset_value": 11,
                    "get_param_value": 1,
                    "get_parameter_value": 2,
                    "get_pointer_offset": 1,
                    "get_pointer_value": 3,
                    "get_return_value": 2,
                    "get_value_at_offset": 4,
                    "get_value_from_offset": 2
                },
                "param_1": {
                    "address": 2,
                    "base_address": 18,
                    "input_address": 1,
                    "input_offset": 1,
                    "input_pointer": 1,
                    "input_value": 1,
                    "memory": 1,
                    "memory_address": 2,
                    "offset": 2,
                    "offset_ptr": 1,
                    "pointer": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004a4c"
            ],
            "code": "\nundefined4 get_value_at_offset_08001f80(int base_address)\n\n{\n  return *(undefined4 *)(base_address + 0x28);\n}\n\n",
            "current_name": "get_value_at_offset_08001f80",
            "entrypoint": "0x08001f80",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001f80": "get_value_at_offset_08001f80",
                "param_1": "base_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001f84": {
            "additional_data": {
                "FUN_08001f84": {
                    "check_and_set_flag": 1,
                    "check_and_set_flags": 1,
                    "check_and_update_status": 1,
                    "execute_and_wait": 1,
                    "execute_delay_function": 1,
                    "handle_timer_event": 1,
                    "initialize_device": 11,
                    "perform_action": 1,
                    "perform_operation": 1,
                    "perform_task": 1,
                    "process_data": 1,
                    "reset_device": 1,
                    "toggle_flag_and_timer": 1,
                    "wait_for_response": 1
                },
                "HAL_GetTick": {
                    "get_current_tick": 9,
                    "get_tick": 3,
                    "get_tick_count": 1,
                    "get_tick_value": 1
                },
                "iVar1": {
                    "current_tick": 15,
                    "current_time": 4,
                    "current_value": 1,
                    "tick": 1,
                    "tick_before": 1,
                    "tick_before_loop": 1,
                    "tick_difference": 1,
                    "tick_start": 5,
                    "tick_value_1": 1,
                    "timestamp": 1
                },
                "iVar3": {
                    "address": 1,
                    "array_element": 1,
                    "array_value": 4,
                    "base_address": 1,
                    "current_device": 1,
                    "data_ptr": 2,
                    "data_value": 1,
                    "device": 2,
                    "device_address": 6,
                    "device_info": 1,
                    "device_value": 1,
                    "device_var": 1,
                    "first_element": 1,
                    "func_pointer": 1,
                    "input_val": 1,
                    "ptr": 2,
                    "ptr_value": 1,
                    "response": 1,
                    "timer_value": 1,
                    "var1": 1
                },
                "local_14": {
                    "count": 1,
                    "counter": 3,
                    "delay": 5,
                    "delay_count": 6,
                    "delay_counter": 4,
                    "iteration_count": 1,
                    "loop_count": 4,
                    "loop_counter": 6,
                    "loop_variable": 1
                },
                "param_1": {
                    "data": 4,
                    "data_ptr": 1,
                    "device": 1,
                    "device_config": 1,
                    "device_data": 4,
                    "device_params": 3,
                    "device_state": 2,
                    "device_status": 1,
                    "flag_and_timer_array": 1,
                    "input_array": 7,
                    "input_data": 1,
                    "input_ptr": 1,
                    "param_array": 1,
                    "pointer": 1,
                    "response_ptr": 1,
                    "timer_data": 1
                },
                "param_2": {
                    "config_size": 1,
                    "data": 1,
                    "flag": 2,
                    "input_param": 1,
                    "input_value": 6,
                    "param": 12,
                    "param2": 2,
                    "param_2": 1,
                    "param_size": 1,
                    "param_value": 1,
                    "status": 1,
                    "value": 2
                },
                "uVar2": {
                    "result": 6,
                    "return_value": 11,
                    "status": 2,
                    "success": 1
                }
            },
            "called": [
                "FUN_08001cc4"
            ],
            "calling": [
                "FUN_08002384",
                "FUN_08002004"
            ],
            "code": "\nundefined4 initialize_device_08001f84(int *input_array,undefined4 param)\n\n{\n  int current_tick;\n  undefined4 return_value;\n  int device_address;\n  uint delay_count;\n  \n  device_address = *input_array;\n  if ((*(uint *)(device_address + 8) & 1) == 0) {\n    *(uint *)(device_address + 8) = *(uint *)(device_address + 8) | 1;\n    for (delay_count = DAT_20000084 / 1000000; delay_count != 0; delay_count = delay_count - 1) {\n    }\n    device_address = get_current_tick(input_array,param,DAT_20000084 * 0x431bde83);\n    do {\n      if ((*(uint *)(*input_array + 8) & 1) != 0) {\n        return 0;\n      }\n      current_tick = get_current_tick();\n    } while ((uint)(current_tick - device_address) < 3);\n    input_array[10] = input_array[10] | 0x10;\n    input_array[0xb] = input_array[0xb] | 1;\n    *(undefined *)(input_array + 9) = 0;\n    return_value = 1;\n  }\n  else {\n    return_value = 0;\n  }\n  return return_value;\n}\n\n",
            "current_name": "initialize_device_08001f84",
            "entrypoint": "0x08001f84",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001f84": "initialize_device_08001f84",
                "HAL_GetTick": "get_current_tick",
                "iVar1": "current_tick",
                "iVar3": "device_address",
                "local_14": "delay_count",
                "param_1": "input_array",
                "param_2": "param",
                "uVar2": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002004": {
            "additional_data": {
                "0x40012800": {
                    "constant_value": 1
                },
                "ADC_Enable": {
                    "enable_adc": 5
                },
                "FUN_08001f84": {
                    "check_adc_status": 1,
                    "configure_adc": 5,
                    "configure_peripheral": 1,
                    "helper_function": 1,
                    "initialize_peripheral": 1,
                    "set_adc_parameters": 1,
                    "set_adc_params": 1,
                    "update_config_data": 1
                },
                "FUN_08002004": {
                    "configure_adc": 3,
                    "enable_adc": 2,
                    "enable_adc_if_needed": 1,
                    "initialize_adc": 19,
                    "initialize_adc_pins": 1,
                    "initialize_adc_settings": 1,
                    "initialize_and_enable_adc": 1,
                    "initialize_hardware": 1,
                    "initialize_peripheral": 2
                },
                "_DAT_40012404": {
                    "constant_value_2": 1,
                    "other_data": 1,
                    "some_data": 1,
                    "status_register": 1
                },
                "iVar1": {
                    "adc_result": 3,
                    "adc_status": 1,
                    "enable_result": 4,
                    "enable_status": 2,
                    "error_code": 3,
                    "result": 16,
                    "result_code": 1,
                    "status": 1
                },
                "iVar3": {
                    "adc_base_address_value": 1,
                    "adc_base_copy": 1,
                    "adc_config_address": 1,
                    "adc_value": 1,
                    "address": 5,
                    "base_address": 3,
                    "data": 1,
                    "device_address": 1,
                    "i_var": 1,
                    "ptr_to_setting2": 1,
                    "register_value": 4,
                    "temp": 1,
                    "temp_var": 1,
                    "value": 7,
                    "var3": 2
                },
                "param_1": {
                    "adc_config": 3,
                    "adc_data": 3,
                    "adc_params": 11,
                    "config": 4,
                    "config_data": 1,
                    "config_params": 1,
                    "config_ptr": 1,
                    "hardware_state": 1,
                    "parameters": 2,
                    "params": 1,
                    "peripheral": 1,
                    "peripheral_data": 1,
                    "settings_array": 1
                },
                "param_2": {
                    "configuration": 1,
                    "param": 2
                },
                "puVar2": {
                    "adc_address": 1,
                    "adc_base": 1,
                    "adc_base_address": 2,
                    "adc_pointer": 1,
                    "address": 1,
                    "base_address": 9,
                    "base_pointer": 1,
                    "base_ptr": 1,
                    "config_data": 1,
                    "device": 1,
                    "gpio_address": 1,
                    "pointer": 2,
                    "ptr": 4,
                    "ptr_to_register": 1,
                    "ptr_to_setting": 1,
                    "ptr_value": 1,
                    "ptr_var": 1,
                    "start_address": 1
                }
            },
            "called": [
                "FUN_08001f84"
            ],
            "calling": [
                "FUN_08004a4c"
            ],
            "code": "\n\n\nint initialize_adc_settings_08002004(int *adc_params)\n\n{\n  int result;\n  undefined4 *base_address;\n  int value;\n  \n  if (*(char *)(adc_params + 9) != '\\x01') {\n    *(undefined *)(adc_params + 9) = 1;\n    result = enable_adc();\n    if (result == 0) {\n      adc_params[10] = adc_params[10] & 0xfffffcfeU | 0x100;\n      base_address = (undefined4 *)*adc_params;\n      if ((base_address == (undefined4 *)0x40012800) && ((_DAT_40012404 & 0xf0000) != 0)) {\n        adc_params[10] = adc_params[10] | 0x100000;\n        if ((_DAT_40012404 & 0x400) != 0) {\n          adc_params[10] = adc_params[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      else {\n        adc_params[10] = adc_params[10] & 0xffefffff;\n        if ((base_address[1] & 0x400) != 0) {\n          adc_params[10] = adc_params[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      if ((adc_params[10] & 0x1000U) == 0) {\n        adc_params[0xb] = 0;\n      }\n      else {\n        adc_params[0xb] = adc_params[0xb] & 0xfffffff9;\n      }\n      *(undefined *)(adc_params + 9) = 0;\n      *base_address = 0xfffffffd;\n      value = *adc_params;\n      if (((*(uint *)(value + 8) & 0xe0000) == 0xe0000) &&\n         ((value != 0x40012800 || ((_DAT_40012404 & 0xf0000) == 0)))) {\n        *(uint *)(value + 8) = *(uint *)(value + 8) | 0x500000;\n      }\n      else {\n        *(uint *)(value + 8) = *(uint *)(value + 8) | 0x100000;\n      }\n    }\n    else {\n      *(undefined *)(adc_params + 9) = 0;\n    }\n    return result;\n  }\n  return 2;\n}\n\n",
            "current_name": "initialize_adc_settings_08002004",
            "entrypoint": "0x08002004",
            "imported": false,
            "improved": true,
            "renaming": {
                "ADC_Enable": "enable_adc",
                "FUN_08002004": "initialize_adc_settings_08002004",
                "iVar1": "result",
                "iVar3": "value",
                "param_1": "adc_params",
                "puVar2": "base_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080020f0": {
            "additional_data": {
                "FUN_080020f0": {
                    "check_and_set_flag": 1,
                    "check_and_set_flags": 3,
                    "check_and_update_flags": 4,
                    "check_and_update_value": 1,
                    "check_status_and_set_flags": 1,
                    "check_status_and_update": 1,
                    "detect_and_set_flag": 1,
                    "perform_action_and_wait": 1,
                    "perform_operation": 1,
                    "process_data": 1,
                    "reverse_binary_flag": 1,
                    "set_flags_if_value_valid": 1,
                    "update_flag_and_status": 1,
                    "update_flag_values": 1,
                    "update_flags": 4,
                    "update_status": 5,
                    "update_status_flags": 1
                },
                "HAL_GetTick": {
                    "get_current_tick": 2,
                    "get_current_time": 5,
                    "get_ticks": 1
                },
                "iVar1": {
                    "current_tick": 14,
                    "current_time": 10,
                    "initial_time": 1,
                    "start_tick": 1,
                    "start_time": 2,
                    "tick_start": 1,
                    "time1": 1,
                    "value2": 1
                },
                "iVar2": {
                    "action_addr": 1,
                    "array_value": 1,
                    "binary_value": 2,
                    "current_time": 1,
                    "data": 1,
                    "data_value": 2,
                    "device_ptr": 1,
                    "entry": 1,
                    "flag_ptr": 1,
                    "initial_tick": 6,
                    "initial_time": 5,
                    "ptr_data": 1,
                    "ptr_value": 2,
                    "starting_tick": 1,
                    "status_value": 1,
                    "value": 3,
                    "value1": 1
                },
                "param_1": {
                    "action_params": 1,
                    "binary_data": 1,
                    "binary_parameter": 1,
                    "data": 8,
                    "data_ptr": 2,
                    "device_data": 1,
                    "flag_array": 1,
                    "flags": 2,
                    "input_array": 5,
                    "input_params": 1,
                    "pointer": 1,
                    "status": 4,
                    "status_array": 1,
                    "status_flags": 1,
                    "value_pointer": 1
                }
            },
            "called": [
                "FUN_08001cc4"
            ],
            "calling": [
                "FUN_0800213c",
                "FUN_08002384",
                "FUN_0800224c",
                "FUN_08002348"
            ],
            "code": "\nundefined4 update_status_flags_080020f0(int *data)\n\n{\n  int current_tick;\n  int initial_tick;\n  \n  initial_tick = *data;\n  if ((*(uint *)(initial_tick + 8) & 1) == 0) {\n    return 0;\n  }\n  *(uint *)(initial_tick + 8) = *(uint *)(initial_tick + 8) & 0xfffffffe;\n  initial_tick = get_current_time();\n  do {\n    if ((*(uint *)(*data + 8) & 1) == 0) {\n      return 0;\n    }\n    current_tick = get_current_time();\n  } while ((uint)(current_tick - initial_tick) < 3);\n  data[10] = data[10] | 0x10;\n  data[0xb] = data[0xb] | 1;\n  return 1;\n}\n\n",
            "current_name": "update_status_flags_080020f0",
            "entrypoint": "0x080020f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080020f0": "update_status_flags_080020f0",
                "HAL_GetTick": "get_current_time",
                "iVar1": "current_tick",
                "iVar2": "initial_tick",
                "param_1": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800213c": {
            "additional_data": {
                "ADC_ConversionStop_Disable": {
                    "disable_adc_conversion": 2,
                    "disable_adc_conversion_stop": 2,
                    "stop_and_disable_adc_conversion": 1,
                    "stop_and_disable_conversion": 1,
                    "stop_disable_adc_conversion": 2,
                    "stop_disable_conversion": 1
                },
                "FUN_0800213c": {
                    "adc_conversion": 2,
                    "adc_conversion_start": 1,
                    "configure_adc": 2,
                    "initialize_adc": 22,
                    "initialize_adc_module": 1,
                    "perform_adc_conversion": 3
                },
                "HAL_ADC_MspInit": {
                    "initialize_adc_msp": 1,
                    "initialize_adc_peripheral": 4,
                    "initialize_adc_peripherals": 4
                },
                "iVar1": {
                    "conversion_result": 12,
                    "conversion_status": 6,
                    "conversion_stop_result": 4,
                    "conversion_stop_status": 1,
                    "stop_disable_result": 1,
                    "stop_result": 7
                },
                "param_1": {
                    "adc_config": 5,
                    "adc_data": 8,
                    "adc_module_params": 1,
                    "adc_parameters": 2,
                    "adc_params": 9,
                    "adc_settings": 1,
                    "adc_struct": 1,
                    "config": 2,
                    "config_params": 1,
                    "params": 1
                },
                "uVar2": {
                    "adc_config_bits": 1,
                    "adc_settings": 1,
                    "bit_mask1": 2,
                    "bitwise_op_result": 1,
                    "bitwise_or_parameter_1": 1,
                    "bitwise_or_result": 4,
                    "bitwise_or_result1": 1,
                    "combined1": 1,
                    "combined_params": 2,
                    "combined_params_var": 1,
                    "combined_value": 1,
                    "combined_values": 3,
                    "combined_vars": 1,
                    "config_flags": 1,
                    "data1": 1,
                    "flag": 1,
                    "flags_1": 1,
                    "mask1": 2,
                    "param_flags": 1,
                    "settings_flag": 1,
                    "u_var2": 1,
                    "var1": 1,
                    "var_1": 1
                },
                "uVar3": {
                    "additional_flags": 1,
                    "additional_settings": 1,
                    "bit_mask2": 2,
                    "bitwise_or_parameter_2": 1,
                    "bitwise_or_result2": 2,
                    "combined2": 1,
                    "combined_vars2": 1,
                    "condition_check_result": 1,
                    "condition_result": 1,
                    "condition_value": 1,
                    "conditional_result": 1,
                    "config_value": 4,
                    "configuration": 1,
                    "data2": 1,
                    "flag_value": 1,
                    "flags_2": 1,
                    "mask2": 2,
                    "misc_config_bits": 1,
                    "select_value": 1,
                    "special_params_var": 1,
                    "u_var3": 2,
                    "value": 1,
                    "var2": 1,
                    "var_2": 1
                },
                "uint": {
                    "unsigned_int": 1
                }
            },
            "called": [
                "FUN_080020f0",
                "FUN_08004974"
            ],
            "calling": [
                "FUN_08004a4c"
            ],
            "code": "\nundefined4 initialize_adc_module_0800213c(int *adc_params)\n\n{\n  int conversion_result;\n  unsigned_int bitwise_or_result;\n  unsigned_int config_value;\n  \n  if (adc_params == (int *)0x0) {\n    return 1;\n  }\n  if (adc_params[10] == 0) {\n    adc_params[0xb] = 0;\n    *(undefined *)(adc_params + 9) = 0;\n    initialize_adc_peripheral();\n  }\n  conversion_result = disable_adc_conversion(adc_params);\n  if (((adc_params[10] & 0x10U) == 0) && (conversion_result == 0)) {\n    adc_params[10] = adc_params[10] & 0xffffeefdU | 2;\n    bitwise_or_result = adc_params[1] | adc_params[7] | adc_params[3] << 1;\n    if (adc_params[2] == 0x100) {\n      config_value = 0x100;\n    }\n    else {\n      config_value = 0;\n      if (adc_params[2] == 1) {\n        config_value = 0x100;\n      }\n    }\n    if (adc_params[5] == 1) {\n      if (adc_params[3] == 0) {\n        config_value = config_value | (adc_params[6] + -1) * 0x2000 | 0x800;\n      }\n      else {\n        adc_params[10] = adc_params[10] | 0x20;\n        adc_params[0xb] = adc_params[0xb] | 1;\n      }\n    }\n    *(unsigned_int *)(*adc_params + 4) = config_value | *(unsigned_int *)(*adc_params + 4) & 0xffff16ff;\n    *(unsigned_int *)(*adc_params + 8) = *(unsigned_int *)(*adc_params + 8) & 0xffe1f7fd | bitwise_or_result;\n    if ((adc_params[2] == 0x100) || (adc_params[2] == 1)) {\n      config_value = (adc_params[4] + -1) * 0x100000;\n    }\n    else {\n      config_value = 0;\n    }\n    *(unsigned_int *)(*adc_params + 0x2c) = config_value | *(unsigned_int *)(*adc_params + 0x2c) & 0xff0fffff;\n    if (bitwise_or_result != (*(unsigned_int *)(*adc_params + 8) & 0xff1f0efe)) {\n      adc_params[10] = adc_params[10] & 0xffffffedU | 0x10;\n      adc_params[0xb] = adc_params[0xb] | 1;\n      return 1;\n    }\n    adc_params[0xb] = 0;\n    adc_params[10] = adc_params[10] & 0xfffffffcU | 1;\n    return 0;\n  }\n  adc_params[10] = adc_params[10] | 0x10;\n  return 1;\n}\n\n",
            "current_name": "initialize_adc_module_0800213c",
            "entrypoint": "0x0800213c",
            "imported": false,
            "improved": true,
            "renaming": {
                "ADC_ConversionStop_Disable": "disable_adc_conversion",
                "FUN_0800213c": "initialize_adc_module_0800213c",
                "HAL_ADC_MspInit": "initialize_adc_peripheral",
                "iVar1": "conversion_result",
                "param_1": "adc_params",
                "uVar2": "bitwise_or_result",
                "uVar3": "config_value",
                "uint": "unsigned_int"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800224c": {
            "additional_data": {
                "ADC_ConversionStop_Disable": {
                    "disable_adc_conv_stop": 1,
                    "disable_adc_conversion_stop": 2,
                    "get_adc_conversion_stop_result": 1,
                    "stop_adc_conversion": 3,
                    "stop_adc_conversion_disable": 1,
                    "stop_and_disable_conversion": 1,
                    "stop_conversion": 1
                },
                "FUN_080020f0": {
                    "adc_conversion_stop_disable": 4,
                    "deinit_function": 1,
                    "disable_adc_conversion_stop": 2,
                    "function2": 1,
                    "stop_adc_conversion": 1
                },
                "FUN_0800224c": {
                    "cleanup_adc": 1,
                    "cleanup_and_disable_adc": 1,
                    "cleanup_and_stop_adc": 1,
                    "clear_adc_error": 1,
                    "clear_adc_settings": 1,
                    "configure_adc": 1,
                    "disable_adc": 1,
                    "disable_adc_and_reset": 1,
                    "disable_adc_conversion": 2,
                    "disable_adc_conversion_and_cleanup": 1,
                    "improve_func": 1,
                    "initialize_adc": 3,
                    "modify_param": 1,
                    "process_adc_data": 1,
                    "reconfigure_adc": 1,
                    "reconfigure_adc_parameters": 1,
                    "reset_adc": 3,
                    "reset_and_disable_adc": 1,
                    "reset_device": 1,
                    "reset_device_settings": 1,
                    "stop_adc_conversion": 5
                },
                "FUN_080049f0": {
                    "adc_msp_de_init": 1,
                    "cleanup_adc_configuration": 1,
                    "function1": 1,
                    "hal_adc_msp_de_init": 3,
                    "initialize_adc_params": 1,
                    "reset_adc_stop_conversion": 1,
                    "stop_conversion": 1
                },
                "HAL_ADC_MspDeInit": {
                    "deinitialize_adc": 10,
                    "deinitialize_hal_adc": 1
                },
                "HAl_ADC_MspDeInit": {
                    "deinitialize_adc": 1
                },
                "iVar1": {
                    "error_flag": 1,
                    "result": 26,
                    "return_value": 3,
                    "status": 1
                },
                "param_1": {
                    "adc_config": 7,
                    "adc_data": 4,
                    "adc_params": 6,
                    "adc_pointer": 1,
                    "adc_settings": 1,
                    "adc_structure": 1,
                    "config": 2,
                    "data": 1,
                    "device": 1,
                    "device_settings": 1,
                    "input_array": 2,
                    "input_ptr": 1,
                    "param_ptr": 1,
                    "parameters": 1,
                    "ptr": 1
                },
                "undefined4": {
                    "value": 1
                }
            },
            "called": [
                "FUN_080049f0",
                "FUN_080020f0"
            ],
            "calling": [
                "FUN_08004a4c"
            ],
            "code": "\nint reset_and_disable_adc_0800224c(int *adc_config)\n\n{\n  int result;\n  \n  if (adc_config == (int *)0x0) {\n    result = 1;\n  }\n  else {\n    adc_config[10] = adc_config[10] | 2;\n    result = stop_adc_conversion();\n    if (result == 0) {\n      *(value *)*adc_config = 0xffffffe0;\n      *(uint *)(*adc_config + 4) = *(uint *)(*adc_config + 4) & 0xff3f0000;\n      *(uint *)(*adc_config + 8) = *(uint *)(*adc_config + 8) & 0xff0106f0;\n      *(uint *)(*adc_config + 0xc) = *(uint *)(*adc_config + 0xc) & 0xff000000;\n      *(uint *)(*adc_config + 0x10) = *(uint *)(*adc_config + 0x10) & 0xc0000000;\n      *(uint *)(*adc_config + 0x14) = *(uint *)(*adc_config + 0x14) & 0xfffff000;\n      *(uint *)(*adc_config + 0x18) = *(uint *)(*adc_config + 0x18) & 0xfffff000;\n      *(uint *)(*adc_config + 0x1c) = *(uint *)(*adc_config + 0x1c) & 0xfffff000;\n      *(uint *)(*adc_config + 0x20) = *(uint *)(*adc_config + 0x20) & 0xfffff000;\n      *(uint *)(*adc_config + 0x24) = *(uint *)(*adc_config + 0x24) & 0xfffff000;\n      *(uint *)(*adc_config + 0x28) = *(uint *)(*adc_config + 0x28) & 0xfffff000;\n      *(uint *)(*adc_config + 0x2c) = *(uint *)(*adc_config + 0x2c) & 0xff000000;\n      *(uint *)(*adc_config + 0x2c) = *(uint *)(*adc_config + 0x2c) & 0xff000000;\n      *(uint *)(*adc_config + 0x30) = *(uint *)(*adc_config + 0x30) & 0xc0000000;\n      *(uint *)(*adc_config + 0x34) = *(uint *)(*adc_config + 0x34) & 0xc0000000;\n      *(uint *)(*adc_config + 0x38) = *(uint *)(*adc_config + 0x38) & 0xffc00000;\n      *(uint *)(*adc_config + 0x38) = *(uint *)(*adc_config + 0x38) & 0xffc00000;\n      deinitialize_adc(adc_config);\n      adc_config[0xb] = 0;\n      adc_config[10] = 0;\n    }\n    *(undefined *)(adc_config + 9) = 0;\n  }\n  return result;\n}\n\n",
            "current_name": "reset_and_disable_adc_0800224c",
            "entrypoint": "0x0800224c",
            "imported": false,
            "improved": true,
            "renaming": {
                "ADC_ConversionStop_Disable": "stop_adc_conversion",
                "FUN_0800224c": "reset_and_disable_adc_0800224c",
                "HAL_ADC_MspDeInit": "deinitialize_adc",
                "iVar1": "result",
                "param_1": "adc_config",
                "undefined4": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002348": {
            "additional_data": {
                "0": {
                    "adc_state_flag_disabled": 1
                },
                "0xffffeefe": {
                    "adc_control_mask": 1,
                    "conversion_flags_mask": 1,
                    "data_mask": 1,
                    "settings_mask": 1
                },
                "1": {
                    "adc_modified": 1,
                    "adc_state_flag_enabled": 1,
                    "status_active": 1
                },
                "ADC_ConversionStop_Disable": {
                    "disable_adc_conversion": 1,
                    "disable_adc_conversion_stop": 4,
                    "disable_conversion_stop": 1,
                    "stop_adc_conversion": 4
                },
                "DAT_0800236d": {
                    "adc_status": 1
                },
                "DAT_080024": {
                    "conversion_flag": 1
                },
                "FUN_080020f0": {
                    "adc_conversion_stop_disable": 1,
                    "stop_adc_and_return_status": 1,
                    "stop_conversion": 1
                },
                "FUN_08002348": {
                    "check_adc_conversion_status": 2,
                    "check_adc_state": 1,
                    "check_adc_status": 3,
                    "check_and_configure_adc": 1,
                    "check_and_disable_adc_conversion": 1,
                    "check_and_handle_adc_conversion": 1,
                    "check_and_modify_adc": 1,
                    "check_and_modify_adc_settings": 1,
                    "check_and_modify_flag": 1,
                    "check_and_modify_parameter": 1,
                    "check_and_modify_status": 1,
                    "check_and_set_flag": 1,
                    "check_and_stop_adc_conversion": 1,
                    "check_and_toggle": 1,
                    "check_and_update_status": 2,
                    "check_status_and_enable_conversion": 1,
                    "enable_adc_conversion": 1,
                    "handle_adc_conversion": 2,
                    "perform_adc_conversion": 1,
                    "process_adc_conversion": 1,
                    "process_param": 2,
                    "reverse_and_update_status": 1,
                    "update_state": 1,
                    "update_status": 1
                },
                "F_UNPACK": {
                    "unpack_data": 1
                },
                "PTR_DTOA_08000a64": {
                    "constant_value": 1
                },
                "iVar1": {
                    "adc_status": 1,
                    "conversion_result": 7,
                    "conversion_status": 4,
                    "error": 1,
                    "result": 11,
                    "stop_error": 1,
                    "stop_result": 5,
                    "stop_status": 1
                },
                "param_1": {
                    "adc_data": 1,
                    "adc_data_ptr": 2,
                    "adc_state": 1,
                    "adc_status": 1,
                    "base_address": 2,
                    "context_address": 1,
                    "data": 5,
                    "data_ptr": 1,
                    "device": 1,
                    "function_input": 1,
                    "input_address": 2,
                    "input_data": 2,
                    "input_struct": 1,
                    "memory_address": 1,
                    "param": 4,
                    "parameter_1": 1,
                    "state": 1,
                    "status": 2,
                    "status_ptr": 1
                },
                "x24": {
                    "conversion_status": 1
                },
                "x28": {
                    "adc_data": 1
                }
            },
            "called": [
                "FUN_080020f0"
            ],
            "calling": [
                "FUN_08004a4c"
            ],
            "code": "\nint check_adc_conversion_status_08002348(int data)\n\n{\n  int result;\n  \n  if (*(char *)(data + 0conversion_status) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(data + 0conversion_status) = 1;\n  result = disable_adc_conversion_stop();\n  if (result == 0) {\n    *(uint *)(data + 0adc_data) = *(uint *)(data + 0adc_data) & 0xffffeefe | 1;\n  }\n  *(undefined *)(data + 0conversion_status) = 0;\n  return result;\n}\n\n",
            "current_name": "check_adc_conversion_status_08002348",
            "entrypoint": "0x08002348",
            "imported": false,
            "improved": true,
            "renaming": {
                "ADC_ConversionStop_Disable": "disable_adc_conversion_stop",
                "FUN_08002348": "check_adc_conversion_status_08002348",
                "iVar1": "result",
                "param_1": "data",
                "x24": "conversion_status",
                "x28": "adc_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002384": {
            "additional_data": {
                "FUN_08001cc4": {
                    "adc_conversion_stop_disable": 1
                },
                "FUN_08001f84": {
                    "adc_enable": 1
                },
                "FUN_080020f0": {
                    "hal_get_tick": 1
                },
                "FUN_08002384": {
                    "check_and_enable_adc": 1,
                    "initialize_adc": 16,
                    "initialize_adc_and_wait": 1,
                    "perform_adc_conversion": 10,
                    "start_adc_conversion": 1
                },
                "FUN_08003da4": {
                    "hal_rcc_ex_get_periph_clk_freq": 1
                },
                "iVar2": {
                    "adc_conversion_stop_result": 1,
                    "adc_status": 2,
                    "adc_stop_result": 1,
                    "conversion_result": 3,
                    "conversion_status": 1,
                    "conversion_stop_result": 2,
                    "result": 3,
                    "stop_disable_result": 2,
                    "stop_result": 11,
                    "stop_status": 5
                },
                "iVar4": {
                    "initial_time": 1,
                    "start_tick": 11,
                    "start_tick_count": 1,
                    "start_time": 13,
                    "tick_start": 2,
                    "tick_val1": 1,
                    "tick_value1": 1
                },
                "iVar5": {
                    "current_tick": 11,
                    "current_tick_count": 1,
                    "current_time": 13,
                    "tick": 1,
                    "tick_current": 2,
                    "tick_val2": 1,
                    "tick_value2": 1
                },
                "local_14": {
                    "iteration_count": 9,
                    "iteration_counter": 1,
                    "loop_count": 2,
                    "loop_counter": 17,
                    "loop_iterations": 1
                },
                "param_1": {
                    "adc_array": 1,
                    "adc_config": 2,
                    "adc_data": 7,
                    "adc_params": 18,
                    "config": 1,
                    "input_array": 2
                },
                "uVar1": {
                    "adc_periph_freq": 1,
                    "clock_freq": 3,
                    "clock_frequency": 4,
                    "data_offset": 1,
                    "data_rate": 3,
                    "division_result": 2,
                    "divisor": 1,
                    "freq_constant": 1,
                    "freq_dividend": 1,
                    "freq_divisor": 1,
                    "frequency": 5,
                    "max_adc_value": 1,
                    "periph_clk_freq": 2,
                    "periph_freq": 1,
                    "peripheral_frequency": 1,
                    "ratio": 1,
                    "sys_clock_freq": 1,
                    "timer_frequency": 1
                },
                "uVar3": {
                    "adc_frequency": 1,
                    "clk_freq": 1,
                    "clock_freq": 6,
                    "clock_frequency": 6,
                    "freq": 1,
                    "freq_divider": 1,
                    "freq_result": 1,
                    "frequency": 2,
                    "periph_clk_freq": 3,
                    "periph_clock_freq": 1,
                    "periph_freq": 2,
                    "periph_range": 1,
                    "peripheral_clk_freq": 1,
                    "peripheral_clock_frequency": 1,
                    "peripheral_frequency": 2,
                    "rcc_periph_freq": 1
                }
            },
            "called": [
                "FUN_08001cc4",
                "FUN_08001f84",
                "FUN_08003da4",
                "FUN_080020f0"
            ],
            "calling": [
                "FUN_08004a4c"
            ],
            "code": "\nint initialize_adc_and_wait_08002384(int *adc_params)\n\n{\n  uint frequency;\n  int stop_result;\n  uint clock_frequency;\n  int start_time;\n  int current_time;\n  int loop_counter;\n  \n  if (*(char *)(adc_params + 9) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(adc_params + 9) = 1;\n  stop_result = ADC_ConversionStop_Disable();\n  if (stop_result == 0) {\n    adc_params[10] = adc_params[10] & 0xffffeefdU | 2;\n    frequency = DAT_20000084;\n    clock_frequency = HAL_RCCEx_GetPeriphCLKFreq(2);\n    for (loop_counter = frequency / clock_frequency << 1; loop_counter != 0; loop_counter = loop_counter + -1) {\n    }\n    ADC_Enable(adc_params);\n    *(uint *)(*adc_params + 8) = *(uint *)(*adc_params + 8) | 8;\n    start_time = HAL_GetTick();\n    while (current_time = *adc_params, (*(uint *)(current_time + 8) & 8) != 0) {\n      current_time = HAL_GetTick();\n      if (10 < (uint)(current_time - start_time)) {\n        adc_params[10] = adc_params[10] & 0xffffffedU | 0x10;\n        *(undefined *)(adc_params + 9) = 0;\n        return 1;\n      }\n    }\n    *(uint *)(current_time + 8) = *(uint *)(current_time + 8) | 4;\n    start_time = HAL_GetTick();\n    while ((*(uint *)(*adc_params + 8) & 4) != 0) {\n      current_time = HAL_GetTick();\n      if (10 < (uint)(current_time - start_time)) {\n        adc_params[10] = adc_params[10] & 0xffffffedU | 0x10;\n        *(undefined *)(adc_params + 9) = 0;\n        return 1;\n      }\n    }\n    adc_params[10] = adc_params[10] & 0xfffffffcU | 1;\n  }\n  *(undefined *)(adc_params + 9) = 0;\n  return stop_result;\n}\n\n",
            "current_name": "initialize_adc_and_wait_08002384",
            "entrypoint": "0x08002384",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002384": "initialize_adc_and_wait_08002384",
                "iVar2": "stop_result",
                "iVar4": "start_time",
                "iVar5": "current_time",
                "local_14": "loop_counter",
                "param_1": "adc_params",
                "uVar1": "frequency",
                "uVar3": "clock_frequency"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002470": {
            "additional_data": {
                "0x5fa0000": {
                    "new_flag": 1
                },
                "FUN_08002470": {
                    "configure_flags": 1,
                    "initialize_flags": 1,
                    "set_bit_pattern": 2,
                    "set_bit_value": 1,
                    "set_bitmask_and_value": 1,
                    "set_config_value": 1,
                    "set_high_bits": 1,
                    "set_memory_config": 1,
                    "set_memory_value": 1,
                    "set_register_bits": 1,
                    "update_configuration": 2,
                    "update_control_register": 1,
                    "update_data": 2,
                    "update_data_register": 1,
                    "update_display_configuration": 1,
                    "update_e000ed0c_value": 1,
                    "update_flag_value": 1,
                    "update_flags": 1,
                    "update_flags_in_register": 1,
                    "update_register_value": 5,
                    "update_value": 1,
                    "update_values": 1,
                    "update_variable": 1
                },
                "_08002470": {
                    "update_register_value": 1
                },
                "_DAT_e000ed0c": {
                    "config_register": 1,
                    "configuration_value": 1,
                    "control_register": 1,
                    "current_value": 1,
                    "data_register": 4,
                    "data_value": 1,
                    "display_configuration": 1,
                    "existing_value": 1,
                    "flag_value": 1,
                    "flags": 1,
                    "memory_location": 1,
                    "register_address": 1,
                    "register_value": 9
                },
                "param_1": {
                    "config": 1,
                    "config_bits": 1,
                    "config_value": 2,
                    "data": 1,
                    "flag": 1,
                    "flag_value": 1,
                    "input": 3,
                    "input_value": 13,
                    "new_value": 3,
                    "register_value": 1,
                    "value": 4
                }
            },
            "called": [],
            "calling": [
                "FUN_08001c88",
                "FUN_08005f5e"
            ],
            "code": "\n\n\nvoid update_register_value_08002470(uint input_value)\n\n{\n  _DAT_e000ed0c = (input_value & 7) << 8 | _DAT_e000ed0c & 0xf8ff | 0x5fa0000;\n  return;\n}\n\n",
            "current_name": "update_register_value_08002470",
            "entrypoint": "0x08002470",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002470": "update_register_value_08002470",
                "_08002470": "update_register_value",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002494": {
            "additional_data": {
                "FUN_08002494": {
                    "apply_transformation": 1,
                    "extract_and_store_bits": 1,
                    "reverse_and_store_bits": 1,
                    "set_char_in_memory": 1,
                    "update_char_array": 1,
                    "update_char_in_memory": 1,
                    "update_char_value": 1,
                    "update_character": 3,
                    "update_data": 3,
                    "update_memory": 6,
                    "update_memory_byte": 1,
                    "update_memory_data": 1,
                    "update_register": 2,
                    "update_register_bit": 1,
                    "update_register_value": 2,
                    "update_registers": 1,
                    "update_value": 1,
                    "write_data_to_memory": 1,
                    "write_to_memory": 1
                },
                "char": {
                    "byte": 1
                },
                "param_1": {
                    "addr": 1,
                    "address": 13,
                    "char_index": 1,
                    "character_index": 2,
                    "data_offset": 1,
                    "input_param": 1,
                    "input_value": 1,
                    "memory_offset": 1,
                    "offset": 1,
                    "parameter1": 1,
                    "pointer": 1,
                    "register": 1,
                    "register_addr": 1,
                    "register_address": 1,
                    "register_offset": 2,
                    "source": 1,
                    "target_address": 1
                },
                "param_2": {
                    "and_mask": 1,
                    "bit_mask": 1,
                    "bitmask": 1,
                    "bitmask1": 2,
                    "data": 1,
                    "data1": 2,
                    "data_bits": 1,
                    "data_in": 1,
                    "data_param1": 1,
                    "input_value": 1,
                    "mask": 9,
                    "mask1": 1,
                    "parameter2": 1,
                    "register": 1,
                    "register_value": 1,
                    "source": 1,
                    "source_value": 1,
                    "value": 1,
                    "value1": 2,
                    "value_to_set": 1
                },
                "param_3": {
                    "bit_mask": 1,
                    "bitmask2": 2,
                    "data": 5,
                    "data2": 2,
                    "data_out": 1,
                    "data_param2": 1,
                    "destination": 1,
                    "mask": 4,
                    "mask2": 1,
                    "mask_bits": 1,
                    "or_mask": 1,
                    "parameter3": 1,
                    "target_value": 1,
                    "value": 7,
                    "value2": 2
                },
                "uVar1": {
                    "bit_mask": 1,
                    "bit_shift_amount": 1,
                    "offset": 1,
                    "result": 2,
                    "shift_amount": 12,
                    "shifted_and_mask": 1,
                    "shifted_bits": 6,
                    "shifted_data": 2,
                    "shifted_masked_value": 1,
                    "shifted_param1": 1,
                    "shifted_value": 2,
                    "updated_value": 1
                },
                "uVar1_dec": {
                    "adjusted_shift_amount": 1
                },
                "uVar1_masked": {
                    "masked_data": 1
                },
                "uVar1_shifted": {
                    "shifted_data": 1
                },
                "uVar1_valid": {
                    "is_valid_shift_amount": 1
                },
                "uVar2": {
                    "adjusted_shift_amount": 3,
                    "adjustment": 1,
                    "available_bits": 1,
                    "bit_mask": 1,
                    "bit_position": 2,
                    "count": 1,
                    "difference": 1,
                    "effective_bit": 1,
                    "effective_size": 1,
                    "inverse_shift": 1,
                    "limit": 1,
                    "num_bits_to_set": 1,
                    "number_of_bits": 1,
                    "remaining_bits": 5,
                    "shift_amount": 3,
                    "shift_count": 1,
                    "shift_value_2": 1,
                    "shifted_amount": 1,
                    "shifted_bitmask": 1,
                    "shifted_bits_minus3": 1,
                    "shifted_mask": 1,
                    "write_value": 1
                },
                "uVar2_dec": {
                    "adjusted_mask": 1
                },
                "uVar2_masked": {
                    "masked_mask": 1
                },
                "uVar2_shifted": {
                    "shifted_mask": 1
                },
                "uVar2_valid": {
                    "is_valid_mask": 1
                },
                "uVar3": {
                    "mask_result": 1,
                    "reversed_bits": 1,
                    "shifted_mask": 1,
                    "temp": 1,
                    "temp_value": 1
                },
                "uVar4": {
                    "shift_amount": 1,
                    "temp2": 1
                },
                "uVar5": {
                    "temp_result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005510",
                "FUN_08005568",
                "FUN_08001c3c",
                "FUN_08001b48"
            ],
            "code": "\n\n\nvoid update_char_in_memory_08002494(uint address,uint mask,uint value)\n\n{\n  uint shift_amount;\n  uint remaining_bits;\n  \n  shift_amount = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  remaining_bits = 7 - shift_amount;\n  if (3 < remaining_bits) {\n    remaining_bits = 4;\n  }\n  if (shift_amount + 4 < 7) {\n    shift_amount = 0;\n  }\n  else {\n    shift_amount = shift_amount - 3;\n  }\n  shift_amount = (mask & (1 << (remaining_bits & 0xff)) - 1U) << (shift_amount & 0xff) |\n          (1 << (shift_amount & 0xff)) - 1U & value;\n  if ((int)address < 0) {\n    *(byte *)((address & 0xf) + 0xe000ed14) = (byte)(shift_amount << 4);\n  }\n  else {\n    *(byte *)(address + 0xe000e400) = (byte)(shift_amount << 4);\n  }\n  return;\n}\n\n",
            "current_name": "update_char_in_memory_08002494",
            "entrypoint": "0x08002494",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002494": "update_char_in_memory_08002494",
                "char": "byte",
                "param_1": "address",
                "param_2": "mask",
                "param_3": "value",
                "uVar1": "shift_amount",
                "uVar2": "remaining_bits"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080024f8": {
            "additional_data": {
                "1": {
                    "bit_flag": 1
                },
                "DAT_080024f8": {
                    "bit_array": 1
                },
                "FUN_080024f8": {
                    "set_bit": 13,
                    "set_bit_at_index": 4,
                    "set_bit_at_position": 2,
                    "set_bit_in_array": 5,
                    "set_bit_in_data": 1,
                    "set_bit_in_int_array": 1,
                    "set_bit_in_integer_array": 1,
                    "set_bit_in_memory": 3,
                    "set_bit_value": 1
                },
                "int": {
                    "array": 1,
                    "bit_array": 1
                },
                "newVariable1": {
                    "variable_name1": 1
                },
                "newVariable2": {
                    "variable_name2": 1
                },
                "newVariableN": {
                    "variable_name_n": 1
                },
                "param_1": {
                    "bit_index": 12,
                    "bit_position": 4,
                    "index": 10,
                    "input": 2,
                    "position": 2,
                    "value": 1
                },
                "param_2": {
                    "new_parameter2": 1,
                    "value": 1
                },
                "param_3": {
                    "array": 1,
                    "new_parameter3": 1
                },
                "param_4": {
                    "array_length": 1
                },
                "param_n": {
                    "new_parameter_n": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005510",
                "FUN_08005568"
            ],
            "code": "\nvoid set_bit_in_integer_array_080024f8(ubit_array bit_index)\n\n{\n  if (-1 < (bit_array)bit_index) {\n    *(bit_array *)((bit_index >> 5) * 4 + -0x1fff1f00) = 1 << (bit_index & 0x1f);\n  }\n  return;\n}\n\n",
            "current_name": "set_bit_in_integer_array_080024f8",
            "entrypoint": "0x080024f8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080024f8": "set_bit_in_integer_array_080024f8",
                "int": "bit_array",
                "param_1": "bit_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002514": {
            "additional_data": {
                "0": {
                    "default_offset": 1,
                    "initial_flag_value": 1
                },
                "0xf0": {
                    "default_data_value": 1,
                    "initial_status_value": 1
                },
                "7": {
                    "default_pattern": 1,
                    "initial_constant_value": 1
                },
                "DAT_e000ed23": {
                    "config_value": 1,
                    "constant": 1,
                    "constant_value": 3,
                    "data": 1,
                    "data_type": 1,
                    "data_value": 1,
                    "flag": 4,
                    "memory_region_size": 1,
                    "memory_value": 2,
                    "output_value": 1,
                    "register_2": 1,
                    "status": 9,
                    "status_code": 1,
                    "status_register": 1
                },
                "FUN_08002514": {
                    "initialize_data": 4,
                    "initialize_memory": 8,
                    "initialize_memory_region": 1,
                    "initialize_settings": 1,
                    "initialize_system": 1,
                    "set_configuration": 1,
                    "set_data_parameters": 1,
                    "set_initial_values": 3,
                    "set_param_values": 2,
                    "set_parameters": 6,
                    "set_register_values": 1,
                    "set_values": 1,
                    "update_settings": 1
                },
                "_DAT_e000e010": {
                    "additional_value": 1,
                    "bitmask": 2,
                    "config_mode": 1,
                    "constant": 3,
                    "count": 2,
                    "counter": 4,
                    "data_length": 1,
                    "error_code": 1,
                    "flag": 5,
                    "limit": 1,
                    "mask": 1,
                    "number_of_bytes": 1,
                    "param_seven": 1,
                    "pattern": 1,
                    "priority": 1,
                    "register_4": 1,
                    "threshold": 3,
                    "type": 1
                },
                "_DAT_e000e014": {
                    "base_address": 2,
                    "config_register": 1,
                    "data_address": 1,
                    "data_ptr": 1,
                    "data_value": 1,
                    "input_minus_one": 1,
                    "last_value": 1,
                    "memory_address": 4,
                    "memory_region_start": 1,
                    "memory_size": 1,
                    "modified_input_value": 1,
                    "modified_value": 5,
                    "new_value": 1,
                    "param_minus_one": 1,
                    "previous_setting": 1,
                    "previous_value": 1,
                    "register_1": 1,
                    "start_address": 2,
                    "system_config": 1,
                    "updated_value": 2,
                    "value_minus_one": 1
                },
                "_DAT_e000e018": {
                    "additional_value": 2,
                    "another_value": 1,
                    "config_flag": 1,
                    "count": 1,
                    "counter": 12,
                    "data_offset": 1,
                    "extra_value": 1,
                    "flag": 3,
                    "initialized_value": 1,
                    "offset": 4,
                    "param_zero": 1,
                    "register_3": 1,
                    "reserved": 1
                },
                "param_1": {
                    "address": 1,
                    "input": 1,
                    "input_value": 1,
                    "new_value": 1,
                    "size": 3,
                    "value": 24
                }
            },
            "called": [],
            "calling": [
                "FUN_08001c3c",
                "FUN_08001b48"
            ],
            "code": "\n\n\nundefined4 initialize_memory_region_08002514(int value)\n\n{\n  if (value - 1U < 0x1000000) {\n    _DAT_e000e014 = value - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "initialize_memory_region_08002514",
            "entrypoint": "0x08002514",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002514": "initialize_memory_region_08002514",
                "param_1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002540": {
            "additional_data": {
                "0x1fff1f00": {
                    "base_address": 1
                },
                "0x60": {
                    "bits_per_element": 1
                },
                "FUN_08002540": {
                    "set_bit": 7,
                    "set_bit_at_index": 1,
                    "set_bit_at_offset": 1,
                    "set_bit_at_position": 3,
                    "set_bit_in_array": 12,
                    "set_bit_in_memory": 3,
                    "set_bit_in_pointer": 1,
                    "set_bit_value": 2,
                    "store_bitmask_in_memory": 1
                },
                "int": {
                    "int": 1
                },
                "param_1": {
                    "bit_index": 11,
                    "bit_offset": 1,
                    "bit_position": 7,
                    "index": 9,
                    "position": 3
                },
                "param_2": {
                    "value": 1
                },
                "param_3": {
                    "bit_mask": 1
                },
                "param_4": {
                    "bit_offset": 1
                }
            },
            "called": [],
            "calling": [],
            "code": "\nvoid set_bit_in_array_08002540(uint bit_index)\n\n{\n  if (-1 < (int)bit_index) {\n    *(int *)(((bit_index >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (bit_index & 0x1f);\n  }\n  return;\n}\n\n",
            "current_name": "set_bit_in_array_08002540",
            "entrypoint": "0x08002540",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002540": "set_bit_in_array_08002540",
                "param_1": "bit_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002560": {
            "additional_data": {
                "0xfffffffb": {
                    "bit_mask": 1
                },
                "4": {
                    "flag_value": 1
                },
                "FUN_08002560": {
                    "configure_interrupt": 1,
                    "set_e000e010_bit": 2,
                    "set_feature_flag": 1,
                    "set_flag": 7,
                    "update_control_register": 8,
                    "update_e000e010": 1,
                    "update_e000e010_flag": 1,
                    "update_flag": 3,
                    "update_flags": 1,
                    "update_register": 2,
                    "update_register_flag": 1,
                    "update_register_setting": 1,
                    "update_status": 2
                },
                "_DAT_e000e010": {
                    "control_register": 8,
                    "e000e010_flag": 1,
                    "feature_flag": 1,
                    "flag": 2,
                    "flag_register": 4,
                    "flags": 1,
                    "register": 3,
                    "register_flag": 1,
                    "register_setting": 1,
                    "register_value": 2,
                    "status_register": 2
                },
                "param_1": {
                    "flag": 4,
                    "flag_value": 5,
                    "input_value": 4,
                    "interrupt_type": 1,
                    "state": 1,
                    "status": 3,
                    "value": 13
                },
                "param_2": {
                    "new_parameter_name": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001b48"
            ],
            "code": "\n\n\nvoid update_control_register_08002560(int value)\n\n{\n  if (value != 4) {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n    return;\n  }\n  _DAT_e000e010 = _DAT_e000e010 | 4;\n  return;\n}\n\n",
            "current_name": "update_control_register_08002560",
            "entrypoint": "0x08002560",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002560": "update_control_register_08002560",
                "param_1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002580": {
            "called": [],
            "calling": [
                "FUN_08002582"
            ],
            "code": "\nvoid FUNC_08002580(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08002580",
            "entrypoint": "0x08002580",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08002580": "FUNC_08002580"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08002582": {
            "additional_data": {
                "FUNC_08002580": {
                    "configure_systick": 1,
                    "do_something": 2,
                    "hal_systick_callback": 1,
                    "handle_systick_interrupt": 1,
                    "initialize": 2,
                    "initialize_subsystem": 1,
                    "initialize_sys_tick": 1,
                    "initialize_system": 3,
                    "initialize_system_tick": 1,
                    "initialize_systick_callback": 1,
                    "perform_additional_actions": 1,
                    "perform_callback": 1,
                    "perform_low_level_initialization": 1,
                    "perform_operation": 1,
                    "perform_some_task": 2,
                    "perform_system_initialization": 1,
                    "perform_system_reset": 1,
                    "perform_systick_callback": 1,
                    "perform_task": 1,
                    "process_func8082580": 1,
                    "reinitialize": 1
                },
                "FUN_08002582": {
                    "execute_hal_systick_callback": 1,
                    "execute_sys_tick_callback": 2,
                    "execute_systick_callback": 1,
                    "handle_sys_tick": 1,
                    "handle_sys_tick_callback": 3,
                    "handle_sys_tick_interrupt": 1,
                    "handle_systick_interrupt": 1,
                    "initialize_sys_tick": 3,
                    "initialize_system": 2,
                    "initialize_system_tick": 2,
                    "initialize_systick": 5,
                    "perform_hardware_initialization": 1,
                    "perform_sys_tick_callback": 1,
                    "process_systick_callback": 1,
                    "systick_callback": 1,
                    "update_sys_tick_callback": 1,
                    "update_system_tick_callback": 1,
                    "update_system_ticks": 1,
                    "update_system_timer": 1,
                    "update_systick_callback": 1
                },
                "HAL_SYSTICK_Callback": {
                    "handle_sys_tick_callback": 1,
                    "handle_sys_tick_interrupt": 1,
                    "handle_system_tick": 1,
                    "handle_systick_callback": 1,
                    "handle_systick_interrupt": 1,
                    "perform_system_tick_callback": 1,
                    "process_sys_tick": 1,
                    "system_tick_handler": 1,
                    "systick_callback": 3,
                    "tick_handler": 1
                }
            },
            "called": [
                "FUN_08002580"
            ],
            "calling": [
                "FUN_08004b9e"
            ],
            "code": "\nvoid initialize_systick_08002582(void)\n\n{\n  systick_callback();\n  return;\n}\n\n",
            "current_name": "initialize_systick_08002582",
            "entrypoint": "0x08002582",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002582": "initialize_systick_08002582",
                "HAL_SYSTICK_Callback": "systick_callback"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800258c": {
            "additional_data": {
                "0x02": {
                    "config_status_valid": 1
                },
                "0x21": {
                    "config_status": 1,
                    "status_code": 1
                },
                "0x4": {
                    "config_status_error": 1
                },
                "0x40020008": {
                    "option1": 1
                },
                "0x4002001c": {
                    "option2": 1
                },
                "0x40020030": {
                    "option3": 1
                },
                "0x40020044": {
                    "option4": 1
                },
                "0x40020058": {
                    "option5": 1
                },
                "0x4002006c": {
                    "option6": 1
                },
                "0xe": {
                    "config_status_index": 1,
                    "error_code": 1
                },
                "0xfffffff1": {
                    "bitwise_and_mask_1": 1
                },
                "0xfffffffe": {
                    "bitwise_and_mask_2": 1
                },
                "1": {
                    "config_status_updated": 1
                },
                "FUN_0800258c": {
                    "configure_and_initialize": 1,
                    "configure_device": 1,
                    "configure_hardware": 2,
                    "configure_memory": 1,
                    "configure_options": 1,
                    "decode_and_set_value": 1,
                    "initialize_data": 7,
                    "initialize_settings": 1,
                    "process_data": 1,
                    "process_param": 1,
                    "set_configuration": 6,
                    "set_data_and_mode": 1,
                    "set_data_parameters": 1,
                    "set_mode": 1,
                    "update_config": 1,
                    "update_configuration": 1,
                    "update_data": 1,
                    "update_flags_and_data": 1
                },
                "PTR_0800258c": {
                    "original_value": 1
                },
                "PTR_08002590": {
                    "callback_function": 1
                },
                "PTR_data": {
                    "data": 1
                },
                "PTR_value": {
                    "value": 1
                },
                "_DAT_40020004": {
                    "config_value": 2,
                    "config_value2": 1,
                    "data_40020004": 1,
                    "data_register": 1,
                    "data_updated": 1,
                    "device_settings": 1,
                    "global_config": 1,
                    "global_value": 1,
                    "global_variable": 2,
                    "hardware_setting": 1,
                    "hardware_value": 1,
                    "memory_size": 1,
                    "mode": 1,
                    "result": 2,
                    "selected_option": 1,
                    "system_setting": 1,
                    "target_value": 1
                },
                "_DAT_40020008": {
                    "constant1_ptr": 1
                },
                "_DAT_4002001c": {
                    "constant2_ptr": 1
                },
                "_DAT_40020030": {
                    "constant3_ptr": 1
                },
                "_DAT_40020044": {
                    "constant4_ptr": 1
                },
                "_DAT_40020058": {
                    "constant5_ptr": 1
                },
                "_DAT_4002006c": {
                    "constant6_ptr": 1
                },
                "param_1": {
                    "config": 4,
                    "config_data": 1,
                    "config_params": 3,
                    "config_ptr": 3,
                    "configuration": 2,
                    "data": 4,
                    "data_and_mode": 1,
                    "data_array": 1,
                    "data_pointer": 4,
                    "data_ptr": 1,
                    "input_data": 1,
                    "memory_config": 1,
                    "options": 1,
                    "param": 1,
                    "params": 1,
                    "settings": 1
                },
                "puVar1": {
                    "config_value": 1,
                    "current_config": 4,
                    "current_configuration": 1,
                    "current_option": 1,
                    "current_param": 2,
                    "current_pointer": 1,
                    "current_ptr": 1,
                    "current_setting": 1,
                    "current_value": 6,
                    "data_ptr": 1,
                    "pointer": 1,
                    "selected_config": 1,
                    "temp": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 1,
                    "value": 6
                }
            },
            "called": [],
            "calling": [
                "FUN_0800316c",
                "FUN_080046b8"
            ],
            "code": "\n\n\nundefined4 initialize_data_0800258c(uint **config)\n\n{\n  uint *current_value;\n  \n  if (*(char *)((int)config + 0x21) != '\\x02') {\n    config[0xe] = (uint *)0x4;\n    return 1;\n  }\n  **config = **config & 0xfffffff1;\n  **config = **config & 0xfffffffe;\n  current_value = *config;\n  if (current_value == (uint *)0x40020008) {\n    _DAT_40020004 = 1;\n  }\n  else if (current_value == (uint *)0x4002001c) {\n    _DAT_40020004 = 0x10;\n  }\n  else if (current_value == (uint *)0x40020030) {\n    _DAT_40020004 = 0x100;\n  }\n  else if (current_value == (uint *)0x40020044) {\n    _DAT_40020004 = 0x1000;\n  }\n  else if (current_value == (uint *)0x40020058) {\n    _DAT_40020004 = 0x10000;\n  }\n  else if (current_value == (uint *)0x4002006c) {\n    _DAT_40020004 = 0x100000;\n  }\n  else {\n    _DAT_40020004 = 0x1000000;\n  }\n  *(undefined *)((int)config + 0x21) = 1;\n  *(undefined *)(config + 8) = 0;\n  if (config[0xd] != (uint *)0x0) {\n    (*(code *)config[0xd])();\n    return 0;\n  }\n  return 0;\n}\n\n",
            "current_name": "initialize_data_0800258c",
            "entrypoint": "0x0800258c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800258c": "initialize_data_0800258c",
                "param_1": "config",
                "puVar1": "current_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002624": {
            "additional_data": {
                "FUN_08002624": {
                    "initialize_bits": 1,
                    "process_bits": 1,
                    "process_params": 1,
                    "update_bits": 5,
                    "update_config": 1,
                    "update_configuration": 1,
                    "update_configurations": 1,
                    "update_device_configuration": 1,
                    "update_flags": 5,
                    "update_flags_and_registers": 2,
                    "update_params": 1,
                    "update_register_settings": 1,
                    "update_register_values": 2,
                    "update_registers": 7,
                    "update_settings": 1
                },
                "iVar7": {
                    "bit_index": 1,
                    "bit_offset": 5,
                    "bit_pos": 1,
                    "bit_shift": 3,
                    "index": 2,
                    "index1": 1,
                    "reg_offset": 1,
                    "register_index": 1,
                    "shift": 7,
                    "shift_amount": 3,
                    "shift_amount1": 2,
                    "shift_count": 1,
                    "shift_index": 2,
                    "var1": 1
                },
                "iVar8": {
                    "index": 4,
                    "index2": 1,
                    "index_offset": 1,
                    "output_index": 1,
                    "param_index": 1,
                    "reg_index": 1,
                    "register_index": 17,
                    "register_offset": 1,
                    "register_value": 1,
                    "shift_amount2": 2,
                    "var2": 1
                },
                "param_1": {
                    "bit_array": 2,
                    "bit_array1": 1,
                    "bits_to_update": 2,
                    "config_array": 1,
                    "config_data": 1,
                    "configuration_data": 1,
                    "device_configuration": 1,
                    "flags": 1,
                    "input_flags": 1,
                    "output_array": 1,
                    "output_bits": 1,
                    "output_flags": 2,
                    "output_params": 1,
                    "output_values": 1,
                    "params": 1,
                    "register_array": 3,
                    "register_array1": 1,
                    "register_bits1": 1,
                    "register_settings1": 1,
                    "register_values": 2,
                    "registers": 3,
                    "registers_before_update": 1,
                    "settings": 1
                },
                "param_2": {
                    "bit_array2": 1,
                    "bit_values": 1,
                    "bitmask_flags": 1,
                    "bits_data": 1,
                    "config_array": 2,
                    "config_flags": 1,
                    "control_array": 1,
                    "data": 1,
                    "data_array": 1,
                    "flags": 5,
                    "input_array": 2,
                    "input_bits": 1,
                    "input_data": 2,
                    "input_flags": 2,
                    "input_params": 1,
                    "input_values": 2,
                    "new_configuration": 1,
                    "register_array2": 1,
                    "register_bits2": 1,
                    "register_settings2": 1,
                    "registers_to_update": 1,
                    "values": 1
                },
                "puVar1": {
                    "bit_ptr": 1,
                    "config_pointer": 1,
                    "config_ptr": 1,
                    "current_bit_array1_ptr": 1,
                    "current_output": 1,
                    "output_ptr": 2,
                    "param_ptr": 1,
                    "ptr1": 1,
                    "ptr_register_values": 1,
                    "ptr_registers": 1,
                    "reg_ptr": 1,
                    "result_ptr": 1,
                    "target_register": 1,
                    "updated_register_bits1": 1,
                    "updated_register_settings1": 1
                },
                "uVar2": {
                    "bit": 3,
                    "bit_mask": 27,
                    "current_bit": 1
                },
                "uVar3": {
                    "bit": 1,
                    "bit_and_result": 2,
                    "bit_check": 6,
                    "bit_mask": 2,
                    "bit_mask_result": 1,
                    "bit_result": 5,
                    "bit_value": 2,
                    "flag": 1,
                    "flag_bit": 2,
                    "flag_bits": 1,
                    "flag_mask": 2,
                    "flag_result": 1,
                    "input_bit": 2,
                    "input_params_mask": 1,
                    "input_value": 1,
                    "result": 1
                },
                "uVar4": {
                    "bit_index": 10,
                    "bit_pos": 1,
                    "bit_position": 3,
                    "counter": 3,
                    "flag_index": 1,
                    "i": 5,
                    "index": 7,
                    "loop_index": 1
                },
                "uVar5": {
                    "check_value": 1,
                    "config_value": 2,
                    "flag": 1,
                    "flag_type": 1,
                    "flag_value": 1,
                    "input_value": 1,
                    "opcode": 13,
                    "param_value": 1,
                    "temp_var": 1,
                    "type_value": 1,
                    "value": 7,
                    "value_check": 1
                },
                "uVar6": {
                    "bit_shift": 1,
                    "configuration_value": 1,
                    "new_bit_value": 1,
                    "new_value": 18,
                    "offset": 1,
                    "shift_amount": 1,
                    "update_value": 1,
                    "updated_value": 4,
                    "value": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_08004f4c",
                "FUN_08004bb0",
                "FUN_08004974"
            ],
            "code": "\n\n\nvoid update_flags_and_registers_08002624(uint *register_array,uint *flags)\n\n{\n  uint *output_ptr;\n  uint bit_mask;\n  uint bit_check;\n  uint bit_index;\n  uint opcode;\n  uint new_value;\n  int shift;\n  int register_index;\n  \n  new_value = 0;\n  bit_index = 0;\n  do {\n    if (0xf < bit_index) {\n      return;\n    }\n    bit_mask = 1 << (bit_index & 0xff);\n    bit_check = *flags & bit_mask;\n    if (bit_mask == bit_check) {\n      opcode = flags[1];\n      if (opcode == 0x12) {\n        new_value = flags[3] + 0xc;\n      }\n      else if (opcode < 0x13) {\n        if (opcode == 2) {\n          new_value = flags[3] + 8;\n        }\n        else if (opcode < 3) {\n          if (opcode == 0) goto LAB_08002776;\n          if (opcode == 1) {\n            new_value = flags[3];\n          }\n        }\n        else if (opcode == 3) {\n          new_value = 0;\n        }\n        else if (opcode == 0x11) {\n          new_value = flags[3] + 4;\n        }\n      }\n      else if (opcode == 0x10210000) {\nLAB_08002776:\n        if (flags[2] == 0) {\n          new_value = 4;\n        }\n        else if (flags[2] == 1) {\n          register_array[4] = bit_mask;\n          new_value = 8;\n        }\n        else {\n          register_array[5] = bit_mask;\n          new_value = 8;\n        }\n      }\n      else if (opcode < 0x10210001) {\n        if ((opcode == 0x10110000) || (opcode == 0x10120000)) goto LAB_08002776;\n      }\n      else if ((opcode == 0x10310000) || ((opcode == 0x10320000 || (opcode == 0x10220000))))\n      goto LAB_08002776;\n      bit_mask = bit_index;\n      output_ptr = register_array;\n      if (0xff < bit_check) {\n        bit_mask = bit_index - 8;\n        output_ptr = register_array + 1;\n      }\n      *output_ptr = *output_ptr & ~(0xf << (bit_mask << 2 & 0xff)) | new_value << (bit_mask << 2 & 0xff);\n      if ((flags[1] & 0x10000000) != 0) {\n        _DAT_40021018 = _DAT_40021018 | 1;\n        shift = (bit_index & 3) << 2;\n        if (register_array == (uint *)0x40010800) {\n          register_index = 0;\n        }\n        else if (register_array == (uint *)0x40010c00) {\n          register_index = 1;\n        }\n        else if (register_array == (uint *)0x40011000) {\n          register_index = 2;\n        }\n        else if (register_array == (uint *)0x40011400) {\n          register_index = 3;\n        }\n        else {\n          register_index = 4;\n        }\n        *(uint *)(((bit_index >> 2) + 2) * 4 + 0x40010000) =\n             *(uint *)(((bit_index >> 2) + 2) * 4 + 0x40010000) & ~(0xf << shift) | register_index << shift;\n        if ((flags[1] & 0x10000) == 0) {\n          _DAT_40010400 = _DAT_40010400 & ~bit_check;\n        }\n        else {\n          _DAT_40010400 = _DAT_40010400 | bit_check;\n        }\n        if ((flags[1] & 0x20000) == 0) {\n          _DAT_40010404 = _DAT_40010404 & ~bit_check;\n        }\n        else {\n          _DAT_40010404 = _DAT_40010404 | bit_check;\n        }\n        if ((flags[1] & 0x100000) == 0) {\n          _DAT_40010408 = _DAT_40010408 & ~bit_check;\n        }\n        else {\n          _DAT_40010408 = _DAT_40010408 | bit_check;\n        }\n        if ((flags[1] & 0x200000) == 0) {\n          _DAT_4001040c = _DAT_4001040c & ~bit_check;\n        }\n        else {\n          _DAT_4001040c = bit_check | _DAT_4001040c;\n        }\n      }\n    }\n    bit_index = bit_index + 1;\n  } while( true );\n}\n\n",
            "current_name": "update_flags_and_registers_08002624",
            "entrypoint": "0x08002624",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002624": "update_flags_and_registers_08002624",
                "iVar7": "shift",
                "iVar8": "register_index",
                "param_1": "register_array",
                "param_2": "flags",
                "puVar1": "output_ptr",
                "uVar2": "bit_mask",
                "uVar3": "bit_check",
                "uVar4": "bit_index",
                "uVar5": "opcode",
                "uVar6": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002810": {
            "additional_data": {
                "FUN_08002810": {
                    "check_bit": 16,
                    "check_bit_in_mask": 1,
                    "check_bit_presence": 1,
                    "check_bit_set": 1,
                    "check_bitmask": 1,
                    "check_bitwise_and": 1,
                    "check_bitwise_flag": 1,
                    "check_bitwise_intersection": 1,
                    "check_bitwise_match": 3,
                    "check_for_bitmatch": 1,
                    "check_if_bit_set": 1,
                    "check_param_bit": 3
                },
                "VAR_0001": {
                    "mask_bits": 1
                },
                "VAR_0002": {
                    "bit_position": 1
                },
                "VAR_0003": {
                    "bit_mask": 1
                },
                "param_1": {
                    "address": 3,
                    "address_offset": 1,
                    "base_address": 2,
                    "bit_mask": 1,
                    "data_address": 1,
                    "first_input": 1,
                    "input": 4,
                    "input_address": 1,
                    "input_data": 1,
                    "input_number": 1,
                    "input_value": 10,
                    "input_variable": 1,
                    "offset": 1,
                    "start_address": 1,
                    "value": 2
                },
                "param_2": {
                    "bit_mask": 18,
                    "bitmask": 5,
                    "flag": 1,
                    "is_set": 1,
                    "mask_value": 2,
                    "second_input": 1,
                    "value": 3
                },
                "param_3": {
                    "bit_mask": 1,
                    "result": 2
                },
                "result": {
                    "is_bit_set": 1
                },
                "value": {
                    "mask": 1
                },
                "var_1": {
                    "flag": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004c48"
            ],
            "code": "\nundefined4 check_param_bit_08002810(int input_value,uint bit_mask)\n\n{\n  if ((bit_mask & *(uint *)(input_value + 8)) == 0) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "check_param_bit_08002810",
            "entrypoint": "0x08002810",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002810": "check_param_bit_08002810",
                "param_1": "input_value",
                "param_2": "bit_mask"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800281e": {
            "additional_data": {
                "FUN_0800281e": {
                    "set_integer_value": 1,
                    "set_param": 5,
                    "set_param_value": 10,
                    "set_parameter": 1,
                    "set_parameter_value": 1,
                    "set_value": 1,
                    "set_value_based_on_condition": 1,
                    "set_value_in_memory": 1,
                    "store_parameter_value": 1,
                    "store_value": 1,
                    "update_param": 3,
                    "update_parameter": 1,
                    "update_parameter_value": 2,
                    "update_value": 2
                },
                "param_1": {
                    "address": 2,
                    "base_address": 10,
                    "data_pointer": 1,
                    "memory_address": 1,
                    "obj_addr": 1,
                    "object": 2,
                    "object_address": 9,
                    "object_ptr": 1,
                    "parameter1": 1,
                    "struct_address": 1,
                    "structure_ptr": 1,
                    "target_address": 1
                },
                "param_2": {
                    "new_value": 10,
                    "param_value": 1,
                    "parameter2": 1,
                    "parameter_value": 1,
                    "updated_value": 1,
                    "value": 17
                },
                "param_3": {
                    "condition": 1,
                    "condition_flag": 1,
                    "flag": 2,
                    "is_shifted": 18,
                    "shift": 3,
                    "shift_flag": 2,
                    "shift_value": 1,
                    "use_extended_storage": 1,
                    "use_shift": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08004c30"
            ],
            "code": "\nvoid set_param_value_0800281e(int base_address,int value,int is_shifted)\n\n{\n  if (is_shifted == 0) {\n    *(int *)(base_address + 0x10) = value << 0x10;\n    return;\n  }\n  *(int *)(base_address + 0x10) = value;\n  return;\n}\n\n",
            "current_name": "set_param_value_0800281e",
            "entrypoint": "0x0800281e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800281e": "set_param_value_0800281e",
                "param_1": "base_address",
                "param_2": "value",
                "param_3": "is_shifted"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800282c": {
            "additional_data": {
                "FUN_0800282c": {
                    "activate_gpio_interrupt": 1,
                    "check_and_update_gpio": 1,
                    "check_and_update_gpio_interrupt": 1,
                    "handle_gpio_interrupt": 2,
                    "handle_interrupt": 1,
                    "update_and_trigger_callback": 1,
                    "update_configuration": 1,
                    "update_data_and_invoke_callback": 1,
                    "update_gpio": 2,
                    "update_gpio_and_call_callback": 1,
                    "update_gpio_and_invoke_callback": 1,
                    "update_gpio_ext_interrupt": 1,
                    "update_gpio_exti": 1,
                    "update_gpio_exti_callback": 3,
                    "update_gpio_if_flag_set": 3,
                    "update_gpio_interrupt": 4,
                    "update_gpio_on_condition": 1,
                    "update_gpio_pin": 1,
                    "update_gpio_state": 3,
                    "update_interrupt_handler": 1
                },
                "HAL_GPIO_EXTI_Callback": {
                    "gpio_callback": 1,
                    "gpio_exti_callback": 1,
                    "handle_external_interrupt": 2,
                    "handle_gpio_callback": 1,
                    "handle_gpio_exti_callback": 3,
                    "handle_gpio_interrupt": 9,
                    "invoke_external_callback": 1
                },
                "_DAT_40010414": {
                    "current_configuration": 1,
                    "current_gpio_state": 1,
                    "global_data": 1,
                    "gpio_data": 1,
                    "gpio_exti_register": 1,
                    "gpio_flag": 1,
                    "gpio_flags": 1,
                    "gpio_interrupt_flag": 1,
                    "gpio_interrupt_handler": 1,
                    "gpio_interrupt_status": 2,
                    "gpio_register": 7,
                    "gpio_state": 4,
                    "gpio_variable": 1,
                    "old_state": 1
                },
                "param_1": {
                    "condition": 1,
                    "configuration_bits": 1,
                    "data": 1,
                    "flag": 1,
                    "gpio_pin": 1,
                    "gpio_value": 1,
                    "input_bitmask": 1,
                    "input_flag": 1,
                    "input_value": 3,
                    "interrupt_bitmask": 1,
                    "interrupt_flag": 2,
                    "interrupt_flags": 2,
                    "interrupt_mask": 2,
                    "mask": 3,
                    "new_gpio_value": 1,
                    "new_interrupt_mask": 1,
                    "new_state": 2,
                    "new_value": 3,
                    "pin": 1,
                    "state": 1,
                    "update_value": 1
                }
            },
            "called": [
                "FUN_080060e4"
            ],
            "calling": [],
            "code": "\n\n\nvoid update_gpio_ext_interrupt_0800282c(uint new_value)\n\n{\n  if ((_DAT_40010414 & new_value) != 0) {\n    _DAT_40010414 = new_value;\n    handle_gpio_interrupt();\n  }\n  return;\n}\n\n",
            "current_name": "update_gpio_ext_interrupt_0800282c",
            "entrypoint": "0x0800282c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800282c": "update_gpio_ext_interrupt_0800282c",
                "HAL_GPIO_EXTI_Callback": "handle_gpio_interrupt",
                "param_1": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002848": {
            "additional_data": {
                "0x10": {
                    "result": 1
                },
                "0x11": {
                    "value": 1
                },
                "0x14": {
                    "condition": 1
                },
                "0x3d": {
                    "char2": 1
                },
                "0x3e": {
                    "char1": 1
                },
                "0x4000": {
                    "size_const": 1
                },
                "0xf0": {
                    "flag_1": 1
                },
                "0xf1": {
                    "flag_2": 1
                },
                "0xfe": {
                    "reset_mask": 1
                },
                "0xffU": {
                    "mask": 1
                },
                "DAT_080031d5": {
                    "at_symbol": 1
                },
                "DAT_080031d6": {
                    "exclamation_symbol": 1
                },
                "DAT_080031d7": {
                    "shift_amount": 1
                },
                "FUN_08002848": {
                    "configure_device": 1,
                    "configure_flags": 1,
                    "process_data": 1,
                    "set_control_bits": 1,
                    "set_flag_based_on_conditions": 2,
                    "set_mode_and_value": 1,
                    "set_param_value": 1,
                    "set_parameter_value": 2,
                    "set_permission_flag": 1,
                    "set_permissions": 1,
                    "update_control_register": 1,
                    "update_flag_based_on_condition": 1,
                    "update_flag_based_on_conditions": 1,
                    "update_flag_value": 1,
                    "update_flags": 1,
                    "update_flags_based_on_condition": 1,
                    "update_flags_based_on_conditions": 1,
                    "update_options": 1,
                    "update_param_value": 2,
                    "update_parameter": 1,
                    "update_parameter_value": 1,
                    "update_settings": 1,
                    "update_status": 5,
                    "update_value_based_on_conditions": 1
                },
                "PTR_param_1": {
                    "data": 1
                },
                "data": {
                    "data": 1
                },
                "param_1": {
                    "array": 1,
                    "config_params": 1,
                    "control_register": 1,
                    "data": 3,
                    "device_data": 1,
                    "flag_array": 1,
                    "input_array": 5,
                    "input_data": 1,
                    "options": 1,
                    "param": 3,
                    "param_array": 3,
                    "parameter": 1,
                    "parameter_array": 1,
                    "params": 1,
                    "permission": 1,
                    "permissions": 1,
                    "settings": 1,
                    "status": 4
                }
            },
            "called": [],
            "calling": [
                "FUN_080033b8"
            ],
            "code": "\nundefined4 update_status_08002848(int *input_array)\n\n{\n  if (*(char *)((int)input_array + 0x3e) == '@') {\n    if (input_array[0x14] == 0) {\n      *(uint *)(*input_array + 0x10) = input_array[0x11] & 0xfe;\n    }\n    else {\n      *(uint *)(*input_array + 0x10) = input_array[0x11] & mask | 1;\n    }\n  }\n  else if (input_array[4] == 0x4000) {\n    if (*(char *)((int)input_array + 0x3d) == '!') {\n      *(uint *)(*input_array + 0x10) = input_array[0x11] & 0xfe;\n    }\n    else {\n      *(uint *)(*input_array + 0x10) = input_array[0x11] & mask | 1;\n    }\n  }\n  else if (input_array[0x14] == 0) {\n    *(uint *)(*input_array + 0x10) = (uint)(input_array[0x11] << 0x10) >> 0x17 & 6 | 0xf0;\n  }\n  else if (input_array[0x14] == 1) {\n    *(uint *)(*input_array + 0x10) = (uint)(input_array[0x11] << 0x10) >> 0x17 & 6 | 0xf1;\n  }\n  return 0;\n}\n\n",
            "current_name": "update_status_08002848",
            "entrypoint": "0x08002848",
            "imported": false,
            "improved": true,
            "renaming": {
                "0xffU": "mask",
                "FUN_08002848": "update_status_08002848",
                "param_1": "input_array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080028d2": {
            "additional_data": {
                "0x10": {
                    "offset": 2
                },
                "0x11": {
                    "index": 1
                },
                "0xff": {
                    "255": 1,
                    "mask": 4,
                    "value_mask": 1
                },
                "FUN_080028d2": {
                    "convert_integer_to_byte": 1,
                    "copy_value_to_pointer": 1,
                    "extract_and_assign_byte": 1,
                    "set_byte_value_at_index": 1,
                    "set_param1_value": 1,
                    "set_param_from_offset": 1,
                    "set_param_value": 4,
                    "set_parameter_value": 1,
                    "set_uint_from_param": 1,
                    "set_uint_value": 1,
                    "set_unsigned_integer_in_pointer": 1,
                    "set_value_in_memory": 1,
                    "store_byte_from_parameter": 1,
                    "store_low_byte": 1,
                    "update_memory": 1,
                    "update_memory_with_byte": 1,
                    "update_memory_with_param_value": 1,
                    "update_param_value": 3,
                    "update_parameter": 1,
                    "update_parameter_value": 2,
                    "update_value": 3,
                    "update_value_at_index": 1,
                    "update_value_in_memory": 1
                },
                "param_1": {
                    "array": 3,
                    "function_parameters": 1,
                    "input_array": 8,
                    "memory_address": 4,
                    "p_input": 1,
                    "param": 2,
                    "param_array": 8,
                    "parameter": 2,
                    "parameters": 1,
                    "pointer_to_integer_array": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080033b8"
            ],
            "code": "\nundefined4 update_memory_with_param_value_080028d2(int *input_array)\n\n{\n  *(uint *)(*input_array + 0x10) = input_array[0x11] & 0xff;\n  return 0;\n}\n\n",
            "current_name": "update_memory_with_param_value_080028d2",
            "entrypoint": "0x080028d2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080028d2": "update_memory_with_param_value_080028d2",
                "param_1": "input_array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080028de": {
            "additional_data": {
                "0x0": {
                    "constant_value_zero": 1,
                    "null_value": 1
                },
                "0x100": {
                    "flag1": 1,
                    "flag_100": 1
                },
                "0x1000": {
                    "constant1000": 1,
                    "flag5": 1,
                    "flag_1000": 2
                },
                "0x12": {
                    "constant12": 1,
                    "constant_value1": 1
                },
                "0x14": {
                    "array_index2": 1
                },
                "0x200": {
                    "flag2": 1,
                    "flag_200": 2
                },
                "0x4": {
                    "constant4": 1,
                    "constant_value3": 1
                },
                "0x400": {
                    "constant400": 1,
                    "flag3": 1,
                    "flag_400": 2
                },
                "0x8": {
                    "constant8": 1,
                    "constant_value4": 1
                },
                "0x800": {
                    "constant800": 1,
                    "flag4": 1,
                    "flag_800": 2
                },
                "0xb": {
                    "array_index1": 1,
                    "constant11": 1
                },
                "0xc": {
                    "array_index3": 1
                },
                "0xc000": {
                    "constant_value_five": 1,
                    "hex_c000": 1
                },
                "0xffff0000": {
                    "constant_value2": 1,
                    "hex_ffff0000": 1
                },
                "0xfffffbff": {
                    "flag_fbff": 1,
                    "flag_mask": 1,
                    "flag_reset_800": 1
                },
                "FUN_080028de": {
                    "modify_flags": 1,
                    "parse_input": 1,
                    "process_flags": 3,
                    "process_param": 2,
                    "process_parameter": 2,
                    "set_flags": 2,
                    "toggle_flags": 1,
                    "update_flags": 16,
                    "update_flags_based_on_conditions": 3
                },
                "param_1": {
                    "arguments": 1,
                    "flag_array": 1,
                    "input": 1,
                    "input_array": 1,
                    "param": 3,
                    "param_array": 1,
                    "param_list": 1,
                    "parameter": 1,
                    "parameters": 16,
                    "params": 5
                },
                "puVar1": {
                    "current_flag": 1,
                    "current_param": 2,
                    "current_value": 1,
                    "flag": 4,
                    "param1_b": 1,
                    "param_val": 1,
                    "param_value": 1,
                    "pointer_var": 2,
                    "pointer_var1": 2,
                    "ptr": 2,
                    "ptr1": 1,
                    "ptr_var": 1,
                    "ptr_var1": 1,
                    "temp": 3,
                    "temp_ptr": 1,
                    "temp_ptr1": 1,
                    "temp_value": 2,
                    "temp_var": 1,
                    "value": 1,
                    "value_pointer": 1,
                    "var1": 1
                },
                "uint": {
                    "u_int32_type": 1,
                    "unsigned_integer": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080033b8"
            ],
            "code": "\nundefined4 update_flags_based_on_conditions_080028de(unsigned_integer **parameters)\n\n{\n  unsigned_integer *flag;\n  \n  flag = parameters[0xb];\n  if ((*(char *)((int)parameters + 0x3d) == '\\\"') &&\n     ((parameters[0x14] != (unsigned_integer *)0x0 || (*(char *)((int)parameters + 0x3e) != '@')))) {\n    if ((parameters[0x14] == (unsigned_integer *)0x0) && (parameters[4] == (unsigned_integer *)0xc000)) {\n      **parameters = **parameters | 0x100;\n      parameters[0x14] = (unsigned_integer *)((int)parameters[0x14] + 1);\n    }\n    else {\n      if (*(short *)((int)parameters + 0x2a) == 0) {\n        **parameters = **parameters | 0x200;\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 1) {\n        if (flag == (unsigned_integer *)0xffff0000) {\n          **parameters = **parameters & 0xfffffbff;\n          flag = *parameters;\n          if ((flag[1] & 0x800) == 0) {\n            *flag = *flag | 0x200;\n          }\n          else {\n            *flag = *flag & 0xfffffbff;\n          }\n        }\n        else if (((flag == (unsigned_integer *)0x4) || (flag == (unsigned_integer *)0x8)) ||\n                (parameters[0xc] == (unsigned_integer *)0x12)) {\n          **parameters = **parameters & 0xfffffbff;\n          **parameters = **parameters | 0x200;\n        }\n        else if (parameters[0xb] == (unsigned_integer *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n        }\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 2) {\n        if (parameters[0xb] == (unsigned_integer *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters | 0x800;\n          **parameters = **parameters & 0xfffffbff;\n        }\n        flag = *parameters;\n        if ((flag[1] & 0x800) != 0) {\n          flag[1] = flag[1] | 0x1000;\n        }\n      }\n      else {\n        **parameters = **parameters | 0x400;\n        flag = *parameters;\n        if ((flag[1] & 0x800) != 0) {\n          flag[1] = flag[1] | 0x1000;\n        }\n      }\n      parameters[0x14] = (unsigned_integer *)0x0;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "update_flags_based_on_conditions_080028de",
            "entrypoint": "0x080028de",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080028de": "update_flags_based_on_conditions_080028de",
                "param_1": "parameters",
                "puVar1": "flag",
                "uint": "unsigned_integer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ab8": {
            "additional_data": {
                "FUN_08002ab8": {
                    "decode_byte": 1,
                    "extract_byte_from_array": 1,
                    "increment_and_store_value_in_memory": 1,
                    "process_bytes": 1,
                    "process_data": 2,
                    "reverse_byte_order": 1,
                    "update_and_decrement": 1,
                    "update_array_element": 1,
                    "update_array_value": 1,
                    "update_buffer": 2,
                    "update_byte_array": 1,
                    "update_byte_value": 2,
                    "update_data": 12,
                    "update_parameter_value": 1,
                    "update_pointer": 1,
                    "update_pointer_and_decrement": 1,
                    "update_value": 1
                },
                "param_1": {
                    "array": 5,
                    "array_pointer": 1,
                    "buffer": 1,
                    "buffer_ptr": 1,
                    "data": 13,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "input_array": 3,
                    "parameter": 1,
                    "params": 1,
                    "pointer_array": 2,
                    "pointer_to_int": 1
                },
                "pbVar1": {
                    "array_ptr": 1,
                    "byte_data": 2,
                    "byte_pointer": 15,
                    "byte_ptr": 8,
                    "current_byte": 5
                }
            },
            "called": [],
            "calling": [
                "FUN_080033b8"
            ],
            "code": "\nundefined4 update_data_08002ab8(int *data)\n\n{\n  byte *byte_pointer;\n  \n  if (*(short *)((int)data + 0x2a) != 0) {\n    byte_pointer = (byte *)data[9];\n    data[9] = (int)(byte_pointer + 1);\n    *(uint *)(*data + 0x10) = (uint)*byte_pointer;\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "current_name": "update_data_08002ab8",
            "entrypoint": "0x08002ab8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002ab8": "update_data_08002ab8",
                "param_1": "data",
                "pbVar1": "byte_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ad8": {
            "additional_data": {
                "FUN_08002ad8": {
                    "increment_and_copy_value": 3,
                    "increment_and_modify_value": 1,
                    "process_parameter": 1,
                    "update_and_decrement_value": 1,
                    "update_array": 3,
                    "update_array_and_decrement": 1,
                    "update_array_value": 2,
                    "update_char_and_decrement": 1,
                    "update_char_array": 1,
                    "update_data": 4,
                    "update_param": 4,
                    "update_param1": 1,
                    "update_parameter": 2,
                    "update_parameter_and_decrement_count": 1,
                    "update_parameter_value": 1,
                    "update_value": 4
                },
                "param_1": {
                    "array": 11,
                    "array_ptr": 1,
                    "array_to_update": 1,
                    "char_array": 1,
                    "data": 4,
                    "data_pointer": 1,
                    "input_array": 2,
                    "param_array": 4,
                    "param_list": 1,
                    "parameter": 4,
                    "parameter_array": 1
                },
                "puVar1": {
                    "array_element": 1,
                    "array_pointer": 1,
                    "byte_ptr": 1,
                    "char_pointer": 1,
                    "char_ptr": 1,
                    "current_element": 1,
                    "current_pointer": 3,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "destination": 1,
                    "element_address": 1,
                    "element_ptr": 1,
                    "new_data_pointer": 1,
                    "next_element": 1,
                    "next_element_ptr": 1,
                    "pointer": 2,
                    "pointer_to_element": 1,
                    "pointer_to_value": 1,
                    "ptr": 5,
                    "ptr_to_buffer": 1,
                    "target_address": 1,
                    "updated_element": 1,
                    "updated_parameter": 1,
                    "updated_pointer": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080033b8"
            ],
            "code": "\nundefined4 update_array_value_08002ad8(int *array)\n\n{\n  undefined *ptr;\n  \n  if (*(short *)((int)array + 0x2a) != 0) {\n    ptr = (undefined *)array[9];\n    array[9] = (int)(ptr + 1);\n    *ptr = (char)*(undefined4 *)(*array + 0x10);\n    *(short *)((int)array + 0x2a) = *(short *)((int)array + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "current_name": "update_array_value_08002ad8",
            "entrypoint": "0x08002ad8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002ad8": "update_array_value_08002ad8",
                "param_1": "array",
                "puVar1": "ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002af8": {
            "additional_data": {
                "FUN_08002af8": {
                    "check_and_initialize": 2,
                    "check_conditions_and_initialize": 1,
                    "clean_up_data": 1,
                    "deserialize_data": 1,
                    "extract_information": 1,
                    "extracted_function": 1,
                    "initialize_function": 1,
                    "initialize_parameters": 1,
                    "initialize_params": 1,
                    "parse_data": 1,
                    "parse_function": 1,
                    "parse_input": 2,
                    "parse_params": 1,
                    "process_function": 1,
                    "process_input": 3,
                    "process_parameters": 2,
                    "process_params": 3,
                    "update_data": 1,
                    "update_param_values": 1,
                    "update_parameters": 1,
                    "validate_input": 2,
                    "validate_parameters": 2
                },
                "param_1": {
                    "config": 1,
                    "data": 2,
                    "data_address": 1,
                    "data_ptr": 2,
                    "function_data": 1,
                    "input": 1,
                    "input_data": 5,
                    "input_parameter": 1,
                    "input_ptr": 2,
                    "param1": 1,
                    "param_array": 4,
                    "param_container": 1,
                    "param_list": 2,
                    "param_ptr": 3,
                    "parameter_array": 2,
                    "parameter_list": 1,
                    "parameters": 1
                },
                "param_2": {
                    "condition_ptr": 1,
                    "data": 1,
                    "data_array": 1,
                    "data_parameter": 1,
                    "data_pointer": 1,
                    "data_ptr": 3,
                    "input_param": 1,
                    "input_parameter": 1,
                    "input_ptr": 3,
                    "new_param": 1,
                    "optional_param": 1,
                    "optional_value": 1,
                    "param1": 1,
                    "param2": 2,
                    "param_2": 2,
                    "param_pointer": 1,
                    "param_ptr": 4,
                    "param_ptr2": 1,
                    "pointer": 1,
                    "source_pointer": 1,
                    "value": 1,
                    "value_ptr": 1
                },
                "param_3": {
                    "count": 4,
                    "counter": 1,
                    "data_size": 2,
                    "input": 1,
                    "input_length": 1,
                    "input_size": 2,
                    "length": 1,
                    "param2": 1,
                    "param3": 2,
                    "param_3": 2,
                    "param_count": 3,
                    "param_size": 2,
                    "param_value": 1,
                    "size": 5,
                    "size_parameter": 1,
                    "value_count": 1,
                    "value_length": 1
                },
                "param_4": {
                    "buffer": 2,
                    "config_ptr": 1,
                    "data": 1,
                    "data_ptr": 2,
                    "destination_pointer": 1,
                    "metadata": 1,
                    "optional_ptr": 1,
                    "other_data": 1,
                    "output_array": 1,
                    "output_data": 1,
                    "output_param": 1,
                    "output_parameter": 2,
                    "output_ptr": 4,
                    "param3": 1,
                    "param4": 2,
                    "param_4": 2,
                    "param_array2": 1,
                    "param_data": 2,
                    "param_ptr3": 1,
                    "required_param": 1,
                    "result_array": 1,
                    "result_ptr": 1
                },
                "puVar2": {
                    "current_data_ptr": 1,
                    "data_ptr": 2,
                    "first_element": 1,
                    "flag_ptr": 1,
                    "function_ptr": 1,
                    "inner_ptr": 1,
                    "pointer": 1,
                    "pointer_var": 1,
                    "pointer_var1": 1,
                    "ptr": 9,
                    "ptr_to_data": 1,
                    "ptr_to_param_array": 1,
                    "ptr_value": 1,
                    "ptr_var": 2,
                    "temp_pointer": 2,
                    "temp_ptr": 2,
                    "value_ptr": 1
                },
                "uVar1": {
                    "result": 19,
                    "return_value": 8,
                    "status": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08004e74"
            ],
            "code": "\nundefined4 check_conditions_and_initialize_08002af8(uint **input_data,uint *param_ptr,int size,uint *output_ptr)\n\n{\n  undefined4 result;\n  uint *ptr;\n  \n  if (*(char *)((int)input_data + 0x3d) == '(') {\n    if (param_ptr == (uint *)0x0) {\n      result = 1;\n    }\n    else if (size == 0) {\n      result = 1;\n    }\n    else if (*(char *)(input_data + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(input_data + 0xf) = 1;\n      ptr = *input_data;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **input_data = **input_data & 0xfffff7ff;\n      *(undefined *)((int)input_data + 0x3d) = 0x29;\n      *(undefined *)((int)input_data + 0x3e) = 0x20;\n      result = 0;\n      input_data[0x10] = (uint *)0x0;\n      input_data[9] = param_ptr;\n      *(short *)((int)input_data + 0x2a) = (short)size;\n      input_data[0xb] = output_ptr;\n      *(undefined2 *)(input_data + 10) = *(undefined2 *)((int)input_data + 0x2a);\n      *(undefined *)(input_data + 0xf) = 0;\n      (*input_data)[1] = (*input_data)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "current_name": "check_conditions_and_initialize_08002af8",
            "entrypoint": "0x08002af8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002af8": "check_conditions_and_initialize_08002af8",
                "param_1": "input_data",
                "param_2": "param_ptr",
                "param_3": "size",
                "param_4": "output_ptr",
                "puVar2": "ptr",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002b84": {
            "additional_data": {
                "0x20": {
                    "32": 1
                },
                "0x2a": {
                    "42": 1
                },
                "DAT_NONE": {
                    "0": 1
                },
                "FUN_08002b84": {
                    "check_and_initialize": 1,
                    "check_and_initialize_parameters": 1,
                    "check_and_set_flags": 1,
                    "check_conditions_and_set_values": 1,
                    "initialize_data": 1,
                    "initialize_flags": 1,
                    "initialize_parameters": 1,
                    "parse_input": 3,
                    "parse_input_and_set_values": 1,
                    "process_data": 2,
                    "process_function_call": 1,
                    "process_input": 3,
                    "process_param": 1,
                    "process_parameters": 3,
                    "process_params": 1,
                    "reverse_and_update_flags": 1,
                    "update_data": 1,
                    "update_param_values": 1,
                    "validate_and_prepare_data": 1,
                    "validate_input": 2,
                    "validate_params": 2
                },
                "PTR_NONE": {
                    "null": 1
                },
                "dataPtr": {
                    "data": 1
                },
                "paramArray": {
                    "array": 1
                },
                "paramPtr": {
                    "pointer": 1
                },
                "paramSize": {
                    "size": 1
                },
                "param_1": {
                    "config": 1,
                    "config_data": 1,
                    "data": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "flags": 1,
                    "function_data": 1,
                    "input": 3,
                    "input1": 1,
                    "input_array": 2,
                    "input_data": 4,
                    "input_params": 2,
                    "input_pointer_array": 1,
                    "param_array": 4,
                    "param_buffer": 1,
                    "param_list": 2,
                    "parameter_array": 1,
                    "parameter_pointer": 1,
                    "pointer_array": 1,
                    "settings": 1
                },
                "param_2": {
                    "arg1": 1,
                    "check_ptr": 1,
                    "condition": 1,
                    "data_pointer": 1,
                    "data_ptr": 3,
                    "flag_ptr": 1,
                    "input2": 1,
                    "input_1": 2,
                    "input_param": 2,
                    "input_pointer": 1,
                    "input_ptr": 1,
                    "optional_data": 3,
                    "optional_param": 2,
                    "optional_param1": 1,
                    "param2": 2,
                    "param_a": 1,
                    "param_pointer": 1,
                    "param_ptr": 3,
                    "target_pointer": 1,
                    "value_array": 1,
                    "value_pointer": 1
                },
                "param_3": {
                    "arg2": 1,
                    "count": 2,
                    "data_length": 1,
                    "data_size": 2,
                    "flag_size": 1,
                    "input3": 1,
                    "input_2": 2,
                    "input_length": 1,
                    "input_size": 2,
                    "length": 3,
                    "optional_param2": 1,
                    "param3": 2,
                    "param_count": 3,
                    "param_length": 1,
                    "param_size": 1,
                    "param_value": 2,
                    "size": 3,
                    "value_count": 1,
                    "value_size": 1
                },
                "param_4": {
                    "additional_data": 1,
                    "buffer": 1,
                    "data": 1,
                    "data_array": 1,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "flag_pointer": 1,
                    "flag_ptr": 1,
                    "input4": 1,
                    "input_3": 1,
                    "input_value_pointer": 1,
                    "optional_param3": 1,
                    "output": 1,
                    "output_array": 1,
                    "output_data": 1,
                    "output_param": 2,
                    "output_ptr": 1,
                    "param4": 2,
                    "param_array": 1,
                    "param_array2": 2,
                    "param_b": 1,
                    "param_buffer": 1,
                    "param_data": 1,
                    "result": 2,
                    "result_data": 1,
                    "result_ptr": 1
                },
                "puVar2": {
                    "config_ptr": 1,
                    "data_pointer": 1,
                    "first_element": 1,
                    "first_ptr": 2,
                    "flag": 1,
                    "flag_ptr": 2,
                    "pointer": 2,
                    "pointer_var": 3,
                    "ptr": 9,
                    "ptr_var": 2,
                    "temp_pointer": 2,
                    "temp_ptr": 4
                },
                "uVar1": {
                    "result": 20,
                    "return_value": 6,
                    "status": 4
                }
            },
            "called": [],
            "calling": [
                "FUN_08004e74"
            ],
            "code": "\nundefined4 parse_input_and_set_values_08002b84(uint **param_array,uint *param_ptr,int param_count,uint *result)\n\n{\n  undefined4 result;\n  uint *ptr;\n  \n  if (*(char *)((int)param_array + 0x3d) == '(') {\n    if (param_ptr == (uint *)0x0) {\n      result = 1;\n    }\n    else if (param_count == 0) {\n      result = 1;\n    }\n    else if (*(char *)(param_array + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(param_array + 0xf) = 1;\n      ptr = *param_array;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **param_array = **param_array & 0xfffff7ff;\n      *(undefined *)((int)param_array + 0x3d) = 0x2a;\n      *(undefined *)((int)param_array + 0x3e) = 0x20;\n      result = 0;\n      param_array[0x10] = (uint *)0x0;\n      param_array[9] = param_ptr;\n      *(short *)((int)param_array + 0x2a) = (short)param_count;\n      param_array[0xb] = result;\n      *(undefined2 *)(param_array + 10) = *(undefined2 *)((int)param_array + 0x2a);\n      *(undefined *)(param_array + 0xf) = 0;\n      (*param_array)[1] = (*param_array)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "current_name": "parse_input_and_set_values_08002b84",
            "entrypoint": "0x08002b84",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002b84": "parse_input_and_set_values_08002b84",
                "param_1": "param_array",
                "param_2": "param_ptr",
                "param_3": "param_count",
                "param_4": "result",
                "puVar2": "ptr",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002c10": {
            "additional_data": {
                "0x28": {
                    "modified_flag_value": 1,
                    "parenthesis": 1
                },
                "0x300": {
                    "bit_mask3": 1,
                    "flag2": 1
                },
                "0x3d": {
                    "offset": 1
                },
                "0x400": {
                    "bit_mask2": 1,
                    "flag1": 1
                },
                "1": {
                    "bit_flag": 1,
                    "bit_mask1": 1
                },
                "FUN_08002c10": {
                    "initialize_configuration": 1,
                    "initialize_data": 7,
                    "initialize_flags": 1,
                    "initialize_memory": 7,
                    "initialize_parameters": 1,
                    "modify_data": 1,
                    "parse_input": 1,
                    "perform_initialization": 1,
                    "process_data": 1,
                    "process_param": 1,
                    "set_flags_and_permissions": 1,
                    "update_config": 1,
                    "update_data": 1,
                    "update_data_and_flags": 1,
                    "update_flags_and_values": 2,
                    "update_param": 1,
                    "validate_and_configure_params": 1,
                    "validate_and_modify_flags": 1
                },
                "param_1": {
                    "config": 1,
                    "configuration_data": 1,
                    "data": 6,
                    "data_pointer": 4,
                    "data_ptr": 1,
                    "flags": 1,
                    "input": 1,
                    "input_ptr": 1,
                    "memory": 2,
                    "memory_pointer": 4,
                    "memory_ptr": 1,
                    "p_data": 1,
                    "param": 3,
                    "param_list": 1,
                    "parameters": 2,
                    "ptr_array": 1
                },
                "puVar1": {
                    "bit_field": 1,
                    "current_element": 1,
                    "current_pointer": 2,
                    "first_element": 3,
                    "first_element_ptr": 1,
                    "first_flag": 1,
                    "first_value_ptr": 1,
                    "flag_pointer": 1,
                    "p_value": 1,
                    "param_ptr": 1,
                    "pointer": 5,
                    "pointer_1": 1,
                    "pointer_to_configuration_data": 1,
                    "pointer_value": 2,
                    "pointer_var": 1,
                    "ptr": 1,
                    "ptr1": 2,
                    "ptr_data": 1,
                    "ptr_to_memory": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 1,
                    "value_ptr": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004ef4",
                "FUN_08004ec4"
            ],
            "code": "\nundefined4 update_data_and_flags_08002c10(uint **data)\n\n{\n  uint *pointer;\n  \n  if (*(char *)((int)data + 0x3d) != ' ') {\n    return 2;\n  }\n  *(undefined *)((int)data + 0x3d) = 0x28;\n  pointer = *data;\n  if ((*pointer & 1) == 0) {\n    *pointer = *pointer | 1;\n  }\n  **data = **data | 0x400;\n  (*data)[1] = (*data)[1] | 0x300;\n  return 0;\n}\n\n",
            "current_name": "update_data_and_flags_08002c10",
            "entrypoint": "0x08002c10",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002c10": "update_data_and_flags_08002c10",
                "param_1": "data",
                "puVar1": "pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002c4e": {
            "called": [],
            "calling": [
                "FUN_08002db2",
                "FUN_08002efc"
            ],
            "code": "\nvoid FUNC_08002c4e(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08002c4e",
            "entrypoint": "0x08002c4e",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08002c4e": "FUNC_08002c4e"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08002c50": {
            "called": [],
            "calling": [
                "FUN_08002f9c",
                "FUN_0800306c"
            ],
            "code": "\nvoid FUNC_08002c50(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08002c50",
            "entrypoint": "0x08002c50",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08002c50": "FUNC_08002c50"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08002c52": {
            "called": [],
            "calling": [
                "FUN_08002d1c",
                "FUN_08002c54"
            ],
            "code": "\nvoid FUNC_08002c52(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08002c52",
            "entrypoint": "0x08002c52",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08002c52": "FUNC_08002c52"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08002c54": {
            "additional_data": {
                "FUNC_08002c52": {
                    "initialize": 1
                },
                "FUN_08002c54": {
                    "decode_data": 1,
                    "handle_data": 1,
                    "handle_i2_c_data": 1,
                    "improve_readable_code": 1,
                    "parse_and_execute_instruction": 1,
                    "process_data": 18,
                    "process_i2_c_data": 1,
                    "process_i2_c_packet": 1,
                    "process_input": 1,
                    "process_input_data": 2,
                    "update_and_check_value": 1,
                    "update_data_and_notify": 1,
                    "update_i2_c_slave_tx_buffer": 1
                },
                "HAL_I2C_SlaveTxCpltCallback": {
                    "handle_i2_c_slave_tx_complete": 1,
                    "handle_i2_c_slave_tx_cplt": 1,
                    "handle_i2_c_transfer_complete": 1,
                    "handle_i2_c_transmission_complete": 1,
                    "handle_transmission_complete": 1,
                    "handle_transmit_complete": 1,
                    "on_i2_c_transmit_complete": 1,
                    "perform_i2_c_transmission_callback": 1,
                    "send_data_callback": 1,
                    "transmission_complete_callback": 1
                },
                "cVar1": {
                    "char1": 1,
                    "char_value": 8,
                    "char_var": 2,
                    "char_variable": 1,
                    "character": 12,
                    "character_value": 1,
                    "current_char": 1,
                    "first_char": 2,
                    "last_char": 3
                },
                "param_1": {
                    "array": 1,
                    "buffer": 1,
                    "data": 20,
                    "data_ptr": 1,
                    "i2c_packet": 1,
                    "input_array": 2,
                    "input_data": 4,
                    "instruction_params": 1
                },
                "pbVar2": {
                    "buffer": 1,
                    "byte_array": 1,
                    "byte_pointer": 14,
                    "byte_ptr": 12,
                    "data_array": 1,
                    "data_pointer": 1,
                    "packet_data": 1
                }
            },
            "called": [
                "FUN_08002c52"
            ],
            "calling": [
                "FUN_080033b8"
            ],
            "code": "\nundefined4 process_input_data_08002c54(int *data)\n\n{\n  char character;\n  byte *byte_pointer;\n  \n  character = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    byte_pointer = (byte *)data[9];\n    data[9] = (int)(byte_pointer + 1);\n    *(uint *)(*data + 0x10) = (uint)*byte_pointer;\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (character == ')')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      data[0xc] = 0x21;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      handle_i2_c_transmission_complete();\n    }\n    return 0;\n  }\n  return 0;\n}\n\n",
            "current_name": "process_input_data_08002c54",
            "entrypoint": "0x08002c54",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002c54": "process_input_data_08002c54",
                "HAL_I2C_SlaveTxCpltCallback": "handle_i2_c_transmission_complete",
                "cVar1": "character",
                "param_1": "data",
                "pbVar2": "byte_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ca4": {
            "called": [],
            "calling": [
                "FUN_080032b4",
                "FUN_08002ca6"
            ],
            "code": "\nvoid FUNC_08002ca4(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08002ca4",
            "entrypoint": "0x08002ca4",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08002ca4": "FUNC_08002ca4"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08002ca6": {
            "additional_data": {
                "FUNC_08002ca4": {
                    "helper_function": 2
                },
                "FUN_08002ca6": {
                    "extract_data_from_buffer": 1,
                    "process_buffer": 1,
                    "process_data": 24,
                    "process_i2_c_data": 1,
                    "process_input_data": 1,
                    "update_buffer": 2,
                    "update_i2_c_data": 1
                },
                "HAL_I2C_SlaveRxCpltCallback": {
                    "handle_i2_c_complete": 2,
                    "handle_i2_c_receive": 1,
                    "handle_i2_c_receive_complete": 7,
                    "handle_i2_c_received_data": 1,
                    "handle_i2_c_rx_complete": 3,
                    "handle_i2c_receive": 1,
                    "handle_slave_receive_complete": 1
                },
                "cVar1": {
                    "char1": 1,
                    "char_val": 3,
                    "char_value": 6,
                    "char_var": 1,
                    "character": 9,
                    "current_char": 1,
                    "flag": 5,
                    "last_char": 3,
                    "last_character": 1,
                    "third_char": 1
                },
                "param_1": {
                    "buffer": 4,
                    "data": 23,
                    "data_buffer": 1,
                    "data_ptr": 2,
                    "input_data": 1
                },
                "puVar2": {
                    "array_pointer": 1,
                    "buffer": 2,
                    "buffer_ptr": 2,
                    "byte_ptr": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "next_byte": 2,
                    "next_char_ptr": 1,
                    "pointer": 4,
                    "ptr": 11,
                    "ptr_data": 2,
                    "ptr_to_char": 1,
                    "ptr_to_data": 1
                }
            },
            "called": [
                "FUN_08002ca4"
            ],
            "calling": [
                "FUN_080033b8"
            ],
            "code": "\nundefined4 process_i2_c_data_08002ca6(int *data)\n\n{\n  char character;\n  undefined *ptr;\n  \n  character = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    ptr = (undefined *)data[9];\n    data[9] = (int)(ptr + 1);\n    *ptr = (char)*(undefined4 *)(*data + 0x10);\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (character == '*')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      data[0xc] = 0x22;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      handle_i2_c_receive_complete();\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_i2_c_data_08002ca6",
            "entrypoint": "0x08002ca6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002ca6": "process_i2_c_data_08002ca6",
                "HAL_I2C_SlaveRxCpltCallback": "handle_i2_c_receive_complete",
                "cVar1": "character",
                "param_1": "data",
                "puVar2": "ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002cf2": {
            "additional_data": {
                "FUN_08002cf2": {
                    "handle_i2_c_address_callback": 1,
                    "handle_i2_c_callback": 1,
                    "i2c_addr_callback": 1,
                    "i2c_address_callback": 4,
                    "improve_i2_c_addr_callback": 1,
                    "improve_i2c_address": 1,
                    "improved_i2c_callback": 1,
                    "perform_i2_c_action": 1,
                    "perform_i2_c_address_callback": 4,
                    "perform_i2_c_operation": 2,
                    "process_i2_c_addr_callback": 1,
                    "process_i2_c_address": 1,
                    "process_i2_c_address_callback": 1,
                    "process_i2_c_addressing": 1,
                    "process_i2_c_data": 3,
                    "process_i2_c_operation": 1,
                    "send_i2_c_data": 2,
                    "update_i2_c_address": 2
                },
                "param_1": {
                    "address_data": 2,
                    "data": 2,
                    "data_buffer": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "device_buffer": 1,
                    "device_data": 1,
                    "i2c_data": 10,
                    "i2c_device": 2,
                    "i2c_handle": 1,
                    "i2c_handler": 1,
                    "i2c_instance": 1,
                    "i2c_parameters": 1,
                    "i2c_params": 1,
                    "input_param": 1,
                    "input_params": 3,
                    "param": 1
                },
                "param_2": {
                    "address": 2,
                    "arg1": 1,
                    "arg2": 1,
                    "callback_param": 1,
                    "callback_param1": 1,
                    "flag1": 1,
                    "flag_1": 1,
                    "input_2": 1,
                    "param1": 3,
                    "param2": 17,
                    "unused_param": 1
                },
                "param_3": {
                    "arg2": 1,
                    "arg3": 1,
                    "callback_param2": 1,
                    "flag2": 1,
                    "flag_2": 1,
                    "input_3": 1,
                    "param1": 1,
                    "param2": 3,
                    "param3": 17,
                    "unused_param": 2,
                    "value": 1
                },
                "param_4": {
                    "arg3": 1,
                    "arg4": 1,
                    "callback_context": 1,
                    "callback_data": 2,
                    "callback_param": 1,
                    "callback_param3": 1,
                    "input_4": 1,
                    "output_param": 1,
                    "param2": 1,
                    "param3": 3,
                    "param4": 17,
                    "param_4": 1
                },
                "uVar1": {
                    "addr": 1,
                    "addr_value": 1,
                    "address": 9,
                    "callback_addr": 2,
                    "callback_address": 3,
                    "callback_value": 4,
                    "data": 1,
                    "data_value": 1,
                    "extracted_value": 1,
                    "i2c_address": 3,
                    "i2c_data": 1,
                    "selected_address": 1,
                    "selected_data": 1,
                    "selected_value": 2
                },
                "uVar2": {
                    "address_flag": 2,
                    "address_flags": 1,
                    "address_value": 4,
                    "data_value": 3,
                    "device_config": 1,
                    "flag": 2,
                    "flag_value": 1,
                    "flags": 9,
                    "i2c_flags": 2,
                    "i2c_status": 2,
                    "i2c_value": 2,
                    "param_value": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_08004e74"
            ],
            "calling": [
                "FUN_080033b8"
            ],
            "code": "\nundefined4 send_i2_c_data_08002cf2(int *i2c_data,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined2 address;\n  uint flags;\n  \n  flags = *(uint *)(*i2c_data + 0x18);\n  if ((flags & 0x80) == 0) {\n    address = *(undefined2 *)(i2c_data + 3);\n  }\n  else {\n    address = *(undefined2 *)(i2c_data + 6);\n  }\n  HAL_I2C_AddrCallback(i2c_data,(*(uint *)(*i2c_data + 0x18) & 4) == 0,address,flags,param4);\n  return 0;\n}\n\n",
            "current_name": "send_i2_c_data_08002cf2",
            "entrypoint": "0x08002cf2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002cf2": "send_i2_c_data_08002cf2",
                "param_1": "i2c_data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "address",
                "uVar2": "flags"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002d1c": {
            "additional_data": {
                "0": {
                    "value_zero": 1
                },
                "0x20": {
                    "value20": 1
                },
                "0xfffff8ff": {
                    "value_ffff8_ff": 1
                },
                "0xfffffbff": {
                    "value_ffffbff": 1
                },
                "FUNC_08002c52": {
                    "do_something": 1,
                    "execute_some_action": 1,
                    "perform_task": 1
                },
                "FUN_08002d1c": {
                    "handle_callback": 1,
                    "handle_i2_c_data": 1,
                    "handle_i2_c_event": 7,
                    "handle_i2_c_interrupt": 1,
                    "handle_i2c_operation": 1,
                    "handle_param": 1,
                    "process_data": 5,
                    "process_i2_c_data": 6,
                    "process_i2_c_event": 2,
                    "process_i2_c_request": 1,
                    "process_i2c_data": 1,
                    "process_param": 1,
                    "update_i2_c_settings": 1
                },
                "FUN_08004ec4": {
                    "callback": 1,
                    "handle_i2_c_slave_tx_complete": 1,
                    "send_i2_c_data": 1,
                    "send_slave_tx_complete_callback": 1
                },
                "HAL_I2C_ListenCpltCallback": {
                    "callback_for_listening_complete": 1,
                    "handle_i2_c_listen_complete": 2,
                    "handle_i2c_listen_complete": 1,
                    "handle_listen_complete": 4,
                    "i2c_listen_complete_callback": 1,
                    "on_i2_c_listen_complete": 1,
                    "on_listen_complete": 2
                },
                "HAL_I2C_SlaveTxCpltCallback": {
                    "callback_for_slave_tx_complete": 1,
                    "handle_i2_c_slave_transmission_complete": 1,
                    "handle_i2_c_slave_transmit_complete": 1,
                    "handle_i2c_slave_transmit_complete": 1,
                    "handle_slave_transmission_complete": 1,
                    "handle_slave_transmit_complete": 3,
                    "i2c_slave_tx_complete_callback": 1,
                    "on_i2_c_slave_transmit_complete": 1,
                    "on_slave_transmit_complete": 1,
                    "on_slave_tx_complete": 1
                },
                "param_1": {
                    "callback_params": 1,
                    "data": 10,
                    "event_data": 6,
                    "event_params": 1,
                    "i2c_data": 1,
                    "input_data": 2,
                    "input_params": 1,
                    "param": 4,
                    "parameter_list": 1,
                    "parameters": 1,
                    "params": 1,
                    "request": 1,
                    "settings": 1
                }
            },
            "called": [
                "FUN_08002c52",
                "FUN_08004ec4"
            ],
            "calling": [
                "FUN_08003520"
            ],
            "code": "\nundefined4 process_i2_c_data_08002d1c(uint **data)\n\n{\n  if (((data[0xb] == (uint *)0x4) || (data[0xb] == (uint *)0x8)) &&\n     (*(char *)((int)data + 0x3d) == '(')) {\n    data[0xb] = (uint *)0xffff0000;\n    (*data)[1] = (*data)[1] & 0xfffff8ff;\n    (*data)[5] = 0xfffffbff;\n    **data = **data & 0xfffffbff;\n    data[0xc] = (uint *)0x0;\n    *(undefined *)((int)data + 0x3d) = 0x20;\n    *(undefined *)((int)data + 0x3e) = 0;\n    handle_listen_complete();\n  }\n  else if (*(char *)((int)data + 0x3d) == '!') {\n    data[0xb] = (uint *)0xffff0000;\n    data[0xc] = (uint *)0x21;\n    *(undefined *)((int)data + 0x3d) = 0x20;\n    *(undefined *)((int)data + 0x3e) = 0;\n    (*data)[1] = (*data)[1] & 0xfffff8ff;\n    (*data)[5] = 0xfffffbff;\n    **data = **data & 0xfffffbff;\n    handle_slave_transmit_complete();\n  }\n  else {\n    (*data)[5] = 0xfffffbff;\n  }\n  return 0;\n}\n\n",
            "current_name": "process_i2_c_data_08002d1c",
            "entrypoint": "0x08002d1c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002d1c": "process_i2_c_data_08002d1c",
                "HAL_I2C_ListenCpltCallback": "handle_listen_complete",
                "HAL_I2C_SlaveTxCpltCallback": "handle_slave_transmit_complete",
                "param_1": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002db0": {
            "called": [],
            "calling": [
                "FUN_08002db2",
                "FUN_08002efc"
            ],
            "code": "\nvoid FUNC_08002db0(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08002db0",
            "entrypoint": "0x08002db0",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08002db0": "FUNC_08002db0"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08002db2": {
            "additional_data": {
                "FUN_08002db2": {
                    "decode_and_process_data": 1,
                    "handle_i2_c_event": 2,
                    "process_callback": 1,
                    "process_data": 17,
                    "process_function": 1,
                    "process_i2_c_data": 2,
                    "process_i2_c_packet": 1,
                    "process_i2_c_transfer": 2,
                    "process_input": 1
                },
                "HAL_I2C_MasterTxCpltCallback": {
                    "handle_i2_c_master_tx_cplt": 2,
                    "handle_i2_c_transmission": 1,
                    "handle_i2_c_transmit_complete": 1,
                    "handle_master_transmit_complete": 1,
                    "handle_master_tx_completion": 1,
                    "handle_master_tx_cplt": 5,
                    "master_transmit_callback": 1,
                    "master_transmit_complete": 1,
                    "master_transmit_complete_callback": 1,
                    "master_tx_callback": 2,
                    "master_tx_cplt_callback": 4
                },
                "HAL_I2C_MemTxCpltCallback": {
                    "handle_i2_c_mem_transmission": 1,
                    "handle_i2_c_mem_transmit_complete": 1,
                    "handle_i2_c_mem_tx_cplt": 2,
                    "handle_i2_c_transmit_complete": 1,
                    "handle_mem_tx_completion": 1,
                    "handle_mem_tx_cplt": 5,
                    "mem_transmit_callback": 1,
                    "mem_transmit_complete": 1,
                    "mem_tx_callback": 2,
                    "mem_tx_cplt_callback": 4,
                    "memory_transmit_complete_callback": 1
                },
                "cVar1": {
                    "char1": 6,
                    "char_flag": 1,
                    "char_val": 3,
                    "char_value": 6,
                    "character": 6,
                    "character1": 1,
                    "event_char": 1,
                    "first_char": 5,
                    "transfer_type": 2
                },
                "param_1": {
                    "data": 16,
                    "data_array": 1,
                    "event_data": 1,
                    "event_params": 1,
                    "input": 1,
                    "input_data": 2,
                    "packet": 1,
                    "param": 2,
                    "param_array": 1,
                    "parameter1": 1,
                    "parameters": 2,
                    "transfer": 1,
                    "transfer_data": 1
                },
                "puVar2": {
                    "data_pointer": 1,
                    "event_pointer": 1,
                    "param_b": 1,
                    "pointer": 9,
                    "pointer_value": 1,
                    "pointer_var": 3,
                    "pointer_variable2": 1,
                    "ptr": 5,
                    "ptr1": 1,
                    "ptr_val": 1,
                    "ptr_value": 3,
                    "ptr_var": 1,
                    "temp": 1,
                    "transfer_ptr": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_08002c4e",
                "FUN_08002db0"
            ],
            "calling": [
                "FUN_080033b8"
            ],
            "code": "\nundefined4 process_i2_c_data_08002db2(uint **data)\n\n{\n  char char1;\n  uint *pointer;\n  \n  char1 = *(char *)((int)data + 0x3d);\n  pointer = data[0xb];\n  if ((*(short *)(data + 10) == 0) && (char1 == '!')) {\n    if ((pointer == (uint *)0x4) || ((pointer == (uint *)0x8 || (pointer == (uint *)0xffff0000)))) {\n      (*data)[1] = (*data)[1] & 0xfffff8ff;\n      **data = **data | 0x200;\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      if (*(char *)((int)data + 0x3e) == '@') {\n        *(undefined *)((int)data + 0x3e) = 0;\n        handle_mem_tx_cplt();\n      }\n      else {\n        *(undefined *)((int)data + 0x3e) = 0;\n        handle_master_tx_cplt();\n      }\n    }\n    else {\n      (*data)[1] = (*data)[1] & 0xfffff8ff;\n      data[0xc] = (uint *)0x11;\n      *(undefined *)((int)data + 0x3e) = 0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      handle_master_tx_cplt();\n    }\n  }\n  else if ((char1 == '!') || ((*(char *)((int)data + 0x3e) == '@' && (char1 == '\\\"')))) {\n    if (*(short *)((int)data + 0x2a) == 0) {\n      (*data)[1] = (*data)[1] & 0xfffffbff;\n    }\n    else if (*(char *)((int)data + 0x3e) == '@') {\n      if (data[0x14] == (uint *)0x0) {\n        if (data[0x13] == (uint *)0x1) {\n          (*data)[4] = (uint)data[0x12] & 0xff;\n          data[0x14] = (uint *)((int)data[0x14] + 2);\n        }\n        else {\n          (*data)[4] = (uint)((int)data[0x12] << 0x10) >> 0x18;\n          data[0x14] = (uint *)((int)data[0x14] + 1);\n        }\n      }\n      else if (data[0x14] == (uint *)0x1) {\n        (*data)[4] = (uint)data[0x12] & 0xff;\n        data[0x14] = (uint *)((int)data[0x14] + 1);\n      }\n      else if (data[0x14] == (uint *)0x2) {\n        if (*(char *)((int)data + 0x3d) == '\\\"') {\n          **data = **data | 0x100;\n        }\n        else if (*(char *)((int)data + 0x3d) == '!') {\n          pointer = data[9];\n          data[9] = (uint *)((int)pointer + 1);\n          (*data)[4] = (uint)*(byte *)pointer;\n          *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n        }\n      }\n    }\n    else {\n      pointer = data[9];\n      data[9] = (uint *)((int)pointer + 1);\n      (*data)[4] = (uint)*(byte *)pointer;\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_i2_c_data_08002db2",
            "entrypoint": "0x08002db2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002db2": "process_i2_c_data_08002db2",
                "HAL_I2C_MasterTxCpltCallback": "handle_master_tx_cplt",
                "HAL_I2C_MemTxCpltCallback": "handle_mem_tx_cplt",
                "cVar1": "char1",
                "param_1": "data",
                "puVar2": "pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002efc": {
            "additional_data": {
                "FUNC_08002c4e": {
                    "reverse_something": 2
                },
                "FUNC_08002db0": {
                    "another_function": 1,
                    "improve_something": 1
                },
                "FUN_08002efc": {
                    "execute_command": 1,
                    "handle_data_transmission": 1,
                    "handle_i2_c_completion": 1,
                    "handle_i2_c_data": 3,
                    "handle_i2_c_data_transmission": 1,
                    "handle_i2_c_event": 2,
                    "handle_i2_c_transfer": 1,
                    "handle_i2_c_transmission": 1,
                    "handle_i2c_operation": 1,
                    "handle_i2c_transfer": 1,
                    "process_data": 11,
                    "process_function": 1,
                    "process_i2_c_data": 2,
                    "process_i2_c_packet": 1,
                    "process_i2_c_transaction": 1,
                    "process_i2c_data": 1,
                    "update_i2_c_flags": 1
                },
                "HAL_I2C_MasterTxCpltCallback": {
                    "handle_i2_c_master_transmit_complete": 1,
                    "handle_i2_c_master_tx_cplt": 2,
                    "handle_i2c_master_tx_complete": 1,
                    "handle_master_transmit_complete": 1,
                    "handle_master_tx_complete": 2,
                    "handle_master_tx_cplt": 9,
                    "handle_master_tx_cplt_callback": 6,
                    "master_transmission_callback": 1,
                    "master_tx_complete_callback": 1,
                    "master_tx_cplt_callback": 1,
                    "on_master_tx_cplt": 1
                },
                "HAL_I2C_MemTxCpltCallback": {
                    "data_transmission_callback": 1,
                    "handle_i2_c_mem_tx_cplt": 2,
                    "handle_i2_c_memory_transmit_complete": 1,
                    "handle_i2c_mem_tx_complete": 1,
                    "handle_mem_tx_complete": 1,
                    "handle_mem_tx_cplt": 9,
                    "handle_mem_tx_cplt_callback": 6,
                    "handle_memory_transmit_complete": 1,
                    "handle_memory_tx_complete": 1,
                    "mem_tx_complete_callback": 1,
                    "mem_tx_cplt_callback": 1,
                    "on_mem_tx_cplt": 1
                },
                "Hal_I2C_MasterTxCpltCallback": {
                    "handle_i2c_master_tx_complete": 1
                },
                "Hal_I2C_MemTxCpltCallback": {
                    "handle_i2c_mem_tx_complete": 1
                },
                "param_1": {
                    "command_params": 1,
                    "data": 15,
                    "data_array": 1,
                    "data_ptr": 1,
                    "event_data": 2,
                    "function_params": 1,
                    "i2c_data": 1,
                    "i2c_params": 1,
                    "operation_data": 1,
                    "packet": 1,
                    "param_array": 1,
                    "parameters": 2,
                    "transaction_data": 1,
                    "transfer_data": 2
                },
                "ptr_to_data_0xb": {
                    "status_ptr": 1
                },
                "ptr_to_data_9": {
                    "byte_data_ptr": 1
                },
                "puVar1": {
                    "current_value": 1,
                    "data_pointer": 1,
                    "element": 1,
                    "event_flag": 1,
                    "event_value": 1,
                    "flag": 2,
                    "param_1_ptr11": 1,
                    "param_value": 1,
                    "payload": 1,
                    "ptr": 2,
                    "ptr1": 1,
                    "pu_var": 2,
                    "status": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 3,
                    "temp_var": 1,
                    "value": 8,
                    "var1": 2
                }
            },
            "called": [
                "FUN_08002c4e",
                "FUN_08002db0"
            ],
            "calling": [
                "FUN_080033b8"
            ],
            "code": "\nundefined4 process_i2_c_data_08002efc(uint **data)\n\n{\n  uint *value;\n  \n  value = data[0xb];\n  if (*(char *)((int)data + 0x3d) == '!') {\n    if (*(short *)((int)data + 0x2a) == 0) {\n      if (((value == (uint *)0x4) || (value == (uint *)0x8)) || (value == (uint *)0xffff0000)) {\n        (*data)[1] = (*data)[1] & 0xfffff8ff;\n        **data = **data | 0x200;\n        data[0xc] = (uint *)0x0;\n        *(undefined *)((int)data + 0x3d) = 0x20;\n        if (*(char *)((int)data + 0x3e) == '@') {\n          *(undefined *)((int)data + 0x3e) = 0;\n          handle_mem_tx_cplt();\n        }\n        else {\n          *(undefined *)((int)data + 0x3e) = 0;\n          handle_master_tx_cplt();\n        }\n      }\n      else {\n        (*data)[1] = (*data)[1] & 0xfffff8ff;\n        data[0xc] = (uint *)0x11;\n        *(undefined *)((int)data + 0x3e) = 0;\n        *(undefined *)((int)data + 0x3d) = 0x20;\n        handle_master_tx_cplt();\n      }\n    }\n    else {\n      value = data[9];\n      data[9] = (uint *)((int)value + 1);\n      (*data)[4] = (uint)*(byte *)value;\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_i2_c_data_08002efc",
            "entrypoint": "0x08002efc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002efc": "process_i2_c_data_08002efc",
                "HAL_I2C_MasterTxCpltCallback": "handle_master_tx_cplt",
                "HAL_I2C_MemTxCpltCallback": "handle_mem_tx_cplt",
                "param_1": "data",
                "puVar1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002f9a": {
            "called": [],
            "calling": [
                "FUN_08002f9c",
                "FUN_0800306c"
            ],
            "code": "\nvoid FUNC_08002f9a(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08002f9a",
            "entrypoint": "0x08002f9a",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08002f9a": "FUNC_08002f9a"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08002f9c": {
            "additional_data": {
                "FUNC_08002c50": {
                    "execute_callback1": 1,
                    "pre_processing": 1
                },
                "FUNC_08002f9a": {
                    "execute_callback2": 1,
                    "post_processing": 1
                },
                "FUN_08002f9c": {
                    "decode_and_handle_data": 1,
                    "handle_i2_c_data": 1,
                    "process_data": 18,
                    "process_i2_c_data": 2,
                    "process_i2_c_packet": 1,
                    "update_configuration": 1,
                    "update_data": 2,
                    "update_flag": 2,
                    "update_flags_and_callbacks": 1,
                    "update_parameter": 1,
                    "update_status": 1
                },
                "HAL_I2C_MasterRxCpltCallback": {
                    "handle_i2_c_master_receive_complete": 1,
                    "handle_i2_c_master_rx_cplt": 1,
                    "handle_master_receive": 1,
                    "handle_master_rx_cplt": 7,
                    "master_receive_callback": 1,
                    "master_rx_cplt_callback": 2,
                    "on_i2_c_master_receive_complete": 1
                },
                "HAL_I2C_MemRxCpltCallback": {
                    "handle_i2_c_mem_receive_complete": 1,
                    "handle_i2_c_mem_rx_cplt": 1,
                    "handle_mem_receive": 1,
                    "handle_mem_rx_cplt": 7,
                    "mem_rx_cplt_callback": 2,
                    "memory_receive_callback": 1,
                    "on_i2_c_mem_receive_complete": 1
                },
                "param_1": {
                    "config": 1,
                    "data": 19,
                    "data_array": 1,
                    "data_pointer": 1,
                    "flags": 1,
                    "input_data": 1,
                    "input_data_ptr": 1,
                    "packet": 1,
                    "parameter": 1,
                    "parameters": 3,
                    "status_data": 1
                },
                "puVar1": {
                    "pointer": 1,
                    "pointer_var": 1,
                    "pointer_var1": 1,
                    "ptr": 5,
                    "ptr1": 1,
                    "temp": 4,
                    "temp_pointer": 4,
                    "temp_ptr": 10,
                    "temp_var": 1,
                    "temp_variable": 2
                }
            },
            "called": [
                "FUN_08002c50",
                "FUN_08002f9a"
            ],
            "calling": [
                "FUN_080033b8"
            ],
            "code": "\nundefined4 process_i2_c_data_08002f9c(uint **data)\n\n{\n  uint *temp_ptr;\n  \n  if (*(char *)((int)data + 0x3d) == '\\\"') {\n    if (*(ushort *)((int)data + 0x2a) < 4) {\n      if (*(ushort *)((int)data + 0x2a) - 2 < 2) {\n        if (data[0xb] == (uint *)0x2) {\n          **data = **data | 0x400;\n        }\n        else {\n          **data = **data & 0xfffffbff;\n          **data = **data | 0x800;\n        }\n        (*data)[1] = (*data)[1] & 0xfffffbff;\n      }\n      else {\n        if (data[0xb] == (uint *)0x2) {\n          **data = **data | 0x400;\n        }\n        else {\n          **data = **data & 0xfffffbff;\n        }\n        (*data)[1] = (*data)[1] & 0xfffff8ff;\n        temp_ptr = data[9];\n        data[9] = (uint *)((int)temp_ptr + 1);\n        *(char *)temp_ptr = (char)(*data)[4];\n        *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n        *(undefined *)((int)data + 0x3d) = 0x20;\n        data[0xc] = (uint *)0x0;\n        if (*(char *)((int)data + 0x3e) == '@') {\n          *(undefined *)((int)data + 0x3e) = 0;\n          handle_mem_rx_cplt();\n        }\n        else {\n          *(undefined *)((int)data + 0x3e) = 0;\n          handle_master_rx_cplt();\n        }\n      }\n    }\n    else {\n      temp_ptr = data[9];\n      data[9] = (uint *)((int)temp_ptr + 1);\n      *(char *)temp_ptr = (char)(*data)[4];\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_i2_c_data_08002f9c",
            "entrypoint": "0x08002f9c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002f9c": "process_i2_c_data_08002f9c",
                "HAL_I2C_MasterRxCpltCallback": "handle_master_rx_cplt",
                "HAL_I2C_MemRxCpltCallback": "handle_mem_rx_cplt",
                "param_1": "data",
                "puVar1": "temp_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800306c": {
            "additional_data": {
                "FUNC_08002c50": {
                    "callback1": 2,
                    "callback_function1": 1,
                    "do_something": 1,
                    "function_a": 1,
                    "handle_i2_c_mem_rx_cplt_callback": 1
                },
                "FUNC_08002f9a": {
                    "callback2": 2,
                    "callback_function2": 1,
                    "do_another_thing": 1,
                    "function_b": 1,
                    "handle_i2_c_master_rx_cplt_callback": 1
                },
                "FUN_0800306c": {
                    "process_data": 27,
                    "process_param": 2,
                    "update_param": 1,
                    "update_register": 1
                },
                "HAL_I2C_MasterRxCpltCallback": {
                    "handle_i2_c_master_rx_cplt": 1,
                    "handle_i2c_master_receive_complete": 1,
                    "handle_master_read_complete": 1,
                    "handle_master_receive": 1,
                    "handle_master_rx_complete": 2,
                    "handle_master_rx_cplt": 11,
                    "handle_master_rx_cplt_callback": 1,
                    "master_receive_callback": 1,
                    "master_rx_callback": 1,
                    "on_i2_c_master_rx_cplt": 1
                },
                "HAL_I2C_MemRxCpltCallback": {
                    "handle_i2_c_mem_rx_cplt": 1,
                    "handle_i2c_mem_receive_complete": 1,
                    "handle_mem_read_complete": 1,
                    "handle_mem_receive": 1,
                    "handle_mem_rx_complete": 2,
                    "handle_mem_rx_cplt": 11,
                    "handle_mem_rx_cplt_callback": 1,
                    "mem_rx_callback": 1,
                    "memory_receive_callback": 1,
                    "on_i2_c_mem_rx_cplt": 1
                },
                "Hal_I2C_MasterRxCpltCallback": {
                    "handle_master_receive_complete": 1
                },
                "Hal_I2C_MemRxCpltCallback": {
                    "handle_mem_receive_complete": 1
                },
                "param_1": {
                    "data": 22,
                    "data_array": 1,
                    "data_ptr": 1,
                    "input_data": 2,
                    "param": 1,
                    "param_array": 1,
                    "param_list": 1,
                    "params": 1,
                    "register_data": 1
                },
                "puVar1": {
                    "current_value": 1,
                    "element": 1,
                    "param_value": 1,
                    "pointer": 1,
                    "ptr": 4,
                    "ptr_to_uint": 1,
                    "ptr_value": 2,
                    "ptr_var": 1,
                    "temp": 1,
                    "value": 17,
                    "value_ptr": 1
                }
            },
            "called": [
                "FUN_08002c50",
                "FUN_08002f9a"
            ],
            "calling": [
                "FUN_080033b8"
            ],
            "code": "\nundefined4 process_data_0800306c(uint **data)\n\n{\n  uint *value;\n  \n  value = data[0xb];\n  if (*(short *)((int)data + 0x2a) == 3) {\n    if (((value == (uint *)0x4) || (value == (uint *)0x8)) || (value == (uint *)0xffff0000)) {\n      **data = **data & 0xfffffbff;\n    }\n    value = data[9];\n    data[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  else if (*(short *)((int)data + 0x2a) == 2) {\n    if (((value == (uint *)0x4) || (value == (uint *)0x8)) || (value == (uint *)0xffff0000)) {\n      (*data)[1] = (*data)[1] & 0xfffffcff;\n      **data = **data | 0x200;\n    }\n    else {\n      if (value == (uint *)0x2) {\n        **data = **data | 0x400;\n      }\n      else {\n        **data = **data & 0xfffffbff;\n      }\n      (*data)[1] = (*data)[1] & 0xfffffcff;\n    }\n    value = data[9];\n    data[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    value = data[9];\n    data[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    *(undefined *)((int)data + 0x3d) = 0x20;\n    data[0xc] = (uint *)0x0;\n    if (*(char *)((int)data + 0x3e) == '@') {\n      *(undefined *)((int)data + 0x3e) = 0;\n      handle_mem_rx_cplt();\n    }\n    else {\n      *(undefined *)((int)data + 0x3e) = 0;\n      handle_master_rx_cplt();\n    }\n  }\n  else {\n    value = data[9];\n    data[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "current_name": "process_data_0800306c",
            "entrypoint": "0x0800306c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800306c": "process_data_0800306c",
                "HAL_I2C_MasterRxCpltCallback": "handle_master_rx_cplt",
                "HAL_I2C_MemRxCpltCallback": "handle_mem_rx_cplt",
                "param_1": "data",
                "puVar1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800316a": {
            "called": [],
            "calling": [
                "FUN_0800316c"
            ],
            "code": "\nvoid FUNC_0800316a(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800316a",
            "entrypoint": "0x0800316a",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800316a": "FUNC_0800316a"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800316c": {
            "additional_data": {
                "FUNC_0800316a": {
                    "reverse_data": 1
                },
                "FUN_0800258c": {
                    "validate_param": 1
                },
                "FUN_0800316c": {
                    "handle_i2_c_callback": 1,
                    "handle_i2_c_event": 9,
                    "process_data": 4,
                    "process_i2_c_data": 4,
                    "process_i2_c_event": 1
                },
                "FUN_08004ec4": {
                    "abort_transfer": 1
                },
                "FUN_08004ef4": {
                    "process_error": 1
                },
                "HAL_DMA_Abort_IT": {
                    "abort_dma": 1,
                    "abort_dma_transfer": 1
                },
                "HAL_I2C_AbortCpltCallback": {
                    "abort_complete_callback": 1,
                    "handle_i2_c_abort_complete": 1
                },
                "HAL_I2C_ErrorCallback": {
                    "error_callback": 1,
                    "handle_i2_c_error": 1
                },
                "HAL_I2C_ListenCpltCallback": {
                    "handle_i2_c_listen_complete": 1,
                    "listen_complete_callback": 1
                },
                "LAB_080035fc_1": {
                    "callback1": 1,
                    "target_label": 1
                },
                "iVar1": {
                    "dma_abort_status": 1,
                    "dma_result": 1,
                    "error": 1,
                    "error_code": 2,
                    "index": 5,
                    "result": 15,
                    "status": 4,
                    "temp_var1": 1
                },
                "param_1": {
                    "binary_data": 1,
                    "callback_data": 1,
                    "data": 8,
                    "event_data": 9,
                    "function_parameter": 1,
                    "function_params": 1,
                    "i2c_data": 1,
                    "input_param": 1,
                    "input_pointer": 1,
                    "param": 2,
                    "param_list": 1,
                    "parameter": 1,
                    "parameters": 1,
                    "params": 1
                },
                "puVar2": {
                    "buffer_ptr": 3,
                    "char_ptr": 4,
                    "count": 1,
                    "data_ptr": 2,
                    "pointer1": 1,
                    "pointer_var1": 4,
                    "pointer_var2": 1,
                    "ptr": 6,
                    "ptr1": 3,
                    "ptr2": 1,
                    "ptr_var2": 1,
                    "temp_ptr": 1,
                    "temp_var1": 2
                },
                "puVar3": {
                    "data_ptr": 4,
                    "event": 1,
                    "event_ptr": 3,
                    "i2c_data_ptr": 1,
                    "param_ptr": 1,
                    "pointer2": 1,
                    "pointer_var2": 4,
                    "pointer_var3": 1,
                    "ptr2": 8,
                    "ptr3": 1,
                    "ptr_var3": 1,
                    "temp_pointer": 1,
                    "temp_ptr_2": 1,
                    "temp_var2": 2
                }
            },
            "called": [
                "FUN_0800258c",
                "FUN_08004ef4",
                "FUN_0800316a",
                "FUN_08004ec4"
            ],
            "calling": [
                "FUN_08003520",
                "FUN_080032b4"
            ],
            "code": "\nvoid handle_i2_c_event_0800316c(uint **event_data)\n\n{\n  int result;\n  uint *ptr;\n  uint *ptr2;\n  \n  if (*(byte *)((int)event_data + 0x3d) - 0x29 < 2) {\n    event_data[0xc] = (uint *)0x0;\n    *(undefined *)((int)event_data + 0x3d) = 0x28;\n  }\n  else {\n    if ((*(char *)((int)event_data + 0x3d) != '`') && (((*event_data)[1] & 0x800) == 0)) {\n      *(undefined *)((int)event_data + 0x3d) = 0x20;\n    }\n    event_data[0xc] = (uint *)0x0;\n    *(undefined *)((int)event_data + 0x3e) = 0;\n  }\n  **event_data = **event_data & 0xfffff7ff;\n  ptr2 = *event_data;\n  if ((ptr2[1] & 0x800) == 0) {\n    if (*(char *)((int)event_data + 0x3d) == '`') {\n      *(undefined *)((int)event_data + 0x3d) = 0x20;\n      event_data[0x10] = (uint *)0x0;\n      if ((ptr2[5] & 0x40) != 0) {\n        ptr = event_data[9];\n        event_data[9] = (uint *)((int)ptr + 1);\n        *(char *)ptr = (char)ptr2[4];\n      }\n      **event_data = **event_data & 0xfffffffe;\n      abort_complete_callback(event_data);\n    }\n    else {\n      if ((ptr2[5] & 0x40) != 0) {\n        ptr = event_data[9];\n        event_data[9] = (uint *)((int)ptr + 1);\n        *(char *)ptr = (char)ptr2[4];\n      }\n      handle_i2_c_error(event_data);\n    }\n  }\n  else {\n    ptr2[1] = ptr2[1] & 0xfffff7ff;\n    if (*(char *)((int)event_data[0xd] + 0x21) == '\\x01') {\n      event_data[0xe][0xd] = (uint)&callback1;\n      result = abort_dma_transfer(event_data[0xe]);\n      if (result != 0) {\n        if (((*event_data)[5] & 0x40) != 0) {\n          ptr2 = event_data[9];\n          event_data[9] = (uint *)((int)ptr2 + 1);\n          *(char *)ptr2 = (char)(*event_data)[4];\n        }\n        **event_data = **event_data & 0xfffffffe;\n        *(undefined *)((int)event_data + 0x3d) = 0x20;\n        (*(code *)event_data[0xe][0xd])();\n      }\n    }\n    else {\n      event_data[0xd][0xd] = (uint)&callback1;\n      result = abort_dma_transfer(event_data[0xd]);\n      if (result != 0) {\n        **event_data = **event_data & 0xfffffffe;\n        *(undefined *)((int)event_data + 0x3d) = 0x20;\n        (*(code *)event_data[0xd][0xd])();\n      }\n    }\n  }\n  if ((*(char *)((int)event_data + 0x3d) == '(') && (((uint)event_data[0x10] & 4) != 0)) {\n    event_data[0xb] = (uint *)0xffff0000;\n    event_data[0xc] = (uint *)0x0;\n    *(undefined *)((int)event_data + 0x3d) = 0x20;\n    *(undefined *)((int)event_data + 0x3e) = 0;\n    listen_complete_callback(event_data);\n  }\n  return;\n}\n\n",
            "current_name": "handle_i2_c_event_0800316c",
            "entrypoint": "0x0800316c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800316c": "handle_i2_c_event_0800316c",
                "HAL_DMA_Abort_IT": "abort_dma_transfer",
                "HAL_I2C_AbortCpltCallback": "abort_complete_callback",
                "HAL_I2C_ErrorCallback": "handle_i2_c_error",
                "HAL_I2C_ListenCpltCallback": "listen_complete_callback",
                "LAB_080035fc_1": "callback1",
                "iVar1": "result",
                "param_1": "event_data",
                "puVar2": "ptr",
                "puVar3": "ptr2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080032b4": {
            "additional_data": {
                "FUN_080032b4": {
                    "handle_i2_c_event": 1,
                    "process_data": 20,
                    "process_function": 2,
                    "process_i2_c_data": 2,
                    "process_i2_c_event": 1,
                    "process_i2_c_packet": 1,
                    "process_i2c_data": 1,
                    "update_flags_and_callbacks": 1,
                    "update_flags_and_perform_actions": 1
                },
                "cVar1": {
                    "char_value": 8,
                    "char_var": 2,
                    "character": 11,
                    "current_char": 1,
                    "data": 1,
                    "event_char": 2,
                    "first_char": 5,
                    "packet_type": 1
                },
                "param_1": {
                    "data": 22,
                    "data_ptr": 1,
                    "event": 1,
                    "event_data": 1,
                    "packet": 1,
                    "param_array": 1,
                    "parameters": 1,
                    "params": 2
                },
                "puVar2": {
                    "curr_packet": 1,
                    "event_data": 1,
                    "event_data_ptr": 1,
                    "first_ptr": 1,
                    "pointer1": 6,
                    "pointer_var2": 1,
                    "ptr": 3,
                    "ptr1": 10,
                    "ptr_1": 1,
                    "ptr_data": 1,
                    "ptr_data1": 1,
                    "ptr_var1": 3,
                    "temp_ptr": 1
                },
                "puVar3": {
                    "data_ptr": 1,
                    "event_data_temp": 1,
                    "pointer2": 6,
                    "pointer_var3": 1,
                    "ptr2": 13,
                    "ptr_2": 1,
                    "ptr_data2": 1,
                    "ptr_data_index": 1,
                    "ptr_var2": 3,
                    "second_ptr": 1,
                    "temp_ptr2": 1,
                    "write_data_ptr": 1
                }
            },
            "called": [
                "FUN_08002ca4",
                "FUN_0800316c",
                "FUN_08004ec4"
            ],
            "calling": [
                "FUN_080033b8"
            ],
            "code": "\nundefined4 process_i2_c_data_080032b4(uint **data)\n\n{\n  char character;\n  uint *ptr1;\n  uint *ptr2;\n  \n  character = *(char *)((int)data + 0x3d);\n  (*data)[1] = (*data)[1] & 0xfffff8ff;\n  **data = **data | 1;\n  **data = **data & 0xfffffbff;\n  ptr1 = *data;\n  if ((ptr1[1] & 0x800) != 0) {\n    if ((*(char *)((int)data + 0x3d) == '\\\"') || (*(char *)((int)data + 0x3d) == '*')) {\n      *(short *)((int)data + 0x2a) = (short)*(undefined4 *)(*data[0xe] + 4);\n    }\n    else {\n      *(short *)((int)data + 0x2a) = (short)*(undefined4 *)(*data[0xd] + 4);\n    }\n  }\n  if (*(short *)((int)data + 0x2a) != 0) {\n    if ((ptr1[5] & 4) != 0) {\n      ptr2 = data[9];\n      data[9] = (uint *)((int)ptr2 + 1);\n      *(char *)ptr2 = (char)ptr1[4];\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n    if (((*data)[5] & 0x40) != 0) {\n      ptr1 = data[9];\n      data[9] = (uint *)((int)ptr1 + 1);\n      *(char *)ptr1 = (char)(*data)[4];\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n    data[0x10] = (uint *)((uint)data[0x10] | 4);\n  }\n  if (data[0x10] == (uint *)0x0) {\n    if (((character == '(') || (character == '*')) || (character == ')')) {\n      data[0xb] = (uint *)0xffff0000;\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      *(undefined *)((int)data + 0x3e) = 0;\n      HAL_I2C_ListenCpltCallback();\n    }\n    else if ((data[0xc] == (uint *)0x22) || (character == '\\\"')) {\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      *(undefined *)((int)data + 0x3e) = 0;\n      HAL_I2C_SlaveRxCpltCallback();\n    }\n  }\n  else {\n    I2C_ITError();\n  }\n  return 0;\n}\n\n",
            "current_name": "process_i2_c_data_080032b4",
            "entrypoint": "0x080032b4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080032b4": "process_i2_c_data_080032b4",
                "cVar1": "character",
                "param_1": "data",
                "puVar2": "ptr1",
                "puVar3": "ptr2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080033b8": {
            "additional_data": {
                "FUN_08002848": {
                    "i2_c_master_add10": 1
                },
                "FUN_080028d2": {
                    "i2_c_master_receive_rxne": 1
                },
                "FUN_080028de": {
                    "i2_c_master_transmit_txe": 1
                },
                "FUN_08002ab8": {
                    "i2_c_slave_receive_btf": 1
                },
                "FUN_08002ad8": {
                    "i2_c_master_sb": 1
                },
                "FUN_08002c54": {
                    "i2_c_slave_stopf": 1
                },
                "FUN_08002ca6": {
                    "i2_c_master_receive_btf": 1
                },
                "FUN_08002cf2": {
                    "i2_c_slave_receive_rxne": 1
                },
                "FUN_08002db2": {
                    "i2_c_slave_addr": 1
                },
                "FUN_08002efc": {
                    "i2_c_master_transmit_btf": 1
                },
                "FUN_08002f9c": {
                    "i2_c_master_addr": 1
                },
                "FUN_0800306c": {
                    "i2_c_slave_transmit_txe": 1
                },
                "FUN_080032b4": {
                    "i2_c_slave_transmit_btf": 1
                },
                "FUN_080033b8": {
                    "handle_i2_c_action": 1,
                    "handle_i2_c_events": 1,
                    "handle_i2_c_operation": 1,
                    "handle_i2_c_operations": 1,
                    "manage_i2_c_operations": 1,
                    "process_i2_c": 1,
                    "process_i2_c_command": 1,
                    "process_i2_c_commands": 1,
                    "process_i2_c_communication": 1,
                    "process_i2_c_data": 6,
                    "process_i2_c_event": 3,
                    "process_i2_c_interrupt": 1,
                    "process_i2_c_master_slave": 2,
                    "process_i2_c_message": 1,
                    "process_i2_c_messaging": 1,
                    "process_i2_c_operation": 5,
                    "process_i2_c_operations": 1,
                    "process_i2_c_status": 2
                },
                "I2C_MasterReceive_BTF": {
                    "master_receive_btf": 1,
                    "process_master_receive_btf": 1
                },
                "I2C_MasterReceive_RXNE": {
                    "master_receive_data": 1,
                    "process_master_receive_rxne": 1
                },
                "I2C_MasterTransmit_BTF": {
                    "master_transmit_btf": 1,
                    "process_master_transmit_btf": 1
                },
                "I2C_MasterTransmit_TXE": {
                    "master_transmit_data": 1,
                    "process_master_transmit_txe": 1
                },
                "I2C_Master_ADD10": {
                    "master_address10bit": 1,
                    "process_master_add10": 1
                },
                "I2C_Master_ADDR": {
                    "master_address": 1,
                    "process_master_address": 1
                },
                "I2C_Master_SB": {
                    "process_master_sb": 1,
                    "start_bit": 1
                },
                "I2C_SlaveReceive_BTF": {
                    "process_slave_receive_btf": 1,
                    "slave_receive_btf": 1
                },
                "I2C_SlaveReceive_RXNE": {
                    "process_slave_receive_rxne": 1,
                    "slave_receive_data": 1
                },
                "I2C_SlaveTransmit_BTF": {
                    "process_slave_transmit_btf": 1,
                    "slave_transmit_btf": 1
                },
                "I2C_SlaveTransmit_TXE": {
                    "process_slave_transmit_txe": 1,
                    "slave_transmit_data": 1
                },
                "I2C_Slave_ADDR": {
                    "process_slave_address": 1,
                    "slave_address": 1
                },
                "I2C_Slave_STOPF": {
                    "process_slave_stopf": 1,
                    "slave_stopf": 1
                },
                "iVar1": {
                    "command": 1,
                    "command_pointer": 1,
                    "data": 2,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "data_value": 1,
                    "event": 2,
                    "event_data_ptr": 1,
                    "event_value": 1,
                    "i2c_base_address": 1,
                    "i2c_data_ptr": 1,
                    "i2c_operation": 1,
                    "i2c_param1": 1,
                    "item": 1,
                    "message_ptr": 1,
                    "operation": 2,
                    "param": 1,
                    "param_value": 2,
                    "ptr": 2,
                    "ptr_data": 3,
                    "ptr_to_data": 1,
                    "register_value": 1,
                    "value": 1
                },
                "param_1": {
                    "command": 1,
                    "command_pointer": 1,
                    "data": 8,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "event_data": 3,
                    "i2c_data": 5,
                    "i2c_event": 1,
                    "i2c_operation_params": 1,
                    "i2c_params": 2,
                    "i2c_status": 1,
                    "interrupt_data": 1,
                    "message": 1,
                    "operation_data": 2,
                    "registers": 1
                },
                "uVar2": {
                    "command_flag1": 1,
                    "condition1": 1,
                    "control_register": 1,
                    "current_state": 1,
                    "event_data_value1": 1,
                    "event_flags": 1,
                    "flag1": 4,
                    "flags": 2,
                    "flags1": 2,
                    "i2c_flags": 1,
                    "i2c_param2": 1,
                    "ptr_data_value": 1,
                    "reg1": 1,
                    "reg_value1": 1,
                    "status": 2,
                    "status_1": 1,
                    "status_flag": 1,
                    "status_flag1": 2,
                    "status_reg1": 1,
                    "status_register1": 1,
                    "status_var1": 2,
                    "value1": 2
                },
                "uVar3": {
                    "command_flag2": 1,
                    "condition2": 1,
                    "control_bits": 1,
                    "control_flag": 1,
                    "event_data_value2": 1,
                    "event_status": 1,
                    "flag": 1,
                    "flag2": 4,
                    "flags": 1,
                    "flags2": 2,
                    "i2c_control": 1,
                    "i2c_param3": 1,
                    "interrupt_flag": 1,
                    "ptr_data_value2": 1,
                    "reg2": 1,
                    "reg_value2": 1,
                    "status": 1,
                    "status_2": 1,
                    "status_flag2": 2,
                    "status_reg2": 1,
                    "status_register": 1,
                    "status_register2": 1,
                    "status_var2": 2,
                    "value2": 2
                },
                "uVar4": {
                    "command_flag3": 1,
                    "condition3": 1,
                    "config_data_value": 1,
                    "control": 2,
                    "control_reg": 1,
                    "control_register": 1,
                    "data_register": 1,
                    "device_flag": 1,
                    "device_status": 1,
                    "flag3": 4,
                    "flags3": 2,
                    "i2c_param4": 1,
                    "i2c_status": 1,
                    "mask": 1,
                    "ptr_data_value3": 1,
                    "reg3": 1,
                    "reg_value3": 1,
                    "status_3": 1,
                    "status_bits": 1,
                    "status_flag3": 2,
                    "status_register": 1,
                    "status_var3": 2,
                    "value3": 2
                }
            },
            "called": [
                "FUN_08002f9c",
                "FUN_08002848",
                "FUN_08002ad8",
                "FUN_080028d2",
                "FUN_08002ca6",
                "FUN_080028de",
                "FUN_08002efc",
                "FUN_08002db2",
                "FUN_08002c54",
                "FUN_08002cf2",
                "FUN_08002ab8",
                "FUN_0800306c",
                "FUN_080032b4"
            ],
            "calling": [],
            "code": "\nvoid process_i2_c_data_080033b8(int *data)\n\n{\n  int ptr_data;\n  uint flag1;\n  uint flag2;\n  uint flag3;\n  \n  ptr_data = *data;\n  flag3 = *(uint *)(ptr_data + 0x18);\n  flag1 = *(uint *)(ptr_data + 0x14);\n  flag2 = *(uint *)(ptr_data + 4);\n  if ((*(char *)((int)data + 0x3e) == '\\x10') || (*(char *)((int)data + 0x3e) == '@')) {\n    if (((flag1 & 0x10001) == 0) || ((flag2 & 0x200) == 0)) {\n      if (((flag1 & 0x10008) == 0) || ((flag2 & 0x200) == 0)) {\n        if (((flag1 & 0x10002) != 0) && ((flag2 & 0x200) != 0)) {\n          master_address(data);\n        }\n      }\n      else {\n        master_address10bit(data);\n      }\n    }\n    else {\n      start_bit(data);\n    }\n    if ((flag3 & 0x100004) == 0) {\n      if ((((flag1 & 0x10040) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        process_master_receive_rxne(data);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        master_receive_btf(data);\n        return;\n      }\n    }\n    else {\n      if ((((flag1 & 0x10080) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        process_master_transmit_txe(data);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        master_transmit_btf(data);\n        return;\n      }\n    }\n  }\n  else {\n    if (((flag1 & 0x10002) != 0) && ((flag2 & 0x200) != 0)) {\n      slave_address();\n      return;\n    }\n    if (((flag1 & 0x10010) != 0) && ((flag2 & 0x200) != 0)) {\n      slave_stopf(data);\n      return;\n    }\n    if ((flag3 & 0x100004) == 0) {\n      if ((((flag1 & 0x10040) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        slave_receive_data(data);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        process_slave_receive_btf(data);\n      }\n    }\n    else {\n      if ((((flag1 & 0x10080) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        slave_transmit_data(data);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        process_slave_transmit_btf(data);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "current_name": "process_i2_c_data_080033b8",
            "entrypoint": "0x080033b8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080033b8": "process_i2_c_data_080033b8",
                "I2C_MasterReceive_BTF": "master_receive_btf",
                "I2C_MasterReceive_RXNE": "process_master_receive_rxne",
                "I2C_MasterTransmit_BTF": "master_transmit_btf",
                "I2C_MasterTransmit_TXE": "process_master_transmit_txe",
                "I2C_Master_ADD10": "master_address10bit",
                "I2C_Master_ADDR": "master_address",
                "I2C_Master_SB": "start_bit",
                "I2C_SlaveReceive_BTF": "process_slave_receive_btf",
                "I2C_SlaveReceive_RXNE": "slave_receive_data",
                "I2C_SlaveTransmit_BTF": "process_slave_transmit_btf",
                "I2C_SlaveTransmit_TXE": "slave_transmit_data",
                "I2C_Slave_ADDR": "slave_address",
                "I2C_Slave_STOPF": "slave_stopf",
                "iVar1": "ptr_data",
                "param_1": "data",
                "uVar2": "flag1",
                "uVar3": "flag2",
                "uVar4": "flag3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003520": {
            "additional_data": {
                "FUN_08002d1c": {
                    "decrement_flag1": 1,
                    "handle_error": 1
                },
                "FUN_0800316c": {
                    "handle_interrupt_error": 1,
                    "increment_flag1": 1
                },
                "FUN_08003520": {
                    "check_and_modify_flags": 1,
                    "check_and_set_flags": 1,
                    "check_and_update_flags": 1,
                    "check_i2_c_parameters": 1,
                    "process_data": 4,
                    "process_flags": 1,
                    "process_i2_c_data": 3,
                    "process_i2_c_flags": 1,
                    "process_i2_c_parameters": 1,
                    "process_parameters": 1,
                    "update_configuration": 1,
                    "update_flags": 1,
                    "update_flags_and_check_errors": 1,
                    "update_flags_and_errors": 1,
                    "update_flags_and_state": 1,
                    "update_flags_and_status": 4,
                    "update_i2_c_flags": 1,
                    "update_i2_c_status": 3,
                    "update_status": 2,
                    "update_status_flags": 1
                },
                "I2C_ITError": {
                    "handle_i2_c_error": 1,
                    "handle_i2_c_error_flag": 1,
                    "handle_it_error": 4
                },
                "I2C_Slave_AF": {
                    "handle_i2_c_slave_address_flag": 1,
                    "handle_i2_c_slave_af": 1,
                    "handle_slave_af": 4
                },
                "cVar1": {
                    "char1": 4,
                    "char_value": 7,
                    "char_var": 2,
                    "char_var1": 1,
                    "character": 12,
                    "character1": 1,
                    "condition_char": 1,
                    "current_char": 1,
                    "special_char": 1,
                    "value": 1
                },
                "param_1": {
                    "configuration_ptr": 1,
                    "data": 9,
                    "flags": 1,
                    "i2_c_data": 1,
                    "i2c_data": 1,
                    "i2c_status": 2,
                    "input_data": 1,
                    "input_params": 2,
                    "param": 1,
                    "param_input": 1,
                    "parameter": 1,
                    "parameters": 4,
                    "params": 5
                },
                "puVar2": {
                    "config_ptr": 1,
                    "data": 1,
                    "flag_array": 1,
                    "i2c_pointer": 2,
                    "i2c_status_ptr": 1,
                    "param_deref": 1,
                    "param_pointer": 1,
                    "param_value": 3,
                    "pointer": 3,
                    "pointer1": 1,
                    "pointer_param": 1,
                    "pointer_to_data": 1,
                    "pointer_var": 1,
                    "ptr": 5,
                    "ptr_data": 2,
                    "ptr_i2_c_status": 1,
                    "ptr_param1": 1,
                    "ptr_to_input": 1,
                    "ptr_to_params": 1
                },
                "uVar3": {
                    "config_value1": 1,
                    "flag1": 10,
                    "flag_value": 4,
                    "flag_value1": 1,
                    "flags": 1,
                    "flags1": 2,
                    "status": 1,
                    "status1": 1,
                    "status_code": 1,
                    "status_flag": 2,
                    "value1": 7
                },
                "uVar4": {
                    "another_flag_value": 2,
                    "condition_value": 1,
                    "config_value2": 1,
                    "const_value": 1,
                    "control_flag": 2,
                    "flag": 2,
                    "flag2": 10,
                    "flag_value2": 1,
                    "flags2": 2,
                    "param": 1,
                    "status2": 1,
                    "value2": 7
                }
            },
            "called": [
                "FUN_08002d1c",
                "FUN_0800316c"
            ],
            "calling": [],
            "code": "\nvoid update_flags_and_status_08003520(uint **data)\n\n{\n  char character;\n  uint *ptr;\n  uint flag1;\n  uint flag2;\n  \n  ptr = *data;\n  flag1 = ptr[5];\n  flag2 = ptr[1];\n  if (((flag1 & 0x10100) != 0) && ((flag2 & 0x100) != 0)) {\n    data[0x10] = (uint *)((uint)data[0x10] | 1);\n    ptr[5] = 0xfffffeff;\n    **data = **data | 0x8000;\n  }\n  if (((flag1 & 0x10200) != 0) && ((flag2 & 0x100) != 0)) {\n    data[0x10] = (uint *)((uint)data[0x10] | 2);\n    (*data)[5] = 0xfffffdff;\n  }\n  if (((flag1 & 0x10400) != 0) && ((flag2 & 0x100) != 0)) {\n    character = *(char *)((int)data + 0x3d);\n    if (((*(char *)((int)data + 0x3e) == ' ') && (*(short *)((int)data + 0x2a) == 0)) &&\n       (((character == '!' || (character == ')')) || ((character == '(' && (data[0xc] == (uint *)0x21)))))) {\n      handle_slave_af(data);\n    }\n    else {\n      data[0x10] = (uint *)((uint)data[0x10] | 4);\n      if (*(char *)((int)data + 0x3e) == '\\x10') {\n        **data = **data | 0x200;\n      }\n      (*data)[5] = 0xfffffbff;\n    }\n  }\n  if (((flag1 & 0x10800) != 0) && ((flag2 & 0x100) != 0)) {\n    data[0x10] = (uint *)((uint)data[0x10] | 8);\n    (*data)[5] = 0xfffff7ff;\n  }\n  if (data[0x10] != (uint *)0x0) {\n    handle_it_error(data);\n  }\n  return;\n}\n\n",
            "current_name": "update_flags_and_status_08003520",
            "entrypoint": "0x08003520",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003520": "update_flags_and_status_08003520",
                "I2C_ITError": "handle_it_error",
                "I2C_Slave_AF": "handle_slave_af",
                "cVar1": "character",
                "param_1": "data",
                "puVar2": "ptr",
                "uVar3": "flag1",
                "uVar4": "flag2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800365c": {
            "additional_data": {
                "FUN_0800365c": {
                    "calculate_delay": 17,
                    "calculate_duration": 1,
                    "calculate_iteration_count": 1,
                    "calculate_iterations": 6,
                    "delay": 1,
                    "delay_function": 5
                },
                "bVar1": {
                    "continue_loop": 1,
                    "is_delay_complete": 1,
                    "is_delay_greater": 1,
                    "is_non_zero": 2,
                    "is_not_zero": 2
                },
                "local_4": {
                    "adjusted_value": 1,
                    "calculated_count": 1,
                    "calculated_delay": 1,
                    "calculated_loops": 1,
                    "calculated_value": 2,
                    "delay": 3,
                    "delay_count": 11,
                    "delay_counter": 3,
                    "delay_value": 1,
                    "iteration_count": 2,
                    "iterations": 2,
                    "result": 1,
                    "result_value": 1
                },
                "param_1": {
                    "input": 3,
                    "input_parameter": 1,
                    "input_seconds": 1,
                    "input_value": 24,
                    "milliseconds": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08003688"
            ],
            "code": "\nvoid calculate_delay_0800365c(int input_value)\n\n{\n  bool is_not_zero;\n  int delay_count;\n  \n  delay_count = input_value * (DAT_20000084 / 8000);\n  do {\n    is_not_zero = delay_count != 0;\n    delay_count = delay_count + -1;\n  } while (is_not_zero);\n  return;\n}\n\n",
            "current_name": "calculate_delay_0800365c",
            "entrypoint": "0x0800365c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800365c": "calculate_delay_0800365c",
                "bVar1": "is_not_zero",
                "local_4": "delay_count",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003688": {
            "additional_data": {
                "FUN_08001cc4": {
                    "helper_function1": 1
                },
                "FUN_0800365c": {
                    "helper_function2": 1
                },
                "FUN_08003688": {
                    "check_and_control_periph": 1,
                    "check_and_delay": 1,
                    "execute_operation": 1,
                    "handle_action": 1,
                    "handle_event": 1,
                    "handle_flags": 1,
                    "handle_param": 1,
                    "initialize_hardware": 1,
                    "new_function": 1,
                    "perform_action": 1,
                    "perform_operation": 2,
                    "process_and_control": 1
                },
                "HAL_GetTick": {
                    "get_current_tick": 2,
                    "get_current_time": 2,
                    "get_tick": 1,
                    "get_tick_count": 1,
                    "get_ticks": 2
                },
                "RCC_Delay": {
                    "delay": 2,
                    "delay_execution": 1,
                    "delay_function": 1
                },
                "_DAT_40007000": {
                    "control_reg": 1,
                    "output_register": 1,
                    "register4": 1,
                    "register5": 2,
                    "register6": 1,
                    "register7": 1,
                    "register_5": 1,
                    "register_7": 1,
                    "register_d": 1,
                    "register_value_3": 1
                },
                "_DAT_40021000": {
                    "control_reg2": 1,
                    "hardware_register_2": 1,
                    "input_register2": 1,
                    "register1": 2,
                    "register10": 1,
                    "register2": 2,
                    "register_2": 1,
                    "register_b": 1,
                    "register_value_2": 1,
                    "status_reg2": 1
                },
                "_DAT_40021004": {
                    "control_reg1": 1,
                    "input_register1": 1,
                    "register1": 2,
                    "register2": 2,
                    "register9": 1,
                    "register_7": 1,
                    "register_9": 1,
                    "register_a": 1,
                    "register_value_1": 1,
                    "status_reg1": 1
                },
                "_DAT_4002101c": {
                    "control_register_flag": 1,
                    "register4": 3,
                    "register5": 1,
                    "register6": 1,
                    "register_4": 1,
                    "register_6": 1,
                    "register_e": 1,
                    "register_value_4": 1,
                    "status_reg4": 1
                },
                "_DAT_40021020": {
                    "control_reg2": 1,
                    "control_register": 1,
                    "register3": 3,
                    "register6": 1,
                    "register8": 1,
                    "register_6": 1,
                    "register_8": 1,
                    "register_f": 1,
                    "register_value_6": 1
                },
                "_DAT_40021024": {
                    "control_register2": 1,
                    "register3": 1,
                    "register4": 1,
                    "register5": 1,
                    "register6": 2,
                    "register_2": 1,
                    "register_4": 1,
                    "register_c": 1,
                    "register_value_5": 1,
                    "status_reg3": 1
                },
                "_DAT_42420000": {
                    "buffer1": 1,
                    "data_reg1": 1,
                    "register3": 1,
                    "register7": 4,
                    "register_1": 1,
                    "register_3": 1,
                    "register_h": 1,
                    "register_value_7": 1
                },
                "_DAT_42420060": {
                    "buffer2": 1,
                    "data_reg3": 1,
                    "register11": 1,
                    "register8": 1,
                    "register9": 3,
                    "register_10": 1,
                    "register_8": 1,
                    "register_g": 1,
                    "register_value_9": 1
                },
                "_DAT_42420480": {
                    "data_reg2": 1,
                    "register5": 1,
                    "register8": 3,
                    "register_3": 1,
                    "register_5": 1,
                    "register_value_8": 1
                },
                "bVar5": {
                    "flag": 16,
                    "is_condition_met": 4,
                    "is_condition_true": 3,
                    "is_first_condition_true": 1,
                    "is_flag_set": 5,
                    "is_true": 1,
                    "is_unset": 1
                },
                "iVar1": {
                    "current_time": 2,
                    "initial_time": 1,
                    "start_tick": 2,
                    "start_ticks": 2,
                    "start_time": 21,
                    "tick_start": 2
                },
                "iVar2": {
                    "current_tick": 2,
                    "current_ticks": 2,
                    "current_time": 20,
                    "elapsed_time": 1,
                    "end_time": 2,
                    "new_time": 1,
                    "tick_current": 2
                },
                "param_1": {
                    "action_params": 2,
                    "config": 1,
                    "config_params": 1,
                    "event_data": 1,
                    "flags": 4,
                    "input": 3,
                    "input_data": 3,
                    "input_values": 1,
                    "inputs": 1,
                    "operation_params": 2,
                    "param": 1,
                    "param1": 1,
                    "parameters": 8,
                    "params": 2
                },
                "uVar3": {
                    "result": 25,
                    "return_value": 5
                },
                "uVar4": {
                    "event_value": 1,
                    "param1_val": 1,
                    "param1_value": 1,
                    "param_value": 6,
                    "temp_value": 1,
                    "value": 21
                }
            },
            "called": [
                "FUN_08001cc4",
                "FUN_0800365c"
            ],
            "calling": [
                "FUN_08001b48"
            ],
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nundefined4 perform_operation_08003688(uint *parameters)\n\n{\n  int start_time;\n  int current_time;\n  undefined4 result;\n  uint value;\n  bool flag;\n  \n  if ((*parameters & 1) != 0) {\n    if (((_DAT_40021004 & 0xc) == 4) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) != 0)))) {\n      if (((_DAT_40021000 & 0x20000) != 0) && (parameters[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      value = parameters[1];\n      if (value == 0x10000) {\n        _DAT_40021000 = _DAT_40021000 | 0x10000;\n      }\n      else if (value == 0) {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      else if (value == 0x50000) {\n        _DAT_40021000 = _DAT_40021000 | 0x50000;\n      }\n      else {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      if (parameters[1] == 0) {\n        start_time = get_current_tick();\n        while ((_DAT_40021000 & 0x20000) != 0) {\n          current_time = get_current_tick();\n          if (100 < (uint)(current_time - start_time)) {\n            return 3;\n          }\n        }\n      }\n      else {\n        start_time = get_current_tick();\n        while ((_DAT_40021000 & 0x20000) == 0) {\n          current_time = get_current_tick();\n          if (100 < (uint)(current_time - start_time)) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*parameters & 2) != 0) {\n    if (((_DAT_40021004 & 0xc) == 0) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) == 0)))) {\n      if (((_DAT_40021000 & 2) != 0) && (parameters[4] != 1)) {\n        return 1;\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | parameters[5] << 3;\n    }\n    else if (parameters[4] == 0) {\n      _DAT_42420000 = 0;\n      start_time = get_current_tick();\n      while ((_DAT_40021000 & 2) != 0) {\n        current_time = get_current_tick();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420000 = 1;\n      start_time = get_current_tick();\n      while ((_DAT_40021000 & 2) == 0) {\n        current_time = get_current_tick();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | parameters[5] << 3;\n    }\n  }\n  if ((*parameters & 8) != 0) {\n    if (parameters[6] == 0) {\n      _DAT_42420480 = 0;\n      start_time = get_current_tick();\n      while ((_DAT_40021024 & 2) != 0) {\n        current_time = get_current_tick();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420480 = 1;\n      start_time = get_current_tick();\n      while ((_DAT_40021024 & 2) == 0) {\n        current_time = get_current_tick();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n      delay(1);\n    }\n  }\n  if ((*parameters & 4) != 0) {\n    flag = (_DAT_4002101c & 0x10000000) == 0;\n    if (flag) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      start_time = get_current_tick();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        current_time = get_current_tick();\n        if (100 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    value = parameters[3];\n    if (value == 1) {\n      _DAT_40021020 = _DAT_40021020 | 1;\n    }\n    else if (value == 0) {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    else if (value == 5) {\n      _DAT_40021020 = _DAT_40021020 | 5;\n    }\n    else {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    if (parameters[3] == 0) {\n      start_time = get_current_tick();\n      while ((_DAT_40021020 & 2) != 0) {\n        current_time = get_current_tick();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      start_time = get_current_tick();\n      while ((_DAT_40021020 & 2) == 0) {\n        current_time = get_current_tick();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    if (flag) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if (parameters[7] == 0) {\n    result = 0;\n  }\n  else if ((_DAT_40021004 & 0xc) == 8) {\n    result = 1;\n  }\n  else if (parameters[7] == 2) {\n    _DAT_42420060 = 0;\n    start_time = get_current_tick();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        if (parameters[8] == 0x10000) {\n          _DAT_40021004 = _DAT_40021004 & 0xfffdffff | parameters[2];\n        }\n        _DAT_40021004 = _DAT_40021004 & 0xffc2ffff | parameters[8] | parameters[9];\n        _DAT_42420060 = 1;\n        start_time = get_current_tick();\n        do {\n          if ((_DAT_40021000 & 0x2000000) != 0) {\n            return 0;\n          }\n          current_time = get_current_tick();\n        } while ((uint)(current_time - start_time) < 3);\n        return 3;\n      }\n      current_time = get_current_tick();\n    } while ((uint)(current_time - start_time) < 3);\n    result = 3;\n  }\n  else {\n    _DAT_42420060 = 0;\n    start_time = get_current_tick();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        return 0;\n      }\n      current_time = get_current_tick();\n    } while ((uint)(current_time - start_time) < 3);\n    result = 3;\n  }\n  return result;\n}\n\n",
            "current_name": "perform_operation_08003688",
            "entrypoint": "0x08003688",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003688": "perform_operation_08003688",
                "HAL_GetTick": "get_current_tick",
                "RCC_Delay": "delay",
                "bVar5": "flag",
                "iVar1": "start_time",
                "iVar2": "current_time",
                "param_1": "parameters",
                "uVar3": "result",
                "uVar4": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003a68": {
            "additional_data": {
                "DAT_40021004": {
                    "data_flag": 1
                },
                "FUN_08003a68": {
                    "calculate_delay": 17,
                    "calculate_execution_time": 5,
                    "calculate_execution_time_based_on_config": 1,
                    "calculate_frequency": 1,
                    "calculate_processing_time": 1,
                    "calculate_time": 3,
                    "calculate_time_delay": 2,
                    "calculate_value": 1
                },
                "PTR_08003a68_1": {
                    "ptr1": 1
                },
                "PTR_08003a68_2": {
                    "ptr2": 1
                },
                "PTR_08003a68_3": {
                    "ptr3": 1
                },
                "PTR_08003a68_4": {
                    "ptr4": 1
                },
                "_DAT_40021004": {
                    "condition": 1,
                    "config": 3,
                    "config_data": 1,
                    "config_flag": 1,
                    "control_value": 1,
                    "data_value": 1,
                    "flag": 4,
                    "input_flag": 1,
                    "input_mask": 1,
                    "input_value": 3,
                    "register_value": 4,
                    "status": 3,
                    "status_register": 1
                },
                "local_1c": {
                    "accumulator": 1,
                    "constant_e": 1,
                    "counter": 7,
                    "data": 1,
                    "data_value": 1,
                    "delay": 1,
                    "delay_constant": 1,
                    "delay_limit": 1,
                    "delay_value": 2,
                    "execution_time": 2,
                    "flag": 1,
                    "flag_value": 1,
                    "input_data": 1,
                    "input_value": 2,
                    "multiplier": 1,
                    "result": 1,
                    "some_value": 1,
                    "status_flag": 1,
                    "threshold": 1,
                    "time": 1,
                    "time_offset": 1,
                    "value_1": 1
                },
                "uStack_10": {
                    "another_constant_value": 1,
                    "array_3": 1,
                    "config_var3": 1,
                    "constant2": 2,
                    "constant3": 3,
                    "constant_a": 1,
                    "constant_b": 1,
                    "data3": 2,
                    "dividend": 1,
                    "divisor": 1,
                    "multiplier": 3,
                    "multiplier3": 1,
                    "offset": 1,
                    "parameter3": 1,
                    "stack_value3": 1,
                    "temp3": 1,
                    "temp_value3": 1,
                    "third_value": 1,
                    "value2": 2,
                    "value3": 3,
                    "value_4": 1,
                    "variable3": 1
                },
                "uStack_14": {
                    "array_2": 1,
                    "config_var2": 1,
                    "constant": 2,
                    "constant1": 2,
                    "constant2": 3,
                    "constant_b": 1,
                    "constant_c": 1,
                    "constant_value": 1,
                    "data2": 2,
                    "divider": 1,
                    "factor": 1,
                    "multiplier": 1,
                    "multiplier2": 1,
                    "offset": 1,
                    "parameter2": 1,
                    "second_value": 1,
                    "stack_value2": 1,
                    "temp2": 1,
                    "temp_value2": 1,
                    "value1": 2,
                    "value2": 3,
                    "value_3": 1,
                    "variable2": 1
                },
                "uStack_18": {
                    "array_1": 1,
                    "config_value": 1,
                    "config_var1": 1,
                    "configuration_value": 1,
                    "constant": 2,
                    "constant1": 3,
                    "constant_c": 1,
                    "constant_d": 1,
                    "data": 2,
                    "data1": 2,
                    "first_value": 1,
                    "hash_value": 1,
                    "multiplier": 1,
                    "multiplier1": 1,
                    "offset_value": 1,
                    "parameter1": 1,
                    "sequence": 1,
                    "stack_value1": 1,
                    "temp1": 1,
                    "temp_value1": 1,
                    "value": 1,
                    "value1": 3,
                    "value_2": 1,
                    "variable1": 1
                },
                "uStack_c": {
                    "array_4": 1,
                    "config_var4": 1,
                    "constant": 2,
                    "constant3": 2,
                    "constant4": 3,
                    "constant_a": 1,
                    "constant_d": 1,
                    "data4": 2,
                    "fourth_value": 1,
                    "mask": 1,
                    "multiplier4": 1,
                    "parameter4": 1,
                    "seed": 1,
                    "some_other_constant_value": 1,
                    "stack_value4": 1,
                    "temp4": 1,
                    "temp_value4": 1,
                    "value": 2,
                    "value3": 2,
                    "value4": 3,
                    "value_5": 1,
                    "variable4": 1
                },
                "uVar1": {
                    "delay": 3,
                    "delay_value": 2,
                    "execution_time": 1,
                    "result": 3,
                    "time_delay": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003afa"
            ],
            "code": "\n\n\nuint calculate_time_delay_08003a68(void)\n\n{\n  uint result;\n  undefined2 counter;\n  undefined4 constant1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 constant4;\n  \n  constant4 = 0x10100f0e;\n  value3 = 0xd0c0b0a;\n  value2 = 0x9080706;\n  constant1 = 0x5040302;\n  counter = 0x201;\n  if ((_DAT_40021004 & 0xc) == 8) {\n    result = (uint)*(byte *)((int)&constant1 + ((_DAT_40021004 << 10) >> 0x1c));\n    if ((_DAT_40021004 & 0x10000) == 0) {\n      result = result * 4000000;\n    }\n    else {\n      result = (result * 8000000) /\n              (uint)*(byte *)((int)&counter - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n    }\n  }\n  else {\n    result = 8000000;\n  }\n  return result;\n}\n\n",
            "current_name": "calculate_time_delay_08003a68",
            "entrypoint": "0x08003a68",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003a68": "calculate_time_delay_08003a68",
                "local_1c": "counter",
                "uStack_10": "value3",
                "uStack_14": "value2",
                "uStack_18": "constant1",
                "uStack_c": "constant4",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003ad4": {
            "additional_data": {
                "DAT_20000084": {
                    "clock_frequency": 2,
                    "sys_clock_divisor": 1
                },
                "FUN_08003ad4": {
                    "configure_device": 1,
                    "initialize_clock": 1,
                    "initialize_clock_config": 1,
                    "initialize_device": 1,
                    "initialize_hardware": 7,
                    "initialize_periph": 1,
                    "initialize_peripheral": 1,
                    "initialize_system": 15,
                    "initialize_system_clock": 2,
                    "set_system_clock": 1
                },
                "HAL_GetTick": {
                    "get_current_tick": 2,
                    "get_tick_count": 1
                },
                "HAL_RCC_GetSysClockFreq": {
                    "get_sys_clock_frequency": 2,
                    "get_system_clock_frequency": 1
                },
                "_DAT_40021004": {
                    "configuration_data": 1,
                    "device_config": 1,
                    "device_control": 1,
                    "device_register": 1,
                    "device_settings": 1,
                    "device_status": 1,
                    "gpio_config": 1,
                    "periph_status_reg": 1,
                    "system_status": 3
                },
                "_DAT_40022000": {
                    "device_config": 1,
                    "device_status": 1,
                    "periph_config_reg": 1,
                    "system_config": 4,
                    "system_settings": 3,
                    "timer_config": 1
                },
                "iVar1": {
                    "start_tick": 1,
                    "start_time": 28
                },
                "iVar2": {
                    "current_tick": 1,
                    "current_time": 28
                },
                "param_1": {
                    "config": 2,
                    "config_array": 4,
                    "config_data": 4,
                    "config_flags": 1,
                    "config_parameters": 1,
                    "config_params": 11,
                    "configurations": 2,
                    "device_config": 1,
                    "flags": 1,
                    "hardware_settings": 1,
                    "settings": 1,
                    "system_config": 2
                },
                "param_2": {
                    "available_memory": 1,
                    "config_array_size": 2,
                    "config_count": 3,
                    "config_param_count": 1,
                    "config_params_count": 1,
                    "config_size": 8,
                    "hardware_count": 1,
                    "num_config_parameters": 1,
                    "num_configs": 1,
                    "num_configurations": 2,
                    "num_params": 7,
                    "num_settings": 1,
                    "param_num": 1,
                    "value": 1
                },
                "uVar3": {
                    "clock_freq": 2,
                    "clock_frequency": 2,
                    "sys_clock_freq": 19,
                    "sys_clock_frequency": 1,
                    "sys_freq": 1,
                    "system_clock_freq": 2,
                    "system_clock_frequency": 1,
                    "temp_value": 2,
                    "temp_variable": 1
                }
            },
            "called": [
                "FUN_08003afa"
            ],
            "calling": [
                "FUN_08001b48"
            ],
            "code": "\n\n\nundefined4 initialize_system_clock_08003ad4(uint *config_params,uint config_size)\n\n{\n  int start_time;\n  int current_time;\n  uint sys_clock_freq;\n  \n  if ((_DAT_40022000 & 7) < config_size) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | config_size;\n    if (config_size != (config_size & 7)) {\n      return 1;\n    }\n  }\n  if ((*config_params & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | config_params[2];\n  }\n  if ((*config_params & 1) != 0) {\n    sys_clock_freq = config_params[1];\n    if (sys_clock_freq == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((sys_clock_freq != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = sys_clock_freq | _DAT_40021004 & 0xfffffffc;\n    start_time = get_current_tick();\n    if (config_params[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        current_time = get_current_tick();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else if (config_params[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        current_time = get_current_tick();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        current_time = get_current_tick();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (config_size < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | config_size;\n    if (config_size != (config_size & 7)) {\n      return 1;\n    }\n  }\n  if ((*config_params & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | config_params[3];\n  }\n  if ((*config_params & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | config_params[4] << 3;\n  }\n  sys_clock_freq = get_sys_clock_frequency();\n  DAT_20000084 = sys_clock_freq >> (&DAT_0800772c)[(_DAT_40021004 << 0x18) >> 0x1c];\n  HAL_InitTick(0xf);\n  return 0;\n}\n\n",
            "current_name": "initialize_system_clock_08003ad4",
            "entrypoint": "0x08003ad4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003ad4": "initialize_system_clock_08003ad4",
                "HAL_GetTick": "get_current_tick",
                "HAL_RCC_GetSysClockFreq": "get_sys_clock_frequency",
                "iVar1": "start_time",
                "iVar2": "current_time",
                "param_1": "config_params",
                "param_2": "config_size",
                "uVar3": "sys_clock_freq"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003afa": {
            "additional_data": {
                "5000": {
                    "timeout": 1
                },
                "DAT_0800772c": {
                    "clock_freq_table": 1,
                    "sys_clock_divider_table": 1
                },
                "DAT_20000084": {
                    "sys_clock": 1,
                    "sys_clock_divider": 2,
                    "sys_clock_freq": 1,
                    "sys_clock_freq_result": 1,
                    "system_clock_divisor": 1
                },
                "DAT_40021000": {
                    "hardware_config": 1
                },
                "DAT_40021004": {
                    "device_config": 1
                },
                "DAT_40022000": {
                    "memory_config": 1
                },
                "FUN_08003afa": {
                    "configure_device": 1,
                    "initialize_and_wait": 1,
                    "initialize_device": 8,
                    "initialize_hardware": 2,
                    "initialize_sys_clock": 1,
                    "initialize_system": 17,
                    "initialize_system_and_clock": 1
                },
                "HAL_GetTick": {
                    "get_current_tick": 1,
                    "get_current_time": 3,
                    "get_tick_count": 1
                },
                "HAL_InitTick": {
                    "initialize_tick": 1
                },
                "HAL_RCC_GetSysClockFreq": {
                    "get_sys_clock_freq": 3,
                    "get_system_clock_frequency": 2
                },
                "_DAT_40021000": {
                    "hardware_config": 1,
                    "hardware_status": 1,
                    "some_config": 1,
                    "special_register": 1,
                    "system_status": 2
                },
                "_DAT_40021004": {
                    "device_config": 1,
                    "device_register": 1,
                    "sys_config": 1,
                    "system_config": 1,
                    "system_control": 1,
                    "system_status": 1
                },
                "_DAT_40022000": {
                    "buffer_status": 1,
                    "system_config": 1
                },
                "iVar1": {
                    "start_tick": 6,
                    "start_time": 24
                },
                "iVar2": {
                    "current_tick": 6,
                    "current_time": 24
                },
                "param_1": {
                    "config_flags": 3,
                    "device_config": 2,
                    "device_flags": 6,
                    "flags": 17,
                    "system_config": 1,
                    "system_flags": 2
                },
                "param_2": {
                    "clock_config": 1,
                    "clock_divider": 1,
                    "clock_divisor": 1,
                    "clock_index": 1,
                    "clock_mode": 1,
                    "clock_source": 10,
                    "clock_type": 1,
                    "config": 1,
                    "config_value": 1,
                    "count": 1,
                    "device_id": 1,
                    "device_index": 1,
                    "device_priority": 1,
                    "num_channels": 2,
                    "param": 1,
                    "param_value": 1,
                    "sys_clock_freq": 1,
                    "sys_clock_prescaler": 1,
                    "system_periph": 1,
                    "value": 2
                },
                "uVar3": {
                    "clock_freq": 1,
                    "device_value": 1,
                    "freq": 1,
                    "option": 1,
                    "sys_clk_freq": 1,
                    "sys_clock_freq": 19,
                    "sys_clock_frequency": 1,
                    "sysclock_freq": 1,
                    "system_clock_freq": 2,
                    "system_freq": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_08001cc4",
                "FUN_08001c3c",
                "FUN_08003a68"
            ],
            "calling": [
                "FUN_08003ad4"
            ],
            "code": "\n\n\nundefined4 initialize_system_and_clock_08003afa(uint *flags,uint clock_source)\n\n{\n  int start_time;\n  int current_time;\n  uint sys_clock_freq;\n  \n  if ((*flags & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | flags[2];\n  }\n  if ((*flags & 1) != 0) {\n    sys_clock_freq = flags[1];\n    if (sys_clock_freq == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((sys_clock_freq != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = sys_clock_freq | _DAT_40021004 & 0xfffffffc;\n    start_time = get_current_time();\n    if (flags[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        current_time = get_current_time();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else if (flags[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        current_time = get_current_time();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        current_time = get_current_time();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (clock_source < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | clock_source;\n    if (clock_source != (clock_source & 7)) {\n      return 1;\n    }\n  }\n  if ((*flags & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | flags[3];\n  }\n  if ((*flags & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | flags[4] << 3;\n  }\n  sys_clock_freq = get_sys_clock_freq();\n  DAT_20000084 = sys_clock_freq >> (&DAT_0800772c)[(_DAT_40021004 << 0x18) >> 0x1c];\n  initialize_tick(0xf);\n  return 0;\n}\n\n",
            "current_name": "initialize_system_and_clock_08003afa",
            "entrypoint": "0x08003afa",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003afa": "initialize_system_and_clock_08003afa",
                "HAL_GetTick": "get_current_time",
                "HAL_InitTick": "initialize_tick",
                "HAL_RCC_GetSysClockFreq": "get_sys_clock_freq",
                "iVar1": "start_time",
                "iVar2": "current_time",
                "param_1": "flags",
                "param_2": "clock_source",
                "uVar3": "sys_clock_freq"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003c44": {
            "additional_data": {
                "DAT_20000084": {
                    "data": 13,
                    "data_address": 1,
                    "data_offset": 1,
                    "data_value": 4,
                    "global_value": 1,
                    "global_variable": 3
                },
                "FUN_08003c44": {
                    "get_dat_value": 1,
                    "get_data": 13,
                    "get_data_address": 1,
                    "get_data_from_global_variable": 1,
                    "get_data_offset": 1,
                    "get_data_value": 9,
                    "get_global_value": 1,
                    "get_global_variable": 2,
                    "get_global_variable_value": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08003c50",
                "FUN_08003c70",
                "FUN_08001b48"
            ],
            "code": "\nundefined4 get_data_value_08003c44(void)\n\n{\n  return DAT_20000084;\n}\n\n",
            "current_name": "get_data_value_08003c44",
            "entrypoint": "0x08003c44",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003c44": "get_data_value_08003c44"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003c50": {
            "additional_data": {
                "DAT_0800773c": {
                    "array_adjustment": 1,
                    "bit_shift_array": 2,
                    "lookup_table": 2,
                    "shift_amount": 1,
                    "shift_array": 2,
                    "shift_table": 1,
                    "shift_values": 1
                },
                "FUN_08003c44": {
                    "get_hclk_freq": 1,
                    "initialize_hclk": 1,
                    "retrieve_data": 1,
                    "unused_function": 1
                },
                "FUN_08003c50": {
                    "calculate_adjusted_frequency": 1,
                    "calculate_adjusted_hclk_freq": 3,
                    "calculate_hclk_frequency": 1,
                    "get_adjusted_clock_frequency": 5,
                    "get_adjusted_hclk_freq": 8,
                    "get_adjusted_hclk_frequency": 1,
                    "get_clock_frequency": 3,
                    "get_hclk_frequency": 8,
                    "get_scaled_freq": 1
                },
                "HAL_RCC_GetHCLKFreq": {
                    "get_actual_clock_frequency": 1,
                    "get_hclk": 1,
                    "get_hclk_freq": 6,
                    "get_hclk_frequency": 2,
                    "get_original_hclk_freq": 1,
                    "get_raw_hclk_frequency": 1,
                    "retrieve_clock_frequency": 1
                },
                "_DAT_0800773c": {
                    "shift_values": 1
                },
                "_DAT_40021004": {
                    "clock_divider": 1,
                    "clock_setting": 1,
                    "config_register": 1,
                    "gcr_register": 1,
                    "input_value": 9,
                    "parameter": 1,
                    "reg_value": 1,
                    "register_address": 1,
                    "register_value": 12,
                    "some_constant": 1
                },
                "uVar1": {
                    "adjusted_hclk_freq": 1,
                    "clock_freq": 1,
                    "clock_frequency": 3,
                    "frequency": 1,
                    "hclk_freq": 13,
                    "hclk_frequency": 7
                },
                "undefined4": {
                    "uint": 1
                }
            },
            "called": [
                "FUN_08003c44"
            ],
            "calling": [
                "FUN_08004204"
            ],
            "code": "\n\n\nuint get_adjusted_hclk_frequency_08003c50(void)\n\n{\n  uint hclk_freq;\n  \n  hclk_freq = get_hclk_freq();\n  return hclk_freq >> (&DAT_0800773c)[(uint)(_DAT_40021004 << 0x15) >> 0x1d];\n}\n\n",
            "current_name": "get_adjusted_hclk_frequency_08003c50",
            "entrypoint": "0x08003c50",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003c50": "get_adjusted_hclk_frequency_08003c50",
                "HAL_RCC_GetHCLKFreq": "get_hclk_freq",
                "uVar1": "hclk_freq"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003c70": {
            "additional_data": {
                "DAT_0800773c": {
                    "adjustment_array": 1,
                    "constant_array": 1,
                    "shift_array": 3,
                    "shift_operations": 1,
                    "shift_value": 1,
                    "shift_values": 2
                },
                "FUN_08003c44": {
                    "get_constant_value": 1,
                    "get_hclk_freq": 1,
                    "get_hclk_frequency": 1,
                    "get_rcc_value": 1,
                    "initialize_rcc": 1,
                    "initialize_system": 1
                },
                "FUN_08003c70": {
                    "calculate_adjusted_frequency": 1,
                    "calculate_adjusted_hclk_freq": 1,
                    "calculate_adjusted_hclk_frequency": 1,
                    "calculate_clock_frequency": 1,
                    "calculate_divided_hclk": 1,
                    "calculate_hclk_divisor": 1,
                    "calculate_hclk_frequency": 1,
                    "get_adjusted_clock_frequency": 1,
                    "get_adjusted_frequency": 2,
                    "get_adjusted_hclk_freq": 12,
                    "get_adjusted_hclk_frequency": 1,
                    "get_clock_frequency": 1,
                    "get_divided_frequency": 1,
                    "get_hclk_divisor": 2,
                    "get_hclk_freq_shifted_by_constant": 1,
                    "get_hclk_frequency": 3
                },
                "HAL_RCC_GetHCLKFreq": {
                    "get_clock_frequency": 1,
                    "get_cpu_frequency": 1,
                    "get_hclk_freq": 12,
                    "get_hclk_frequency": 2,
                    "get_system_clock_frequency": 1
                },
                "_DAT_0800773c": {
                    "shift_values": 1
                },
                "_DAT_40021004": {
                    "constant_value": 1,
                    "data_value": 1,
                    "device_control_register": 1,
                    "input_data": 1,
                    "input_value": 10,
                    "prescaler": 1,
                    "reg_value": 1,
                    "register_value": 5,
                    "shift_val": 1,
                    "some_data": 1,
                    "some_value": 2,
                    "some_variable": 1,
                    "system_clock_divisor": 1,
                    "system_clock_value": 1,
                    "value": 1
                },
                "uVar1": {
                    "adjusted_freq": 1,
                    "adjusted_hclk_freq": 1,
                    "clock_frequency": 2,
                    "freq": 1,
                    "frequency": 2,
                    "hclk_freq": 15,
                    "hclk_frequency": 7
                }
            },
            "called": [
                "FUN_08003c44"
            ],
            "calling": [
                "FUN_08004204",
                "FUN_08003da4"
            ],
            "code": "\n\n\nuint get_adjusted_hclk_freq_08003c70(void)\n\n{\n  uint hclk_freq;\n  \n  hclk_freq = get_hclk_freq();\n  return hclk_freq >> (&DAT_0800773c)[(uint)(_DAT_40021004 << 0x12) >> 0x1d];\n}\n\n",
            "current_name": "get_adjusted_hclk_freq_08003c70",
            "entrypoint": "0x08003c70",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003c70": "get_adjusted_hclk_freq_08003c70",
                "HAL_RCC_GetHCLKFreq": "get_hclk_freq",
                "uVar1": "hclk_freq"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003c90": {
            "additional_data": {
                "100": {
                    "max_wait_time1": 1
                },
                "5000": {
                    "max_wait_time2": 1
                },
                "FUN_08003c90": {
                    "configure_device": 3,
                    "configure_hardware": 1,
                    "configure_peripheral": 1,
                    "initialize_device": 5,
                    "initialize_hardware": 6,
                    "initialize_peripheral": 5,
                    "initialize_system": 1,
                    "update_configuration": 3,
                    "update_device_settings": 2,
                    "update_settings": 2,
                    "update_status": 1
                },
                "HAL_GetTick": {
                    "get_current_time": 2,
                    "get_tick_count": 1,
                    "get_time": 1
                },
                "_DAT_40007000": {
                    "control_flag": 1,
                    "data_reg": 1,
                    "device_status": 2,
                    "hardware_control": 1,
                    "hardware_reg3": 1,
                    "hardware_register2": 1,
                    "peripheral_register2": 1,
                    "register2": 6,
                    "status_reg": 1
                },
                "_DAT_40021004": {
                    "data_reg4": 1,
                    "device_control": 1,
                    "device_register": 1,
                    "hardware_register4": 1,
                    "peripheral_register4": 1,
                    "register5": 5,
                    "some_reg": 1
                },
                "_DAT_4002101c": {
                    "control_reg": 1,
                    "data_flag": 1,
                    "device_config_status": 1,
                    "device_flags": 1,
                    "global_flag": 1,
                    "hardware_reg1": 1,
                    "hardware_register1": 1,
                    "hardware_status": 1,
                    "peripheral_register1": 1,
                    "register1": 6
                },
                "_DAT_40021020": {
                    "config_reg": 1,
                    "data_reg2": 1,
                    "device_config": 1,
                    "device_control": 1,
                    "device_status": 1,
                    "hardware_config": 1,
                    "hardware_reg2": 1,
                    "hardware_register3": 1,
                    "peripheral_register3": 1,
                    "register3": 5,
                    "set_bits": 1
                },
                "_DAT_42420440": {
                    "config_flag": 1,
                    "data_reg3": 1,
                    "device_error": 1,
                    "extra_data": 1,
                    "flag": 1,
                    "hardware_reg4": 1,
                    "register4": 5,
                    "temp_var3": 1,
                    "temp_variable": 1,
                    "unknown_reg": 1
                },
                "bVar5": {
                    "flag": 3,
                    "flag3": 1,
                    "flag_clear": 1,
                    "is_bit_set": 5,
                    "is_first_run": 1,
                    "is_flag_set": 14,
                    "is_new": 1,
                    "is_new_config": 1,
                    "is_new_device": 1,
                    "is_updated": 1
                },
                "iVar3": {
                    "start_tick": 3,
                    "start_time": 25,
                    "tick_start": 1,
                    "time_start": 1,
                    "timer_start": 1
                },
                "iVar4": {
                    "curr_tick": 1,
                    "current_tick": 3,
                    "current_time": 24,
                    "end_time": 1,
                    "time_current": 1,
                    "timer_current": 1
                },
                "param_1": {
                    "config": 2,
                    "config_data": 1,
                    "config_parameters": 1,
                    "config_params": 4,
                    "config_settings": 1,
                    "config_values": 1,
                    "configuration": 3,
                    "device_config": 3,
                    "device_settings": 1,
                    "flags": 1,
                    "hardware_config": 2,
                    "parameters": 1,
                    "peripheral_data": 2,
                    "settings": 6,
                    "status_flags": 1
                },
                "uVar1": {
                    "bit_flag1": 1,
                    "bitwise_flag1": 1,
                    "flag": 1,
                    "flag1": 5,
                    "flag_set": 1,
                    "is_flag_set": 1,
                    "mask": 1,
                    "mask1": 2,
                    "result": 2,
                    "temp_flag": 3,
                    "temp_var1": 9,
                    "temp_var3": 1,
                    "temp_var_1": 1,
                    "value1": 1
                },
                "uVar2": {
                    "bit_flag2": 1,
                    "bitwise_flag2": 1,
                    "flag2": 5,
                    "mask2": 2,
                    "masked_value": 2,
                    "old_mask": 1,
                    "register_value": 1,
                    "temp": 2,
                    "temp_flag2": 1,
                    "temp_mask": 1,
                    "temp_value": 1,
                    "temp_var1": 1,
                    "temp_var2": 9,
                    "temp_var_2": 1,
                    "value2": 1
                }
            },
            "called": [
                "FUN_08001cc4"
            ],
            "calling": [
                "FUN_08001b48"
            ],
            "code": "\n\n\nundefined4 initialize_hardware_08003c90(uint *settings)\n\n{\n  uint temp_var1;\n  uint temp_var2;\n  int start_time;\n  int current_time;\n  bool is_flag_set;\n  \n  if ((*settings & 1) != 0) {\n    is_flag_set = (_DAT_4002101c & 0x10000000) == 0;\n    if (is_flag_set) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      start_time = get_current_time();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        current_time = get_current_time();\n        if (100 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    if (((_DAT_40021020 & 0x300) != 0) && ((_DAT_40021020 & 0x300) != (settings[1] & 0x300))) {\n      temp_var2 = _DAT_40021020 & 0xfffffcff;\n      _DAT_42420440 = 0;\n      temp_var1 = _DAT_40021020 & 1;\n      _DAT_40021020 = temp_var2;\n      if (temp_var1 != 0) {\n        start_time = get_current_time();\n        while ((_DAT_40021020 & 2) == 0) {\n          current_time = get_current_time();\n          if (5000 < (uint)(current_time - start_time)) {\n            return 3;\n          }\n        }\n      }\n    }\n    _DAT_40021020 = _DAT_40021020 & 0xfffffcff | settings[1];\n    if (is_flag_set) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if ((*settings & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffff3fff | settings[2];\n  }\n  if ((*settings & 0x10) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffbfffff | settings[3];\n  }\n  return 0;\n}\n\n",
            "current_name": "initialize_hardware_08003c90",
            "entrypoint": "0x08003c90",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003c90": "initialize_hardware_08003c90",
                "HAL_GetTick": "get_current_time",
                "bVar5": "is_flag_set",
                "iVar3": "start_time",
                "iVar4": "current_time",
                "param_1": "settings",
                "uVar1": "temp_var1",
                "uVar2": "temp_var2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003da4": {
            "additional_data": {
                "DAT_40021004": {
                    "register_value3": 1
                },
                "FUN_08003da4": {
                    "calculate_clock_frequency": 16,
                    "calculate_frequency": 2,
                    "calculate_pclk2_freq": 1,
                    "get_clock_frequency": 11,
                    "get_timer_frequency": 1
                },
                "HAL_RCC_GetPCLK2Freq": {
                    "get_pclk2_frequency": 1,
                    "get_peripheral_clock_frequency": 1
                },
                "_DAT_40021000": {
                    "device_id0": 1,
                    "register2": 1,
                    "register_value2": 1
                },
                "_DAT_40021004": {
                    "device_id1": 1,
                    "register1": 1,
                    "register_value1": 1
                },
                "_DAT_40021020": {
                    "device_status_reg": 1,
                    "register3": 1,
                    "register_value4": 1
                },
                "_DAT_40021024": {
                    "device_status_reg2": 1,
                    "register4": 1,
                    "register_value5": 1
                },
                "local_24": {
                    "constant": 2,
                    "constant5": 1,
                    "constant_value": 1,
                    "divisor": 1,
                    "flag": 1,
                    "multiplier": 2,
                    "pclk2_freq": 1,
                    "prescaler": 15,
                    "prescaler_value": 1,
                    "prescaling_factor": 1,
                    "preset_value": 3,
                    "some_variable": 1,
                    "value_1": 1
                },
                "param_1": {
                    "clock_selection": 1,
                    "clock_source": 3,
                    "clock_type": 10,
                    "input": 2,
                    "input_param": 1,
                    "input_parameter": 1,
                    "input_value": 1,
                    "mode": 8,
                    "option": 2,
                    "param": 1,
                    "timer_type": 1
                },
                "uStack_14": {
                    "constant": 7,
                    "constant1": 2,
                    "constant2": 2,
                    "constant3": 1,
                    "constant4": 1,
                    "constant_1": 2,
                    "constant_value": 1,
                    "constant_value2": 1,
                    "constant_value_1": 1,
                    "data4": 1,
                    "default_divisor": 1,
                    "default_frequency": 1,
                    "default_prescaler": 1,
                    "mask": 1,
                    "offset": 1,
                    "power_control_reg": 1,
                    "result": 1,
                    "temp2": 1,
                    "temp_var": 1,
                    "temp_variable3": 1,
                    "temporary": 1,
                    "value_5": 1
                },
                "uStack_18": {
                    "ahb_divider": 1,
                    "clock_source": 1,
                    "constant": 4,
                    "constant1": 2,
                    "constant2": 4,
                    "constant_2": 2,
                    "constant_value": 1,
                    "constant_value1": 1,
                    "constant_value_2": 1,
                    "data3": 1,
                    "default_divisor": 1,
                    "default_frequency": 1,
                    "dividend": 1,
                    "divider": 3,
                    "divisor": 1,
                    "factor": 1,
                    "offset": 1,
                    "prescaler": 1,
                    "temp1": 1,
                    "temp_variable2": 1,
                    "value_4": 1
                },
                "uStack_1c": {
                    "apb1_divider": 1,
                    "bit_mask": 1,
                    "constant": 3,
                    "constant1": 1,
                    "constant3": 3,
                    "constant_3": 2,
                    "constant_value": 1,
                    "constant_value_3": 1,
                    "data2": 1,
                    "default_multiplier": 1,
                    "divider": 6,
                    "multiplier": 1,
                    "prescaler_divisor": 1,
                    "shift_factor": 1,
                    "temp_variable": 1,
                    "value_3": 1
                },
                "uStack_20": {
                    "apb2_divider": 1,
                    "bit_value": 1,
                    "constant": 2,
                    "constant4": 2,
                    "constant_4": 2,
                    "constant_value_4": 1,
                    "data1": 1,
                    "default_multiplier2": 1,
                    "divider": 2,
                    "divisor": 1,
                    "mul_factor": 1,
                    "multiplier": 10,
                    "prescaler_mask": 1,
                    "prescaler_multiplier": 1,
                    "prescaler_value": 1,
                    "shift_count": 1,
                    "temp_value": 1,
                    "value_2": 1
                },
                "uVar1": {
                    "clock_freq": 1,
                    "clock_frequency": 9,
                    "frequency": 20,
                    "pclk2_freq": 1
                }
            },
            "called": [
                "FUN_08003c70"
            ],
            "calling": [
                "FUN_08001cd0",
                "FUN_08002384"
            ],
            "code": "\n\n\nuint calculate_clock_frequency_08003da4(int clock_type)\n\n{\n  uint frequency;\n  undefined2 prescaler;\n  undefined4 multiplier;\n  undefined4 divider;\n  undefined4 constant2;\n  undefined4 constant;\n  \n  constant = 0x10100f0e;\n  constant2 = 0xd0c0b0a;\n  divider = 0x9080706;\n  multiplier = 0x5040302;\n  prescaler = 0x201;\n  if (clock_type == 2) {\n    frequency = get_pclk2_frequency();\n    frequency = frequency / ((((_DAT_40021004 << 0x10) >> 0x1e) + 1) * 2);\n  }\n  else if (clock_type == 0x10) {\n    if ((_DAT_40021000 & 0x1000000) == 0) {\n      frequency = 0;\n    }\n    else {\n      if ((_DAT_40021004 & 0x10000) == 0) {\n        frequency = 4000000;\n      }\n      else {\n        frequency = 8000000 / *(byte *)((int)&prescaler - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n      }\n      frequency = frequency * *(byte *)((int)&multiplier + ((_DAT_40021004 << 10) >> 0x1c));\n      if ((_DAT_40021004 & 0x400000) == 0) {\n        frequency = (frequency * 2) / 3;\n      }\n    }\n  }\n  else if (clock_type == 1) {\n    if ((_DAT_40021020 & 0x302) == 0x102) {\n      frequency = 0x8000;\n    }\n    else if (((_DAT_40021020 & 0x300) == 0x200) && ((_DAT_40021024 & 2) != 0)) {\n      frequency = 32000;\n    }\n    else if ((_DAT_40021020 & 0x300) == 0x300) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        frequency = 0;\n      }\n      else {\n        frequency = 0xf424;\n      }\n    }\n    else {\n      frequency = 0;\n    }\n  }\n  else {\n    frequency = 0;\n  }\n  return frequency;\n}\n\n",
            "current_name": "calculate_clock_frequency_08003da4",
            "entrypoint": "0x08003da4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003da4": "calculate_clock_frequency_08003da4",
                "HAL_RCC_GetPCLK2Freq": "get_pclk2_frequency",
                "local_24": "prescaler",
                "param_1": "clock_type",
                "uStack_14": "constant",
                "uStack_18": "constant2",
                "uStack_1c": "divider",
                "uStack_20": "multiplier",
                "uVar1": "frequency"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003ea0": {
            "additional_data": {
                "2": {
                    "alarm_flag": 1
                },
                "DAT_40010414": {
                    "gpio_register": 1,
                    "io_control_register": 1,
                    "register_address": 1,
                    "register_value": 2,
                    "rtc_cr_register": 1,
                    "some_data": 1
                },
                "FUN_08003ea0": {
                    "check_and_handle_alarm_event": 1,
                    "check_and_set_alarm_flag": 2,
                    "handle_alarm_event": 8,
                    "initialize_rtc": 1,
                    "perform_alarm_event": 1,
                    "process_alarm_event": 1,
                    "set_alarm": 2,
                    "set_alarm_and_disable_flag": 1,
                    "set_alarm_and_enable_callback": 1,
                    "set_alarm_and_enable_interrupt": 1,
                    "set_alarm_and_flag": 2,
                    "set_alarm_callback": 1,
                    "update_alarm": 1,
                    "update_alarm_callback": 1,
                    "update_alarm_settings": 1,
                    "update_alarm_status": 2,
                    "update_rtc_alarm": 3,
                    "update_rtc_alarm_a_event": 1
                },
                "FUN_08004d18": {
                    "initialize_rtc": 1
                },
                "HAL_RTC_AlarmAEventCallback": {
                    "execute_alarm_callback": 1,
                    "handle_alarm_a_event": 5,
                    "handle_alarm_callback": 3,
                    "handle_alarm_event": 14,
                    "handle_rtc_alarm_event": 2,
                    "trigger_alarm_callback": 1,
                    "trigger_alarm_event": 1
                },
                "PTR_08004d18": {
                    "rtc_alarm_a_event_callback": 1
                },
                "_DAT_40010414": {
                    "alarm_register": 1,
                    "buffer_address": 1,
                    "data_register": 1,
                    "device_register": 2,
                    "flag_address": 1,
                    "memory_address": 3,
                    "register_address": 2,
                    "register_value": 3,
                    "some_constant_variable": 1,
                    "some_val": 1,
                    "timer_control_register": 1
                },
                "param_1": {
                    "alarm_config": 1,
                    "alarm_data": 9,
                    "alarm_flags": 2,
                    "alarm_info": 1,
                    "alarm_param": 1,
                    "alarm_params": 4,
                    "alarm_pointer": 2,
                    "alarm_settings": 2,
                    "alarm_status": 2,
                    "data": 1,
                    "input_array": 1,
                    "param": 2,
                    "param_array": 1,
                    "parameters": 1,
                    "rtc_alarm_data": 1
                }
            },
            "called": [
                "FUN_08004d18"
            ],
            "calling": [],
            "code": "\n\n\nvoid check_and_handle_alarm_event_08003ea0(uint **alarm_data)\n\n{\n  if (((**alarm_data & 2) != 0) && (((*alarm_data)[1] & 2) != 0)) {\n    handle_alarm_event();\n    (*alarm_data)[1] = 0xfffffffd;\n  }\n  _DAT_40010414 = 0x20000;\n  *(undefined *)((int)alarm_data + 0x11) = 1;\n  return;\n}\n\n",
            "current_name": "check_and_handle_alarm_event_08003ea0",
            "entrypoint": "0x08003ea0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003ea0": "check_and_handle_alarm_event_08003ea0",
                "HAL_RTC_AlarmAEventCallback": "handle_alarm_event",
                "param_1": "alarm_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003ed8": {
            "additional_data": {
                "FUN_08003ed8": {
                    "deinitialize_pwm": 1,
                    "init_pwm": 1,
                    "initialize_pwm": 14,
                    "initialize_timer": 3,
                    "initialize_timers": 2,
                    "pwm_cleanup": 1,
                    "reset_pwm_timers": 1,
                    "reverse_and_deinit_pwm_timer": 1,
                    "set_pwm_param": 1,
                    "set_pwm_state": 1,
                    "set_timers": 1,
                    "update_pwm_config": 2,
                    "update_pwm_configuration": 1,
                    "update_timers": 1
                },
                "HAL_TIM_PWM_MspDeInit": {
                    "deinit_pwm": 1,
                    "deinitialize_pwm": 13,
                    "deinitialize_pwm_timers": 1,
                    "deinitialize_timer": 1
                },
                "param_1": {
                    "config": 1,
                    "p_param": 2,
                    "p_params": 1,
                    "p_pwm": 2,
                    "parameters": 2,
                    "params_ptr": 1,
                    "pwm": 1,
                    "pwm_array": 1,
                    "pwm_config": 5,
                    "pwm_data": 1,
                    "pwm_param": 1,
                    "pwm_parameters": 2,
                    "pwm_settings": 2,
                    "pwm_timer": 1,
                    "timer_config": 1,
                    "timer_data": 1,
                    "timer_params": 1,
                    "timer_pointer": 1,
                    "timer_ptr": 1,
                    "timers": 3
                },
                "puVar1": {
                    "config_pointer": 1,
                    "config_ptr": 2,
                    "current_pwm_settings": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "p_pwm_data": 1,
                    "p_value": 2,
                    "p_var1": 2,
                    "param_value": 1,
                    "pointer": 1,
                    "pwm_array": 1,
                    "pwm_data": 6,
                    "pwm_ptr": 2,
                    "pwm_timer_values": 1,
                    "timer": 3,
                    "timer_ptr": 2,
                    "timer_registers": 1,
                    "timer_value": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_08004b34"
            ],
            "calling": [
                "FUN_08004b3c"
            ],
            "code": "\nvoid initialize_pwm_08003ed8(uint **pwm_config)\n\n{\n  uint *pwm_data;\n  \n  *(undefined *)((int)pwm_config + 0x3d) = 2;\n  pwm_data = *pwm_config;\n  if ((pwm_data[8] & 0x1111) == 0) {\n    if ((pwm_data[8] & 0x444) == 0) {\n      *pwm_data = *pwm_data & 0xfffffffe;\n    }\n  }\n  deinitialize_pwm_08003ed8(pwm_config);\n  *(undefined *)((int)pwm_config + 0x3d) = 0;\n  *(undefined *)(pwm_config + 0xf) = 0;\n  return;\n}\n\n",
            "current_name": "initialize_pwm_08003ed8",
            "entrypoint": "0x08003ed8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003ed8": "initialize_pwm_08003ed8",
                "HAL_TIM_PWM_MspDeInit": "deinitialize_pwm",
                "param_1": "pwm_config",
                "puVar1": "pwm_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003f12": {
            "called": [],
            "calling": [
                "FUN_08003f18"
            ],
            "code": "\nvoid FUNC_08003f12(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08003f12",
            "entrypoint": "0x08003f12",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08003f12": "FUNC_08003f12"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08003f14": {
            "called": [],
            "calling": [
                "FUN_08003f18"
            ],
            "code": "\nvoid FUNC_08003f14(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08003f14",
            "entrypoint": "0x08003f14",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08003f14": "FUNC_08003f14"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08003f16": {
            "called": [],
            "calling": [
                "FUN_08003f18"
            ],
            "code": "\nvoid FUNC_08003f16(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08003f16",
            "entrypoint": "0x08003f16",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08003f16": "FUNC_08003f16"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08003f18": {
            "additional_data": {
                "0x10": {
                    "flags_offset": 1,
                    "status_reg": 1
                },
                "0x18": {
                    "config_offset": 1,
                    "config_reg": 1
                },
                "0x1c": {
                    "config2_offset": 1,
                    "config_reg2": 1
                },
                "0x20": {
                    "bit_5": 1
                },
                "0x40": {
                    "bit_6": 1
                },
                "0x80": {
                    "bit_7": 1
                },
                "0xc": {
                    "control_reg": 1,
                    "status_offset": 1
                },
                "0xffffff7f": {
                    "flag_value128": 1,
                    "status_break": 1
                },
                "0xffffffbf": {
                    "flag_value64": 1,
                    "status_trigger": 1
                },
                "0xffffffdf": {
                    "flag_value32": 1,
                    "status_commutation": 1
                },
                "0xffffffef": {
                    "flag_value8": 1,
                    "status_ic_capture": 1
                },
                "0xfffffff7": {
                    "flag_value4": 1,
                    "status_oc_delay_elapsed2": 1
                },
                "0xfffffffb": {
                    "flag_value2": 1,
                    "status_oc_delay_elapsed": 1
                },
                "0xfffffffd": {
                    "flag_value1": 1,
                    "status_delay_elapsed": 1
                },
                "0xfffffffe": {
                    "flag_value16": 1,
                    "status_period_elapsed": 1
                },
                "7": {
                    "callback_flag_offset": 1
                },
                "FUNC_08003f12": {
                    "execute_callback": 1,
                    "hal_tim_ic_capture_callback": 2
                },
                "FUNC_08003f14": {
                    "execute_callback": 1,
                    "hal_tim_pwm_pulse_finished_callback": 2
                },
                "FUNC_08003f16": {
                    "execute_callback": 1,
                    "hal_tim_oc_delay_elapsed_callback": 2
                },
                "FUNC_08004178": {
                    "execute_callback": 1,
                    "hal_tim_ex_commutation_callback": 2,
                    "handle_commutation": 1
                },
                "FUNC_0800417a": {
                    "execute_callback": 1,
                    "hal_tim_ex_break_callback": 2,
                    "handle_break": 1
                },
                "FUN_08003f12": {
                    "handle_input_capture": 1
                },
                "FUN_08003f14": {
                    "handle_output_compare": 1
                },
                "FUN_08003f16": {
                    "handle_counter_overflow": 1
                },
                "FUN_08003f18": {
                    "handle_interrupt": 1,
                    "handle_tim_callback": 2,
                    "handle_tim_callbacks": 2,
                    "handle_timer_interrupt": 1,
                    "handle_timers": 12,
                    "process_callbacks": 5,
                    "process_tim_interrupts": 1,
                    "process_timer_callbacks": 1,
                    "process_timers": 2,
                    "tim_callback": 1,
                    "update_timer_callbacks": 1
                },
                "FUN_08004df8": {
                    "execute_callback": 1,
                    "hal_tim_trigger_callback": 2,
                    "handle_trigger": 1
                },
                "FUN_08004e12": {
                    "execute_callback": 1,
                    "hal_tim_period_elapsed_callback": 2,
                    "handle_period_elapsed": 1
                },
                "HAL_TIMEx_BreakCallback": {
                    "handle_break": 6,
                    "handle_break_callback": 7,
                    "handle_ex_break_callback": 3,
                    "handle_tim_ex_break_callback": 1
                },
                "HAL_TIMEx_CommutationCallback": {
                    "handle_commutation": 6,
                    "handle_commutation_callback": 7,
                    "handle_ex_commutation_callback": 3,
                    "handle_tim_ex_commutation_callback": 1
                },
                "HAL_TIM_IC_CaptureCallback": {
                    "handle_capture": 3,
                    "handle_capture_callback": 3,
                    "handle_ic_capture": 3,
                    "handle_ic_capture_callback": 7,
                    "handle_tim_ic_capture_callback": 1
                },
                "HAL_TIM_OC_DelayElapsedCallback": {
                    "handle_delay_elapsed": 3,
                    "handle_delay_elapsed_callback": 3,
                    "handle_oc_delay_elapsed": 3,
                    "handle_oc_delay_elapsed_callback": 7,
                    "handle_tim_oc_delay_elapsed_callback": 1
                },
                "HAL_TIM_PWM_PulseFinishedCallback": {
                    "handle_pulse_finished": 3,
                    "handle_pulse_finished_callback": 3,
                    "handle_pwm_pulse_finished": 3,
                    "handle_pwm_pulse_finished_callback": 7,
                    "handle_tim_pwm_pulse_finished_callback": 1
                },
                "HAL_TIM_PeriodElapsedCallback": {
                    "handle_period_elapsed": 6,
                    "handle_period_elapsed_callback": 10,
                    "handle_tim_period_elapsed_callback": 1
                },
                "HAL_TIM_TriggerCallback": {
                    "handle_tim_trigger_callback": 1,
                    "handle_trigger": 6,
                    "handle_trigger_callback": 10
                },
                "iVar1": {
                    "callback_ptr": 1,
                    "callback_value": 2,
                    "current_callback_data": 1,
                    "current_item": 1,
                    "current_tim_value": 1,
                    "current_timer": 2,
                    "temp_var": 1,
                    "temp_var1": 1,
                    "timer": 2,
                    "timer_address": 1,
                    "timer_value": 14,
                    "value": 3,
                    "variable_1": 1
                },
                "param_1": {
                    "callback_data": 5,
                    "callback_param": 1,
                    "input_array": 1,
                    "param": 1,
                    "parameter_1": 1,
                    "tim_handle": 3,
                    "tim_interrupt_data": 1,
                    "timer": 1,
                    "timer_array": 2,
                    "timer_callbacks": 1,
                    "timer_data": 5,
                    "timer_list": 1,
                    "timer_params": 4,
                    "timer_ptr": 1,
                    "timer_struct": 1,
                    "timers": 1
                }
            },
            "called": [
                "FUN_08003f16",
                "FUN_08003f14",
                "FUN_08003f12",
                "FUN_08004e12",
                "FUN_0800417a",
                "FUN_08004df8",
                "FUN_08004178"
            ],
            "calling": [
                "FUN_08004e20"
            ],
            "code": "\nvoid handle_timers_08003f18(int *callback_data)\n\n{\n  int timer_value;\n  \n  timer_value = *callback_data;\n  if (((*(uint *)(timer_value + 0x10) & 2) != 0) && ((*(uint *)(timer_value + 0xc) & 2) != 0)) {\n    *(undefined4 *)(timer_value + 0x10) = 0xfffffffd;\n    *(undefined *)(callback_data + 7) = 1;\n    if ((*(uint *)(*callback_data + 0x18) & 3) == 0) {\n      handle_oc_delay_elapsed_callback();\n      handle_pwm_pulse_finished_callback(callback_data);\n    }\n    else {\n      handle_ic_capture_callback();\n    }\n    *(undefined *)(callback_data + 7) = 0;\n  }\n  timer_value = *callback_data;\n  if (((*(uint *)(timer_value + 0x10) & 4) != 0) && ((*(uint *)(timer_value + 0xc) & 4) != 0)) {\n    *(undefined4 *)(timer_value + 0x10) = 0xfffffffb;\n    *(undefined *)(callback_data + 7) = 2;\n    if ((*(uint *)(*callback_data + 0x18) & 0x300) == 0) {\n      handle_oc_delay_elapsed_callback(callback_data);\n      handle_pwm_pulse_finished_callback(callback_data);\n    }\n    else {\n      handle_ic_capture_callback(callback_data);\n    }\n    *(undefined *)(callback_data + 7) = 0;\n  }\n  timer_value = *callback_data;\n  if (((*(uint *)(timer_value + 0x10) & 8) != 0) && ((*(uint *)(timer_value + 0xc) & 8) != 0)) {\n    *(undefined4 *)(timer_value + 0x10) = 0xfffffff7;\n    *(undefined *)(callback_data + 7) = 4;\n    if ((*(uint *)(*callback_data + 0x1c) & 3) == 0) {\n      handle_oc_delay_elapsed_callback(callback_data);\n      handle_pwm_pulse_finished_callback(callback_data);\n    }\n    else {\n      handle_ic_capture_callback(callback_data);\n    }\n    *(undefined *)(callback_data + 7) = 0;\n  }\n  timer_value = *callback_data;\n  if (((*(uint *)(timer_value + 0x10) & 0x10) != 0) && ((*(uint *)(timer_value + 0xc) & 0x10) != 0)) {\n    *(undefined4 *)(timer_value + 0x10) = 0xffffffef;\n    *(undefined *)(callback_data + 7) = 8;\n    if ((*(uint *)(*callback_data + 0x1c) & 0x300) == 0) {\n      handle_oc_delay_elapsed_callback(callback_data);\n      handle_pwm_pulse_finished_callback(callback_data);\n    }\n    else {\n      handle_ic_capture_callback(callback_data);\n    }\n    *(undefined *)(callback_data + 7) = 0;\n  }\n  timer_value = *callback_data;\n  if (((*(uint *)(timer_value + 0x10) & 1) != 0) && ((*(uint *)(timer_value + 0xc) & 1) != 0)) {\n    *(undefined4 *)(timer_value + 0x10) = 0xfffffffe;\n    handle_period_elapsed_callback(callback_data);\n  }\n  timer_value = *callback_data;\n  if (((*(uint *)(timer_value + 0x10) & 0x80) != 0) && ((*(uint *)(timer_value + 0xc) & 0x80) != 0)) {\n    *(undefined4 *)(timer_value + 0x10) = 0xffffff7f;\n    handle_break_callback(callback_data);\n  }\n  timer_value = *callback_data;\n  if (((*(uint *)(timer_value + 0x10) & 0x40) != 0) && ((*(uint *)(timer_value + 0xc) & 0x40) != 0)) {\n    *(undefined4 *)(timer_value + 0x10) = 0xffffffbf;\n    handle_trigger_callback(callback_data);\n  }\n  timer_value = *callback_data;\n  if (((*(uint *)(timer_value + 0x10) & 0x20) != 0) && ((*(uint *)(timer_value + 0xc) & 0x20) != 0)) {\n    *(undefined4 *)(timer_value + 0x10) = 0xffffffdf;\n    handle_commutation_callback(callback_data);\n  }\n  return;\n}\n\n",
            "current_name": "handle_timers_08003f18",
            "entrypoint": "0x08003f18",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003f18": "handle_timers_08003f18",
                "HAL_TIMEx_BreakCallback": "handle_break_callback",
                "HAL_TIMEx_CommutationCallback": "handle_commutation_callback",
                "HAL_TIM_IC_CaptureCallback": "handle_ic_capture_callback",
                "HAL_TIM_OC_DelayElapsedCallback": "handle_oc_delay_elapsed_callback",
                "HAL_TIM_PWM_PulseFinishedCallback": "handle_pwm_pulse_finished_callback",
                "HAL_TIM_PeriodElapsedCallback": "handle_period_elapsed_callback",
                "HAL_TIM_TriggerCallback": "handle_trigger_callback",
                "iVar1": "timer_value",
                "param_1": "callback_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004092": {
            "additional_data": {
                "FUN_08004092": {
                    "set_bit_value": 2,
                    "update_bit": 5,
                    "update_bit_in_value": 3,
                    "update_bit_value": 8,
                    "update_bitfield": 2,
                    "update_bits": 4,
                    "update_bitwise_value": 5,
                    "update_data": 1,
                    "update_param_bit": 1
                },
                "param_1": {
                    "addr": 1,
                    "address": 1,
                    "base_address": 20,
                    "data": 3,
                    "data_ptr": 1,
                    "param_address": 1,
                    "target_address": 1,
                    "value": 2,
                    "value_address": 1
                },
                "param_2": {
                    "bit_index": 5,
                    "bit_offset": 1,
                    "bit_position": 23,
                    "position": 2
                },
                "param_3": {
                    "bit_value": 11,
                    "new_value": 18,
                    "value": 1,
                    "value_to_update": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080040b0"
            ],
            "code": "\nvoid update_bit_in_value_08004092(int base_address,uint bit_position,int new_value)\n\n{\n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & ~(1 << (bit_position & 0xff));\n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) | new_value << (bit_position & 0xff);\n  return;\n}\n\n",
            "current_name": "update_bit_in_value_08004092",
            "entrypoint": "0x08004092",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004092": "update_bit_in_value_08004092",
                "param_1": "base_address",
                "param_2": "bit_position",
                "param_3": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080040b0": {
            "additional_data": {
                "DAT_08004163": {
                    "flag": 1
                },
                "DAT_0800416d": {
                    "constant": 1
                },
                "FUN_08004092": {
                    "configure_tim_subfunction": 1,
                    "handle_timer": 1,
                    "perform_channel_cmd": 1
                },
                "FUN_080040b0": {
                    "configure_and_disable_timer_capture": 1,
                    "configure_channel": 1,
                    "configure_tim_c_cx": 1,
                    "configure_tim_c_cx_channel": 6,
                    "configure_tim_ccx_channel": 1,
                    "configure_tim_channel": 2,
                    "configure_timer": 1,
                    "configure_timer_channel": 4,
                    "configure_timers": 1,
                    "control_timer_channel": 1,
                    "initialize_pwm": 1,
                    "initialize_tim_c_cx_channel": 1,
                    "initialize_tim_c_cx_channel_cmd": 1,
                    "initialize_tim_channel": 2,
                    "initialize_timer": 2,
                    "initialize_timer_channel": 2,
                    "initialize_timers": 2,
                    "update_timer_channel": 1
                },
                "PTR_FUN_08004092": {
                    "configure_timer": 1
                },
                "TIM_CCxChannelCmd": {
                    "configure_channel_command": 1,
                    "enable_disable_channel": 1
                },
                "param_1": {
                    "channel_data": 1,
                    "channel_number": 1,
                    "channel_ptr": 3,
                    "channel_settings": 1,
                    "config": 2,
                    "config_ptr": 3,
                    "configurations": 1,
                    "p_timer": 1,
                    "param1": 1,
                    "timer": 5,
                    "timer_channel": 3,
                    "timer_channel_array": 1,
                    "timer_channel_config": 1,
                    "timer_channel_pointer": 1,
                    "timer_channel_ptr": 1,
                    "timer_config": 4,
                    "timer_param1": 1
                },
                "param_2": {
                    "channel": 8,
                    "channel_cmd": 1,
                    "channel_command": 3,
                    "channel_config": 1,
                    "channel_config_value": 1,
                    "channel_index": 1,
                    "channel_number": 5,
                    "channel_param": 1,
                    "channel_value": 2,
                    "command": 1,
                    "config_value": 2,
                    "param2": 1,
                    "param_value": 2,
                    "timer_config": 1,
                    "timer_param2": 1
                },
                "param_3": {
                    "dummy_param": 1,
                    "flag_value": 1,
                    "param3": 1,
                    "param_3": 1,
                    "timer_param3": 1,
                    "unused_param": 1,
                    "unused_parameter": 1
                },
                "puVar1": {
                    "channel_address": 1,
                    "channel_config": 1,
                    "channel_data": 1,
                    "channel_info": 2,
                    "channel_memory": 1,
                    "channel_pointer": 1,
                    "channel_ptr": 2,
                    "channel_value": 1,
                    "config": 1,
                    "config_ptr": 3,
                    "current_config": 1,
                    "current_timer_channel": 1,
                    "p_timer_value": 1,
                    "register_ptr": 1,
                    "timer": 2,
                    "timer_address": 1,
                    "timer_channel": 1,
                    "timer_channel_ptr": 1,
                    "timer_channel_ptr_value": 1,
                    "timer_pointer": 1,
                    "timer_ptr": 5,
                    "timer_register": 1
                },
                "uRam40012c00": {
                    "address_constant1": 1,
                    "base_address": 1,
                    "constant_1": 1,
                    "gpio_base_address": 1,
                    "register_a": 1,
                    "register_addr": 1,
                    "tim_base_address": 1,
                    "timer_address": 3,
                    "timer_base_address": 3,
                    "timer_channel_address": 1,
                    "timer_reg1": 1,
                    "usart1_cr1": 1
                },
                "uRam40012c20": {
                    "address_constant2": 1,
                    "constant_2": 1,
                    "flag_1": 1,
                    "gpio_status_register": 1,
                    "register_b": 1,
                    "register_value": 1,
                    "status_register": 1,
                    "tim_channel_1_status": 1,
                    "timer_channel_status": 1,
                    "timer_config_value": 1,
                    "timer_configuration": 1,
                    "timer_reg2": 1,
                    "timer_status": 5,
                    "timer_status_register": 1,
                    "usart1_isr": 1
                },
                "uRam40012c44": {
                    "address_constant3": 1,
                    "constant_3": 1,
                    "flag_2": 1,
                    "gpio_reset_bit": 1,
                    "modified_value": 1,
                    "other_register": 1,
                    "register_c": 1,
                    "tim_channel_1_mask": 1,
                    "timer_channel_mask": 1,
                    "timer_config": 1,
                    "timer_control": 4,
                    "timer_control_register": 1,
                    "timer_flag": 1,
                    "timer_flags": 1,
                    "timer_reg3": 1,
                    "usart1_icr": 1
                }
            },
            "called": [
                "FUN_08004092"
            ],
            "calling": [
                "FUN_08004b3c"
            ],
            "code": "\nundefined4 configure_tim_c_cx_channel_080040b0(uint **timer,undefined4 channel)\n\n{\n  uint *timer_ptr;\n  \n  configure_channel_command(*timer,channel,0);\n  if (((*timer == (uint *)0x40012c00) && ((timer_status & 0x1111) == 0)) &&\n     ((timer_status & 0x444) == 0)) {\n    timer_control = timer_control & 0xffff7fff;\n  }\n  timer_ptr = *timer;\n  if (((timer_ptr[8] & 0x1111) == 0) && ((timer_ptr[8] & 0x444) == 0)) {\n    *timer_ptr = *timer_ptr & 0xfffffffe;\n  }\n  *(undefined *)((int)timer + 0x3d) = 1;\n  return 0;\n}\n\n",
            "current_name": "configure_tim_c_cx_channel_080040b0",
            "entrypoint": "0x080040b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080040b0": "configure_tim_c_cx_channel_080040b0",
                "TIM_CCxChannelCmd": "configure_channel_command",
                "param_1": "timer",
                "param_2": "channel",
                "puVar1": "timer_ptr",
                "uRam40012c20": "timer_status",
                "uRam40012c44": "timer_control"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004110": {
            "additional_data": {
                "FUN_08004110": {
                    "apply_bitmask": 1,
                    "update_bit_field": 1,
                    "update_bit_value": 2,
                    "update_bits": 1,
                    "update_bitwise": 1,
                    "update_bitwise_data": 1,
                    "update_bitwise_operations": 1,
                    "update_bitwise_value": 2,
                    "update_config_value": 1,
                    "update_flag": 1,
                    "update_flags": 5,
                    "update_param_value": 1,
                    "update_parameter_value": 2,
                    "update_register": 3,
                    "update_register_bits": 1,
                    "update_register_value": 2,
                    "update_value": 4,
                    "update_value_at_offset": 1
                },
                "param_1": {
                    "base_address": 19,
                    "config_struct": 1,
                    "data": 2,
                    "memory_address": 1,
                    "object_address": 1,
                    "register_address": 6,
                    "source_address": 1
                },
                "param_2": {
                    "bit_index": 1,
                    "bit_offset": 8,
                    "bit_position": 20,
                    "shift_amount": 2
                },
                "param_3": {
                    "bit_value": 6,
                    "data": 1,
                    "new_bit_value": 1,
                    "new_value": 19,
                    "update_value": 1,
                    "value": 2,
                    "value_to_set": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800412c"
            ],
            "code": "\nvoid update_register_value_08004110(int base_address,uint bit_position,int new_value)\n\n{\n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & ~(4 << (bit_position & 0xff));\n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) | new_value << (bit_position & 0xff);\n  return;\n}\n\n",
            "current_name": "update_register_value_08004110",
            "entrypoint": "0x08004110",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004110": "update_register_value_08004110",
                "param_1": "base_address",
                "param_2": "bit_position",
                "param_3": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800412c": {
            "additional_data": {
                "0x1111": {
                    "bit_mask1": 1
                },
                "0x444": {
                    "bit_mask2": 1
                },
                "FUN_08004110": {
                    "": 1,
                    "configure_tim_c_cx_n_channel_cmd": 2,
                    "configure_tim_channel": 1,
                    "configure_timer_channel": 1,
                    "set_tim_c_cx_n_channel": 1,
                    "set_tim_channel_cmd": 1,
                    "set_timer_channel_config": 1
                },
                "FUN_0800412c": {
                    "configure_pwm_channel": 1,
                    "configure_tim_c_cx_n_channel": 6,
                    "configure_tim_cc_channel": 1,
                    "disable_and_clear_timc_cx_n_channel": 1,
                    "disable_channel": 1,
                    "disable_channel_tim_c_cx_n": 1,
                    "disable_tim_c_cx_n_channel": 3,
                    "disable_tim_channel": 3,
                    "disable_tim_channel_interrupts": 1,
                    "disable_tim_event": 1,
                    "disable_timer_channel": 3,
                    "disable_timers": 1,
                    "disable_timers_and_clear_flags": 1,
                    "disable_unused_timers": 1,
                    "improve_tim_c_cx_n_channel_cmd": 1,
                    "initialize_channel": 1,
                    "initialize_pwm_channel": 1,
                    "toggle_pwm_channel": 1,
                    "toggle_timer_channel_command": 1
                },
                "PUVar1Org": {
                    "timer_data_original": 1
                },
                "TIM_CCxNChannelCmd": {
                    "disable_c_cx_n_channel": 1,
                    "set_channel_cmd": 1
                },
                "param_1": {
                    "channel": 3,
                    "channel_config": 2,
                    "channel_params": 1,
                    "channel_pointer": 3,
                    "channel_ptr": 2,
                    "config": 1,
                    "config_ptr": 1,
                    "p_pwm_channel": 1,
                    "param1": 1,
                    "param_1": 1,
                    "parameter_list": 1,
                    "tim_channel": 1,
                    "timer": 3,
                    "timer_array": 2,
                    "timer_config": 4,
                    "timer_data": 1,
                    "timer_index": 1,
                    "timer_parameters": 1,
                    "timer_settings": 1
                },
                "param_2": {
                    "ccx_config": 1,
                    "channel": 8,
                    "channel_cfg": 1,
                    "channel_config": 1,
                    "channel_id": 1,
                    "channel_number": 8,
                    "channel_val": 1,
                    "config_value": 1,
                    "input_parameter": 1,
                    "param": 1,
                    "param2": 1,
                    "param_2": 1,
                    "param_value": 2,
                    "tim_cmd": 1,
                    "value": 2
                },
                "param_3": {
                    "configuration": 1,
                    "flag": 1,
                    "param3": 1,
                    "param_3": 2
                },
                "ptr_1": {
                    "config_ptr": 1
                },
                "ptr_11": {
                    "config_ptr": 1
                },
                "ptr_8": {
                    "config_ptr": 1
                },
                "puVar1": {
                    "channel": 1,
                    "channel_data": 6,
                    "channel_ptr": 3,
                    "channel_value": 1,
                    "config_check": 1,
                    "config_ptr": 3,
                    "current_param": 1,
                    "p_channel_data": 1,
                    "temp_variable": 1,
                    "timer_config": 2,
                    "timer_data": 6,
                    "timer_data_ptr": 1,
                    "timer_ptr": 2,
                    "timer_settings_ptr": 1,
                    "timer_value": 1
                }
            },
            "called": [
                "FUN_08004110"
            ],
            "calling": [
                "FUN_08004b3c"
            ],
            "code": "\nundefined4 disable_channel_tim_c_cx_n_0800412c(uint **timer_config,undefined4 channel)\n\n{\n  uint *channel_data;\n  \n  disable_c_cx_n_channel(*timer_config,channel,0);\n  channel_data = *timer_config;\n  if (((channel_data[8] & 0x1111) == 0) && ((channel_data[8] & 0x444) == 0)) {\n    channel_data[0x11] = channel_data[0x11] & 0xffff7fff;\n  }\n  channel_data = *timer_config;\n  if (((channel_data[8] & 0x1111) == 0) && ((channel_data[8] & 0x444) == 0)) {\n    *channel_data = *channel_data & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "current_name": "disable_channel_tim_c_cx_n_0800412c",
            "entrypoint": "0x0800412c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800412c": "disable_channel_tim_c_cx_n_0800412c",
                "TIM_CCxNChannelCmd": "disable_c_cx_n_channel",
                "param_1": "timer_config",
                "param_2": "channel",
                "puVar1": "channel_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004178": {
            "called": [],
            "calling": [
                "FUN_08003f18"
            ],
            "code": "\nvoid FUNC_08004178(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08004178",
            "entrypoint": "0x08004178",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08004178": "FUNC_08004178"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800417a": {
            "called": [],
            "calling": [
                "FUN_08003f18"
            ],
            "code": "\nvoid FUNC_0800417a(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800417a",
            "entrypoint": "0x0800417a",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800417a": "FUNC_0800417a"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800417c": {
            "additional_data": {
                "0x14": {
                    "additional_offset": 1,
                    "bit_mask2": 1,
                    "flag2_offset": 2,
                    "flag_offset": 1,
                    "mask2_offset": 1,
                    "value2": 1,
                    "value2_offset": 1,
                    "value_to_clear_bits_and_set_flag": 1
                },
                "0x20": {
                    "value_to_set": 1
                },
                "0x3a": {
                    "byte_value": 1,
                    "char_offset": 1,
                    "new_value_offset": 1,
                    "offset_for_unspecified": 1,
                    "status_offset": 1
                },
                "0xc": {
                    "bit_mask1": 1,
                    "flag1_offset": 2,
                    "flags_offset": 1,
                    "mask1_offset": 1,
                    "mask_offset": 1,
                    "value1": 1,
                    "value1_offset": 1,
                    "value_to_clear_bits": 1
                },
                "0xfffffedf": {
                    "mask1": 1,
                    "mask_for_clearing_bits": 1,
                    "mask_value": 1
                },
                "0xfffffffe": {
                    "flag_value": 1,
                    "mask2": 1,
                    "mask_for_clearing_bits_and_setting_flag": 1
                },
                "FUN_0800417c": {
                    "clear_bits": 1,
                    "clear_bits_and_set_flag": 1,
                    "clear_bits_and_set_space": 2,
                    "clear_bits_and_set_space_character": 1,
                    "clear_flags": 7,
                    "clear_flags_and_set_space": 3,
                    "set_bitwise_operations": 1,
                    "set_flags_and_value": 2,
                    "update_data": 2,
                    "update_flags": 1,
                    "update_flags_and_value": 2,
                    "update_flags_and_values": 3,
                    "update_memory_values": 4,
                    "update_values": 1
                },
                "int": {
                    "integer": 2
                },
                "param_1": {
                    "array_ptr": 3,
                    "data": 1,
                    "data_pointer": 4,
                    "data_ptr": 1,
                    "flag_pointer": 1,
                    "flags": 4,
                    "flags_pointer": 1,
                    "input_array": 3,
                    "input_list": 1,
                    "input_params": 1,
                    "input_pointer": 1,
                    "input_ptr": 1,
                    "memory_address": 2,
                    "memory_block": 1,
                    "memory_pointer": 1,
                    "p_data": 1,
                    "pointer": 1,
                    "ptr": 2
                },
                "uint": {
                    "unsigned_int": 2
                },
                "undefined": {
                    "byte": 1,
                    "unspecified": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080046b8"
            ],
            "code": "\nvoid clear_flags_and_set_space_0800417c(integer *data_pointer)\n\n{\n  *(unsigned_int *)(*data_pointer + 0xc) = *(unsigned_int *)(*data_pointer + 0xc) & 0xfffffedf;\n  *(unsigned_int *)(*data_pointer + 0x14) = *(unsigned_int *)(*data_pointer + 0x14) & 0xfffffffe;\n  *(byte *)((integer)data_pointer + 0x3a) = 0x20;\n  return;\n}\n\n",
            "current_name": "clear_flags_and_set_space_0800417c",
            "entrypoint": "0x0800417c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800417c": "clear_flags_and_set_space_0800417c",
                "int": "integer",
                "param_1": "data_pointer",
                "uint": "unsigned_int",
                "undefined": "byte"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004198": {
            "additional_data": {
                "FUN_08004198": {
                    "check_exclamation": 1,
                    "decode_and_update": 1,
                    "decode_and_update_value": 2,
                    "decode_binary_data": 1,
                    "decode_data": 2,
                    "extract_data_from_binary": 1,
                    "parse_and_update": 1,
                    "parse_data": 4,
                    "parse_header": 1,
                    "parse_input": 1,
                    "parse_parameter": 1,
                    "process_binary_data": 4,
                    "process_data": 10,
                    "process_param": 1
                },
                "param_1": {
                    "binary_data": 2,
                    "data": 15,
                    "data_array": 1,
                    "data_buffer": 1,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "header": 1,
                    "input": 1,
                    "input_data": 5,
                    "param_array": 1,
                    "parameter": 1
                },
                "pbVar2": {
                    "byte_buffer": 1,
                    "byte_pointer": 11,
                    "byte_ptr": 15,
                    "bytes_ptr": 1,
                    "current_byte": 1,
                    "ptr_byte": 1
                },
                "sVar1": {
                    "count": 11,
                    "counter": 6,
                    "loop_counter": 1,
                    "remaining_count": 1,
                    "remaining_items": 1,
                    "remaining_iterations": 9,
                    "short_var": 1,
                    "updated_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080046b8"
            ],
            "code": "\nundefined4 process_binary_data_08004198(int *data)\n\n{\n  short count;\n  byte *byte_ptr;\n  \n  if (*(char *)((int)data + 0x39) != '!') {\n    return 2;\n  }\n  if (data[2] == 0x1000) {\n    *(uint *)(*data + 4) = *(ushort *)data[8] & 0x1ff;\n    if (data[4] == 0) {\n      data[8] = data[8] + 2;\n    }\n    else {\n      data[8] = data[8] + 1;\n    }\n  }\n  else {\n    byte_ptr = (byte *)data[8];\n    data[8] = (int)(byte_ptr + 1);\n    *(uint *)(*data + 4) = (uint)*byte_ptr;\n  }\n  count = *(short *)((int)data + 0x26) + -1;\n  *(short *)((int)data + 0x26) = count;\n  if (count == 0) {\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xffffff7f;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x40;\n    return 0;\n  }\n  return 0;\n}\n\n",
            "current_name": "process_binary_data_08004198",
            "entrypoint": "0x08004198",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004198": "process_binary_data_08004198",
                "param_1": "data",
                "pbVar2": "byte_ptr",
                "sVar1": "count"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004204": {
            "additional_data": {
                "FUN_08003c50": {
                    "function1": 1,
                    "function_a": 1
                },
                "FUN_08003c70": {
                    "function2": 1,
                    "function_b": 1
                },
                "FUN_08004204": {
                    "calculate_and_store_clock_frequency": 1,
                    "calculate_clock_config": 3,
                    "calculate_clock_configuration": 1,
                    "calculate_clock_correction": 1,
                    "calculate_clock_frequency": 6,
                    "calculate_clock_value": 1,
                    "calculate_clock_values": 1,
                    "calculate_config_value": 1,
                    "calculate_pcl_kx": 1,
                    "calculate_pclk": 1,
                    "calculate_pclk_value": 1,
                    "configure_clock": 1,
                    "configure_clocks": 1,
                    "set_clock_config": 2,
                    "set_clock_configuration": 1,
                    "update_clock_config": 1,
                    "update_clock_configuration": 2,
                    "update_clock_frequencies": 1,
                    "update_clock_frequency": 2,
                    "update_clock_settings": 1,
                    "update_parameters": 1
                },
                "HAL_RCC_GetPCLK1Freq": {
                    "get_pclk1_freq": 2,
                    "get_pclk1_frequency": 10
                },
                "HAL_RCC_GetPCLK2Freq": {
                    "get_pclk2_freq": 2,
                    "get_pclk2_frequency": 10
                },
                "iRam40013808": {
                    "clock_correction": 1,
                    "clock_frequency": 3,
                    "clock_result": 1,
                    "config_value": 1,
                    "new_i_ram40013808": 1,
                    "pclk2": 1,
                    "pclk2_config": 2,
                    "pclk2_div": 1,
                    "pclk2_freq": 1,
                    "pclk2_freq_update_value": 1,
                    "pclk2_result": 1,
                    "result": 1,
                    "updated_clock": 1,
                    "updated_clock_value": 1,
                    "updated_value": 1
                },
                "iVar1": {
                    "pclk1": 5,
                    "pclk1_1": 1,
                    "pclk1_freq": 17,
                    "pclk1_freq1": 5,
                    "pclk1_freq_1": 1,
                    "pclk1_frequency": 1,
                    "pclk_value1": 1
                },
                "iVar10": {
                    "base_addr": 1,
                    "base_address": 3,
                    "clock_base": 1,
                    "clock_base_address": 1,
                    "clock_config_value": 1,
                    "clock_value": 1,
                    "config_addr": 1,
                    "current_clock": 2,
                    "current_clock_config": 1,
                    "current_clock_setting": 1,
                    "current_pclk1": 1,
                    "device_address": 1,
                    "input_address": 1,
                    "param_val5": 1,
                    "pclk1_freq10": 1,
                    "pclk2_5": 1,
                    "pclk2_freq3": 1,
                    "pclk2_freq5": 1,
                    "rcc_config": 1,
                    "rcc_periph": 1
                },
                "iVar2": {
                    "pclk1": 4,
                    "pclk1_2": 2,
                    "pclk1_freq": 11,
                    "pclk1_freq1": 1,
                    "pclk1_freq2": 10,
                    "pclk1_freq_2": 1,
                    "pclk1_frequency": 1,
                    "pclk_value2": 1
                },
                "iVar3": {
                    "pclk1": 4,
                    "pclk1_3": 2,
                    "pclk1_freq": 11,
                    "pclk1_freq2": 1,
                    "pclk1_freq3": 10,
                    "pclk1_freq_3": 1,
                    "pclk1_frequency": 1,
                    "pclk_value3": 1
                },
                "iVar4": {
                    "pclk1": 4,
                    "pclk1_4": 2,
                    "pclk1_freq": 11,
                    "pclk1_freq3": 1,
                    "pclk1_freq4": 10,
                    "pclk1_freq_4": 1,
                    "pclk1_frequency": 1,
                    "pclk_value4": 1
                },
                "iVar5": {
                    "pclk1": 3,
                    "pclk1_5": 2,
                    "pclk1_freq": 11,
                    "pclk1_freq4": 1,
                    "pclk1_freq5": 10,
                    "pclk1_freq_5": 1,
                    "pclk1_frequency": 1,
                    "pclk2": 1,
                    "pclk_value5": 1
                },
                "iVar6": {
                    "param1": 1,
                    "param1_val": 1,
                    "param1_value1": 1,
                    "param_val1": 1,
                    "pclk1": 1,
                    "pclk1_6": 1,
                    "pclk1_div": 2,
                    "pclk1_div_1": 1,
                    "pclk1_freq5": 1,
                    "pclk1_freq6": 3,
                    "pclk2": 2,
                    "pclk2_freq": 5,
                    "pclk2_freq1": 2,
                    "settings_value": 1
                },
                "iVar7": {
                    "param1": 1,
                    "param1_val2": 1,
                    "param1_value1": 1,
                    "param_val2": 1,
                    "pclk1": 1,
                    "pclk1_7": 1,
                    "pclk1_div": 2,
                    "pclk1_div_2": 1,
                    "pclk1_freq7": 3,
                    "pclk2": 1,
                    "pclk2_2": 1,
                    "pclk2_freq": 2,
                    "pclk2_freq2": 6,
                    "settings_value": 1
                },
                "iVar8": {
                    "param1": 1,
                    "param1_val3": 1,
                    "param1_value1": 1,
                    "param_val3": 1,
                    "pclk1": 1,
                    "pclk1_8": 1,
                    "pclk1_div": 2,
                    "pclk1_div_3": 1,
                    "pclk1_freq8": 3,
                    "pclk2": 1,
                    "pclk2_3": 1,
                    "pclk2_freq": 1,
                    "pclk2_freq1": 1,
                    "pclk2_freq3": 6,
                    "settings_value": 1
                },
                "iVar9": {
                    "param1": 1,
                    "param1_val4": 1,
                    "param1_value1": 1,
                    "param_val4": 1,
                    "pclk1": 1,
                    "pclk1_9": 1,
                    "pclk1_div": 2,
                    "pclk1_div_4": 1,
                    "pclk1_freq9": 3,
                    "pclk2": 1,
                    "pclk2_4": 1,
                    "pclk2_freq": 1,
                    "pclk2_freq2": 1,
                    "pclk2_freq4": 6,
                    "settings_value": 1
                },
                "param_1": {
                    "clock_config": 2,
                    "clock_config_params": 1,
                    "clock_info": 1,
                    "clock_parameters": 1,
                    "clock_params": 5,
                    "config": 2,
                    "config_array": 1,
                    "config_params": 12,
                    "config_ptr": 1,
                    "input": 1,
                    "input_params": 2,
                    "parameters": 1,
                    "settings": 1
                },
                "uVar1": {
                    "temp1": 1
                },
                "uVar2": {
                    "temp2": 1
                },
                "uVar3": {
                    "temp3": 1
                },
                "uVar4": {
                    "temp4": 1
                },
                "uVar5": {
                    "temp5": 1
                }
            },
            "called": [
                "FUN_08003c50",
                "FUN_08003c70"
            ],
            "calling": [
                "FUN_0800441a"
            ],
            "code": "\nvoid calculate_and_store_clock_frequency_08004204(int *config_params)\n\n{\n  int pclk1_freq;\n  int pclk1_freq;\n  int pclk1_freq;\n  int pclk1_freq;\n  int pclk1_freq;\n  int pclk2_freq;\n  int pclk2_freq2;\n  int pclk2_freq3;\n  int pclk2_freq4;\n  int base_address;\n  \n  *(uint *)(*config_params + 0x10) = *(uint *)(*config_params + 0x10) & 0xffffcfff | config_params[3];\n  *(uint *)(*config_params + 0xc) =\n       config_params[2] | config_params[4] | config_params[5] | *(uint *)(*config_params + 0xc) & 0xffffe9f3;\n  *(uint *)(*config_params + 0x14) = *(uint *)(*config_params + 0x14) & 0xfffffcff | config_params[6];\n  base_address = *config_params;\n  if (base_address != 0x40013800) {\n    pclk1_freq = get_pclk1_frequency();\n    pclk2_freq = config_params[1];\n    pclk1_freq = get_pclk1_frequency();\n    pclk2_freq2 = config_params[1];\n    pclk1_freq = get_pclk1_frequency();\n    pclk2_freq3 = config_params[1];\n    pclk1_freq = get_pclk1_frequency();\n    pclk2_freq4 = config_params[1];\n    pclk1_freq = get_pclk1_frequency();\n    *(uint *)(base_address + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(pclk1_freq * 0x19) / (uint)(pclk2_freq4 << 2) +\n                        (int)(((ulonglong)(uint)(pclk1_freq * 0x19) / (ulonglong)(uint)(config_params[1] << 2))\n                             / 100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n         ((((uint)(pclk1_freq * 0x19) / (uint)(pclk2_freq2 << 2) +\n           (int)(((ulonglong)(uint)(pclk1_freq * 0x19) / (ulonglong)(uint)(pclk2_freq3 << 2)) / 100) * -100) *\n           0x10 + 0x32) / 100 & 0xf0) +\n         (int)(((ulonglong)(uint)(pclk1_freq * 0x19) / (ulonglong)(uint)(pclk2_freq << 2)) / 100) * 0x10;\n    return;\n  }\n  base_address = get_pclk2_frequency();\n  pclk1_freq = config_params[1];\n  pclk1_freq = get_pclk2_frequency();\n  pclk2_freq = config_params[1];\n  pclk1_freq = get_pclk2_frequency();\n  pclk2_freq2 = config_params[1];\n  pclk1_freq = get_pclk2_frequency();\n  pclk2_freq3 = config_params[1];\n  pclk1_freq = get_pclk2_frequency();\n  clock_frequency = ((uint)((int)((ulonglong)\n                               (((uint)(pclk1_freq * 0x19) / (uint)(pclk2_freq3 << 2) +\n                                (int)(((ulonglong)(uint)(pclk1_freq * 0x19) /\n                                      (ulonglong)(uint)(config_params[1] << 2)) / 100) * -100) * 0x10 +\n                               0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n                 ((((uint)(pclk1_freq * 0x19) / (uint)(pclk2_freq << 2) +\n                   (int)(((ulonglong)(uint)(pclk1_freq * 0x19) / (ulonglong)(uint)(pclk2_freq2 << 2)) / 100) *\n                   -100) * 0x10 + 0x32) / 100 & 0xf0) +\n                 (int)(((ulonglong)(uint)(base_address * 0x19) / (ulonglong)(uint)(pclk1_freq << 2)) / 100) *\n                 0x10;\n  return;\n}\n\n",
            "current_name": "calculate_and_store_clock_frequency_08004204",
            "entrypoint": "0x08004204",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004204": "calculate_and_store_clock_frequency_08004204",
                "HAL_RCC_GetPCLK1Freq": "get_pclk1_frequency",
                "HAL_RCC_GetPCLK2Freq": "get_pclk2_frequency",
                "iRam40013808": "clock_frequency",
                "iVar1": "pclk1_freq",
                "iVar10": "base_address",
                "iVar2": "pclk1_freq",
                "iVar3": "pclk1_freq",
                "iVar4": "pclk1_freq",
                "iVar5": "pclk1_freq",
                "iVar6": "pclk2_freq",
                "iVar7": "pclk2_freq2",
                "iVar8": "pclk2_freq3",
                "iVar9": "pclk2_freq4",
                "param_1": "config_params"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080043b4": {
            "additional_data": {
                "FUN_080043b4": {
                    "check_and_update_data": 1,
                    "check_and_update_flags": 1,
                    "check_condition_and_update": 1,
                    "check_condition_and_update_array": 1,
                    "check_conditions": 2,
                    "check_conditions_and_modify_data": 1,
                    "check_conditions_and_update": 1,
                    "check_flags_and_timers": 1,
                    "check_param_conditions": 2,
                    "check_param_flags": 1,
                    "check_param_validity": 1,
                    "check_parameter": 1,
                    "check_parameter_validity": 1,
                    "check_parameters": 8,
                    "check_params": 2,
                    "check_params_and_reset": 1,
                    "check_permissions": 1,
                    "execute_encryption": 1,
                    "validate_and_modify_params": 1,
                    "validate_and_set_values": 1,
                    "validate_params": 1
                },
                "HAL_GetTick": {
                    "get_current_time": 1
                },
                "iVar1": {
                    "current_tick": 8,
                    "current_time": 15,
                    "elapsed_time": 2
                },
                "param_1": {
                    "array_ptr": 1,
                    "data_pointer": 1,
                    "flag_pointer": 1,
                    "flags": 1,
                    "input_array": 2,
                    "input_data": 2,
                    "input_param": 1,
                    "input_params": 1,
                    "param_array": 6,
                    "param_array_of_pointers": 1,
                    "param_list": 1,
                    "parameter_array": 3,
                    "parameters": 3,
                    "params": 1,
                    "permissions": 1,
                    "pointer_array": 1,
                    "pointer_list": 1,
                    "pointer_to_argument1": 1,
                    "ptr_param": 1,
                    "values": 1
                },
                "param_2": {
                    "bit_mask": 4,
                    "bitmask": 2,
                    "check_flag": 2,
                    "check_value": 1,
                    "condition": 2,
                    "condition_1": 1,
                    "condition_flag": 2,
                    "encryption_key": 1,
                    "flag": 2,
                    "flag_a": 1,
                    "flag_mask": 2,
                    "flags": 1,
                    "flags1": 1,
                    "input_parameter": 1,
                    "input_value": 1,
                    "mask": 5,
                    "param_flag": 1,
                    "required_permissions": 1
                },
                "param_3": {
                    "bool_flag": 1,
                    "check_mode": 1,
                    "comparison_result": 1,
                    "condition": 2,
                    "condition_2": 1,
                    "expected_condition": 1,
                    "expected_flag": 3,
                    "expected_flags1": 1,
                    "expected_result": 11,
                    "expected_value": 2,
                    "flag": 1,
                    "flag_b": 1,
                    "flag_match": 1,
                    "is_condition": 1,
                    "is_condition_true": 1,
                    "is_encryption_enabled": 1,
                    "is_flag_comparison_true": 1
                },
                "param_4": {
                    "base_time": 1,
                    "current_tick": 1,
                    "initial_time": 1,
                    "reference_tick": 1,
                    "start_tick": 6,
                    "start_time": 18,
                    "starting_tick": 1,
                    "tick_start": 1,
                    "time_start": 1
                },
                "param_5": {
                    "max_duration": 1,
                    "max_execution_time": 2,
                    "max_tick_diff": 1,
                    "max_ticks": 1,
                    "max_time": 1,
                    "max_wait_time": 1,
                    "tick_duration": 1,
                    "time_limit": 3,
                    "time_threshold": 1,
                    "timeout": 17,
                    "timeout_duration": 1,
                    "timeout_value": 1
                }
            },
            "called": [
                "FUN_08001cc4"
            ],
            "calling": [
                "FUN_08004478"
            ],
            "code": "\nundefined4 check_parameters_080043b4(uint **param_array,uint mask,uint expected_result,int start_time,uint timeout)\n\n{\n  int current_time;\n  \n  do {\n    if (((mask & ~**param_array) == 0) != expected_result) {\n      return 0;\n    }\n  } while ((timeout == 0xffffffff) ||\n          ((timeout != 0 && (current_time = get_current_time(), (uint)(current_time - start_time) <= timeout))));\n  (*param_array)[3] = (*param_array)[3] & 0xfffffe5f;\n  (*param_array)[5] = (*param_array)[5] & 0xfffffffe;\n  *(undefined *)((int)param_array + 0x39) = 0x20;\n  *(undefined *)((int)param_array + 0x3a) = 0x20;\n  *(undefined *)(param_array + 0xe) = 0;\n  return 3;\n}\n\n",
            "current_name": "check_parameters_080043b4",
            "entrypoint": "0x080043b4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080043b4": "check_parameters_080043b4",
                "HAL_GetTick": "get_current_time",
                "iVar1": "current_time",
                "param_1": "param_array",
                "param_2": "mask",
                "param_3": "expected_result",
                "param_4": "start_time",
                "param_5": "timeout"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004418": {
            "called": [],
            "calling": [
                "FUN_0800441a"
            ],
            "code": "\nvoid FUNC_08004418(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08004418",
            "entrypoint": "0x08004418",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08004418": "FUNC_08004418"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800441a": {
            "additional_data": {
                "0x2000": {
                    "uart_config_bitmask_set_tx": 1
                },
                "0x24": {
                    "uart_initialized_flag_value": 1
                },
                "0xffffb7ff": {
                    "uart_status_bitmask_clear_rts": 1
                },
                "0xffffdfff": {
                    "uart_config_bitmask_clear_tx": 1
                },
                "0xffffffd5": {
                    "uart_control_bitmask_clear_cts": 1
                },
                "FUNC_08004408": {
                    "custom_processing_function": 1
                },
                "FUNC_08004418": {
                    "initialize_peripheral": 1,
                    "initialize_uart_gpio_pins": 1,
                    "initialize_uart_helper2": 1,
                    "initialize_uart_hw": 1,
                    "initialize_uart_parameters": 1,
                    "initialize_uart_peripherals": 1,
                    "not_relevant": 2,
                    "reset_uart_configuration": 1,
                    "reset_variables": 1,
                    "reverse_data": 1,
                    "uart_set_config": 1,
                    "undefined_function": 2,
                    "unknown_function": 2,
                    "unused_function": 1
                },
                "FUN_08004204": {
                    "clear_buffers": 1,
                    "configure_uart": 3,
                    "handle_uart_fault": 1,
                    "initialize_parameters": 1,
                    "initialize_peripherals": 1,
                    "initialize_uart": 2,
                    "initialize_uart_config": 1,
                    "initialize_uart_data": 1,
                    "initialize_uart_helper": 1,
                    "initialize_uart_msp": 1,
                    "initialize_uart_peripheral": 2,
                    "initialize_uart_peripherals": 3,
                    "initialize_uart_pins": 1,
                    "initialize_uart_registers": 1
                },
                "FUN_0800441a": {
                    "initialize_uart": 29,
                    "initialize_uart_config": 1
                },
                "HAL_UART_MspInit": {
                    "configure_uart_gpio": 1,
                    "initialize_gpio_and_rcc": 1,
                    "initialize_hal_uart": 1,
                    "initialize_peripheral": 1,
                    "initialize_peripherals": 1,
                    "initialize_uart_hal": 1,
                    "initialize_uart_hardware": 4,
                    "initialize_uart_hw": 1,
                    "initialize_uart_msp": 1,
                    "initialize_uart_periph": 1,
                    "initialize_uart_peripheral": 2,
                    "initialize_uart_peripherals": 11,
                    "initialize_uart_pins": 1,
                    "initialize_uartmsp": 1
                },
                "PTR_DAT_08004204": {
                    "initialize_uart_handle": 1
                },
                "UART_SetConfig": {
                    "configure_uart": 4,
                    "set_uart_config": 9,
                    "set_uart_configuration": 10
                },
                "char": {
                    "status": 1
                },
                "custom_processing_function": {
                    "perform_custom_processing": 1
                },
                "initialize_UART_hal": {
                    "initialize_hal_for_uart": 1
                },
                "param_1": {
                    "config_ptr": 1,
                    "uart": 1,
                    "uart_config": 10,
                    "uart_data": 1,
                    "uart_handle": 12,
                    "uart_instance": 5
                },
                "set_UART_config": {
                    "configure_uart": 1
                },
                "uart_instance": {
                    "": 1
                },
                "uint": {
                    "uint_value": 1
                },
                "undefined4": {
                    "return_status": 1
                }
            },
            "called": [
                "FUN_08004204",
                "FUN_08004418"
            ],
            "calling": [
                "FUN_08004f4c"
            ],
            "code": "\nreturn_status initialize_uart_config_0800441a(int *uart_handle)\n\n{\n  if (uart_handle != (int *)0x0) {\n    if (*(status *)((int)uart_handle + 0x39) == '\\0') {\n      *(undefined *)(uart_handle + 0xe) = 0;\n      initialize_uart_peripherals();\n    }\n    *(undefined *)((int)uart_handle + 0x39) = 0x24;\n    *(uint_value *)(*uart_handle + 0xc) = *(uint_value *)(*uart_handle + 0xc) & 0xffffdfff;\n    set_uart_configuration(uart_handle);\n    *(uint_value *)(*uart_handle + 0x10) = *(uint_value *)(*uart_handle + 0x10) & 0xffffb7ff;\n    *(uint_value *)(*uart_handle + 0x14) = *(uint_value *)(*uart_handle + 0x14) & 0xffffffd5;\n    *(uint_value *)(*uart_handle + 0xc) = *(uint_value *)(*uart_handle + 0xc) | 0x2000;\n    uart_handle[0xf] = 0;\n    *(undefined *)((int)uart_handle + 0x39) = 0x20;\n    *(undefined *)((int)uart_handle + 0x3a) = 0x20;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "initialize_uart_config_0800441a",
            "entrypoint": "0x0800441a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800441a": "initialize_uart_config_0800441a",
                "HAL_UART_MspInit": "initialize_uart_peripherals",
                "UART_SetConfig": "set_uart_configuration",
                "char": "status",
                "param_1": "uart_handle",
                "uint": "uint_value",
                "undefined4": "return_status"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004478": {
            "additional_data": {
                "FUN_08001cc4": {
                    "initialize": 1
                },
                "FUN_080043b4": {
                    "process_uart_flag": 1
                },
                "FUN_08004478": {
                    "process_data": 26,
                    "process_data_packet": 1,
                    "process_input": 1,
                    "process_transmission": 1,
                    "send_data": 2
                },
                "HAL_GetTick": {
                    "get_current_tick": 1,
                    "get_current_time": 3
                },
                "UART_WaitOnFlagUntilTimeout": {
                    "wait_for_flag_until_timeout": 3,
                    "wait_for_flag_with_timeout": 1,
                    "wait_on_flag_until_timeout": 2,
                    "wait_on_uart_flag": 1
                },
                "iVar1": {
                    "result": 15,
                    "return_value": 4,
                    "status": 7,
                    "wait_flag_result": 1,
                    "wait_result": 4
                },
                "param_1": {
                    "buffer": 2,
                    "data": 3,
                    "data_arr": 1,
                    "data_array": 2,
                    "data_buffer": 11,
                    "data_pointer": 4,
                    "data_ptr": 2,
                    "device_data": 1,
                    "input_buffer": 1,
                    "input_data": 1,
                    "transmission_data": 1,
                    "uart": 1,
                    "uart_params": 1
                },
                "param_2": {
                    "buffer": 4,
                    "buffer_pointer": 1,
                    "buffer_ptr": 1,
                    "byte_array": 2,
                    "command_buffer": 1,
                    "data": 8,
                    "data_array": 1,
                    "data_buffer": 5,
                    "data_ptr": 1,
                    "data_values": 1,
                    "input_buffer": 1,
                    "input_data": 1,
                    "input_pointer": 1,
                    "input_ptr": 1,
                    "message_buffer": 1,
                    "signal_data": 1
                },
                "param_3": {
                    "array_length": 2,
                    "buffer_length": 3,
                    "buffer_size": 8,
                    "command_size": 1,
                    "data_len": 1,
                    "data_length": 4,
                    "data_size": 4,
                    "input_length": 2,
                    "input_size": 2,
                    "length": 2,
                    "message_length": 1,
                    "num_values": 1
                },
                "param_4": {
                    "param": 1,
                    "param4": 2,
                    "param_4": 1,
                    "tick": 1,
                    "tick_param": 1,
                    "timeout": 24,
                    "timeout_value": 1
                },
                "uVar2": {
                    "error_code": 1,
                    "result": 11,
                    "return_value": 12,
                    "status": 6,
                    "status_code": 1
                }
            },
            "called": [
                "FUN_08001cc4",
                "FUN_080043b4"
            ],
            "calling": [
                "FUN_080053d4"
            ],
            "code": "\nundefined4 process_data_packet_08004478(int *data_buffer,ushort *data,int buffer_size,undefined4 timeout)\n\n{\n  int result;\n  undefined4 return_value;\n  \n  if (*(char *)((int)data_buffer + 0x39) == ' ') {\n    if (data == (ushort *)0x0) {\n      return_value = 1;\n    }\n    else if (buffer_size == 0) {\n      return_value = 1;\n    }\n    else if (*(char *)(data_buffer + 0xe) == '\\x01') {\n      return_value = 2;\n    }\n    else {\n      *(undefined *)(data_buffer + 0xe) = 1;\n      data_buffer[0xf] = 0;\n      *(undefined *)((int)data_buffer + 0x39) = 0x21;\n      return_value = get_current_time();\n      *(short *)(data_buffer + 9) = (short)buffer_size;\n      *(short *)((int)data_buffer + 0x26) = (short)buffer_size;\n      while (*(short *)((int)data_buffer + 0x26) != 0) {\n        *(short *)((int)data_buffer + 0x26) = *(short *)((int)data_buffer + 0x26) + -1;\n        if (data_buffer[2] == 0x1000) {\n          result = wait_for_flag_until_timeout(data_buffer,0x80,0,return_value,timeout);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*data_buffer + 4) = *data & 0x1ff;\n          if (data_buffer[4] == 0) {\n            data = data + 1;\n          }\n          else {\n            data = (ushort *)((int)data + 1);\n          }\n        }\n        else {\n          result = wait_for_flag_until_timeout(data_buffer,0x80,0,return_value,timeout);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*data_buffer + 4) = (uint)*(byte *)data;\n          data = (ushort *)((int)data + 1);\n        }\n      }\n      result = wait_for_flag_until_timeout(data_buffer,0x40,0,return_value,timeout);\n      if (result == 0) {\n        *(undefined *)((int)data_buffer + 0x39) = 0x20;\n        *(undefined *)(data_buffer + 0xe) = 0;\n        return_value = 0;\n      }\n      else {\n        return_value = 3;\n      }\n    }\n  }\n  else {\n    return_value = 2;\n  }\n  return return_value;\n}\n\n",
            "current_name": "process_data_packet_08004478",
            "entrypoint": "0x08004478",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004478": "process_data_packet_08004478",
                "HAL_GetTick": "get_current_time",
                "UART_WaitOnFlagUntilTimeout": "wait_for_flag_until_timeout",
                "iVar1": "result",
                "param_1": "data_buffer",
                "param_2": "data",
                "param_3": "buffer_size",
                "param_4": "timeout",
                "uVar2": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800455a": {
            "additional_data": {
                "FUN_0800455a": {
                    "check_and_update_data": 1,
                    "check_input": 1,
                    "check_parameters": 1,
                    "initialize_data": 2,
                    "initialize_param": 1,
                    "process_data": 2,
                    "process_input": 3,
                    "set_params_and_flags": 1,
                    "update_data": 3,
                    "update_params": 2,
                    "update_values": 1,
                    "validate_and_set_parameters": 2,
                    "validate_and_set_values": 1,
                    "validate_and_update_params": 2,
                    "validate_input": 5,
                    "validate_input_and_update": 1,
                    "validate_params": 2
                },
                "array": {
                    "data_array": 1
                },
                "param_1": {
                    "array": 4,
                    "buffer": 1,
                    "data": 8,
                    "data_array": 1,
                    "input": 1,
                    "input_array": 8,
                    "input_buffer": 2,
                    "param_array": 3,
                    "parameters": 1,
                    "params": 2
                },
                "param_2": {
                    "length": 2,
                    "size": 2,
                    "value1": 17,
                    "value_1": 9,
                    "value_2": 1
                },
                "param_3": {
                    "value": 4,
                    "value2": 17,
                    "value_2": 9,
                    "value_3": 1
                },
                "value1": {
                    "length": 1,
                    "new_value1": 1
                },
                "value2": {
                    "count": 1,
                    "new_value2": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005568",
                "FUN_08005604"
            ],
            "code": "\nundefined4 validate_and_update_params_0800455a(int *input_array,int value1,int value2)\n\n{\n  if (*(char *)((int)input_array + 0x39) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(char *)(input_array + 0xe) != '\\x01') {\n    input_array[8] = value1;\n    *(short *)(input_array + 9) = (short)value2;\n    *(short *)((int)input_array + 0x26) = (short)value2;\n    input_array[0xf] = 0;\n    *(undefined *)((int)input_array + 0x39) = 0x21;\n    *(undefined *)(input_array + 0xe) = 0;\n    *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) | 0x80;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "current_name": "validate_and_update_params_0800455a",
            "entrypoint": "0x0800455a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800455a": "validate_and_update_params_0800455a",
                "param_1": "input_array",
                "param_2": "value1",
                "param_3": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080045a2": {
            "additional_data": {
                "0x14": {
                    "property_2": 1
                },
                "0x22": {
                    "updated_char": 1
                },
                "0x2e": {
                    "value_offset": 1
                },
                "0x3a": {
                    "index": 1
                },
                "0xc": {
                    "property_1": 1
                },
                "0xe": {
                    "status_offset": 1
                },
                "0xf": {
                    "initialized_offset": 1
                },
                "FUN_080045a2": {
                    "check_input_validity": 1,
                    "initialize_data": 2,
                    "initialize_parameters": 1,
                    "process_data": 7,
                    "process_input": 1,
                    "process_params": 1,
                    "update_settings": 1,
                    "validate_and_update_data": 2,
                    "validate_and_update_parameters": 1,
                    "validate_input": 8,
                    "validate_inputs": 2,
                    "validate_parameters": 3,
                    "validate_params": 1
                },
                "array": {
                    "input_array": 1
                },
                "char": {
                    "char": 1
                },
                "input": {
                    "input_array": 1
                },
                "input_array": {
                    "input": 1
                },
                "int": {
                    "int": 1
                },
                "length": {
                    "array_length": 1
                },
                "param_1": {
                    "args": 1,
                    "array": 4,
                    "data": 10,
                    "data_ptr": 2,
                    "input": 1,
                    "input_array": 9,
                    "input_buffer": 1,
                    "parameters": 1,
                    "params_array": 1,
                    "settings": 1
                },
                "param_2": {
                    "length": 2,
                    "param2_value": 1,
                    "size": 6,
                    "size_of_param2": 1,
                    "size_param": 1,
                    "value1": 14,
                    "value_1": 5,
                    "value_2": 1
                },
                "param_3": {
                    "count": 1,
                    "length": 1,
                    "param3_value": 1,
                    "size_of_param3": 1,
                    "value": 6,
                    "value2": 14,
                    "value_2": 5,
                    "value_3": 1,
                    "value_param": 1
                },
                "settings": {
                    "settings_array": 1
                },
                "short": {
                    "short": 1
                },
                "size_param": {
                    "array_size": 1
                },
                "undefined4": {
                    "uint": 1
                },
                "value": {
                    "array_value": 1
                },
                "value1": {
                    "new_value1": 1
                },
                "value2": {
                    "new_value2": 1
                },
                "value_1": {
                    "length": 1
                },
                "value_2": {
                    "short_value": 1
                },
                "value_param": {
                    "value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005510",
                "FUN_080054d4"
            ],
            "code": "\nuint validate_input_080045a2(int *data,int value1,int value2)\n\n{\n  if (*(char *)((int)data + 0x3a) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(char *)(data + 0xe) != '\\x01') {\n    data[10] = value1;\n    *(short *)(data + 0xb) = (short)value2;\n    *(short *)((int)data + 0x2e) = (short)value2;\n    data[0xf] = 0;\n    *(undefined *)((int)data + 0x3a) = 0x22;\n    *(undefined *)(data + 0xe) = 0;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x100;\n    *(uint *)(*data + 0x14) = *(uint *)(*data + 0x14) | 1;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x20;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "current_name": "validate_input_080045a2",
            "entrypoint": "0x080045a2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080045a2": "validate_input_080045a2",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2",
                "undefined4": "uint"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080045fe": {
            "additional_data": {
                "0x20": {
                    "uart_default_value": 1
                },
                "0xc": {
                    "offset": 1
                },
                "0xffffffbf": {
                    "bit_mask": 1,
                    "uart_bit_mask": 1
                },
                "FUN_080045fe": {
                    "reset_flags": 1,
                    "reset_uart_settings": 1,
                    "set_bit_and_notify": 1,
                    "set_bit_clear_bit_and_callback": 1,
                    "set_flag_and_call_callback": 1,
                    "set_flag_and_send_data": 1,
                    "set_uart_callback": 1,
                    "set_uart_config": 1,
                    "set_uart_interrupt_flag": 1,
                    "set_uart_settings": 1,
                    "set_uart_tx_complete_callback": 1,
                    "set_uart_tx_cplt_callback": 1,
                    "transmit_data": 1,
                    "update_and_send_data": 1,
                    "update_communication_settings": 1,
                    "update_control_register": 1,
                    "update_uart_cancellation": 1,
                    "update_uart_config": 1,
                    "update_uart_configuration": 2,
                    "update_uart_control_settings": 1,
                    "update_uart_data": 1,
                    "update_uart_interrupt": 1,
                    "update_uart_rx_flag": 1,
                    "update_uart_settings": 6,
                    "update_uart_transmission": 1
                },
                "HAL_UART_TxCpltCallback": {
                    "handle_transmission_completion": 1,
                    "handle_transmit_complete": 1,
                    "handle_tx_complete": 1,
                    "handle_uart_transmission_complete": 4,
                    "handle_uart_transmit_complete": 2,
                    "perform_uart_transmission": 1,
                    "perform_uart_transmission_complete_callback": 1,
                    "transmission_complete_callback": 5,
                    "transmit_complete_callback": 4,
                    "uart_tx_cplt_callback": 1
                },
                "int": {
                    "integer": 1
                },
                "param_1": {
                    "config": 1,
                    "config_pointer": 2,
                    "config_ptr": 1,
                    "control_pointer": 1,
                    "data": 2,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "flag_pointer": 1,
                    "param": 1,
                    "params": 1,
                    "ptr": 1,
                    "settings": 3,
                    "uart_callback_data": 1,
                    "uart_config": 1,
                    "uart_config_ptr": 1,
                    "uart_data": 2,
                    "uart_data_ptr": 1,
                    "uart_param": 1,
                    "uart_settings": 4,
                    "uart_status": 1
                },
                "uint": {
                    "unsigned_int": 1
                },
                "undefined": {
                    "byte": 1
                }
            },
            "called": [
                "FUN_08005604"
            ],
            "calling": [
                "FUN_080046b8"
            ],
            "code": "\nbyte4 update_uart_control_settings_080045fe(integer *uart_settings)\n\n{\n  *(unsigned_int *)(*uart_settings + 0xc) = *(unsigned_int *)(*uart_settings + 0xc) & 0xffffffbf;\n  *(byte *)((integer)uart_settings + 0x39) = 0x20;\n  transmission_complete_callback();\n  return 0;\n}\n\n",
            "current_name": "update_uart_control_settings_080045fe",
            "entrypoint": "0x080045fe",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080045fe": "update_uart_control_settings_080045fe",
                "HAL_UART_TxCpltCallback": "transmission_complete_callback",
                "int": "integer",
                "param_1": "uart_settings",
                "uint": "unsigned_int",
                "undefined": "byte"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004618": {
            "additional_data": {
                "FUN_08004618": {
                    "parse_data": 1,
                    "parse_input": 1,
                    "parse_input_data": 1,
                    "parse_input_string": 1,
                    "parse_quoted_string": 1,
                    "parse_string": 5,
                    "process_binary_data": 2,
                    "process_character": 1,
                    "process_command": 1,
                    "process_data": 12,
                    "process_input": 5
                },
                "HAL_UART_RxCpltCallback": {
                    "handle_rx_complete": 1,
                    "handle_uart_rx_complete": 1,
                    "handle_uart_rx_complete_callback": 1,
                    "uart_receive_callback": 1
                },
                "param_1": {
                    "binary_data": 1,
                    "command": 1,
                    "data": 11,
                    "data_buffer": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "input": 3,
                    "input_array": 2,
                    "input_buffer": 1,
                    "input_data": 7,
                    "input_params": 1
                },
                "pbVar1": {
                    "byte_data": 1,
                    "byte_pointer": 11,
                    "byte_ptr": 13,
                    "output_byte": 5,
                    "output_byte_ptr": 1
                },
                "puVar3": {
                    "byte_ptr": 1,
                    "output_byte": 1,
                    "output_byte_ptr": 2,
                    "output_char_ptr": 1,
                    "output_pointer": 1,
                    "output_ptr": 1,
                    "undefined_pointer": 11,
                    "undefined_ptr": 13
                },
                "sVar2": {
                    "count": 7,
                    "counter": 12,
                    "decremented_value": 1,
                    "loop_counter": 2,
                    "remaining_characters": 1,
                    "remaining_count": 3,
                    "short_val": 1,
                    "short_value": 3,
                    "short_var": 1
                }
            },
            "called": [
                "FUN_080055e0"
            ],
            "calling": [
                "FUN_080046b8"
            ],
            "code": "\nundefined4 process_binary_data_08004618(int *data)\n\n{\n  byte *byte_ptr;\n  short counter;\n  undefined *undefined_ptr;\n  \n  if (*(char *)((int)data + 0x3a) != '\\\"') {\n    return 2;\n  }\n  if (data[2] == 0x1000) {\n    if (data[4] == 0) {\n      *(ushort *)data[10] = (ushort)((uint)(*(int *)(*data + 4) << 0x17) >> 0x17);\n      data[10] = data[10] + 2;\n    }\n    else {\n      *(ushort *)data[10] = (ushort)*(undefined4 *)(*data + 4) & 0xff;\n      data[10] = data[10] + 1;\n    }\n  }\n  else if (data[4] == 0) {\n    undefined_ptr = (undefined *)data[10];\n    data[10] = (int)(undefined_ptr + 1);\n    *undefined_ptr = (char)*(undefined4 *)(*data + 4);\n  }\n  else {\n    byte_ptr = (byte *)data[10];\n    data[10] = (int)(byte_ptr + 1);\n    *byte_ptr = (byte)*(undefined4 *)(*data + 4) & 0x7f;\n  }\n  counter = *(short *)((int)data + 0x2e) + -1;\n  *(short *)((int)data + 0x2e) = counter;\n  if (counter != 0) {\n    return 0;\n  }\n  *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xffffffdf;\n  *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xfffffeff;\n  *(uint *)(*data + 0x14) = *(uint *)(*data + 0x14) & 0xfffffffe;\n  *(undefined *)((int)data + 0x3a) = 0x20;\n  handle_uart_rx_complete();\n  return 0;\n}\n\n",
            "current_name": "process_binary_data_08004618",
            "entrypoint": "0x08004618",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004618": "process_binary_data_08004618",
                "HAL_UART_RxCpltCallback": "handle_uart_rx_complete",
                "param_1": "data",
                "pbVar1": "byte_ptr",
                "puVar3": "undefined_ptr",
                "sVar2": "counter"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080046b8": {
            "additional_data": {
                "FUNC_08005650": {
                    "end_process": 1,
                    "some_function": 1
                },
                "FUN_0800258c": {
                    "perform_uart_operations_2": 1,
                    "uart_receive": 1
                },
                "FUN_0800417c": {
                    "handle_error": 1,
                    "uart_transmit": 1
                },
                "FUN_08004198": {
                    "handle_error_2": 1,
                    "uart_end_transmit": 1
                },
                "FUN_080045fe": {
                    "check_condition": 1,
                    "initialize": 1
                },
                "FUN_08004618": {
                    "abort_transfer": 1,
                    "perform_operation": 1
                },
                "FUN_080046b8": {
                    "check_and_handle_uart_events": 1,
                    "handle_transfer": 1,
                    "handle_uart": 4,
                    "handle_uart_data": 1,
                    "handle_uart_event": 3,
                    "handle_uart_events": 2,
                    "handle_uart_interaction": 1,
                    "handle_uart_operations": 1,
                    "perform_uart_operations": 1,
                    "process_communication": 1,
                    "process_data": 5,
                    "process_flags": 3,
                    "process_input": 3,
                    "process_status": 1,
                    "process_uart_activity": 1,
                    "process_uart_data": 1
                },
                "F_UN_080046b8": {
                    "handle_uart_operations": 1
                },
                "HAL_DMA_Abort_IT": {
                    "abort_dma": 2,
                    "abort_dma_interrupt": 1,
                    "abort_dma_operation": 1,
                    "abort_dma_transfer": 2,
                    "abort_transmission": 1
                },
                "HAL_UART_ErrorCallback": {
                    "error_callback": 2,
                    "handle_error_callback": 1,
                    "handle_uart_error": 4
                },
                "LAB_080047d8_1": {
                    "callback_func": 1,
                    "callback_function": 1,
                    "dma_callback": 1,
                    "interrupt_service_routine": 1,
                    "label_1": 1
                },
                "UART_EndRxTransfer": {
                    "end_receive_transfer": 1,
                    "end_receiving_data": 2,
                    "end_rx_transfer": 3,
                    "uart_end_rx_transfer": 1
                },
                "UART_EndTransmit_IT": {
                    "end_transmit": 1,
                    "end_transmit_data": 1,
                    "end_transmit_interrupt": 1,
                    "end_transmitting_data": 2,
                    "end_uart_transmit": 1,
                    "uart_end_transmit_interrupt": 1
                },
                "UART_Receive_IT": {
                    "receive_data": 2,
                    "receive_data_interrupt": 1,
                    "start_receiving_data": 2,
                    "start_uart_receive": 1,
                    "uart_receive_interrupt": 1
                },
                "UART_Transmit_IT": {
                    "start_transmitting_data": 2,
                    "start_uart_transmit": 1,
                    "transmit_data": 2,
                    "transmit_data_interrupt": 1,
                    "uart_transmit_interrupt": 1
                },
                "iVar1": {
                    "dma_error": 1,
                    "dma_status": 1,
                    "error_code": 3,
                    "result": 12,
                    "ret_val": 1,
                    "return_value": 8,
                    "status": 3,
                    "status_error": 1
                },
                "param_1": {
                    "communication_data": 1,
                    "data": 4,
                    "data_param": 1,
                    "event_data": 1,
                    "input": 1,
                    "input_data": 4,
                    "param": 1,
                    "param_list": 2,
                    "param_ptr": 1,
                    "parameters": 2,
                    "params": 3,
                    "ptr_array": 1,
                    "ptr_uart_data": 1,
                    "status": 1,
                    "uart_event_ptr": 1,
                    "uart_events": 1,
                    "uart_events_data": 1,
                    "uart_parameters": 1,
                    "uart_params": 1
                },
                "puVar3": {
                    "data_pointer": 2,
                    "event": 2,
                    "param": 1,
                    "param_1": 1,
                    "pointer": 3,
                    "pointer1": 1,
                    "pointer_1": 1,
                    "pointer_to_parameters": 1,
                    "ptr": 10,
                    "ptr1": 1,
                    "ptr3": 1,
                    "ptr_data_1": 1,
                    "ptr_to_value_1": 1,
                    "ptr_uart_data": 1,
                    "status_pointer": 1,
                    "temp": 1,
                    "uart_data": 1,
                    "var3": 1
                },
                "uVar2": {
                    "data": 2,
                    "data_variable2": 1,
                    "flag_value": 1,
                    "flags": 1,
                    "param_2": 1,
                    "status_value": 1,
                    "uart_flags": 1,
                    "value1": 12,
                    "value2": 1,
                    "value_1": 4,
                    "value_2": 1,
                    "var2": 5
                },
                "uVar4": {
                    "check_value": 1,
                    "condition": 1,
                    "conditional_check": 1,
                    "data_variable4": 1,
                    "flag": 5,
                    "is_dma_active": 1,
                    "transfer_in_progress": 1,
                    "value2": 10,
                    "value_2": 4,
                    "value_4": 1,
                    "var3": 1,
                    "var4": 4
                },
                "uVar5": {
                    "data_variable5": 1,
                    "event_flags": 2,
                    "flag_mask": 1,
                    "flag_value": 1,
                    "status": 2,
                    "status_flag": 1,
                    "value1": 1,
                    "value2": 2,
                    "value3": 10,
                    "value_3": 4,
                    "value_5": 1,
                    "var1": 1,
                    "var5": 4
                }
            },
            "called": [
                "FUN_080045fe",
                "FUN_0800258c",
                "FUN_0800417c",
                "FUN_08004198",
                "FUN_08005650",
                "FUN_08004618"
            ],
            "calling": [],
            "code": "\nvoid handle_uart_event_080046b8(uint **data)\n\n{\n  int result;\n  uint value1;\n  uint *ptr;\n  uint value2;\n  uint value3;\n  \n  ptr = *data;\n  value3 = *ptr;\n  value1 = ptr[3];\n  if ((((value3 & 0xf) == 0) && ((value3 & 0x20) != 0)) && ((value1 & 0x20) != 0)) {\n    receive_data(data);\n    return;\n  }\n  if (((value3 & 0xf) == 0) || ((value2 = ptr[5] & 1, value2 == 0 && ((value1 & 0x120) == 0)))) {\n    if (((value3 & 0x80) != 0) && ((value1 & 0x80) != 0)) {\n      transmit_data(data);\n      return;\n    }\n    if (((value3 & 0x40) != 0) && ((value1 & 0x40) != 0)) {\n      end_transmitting_data(data);\n    }\n  }\n  else {\n    if (((value3 & 1) != 0) && ((value1 & 0x100) != 0)) {\n      data[0xf] = (uint *)((uint)data[0xf] | 1);\n    }\n    if (((value3 & 4) != 0) && (value2 != 0)) {\n      data[0xf] = (uint *)((uint)data[0xf] | 2);\n    }\n    if (((value3 & 2) != 0) && (value2 != 0)) {\n      data[0xf] = (uint *)((uint)data[0xf] | 4);\n    }\n    if (((value3 & 8) != 0) && (value2 != 0)) {\n      data[0xf] = (uint *)((uint)data[0xf] | 8);\n    }\n    if (data[0xf] != (uint *)0x0) {\n      if (((value3 & 0x20) != 0) && ((value1 & 0x20) != 0)) {\n        receive_data(data);\n      }\n      if ((((uint)data[0xf] & 8) == 0) && (((*data)[5] & 0x40) == 0)) {\n        handle_uart_error(data);\n        data[0xf] = (uint *)0x0;\n        return;\n      }\n      end_rx_transfer(data);\n      ptr = *data;\n      if ((ptr[5] & 0x40) == 0) {\n        handle_uart_error(data);\n        return;\n      }\n      ptr[5] = ptr[5] & 0xffffffbf;\n      if (data[0xd] == (uint *)0x0) {\n        handle_uart_error(data);\n        return;\n      }\n      data[0xd][0xd] = (uint)&callback_function;\n      result = abort_dma_transfer(data[0xd]);\n      if (result != 0) {\n        (*(code *)data[0xd][0xd])();\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "current_name": "handle_uart_event_080046b8",
            "entrypoint": "0x080046b8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080046b8": "handle_uart_event_080046b8",
                "HAL_DMA_Abort_IT": "abort_dma_transfer",
                "HAL_UART_ErrorCallback": "handle_uart_error",
                "LAB_080047d8_1": "callback_function",
                "UART_EndRxTransfer": "end_rx_transfer",
                "UART_EndTransmit_IT": "end_transmitting_data",
                "UART_Receive_IT": "receive_data",
                "UART_Transmit_IT": "transmit_data",
                "iVar1": "result",
                "param_1": "data",
                "puVar3": "ptr",
                "uVar2": "value1",
                "uVar4": "value2",
                "uVar5": "value3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080047e8": {
            "additional_data": {
                "0x39": {
                    "offset2": 1,
                    "offset_b": 2
                },
                "0x3a": {
                    "offset1": 1,
                    "offset_a": 2
                },
                "DAT_0800475d": {
                    "offset2": 1
                },
                "DAT_0800475e": {
                    "offset1": 1
                },
                "FUN_080047e8": {
                    "combine_bits": 3,
                    "combine_byte_values": 1,
                    "combine_bytes": 25,
                    "combine_values": 1,
                    "extract_byte_from_offset": 1
                },
                "PTR_080046e6": {
                    "byte_ptr2": 1
                },
                "PTR_080046e7": {
                    "byte_ptr1": 1
                },
                "VAR_1": {
                    "byte1": 1
                },
                "VAR_2": {
                    "byte2": 1
                },
                "byte": {
                    "result": 1
                },
                "param_1": {
                    "address": 10,
                    "base_address": 2,
                    "data": 1,
                    "input": 10,
                    "input_address": 1,
                    "input_value": 2,
                    "offset": 3,
                    "source_address": 1,
                    "start_address": 1
                },
                "param_2": {
                    "data": 1,
                    "offset": 1
                },
                "var_1": {
                    "byte1": 1
                },
                "var_2": {
                    "byte2": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800548c",
                "FUN_080054b0"
            ],
            "code": "\nresult combine_bytes_080047e8(int input)\n\n{\n  return *(result *)(input + 0x3a) | *(result *)(input + 0x39);\n}\n\n",
            "current_name": "combine_bytes_080047e8",
            "entrypoint": "0x080047e8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080047e8": "combine_bytes_080047e8",
                "byte": "result",
                "param_1": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080047f4": {
            "additional_data": {
                "0x1c": {
                    "shift_amount": 1
                },
                "1": {
                    "bit_mask": 1,
                    "bit_masked_value": 1
                },
                "4": {
                    "ptr_size": 1
                },
                "FUN_080047f4": {
                    "bitwise_extraction": 2,
                    "bitwise_shift_and_mask": 1,
                    "extract_bit": 3,
                    "extract_bit_from_int_ptr": 1,
                    "extract_bit_from_uint": 1,
                    "extract_bit_from_value": 1,
                    "extract_bit_value": 1,
                    "extracted_bit": 1,
                    "get_bit": 1,
                    "get_bit_value": 13,
                    "read_bit": 1,
                    "retrieve_bit": 2,
                    "retrieve_bit_from_memory": 1,
                    "retrieve_bit_value": 1,
                    "reverse_bits": 1
                },
                "local_var_1": {
                    "shifted_index": 1
                },
                "local_var_2": {
                    "shifted_value": 1
                },
                "param_1": {
                    "bit_index": 1,
                    "bit_position": 1,
                    "bit_value": 1,
                    "data": 4,
                    "index": 3,
                    "input": 1,
                    "input_data": 1,
                    "input_value": 4,
                    "int_value": 1,
                    "value": 14
                },
                "param_2": {
                    "address": 4,
                    "array": 5,
                    "array_address": 2,
                    "array_base": 1,
                    "array_base_addr": 1,
                    "array_index": 1,
                    "array_pointer": 2,
                    "array_ptr": 1,
                    "array_start": 1,
                    "array_starting_address": 1,
                    "base_address": 5,
                    "bit_index": 1,
                    "data": 1,
                    "data_address": 1,
                    "data_array": 1,
                    "data_pointer": 1,
                    "offset": 1,
                    "ptr": 1
                },
                "param_3": {
                    "array_starting_address": 1,
                    "bit_offset": 2,
                    "shifted_index": 1
                },
                "param_4": {
                    "bit_shift": 1
                },
                "param_5": {
                    "bitwise_mask": 1
                },
                "temp_1": {
                    "shifted_value": 1
                },
                "temp_2": {
                    "bit_mask": 1
                },
                "temp_3": {
                    "result": 1
                },
                "var_1": {
                    "shifted_value": 1
                },
                "var_2": {
                    "bit_masked_value": 1
                },
                "variable_1": {
                    "shifted_index": 1
                },
                "variable_2": {
                    "bit_masked_data": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005890",
                "FUN_08005848",
                "FUN_080057b4"
            ],
            "code": "\nuint get_bit_value_080047f4(uint value,int array)\n\n{\n  return *(uint *)(array + ((value << 0x18) >> 0x1c) * 4) >> (value & 0xf) & 1;\n}\n\n",
            "current_name": "get_bit_value_080047f4",
            "entrypoint": "0x080047f4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080047f4": "get_bit_value_080047f4",
                "param_1": "value",
                "param_2": "array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800480a": {
            "additional_data": {
                "4": {
                    "element_size": 1
                },
                "FUN_0800480a": {
                    "set_bit": 5,
                    "set_bit_in_arr": 1,
                    "set_bit_in_array": 11,
                    "set_bit_in_integer": 1,
                    "set_bit_in_memory": 2,
                    "set_bit_value": 1,
                    "store_bit_value": 1,
                    "update_bit": 7,
                    "update_bitwise_flag": 1,
                    "write_bit_to_memory": 1
                },
                "param_1": {
                    "bit_index": 6,
                    "bit_position": 15,
                    "index": 2,
                    "input": 2,
                    "input_value": 2,
                    "value": 4
                },
                "param_2": {
                    "address": 1,
                    "arr": 1,
                    "array": 15,
                    "array_address": 6,
                    "array_start": 1,
                    "data": 1,
                    "data_address": 1,
                    "data_array": 2,
                    "integer_ptr": 1,
                    "memory_address": 2
                },
                "uVar1": {
                    "array_index": 1,
                    "bit_offset": 1,
                    "byte_index": 1,
                    "byte_offset": 4,
                    "element_index": 1,
                    "index": 9,
                    "offset": 1,
                    "shifted_index": 5,
                    "shifted_pos": 1,
                    "shifted_value": 2,
                    "word_offset": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080057b4"
            ],
            "code": "\nvoid set_bit_in_array_0800480a(uint bit_position,int array)\n\n{\n  uint index;\n  \n  index = (bit_position << 0x18) >> 0x1c;\n  *(uint *)(array + index * 4) = *(uint *)(array + index * 4) | 1 << (bit_position & 0xf);\n  return;\n}\n\n",
            "current_name": "set_bit_in_array_0800480a",
            "entrypoint": "0x0800480a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800480a": "set_bit_in_array_0800480a",
                "param_1": "bit_position",
                "param_2": "array",
                "uVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004828": {
            "additional_data": {
                "FUN_08004828": {
                    "clear_bit": 1,
                    "map_bits_to_index": 1,
                    "set_bit_to_zero": 3,
                    "set_bit_value": 1,
                    "update_array": 1,
                    "update_bit": 10,
                    "update_bit_at_index": 1,
                    "update_bit_in_array": 1,
                    "update_bit_in_memory": 2,
                    "update_bit_value": 2,
                    "update_bitmask_value": 1,
                    "update_bitwise_value": 1,
                    "update_memory_value_at_offset": 1,
                    "update_value_at_index": 1,
                    "update_value_in_array": 4
                },
                "param_1": {
                    "bit_index": 6,
                    "bit_position": 13,
                    "index": 3,
                    "input_value": 1,
                    "position": 1,
                    "value": 7
                },
                "param_2": {
                    "array": 12,
                    "array_address": 6,
                    "array_base_address": 1,
                    "array_pointer": 2,
                    "array_ptr": 1,
                    "bitmask_array": 1,
                    "data": 2,
                    "data_address": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "memory_address": 2,
                    "memory_base_address": 1
                },
                "uVar1": {
                    "array_index": 2,
                    "bit_shift": 1,
                    "byte_index": 2,
                    "index": 11,
                    "index_to_access": 1,
                    "offset": 1,
                    "shift": 1,
                    "shift_amount": 1,
                    "shifted_bit": 1,
                    "shifted_bit_position": 1,
                    "shifted_index": 3,
                    "shifted_position": 3,
                    "shifted_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080057b4"
            ],
            "code": "\nvoid update_bit_in_memory_08004828(uint bit_position,int array)\n\n{\n  uint index;\n  \n  index = (bit_position << 0x18) >> 0x1c;\n  *(uint *)(array + index * 4) = *(uint *)(array + index * 4) & ~(1 << (bit_position & 0xf));\n  return;\n}\n\n",
            "current_name": "update_bit_in_memory_08004828",
            "entrypoint": "0x08004828",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004828": "update_bit_in_memory_08004828",
                "param_1": "bit_position",
                "param_2": "array",
                "uVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004848": {
            "additional_data": {
                "0": {
                    "0x40010800": 2,
                    "addr_0": 1,
                    "addr_case_0": 1,
                    "address0": 1,
                    "address1": 1,
                    "address_0": 3,
                    "address_1": 1,
                    "address_a": 1,
                    "base_address": 2,
                    "base_address_0": 1,
                    "mem_address_0": 1,
                    "memory_address1": 1,
                    "memory_address_0": 1,
                    "offset0": 1,
                    "output_a": 1,
                    "start_address": 1
                },
                "0x40010800": {
                    "address0": 1
                },
                "0x40010c00": {
                    "address1": 1
                },
                "0x40011000": {
                    "address2": 1
                },
                "0x40011400": {
                    "address3": 1
                },
                "0x40011800": {
                    "address4": 1
                },
                "1": {
                    "0x40010c00": 2,
                    "a_address": 1,
                    "addr_1": 1,
                    "addr_case_1": 1,
                    "address1": 1,
                    "address2": 1,
                    "address_1": 4,
                    "address_2": 1,
                    "address_b": 1,
                    "base_address_1": 1,
                    "mem_address_1": 1,
                    "memory_address2": 1,
                    "memory_address_1": 1,
                    "offset1": 1,
                    "output_b": 1
                },
                "2": {
                    "0x40011000": 2,
                    "addr_2": 1,
                    "addr_case_2": 1,
                    "address2": 1,
                    "address3": 1,
                    "address_2": 4,
                    "address_3": 1,
                    "address_c": 1,
                    "b_address": 1,
                    "base_address_2": 1,
                    "mem_address_2": 1,
                    "memory_address3": 1,
                    "memory_address_2": 1,
                    "offset2": 1,
                    "output_c": 1
                },
                "3": {
                    "0x40011400": 2,
                    "addr_3": 1,
                    "addr_case_3": 1,
                    "address3": 1,
                    "address4": 1,
                    "address_3": 4,
                    "address_4": 1,
                    "address_d": 1,
                    "base_address_3": 1,
                    "c_address": 1,
                    "mem_address_3": 1,
                    "memory_address4": 1,
                    "memory_address_3": 1,
                    "offset3": 1,
                    "output_d": 1
                },
                "4": {
                    "0x40011800": 2,
                    "addr_4": 1,
                    "addr_case_4": 1,
                    "address4": 1,
                    "address5": 1,
                    "address_4": 4,
                    "address_5": 1,
                    "address_e": 1,
                    "base_address_4": 1,
                    "d_address": 1,
                    "mem_address_4": 1,
                    "memory_address5": 1,
                    "memory_address_4": 1,
                    "offset4": 1,
                    "output_e": 1
                },
                "FUN_08004848": {
                    "get_address": 1,
                    "get_address_from_index": 1,
                    "get_address_from_number": 1,
                    "get_address_from_param": 1,
                    "get_memory_address": 17,
                    "map_code_to_address": 1,
                    "map_input_to_address": 2,
                    "map_param_to_address": 5,
                    "map_parameter_to_address": 1,
                    "map_parameter_value": 1
                },
                "param_1": {
                    "code": 1,
                    "index": 7,
                    "input": 9,
                    "input_index": 1,
                    "input_param": 1,
                    "input_value": 5,
                    "number": 1,
                    "param": 4,
                    "parameter_value": 1,
                    "value": 1
                },
                "return": {
                    "memory_address": 2
                },
                "undefined4": {
                    "uint32_t": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005890",
                "FUN_08005848"
            ],
            "code": "\nuint32_t get_memory_address_08004848(uint32_t input)\n\n{\n  switch(input) {\n  case 0:\n    memory_address 0x40010800;\n  case 1:\n    memory_address 0x40010c00;\n  case 2:\n    memory_address 0x40011000;\n  case 3:\n    memory_address 0x40011400;\n  case 4:\n    memory_address 0x40011800;\n  default:\n    memory_address 0;\n  }\n}\n\n",
            "current_name": "get_memory_address_08004848",
            "entrypoint": "0x08004848",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004848": "get_memory_address_08004848",
                "param_1": "input",
                "return": "memory_address",
                "undefined4": "uint32_t"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004884": {
            "additional_data": {
                "0": {
                    "data_index_0": 1
                },
                "1": {
                    "data_index_1": 1
                },
                "2": {
                    "data_index_2": 1
                },
                "3": {
                    "data_index_3": 1
                },
                "4": {
                    "data_index_4": 1
                },
                "FUN_08004884": {
                    "adjust_memory_layout": 1,
                    "configure_peripheral": 2,
                    "map_address_to_value": 1,
                    "set_address_flag": 1,
                    "set_data_and_return_address": 1,
                    "set_flag_and_return_address": 2,
                    "set_flags_and_get_address": 1,
                    "set_memory_address": 4,
                    "set_memory_address_and_return": 1,
                    "set_memory_address_and_return_value": 1,
                    "set_memory_location": 1,
                    "set_memory_offset": 1,
                    "set_memory_permissions": 2,
                    "set_memory_region_access_permissions": 1,
                    "set_memory_value": 2,
                    "set_permission_address": 1,
                    "set_permission_flag": 1,
                    "set_permissions": 1,
                    "set_permissions_and_return_address": 1,
                    "set_port_values": 1,
                    "set_register_and_return_address": 1,
                    "update_memory_address": 1,
                    "update_register": 1,
                    "update_status": 1
                },
                "_DAT_40021018": {
                    "data_register": 1,
                    "memory_address": 1,
                    "memory_status": 1,
                    "memory_value": 1,
                    "permission_flags": 1,
                    "permissions": 1
                },
                "param_1": {
                    "address_index": 1,
                    "address_type": 1,
                    "data_index": 1,
                    "flag": 3,
                    "flag_index": 2,
                    "index": 1,
                    "input": 4,
                    "input_value": 1,
                    "mem_category": 1,
                    "memory_region": 1,
                    "peripheral_id": 1,
                    "peripheral_index": 1,
                    "permission": 1,
                    "permission_index": 2,
                    "permission_level": 2,
                    "port_number": 1,
                    "region_index": 1,
                    "status": 1,
                    "value": 5
                },
                "uVar1": {
                    "address": 8,
                    "base_address": 2,
                    "function_address": 1,
                    "new_address": 6,
                    "new_memory_address": 1,
                    "new_value": 2,
                    "output": 2,
                    "peripheral_address": 1,
                    "port_value": 1,
                    "result": 5,
                    "return_address": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08004f4c",
                "FUN_08004bb0",
                "FUN_08004974"
            ],
            "code": "\n\n\nundefined4 set_memory_address_and_return_value_08004884(undefined4 value)\n\n{\n  undefined4 address;\n  \n  switch(value) {\n  case 0:\n    _DAT_40021018 = _DAT_40021018 | 4;\n    address = 0x40010800;\n    break;\n  case 1:\n    _DAT_40021018 = _DAT_40021018 | 8;\n    address = 0x40010c00;\n    break;\n  case 2:\n    _DAT_40021018 = _DAT_40021018 | 0x10;\n    address = 0x40011000;\n    break;\n  case 3:\n    _DAT_40021018 = _DAT_40021018 | 0x20;\n    address = 0x40011400;\n    break;\n  case 4:\n    _DAT_40021018 = _DAT_40021018 | 0x40;\n    address = 0x40011800;\n    break;\n  default:\n    address = 0;\n  }\n  return address;\n}\n\n",
            "current_name": "set_memory_address_and_return_value_08004884",
            "entrypoint": "0x08004884",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004884": "set_memory_address_and_return_value_08004884",
                "param_1": "value",
                "uVar1": "address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800492c": {
            "additional_data": {
                "FUN_0800492c": {
                    "calculate_pinmap": 1,
                    "calculate_pinmap_value": 2,
                    "calculate_result": 4,
                    "calculate_shifted_value": 3,
                    "calculate_value": 1,
                    "compute_result": 1,
                    "convert_to_index": 1,
                    "decode_pinmap": 1,
                    "extract_pinmap_value": 2,
                    "map_pin": 2,
                    "map_pin_function": 3,
                    "map_pin_to_uint": 3,
                    "map_pin_to_value": 3,
                    "map_pin_value": 1,
                    "pinmap_to_uint": 1,
                    "reverse_bits": 1,
                    "translate_pin": 1
                },
                "iVar1": {
                    "function_result": 1,
                    "pin_result": 1,
                    "pinmap_result": 6,
                    "result": 22
                },
                "param_1": {
                    "device_id": 2,
                    "input": 1,
                    "input1": 2,
                    "input_1": 5,
                    "input_param": 1,
                    "input_value": 1,
                    "param_1": 1,
                    "pin": 12,
                    "pin_number": 2,
                    "pin_value": 2,
                    "value": 1,
                    "value1": 1
                },
                "param_2": {
                    "data": 1,
                    "data_1": 1,
                    "input2": 2,
                    "input_2": 4,
                    "param2": 1,
                    "param_2": 10,
                    "ptr": 1,
                    "unknown": 2,
                    "unknown_1": 1,
                    "unknown_value": 1,
                    "unused_param": 1,
                    "unused_parameter": 1,
                    "value2": 1
                },
                "param_3": {
                    "arg1": 1,
                    "data1": 1,
                    "data_2": 1,
                    "data_param_1": 1,
                    "input3": 2,
                    "input_3": 5,
                    "input_data": 1,
                    "param3": 1,
                    "param_3": 14,
                    "param_a": 1,
                    "pin_number": 1,
                    "unknown_2": 1,
                    "value3": 1
                },
                "param_4": {
                    "arg2": 1,
                    "data2": 1,
                    "data_3": 1,
                    "data_param_2": 1,
                    "input4": 2,
                    "input_4": 5,
                    "param4": 1,
                    "param_4": 15,
                    "param_b": 1,
                    "unknown_3": 1,
                    "unused_parameter": 1,
                    "value4": 1
                },
                "uVar2": {
                    "extracted_value": 1,
                    "index": 1,
                    "shifted_result": 15,
                    "shifted_value": 12,
                    "translated_value": 1
                }
            },
            "called": [
                "FUN_08004cce"
            ],
            "calling": [
                "FUN_08004a4c"
            ],
            "code": "\nuint map_pin_to_uint_0800492c(undefined4 pin,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int result;\n  uint shifted_result;\n  \n  result = pinmap_function(pin,&DAT_08007400,param_3,param_4,param_4);\n  shifted_result = (uint)(result << 0xc) >> 0x1b;\n  if (0x10 < shifted_result - 1) {\n    shifted_result = 0;\n  }\n  return shifted_result;\n}\n\n",
            "current_name": "map_pin_to_uint_0800492c",
            "entrypoint": "0x0800492c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800492c": "map_pin_to_uint_0800492c",
                "iVar1": "result",
                "param_1": "pin",
                "uVar2": "shifted_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004948": {
            "additional_data": {
                "FUN_08004948": {
                    "analyze_pinmap": 1,
                    "check_pin": 1,
                    "check_pinmap": 2,
                    "evaluate_pinmap": 1,
                    "get_pinmap_value": 1,
                    "get_result_status": 1,
                    "map_pin_function": 1,
                    "map_pin_to_code": 1,
                    "map_pin_to_value": 2,
                    "pinmap_analysis": 1,
                    "pinmap_check": 7,
                    "pinmap_function_result": 3,
                    "pinmap_function_wrapper": 3,
                    "pinmap_info": 1,
                    "pinmap_lookup": 1,
                    "pinmap_processing": 1,
                    "pinmap_reversed": 1,
                    "pinmap_to_value": 1,
                    "pinmap_verification": 1
                },
                "FUN_08004cce": {
                    "get_pinmap_value": 1
                },
                "iVar1": {
                    "pin_result": 1,
                    "pinmap_func_result": 2,
                    "pinmap_result": 5,
                    "result": 22,
                    "return_value": 1
                },
                "param_1": {
                    "arg1": 1,
                    "device": 4,
                    "device_id": 1,
                    "input1": 1,
                    "input_1": 1,
                    "input_param": 9,
                    "input_param1": 1,
                    "input_param_1": 3,
                    "input_value": 1,
                    "pin": 6,
                    "pin_value": 1,
                    "value": 1,
                    "value1": 1
                },
                "param_2": {
                    "arg2": 1,
                    "ignored_param": 1,
                    "input1": 1,
                    "input2": 1,
                    "input_2": 1,
                    "input_param2": 1,
                    "input_param_2": 2,
                    "param2": 2,
                    "param_2": 7,
                    "pin": 1,
                    "pinmap_data_1": 1,
                    "some_param": 1,
                    "unused_param": 5,
                    "unused_param1": 1,
                    "value2": 1,
                    "value_1": 1
                },
                "param_3": {
                    "arg3": 1,
                    "callback_param": 1,
                    "data1": 1,
                    "data_1": 1,
                    "data_param": 1,
                    "data_param1": 1,
                    "input3": 1,
                    "input_3": 1,
                    "input_param3": 1,
                    "input_param_3": 3,
                    "lookup_array": 1,
                    "map_param": 1,
                    "mapping_param": 1,
                    "param3": 3,
                    "param_3": 8,
                    "pin": 1,
                    "pinmap_data_2": 1,
                    "selector_param1": 1,
                    "value3": 1,
                    "value_2": 1
                },
                "param_4": {
                    "arg4": 1,
                    "callback_param_2": 1,
                    "config_param": 2,
                    "data": 1,
                    "data2": 1,
                    "data_2": 1,
                    "data_param2": 1,
                    "input2": 1,
                    "input4": 1,
                    "input_4": 1,
                    "input_param4": 1,
                    "input_param_4": 3,
                    "param4": 3,
                    "param_4": 8,
                    "pinmap_data_3": 1,
                    "selector_param2": 1,
                    "value4": 1,
                    "value_3": 1,
                    "verification_param": 1
                },
                "uVar2": {
                    "shifted_pin_result": 1,
                    "shifted_result": 18,
                    "shifted_value": 10,
                    "status": 1
                }
            },
            "called": [
                "FUN_08004cce"
            ],
            "calling": [
                "FUN_08004b3c"
            ],
            "code": "\nundefined4 check_pinmap_08004948(undefined4 input_param,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int result;\n  uint shifted_result;\n  \n  result = pinmap_function(input_param,&DAT_080074b4,param_3,param_4,param_4);\n  shifted_result = (uint)(result << 0xc) >> 0x1b;\n  if (shifted_result == 3) {\n    return 8;\n  }\n  if (shifted_result != 4) {\n    if (shifted_result != 2) {\n      return 0;\n    }\n    return 4;\n  }\n  return 0xc;\n}\n\n",
            "current_name": "check_pinmap_08004948",
            "entrypoint": "0x08004948",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004948": "check_pinmap_08004948",
                "iVar1": "result",
                "param_1": "input_param",
                "uVar2": "shifted_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004974": {
            "additional_data": {
                "DAT_20000080": {
                    "data_2": 1,
                    "input_value": 1,
                    "port_config_value": 2,
                    "port_num": 1,
                    "port_settings": 1
                },
                "FUN_08002624": {
                    "bitwise_and": 1,
                    "hal_gpio_init": 1
                },
                "FUN_08004884": {
                    "configure_port_clock": 1,
                    "set_gpio_port_clock": 1
                },
                "FUN_08004974": {
                    "configure_gpio_port": 1,
                    "initialize_gpio": 20,
                    "initialize_gpio_port": 8,
                    "initialize_gpio_port_and_clock": 1,
                    "initialize_gpio_port_clock_and_gpio": 1
                },
                "HAL_GPIO_Init": {
                    "configure_gpio": 3,
                    "initialize_gpio": 5,
                    "initialize_gpio_hal": 1,
                    "initialize_gpio_pin": 1
                },
                "iVar3": {
                    "current_value": 3,
                    "data_value": 4,
                    "gpio_config_value": 1,
                    "gpio_mode": 2,
                    "gpio_port_size": 1,
                    "gpio_port_value": 1,
                    "gpio_size": 3,
                    "gpio_value": 4,
                    "i_var_value": 1,
                    "input_value": 1,
                    "input_value_to_check": 1,
                    "param_value": 1,
                    "pin_config_value": 1,
                    "port_config": 1,
                    "port_data": 1,
                    "port_mode": 2,
                    "port_value": 1,
                    "ptr_value_temp": 1,
                    "value": 1
                },
                "local_10": {
                    "dummy": 1,
                    "gpio_config_pull": 1,
                    "gpio_init_mode": 1,
                    "gpio_pin_pull": 1,
                    "gpio_pin_state": 1,
                    "gpio_pull": 17,
                    "gpio_pull_up_down": 1,
                    "initial_state": 1,
                    "pin_config": 1,
                    "pin_pull": 2,
                    "pin_state": 1,
                    "pull_config": 1,
                    "pull_configuration": 1,
                    "pull_mode": 1
                },
                "local_14": {
                    "gpio_config_mode": 1,
                    "gpio_init_alternate": 1,
                    "gpio_mode": 15,
                    "gpio_pin_mode": 3,
                    "gpio_pin_type": 1,
                    "gpio_speed": 1,
                    "init_mode": 1,
                    "init_value": 1,
                    "pin_mode": 7
                },
                "local_18": {
                    "gpio_config_bitmask": 1,
                    "gpio_init_mask": 1,
                    "gpio_pin": 6,
                    "gpio_pin_mask": 4,
                    "mask": 1,
                    "pin_bit": 1,
                    "pin_bitmask": 2,
                    "pin_mask": 15
                },
                "param_1": {
                    "base_address": 1,
                    "config_data": 1,
                    "data": 2,
                    "data_pointer": 3,
                    "data_ptr": 1,
                    "gpio_address": 1,
                    "gpio_config": 3,
                    "gpio_config_ptr": 2,
                    "gpio_data": 1,
                    "gpio_parameter": 1,
                    "gpio_pin": 1,
                    "gpio_port_address": 1,
                    "gpio_ptr": 1,
                    "gpio_reg": 1,
                    "gpio_register": 1,
                    "gpio_registers": 1,
                    "gpio_values": 1,
                    "input_data": 1,
                    "input_ptr": 1,
                    "pin_config_ptr": 1,
                    "port_address": 2,
                    "port_value": 1,
                    "ptr_i_var": 1,
                    "ptr_value": 1
                },
                "param_2": {
                    "clock": 2,
                    "clock_config": 3,
                    "clock_divisor": 1,
                    "clock_enable": 1,
                    "clock_frequency": 1,
                    "clock_parameter": 1,
                    "clock_selector": 1,
                    "clock_source": 2,
                    "clock_speed": 1,
                    "clock_value": 5,
                    "config_data": 1,
                    "gpio_port_config": 1,
                    "i_var": 1,
                    "input_value": 1,
                    "param": 5,
                    "param2": 1,
                    "param_value": 1,
                    "parameter": 1,
                    "port_config": 1
                },
                "set_GPIO_Port_Clock": {
                    "configure_gpio_port_clock": 6,
                    "configure_port_clock": 2,
                    "set_gpio_port_clock": 1,
                    "set_port_clock": 1
                },
                "uVar1": {
                    "gpio_address": 1,
                    "gpio_clock": 1,
                    "gpio_port": 20,
                    "gpio_port_address": 1,
                    "gpio_port_clock": 2,
                    "gpio_port_config": 1,
                    "gpio_port_pointer": 1,
                    "port": 1,
                    "port_base_address": 1,
                    "port_clock_status": 1,
                    "port_clock_value": 1
                },
                "uVar2": {
                    "clock": 1,
                    "data_value": 1,
                    "gpio_clock": 1,
                    "gpio_clock_value": 1,
                    "gpio_config": 4,
                    "gpio_config_mask": 1,
                    "gpio_config_value": 1,
                    "gpio_flag": 1,
                    "gpio_init_value": 1,
                    "gpio_mask": 1,
                    "gpio_mode": 1,
                    "gpio_port_config": 2,
                    "gpio_port_mask": 1,
                    "gpio_port_state": 2,
                    "gpio_port_updated": 1,
                    "gpio_port_val": 1,
                    "gpio_port_value": 2,
                    "gpio_register": 1,
                    "gpio_value": 2,
                    "new_gpio_port_value": 1,
                    "pin_mask": 1,
                    "port_mask": 1,
                    "port_setting": 1,
                    "port_settings": 1
                }
            },
            "called": [
                "FUN_08004884",
                "FUN_08002624"
            ],
            "calling": [
                "FUN_0800213c"
            ],
            "code": "\n\n\nvoid initialize_gpio_port_and_clock_08004974(int *gpio_config,undefined4 clock_value)\n\n{\n  undefined4 gpio_port;\n  uint gpio_config;\n  int data_value;\n  uint pin_mask;\n  undefined4 gpio_mode;\n  undefined4 gpio_pull;\n  \n  data_value = *gpio_config;\n  if (data_value == 0x40012400) {\n    gpio_config = _DAT_40021018 | 0x200;\n    data_value = 0x200;\n    _DAT_40021018 = gpio_config;\n  }\n  else {\n    gpio_config = 0x40012800;\n    if (data_value == 0x40012800) {\n      gpio_config = _DAT_40021018 | 0x400;\n      data_value = 0x400;\n      _DAT_40021018 = gpio_config;\n    }\n  }\n  gpio_port = configure_gpio_port_clock((uint)((int)(char)DAT_20000080 << 0x18) >> 0x1c,clock_value,gpio_config,data_value);\n  pin_mask = 1 << (DAT_20000080 & 0xf) & 0xffff;\n  gpio_mode = 3;\n  gpio_pull = 0;\n  initialize_gpio(gpio_port,&pin_mask);\n  return;\n}\n\n",
            "current_name": "initialize_gpio_port_and_clock_08004974",
            "entrypoint": "0x08004974",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004974": "initialize_gpio_port_and_clock_08004974",
                "HAL_GPIO_Init": "initialize_gpio",
                "iVar3": "data_value",
                "local_10": "gpio_pull",
                "local_14": "gpio_mode",
                "local_18": "pin_mask",
                "param_1": "gpio_config",
                "param_2": "clock_value",
                "set_GPIO_Port_Clock": "configure_gpio_port_clock",
                "uVar1": "gpio_port",
                "uVar2": "gpio_config"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080049f0": {
            "additional_data": {
                "0x40012400": {
                    "constant1": 1
                },
                "0x40012800": {
                    "constant2": 1
                },
                "FUN_080049f0": {
                    "set_controller_permissions": 1,
                    "toggle_flags": 1,
                    "update_configuration": 2,
                    "update_control_registers": 7,
                    "update_flags": 2,
                    "update_flags_based_on_value": 1,
                    "update_memory_access_permissions": 2,
                    "update_memory_protection": 3,
                    "update_memory_settings": 1,
                    "update_register": 1,
                    "update_register_settings": 1,
                    "update_register_values": 3,
                    "update_registers": 2,
                    "update_settings": 2,
                    "update_status_register": 1
                },
                "PTR_080049f00": {
                    "memory_address1": 1
                },
                "PTR_080049f04": {
                    "memory_address2": 1
                },
                "_DAT_4002100c": {
                    "control_reg1": 1,
                    "control_register1": 5,
                    "data_register1": 1,
                    "data_register_a": 1,
                    "flag1": 1,
                    "memory_protection_register1": 1,
                    "register0": 1,
                    "register1": 10,
                    "register_1": 1,
                    "register_setting1": 1,
                    "register_value_1": 1,
                    "status_register_field1": 1,
                    "value1": 1
                },
                "_DAT_40021018": {
                    "control_reg2": 1,
                    "control_register2": 5,
                    "data_register2": 1,
                    "data_register_b": 1,
                    "flag2": 1,
                    "memory_protection_register2": 1,
                    "register1": 1,
                    "register2": 10,
                    "register_2": 1,
                    "register_setting2": 1,
                    "register_value_2": 1,
                    "status_register_field2": 1,
                    "value2": 1
                },
                "param_1": {
                    "address": 2,
                    "config": 1,
                    "config_value": 1,
                    "control_register": 3,
                    "control_value": 1,
                    "controller_address": 1,
                    "data_ptr": 1,
                    "flag_ptr": 1,
                    "input": 2,
                    "memory_address": 2,
                    "memory_pointer": 1,
                    "memory_value": 1,
                    "param": 1,
                    "register_value": 6,
                    "settings": 2,
                    "status_register": 1,
                    "value": 1
                },
                "param_1_original": {
                    "register_value_original": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800224c"
            ],
            "code": "\n\n\nvoid update_control_registers_080049f0(int *register_value)\n\n{\n  if (*register_value != 0x40012400) {\n    if (*register_value == 0x40012800) {\n      _DAT_4002100c = _DAT_4002100c & 0xfffffbff;\n      _DAT_40021018 = _DAT_40021018 & 0xfffffbff;\n    }\n    return;\n  }\n  _DAT_4002100c = _DAT_4002100c & 0xfffffdff;\n  _DAT_40021018 = _DAT_40021018 & 0xfffffdff;\n  return;\n}\n\n",
            "current_name": "update_control_registers_080049f0",
            "entrypoint": "0x080049f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080049f0": "update_control_registers_080049f0",
                "param_1": "register_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004a4c": {
            "additional_data": {
                "DAT_08007400": {
                    "peripheral_data": 1,
                    "peripheral_data_2": 1,
                    "pin_description": 1
                },
                "DAT_20000080": {
                    "adc_device_address": 1,
                    "adc_param": 2,
                    "adc_param_1": 1,
                    "adc_periph_addr": 1,
                    "adc_peripheral": 2,
                    "adc_pin": 1,
                    "gpio_port": 1,
                    "param_1_value": 1,
                    "peripheral_address": 1,
                    "peripheral_data_1": 1,
                    "peripheral_value": 4,
                    "pin_map": 1
                },
                "FUN_08001cd0": {
                    "hal_adc_config_channel": 1,
                    "hal_adc_ex_calibration_start": 3
                },
                "FUN_08001e40": {
                    "get_adc_channel": 3,
                    "hal_adc_init": 1
                },
                "FUN_08001e48": {
                    "hal_adc_poll_for_conversion": 3,
                    "hal_adc_start": 1
                },
                "FUN_08001f80": {
                    "hal_adc_de_init": 1,
                    "memset": 3
                },
                "FUN_08002004": {
                    "hal_adc_de_init": 3,
                    "hal_adc_stop": 1
                },
                "FUN_0800213c": {
                    "pinmap_peripheral": 4
                },
                "FUN_0800224c": {
                    "hal_adc_ex_calibration_start": 1,
                    "hal_adc_start": 3
                },
                "FUN_08002348": {
                    "hal_adc_get_value": 1,
                    "hal_adc_stop": 3
                },
                "FUN_08002384": {
                    "get_adc_channel": 1,
                    "hal_adc_config_channel": 3
                },
                "FUN_0800492c": {
                    "hal_adc_get_state": 3,
                    "hal_adc_poll_for_conversion": 1
                },
                "FUN_08004a4c": {
                    "get_adc_value": 2,
                    "measure_adc_value": 2,
                    "perform_adc_measurement": 1,
                    "perform_adc_read": 1,
                    "read_adc_value": 23,
                    "read_analog_input": 1,
                    "read_analog_pin": 1
                },
                "FUN_08004c78": {
                    "hal_adc_get_state": 1,
                    "hal_adc_get_value": 3
                },
                "FUN_080061e0": {
                    "hal_adc_init": 3,
                    "memset": 1
                },
                "HAL_ADCEx_Calibration_Start": {
                    "start_adc_calibration": 5,
                    "start_calibration": 1
                },
                "HAL_ADC_ConfigChannel": {
                    "config_adc_channel": 1,
                    "configure_adc_channel": 4,
                    "configure_channel": 1
                },
                "HAL_ADC_DeInit": {
                    "deinitialize_adc": 5,
                    "deinitialize_adc_device": 1
                },
                "HAL_ADC_GetState": {
                    "get_adc_state": 5,
                    "get_state": 1
                },
                "HAL_ADC_GetValue": {
                    "get_adc_value": 4,
                    "get_value": 1,
                    "read_adc_raw_value": 1
                },
                "HAL_ADC_Init": {
                    "initialize_adc": 5,
                    "initialize_adc_device": 1
                },
                "HAL_ADC_PollForConversion": {
                    "poll_adc_conversion": 5,
                    "poll_conversion": 1
                },
                "HAL_ADC_Start": {
                    "start_adc": 1,
                    "start_adc_conversion": 4,
                    "start_conversion": 1
                },
                "HAL_ADC_Stop": {
                    "stop_adc": 1,
                    "stop_adc_conversion": 4,
                    "stop_conversion": 1
                },
                "get_adc_channel": {
                    "get_adc_channel": 3,
                    "get_channel": 1,
                    "select_adc_channel": 1
                },
                "iVar1": {
                    "adc_initialization_status": 1,
                    "adc_status": 1,
                    "error_check": 1,
                    "error_code": 1,
                    "hal_status": 1,
                    "init_status": 1,
                    "result": 9,
                    "status": 5
                },
                "local_10": {
                    "adc_config": 1,
                    "adc_config_10": 1,
                    "adc_config_9": 1,
                    "adc_configuration_10": 1,
                    "adc_continuous_mode": 1,
                    "adc_conversion_config": 1,
                    "adc_data_rate": 1,
                    "adc_delay": 1,
                    "adc_dma_access_mode": 1,
                    "adc_eoc_selection": 1,
                    "adc_gpio_config": 1,
                    "adc_init": 1,
                    "adc_init_struct5": 1,
                    "adc_interrupt": 1,
                    "adc_norev": 1,
                    "adc_resolution": 1,
                    "adc_start": 1,
                    "adc_stop_status": 1,
                    "channel_max": 1,
                    "config_8": 2,
                    "conversion_timeout": 1,
                    "dummy_var": 1,
                    "gpio_mode": 1,
                    "init_result": 1,
                    "param_8": 1,
                    "poll_param": 1,
                    "reserved": 1,
                    "stop_param": 1,
                    "stop_status": 1
                },
                "local_1c": {
                    "adc_calibration_factor": 1,
                    "adc_calibration_value": 1,
                    "adc_change_channel": 1,
                    "adc_config": 1,
                    "adc_config_8": 1,
                    "adc_config_9": 1,
                    "adc_configuration_9": 1,
                    "adc_conversion_status": 1,
                    "adc_dma": 1,
                    "adc_dual_mode": 1,
                    "adc_external_trigger": 1,
                    "adc_init_struct4": 1,
                    "adc_prescaler": 3,
                    "adc_sync_config": 1,
                    "adc_timeout": 1,
                    "adc_vrefint": 1,
                    "calibration_timeout": 1,
                    "channel_min": 1,
                    "channel_param": 1,
                    "config_7": 2,
                    "conversion_frequency": 1,
                    "dummy_value": 1,
                    "gpio_pin": 1,
                    "param_7": 1,
                    "peripheral_base": 1,
                    "state_param": 1,
                    "system_core_clock": 1
                },
                "local_20": {
                    "adc_calibration": 1,
                    "adc_clock": 1,
                    "adc_config_7": 1,
                    "adc_config_8": 1,
                    "adc_configuration_8": 1,
                    "adc_data_alignment_config": 1,
                    "adc_dma": 2,
                    "adc_external_trigger": 1,
                    "adc_flag": 1,
                    "adc_init_struct3": 1,
                    "adc_interrupts": 1,
                    "adc_resolution": 1,
                    "adc_result": 1,
                    "adc_sample_time": 1,
                    "adc_sampling_time": 1,
                    "adc_scan_conv_mode": 1,
                    "adc_state": 2,
                    "adc_stop": 1,
                    "adc_synchronous": 1,
                    "adc_value_status": 1,
                    "config_10": 1,
                    "config_6": 1,
                    "conversion_result": 1,
                    "conversion_status": 1,
                    "param_6": 1,
                    "start_param": 1,
                    "stop_result": 1,
                    "value_param": 1
                },
                "local_24": {
                    "adc_channel_rank": 1,
                    "adc_channels_bank_switch": 1,
                    "adc_config_6": 1,
                    "adc_config_7": 1,
                    "adc_config_channel_high": 1,
                    "adc_configuration_7": 1,
                    "adc_continuous_conversion": 1,
                    "adc_data_prescaler": 1,
                    "adc_get_value": 1,
                    "adc_init_struct2": 1,
                    "adc_poll": 1,
                    "adc_poll_status": 1,
                    "adc_prescaler": 1,
                    "adc_reference_value": 1,
                    "adc_resolution": 1,
                    "adc_resolution_cfg": 1,
                    "adc_sampling_time": 1,
                    "adc_state": 1,
                    "calibration_param1": 1,
                    "config_5": 1,
                    "config_6": 1,
                    "param_5": 1,
                    "poll_conversion_result": 1,
                    "poll_result": 2,
                    "polling_delay": 1,
                    "rank_channel": 1,
                    "start_param": 1,
                    "state": 1,
                    "watchdog_flag": 1
                },
                "local_28": {
                    "adc_channels": 1,
                    "adc_config_6": 1,
                    "adc_configuration_6": 1,
                    "adc_continuous_conv_mode": 1,
                    "adc_continuous_conversion": 1,
                    "adc_data_align": 1,
                    "adc_dma": 1,
                    "adc_ext_trigger": 1,
                    "adc_get_state": 1,
                    "adc_init": 1,
                    "adc_n_channels": 1,
                    "adc_poll_state": 1,
                    "adc_prescaler": 1,
                    "adc_resolution": 1,
                    "adc_scan_mode": 1,
                    "adc_state": 2,
                    "alignment_config": 1,
                    "calibration_factor": 1,
                    "config_4": 1,
                    "config_9": 1,
                    "conversion_settings": 1,
                    "conversion_timeout": 1,
                    "enable_watchdog": 1,
                    "init_param4": 1,
                    "param_4": 1,
                    "poll_status": 1,
                    "start_result": 1,
                    "state_param": 1
                },
                "local_2c": {
                    "adc_analog_watchdog": 1,
                    "adc_calibration_struct": 1,
                    "adc_config_5": 2,
                    "adc_config_channel_low": 1,
                    "adc_configuration_5": 1,
                    "adc_data_alignment": 1,
                    "adc_discontinuous_conv_mode": 1,
                    "adc_dma": 1,
                    "adc_dma_mode": 1,
                    "adc_error_code": 1,
                    "adc_init_value": 1,
                    "adc_mode": 1,
                    "adc_poll": 1,
                    "adc_sampling_c_sampling_config": 1,
                    "adc_state": 1,
                    "cal_param3": 1,
                    "calibration_factor_linear": 1,
                    "calibration_result": 1,
                    "config_3": 1,
                    "config_5": 1,
                    "conversion_value": 1,
                    "hal_settings": 1,
                    "init_param3": 1,
                    "param_3": 1,
                    "poll_for_conversion_status": 1,
                    "poll_result": 1,
                    "poll_status": 1,
                    "start_status": 1,
                    "timeout": 1
                },
                "local_30": {
                    "adc_calibration_high": 1,
                    "adc_calibration_value": 1,
                    "adc_channel_config": 1,
                    "adc_config_4": 2,
                    "adc_configuration_4": 1,
                    "adc_conversion": 1,
                    "adc_dma": 1,
                    "adc_dma_continuous": 1,
                    "adc_normal_conv_mode": 1,
                    "adc_pre_sampling_c_sampling_config": 1,
                    "adc_prescaler": 1,
                    "adc_resolution": 1,
                    "adc_synchronization": 1,
                    "adc_trigger": 1,
                    "cal_param2": 1,
                    "calibration": 1,
                    "calibration_factor": 1,
                    "calibration_settings": 1,
                    "calibration_status": 1,
                    "config_2": 1,
                    "config_4": 1,
                    "config_result": 1,
                    "conversion_status": 1,
                    "conversion_value": 1,
                    "converted_value": 1,
                    "init_param2": 1,
                    "max_watchdog_timeout": 1,
                    "param_2": 1,
                    "start_status": 1
                },
                "local_34": {
                    "adc_calibration_low": 1,
                    "adc_calibration_type": 1,
                    "adc_clock_prescaler": 1,
                    "adc_config": 1,
                    "adc_config_3": 2,
                    "adc_configuration_3": 1,
                    "adc_gain": 1,
                    "adc_init_struct": 1,
                    "adc_state": 1,
                    "adc_trigger": 6,
                    "cal_param1": 1,
                    "calibration_status": 2,
                    "calibration_value": 3,
                    "channel_settings": 1,
                    "config_1": 1,
                    "config_3": 1,
                    "conversion_status": 1,
                    "init_param1": 1,
                    "init_result": 1,
                    "max_watchdog": 1,
                    "param_1": 1
                },
                "local_38": {
                    "adc_handle": 28,
                    "adc_handler": 1,
                    "peripheral_info": 1,
                    "pin_map": 1
                },
                "local_3c": {
                    "adc_calibration": 2,
                    "adc_channel_config": 1,
                    "adc_config_2": 2,
                    "adc_config_high": 1,
                    "adc_config_rank": 1,
                    "adc_config_status": 1,
                    "adc_configuration_2": 1,
                    "adc_data_align": 1,
                    "adc_data_alignment": 8,
                    "adc_rank": 1,
                    "adc_resolution": 1,
                    "calibration_result": 1,
                    "calibration_status": 2,
                    "config_2": 1,
                    "config_param2": 2,
                    "config_param_2": 1,
                    "config_rank": 1,
                    "config_value_2": 1,
                    "data_alignment": 1,
                    "sampling_time": 1
                },
                "local_40": {
                    "adc_channel_config": 1,
                    "adc_config": 6,
                    "adc_config_1": 2,
                    "adc_config_low": 1,
                    "adc_configuration_1": 1,
                    "adc_init_status": 1,
                    "adc_resolution": 9,
                    "config_1": 1,
                    "config_flag": 1,
                    "config_param1": 2,
                    "config_param_1": 1,
                    "config_result": 1,
                    "config_status": 1,
                    "config_value_1": 1,
                    "continuous_conversion": 1,
                    "resolution": 1
                },
                "local_44": {
                    "adc_channel": 23,
                    "channel": 8
                },
                "local_46": {
                    "adc_value": 29,
                    "analog_value": 2
                },
                "memset": {
                    "clear_memory": 1,
                    "initialize_memory": 1,
                    "initialize_variables": 1
                },
                "param_1": {
                    "peripheral": 1,
                    "peripheral_address": 11,
                    "peripheral_id": 5,
                    "peripheral_pin": 3,
                    "pin": 5,
                    "pin_number": 6
                },
                "pinmap_peripheral": {
                    "get_pin_map": 1,
                    "map_gpio_pin_to_adc_peripheral": 1
                },
                "uVar2": {
                    "adc_state": 14,
                    "adc_state_flags": 1,
                    "state": 2
                }
            },
            "called": [
                "FUN_0800213c",
                "FUN_080061e0",
                "FUN_08001e40",
                "FUN_08002384",
                "FUN_08001cd0",
                "FUN_0800224c",
                "FUN_08001e48",
                "FUN_0800492c",
                "FUN_08004c78",
                "FUN_08002348",
                "FUN_08002004",
                "FUN_08001f80"
            ],
            "calling": [
                "FUN_08005754"
            ],
            "code": "\nundefined2 read_adc_value_08004a4c(undefined4 peripheral_address)\n\n{\n  int result;\n  uint adc_state;\n  undefined2 adc_value;\n  uint adc_channel;\n  undefined4 adc_resolution;\n  undefined4 adc_data_alignment;\n  int adc_handle;\n  undefined4 adc_trigger;\n  undefined4 adc_config_4;\n  undefined4 adc_config_5;\n  undefined4 adc_state;\n  undefined4 poll_result;\n  undefined4 adc_dma;\n  undefined4 adc_prescaler;\n  undefined4 config_8;\n  \n  clear_memory(&adc_handle,0,0x30);\n  adc_channel = 0;\n  adc_resolution = 0;\n  adc_data_alignment = 0;\n  adc_value = 0;\n  adc_handle = map_gpio_pin_to_adc_peripheral(peripheral_address,&DAT_08007400);\n  if (adc_handle == 0) {\n    adc_value = 0;\n  }\n  else {\n    adc_trigger = 0;\n    adc_config_4 = 0;\n    adc_config_5 = 0;\n    poll_result = 0;\n    adc_prescaler = 0xe0000;\n    config_8 = 0;\n    adc_state = 1;\n    adc_dma = 0;\n    DAT_20000080 = (undefined)peripheral_address;\n    result = initialize_adc(&adc_handle);\n    if (result == 0) {\n      adc_channel = get_adc_channel(peripheral_address);\n      if (adc_channel < 0x12) {\n        adc_resolution = 1;\n        adc_data_alignment = 2;\n        result = configure_adc_channel(&adc_handle,&adc_channel);\n        if (result == 0) {\n          result = start_adc_calibration(&adc_handle);\n          if (result == 0) {\n            result = start_adc_conversion(&adc_handle);\n            if (result == 0) {\n              result = poll_adc_conversion(&adc_handle,10);\n              if (result == 0) {\n                adc_state = get_adc_state(&adc_handle);\n                if ((adc_state & 0x200) != 0) {\n                  adc_value = get_adc_value(&adc_handle);\n                }\n                result = stop_adc_conversion(&adc_handle);\n                if (result == 0) {\n                  result = deinitialize_adc(&adc_handle);\n                  if (result != 0) {\n                    adc_value = 0;\n                  }\n                }\n                else {\n                  adc_value = 0;\n                }\n              }\n              else {\n                adc_value = 0;\n              }\n            }\n            else {\n              adc_value = 0;\n            }\n          }\n          else {\n            adc_value = 0;\n          }\n        }\n        else {\n          adc_value = 0;\n        }\n      }\n      else {\n        adc_value = 0;\n      }\n    }\n    else {\n      adc_value = 0;\n    }\n  }\n  return adc_value;\n}\n\n",
            "current_name": "read_adc_value_08004a4c",
            "entrypoint": "0x08004a4c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004a4c": "read_adc_value_08004a4c",
                "HAL_ADCEx_Calibration_Start": "start_adc_calibration",
                "HAL_ADC_ConfigChannel": "configure_adc_channel",
                "HAL_ADC_DeInit": "deinitialize_adc",
                "HAL_ADC_GetState": "get_adc_state",
                "HAL_ADC_GetValue": "get_adc_value",
                "HAL_ADC_Init": "initialize_adc",
                "HAL_ADC_PollForConversion": "poll_adc_conversion",
                "HAL_ADC_Start": "start_adc_conversion",
                "HAL_ADC_Stop": "stop_adc_conversion",
                "iVar1": "result",
                "local_10": "config_8",
                "local_1c": "adc_prescaler",
                "local_20": "adc_dma",
                "local_24": "poll_result",
                "local_28": "adc_state",
                "local_2c": "adc_config_5",
                "local_30": "adc_config_4",
                "local_34": "adc_trigger",
                "local_38": "adc_handle",
                "local_3c": "adc_data_alignment",
                "local_40": "adc_resolution",
                "local_44": "adc_channel",
                "local_46": "adc_value",
                "memset": "clear_memory",
                "param_1": "peripheral_address",
                "pinmap_peripheral": "map_gpio_pin_to_adc_peripheral",
                "uVar2": "adc_state"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004b34": {
            "additional_data": {
                "FUN_08004b34": {
                    "disable_timer": 4,
                    "disable_timer_clock": 27
                },
                "FUN_08004d90": {
                    "process_data": 8,
                    "process_input_data": 1,
                    "process_int_param": 1,
                    "process_integer": 1,
                    "process_integer_array": 1,
                    "process_param_1": 2,
                    "process_param_one": 1,
                    "process_parameter": 3,
                    "process_parameters": 1,
                    "process_timer_data": 1,
                    "update_param_1": 1,
                    "update_parameter": 5,
                    "update_timer_info": 1
                },
                "param_1": {
                    "array": 1,
                    "data": 2,
                    "data_array": 2,
                    "data_ptr": 1,
                    "input_data": 1,
                    "int_array": 1,
                    "parameter": 2,
                    "timer_data": 1,
                    "timer_info": 1
                },
                "timer_disable_clock": {
                    "disable_clock": 1
                }
            },
            "called": [
                "FUN_08004d90"
            ],
            "calling": [
                "FUN_08003ed8"
            ],
            "code": "\nvoid disable_timer_clock_08004b34(void)\n\n{\n  disable_clock();\n  return;\n}\n\n",
            "current_name": "disable_timer_clock_08004b34",
            "entrypoint": "0x08004b34",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004b34": "disable_timer_clock_08004b34",
                "timer_disable_clock": "disable_clock"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004b3c": {
            "additional_data": {
                "DAT_080074b4": {
                    "peripheral_mapping": 1,
                    "pin_peripheral_data": 1
                },
                "FUN_08003ed8": {
                    "hal_tim_pwm_de_init": 2
                },
                "FUN_080040b0": {
                    "pinmap_function": 2
                },
                "FUN_0800412c": {
                    "pinmap_peripheral": 3
                },
                "FUN_08004948": {
                    "get_pwm_channel": 3
                },
                "FUN_08004b3c": {
                    "disable_pwm": 1,
                    "disable_pwm_channel": 1,
                    "stop_and_deinit_pwm": 1,
                    "stop_and_deinitialize_pwm": 1,
                    "stop_pwm": 14,
                    "stop_pwm_channel": 4,
                    "stop_pwm_if_invalid_channel": 1,
                    "stop_pwm_if_valid_channel": 1,
                    "stop_pwm_if_valid_peripheral_and_channel": 1,
                    "stop_pwm_if_valid_pin_and_channel": 1,
                    "stop_pwm_output": 1,
                    "stop_pwm_peripheral": 2,
                    "stop_pwm_timers": 1,
                    "stop_timers": 1
                },
                "FUN_08004c78": {
                    "hal_tim_ex_pwmn_stop": 2
                },
                "FUN_08004cce": {
                    "hal_tim_pwm_stop": 2
                },
                "HAL_TIMEx_PWMN_Stop": {
                    "stop_pwm_ex": 2,
                    "stop_pwmn_channel": 1,
                    "stop_tim_ex_pwmn": 1
                },
                "HAL_TIM_PWM_DeInit": {
                    "deinit_pwm": 1,
                    "deinit_pwm_channel": 1,
                    "deinitialize_pwm": 1,
                    "deinitialize_tim_pwm": 1
                },
                "HAL_TIM_PWM_Stop": {
                    "stop_pwm": 2,
                    "stop_pwm_channel": 1,
                    "stop_tim_pwm": 1
                },
                "get_pwm_channel": {
                    "get_pwm_channel": 2,
                    "retrieve_pwm_channel": 1
                },
                "iVar1": {
                    "channel": 5,
                    "pwm_channel": 13,
                    "pwm_channel_value": 2
                },
                "local_50": {
                    "handle_list": 1,
                    "peripheral": 1,
                    "peripheral_array": 4,
                    "peripheral_config": 1,
                    "peripheral_handles": 1,
                    "peripherals": 2,
                    "pin_config": 1,
                    "pwm_array": 3,
                    "pwm_channel": 1,
                    "pwm_channel_array": 1,
                    "pwm_channel_info": 1,
                    "pwm_channels": 6,
                    "pwm_handle": 2,
                    "pwm_handles": 1,
                    "pwm_instance": 1,
                    "timer_array": 1,
                    "timer_handle": 1,
                    "timer_handles": 1,
                    "timers": 1
                },
                "param_1": {
                    "device": 4,
                    "device_address": 1,
                    "device_handle": 1,
                    "handle": 1,
                    "input": 1,
                    "input_param": 1,
                    "peripheral": 10,
                    "peripheral_address": 5,
                    "peripheral_ptr": 1,
                    "pin": 2,
                    "pinmap": 1,
                    "port": 1,
                    "timer": 1,
                    "timer_instance": 1
                },
                "pinmap_function": {
                    "get_function_from_pin": 1,
                    "map_function": 1
                },
                "pinmap_peripheral": {
                    "get_peripheral_from_pin": 1,
                    "map_peripheral": 1,
                    "map_peripheral_to_pin": 1
                },
                "uVar2": {
                    "function": 2,
                    "function_data": 1,
                    "function_id": 1,
                    "function_mapping": 2,
                    "function_pin": 3,
                    "function_pin_map": 1,
                    "function_pinmap": 3,
                    "function_result": 3,
                    "function_value": 2,
                    "pin_function": 2
                }
            },
            "called": [
                "FUN_0800412c",
                "FUN_08004948",
                "FUN_080040b0",
                "FUN_08004cce",
                "FUN_08004c78",
                "FUN_08003ed8"
            ],
            "calling": [
                "FUN_080057b4"
            ],
            "code": "\nvoid stop_pwm_if_valid_peripheral_and_channel_08004b3c(undefined4 peripheral)\n\n{\n  int pwm_channel;\n  uint function_result;\n  int pwm_channels [17];\n  \n  pwm_channels[0] = get_peripheral_from_pin(peripheral,&DAT_080074b4);\n  if ((pwm_channels[0] != 0) &&\n     ((((pwm_channel = get_pwm_channel(peripheral), pwm_channel == 0 || (pwm_channel == 4)) || (pwm_channel == 8)) ||\n      ((pwm_channel == 0xc || (pwm_channel == 0x18)))))) {\n    function_result = get_function_from_pin(peripheral,&DAT_080074b4);\n    if ((function_result & 0x100000) == 0) {\n      stop_pwm(pwm_channels,pwm_channel);\n    }\n    else {\n      stop_pwm_ex(pwm_channels,pwm_channel);\n    }\n    deinitialize_pwm(pwm_channels);\n  }\n  return;\n}\n\n",
            "current_name": "stop_pwm_if_valid_peripheral_and_channel_08004b3c",
            "entrypoint": "0x08004b3c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004b3c": "stop_pwm_if_valid_peripheral_and_channel_08004b3c",
                "HAL_TIMEx_PWMN_Stop": "stop_pwm_ex",
                "HAL_TIM_PWM_DeInit": "deinitialize_pwm",
                "HAL_TIM_PWM_Stop": "stop_pwm",
                "iVar1": "pwm_channel",
                "local_50": "pwm_channels",
                "param_1": "peripheral",
                "pinmap_function": "get_function_from_pin",
                "pinmap_peripheral": "get_peripheral_from_pin",
                "uVar2": "function_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004b94": {
            "additional_data": {
                "FUN_08001cc4": {
                    "fetch_data": 1,
                    "get_initial_value": 1,
                    "get_magic_value": 1,
                    "get_some_value": 2,
                    "get_specific_value": 1,
                    "get_system_info": 1,
                    "get_tick_value": 1,
                    "get_timer_value": 1,
                    "initialize": 1,
                    "initialize_hardware": 1,
                    "initialize_system": 10,
                    "initialize_system_timer": 1,
                    "retrieve_data": 4,
                    "retrieve_subfunction_result": 1
                },
                "FUN_08004b94": {
                    "get_current_tick": 13,
                    "get_current_ticks": 1,
                    "get_current_time": 12,
                    "get_elapsed_time": 1,
                    "get_system_tick": 2,
                    "get_system_time": 1,
                    "get_ticks": 1
                },
                "HAL_GetTick": {
                    "current_tick": 1,
                    "get_current_tick": 1,
                    "get_system_tick": 1,
                    "get_tick_count": 1
                }
            },
            "called": [
                "FUN_08001cc4"
            ],
            "calling": [
                "FUN_080058e0"
            ],
            "code": "\nvoid get_current_tick_08004b94(void)\n\n{\n  get_tick_count();\n  return;\n}\n\n",
            "current_name": "get_current_tick_08004b94",
            "entrypoint": "0x08004b94",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004b94": "get_current_tick_08004b94",
                "HAL_GetTick": "get_tick_count"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004b9c": {
            "called": [],
            "calling": [
                "FUN_08004b9e"
            ],
            "code": "\nvoid FUNC_08004b9c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08004b9c",
            "entrypoint": "0x08004b9c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08004b9c": "FUNC_08004b9c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08004b9e": {
            "additional_data": {
                "FUNC_08004b9c": {
                    "execute": 1,
                    "execute_task": 1,
                    "function_b": 1,
                    "handle_func": 1,
                    "handle_sys_tick_interrupt": 3,
                    "handle_sys_tick_irq": 4,
                    "handle_system_tick": 3,
                    "handle_system_tick_interrupt": 1,
                    "handle_systick": 1,
                    "handle_systick_interrupt": 1,
                    "helper_function2": 1,
                    "increment_tick": 1,
                    "perform_operation2": 1,
                    "perform_task2": 1,
                    "perform_task_b": 1,
                    "reverse_order": 1,
                    "system_tick_irq_handler": 1
                },
                "FUN_08001cac": {
                    "cleanup": 1,
                    "execute_no_os_systick_handler": 1,
                    "function_c": 1,
                    "handle_another_func": 1,
                    "handle_event": 1,
                    "handle_no_os_sys_tick": 1,
                    "handle_no_os_sys_tick_interrupt": 1,
                    "handle_no_os_systick": 4,
                    "helper_function3": 1,
                    "no_os_systick_handler": 6,
                    "perform_action": 1,
                    "perform_operation3": 1,
                    "perform_task3": 1,
                    "perform_task_c": 1,
                    "process_no_os_systick_handler": 1
                },
                "FUN_08002582": {
                    "function_a": 1,
                    "handle_sys_tick_interrupt": 1,
                    "handle_system_tick": 1,
                    "handle_tick": 1,
                    "helper_function1": 1,
                    "increment_system_tick": 2,
                    "increment_tick": 1,
                    "initialize": 4,
                    "initialize_hal": 1,
                    "initialize_peripheral": 1,
                    "initialize_system": 1,
                    "initialize_system_tick": 1,
                    "initialize_tick": 3,
                    "perform_initialization": 1,
                    "perform_operation1": 1,
                    "perform_task1": 2,
                    "perform_task_a": 1
                },
                "FUN_08004b9e": {
                    "handle_sys_tick_interrupt": 2,
                    "handle_system_tick": 9,
                    "handle_system_tick_interrupt": 1,
                    "handle_systick": 1,
                    "handle_systick_interrupt": 1,
                    "handle_tick_interrupt": 3,
                    "initialize_system_tick": 1,
                    "update_system_tick": 11,
                    "update_tick_and_handlers": 1,
                    "update_tick_handler": 1
                },
                "HAL_IncTick": {
                    "increment_system_tick": 10,
                    "increment_tick": 8
                },
                "HAL_SYSTICK_IRQHandler": {
                    "handle_sys_tick": 1,
                    "handle_sys_tick_interrupt": 10,
                    "handle_sys_tick_irq": 2,
                    "handle_system_tick_interrupt": 2,
                    "handle_systick_interrupt": 1,
                    "handle_systick_irq": 1,
                    "system_tick_handler": 1
                },
                "noOsSystickHandler": {
                    "custom_sys_tick_handler": 1,
                    "custom_tick_handler": 1,
                    "handle_custom_sys_tick": 1,
                    "handle_custom_systick": 1,
                    "handle_no_os_sys_tick": 8,
                    "handle_no_os_systick": 3,
                    "handle_non_os_sys_tick": 1,
                    "handle_systick_without_os": 1,
                    "perform_systick_handling": 1
                }
            },
            "called": [
                "FUN_08002582",
                "FUN_08004b9c",
                "FUN_08001cac"
            ],
            "calling": [],
            "code": "\nvoid handle_system_tick_interrupt_08004b9e(void)\n\n{\n  increment_system_tick();\n  handle_sys_tick_interrupt();\n  handle_no_os_sys_tick();\n  return;\n}\n\n",
            "current_name": "handle_system_tick_interrupt_08004b9e",
            "entrypoint": "0x08004b9e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004b9e": "handle_system_tick_interrupt_08004b9e",
                "HAL_IncTick": "increment_system_tick",
                "HAL_SYSTICK_IRQHandler": "handle_sys_tick_interrupt",
                "noOsSystickHandler": "handle_no_os_sys_tick"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004bb0": {
            "additional_data": {
                "FUN_08004bb0": {
                    "configure_gpio": 1,
                    "configure_gpio_port": 1,
                    "init_gpio_port": 1,
                    "initialize_gpio": 13,
                    "initialize_gpio_pin": 1,
                    "initialize_gpio_port": 14
                },
                "HAL_GPIO_Init": {
                    "configure_gpio_port": 1,
                    "gpio_initialization": 1,
                    "initialize_gpio": 1,
                    "initialize_gpio_function": 1
                },
                "_DAT_40010004": {
                    "data_register": 1,
                    "gpio_af": 1,
                    "gpio_config_register": 1,
                    "gpio_init_register": 1,
                    "gpio_port_register2": 1,
                    "gpio_register2": 2,
                    "register2": 4,
                    "register_2": 2,
                    "register_value2": 1
                },
                "_DAT_40021018": {
                    "gpio_moder": 1,
                    "gpio_port_clock_register": 1,
                    "gpio_port_register": 2,
                    "gpio_port_register1": 1,
                    "gpio_register1": 2,
                    "register1": 4,
                    "register_1": 2,
                    "register_value1": 1
                },
                "local_14": {
                    "constant": 3,
                    "constant_3": 1,
                    "constant_value": 4,
                    "current_pin": 1,
                    "flag": 1,
                    "function_select": 1,
                    "gpio_mode": 1,
                    "local_14": 1,
                    "local_param_1e": 1,
                    "local_var": 5,
                    "local_var14": 1,
                    "local_var3": 3,
                    "local_variable": 5,
                    "local_variable_3": 1,
                    "some_constant": 1,
                    "value": 1
                },
                "local_18": {
                    "config_param2_copy": 1,
                    "configuration_register_2_copy": 1,
                    "local_18": 1,
                    "local_param3": 5,
                    "local_param_1d": 1,
                    "local_param_3": 2,
                    "local_var18": 1,
                    "local_var2": 3,
                    "local_variable_2": 1,
                    "new_param3": 1,
                    "new_param_3": 2,
                    "param3_copy": 7,
                    "param3_init": 1,
                    "param3_new": 1,
                    "param_3_copy": 1,
                    "pin_config_copy": 1,
                    "pupd_param": 1
                },
                "local_1c": {
                    "config_param1_copy": 1,
                    "configuration_register_1_copy": 1,
                    "local_1c": 1,
                    "local_param2": 5,
                    "local_param_1c": 1,
                    "local_param_2": 2,
                    "local_var1": 3,
                    "local_var1c": 1,
                    "local_variable_1": 1,
                    "mode_param": 1,
                    "new_param2": 1,
                    "new_param_2": 2,
                    "param2_copy": 7,
                    "param2_init": 1,
                    "param2_new": 1,
                    "param_2_copy": 1,
                    "pin_mode_copy": 1
                },
                "local_20": {
                    "gpio_config": 1,
                    "gpio_mode": 1,
                    "gpio_pin": 2,
                    "mask": 1,
                    "pin_mask": 25,
                    "pin_position_mask": 1
                },
                "param_1": {
                    "gpio_pin": 2,
                    "pin": 1,
                    "pin_index": 1,
                    "pin_number": 26,
                    "port_number": 1
                },
                "param_2": {
                    "config_param1": 1,
                    "configuration_register_1": 1,
                    "gpio_mode": 1,
                    "init_input_mode": 1,
                    "mode": 1,
                    "param": 1,
                    "param2": 17,
                    "param_2": 4,
                    "parameter_2": 2,
                    "pin_mode": 1,
                    "port_mode": 1
                },
                "param_3": {
                    "config_param2": 1,
                    "configuration_register_2": 1,
                    "gpio_pull": 1,
                    "init_output_mode": 1,
                    "param3": 17,
                    "param_3": 4,
                    "param_mask": 1,
                    "parameter_3": 2,
                    "pin_config": 2,
                    "pupd": 1
                },
                "uVar1": {
                    "clock_setting": 2,
                    "gpio_clock": 4,
                    "gpio_port": 18,
                    "gpio_port_clock": 1,
                    "gpio_type": 1,
                    "port_address": 1,
                    "port_clock": 2,
                    "port_number": 2
                }
            },
            "called": [
                "FUN_08004884",
                "FUN_08002624"
            ],
            "calling": [
                "FUN_080057b4"
            ],
            "code": "\n\n\nvoid initialize_gpio_port_08004bb0(uint pin_number,undefined4 param2,undefined4 param3)\n\n{\n  undefined4 gpio_port;\n  uint pin_mask;\n  undefined4 param2_copy;\n  undefined4 param3_copy;\n  undefined4 local_var;\n  \n  gpio_port = set_GPIO_Port_Clock((pin_number << 0x18) >> 0x1c);\n  pin_mask = 1 << (pin_number & 0xf) & 0xffff;\n  local_var = 3;\n  _DAT_40021018 = _DAT_40021018 | 1;\n  if ((pin_number - 0xd & 0xff) < 2) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n  }\n  if (((pin_number == 0xf) || (pin_number == 0x13)) || (pin_number == 0x14)) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n  }\n  param2_copy = param2;\n  param3_copy = param3;\n  configure_gpio_port(gpio_port,&pin_mask);\n  return;\n}\n\n",
            "current_name": "initialize_gpio_port_08004bb0",
            "entrypoint": "0x08004bb0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004bb0": "initialize_gpio_port_08004bb0",
                "HAL_GPIO_Init": "configure_gpio_port",
                "local_14": "local_var",
                "local_18": "param3_copy",
                "local_1c": "param2_copy",
                "local_20": "pin_mask",
                "param_1": "pin_number",
                "param_2": "param2",
                "param_3": "param3",
                "uVar1": "gpio_port"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004c30": {
            "additional_data": {
                "0": {
                    "pin_reset": 1
                },
                "1": {
                    "pin_set": 1
                },
                "FUN_0800281e": {
                    "another_function": 1,
                    "multiply": 1,
                    "perform_calculation": 1,
                    "perform_operation": 2,
                    "perform_some_operation": 1,
                    "set_gpio_value": 1,
                    "set_pin_mode": 1,
                    "set_pin_state": 1,
                    "some_function": 1,
                    "some_other_function": 1
                },
                "FUN_08004c30": {
                    "gpio_pin_write": 1,
                    "set_gpio_pin_state": 4,
                    "set_gpio_pin_value": 1,
                    "set_gpio_state": 1,
                    "set_pin_state": 3,
                    "toggle_gpio_pin_state": 1,
                    "toggle_gpio_state": 1,
                    "toggle_pin_state": 3,
                    "update_gpio_pin_state": 1,
                    "write_gpio": 1,
                    "write_gpio_value": 1,
                    "write_pin": 3,
                    "write_pin_according_to_param": 1,
                    "write_pin_according_to_param3": 1,
                    "write_pin_based_on_condition": 6,
                    "write_pin_based_on_value": 1,
                    "write_pin_state": 1
                },
                "HAL_GPIO_WritePin": {
                    "set_gpio_state": 1,
                    "set_pin_state": 2,
                    "write_gpio_pin": 3,
                    "write_gpio_state_pin": 1,
                    "write_gpio_status_pin": 1,
                    "write_pin": 7,
                    "write_pin_state": 6
                },
                "param_1": {
                    "gpio_pin": 2,
                    "gpio_port": 18,
                    "port": 10
                },
                "param_2": {
                    "gpio_pin": 14,
                    "pin": 12,
                    "pin_number": 5
                },
                "param_3": {
                    "condition": 6,
                    "condition_flag": 1,
                    "flag": 1,
                    "mode": 1,
                    "pin_state": 5,
                    "pin_value": 2,
                    "state": 12,
                    "state_value": 1,
                    "value": 2
                },
                "param_4": {
                    "arg1": 2,
                    "extra_param": 1,
                    "gpio_handle": 1,
                    "param": 12,
                    "param1": 1,
                    "param4": 2,
                    "param_4": 7,
                    "param_a": 1,
                    "pin_config": 1,
                    "unknown_param": 1,
                    "unused_param": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_0800281e"
            ],
            "calling": [
                "FUN_08005848"
            ],
            "code": "\nvoid write_pin_based_on_condition_08004c30(undefined4 gpio_port,undefined2 gpio_pin,int state,undefined4 param)\n\n{\n  if (state == 0) {\n    write_pin(gpio_port,gpio_pin,0,param,param);\n    return;\n  }\n  write_pin(gpio_port,gpio_pin,1,param,param);\n  return;\n}\n\n",
            "current_name": "write_pin_based_on_condition_08004c30",
            "entrypoint": "0x08004c30",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004c30": "write_pin_based_on_condition_08004c30",
                "HAL_GPIO_WritePin": "write_pin",
                "param_1": "gpio_port",
                "param_2": "gpio_pin",
                "param_3": "state",
                "param_4": "param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004c48": {
            "additional_data": {
                "FUN_08002810": {
                    "calculate_something": 1,
                    "configure_pin": 1,
                    "get_pin_value": 1,
                    "modify_value": 1,
                    "perform_some_operation": 1,
                    "read_gpio": 1,
                    "read_pin": 2,
                    "read_pin_value": 1,
                    "reverse_bits": 3,
                    "some_function": 3
                },
                "FUN_08004c48": {
                    "read_and_return_gpio_state": 1,
                    "read_and_return_pin_state": 1,
                    "read_and_return_pin_value": 2,
                    "read_gpio": 2,
                    "read_gpio_pin": 7,
                    "read_pin": 6,
                    "read_pin_and_return": 1,
                    "read_pin_data": 1,
                    "read_pin_from_gpio": 5,
                    "read_pin_function": 1,
                    "read_pin_status": 2,
                    "read_pin_value": 1,
                    "read_pin_wrapper": 1
                },
                "HAL_GPIO_ReadPin": {
                    "read_pin": 1
                },
                "param_1": {
                    "gpio": 1,
                    "gpio_pin": 1,
                    "gpio_port": 14,
                    "input_value": 2,
                    "param1": 8,
                    "pin_port": 1,
                    "port": 1,
                    "value": 3
                },
                "param_2": {
                    "bit_count": 1,
                    "count": 1,
                    "gpio_pin": 2,
                    "mask": 1,
                    "num_bits": 2,
                    "param2": 9,
                    "pin": 2,
                    "pin_mode": 1,
                    "pin_number": 12
                },
                "param_3": {
                    "extra_param1": 1,
                    "input_type": 2,
                    "mode": 1,
                    "output_high": 1,
                    "param1": 1,
                    "param3": 16,
                    "param_3": 6,
                    "parameter_3": 1,
                    "unused1": 1
                },
                "param_4": {
                    "extra_param2": 1,
                    "output_low": 1,
                    "output_type": 1,
                    "param2": 1,
                    "param4": 16,
                    "param_4": 6,
                    "parameter_4": 1,
                    "pull": 1,
                    "pull_state": 1,
                    "unused2": 1
                }
            },
            "called": [
                "FUN_08002810"
            ],
            "calling": [
                "FUN_08005890"
            ],
            "code": "\nvoid read_pin_from_gpio_08004c48(undefined4 gpio_port,undefined2 pin_number,undefined4 param3,undefined4 param4)\n\n{\n  read_pin(gpio_port,pin_number,param3,param4,param4);\n  return;\n}\n\n",
            "current_name": "read_pin_from_gpio_08004c48",
            "entrypoint": "0x08004c48",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004c48": "read_pin_from_gpio_08004c48",
                "HAL_GPIO_ReadPin": "read_pin",
                "param_1": "gpio_port",
                "param_2": "pin_number",
                "param_3": "param3",
                "param_4": "param4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004c52": {
            "additional_data": {
                "FUN_08001b48": {
                    "configure_clock": 3,
                    "configure_system_clock": 9,
                    "execute_operation": 1,
                    "execute_sub_function": 1,
                    "execute_sub_function2": 1,
                    "execute_void_function": 1,
                    "handle_event": 1,
                    "init_hal": 1,
                    "initialize_clock": 1,
                    "initialize_hal": 2,
                    "initialize_hardware": 1,
                    "initialize_peripherals": 1,
                    "initialize_sub_systems": 1,
                    "initialize_subfunction2": 1,
                    "initialize_system": 1,
                    "perform_action": 1,
                    "perform_system_configuration": 1,
                    "perform_system_setup": 1
                },
                "FUN_08001c88": {
                    "configure_hal": 2,
                    "configure_hardware": 1,
                    "configure_peripherals": 1,
                    "configure_serial": 1,
                    "configure_system": 1,
                    "configure_system_clock": 2,
                    "get_configuration": 4,
                    "get_device_info": 1,
                    "get_system_configuration": 1,
                    "get_undefined4_value": 1,
                    "get_unitialized_value": 1,
                    "initialize_hal": 5,
                    "initialize_hardware": 1,
                    "initialize_sub_function": 1,
                    "initialize_sub_function1": 1,
                    "initialize_subfunction1": 1,
                    "initialize_subsystem": 1,
                    "initialize_system": 1,
                    "perform_operation": 1,
                    "perform_task": 1
                },
                "FUN_08004c52": {
                    "initialize_and_configure": 1,
                    "initialize_hal_and_system_clock": 2,
                    "initialize_hardware": 2,
                    "initialize_system": 26
                },
                "HAL_Init": {
                    "initialize_hal": 9,
                    "initialize_hardware": 4
                },
                "SystemClock_Config": {
                    "configure_system_clock": 13
                }
            },
            "called": [
                "FUN_08001c88",
                "FUN_08001b48"
            ],
            "calling": [
                "FUN_08001c32"
            ],
            "code": "\nvoid initialize_hal_and_system_clock_08004c52(void)\n\n{\n  initialize_hal();\n  configure_system_clock();\n  return;\n}\n\n",
            "current_name": "initialize_hal_and_system_clock_08004c52",
            "entrypoint": "0x08004c52",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004c52": "initialize_hal_and_system_clock_08004c52",
                "HAL_Init": "initialize_hal",
                "SystemClock_Config": "configure_system_clock"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004c5e": {
            "additional_data": {
                "DAT_": {
                    "": 1
                },
                "FUN_08004c5e": {
                    "find_index": 1,
                    "find_number_in_array": 1,
                    "find_param_value": 1,
                    "find_parameter_value": 2,
                    "find_value": 1,
                    "find_value_by_key": 2,
                    "find_value_from_list": 1,
                    "find_value_in_array": 9,
                    "find_value_in_list": 3,
                    "find_value_in_param_array": 1,
                    "find_value_index": 2,
                    "find_value_offset": 6,
                    "get_value_from_param2": 1
                },
                "PTR_": {
                    "": 1
                },
                "PTR_4": {
                    "next_element": 1
                },
                "PTR_8": {
                    "result": 1
                },
                "index": {
                    "array_index": 1
                },
                "param_1": {
                    "key": 2,
                    "number_to_find": 1,
                    "search_value": 2,
                    "target": 1,
                    "target_value": 8,
                    "value": 8,
                    "value_to_find": 9
                },
                "param_2": {
                    "array": 10,
                    "array_of_values": 1,
                    "array_ptr": 4,
                    "data": 3,
                    "data_array": 2,
                    "data_ptr": 2,
                    "key_value_pairs": 1,
                    "list": 2,
                    "list_ptr": 2,
                    "offset_list": 1,
                    "param_array": 2,
                    "parameter_list": 1
                },
                "result": {
                    "found_value": 2
                }
            },
            "called": [
                "FUN_08004c5e"
            ],
            "calling": [
                "FUN_08004c5e",
                "FUN_08004c78"
            ],
            "code": "\nundefined4 find_value_in_param_array_08004c5e(int value_to_find,char *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      return 0;\n    }\n    if (*array == value_to_find) break;\n    array = array + 0xc;\n  }\n  return *(undefined4 *)(array + 4);\n}\n\n",
            "current_name": "find_value_in_param_array_08004c5e",
            "entrypoint": "0x08004c5e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004c5e": "find_value_in_param_array_08004c5e",
                "param_1": "value_to_find",
                "param_2": "array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004c78": {
            "additional_data": {
                "FUN_08004c5e": {
                    "find_periph_details": 1,
                    "find_peripheral": 1,
                    "pinmap_find": 1,
                    "pinmap_find_peripheral": 3,
                    "pinmap_search": 1
                },
                "FUN_08004c78": {
                    "find_peripheral": 27,
                    "find_peripheral_address": 1,
                    "find_peripheral_by_id": 1,
                    "find_peripheral_port": 1,
                    "get_peripheral": 1
                },
                "param_1": {
                    "input": 9,
                    "input_param": 1,
                    "input_parameter": 1,
                    "input_value": 10,
                    "peripheral_code": 1,
                    "peripheral_id": 7,
                    "port_number": 1,
                    "value": 1
                },
                "param_2": {
                    "device": 1,
                    "device_name": 1,
                    "periph_info": 1,
                    "peripheral_name": 1,
                    "pin_map": 1
                },
                "uVar1": {
                    "peripheral": 11,
                    "peripheral_address": 5,
                    "peripheral_found": 7,
                    "result": 4
                }
            },
            "called": [
                "FUN_08004c5e"
            ],
            "calling": [
                "FUN_08004f4c",
                "FUN_08004a4c",
                "FUN_08004b3c",
                "FUN_080053d4",
                "FUN_08005384"
            ],
            "code": "\nundefined4 find_peripheral_by_id_08004c78(int input_value)\n\n{\n  undefined4 peripheral;\n  \n  if (input_value != -1) {\n    peripheral = pinmap_find_peripheral();\n    return peripheral;\n  }\n  return 0;\n}\n\n",
            "current_name": "find_peripheral_by_id_08004c78",
            "entrypoint": "0x08004c78",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004c78": "find_peripheral_by_id_08004c78",
                "param_1": "input_value",
                "uVar1": "peripheral"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004c8a": {
            "additional_data": {
                "FUN_08004c8a": {
                    "find_character": 9,
                    "find_character_index": 2,
                    "find_element_index": 2,
                    "find_item_in_list": 1,
                    "find_matching_param_value": 1,
                    "find_param_index": 1,
                    "find_param_value": 2,
                    "find_value": 1,
                    "find_value_by_index": 1,
                    "find_value_by_key": 1,
                    "find_value_in_array": 7,
                    "find_value_in_list": 1,
                    "find_value_index": 2
                },
                "local_variable_1": {
                    "current_character": 1
                },
                "param_1": {
                    "character": 8,
                    "character_to_find": 2,
                    "element": 2,
                    "index": 1,
                    "item_to_find": 1,
                    "key": 1,
                    "search_param": 1,
                    "target_character": 1,
                    "target_value": 3,
                    "value": 6,
                    "value_to_find": 5
                },
                "param_2": {
                    "array": 8,
                    "array_ptr": 4,
                    "character_array": 2,
                    "character_list": 1,
                    "character_ptr": 1,
                    "current_position": 1,
                    "data": 2,
                    "list": 1,
                    "list_ptr": 1,
                    "map": 1,
                    "param_array": 1,
                    "param_list": 3,
                    "string": 5
                },
                "var_1": {
                    "element_address": 1
                }
            },
            "called": [
                "FUN_08004c8a"
            ],
            "calling": [
                "FUN_08004c8a",
                "FUN_08004ca2"
            ],
            "code": "\nint find_character_index_08004c8a(int character,char *array)\n\n{\n  while( true ) {\n    if (*(int *)(array + 4) == 0) {\n      return -1;\n    }\n    if (*(int *)(array + 4) == character) break;\n    array = array + 0xc;\n  }\n  return (int)*array;\n}\n\n",
            "current_name": "find_character_index_08004c8a",
            "entrypoint": "0x08004c8a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004c8a": "find_character_index_08004c8a",
                "param_1": "character",
                "param_2": "array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004ca2": {
            "additional_data": {
                "FUN_08004c8a": {
                    "get_pin_from_map": 1
                },
                "FUN_08004ca2": {
                    "find_pin": 11,
                    "find_pin_by_param": 1,
                    "find_pin_from_param": 2,
                    "find_pin_in_map": 1,
                    "find_pin_or_default": 2,
                    "find_pin_or_error": 2,
                    "find_pin_or_fail": 4,
                    "find_pin_or_null": 1,
                    "find_valid_pin": 5,
                    "pinmap_find": 1,
                    "pinmap_search": 1
                },
                "param_1": {
                    "input": 1,
                    "input_param": 2,
                    "input_value": 1,
                    "pin": 2,
                    "pin_id": 11,
                    "pin_identifier": 1,
                    "pin_number": 6,
                    "pin_param": 3,
                    "pin_value": 4
                },
                "param_2": {
                    "pin_map": 1
                },
                "uVar1": {
                    "found_pin": 4,
                    "pin": 2,
                    "pin_result": 10,
                    "result": 9,
                    "valid_pin": 1
                }
            },
            "called": [
                "FUN_08004c8a"
            ],
            "calling": [
                "FUN_08005b54",
                "FUN_08005384"
            ],
            "code": "\nundefined4 find_valid_pin_08004ca2(int pin_id)\n\n{\n  undefined4 pin_result;\n  \n  if (pin_id != 0) {\n    pin_result = pinmap_find_pin();\n    return pin_result;\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "find_valid_pin_08004ca2",
            "entrypoint": "0x08004ca2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004ca2": "find_valid_pin_08004ca2",
                "param_1": "pin_id",
                "uVar1": "pin_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004cb2": {
            "additional_data": {
                "DAT_": {
                    "": 1
                },
                "DAT_08004cbc": {
                    "default_return_value": 1
                },
                "DAT_12345678": {
                    "array_length": 1
                },
                "DAT_87654321": {
                    "element_size": 1
                },
                "FUN_08004cb2": {
                    "find_element_by_value": 1,
                    "find_entry_offset": 1,
                    "find_matching_value": 1,
                    "find_offset": 1,
                    "find_parameter_offset": 1,
                    "find_parameter_value": 2,
                    "find_value": 1,
                    "find_value_by_index": 2,
                    "find_value_by_key": 2,
                    "find_value_by_offset": 1,
                    "find_value_from_list": 2,
                    "find_value_in_array": 7,
                    "find_value_in_list": 1,
                    "find_value_index": 7,
                    "find_value_position": 1
                },
                "PTR_": {
                    "": 1
                },
                "PTR_08004cb2": {
                    "value_ptr": 1
                },
                "PTR_08004cb2_8": {
                    "return_value": 1
                },
                "PTR_08004cb4": {
                    "array_element_size": 1
                },
                "PTR_08004cb8": {
                    "array_element_value": 1
                },
                "array_offset": {
                    "element_offset": 1
                },
                "break_condition": {
                    "value_found": 1
                },
                "param_1": {
                    "index": 1,
                    "key": 3,
                    "search_value": 4,
                    "target": 1,
                    "target_value": 7,
                    "value": 6,
                    "value_to_find": 9
                },
                "param_2": {
                    "array": 16,
                    "array_of_values": 1,
                    "array_ptr": 3,
                    "array_to_search": 1,
                    "buffer": 1,
                    "data": 1,
                    "data_array": 1,
                    "data_list": 1,
                    "entry_table": 1,
                    "list": 1,
                    "list_pointer": 1,
                    "list_ptr": 1,
                    "parameter_array": 1,
                    "values": 1
                }
            },
            "called": [
                "FUN_08004cb2"
            ],
            "calling": [
                "FUN_08004cce",
                "FUN_08004cb2"
            ],
            "code": "\nundefined4 find_value_by_index_08004cb2(int value_to_find,char *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      return 0xffffffff;\n    }\n    if (*array == value_to_find) break;\n    array = array + 0xc;\n  }\n  return *(undefined4 *)(array + 8);\n}\n\n",
            "current_name": "find_value_by_index_08004cb2",
            "entrypoint": "0x08004cb2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004cb2": "find_value_by_index_08004cb2",
                "param_1": "value_to_find",
                "param_2": "array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004cce": {
            "additional_data": {
                "FUN_08004cb2": {
                    "find_function": 1
                },
                "FUN_08004cce": {
                    "find_and_return_function": 2,
                    "find_function": 5,
                    "find_function_and_return": 1,
                    "find_function_from_param": 2,
                    "find_function_helper": 1,
                    "find_function_or_default": 2,
                    "find_function_or_error": 3,
                    "find_function_or_negative": 1,
                    "find_function_or_negative_one": 3,
                    "find_function_result": 1,
                    "find_function_return_value": 1,
                    "find_mapped_function": 2,
                    "find_mapping": 1,
                    "find_pin_function": 2,
                    "find_pinmap_function": 4
                },
                "param_1": {
                    "input": 2,
                    "input_id": 1,
                    "input_param": 5,
                    "input_parameter": 1,
                    "input_value": 20,
                    "pin_id": 1,
                    "pinmap_index": 1
                },
                "param_2": {
                    "input_string": 1
                },
                "uVar1": {
                    "found_function": 1,
                    "function_address": 1,
                    "function_pointer": 1,
                    "function_result": 10,
                    "result": 17,
                    "result_value": 1
                }
            },
            "called": [
                "FUN_08004cb2"
            ],
            "calling": [
                "FUN_08004f4c",
                "FUN_0800492c",
                "FUN_08004948",
                "FUN_08004b3c"
            ],
            "code": "\nundefined4 find_pinmap_function_08004cce(int input_value)\n\n{\n  undefined4 result;\n  \n  if (input_value == -1) {\n    return 0xffffffff;\n  }\n  result = pinmap_find_function();\n  return result;\n}\n\n",
            "current_name": "find_pinmap_function_08004cce",
            "entrypoint": "0x08004cce",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004cce": "find_pinmap_function_08004cce",
                "param_1": "input_value",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004ce2": {
            "additional_data": {
                "FUN_08004ce2": {
                    "check_match": 1,
                    "check_param": 1,
                    "check_param_in_array": 1,
                    "check_parameter": 1,
                    "check_parameter_value": 1,
                    "check_value": 1,
                    "check_value_in_array": 1,
                    "compare_and_find_index": 1,
                    "compare_int_and_string": 1,
                    "compare_integer_with_char": 1,
                    "compare_param_and_array": 1,
                    "compare_param_and_string": 1,
                    "compare_param_with_array": 2,
                    "compare_values": 5,
                    "find_element": 1,
                    "find_match": 1,
                    "find_number_in_array": 1,
                    "find_param_in_array": 1,
                    "find_value": 1,
                    "find_value_in_array": 4,
                    "find_value_in_sequence": 1,
                    "search_value": 1,
                    "search_value_in_array": 1
                },
                "break": {
                    "exit_loop": 1
                },
                "param_1": {
                    "compared_value": 1,
                    "element": 1,
                    "input": 1,
                    "input_value": 1,
                    "integer": 1,
                    "integer_value": 1,
                    "number_to_find": 1,
                    "target": 1,
                    "target_value": 1,
                    "value": 10,
                    "value1": 2,
                    "value_1": 4,
                    "value_to_check": 1,
                    "value_to_compare": 2,
                    "value_to_find": 3
                },
                "param_2": {
                    "array": 14,
                    "array_of_numbers": 1,
                    "array_of_values": 5,
                    "char_array": 1,
                    "data": 1,
                    "data_array": 1,
                    "param_array": 2,
                    "sequence": 1,
                    "str_to_compare": 1,
                    "string": 1,
                    "string_array": 1,
                    "values": 1,
                    "values_array": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080057b4"
            ],
            "code": "\nundefined4 find_number_in_array_08004ce2(int value,char *array)\n\n{\n  if (value == -1) {\n    return 0;\n  }\n  while( true ) {\n    if (*array == -1) {\n      return 0;\n    }\n    if (value == *array) exit_loop;\n    array = array + 0xc;\n  }\n  return 1;\n}\n\n",
            "current_name": "find_number_in_array_08004ce2",
            "entrypoint": "0x08004ce2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004ce2": "find_number_in_array_08004ce2",
                "break": "exit_loop",
                "param_1": "value",
                "param_2": "array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004d06": {
            "additional_data": {
                "FUN_08004d06": {
                    "check_and_return_non_zero": 1,
                    "check_and_return_nonzero": 1,
                    "compare_and_return": 2,
                    "compare_and_return_non_zero": 4,
                    "compare_and_return_smaller": 11,
                    "compare_and_return_smaller_value": 1,
                    "compare_and_return_zero": 3,
                    "find_common_value": 1,
                    "find_different_value": 1,
                    "find_nonzero_param": 1,
                    "find_nonzero_parameter": 1,
                    "find_smallest_nonzero": 1,
                    "return_smaller_nonzero_value": 1,
                    "return_smaller_value": 1,
                    "select_non_zero": 1
                },
                "param_1": {
                    "first_number": 1,
                    "first_value": 3,
                    "input1": 1,
                    "number1": 1,
                    "result": 1,
                    "value1": 17,
                    "value_1": 7
                },
                "param_2": {
                    "input2": 1,
                    "number2": 1,
                    "second_number": 1,
                    "second_value": 3,
                    "value2": 18,
                    "value_2": 7
                },
                "param_3": {
                    "result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004f4c"
            ],
            "code": "\nint compare_and_return_smaller_value_08004d06(int value1,int value2)\n\n{\n  if (value1 != value2) {\n    if (value1 == 0) {\n      return value2;\n    }\n    if (value2 == 0) {\n      return value1;\n    }\n    value1 = 0;\n  }\n  return value1;\n}\n\n",
            "current_name": "compare_and_return_smaller_value_08004d06",
            "entrypoint": "0x08004d06",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004d06": "compare_and_return_smaller_value_08004d06",
                "param_1": "value1",
                "param_2": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004d18": {
            "additional_data": {
                "DAT_20000260": {
                    "callback_function": 10,
                    "callback_function_pointer": 7,
                    "callback_function_ptr": 1,
                    "external_code_pointer": 1,
                    "function_pointer": 2,
                    "user_function_ptr": 1
                },
                "DAT_20000278": {
                    "callback_argument": 5,
                    "callback_data": 3,
                    "callback_function_argument": 3,
                    "callback_function_data": 1,
                    "callback_function_parameter": 3,
                    "callback_parameter": 2,
                    "data_to_pass": 1,
                    "external_code_argument": 1,
                    "function_argument": 2,
                    "user_function_data": 1
                },
                "FUN_08004d18": {
                    "execute_callback": 13,
                    "execute_callback_function": 11,
                    "execute_callback_if_exists": 1,
                    "execute_callback_if_not_null": 1,
                    "execute_callback_if_present": 1,
                    "execute_external_code": 1,
                    "execute_function": 1,
                    "execute_function_if_exists": 1,
                    "execute_user_code": 1
                },
                "PTR_20000260": {
                    "": 1
                },
                "PTR_20000278": {
                    "callback_function": 1
                },
                "callback": {
                    "callback": 1
                },
                "callbackFunction": {
                    "": 1,
                    "callback_function": 6
                },
                "code": {
                    "callback": 1,
                    "callback_function": 7
                },
                "executeCallback": {
                    "execute_callback": 4
                },
                "executeCallbackFunction": {
                    "": 1,
                    "execute_callback_function": 2
                },
                "executeCallbackIfNotNull": {
                    "execute_callback_if_not_null": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003ea0"
            ],
            "code": "\nvoid execute_callback_function_08004d18(void)\n\n{\n  if (DAT_20000260 != (callback_function *)0x0) {\n    (*DAT_20000260)(DAT_20000278);\n  }\n  return;\n}\n\n",
            "current_name": "execute_callback_function_08004d18",
            "entrypoint": "0x08004d18",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004d18": "execute_callback_function_08004d18",
                "code": "callback_function"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004d40": {
            "additional_data": {
                "DAT_": {
                    "": 3,
                    "dat": 1,
                    "unchanged": 1
                },
                "DAT_08004d40": {
                    "dat": 1
                },
                "DAT_XXXXX": {
                    "unchanged": 1
                },
                "DAT_XXXXXX": {
                    "unchanged": 1
                },
                "FUN_08004d40": {
                    "do_nothing_loop": 1,
                    "endless_loop": 1,
                    "infinite_loop": 28,
                    "infinity_loop": 1
                },
                "PTR_": {
                    "": 3,
                    "ptr": 1,
                    "unchanged": 1
                },
                "PTR_08004d40": {
                    "ptr": 1
                },
                "PTR_XXXXX": {
                    "unchanged": 1
                },
                "PTR_XXXXXX": {
                    "unchanged": 1
                },
                "do": {
                    "do": 1,
                    "loop": 1
                },
                "original_variable_name_1": {
                    "loop_count": 1
                },
                "original_variable_name_2": {
                    "temp_var": 1
                },
                "true": {
                    "true": 1
                },
                "while": {
                    "true": 1
                }
            },
            "called": [
                "FUN_08004d40"
            ],
            "calling": [
                "FUN_08004d40",
                "FUN_08001b48"
            ],
            "code": "\nvoid infinite_loop_08004d40(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } true( true );\n}\n\n",
            "current_name": "infinite_loop_08004d40",
            "entrypoint": "0x08004d40",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004d40": "infinite_loop_08004d40",
                "while": "true"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004d44": {
            "additional_data": {
                "FUN_08004d44": {
                    "configure_device": 1,
                    "configure_hardware": 1,
                    "configure_hardware_registers": 1,
                    "configure_memory": 1,
                    "initialize_device": 1,
                    "initialize_hardware": 4,
                    "initialize_memory": 3,
                    "initialize_peripheral": 5,
                    "initialize_peripheral_registers": 1,
                    "initialize_registers": 7,
                    "initialize_system": 1,
                    "set_configuration": 1,
                    "set_flags_and_registers": 1,
                    "set_registers": 1
                },
                "_08004d44": {
                    "initialize_hardware": 1,
                    "initialize_peripherals": 1
                },
                "_40021000": {
                    "peripherals_control_register1": 1
                },
                "_40021004": {
                    "peripherals_control_register2": 1
                },
                "_40021008": {
                    "peripherals_control_register3": 1
                },
                "_DAT_40021000": {
                    "config_register1": 1,
                    "control_reg": 2,
                    "control_register": 5,
                    "control_register1": 5,
                    "device_control_register1": 1,
                    "gpio_control_reg": 1,
                    "gpio_register": 1,
                    "hardware_register1": 1,
                    "interrupt_control_register": 1,
                    "memory_configuration_reg": 1,
                    "peripheral_config_register": 1,
                    "peripheral_register1": 1,
                    "reg1": 1,
                    "register1": 3,
                    "status_register": 3,
                    "system_configuration": 1
                },
                "_DAT_40021004": {
                    "config_register": 1,
                    "config_register2": 1,
                    "control_register": 2,
                    "control_register2": 5,
                    "data_reg": 1,
                    "data_register": 2,
                    "device_configuration": 1,
                    "device_control_register2": 1,
                    "gpio_config": 1,
                    "gpio_mask_reg": 1,
                    "hardware_register2": 1,
                    "interrupt_enable_register": 1,
                    "interrupt_mask_register": 1,
                    "memory_config_mask": 1,
                    "peripheral_register2": 1,
                    "reg2": 1,
                    "register2": 3,
                    "status_reg": 1,
                    "status_register": 2,
                    "system_config_register": 1
                },
                "_DAT_40021008": {
                    "address_reg": 1,
                    "clock_config": 1,
                    "config_register3": 1,
                    "control_register": 1,
                    "data_reg": 1,
                    "data_register": 4,
                    "device_control_register3": 1,
                    "hardware_register3": 1,
                    "initialization_value": 1,
                    "interrupt_control_register": 1,
                    "interrupt_priority": 1,
                    "interrupt_register": 1,
                    "memory_address": 3,
                    "memory_configuration": 1,
                    "output_control_register": 1,
                    "peripheral_address": 1,
                    "peripheral_register3": 1,
                    "reg3": 1,
                    "register3": 3,
                    "timer_config_register": 1,
                    "timer_control_reg": 1,
                    "timer_control_register": 1,
                    "timer_register": 1
                },
                "_DAT_e000ed08": {
                    "config_register4": 1,
                    "exception_register": 1,
                    "hardware_register4": 1,
                    "interrupt_config": 1,
                    "interrupt_configuration": 1,
                    "interrupt_control": 2,
                    "interrupt_control_reg": 1,
                    "interrupt_control_register": 3,
                    "interrupt_enable": 1,
                    "interrupt_enable_register": 2,
                    "interrupt_priority_register": 1,
                    "interrupt_reg": 2,
                    "interrupt_register": 2,
                    "memory_protection_register": 1,
                    "memory_register": 1,
                    "nvic_interrupt_reg": 1,
                    "peripheral_register4": 1,
                    "reg4": 1,
                    "register4": 3,
                    "system_control_register": 2,
                    "vector_table_offset": 1
                },
                "_e000ed08": {
                    "interrupt_control_register": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001be8"
            ],
            "code": "\n\n\nvoid initialize_peripheral_registers_08004d44(void)\n\n{\n  _DATperipherals_control_register1 = _DATperipherals_control_register1 & 0xfef2ffff | 1;\n  _DATperipherals_control_register2 = _DATperipherals_control_register2 & 0xf8800000;\n  _DATperipherals_control_register3 = 0x9f0000;\n  _DATinterrupt_control_register = 0x8000000;\n  return;\n}\n\n",
            "current_name": "initialize_peripheral_registers_08004d44",
            "entrypoint": "0x08004d44",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004d44": "initialize_peripheral_registers_08004d44",
                "_08004d44": "initialize_peripherals",
                "_40021000": "peripherals_control_register1",
                "_40021004": "peripherals_control_register2",
                "_40021008": "peripherals_control_register3",
                "_e000ed08": "interrupt_control_register"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004d90": {
            "additional_data": {
                "0x40000000": {
                    "flag_2": 1,
                    "flag_b": 1,
                    "mask_bit_0": 1,
                    "register_mask_2": 1
                },
                "0x40000400": {
                    "flag_3": 1,
                    "flag_c": 1,
                    "mask_bit_2": 1,
                    "register_mask_3": 1
                },
                "0x40000800": {
                    "flag_4": 1,
                    "flag_d": 1,
                    "mask_bit_4": 1,
                    "register_mask_4": 1
                },
                "0x40012c00": {
                    "flag_1": 1,
                    "flag_a": 1,
                    "mask_bit_11": 1,
                    "register_mask_1": 1
                },
                "DAT_40021018": {
                    "flag_register_a": 1,
                    "memory_register_1": 1
                },
                "DAT_4002101c": {
                    "flag_register_b": 1,
                    "memory_register_2": 1
                },
                "FUN_08004d90": {
                    "apply_permissions": 1,
                    "clear_bits_based_on_value": 1,
                    "clear_flags": 4,
                    "update_config": 1,
                    "update_configuration_flags": 1,
                    "update_control_registers": 2,
                    "update_data": 2,
                    "update_data_flags": 1,
                    "update_flags": 1,
                    "update_flags_based_on_param": 1,
                    "update_flags_based_on_param_value": 1,
                    "update_flags_based_on_value": 1,
                    "update_memory": 1,
                    "update_memory_flags": 2,
                    "update_memory_protection": 1,
                    "update_memory_values": 1,
                    "update_permissions": 1,
                    "update_register": 1,
                    "update_registers": 3,
                    "update_settings": 3,
                    "update_status_register": 1
                },
                "_DAT_40021018": {
                    "config_register1": 1,
                    "configuration_register1": 1,
                    "current_value": 1,
                    "data_flag1": 1,
                    "data_register_1": 1,
                    "flag1": 1,
                    "flag_1": 1,
                    "flag_register1": 1,
                    "flag_register_a": 1,
                    "flags1": 2,
                    "flags_register1": 1,
                    "global_setting1": 1,
                    "memory_flag1": 1,
                    "permissions_register": 1,
                    "register1": 3,
                    "register_a": 2,
                    "settings_register1": 1,
                    "status_register1": 2,
                    "value1": 1
                },
                "_DAT_4002101c": {
                    "config_register": 1,
                    "config_register2": 1,
                    "configuration_register2": 1,
                    "data_flag2": 1,
                    "data_register_2": 1,
                    "flag2": 1,
                    "flag_2": 1,
                    "flag_register2": 1,
                    "flag_register_b": 1,
                    "flags2": 2,
                    "flags_register2": 1,
                    "global_setting2": 1,
                    "mask": 1,
                    "memory_flag2": 1,
                    "register2": 3,
                    "register_b": 2,
                    "settings_register2": 1,
                    "status_register2": 2,
                    "value2": 1
                },
                "param_1": {
                    "address": 1,
                    "config": 1,
                    "config_flags": 1,
                    "data": 2,
                    "data_pointer": 1,
                    "flag": 2,
                    "flag_ptr": 1,
                    "input_param": 1,
                    "input_value": 2,
                    "memory_address": 4,
                    "memory_location": 1,
                    "new_value": 1,
                    "permissions": 1,
                    "register_value": 4,
                    "setting": 1,
                    "setting_ptr": 1,
                    "value": 6
                },
                "updateFlagsBasedOnParamValue": {
                    "update_flags_based_on_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004b34"
            ],
            "code": "\n\n\nvoid update_control_registers_08004d90(int *value)\n\n{\n  if (*value == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 & 0xfffff7ff;\n  }\n  if (*value == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffe;\n  }\n  if (*value == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffd;\n  }\n  if (*value == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffb;\n  }\n  return;\n}\n\n",
            "current_name": "update_control_registers_08004d90",
            "entrypoint": "0x08004d90",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004d90": "update_control_registers_08004d90",
                "param_1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004df4": {
            "additional_data": {
                "": {
                    "": 1
                },
                "FUN_08004df4": {
                    "increment_by_negative_four": 1,
                    "subtract4": 1,
                    "subtract_4": 1,
                    "subtract_four": 28
                },
                "param_1": {
                    "input": 4,
                    "input_num": 2,
                    "input_number": 2,
                    "input_value": 5,
                    "num": 9,
                    "number": 1,
                    "result": 7,
                    "value": 1
                },
                "return": {
                    "result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004e12",
                "FUN_08004df8"
            ],
            "code": "\nint subtract_four_08004df4(int num)\n\n{\n  result num + -4;\n}\n\n",
            "current_name": "subtract_four_08004df4",
            "entrypoint": "0x08004df4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004df4": "subtract_four_08004df4",
                "param_1": "num",
                "return": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004df8": {
            "additional_data": {
                "FUN_08004df4": {
                    "check_condition": 2,
                    "check_timer_condition": 1,
                    "check_timer_function": 1,
                    "check_timer_status": 2,
                    "check_timer_validity": 1,
                    "get_timer_obj": 2
                },
                "FUN_08004df8": {
                    "execute_timer_action": 1,
                    "execute_timer_callback": 13,
                    "execute_timer_check": 1,
                    "execute_timer_function": 15,
                    "invoke_timer_function": 1
                },
                "code": {
                    "function_pointer": 4,
                    "function_ptr": 1,
                    "timer_function": 2
                },
                "get_timer_obj": {
                    "get_current_timer_obj": 1,
                    "get_timer_instance": 1,
                    "get_timer_object": 9,
                    "retrieve_timer_obj": 1,
                    "retrieve_timer_object": 3
                },
                "iVar1": {
                    "timer": 1,
                    "timer_handle": 4,
                    "timer_id": 2,
                    "timer_index": 1,
                    "timer_instance": 1,
                    "timer_obj": 15,
                    "timer_obj_id": 1,
                    "timer_object": 4
                },
                "iVar2": {
                    "condition_result": 1
                },
                "param_1": {
                    "timer_data": 1,
                    "timer_id": 9,
                    "timer_index": 6,
                    "timer_obj": 6,
                    "timer_object": 7,
                    "timer_object_address": 1,
                    "timer_object_handle": 1
                }
            },
            "called": [
                "FUN_08004df4"
            ],
            "calling": [
                "FUN_08003f18"
            ],
            "code": "\nvoid execute_timer_function_08004df8(int timer_id)\n\n{\n  int timer_obj;\n  \n  timer_obj = get_timer_object();\n  if ((*(function_pointer **)(timer_obj + 0x4c) != (function_pointer *)0x0) && (*(char *)(timer_id + 0x1c) == '\\x01')) {\n    (**(function_pointer **)(timer_obj + 0x4c))(timer_obj,0);\n  }\n  return;\n}\n\n",
            "current_name": "execute_timer_function_08004df8",
            "entrypoint": "0x08004df8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004df8": "execute_timer_function_08004df8",
                "code": "function_pointer",
                "get_timer_obj": "get_timer_object",
                "iVar1": "timer_obj",
                "param_1": "timer_id"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004e12": {
            "additional_data": {
                "0x48": {
                    "function_address": 1
                },
                "FUN_08004df4": {
                    "calculate_result": 1,
                    "calculate_time_difference": 1,
                    "check_timer_obj": 1,
                    "get_timer_obj": 21,
                    "get_timer_obj_address": 1,
                    "get_timer_obj_info": 1,
                    "get_timer_obj_size": 1,
                    "get_timer_object": 2,
                    "retrieve_timer_obj": 1
                },
                "FUN_08004e12": {
                    "execute_timer_callback": 6,
                    "execute_timer_function": 24,
                    "execute_timer_obj_function": 1
                },
                "code": {
                    "timer_function": 2
                },
                "get_timer_obj": {
                    "get_timer_object": 2
                },
                "iVar1": {
                    "timer_obj": 22,
                    "timer_obj_address": 2,
                    "timer_obj_ptr": 1,
                    "timer_obj_value": 1,
                    "timer_object": 2,
                    "timer_ptr": 1
                },
                "param_1": {
                    "arg": 1,
                    "input_param": 2,
                    "obj_handle": 1,
                    "obj_id": 1,
                    "obj_param": 1,
                    "size": 1,
                    "some_param": 1,
                    "some_parameter": 1,
                    "timer_id": 5,
                    "timer_obj": 3,
                    "timer_obj_param": 1,
                    "timer_object": 4,
                    "timer_value": 1,
                    "unknown_param": 1,
                    "unused_param": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_08004df4"
            ],
            "calling": [
                "FUN_08003f18"
            ],
            "code": "\nvoid execute_timer_obj_function_08004e12(void)\n\n{\n  int timer_obj;\n  \n  timer_obj = get_timer_object();\n  if (*(timer_function **)(timer_obj + 0x48) != (timer_function *)0x0) {\n    (**(timer_function **)(timer_obj + 0x48))();\n  }\n  return;\n}\n\n",
            "current_name": "execute_timer_obj_function_08004e12",
            "entrypoint": "0x08004e12",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004e12": "execute_timer_obj_function_08004e12",
                "code": "timer_function",
                "get_timer_obj": "get_timer_object",
                "iVar1": "timer_obj"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004e20": {
            "additional_data": {
                "DAT_2000027c": {
                    "data_flag": 1,
                    "flag": 1,
                    "interrupt_flag": 1,
                    "timer_flag": 1
                },
                "FUN_08003f18": {
                    "calculate_values": 1,
                    "handle_parameter": 1,
                    "process_data": 11,
                    "process_param": 3,
                    "process_param1": 1,
                    "process_param_1": 1,
                    "process_parameter": 8,
                    "process_parameter_1": 1,
                    "update_parameter": 1
                },
                "FUN_08004e20": {
                    "handle_tim_interrupt": 15,
                    "handle_tim_irq": 1,
                    "handle_timer_interrupt": 14,
                    "process_timer_interrupt": 1
                },
                "HAL_TIM_IRQHandler": {
                    "handle_tim": 1,
                    "handle_tim_interrupt": 1,
                    "handle_tim_irq": 1,
                    "handle_timer_event": 1
                },
                "param_1": {
                    "data": 4,
                    "data_array": 1,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "new_param": 1,
                    "param_array": 1,
                    "parameter": 7,
                    "parameters": 1,
                    "values": 1
                }
            },
            "called": [
                "FUN_08003f18"
            ],
            "calling": [],
            "code": "\nvoid handle_tim_interrupt_08004e20(void)\n\n{\n  if (DAT_2000027c != 0) {\n    handle_timer_event();\n  }\n  return;\n}\n\n",
            "current_name": "handle_tim_interrupt_08004e20",
            "entrypoint": "0x08004e20",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004e20": "handle_tim_interrupt_08004e20",
                "HAL_TIM_IRQHandler": "handle_timer_event"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004e70": {
            "additional_data": {
                "FUN_08004e70": {
                    "subtract_4": 1,
                    "subtract_by_four": 1,
                    "subtract_four": 26,
                    "subtract_four_from_input": 1,
                    "subtract_four_from_param": 1,
                    "subtract_value": 1
                },
                "local_1": {
                    "new_value": 1
                },
                "local_variable_1": {
                    "temp": 1
                },
                "local_variable_2": {
                    "result": 1
                },
                "param_1": {
                    "input": 6,
                    "input_number": 4,
                    "input_value": 8,
                    "num": 2,
                    "num_minus_four": 1,
                    "number": 1,
                    "original_value": 2,
                    "result": 7
                },
                "param_2": {
                    "new_num": 1,
                    "new_variable_name": 1,
                    "result": 1
                },
                "param_3": {
                    "temp": 1
                },
                "return": {
                    "result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004ef4",
                "FUN_08004ec4",
                "FUN_08004e74"
            ],
            "code": "\nint subtract_by_four_08004e70(int input_value)\n\n{\n  result input_value + -4;\n}\n\n",
            "current_name": "subtract_by_four_08004e70",
            "entrypoint": "0x08004e70",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004e70": "subtract_by_four_08004e70",
                "param_1": "input_value",
                "return": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004e74": {
            "additional_data": {
                "FUN_08004e74": {
                    "i2c_transfer_data": 1,
                    "process_i2_c_request": 1,
                    "send_i2c_data": 1,
                    "transmit_data": 6,
                    "transmit_data_or_receive": 1,
                    "transmit_or_receive_data": 18,
                    "transmit_receive_data": 3
                },
                "HAL_I2C_Slave_Sequential_Receive_IT": {
                    "perform_sequential_receive": 1,
                    "perform_slave_sequential_receive": 1,
                    "receive_data": 5,
                    "receive_data_it": 1,
                    "receive_data_sequentially": 7,
                    "receive_data_using_i2_c": 1,
                    "receive_i2_c_data": 3,
                    "receive_i2c_data_sequentially": 1,
                    "receive_sequential_data": 2,
                    "receive_sequentially": 2,
                    "sequential_receive": 1,
                    "sequential_receive_with_it": 1
                },
                "HAL_I2C_Slave_Sequential_Transmit_IT": {
                    "perform_sequential_transmit": 1,
                    "perform_slave_sequential_transmit": 1,
                    "sequential_transmit": 1,
                    "sequential_transmit_with_it": 1,
                    "transmit_data": 5,
                    "transmit_data_it": 1,
                    "transmit_data_sequentially": 7,
                    "transmit_data_using_i2_c": 1,
                    "transmit_i2_c_data": 3,
                    "transmit_i2c_data_sequentially": 1,
                    "transmit_sequential_data": 2,
                    "transmit_sequentially": 2
                },
                "get_i2c_obj": {
                    "get_i2_c_object": 12,
                    "get_i2c_object": 5,
                    "retrieve_i2_c_object": 1
                },
                "iVar1": {
                    "i2c_obj": 18,
                    "i2c_obj_pointer": 1,
                    "i2c_object": 10,
                    "i2c_object_handle": 1
                },
                "param_1": {
                    "buffer": 1,
                    "data": 1,
                    "data_buffer": 8,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "device_address": 5,
                    "i2c_device": 2,
                    "i2c_obj_address": 1,
                    "i2c_object": 2,
                    "input_buffer": 2,
                    "input_param": 1,
                    "input_param1": 1,
                    "obj": 1,
                    "obj_param": 1,
                    "object_ptr": 1,
                    "request_address": 1
                },
                "param_2": {
                    "flag": 2,
                    "input_param2": 1,
                    "is_read": 1,
                    "is_receive": 5,
                    "is_send": 1,
                    "is_transmit": 5,
                    "is_transmit_flag": 1,
                    "is_transmit_mode": 2,
                    "is_transmitting": 2,
                    "receive_flag": 3,
                    "transmit_flag": 5,
                    "transmit_mode": 1,
                    "transmit_or_receive_flag": 2
                },
                "param_3": {
                    "compare_data": 1,
                    "compare_value": 3,
                    "data_length": 2,
                    "data_size": 1,
                    "expected_data": 1,
                    "expected_data_size": 3,
                    "expected_length": 3,
                    "expected_param": 2,
                    "expected_param_3": 1,
                    "expected_size": 1,
                    "expected_value": 1,
                    "input_param3": 1,
                    "match_value": 1,
                    "param": 1,
                    "param_check": 2,
                    "param_comparison": 1,
                    "param_validation": 1,
                    "param_value": 1,
                    "size": 3,
                    "size_of_output": 1
                },
                "param_4": {
                    "callback": 8,
                    "callback_function": 10,
                    "callback_param": 2,
                    "input_param4": 1,
                    "param": 1,
                    "param4": 1,
                    "param_4": 2,
                    "param_code": 1,
                    "param_ptr": 2,
                    "param_value": 1,
                    "user_data": 2
                }
            },
            "called": [
                "FUN_08004e70",
                "FUN_08002b84",
                "FUN_08002af8"
            ],
            "calling": [
                "FUN_08002cf2"
            ],
            "code": "\nvoid transmit_data_or_receive_08004e74(int data_buffer,int is_transmit,int size,undefined4 callback_function)\n\n{\n  int i2c_obj;\n  \n  i2c_obj = get_i2_c_object();\n  if (size == *(int *)(data_buffer + 0xc)) {\n    if (is_transmit == 0) {\n      *(undefined *)(i2c_obj + 0x88) = 0;\n      *(undefined *)(i2c_obj + 0x5c) = 0;\n      if (*(code **)(i2c_obj + 100) != (code *)0x0) {\n        (**(code **)(i2c_obj + 100))();\n      }\n      transmit_data_sequentially(data_buffer,i2c_obj + 0x68,*(undefined *)(i2c_obj + 0x88),8);\n      return;\n    }\n    *(undefined *)(i2c_obj + 0x5c) = 1;\n    receive_data_sequentially(data_buffer,i2c_obj + 0x68,0x20,8,callback_function);\n  }\n  return;\n}\n\n",
            "current_name": "transmit_data_or_receive_08004e74",
            "entrypoint": "0x08004e74",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004e74": "transmit_data_or_receive_08004e74",
                "HAL_I2C_Slave_Sequential_Receive_IT": "receive_data_sequentially",
                "HAL_I2C_Slave_Sequential_Transmit_IT": "transmit_data_sequentially",
                "get_i2c_obj": "get_i2_c_object",
                "iVar1": "i2c_obj",
                "param_1": "data_buffer",
                "param_2": "is_transmit",
                "param_3": "size",
                "param_4": "callback_function"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004ec4": {
            "additional_data": {
                "DAT_": {
                    "": 1
                },
                "FUN_08002c10": {
                    "configure_i2c": 1,
                    "enable_i2c_interrupts": 2,
                    "enable_i2c_listen": 1,
                    "enable_i2c_listen_function": 1,
                    "enable_i2c_listen_interrupt": 1,
                    "enable_interrupt_transfer": 1,
                    "enable_listen_interrupt": 1,
                    "extract_address_from_param": 1,
                    "get_pointer_value": 1,
                    "process_i2c_data": 6,
                    "process_i2c_param": 1
                },
                "FUN_08004e70": {
                    "check_function_pointer": 1,
                    "check_i2c_obj": 2,
                    "check_i2c_object": 2,
                    "check_i2c_object_fields": 1,
                    "check_i2c_object_status": 1,
                    "check_i2c_object_validity": 1,
                    "get_i2c_obj": 7,
                    "get_i2c_object": 1,
                    "get_i2c_object_function": 1,
                    "get_i2c_result": 1,
                    "is_i2c_object_valid": 1
                },
                "FUN_08004ec4": {
                    "enable_i2_c_and_hal": 1,
                    "enable_i2_c_listen": 1,
                    "enable_i2c_and_listen": 3,
                    "enable_i2c_and_register_callback": 1,
                    "enable_i2c_communication": 2,
                    "enable_i2c_interrupt": 1,
                    "enable_i2c_listen": 4,
                    "enable_i2c_listen_and_call": 1,
                    "enable_i2c_listen_and_call_subfunction": 1,
                    "enable_i2c_listen_interrupt": 1,
                    "enable_i2c_listen_it": 1,
                    "enable_i2c_listen_mode": 2,
                    "enable_i2c_listening": 3,
                    "execute_i2c_operation": 4,
                    "initialize_and_enable_i2c": 1,
                    "initialize_i2_c": 1,
                    "initialize_i2_c_and_enable_listen": 1,
                    "initialize_i2c_and_enable_listening": 1,
                    "initiate_i2c_communication": 1
                },
                "HAL_I2C_EnableListen_IT": {
                    "enable_i2_c_listen_interrupt": 1,
                    "enable_i2c_listen": 1,
                    "enable_i2c_listen_interrupt": 13,
                    "enable_i2c_listen_interrupts": 1,
                    "enable_listen_interrupt": 3
                },
                "PTR_": {
                    "": 1
                },
                "code": {
                    "function_code": 1,
                    "function_pointer": 2,
                    "function_ptr": 1
                },
                "get_i2c_obj": {
                    "get_i2_c_object": 1,
                    "get_i2c_object": 11,
                    "retrieve_i2c_obj": 2,
                    "retrieve_i2c_object": 7
                },
                "iVar1": {
                    "i2c_handle": 1,
                    "i2c_obj": 19,
                    "i2c_object": 9,
                    "i2c_object_addr": 1
                },
                "param_1": {
                    "arg": 1,
                    "arg_i2c_obj": 1,
                    "callback_handle": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "device_address": 5,
                    "enable_i2c_param": 1,
                    "i2c_config": 1,
                    "i2c_data": 3,
                    "i2c_device": 1,
                    "i2c_handle": 1,
                    "i2c_obj_parameter": 1,
                    "i2c_object": 1,
                    "i2c_param": 2,
                    "listener_parameter": 1,
                    "object": 1,
                    "object_handle": 2,
                    "param": 3,
                    "param1": 1,
                    "param_1": 1,
                    "param_data": 1
                },
                "uint": {
                    "ulong": 1,
                    "unsigned_int": 1
                }
            },
            "called": [
                "FUN_08004e70",
                "FUN_08002c10"
            ],
            "calling": [
                "FUN_08002d1c",
                "FUN_0800316c",
                "FUN_080032b4"
            ],
            "code": "\nvoid enable_i2c_listen_and_call_subfunction_08004ec4(undefined4 device_address)\n\n{\n  int i2c_obj;\n  \n  i2c_obj = get_i2c_object();\n  if (((*(function_pointer **)(i2c_obj + 0x60) != (function_pointer *)0x0) && (*(char *)(i2c_obj + 0x5c) == '\\x01')) &&\n     (*(char *)(i2c_obj + 0x2c) != ' ')) {\n    (**(function_pointer **)(i2c_obj + 0x60))(i2c_obj + 0x68);\n  }\n  enable_i2c_listen_interrupt(device_address);\n  return;\n}\n\n",
            "current_name": "enable_i2c_listen_and_call_subfunction_08004ec4",
            "entrypoint": "0x08004ec4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004ec4": "enable_i2c_listen_and_call_subfunction_08004ec4",
                "HAL_I2C_EnableListen_IT": "enable_i2c_listen_interrupt",
                "code": "function_pointer",
                "get_i2c_obj": "get_i2c_object",
                "iVar1": "i2c_obj",
                "param_1": "device_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004ef4": {
            "additional_data": {
                "0x5d": {
                    "i2_c_status_flag": 1
                },
                "FUN_08002c10": {
                    "process_i2c_data": 1,
                    "setup_i2_c_interrupt": 1
                },
                "FUN_08004e70": {
                    "check_i2c_obj_status": 1,
                    "get_i2_c_object": 1,
                    "get_i2c_obj": 1
                },
                "FUN_08004ef4": {
                    "enable_i2_c_listen": 2,
                    "enable_i2_c_listen_interrupt": 6,
                    "enable_i2_c_listen_it": 2,
                    "enable_i2_c_listen_mode": 2,
                    "enable_i2_c_listening": 2,
                    "enable_i2c_listen": 4,
                    "enable_i2c_listen_interrupt": 3,
                    "enable_i2c_listener": 2,
                    "enable_i2c_listening": 1,
                    "enable_listen": 1,
                    "enable_listen_feature": 1,
                    "enable_listen_for_i2c": 1,
                    "enable_listen_function": 1,
                    "enable_listen_i2_c": 1,
                    "enable_listen_if_i2c_obj_valid": 1,
                    "enable_listen_interrupt": 1
                },
                "HAL_I2C_EnableListen_IT": {
                    "enable_i2_c_listen": 1,
                    "enable_i2_c_listen_interrupt": 2,
                    "enable_i2_c_listen_interrupt_enabled": 1,
                    "enable_i2_c_listen_interrupt_it": 1,
                    "enable_i2_c_listen_it": 2,
                    "enable_i2_c_listening_interrupt": 1,
                    "enable_i2c_listen": 1,
                    "enable_i2c_listen_interrupt": 7,
                    "enable_i2c_listen_interrupt_it": 2,
                    "enable_i2c_listen_it": 3,
                    "enable_listen_interrupt": 1,
                    "enable_listen_it": 1
                },
                "PTR_08002c10": {
                    "i2c_obj_ptr": 1
                },
                "get_i2c_obj": {
                    "get_i2_c_obj": 2,
                    "get_i2_c_object": 2,
                    "get_i2c_handle": 1,
                    "get_i2c_object": 6
                },
                "iVar1": {
                    "i2c_handle": 1,
                    "i2c_obj": 18,
                    "i2c_obj_handle": 1,
                    "i2c_obj_index": 2,
                    "i2c_object": 9
                },
                "param_1": {
                    "arg1": 2,
                    "device_address": 4,
                    "device_handle": 1,
                    "enable_listen_param": 1,
                    "i2_c_port": 1,
                    "i2c_data": 1,
                    "i2c_handle": 8,
                    "i2c_instance": 1,
                    "i2c_obj": 1,
                    "i2c_object": 2,
                    "i2c_param": 3,
                    "listen_address": 1,
                    "obj_handle": 1,
                    "param": 2,
                    "param_1": 1,
                    "pointer_to_pointer": 1
                },
                "pointer_param": {
                    "ptr_param": 1
                }
            },
            "called": [
                "FUN_08004e70",
                "FUN_08002c10"
            ],
            "calling": [
                "FUN_0800316c"
            ],
            "code": "\nvoid enable_i2_c_listen_interrupt_08004ef4(undefined4 i2c_handle)\n\n{\n  int i2c_obj;\n  \n  i2c_obj = get_i2c_object();\n  if (*(char *)(i2c_obj + 0x5d) == '\\0') {\n    enable_i2c_listen_interrupt(i2c_handle);\n  }\n  return;\n}\n\n",
            "current_name": "enable_i2_c_listen_interrupt_08004ef4",
            "entrypoint": "0x08004ef4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004ef4": "enable_i2_c_listen_interrupt_08004ef4",
                "HAL_I2C_EnableListen_IT": "enable_i2c_listen_interrupt",
                "get_i2c_obj": "get_i2c_object",
                "iVar1": "i2c_obj",
                "param_1": "i2c_handle"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004f4c": {
            "additional_data": {
                "DAT_08007604": {
                    "gpio_peripheral_b": 1,
                    "gpio_pin2": 1,
                    "peripheral_2_mapping": 1,
                    "peripheral_map2": 1,
                    "pin_info2": 1,
                    "uart2_pins": 1,
                    "uart_periph2": 1,
                    "uart_periph_data2": 1,
                    "uart_peripheral2": 1,
                    "uart_pin_info2": 1
                },
                "DAT_0800764c": {
                    "gpio_peripheral_a": 1,
                    "gpio_pin1": 1,
                    "peripheral_1_mapping": 1,
                    "peripheral_map1": 1,
                    "pin_info1": 1,
                    "uart1_pins": 1,
                    "uart_periph1": 1,
                    "uart_periph_data1": 1,
                    "uart_peripheral1": 1,
                    "uart_pin_info1": 1
                },
                "DAT_08010004": {
                    "gpio_register": 1
                },
                "DAT_2000032c": {
                    "uart_array": 1,
                    "uart_registers": 2,
                    "uart_registers_array": 2
                },
                "DAT_40010004": {
                    "gpio_config_register": 1
                },
                "FUN_08002624": {
                    "pinmap_function": 1
                },
                "FUN_0800441a": {
                    "iprintf_error": 1
                },
                "FUN_08004884": {
                    "pinmap_peripheral": 1
                },
                "FUN_08004c78": {
                    "uart_init": 1
                },
                "FUN_08004cce": {
                    "gpio_init_port": 1
                },
                "FUN_08004d06": {
                    "set_gpio_clock": 1
                },
                "FUN_08004f4c": {
                    "configure_uart_pins": 6,
                    "initialize_uart": 9,
                    "initialize_uart_peripheral": 1,
                    "initialize_uart_pin": 1,
                    "initialize_uart_pins": 14
                },
                "FUN_080068f0": {
                    "pinmap_merge_peripheral": 1
                },
                "HAL_GPIO_Init": {
                    "initialize_gpio": 10,
                    "initialize_gpio_pins": 1
                },
                "HAL_UART_Init": {
                    "initialize_uart": 6,
                    "initialize_uart_config": 1,
                    "initialize_uart_instance": 1,
                    "initialize_uart_module": 1
                },
                "SET_GPIO_Port_Clock": {
                    "set_gpio_clock": 1
                },
                "_DAT_40010004": {
                    "gpio_register": 2,
                    "uart_gpio_init_value": 1
                },
                "_DAT_4002100c": {
                    "reg1": 1,
                    "register1": 1,
                    "uart1_clk_en_reg": 1,
                    "uart1_clock": 1,
                    "uart1_cr1": 1,
                    "uart1_registers1": 1,
                    "uart_periph_reg1": 1,
                    "uart_register1": 4,
                    "uart_registers1": 1
                },
                "_DAT_40021010": {
                    "reg3": 1,
                    "register3": 1,
                    "uart2_clk_en_reg": 1,
                    "uart2_control": 1,
                    "uart2_cr1": 1,
                    "uart2_registers1": 1,
                    "uart_periph_reg3": 1,
                    "uart_register3": 3,
                    "uart_registers3": 1
                },
                "_DAT_40021018": {
                    "reg2": 1,
                    "register2": 1,
                    "uart1_altfunc_reg": 1,
                    "uart1_brr": 1,
                    "uart1_control": 1,
                    "uart1_registers2": 1,
                    "uart_periph_reg2": 1,
                    "uart_register2": 4,
                    "uart_registers2": 1
                },
                "_DAT_4002101c": {
                    "reg4": 1,
                    "register4": 1,
                    "uart2_altfunc_reg": 1,
                    "uart2_brr": 1,
                    "uart2_clock": 1,
                    "uart2_registers2": 1,
                    "uart_periph_reg4": 1,
                    "uart_register4": 3,
                    "uart_registers4": 1
                },
                "byte": {
                    "pin_index": 1
                },
                "iVar1": {
                    "peripheral1": 10,
                    "peripheral_1": 2,
                    "peripheral_pin1": 1,
                    "pin1": 1,
                    "pin1_mapping": 1,
                    "pin_peripheral_1": 1,
                    "pinmap_result1": 1,
                    "result1": 1,
                    "uart1_pin": 2,
                    "uart1_res": 1,
                    "uart_peri1": 1,
                    "uart_peripheral1": 2,
                    "uart_pin1": 4,
                    "uart_pin1_peripheral": 1,
                    "uart_pin_peripheral1": 2
                },
                "iVar2": {
                    "peripheral2": 10,
                    "peripheral_2": 2,
                    "peripheral_pin2": 1,
                    "pin2": 1,
                    "pin2_mapping": 1,
                    "pin_peripheral_2": 1,
                    "pinmap_result2": 1,
                    "result2": 1,
                    "uart2_pin": 2,
                    "uart2_res": 1,
                    "uart_peri2": 1,
                    "uart_peripheral2": 2,
                    "uart_pin2": 4,
                    "uart_pin2_peripheral": 1,
                    "uart_pin_peripheral2": 2
                },
                "iprintf": {
                    "print_error": 2,
                    "print_error_message": 2
                },
                "local_14": {
                    "gpio_clock2": 1,
                    "gpio_config": 2,
                    "gpio_config1": 1,
                    "gpio_config3": 1,
                    "gpio_configuration": 1,
                    "gpio_init1": 1,
                    "gpio_init2": 1,
                    "gpio_init_config": 4,
                    "gpio_init_pins": 1,
                    "gpio_init_struct": 7,
                    "gpio_init_structure": 1,
                    "gpio_mode": 1,
                    "gpio_pin_init_structure": 1,
                    "gpio_pin_mode": 1,
                    "gpio_pin_speed1": 1,
                    "gpio_port_clock_2": 1,
                    "gpio_pupd1": 1,
                    "init_config": 1,
                    "init_struct": 1,
                    "uart_configuration": 1
                },
                "local_18": {
                    "bit_shift2": 1,
                    "gpio1_af": 1,
                    "gpio_alternate_function": 1,
                    "gpio_config2": 3,
                    "gpio_configuration2": 1,
                    "gpio_init_value": 1,
                    "gpio_mode": 1,
                    "gpio_mode1": 1,
                    "gpio_pin_alternate1": 2,
                    "gpio_pull": 1,
                    "gpio_speed1": 1,
                    "pin_alt_function": 1,
                    "pin_alternate_function": 1,
                    "pin_config2": 7,
                    "pin_config_2": 1,
                    "pin_mask3": 2,
                    "pin_mask_3": 1,
                    "pin_mode": 1,
                    "pin_mux": 1,
                    "shifted_value": 1,
                    "uart_pin_altfunc": 1
                },
                "local_1c": {
                    "alt_function": 1,
                    "bit_shift": 1,
                    "bit_shifted_value": 1,
                    "gpio1_func": 1,
                    "gpio_cfg1": 1,
                    "gpio_config1": 3,
                    "gpio_configuration1": 1,
                    "gpio_init_mask": 1,
                    "gpio_mode": 1,
                    "gpio_mode1": 1,
                    "gpio_pin_configuration": 1,
                    "gpio_pin_mode1": 2,
                    "pin_config": 3,
                    "pin_config1": 7,
                    "pin_config_1": 1,
                    "pin_function_select": 1,
                    "pin_mask2": 2,
                    "pin_mask_2": 1,
                    "uart_pin_af": 1
                },
                "local_20": {
                    "gpio1": 1,
                    "gpio_output": 1,
                    "gpio_output_bits": 1,
                    "gpio_pin": 1,
                    "gpio_pin1": 4,
                    "gpio_pin_mask": 2,
                    "gpio_pin_mask1": 3,
                    "pin_bit": 1,
                    "pin_mask": 8,
                    "pin_mask1": 5,
                    "pin_mask_1": 2,
                    "pin_number1": 1,
                    "uart_pin_mask": 1
                },
                "param_1": {
                    "pin_config": 7,
                    "pin_configs": 1,
                    "pin_configuration": 2,
                    "pins": 2,
                    "pins_array": 2,
                    "uart_config": 7,
                    "uart_params": 1,
                    "uart_pin_config": 4,
                    "uart_pins": 5
                },
                "pinmap_function": {
                    "get_function": 1,
                    "map_function": 2,
                    "map_pin_function": 2
                },
                "pinmap_merge_peripheral": {
                    "merge_peripheral": 3,
                    "merge_peripheral_mapping": 1,
                    "merge_pin_peripheral": 1
                },
                "pinmap_peripheral": {
                    "get_peripheral": 1,
                    "map_peripheral": 3,
                    "map_pin_peripheral": 1
                },
                "set_GPIO_Port_Clock": {
                    "configure_gpio_port_clock": 1,
                    "set_gpio_port_clock": 4
                },
                "uVar3": {
                    "gpio1_clock": 1,
                    "gpio_clk1": 1,
                    "gpio_clock": 1,
                    "gpio_clock1": 5,
                    "gpio_clock_1": 1,
                    "gpio_clock_result": 1,
                    "gpio_init1": 1,
                    "gpio_port": 4,
                    "gpio_port1": 4,
                    "gpio_port_c": 2,
                    "gpio_port_clock": 5,
                    "gpio_port_clock1": 3,
                    "gpio_port_clock_1": 1,
                    "uart_port_clock": 1
                },
                "uVar4": {
                    "function": 1,
                    "function_pin": 1,
                    "function_val": 1,
                    "function_value": 1,
                    "gpio_func1": 2,
                    "gpio_function": 5,
                    "gpio_function1": 2,
                    "gpio_function_1": 1,
                    "gpio_pin_function1": 1,
                    "gpio_port2": 2,
                    "pin_function": 10,
                    "pin_function_1": 1,
                    "pinmap_function_result": 1,
                    "uart_func": 1,
                    "uart_pin_function": 1
                }
            },
            "called": [
                "FUN_08004884",
                "FUN_0800441a",
                "FUN_080068f0",
                "FUN_08004d06",
                "FUN_08002624",
                "FUN_08004cce",
                "FUN_08004c78"
            ],
            "calling": [
                "FUN_08005a68",
                "FUN_08005384"
            ],
            "code": "\n\n\nvoid initialize_uart_pins_08004f4c(int *uart_config)\n\n{\n  int peripheral1;\n  int peripheral2;\n  undefined4 gpio_clock1;\n  uint pin_function;\n  uint pin_mask;\n  uint pin_config1;\n  uint pin_config2;\n  undefined4 gpio_init_struct;\n  \n  if (uart_config != (int *)0x0) {\n    peripheral1 = map_peripheral((int)*(char *)(uart_config + 0x16),&DAT_0800764c);\n    peripheral2 = map_peripheral((int)*(char *)((int)uart_config + 0x59),&DAT_08007604);\n    if ((peripheral2 == 0) || (peripheral1 == 0)) {\n      print_error_message(\"ERROR: at least one UART pin has no peripheral\\n\",peripheral2);\n    }\n    else {\n      peripheral1 = merge_peripheral(peripheral1);\n      *uart_config = peripheral1;\n      if (peripheral1 == 0) {\n        print_error_message(\"ERROR: U(S)ART pins mismatch\\n\");\n      }\n      else {\n        if (peripheral1 == 0x40013800) {\n          _DAT_4002100c = _DAT_4002100c & 0xffffbfff;\n          _DAT_40021018 = _DAT_40021018 | 0x4000;\n          *(undefined *)(uart_config + 0x11) = 0;\n          *(undefined *)((int)uart_config + 0x5a) = 0x25;\n        }\n        else if (peripheral1 == 0x40004400) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffdffff;\n          _DAT_4002101c = _DAT_4002101c | 0x20000;\n          *(undefined *)(uart_config + 0x11) = 1;\n          *(undefined *)((int)uart_config + 0x5a) = 0x26;\n        }\n        else if (peripheral1 == 0x40004800) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffbffff;\n          _DAT_4002101c = _DAT_4002101c | 0x40000;\n          *(undefined *)(uart_config + 0x11) = 2;\n          *(undefined *)((int)uart_config + 0x5a) = 0x27;\n        }\n        gpio_clock1 = set_gpio_port_clock((uint)((int)*(char *)((int)uart_config + 0x59) << 0x18) >> 0x1c);\n        pin_function = map_function((int)*(char *)((int)uart_config + 0x59),&DAT_08007604);\n        pin_mask = 1 << (*(pin_index *)((int)uart_config + 0x59) & 0xf) & 0xffff;\n        pin_config1 = (pin_function >> 3 & 1) << 4 | pin_function & 7;\n        pin_config2 = (pin_function << 0x1a) >> 0x1e;\n        _DAT_40021018 = _DAT_40021018 | 1;\n        switch((pin_function << 0x11) >> 0x19) {\n        case 1:\n          _DAT_40010004 = _DAT_40010004 | 0x7000001;\n          break;\n        case 2:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          break;\n        case 3:\n          _DAT_40010004 = _DAT_40010004 | 0x7000002;\n          break;\n        case 4:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          break;\n        case 5:\n          _DAT_40010004 = _DAT_40010004 | 0x7000004;\n          break;\n        case 6:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          break;\n        case 7:\n          _DAT_40010004 = _DAT_40010004 | 0x7000008;\n          break;\n        case 8:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          break;\n        case 9:\n          _DAT_40010004 = _DAT_40010004 | 0x7000030;\n          break;\n        case 10:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          break;\n        case 0xb:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          break;\n        case 0xc:\n          _DAT_40010004 = _DAT_40010004 | 0x70000c0;\n          break;\n        case 0xd:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          break;\n        case 0xe:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          break;\n        case 0xf:\n          _DAT_40010004 = _DAT_40010004 | 0x7000300;\n          break;\n        case 0x10:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          break;\n        case 0x11:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          break;\n        case 0x12:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          break;\n        case 0x13:\n          _DAT_40010004 = _DAT_40010004 | 0x7000c00;\n          break;\n        case 0x14:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          break;\n        case 0x15:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          break;\n        case 0x16:\n          _DAT_40010004 = _DAT_40010004 | 0x7001000;\n          break;\n        case 0x17:\n          _DAT_40010004 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          break;\n        case 0x1b:\n          _DAT_40010004 = _DAT_40010004 | 0x7008000;\n          break;\n        case 0x1c:\n          _DAT_40010004 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          break;\n        case 0x21:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff;\n          break;\n        case 0x22:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          break;\n        case 0x23:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          break;\n        case 0x24:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n        }\n        gpio_init_struct = 3;\n        initialize_gpio(gpio_clock1,&pin_mask);\n        gpio_clock1 = set_gpio_port_clock((uint)((int)*(char *)(uart_config + 0x16) << 0x18) >> 0x1c);\n        pin_function = map_function((int)*(char *)(uart_config + 0x16),&DAT_0800764c);\n        pin_mask = 1 << (*(pin_index *)(uart_config + 0x16) & 0xf) & 0xffff;\n        pin_config1 = (pin_function >> 3 & 1) << 4 | pin_function & 7;\n        pin_config2 = (pin_function << 0x1a) >> 0x1e;\n        initialize_gpio(gpio_clock1,&pin_mask);\n        (&DAT_2000032c)[*(pin_index *)(uart_config + 0x11)] = uart_config + 1;\n        uart_config[1] = *uart_config;\n        uart_config[2] = uart_config[0x12];\n        uart_config[3] = uart_config[0x13];\n        uart_config[4] = uart_config[0x14];\n        uart_config[5] = uart_config[0x15];\n        uart_config[6] = 0xc;\n        uart_config[7] = 0;\n        uart_config[8] = 0;\n        initialize_uart(uart_config + 1);\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_uart_pins_08004f4c",
            "entrypoint": "0x08004f4c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004f4c": "initialize_uart_pins_08004f4c",
                "HAL_GPIO_Init": "initialize_gpio",
                "HAL_UART_Init": "initialize_uart",
                "byte": "pin_index",
                "iVar1": "peripheral1",
                "iVar2": "peripheral2",
                "iprintf": "print_error_message",
                "local_14": "gpio_init_struct",
                "local_18": "pin_config2",
                "local_1c": "pin_config1",
                "local_20": "pin_mask",
                "param_1": "uart_config",
                "pinmap_function": "map_function",
                "pinmap_merge_peripheral": "merge_peripheral",
                "pinmap_peripheral": "map_peripheral",
                "set_GPIO_Port_Clock": "set_gpio_port_clock",
                "uVar3": "gpio_clock1",
                "uVar4": "pin_function"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005384": {
            "additional_data": {
                "2": {
                    "peripheral_num": 1
                },
                "DAT_08007604": {
                    "pin_data": 1,
                    "pin_info_2": 1,
                    "pinmap_pin": 1
                },
                "DAT_0800764c": {
                    "pin_info": 1,
                    "pinmap_data": 1,
                    "pinmap_device": 1
                },
                "DAT_20000088": {
                    "uart_config": 1,
                    "uart_config_struct": 1,
                    "uart_configuration": 2,
                    "uart_data": 2,
                    "uart_device": 1,
                    "uart_settings": 2
                },
                "DAT_200000d0": {
                    "baud_rate": 3,
                    "data_init": 1,
                    "pin_data": 1,
                    "pin_value_2": 1,
                    "uart_baud_rate": 1,
                    "value1": 1,
                    "value_1": 3
                },
                "DAT_200000d4": {
                    "data_value2": 1,
                    "pin_data_3": 1,
                    "stop_bits": 3,
                    "uart_parity": 1,
                    "value3": 1,
                    "value_3": 3,
                    "variable_2": 1
                },
                "DAT_200000d8": {
                    "data_value3": 1,
                    "parity": 1,
                    "parity_bits": 2,
                    "pin_data_4": 1,
                    "uart_stop_bit": 1,
                    "value4": 1,
                    "value_4": 3,
                    "variable_3": 1
                },
                "DAT_200000dc": {
                    "data_bits": 3,
                    "data_value1": 1,
                    "pin_data_2": 1,
                    "uart_data_bits": 1,
                    "value2": 1,
                    "value_2": 3,
                    "variable_1": 1
                },
                "DAT_200000e0": {
                    "peripheral_number": 1,
                    "peripheral_type": 1,
                    "pin_config": 1,
                    "pin_count": 3,
                    "pin_mode": 2,
                    "pin_number": 1,
                    "pinmap_device_type": 1,
                    "uart_id": 1
                },
                "DAT_200000e1": {
                    "assigned_pin": 1,
                    "pin": 3,
                    "pin_number": 2,
                    "pin_result": 1,
                    "pin_value": 3,
                    "uart_pin": 1
                },
                "FUN_08004c78": {
                    "pinmap_pin": 1
                },
                "FUN_08004ca2": {
                    "uart_init": 1
                },
                "FUN_08004f4c": {
                    "pinmap_peripheral": 1
                },
                "FUN_08005384": {
                    "initialize_peripheral": 4,
                    "initialize_peripherals": 1,
                    "initialize_uart": 25,
                    "initialize_uart_module": 1
                },
                "iVar1": {
                    "peripheral_result": 10,
                    "peripheral_status": 7,
                    "pin_map_status": 1,
                    "pin_result": 1,
                    "pinmap_result": 2,
                    "pinmap_result_code": 1,
                    "result": 9
                },
                "param_1": {
                    "int_pointer": 1,
                    "peripheral": 1,
                    "pin_number": 1,
                    "pinmap": 2,
                    "pinmap_result": 1,
                    "status": 2
                },
                "pinmap_peripheral": {
                    "get_peripheral_address": 1
                },
                "pinmap_pin": {
                    "get_pin_number": 1
                },
                "uVar2": {
                    "peripheral": 4,
                    "peripheral_address": 7,
                    "peripheral_id": 3,
                    "peripheral_pin": 2,
                    "peripheral_pin_result": 1,
                    "peripheral_result": 2,
                    "peripheral_result_2": 1,
                    "peripheral_uart": 1,
                    "pin_result": 8,
                    "pinmap_result": 1,
                    "pinmap_result_2": 1
                },
                "uart_init": {
                    "initialize_uart": 2
                }
            },
            "called": [
                "FUN_08004f4c",
                "FUN_08004c78",
                "FUN_08004ca2"
            ],
            "calling": [
                "FUN_080053d4"
            ],
            "code": "\nvoid initialize_uart_module_08005384(void)\n\n{\n  int peripheral_result;\n  undefined4 pin_result;\n  \n  peripheral_result = get_peripheral_address(2,&DAT_0800764c);\n  if (peripheral_result != 0) {\n    pin_result = get_peripheral_address(2,&DAT_0800764c);\n    DAT_200000e1 = get_pin_number(pin_result,&DAT_08007604);\n    DAT_200000e0 = 2;\n    DAT_200000d0 = 0x2580;\n    DAT_200000dc = 0;\n    DAT_200000d4 = 0;\n    DAT_200000d8 = 0;\n    initialize_uart(&DAT_20000088);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_uart_module_08005384",
            "entrypoint": "0x08005384",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005384": "initialize_uart_module_08005384",
                "iVar1": "peripheral_result",
                "pinmap_peripheral": "get_peripheral_address",
                "pinmap_pin": "get_pin_number",
                "uVar2": "pin_result",
                "uart_init": "initialize_uart"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080053d4": {
            "additional_data": {
                "DAT_0800764c": {
                    "peripheral_address": 2,
                    "peripheral_data": 10,
                    "peripheral_reference": 1,
                    "pin_data": 1,
                    "pinmap_address": 1,
                    "pinmap_data": 1
                },
                "DAT_200000cc": {
                    "debug_condition": 1,
                    "uart_config": 1,
                    "uart_count": 4,
                    "uart_data": 1,
                    "uart_debug": 1,
                    "uart_debug_flag": 1,
                    "uart_debug_value": 1,
                    "uart_handle_count": 1,
                    "uart_init_flag": 2,
                    "uart_peripheral_count": 2,
                    "uart_size": 2
                },
                "DAT_2000032c": {
                    "peripheral_array": 3,
                    "uart_addresses": 1,
                    "uart_array": 1,
                    "uart_data": 1,
                    "uart_handle": 1,
                    "uart_handle_array": 1,
                    "uart_map": 1,
                    "uart_peripheral_data": 1,
                    "uart_peripheral_list": 1
                },
                "FUN_080053d4": {
                    "send_data": 3,
                    "transmit_data": 28
                },
                "Frv_1": {
                    "start_time": 1
                },
                "Frv_2": {
                    "peripheral_id": 1
                },
                "Frv_3": {
                    "u_var": 1
                },
                "Frv_4": {
                    "uart_id": 1
                },
                "Frv_5": {
                    "transmit_result": 1
                },
                "HAL_GetTick": {
                    "get_current_tick": 3,
                    "get_current_time": 3
                },
                "HAL_UART_Transmit": {
                    "send_data": 1,
                    "transmit_uart": 2,
                    "transmit_uart_data": 3
                },
                "iVar1": {
                    "current_time": 1,
                    "start_tick": 8,
                    "start_time": 19,
                    "tick_start": 1
                },
                "iVar2": {
                    "peripheral": 10,
                    "peripheral_check": 1,
                    "peripheral_code": 1,
                    "peripheral_id": 4,
                    "peripheral_result": 1,
                    "peripheral_status": 1,
                    "pin_check": 1,
                    "pin_map_result": 2,
                    "pin_map_value": 1,
                    "pin_peripheral": 2,
                    "pin_result": 2,
                    "pin_status": 1,
                    "pinmap_result": 2
                },
                "param_1": {
                    "data": 27,
                    "data_buffer": 4
                },
                "param_2": {
                    "data_length": 3,
                    "data_size": 6,
                    "length": 12,
                    "size": 10
                },
                "pinmap_peripheral": {
                    "get_peripheral": 1,
                    "get_peripheral_code": 1,
                    "get_peripheral_pin": 1,
                    "get_peripheral_value": 1,
                    "get_pin_peripheral": 1,
                    "map_peripheral": 1
                },
                "uVar3": {
                    "count": 1,
                    "counter": 3,
                    "i": 3,
                    "index": 22
                },
                "uart_debug_init": {
                    "initialize_debug": 1,
                    "initialize_debug_uart": 4,
                    "initialize_uart_debug": 1
                }
            },
            "called": [
                "FUN_08001cc4",
                "FUN_08004c78",
                "FUN_08005384",
                "FUN_08004478"
            ],
            "calling": [
                "FUN_08005730"
            ],
            "code": "\nuint transmit_data_080053d4(undefined4 data,uint length)\n\n{\n  int start_time;\n  int peripheral;\n  uint index;\n  \n  start_time = get_current_tick();\n  peripheral = get_pin_peripheral(2,&DAT_0800764c);\n  if (peripheral == 0) {\n    return 0;\n  }\n  for (index = 0;\n      (index < 5 &&\n      (((&DAT_2000032c)[index] == 0 ||\n       (peripheral = get_pin_peripheral(2,&DAT_0800764c), *(int *)(&DAT_2000032c)[index] != peripheral))));\n      index = index + 1 & 0xff) {\n  }\n  if (4 < index) {\n    if ((4 < DAT_200000cc) && (initialize_debug_uart(), 4 < DAT_200000cc)) {\n      return 0;\n    }\n    index = (uint)DAT_200000cc;\n  }\n  do {\n    peripheral = transmit_uart_data((&DAT_2000032c)[index],data,length & 0xffff,1000);\n    if (peripheral == 0) {\n      return length;\n    }\n    peripheral = get_current_tick();\n  } while ((uint)(peripheral - start_time) < 1000);\n  return 0;\n}\n\n",
            "current_name": "transmit_data_080053d4",
            "entrypoint": "0x080053d4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080053d4": "transmit_data_080053d4",
                "HAL_GetTick": "get_current_tick",
                "HAL_UART_Transmit": "transmit_uart_data",
                "iVar1": "start_time",
                "iVar2": "peripheral",
                "param_1": "data",
                "param_2": "length",
                "pinmap_peripheral": "get_pin_peripheral",
                "uVar3": "index",
                "uart_debug_init": "initialize_debug_uart"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800548c": {
            "additional_data": {
                "FUN_080047e8": {
                    "get_uart_device_index": 1,
                    "get_uart_state": 6
                },
                "FUN_0800548c": {
                    "check_uart_state": 9,
                    "check_uart_status": 1,
                    "is_uart_idle": 1,
                    "is_uart_in_error_state": 1,
                    "is_uart_receiving_data": 1,
                    "is_uart_state_busy": 1,
                    "is_uart_state_error": 1,
                    "is_uart_state_ok": 1,
                    "is_uart_state_ready": 1,
                    "is_uart_state_valid": 6,
                    "is_uart_transmit_complete": 3,
                    "is_uart_transmitting": 3,
                    "is_uart_transmitting_data": 2
                },
                "HAL_UART_GetState": {
                    "get_uart_state": 5
                },
                "byte": {
                    "byte_val": 1,
                    "byte_value": 1,
                    "uint8_t": 1
                },
                "param_1": {
                    "data": 1,
                    "data_buffer": 1,
                    "data_index": 1,
                    "device_handle": 1,
                    "device_id": 3,
                    "device_identifier": 1,
                    "device_index": 4,
                    "device_number": 2,
                    "index": 3,
                    "input_data": 1,
                    "input_index": 1,
                    "input_param": 1,
                    "input_value": 6,
                    "uart_handle": 2,
                    "uart_instance": 1,
                    "uart_port": 1,
                    "uart_state": 1
                },
                "uVar1": {
                    "state": 1,
                    "state_flags": 1,
                    "uart_state": 29
                }
            },
            "called": [
                "FUN_080047e8"
            ],
            "calling": [
                "FUN_08005510",
                "FUN_080054d4"
            ],
            "code": "\nbool check_uart_state_0800548c(int input_value)\n\n{\n  uint uart_state;\n  \n  uart_state = get_uart_state((&DAT_2000032c)[*(byte_value *)(input_value + 0x44)]);\n  return (uart_state & 0x22) == 0x22;\n}\n\n",
            "current_name": "check_uart_state_0800548c",
            "entrypoint": "0x0800548c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800548c": "check_uart_state_0800548c",
                "HAL_UART_GetState": "get_uart_state",
                "byte": "byte_value",
                "param_1": "input_value",
                "uVar1": "uart_state"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080054b0": {
            "additional_data": {
                "DAT_2000032c": {
                    "uart_states": 1
                },
                "FUN_080047e8": {
                    "get_byte": 1,
                    "get_uart_state": 2
                },
                "FUN_080054b0": {
                    "check_uart_state": 16,
                    "is_uart_state_complete": 1,
                    "is_uart_state_error": 2,
                    "is_uart_state_set": 1,
                    "is_uart_state_transmitted": 1,
                    "is_uart_state_valid": 6,
                    "is_uart_transfer_ready": 1,
                    "is_uart_transmit_complete": 1,
                    "is_uart_transmitting": 1,
                    "is_uart_transmitting_data": 1
                },
                "HAL_UART_GetState": {
                    "get_uart_state": 5
                },
                "byte": {
                    "byte_val": 2,
                    "byte_value": 3
                },
                "param_1": {
                    "data": 2,
                    "data_address": 2,
                    "data_buffer": 2,
                    "device_id": 1,
                    "device_index": 1,
                    "index": 8,
                    "input": 4,
                    "input_index": 1,
                    "input_parameter": 1,
                    "input_value": 6,
                    "uart_handle": 2,
                    "uart_module": 1
                },
                "uVar1": {
                    "uart_state": 31
                }
            },
            "called": [
                "FUN_080047e8"
            ],
            "calling": [],
            "code": "\nbool check_uart_state_080054b0(int index)\n\n{\n  uint uart_state;\n  \n  uart_state = get_uart_state((&DAT_2000032c)[*(byte_value *)(index + 0x44)]);\n  return (uart_state & 0x21) == 0x21;\n}\n\n",
            "current_name": "check_uart_state_080054b0",
            "entrypoint": "0x080054b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080054b0": "check_uart_state_080054b0",
                "HAL_UART_GetState": "get_uart_state",
                "byte": "byte_value",
                "param_1": "index",
                "uVar1": "uart_state"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080054d4": {
            "additional_data": {
                "0xffffffff": {
                    "error_code": 1
                },
                "1": {
                    "data_length": 1
                },
                "DAT_2000032c": {
                    "callback_data": 1
                },
                "FUN_080045a2": {
                    "process_serial_rx": 1,
                    "serial_rx_active": 1,
                    "update_status": 1
                },
                "FUN_0800548c": {
                    "check_rx_active": 1,
                    "is_rx_active": 1,
                    "is_serial_rx_active": 1
                },
                "FUN_080054d4": {
                    "extract_and_receive_serial_data": 1,
                    "process_data": 1,
                    "process_serial_data": 2,
                    "receive_and_check": 1,
                    "receive_and_check_serial_data": 2,
                    "receive_and_process_data": 2,
                    "receive_and_update": 1,
                    "receive_and_update_data": 1,
                    "receive_data": 15,
                    "receive_data_from_uart": 3,
                    "receive_serial_data": 2
                },
                "HAL_UART_Receive_IT": {
                    "receive_data_interrupt": 1,
                    "receive_data_with_it": 1,
                    "receive_uart_data": 1,
                    "start_receive_interrupt": 1,
                    "start_serial_reception": 1
                },
                "iVar1": {
                    "active_status": 1,
                    "is_active": 1,
                    "is_rx_active": 11,
                    "is_serial_active": 3,
                    "is_serial_rx_active": 8,
                    "is_tx_active": 1,
                    "rx_active": 3
                },
                "param_1": {
                    "buffer": 1,
                    "check_value": 1,
                    "data": 2,
                    "data_buffer": 11,
                    "data_length": 4,
                    "data_option": 1,
                    "data_ptr": 3,
                    "data_size": 4,
                    "input_data": 1,
                    "status_ptr": 1,
                    "uart_device_index": 1,
                    "uart_index": 1
                },
                "param_2": {
                    "buffer": 1,
                    "byte_ptr": 1,
                    "data": 1,
                    "data_buffer": 3,
                    "output": 3,
                    "output_data": 1,
                    "param1": 1,
                    "receive_buffer": 2,
                    "received_data": 17,
                    "received_data_ptr": 1
                },
                "param_3": {
                    "length": 1,
                    "option_1": 1,
                    "param1": 1,
                    "param1_value": 1,
                    "param2": 1,
                    "param3": 7,
                    "param_3": 14,
                    "param_length": 1,
                    "param_size": 1,
                    "size": 3
                },
                "param_4": {
                    "arg2": 1,
                    "callback": 5,
                    "callback_data": 1,
                    "callback_func_ptr": 1,
                    "callback_param": 1,
                    "irq_priority": 1,
                    "option_2": 1,
                    "param2": 1,
                    "param2_value": 1,
                    "param4": 7,
                    "param_4": 10,
                    "serial_port": 1
                },
                "serial_rx_active": {
                    "check_if_rx_active": 1,
                    "check_rx_activity": 1,
                    "check_serial_active": 1,
                    "is_rx_active": 1,
                    "is_serial_receiving_active": 1
                }
            },
            "called": [
                "FUN_080045a2",
                "FUN_0800548c"
            ],
            "calling": [
                "FUN_0800598a"
            ],
            "code": "\nundefined4 receive_data_from_uart_080054d4(int data_buffer,undefined *received_data,undefined4 param_3,undefined4 param_4)\n\n{\n  int is_rx_active;\n  \n  if (data_buffer == 0) {\n    return 0xffffffff;\n  }\n  is_rx_active = check_rx_activity();\n  if (is_rx_active == 0) {\n    *received_data = *(undefined *)(data_buffer + 0x45);\n    receive_data_with_it((&DAT_2000032c)[*(byte *)(data_buffer + 0x44)],data_buffer + 0x45,1,&DAT_2000032c,\n                        param_4);\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "receive_data_from_uart_080054d4",
            "entrypoint": "0x080054d4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080054d4": "receive_data_from_uart_080054d4",
                "HAL_UART_Receive_IT": "receive_data_with_it",
                "iVar1": "is_rx_active",
                "param_1": "data_buffer",
                "param_2": "received_data",
                "serial_rx_active": "check_rx_activity"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005510": {
            "additional_data": {
                "FUN_08002494": {
                    "handle_uart_receive_interrupt": 1,
                    "receive_data": 1,
                    "receive_uart_data": 1
                },
                "FUN_080024f8": {
                    "handle_serial_rx_active": 1,
                    "initialize_serial_port_helper": 1,
                    "process_received_data": 1
                },
                "FUN_080045a2": {
                    "handle_set_interrupt_priority": 1,
                    "set_nvic_priority": 1,
                    "set_priority": 1
                },
                "FUN_0800548c": {
                    "handle_is_serial_rx_active": 1,
                    "is_rx_active": 2
                },
                "FUN_08005510": {
                    "configure_serial": 1,
                    "configure_serial_communication": 1,
                    "configure_uart": 1,
                    "handle_serial_data": 2,
                    "handle_serial_rx": 1,
                    "initialize_serial": 1,
                    "initialize_serial_comm": 1,
                    "initialize_serial_communication": 15,
                    "initialize_serial_communications": 1,
                    "initialize_serial_port": 1,
                    "process_serial_data": 3,
                    "process_serial_event": 1,
                    "set_up_serial_connection": 1,
                    "setup_serial_communication": 1
                },
                "HAL_NVIC_EnableIRQ": {
                    "enable_interrupt": 14,
                    "enable_irq": 2
                },
                "HAL_NVIC_SetPriority": {
                    "set_interrupt_priority": 12,
                    "set_priority": 4
                },
                "HAL_UART_Receive_IT": {
                    "receive_data": 5,
                    "receive_data_asynchronously": 1,
                    "receive_data_interrupt": 5,
                    "receive_data_via_uart": 1,
                    "receive_interrupt": 1,
                    "receive_uart_data": 2,
                    "set_uart_receive_interrupt": 1
                },
                "iVar1": {
                    "active_rx": 1,
                    "is_active": 2,
                    "is_rx_active": 5,
                    "is_serial_active": 3,
                    "is_serial_rx_active": 16,
                    "rx_active": 2,
                    "serial_active": 1,
                    "serial_rx_active": 1
                },
                "param_1": {
                    "data": 1,
                    "data_buffer": 1,
                    "device_address": 1,
                    "device_handle": 1,
                    "port": 2,
                    "serial_data": 2,
                    "serial_data_ptr": 1,
                    "serial_port": 20,
                    "serial_port_number": 1,
                    "uart_handle": 1
                },
                "param_2": {
                    "baud_rate": 10,
                    "data": 17,
                    "data_value": 1,
                    "priority": 2,
                    "value": 1
                },
                "param_3": {
                    "arg1": 1,
                    "data_bits": 10,
                    "irq_enable": 1,
                    "irq_priority": 1,
                    "param1": 1,
                    "param3": 6,
                    "param_3": 7,
                    "priority": 1,
                    "size": 1,
                    "unused1": 1,
                    "unused_param": 1
                },
                "param_4": {
                    "arg2": 1,
                    "interrupt_flag": 1,
                    "interrupt_handler": 1,
                    "interrupt_priority": 2,
                    "irq": 1,
                    "param2": 1,
                    "param4": 6,
                    "param_4": 6,
                    "parity": 1,
                    "priority": 1,
                    "stop_bits": 9,
                    "unused2": 1
                },
                "serial_rx_active": {
                    "is_serial_rx_active": 1
                },
                "uVar2": {
                    "byte_offset": 1,
                    "byte_value": 4,
                    "index": 15,
                    "port_index": 4,
                    "port_number": 1,
                    "serial_port_index": 6
                }
            },
            "called": [
                "FUN_080024f8",
                "FUN_080045a2",
                "FUN_0800548c",
                "FUN_08002494"
            ],
            "calling": [
                "FUN_08005a68"
            ],
            "code": "\nvoid initialize_serial_communication_08005510(int serial_port,undefined4 data,undefined4 data_bits,undefined4 stop_bits)\n\n{\n  int is_serial_rx_active;\n  uint index;\n  \n  if (serial_port != 0) {\n    is_serial_rx_active = is_serial_rx_active();\n    if (is_serial_rx_active == 0) {\n      index = (uint)*(byte *)(serial_port + 0x44);\n      *(undefined4 *)(&DAT_200002dc + index * 4) = data;\n      *(int *)(&DAT_200002f0 + index * 4) = serial_port;\n      set_interrupt_priority((int)*(char *)(serial_port + 0x5a),0,1,index,stop_bits);\n      enable_interrupt((int)*(char *)(serial_port + 0x5a));\n      receive_data((&DAT_2000032c)[*(byte *)(serial_port + 0x44)],serial_port + 0x45,1);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_serial_communication_08005510",
            "entrypoint": "0x08005510",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005510": "initialize_serial_communication_08005510",
                "HAL_NVIC_EnableIRQ": "enable_interrupt",
                "HAL_NVIC_SetPriority": "set_interrupt_priority",
                "HAL_UART_Receive_IT": "receive_data",
                "iVar1": "is_serial_rx_active",
                "param_1": "serial_port",
                "param_2": "data",
                "param_3": "data_bits",
                "param_4": "stop_bits",
                "serial_rx_active": "is_serial_rx_active",
                "uVar2": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005568": {
            "additional_data": {
                "DAT_20000304": {
                    "peripheral_priority_array": 1,
                    "priority_array": 1
                },
                "DAT_20000318": {
                    "address_array": 1,
                    "peripheral_base_address_array": 1
                },
                "FUN_08002494": {
                    "calculate_value": 1,
                    "configure_peripheral": 2,
                    "enable_interrupt": 1,
                    "enable_nvicirq": 1,
                    "initialize_function2": 1,
                    "initialize_peripheral_2": 1,
                    "perform_calculation": 1,
                    "set_component_settings": 1,
                    "set_interrupt_priority": 1,
                    "set_peripheral_attributes": 1,
                    "update_peripheral_values": 1
                },
                "FUN_080024f8": {
                    "configure_interrupt_priority": 1,
                    "configure_peripheral": 1,
                    "initialize_component": 1,
                    "initialize_function1": 1,
                    "initialize_interrupt": 1,
                    "initialize_peripheral": 4,
                    "initialize_peripheral1": 1,
                    "initialize_peripheral_1": 1,
                    "perform_action": 1,
                    "set_up_nvic_priority": 1
                },
                "FUN_0800455a": {
                    "configure_uart": 2,
                    "initialize_function3": 1,
                    "initialize_peripheral3": 1,
                    "initialize_peripheral_3": 1,
                    "process_data": 3,
                    "transmit_data": 3,
                    "transmit_data_over_uart": 1,
                    "transmit_data_with_uart_it": 1
                },
                "FUN_08005568": {
                    "configure_device_interrupts": 1,
                    "configure_device_irq": 1,
                    "configure_interrupt": 2,
                    "configure_interrupts": 1,
                    "configure_peripheral": 5,
                    "initialize_device": 4,
                    "initialize_hardware_component": 1,
                    "initialize_interrupt": 1,
                    "initialize_nvic_and_uart": 1,
                    "initialize_peripheral": 13,
                    "set_and_enable_irq": 1
                },
                "HAL_NVIC_EnableIRQ": {
                    "enable_device_irq": 1,
                    "enable_interrupt": 8,
                    "enable_interrupt_irq": 1
                },
                "HAL_NVIC_SetPriority": {
                    "set_device_priority": 1,
                    "set_interrupt_priority": 8,
                    "set_priority": 1
                },
                "HAL_UART_Transmit_IT": {
                    "transmit_data": 6,
                    "transmit_data_async": 2,
                    "transmit_data_over_uart": 1,
                    "transmit_uart_data": 1
                },
                "bVar1": {
                    "byte_index": 1,
                    "byte_val": 1,
                    "byte_value": 4,
                    "channel_index": 1,
                    "config_index": 2,
                    "device_byte": 1,
                    "index": 4,
                    "interrupt_index": 2,
                    "interrupt_number": 1,
                    "offset": 1,
                    "peripheral_code": 1,
                    "peripheral_data": 1,
                    "peripheral_index": 9,
                    "peripheral_type": 1,
                    "peripheral_value": 1
                },
                "param_1": {
                    "array_param": 1,
                    "device_address": 9,
                    "device_config": 1,
                    "device_handle": 1,
                    "device_pointer": 1,
                    "device_ptr": 1,
                    "hardware_component_address": 1,
                    "peripheral_address": 15,
                    "peripheral_id": 1
                },
                "param_2": {
                    "buffer_address": 1,
                    "config_data": 1,
                    "config_value": 2,
                    "configuration": 1,
                    "data": 1,
                    "device_setting": 1,
                    "int_param_1": 1,
                    "interrupt_priority": 4,
                    "new_value": 1,
                    "param_2": 1,
                    "param_value": 1,
                    "parameter": 1,
                    "parameter_value": 2,
                    "peripheral_value": 3,
                    "priority": 4,
                    "priority_level": 6
                },
                "param_3": {
                    "buffer_length": 1,
                    "data_offset": 1,
                    "int_param_2": 1,
                    "param_3": 1
                }
            },
            "called": [
                "FUN_080024f8",
                "FUN_08002494",
                "FUN_0800455a"
            ],
            "calling": [],
            "code": "\nvoid initialize_peripheral_08005568(int peripheral_address,undefined4 priority_level)\n\n{\n  byte peripheral_index;\n  \n  if (peripheral_address != 0) {\n    peripheral_index = *(byte *)(peripheral_address + 0x44);\n    *(undefined4 *)(&DAT_20000304 + (uint)peripheral_index * 4) = priority_level;\n    *(int *)(&DAT_20000318 + (uint)peripheral_index * 4) = peripheral_address;\n    set_interrupt_priority((int)*(char *)(peripheral_address + 0x5a),0,2);\n    enable_interrupt((int)*(char *)(peripheral_address + 0x5a));\n    transmit_data\n              ((&DAT_2000032c)[*(byte *)(peripheral_address + 0x44)],\n               *(int *)(peripheral_address + 100) + (uint)*(ushort *)(peripheral_address + 0x6a),1);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_peripheral_08005568",
            "entrypoint": "0x08005568",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005568": "initialize_peripheral_08005568",
                "HAL_NVIC_EnableIRQ": "enable_interrupt",
                "HAL_NVIC_SetPriority": "set_interrupt_priority",
                "HAL_UART_Transmit_IT": "transmit_data",
                "bVar1": "peripheral_index",
                "param_1": "peripheral_address",
                "param_2": "priority_level"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080055bc": {
            "additional_data": {
                "FUN_080055bc": {
                    "check_param_1": 1,
                    "find_element_index": 2,
                    "find_index": 4,
                    "find_index_of_param_1": 1,
                    "find_index_of_value": 1,
                    "find_integer_index": 1,
                    "find_number_index": 1,
                    "find_param_index": 1,
                    "find_value_index": 18,
                    "find_value_position": 1
                },
                "param_1": {
                    "array_value": 1,
                    "element": 1,
                    "input": 1,
                    "input_integer": 1,
                    "input_param": 1,
                    "input_value": 4,
                    "number": 1,
                    "value": 20,
                    "value_to_find": 1
                },
                "uVar1": {
                    "index": 29,
                    "position": 1,
                    "result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080055e0",
                "FUN_08005604"
            ],
            "code": "\nuint find_index_of_value_080055bc(int value)\n\n{\n  uint index;\n  \n  if (value == 0) {\n    index = 5;\n  }\n  else {\n    index = 0;\n    while( true ) {\n      if (4 < index) {\n        return index;\n      }\n      if (value == (&DAT_2000032c)[index]) break;\n      index = index + 1 & 0xff;\n    }\n  }\n  return index;\n}\n\n",
            "current_name": "find_index_of_value_080055bc",
            "entrypoint": "0x080055bc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080055bc": "find_index_of_value_080055bc",
                "param_1": "value",
                "uVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080055e0": {
            "additional_data": {
                "DAT_200002dc": {
                    "": 1,
                    "command_table": 1,
                    "ptr_uart_functions": 1,
                    "uart_operation_functions": 1,
                    "uart_operation_table": 1
                },
                "DAT_200002f0": {
                    "": 1,
                    "argument_table": 1,
                    "arguments_table": 1,
                    "ptr_uart_parameters": 1,
                    "uart_operation_args": 1
                },
                "FUN_080055bc": {
                    "get_uart_command": 1,
                    "get_uart_index": 7
                },
                "FUN_080055e0": {
                    "execute_uart_command": 7,
                    "execute_uart_function": 11,
                    "execute_uart_functions": 1,
                    "execute_uart_index_function": 1,
                    "execute_uart_instruction": 1,
                    "execute_uart_operation": 7,
                    "handle_uart_operations": 1,
                    "process_uart_commands": 2
                },
                "PTR_FUN_080055bc": {
                    "function_pointer": 1
                },
                "code": {
                    "function_pointer": 1
                },
                "param_1": {
                    "": 1,
                    "index": 15
                },
                "uVar1": {
                    "index": 2,
                    "index_value": 1,
                    "uart_index": 20,
                    "uart_index_result": 4,
                    "uart_index_value": 2
                }
            },
            "called": [
                "FUN_080055bc"
            ],
            "calling": [
                "FUN_08004618"
            ],
            "code": "\nvoid execute_uart_index_function_080055e0(void)\n\n{\n  uint uart_index;\n  \n  uart_index = uart_index();\n  if (uart_index < 5) {\n    (**(function_pointer **)(&DAT_200002dc + uart_index * 4))(*(undefined4 *)(&DAT_200002f0 + uart_index * 4));\n  }\n  return;\n}\n\n",
            "current_name": "execute_uart_index_function_080055e0",
            "entrypoint": "0x080055e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080055e0": "execute_uart_index_function_080055e0",
                "code": "function_pointer",
                "uVar1": "uart_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005604": {
            "additional_data": {
                "DAT_20000318": {
                    "base_address": 1
                },
                "FUN_0800455a": {
                    "transmit_data": 1,
                    "transmit_data_helper": 1,
                    "transmit_data_to_uart": 1,
                    "transmit_data_via_uart": 1,
                    "transmit_helper": 1,
                    "transmit_uart_data": 4,
                    "transmit_uart_data_it": 1,
                    "transmit_using_hal": 1
                },
                "FUN_080055bc": {
                    "get_uart_address": 1,
                    "get_uart_config": 1,
                    "get_uart_data": 2,
                    "get_uart_handle": 1,
                    "get_uart_index": 5,
                    "uart_index": 1
                },
                "FUN_08005604": {
                    "send_uart_data": 1,
                    "transmit_data": 20,
                    "transmit_data_over_uart": 2,
                    "transmit_uart_data": 8
                },
                "HAL_UART_Transmit_IT": {
                    "transmit_data": 1,
                    "transmit_data_it": 1
                },
                "iVar2": {
                    "result": 23,
                    "status": 2,
                    "transmit_result": 5
                },
                "iVar3": {
                    "address": 1,
                    "data": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "data_struct": 1,
                    "uart_address": 6,
                    "uart_config": 1,
                    "uart_context": 1,
                    "uart_data": 6,
                    "uart_data_ptr": 1,
                    "uart_descriptor": 1,
                    "uart_handle": 3,
                    "uart_pointer": 6
                },
                "param_1": {
                    "data_index": 1,
                    "index": 1,
                    "param_1": 1,
                    "uart_index": 4
                },
                "param_2": {
                    "param1": 1,
                    "param2": 2,
                    "param_2": 1,
                    "uart_data": 1
                },
                "param_3": {
                    "param2": 1,
                    "param3": 2,
                    "param_3": 1,
                    "uart_length": 1
                },
                "uVar1": {
                    "index": 3,
                    "uart_index": 24
                },
                "uart_index": {
                    "get_uart_index": 1
                }
            },
            "called": [
                "FUN_080055bc",
                "FUN_0800455a"
            ],
            "calling": [
                "FUN_080045fe"
            ],
            "code": "\nvoid transmit_data_over_uart_08005604(void)\n\n{\n  uint uart_index;\n  int result;\n  int uart_address;\n  \n  uart_index = get_uart_index();\n  uart_address = *(int *)(&DAT_20000318 + uart_index * 4);\n  if ((uart_index < 5) && (result = (**(code **)(&DAT_20000304 + uart_index * 4))(uart_address), result != -1)) {\n    transmit_data\n              ((&DAT_2000032c)[*(byte *)(uart_address + 0x44)],\n               *(int *)(uart_address + 100) + (uint)*(ushort *)(uart_address + 0x6a),1);\n  }\n  return;\n}\n\n",
            "current_name": "transmit_data_over_uart_08005604",
            "entrypoint": "0x08005604",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005604": "transmit_data_over_uart_08005604",
                "HAL_UART_Transmit_IT": "transmit_data",
                "iVar2": "result",
                "iVar3": "uart_address",
                "uVar1": "uart_index",
                "uart_index": "get_uart_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005650": {
            "called": [],
            "calling": [
                "FUN_080046b8"
            ],
            "code": "\nvoid FUNC_08005650(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08005650",
            "entrypoint": "0x08005650",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08005650": "FUNC_08005650"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080056d8": {
            "additional_data": {
                "DAT_20000340": {
                    "current_buffer": 1,
                    "current_memory": 11,
                    "current_memory_pointer": 2,
                    "current_memory_ptr": 1,
                    "current_pointer": 1,
                    "current_ptr": 1,
                    "initial_address": 1,
                    "memory_pointer": 1,
                    "memory_pool": 1,
                    "previous_allocated_memory": 1
                },
                "DAT_200006a4": {
                    "allocation_error_code": 1,
                    "buffer_capacity": 1,
                    "error_code": 19,
                    "error_flag": 1
                },
                "DAT_200006a8": {
                    "base_memory": 1,
                    "default_address": 1,
                    "default_buffer": 1,
                    "default_memory": 4,
                    "default_pool": 1,
                    "default_ptr": 1,
                    "initial_allocated_memory": 1,
                    "initial_memory": 7,
                    "initial_memory_pointer": 1,
                    "initial_pointer": 1,
                    "stack_start_ptr": 1
                },
                "FUN_080056d8": {
                    "allocate_memory": 30,
                    "get_buffer": 1
                },
                "param_1": {
                    "num_bytes": 1,
                    "size": 29,
                    "size_in_bytes": 1
                },
                "puVar1": {
                    "allocated_memory": 27,
                    "buffer": 1,
                    "memory_ptr": 1,
                    "ptr": 1,
                    "start_address": 1
                },
                "stack0x00000000": {
                    "max_stack_memory": 1,
                    "stack": 2,
                    "stack_base": 2,
                    "stack_bottom": 3,
                    "stack_end": 1,
                    "stack_limit": 2,
                    "stack_memory": 1,
                    "stack_pointer": 1,
                    "stack_start": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08006920"
            ],
            "code": "\nundefined * allocate_memory_080056d8(int size)\n\n{\n  undefined *allocated_memory;\n  \n  if (DAT_20000340 == (undefined *)0x0) {\n    DAT_20000340 = &DAT_200006a8;\n  }\n  allocated_memory = DAT_20000340;\n  if (DAT_20000340 + size <= &stack_bottom) {\n    DAT_20000340 = DAT_20000340 + size;\n    return allocated_memory;\n  }\n  DAT_200006a4 = 0xc;\n  return (undefined *)0xffffffff;\n}\n\n",
            "current_name": "allocate_memory_080056d8",
            "entrypoint": "0x080056d8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080056d8": "allocate_memory_080056d8",
                "param_1": "size",
                "puVar1": "allocated_memory",
                "stack0x00000000": "stack_bottom"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005714": {
            "additional_data": {
                "0xffffffff": {
                    "default_value": 1
                },
                "FUN_08005714": {
                    "get_default_return_value": 1,
                    "get_default_value": 6,
                    "get_error_code": 8,
                    "get_magic_number": 1,
                    "get_missing_value": 1,
                    "get_return_value": 5,
                    "get_status": 1,
                    "get_unsigned_int": 1,
                    "initialize_default_value": 1,
                    "initialize_error_flag": 1,
                    "initialize_error_value": 1,
                    "initialize_return_value": 2,
                    "initialize_value": 2
                },
                "PTR_08005714": {
                    "default_value": 1
                },
                "return": {
                    "status": 1
                },
                "return_value": {
                    "default_value": 1
                },
                "undefined4": {
                    "error_code": 1,
                    "int": 3,
                    "uint32_t": 5,
                    "unsigned_int": 2
                }
            },
            "called": [],
            "calling": [],
            "code": "\nuint32_t get_default_return_value_08005714(void)\n\n{\n  status 0xffffffff;\n}\n\n",
            "current_name": "get_default_return_value_08005714",
            "entrypoint": "0x08005714",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005714": "get_default_return_value_08005714",
                "return": "status",
                "undefined4": "uint32_t"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800571a": {
            "additional_data": {
                "0x2000": {
                    "default_permissions": 1
                },
                "DAT_08005702": {
                    "segment_size": 1
                },
                "FUN_0800571a": {
                    "initialize_memory": 8,
                    "initialize_memory_allocation": 1,
                    "initialize_memory_segment": 1,
                    "set_buffer_size": 1,
                    "set_memory_flag": 3,
                    "set_memory_flags": 1,
                    "set_memory_page_size": 4,
                    "set_memory_permission": 1,
                    "set_memory_size": 4,
                    "set_memory_to2000": 1,
                    "set_memory_value": 1,
                    "set_page_size": 3,
                    "set_permissions": 1,
                    "set_restriction_flag": 1
                },
                "PTR_baseAddress": {
                    "new_base_address": 1
                },
                "PTR_buffer": {
                    "base_ptr": 1
                },
                "param_1": {
                    "address": 1,
                    "base_address": 2,
                    "buffer": 2,
                    "destination": 1,
                    "flag": 1,
                    "flags": 1,
                    "input_flag": 1,
                    "memory_address": 1,
                    "param": 5,
                    "param1": 7,
                    "param_0": 1,
                    "param_1": 1,
                    "result": 4,
                    "result_code": 1,
                    "value": 2
                },
                "param_2": {
                    "address": 5,
                    "base_address": 2,
                    "buffer_size": 1,
                    "data_ptr": 1,
                    "mem_address": 1,
                    "memory_address": 13,
                    "memory_offset": 2,
                    "memory_pointer": 1,
                    "output_ptr": 1,
                    "page_descriptor": 1,
                    "param2": 2,
                    "target_address": 1
                },
                "param_3": {
                    "size": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08007004"
            ],
            "code": "\nundefined4 set_memory_page_size_0800571a(undefined4 param1,int memory_address)\n\n{\n  *(undefined4 *)(memory_address + 4) = 0x2000;\n  return 0;\n}\n\n",
            "current_name": "set_memory_page_size_0800571a",
            "entrypoint": "0x0800571a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800571a": "set_memory_page_size_0800571a",
                "param_1": "param1",
                "param_2": "memory_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005724": {
            "additional_data": {
                "1": {
                    "result": 1
                },
                "DAT_YYYYYY": {
                    "unchanged": 1
                },
                "FUN_08005724": {
                    "check_success": 1,
                    "check_value": 1,
                    "get_config_status": 1,
                    "get_one": 5,
                    "get_return_value": 7,
                    "get_status": 1,
                    "initialize": 6,
                    "initialize_application": 1,
                    "initialize_flag": 1,
                    "initialize_program": 1,
                    "initialize_return_value": 3,
                    "initialize_system": 2,
                    "return_one": 1
                },
                "PTR_XXXXXX": {
                    "unchanged": 1
                },
                "ReturnValue": {
                    "return_value": 1
                },
                "return": {
                    "": 1,
                    "result": 2,
                    "status": 2
                },
                "undefined4": {
                    "int": 3,
                    "uint32_t": 1,
                    "void": 2
                },
                "void": {
                    "": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08007028"
            ],
            "code": "\nint initialize_return_value_08005724(void)\n\n{\n  result 1;\n}\n\n",
            "current_name": "initialize_return_value_08005724",
            "entrypoint": "0x08005724",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005724": "initialize_return_value_08005724",
                "return": "result",
                "undefined4": "int"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005728": {
            "additional_data": {
                "": {
                    "": 2
                },
                "0": {
                    "": 1
                },
                "FUN_08005728": {
                    "clear_data": 2,
                    "clear_system": 1,
                    "get_default_value": 4,
                    "get_zero": 2,
                    "initialize": 10,
                    "initialize_app": 1,
                    "initialize_application": 2,
                    "initialize_data": 1,
                    "initialize_function": 2,
                    "initialize_program": 5,
                    "initialize_zero": 1
                },
                "PTR_08005728": {
                    "program_pointer": 1
                },
                "PTR_XXXX": {
                    "new_parameter": 1
                },
                "PTR_YYYY": {
                    "another_parameter": 1
                },
                "ptr_variable_1": {
                    "ptr_data_1": 1
                },
                "ptr_variable_2": {
                    "ptr_data_2": 1
                },
                "ptr_variable_n": {
                    "ptr_data_n": 1
                },
                "return": {
                    "": 1,
                    "result": 2,
                    "success": 2
                },
                "undefined4": {
                    "int": 3,
                    "void": 15
                },
                "void": {
                    "": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08007048"
            ],
            "code": "\nvoid initialize_program_08005728(void)\n\n{\n  success 0;\n}\n\n",
            "current_name": "initialize_program_08005728",
            "entrypoint": "0x08005728",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005728": "initialize_program_08005728",
                "return": "success",
                "undefined4": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800572c": {
            "additional_data": {
                "DAT_": {
                    "unchanged": 1
                },
                "DAT_67890": {
                    "important_data": 1
                },
                "DAT_XXX": {
                    "unimportant_data": 1
                },
                "FUN_0800572c": {
                    "get_default_value": 4,
                    "get_zero": 2,
                    "get_zero_value": 1,
                    "initialize": 12,
                    "initialize_application": 5,
                    "initialize_data": 1,
                    "initialize_function": 1,
                    "initialize_program": 4,
                    "return_zero": 1
                },
                "PTR_": {
                    "unchanged": 1
                },
                "PTR_0800572c": {
                    "data_pointer": 1
                },
                "PTR_12345": {
                    "important_pointer": 1
                },
                "PTR_XXX": {
                    "unimportant_pointer": 1
                },
                "result": {
                    "status": 1
                },
                "return": {
                    "return_value": 1,
                    "status": 1
                },
                "undefined4": {
                    "int": 1,
                    "status": 2,
                    "void": 9
                }
            },
            "called": [],
            "calling": [
                "FUN_0800706c"
            ],
            "code": "\nvoid initialize_application_0800572c(void)\n\n{\n  return_value 0;\n}\n\n",
            "current_name": "initialize_application_0800572c",
            "entrypoint": "0x0800572c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800572c": "initialize_application_0800572c",
                "return": "return_value",
                "undefined4": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005730": {
            "additional_data": {
                "FUN_080053d4": {
                    "calculate_check_sum": 1,
                    "change_message_format": 1,
                    "perform_operation": 1,
                    "process_data": 3,
                    "process_message": 1,
                    "reverse_bits": 3,
                    "reverse_data": 6,
                    "reverse_number": 1
                },
                "FUN_08005730": {
                    "debug_write_uart": 2,
                    "print_debug_info": 1,
                    "print_debug_message": 1,
                    "uart_debug_write_wrapper": 1,
                    "write_debug_data": 2,
                    "write_debug_info": 3,
                    "write_debug_message": 19,
                    "write_debug_output": 1,
                    "write_debug_to_uart": 1
                },
                "param_1": {
                    "address": 1,
                    "arg1": 1,
                    "input_data": 1,
                    "msg_type": 1,
                    "not_used_1": 1,
                    "param": 1,
                    "param_1": 7,
                    "param_unused": 1,
                    "undefined_param": 1,
                    "undefined_param_1": 1,
                    "unused": 6,
                    "unused_param": 8,
                    "unused_parameter": 1
                },
                "param_2": {
                    "arg1": 1,
                    "buffer": 1,
                    "data": 3,
                    "data1": 2,
                    "data_1": 8,
                    "data_addr": 1,
                    "data_param_1": 1,
                    "data_ptr": 1,
                    "data_window_address": 1,
                    "input_length": 1,
                    "message": 1,
                    "message_buffer": 2,
                    "message_param": 2,
                    "message_ptr": 3,
                    "undefined_param_2": 1,
                    "value": 2
                },
                "param_3": {
                    "buffer_length": 1,
                    "data2": 2,
                    "data_2": 9,
                    "data_param_2": 1,
                    "data_size": 1,
                    "len": 1,
                    "length": 4,
                    "length_param": 1,
                    "message_length": 2,
                    "param_3": 1,
                    "param_a": 1,
                    "param_ptr": 1,
                    "param_unused_1": 1,
                    "size": 3,
                    "size_1": 1,
                    "undefined_param_3": 1
                },
                "param_4": {
                    "arg4": 1,
                    "count": 1,
                    "data_3": 6,
                    "not_used_2": 1,
                    "param_4": 5,
                    "param_b": 1,
                    "param_unused_2": 1,
                    "size_2": 1,
                    "undefined_param_4": 1,
                    "unused": 4,
                    "unused_2": 1,
                    "unused_param": 5,
                    "unused_param_2": 2,
                    "value_param": 1
                }
            },
            "called": [
                "FUN_080053d4"
            ],
            "calling": [
                "FUN_08006f5a"
            ],
            "code": "\nvoid write_debug_message_08005730(undefined4 unused_param,undefined4 data_1,undefined4 data_2,undefined4 data_3)\n\n{\n  uart_debug_write(data_1,data_2,data_2,data_3,data_3);\n  return;\n}\n\n",
            "current_name": "write_debug_message_08005730",
            "entrypoint": "0x08005730",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005730": "write_debug_message_08005730",
                "param_1": "unused_param",
                "param_2": "data_1",
                "param_3": "data_2",
                "param_4": "data_3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800573c": {
            "additional_data": {
                "": {
                    "": 1
                },
                "DAT_": {
                    "": 1,
                    "unchanged": 1
                },
                "DAT_0800573c": {
                    "dat1": 1
                },
                "DAT_0800573d": {
                    "no_changes": 1
                },
                "DAT_87654321": {
                    "data": 1
                },
                "DAT_XXXXX": {
                    "unchanged": 1
                },
                "FUN_0800573c": {
                    "endless_loop": 4,
                    "infinite_loop": 22,
                    "infinitely_loop": 1,
                    "run_infinite_loop": 4
                },
                "PTR_": {
                    "": 1
                },
                "PTR_0800573c": {
                    "ptr1": 1,
                    "ptr_infinite_loop": 1
                },
                "PTR_12345678": {
                    "ptr_data": 1
                },
                "PTR_XXXXX": {
                    "unchanged": 1
                },
                "do": {
                    "do": 2,
                    "while": 1
                },
                "original_variable_name_1": {
                    "loop_counter": 1
                },
                "ptr": {
                    "whatever": 1
                },
                "ptr_nothing_block": {
                    "nothing_block": 1
                },
                "true": {
                    "true": 3
                }
            },
            "called": [
                "FUN_0800573c"
            ],
            "calling": [
                "FUN_0800573c",
                "FUN_08006ac0"
            ],
            "code": "\nvoid run_infinite_loop_0800573c(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "current_name": "run_infinite_loop_0800573c",
            "entrypoint": "0x0800573c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800573c": "run_infinite_loop_0800573c"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005740": {
            "additional_data": {
                "DAT_200006a4": {
                    "counter": 1,
                    "data": 1,
                    "data_pointer": 1,
                    "data_size": 3,
                    "data_structure_variable": 1,
                    "data_value": 7,
                    "default_value": 1,
                    "initial_value": 7,
                    "memory_address": 1,
                    "number_of_iterations": 1
                },
                "FUN_08005740": {
                    "initialize_data": 18,
                    "initialize_data_structure": 1,
                    "initialize_value": 5,
                    "set_default_value": 1,
                    "set_initial_value": 6
                },
                "return": {
                    "status": 1
                },
                "undefined4": {
                    "void": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08006f00"
            ],
            "code": "\nvoid initialize_data_structure_08005740(void)\n\n{\n  DAT_200006a4 = 0x16;\n  status 0xffffffff;\n}\n\n",
            "current_name": "initialize_data_structure_08005740",
            "entrypoint": "0x08005740",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005740": "initialize_data_structure_08005740",
                "return": "status",
                "undefined4": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005750": {
            "additional_data": {
                "DAT_12345678": {
                    "return_value": 1
                },
                "FUN_08005750": {
                    "check_if_one": 1,
                    "check_return_value": 1,
                    "check_success": 1,
                    "determine_return_value": 1,
                    "get_constant_one": 1,
                    "get_one": 4,
                    "get_result": 3,
                    "get_return_value": 6,
                    "initialize": 6,
                    "initialize_application": 4,
                    "initialize_flag": 1,
                    "initialize_something": 1,
                    "return_one": 1
                },
                "RET": {
                    "return_value": 1
                },
                "return": {
                    "result": 2
                },
                "undefined4": {
                    "bool": 1,
                    "int": 1,
                    "uint32_t": 1,
                    "void": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_08006f34"
            ],
            "code": "\nvoid initialize_application_08005750(void)\n\n{\n  result 1;\n}\n\n",
            "current_name": "initialize_application_08005750",
            "entrypoint": "0x08005750",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005750": "initialize_application_08005750",
                "return": "result",
                "undefined4": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005754": {
            "additional_data": {
                "DAT_080076f0": {
                    "char_array": 1
                },
                "DAT_200000f4": {
                    "adc_data": 1,
                    "shift_amount": 3
                },
                "F": {
                    "decode_value": 1
                },
                "FUN_08005754": {
                    "convert_param_to_adc_value": 1,
                    "convert_value": 1,
                    "decode_and_adjust_value": 1,
                    "decode_and_modify_value": 1,
                    "decode_and_shift": 1,
                    "decode_value": 1,
                    "extract_value": 1,
                    "extract_value_from_binary": 1,
                    "extracted_value": 1,
                    "get_adc_value": 8,
                    "get_processed_value": 1,
                    "process_param": 1,
                    "process_value": 1,
                    "read_adc_value": 3,
                    "read_and_adjust_value": 1,
                    "read_and_shift_value": 1,
                    "transform_data": 1
                },
                "adc_read_value": {
                    "read_adc_value": 2
                },
                "bVar1": {
                    "is_correct_range": 1,
                    "is_in_range": 3,
                    "is_input_valid": 1,
                    "is_less_than3_c": 1,
                    "is_less_than_0x3c": 11,
                    "is_less_than_60": 2,
                    "is_less_than_three_c": 1,
                    "is_less_than_threshold": 5,
                    "is_small_input": 1,
                    "is_valid": 3,
                    "is_valid_input": 1,
                    "is_valid_range": 1
                },
                "cVar2": {
                    "adc_value": 1,
                    "char_value": 6,
                    "character": 2,
                    "character_value": 5,
                    "data_value": 1,
                    "decoded_char": 3,
                    "decoded_character": 1,
                    "decoded_value": 1,
                    "extracted_char": 2,
                    "extracted_value": 1,
                    "read_result": 1,
                    "read_value": 2,
                    "read_value_char": 1,
                    "result": 2,
                    "result_char": 1,
                    "selected_char": 1
                },
                "param_1": {
                    "input": 1,
                    "input_param": 1,
                    "input_val": 1,
                    "input_value": 21,
                    "value": 7
                },
                "uVar3": {
                    "adc_result": 1,
                    "adc_value": 5,
                    "adjusted_value": 2,
                    "converted_adc_value": 1,
                    "decoded_value": 1,
                    "output_val": 1,
                    "output_value": 6,
                    "processed_value": 1,
                    "result": 9,
                    "result_value": 1,
                    "return_value": 1,
                    "shifted_value": 2
                }
            },
            "called": [
                "FUN_08004a4c"
            ],
            "calling": [
                "FUN_08000cd0"
            ],
            "code": "\nuint get_adc_value_08005754(uint input_value)\n\n{\n  bool is_less_than_0x3c;\n  char char_value;\n  uint result;\n  \n  if (input_value < 0xe) {\n    if (input_value + 0x2e < 0x3c) {\n      is_less_than_0x3c = true;\n    }\n    else {\n      is_less_than_0x3c = false;\n    }\n  }\n  else {\n    is_less_than_0x3c = input_value < 0x3c;\n  }\n  if (is_less_than_0x3c) {\n    if (input_value < 0xe) {\n      input_value = input_value + 0x2e;\n    }\n    char_value = (&DAT_080076f0)[input_value];\n  }\n  else {\n    char_value = -1;\n  }\n  if (char_value == -1) {\n    result = 0;\n  }\n  else {\n    result = read_adc_value();\n    if (DAT_200000f4 != 0xc) {\n      if (DAT_200000f4 < 0xc) {\n        return result >> (0xc - DAT_200000f4 & 0xff);\n      }\n      return result << (DAT_200000f4 - 0xc & 0xff);\n    }\n  }\n  return result;\n}\n\n",
            "current_name": "get_adc_value_08005754",
            "entrypoint": "0x08005754",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005754": "get_adc_value_08005754",
                "adc_read_value": "read_adc_value",
                "bVar1": "is_less_than_0x3c",
                "cVar2": "char_value",
                "param_1": "input_value",
                "uVar3": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080057b4": {
            "additional_data": {
                "DAT_080074b4": {
                    "pin_map": 1,
                    "pinmap": 1
                },
                "DAT_080076f0": {
                    "pin_config_array": 1,
                    "pin_config_lookup_table": 1
                },
                "DAT_20000344": {
                    "parameter_1": 1,
                    "pin_config_array_lookup": 1
                },
                "DAT_20000358": {
                    "pin_configured_array": 2
                },
                "FUN_080047f4": {
                    "check_pin_mode": 1,
                    "get_pin_mode": 1,
                    "set_pin_configured": 2
                },
                "FUN_0800480a": {
                    "digital_io_init": 2,
                    "init_pin_mode": 1,
                    "initialize_pin": 1
                },
                "FUN_08004828": {
                    "init_pin": 1,
                    "is_pin_configured": 2,
                    "set_pin_mode": 1
                },
                "FUN_08004b3c": {
                    "reset_config": 1,
                    "reset_pin": 1,
                    "reset_pin_configured": 2
                },
                "FUN_08004bb0": {
                    "initialize_io": 1,
                    "pwm_stop": 2,
                    "update_pin_config": 1
                },
                "FUN_08004ce2": {
                    "configure_pin_mode": 1,
                    "configure_pin_param": 1,
                    "pin_in_pinmap": 2
                },
                "FUN_080057b4": {
                    "configure_and_init_pin": 1,
                    "configure_and_initialize_pin": 1,
                    "configure_digital_io": 1,
                    "configure_gpio_pin": 2,
                    "configure_pin": 15,
                    "configure_pin_functionality": 1,
                    "initialize_and_configure_pin": 2,
                    "initialize_digital_pin": 1,
                    "initialize_pin": 6,
                    "initialize_pin_config": 1
                },
                "digital_io_init": {
                    "init_digital_io": 1,
                    "initialize_digital_io": 9,
                    "initialize_gpio": 1
                },
                "iVar1": {
                    "configured": 2,
                    "is_configured": 4,
                    "is_pin_configured": 3,
                    "is_pin_configured_result": 4,
                    "pin_config_result": 4,
                    "pin_configured": 12,
                    "was_pin_configured": 1
                },
                "iVar3": {
                    "pin_config": 3,
                    "pin_config_index": 7,
                    "pin_config_num": 1,
                    "pin_config_status": 1,
                    "pin_config_value": 2,
                    "pin_configuration": 1,
                    "pin_configuration_index": 1,
                    "pin_data": 1,
                    "pin_id": 1,
                    "pin_index": 7,
                    "pin_mapping": 1,
                    "pin_mapping_index": 1,
                    "pin_value": 3
                },
                "is_pin_configured": {
                    "check_if_pin_configured": 1,
                    "check_pin_config": 1,
                    "check_pin_configuration": 4,
                    "check_pin_configured": 1,
                    "is_pin_already_configured": 1,
                    "is_pin_configured": 3
                },
                "param_1": {
                    "pin_index": 11,
                    "pin_number": 20
                },
                "param_2": {
                    "config_option": 2,
                    "config_type": 1,
                    "digital_mode": 1,
                    "gpio_mode": 1,
                    "io_mode": 4,
                    "mode": 5,
                    "operation_mode": 1,
                    "pin_mode": 16
                },
                "param_3": {
                    "argument_1": 1,
                    "input_polarity": 1,
                    "param": 2,
                    "param1": 1,
                    "param3": 9,
                    "param_3": 10,
                    "parameter_1": 1,
                    "parameter_3": 2,
                    "pin_speed": 1,
                    "pin_value": 1,
                    "pullup": 1,
                    "unused": 1
                },
                "param_4": {
                    "argument_2": 1,
                    "config_data": 1,
                    "custom_pin_config": 1,
                    "param4": 6,
                    "param_4": 5,
                    "param_data": 1,
                    "parameter_2": 1,
                    "parameter_4": 1,
                    "pin_config": 9,
                    "pin_configuration": 1,
                    "pin_data": 3,
                    "pin_mapping": 1
                },
                "pin_in_pinmap": {
                    "check_pin_in_map": 2,
                    "check_pin_in_pinmap": 6,
                    "find_pin_in_pinmap": 1,
                    "is_pin_in_pinmap": 2
                },
                "puVar2": {
                    "pin_arr": 1,
                    "pin_array": 3,
                    "pin_config_array": 6,
                    "pin_config_data": 1,
                    "pin_config_ptr": 7,
                    "pin_configuration_array": 1,
                    "pin_data": 5,
                    "pin_data_array": 1,
                    "pin_map": 1,
                    "pin_mapping": 1,
                    "pin_mapping_ptr": 1,
                    "pin_mode_table": 1,
                    "pin_ptr": 1
                },
                "pwm_stop": {
                    "stop_pwm": 11
                },
                "reset_pin_configured": {
                    "reset_pin_config": 1,
                    "reset_pin_configuration": 4,
                    "reset_pin_configured": 5,
                    "unset_pin_configuration": 1
                },
                "set_pin_configured": {
                    "set_pin_config": 1,
                    "set_pin_configuration": 4,
                    "set_pin_configured": 5
                }
            },
            "called": [
                "FUN_08004828",
                "FUN_08004ce2",
                "FUN_08004bb0",
                "FUN_08004b3c",
                "FUN_0800480a",
                "FUN_080047f4"
            ],
            "calling": [
                "FUN_08000bcc",
                "FUN_0800157c",
                "FUN_080013a4"
            ],
            "code": "\nvoid configure_gpio_pin_080057b4(uint pin_number,undefined4 pin_mode,undefined4 param_3,undefined *pin_config)\n\n{\n  int pin_configured;\n  undefined *pin_config_ptr;\n  int pin_index;\n  \n  if (pin_number < 0x3c) {\n    pin_index = (int)(char)(&DAT_080076f0)[pin_number];\n    pin_config_ptr = &DAT_080076f0;\n  }\n  else {\n    pin_index = -1;\n    pin_config_ptr = pin_config;\n  }\n  if (pin_index != -1) {\n    pin_configured = check_pin_configuration(pin_index,&DAT_20000344,param_3,pin_config_ptr,pin_config);\n    if (pin_configured != 0) {\n      pin_configured = check_pin_in_pinmap(pin_index,&DAT_080074b4);\n      if (pin_configured != 0) {\n        stop_pwm(pin_index);\n      }\n      reset_pin_configured(pin_index,&DAT_20000344);\n    }\n    switch(pin_mode) {\n    case 0:\n      initialize_digital_io(pin_index,0);\n      break;\n    case 1:\n      initialize_digital_io(pin_index,1,0);\n      break;\n    case 2:\n      initialize_digital_io(pin_index,0,1);\n      break;\n    case 3:\n      initialize_digital_io(pin_index,0,2);\n    }\n    set_pin_configured(pin_index,&DAT_20000358);\n  }\n  return;\n}\n\n",
            "current_name": "configure_gpio_pin_080057b4",
            "entrypoint": "0x080057b4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080057b4": "configure_gpio_pin_080057b4",
                "digital_io_init": "initialize_digital_io",
                "iVar1": "pin_configured",
                "iVar3": "pin_index",
                "is_pin_configured": "check_pin_configuration",
                "param_1": "pin_number",
                "param_2": "pin_mode",
                "param_4": "pin_config",
                "pin_in_pinmap": "check_pin_in_pinmap",
                "puVar2": "pin_config_ptr",
                "pwm_stop": "stop_pwm"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005848": {
            "additional_data": {
                "FUN_08005848": {
                    "configure_and_write_gpio": 3,
                    "configure_and_write_gpio_pin": 2,
                    "configure_and_write_pin": 4,
                    "configure_gpio_pin": 7,
                    "configure_pin": 14,
                    "configure_pin_and_write_output": 1
                },
                "digital_io_write": {
                    "write_digital_io": 2,
                    "write_gpio": 1,
                    "write_gpio_port": 1,
                    "write_gpio_value": 1,
                    "write_to_gpio": 2,
                    "write_to_gpio_port": 2
                },
                "get_GPIO_Port": {
                    "get_gpio_port": 4,
                    "get_gpio_port_from_config": 1,
                    "get_gpio_port_from_data": 1,
                    "get_gpio_port_from_pin_config": 1,
                    "get_port": 1,
                    "retrieve_gpio_port": 1
                },
                "iVar1": {
                    "config_result": 1,
                    "configured": 1,
                    "is_configured": 9,
                    "is_pin_configured_result": 3,
                    "pin_config_status": 3,
                    "pin_configured": 11,
                    "result": 3
                },
                "is_pin_configured": {
                    "check_pin_configuration": 7
                },
                "param_1": {
                    "pin_index": 18,
                    "pin_number": 13
                },
                "param_2": {
                    "config_value": 1,
                    "data": 1,
                    "output_value": 6,
                    "param_2": 2,
                    "pin_state": 2,
                    "pin_value": 4,
                    "value": 14,
                    "value_to_write": 1
                },
                "param_3": {
                    "config": 4,
                    "config_1": 1,
                    "config_param": 1,
                    "config_param_1": 1,
                    "config_type": 1,
                    "extra_param": 1,
                    "input_value": 2,
                    "param3": 3,
                    "param_3": 14,
                    "pin_config": 2,
                    "pin_configuration": 1
                },
                "param_4": {
                    "base_address": 1,
                    "config_2": 1,
                    "config_data": 3,
                    "config_param_2": 1,
                    "data": 4,
                    "data_array": 1,
                    "data_ptr": 1,
                    "param_4": 4,
                    "param_buffer": 1,
                    "pin_cfg": 1,
                    "pin_config": 3,
                    "pin_config_data": 2,
                    "pin_config_ptr": 1,
                    "pin_configuration": 1,
                    "pin_data": 4,
                    "pin_data_array": 1,
                    "pin_settings": 1
                },
                "puVar3": {
                    "config_array": 1,
                    "configuration": 1,
                    "gpio_data": 1,
                    "pin_array": 4,
                    "pin_config": 1,
                    "pin_config_address": 2,
                    "pin_config_array": 1,
                    "pin_config_data": 2,
                    "pin_config_ptr": 1,
                    "pin_configuration_array": 1,
                    "pin_data": 9,
                    "pin_data_buffer": 1,
                    "pin_data_ptr": 3,
                    "pin_mapping_ptr": 1,
                    "pin_reference_data": 1
                },
                "uVar2": {
                    "gpio_port": 29,
                    "port": 2
                },
                "uVar4": {
                    "config_value": 1,
                    "index": 1,
                    "pin_config": 4,
                    "pin_config_index": 1,
                    "pin_config_value": 2,
                    "pin_configuration": 1,
                    "pin_data": 1,
                    "pin_data_value": 1,
                    "pin_mapping": 1,
                    "pin_reference": 1,
                    "pin_value": 17
                }
            },
            "called": [
                "FUN_08004848",
                "FUN_08004c30",
                "FUN_080047f4"
            ],
            "calling": [
                "FUN_08000bcc",
                "FUN_080015b2",
                "FUN_0800157c",
                "FUN_080012a2",
                "FUN_080013a4",
                "FUN_080012e8",
                "FUN_080012c0",
                "FUN_08000cd0",
                "FUN_08001310"
            ],
            "code": "\nvoid configure_and_write_gpio_pin_08005848(uint pin_index,undefined4 value,undefined4 param_3,undefined *pin_data)\n\n{\n  int pin_configured;\n  undefined4 gpio_port;\n  undefined *pin_data;\n  uint pin_value;\n  \n  if (pin_index < 0x3c) {\n    pin_value = (uint)(char)(&DAT_080076f0)[pin_index];\n    pin_data = &DAT_080076f0;\n  }\n  else {\n    pin_value = 0xffffffff;\n    pin_data = pin_data;\n  }\n  if ((pin_value != 0xffffffff) &&\n     (pin_configured = check_pin_configuration(pin_value,&DAT_20000358,param_3,pin_data,pin_data), pin_configured != 0)) {\n    gpio_port = get_gpio_port((pin_value << 0x18) >> 0x1c);\n    write_digital_io(gpio_port,1 << (pin_value & 0xf) & 0xffff,value);\n  }\n  return;\n}\n\n",
            "current_name": "configure_and_write_gpio_pin_08005848",
            "entrypoint": "0x08005848",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005848": "configure_and_write_gpio_pin_08005848",
                "digital_io_write": "write_digital_io",
                "get_GPIO_Port": "get_gpio_port",
                "iVar1": "pin_configured",
                "is_pin_configured": "check_pin_configuration",
                "param_1": "pin_index",
                "param_2": "value",
                "param_4": "pin_data",
                "puVar3": "pin_data",
                "uVar2": "gpio_port",
                "uVar4": "pin_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005890": {
            "additional_data": {
                "DAT_080076f0": {
                    "pin_mapping_table": 1
                },
                "DAT_20000358": {
                    "pin_config_table": 1
                },
                "FUN_080047f4": {
                    "digital_io_read": 1
                },
                "FUN_08004848": {
                    "get_gpio_port": 1
                },
                "FUN_08004c48": {
                    "set_pin_config": 1
                },
                "FUN_08005890": {
                    "check_configured_pin": 1,
                    "check_gpio_pin": 2,
                    "check_pin": 2,
                    "check_pin_config": 2,
                    "check_pin_state": 3,
                    "check_pin_status": 11,
                    "get_pin_status": 1,
                    "get_pin_value": 1,
                    "read_and_check_pin": 1,
                    "read_gpio_pin": 1,
                    "read_pin_state": 2,
                    "read_pin_status": 2,
                    "read_pin_value": 2
                },
                "cVar1": {
                    "is_configured": 5,
                    "is_pin_configured": 1,
                    "is_pin_set": 1,
                    "pin_state": 6,
                    "pin_status": 6,
                    "pin_value": 4,
                    "result": 2,
                    "status": 6
                },
                "char": {
                    "char": 1
                },
                "digital_io_read": {
                    "read_digital_io": 11
                },
                "get_GPIO_Port": {
                    "get_gpio_port": 9,
                    "get_gpio_port_with_pin": 1,
                    "get_pin_gpio_port": 1
                },
                "iVar2": {
                    "config_status": 1,
                    "is_configured": 15,
                    "is_configured_result": 1,
                    "is_pin_configured": 4,
                    "is_pin_configured_result": 2,
                    "pin_configured": 6,
                    "pin_is_configured": 1,
                    "pin_status": 1
                },
                "is_pin_configured": {
                    "check_if_pin_configured": 2,
                    "check_pin_configuration": 6,
                    "check_pin_configured": 2,
                    "is_pin_configured": 1
                },
                "param_1": {
                    "digital_io_read_param_1": 1,
                    "pin": 3,
                    "pin_id": 1,
                    "pin_index": 4,
                    "pin_number": 22
                },
                "param_2": {
                    "digital_io_read_param_2": 1
                },
                "uVar3": {
                    "gpio_address": 1,
                    "gpio_port": 27,
                    "port": 2,
                    "port_address": 1
                },
                "uVar4": {
                    "mapped_pin": 4,
                    "mapped_pin_number": 1,
                    "pin_config": 8,
                    "pin_data": 1,
                    "pin_from_table": 1,
                    "pin_index": 1,
                    "pin_lookup": 1,
                    "pin_mapping": 4,
                    "pin_state": 1,
                    "pin_value": 8,
                    "port_index": 1
                }
            },
            "called": [
                "FUN_08004c48",
                "FUN_08004848",
                "FUN_080047f4"
            ],
            "calling": [
                "FUN_080015b2",
                "FUN_08000cd0"
            ],
            "code": "\nchar check_pin_status_08005890(uint pin_number)\n\n{\n  char status;\n  int is_configured;\n  undefined4 gpio_port;\n  uint pin_value;\n  \n  if (pin_number < 0x3c) {\n    pin_value = (uint)(char)(&DAT_080076f0)[pin_number];\n  }\n  else {\n    pin_value = 0xffffffff;\n  }\n  if (pin_value == 0xffffffff) {\n    status = '\\0';\n  }\n  else {\n    is_configured = check_pin_configuration(pin_value,&DAT_20000358);\n    if (is_configured == 0) {\n      status = '\\0';\n    }\n    else {\n      gpio_port = get_gpio_port((pin_value << 0x18) >> 0x1c);\n      status = read_digital_io(gpio_port,1 << (pin_value & 0xf) & 0xffff);\n    }\n  }\n  if (status != '\\0') {\n    status = '\\x01';\n  }\n  return status;\n}\n\n",
            "current_name": "check_pin_status_08005890",
            "entrypoint": "0x08005890",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005890": "check_pin_status_08005890",
                "cVar1": "status",
                "digital_io_read": "read_digital_io",
                "get_GPIO_Port": "get_gpio_port",
                "iVar2": "is_configured",
                "is_pin_configured": "check_pin_configuration",
                "param_1": "pin_number",
                "uVar3": "gpio_port",
                "uVar4": "pin_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080058e0": {
            "additional_data": {
                "FUN_08004b94": {
                    "display_message": 1,
                    "do_something": 3,
                    "helper_function": 1,
                    "init_subsystem": 1,
                    "initialize": 7,
                    "initialize_data": 2,
                    "initialize_subsystem": 1,
                    "initialize_system": 2,
                    "perform_additional_operation": 1,
                    "perform_additional_operations": 1,
                    "perform_additional_task": 1,
                    "perform_initialization": 1,
                    "perform_operation": 1,
                    "perform_sub_function": 1,
                    "perform_sub_operation": 1,
                    "process_data": 1,
                    "sub_function": 4
                },
                "FUN_080058e0": {
                    "calculate_elapsed_time": 1,
                    "get_current_milli": 4,
                    "get_current_milli_seconds": 2,
                    "get_current_millisecond": 8,
                    "get_current_milliseconds": 9,
                    "get_current_time": 4,
                    "get_current_time_in_millis": 2,
                    "measure_execution_time": 1
                },
                "GetCurrentMilli": {
                    "get_current_millisecond": 1,
                    "get_current_time": 1,
                    "get_current_time_milliseconds": 1
                }
            },
            "called": [
                "FUN_08004b94"
            ],
            "calling": [
                "FUN_08000bcc",
                "FUN_080016b4",
                "FUN_08001ab0",
                "FUN_08000cd0"
            ],
            "code": "\nvoid get_current_milliseconds_080058e0(void)\n\n{\n  get_current_time();\n  return;\n}\n\n",
            "current_name": "get_current_milliseconds_080058e0",
            "entrypoint": "0x080058e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080058e0": "get_current_milliseconds_080058e0",
                "GetCurrentMilli": "get_current_time"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080058e8": {
            "called": [],
            "calling": [
                "FUN_08000bcc"
            ],
            "code": "\nvoid FUNC_080058e8(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080058e8",
            "entrypoint": "0x080058e8",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080058e8": "FUNC_080058e8"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800591e": {
            "additional_data": {
                "0x134": {
                    "offset1": 1,
                    "offset_1": 5,
                    "offset_a": 1
                },
                "0x136": {
                    "offset2": 1,
                    "offset_2": 5,
                    "offset_b": 1
                },
                "0x3f": {
                    "mask": 1
                },
                "0x40": {
                    "constant": 1,
                    "constant1": 1,
                    "constant_value": 1
                },
                "FUN_0800591e": {
                    "calculate_adjusted_value": 1,
                    "calculate_checksum": 11,
                    "calculate_difference": 2,
                    "calculate_offset": 9,
                    "calculate_offset_difference": 1,
                    "calculate_offset_value": 1,
                    "calculate_result": 1,
                    "calculate_shift": 1,
                    "calculate_shift_amount": 3,
                    "calculate_shifted_value": 1
                },
                "PTR_134": {
                    "offset_a": 1
                },
                "PTR_136": {
                    "offset_b": 1
                },
                "param_1": {
                    "address": 1,
                    "base_address": 9,
                    "data": 2,
                    "data_address": 5,
                    "input": 1,
                    "input_offset": 1,
                    "input_value": 12
                },
                "return_value": {
                    "final_result": 1
                },
                "short": {
                    "offset_type": 1,
                    "value": 1
                },
                "short_1": {
                    "offset1_value": 1
                },
                "short_2": {
                    "offset2_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005a18"
            ],
            "code": "\nuvalue calculate_checksum_0800591e(int input_value)\n\n{\n  return (*(value *)(input_value + 0x134) + 0x40) - *(value *)(input_value + 0x136) & 0x3f;\n}\n\n",
            "current_name": "calculate_checksum_0800591e",
            "entrypoint": "0x0800591e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800591e": "calculate_checksum_0800591e",
                "param_1": "input_value",
                "short": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800598a": {
            "additional_data": {
                "FUN_0800598a": {
                    "extract_and_store": 1,
                    "extract_and_store_character": 2,
                    "extract_and_store_data": 1,
                    "extract_and_update_data": 1,
                    "handle_uart_input": 1,
                    "process_character_input": 1,
                    "process_input": 3,
                    "process_uart_data": 2,
                    "process_uart_input": 16,
                    "read_and_save_character": 1,
                    "read_and_update_buffer": 1,
                    "update_uart_buffer": 1
                },
                "iVar1": {
                    "input_result": 4,
                    "input_status": 9,
                    "read_result": 3,
                    "result": 3,
                    "status": 2,
                    "uart_getc_result": 1,
                    "uart_read_status": 1,
                    "uart_result": 6,
                    "uart_status": 2
                },
                "local_9": {
                    "extracted_data": 1,
                    "input_char": 3,
                    "input_character": 2,
                    "input_data": 1,
                    "new_char": 1,
                    "received_byte": 12,
                    "received_char": 2,
                    "received_character": 5,
                    "received_data": 4
                },
                "param_1": {
                    "device": 2,
                    "input_buffer": 1,
                    "uart_buffer": 1,
                    "uart_dev": 1,
                    "uart_device": 6,
                    "uart_handle": 10,
                    "uart_instance": 1,
                    "uart_module": 1,
                    "uart_port": 8
                },
                "uVar2": {
                    "current_address": 1,
                    "current_index": 3,
                    "current_position": 3,
                    "index": 1,
                    "new_buffer_index": 1,
                    "new_index": 11,
                    "new_position": 1,
                    "next_index": 5,
                    "next_position": 1,
                    "updated_index": 4
                }
            },
            "called": [
                "FUN_080054d4"
            ],
            "calling": [],
            "code": "\nvoid process_uart_input_0800598a(int uart_handle)\n\n{\n  int input_status;\n  ushort new_index;\n  undefined received_byte;\n  \n  input_status = uart_getc(uart_handle,&received_byte);\n  if ((input_status == 0) &&\n     (new_index = *(short *)(uart_handle + 0x60) + 1U & 0x3f, new_index != *(ushort *)(uart_handle + 0x62))) {\n    *(undefined *)(*(int *)(uart_handle + 0x5c) + (uint)*(ushort *)(uart_handle + 0x60)) = received_byte;\n    *(ushort *)(uart_handle + 0x60) = new_index;\n  }\n  return;\n}\n\n",
            "current_name": "process_uart_input_0800598a",
            "entrypoint": "0x0800598a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800598a": "process_uart_input_0800598a",
                "iVar1": "input_status",
                "local_9": "received_byte",
                "param_1": "uart_handle",
                "uVar2": "new_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005a18": {
            "called": [
                "FUN_0800591e"
            ],
            "calling": [
                "FUN_08005f6c"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08005a1e) */\n/* WARNING: Removing unreachable block (ram,0x08005a30) */\n/* WARNING: Removing unreachable block (ram,0x08005a26) */\n/* WARNING: Removing unreachable block (ram,0x08005a38) */\n\nvoid FUNC_08005a18(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08005a18",
            "entrypoint": "0x08005a18",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08005a18": "FUNC_08005a18"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08005a44": {
            "additional_data": {
                "0x11": {
                    "initial_value1": 1,
                    "value1": 3,
                    "variable1_value": 1
                },
                "0x130": {
                    "offset1": 7,
                    "variable1_offset": 1
                },
                "0x134": {
                    "offset2": 5,
                    "value1": 1,
                    "variable1": 1,
                    "variable2_offset": 1
                },
                "0x136": {
                    "offset3": 5,
                    "value2": 1,
                    "variable2": 1,
                    "variable3_offset": 1
                },
                "0x138": {
                    "offset2": 2,
                    "offset4": 5,
                    "variable4_offset": 1
                },
                "0x13c": {
                    "offset5": 5,
                    "value3": 1,
                    "variable3": 1,
                    "variable5_offset": 1
                },
                "0x13e": {
                    "offset6": 5,
                    "value4": 1,
                    "variable4": 1,
                    "variable6_offset": 1
                },
                "0x51": {
                    "initial_value2": 1,
                    "value2": 3,
                    "variable4_value": 1
                },
                "FUN_08005a44": {
                    "initialize_data": 11,
                    "initialize_data_structures": 5,
                    "initialize_function": 1,
                    "initialize_parameters": 10,
                    "initialize_struct": 1,
                    "initialize_variables": 1,
                    "set_initial_values": 1,
                    "set_parameters": 1
                },
                "param_1": {
                    "base_address": 19,
                    "data": 1,
                    "data_address": 4,
                    "data_pointer": 2,
                    "data_struct": 1,
                    "data_struct_address": 1,
                    "data_structure_address": 1,
                    "function_parameter": 1,
                    "struct_ptr": 1
                },
                "param_2": {
                    "new_parameter2": 1
                },
                "param_3": {
                    "new_parameter3": 1
                },
                "param_4": {
                    "new_parameter4": 1
                },
                "param_5": {
                    "new_parameter5": 1
                },
                "param_6": {
                    "new_parameter6": 1
                },
                "param_7": {
                    "new_parameter7": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005b54"
            ],
            "code": "\nvoid initialize_data_structures_08005a44(int base_address)\n\n{\n  *(int *)(base_address + 0x130) = base_address + 0x11;\n  *(undefined2 *)(base_address + 0x134) = 0;\n  *(undefined2 *)(base_address + 0x136) = 0;\n  *(int *)(base_address + 0x138) = base_address + 0x51;\n  *(undefined2 *)(base_address + 0x13c) = 0;\n  *(undefined2 *)(base_address + 0x13e) = 0;\n  return;\n}\n\n",
            "current_name": "initialize_data_structures_08005a44",
            "entrypoint": "0x08005a44",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005a44": "initialize_data_structures_08005a44",
                "param_1": "base_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005a68": {
            "additional_data": {
                "FUN_08004f4c": {
                    "perform_buffer_operation": 1,
                    "process_data": 1,
                    "process_serial_port_data": 1
                },
                "FUN_08005510": {
                    "configure_serial_port": 1,
                    "initialize_serial_port_internal": 1,
                    "set_initial_value": 1
                },
                "FUN_08005a68": {
                    "configure_serial_port": 5,
                    "initialize_serial": 5,
                    "initialize_serial_communication": 13,
                    "initialize_serial_connection": 1,
                    "initialize_serial_port": 7
                },
                "FUN_0800611c": {
                    "assert_function": 1,
                    "handle_error": 1,
                    "set_error_assertion": 1
                },
                "UNRECOVERED_JUMPTABLE": {
                    "error_handler": 1,
                    "function_pointer": 2,
                    "function_table": 1,
                    "jump_table": 16,
                    "jump_table_function": 1,
                    "jump_table_reference": 1,
                    "jumptable": 2,
                    "undefined_function": 1
                },
                "bVar2": {
                    "bit_config": 1,
                    "bit_mask": 1,
                    "bit_value": 1,
                    "byte_config_masked": 1,
                    "config_bit": 4,
                    "config_bits": 2,
                    "config_byte_mask": 2,
                    "config_flag": 1,
                    "config_mask": 5,
                    "config_modifier": 2,
                    "config_option": 1,
                    "config_value": 1,
                    "configuration_mask": 1,
                    "flag": 1,
                    "last_three_bits": 1,
                    "mod_options": 1,
                    "option_bits": 1,
                    "option_mask": 1,
                    "serial_config_bits": 1,
                    "setting_bits": 2
                },
                "extraout_r1": {
                    "byte_index": 1,
                    "config_bits": 2,
                    "data_bits": 1,
                    "error_code": 1,
                    "extra_flag": 1,
                    "extra_output": 2,
                    "extra_output_data": 1,
                    "extra_output_register1": 1,
                    "extra_result": 2,
                    "extra_value": 1,
                    "extracted_bits": 1,
                    "extraout": 1,
                    "index": 1,
                    "port_number": 1,
                    "result": 4,
                    "return_value": 1,
                    "serial_port_address": 1,
                    "status": 4,
                    "temp": 2,
                    "temp_value": 1,
                    "temp_var1": 1
                },
                "iVar3": {
                    "bits_per_byte": 1,
                    "config_count": 2,
                    "config_option": 2,
                    "config_selection": 1,
                    "config_state": 1,
                    "config_value": 8,
                    "counter": 1,
                    "data_bits": 9,
                    "num_config_bits": 1,
                    "option": 1,
                    "option_value": 1,
                    "options": 1,
                    "parity_bit": 1,
                    "setting_count": 1
                },
                "param_1": {
                    "device_address": 1,
                    "port_address": 2,
                    "serial_object": 1,
                    "serial_port": 19,
                    "serial_port_address": 7,
                    "serial_port_handle": 1
                },
                "param_2": {
                    "baud_rate": 29,
                    "config": 1,
                    "config_data": 1
                },
                "param_3": {
                    "byte_config": 2,
                    "byte_data": 1,
                    "config": 4,
                    "config_bits": 1,
                    "config_byte": 4,
                    "config_flags": 1,
                    "configuration": 7,
                    "configuration_byte": 1,
                    "configurations": 1,
                    "flags": 1,
                    "options": 4,
                    "serial_config": 1,
                    "serial_port_config": 1,
                    "settings": 2
                },
                "param_4": {
                    "parameter4": 1
                },
                "pbVar4": {
                    "byte_pointer": 14,
                    "byte_ptr": 6,
                    "data_bits_ptr": 1,
                    "data_location": 1,
                    "data_pointer": 4,
                    "data_register": 1,
                    "pointer_to_byte": 1,
                    "port_control": 1,
                    "port_status": 1,
                    "serial_port_ptr": 1
                },
                "pcVar1": {
                    "assert_function_signature": 1,
                    "assert_string": 1,
                    "debug_message": 1,
                    "error_message": 25,
                    "error_msg": 1,
                    "error_string": 2
                },
                "uRam0000012d": {
                    "fixed_address_data": 1,
                    "memory_data": 1,
                    "memory_value": 1,
                    "register": 1,
                    "u_ram_variable": 1
                },
                "uart_attach_rx_callback": {
                    "attach_rx_callback": 4,
                    "attach_uart_callback": 1
                },
                "uart_init": {
                    "initialize_uart": 5
                },
                "unaff_r4": {
                    "char_value": 3,
                    "char_var": 1,
                    "char_variable": 1,
                    "character": 7,
                    "parity_bit": 1,
                    "register_value": 1,
                    "stop_bit": 1,
                    "temp_char_var": 1,
                    "unaff_char": 1,
                    "unaff_r4": 3,
                    "unaff_value": 2,
                    "unaff_var4": 1,
                    "unaff_var_4": 1,
                    "unaffected_r4": 2,
                    "unaffected_register4": 2,
                    "unaffected_var4": 1,
                    "unaffordable_r4": 2
                },
                "unaff_r6": {
                    "base_address": 3,
                    "base_offset": 1,
                    "data_bits": 1,
                    "offset": 8,
                    "port_offset": 1,
                    "register_address": 1,
                    "register_base_address": 1,
                    "unaff_address": 1,
                    "unaff_int": 1,
                    "unaff_r6": 3,
                    "unaff_var6": 1,
                    "unaff_var_6": 1,
                    "unaffected_r6": 2,
                    "unaffected_register6": 2,
                    "unaffected_var6": 1,
                    "unaffordable_r6": 2
                }
            },
            "called": [
                "FUN_08005510",
                "FUN_08004f4c",
                "FUN_0800611c"
            ],
            "calling": [
                "FUN_08000bcc"
            ],
            "code": "\nvoid initialize_serial_communication_08005a68(int serial_port,undefined4 baud_rate,byte configuration)\n\n{\n  uint result;\n  char *error_message;\n  byte config_mask;\n  int data_bits;\n  byte *byte_pointer;\n  char character;\n  int offset;\n  code *jump_table;\n  \n  *(undefined4 *)(serial_port + 0x11c) = baud_rate;\n  *(byte *)(serial_port + 0x140) = configuration;\n  config_mask = configuration & 7;\n  if (config_mask == 4) {\n    data_bits = 7;\n  }\n  else if (config_mask == 6) {\n    data_bits = 8;\n  }\n  else if (config_mask == 2) {\n    data_bits = 6;\n  }\n  else {\n    data_bits = 0;\n  }\n  if ((configuration & 0x30) == 0x30) {\n    *(undefined4 *)(serial_port + 0x128) = 0x600;\n    data_bits = data_bits + 1;\n  }\n  else if ((configuration & 0x20) == 0) {\n    *(undefined4 *)(serial_port + 0x128) = 0;\n  }\n  else {\n    *(undefined4 *)(serial_port + 0x128) = 0x400;\n    data_bits = data_bits + 1;\n  }\n  if ((configuration & 8) == 0) {\n    *(undefined4 *)(serial_port + 0x124) = 0;\n  }\n  else {\n    *(undefined4 *)(serial_port + 0x124) = 0x2000;\n  }\n  if (data_bits == 8) {\n    *(undefined4 *)(serial_port + 0x120) = 0;\n  }\n  else if (data_bits == 9) {\n    *(undefined4 *)(serial_port + 0x120) = 0x1000;\n  }\n  else {\n    data_bits = 0;\n  }\n  if (data_bits != 0) {\n    initialize_uart(serial_port + 0xd4);\n    attach_rx_callback(serial_port + 0xd4,0x800598b);\n    return;\n  }\n  error_message = \"void HardwareSerial::begin(long unsigned int, byte)\";\n  jump_table = (code *)0x8005b12;\n  __assert_func(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/cores/arduino/HardwareSerial.cpp\"\n                ,299,\"void HardwareSerial::begin(long unsigned int, byte)\",\"databits!=0\");\n  byte_pointer = *(byte **)(result + offset);\n  error_message[0x1e] = character;\n  *(undefined *)(*byte_pointer + 0x1e) = 0;\n  if (result < 0x3c) {\n    u_ram_variable = (&DAT_080076f0)[result];\n  }\n  else {\n    u_ram_variable = 0xff;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08005b30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)();\n  return;\n}\n\n",
            "current_name": "initialize_serial_communication_08005a68",
            "entrypoint": "0x08005a68",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005a68": "initialize_serial_communication_08005a68",
                "UNRECOVERED_JUMPTABLE": "jump_table",
                "bVar2": "config_mask",
                "extraout_r1": "result",
                "iVar3": "data_bits",
                "param_1": "serial_port",
                "param_2": "baud_rate",
                "param_3": "configuration",
                "pbVar4": "byte_pointer",
                "pcVar1": "error_message",
                "uRam0000012d": "u_ram_variable",
                "uart_attach_rx_callback": "attach_rx_callback",
                "uart_init": "initialize_uart",
                "unaff_r4": "character",
                "unaff_r6": "offset"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005b24": {
            "additional_data": {
                "FUN_08005b24": {
                    "extracted_data": 1,
                    "set_byte_based_on_index": 2,
                    "set_byte_based_on_value": 1,
                    "set_byte_in_memory": 1,
                    "set_byte_value": 3,
                    "set_byte_value_according_to_param": 1,
                    "set_byte_value_based_on_index": 1,
                    "set_default_value": 2,
                    "set_flag_based_on_param": 1,
                    "set_flag_based_on_threshold": 1,
                    "set_flag_value": 1,
                    "set_invariant_value": 1,
                    "set_memory_value": 1,
                    "set_memory_value_based_on_threshold": 1,
                    "set_param_value": 2,
                    "set_pixel_color": 1,
                    "set_pixel_value": 1,
                    "set_return_value": 1,
                    "set_return_value_based_on_param": 1,
                    "set_threshold_and_jump": 1,
                    "set_value_at_position": 1,
                    "set_value_in_memory": 1,
                    "update_color_value": 1,
                    "update_param_and_execute": 1,
                    "update_parameter_value": 2
                },
                "UNRECOVERED_JUMPTABLE": {
                    "jump_function": 2,
                    "jump_table": 5
                },
                "param_1": {
                    "address": 4,
                    "base_address": 12,
                    "destination_address": 1,
                    "flag_address": 2,
                    "memory_address": 8,
                    "output_address": 1,
                    "pixel_index": 1,
                    "target_address": 2
                },
                "param_2": {
                    "color_index": 2,
                    "flag_index": 1,
                    "index": 12,
                    "input_index": 1,
                    "param_value": 2,
                    "pixel_index": 1,
                    "threshold": 1,
                    "threshold_value": 1,
                    "value": 8,
                    "value_index": 2
                },
                "uVar1": {
                    "byte_to_set": 1,
                    "byte_value": 6,
                    "color_value": 1,
                    "default_value": 2,
                    "extracted_byte": 1,
                    "flag": 1,
                    "flag_value": 2,
                    "memory_byte": 1,
                    "new_value": 1,
                    "param_value": 1,
                    "pixel_value": 1,
                    "return_value": 2,
                    "updated_value": 3,
                    "value": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_08005b54"
            ],
            "code": "\nvoid set_byte_value_according_to_param_08005b24(int base_address,uint index)\n\n{\n  undefined byte_value;\n  code *jump_table;\n  \n  if (index < 0x3c) {\n    byte_value = (&DAT_080076f0)[index];\n  }\n  else {\n    byte_value = 0xff;\n  }\n  *(undefined *)(base_address + 0x12d) = byte_value;\n                    /* WARNING: Could not recover jumptable at 0x08005b30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)();\n  return;\n}\n\n",
            "current_name": "set_byte_value_according_to_param_08005b24",
            "entrypoint": "0x08005b24",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005b24": "set_byte_value_according_to_param_08005b24",
                "UNRECOVERED_JUMPTABLE": "jump_table",
                "param_1": "base_address",
                "param_2": "index",
                "uVar1": "byte_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005b3c": {
            "additional_data": {
                "0x3c": {
                    "threshold": 1
                },
                "300": {
                    "target_offset": 1
                },
                "FUN_08005b3c": {
                    "copy_byte_to_buffer": 1,
                    "copy_byte_to_destination": 1,
                    "copy_value_to_address": 1,
                    "extract_value": 1,
                    "fill_in_value_at_offset": 1,
                    "initialize_data": 1,
                    "map_byte_to_color": 1,
                    "set_byte_at_offset": 1,
                    "set_byte_based_on_index": 1,
                    "set_byte_in_memory": 1,
                    "set_byte_value": 10,
                    "set_byte_value_in_memory": 1,
                    "set_default_value": 1,
                    "set_limited_value": 1,
                    "set_memory_value": 1,
                    "set_property_value": 1,
                    "set_value_at_offset": 1,
                    "set_value_in_memory": 1,
                    "update_param_value": 1,
                    "update_parameter_value": 1,
                    "update_value": 2
                },
                "param_1": {
                    "address": 5,
                    "base_address": 10,
                    "buffer": 1,
                    "buffer_address": 1,
                    "buffer_index": 1,
                    "destination_address": 1,
                    "destination_index": 1,
                    "memory_address": 7,
                    "object_address": 1,
                    "output_address": 2,
                    "target_address": 1
                },
                "param_2": {
                    "index": 22,
                    "input_value": 1,
                    "offset": 3,
                    "property_index": 1,
                    "source_index": 2,
                    "value": 1,
                    "value_index": 1
                },
                "uVar1": {
                    "byte_value": 6,
                    "color": 1,
                    "copied_byte": 1,
                    "default_value": 2,
                    "extracted_value": 1,
                    "new_value": 5,
                    "property_value": 1,
                    "value": 9
                }
            },
            "called": [],
            "calling": [
                "FUN_08005b54"
            ],
            "code": "\nvoid set_byte_value_in_memory_08005b3c(int base_address,uint index)\n\n{\n  undefined value;\n  \n  if (index < 0x3c) {\n    value = (&DAT_080076f0)[index];\n  }\n  else {\n    value = 0xff;\n  }\n  *(undefined *)(base_address + 300) = value;\n  return;\n}\n\n",
            "current_name": "set_byte_value_in_memory_08005b3c",
            "entrypoint": "0x08005b3c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005b3c": "set_byte_value_in_memory_08005b3c",
                "param_1": "base_address",
                "param_2": "index",
                "uVar1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005b54": {
            "additional_data": {
                "FUN_08004ca2": {
                    "pinmap_pin": 5,
                    "set_rx": 1
                },
                "FUN_08005a44": {
                    "init": 4,
                    "init_device": 1,
                    "initialize": 1
                },
                "FUN_08005b24": {
                    "set_rx": 5,
                    "set_rx_state": 1
                },
                "FUN_08005b3c": {
                    "set_tx": 5,
                    "set_tx_state": 1
                },
                "FUN_08005b54": {
                    "configure_device": 1,
                    "initialize_communication": 10,
                    "initialize_connection": 1,
                    "initialize_device": 16,
                    "initialize_hardware": 1,
                    "initialize_peripheral": 1,
                    "initialize_port": 1
                },
                "init": {
                    "initialize": 4,
                    "initialize_component": 1,
                    "initialize_device_settings": 1
                },
                "param_1": {
                    "communication": 1,
                    "communication_data": 3,
                    "communication_params": 3,
                    "communication_settings": 1,
                    "connection_data": 1,
                    "device": 10,
                    "device_config": 2,
                    "device_data": 1,
                    "device_params": 4,
                    "device_settings": 1,
                    "param_array": 1,
                    "peripheral_config": 1,
                    "port": 1,
                    "settings": 1
                },
                "param_2": {
                    "pin": 16,
                    "pin_id": 1,
                    "pin_num": 1,
                    "pin_number": 13
                },
                "param_3": {
                    "argument1": 1,
                    "param1": 3,
                    "param3": 3,
                    "param_value": 1,
                    "parameter1": 1,
                    "parameter3": 2,
                    "parameter_3": 1,
                    "parameter_a": 1,
                    "rx": 1,
                    "rx_buffer_size": 1,
                    "rx_config": 4,
                    "rx_data": 1,
                    "rx_mode": 2,
                    "rx_option": 1,
                    "rx_param": 2,
                    "rx_params": 2,
                    "rx_pin": 1,
                    "rx_value": 1,
                    "value": 2
                },
                "param_4": {
                    "argument2": 1,
                    "config": 1,
                    "param": 2,
                    "param2": 3,
                    "param4": 3,
                    "parameter2": 1,
                    "parameter4": 2,
                    "parameter_4": 1,
                    "parameter_b": 1,
                    "tx": 1,
                    "tx_buffer_size": 1,
                    "tx_config": 4,
                    "tx_data": 1,
                    "tx_mode": 2,
                    "tx_option": 1,
                    "tx_param": 2,
                    "tx_params": 2,
                    "tx_pin": 1,
                    "tx_value": 1
                },
                "pinmap_pin": {
                    "get_pin": 1,
                    "get_pin_mapping": 2,
                    "get_pin_value": 1,
                    "map_pin": 1
                },
                "setRx": {
                    "configure_rx": 2,
                    "set_receive": 3,
                    "set_receive_pin": 1
                },
                "setTx": {
                    "configure_tx": 2,
                    "set_transmit": 3,
                    "set_transmit_pin": 1
                },
                "uVar1": {
                    "mapped_pin": 1,
                    "pin_result": 4,
                    "pin_value": 17
                }
            },
            "called": [
                "FUN_08005a44",
                "FUN_08004ca2",
                "FUN_08005b24",
                "FUN_08005b3c"
            ],
            "calling": [
                "FUN_08005bb0"
            ],
            "code": "\nundefined4 *\ninitialize_device_08005b54(undefined4 *device,undefined4 pin,undefined4 rx_config,undefined4 tx_config)\n\n{\n  undefined pin_value;\n  \n  device[1] = 0;\n  device[2] = 1000;\n  *device = &PTR_LAB_080059c8_1_08007804;\n  if (device == (undefined4 *)&DAT_2000036c) {\n    set_receive(&DAT_2000036c,0,rx_config,&DAT_2000036c,tx_config);\n    set_transmit(&DAT_2000036c,1);\n  }\n  else {\n    pin_value = get_pin_mapping(pin,&DAT_08007604);\n    *(undefined *)((int)device + 0x12d) = pin_value;\n    pin_value = get_pin_mapping(pin,&DAT_0800764c);\n    *(undefined *)(device + 0x4b) = pin_value;\n  }\n  initialize(device);\n  return device;\n}\n\n",
            "current_name": "initialize_device_08005b54",
            "entrypoint": "0x08005b54",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005b54": "initialize_device_08005b54",
                "init": "initialize",
                "param_1": "device",
                "param_2": "pin",
                "param_3": "rx_config",
                "param_4": "tx_config",
                "pinmap_pin": "get_pin_mapping",
                "setRx": "set_receive",
                "setTx": "set_transmit",
                "uVar1": "pin_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005bb0": {
            "additional_data": {
                "FUN_08005bb0": {
                    "initialize_hardware": 2,
                    "initialize_hardware_serial": 9,
                    "initialize_serial": 2,
                    "initialize_serial_communication": 11,
                    "initialize_serial_connection": 5,
                    "initialize_serial_port": 2
                },
                "HardwareSerial": {
                    "configure_hardware_serial": 2,
                    "configure_serial": 2,
                    "configure_serial_port": 5,
                    "create_serial_connection": 1,
                    "create_serial_object": 1,
                    "setup_serial": 1
                },
                "param_1": {
                    "check_value": 1,
                    "device_index": 1,
                    "error_code": 1,
                    "flag": 5,
                    "initialize_flag": 1,
                    "input_flag": 1,
                    "input_value": 1,
                    "is_parameter_one_valid": 1,
                    "mode": 2,
                    "param1": 1,
                    "serial_port": 1,
                    "status": 15
                },
                "param_2": {
                    "baud_rate": 1,
                    "config": 2,
                    "data": 1,
                    "flag": 1,
                    "flag_value": 1,
                    "param2": 1,
                    "param_flag": 1,
                    "param_value": 1,
                    "parameter_two_value": 1,
                    "serial_config": 2,
                    "serial_option": 1,
                    "value": 18
                },
                "param_3": {
                    "arg1": 1,
                    "argument1": 1,
                    "baud_rate": 2,
                    "config": 3,
                    "config1": 4,
                    "config_param": 1,
                    "data_bits": 1,
                    "initial_value1": 1,
                    "option1": 2,
                    "param1": 6,
                    "param3": 2,
                    "param_3": 1,
                    "parameter1": 1,
                    "parameter_three_value": 1,
                    "serial_config": 1,
                    "serial_param1": 1,
                    "serial_port1": 1,
                    "setting1": 1
                },
                "param_4": {
                    "arg2": 1,
                    "argument2": 1,
                    "config2": 4,
                    "configuration": 1,
                    "control": 1,
                    "initial_value2": 1,
                    "option": 1,
                    "option2": 2,
                    "param": 1,
                    "param2": 6,
                    "param4": 2,
                    "param_4": 1,
                    "parameter2": 1,
                    "parameter_four_value": 1,
                    "parity": 1,
                    "serial_data": 1,
                    "serial_mode": 1,
                    "serial_param2": 1,
                    "serial_port2": 1,
                    "setting2": 1,
                    "stop_bits": 1
                }
            },
            "called": [
                "FUN_08005b54"
            ],
            "calling": [],
            "code": "\nvoid initialize_serial_communication_08005bb0(int status,int value,undefined4 param1,undefined4 param2)\n\n{\n  if (status != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    configure_serial_port(&DAT_2000036c,0x40004400,param1,0xffff,param2);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_serial_communication_08005bb0",
            "entrypoint": "0x08005bb0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005bb0": "initialize_serial_communication_08005bb0",
                "HardwareSerial": "configure_serial_port",
                "param_1": "status",
                "param_2": "value",
                "param_3": "param1",
                "param_4": "param2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005c1c": {
            "additional_data": {
                "DAT_08007858": {
                    "data": 1
                },
                "FUN_08005c1c": {
                    "initialize_data": 22,
                    "initialize_data_buffer": 1,
                    "initialize_function": 1,
                    "initialize_params": 1,
                    "initialize_pointer": 1,
                    "set_data": 3,
                    "set_data_values": 1,
                    "set_function_parameters": 1
                },
                "param_1": {
                    "data_buffer": 1,
                    "data_pointer": 14,
                    "data_ptr": 3,
                    "output": 1,
                    "output_buffer": 1,
                    "output_data": 3,
                    "output_pointer": 5,
                    "output_ptr": 2,
                    "pointer": 1
                },
                "param_2": {
                    "byte_2": 1,
                    "data1": 1,
                    "field1": 1,
                    "input_1": 1,
                    "input_byte1": 1,
                    "param2": 1,
                    "value1": 18,
                    "value2": 1,
                    "value_1": 6
                },
                "param_3": {
                    "byte_3": 1,
                    "data2": 1,
                    "field2": 1,
                    "input_2": 1,
                    "input_byte2": 1,
                    "param3": 1,
                    "value2": 18,
                    "value3": 1,
                    "value_2": 6
                },
                "param_4": {
                    "byte_4": 1,
                    "data3": 1,
                    "field3": 1,
                    "input_3": 1,
                    "input_byte3": 1,
                    "param4": 1,
                    "value3": 18,
                    "value4": 1,
                    "value_3": 6
                },
                "param_5": {
                    "byte_5": 1,
                    "data4": 1,
                    "field4": 1,
                    "input_4": 1,
                    "input_byte4": 1,
                    "param5": 1,
                    "value4": 18,
                    "value5": 1,
                    "value_4": 6
                }
            },
            "called": [],
            "calling": [
                "FUN_08005c38"
            ],
            "code": "\nvoid initialize_data_buffer_08005c1c(undefined4 *data_pointer,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *data_pointer = &DAT_08007858;\n  *(undefined *)(data_pointer + 1) = value1;\n  *(undefined *)((int)data_pointer + 5) = value2;\n  *(undefined *)((int)data_pointer + 6) = value3;\n  *(undefined *)((int)data_pointer + 7) = value4;\n  return;\n}\n\n",
            "current_name": "initialize_data_buffer_08005c1c",
            "entrypoint": "0x08005c1c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005c1c": "initialize_data_buffer_08005c1c",
                "param_1": "data_pointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005c38": {
            "additional_data": {
                "DAT_200004b0": {
                    "ip_addr": 1,
                    "ip_address": 1,
                    "ip_address_data": 1
                },
                "FUN_08005c38": {
                    "initialize_ip": 1,
                    "initialize_ip_address": 23,
                    "initialize_ip_address_if_conditions_met": 1,
                    "initialize_network_settings": 1,
                    "set_ip_address": 4,
                    "set_ip_addresses": 1
                },
                "IPAddress": {
                    "set_ip": 1,
                    "set_ip_address": 4
                },
                "param_1": {
                    "condition1": 10,
                    "condition_1": 1,
                    "flag": 8,
                    "flag1": 2,
                    "flag_value": 2,
                    "option": 1,
                    "param1": 2,
                    "status": 1,
                    "status_flag": 1,
                    "val1": 1,
                    "value1": 2
                },
                "param_2": {
                    "condition2": 10,
                    "condition_2": 1,
                    "flag2": 2,
                    "limit_value": 1,
                    "param2": 2,
                    "param_value": 1,
                    "val2": 1,
                    "value": 10,
                    "value2": 2,
                    "value_flag": 1
                }
            },
            "called": [
                "FUN_08005c1c"
            ],
            "calling": [],
            "code": "\nvoid initialize_ip_address_if_conditions_met_08005c38(int condition1,int condition2)\n\n{\n  if ((condition1 == 1) && (condition2 == 0xffff)) {\n    set_ip_address(&DAT_200004b0,0,0,0,0);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_ip_address_if_conditions_met_08005c38",
            "entrypoint": "0x08005c38",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005c38": "initialize_ip_address_if_conditions_met_08005c38",
                "IPAddress": "set_ip_address",
                "param_1": "condition1",
                "param_2": "condition2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005c96": {
            "additional_data": {
                "FUN_08000178": {
                    "get_reversed_string": 2,
                    "get_string": 3,
                    "get_string_length": 2
                },
                "FUN_08005c96": {
                    "execute_function": 8,
                    "execute_sub_function": 1,
                    "extract_data": 1,
                    "get_string_length": 1,
                    "process_data": 1,
                    "process_input": 2,
                    "process_param": 1,
                    "reverse_and_call": 1,
                    "reverse_and_execute": 2,
                    "reverse_string": 1
                },
                "param_1": {
                    "array": 6,
                    "array_pointer": 3,
                    "array_ptr": 1,
                    "array_start": 1,
                    "buffer": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "function_parameters": 1,
                    "function_pointer": 5,
                    "function_ptr": 1,
                    "input_array": 5,
                    "input_array_pointer": 1,
                    "input_list": 1,
                    "input_ptr": 1,
                    "param_array": 1,
                    "parameter_array": 1
                },
                "param_2": {
                    "data_size": 1,
                    "input_data": 1,
                    "input_length": 4,
                    "input_size": 3,
                    "input_string": 3,
                    "length": 3,
                    "size": 1,
                    "string": 10,
                    "string_argument": 1,
                    "string_length": 1,
                    "string_param": 1,
                    "string_parameter": 2
                },
                "param_3": {
                    "arg1": 3,
                    "arg3": 3,
                    "arg_3": 1,
                    "auxiliary_param1": 1,
                    "code_pointer_parameter": 1,
                    "input1": 1,
                    "output1": 1,
                    "param1": 1,
                    "param3": 7,
                    "param_3": 5,
                    "unknown_var": 1,
                    "unused_param": 3,
                    "unused_parameter_1": 1,
                    "value1": 1,
                    "var3": 1
                },
                "param_4": {
                    "additional_parameter": 1,
                    "arg2": 3,
                    "arg4": 3,
                    "arg_4": 1,
                    "auxiliary_param2": 1,
                    "callback_param": 1,
                    "function_parameter": 1,
                    "input2": 1,
                    "output2": 1,
                    "param2": 1,
                    "param4": 7,
                    "param_4": 7,
                    "unused_parameter_2": 1,
                    "value2": 1,
                    "var4": 1
                },
                "uVar1": {
                    "length": 3,
                    "result": 1,
                    "string_length": 22,
                    "sub_function_result": 1
                }
            },
            "called": [
                "FUN_08000178"
            ],
            "calling": [
                "FUN_08000bcc",
                "FUN_08005da8",
                "FUN_08005cd4",
                "FUN_08000cd0"
            ],
            "code": "\nundefined4 execute_sub_function_08005c96(int *array,int string,undefined4 param3,undefined4 param4)\n\n{\n  undefined4 string_length;\n  \n  if (string != 0) {\n    string_length = strlen(string);\n    string_length = (**(code **)(*array + 4))(array,string,string_length,*(code **)(*array + 4),param4);\n    return string_length;\n  }\n  return 0;\n}\n\n",
            "current_name": "execute_sub_function_08005c96",
            "entrypoint": "0x08005c96",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005c96": "execute_sub_function_08005c96",
                "param_1": "array",
                "param_2": "string",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "string_length"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005cb6": {
            "additional_data": {
                "FUN_08005cb6": {
                    "execute_code": 6,
                    "execute_function": 23,
                    "execute_function_from_pointer": 1,
                    "execute_target_function": 1
                },
                "param_1": {
                    "code_pointer": 3,
                    "function_list": 1,
                    "function_pointer": 19,
                    "function_ptr": 4,
                    "target_function": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005da8",
                "FUN_08005d42"
            ],
            "code": "\nvoid execute_function_from_pointer_08005cb6(undefined4 *function_pointer)\n\n{\n  (**(code **)*function_pointer)();\n  return;\n}\n\n",
            "current_name": "execute_function_from_pointer_08005cb6",
            "entrypoint": "0x08005cb6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005cb6": "execute_function_from_pointer_08005cb6",
                "param_1": "function_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005cc0": {
            "additional_data": {
                "DAT_0800786c": {
                    "data": 2
                },
                "FUN_08005cc0": {
                    "execute_callback": 8,
                    "execute_callback_function": 2,
                    "execute_code": 1,
                    "execute_function": 15,
                    "execute_function_with_params": 1,
                    "execute_ptr": 1,
                    "extract_and_call_function": 1,
                    "initialize": 1,
                    "invoke_binary_function": 1
                },
                "param_1": {
                    "arg1": 1,
                    "array": 1,
                    "binary_function": 1,
                    "callback": 3,
                    "callback_function": 1,
                    "callback_function_pointer": 1,
                    "callback_function_ptr": 1,
                    "callback_handler": 1,
                    "callback_pointer": 1,
                    "callback_ptr": 2,
                    "code_pointer": 1,
                    "function_address": 1,
                    "function_pointer": 10,
                    "function_ptr": 6
                },
                "param_2": {
                    "arg1": 17,
                    "arg2": 1,
                    "arg_1": 1,
                    "argument1": 1,
                    "param2": 2,
                    "param_2": 2,
                    "parameter1": 1,
                    "unknown_param1": 1,
                    "unused_param": 1,
                    "unused_parameter1": 1
                },
                "param_3": {
                    "arg2": 17,
                    "arg3": 1,
                    "arg_2": 1,
                    "argument2": 1,
                    "param3": 2,
                    "param_3": 2,
                    "parameter2": 1,
                    "unknown_param2": 1,
                    "unused_param": 1,
                    "unused_parameter2": 1
                },
                "param_4": {
                    "arg3": 16,
                    "arg4": 1,
                    "arg_3": 1,
                    "argument3": 1,
                    "callback_function": 1,
                    "callback_function_argument": 1,
                    "callback_param": 2,
                    "data_param": 1,
                    "extra_param": 1,
                    "param": 1,
                    "param4": 1,
                    "param_4": 2,
                    "parameter_4": 1,
                    "unknown_param3": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005f40",
                "FUN_08005cd4"
            ],
            "code": "\nvoid execute_callback_function_08005cc0(int *function_pointer,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  (**(code **)(*function_pointer + 4))(function_pointer,&DAT_0800786c,2,*(code **)(*function_pointer + 4),arg3);\n  return;\n}\n\n",
            "current_name": "execute_callback_function_08005cc0",
            "entrypoint": "0x08005cc0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005cc0": "execute_callback_function_08005cc0",
                "param_1": "function_pointer",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005cd4": {
            "additional_data": {
                "FUN_08005cd4": {
                    "calculate_result": 5,
                    "calculate_sum": 16,
                    "calculate_sum_of_functions": 1,
                    "calculate_sum_of_sub_functions": 2,
                    "calculate_sum_of_subfunctions": 1,
                    "calculate_total": 6
                },
                "execute_callback_function_08005cc0": {
                    "call_callback_function": 2,
                    "execute_callback": 12,
                    "execute_callback_func": 1,
                    "execute_callback_function": 2,
                    "invoke_callback_function": 2
                },
                "execute_sub_function_08005c96": {
                    "calculate_sub_function_result": 1,
                    "calculate_sub_total": 1,
                    "compute_sub_result": 1,
                    "compute_sub_value": 1,
                    "execute_sub": 6,
                    "execute_sub_func": 1,
                    "execute_sub_function": 1,
                    "fetch_array_sum": 1,
                    "get_array_sum": 1,
                    "get_sub_result": 1,
                    "perform_additional_calculation": 1,
                    "perform_sub_function": 1,
                    "perform_subfunction": 1,
                    "retrieve_sub_value": 1
                },
                "iVar1": {
                    "result_of_sub_function_1": 1,
                    "result_sub_function": 1,
                    "sub_func_result": 4,
                    "sub_function_result": 7,
                    "sub_result": 6,
                    "subfunc_result": 1
                },
                "iVar2": {
                    "callback_func_result": 2,
                    "callback_function_result": 4,
                    "callback_result": 12,
                    "result_callback_function": 1,
                    "result_of_callback_function": 1
                },
                "param_1": {
                    "arg": 13,
                    "arg1": 4,
                    "callback_arg": 1,
                    "input": 1,
                    "input_param": 2,
                    "input_parameter": 3,
                    "input_value": 5,
                    "number": 1
                }
            },
            "called": [
                "FUN_08005cc0",
                "FUN_08005c96"
            ],
            "calling": [
                "FUN_08000cd0"
            ],
            "code": "\nint calculate_sum_of_sub_functions_08005cd4(undefined4 arg)\n\n{\n  int sub_function_result;\n  int callback_result;\n  \n  sub_function_result = execute_sub();\n  callback_result = execute_callback(arg);\n  return callback_result + sub_function_result;\n}\n\n",
            "current_name": "calculate_sum_of_sub_functions_08005cd4",
            "entrypoint": "0x08005cd4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005cd4": "calculate_sum_of_sub_functions_08005cd4",
                "execute_callback_function_08005cc0": "execute_callback",
                "execute_sub_function_08005c96": "execute_sub",
                "iVar1": "sub_function_result",
                "iVar2": "callback_result",
                "param_1": "arg"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005ce8": {
            "additional_data": {
                "FUN_08005ce8": {
                    "convert_and_send_number": 1,
                    "convert_base": 7,
                    "convert_decimal_to_base": 3,
                    "convert_decimal_to_custom_base": 1,
                    "convert_decimal_to_other_base": 1,
                    "convert_int_to_base": 1,
                    "convert_integer_to_base": 1,
                    "convert_number": 1,
                    "convert_number_to_string": 4,
                    "convert_to_base": 10,
                    "decimal_to_base": 1
                },
                "cVar1": {
                    "char_val": 1,
                    "char_value": 4,
                    "converted_char": 1,
                    "converted_digit": 3,
                    "current_digit": 1,
                    "digit": 5,
                    "remainder": 1
                },
                "local_15": {
                    "buffer": 3,
                    "char_arr": 1,
                    "converted_num": 4,
                    "converted_number": 10,
                    "converted_value": 1,
                    "digit_buffer": 2,
                    "digits": 1,
                    "digits_buffer": 1,
                    "output": 1,
                    "output_array": 1,
                    "output_digits": 1,
                    "result": 1,
                    "string_array": 1,
                    "temp_array": 1,
                    "temp_buffer": 1
                },
                "param_1": {
                    "array": 2,
                    "array_pointer": 1,
                    "array_ptr": 2,
                    "base_conversion": 1,
                    "base_conversion_list": 1,
                    "data_array": 1,
                    "input": 1,
                    "input_array": 2,
                    "input_buffer": 1,
                    "input_data": 1,
                    "input_ptr": 1,
                    "input_str": 1,
                    "input_value": 1,
                    "output": 1,
                    "output_buffer": 9,
                    "output_pointer": 1,
                    "output_string": 2,
                    "result": 2
                },
                "param_2": {
                    "decimal": 1,
                    "decimal_num": 1,
                    "decimal_number": 4,
                    "decimal_value": 1,
                    "input_num": 1,
                    "input_number": 4,
                    "num": 1,
                    "number": 18
                },
                "param_3": {
                    "base": 30,
                    "custom_base": 1
                },
                "pcVar5": {
                    "buffer": 1,
                    "buffer_ptr": 1,
                    "char_ptr": 1,
                    "converted": 1,
                    "converted_number": 1,
                    "current_char": 3,
                    "current_digit": 5,
                    "current_digit_ptr": 1,
                    "output": 1,
                    "output_array": 1,
                    "output_buffer": 1,
                    "output_string": 1,
                    "p_result": 1,
                    "ptr": 2,
                    "ptr_to_last_char": 1,
                    "string_pointer": 1
                },
                "uVar2": {
                    "output": 1,
                    "result": 19,
                    "result_length": 2,
                    "return_val": 1
                },
                "uVar3": {
                    "remainder": 22,
                    "temp": 1
                },
                "uVar4": {
                    "quotient": 23
                }
            },
            "called": [
                "FUN_08000178"
            ],
            "calling": [
                "FUN_08005d8a",
                "FUN_08005d42"
            ],
            "code": "\nundefined4 convert_decimal_to_other_base_08005ce8(int *output_buffer,uint number,uint base)\n\n{\n  char digit;\n  undefined4 result;\n  uint remainder;\n  uint quotient;\n  char *current_digit;\n  char converted_number [9];\n  \n  converted_number[1] = 0;\n  if ((int)base < 2) {\n    base = 10;\n  }\n  current_digit = converted_number + 1;\n  do {\n    quotient = number / base;\n    remainder = (number & 0xff) - (quotient * base & 0xff) & 0xff;\n    current_digit = current_digit + -1;\n    digit = (char)remainder;\n    if (remainder < 10) {\n      digit = digit + '0';\n    }\n    else {\n      digit = digit + '7';\n    }\n    *current_digit = digit;\n    number = quotient;\n  } while (quotient != 0);\n  if (current_digit == (char *)0x0) {\n    result = 0;\n  }\n  else {\n    result = strlen(current_digit);\n    result = (**(code **)(*output_buffer + 4))(output_buffer,current_digit,result);\n  }\n  return result;\n}\n\n",
            "current_name": "convert_decimal_to_other_base_08005ce8",
            "entrypoint": "0x08005ce8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005ce8": "convert_decimal_to_other_base_08005ce8",
                "cVar1": "digit",
                "local_15": "converted_number",
                "param_1": "output_buffer",
                "param_2": "number",
                "param_3": "base",
                "pcVar5": "current_digit",
                "uVar2": "result",
                "uVar3": "remainder",
                "uVar4": "quotient"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005d42": {
            "additional_data": {
                "FUN_08005d42": {
                    "print_formatted_number": 7,
                    "print_integer": 1,
                    "print_number_or_execute": 3,
                    "print_number_or_execute_function": 14,
                    "process_number": 4
                },
                "execute_function_from_pointer_08005cb6": {
                    "execute_function": 1
                },
                "iVar1": {
                    "error_code": 1,
                    "execution_result": 1,
                    "function_result": 1,
                    "result": 23,
                    "result1": 1,
                    "return_value": 4
                },
                "iVar2": {
                    "additional_result": 1,
                    "additional_return_value": 1,
                    "auxiliary_result": 1,
                    "converted_number": 2,
                    "execute_result": 2,
                    "extra_result": 1,
                    "negative_offset": 1,
                    "negative_result": 3,
                    "num_digits": 1,
                    "offset": 2,
                    "partial_result": 1,
                    "prepend_result": 1,
                    "print_error": 1,
                    "print_result": 4,
                    "print_return_value": 1,
                    "result2": 2,
                    "return_value": 3,
                    "return_value2": 1,
                    "second_result": 1,
                    "temp_value": 1
                },
                "param_1": {
                    "format_specifier": 1,
                    "function": 1,
                    "function_pointer": 19,
                    "output_buffer": 10
                },
                "param_2": {
                    "number": 31
                },
                "param_3": {
                    "base": 31
                },
                "printNumber": {
                    "convert_decimal_to_other_base": 2
                }
            },
            "called": [
                "FUN_08005cb6",
                "FUN_08005ce8"
            ],
            "calling": [
                "FUN_08005d82"
            ],
            "code": "\nint print_number_or_execute_function_08005d42(undefined4 *function_pointer,uint number,uint base)\n\n{\n  int result;\n  int print_result;\n  \n  if (base == 0) {\n    result = (**(code **)*function_pointer)(function_pointer,number & 0xff);\n    return result;\n  }\n  if (base != 10) {\n    result = convert_decimal_to_other_base(function_pointer,number,base & 0xff);\n    return result;\n  }\n  if (-1 < (int)number) {\n    result = convert_decimal_to_other_base(function_pointer,number,10);\n    return result;\n  }\n  result = execute_function(function_pointer,0x2d);\n  print_result = convert_decimal_to_other_base(function_pointer,-number,10);\n  return print_result + result;\n}\n\n",
            "current_name": "print_number_or_execute_function_08005d42",
            "entrypoint": "0x08005d42",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005d42": "print_number_or_execute_function_08005d42",
                "execute_function_from_pointer_08005cb6": "execute_function",
                "iVar1": "result",
                "iVar2": "print_result",
                "param_1": "function_pointer",
                "param_2": "number",
                "param_3": "base",
                "printNumber": "convert_decimal_to_other_base"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005d82": {
            "additional_data": {
                "FUN_08005d82": {
                    "execute_print_function": 1,
                    "execute_print_number_or_execute_function": 1,
                    "execute_print_number_or_function": 6,
                    "execute_print_or_call": 1,
                    "execute_print_or_execute": 1,
                    "execute_print_or_execute_func": 1,
                    "execute_print_or_execute_function": 2,
                    "execute_print_or_function": 12,
                    "print_number_or_execute_function": 6
                },
                "base": {
                    "b": 1,
                    "base": 20,
                    "num_base": 6,
                    "number_base": 1
                },
                "function_pointer": {
                    "func_pointer": 1,
                    "func_ptr": 11,
                    "function": 2,
                    "function_pointer": 1,
                    "function_ptr": 5,
                    "ptr": 1
                },
                "number": {
                    "input_number": 1,
                    "num": 25,
                    "number": 2
                },
                "print_number_or_execute_function_08005d42": {
                    "choose_print_or_execute_function": 1,
                    "display_number_or_invoke_function": 1,
                    "execute_or_print": 1,
                    "execute_print_function": 1,
                    "execute_print_number_or_function": 1,
                    "print_number_or_execute": 5,
                    "print_number_or_execute_function": 4,
                    "print_or_call": 1,
                    "print_or_execute": 15,
                    "print_or_execute_function": 1
                },
                "undefined4": {
                    "function_pointer": 1
                }
            },
            "called": [
                "FUN_08005d42"
            ],
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0"
            ],
            "code": "\nvoid execute_print_number_or_execute_function_08005d82(void)\n\n{\n  print_or_execute();\n  return;\n}\n\n",
            "current_name": "execute_print_number_or_execute_function_08005d82",
            "entrypoint": "0x08005d82",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005d82": "execute_print_number_or_execute_function_08005d82",
                "number": "num",
                "print_number_or_execute_function_08005d42": "print_or_execute"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005d8a": {
            "additional_data": {
                "FUN_08005ce8": {
                    "calculate": 1,
                    "calculate_value": 2,
                    "compute_result": 1,
                    "compute_value": 1,
                    "execute_with_arguments": 1,
                    "modify_value": 1,
                    "process_input": 1,
                    "process_input_values": 1
                },
                "FUN_08005d8a": {
                    "print_number_or_call_another_function": 1,
                    "print_number_or_call_callback": 1,
                    "print_number_or_call_function": 2,
                    "print_number_or_call_other_function": 1,
                    "print_number_or_callback": 1,
                    "print_number_or_execute": 2,
                    "print_or_call": 5,
                    "print_or_call_function": 11,
                    "print_or_execute": 5,
                    "print_or_invoke_function": 2
                },
                "param_1": {
                    "array": 3,
                    "array_pointer": 2,
                    "array_ptr": 1,
                    "callback_function": 1,
                    "callback_or_param": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "function_pointer": 16,
                    "function_ptr": 2,
                    "input_array": 2,
                    "print_function": 1
                },
                "param_2": {
                    "arg1": 3,
                    "data": 1,
                    "first_parameter": 1,
                    "input1": 1,
                    "input_param1": 1,
                    "input_parameter1": 1,
                    "input_value": 2,
                    "input_value1": 2,
                    "num1": 2,
                    "size": 3,
                    "value": 1,
                    "value1": 9,
                    "value4": 1,
                    "value_1": 2,
                    "value_or_param": 1
                },
                "param_3": {
                    "arg2": 3,
                    "condition": 1,
                    "condition_or_param": 1,
                    "flag": 2,
                    "index": 1,
                    "input2": 1,
                    "input_param2": 1,
                    "input_parameter2": 1,
                    "input_value2": 2,
                    "length": 1,
                    "num2": 2,
                    "option": 1,
                    "second_parameter": 1,
                    "value": 1,
                    "value2": 9,
                    "value5": 1,
                    "value_2": 2
                },
                "param_4": {
                    "": 1,
                    "another_value": 1,
                    "arg": 1,
                    "arg3": 4,
                    "argument": 1,
                    "code_pointer": 1,
                    "extra_arg": 1,
                    "extra_param": 3,
                    "extra_parameter": 1,
                    "input3": 1,
                    "input_value3": 1,
                    "param": 2,
                    "print_parameter_1": 1,
                    "third_parameter": 1,
                    "undefined_value": 1,
                    "value": 1,
                    "value3": 8,
                    "value_3": 1
                },
                "printNumber": {
                    "print": 1,
                    "print_byte": 1,
                    "print_byte_value": 1,
                    "print_num": 2,
                    "print_number": 6,
                    "print_single_digit": 1,
                    "print_single_digit_number": 1
                }
            },
            "called": [
                "FUN_08005ce8"
            ],
            "calling": [
                "FUN_08005da8"
            ],
            "code": "\nvoid print_number_or_call_another_function_08005d8a(undefined4 *function_pointer,uint value1,uint value2,undefined4 value3)\n\n{\n  if (value2 != 0) {\n    print_number(function_pointer,value1,value2 & 0xff);\n    return;\n  }\n  (**(code **)*function_pointer)(function_pointer,value1 & 0xff,0,*(code **)*function_pointer,value3);\n  return;\n}\n\n",
            "current_name": "print_number_or_call_another_function_08005d8a",
            "entrypoint": "0x08005d8a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005d8a": "print_number_or_call_another_function_08005d8a",
                "param_1": "function_pointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "printNumber": "print_number"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005da8": {
            "additional_data": {
                "DAT_0800785c": {
                    "data4": 1
                },
                "DAT_08007860": {
                    "data1": 1
                },
                "DAT_08007864": {
                    "data3": 1
                },
                "DAT_08007868": {
                    "data2": 1
                },
                "FUN_08005da8": {
                    "calculate_and_print_floating_point_value": 1,
                    "calculate_and_print_result": 1,
                    "calculate_float_value": 1,
                    "calculate_improved_result": 1,
                    "calculate_result": 6,
                    "execute_float_to_integer_conversion": 1,
                    "perform_calculation": 3,
                    "process_calculation": 1,
                    "process_data": 1,
                    "process_floating_point": 2,
                    "process_floating_point_number": 1,
                    "process_floating_point_operation": 1,
                    "process_floating_point_value": 1,
                    "process_floating_point_values": 1,
                    "process_input": 1,
                    "process_number": 3,
                    "process_numeric_value": 1,
                    "reverse_and_print_floating_point": 1
                },
                "__aeabi_dadd": {
                    "add": 1,
                    "add_double": 2,
                    "add_floating_point": 1
                },
                "__aeabi_dcmpgt": {
                    "check_double_greater_than": 1,
                    "check_greater_than": 1,
                    "check_if_greater_than": 1,
                    "is_greater": 1
                },
                "__aeabi_dcmple": {
                    "check_double_less_than_or_equal": 1,
                    "check_if_less_or_equal": 1,
                    "check_less_than_or_equal": 1,
                    "is_less_or_equal": 1
                },
                "__aeabi_dcmplt": {
                    "check_double_less_than": 1,
                    "check_if_less_than": 1,
                    "check_less_than": 1,
                    "is_less": 1
                },
                "__aeabi_dmul": {
                    "multiply": 1
                },
                "__divdf3": {
                    "divide": 1,
                    "divide_double": 1,
                    "divide_floating_point": 1
                },
                "__fixdfsi": {
                    "convert_double_to_int": 1,
                    "convert_to_integer": 1,
                    "convert_to_signed_int": 1,
                    "fix_double_to_int": 1
                },
                "__fixunsdfsi": {
                    "convert_to_unsigned_int": 1,
                    "convert_to_unsigned_integer": 1,
                    "convert_unsigned_double_to_int": 1,
                    "fix_double_to_unsigned_int": 1
                },
                "__floatsidf": {
                    "convert_int_to_double": 1,
                    "convert_to_float": 1,
                    "convert_to_signed_float": 1,
                    "float_int_to_double": 1
                },
                "__floatunsidf": {
                    "convert_to_unsigned_float": 2,
                    "convert_unsigned_int_to_double": 1,
                    "float_unsigned_int_to_double": 1
                },
                "__muldf3": {
                    "multiply": 1,
                    "multiply_double": 2,
                    "multiply_floating_point": 1
                },
                "__subdf3": {
                    "subtract": 1,
                    "subtract_double": 2,
                    "subtract_floating_point": 1
                },
                "__unorddf2": {
                    "check_if_unordered": 1,
                    "check_unordered": 2,
                    "is_unordered": 1
                },
                "bVar4": {
                    "bit_count": 1,
                    "byte_value": 1,
                    "byte_var": 1,
                    "count": 2,
                    "counter": 11,
                    "index": 3,
                    "iteration": 2,
                    "iteration_count": 2,
                    "loop_count": 1,
                    "loop_counter": 3,
                    "loop_index": 1,
                    "temp3": 1,
                    "temp_3": 1,
                    "var3": 1
                },
                "calculate_floating_point_value_0800074c": {
                    "calculate_floating_point_value": 7
                },
                "calculate_result_08000190": {
                    "calculate_result": 1,
                    "calculate_result3": 4,
                    "calculate_result_3": 1,
                    "calculate_result_option3": 1
                },
                "calculate_result_08000194": {
                    "calculate_result": 1,
                    "calculate_result2": 4,
                    "calculate_result_2": 1,
                    "calculate_result_option2": 1
                },
                "calculate_result_080004f8": {
                    "calculate_result": 1,
                    "calculate_result1": 4,
                    "calculate_result_1": 1,
                    "calculate_result_option1": 1
                },
                "calculate_shifted_value_08000aa8": {
                    "calculate_shifted_value": 7
                },
                "check_equality_condition_080009f0": {
                    "check_equality_condition": 4,
                    "is_equal": 3
                },
                "check_if_cy_is_null_080009dc": {
                    "check_carry_flag_is_null": 1,
                    "check_if_carry_is_null": 2,
                    "check_if_carry_null": 1,
                    "is_carry_null": 3
                },
                "check_if_in_cy_is_null_08000a18": {
                    "check_if_in_carry_is_null": 1,
                    "check_if_in_carry_null": 1,
                    "check_if_inverse_carry_is_null": 1,
                    "check_in_carry_flag_is_null": 1,
                    "is_in_carry_null": 2,
                    "is_inner_carry_null": 1
                },
                "check_parameters_08000a2c": {
                    "check_parameters": 7
                },
                "execute_function_from_pointer_08005cb6": {
                    "execute_function_from_pointer": 10
                },
                "execute_print_number_or_execute_function_08005d82": {
                    "execute_print_number_or_call_function": 1,
                    "execute_print_number_or_execute_function": 2,
                    "execute_print_or_execute_function": 3,
                    "print_number_or_execute_function": 4
                },
                "execute_sub_function_08005c96": {
                    "execute_function": 1,
                    "execute_sub_function": 8
                },
                "iVar1": {
                    "result": 30,
                    "return_value": 1
                },
                "iVar3": {
                    "i_var2": 1,
                    "print_result": 1,
                    "return_value": 1,
                    "sub_function_result": 6,
                    "sub_result": 3,
                    "temp": 2,
                    "temp2": 8,
                    "temp_2": 1,
                    "temp_result": 3,
                    "temp_value2": 1,
                    "temp_var2": 2,
                    "tmp_result": 1,
                    "var2": 1
                },
                "param_1": {
                    "arg1": 1,
                    "array": 14,
                    "function_pointer": 7,
                    "input_1": 1,
                    "input_array": 3,
                    "input_param1": 1,
                    "input_pointer": 1,
                    "output": 1,
                    "param1": 2
                },
                "param_2": {
                    "arg2": 1,
                    "input1": 1,
                    "input_2": 1,
                    "input_param2": 1,
                    "input_size": 2,
                    "input_value1": 1,
                    "param1": 1,
                    "param2": 5,
                    "param3": 1,
                    "param_1": 3,
                    "param_2": 4,
                    "param_unused": 1,
                    "string": 5,
                    "value1": 4
                },
                "param_3": {
                    "arg3": 1,
                    "input1": 2,
                    "input2": 1,
                    "input_3": 1,
                    "input_param3": 1,
                    "input_value1": 1,
                    "input_value2": 1,
                    "operand1": 2,
                    "param2": 1,
                    "param3": 8,
                    "param4": 1,
                    "param_2": 3,
                    "param_3": 2,
                    "value1": 2,
                    "value2": 4
                },
                "param_4": {
                    "arg4": 1,
                    "input2": 2,
                    "input3": 1,
                    "input_4": 1,
                    "input_param4": 1,
                    "input_value2": 1,
                    "input_value3": 1,
                    "operand2": 2,
                    "param3": 1,
                    "param4": 8,
                    "param_3": 3,
                    "param_4": 2,
                    "value1": 1,
                    "value2": 2,
                    "value3": 4
                },
                "param_5": {
                    "arg5": 1,
                    "byte_param": 1,
                    "count": 1,
                    "input_5": 1,
                    "iteration_count": 2,
                    "num_bits": 1,
                    "num_iterations": 5,
                    "param4": 1,
                    "param5": 6,
                    "param_4": 3,
                    "param_5": 3,
                    "param_size": 1,
                    "value2": 1,
                    "value3": 1,
                    "value4": 3
                },
                "print_number_or_call_another_function_08005d8a": {
                    "print_number_or_call_another_function": 1,
                    "print_number_or_call_function": 6,
                    "print_number_or_execute_function": 1,
                    "print_or_call_function": 1,
                    "print_or_execute_function": 1
                },
                "reverse_and_shift_bits_0800040c": {
                    "reverse_and_shift_bits": 2,
                    "reverse_and_shift_bits_2": 1,
                    "reverse_and_shift_bits_option2": 1
                },
                "reverse_and_shift_bits_0800042c": {
                    "reverse_and_shift_bits": 7
                },
                "reverse_bits_08000a58": {
                    "reverse_bits": 7
                },
                "uVar2": {
                    "div_var": 1,
                    "dividend": 1,
                    "dividend_high": 1,
                    "first_result": 1,
                    "fixed_value": 1,
                    "integer_result": 1,
                    "operand1_low_bits": 1,
                    "temp": 1,
                    "temp1": 9,
                    "temp_1": 1,
                    "temp_value": 1,
                    "temp_value1": 2,
                    "temp_var": 1,
                    "temp_var1": 2,
                    "u_int_value": 1,
                    "u_value": 1,
                    "u_value1": 1,
                    "value1": 1,
                    "value3": 1,
                    "var1": 1
                },
                "uVar5": {
                    "div_result": 1,
                    "div_value": 1,
                    "dividend_low": 1,
                    "divisor": 1,
                    "double_value1": 1,
                    "float_result": 1,
                    "float_temp1": 1,
                    "float_value": 2,
                    "float_value1": 1,
                    "floating_point1": 1,
                    "floating_point_value": 9,
                    "floating_point_value1": 1,
                    "floating_point_var": 1,
                    "mul_var": 1,
                    "temp2": 1,
                    "temp3": 2,
                    "temp4": 1,
                    "temp_4": 1,
                    "u_value2": 1,
                    "value1": 1,
                    "var4": 1
                },
                "uVar6": {
                    "conversion_temp": 1,
                    "conversion_value": 1,
                    "converted_float": 1,
                    "converted_value": 2,
                    "divisor_low": 1,
                    "double_value2": 1,
                    "float_result": 1,
                    "float_temp2": 1,
                    "float_value": 1,
                    "float_value2": 1,
                    "float_var": 1,
                    "floating_point2": 1,
                    "floating_point_conversion": 1,
                    "floating_point_value2": 1,
                    "floating_point_var2": 1,
                    "quotient": 1,
                    "temp3": 3,
                    "temp4": 2,
                    "temp5": 1,
                    "temp_5": 1,
                    "temp_float": 1,
                    "temp_float_conversion": 1,
                    "temp_var3": 2,
                    "u_value3": 1,
                    "value2": 1,
                    "var5": 1
                }
            },
            "called": [
                "FUN_080009dc",
                "FUN_08000a58",
                "FUN_0800042c",
                "FUN_08005d8a",
                "FUN_08000a18",
                "FUN_08005d82",
                "FUN_080004f8",
                "FUN_08000194",
                "FUN_08005cb6",
                "FUN_08000190",
                "FUN_080009f0",
                "FUN_0800074c",
                "FUN_08000aa8",
                "FUN_08000a2c",
                "FUN_08005c96",
                "FUN_0800040c"
            ],
            "calling": [
                "FUN_08005f2c"
            ],
            "code": "\nint calculate_and_print_result_08005da8(undefined4 array,undefined4 string,undefined4 param3,uint param4,byte param5)\n\n{\n  int result;\n  undefined4 temp1;\n  int temp2;\n  byte counter;\n  undefined8 floating_point_value;\n  undefined8 temp3;\n  \n  result = check_unordered(param3,param4,param3,param4);\n  if (result == 0) {\n    result = check_unordered(param3,param4 & 0x7fffffff,0xffffffff,0x7fefffff);\n    if ((result == 0) &&\n       (result = check_if_less_or_equal(param3,param4 & 0x7fffffff,0xffffffff,0x7fefffff), result == 0)) {\n      result = execute_sub_function(array,&DAT_08007860);\n    }\n    else {\n      result = check_greater_than(param3,param4,0xe0000000,0x41efffff);\n      if (result == 0) {\n        result = check_double_less_than(param3,param4,0xe0000000,0xc1efffff);\n        if (result == 0) {\n          result = check_double_less_than(param3,param4,0,0);\n          if (result == 0) {\n            result = 0;\n          }\n          else {\n            result = execute_function_from_pointer(array,0x2d);\n            param4 = param4 + 0x80000000;\n          }\n          floating_point_value = 0x3fe0000000000000;\n          for (counter = 0; temp1 = (undefined4)((ulonglong)floating_point_value >> 0x20), counter < param5;\n              counter = counter + 1) {\n            floating_point_value = divide_floating_point((int)floating_point_value,temp1,0,0x40240000);\n          }\n          floating_point_value = add_double(param3,param4,(int)floating_point_value,temp1);\n          temp1 = fix_double_to_unsigned_int();\n          temp3 = convert_to_unsigned_float();\n          floating_point_value = subtract_double((int)floating_point_value,(int)((ulonglong)floating_point_value >> 0x20),(int)temp3,\n                           (int)((ulonglong)temp3 >> 0x20));\n          temp2 = print_number_or_call_function(array,temp1,10);\n          result = result + temp2;\n          if (param5 != 0) {\n            temp2 = execute_sub_function(array,&DAT_08007868);\n            result = result + temp2;\n          }\n          while (param5 != 0) {\n            floating_point_value = multiply_double((int)floating_point_value,(int)((ulonglong)floating_point_value >> 0x20),0,0x40240000);\n            temp1 = convert_to_signed_int();\n            temp2 = print_number_or_execute_function(array,temp1,10);\n            result = result + temp2;\n            temp3 = convert_to_float(temp1);\n            floating_point_value = subtract_double((int)floating_point_value,(int)((ulonglong)floating_point_value >> 0x20),(int)temp3,\n                             (int)((ulonglong)temp3 >> 0x20));\n            param5 = param5 - 1;\n          }\n        }\n        else {\n          result = execute_sub_function(array,&DAT_08007864);\n        }\n      }\n      else {\n        result = execute_sub_function(array,&DAT_08007864);\n      }\n    }\n  }\n  else {\n    result = execute_sub_function(array,&DAT_0800785c);\n  }\n  return result;\n}\n\n",
            "current_name": "calculate_and_print_result_08005da8",
            "entrypoint": "0x08005da8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005da8": "calculate_and_print_result_08005da8",
                "__aeabi_dadd": "add_double",
                "__aeabi_dcmpgt": "check_greater_than",
                "__aeabi_dcmple": "check_if_less_or_equal",
                "__aeabi_dcmplt": "check_double_less_than",
                "__divdf3": "divide_floating_point",
                "__fixdfsi": "convert_to_signed_int",
                "__fixunsdfsi": "fix_double_to_unsigned_int",
                "__floatsidf": "convert_to_float",
                "__floatunsidf": "convert_to_unsigned_float",
                "__muldf3": "multiply_double",
                "__subdf3": "subtract_double",
                "__unorddf2": "check_unordered",
                "bVar4": "counter",
                "execute_function_from_pointer_08005cb6": "execute_function_from_pointer",
                "execute_print_number_or_execute_function_08005d82": "print_number_or_execute_function",
                "execute_sub_function_08005c96": "execute_sub_function",
                "iVar1": "result",
                "iVar3": "temp2",
                "param_1": "array",
                "param_2": "string",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "print_number_or_call_another_function_08005d8a": "print_number_or_call_function",
                "uVar2": "temp1",
                "uVar5": "floating_point_value",
                "uVar6": "temp3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005f2c": {
            "additional_data": {
                "FUN_08005da8": {
                    "calculate_and_print": 1,
                    "calculate_float_value": 1,
                    "calculate_something": 1,
                    "convert_and_print_float": 2,
                    "param_processing_function": 1,
                    "process_data": 7,
                    "process_float": 1,
                    "process_float_data": 1,
                    "process_float_printing": 1,
                    "process_float_value": 1,
                    "process_float_values": 1,
                    "process_input": 1,
                    "process_print_float": 1
                },
                "FUN_08005f2c": {
                    "print_float": 5,
                    "print_float_function": 1,
                    "print_float_improved": 1,
                    "print_float_value": 3,
                    "print_float_values": 2,
                    "print_float_wrapper": 19
                },
                "param_1": {
                    "arg1": 9,
                    "input1": 7,
                    "num1": 1,
                    "some_value": 1,
                    "value1": 3
                },
                "param_2": {
                    "arg2": 9,
                    "input2": 7,
                    "num2": 1,
                    "some_flag": 1,
                    "value2": 3
                },
                "param_3": {
                    "arg3": 9,
                    "input3": 7,
                    "num3": 1,
                    "some_data": 1,
                    "value3": 3
                },
                "param_4": {
                    "arg4": 9,
                    "count": 5,
                    "flags": 2,
                    "input4": 1,
                    "size": 2,
                    "value": 2
                },
                "param_5": {
                    "arg5": 9,
                    "byte_data": 1,
                    "byte_value": 1,
                    "data": 2,
                    "flag": 7,
                    "input5": 1
                }
            },
            "called": [
                "FUN_08005da8"
            ],
            "calling": [
                "FUN_08005f40",
                "FUN_08000cd0"
            ],
            "code": "\nvoid print_float_wrapper_08005f2c(void)\n\n{\n  printFloat();\n  return;\n}\n\n",
            "current_name": "print_float_wrapper_08005f2c",
            "entrypoint": "0x08005f2c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005f2c": "print_float_wrapper_08005f2c"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005f40": {
            "additional_data": {
                "FUN_08005f40": {
                    "calculate_and_print_result": 2,
                    "calculate_callback_result": 1,
                    "calculate_function_result": 1,
                    "calculate_print_and_callback_result": 1,
                    "calculate_result": 5,
                    "calculate_sum": 11,
                    "calculate_sum_and_execute_callback": 1,
                    "calculate_sum_of_callbacks": 1,
                    "calculate_sum_of_print_and_callback": 1,
                    "calculate_total": 6,
                    "execute_and_print": 1
                },
                "execute_callback_function_08005cc0": {
                    "execute_callback_function": 1
                },
                "execute_callback_function_08005cc0_1": {
                    "callback_function": 1
                },
                "iVar1": {
                    "print_result": 29,
                    "print_return_value": 1,
                    "print_value": 1
                },
                "iVar2": {
                    "callback_function_result": 1,
                    "callback_result": 25,
                    "callback_return_value": 1,
                    "execute_result": 4
                },
                "param_1": {
                    "arg": 6,
                    "arg1": 1,
                    "argument": 1,
                    "callback_arg": 3,
                    "callback_argument": 1,
                    "callback_param": 2,
                    "callback_parameter": 1,
                    "input": 1,
                    "input_param": 3,
                    "input_parameter": 1,
                    "input_value": 9,
                    "integer_parameter": 1,
                    "value": 1
                },
                "print": {
                    "get_print_result": 1
                }
            },
            "called": [
                "FUN_08005cc0",
                "FUN_08005f2c"
            ],
            "calling": [
                "FUN_08000cd0"
            ],
            "code": "\nint calculate_sum_and_execute_callback_08005f40(undefined4 input_value)\n\n{\n  int print_result;\n  int callback_result;\n  \n  print_result = get_print_result();\n  callback_result = execute_callback_function(input_value);\n  return callback_result + print_result;\n}\n\n",
            "current_name": "calculate_sum_and_execute_callback_08005f40",
            "entrypoint": "0x08005f40",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005f40": "calculate_sum_and_execute_callback_08005f40",
                "execute_callback_function_08005cc0": "execute_callback_function",
                "iVar1": "print_result",
                "iVar2": "callback_result",
                "param_1": "input_value",
                "print": "get_print_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005f5c": {
            "called": [],
            "calling": [
                "FUN_08005f6c"
            ],
            "code": "\nvoid FUNC_08005f5c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08005f5c",
            "entrypoint": "0x08005f5c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08005f5c": "FUNC_08005f5c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08005f5e": {
            "additional_data": {
                "FUN_08005f5e": {
                    "configure_hardware": 7,
                    "initialize_device": 1,
                    "initialize_hardware": 8,
                    "initialize_system": 15
                },
                "initialize_hardware_configuration_08001c32": {
                    "configure_hardware": 9,
                    "init_hardware_config": 1,
                    "initialize_hardware": 6,
                    "initialize_hardware_configuration": 15
                },
                "update_register_value_08002470": {
                    "update_register": 3,
                    "update_register_value": 28
                }
            },
            "called": [
                "FUN_08001c32",
                "FUN_08002470"
            ],
            "calling": [
                "FUN_08006198"
            ],
            "code": "\nvoid initialize_system_08005f5e(void)\n\n{\n  HAL_NVIC_SetPriorityGrouping(3);\n  initialize_hardware_configuration();\n  return;\n}\n\n",
            "current_name": "initialize_system_08005f5e",
            "entrypoint": "0x08005f5e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005f5e": "initialize_system_08005f5e",
                "initialize_hardware_configuration_08001c32": "initialize_hardware_configuration"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005f6c": {
            "additional_data": {
                "FUNC_08005a18": {
                    "execute_loop": 1,
                    "loop": 23,
                    "main_loop": 2,
                    "perform_loop": 1,
                    "perform_loop_operation": 1,
                    "program_loop": 2,
                    "run_loop": 1
                },
                "FUNC_08005f5c": {
                    "init_variant": 26,
                    "initialize_variant": 5
                },
                "FUN_08000bcc": {
                    "setup": 27,
                    "setup_environment": 1,
                    "setup_microcontroller": 1,
                    "setup_peripheral": 1,
                    "setup_program": 1
                },
                "FUN_08000cd0": {
                    "execute_serial_event": 1,
                    "execute_serial_events": 1,
                    "handle_serial_event": 3,
                    "handle_serial_events": 1,
                    "process_serial_event": 1,
                    "process_serial_events": 1,
                    "run_serial_event": 12,
                    "run_serial_events": 1,
                    "serial_event": 1,
                    "serial_event_handle": 1,
                    "serial_event_run": 8
                },
                "FUN_08005f6c": {
                    "execute_main_program": 1,
                    "infinite_loop": 1,
                    "initialize_and_run": 6,
                    "initialize_and_run_loop": 1,
                    "initialize_system": 1,
                    "initiate_setup_loop": 1,
                    "main_loop": 6,
                    "run_main_loop": 5,
                    "run_microcontroller": 1,
                    "run_program": 5,
                    "start_microcontroller": 1,
                    "start_program": 2
                },
                "initVariant": {
                    "initialize_variant": 1
                },
                "loop": {
                    "run_loop": 1
                },
                "serialEventRun": {
                    "process_serial_events": 1
                },
                "setup": {
                    "setup_environment": 1
                }
            },
            "called": [
                "FUN_08005f5c",
                "FUN_08000bcc",
                "FUN_08005a18",
                "FUN_08000cd0"
            ],
            "calling": [
                "FUN_08001be8"
            ],
            "code": "\nvoid run_main_loop_08005f6c(void)\n\n{\n  initialize_variant();\n  setup_environment();\n  do {\n    run_loop();\n    process_serial_events();\n  } while( true );\n}\n\n",
            "current_name": "run_main_loop_08005f6c",
            "entrypoint": "0x08005f6c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005f6c": "run_main_loop_08005f6c",
                "initVariant": "initialize_variant",
                "loop": "run_loop",
                "serialEventRun": "process_serial_events",
                "setup": "setup_environment"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005f8c": {
            "additional_data": {
                "FUN_08005f8c": {
                    "bit_count": 1,
                    "count_bits": 5,
                    "count_bits_set": 5,
                    "count_set_bits": 19,
                    "get_binary_length": 1
                },
                "cVar1": {
                    "bit_count": 26,
                    "count": 4,
                    "counter": 1
                },
                "param_1": {
                    "input": 3,
                    "input_number": 5,
                    "input_value": 1,
                    "num": 9,
                    "number": 12,
                    "number_to_count": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080060e4"
            ],
            "code": "\nchar count_bits_set_08005f8c(uint number)\n\n{\n  char bit_count;\n  \n  bit_count = '\\0';\n  for (; number != 1; number = number >> 1) {\n    bit_count = bit_count + '\\x01';\n  }\n  return bit_count;\n}\n\n",
            "current_name": "count_bits_set_08005f8c",
            "entrypoint": "0x08005f8c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005f8c": "count_bits_set_08005f8c",
                "cVar1": "bit_count",
                "param_1": "number"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005fc8": {
            "additional_data": {
                "FUN_08005fc8": {
                    "initialize_constants": 1,
                    "initialize_data": 17,
                    "initialize_parameters": 11,
                    "initialize_params": 1,
                    "initialize_variables": 1
                },
                "FUN_08006112": {
                    "handle_flag_case": 1
                },
                "LAB_08005fa0_1": {
                    "cleanup_function": 4,
                    "exit_func": 1,
                    "exit_function": 1,
                    "exit_handler": 6
                },
                "__aeabi_atexit": {
                    "exit_handler": 1,
                    "register_cleanup_function": 7,
                    "register_exit_func": 1,
                    "register_exit_function": 5,
                    "register_exit_handler": 5
                },
                "exitFunc": {
                    "exit_func": 1
                },
                "initializeData": {
                    "initialize_data": 1
                },
                "param_1": {
                    "arg1": 1,
                    "condition": 6,
                    "flag": 7,
                    "input_condition": 1,
                    "input_flag": 1,
                    "input_value": 1,
                    "mode": 1,
                    "param1": 2,
                    "status": 8,
                    "status_flag": 1,
                    "value1": 1,
                    "value_check": 1
                },
                "param_2": {
                    "arg2": 1,
                    "flag": 3,
                    "flag_value": 1,
                    "input_value": 2,
                    "magic_number": 1,
                    "param2": 2,
                    "value": 19,
                    "value2": 1,
                    "value_flag": 1
                },
                "param_3": {
                    "arg3": 1,
                    "param3": 5,
                    "parameter1": 1,
                    "unknown": 1,
                    "unknown1": 1,
                    "unnamed_param1": 1,
                    "unused1": 6,
                    "unused_1": 1,
                    "unused_param": 1,
                    "unused_param1": 7,
                    "unused_param3": 4,
                    "unused_param_3": 1
                },
                "param_4": {
                    "arg4": 1,
                    "callback": 1,
                    "exit_function": 1,
                    "param4": 5,
                    "parameter2": 1,
                    "unknown2": 1,
                    "unnamed_param2": 1,
                    "unused2": 6,
                    "unused_2": 1,
                    "unused_param2": 7,
                    "unused_param4": 4,
                    "unused_param_4": 1
                },
                "registerExitFunc": {
                    "register_exit_func": 1
                },
                "status": {
                    "status": 1
                },
                "value": {
                    "value": 1
                }
            },
            "called": [
                "FUN_08006112"
            ],
            "calling": [],
            "code": "\nvoid initialize_data_08005fc8(int status,int value,undefined4 unused_param1,undefined4 unused_param2)\n\n{\n  if (status != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    DAT_200004b8 = 6;\n    DAT_200004c4 = 0;\n    DAT_200004cc = 7;\n    DAT_200004d8 = 0;\n    DAT_200004e0 = 8;\n    DAT_200004ec = 0;\n    DAT_200004f4 = 9;\n    DAT_20000500 = 0;\n    DAT_20000508 = 10;\n    DAT_20000514 = 0;\n    DAT_2000051c = 0x17;\n    DAT_20000528 = 0;\n    DAT_20000530 = 0x17;\n    DAT_2000053c = 0;\n    DAT_20000544 = 0x17;\n    DAT_20000550 = 0;\n    DAT_20000558 = 0x17;\n    DAT_20000564 = 0;\n    DAT_2000056c = 0x17;\n    DAT_20000578 = 0;\n    DAT_20000580 = 0x28;\n    DAT_2000058c = 0;\n    DAT_20000594 = 0x28;\n    DAT_200005a0 = 0;\n    DAT_200005a8 = 0x28;\n    DAT_200005b4 = 0;\n    DAT_200005bc = 0x28;\n    DAT_200005c8 = 0;\n    DAT_200005d0 = 0x28;\n    DAT_200005dc = 0;\n    DAT_200005e4 = 0x28;\n    DAT_200005f0 = 0;\n    register_cleanup_function(0,&exit_handler,&DAT_20000000,&DAT_200004b8,unused_param2);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_data_08005fc8",
            "entrypoint": "0x08005fc8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005fc8": "initialize_data_08005fc8",
                "LAB_08005fa0_1": "exit_handler",
                "__aeabi_atexit": "register_cleanup_function",
                "param_1": "status",
                "param_2": "value",
                "param_3": "unused_param1",
                "param_4": "unused_param2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080060d4": {
            "additional_data": {
                "DAT_200004c4": {
                    "pin_array": 1
                },
                "FUN_080060d4": {
                    "check_and_execute_function": 1,
                    "execute_action": 1,
                    "execute_function": 6,
                    "execute_function_or_throw": 1,
                    "execute_or_throw": 1,
                    "execute_or_throw_if_invalid": 1,
                    "handle_function_call": 2,
                    "process": 1,
                    "process_data": 3,
                    "process_function": 11,
                    "process_param": 1,
                    "process_parameter": 1
                },
                "FUN_08007090": {
                    "call_function": 1,
                    "do_something": 2,
                    "execute_sub_function": 4,
                    "initialize": 1,
                    "perform_action": 1,
                    "perform_operation": 1,
                    "print_message": 1,
                    "print_pin_status": 1,
                    "process_data": 1,
                    "secondary_function": 1,
                    "sub_function": 1
                },
                "code": {
                    "function_to_call": 1
                },
                "get_pin_id": {
                    "get_pin_id": 1
                },
                "iVar1": {
                    "pin_id": 31
                },
                "param_1": {
                    "action_id": 1,
                    "address": 1,
                    "arg": 3,
                    "data": 2,
                    "data_ptr": 1,
                    "function_param": 3,
                    "function_parameter": 1,
                    "function_pointer": 1,
                    "input": 4,
                    "input_param": 7,
                    "input_parameter": 3,
                    "input_value": 1,
                    "param": 2,
                    "parameter": 1
                }
            },
            "called": [
                "FUN_08007090"
            ],
            "calling": [
                "FUN_080060e4"
            ],
            "code": "\nvoid process_function_080060d4(int input_param)\n\n{\n  int pin_id;\n  \n  if (*(int *)(input_param + 8) != 0) {\n    (**(function_to_call **)(input_param + 0xc))();\n    return;\n  }\n  __throw_bad_function_call();\n  pin_id = get_pin_id();\n  if ((&DAT_200004c4)[pin_id * 5] != 0) {\n    process_function_080060d4();\n  }\n  return;\n}\n\n",
            "current_name": "process_function_080060d4",
            "entrypoint": "0x080060d4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080060d4": "process_function_080060d4",
                "code": "function_to_call",
                "iVar1": "pin_id",
                "param_1": "input_param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080060e4": {
            "additional_data": {
                "DAT_200004c4": {
                    "pin_data": 1,
                    "pin_status": 1
                },
                "FUN_08005f8c": {
                    "check_data": 1,
                    "check_if_pin_active": 1,
                    "check_if_pin_valid": 1,
                    "check_pin": 3,
                    "check_pin_id": 1,
                    "check_pin_status": 2,
                    "check_pin_validity": 4,
                    "check_pin_value": 2,
                    "get_pin_status": 6,
                    "get_pin_value": 1,
                    "is_pin_valid": 4,
                    "resolve_pin": 1
                },
                "FUN_080060d4": {
                    "call_operator": 3,
                    "execute_operation": 6,
                    "execute_operator": 3,
                    "execute_pin_action": 1,
                    "handle_invalid_pin": 1,
                    "invoke_operator": 4,
                    "make_operator_call": 1,
                    "operate_with_pin": 1,
                    "operator_func": 1,
                    "perform_operation": 4,
                    "process_pin_id": 1,
                    "trigger_operator": 1
                },
                "FUN_080060e4": {
                    "check_and_call_operator": 2,
                    "check_and_execute_operation": 1,
                    "check_and_execute_operator": 2,
                    "check_pin_and_call_operator": 8,
                    "check_pin_and_execute": 7,
                    "check_pin_and_invoke_operator": 3,
                    "check_pin_and_perform_operation": 2,
                    "execute_if_pin_valid": 2,
                    "execute_if_valid_pin": 1,
                    "process_pin": 1,
                    "process_pin_event": 1,
                    "run_if_pin_set": 1
                },
                "get_pin_id": {
                    "get_current_pin_id": 2,
                    "get_pin_id": 6,
                    "retrieve_pin_id": 5
                },
                "iVar1": {
                    "current_pin_id": 1,
                    "pin_id": 20,
                    "pin_id_status": 1,
                    "pin_index": 1,
                    "status_index": 1
                },
                "param_1": {
                    "operation": 1,
                    "operator_id": 1,
                    "pin": 1,
                    "pin_id": 9,
                    "pin_value": 1
                },
                "param_2": {
                    "status": 1
                }
            },
            "called": [
                "FUN_08005f8c",
                "FUN_080060d4"
            ],
            "calling": [
                "FUN_0800282c"
            ],
            "code": "\nvoid check_pin_and_call_operator_080060e4(void)\n\n{\n  int pin_id;\n  \n  pin_id = get_pin_id();\n  if ((&DAT_200004c4)[pin_id * 5] != 0) {\n    operator()();\n  }\n  return;\n}\n\n",
            "current_name": "check_pin_and_call_operator_080060e4",
            "entrypoint": "0x080060e4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080060e4": "check_pin_and_call_operator_080060e4",
                "iVar1": "pin_id"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006112": {
            "additional_data": {
                "FUN_08006112": {
                    "initialize_at_exit": 1,
                    "initialize_shutdown_handler": 1,
                    "register_at_exit_function": 3,
                    "register_at_exit_handler": 4,
                    "register_atexit_handler": 1,
                    "register_callback": 1,
                    "register_cleanup_function": 4,
                    "register_destructor": 2,
                    "register_exit_function": 5,
                    "register_exit_handler": 8
                },
                "FUN_08006158": {
                    "calculate_checksum": 4,
                    "calculate_hash": 1,
                    "calculate_result": 2,
                    "calculate_return_value": 1,
                    "calculate_value": 2,
                    "compute_value": 1,
                    "convert_parameters": 1,
                    "execute_cleanup_process": 1,
                    "find_matching_value": 1,
                    "perform_action": 1,
                    "perform_cleanup": 1,
                    "perform_operation": 3,
                    "perform_task": 1,
                    "process_data": 4,
                    "reverse_bits": 1
                },
                "__cxa_atexit": {
                    "exit_handler": 1,
                    "register_cleanup_function": 1
                },
                "longlong": {
                    "long_long": 1
                },
                "param_1": {
                    "action": 1,
                    "clean_up_function": 1,
                    "cleanup_function": 4,
                    "data": 2,
                    "data1": 1,
                    "data_pointer": 1,
                    "exit_callback": 1,
                    "exit_function": 1,
                    "exit_handler_function": 1,
                    "function": 1,
                    "function_parameter": 1,
                    "function_ptr": 1,
                    "handler": 1,
                    "handler_function": 6,
                    "input_param": 1,
                    "input_parameter1": 1,
                    "input_value": 1,
                    "operation_parameter": 1,
                    "operation_parameter1": 1,
                    "param1": 2,
                    "value_parameter": 1
                },
                "param_2": {
                    "clean_up_object": 1,
                    "cleanup_arg": 1,
                    "cleanup_data": 1,
                    "cleanup_object": 1,
                    "cleanup_parameter": 2,
                    "context": 1,
                    "data2": 1,
                    "dso_handle": 1,
                    "flag": 1,
                    "flags": 1,
                    "handler": 1,
                    "handler_argument": 1,
                    "handler_data": 1,
                    "handler_object": 1,
                    "input_parameter2": 1,
                    "int_value": 1,
                    "length": 1,
                    "lp_exit_handler": 1,
                    "operation_parameter2": 1,
                    "operation_value": 1,
                    "param2": 2,
                    "param_1": 1,
                    "parameter": 1,
                    "seed_value": 1,
                    "size": 1,
                    "user_data": 3,
                    "value_arg": 1
                },
                "uint": {
                    "unsigned_int": 1,
                    "value": 1
                },
                "undefined4": {
                    "type": 1,
                    "unsigned_int": 1
                }
            },
            "called": [
                "FUN_08006158"
            ],
            "calling": [
                "FUN_08005fc8"
            ],
            "code": "\nvoid register_at_exit_handler_08006112(type handler_function,type user_data)\n\n{\n  register_cleanup_function(user_data,handler_function);\n  return;\n}\n\n",
            "current_name": "register_at_exit_handler_08006112",
            "entrypoint": "0x08006112",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006112": "register_at_exit_handler_08006112",
                "__cxa_atexit": "register_cleanup_function",
                "param_1": "handler_function",
                "param_2": "user_data",
                "undefined4": "type"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800611c": {
            "additional_data": {
                "FUN_0800611c": {
                    "assertion_failed": 1,
                    "assertion_failed_message": 1,
                    "log_assertion_failure": 1,
                    "print_assert_failed_message": 1,
                    "print_assertion_error": 8,
                    "print_assertion_failed": 4,
                    "print_assertion_failed_message": 8,
                    "print_assertion_failure": 4,
                    "print_assertion_failure_message": 1,
                    "print_assertion_message": 2
                },
                "abort": {
                    "abort_execution": 1
                },
                "param_1": {
                    "assertion": 1,
                    "file": 4,
                    "file_name": 24,
                    "file_path": 1,
                    "filename": 1
                },
                "param_2": {
                    "file": 1,
                    "line": 4,
                    "line_num": 1,
                    "line_number": 25
                },
                "param_3": {
                    "assertion": 3,
                    "assertion_description": 1,
                    "assertion_expression": 1,
                    "assertion_message": 3,
                    "expression": 1,
                    "function_name": 20,
                    "line": 1,
                    "message": 1
                },
                "param_4": {
                    "assertion": 4,
                    "assertion_description": 1,
                    "assertion_message": 15,
                    "error_message": 1,
                    "function": 2,
                    "function_name": 8
                },
                "pcVar2": {
                    "additional_info": 10,
                    "additional_message": 4,
                    "additional_string": 1,
                    "additional_text": 2,
                    "delimiter": 1,
                    "error_message": 1,
                    "extra_description": 1,
                    "extra_info": 3,
                    "extra_message": 2,
                    "function_name_prefix": 1,
                    "message_suffix": 3,
                    "s1": 1,
                    "suffix": 1
                },
                "uVar1": {
                    "file": 1,
                    "file_descriptor": 8,
                    "file_handle": 4,
                    "file_output": 1,
                    "file_pointer": 5,
                    "file_ptr": 3,
                    "file_stream": 1,
                    "output_file": 6,
                    "output_stream": 2
                },
                "uVar3": {
                    "abort_result": 21,
                    "abort_return_value": 1,
                    "abort_status": 1,
                    "result": 6,
                    "result_value": 1,
                    "return_value": 1
                },
                "uVar4": {
                    "additional_info": 1,
                    "assertion_copy": 4,
                    "assertion_description": 1,
                    "assertion_description_copy": 1,
                    "assertion_extra_info": 1,
                    "assertion_message2": 1,
                    "assertion_message_2": 1,
                    "assertion_message_copy": 6,
                    "assertion_message_ptr": 2,
                    "assertion_msg": 1,
                    "assertion_msg_continued": 1,
                    "format_specifier": 1,
                    "function_info": 1,
                    "function_name_2": 1,
                    "function_name_copy": 4,
                    "function_param": 1,
                    "function_result": 1,
                    "mod_param4": 1,
                    "param_4": 1
                }
            },
            "called": [
                "FUN_08006ac0",
                "FUN_08006174"
            ],
            "calling": [
                "FUN_08005a68"
            ],
            "code": "\nvoid print_assertion_failed_message_0800611c(undefined4 file_name,undefined4 line_number,char *function_name,undefined4 assertion_message)\n\n{\n  undefined4 file_descriptor;\n  char *additional_info;\n  undefined8 abort_result;\n  undefined4 assertion_message_copy;\n  \n  file_descriptor = *(undefined4 *)(DAT_200000f8 + 0xc);\n  assertion_message_copy = assertion_message;\n  if (function_name == (char *)0x0) goto LAB_08006140;\n  additional_info = \", function: \";\n  do {\n    fiprintf(file_descriptor,\"assertion \\\"%s\\\" failed: file \\\"%s\\\", line %d%s%s\\n\",assertion_message,file_name,line_number,\n             additional_info,function_name,assertion_message_copy);\n    abort_result = abort_execution();\n    line_number = (undefined4)((ulonglong)abort_result >> 0x20);\n    file_descriptor = (undefined4)abort_result;\nLAB_08006140:\n    function_name = \"\";\n    additional_info = function_name;\n  } while( true );\n}\n\n",
            "current_name": "print_assertion_failed_message_0800611c",
            "entrypoint": "0x0800611c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800611c": "print_assertion_failed_message_0800611c",
                "abort": "abort_execution",
                "param_1": "file_name",
                "param_2": "line_number",
                "param_3": "function_name",
                "param_4": "assertion_message",
                "pcVar2": "additional_info",
                "uVar1": "file_descriptor",
                "uVar3": "abort_result",
                "uVar4": "assertion_message_copy"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006158": {
            "additional_data": {
                "FUN_08006158": {
                    "convert_to_long_long": 1,
                    "left_shift": 1,
                    "left_shift64": 1,
                    "left_shift_long_long": 1,
                    "left_shift_param_by32_bits": 1,
                    "left_shift_uint64": 2,
                    "shift_and_extend": 2,
                    "shift_left": 1,
                    "shift_left64_bits": 1,
                    "shift_left_by32": 3,
                    "shift_left_by32_bits": 2,
                    "shift_left_long_to_high": 1,
                    "shift_left_param_to_long_long": 1,
                    "shift_left_with_padding": 1,
                    "shift_param2_left": 1,
                    "shift_param_to_high_bits": 1,
                    "shift_parameter_to_high": 1,
                    "shift_parameter_to_high_bits": 1,
                    "shift_parameter_to_long_long": 1,
                    "shift_parameter_value": 2,
                    "shift_right_by32_bits": 1,
                    "shift_uint64": 1,
                    "shift_unsigned_long_long": 2,
                    "shift_unsigned_long_long_left": 1
                },
                "param_1": {
                    "conversion_type": 1,
                    "first_param": 1,
                    "flags": 4,
                    "input": 3,
                    "input1": 1,
                    "input_value": 1,
                    "new_parameter": 1,
                    "new_value": 1,
                    "num": 1,
                    "padding": 1,
                    "param": 4,
                    "param1": 4,
                    "param_a": 1,
                    "shift_value": 1,
                    "source": 1,
                    "unspecified_parameter": 1,
                    "unused": 1,
                    "value": 2,
                    "var1": 1
                },
                "param_10": {
                    "new_parameter_name_10": 1
                },
                "param_100": {
                    "new_parameter_name_100": 1
                },
                "param_101": {
                    "new_parameter_name_101": 1
                },
                "param_102": {
                    "new_parameter_name_102": 1
                },
                "param_103": {
                    "new_parameter_name_103": 1
                },
                "param_104": {
                    "new_parameter_name_104": 1
                },
                "param_105": {
                    "new_parameter_name_105": 1
                },
                "param_106": {
                    "new_parameter_name_106": 1
                },
                "param_107": {
                    "new_parameter_name_107": 1
                },
                "param_108": {
                    "new_parameter_name_108": 1
                },
                "param_109": {
                    "new_parameter_name_109": 1
                },
                "param_11": {
                    "new_parameter_name_11": 1
                },
                "param_110": {
                    "new_parameter_name_110": 1
                },
                "param_111": {
                    "new_parameter_name_111": 1
                },
                "param_112": {
                    "new_parameter_name_112": 1
                },
                "param_113": {
                    "new_parameter_name_113": 1
                },
                "param_114": {
                    "new_parameter_name_114": 1
                },
                "param_115": {
                    "new_parameter_name_115": 1
                },
                "param_116": {
                    "new_parameter_name_116": 1
                },
                "param_117": {
                    "new_parameter_name_117": 1
                },
                "param_118": {
                    "new_parameter_name_118": 1
                },
                "param_119": {
                    "new_parameter_name_119": 1
                },
                "param_12": {
                    "new_parameter_name_12": 1
                },
                "param_120": {
                    "new_parameter_name_120": 1
                },
                "param_121": {
                    "new_parameter_name_121": 1
                },
                "param_122": {
                    "new_parameter_name_122": 1
                },
                "param_123": {
                    "new_parameter_name_123": 1
                },
                "param_124": {
                    "new_parameter_name_124": 1
                },
                "param_125": {
                    "new_parameter_name_125": 1
                },
                "param_126": {
                    "new_parameter_name_126": 1
                },
                "param_127": {
                    "new_parameter_name_127": 1
                },
                "param_128": {
                    "new_parameter_name_128": 1
                },
                "param_129": {
                    "new_parameter_name_129": 1
                },
                "param_13": {
                    "new_parameter_name_13": 1
                },
                "param_130": {
                    "new_parameter_name_130": 1
                },
                "param_131": {
                    "new_parameter_name_131": 1
                },
                "param_132": {
                    "new_parameter_name_132": 1
                },
                "param_133": {
                    "new_parameter_name_133": 1
                },
                "param_134": {
                    "new_parameter_name_134": 1
                },
                "param_135": {
                    "new_parameter_name_135": 1
                },
                "param_136": {
                    "new_parameter_name_136": 1
                },
                "param_137": {
                    "new_parameter_name_137": 1
                },
                "param_138": {
                    "new_parameter_name_138": 1
                },
                "param_139": {
                    "new_parameter_name_139": 1
                },
                "param_14": {
                    "new_parameter_name_14": 1
                },
                "param_140": {
                    "new_parameter_name_140": 1
                },
                "param_141": {
                    "new_parameter_name_141": 1
                },
                "param_142": {
                    "new_parameter_name_142": 1
                },
                "param_143": {
                    "new_parameter_name_143": 1
                },
                "param_144": {
                    "new_parameter_name_144": 1
                },
                "param_145": {
                    "new_parameter_name_145": 1
                },
                "param_15": {
                    "new_parameter_name_15": 1
                },
                "param_16": {
                    "new_parameter_name_16": 1
                },
                "param_17": {
                    "new_parameter_name_17": 1
                },
                "param_18": {
                    "new_parameter_name_18": 1
                },
                "param_19": {
                    "new_parameter_name_19": 1
                },
                "param_2": {
                    "input2": 1,
                    "input_value": 1,
                    "num": 1,
                    "original_value": 3,
                    "param2": 3,
                    "param_b": 1,
                    "second_param": 1,
                    "shift_amount": 3,
                    "shift_value": 1,
                    "value": 14,
                    "value_to_convert": 1,
                    "var2": 1
                },
                "param_20": {
                    "new_parameter_name_20": 1
                },
                "param_21": {
                    "new_parameter_name_21": 1
                },
                "param_22": {
                    "new_parameter_name_22": 1
                },
                "param_23": {
                    "new_parameter_name_23": 1
                },
                "param_24": {
                    "new_parameter_name_24": 1
                },
                "param_25": {
                    "new_parameter_name_25": 1
                },
                "param_26": {
                    "new_parameter_name_26": 1
                },
                "param_27": {
                    "new_parameter_name_27": 1
                },
                "param_28": {
                    "new_parameter_name_28": 1
                },
                "param_29": {
                    "new_parameter_name_29": 1
                },
                "param_3": {
                    "new_parameter_name_3": 1
                },
                "param_30": {
                    "new_parameter_name_30": 1
                },
                "param_31": {
                    "new_parameter_name_31": 1
                },
                "param_32": {
                    "new_parameter_name_32": 1
                },
                "param_33": {
                    "new_parameter_name_33": 1
                },
                "param_34": {
                    "new_parameter_name_34": 1
                },
                "param_35": {
                    "new_parameter_name_35": 1
                },
                "param_36": {
                    "new_parameter_name_36": 1
                },
                "param_37": {
                    "new_parameter_name_37": 1
                },
                "param_38": {
                    "new_parameter_name_38": 1
                },
                "param_39": {
                    "new_parameter_name_39": 1
                },
                "param_4": {
                    "new_parameter_name_4": 1
                },
                "param_40": {
                    "new_parameter_name_40": 1
                },
                "param_41": {
                    "new_parameter_name_41": 1
                },
                "param_42": {
                    "new_parameter_name_42": 1
                },
                "param_43": {
                    "new_parameter_name_43": 1
                },
                "param_44": {
                    "new_parameter_name_44": 1
                },
                "param_45": {
                    "new_parameter_name_45": 1
                },
                "param_46": {
                    "new_parameter_name_46": 1
                },
                "param_47": {
                    "new_parameter_name_47": 1
                },
                "param_48": {
                    "new_parameter_name_48": 1
                },
                "param_49": {
                    "new_parameter_name_49": 1
                },
                "param_5": {
                    "new_parameter_name_5": 1
                },
                "param_50": {
                    "new_parameter_name_50": 1
                },
                "param_51": {
                    "new_parameter_name_51": 1
                },
                "param_52": {
                    "new_parameter_name_52": 1
                },
                "param_53": {
                    "new_parameter_name_53": 1
                },
                "param_54": {
                    "new_parameter_name_54": 1
                },
                "param_55": {
                    "new_parameter_name_55": 1
                },
                "param_56": {
                    "new_parameter_name_56": 1
                },
                "param_57": {
                    "new_parameter_name_57": 1
                },
                "param_58": {
                    "new_parameter_name_58": 1
                },
                "param_59": {
                    "new_parameter_name_59": 1
                },
                "param_6": {
                    "new_parameter_name_6": 1
                },
                "param_60": {
                    "new_parameter_name_60": 1
                },
                "param_61": {
                    "new_parameter_name_61": 1
                },
                "param_62": {
                    "new_parameter_name_62": 1
                },
                "param_63": {
                    "new_parameter_name_63": 1
                },
                "param_64": {
                    "new_parameter_name_64": 1
                },
                "param_65": {
                    "new_parameter_name_65": 1
                },
                "param_66": {
                    "new_parameter_name_66": 1
                },
                "param_67": {
                    "new_parameter_name_67": 1
                },
                "param_68": {
                    "new_parameter_name_68": 1
                },
                "param_69": {
                    "new_parameter_name_69": 1
                },
                "param_7": {
                    "new_parameter_name_7": 1
                },
                "param_70": {
                    "new_parameter_name_70": 1
                },
                "param_71": {
                    "new_parameter_name_71": 1
                },
                "param_72": {
                    "new_parameter_name_72": 1
                },
                "param_73": {
                    "new_parameter_name_73": 1
                },
                "param_74": {
                    "new_parameter_name_74": 1
                },
                "param_75": {
                    "new_parameter_name_75": 1
                },
                "param_76": {
                    "new_parameter_name_76": 1
                },
                "param_77": {
                    "new_parameter_name_77": 1
                },
                "param_78": {
                    "new_parameter_name_78": 1
                },
                "param_79": {
                    "new_parameter_name_79": 1
                },
                "param_8": {
                    "new_parameter_name_8": 1
                },
                "param_80": {
                    "new_parameter_name_80": 1
                },
                "param_81": {
                    "new_parameter_name_81": 1
                },
                "param_82": {
                    "new_parameter_name_82": 1
                },
                "param_83": {
                    "new_parameter_name_83": 1
                },
                "param_84": {
                    "new_parameter_name_84": 1
                },
                "param_85": {
                    "new_parameter_name_85": 1
                },
                "param_86": {
                    "new_parameter_name_86": 1
                },
                "param_87": {
                    "new_parameter_name_87": 1
                },
                "param_88": {
                    "new_parameter_name_88": 1
                },
                "param_89": {
                    "new_parameter_name_89": 1
                },
                "param_9": {
                    "new_parameter_name_9": 1
                },
                "param_90": {
                    "new_parameter_name_90": 1
                },
                "param_91": {
                    "new_parameter_name_91": 1
                },
                "param_92": {
                    "new_parameter_name_92": 1
                },
                "param_93": {
                    "new_parameter_name_93": 1
                },
                "param_94": {
                    "new_parameter_name_94": 1
                },
                "param_95": {
                    "new_parameter_name_95": 1
                },
                "param_96": {
                    "new_parameter_name_96": 1
                },
                "param_97": {
                    "new_parameter_name_97": 1
                },
                "param_98": {
                    "new_parameter_name_98": 1
                },
                "param_99": {
                    "new_parameter_name_99": 1
                },
                "param_n": {
                    "new_parameter_name_n": 1
                },
                "ulonglong": {
                    "result": 1,
                    "unsigned_long_long": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08006112"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08006160) */\n\nlonglong left_shift_param_by32_bits_08006158(undefined4 param1,uint value)\n\n{\n  return (unsigned_long_long)value << 0x20;\n}\n\n",
            "current_name": "left_shift_param_by32_bits_08006158",
            "entrypoint": "0x08006158",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006158": "left_shift_param_by32_bits_08006158",
                "param_1": "param1",
                "param_2": "value",
                "ulonglong": "unsigned_long_long"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006174": {
            "additional_data": {
                "FUN_08006174": {
                    "print_data": 5,
                    "print_data_from_stack": 1,
                    "print_formatted_data": 2,
                    "print_formatted_message": 2,
                    "print_formatted_output": 3,
                    "print_function": 1,
                    "print_message": 2,
                    "print_param_value": 1,
                    "print_param_values": 1,
                    "print_parameter_values": 1,
                    "print_parameters": 3,
                    "print_stack_data": 1,
                    "print_stack_params": 1,
                    "print_stack_values": 3,
                    "print_stack_variables": 1,
                    "print_using_param": 1,
                    "print_with_params": 1,
                    "print_with_stack": 1
                },
                "FUN_08006394": {
                    "parse_data": 1
                },
                "param_1": {
                    "data_ptr": 1,
                    "format": 1,
                    "format_string": 25,
                    "format_string_address": 1,
                    "message_1": 1,
                    "message_format": 2
                },
                "param_2": {
                    "arg1": 17,
                    "arg1_address": 1,
                    "argument_1": 3,
                    "format_args": 1,
                    "format_ptr": 1,
                    "message_2": 1,
                    "param_2": 3,
                    "param_dictionary": 1,
                    "param_value_1": 2,
                    "value_1": 1
                },
                "param_3": {
                    "arg1": 1,
                    "arg2": 16,
                    "argument_2": 3,
                    "param3": 1,
                    "param_3": 2,
                    "param_value_2": 2,
                    "stack_value1": 1,
                    "stack_value_1": 2,
                    "temp_ptr": 1,
                    "value1": 1,
                    "value_2": 1
                },
                "param_4": {
                    "arg2": 1,
                    "arg3": 16,
                    "argument_3": 3,
                    "param4": 1,
                    "param_4": 2,
                    "param_value_3": 2,
                    "stack_value2": 1,
                    "stack_value_2": 2,
                    "temp_ptr2": 1,
                    "value2": 1,
                    "value_3": 1
                },
                "uStack_4": {
                    "arg3_copy": 8,
                    "arg4": 1,
                    "arg5": 1,
                    "formatted_arg_2": 1,
                    "param4_copy": 1,
                    "param_4_copy": 2,
                    "param_value_3_copy": 1,
                    "stack_argument_2": 2,
                    "stack_param_2": 1,
                    "stack_value_2": 1,
                    "stack_value_4": 1,
                    "temp2": 1,
                    "temp_arg3": 1,
                    "third_param": 1,
                    "unused_param": 1,
                    "unused_var": 1
                },
                "uStack_8": {
                    "arg2_copy": 8,
                    "arg3": 1,
                    "arg4": 1,
                    "formatted_arg_1": 1,
                    "formatted_data": 1,
                    "param3_copy": 1,
                    "param_3_copy": 2,
                    "param_value": 1,
                    "param_value_2_copy": 1,
                    "secondary_param": 1,
                    "stack_argument_1": 2,
                    "stack_param_1": 1,
                    "stack_value_1": 1,
                    "stack_value_3": 1,
                    "temp1": 1,
                    "temp_arg2": 1
                }
            },
            "called": [
                "FUN_08006394"
            ],
            "calling": [
                "FUN_0800611c"
            ],
            "code": "\nvoid print_formatted_data_08006174(undefined4 format_string,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  undefined4 arg2_copy;\n  undefined4 arg3_copy;\n  \n  arg2_copy = arg2;\n  arg3_copy = arg3;\n  _vfiprintf_r(DAT_200000f8,format_string,arg1,&arg2_copy,format_string,&arg2_copy);\n  return;\n}\n\n",
            "current_name": "print_formatted_data_08006174",
            "entrypoint": "0x08006174",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006174": "print_formatted_data_08006174",
                "param_1": "format_string",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3",
                "uStack_4": "arg3_copy",
                "uStack_8": "arg2_copy"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006198": {
            "additional_data": {
                "FUNC_08007328": {
                    "initialize": 1,
                    "perform_task": 1,
                    "perform_task2": 3,
                    "perform_task_b": 1,
                    "second_function": 1,
                    "sub_function_two": 1
                },
                "FUN_08005f5e": {
                    "do_something": 1,
                    "first_function": 1,
                    "perform_task1": 3,
                    "perform_task_a": 1,
                    "print_hello": 1,
                    "sub_function_one": 1
                },
                "FUN_08006198": {
                    "execute_code_functions": 1,
                    "execute_func_array": 1,
                    "execute_function_list": 1,
                    "execute_functions": 21,
                    "execute_initialization": 1,
                    "execute_sub_functions": 3,
                    "execute_subfunctions": 2,
                    "run_all_functions": 1
                },
                "iVar1": {
                    "counter": 5,
                    "index": 18,
                    "iteration_count": 1,
                    "iterator": 1,
                    "sub_func_index": 1
                }
            },
            "called": [
                "FUN_08005f5e",
                "FUN_08007328"
            ],
            "calling": [
                "FUN_08001be8"
            ],
            "code": "\nvoid execute_sub_functions_08006198(void)\n\n{\n  int index;\n  \n  for (index = 0; index != 0; index = index + 1) {\n    (*(code *)(&DAT_08007944)[index])();\n  }\n  _init();\n  for (index = 0; index != 10; index = index + 1) {\n    (*(code *)(&DAT_08007944)[index])();\n  }\n  return;\n}\n\n",
            "current_name": "execute_sub_functions_08006198",
            "entrypoint": "0x08006198",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006198": "execute_sub_functions_08006198",
                "iVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080061e0": {
            "additional_data": {
                "FUN_080061e0": {
                    "clear_memory": 1,
                    "fill_array_with_value": 1,
                    "fill_memory": 11,
                    "fill_memory_with_byte": 2,
                    "fill_memory_with_value": 1,
                    "fill_with": 1,
                    "initialize_memory": 3,
                    "initialize_memory_block": 1,
                    "memset": 7,
                    "memset_with_value": 1,
                    "set_memory": 2
                },
                "param_1": {
                    "array": 2,
                    "buffer": 2,
                    "destination": 14,
                    "dst": 1,
                    "memory": 5,
                    "memory_block": 2,
                    "memory_pointer": 2,
                    "memory_start": 2,
                    "target_address": 1
                },
                "param_2": {
                    "byte_to_fill": 2,
                    "value": 26,
                    "value_to_fill": 1,
                    "value_to_initialize": 1,
                    "value_to_set": 1
                },
                "param_3": {
                    "block_size": 2,
                    "count": 1,
                    "length": 7,
                    "n": 1,
                    "num_bytes": 1,
                    "num_elements": 2,
                    "number_of_bytes": 1,
                    "size": 16
                },
                "puVar1": {
                    "end_addr": 2,
                    "end_address": 10,
                    "end_array": 1,
                    "end_of_block": 1,
                    "end_of_memory": 1,
                    "end_ptr": 1,
                    "memory_end": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08006c40",
                "FUN_08004a4c",
                "FUN_08006d14",
                "FUN_08006c88"
            ],
            "code": "\nvoid fill_memory_with_byte_080061e0(undefined *destination,undefined value,int size)\n\n{\n  undefined *end_address;\n  \n  end_address = destination + size;\n  for (; destination != end_address; destination = destination + 1) {\n    *destination = value;\n  }\n  return;\n}\n\n",
            "current_name": "fill_memory_with_byte_080061e0",
            "entrypoint": "0x080061e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080061e0": "fill_memory_with_byte_080061e0",
                "param_1": "destination",
                "param_2": "value",
                "param_3": "size",
                "puVar1": "end_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080061f0": {
            "additional_data": {
                "DAT_200005f8": {
                    "head": 1,
                    "malloc_list_head": 1
                },
                "FUN_080061f0": {
                    "allocate_and_initialize": 1,
                    "allocate_and_lock_memory": 2,
                    "allocate_memory": 19,
                    "insert_into_linked_list": 1,
                    "lock_and_insert_into_malloc_list": 1,
                    "manage_memory": 1,
                    "reallocate_memory": 1,
                    "reverse_linked_list": 1
                },
                "__malloc_lock": {
                    "acquire_lock": 1,
                    "lock": 1,
                    "lock_malloc": 1
                },
                "__malloc_unlock": {
                    "release_lock": 1,
                    "unlock": 1,
                    "unlock_malloc": 1
                },
                "extraout_r1": {
                    "end_ptr": 1,
                    "extra_output": 4,
                    "extra_output_ptr": 1,
                    "extra_result": 1,
                    "extra_return": 1,
                    "extra_var": 1,
                    "extraout_result": 1,
                    "new_extraout_r1": 1,
                    "next_malloc_entry": 1,
                    "next_node": 1,
                    "out_var1": 1,
                    "ppi_var6": 1,
                    "temp": 4,
                    "temp1": 2,
                    "temp_ptr": 2,
                    "temp_ptr2": 1,
                    "temp_var1": 1
                },
                "param_1": {
                    "error_code": 4,
                    "list_ptr": 1,
                    "memory": 2,
                    "memory_block": 1,
                    "memory_ptr": 1,
                    "new_param_1": 1,
                    "out_param": 1,
                    "output": 1,
                    "output_array": 1,
                    "output_ptr": 3,
                    "result": 13,
                    "status": 2
                },
                "param_2": {
                    "data": 1,
                    "length": 1,
                    "new_param_2": 1,
                    "size": 28
                },
                "param_3": {
                    "arg1": 3,
                    "arg3": 13,
                    "input_ptr1": 1,
                    "new_param_3": 1,
                    "param3": 5,
                    "param_3": 2,
                    "ptr1": 1,
                    "unused_1": 1,
                    "unused_param_1": 2,
                    "var1": 1,
                    "var3": 1
                },
                "param_4": {
                    "arg2": 3,
                    "arg4": 13,
                    "input_ptr2": 1,
                    "new_param_4": 1,
                    "param4": 5,
                    "param_4": 2,
                    "ptr2": 1,
                    "unused_2": 1,
                    "unused_param_2": 2,
                    "var2": 1,
                    "var4": 1
                },
                "piVar3": {
                    "current_ptr": 1,
                    "first_entry": 1,
                    "new_pi_var3": 1,
                    "p_var3": 1,
                    "previous_size": 1,
                    "ptr": 1,
                    "temp": 3,
                    "temp2": 1,
                    "temp3": 1,
                    "temp4": 1,
                    "temp_node": 1,
                    "temp_ptr": 4,
                    "temp_ptr3": 2,
                    "temp_ptr_3": 2,
                    "temp_var": 7,
                    "temp_var3": 1,
                    "tmp_node": 1,
                    "var3": 1
                },
                "ppiVar1": {
                    "current": 2,
                    "current_block": 1,
                    "current_node": 3,
                    "current_ptr": 2,
                    "iterator1": 1,
                    "new_ppi_var1": 1,
                    "next_entry": 1,
                    "ppi_var7": 1,
                    "prev_node": 1,
                    "prev_ptr": 2,
                    "previous_chunk": 1,
                    "ptr1": 2,
                    "temp1": 1,
                    "temp2": 1,
                    "temp_pointer1": 1,
                    "temp_ptr1": 5,
                    "temp_ptr_1": 3,
                    "temp_var2": 1,
                    "var1": 1
                },
                "ppiVar2": {
                    "curr_ptr": 1,
                    "current_chunk": 1,
                    "current_entry": 1,
                    "current_node": 1,
                    "current_ptr": 1,
                    "current_var": 1,
                    "iterator2": 1,
                    "new_ppi_var2": 1,
                    "next": 2,
                    "next_block": 1,
                    "next_node": 1,
                    "next_ptr": 1,
                    "ppi_var8": 1,
                    "prev_node": 1,
                    "prev_ptr": 1,
                    "previous_node": 1,
                    "ptr2": 2,
                    "temp2": 1,
                    "temp3": 1,
                    "temp_pointer2": 1,
                    "temp_ptr2": 5,
                    "temp_ptr_2": 3,
                    "var2": 1
                },
                "ppiVar4": {
                    "block": 1,
                    "current_ptr2": 1,
                    "new_ppi_var4": 1,
                    "next_ptr": 1,
                    "ppi_var9": 1,
                    "prev": 1,
                    "prev_entry": 1,
                    "prev_node": 1,
                    "prev_node_temp": 1,
                    "prev_ptr2": 1,
                    "previous": 1,
                    "previous_chunk2": 1,
                    "ptr3": 1,
                    "ptr4": 1,
                    "temp3": 1,
                    "temp4": 1,
                    "temp5": 1,
                    "temp_node": 1,
                    "temp_pointer3": 1,
                    "temp_ptr": 1,
                    "temp_ptr1": 1,
                    "temp_ptr3": 3,
                    "temp_ptr4": 2,
                    "temp_ptr_3": 1,
                    "temp_ptr_4": 2,
                    "temp_var4": 1,
                    "var4": 1
                },
                "ppiVar5": {
                    "block": 1,
                    "curr_ptr2": 1,
                    "current_chunk2": 1,
                    "current_node": 1,
                    "dynamic_ptr": 1,
                    "entry": 1,
                    "new_block": 2,
                    "new_block_ptr": 1,
                    "new_memory_ptr": 1,
                    "new_node": 4,
                    "new_ppi_var5": 1,
                    "next_ptr2": 1,
                    "pointer": 1,
                    "ppi_var10": 1,
                    "ptr4": 1,
                    "ptr5": 1,
                    "temp6": 1,
                    "temp_pointer4": 1,
                    "temp_ptr4": 3,
                    "temp_ptr5": 2,
                    "temp_ptr_5": 2,
                    "temp_var5": 1,
                    "var5": 1
                }
            },
            "called": [
                "FUN_08006eae",
                "FUN_08006eac"
            ],
            "calling": [
                "FUN_080069e4",
                "FUN_08006ac0"
            ],
            "code": "\nvoid allocate_and_lock_memory_080061f0(undefined4 *result,int size,undefined4 arg3,undefined4 arg4)\n\n{\n  int **temp;\n  int **temp_ptr1;\n  int **temp_ptr2;\n  int *temp_var;\n  int **temp_ptr3;\n  int **new_node;\n  \n  if (size == 0) {\n    return;\n  }\n  new_node = (int **)(size + -4);\n  if (*(int *)(size + -4) < 0) {\n    new_node = (int **)((int)new_node + *(int *)(size + -4));\n  }\n  lock();\n  temp_ptr2 = (int **)&DAT_200005f8;\n  if (DAT_200005f8 == (int **)0x0) {\n    new_node[1] = (int *)0x0;\n    temp_ptr1 = temp;\n    DAT_200005f8 = new_node;\n  }\n  else {\n    temp_ptr2 = DAT_200005f8;\n    if (new_node < DAT_200005f8) {\n      temp_ptr1 = (int **)*new_node;\n      temp_ptr2 = (int **)((int)new_node + (int)temp_ptr1);\n      if (DAT_200005f8 == temp_ptr2) {\n        temp_var = *DAT_200005f8;\n        DAT_200005f8 = (int **)DAT_200005f8[1];\n        temp_ptr2 = (int **)((int)temp_var + (int)temp_ptr1);\n        *new_node = (int *)temp_ptr2;\n      }\n      new_node[1] = (int *)DAT_200005f8;\n      DAT_200005f8 = new_node;\n    }\n    else {\n      do {\n        temp_ptr3 = temp_ptr2;\n        temp_ptr2 = (int **)temp_ptr3[1];\n        if (temp_ptr2 == (int **)0x0) break;\n      } while (temp_ptr2 <= new_node);\n      temp_ptr1 = (int **)*temp_ptr3;\n      if ((int **)((int)temp_ptr3 + (int)temp_ptr1) == new_node) {\n        temp_ptr1 = (int **)((int)temp_ptr1 + (int)*new_node);\n        *temp_ptr3 = (int *)temp_ptr1;\n        if (temp_ptr2 == (int **)((int)temp_ptr3 + (int)temp_ptr1)) {\n          temp_var = *temp_ptr2;\n          temp_ptr2 = (int **)temp_ptr2[1];\n          temp_ptr1 = (int **)((int)temp_ptr1 + (int)temp_var);\n          *temp_ptr3 = (int *)temp_ptr1;\n          temp_ptr3[1] = (int *)temp_ptr2;\n        }\n      }\n      else if (new_node < (int **)((int)temp_ptr3 + (int)temp_ptr1)) {\n        *result = 0xc;\n      }\n      else {\n        temp_ptr1 = (int **)((int)new_node + (int)*new_node);\n        if (temp_ptr2 == temp_ptr1) {\n          temp_var = *temp_ptr2;\n          temp_ptr2 = (int **)temp_ptr2[1];\n          temp_ptr1 = (int **)((int)temp_var + (int)*new_node);\n          *new_node = (int *)temp_ptr1;\n        }\n        new_node[1] = (int *)temp_ptr2;\n        temp_ptr3[1] = (int *)new_node;\n      }\n    }\n  }\n  unlock_malloc(result,temp_ptr1,temp_ptr2,arg4);\n  return;\n}\n\n",
            "current_name": "allocate_and_lock_memory_080061f0",
            "entrypoint": "0x080061f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080061f0": "allocate_and_lock_memory_080061f0",
                "__malloc_lock": "lock",
                "__malloc_unlock": "unlock_malloc",
                "extraout_r1": "temp",
                "param_1": "result",
                "param_2": "size",
                "param_3": "arg3",
                "param_4": "arg4",
                "piVar3": "temp_var",
                "ppiVar1": "temp_ptr1",
                "ppiVar2": "temp_ptr2",
                "ppiVar4": "temp_ptr3",
                "ppiVar5": "new_node"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006288": {
            "additional_data": {
                "DAT_200005f8": {
                    "first_chunk": 1,
                    "free_blocks": 1,
                    "free_blocks_list": 1,
                    "free_list": 1,
                    "free_list_head": 1,
                    "free_list_start": 1,
                    "head_ptr": 1,
                    "memory_list": 1
                },
                "DAT_200005fc": {
                    "break_ptr": 2,
                    "brk_pointer": 1,
                    "heap_end": 1,
                    "heap_start": 1,
                    "last_chunk": 1,
                    "sbrk_failed": 1,
                    "sbrk_pointer": 1,
                    "sbrk_result": 1
                },
                "FUNC_08006eac": {
                    "function_2": 1,
                    "function_b": 1
                },
                "FUNC_08006eae": {
                    "function_1": 1,
                    "function_a": 1
                },
                "FUN_08006288": {
                    "allocate_memory": 29,
                    "allocate_memory_block": 2
                },
                "FUN_08006920": {
                    "function_3": 1,
                    "function_c": 1,
                    "function_three": 1
                },
                "FUN_08006eac": {
                    "function_two": 1
                },
                "FUN_08006eae": {
                    "function_one": 1
                },
                "__malloc_lock": {
                    "lock_malloc": 1,
                    "malloc_lock_function": 1
                },
                "__malloc_unlock": {
                    "malloc_unlock_function": 1
                },
                "_sbrk_r": {
                    "request_memory": 1,
                    "sbrk": 1,
                    "sbrk_function": 1,
                    "sbrk_r": 1
                },
                "iVar2": {
                    "block_diff": 1,
                    "block_difference": 1,
                    "block_size": 1,
                    "chunk_size": 4,
                    "chunk_size_diff": 1,
                    "diff": 1,
                    "difference": 2,
                    "offset": 3,
                    "padding": 1,
                    "remaining_size": 8,
                    "remaining_space": 7,
                    "split_size": 1
                },
                "param_1": {
                    "allocation_size": 1,
                    "error_code": 1,
                    "malloc_size": 1,
                    "mem_pointer": 1,
                    "mem_ptr": 2,
                    "mem_size": 2,
                    "out_ptr": 1,
                    "output": 1,
                    "output_ptr": 2,
                    "p_size": 1,
                    "pointer_to_size": 2,
                    "ptr_size": 1,
                    "ptr_to_size": 1,
                    "result": 4,
                    "result_pointer": 1,
                    "size": 5,
                    "size_pointer": 1,
                    "size_ptr": 3
                },
                "param_2": {
                    "alignment": 6,
                    "block_size": 1,
                    "mem_size": 1,
                    "requested_size": 5,
                    "size": 17,
                    "size_of_block": 1
                },
                "puVar1": {
                    "curr_block": 1,
                    "curr_ptr": 1,
                    "current": 2,
                    "current_block": 16,
                    "current_block_ptr": 1,
                    "current_chunk": 6,
                    "current_pointer": 1,
                    "current_ptr": 3
                },
                "puVar3": {
                    "block_to_split": 1,
                    "next_chunk": 2,
                    "prev": 1,
                    "prev_block": 6,
                    "prev_chunk": 1,
                    "prev_ptr": 1,
                    "previous": 1,
                    "previous_block": 10,
                    "previous_block_ptr": 1,
                    "previous_chunk": 3,
                    "previous_pointer": 1,
                    "previous_ptr": 2,
                    "ptr": 1
                },
                "puVar5": {
                    "allocated_block": 1,
                    "current_block_previous": 1,
                    "last_pointer": 1,
                    "last_ptr": 1,
                    "new_alloc": 1,
                    "new_block": 6,
                    "new_block_ptr": 1,
                    "next_chunk": 2,
                    "prev_block": 1,
                    "prev_block_next": 1,
                    "prev_chunk_next": 1,
                    "prev_prev": 1,
                    "prev_prev_block": 1,
                    "prev_ptr": 1,
                    "previous_block": 1,
                    "previous_block_next": 2,
                    "previous_chunk": 2,
                    "previous_chunk_end": 1,
                    "previous_ptr_next": 1,
                    "split_block": 2,
                    "split_point": 1,
                    "temp": 1
                },
                "uVar4": {
                    "block_diff": 3,
                    "block_difference": 1,
                    "block_size": 1,
                    "block_size_difference": 2,
                    "chunk_diff": 2,
                    "chunk_difference": 2,
                    "diff": 1,
                    "diff_size": 3,
                    "difference": 6,
                    "free_space": 1,
                    "remaining": 1,
                    "remaining_size": 3,
                    "remaining_space": 1,
                    "size_diff": 2,
                    "size_difference": 1,
                    "unused_size": 1
                },
                "uVar6": {
                    "adjusted_size": 1,
                    "aligned_size": 6,
                    "alloc_size": 1,
                    "allocated_address": 1,
                    "allocated_memory_size": 1,
                    "allocated_size": 14,
                    "block_address": 1,
                    "block_size": 1,
                    "new_block_size": 1,
                    "requested_size": 1,
                    "required_size": 1,
                    "total_size": 2
                }
            },
            "called": [
                "FUN_08006eae",
                "FUN_08006eac",
                "FUN_08006920"
            ],
            "calling": [
                "FUN_08006e10",
                "FUN_08006c88"
            ],
            "code": "\nuint allocate_memory_block_08006288(undefined4 *size,uint size)\n\n{\n  uint *current_block;\n  int remaining_size;\n  uint *previous_block;\n  uint difference;\n  uint *new_block;\n  uint allocated_size;\n  \n  allocated_size = (size + 3 & 0xfffffffc) + 8;\n  if (allocated_size < 0xc) {\n    allocated_size = 0xc;\n  }\n  if (((int)allocated_size < 0) || (allocated_size < size)) {\n    *size = 0xc;\n  }\n  else {\n    malloc_lock_function();\n    current_block = DAT_200005f8;\n    new_block = DAT_200005f8;\n    while (previous_block = current_block, previous_block != (uint *)0x0) {\n      difference = *previous_block - allocated_size;\n      if (-1 < (int)difference) {\n        if (difference < 0xc) {\n          if (new_block == previous_block) {\n            current_block = (uint *)new_block[1];\n            DAT_200005f8 = current_block;\n          }\n          else {\n            current_block = (uint *)previous_block[1];\n          }\n          if (new_block != previous_block) {\n            new_block[1] = (uint)current_block;\n            new_block = previous_block;\n          }\n        }\n        else {\n          *previous_block = difference;\n          *(uint *)((int)previous_block + difference) = allocated_size;\n          new_block = (uint *)((int)previous_block + difference);\n        }\n        goto LAB_080062ec;\n      }\n      new_block = previous_block;\n      current_block = (uint *)previous_block[1];\n    }\n    if (DAT_200005fc == 0) {\n      DAT_200005fc = sbrk(size);\n    }\n    current_block = (uint *)sbrk(size,allocated_size);\n    if ((current_block != (uint *)0xffffffff) &&\n       ((new_block = (uint *)((int)current_block + 3U & 0xfffffffc), current_block == new_block ||\n        (remaining_size = sbrk(size,(int)new_block - (int)current_block), remaining_size != -1)))) {\n      *new_block = allocated_size;\nLAB_080062ec:\n      malloc_unlock_function(size);\n      allocated_size = (int)new_block + 0xbU & 0xfffffff8;\n      remaining_size = allocated_size - (int)(new_block + 1);\n      if (remaining_size != 0) {\n        *(int *)((int)new_block + remaining_size) = -remaining_size;\n        return allocated_size;\n      }\n      return allocated_size;\n    }\n    *size = 0xc;\n    malloc_unlock_function(size);\n  }\n  return 0;\n}\n\n",
            "current_name": "allocate_memory_block_08006288",
            "entrypoint": "0x08006288",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006288": "allocate_memory_block_08006288",
                "__malloc_lock": "malloc_lock_function",
                "__malloc_unlock": "malloc_unlock_function",
                "_sbrk_r": "sbrk",
                "iVar2": "remaining_size",
                "param_1": "size",
                "param_2": "size",
                "puVar1": "current_block",
                "puVar3": "previous_block",
                "puVar5": "new_block",
                "uVar4": "difference",
                "uVar6": "allocated_size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006344": {
            "additional_data": {
                "DAT_080078e4": {
                    "dat_080078e4": 2,
                    "dat_input3": 1,
                    "data_3": 1,
                    "global_data_3": 1,
                    "ptr12": 1
                },
                "DAT_08007904": {
                    "dat_08007904": 2,
                    "dat_input1": 1,
                    "data_1": 1,
                    "global_data_1": 1,
                    "ptr4": 1
                },
                "DAT_08007924": {
                    "dat_08007924": 2,
                    "dat_input2": 1,
                    "data_2": 1,
                    "global_data_2": 1,
                    "ptr8": 1
                },
                "FUN_08006344": {
                    "process_and_store_byte": 1,
                    "process_byte": 4,
                    "process_bytes": 2,
                    "process_data": 6,
                    "process_input": 15,
                    "process_param": 1,
                    "read_byte_and_update_buffer": 1,
                    "write_to_buffer": 1
                },
                "FUN_080069e4": {
                    "setup_data": 1
                },
                "FUN_08006be0": {
                    "initialize": 1
                },
                "FUN_08006cb4": {
                    "cleanup": 1
                },
                "__sinit": {
                    "__initialize": 1,
                    "initialize": 5,
                    "initialize_s": 1,
                    "initialize_stream": 1
                },
                "__swsetup_r": {
                    "setup_r": 3,
                    "setup_read_write": 1,
                    "setup_stream": 2,
                    "sw_setup": 2
                },
                "_fflush_r": {
                    "fflush_r": 1,
                    "flush_buffer": 2,
                    "flush_r": 3,
                    "flush_stream": 2
                },
                "iVar1": {
                    "index": 4,
                    "int_var1": 1,
                    "result": 3,
                    "status": 1,
                    "temp": 1,
                    "temp1": 1,
                    "temp_int": 2,
                    "temp_value": 1,
                    "temp_var": 9,
                    "temp_var1": 5,
                    "temp_var_1": 2,
                    "temp_variable1": 1
                },
                "param_1": {
                    "arg1": 4,
                    "buffer_ptr": 1,
                    "context": 1,
                    "data": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "data_struct": 2,
                    "data_struct1": 1,
                    "data_structure": 3,
                    "func_param": 1,
                    "index": 1,
                    "input": 4,
                    "input1": 3,
                    "input_param": 1,
                    "input_value": 1,
                    "param": 1,
                    "param_ptr": 2,
                    "ptr1": 1,
                    "stream": 1
                },
                "param_2": {
                    "byte_data": 2,
                    "byte_to_store": 1,
                    "byte_to_write": 1,
                    "byte_val": 4,
                    "byte_value": 11,
                    "data_byte": 2,
                    "input2": 2,
                    "input_byte": 8
                },
                "param_3": {
                    "array_of_bytes": 1,
                    "buffer": 1,
                    "byte_array": 2,
                    "byte_array_ptr": 3,
                    "byte_pointer": 1,
                    "byte_ptr": 3,
                    "byte_ptr_ptr": 2,
                    "data": 1,
                    "data_array": 1,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "data_ptrs": 2,
                    "input3": 2,
                    "input_array": 4,
                    "input_buffer": 1,
                    "input_data": 3,
                    "ptr_arr": 1
                },
                "pbVar2": {
                    "buffer": 1,
                    "byte_ptr": 1,
                    "byte_ptr1": 1,
                    "byte_ptr2": 2,
                    "byte_ptr_1": 1,
                    "current_byte": 2,
                    "current_pointer": 1,
                    "end_pointer": 1,
                    "end_position": 1,
                    "last_element_ptr": 1,
                    "last_pointer": 1,
                    "pointer1": 1,
                    "ptr": 1,
                    "ptr1": 1,
                    "ptr_temp": 1,
                    "ptr_var2": 1,
                    "temp2": 1,
                    "temp_byte_ptr": 1,
                    "temp_byte_ptr1": 1,
                    "temp_ptr": 1,
                    "temp_var2": 6,
                    "temp_var_2": 2,
                    "temp_variable2": 1
                },
                "pbVar3": {
                    "buffer_pointer": 1,
                    "byte_ptr2": 1,
                    "byte_ptr3": 2,
                    "byte_ptr_2": 1,
                    "offset_byte": 1,
                    "pb_var3": 1,
                    "pointer2": 1,
                    "pointer_value": 2,
                    "ptr2": 2,
                    "ptr_temp2": 1,
                    "ptr_var3": 1,
                    "short_pointer": 1,
                    "short_value_ptr": 1,
                    "temp3": 1,
                    "temp_byte": 1,
                    "temp_byte_ptr2": 2,
                    "temp_ptr2": 1,
                    "temp_var3": 6,
                    "temp_var_3": 2,
                    "temp_variable3": 1,
                    "ushort_ptr": 1
                },
                "uVar4": {
                    "input_result": 1,
                    "output": 1,
                    "output_var": 1,
                    "result": 11,
                    "return_val": 2,
                    "return_value": 13,
                    "stored_byte": 1,
                    "written_byte_count": 1
                }
            },
            "called": [
                "FUN_08006be0",
                "FUN_080069e4",
                "FUN_08006cb4"
            ],
            "calling": [
                "FUN_08006370"
            ],
            "code": "\nuint process_input_08006344(int input,byte byte_value,byte **input_array)\n\n{\n  int temp_var;\n  byte *temp_var2;\n  byte *temp_var3;\n  uint return_value;\n  \n  temp_var2 = input_array[2] + -1;\n  input_array[2] = temp_var2;\n  if ((-1 < (int)temp_var2) ||\n     (((int)input_array[6] <= (int)temp_var2 && (temp_var2 = (byte *)(uint)byte_value, temp_var2 != (byte *)0xa))))\n  {\n    temp_var2 = *input_array;\n    *input_array = temp_var2 + 1;\n    *temp_var2 = byte_value;\n    return (uint)byte_value;\n  }\n  if ((input != 0) && (*(int *)(input + 0x18) == 0)) {\n    initialize();\n  }\n  if (input_array == (byte **)&DAT_08007904) {\n    input_array = *(byte ***)(input + 4);\n  }\n  else if (input_array == (byte **)&DAT_08007924) {\n    input_array = *(byte ***)(input + 8);\n  }\n  else if (input_array == (byte **)&DAT_080078e4) {\n    input_array = *(byte ***)(input + 0xc);\n  }\n  input_array[2] = input_array[6];\n  temp_var3 = (byte *)(uint)*(ushort *)(input_array + 3);\n  temp_var = (int)temp_var3 << 0x1c;\n  if (((temp_var < 0) && (temp_var3 = input_array[4], temp_var3 != (byte *)0x0)) ||\n     (temp_var = setup_r(input,input_array,temp_var,temp_var3,temp_var2), temp_var == 0)) {\n    return_value = (uint)byte_value;\n    temp_var = (int)*input_array - (int)input_array[4];\n    if ((temp_var < (int)input_array[5]) || (temp_var = flush_r(input,input_array), temp_var == 0)) {\n      input_array[2] = input_array[2] + -1;\n      temp_var2 = *input_array;\n      *input_array = temp_var2 + 1;\n      *temp_var2 = byte_value;\n      if ((byte *)(temp_var + 1) != input_array[5]) {\n        if (-1 < (int)((uint)*(ushort *)(input_array + 3) << 0x1f)) {\n          return return_value;\n        }\n        if (return_value != 10) {\n          return return_value;\n        }\n      }\n      temp_var = flush_r(input,input_array);\n      if (temp_var == 0) {\n        return return_value;\n      }\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "process_input_08006344",
            "entrypoint": "0x08006344",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006344": "process_input_08006344",
                "__sinit": "initialize",
                "__swsetup_r": "setup_r",
                "_fflush_r": "flush_r",
                "iVar1": "temp_var",
                "param_1": "input",
                "param_2": "byte_value",
                "param_3": "input_array",
                "pbVar2": "temp_var2",
                "pbVar3": "temp_var3",
                "uVar4": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006370": {
            "additional_data": {
                "FUN_08006370": {
                    "copy_data_to_stream": 1,
                    "fwrite_bytes": 1,
                    "print_string": 2,
                    "write_bytes": 2,
                    "write_data": 4,
                    "write_data_to_stream": 1,
                    "write_string_to_buffer": 1,
                    "write_to_buffer": 1,
                    "write_to_file": 2,
                    "write_to_output": 2,
                    "write_to_stream": 14
                },
                "__sfputc_r": {
                    "put_char_r": 1,
                    "put_char_to_stream": 1,
                    "write_byte_to_stream": 1
                },
                "iVar1": {
                    "byte_written": 1,
                    "bytes_written": 2,
                    "output_result": 1,
                    "output_status": 1,
                    "result": 22,
                    "write_count": 1,
                    "write_result": 2
                },
                "iVar3": {
                    "count": 1,
                    "current_count": 1,
                    "current_length": 4,
                    "remaining": 4,
                    "remaining_bytes": 2,
                    "remaining_count": 3,
                    "remaining_data_size": 1,
                    "remaining_length": 7,
                    "remaining_size": 7
                },
                "param_1": {
                    "buffer": 1,
                    "file": 3,
                    "file_descriptor": 3,
                    "file_stream": 1,
                    "output_stream": 1,
                    "stream": 22
                },
                "param_2": {
                    "buffer": 5,
                    "buffer_size": 2,
                    "byte": 1,
                    "byte_to_write": 2,
                    "byte_val": 1,
                    "byte_value": 1,
                    "c": 1,
                    "ch": 1,
                    "char": 1,
                    "character": 12,
                    "character_encoding": 1,
                    "mode": 2,
                    "param": 1
                },
                "param_3": {
                    "buffer": 13,
                    "data": 12,
                    "data_buffer": 2,
                    "data_ptr": 1,
                    "string": 3
                },
                "param_4": {
                    "buffer_length": 2,
                    "buffer_size": 5,
                    "count": 5,
                    "data_length": 2,
                    "data_size": 2,
                    "length": 7,
                    "size": 7,
                    "string_length": 1
                },
                "puVar2": {
                    "buffer_end": 1,
                    "current": 1,
                    "end": 3,
                    "end_buffer": 2,
                    "end_of_buffer": 8,
                    "end_of_data": 7,
                    "end_of_data_ptr": 1,
                    "end_of_string": 1,
                    "end_pointer": 2,
                    "end_ptr": 2,
                    "last_element": 1,
                    "string_end": 1
                }
            },
            "called": [
                "FUN_08006344"
            ],
            "calling": [
                "FUN_08006394"
            ],
            "code": "\nint write_data_to_stream_08006370(undefined4 stream,undefined4 character,undefined *buffer,int size)\n\n{\n  int result;\n  undefined *end_of_buffer;\n  int remaining_size;\n  \n  end_of_buffer = buffer + size;\n  remaining_size = size;\n  do {\n    if (buffer == end_of_buffer) {\n      return 0;\n    }\n    result = write_byte_to_stream(stream,*buffer,character,size,remaining_size);\n    size = result + 1;\n    buffer = buffer + 1;\n  } while (size != 0);\n  return result;\n}\n\n",
            "current_name": "write_data_to_stream_08006370",
            "entrypoint": "0x08006370",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006370": "write_data_to_stream_08006370",
                "__sfputc_r": "write_byte_to_stream",
                "iVar1": "result",
                "iVar3": "remaining_size",
                "param_1": "stream",
                "param_2": "character",
                "param_3": "buffer",
                "param_4": "size",
                "puVar2": "end_of_buffer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006394": {
            "additional_data": {
                "FUN_08006370": {
                    "handle_integer_conversion": 1,
                    "write_character": 1
                },
                "FUN_08006394": {
                    "format_and_print": 1,
                    "format_string": 2,
                    "formatted_output": 2,
                    "formatted_print": 1,
                    "improved_printf": 2,
                    "parse_format_string": 1,
                    "parse_printf_format": 1,
                    "parse_printf_format_string": 1,
                    "print_formatted": 1,
                    "print_formatted_output": 2,
                    "print_formatted_string": 12,
                    "printf_format": 1,
                    "printf_format_string": 2,
                    "printf_formatter": 1,
                    "process_printf_format": 1
                },
                "FUN_080066b0": {
                    "get_float_argument": 1,
                    "handle_string_conversion": 1
                },
                "FUN_080069e4": {
                    "convert_value_to_string": 1,
                    "get_int_argument": 1
                },
                "FUN_08006cb4": {
                    "cleanup_function": 1,
                    "initialize_stream": 1
                },
                "FUN_08006e90": {
                    "find_character_in_string": 1,
                    "get_padding_string": 1
                },
                "__sfputs_r": {
                    "sfputs_r_function": 1,
                    "write_string": 1,
                    "write_to_stream": 1
                },
                "__sinit": {
                    "__initialize_stdio": 1,
                    "initialize_stream": 2
                },
                "__swsetup_r": {
                    "setup_stream": 1,
                    "setup_streaming": 1,
                    "swsetup_r_function": 1
                },
                "_printf_i": {
                    "format_integer": 1,
                    "print_integer": 1,
                    "printf_i_function": 1
                },
                "bVar3": {
                    "flag": 2,
                    "flag_detected": 1,
                    "flag_found": 1,
                    "found": 1,
                    "found_arg": 1,
                    "found_decimal": 1,
                    "found_digit": 5,
                    "found_number": 1,
                    "found_numeric_flag": 1,
                    "has_digits": 2,
                    "is_digit": 3,
                    "is_number": 9,
                    "is_numeric": 1,
                    "is_valid": 1
                },
                "iVar1": {
                    "result": 24,
                    "return_value": 1,
                    "status": 3,
                    "write_result": 2
                },
                "iVar6": {
                    "count": 2,
                    "counter": 1,
                    "int_value": 1,
                    "num": 1,
                    "result": 1,
                    "return_value": 2,
                    "temp": 3,
                    "temp2": 2,
                    "temp_int": 1,
                    "temp_result": 1,
                    "temp_value": 1,
                    "temp_var": 5,
                    "temp_var_1": 1,
                    "temp_variable": 1,
                    "value": 7
                },
                "local_30": {
                    "arg_list": 1,
                    "arg_stack": 1,
                    "arg_type": 1,
                    "arg_width": 1,
                    "count": 1,
                    "data_ptr": 1,
                    "dot_flag": 1,
                    "exit_flag": 1,
                    "field_width": 1,
                    "flag_mask": 1,
                    "format_size": 1,
                    "format_spec": 1,
                    "length_flag": 1,
                    "length_modifier": 4,
                    "literal_flag": 1,
                    "null_pad": 1,
                    "pad_char": 1,
                    "pad_flag": 1,
                    "param": 1,
                    "precision_flag": 1,
                    "star_flag": 1,
                    "swsetup_r_param": 1,
                    "temp_var_2": 1,
                    "zero_flag": 1,
                    "zero_pad_flag": 2
                },
                "local_45": {
                    "alignment": 3,
                    "alt_flag": 1,
                    "alt_form_flag": 1,
                    "alternate_flag": 1,
                    "alternate_form": 1,
                    "alternate_form_flag": 2,
                    "flag": 1,
                    "flag_zero": 1,
                    "hash_flag": 2,
                    "padding_char": 1,
                    "prefix": 3,
                    "prefix_char": 1,
                    "prefix_flag": 1,
                    "sign": 1,
                    "sign_flag": 2,
                    "space_or_plus_flag": 1,
                    "zero_flag": 4,
                    "zero_pad_flag": 1,
                    "zero_padding": 1
                },
                "local_6e": {
                    "flag_plus": 2,
                    "plus": 3,
                    "plus_flag": 22,
                    "zero_pad": 1
                },
                "local_6f": {
                    "flag_space": 2,
                    "space": 3,
                    "space_flag": 22,
                    "space_pad": 1
                },
                "local_70": {
                    "conversion": 1,
                    "conversion_char": 4,
                    "conversion_specifier": 14,
                    "format_char": 1,
                    "specifier": 9,
                    "type": 2
                },
                "local_74": {
                    "bytes_printed": 1,
                    "bytes_written": 2,
                    "num_bytes_written": 1,
                    "output_bytes": 1,
                    "output_count": 1,
                    "result": 1,
                    "total_bytes": 2,
                    "total_bytes_written": 4,
                    "total_char_count": 2,
                    "total_characters_written": 1,
                    "total_chars": 3,
                    "total_chars_written": 3,
                    "total_len": 1,
                    "total_length": 1,
                    "total_num_chars_written": 1,
                    "total_width": 1,
                    "total_written": 4,
                    "written_characters": 1
                },
                "local_7c": {
                    "arg_index": 3,
                    "arg_num": 1,
                    "arg_precision": 1,
                    "arg_width": 3,
                    "field_precision": 1,
                    "field_width": 2,
                    "field_width_value": 1,
                    "int_arg": 1,
                    "min_field_width": 1,
                    "min_width": 1,
                    "num_arg": 1,
                    "num_width": 1,
                    "precision": 3,
                    "width": 7,
                    "width_specified": 1,
                    "width_val": 1,
                    "width_value": 2
                },
                "local_80": {
                    "arg_prefix": 1,
                    "arg_ptr_backup": 1,
                    "arg_width": 1,
                    "base": 3,
                    "field_width": 1,
                    "fill_char": 1,
                    "hex_value": 1,
                    "int_temp": 1,
                    "length_modifier": 1,
                    "noarg_bytes": 1,
                    "pad_char": 1,
                    "prec": 1,
                    "precision": 4,
                    "print_len": 1,
                    "ret": 1,
                    "streamp": 1,
                    "width": 10
                },
                "local_84": {
                    "arg_precision": 1,
                    "field_width": 4,
                    "precision": 23,
                    "precision_digits": 1,
                    "width": 2
                },
                "local_88": {
                    "flag_bits": 4,
                    "flag_masks": 1,
                    "flags": 24,
                    "fmt_flags": 1,
                    "formatting_flags": 1
                },
                "local_8c": {
                    "arg_index_pointer": 1,
                    "arg_index_ptr": 1,
                    "arg_list": 3,
                    "arg_list_ptr": 1,
                    "arg_pointer": 3,
                    "arg_ptr": 6,
                    "arg_ptr_list": 1,
                    "arg_struct": 1,
                    "argptr": 1,
                    "args_pointer": 1,
                    "args_ptr": 1,
                    "argument_ptr": 2,
                    "current_argument": 1,
                    "flag_ptr": 1,
                    "int_pointer2": 1,
                    "param_4": 1,
                    "param_4_copy": 1,
                    "position_ptr": 1,
                    "ptr_array": 1,
                    "ptr_stack": 1,
                    "temp_param4": 1
                },
                "memchr": {
                    "find_char": 2
                },
                "param_1": {
                    "arg1": 1,
                    "file_descriptor": 4,
                    "file_pointer": 2,
                    "format": 1,
                    "format_expression": 1,
                    "format_specifier": 1,
                    "format_string": 6,
                    "format_string_pointer": 1,
                    "formatter_ptr": 1,
                    "output_stream": 1,
                    "printer": 1,
                    "stream": 10,
                    "value": 1
                },
                "param_2": {
                    "arg_list": 3,
                    "arg_pointer": 1,
                    "arg_ptr": 1,
                    "args": 4,
                    "args_pointer": 1,
                    "format": 10,
                    "format_spec": 1,
                    "format_specifier": 3,
                    "format_string": 7
                },
                "param_3": {
                    "arg_buffer": 1,
                    "arg_list": 1,
                    "arg_ptr": 1,
                    "args": 4,
                    "arguments": 6,
                    "buffer": 6,
                    "format_string": 1,
                    "input": 1,
                    "output_buffer": 6,
                    "str": 1,
                    "string": 3
                },
                "param_4": {
                    "arg_count": 1,
                    "arg_list": 1,
                    "argptr": 1,
                    "args_ptr": 1,
                    "buffer": 1,
                    "buffer_size": 2,
                    "bytes_written": 3,
                    "char_count": 1,
                    "count": 1,
                    "count_ptr": 1,
                    "counter": 1,
                    "err_indicator": 1,
                    "field_width": 1,
                    "len_ptr": 1,
                    "length": 2,
                    "max_width": 1,
                    "n": 1,
                    "num_chars_written": 2,
                    "output": 1,
                    "output_length": 1,
                    "return_value": 1,
                    "status_ptr": 1,
                    "width": 1,
                    "width_ptr": 1,
                    "written": 1,
                    "written_char_count": 1
                },
                "pbVar4": {
                    "byte_ptr": 1,
                    "char_ptr": 1,
                    "current_byte": 1,
                    "current_char": 16,
                    "current_char_ptr": 1,
                    "current_character": 1,
                    "format_ptr": 1,
                    "format_specifier_ptr": 1,
                    "format_string": 1,
                    "p": 1,
                    "ptr": 5,
                    "str_ptr": 1
                },
                "pbVar5": {
                    "current_byte": 1,
                    "current_char": 4,
                    "end_of_format_string": 1,
                    "next_byte": 1,
                    "next_char": 13,
                    "next_character": 1,
                    "prev_char": 1,
                    "previous_char": 1,
                    "ptr": 2,
                    "ptr2": 2,
                    "q": 1,
                    "start_char_ptr": 1,
                    "start_ptr": 1,
                    "temp_char_ptr": 1
                },
                "piVar2": {
                    "arg": 1,
                    "arg_list": 1,
                    "arg_list_ptr": 1,
                    "arg_ptr": 1,
                    "argptr": 1,
                    "args_counter": 1,
                    "args_pointer": 1,
                    "count_ptr": 1,
                    "counter": 1,
                    "current_field_width": 1,
                    "int_pointer": 3,
                    "int_ptr": 2,
                    "num_ptr": 1,
                    "param_pointer": 1,
                    "ptr": 4,
                    "temp": 3,
                    "temp_ptr": 6
                },
                "unaff_r9": {
                    "alignment": 1,
                    "buffer_size": 1,
                    "bytes_written": 1,
                    "flags": 1,
                    "i": 1,
                    "input_file_descriptor": 1,
                    "is_neg": 1,
                    "length": 1,
                    "num_arguments": 1,
                    "ret_status": 1,
                    "saved_r9": 1,
                    "status": 1,
                    "sw_setup_result": 1,
                    "swapped_flag": 1,
                    "swapped_specifier": 1,
                    "swsetup": 3,
                    "swsetup_flag": 1,
                    "swsetup_r_result": 1,
                    "swsetup_result": 1,
                    "temp": 1,
                    "temp_var": 1,
                    "unaff_r9": 4,
                    "width": 3,
                    "write_error": 1
                }
            },
            "called": [
                "FUN_08006e90",
                "FUN_080066b0",
                "FUN_080069e4",
                "FUN_08006370",
                "FUN_08006cb4"
            ],
            "calling": [
                "FUN_080068f0",
                "FUN_08006174"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08006568) */\n\nint print_formatted_string_08006394(int stream,undefined4 *format,byte *output_buffer,int *bytes_written)\n\n{\n  int result;\n  int *temp_ptr;\n  bool is_number;\n  byte *current_char;\n  byte *next_char;\n  int unaff_r9;\n  int value;\n  int *arg_ptr;\n  uint flags;\n  int precision;\n  undefined4 width;\n  int width;\n  int total_written;\n  byte conversion_specifier;\n  undefined space_flag;\n  undefined plus_flag;\n  undefined zero_flag;\n  undefined4 length_modifier;\n  \n  arg_ptr = bytes_written;\n  if ((stream != 0) && (*(int *)(stream + 0x18) == 0)) {\n    initialize_stream();\n  }\n  if (format == &DAT_08007904) {\n    format = *(undefined4 **)(stream + 4);\n  }\n  else if (format == (undefined4 *)&DAT_08007924) {\n    format = *(undefined4 **)(stream + 8);\n  }\n  else if (format == (undefined4 *)&DAT_080078e4) {\n    format = *(undefined4 **)(stream + 0xc);\n  }\n  if (((-1 < (int)((uint)*(ushort *)(format + 3) << 0x1c)) || (format[4] == 0)) &&\n     (value = setup_stream(stream,format), value != 0)) {\n    return -1;\n  }\n  total_written = 0;\n  space_flag = 0x20;\n  plus_flag = 0x30;\n  current_char = output_buffer;\nLAB_080063d6:\n  next_char = current_char;\n  if (*next_char != 0) goto LAB_0800648c;\n  goto LAB_080063e0;\nLAB_0800648c:\n  current_char = next_char + 1;\n  if (*next_char != 0x25) goto LAB_080063d6;\nLAB_080063e0:\n  value = (int)next_char - (int)output_buffer;\n  if (value != 0) {\n    result = write_to_stream(stream,format,output_buffer,value);\n    if (result == -1) {\nLAB_08006580:\n      if ((int)((uint)*(ushort *)(format + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return total_written;\n    }\n    total_written = total_written + value;\n  }\n  if (*next_char == 0) goto LAB_08006580;\n  flags = 0;\n  width = 0;\n  precision = -1;\n  width = 0;\n  zero_flag = 0;\n  length_modifier = 0;\n  current_char = next_char + 1;\n  while( true ) {\n    value = find_char(\"#-0+ \",*current_char);\n    output_buffer = current_char + 1;\n    if (value == 0) break;\n    flags = 1 << (value + 0xf7ff8750U & 0xff) | flags;\n    current_char = output_buffer;\n  }\n  if ((int)(flags << 0x1b) < 0) {\n    zero_flag = 0x20;\n  }\n  if ((int)(flags << 0x1c) < 0) {\n    zero_flag = 0x2b;\n  }\n  if (*current_char == 0x2a) {\n    temp_ptr = arg_ptr + 1;\n    value = *arg_ptr;\n    arg_ptr = temp_ptr;\n    if (value < 0) {\n      width = -value;\n      flags = flags | 2;\n      goto LAB_080064be;\n    }\n  }\n  else {\n    is_number = false;\n    value = width;\n    output_buffer = current_char;\n    while( true ) {\n      if (9 < *output_buffer - 0x30) break;\n      value = value * 10 + (*output_buffer - 0x30);\n      is_number = true;\n      output_buffer = output_buffer + 1;\n    }\n    if (!is_number) goto LAB_080064be;\n  }\n  width = value;\nLAB_080064be:\n  if (*output_buffer == 0x2e) {\n    if (output_buffer[1] == 0x2a) {\n      output_buffer = output_buffer + 2;\n      temp_ptr = arg_ptr + 1;\n      precision = *arg_ptr;\n      arg_ptr = temp_ptr;\n      if (precision < 0) {\n        precision = -1;\n      }\n    }\n    else {\n      is_number = false;\n      value = 0;\n      precision = 0;\n      while( true ) {\n        output_buffer = output_buffer + 1;\n        if (9 < *output_buffer - 0x30) break;\n        value = value * 10 + (*output_buffer - 0x30);\n        is_number = true;\n      }\n      if (is_number) {\n        precision = value;\n      }\n    }\n  }\n  value = find_char(&DAT_080078b6,*output_buffer,3);\n  if (value != 0) {\n    output_buffer = output_buffer + 1;\n    flags = flags | 0x40 << (value + 0xf7ff874aU & 0xff);\n  }\n  conversion_specifier = *output_buffer;\n  output_buffer = output_buffer + 1;\n  value = find_char(\"efgEFG\",conversion_specifier,6);\n  if (value == 0) {\n    unaff_r9 = format_integer(stream,&flags,format,0x8006371,&arg_ptr);\n    if (unaff_r9 == -1) goto LAB_08006580;\n  }\n  else {\n    arg_ptr = (int *)(((int)arg_ptr + 7U & 0xfffffff8) + 8);\n  }\n  total_written = total_written + unaff_r9;\n  current_char = output_buffer;\n  goto LAB_080063d6;\n}\n\n",
            "current_name": "print_formatted_string_08006394",
            "entrypoint": "0x08006394",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006394": "print_formatted_string_08006394",
                "__sfputs_r": "write_to_stream",
                "__sinit": "initialize_stream",
                "__swsetup_r": "setup_stream",
                "_printf_i": "format_integer",
                "bVar3": "is_number",
                "iVar1": "result",
                "iVar6": "value",
                "local_30": "length_modifier",
                "local_45": "zero_flag",
                "local_6e": "plus_flag",
                "local_6f": "space_flag",
                "local_70": "conversion_specifier",
                "local_74": "total_written",
                "local_7c": "width",
                "local_80": "width",
                "local_84": "precision",
                "local_88": "flags",
                "local_8c": "arg_ptr",
                "memchr": "find_char",
                "param_1": "stream",
                "param_2": "format",
                "param_3": "output_buffer",
                "param_4": "bytes_written",
                "pbVar4": "current_char",
                "pbVar5": "next_char",
                "piVar2": "temp_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080065c0": {
            "additional_data": {
                "FUN_080065c0": {
                    "decode_and_process_data": 4,
                    "decode_data": 1,
                    "extract_and_improve": 1,
                    "process_binary_data": 1,
                    "process_data": 20,
                    "process_input_data": 1,
                    "update_param_and_send": 1
                },
                "bVar5": {
                    "check": 1,
                    "check_flag": 1,
                    "check_value": 1,
                    "condition": 2,
                    "condition_check": 1,
                    "flag": 6,
                    "is_condition_met": 3,
                    "is_flag_set": 5,
                    "is_negative": 2,
                    "is_nonzero": 1,
                    "is_true": 1,
                    "is_valid": 2,
                    "is_zero": 2,
                    "needs_extra": 1,
                    "negative_check": 1,
                    "should_modify": 1
                },
                "iVar1": {
                    "counter": 1,
                    "counter1": 2,
                    "current_index": 1,
                    "i": 3,
                    "index": 9,
                    "index1": 3,
                    "iteration": 4,
                    "iterator1": 1,
                    "loop_counter": 1,
                    "loop_counter_1": 2,
                    "loop_index1": 1,
                    "loop_var_1": 1,
                    "result": 2
                },
                "iVar2": {
                    "callback_result": 1,
                    "counter2": 2,
                    "index2": 3,
                    "iterator2": 1,
                    "j": 3,
                    "loop_counter_2": 1,
                    "loop_index2": 1,
                    "loop_result": 1,
                    "loop_var_2": 1,
                    "result": 12,
                    "return_value": 2,
                    "status": 2,
                    "temp": 1
                },
                "param_1": {
                    "arg1": 1,
                    "data": 8,
                    "input": 9,
                    "input_data": 5,
                    "input_param": 2,
                    "input_value": 2,
                    "input_value1": 1,
                    "param1": 1,
                    "param_1": 2
                },
                "param_2": {
                    "array": 1,
                    "buffer": 2,
                    "data": 8,
                    "data_array": 7,
                    "data_info": 2,
                    "header": 1,
                    "info_array": 1,
                    "input": 1,
                    "input_array": 3,
                    "input_data": 1,
                    "output_buffer": 1,
                    "params": 2,
                    "size_limits": 1
                },
                "param_3": {
                    "buffer_size": 1,
                    "output": 8,
                    "output_array": 1,
                    "output_array_size": 1,
                    "output_data": 1,
                    "output_length": 6,
                    "output_size": 8,
                    "result": 4,
                    "result_length": 1
                },
                "param_4": {
                    "additional_param": 1,
                    "arg4": 1,
                    "constant": 1,
                    "extra_data": 1,
                    "extra_param": 1,
                    "input_size": 1,
                    "input_value2": 2,
                    "param": 6,
                    "param1": 1,
                    "param4": 3,
                    "param4_value": 1,
                    "param_4": 10,
                    "param_a": 2
                },
                "param_5": {
                    "callback": 12,
                    "callback_fn": 1,
                    "callback_func": 6,
                    "callback_function": 9,
                    "process_byte": 1,
                    "process_function": 1,
                    "processor": 1
                },
                "uVar3": {
                    "attached_byte": 1,
                    "buffer_length": 1,
                    "max_len": 1,
                    "max_length": 5,
                    "max_output_size": 1,
                    "max_size": 11,
                    "max_value": 10
                },
                "uVar4": {
                    "additional_value": 1,
                    "attached_offset": 1,
                    "count": 2,
                    "counter": 1,
                    "current_output_size": 1,
                    "extra_len": 1,
                    "extra_length": 2,
                    "extra_size": 1,
                    "extra_value": 2,
                    "new_max_value": 1,
                    "new_value": 1,
                    "offset": 11,
                    "temp_size": 3,
                    "temp_var": 2
                },
                "uVar6": {
                    "one_or_zero": 1,
                    "temp_length": 1
                },
                "uVar7": {
                    "additional_offset": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080066b0"
            ],
            "code": "\nundefined4\ndecode_and_process_data_080065c0(undefined4 input,uint *data,uint *output_size,undefined4 param_4,code *callback)\n\n{\n  int index;\n  int result;\n  uint max_size;\n  uint offset;\n  bool flag;\n  \n  max_size = data[4];\n  if ((int)data[4] < (int)data[2]) {\n    max_size = data[2];\n  }\n  *output_size = max_size;\n  if (*(char *)((int)data + 0x43) != '\\0') {\n    *output_size = max_size + 1;\n  }\n  if ((int)(*data << 0x1a) < 0) {\n    *output_size = *output_size + 2;\n  }\n  if ((*data & 6) == 0) {\n    for (index = 0; index < (int)(data[3] - *output_size); index = index + 1) {\n      result = (*callback)(input,param_4,(int)data + 0x19,1);\n      if (result == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  max_size = (uint)*(byte *)((int)data + 0x43);\n  if (max_size != 0) {\n    max_size = 1;\n  }\n  offset = max_size;\n  if ((int)(*data << 0x1a) < 0) {\n    *(undefined *)((int)data + max_size + 0x43) = 0x30;\n    offset = max_size + 2;\n    *(undefined *)((int)data + max_size + 0x44) = *(undefined *)((int)data + 0x45);\n  }\n  index = (*callback)(input,param_4,(int)data + 0x43,offset);\n  if (index != -1) {\n    max_size = data[3];\n    flag = (*data & 6) != 4;\n    if (flag) {\n      max_size = 0;\n    }\n    offset = 0;\n    if (!flag) {\n      max_size = max_size - *output_size;\n    }\n    if (!flag) {\n      max_size = max_size & ~((int)max_size >> 0x1f);\n    }\n    if ((int)data[4] < (int)data[2]) {\n      max_size = max_size + (data[2] - data[4]);\n    }\n    while( true ) {\n      if (max_size == offset) {\n        return 0;\n      }\n      index = (*callback)(input,param_4,(int)data + 0x1a,1);\n      if (index == -1) break;\n      offset = offset + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "decode_and_process_data_080065c0",
            "entrypoint": "0x080065c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080065c0": "decode_and_process_data_080065c0",
                "bVar5": "flag",
                "iVar1": "index",
                "iVar2": "result",
                "param_1": "input",
                "param_2": "data",
                "param_3": "output_size",
                "param_5": "callback",
                "uVar3": "max_size",
                "uVar4": "offset"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080066b0": {
            "additional_data": {
                "FUN_080065c0": {
                    "printf_common": 1
                },
                "FUN_080066b0": {
                    "format_and_print": 3,
                    "improved_printf": 1,
                    "print_formatted": 3,
                    "print_formatted_data": 3,
                    "print_formatted_output": 14,
                    "print_formatted_string": 3,
                    "print_formatted_value": 4
                },
                "FUN_08006e90": {
                    "get_base_string": 1
                },
                "_printf_common": {
                    "print_common": 1
                },
                "bVar1": {
                    "byte_val": 4,
                    "byte_value": 8,
                    "check_byte": 1,
                    "data_type": 1,
                    "first_arg_byte": 1,
                    "first_byte": 4,
                    "first_char": 1,
                    "first_character": 1,
                    "flag": 2,
                    "format_specifier": 3,
                    "format_type": 2,
                    "type": 1
                },
                "iVar2": {
                    "": 1,
                    "format_result": 1,
                    "i": 1,
                    "index": 8,
                    "int_value": 1,
                    "int_var": 1,
                    "loop_counter": 1,
                    "loop_variable": 1,
                    "result": 13,
                    "temp_int1": 1
                },
                "iVar4": {
                    "": 1,
                    "byte_written": 1,
                    "func_return": 1,
                    "index": 1,
                    "inner_result": 1,
                    "int_var1": 1,
                    "loop_index": 2,
                    "loop_var": 1,
                    "output_result": 1,
                    "print_result": 1,
                    "put_result": 1,
                    "putc_result": 2,
                    "result": 6,
                    "return_val": 1,
                    "status": 1,
                    "success_flag": 1,
                    "temp_int": 1,
                    "temp_int2": 1,
                    "write_result": 4
                },
                "local_24": {
                    "buffer": 1,
                    "buffer_tuple": 1,
                    "copy_size": 1,
                    "field_info": 1,
                    "format_scratch": 1,
                    "local_array": 3,
                    "local_buffer": 3,
                    "local_params": 1,
                    "local_values": 1,
                    "local_variables": 2,
                    "local_vars": 3,
                    "num_printed_chars": 1,
                    "output_buffer": 1,
                    "output_length": 2,
                    "print_arg_lengths": 1,
                    "size": 1,
                    "temp_buffer": 1,
                    "width_values": 1,
                    "written_count": 1
                },
                "memchr": {
                    "find_null_character": 1
                },
                "param_1": {
                    "format": 1,
                    "format_specifier": 1,
                    "format_str": 1,
                    "format_string": 27
                },
                "param_2": {
                    "arg0": 1,
                    "arg_list": 3,
                    "arg_ptr": 1,
                    "arglist": 1,
                    "args": 11,
                    "arguments": 5,
                    "flags": 2,
                    "format_args": 4,
                    "format_data": 1,
                    "modifiers": 1
                },
                "param_3": {
                    "arg": 1,
                    "arg1": 1,
                    "arg_count": 2,
                    "arg_size": 1,
                    "args_count": 1,
                    "args_length": 2,
                    "buffer_size": 2,
                    "format_data": 1,
                    "format_string_length": 1,
                    "locale": 1,
                    "num_args": 3,
                    "output_buffer": 1,
                    "stream": 1,
                    "width": 12
                },
                "param_4": {
                    "arg2": 1,
                    "conversion_specifier": 1,
                    "fnptr": 1,
                    "function_ptr": 1,
                    "out_stream": 1,
                    "output_func": 3,
                    "output_function": 5,
                    "print_func": 4,
                    "print_function": 3,
                    "printer": 1,
                    "put_character": 2,
                    "putc_func": 3,
                    "putchar_function": 1,
                    "write_func": 1,
                    "write_function": 2
                },
                "param_5": {
                    "arg1_ptr": 1,
                    "arg_pointers": 1,
                    "arg_ptr": 2,
                    "arg_ptr_ptr": 1,
                    "arglist": 1,
                    "argptr": 3,
                    "args": 1,
                    "args_ptr": 1,
                    "data": 1,
                    "extra_args": 1,
                    "index_ptr": 1,
                    "n": 1,
                    "next_arg": 1,
                    "num_output_chars": 1,
                    "num_written": 1,
                    "output_arg_ptr": 1,
                    "output_args": 2,
                    "output_parameters": 1,
                    "pp_va_list": 1,
                    "print_arg": 1,
                    "print_args": 1,
                    "printer_function": 1,
                    "put_string": 1,
                    "relocated_printer": 1,
                    "remaining_args": 1,
                    "write_function_args": 1
                },
                "pcVar11": {
                    "": 1,
                    "char_pointer": 1,
                    "char_ptr1": 1,
                    "char_ptr_x": 1,
                    "converted_string": 1,
                    "copy_start": 1,
                    "curr_char": 1,
                    "curr_hex_char": 1,
                    "current_char": 3,
                    "current_digit": 2,
                    "current_pos": 1,
                    "digit_ptr": 2,
                    "end_of_digits": 1,
                    "formatted_value": 2,
                    "output_buffer": 1,
                    "output_ptr": 2,
                    "output_string": 1,
                    "ptr2": 1,
                    "result_ptr": 1,
                    "str_ptr": 1,
                    "temp_ptr4": 1,
                    "tmp_ptr": 1
                },
                "pcVar12": {
                    "buffer": 1,
                    "char_ptr2": 1,
                    "char_ptr_y": 1,
                    "copy_end": 1,
                    "current_char": 1,
                    "end_of_string": 1,
                    "format_buffer": 1,
                    "format_ptr": 3,
                    "format_result": 1,
                    "formatted_output": 1,
                    "formatted_string": 4,
                    "formatted_string_ptr": 1,
                    "next_pos": 1,
                    "output": 1,
                    "output_buffer": 1,
                    "output_end": 1,
                    "print_char": 1,
                    "ptr3": 1,
                    "ptr_params": 1,
                    "str": 1,
                    "str_ptr": 1,
                    "string_pointer": 1,
                    "temp_string": 1
                },
                "pcVar5": {
                    "": 1,
                    "base_string": 1,
                    "char_ptr": 2,
                    "charset": 1,
                    "digit_chars": 1,
                    "digit_string": 1,
                    "digits": 6,
                    "hex_characters": 1,
                    "hex_chars": 6,
                    "hex_digits": 8,
                    "hexadecimal_digits": 1
                },
                "ppcVar8": {
                    "char_ptr_ptr": 1,
                    "output_string": 1,
                    "pp_str": 1,
                    "pp_string": 1,
                    "ptr_to_char_ptr": 1,
                    "string_pptr": 1,
                    "temp_ptr3": 1
                },
                "ppuVar7": {
                    "arg_pptr_ptr": 1,
                    "argpp": 1,
                    "pp_buffer": 1,
                    "pp_curr_arg": 1,
                    "print_arg_pointer": 1,
                    "ptr_ptr_var": 1,
                    "ptr_to_ptr": 1,
                    "temp_ptr2": 1
                },
                "puVar3": {
                    "": 1,
                    "arg1": 1,
                    "arg_p": 1,
                    "arg_pointer": 2,
                    "arg_ptr": 6,
                    "arg_ptr_temp": 1,
                    "argptr_temp": 1,
                    "args_ptr_temp": 1,
                    "curr_arg": 1,
                    "current_arg": 1,
                    "next_output_arg": 1,
                    "p_uint": 1,
                    "ptr": 4,
                    "ptr1": 1,
                    "ptr_arg": 1,
                    "ptr_to_argument": 1,
                    "ptr_value": 1,
                    "ptr_var": 1,
                    "temp_ptr1": 1,
                    "write_arg": 1
                },
                "uVar10": {
                    "": 1,
                    "arg_length": 2,
                    "arg_size": 1,
                    "arg_temp": 1,
                    "arg_value": 1,
                    "copy_arg": 1,
                    "field_width": 1,
                    "format_flags": 1,
                    "length": 4,
                    "original_length": 1,
                    "second_arg": 1,
                    "size2": 1,
                    "string_length": 1,
                    "temp": 1,
                    "temp_u_int3": 1,
                    "temp_value": 1,
                    "tmp_var3": 1,
                    "uint_var1": 1,
                    "uvalue_y": 1,
                    "val3": 1,
                    "value": 1,
                    "value_copy": 1,
                    "width": 1,
                    "width_copy": 1
                },
                "uVar6": {
                    "": 1,
                    "base": 17,
                    "mask": 1,
                    "num_digit": 1,
                    "parameter_value": 1,
                    "temp": 1,
                    "temp_u_int1": 1,
                    "tmp_var": 1,
                    "u_value": 1,
                    "u_var1": 1,
                    "uint_var": 1,
                    "val": 1,
                    "value": 1
                },
                "uVar9": {
                    "": 1,
                    "arg": 1,
                    "arg_val": 1,
                    "arg_value": 2,
                    "converted_value": 2,
                    "curr_length": 1,
                    "div_result": 1,
                    "int_val": 1,
                    "int_value": 1,
                    "num_digits": 1,
                    "result": 1,
                    "size": 1,
                    "temp_u_int2": 1,
                    "temp_value": 1,
                    "tmp_var2": 1,
                    "uint_var": 1,
                    "uvalue_x": 1,
                    "val2": 1,
                    "value": 8
                }
            },
            "called": [
                "FUN_08006e90",
                "FUN_080065c0"
            ],
            "calling": [
                "FUN_08006394"
            ],
            "code": "\nuint print_formatted_output_080066b0(undefined4 format_string,uint *args,undefined4 width,code *output_function,uint **argptr)\n\n{\n  byte byte_value;\n  int result;\n  uint *arg_ptr;\n  int result;\n  char *hex_digits;\n  uint base;\n  uint **pp_curr_arg;\n  char **output_string;\n  uint value;\n  uint length;\n  char *current_char;\n  char *formatted_string;\n  uint local_buffer [2];\n  \n  byte_value = *(byte *)(args + 6);\n  formatted_string = (char *)((int)args + 0x43);\n  if (byte_value != 0x6e) {\n    if (byte_value < 0x6f) {\n      if (byte_value != 99) {\n        if (byte_value < 100) {\n          if (byte_value == 0) goto LAB_0800686a;\n          if (byte_value != 0x58) goto LAB_080066e0;\n          *(undefined *)((int)args + 0x45) = 0x58;\n          hex_digits = \"0123456789ABCDEF\";\nLAB_080067fa:\n          base = *args;\n          arg_ptr = *argptr;\n          *argptr = arg_ptr + 1;\n          if (((base & 0x80) == 0) && ((int)(base << 0x19) < 0)) {\n            value = (uint)*(ushort *)arg_ptr;\n          }\n          else {\n            value = *arg_ptr;\n          }\n          if ((int)(base << 0x1f) < 0) {\n            *args = base | 0x20;\n          }\n          if (value == 0) {\n            *args = *args & 0xffffffdf;\n          }\n          base = 0x10;\nLAB_08006790:\n          *(undefined *)((int)args + 0x43) = 0;\n        }\n        else {\n          if ((byte_value != 100) && (byte_value != 0x69)) goto LAB_080066e0;\n          value = *args;\n          arg_ptr = *argptr;\n          if ((value & 0x80) == 0) {\n            *argptr = arg_ptr + 1;\n            if ((value & 0x40) == 0) goto LAB_08006700;\n            value = (uint)(short)*(ushort *)arg_ptr;\n          }\n          else {\n            *argptr = arg_ptr + 1;\nLAB_08006700:\n            value = *arg_ptr;\n          }\n          if ((int)value < 0) {\n            value = -value;\n            *(undefined *)((int)args + 0x43) = 0x2d;\n          }\n          hex_digits = \"0123456789ABCDEF\";\n          base = 10;\n        }\n        length = args[1];\n        args[2] = length;\n        current_char = formatted_string;\n        if ((int)length < 0) {\n          if (value != 0) goto LAB_0800682e;\nLAB_080068dc:\n          *(char *)((int)args + 0x42) = *hex_digits;\n          current_char = (char *)((int)args + 0x42);\n        }\n        else {\n          *args = *args & 0xfffffffb;\n          if (value == 0) {\n            if (length != 0) goto LAB_080068dc;\n          }\n          else {\nLAB_0800682e:\n            do {\n              length = value / base;\n              current_char = current_char + -1;\n              *current_char = hex_digits[value - base * length];\n              value = length;\n            } while (length != 0);\n          }\n        }\n        if (((base == 8) && ((int)(*args << 0x1f) < 0)) && ((int)args[1] <= (int)args[4]))\n        {\n          current_char[-1] = '0';\n          current_char = current_char + -1;\n        }\n        args[4] = (int)formatted_string - (int)current_char;\n        formatted_string = current_char;\n        goto LAB_080067d6;\n      }\n      arg_ptr = *argptr;\n      *argptr = arg_ptr + 1;\n      *(char *)((int)args + 0x42) = (char)*arg_ptr;\nLAB_08006740:\n      formatted_string = (char *)((int)args + 0x42);\n      value = 1;\n    }\n    else {\n      if (byte_value != 0x73) {\n        if (byte_value < 0x74) {\n          if (byte_value == 0x6f) {\nLAB_08006766:\n            value = *args;\n            arg_ptr = *argptr;\n            if ((value & 0x80) == 0) {\n              *argptr = arg_ptr + 1;\n              if ((value & 0x40) == 0) goto LAB_08006774;\n              value = (uint)*(ushort *)arg_ptr;\n            }\n            else {\n              *argptr = arg_ptr + 1;\nLAB_08006774:\n              value = *arg_ptr;\n            }\n            if (byte_value == 0x6f) {\n              base = 8;\n            }\n            else {\n              base = 10;\n            }\n            hex_digits = \"0123456789ABCDEF\";\n            goto LAB_08006790;\n          }\n          if (byte_value == 0x70) {\n            *args = *args | 0x20;\nLAB_08006726:\n            hex_digits = \"0123456789abcdef\";\n            *(undefined *)((int)args + 0x45) = 0x78;\n            goto LAB_080067fa;\n          }\n        }\n        else {\n          if (byte_value == 0x75) goto LAB_08006766;\n          if (byte_value == 0x78) goto LAB_08006726;\n        }\nLAB_080066e0:\n        *(byte *)((int)args + 0x42) = byte_value;\n        goto LAB_08006740;\n      }\n      output_string = (char **)*argptr;\n      *argptr = (uint *)(output_string + 1);\n      formatted_string = *output_string;\n      result = find_null_character(formatted_string,0,args[1]);\n      if (result != 0) {\n        args[1] = result - (int)formatted_string;\n      }\n      value = args[1];\n    }\n    args[4] = value;\n    *(undefined *)((int)args + 0x43) = 0;\n    goto LAB_080067d6;\n  }\n  value = *args;\n  pp_curr_arg = (uint **)*argptr;\n  base = args[5];\n  if ((value & 0x80) == 0) {\n    *argptr = (uint *)(pp_curr_arg + 1);\n    arg_ptr = *pp_curr_arg;\n    if ((value & 0x40) == 0) goto LAB_08006856;\n    *(short *)arg_ptr = (short)base;\n  }\n  else {\n    *argptr = (uint *)(pp_curr_arg + 1);\n    arg_ptr = *pp_curr_arg;\nLAB_08006856:\n    *arg_ptr = base;\n  }\nLAB_0800686a:\n  args[4] = 0;\nLAB_080067d6:\n  result = print_common(format_string,args,local_buffer,width,output_function);\n  if ((result == -1) || (result = (*output_function)(format_string,width,formatted_string,args[4]), result == -1)) {\nLAB_080067ea:\n    value = 0xffffffff;\n  }\n  else {\n    if ((int)(*args << 0x1e) < 0) {\n      for (result = 0; result < (int)(args[3] - local_buffer[0]); result = result + 1) {\n        result = (*output_function)(format_string,width,(int)args + 0x19,1);\n        if (result == -1) goto LAB_080067ea;\n      }\n    }\n    value = args[3];\n    if ((int)args[3] < (int)local_buffer[0]) {\n      value = local_buffer[0];\n    }\n  }\n  return value;\n}\n\n",
            "current_name": "print_formatted_output_080066b0",
            "entrypoint": "0x080066b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080066b0": "print_formatted_output_080066b0",
                "_printf_common": "print_common",
                "bVar1": "byte_value",
                "iVar2": "result",
                "iVar4": "result",
                "local_24": "local_buffer",
                "memchr": "find_null_character",
                "param_1": "format_string",
                "param_2": "args",
                "param_3": "width",
                "param_4": "output_function",
                "param_5": "argptr",
                "pcVar11": "current_char",
                "pcVar12": "formatted_string",
                "pcVar5": "hex_digits",
                "ppcVar8": "output_string",
                "ppuVar7": "pp_curr_arg",
                "puVar3": "arg_ptr",
                "uVar10": "length",
                "uVar6": "base",
                "uVar9": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080068f0": {
            "additional_data": {
                "FUN_080068f0": {
                    "format_and_print": 3,
                    "format_print": 1,
                    "print_formatted_data": 2,
                    "print_formatted_message": 4,
                    "print_formatted_output": 7,
                    "print_formatted_string": 8,
                    "print_formatted_text": 3,
                    "printf_function": 1,
                    "printf_wrapper": 2
                },
                "iVar1": {
                    "data": 1,
                    "data_address": 5,
                    "data_offset": 2,
                    "data_pointer": 5,
                    "data_ptr": 5,
                    "data_struct": 1,
                    "file_pointer": 1,
                    "format_context": 1,
                    "format_data": 1,
                    "format_flag": 1,
                    "format_handler": 1,
                    "format_specifier": 1,
                    "format_specifier_address": 1,
                    "global_var1": 1,
                    "internal_var1": 1,
                    "pointer": 1,
                    "var1": 1
                },
                "param_1": {
                    "format_specifier": 4,
                    "format_string": 25,
                    "param_a": 1,
                    "str": 1
                },
                "param_2": {
                    "arg1": 28,
                    "num1": 1,
                    "param2": 1,
                    "param_b": 1
                },
                "param_3": {
                    "arg2": 28,
                    "num2": 1,
                    "param3": 1,
                    "param_c": 1
                },
                "param_4": {
                    "arg3": 28,
                    "num3": 1,
                    "param4": 1,
                    "param_d": 1
                },
                "uStack_4": {
                    "arg3": 1,
                    "arg3_copy": 12,
                    "arg3_ptr": 1,
                    "arg_struct_3": 1,
                    "func_param_d": 1,
                    "param4_copy": 1,
                    "stack_arg3": 1,
                    "stack_var3": 1,
                    "var5": 1
                },
                "uStack_8": {
                    "arg2": 1,
                    "arg2_copy": 12,
                    "arg2_ptr": 1,
                    "arg_struct_2": 1,
                    "func_param_c": 1,
                    "param3_copy": 1,
                    "stack_arg2": 1,
                    "stack_var2": 1,
                    "var4": 1
                },
                "uStack_c": {
                    "arg1": 1,
                    "arg1_copy": 12,
                    "arg1_ptr": 1,
                    "arg2_copy": 1,
                    "arg_struct_1": 1,
                    "func_param_b": 1,
                    "param2_copy": 1,
                    "stack_arg1": 1,
                    "stack_var1": 1,
                    "var3": 1
                },
                "uVar2": {
                    "format_address": 1,
                    "format_arg": 1,
                    "format_data_copy": 1,
                    "format_ptr": 3,
                    "format_specifier": 1,
                    "format_specifier_copy": 2,
                    "format_string_copy": 8,
                    "format_struct": 1,
                    "format_width": 1,
                    "func_param_a": 1,
                    "internal_var2": 1,
                    "param1_copy": 6,
                    "param_1_copy": 1,
                    "str_ptr": 1,
                    "var2": 1
                }
            },
            "called": [
                "FUN_08006394",
                "FUN_08006cb4"
            ],
            "calling": [
                "FUN_08004f4c"
            ],
            "code": "\nvoid print_formatted_string_080068f0(undefined4 format_string,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  int data_ptr;\n  undefined4 format_string_copy;\n  undefined4 arg1_copy;\n  undefined4 arg2_copy;\n  undefined4 arg3_copy;\n  \n  data_ptr = DAT_200000f8;\n  format_string_copy = format_string;\n  arg1_copy = arg1;\n  arg2_copy = arg2;\n  arg3_copy = arg3;\n  if ((DAT_200000f8 != 0) && (*(int *)(DAT_200000f8 + 0x18) == 0)) {\n    __sinit(DAT_200000f8);\n  }\n  _vfiprintf_r(data_ptr,*(undefined4 *)(data_ptr + 8),format_string,&arg1_copy,format_string_copy,&arg1_copy);\n  return;\n}\n\n",
            "current_name": "print_formatted_string_080068f0",
            "entrypoint": "0x080068f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080068f0": "print_formatted_string_080068f0",
                "iVar1": "data_ptr",
                "param_1": "format_string",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3",
                "uStack_4": "arg3_copy",
                "uStack_8": "arg2_copy",
                "uStack_c": "arg1_copy",
                "uVar2": "format_string_copy"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006920": {
            "additional_data": {
                "FUN_080056d8": {
                    "find_unused_memory": 1,
                    "get_memory_address": 2,
                    "get_memory_location": 1
                },
                "FUN_08006920": {
                    "allocate_memory": 28,
                    "initialize_memory": 2,
                    "initialize_memory_segment": 1
                },
                "_sbrk": {
                    "request_memory": 1
                },
                "iVar1": {
                    "allocated_address": 3,
                    "allocated_memory": 5,
                    "allocated_size": 3,
                    "allocation_result": 9,
                    "memory_address": 2,
                    "memory_allocation_result": 1,
                    "memory_block": 1,
                    "memory_pointer": 1,
                    "result": 2
                },
                "param_1": {
                    "allocation_result": 1,
                    "memory_address": 2,
                    "memory_pointer": 3,
                    "output_address": 2,
                    "output_pointer": 1,
                    "result": 9,
                    "result_address": 1,
                    "result_pointer": 5,
                    "result_ptr": 6,
                    "target_address": 1
                },
                "param_2": {
                    "allocation_size": 2,
                    "bytes_to_allocate": 2,
                    "memory_size": 2,
                    "num_bytes": 1,
                    "requested_size": 1,
                    "size": 23
                }
            },
            "called": [
                "FUN_080056d8"
            ],
            "calling": [
                "FUN_08006288"
            ],
            "code": "\nvoid allocate_memory_08006920(int *result,undefined4 size)\n\n{\n  int allocation_result;\n  \n  DAT_200006a4 = 0;\n  allocation_result = request_memory(size);\n  if ((allocation_result == -1) && (DAT_200006a4 != 0)) {\n    *result = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "current_name": "allocate_memory_08006920",
            "entrypoint": "0x08006920",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006920": "allocate_memory_08006920",
                "_sbrk": "request_memory",
                "iVar1": "allocation_result",
                "param_1": "result",
                "param_2": "size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080069e4": {
            "additional_data": {
                "DAT_200000f8": {
                    "data": 1
                },
                "FUN_080061f0": {
                    "decode_and_modify_sub1": 1,
                    "do_something": 1,
                    "helper_function1": 1,
                    "initialize_buffer": 2,
                    "initialize_data": 1,
                    "initialize_param": 1,
                    "initialize_variables": 1,
                    "initialize_with_data": 1,
                    "process_data": 1,
                    "process_helper1": 1,
                    "set_data": 1,
                    "sub_function_1": 1,
                    "sub_process1": 1
                },
                "FUN_080069e4": {
                    "check_and_modify": 1,
                    "decode_and_modify_data": 1,
                    "decode_and_update_data": 1,
                    "handle_data_operations": 1,
                    "handle_param": 1,
                    "parse_and_validate_data": 1,
                    "process_data": 17,
                    "process_param": 1,
                    "process_parameters": 1,
                    "rearrange_data": 1,
                    "validate_param": 1
                },
                "FUN_08006cb4": {
                    "cleanup": 1,
                    "cleanup_data": 1,
                    "cleanup_param": 1,
                    "deallocate_data": 1,
                    "decode_and_modify_sub3": 1,
                    "helper_function3": 1,
                    "process_helper3": 1,
                    "reset_data": 4,
                    "reset_variables": 1,
                    "sub_function_3": 1,
                    "sub_process3": 1
                },
                "FUN_08006e10": {
                    "calculate_value": 1,
                    "decode_and_modify_sub2": 1,
                    "helper_function2": 1,
                    "process_buffer": 1,
                    "process_data": 1,
                    "process_data_2": 1,
                    "process_helper2": 1,
                    "process_input": 1,
                    "process_int": 1,
                    "process_value": 1,
                    "sub_function_2": 1,
                    "sub_process2": 1,
                    "update_data": 2
                },
                "__makebuf_r": {
                    "allocate_memory": 1
                },
                "__sinit": {
                    "initialize": 11,
                    "initialize_data": 8
                },
                "__smakebuf_r": {
                    "allocate_buffer": 1,
                    "create_buffer": 6,
                    "make_buffer": 12
                },
                "_free_r": {
                    "deallocate": 1,
                    "free_data": 1,
                    "free_memory": 11,
                    "free_resource": 1,
                    "free_resources": 1,
                    "release_memory": 4
                },
                "iVar1": {
                    "base_address": 1,
                    "data": 2,
                    "data_address": 6,
                    "data_header": 1,
                    "data_length": 1,
                    "data_offset": 5,
                    "data_pointer": 3,
                    "data_ptr": 5,
                    "data_start_address": 1,
                    "data_structure": 1,
                    "global_var": 1,
                    "temp": 1,
                    "temp_var": 1,
                    "var1": 2
                },
                "param_1": {
                    "data": 1,
                    "data_ptr": 1,
                    "input_array": 1,
                    "out_data": 2,
                    "output": 7,
                    "output_array": 2,
                    "output_buffer": 3,
                    "output_data": 4,
                    "output_param": 3,
                    "output_ptr": 1,
                    "output_status": 1,
                    "output_value": 1,
                    "result": 4
                },
                "param_2": {
                    "buffer": 1,
                    "data": 1,
                    "data_operation": 1,
                    "data_ptr": 1,
                    "input": 7,
                    "input_array": 2,
                    "input_buffer": 3,
                    "input_data": 8,
                    "input_param": 3,
                    "input_ptr": 2,
                    "input_value": 1,
                    "parameters": 1
                },
                "param_3": {
                    "buffer_size": 1
                },
                "param_4": {
                    "flag": 1
                },
                "uVar2": {
                    "modified_flag": 1,
                    "result": 24,
                    "result_value": 1,
                    "return_value": 1,
                    "u_value": 1,
                    "uint_value": 1,
                    "value": 2
                },
                "uVar3": {
                    "buffer_value": 1,
                    "data": 1,
                    "data_value": 3,
                    "flag": 4,
                    "flags": 13,
                    "input_flag": 1,
                    "input_value": 2,
                    "short_value": 1,
                    "u_short_value": 1,
                    "ushort_value": 1,
                    "value": 3
                }
            },
            "called": [
                "FUN_080061f0",
                "FUN_08006e10",
                "FUN_08006cb4"
            ],
            "calling": [
                "FUN_08006344",
                "FUN_08006394"
            ],
            "code": "\nuint process_data_080069e4(undefined4 *output,undefined4 *input_data)\n\n{\n  int data_address;\n  uint result;\n  ushort flags;\n  \n  data_address = DAT_200000f8;\n  if ((DAT_200000f8 != 0) && (*(int *)(DAT_200000f8 + 0x18) == 0)) {\n    initialize(DAT_200000f8);\n  }\n  if (input_data == &DAT_08007904) {\n    input_data = *(undefined4 **)(data_address + 4);\n  }\n  else if (input_data == (undefined4 *)&DAT_08007924) {\n    input_data = *(undefined4 **)(data_address + 8);\n  }\n  else if (input_data == (undefined4 *)&DAT_080078e4) {\n    input_data = *(undefined4 **)(data_address + 0xc);\n  }\n  flags = *(ushort *)(input_data + 3);\n  result = (uint)flags;\n  if (-1 < (int)(result << 0x1c)) {\n    if (-1 < (int)(result << 0x1b)) {\n      *output = 9;\n      goto LAB_08006a14;\n    }\n    if ((int)(result << 0x1d) < 0) {\n      if ((undefined4 *)input_data[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)input_data[0xd] != input_data + 0x11) {\n          free_memory(output);\n        }\n        input_data[0xd] = 0;\n      }\n      *(ushort *)(input_data + 3) = *(ushort *)(input_data + 3) & 0xffdb;\n      input_data[1] = 0;\n      *input_data = input_data[4];\n    }\n    *(ushort *)(input_data + 3) = *(ushort *)(input_data + 3) | 8;\n  }\n  if ((input_data[4] == 0) && ((*(ushort *)(input_data + 3) & 0x280) != 0x200)) {\n    make_buffer(output,input_data);\n  }\n  flags = *(ushort *)(input_data + 3);\n  result = flags & 1;\n  if ((flags & 1) == 0) {\n    if (-1 < (int)((uint)flags << 0x1e)) {\n      result = input_data[5];\n    }\n    input_data[2] = result;\n  }\n  else {\n    input_data[2] = 0;\n    input_data[6] = -input_data[5];\n  }\n  if (input_data[4] == 0) {\n    flags = *(ushort *)(input_data + 3);\n    result = (int)(short)flags & 0x80;\n    if (result != 0) {\nLAB_08006a14:\n      *(ushort *)(input_data + 3) = flags | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "current_name": "process_data_080069e4",
            "entrypoint": "0x080069e4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080069e4": "process_data_080069e4",
                "__sinit": "initialize",
                "__smakebuf_r": "make_buffer",
                "_free_r": "free_memory",
                "iVar1": "data_address",
                "param_1": "output",
                "param_2": "input_data",
                "uVar2": "result",
                "uVar3": "flags"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006ac0": {
            "additional_data": {
                "FUN_0800573c": {
                    "clean_up_resources": 1,
                    "cleanup": 2,
                    "deallocate_memory": 1,
                    "free_memory": 1,
                    "free_resources": 3,
                    "release_resources": 1,
                    "sub_function3": 1,
                    "sub_function_3": 3
                },
                "FUN_080061f0": {
                    "initialize": 1,
                    "initialize_data": 1,
                    "initialize_parameters": 3,
                    "initialize_params": 1,
                    "initialize_variables": 2,
                    "initialize_vars": 1,
                    "sub_function1": 1,
                    "sub_function_1": 3
                },
                "FUN_08006ac0": {
                    "execute_command": 1,
                    "handle_error": 5,
                    "handle_error_and_exit": 1,
                    "handle_exception": 2,
                    "more_descriptive_function": 1,
                    "process_function": 1
                },
                "FUN_08006f00": {
                    "calculate_result": 1,
                    "perform_operation": 3,
                    "process_data": 5,
                    "sub_function2": 1,
                    "sub_function_2": 3
                },
                "UNRECOVERED_JUMPTABLE_00": {
                    "exit_jumptable": 1,
                    "handle_jump_table": 1,
                    "jmp_table": 1,
                    "jmp_table_func": 1,
                    "jump_table": 8,
                    "jump_table_func": 1,
                    "jump_table_function": 1,
                    "jumptable_function": 1,
                    "unrecovered_jump_table": 2,
                    "unrecovered_jumptable": 4
                },
                "bVar11": {
                    "bool_b_var11": 1,
                    "bool_value": 4,
                    "bool_var": 2,
                    "bool_variable": 1,
                    "bool_variable_11": 1,
                    "boolean1": 1,
                    "flag": 4,
                    "flag1": 1,
                    "flag_check": 1,
                    "is_condition_true": 1,
                    "is_flag_set": 1,
                    "is_negative": 1,
                    "is_true": 1,
                    "is_var11_true": 1,
                    "is_zero": 1,
                    "var5": 1
                },
                "iVar2": {
                    "bytes_transferred": 1,
                    "count": 1,
                    "counter": 1,
                    "error_code": 1,
                    "i_var": 1,
                    "index": 1,
                    "int_value": 3,
                    "int_value1": 1,
                    "int_variable": 1,
                    "integer_variable_2": 1,
                    "offset": 1,
                    "temp_int": 1,
                    "temp_value": 1,
                    "total_size": 1,
                    "var1": 3,
                    "var2": 2,
                    "var3": 2,
                    "variable_i_var2": 1
                },
                "iVar7": {
                    "block_size": 1,
                    "i_var_seven": 1,
                    "int_value2": 2,
                    "int_variable_2": 1,
                    "integer_variable_7": 1,
                    "loop_count": 2,
                    "offset": 1,
                    "remaining_bytes": 1,
                    "second_int_value": 1,
                    "temp": 1,
                    "temp_counter": 1,
                    "temp_index": 1,
                    "temp_int_2": 1,
                    "temp_var": 1,
                    "value": 1,
                    "var2": 1,
                    "var4": 4,
                    "var7": 2,
                    "variable_i_var7": 1
                },
                "iVar9": {
                    "i_var_nine": 1,
                    "int_value3": 2,
                    "int_variable_3": 1,
                    "integer_variable_9": 1,
                    "length": 1,
                    "loop_variable": 2,
                    "remaining": 1,
                    "remaining_size": 1,
                    "temp": 1,
                    "temp2": 1,
                    "temp_int_3": 1,
                    "temp_offset": 1,
                    "temp_value": 1,
                    "third_int_value": 1,
                    "var3": 1,
                    "var5": 3,
                    "var6": 1,
                    "var9": 2,
                    "variable_i_var9": 1
                },
                "param_1": {
                    "error_code": 1,
                    "param1": 2,
                    "param_array": 1,
                    "param_pointer": 1,
                    "ptr_arg1": 1,
                    "status_code": 1
                },
                "param_2": {
                    "arg2": 1,
                    "data": 1,
                    "error_flag": 1,
                    "param2": 2,
                    "param_count": 1,
                    "param_int": 1
                },
                "param_3": {
                    "arg3": 1,
                    "param3": 2,
                    "param_3": 2,
                    "param_uint": 1,
                    "unused_param": 1
                },
                "param_4": {
                    "arg4": 1,
                    "param4": 2,
                    "param_4": 2,
                    "param_uint2": 1,
                    "unused_param": 1
                },
                "pcVar8": {
                    "callback": 2,
                    "callback_func": 1,
                    "code_var": 1,
                    "error_handler": 1,
                    "exception_handler": 2,
                    "function_pointer": 6,
                    "function_ptr": 3,
                    "function_var": 1,
                    "pointer_pc_var8": 1,
                    "pointer_v4": 1,
                    "ptr_var8": 1,
                    "sub_function_ptr": 1
                },
                "piVar3": {
                    "array_ptr": 1,
                    "command_data": 1,
                    "data_ptr": 1,
                    "error_info": 1,
                    "exception_data": 2,
                    "function_args": 1,
                    "parameters": 2,
                    "pointer": 2,
                    "pointer_3": 1,
                    "pointer_i_var3": 1,
                    "pointer_to_array": 1,
                    "pointer_v1": 1,
                    "pointer_var1": 1,
                    "pointer_variable": 1,
                    "ptr2": 2,
                    "ptr_array": 2,
                    "ptr_error_info": 1,
                    "ptr_var3": 2,
                    "var_array": 1
                },
                "piVar4": {
                    "free_block": 1,
                    "pointer": 1,
                    "pointer_4": 1,
                    "pointer_i_var4": 1,
                    "pointer_v3": 1,
                    "pointer_var3": 1,
                    "ptr3": 1,
                    "ptr4": 1,
                    "ptr_temp": 1,
                    "ptr_to_free": 1,
                    "ptr_var4": 2,
                    "temp_array": 1,
                    "temp_ptr": 2,
                    "temp_var_array": 1,
                    "temporary_ptr": 1
                },
                "puVar1": {
                    "data": 1,
                    "error_code": 1,
                    "exception_register": 1,
                    "pointer": 2,
                    "pointer2": 1,
                    "pointer_1": 1,
                    "pointer_to_uint": 1,
                    "pointer_to_var1": 1,
                    "pointer_u_var1": 1,
                    "pointer_v2": 1,
                    "pointer_var2": 1,
                    "pointer_variable_2": 1,
                    "ptr": 1,
                    "ptr1": 2,
                    "ptr_data": 1,
                    "ptr_uint": 1,
                    "ptr_value": 1,
                    "ptr_var1": 2,
                    "result_data": 1,
                    "result_ptr": 1,
                    "status": 1
                },
                "uVar10": {
                    "original_result_data": 1,
                    "saved_value": 2,
                    "second_uint_value": 1,
                    "temp_error_code": 1,
                    "temp_flag": 1,
                    "temp_ptr": 1,
                    "temp_uint": 1,
                    "temp_value": 2,
                    "temp_variable_3": 1,
                    "u_var10": 1,
                    "u_var_ten": 1,
                    "uint_value": 3,
                    "value": 1,
                    "var10": 1,
                    "var4": 1,
                    "var6": 1,
                    "var7": 1
                },
                "uVar12": {
                    "exit_code": 3,
                    "exit_status": 1,
                    "exit_value": 4,
                    "result": 3,
                    "return_value": 1,
                    "temp_var": 1,
                    "temp_variable_4": 1,
                    "u_var12": 1,
                    "u_var_exit": 1,
                    "undefined8_variable": 1,
                    "var12": 1,
                    "var6": 1
                },
                "uVar5": {
                    "error_code_as_int": 1,
                    "exception_value": 1,
                    "temp_value": 1,
                    "temp_value_2": 1,
                    "temp_variable": 1,
                    "threshold": 1,
                    "u_var5": 1,
                    "uint_value": 2,
                    "uint_variable": 1,
                    "ushort_to_uint": 1,
                    "ushort_value": 4,
                    "ushort_value1": 1,
                    "value": 2,
                    "var1": 2,
                    "var2": 2,
                    "var5": 1
                },
                "uVar6": {
                    "error_flag": 1,
                    "exception_flags": 2,
                    "flag": 2,
                    "flags": 2,
                    "status": 1,
                    "temp_variable_2": 1,
                    "u_var6": 1,
                    "ushort_1": 1,
                    "ushort_temp": 1,
                    "ushort_value": 2,
                    "ushort_value2": 2,
                    "ushort_var": 1,
                    "ushort_variable": 2,
                    "value": 1,
                    "var2": 2,
                    "var3": 2,
                    "var6": 1
                }
            },
            "called": [
                "FUN_080061f0",
                "FUN_08006f00",
                "FUN_0800573c"
            ],
            "calling": [
                "FUN_08007090",
                "FUN_0800611c"
            ],
            "code": "\nvoid handle_error_and_exit_08006ac0(void)\n\n{\n  uint *ptr_var1;\n  int int_value;\n  int *pointer;\n  int *ptr_var4;\n  uint ushort_value;\n  ushort flag;\n  int var4;\n  code *function_pointer;\n  int var5;\n  uint uint_value;\n  code *jump_table;\n  bool bool_value;\n  undefined8 exit_value;\n  \n  raise(6);\n  jump_table = (code *)0x8006acf;\n  exit_value = _exit(1);\n  pointer = (int *)((ulonglong)exit_value >> 0x20);\n  ptr_var1 = (uint *)exit_value;\n  flag = *(ushort *)(pointer + 3);\n  ushort_value = (uint)flag;\n  if ((int)(ushort_value << 0x1c) < 0) {\n    int_value = pointer[4];\n    if (int_value != 0) {\n      var4 = ushort_value << 0x1e;\n      bool_value = var4 != 0;\n      if (bool_value) {\n        var4 = 0;\n      }\n      var5 = *pointer;\n      if (!bool_value) {\n        var4 = pointer[5];\n      }\n      *pointer = int_value;\n      pointer[2] = var4;\n      for (var5 = var5 - int_value; 0 < var5; var5 = var5 - var4) {\n        var4 = (*(code *)pointer[10])(ptr_var1,pointer[8],int_value,var5);\n        if (var4 < 1) {\n          flag = *(ushort *)(pointer + 3);\n          goto LAB_08006bc6;\n        }\n        int_value = int_value + var4;\n      }\n    }\n  }\n  else if (((0 < pointer[1]) || (0 < pointer[0x10])) &&\n          (function_pointer = (code *)pointer[0xb], function_pointer != (code *)0x0)) {\n    uint_value = *ptr_var1;\n    *ptr_var1 = 0;\n    if ((flag & 0x1000) == 0) {\n      int_value = (*function_pointer)(ptr_var1,pointer[8],ushort_value & 0x1000,1);\n      if ((int_value == -1) && (ushort_value = *ptr_var1, ushort_value != 0)) {\n        if ((ushort_value != 0x1d) && (ushort_value != 0x16)) {\n          *(ushort *)(pointer + 3) = *(ushort *)(pointer + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          (*jump_table)();\n          return;\n        }\n        *ptr_var1 = uint_value;\n        goto LAB_08006aea;\n      }\n    }\n    else {\n      int_value = pointer[0x15];\n    }\n    if (((int)((uint)*(ushort *)(pointer + 3) << 0x1d) < 0) &&\n       (int_value = int_value - pointer[1], pointer[0xd] != 0)) {\n      int_value = int_value - pointer[0x10];\n    }\n    int_value = (*(code *)pointer[0xb])(ptr_var1,pointer[8],int_value,0);\n    flag = *(ushort *)(pointer + 3);\n    if ((int_value == -1) &&\n       ((0x1d < *ptr_var1 || (-1 < (int)((0x20400001U >> (*ptr_var1 & 0xff)) << 0x1f))))) {\nLAB_08006bc6:\n      *(ushort *)(pointer + 3) = flag | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006bd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jump_table)(0xffffffff);\n      return;\n    }\n    pointer[1] = 0;\n    *pointer = pointer[4];\n    if (((int)((uint)flag << 0x13) < 0) && ((int_value != -1 || (*ptr_var1 == 0)))) {\n      pointer[0x15] = int_value;\n    }\n    ptr_var4 = (int *)pointer[0xd];\n    *ptr_var1 = uint_value;\n    if (ptr_var4 != (int *)0x0) {\n      if (ptr_var4 != pointer + 0x11) {\n        _free_r(ptr_var1);\n      }\n      pointer[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08006b66. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jump_table)();\n      return;\n    }\n  }\nLAB_08006aea:\n                    /* WARNING: Could not recover jumptable at 0x08006aec. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)(0);\n  return;\n}\n\n",
            "current_name": "handle_error_and_exit_08006ac0",
            "entrypoint": "0x08006ac0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006ac0": "handle_error_and_exit_08006ac0",
                "UNRECOVERED_JUMPTABLE_00": "jump_table",
                "bVar11": "bool_value",
                "iVar2": "int_value",
                "iVar7": "var4",
                "iVar9": "var5",
                "pcVar8": "function_pointer",
                "piVar3": "pointer",
                "piVar4": "ptr_var4",
                "puVar1": "ptr_var1",
                "uVar10": "uint_value",
                "uVar12": "exit_value",
                "uVar5": "ushort_value",
                "uVar6": "flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006be0": {
            "additional_data": {
                "FUN_08006be0": {
                    "execute_function": 1,
                    "execute_operation": 1,
                    "process_data": 3
                },
                "UNRECOVERED_JUMPTABLE_00": {
                    "jmp_table": 4,
                    "jump_table": 9,
                    "jump_table_entry": 1,
                    "jump_table_func": 1,
                    "jump_table_function": 2,
                    "jump_table_ptr": 1,
                    "jumptable": 2,
                    "jumptable_func": 1,
                    "jumptable_function": 1,
                    "undefined_function": 1,
                    "unrecovered_func1": 1,
                    "unrecovered_jump_table": 1,
                    "unrecovered_jumptable": 1
                },
                "bVar10": {
                    "bool_value": 1,
                    "bool_var": 1,
                    "boolean_variable": 1,
                    "condition": 1,
                    "flag": 1,
                    "temp_flag": 1,
                    "temp_var10": 1
                },
                "bVar11": {
                    "flag": 1,
                    "var11": 1
                },
                "iVar1": {
                    "result": 1
                },
                "iVar2": {
                    "array_length": 1,
                    "count": 5,
                    "count1": 2,
                    "index": 2,
                    "integer1": 1,
                    "length": 2,
                    "loop_bound": 1,
                    "loop_counter": 2,
                    "offset": 1,
                    "temp1": 1,
                    "temp_var": 1,
                    "temp_var1": 4,
                    "temp_var11": 1,
                    "tmp1": 1,
                    "value": 1,
                    "value1": 1,
                    "var1": 3,
                    "var_1": 1
                },
                "iVar6": {
                    "count2": 1,
                    "i_var": 1,
                    "i_var6": 1,
                    "increment": 2,
                    "integer2": 1,
                    "loop_counter": 2,
                    "temp": 3,
                    "temp3": 1,
                    "temp4": 1,
                    "temp_int": 2,
                    "temp_value": 1,
                    "temp_var": 1,
                    "temp_var2": 1,
                    "temp_var3": 2,
                    "temp_var4": 1,
                    "temp_var5": 3,
                    "tmp2": 1,
                    "value": 1,
                    "var1": 1,
                    "var5": 3,
                    "var_5": 1
                },
                "iVar8": {
                    "count": 1,
                    "count2": 1,
                    "count3": 1,
                    "counter": 2,
                    "i_var8": 1,
                    "initial_value": 1,
                    "integer3": 1,
                    "length": 1,
                    "loop_count": 2,
                    "loop_counter": 1,
                    "loop_iter": 1,
                    "loop_value": 1,
                    "loop_var": 1,
                    "temp5": 1,
                    "temp_int_2": 2,
                    "temp_var12": 1,
                    "temp_var3": 1,
                    "temp_var4": 1,
                    "temp_var5": 1,
                    "temp_var6": 1,
                    "temp_var8": 1,
                    "temp_var_2": 1,
                    "tmp3": 1,
                    "var4": 1,
                    "var6": 1,
                    "var8": 2,
                    "var_8": 1
                },
                "param_1": {
                    "array": 2,
                    "array1": 1,
                    "array_ptr": 6,
                    "data": 1,
                    "data_array": 2,
                    "data_pointer": 1,
                    "file_data": 1,
                    "input_array": 5,
                    "input_pointer": 1,
                    "param_array": 4,
                    "parameter_array": 1,
                    "parameters": 1,
                    "ptr_param": 1,
                    "uint_array": 4
                },
                "param_2": {
                    "array2": 1,
                    "data_array": 1,
                    "data_ptr": 2,
                    "flags_array": 1,
                    "function_data": 1,
                    "info": 1,
                    "input_data": 1,
                    "int_array": 5,
                    "int_ptr": 3,
                    "operation_array": 1,
                    "output_array": 5,
                    "param_array": 2,
                    "param_pointer": 1,
                    "param_pointer_array": 1,
                    "param_ptr": 1,
                    "pointer_array": 2,
                    "ptr_data": 1,
                    "struct_ptr": 1
                },
                "pcVar7": {
                    "callback": 2,
                    "callback_func": 1,
                    "callback_function": 1,
                    "callback_ptr": 1,
                    "code_pointer": 1,
                    "func_ptr": 2,
                    "function": 1,
                    "function_pointer": 11,
                    "function_ptr": 9,
                    "sub_function": 1,
                    "temp_code_ptr": 1
                },
                "piVar3": {
                    "data_pointer": 1,
                    "pointer": 1,
                    "pointer1": 2,
                    "pointer_array": 1,
                    "pointer_to_output_array": 1,
                    "pointer_var1": 1,
                    "position": 1,
                    "ptr": 3,
                    "ptr1": 3,
                    "ptr_count": 1,
                    "ptr_value": 1,
                    "ptr_var": 1,
                    "temp2": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 3,
                    "temp_ptr_var1": 1,
                    "temp_var14": 1,
                    "temp_var2": 2,
                    "tmp_pointer": 1,
                    "var2": 3,
                    "var_2": 1
                },
                "uVar1": {
                    "result": 18,
                    "return_value": 12
                },
                "uVar10": {
                    "b_var1": 1,
                    "bool_flag": 3,
                    "bool_value": 2,
                    "bool_var": 5,
                    "boolean_flag": 1,
                    "boolean_variable": 1,
                    "comparison_result": 1,
                    "condition": 1,
                    "conditional_flag": 1,
                    "flag": 1,
                    "temp2": 1,
                    "temp_bool": 1,
                    "temp_var7": 1,
                    "temp_var8": 1,
                    "u_var10": 1,
                    "var10": 1,
                    "var_10": 1
                },
                "uVar4": {
                    "converted_value": 1,
                    "number": 1,
                    "short_value": 1,
                    "temp": 2,
                    "temp1": 1,
                    "temp3": 1,
                    "temp_uint": 2,
                    "temp_var1": 2,
                    "temp_var2": 1,
                    "temp_var3": 3,
                    "u_var4": 1,
                    "unsigned_var1": 1,
                    "ushort_val": 1,
                    "ushort_value": 2,
                    "ushort_var": 2,
                    "value": 4,
                    "value1": 1,
                    "var3": 3,
                    "var_3": 1
                },
                "uVar5": {
                    "flag": 6,
                    "flags": 1,
                    "short_value": 1,
                    "short_var": 1,
                    "temp2": 2,
                    "temp_ushort": 2,
                    "temp_var13": 1,
                    "temp_var2": 2,
                    "temp_var3": 1,
                    "temp_var4": 2,
                    "u_var5": 1,
                    "unsigned_var2": 1,
                    "ushort_temp": 1,
                    "ushort_var2": 2,
                    "ushort_variable": 1,
                    "value2": 1,
                    "value4": 1,
                    "var4": 3,
                    "var_4": 1
                },
                "uVar9": {
                    "data_var": 1,
                    "original_value": 2,
                    "temp1": 1,
                    "temp2": 1,
                    "temp3": 1,
                    "temp4": 1,
                    "temp6": 1,
                    "temp_result": 1,
                    "temp_uint_2": 1,
                    "temp_uint_3": 1,
                    "temp_value": 5,
                    "temp_value2": 1,
                    "temp_var15": 1,
                    "temp_var5": 1,
                    "temp_var6": 1,
                    "temp_var7": 1,
                    "temp_var9": 1,
                    "u_var9": 1,
                    "uint_value": 1,
                    "uint_var": 1,
                    "unsigned_var3": 1,
                    "value4": 1,
                    "var10": 1,
                    "var7": 1,
                    "var9": 1,
                    "var_9": 1
                },
                "unaff_r4": {
                    "additional_parameter": 1,
                    "register4": 2,
                    "register_1": 1,
                    "register_var1": 1,
                    "temp_r4": 1,
                    "temp_reg4": 1,
                    "temp_unaff_r4": 1,
                    "temp_var6": 2,
                    "unaff_arg1": 1,
                    "unaff_r4": 3,
                    "unaff_temp_4": 1,
                    "unaff_temp_var1": 1,
                    "unaff_var1": 1,
                    "unaffected_r4": 1,
                    "unaffected_register4": 4,
                    "unused_param1": 1,
                    "var1": 3,
                    "var2": 1,
                    "var6": 2,
                    "var_6": 1,
                    "var_unaff_r4": 1
                },
                "unaff_r5": {
                    "additional_parameter_2": 1,
                    "register5": 2,
                    "register_2": 1,
                    "register_var2": 1,
                    "temp_r5": 1,
                    "temp_reg5": 1,
                    "temp_unaff_r5": 1,
                    "temp_var7": 2,
                    "unaff_arg2": 1,
                    "unaff_r5": 3,
                    "unaff_temp_5": 1,
                    "unaff_temp_var2": 1,
                    "unaff_var2": 1,
                    "unaffected_r5": 1,
                    "unaffected_register5": 4,
                    "unused_param2": 1,
                    "var2": 3,
                    "var3": 1,
                    "var7": 2,
                    "var_7": 1,
                    "var_unaff_r5": 1
                }
            },
            "called": [
                "FUN_08006cb4"
            ],
            "calling": [
                "FUN_08006344"
            ],
            "code": "\nundefined4 process_data_08006be0(uint *array_ptr,int *int_array)\n\n{\n  undefined4 result;\n  int count;\n  int *var2;\n  uint value;\n  ushort flag;\n  int temp_var5;\n  undefined4 unaffected_register4;\n  undefined4 unaffected_register5;\n  code *function_pointer;\n  int var8;\n  uint temp_value;\n  code *jump_table;\n  bool bool_value;\n  \n  if (int_array[4] != 0) {\n    if ((array_ptr != (uint *)0x0) && (array_ptr[6] == 0)) {\n      __sinit();\n    }\n    if (int_array == &DAT_08007904) {\n      int_array = (int *)array_ptr[1];\n    }\n    else if (int_array == (int *)&DAT_08007924) {\n      int_array = (int *)array_ptr[2];\n    }\n    else if (int_array == (int *)&DAT_080078e4) {\n      int_array = (int *)array_ptr[3];\n    }\n    if (*(short *)(int_array + 3) != 0) {\n      flag = *(ushort *)(int_array + 3);\n      value = (uint)flag;\n      if ((int)(value << 0x1c) < 0) {\n        count = int_array[4];\n        if (count != 0) {\n          temp_var5 = value << 0x1e;\n          bool_value = temp_var5 != 0;\n          if (bool_value) {\n            temp_var5 = 0;\n          }\n          var8 = *int_array;\n          if (!bool_value) {\n            temp_var5 = int_array[5];\n          }\n          *int_array = count;\n          int_array[2] = temp_var5;\n          for (var8 = var8 - count; 0 < var8; var8 = var8 - temp_var5) {\n            temp_var5 = (*(code *)int_array[10])(array_ptr,int_array[8],count,var8,unaffected_register4,unaffected_register5);\n            if (temp_var5 < 1) {\n              flag = *(ushort *)(int_array + 3);\n              goto LAB_08006bc6;\n            }\n            count = count + temp_var5;\n          }\n        }\n      }\n      else if (((0 < int_array[1]) || (0 < int_array[0x10])) &&\n              (function_pointer = (code *)int_array[0xb], function_pointer != (code *)0x0)) {\n        temp_value = *array_ptr;\n        *array_ptr = 0;\n        if ((flag & 0x1000) == 0) {\n          count = (*function_pointer)(array_ptr,int_array[8],value & 0x1000,1);\n          if ((count == -1) && (value = *array_ptr, value != 0)) {\n            if ((value != 0x1d) && (value != 0x16)) {\n              *(ushort *)(int_array + 3) = *(ushort *)(int_array + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              result = (*jump_table)();\n              return result;\n            }\n            *array_ptr = temp_value;\n            goto LAB_08006aea;\n          }\n        }\n        else {\n          count = int_array[0x15];\n        }\n        if (((int)((uint)*(ushort *)(int_array + 3) << 0x1d) < 0) &&\n           (count = count - int_array[1], int_array[0xd] != 0)) {\n          count = count - int_array[0x10];\n        }\n        count = (*(code *)int_array[0xb])(array_ptr,int_array[8],count,0);\n        flag = *(ushort *)(int_array + 3);\n        if ((count == -1) &&\n           ((0x1d < *array_ptr || (-1 < (int)((0x20400001U >> (*array_ptr & 0xff)) << 0x1f))))) {\nLAB_08006bc6:\n          *(ushort *)(int_array + 3) = flag | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006bd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          result = (*jump_table)(0xffffffff);\n          return result;\n        }\n        int_array[1] = 0;\n        *int_array = int_array[4];\n        if (((int)((uint)flag << 0x13) < 0) && ((count != -1 || (*array_ptr == 0)))) {\n          int_array[0x15] = count;\n        }\n        var2 = (int *)int_array[0xd];\n        *array_ptr = temp_value;\n        if (var2 != (int *)0x0) {\n          if (var2 != int_array + 0x11) {\n            _free_r(array_ptr);\n          }\n          int_array[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08006b66. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          result = (*jump_table)();\n          return result;\n        }\n      }\nLAB_08006aea:\n                    /* WARNING: Could not recover jumptable at 0x08006aec. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      result = (*jump_table)(0);\n      return result;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_data_08006be0",
            "entrypoint": "0x08006be0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006be0": "process_data_08006be0",
                "UNRECOVERED_JUMPTABLE_00": "jump_table",
                "bVar10": "bool_value",
                "iVar2": "count",
                "iVar6": "temp_var5",
                "iVar8": "var8",
                "param_1": "array_ptr",
                "param_2": "int_array",
                "pcVar7": "function_pointer",
                "piVar3": "var2",
                "uVar1": "result",
                "uVar4": "value",
                "uVar5": "flag",
                "uVar9": "temp_value",
                "unaff_r4": "unaffected_register4",
                "unaff_r5": "unaffected_register5"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006c40": {
            "additional_data": {
                "FUN_080061e0": {
                    "assign_param_value": 1,
                    "fill_data": 1,
                    "modify_data": 1
                },
                "FUN_08006c40": {
                    "initialize_data": 10,
                    "initialize_data_struct": 3,
                    "initialize_data_structure": 2,
                    "initialize_function": 3,
                    "initialize_param": 2,
                    "initialize_param_array": 1,
                    "initialize_parameters": 6,
                    "initialize_params": 4
                },
                "LAB_08006fb6_1": {
                    "label": 3,
                    "label1": 3,
                    "label_1": 3,
                    "label_ptr": 1,
                    "some_label": 2
                },
                "memset": {
                    "clear_memory": 2
                },
                "param_1": {
                    "data": 7,
                    "data_array": 1,
                    "data_pointer": 2,
                    "data_struct": 3,
                    "data_structure": 2,
                    "output_array": 4,
                    "param_array": 4,
                    "parameters": 5,
                    "params": 3
                },
                "param_2": {
                    "param2_value": 1,
                    "param_value": 1,
                    "val1": 1,
                    "value1": 27,
                    "value_1": 1
                },
                "param_3": {
                    "param3_value": 1,
                    "param_size": 1,
                    "val2": 1,
                    "value2": 27,
                    "value_2": 1
                }
            },
            "called": [
                "FUN_080061e0"
            ],
            "calling": [
                "FUN_08006cb4"
            ],
            "code": "\nvoid initialize_data_struct_08006c40(undefined4 *data,undefined2 value1,undefined2 value2)\n\n{\n  *data = 0;\n  data[1] = 0;\n  data[2] = 0;\n  *(undefined2 *)(data + 3) = value1;\n  data[0x19] = 0;\n  *(undefined2 *)((int)data + 0xe) = value2;\n  data[4] = 0;\n  data[5] = 0;\n  data[6] = 0;\n  clear_memory(data + 0x17,0,8);\n  data[8] = data;\n  data[9] = 0x8006f39;\n  data[10] = 0x8006f5b;\n  data[0xb] = 0x8006f93;\n  data[0xc] = &label1;\n  return;\n}\n\n",
            "current_name": "initialize_data_struct_08006c40",
            "entrypoint": "0x08006c40",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006c40": "initialize_data_struct_08006c40",
                "LAB_08006fb6_1": "label1",
                "memset": "clear_memory",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006c88": {
            "additional_data": {
                "0": {
                    "initialized_value": 1
                },
                "0x68": {
                    "element_size": 1,
                    "sizeof_element": 1
                },
                "0x74": {
                    "sizeof_data": 1
                },
                "FUN_080061e0": {
                    "initialize_block": 2,
                    "initialize_element": 5,
                    "initialize_memory": 2,
                    "initialize_object": 1
                },
                "FUN_08006288": {
                    "clear_array": 1,
                    "clear_memory": 1,
                    "clear_object": 1,
                    "fill_memory": 1,
                    "initialize_elements": 1,
                    "initialize_memory": 1,
                    "memset_array": 1,
                    "memset_block": 1,
                    "process_data": 1,
                    "validate_allocation": 1
                },
                "FUN_08006c88": {
                    "allocate_and_initialize": 2,
                    "allocate_and_initialize_array": 6,
                    "allocate_buffer": 1,
                    "allocate_data_structure": 1,
                    "allocate_memory": 13,
                    "allocate_memory_and_initialize": 2,
                    "allocate_memory_and_initialize_struct": 1,
                    "allocate_memory_block": 1,
                    "allocate_memory_for_object": 1,
                    "initialize_data_structure": 2,
                    "initialize_memory": 1
                },
                "_malloc_r": {
                    "allocate_memory": 4,
                    "allocate_memory_r": 1,
                    "custom_malloc": 1
                },
                "iVar2": {
                    "allocated_size": 1,
                    "array_size": 3,
                    "array_size_bytes": 1,
                    "array_size_minus_one": 1,
                    "block_size": 1,
                    "buffer_size": 1,
                    "data_structure_size": 2,
                    "memory_size": 1,
                    "object_size": 1,
                    "offset": 2,
                    "struct_size": 1,
                    "total_bytes": 1,
                    "total_size": 15
                },
                "memset": {
                    "clear_memory": 1,
                    "initialize_data_with_zero": 1,
                    "initialize_memory": 3
                },
                "param_1": {
                    "array": 1,
                    "array_size": 2,
                    "block_address": 1,
                    "data_structure": 1,
                    "memory_block": 1,
                    "memory_pointer": 1,
                    "param1": 1,
                    "param_size": 1,
                    "size": 18,
                    "size_of_element": 4
                },
                "param_2": {
                    "array_size": 1,
                    "count": 14,
                    "data_structure_size": 1,
                    "fill_value": 1,
                    "memory_size": 1,
                    "num_elements": 9,
                    "num_of_elements": 3,
                    "size_of_array": 1
                },
                "param_3": {
                    "block_size": 1,
                    "element_size": 1,
                    "initialized_value": 1,
                    "size": 1,
                    "size_in_bytes": 1,
                    "size_of_memory": 1,
                    "value": 2
                },
                "puVar1": {
                    "allocated_and_initialized_memory": 1,
                    "allocated_array": 1,
                    "allocated_memory": 6,
                    "allocated_ptr": 1,
                    "array_ptr": 5,
                    "block_address": 1,
                    "buffer": 1,
                    "data_structure": 3,
                    "memory_ptr": 2,
                    "object_ptr": 1,
                    "ptr": 9
                }
            },
            "called": [
                "FUN_080061e0",
                "FUN_08006288"
            ],
            "calling": [
                "FUN_08006d14"
            ],
            "code": "\nundefined4 * allocate_memory_and_initialize_struct_08006c88(undefined4 size,int count)\n\n{\n  undefined4 *ptr;\n  int total_size;\n  \n  total_size = (count + -1) * 0x68;\n  ptr = (undefined4 *)allocate_memory(size,total_size + 0x74);\n  if (ptr != (undefined4 *)0x0) {\n    *ptr = 0;\n    ptr[1] = count;\n    ptr[2] = ptr + 3;\n    initialize_memory(ptr + 3,0,total_size + 0x68);\n  }\n  return ptr;\n}\n\n",
            "current_name": "allocate_memory_and_initialize_struct_08006c88",
            "entrypoint": "0x08006c88",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006c88": "allocate_memory_and_initialize_struct_08006c88",
                "_malloc_r": "allocate_memory",
                "iVar2": "total_size",
                "memset": "initialize_memory",
                "param_1": "size",
                "param_2": "count",
                "puVar1": "ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006cb4": {
            "additional_data": {
                "DAT_200000fc": {
                    "some_data": 1
                },
                "FUN_08006c40": {
                    "initialize_param_a": 1,
                    "initialize_parameter": 1,
                    "modify_param": 1,
                    "process_data": 1,
                    "set_initial_values": 1,
                    "set_param": 1,
                    "set_values": 2,
                    "update_parameter_with_double": 1
                },
                "FUN_08006cb4": {
                    "initialize_data": 13,
                    "initialize_function": 4,
                    "initialize_param": 1,
                    "initialize_parameters": 7,
                    "initialize_params": 3,
                    "initialize_values": 1,
                    "initialize_variable": 1,
                    "initialize_variables": 1
                },
                "FUN_08006d14": {
                    "calculate": 3,
                    "calculate_value": 1,
                    "do_something": 1,
                    "get_calculation": 1,
                    "initialize_param_c": 1,
                    "process_data": 2
                },
                "LAB_08006c34_1": {
                    "label": 3,
                    "label_1": 1,
                    "some_label": 1
                },
                "__sfp": {
                    "calculate_sfp": 1,
                    "calculate_value": 2,
                    "get_float": 2,
                    "get_float_value": 4,
                    "get_floating_point_value": 1,
                    "get_sfp": 2,
                    "get_sfp_value": 2,
                    "get_some_value": 1,
                    "retrieve_value": 1,
                    "set_parameters": 1,
                    "some_function": 1
                },
                "param_1": {
                    "array": 1,
                    "data": 8,
                    "data_array": 2,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "function_data": 1,
                    "function_parameters": 1,
                    "function_params": 1,
                    "param": 1,
                    "parameters": 9,
                    "params": 3,
                    "user_data": 1
                },
                "param_2": {
                    "param2": 3,
                    "param_a": 1,
                    "parameter2": 1,
                    "value1": 4
                },
                "param_3": {
                    "param3": 3,
                    "param_b": 1,
                    "parameter3": 1,
                    "value2": 4
                },
                "param_4": {
                    "param4": 2,
                    "param_c": 1,
                    "value3": 2,
                    "value4": 1
                },
                "puVar2": {
                    "data_pointer": 1,
                    "flag": 1,
                    "placeholder": 1,
                    "pointer": 13,
                    "pointer_var": 1,
                    "pointer_variable": 1,
                    "ptr": 3,
                    "pu_var": 1,
                    "temp_pointer": 4,
                    "temp_ptr": 3,
                    "temp_var2": 1,
                    "temporary_pointer": 1
                },
                "std_isra_0": {
                    "do_something": 2,
                    "perform_operation": 1,
                    "set_param_value": 1,
                    "set_standard": 1,
                    "set_values": 1,
                    "standard_function": 1,
                    "standard_operation": 4,
                    "standardize": 1,
                    "standardize_data": 1,
                    "standardize_float_value": 1,
                    "standardize_value": 3,
                    "std_function": 1
                },
                "uVar1": {
                    "float_value": 1,
                    "result": 18,
                    "result1": 1,
                    "return_value": 7,
                    "sfp1": 1,
                    "sfp_return1": 1,
                    "temp_var": 1,
                    "temp_var1": 1
                }
            },
            "called": [
                "FUN_08006c40",
                "FUN_08006d14"
            ],
            "calling": [
                "FUN_08006be0",
                "FUN_080068f0",
                "FUN_08006344",
                "FUN_08006d14",
                "FUN_08006394",
                "FUN_080069e4"
            ],
            "code": "\nvoid initialize_data_08006cb4(undefined4 *parameters)\n\n{\n  undefined4 result;\n  undefined4 *pointer;\n  \n  if (parameters[6] == 0) {\n    parameters[0x12] = 0;\n    parameters[0x13] = 0;\n    parameters[0x14] = 0;\n    pointer = &DAT_200000fc;\n    parameters[10] = &label;\n    if (parameters == &DAT_200000fc) {\n      pointer = (undefined4 *)0x1;\n    }\n    if (parameters == &DAT_200000fc) {\n      parameters[6] = pointer;\n    }\n    result = get_float_value();\n    parameters[1] = result;\n    result = get_float_value(parameters);\n    parameters[2] = result;\n    result = get_float_value(parameters);\n    parameters[3] = result;\n    standard_operation(parameters[1],4,0);\n    standard_operation(parameters[2],9,1);\n    standard_operation(parameters[3],0x12,2);\n    parameters[6] = 1;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_data_08006cb4",
            "entrypoint": "0x08006cb4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006cb4": "initialize_data_08006cb4",
                "LAB_08006c34_1": "label",
                "__sfp": "get_float_value",
                "param_1": "parameters",
                "puVar2": "pointer",
                "std_isra_0": "standard_operation",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006d14": {
            "additional_data": {
                "DAT_200000fc": {
                    "data_ptr": 1,
                    "global_var2": 1,
                    "initial_data": 1,
                    "initialized_data": 2,
                    "semantic_data": 1,
                    "sinit_data": 1,
                    "static_data": 1
                },
                "DAT_20000114": {
                    "critical_section_initialized": 1,
                    "data_flag": 2,
                    "global_flag": 1,
                    "global_var1": 1,
                    "initialized_flag": 2,
                    "is_initialized": 4,
                    "static_data_flag": 1,
                    "static_data_initialized": 1,
                    "static_flag": 1
                },
                "DAT_20000144": {
                    "data_structure": 2,
                    "head_node_address": 1,
                    "object_list": 1,
                    "object_pointer": 1
                },
                "FUN_080061e0": {
                    "init_data": 1,
                    "initialize_entry": 1,
                    "initialize_sub_function": 1,
                    "initialize_variable": 1
                },
                "FUN_08006c88": {
                    "allocate_memory": 4
                },
                "FUN_08006cb4": {
                    "cleanup_memory": 1,
                    "free_memory": 1,
                    "initialize_memory": 1,
                    "release_memory": 1
                },
                "FUN_08006d14": {
                    "extract_data": 1,
                    "extract_data_from_binary": 1,
                    "extract_valid_values": 1,
                    "find_initialized_ptr_array": 1,
                    "find_initialized_value": 1,
                    "find_initialized_variable": 1,
                    "find_next_unused_object": 1,
                    "find_unused_resource": 1,
                    "find_unused_session": 1,
                    "initialize_data": 5,
                    "initialize_data_structure": 7,
                    "initialize_data_structures": 2,
                    "initialize_game_data": 1,
                    "initialize_object": 1,
                    "initialize_struct": 1
                },
                "__sfmoreglue": {
                    "allocate_mem": 1,
                    "allocate_memory": 8,
                    "allocate_memory_block": 1
                },
                "__sinit": {
                    "initialize": 2,
                    "initialize_critical_section": 1,
                    "initialize_data": 1,
                    "initialize_data_struct": 1,
                    "initialize_global_data": 2,
                    "initialize_semantic_data": 1,
                    "initialize_static_data": 3,
                    "initialize_stream": 1
                },
                "memset": {
                    "clear_data_structure": 1,
                    "clear_memory": 2,
                    "initialize_memory": 1,
                    "set_memory": 4
                },
                "param_1": {
                    "array_allocation_ptr": 1,
                    "buffer": 1,
                    "data_pointer": 1,
                    "error": 1,
                    "error_code": 3,
                    "error_status": 1,
                    "game_data": 1,
                    "input_array": 2,
                    "input_ptr": 1,
                    "object_array": 1,
                    "object_ptr": 1,
                    "output": 1,
                    "output_buffer": 2,
                    "output_pointer": 2,
                    "output_ptr": 1,
                    "param1": 1,
                    "param_ptr": 1,
                    "pointer": 1,
                    "ptr": 1,
                    "ptr_common_data": 1,
                    "result": 2,
                    "result_pointer": 1,
                    "result_ptr": 1,
                    "session_array": 1,
                    "status": 1
                },
                "param_2": {
                    "arg1": 1,
                    "buffer_size": 1,
                    "common_data_size": 1,
                    "input1": 2,
                    "input_param1": 1,
                    "param": 1,
                    "param1": 2,
                    "param2": 13,
                    "param_2": 3,
                    "param_val1": 1,
                    "res1": 1,
                    "size": 1,
                    "value1": 3
                },
                "param_3": {
                    "arg2": 1,
                    "count": 1,
                    "input2": 2,
                    "input_param2": 1,
                    "param2": 2,
                    "param3": 14,
                    "param_3": 4,
                    "param_val2": 1,
                    "res2": 1,
                    "size": 1,
                    "value2": 3
                },
                "param_4": {
                    "arg3": 1,
                    "input3": 1,
                    "input_param3": 1,
                    "param": 1,
                    "param3": 2,
                    "param4": 12,
                    "param_4": 5,
                    "param_val3": 1,
                    "res3": 1,
                    "size": 2,
                    "value": 1,
                    "value3": 3
                },
                "piVar1": {
                    "current_array": 2,
                    "current_block": 1,
                    "current_chunk": 1,
                    "current_element": 1,
                    "current_entry": 1,
                    "current_item": 2,
                    "current_object": 1,
                    "current_pointer": 2,
                    "current_ptr": 4,
                    "current_ptr1": 1,
                    "current_session": 1,
                    "current_struct": 1,
                    "current_struct_pointer": 1,
                    "current_value": 1,
                    "current_variable": 1,
                    "data_array": 1,
                    "inner_array_ptr": 1,
                    "inner_loop_var1": 1,
                    "inner_ptr": 1,
                    "loop_counter": 1,
                    "pointer1": 2,
                    "ptr1": 1,
                    "resource_ptr1": 1,
                    "temp1": 1
                },
                "piVar2": {
                    "current_array": 1,
                    "current_data": 1,
                    "current_element": 2,
                    "current_inner_array_ptr": 1,
                    "current_object": 1,
                    "current_ptr2": 1,
                    "current_sub_item": 1,
                    "current_subsession": 1,
                    "current_value": 1,
                    "data_ptr": 1,
                    "inner_element": 1,
                    "inner_loop_var2": 1,
                    "inner_pointer": 1,
                    "inner_ptr": 2,
                    "inner_ptr2": 1,
                    "inner_struct_pointer": 1,
                    "nested_array_ptr": 1,
                    "nested_entry": 1,
                    "nested_struct": 1,
                    "next_item": 1,
                    "next_ptr": 1,
                    "next_variable": 1,
                    "object_pointer": 1,
                    "pointer2": 2,
                    "ptr2": 1,
                    "resource_ptr2": 1,
                    "sub_array": 1,
                    "temp2": 1
                },
                "ppiVar3": {
                    "array_list": 1,
                    "array_of_arrays_ptr": 1,
                    "array_ptr_ptr": 1,
                    "data_list": 1,
                    "data_list_ptr": 2,
                    "data_ptr_ptr": 1,
                    "data_structure": 2,
                    "data_structure_pointer": 2,
                    "data_structure_ptr": 1,
                    "linked_lists": 1,
                    "list_of_struct_pointers": 1,
                    "list_pointer": 1,
                    "nested_struct": 1,
                    "object_array_pointer": 1,
                    "object_list": 1,
                    "object_list_ptr": 1,
                    "outer_loop_var": 1,
                    "pointer_pointer": 1,
                    "pointer_ptr": 1,
                    "pointer_to_pointer": 1,
                    "ptr_array_ptr": 1,
                    "ptr_arrays": 1,
                    "ptr_ptr": 2,
                    "resource_list_ptr": 1,
                    "session_list": 1,
                    "struct_list": 1,
                    "variable_list": 1
                }
            },
            "called": [
                "FUN_080061e0",
                "FUN_08006c88",
                "FUN_08006cb4"
            ],
            "calling": [
                "FUN_08006cb4"
            ],
            "code": "\nint * initialize_data_structure_08006d14(undefined4 *error_code,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int *current_ptr;\n  int *inner_ptr;\n  int **data_structure_pointer;\n  \n  if (DAT_20000114 == 0) {\n    initialize_static_data(&DAT_200000fc);\n  }\n  data_structure_pointer = (int **)&DAT_20000144;\n  do {\n    inner_ptr = data_structure_pointer[2];\n    current_ptr = data_structure_pointer[1];\n    while (current_ptr = (int *)((int)current_ptr + -1), -1 < (int)current_ptr) {\n      if (*(short *)(inner_ptr + 3) == 0) {\n        *(undefined2 *)((int)inner_ptr + 0xe) = 0xffff;\n        inner_ptr[0x19] = 0;\n        *(undefined2 *)(inner_ptr + 3) = 1;\n        *inner_ptr = 0;\n        inner_ptr[2] = 0;\n        inner_ptr[1] = 0;\n        inner_ptr[4] = 0;\n        inner_ptr[5] = 0;\n        inner_ptr[6] = 0;\n        set_memory(inner_ptr + 0x17,0,8,1,param4);\n        inner_ptr[0xd] = 0;\n        inner_ptr[0xe] = 0;\n        inner_ptr[0x12] = 0;\n        inner_ptr[0x13] = 0;\n        return inner_ptr;\n      }\n      inner_ptr = inner_ptr + 0x1a;\n    }\n    if (*data_structure_pointer == (int *)0x0) {\n      current_ptr = (int *)allocate_memory(error_code,4);\n      *data_structure_pointer = current_ptr;\n      if (current_ptr == (int *)0x0) {\n        *error_code = 0xc;\n        return (int *)0x0;\n      }\n    }\n    data_structure_pointer = (int **)*data_structure_pointer;\n  } while( true );\n}\n\n",
            "current_name": "initialize_data_structure_08006d14",
            "entrypoint": "0x08006d14",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006d14": "initialize_data_structure_08006d14",
                "__sfmoreglue": "allocate_memory",
                "__sinit": "initialize_static_data",
                "memset": "set_memory",
                "param_1": "error_code",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "piVar1": "current_ptr",
                "piVar2": "inner_ptr",
                "ppiVar3": "data_structure_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006dc8": {
            "additional_data": {
                "F0": {
                    "extract_flags": 1
                },
                "F2": {
                    "check_file_status": 1
                },
                "F3": {
                    "update_flags": 1
                },
                "FUN_08006dc8": {
                    "check_file_access": 1,
                    "check_file_flags": 1,
                    "check_file_permission": 6,
                    "check_file_permissions": 17,
                    "check_file_stat": 1,
                    "extract_permissions": 1,
                    "get_file_permission": 1,
                    "get_file_permissions": 1,
                    "get_permissions": 1
                },
                "P0": {
                    "param_1": 1
                },
                "P1": {
                    "param_2": 1
                },
                "P2": {
                    "param_3": 1
                },
                "P3": {
                    "param_4": 1
                },
                "V0": {
                    "temp_var": 1
                },
                "V1": {
                    "local_flags": 1
                },
                "auStack_4c": {
                    "auxiliary_stack": 1,
                    "buffer": 1,
                    "file_stat_buffer": 1,
                    "stack_buffer": 5,
                    "stack_data": 2,
                    "stack_variable": 3,
                    "stat_buffer": 7,
                    "state_array": 1,
                    "status_array": 1,
                    "status_buf": 1,
                    "status_buffer": 1,
                    "status_flag": 1,
                    "temp_buffer": 3,
                    "temp_stack": 1,
                    "uninitialized_value": 1
                },
                "iVar1": {
                    "error_code": 1,
                    "file_stat_result": 1,
                    "file_status": 1,
                    "fstat_result": 2,
                    "result": 7,
                    "return_value": 1,
                    "stat_result": 1,
                    "status": 16
                },
                "local_48": {
                    "file_attributes": 1,
                    "file_mode": 24,
                    "file_permissions": 4,
                    "permission_mask": 1
                },
                "param_1": {
                    "fd": 3,
                    "file_descriptor": 27
                },
                "param_2": {
                    "file_descriptor": 1,
                    "file_info": 14,
                    "file_info_pointer": 2,
                    "file_info_ptr": 2,
                    "file_information": 1,
                    "file_metadata": 1,
                    "file_stat": 4,
                    "file_stat_buffer": 1,
                    "file_stat_data": 1,
                    "metadata": 1,
                    "stat_buffer": 1,
                    "stat_info": 1
                },
                "param_3": {
                    "access_mode": 2,
                    "access_permission": 1,
                    "file_permissions": 1,
                    "output": 1,
                    "output_flags": 1,
                    "output_result": 1,
                    "output_value": 3,
                    "permission": 2,
                    "permission_flag": 3,
                    "permission_flags": 6,
                    "permission_result": 1,
                    "permissions_ptr": 1,
                    "result": 5,
                    "result_code": 2
                },
                "param_4": {
                    "file_permission": 1,
                    "has_permission": 1,
                    "is_executable": 18,
                    "is_executable_ptr": 1,
                    "is_shared": 1,
                    "is_shared_executable": 1,
                    "output_flag": 2,
                    "output_flags": 1,
                    "output_value": 1,
                    "permission_result": 1,
                    "permission_status": 1,
                    "result_ptr": 1
                },
                "uVar2": {
                    "access_level": 1,
                    "default_access_mode": 1,
                    "default_permission": 3,
                    "default_permission_flag": 1,
                    "default_permission_value": 1,
                    "flags": 1,
                    "new_flags": 1,
                    "new_permission": 1,
                    "new_value": 1,
                    "permission": 4,
                    "permission_code": 2,
                    "permission_flag": 4,
                    "permission_mask": 1,
                    "permission_value": 2,
                    "permissions": 2,
                    "result": 2,
                    "status": 1,
                    "updated_permissions": 1
                }
            },
            "called": [
                "FUN_08007004"
            ],
            "calling": [
                "FUN_08006e10"
            ],
            "code": "\nundefined4 check_file_permissions_08006dc8(undefined4 file_descriptor,int file_info,undefined4 *permission_flags,uint *is_executable)\n\n{\n  int status;\n  undefined4 permission;\n  undefined stat_buffer [4];\n  uint file_mode;\n  \n  if ((*(short *)(file_info + 0xe) < 0) ||\n     (status = _fstat_r(file_descriptor,(int)*(short *)(file_info + 0xe),stat_buffer), status < 0)) {\n    *is_executable = 0;\n    if ((int)((uint)*(ushort *)(file_info + 0xc) << 0x18) < 0) {\n      permission = 0x40;\n      goto LAB_08006e08;\n    }\n  }\n  else {\n    *is_executable = (uint)((file_mode & 0xf000) == 0x2000);\n  }\n  permission = 0x400;\nLAB_08006e08:\n  *permission_flags = permission;\n  return 0;\n}\n\n",
            "current_name": "check_file_permissions_08006dc8",
            "entrypoint": "0x08006dc8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006dc8": "check_file_permissions_08006dc8",
                "auStack_4c": "stat_buffer",
                "iVar1": "status",
                "local_48": "file_mode",
                "param_1": "file_descriptor",
                "param_2": "file_info",
                "param_3": "permission_flags",
                "param_4": "is_executable",
                "uVar2": "permission"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006e10": {
            "additional_data": {
                "FLO__08006288": {
                    "calculate_buffer_size": 1
                },
                "FLO__08006dc8": {
                    "read_optional_data": 1
                },
                "FLO__08007028": {
                    "allocate_buffer": 1
                },
                "FUN_08006e10": {
                    "decode_and_validate_data": 1,
                    "extract_data": 1,
                    "initialize_buffer": 6,
                    "initialize_connection": 3,
                    "initialize_device": 1,
                    "initialize_file": 1,
                    "initialize_memory_block": 1,
                    "initialize_output_file": 1,
                    "initialize_variable": 1,
                    "parse_input": 2,
                    "parse_input_data": 1,
                    "process_data": 1,
                    "process_file_data": 1,
                    "process_input": 7,
                    "process_param": 2
                },
                "F_08006288": {
                    "read_data_from_buffer": 1
                },
                "F_08006dc8": {
                    "process_device_info": 1
                },
                "F_08007028": {
                    "write_data_to_buffer": 1
                },
                "LAB_08006c34_1": {
                    "placeholder": 1,
                    "variable": 1
                },
                "__swhatbuf_r": {
                    "buffer_read": 1,
                    "parse_input": 1,
                    "read_buffer": 1,
                    "read_device_data": 1
                },
                "_isatty_r": {
                    "check_terminal": 4,
                    "check_terminal_type": 1,
                    "is_terminal_device": 1
                },
                "_malloc_r": {
                    "allocate_memory": 6
                },
                "iVar2": {
                    "alloc_result": 1,
                    "allocated_buffer": 2,
                    "allocated_mem": 1,
                    "allocated_memory": 10,
                    "allocation": 3,
                    "allocation_result": 3,
                    "malloc_result": 4,
                    "memory": 1,
                    "memory_address": 1,
                    "memory_allocation": 1,
                    "memory_block": 2,
                    "memory_result": 1,
                    "result": 1
                },
                "local_14": {
                    "auxiliary_pointer": 1,
                    "dynamic_array": 1,
                    "input_buffer": 1,
                    "local_array": 1,
                    "local_block": 1,
                    "local_buffer": 3,
                    "local_params": 1,
                    "local_var": 1,
                    "local_var2": 1,
                    "local_variable2": 1,
                    "optional_data": 1,
                    "optional_params": 1,
                    "output_buffer": 1,
                    "output_params": 1,
                    "pointer": 4,
                    "ptr": 3,
                    "read_result": 1,
                    "temp_buffer": 3,
                    "temp_data": 1,
                    "temp_ptr": 2,
                    "tmp_buffer": 1
                },
                "local_18": {
                    "buffer_length": 1,
                    "data_length": 1,
                    "data_size": 2,
                    "device_size": 1,
                    "dynamic_size": 1,
                    "file_size": 2,
                    "input_size": 2,
                    "local_buffer_size": 3,
                    "local_data": 1,
                    "local_size": 1,
                    "local_var1": 1,
                    "local_variable1": 1,
                    "output_file_size": 1,
                    "param_length": 1,
                    "param_size": 1,
                    "param_value": 1,
                    "size": 6,
                    "size_of_block": 1,
                    "size_value": 1,
                    "temp_size": 1,
                    "tmp_buffer_size": 1
                },
                "param_1": {
                    "arg1": 2,
                    "buffer_size": 7,
                    "connection": 1,
                    "connection_handle": 1,
                    "connection_id": 1,
                    "context": 1,
                    "data_address": 1,
                    "data_context": 1,
                    "data_handle": 1,
                    "data_size": 1,
                    "device_handler": 1,
                    "file_descriptor": 1,
                    "input": 2,
                    "input_size": 3,
                    "memory_handle": 1,
                    "output_file_ptr": 1,
                    "param": 2,
                    "param1": 1,
                    "param_code": 1,
                    "param_pointer": 1
                },
                "param_2": {
                    "arg2": 2,
                    "array": 2,
                    "block_pointer": 1,
                    "buffer": 6,
                    "connection_params": 2,
                    "data": 1,
                    "data_array": 1,
                    "data_block": 1,
                    "data_buffer": 2,
                    "device_info": 1,
                    "file_data": 2,
                    "input": 1,
                    "input_array": 2,
                    "input_data": 1,
                    "input_data_ptr": 1,
                    "input_params": 1,
                    "output": 1,
                    "param_array": 2,
                    "parameters": 1
                },
                "uVar1": {
                    "buf_size": 1,
                    "buffer_result": 1,
                    "buffer_size": 2,
                    "buffered_data": 1,
                    "data_value": 1,
                    "flag": 1,
                    "flags": 1,
                    "result": 8,
                    "result_code": 1,
                    "return_value": 2,
                    "status": 7,
                    "status_code": 1,
                    "status_flag": 1,
                    "temp": 1,
                    "temp_var": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_08006288",
                "FUN_08007028",
                "FUN_08006dc8"
            ],
            "calling": [
                "FUN_080069e4"
            ],
            "code": "\nvoid process_input_08006e10(int buffer_size,int *buffer)\n\n{\n  ushort result;\n  int allocated_memory;\n  int size;\n  int *pointer;\n  \n  if (-1 < (int)((uint)*(ushort *)(buffer + 3) << 0x1e)) {\n    size = buffer_size;\n    pointer = buffer;\n    result = read_buffer(buffer_size,buffer,&size,&pointer);\n    allocated_memory = allocate_memory(buffer_size,size);\n    if (allocated_memory != 0) {\n      *(undefined **)(buffer_size + 0x28) = &variable;\n      *buffer = allocated_memory;\n      *(ushort *)(buffer + 3) = *(ushort *)(buffer + 3) | 0x80;\n      buffer[4] = allocated_memory;\n      buffer[5] = size;\n      if ((pointer != (int *)0x0) &&\n         (allocated_memory = check_terminal(buffer_size,(int)*(short *)((int)buffer + 0xe)), allocated_memory != 0)) {\n        *(ushort *)(buffer + 3) = *(ushort *)(buffer + 3) & 0xfffc | 1;\n      }\n      *(ushort *)(buffer + 3) = result | *(ushort *)(buffer + 3);\n      return;\n    }\n    if ((int)(short)*(ushort *)(buffer + 3) << 0x16 < 0) {\n      return;\n    }\n    *(ushort *)(buffer + 3) = *(ushort *)(buffer + 3) & 0xfffc | 2;\n  }\n  *buffer = (int)buffer + 0x47;\n  buffer[4] = (int)buffer + 0x47;\n  buffer[5] = 1;\n  return;\n}\n\n",
            "current_name": "process_input_08006e10",
            "entrypoint": "0x08006e10",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006e10": "process_input_08006e10",
                "LAB_08006c34_1": "variable",
                "__swhatbuf_r": "read_buffer",
                "_isatty_r": "check_terminal",
                "_malloc_r": "allocate_memory",
                "iVar2": "allocated_memory",
                "local_14": "pointer",
                "local_18": "size",
                "param_1": "buffer_size",
                "param_2": "buffer",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006e90": {
            "additional_data": {
                "FUN_08006e90": {
                    "find_char_index": 1,
                    "find_character": 15,
                    "find_character_in_string": 6,
                    "find_character_index": 2,
                    "find_character_position": 2,
                    "find_first_char": 1,
                    "find_first_character": 2,
                    "find_first_occurrence": 2
                },
                "param_1": {
                    "data": 1,
                    "input_string": 4,
                    "str": 2,
                    "string": 23
                },
                "param_2": {
                    "character": 22,
                    "target": 1,
                    "target_char": 4,
                    "target_character": 4
                },
                "param_3": {
                    "length": 23,
                    "string_length": 8
                },
                "pcVar1": {
                    "current": 2,
                    "current_char": 10,
                    "current_character": 5,
                    "current_position": 6,
                    "current_ptr": 2,
                    "ptr_begin": 1,
                    "ptr_current": 1
                },
                "pcVar2": {
                    "next": 2,
                    "next_char": 10,
                    "next_character": 4,
                    "next_position": 6,
                    "next_ptr": 2,
                    "ptr_current": 1,
                    "ptr_previous": 1,
                    "target_character_index": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080066b0",
                "FUN_08006394"
            ],
            "code": "\nchar * find_character_in_string_08006e90(char *string,char character,int length)\n\n{\n  char *current_char;\n  char *next_char;\n  \n  current_char = string;\n  do {\n    next_char = current_char;\n    if (next_char == string + length) {\n      return (char *)0x0;\n    }\n    current_char = next_char + 1;\n  } while (*next_char != character);\n  return next_char;\n}\n\n",
            "current_name": "find_character_in_string_08006e90",
            "entrypoint": "0x08006e90",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006e90": "find_character_in_string_08006e90",
                "param_1": "string",
                "param_2": "character",
                "param_3": "length",
                "pcVar1": "current_char",
                "pcVar2": "next_char"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006eac": {
            "called": [],
            "calling": [
                "FUN_080061f0",
                "FUN_08006288"
            ],
            "code": "\nvoid FUNC_08006eac(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08006eac",
            "entrypoint": "0x08006eac",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08006eac": "FUNC_08006eac"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08006eae": {
            "called": [],
            "calling": [
                "FUN_080061f0",
                "FUN_08006288"
            ],
            "code": "\nvoid FUNC_08006eae(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08006eae",
            "entrypoint": "0x08006eae",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08006eae": "FUNC_08006eae"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08006f00": {
            "additional_data": {
                "DAT_200000f8": {
                    "data_array": 3,
                    "result_array": 1
                },
                "DAT_200006a4": {
                    "error_code": 2,
                    "error_value": 1,
                    "temp_variable": 1
                },
                "FUN_08006f00": {
                    "execute_function": 3,
                    "execute_system_call": 1,
                    "execute_task": 1,
                    "handle_param": 1,
                    "handle_process": 1,
                    "handle_signal": 1,
                    "process_signal": 4
                },
                "_getpid_r": {
                    "get_current_pid": 1,
                    "get_process_id": 4
                },
                "_kill": {
                    "kill_process": 5
                },
                "iVar3": {
                    "array_element": 1,
                    "array_value": 1,
                    "current_index": 1,
                    "data": 3,
                    "data_value": 1,
                    "element": 2,
                    "element_index": 1,
                    "error_code": 1,
                    "function_pointer": 2,
                    "function_ptr": 1,
                    "function_result": 1,
                    "handler_address": 1,
                    "i_var3": 1,
                    "index": 1,
                    "result": 1,
                    "return_value": 2,
                    "signal_entry": 1,
                    "signal_handler_index": 1,
                    "syscall_handler": 1,
                    "temp_variable": 2,
                    "value": 3,
                    "variable": 1,
                    "variable_3": 1
                },
                "in_lr": {
                    "in_link_register": 1,
                    "return_address": 5,
                    "unknown_var_3": 1,
                    "unused3": 1,
                    "unused_3": 1,
                    "unused_register": 1,
                    "unused_register_lr": 2,
                    "unused_var3": 1,
                    "unused_variable3": 1
                },
                "param_1": {
                    "function_index": 2,
                    "index": 1,
                    "input": 8,
                    "input_param": 2,
                    "input_parameter": 2,
                    "input_value": 6,
                    "param": 1,
                    "parameter": 1,
                    "process_id": 1,
                    "signal": 2,
                    "signal_id": 1,
                    "signal_number": 2,
                    "syscall_number": 1,
                    "task_id": 1
                },
                "pcVar4": {
                    "callback": 3,
                    "code_function": 1,
                    "code_pointer": 1,
                    "function_pointer": 12,
                    "function_ptr": 10,
                    "handler_function": 1,
                    "signal_handler": 1,
                    "sub_function": 1,
                    "syscall_function": 1
                },
                "piVar1": {
                    "array_pointer": 3,
                    "data_array": 1,
                    "data_pointer": 2,
                    "data_ptr": 3,
                    "error_code_pointer": 1,
                    "pointer": 1,
                    "pointer_to_variable": 1,
                    "pointer_to_variable1": 1,
                    "pointer_var": 1,
                    "pointer_variable": 1,
                    "ptr_data": 2,
                    "ptr_i_var1": 1,
                    "result": 5,
                    "result_pointer": 1,
                    "signal_handler": 1,
                    "signal_status": 1,
                    "signal_table": 2,
                    "status": 1,
                    "task_list": 1,
                    "variable_1": 1
                },
                "puVar5": {
                    "array_pointer_copy": 1,
                    "array_pointer_temp": 1,
                    "data_array_ptr": 1,
                    "data_pointer": 1,
                    "data_pointer_ptr": 1,
                    "data_ptr": 1,
                    "error_code_pointer_copy": 1,
                    "function_ptr_address": 1,
                    "pointer": 2,
                    "pointer_to_array": 1,
                    "pointer_to_data": 3,
                    "pointer_to_pointer": 1,
                    "pointer_to_signal_handler": 1,
                    "pointer_to_signal_status": 1,
                    "pointer_to_variable": 1,
                    "pointer_to_variable2": 1,
                    "pointer_variable2": 1,
                    "ptr_data": 4,
                    "ptr_pu_var5": 1,
                    "result_pointer": 1,
                    "signal_pointer": 1,
                    "signal_table_ptr": 1,
                    "status_ptr": 1,
                    "task_manager": 1,
                    "variable_4": 1
                },
                "uVar2": {
                    "pid": 8,
                    "pid_result": 1,
                    "pid_variable": 1,
                    "process_id": 18,
                    "result": 1,
                    "return_code": 1,
                    "variable_2": 1
                },
                "unaff_r4": {
                    "temp_1": 1,
                    "unaff_register_4": 1,
                    "unknown_var_1": 1,
                    "unused1": 1,
                    "unused_1": 1,
                    "unused_register": 1,
                    "unused_register4": 1,
                    "unused_register_4": 1,
                    "unused_var1": 1,
                    "unused_variable1": 1
                },
                "unaff_r5": {
                    "temp_2": 1,
                    "unaff_register_5": 1,
                    "unknown_var_2": 1,
                    "unused2": 1,
                    "unused_2": 1,
                    "unused_register": 1,
                    "unused_register5": 1,
                    "unused_register_5": 1,
                    "unused_var2": 1,
                    "unused_variable2": 1
                }
            },
            "called": [
                "FUN_08006f34",
                "FUN_08005740"
            ],
            "calling": [
                "FUN_08006ac0"
            ],
            "code": "\nint process_signal_08006f00(uint input)\n\n{\n  int *result;\n  undefined4 process_id;\n  int data;\n  code *function_pointer;\n  undefined4 unused_variable1;\n  undefined4 unaff_register_5;\n  undefined4 return_address;\n  undefined4 *ptr_data;\n  \n  result = DAT_200000f8;\n  ptr_data = &DAT_200000f8;\n  if (0x1f < input) {\n    *DAT_200000f8 = 0x16;\n    return -1;\n  }\n  data = DAT_200000f8[0x11];\n  if ((data != 0) && (function_pointer = *(code **)(data + input * 4), function_pointer != (code *)0x0)) {\n    if (function_pointer != (code *)0x1) {\n      if (function_pointer == (code *)0xffffffff) {\n        *DAT_200000f8 = 0x16;\n        return 1;\n      }\n      *(undefined4 *)(data + input * 4) = 0;\n      (*function_pointer)(input);\n    }\n    return 0;\n  }\n  process_id = get_process_id(DAT_200000f8);\n  DAT_200006a4 = 0;\n  data = kill_process(process_id,input,input,0,ptr_data,unused_variable1,unaff_register_5,return_address);\n  if ((data == -1) && (DAT_200006a4 != 0)) {\n    *result = DAT_200006a4;\n  }\n  return data;\n}\n\n",
            "current_name": "process_signal_08006f00",
            "entrypoint": "0x08006f00",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006f00": "process_signal_08006f00",
                "_getpid_r": "get_process_id",
                "_kill": "kill_process",
                "iVar3": "data",
                "in_lr": "return_address",
                "param_1": "input",
                "pcVar4": "function_pointer",
                "piVar1": "result",
                "puVar5": "ptr_data",
                "uVar2": "process_id",
                "unaff_r4": "unused_variable1",
                "unaff_r5": "unaff_register_5"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006f34": {
            "called": [
                "FUN_08005750"
            ],
            "calling": [
                "FUN_08006f00"
            ],
            "code": "\nundefined4 _getpid(void)\n\n{\n  return 1;\n}\n\n",
            "current_name": "FUN_08006f34",
            "entrypoint": "0x08006f34",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_08006f38": {
            "additional_data": {
                "FUN_08006f38": {
                    "modify_data": 1,
                    "perform_read_and_update": 1,
                    "process_data": 3,
                    "read_and_update": 1,
                    "read_and_update_data": 2,
                    "read_and_update_value": 2,
                    "read_and_update_values": 1,
                    "update_buffer": 1,
                    "update_data": 14,
                    "update_value": 4,
                    "update_variable": 1
                },
                "FUN_0800706c": {
                    "helper_function": 1
                },
                "bVar3": {
                    "is_positive": 2,
                    "is_positive_read": 1,
                    "is_read_successful": 13,
                    "is_success": 6,
                    "is_successful": 1,
                    "is_successful_read": 2,
                    "is_valid": 2,
                    "is_valid_read": 1,
                    "read_success": 2,
                    "success": 1
                },
                "iVar1": {
                    "bytes_read": 5,
                    "num_bytes_read": 1,
                    "read_count": 1,
                    "read_result": 22,
                    "read_status": 1,
                    "return_value": 1
                },
                "param_1": {
                    "address": 1,
                    "buffer": 7,
                    "buffer_pointer": 1,
                    "data_buffer": 6,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "file_descriptor": 7,
                    "file_pointer": 1,
                    "file_ptr": 1,
                    "filename": 1,
                    "input_buffer": 1,
                    "param": 1,
                    "ptr_to_data": 1
                },
                "param_2": {
                    "buffer_offset": 2,
                    "context": 1,
                    "data": 2,
                    "data_address": 3,
                    "data_block_index": 1,
                    "data_offset": 8,
                    "data_pointer": 3,
                    "data_ptr": 2,
                    "data_struct": 2,
                    "data_structure_address": 1,
                    "offset": 1,
                    "struct_offset": 2,
                    "struct_pointer": 1,
                    "struct_ptr": 1,
                    "structure": 1
                },
                "uVar2": {
                    "calculated_value": 1,
                    "new_value": 6,
                    "new_variable": 1,
                    "updated_value": 23
                }
            },
            "called": [
                "FUN_0800706c"
            ],
            "calling": [],
            "code": "\nvoid read_and_update_data_08006f38(undefined4 file_descriptor,int data_offset)\n\n{\n  int read_result;\n  uint updated_value;\n  bool is_read_successful;\n  \n  read_result = _read_r(file_descriptor,(int)*(short *)(data_offset + 0xe));\n  is_read_successful = -1 < read_result;\n  if (is_read_successful) {\n    updated_value = *(int *)(data_offset + 0x54) + read_result;\n  }\n  else {\n    updated_value = *(ushort *)(data_offset + 0xc) & 0xffffefff;\n  }\n  if (is_read_successful) {\n    *(uint *)(data_offset + 0x54) = updated_value;\n  }\n  if (!is_read_successful) {\n    *(short *)(data_offset + 0xc) = (short)updated_value;\n  }\n  return;\n}\n\n",
            "current_name": "read_and_update_data_08006f38",
            "entrypoint": "0x08006f38",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006f38": "read_and_update_data_08006f38",
                "bVar3": "is_read_successful",
                "iVar1": "read_result",
                "param_1": "file_descriptor",
                "param_2": "data_offset",
                "uVar2": "updated_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006f5a": {
            "additional_data": {
                "FUN_08006f5a": {
                    "file_write_operation": 1,
                    "modify_and_write_file": 1,
                    "perform_write_operation": 2,
                    "reposition_and_write": 1,
                    "rewrite_binary_file": 1,
                    "update_file": 1,
                    "update_file_contents": 1,
                    "write_and_seek": 1,
                    "write_data": 7,
                    "write_data_to_file": 4,
                    "write_or_seek": 1,
                    "write_to_disk": 1,
                    "write_to_file": 8,
                    "write_to_memory": 1
                },
                "iVar1": {
                    "result": 1,
                    "write_result": 26,
                    "write_return_value": 1,
                    "write_status": 2
                },
                "in_lr": {
                    "undefined_param_6": 1,
                    "unused_3": 1,
                    "unused_var3": 3
                },
                "param_1": {
                    "buffer": 1,
                    "file_descriptor": 30
                },
                "param_2": {
                    "buffer": 6,
                    "buffer_address": 7,
                    "buffer_offset": 1,
                    "buffer_pointer": 1,
                    "data_buffer": 1,
                    "data_info": 1,
                    "data_pointer": 2,
                    "file_info": 3,
                    "file_info_ptr": 1,
                    "header": 1,
                    "header_address": 3,
                    "header_offset": 2,
                    "offset": 1,
                    "struct_pointer": 1
                },
                "param_3": {
                    "buffer": 10,
                    "buffer_address": 1,
                    "bytes_to_write": 1,
                    "data": 15,
                    "data_address": 3,
                    "data_pointer": 1
                },
                "param_4": {
                    "buffer_size": 3,
                    "byte_count": 1,
                    "count": 1,
                    "data_length": 1,
                    "data_size": 6,
                    "size": 18,
                    "size_of_data": 1
                },
                "unaff_r4": {
                    "undefined_param_4": 1,
                    "unused_1": 1,
                    "unused_var1": 3
                },
                "unaff_r5": {
                    "undefined_param_5": 1,
                    "unused_2": 1,
                    "unused_var2": 3
                }
            },
            "called": [
                "FUN_08007048",
                "FUN_08005730"
            ],
            "calling": [],
            "code": "\nvoid write_data_to_file_08006f5a(int *file_descriptor,int buffer_address,undefined4 data,undefined4 size)\n\n{\n  int write_result;\n  undefined4 unused_var1;\n  undefined4 unused_var2;\n  undefined4 unused_var3;\n  \n  if ((int)((uint)*(ushort *)(buffer_address + 0xc) << 0x17) < 0) {\n    _lseek_r(file_descriptor,(int)*(short *)(buffer_address + 0xe),0,2);\n  }\n  *(ushort *)(buffer_address + 0xc) = *(ushort *)(buffer_address + 0xc) & 0xefff;\n  DAT_200006a4 = 0;\n  write_result = _write((int)*(short *)(buffer_address + 0xe),data,size,size,size,unused_var1,unused_var2,\n                 unused_var3);\n  if ((write_result == -1) && (DAT_200006a4 != 0)) {\n    *file_descriptor = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "current_name": "write_data_to_file_08006f5a",
            "entrypoint": "0x08006f5a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006f5a": "write_data_to_file_08006f5a",
                "iVar1": "write_result",
                "in_lr": "unused_var3",
                "param_1": "file_descriptor",
                "param_2": "buffer_address",
                "param_3": "data",
                "param_4": "size",
                "unaff_r4": "unused_var1",
                "unaff_r5": "unused_var2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006f92": {
            "additional_data": {
                "FUN_08006f92": {
                    "file_seek": 2,
                    "handle_lseek": 1,
                    "handle_seek_operation": 1,
                    "improve_file_access": 1,
                    "perform_file_operation": 2,
                    "perform_seek_operation": 1,
                    "resolve_file_seek": 1,
                    "seek_and_modify_flag": 2,
                    "seek_and_set_flag": 6,
                    "seek_and_set_status": 1,
                    "seek_and_update_flag": 3,
                    "seek_and_update_status": 1,
                    "seek_func": 1,
                    "update_file_offset": 1,
                    "update_file_permissions": 1,
                    "update_file_position": 2,
                    "update_file_position_status": 1,
                    "update_file_seek": 1,
                    "update_file_status": 1,
                    "update_seek_position": 1
                },
                "FUN_08007048": {
                    "perform_action": 1
                },
                "_lseek_r": {
                    "seek_function": 1
                },
                "bVar3": {
                    "is_error": 5,
                    "is_fail": 1,
                    "is_lseek_fail": 1,
                    "is_lseek_failed": 1,
                    "is_seek_error": 10,
                    "is_seek_failed": 5,
                    "is_seek_success": 1,
                    "seek_error": 2,
                    "seek_failed": 5
                },
                "iVar1": {
                    "file_offset": 1,
                    "lseek_result": 2,
                    "result": 2,
                    "seek_result": 25,
                    "seek_return_value": 1
                },
                "param_1": {
                    "fd": 4,
                    "file_descriptor": 25,
                    "seek_descriptor": 1,
                    "stream": 1
                },
                "param_2": {
                    "buf": 1,
                    "buffer": 2,
                    "buffer_address": 2,
                    "buffer_offset": 1,
                    "context": 1,
                    "data": 2,
                    "data_buffer": 1,
                    "data_object": 1,
                    "data_pointer": 1,
                    "data_struct": 2,
                    "data_structure": 1,
                    "payload_address": 1,
                    "struct_address": 7,
                    "struct_pointer": 2,
                    "struct_ptr": 3,
                    "structure_address": 3
                },
                "uVar2": {
                    "file_permissions": 1,
                    "file_status": 1,
                    "flag": 6,
                    "flag_update": 1,
                    "flag_value": 3,
                    "flags": 5,
                    "modified_flag": 3,
                    "modified_flags": 3,
                    "modified_status": 1,
                    "new_status": 2,
                    "updated_flag": 2,
                    "updated_flags": 2,
                    "updated_permissions": 1
                }
            },
            "called": [
                "FUN_08007048"
            ],
            "calling": [],
            "code": "\nvoid seek_and_set_flag_08006f92(undefined4 file_descriptor,int struct_address)\n\n{\n  int seek_result;\n  ushort flag;\n  bool is_seek_error;\n  \n  seek_result = seek_function(file_descriptor,(int)*(short *)(struct_address + 0xe));\n  is_seek_error = seek_result == -1;\n  if (is_seek_error) {\n    flag = *(ushort *)(struct_address + 0xc) & 0xefff;\n  }\n  else {\n    *(int *)(struct_address + 0x54) = seek_result;\n    flag = *(ushort *)(struct_address + 0xc) | 0x1000;\n  }\n  if (is_seek_error) {\n    *(ushort *)(struct_address + 0xc) = flag;\n  }\n  if (!is_seek_error) {\n    *(ushort *)(struct_address + 0xc) = flag;\n  }\n  return;\n}\n\n",
            "current_name": "seek_and_set_flag_08006f92",
            "entrypoint": "0x08006f92",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006f92": "seek_and_set_flag_08006f92",
                "_lseek_r": "seek_function",
                "bVar3": "is_seek_error",
                "iVar1": "seek_result",
                "param_1": "file_descriptor",
                "param_2": "struct_address",
                "uVar2": "flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007004": {
            "additional_data": {
                "DAT_200006a4": {
                    "current_file_size": 1,
                    "error_value": 1,
                    "file_status": 1,
                    "saved_status": 1
                },
                "FUN_0800571a": {
                    "file_status_check": 1,
                    "get_file_status": 1
                },
                "FUN_08007004": {
                    "check_and_assign_error": 1,
                    "check_and_assign_error_code": 1,
                    "check_and_assign_file_size": 1,
                    "check_and_assign_file_stats": 1,
                    "check_and_set_error_code": 1,
                    "check_and_set_file_size": 1,
                    "check_and_set_file_status": 1,
                    "check_and_set_param": 1,
                    "check_and_update_file_size": 1,
                    "check_file_status": 2,
                    "file_stat_and_assign_error": 1,
                    "get_file_attributes": 1,
                    "get_file_size": 3,
                    "get_file_stats": 1,
                    "get_file_status": 5,
                    "get_fstat_and_write_param1": 1,
                    "set_error_code_if_needed": 1,
                    "stat_and_assign": 1,
                    "stat_function": 1,
                    "update_file_stat": 1,
                    "update_file_status": 1,
                    "update_parameter_value": 1,
                    "verify_and_assign": 1
                },
                "_fstat": {
                    "get_file_status": 3
                },
                "iVar1": {
                    "file_stat_result": 3,
                    "file_stats_result": 1,
                    "file_status": 6,
                    "fstat_result": 2,
                    "result": 2,
                    "stat_result": 6,
                    "status": 6,
                    "status_check": 1,
                    "status_check_result": 1,
                    "status_code": 1,
                    "status_result": 1
                },
                "param_1": {
                    "error_code": 2,
                    "file_attributes": 1,
                    "file_descriptor": 1,
                    "file_size": 2,
                    "file_size_ptr": 1,
                    "file_status": 3,
                    "file_status_pointer": 1,
                    "output_data": 1,
                    "output_error": 1,
                    "output_error_code": 1,
                    "output_size": 1,
                    "output_value": 2,
                    "result": 12,
                    "result_pointer": 1,
                    "return_value": 1
                },
                "param_2": {
                    "fd": 2,
                    "file_descriptor": 26,
                    "file_name": 1,
                    "file_path": 1,
                    "mode": 1
                },
                "param_3": {
                    "buffer": 3,
                    "file_stat": 1,
                    "file_status": 1,
                    "stat_buf": 1,
                    "stat_buffer": 16,
                    "stat_buffer_ptr": 1,
                    "stat_struct": 6,
                    "stat_structure_pointer": 2
                },
                "param_4": {
                    "buffer": 1,
                    "buffer_size": 14,
                    "error_message": 1,
                    "file_descriptor2": 1,
                    "file_descriptor_stat": 1,
                    "file_name": 1,
                    "file_permission": 1,
                    "file_permissions": 1,
                    "mode": 1,
                    "path": 2,
                    "pathname": 2,
                    "size": 2,
                    "stat_buffer_size": 2,
                    "stat_size": 1
                }
            },
            "called": [
                "FUN_0800571a"
            ],
            "calling": [
                "FUN_08006dc8"
            ],
            "code": "\nvoid get_file_status_08007004(int *result,undefined4 file_descriptor,undefined4 stat_buffer,undefined4 buffer_size)\n\n{\n  int stat_result;\n  \n  DAT_200006a4 = 0;\n  stat_result = get_file_status_08007004(file_descriptor,stat_buffer,stat_buffer,0,buffer_size);\n  if ((stat_result == -1) && (DAT_200006a4 != 0)) {\n    *result = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "current_name": "get_file_status_08007004",
            "entrypoint": "0x08007004",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007004": "get_file_status_08007004",
                "_fstat": "get_file_status",
                "iVar1": "stat_result",
                "param_1": "result",
                "param_2": "file_descriptor",
                "param_3": "stat_buffer",
                "param_4": "buffer_size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007028": {
            "additional_data": {
                "DAT_200006a4": {
                    "default_value": 2,
                    "saved_output": 1,
                    "saved_result": 1,
                    "saved_status": 2,
                    "saved_terminal_state": 1,
                    "stored_value": 1
                },
                "FUN_08007028": {
                    "check_and_assign_output": 1,
                    "check_and_assign_stdout": 1,
                    "check_and_assign_tty": 1,
                    "check_and_assign_tty_status": 3,
                    "check_and_assign_value": 1,
                    "check_and_set_output_value": 1,
                    "check_and_set_terminal_status": 1,
                    "check_and_store_return_value": 1,
                    "check_and_update_tty_status": 1,
                    "check_console_status": 1,
                    "check_is_atty_and_set_value": 1,
                    "check_is_terminal": 2,
                    "check_isatty": 1,
                    "check_stdin": 1,
                    "check_terminal_and_set_param": 1,
                    "check_terminal_status": 2,
                    "detect_and_set_output": 1,
                    "initialize_data": 1,
                    "initialize_terminal_state": 2,
                    "set_environment_variable": 1,
                    "set_terminal_number": 1,
                    "update_and_check_param": 1,
                    "update_param1_if_not_tty": 1,
                    "update_param_and_check_tty": 1,
                    "update_param_with_value": 1,
                    "update_terminal_state": 1
                },
                "_isatty": {
                    "check_if_terminal": 1,
                    "check_terminal_status": 2,
                    "check_tty_status": 1,
                    "get_tty_status": 2,
                    "is_terminal_check": 1
                },
                "iVar1": {
                    "is_atty_check_result": 1,
                    "is_input_handle_terminal": 1,
                    "is_interactive": 1,
                    "is_terminal": 8,
                    "is_tty": 10,
                    "result": 2
                },
                "param_1": {
                    "output": 1,
                    "output_buffer": 1,
                    "output_pointer": 2,
                    "output_ptr": 1,
                    "output_state": 1,
                    "output_status": 1,
                    "output_value": 5,
                    "output_variable": 2,
                    "result": 7,
                    "result_pointer": 1,
                    "return_value": 1,
                    "status_pointer": 2,
                    "status_ptr": 1,
                    "stdout_value": 1,
                    "terminal_number": 1,
                    "terminal_status": 2,
                    "tty_status": 1
                },
                "param_2": {
                    "file_descriptor": 25,
                    "input": 1,
                    "input_handle": 1,
                    "input_value": 1,
                    "input_variable": 1,
                    "stream_descriptor": 1,
                    "tty_descriptor": 1
                }
            },
            "called": [
                "FUN_08005724"
            ],
            "calling": [
                "FUN_08006e10"
            ],
            "code": "\nvoid check_and_assign_tty_status_08007028(int *result,undefined4 file_descriptor)\n\n{\n  int is_tty;\n  \n  DAT_200006a4 = 0;\n  is_tty = check_terminal_status(file_descriptor);\n  if ((is_tty == -1) && (DAT_200006a4 != 0)) {\n    *result = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "current_name": "check_and_assign_tty_status_08007028",
            "entrypoint": "0x08007028",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007028": "check_and_assign_tty_status_08007028",
                "_isatty": "check_terminal_status",
                "iVar1": "is_tty",
                "param_1": "result",
                "param_2": "file_descriptor"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007048": {
            "additional_data": {
                "DAT_200006a4": {
                    "error_code": 1
                },
                "FUN_08007048": {
                    "adjust_file_pointer": 1,
                    "find_and_set_file_offset": 1,
                    "find_and_store_offset": 1,
                    "improve_seek_and_assign": 1,
                    "improved_seek": 1,
                    "reverse_and_set_position": 1,
                    "reverse_and_update": 1,
                    "reverse_binary_seek": 1,
                    "seek_and_copy_error": 1,
                    "seek_and_copy_integer": 1,
                    "seek_and_read": 1,
                    "seek_and_return_value": 1,
                    "seek_and_set_error": 1,
                    "seek_and_set_param": 2,
                    "seek_and_set_value": 1,
                    "seek_and_store_error": 2,
                    "set_file_offset": 1,
                    "set_file_position": 1,
                    "set_seek_position": 1
                },
                "iVar1": {
                    "file_seek_result": 1,
                    "lseek_result": 2,
                    "result": 3,
                    "return_code": 1,
                    "seek_result": 21
                },
                "param_1": {
                    "error_ptr": 1,
                    "file_descriptor": 3,
                    "file_offset": 1,
                    "output": 1,
                    "output_integer": 1,
                    "output_ptr": 1,
                    "output_status": 1,
                    "output_value": 1,
                    "result": 20,
                    "result_buffer": 1
                },
                "param_2": {
                    "file_descriptor": 29,
                    "file_descriptor2": 1,
                    "offset": 1
                },
                "param_3": {
                    "offset": 30,
                    "whence": 1
                },
                "param_4": {
                    "length": 1,
                    "origin": 13,
                    "seek_origin": 1,
                    "whence": 16
                }
            },
            "called": [
                "FUN_08005728"
            ],
            "calling": [
                "FUN_08006f5a",
                "FUN_08006f92"
            ],
            "code": "\nvoid seek_and_copy_integer_08007048(int *result,undefined4 file_descriptor,undefined4 offset,undefined4 whence)\n\n{\n  int seek_result;\n  \n  DAT_200006a4 = 0;\n  seek_result = _lseek(file_descriptor,offset,whence,whence,whence);\n  if ((seek_result == -1) && (DAT_200006a4 != 0)) {\n    *result = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "current_name": "seek_and_copy_integer_08007048",
            "entrypoint": "0x08007048",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007048": "seek_and_copy_integer_08007048",
                "iVar1": "seek_result",
                "param_1": "result",
                "param_2": "file_descriptor",
                "param_3": "offset",
                "param_4": "whence"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800706c": {
            "additional_data": {
                "DAT_200006a4": {
                    "error_value": 1
                },
                "FUN_0800706c": {
                    "improved_read_file": 1,
                    "process_data": 1,
                    "read_and_assign": 1,
                    "read_and_assign_data": 1,
                    "read_and_assign_error": 9,
                    "read_and_assign_error_code": 2,
                    "read_and_assign_value": 1,
                    "read_and_check_error": 1,
                    "read_and_check_status": 1,
                    "read_and_set_data": 1,
                    "read_and_set_param": 1,
                    "read_and_set_value": 1,
                    "read_and_store": 1,
                    "read_and_store_data_error_handling": 1,
                    "read_and_store_error": 3,
                    "read_and_store_error_code": 1,
                    "read_and_store_if_error": 1,
                    "read_and_store_value": 2
                },
                "iVar1": {
                    "read_result": 26,
                    "read_return_value": 1,
                    "read_status": 1,
                    "result": 1
                },
                "param_1": {
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "error_code": 2,
                    "error_code_ptr": 1,
                    "error_storage": 1,
                    "output": 3,
                    "output_param": 1,
                    "output_pointer": 1,
                    "output_value": 5,
                    "result": 11,
                    "result_ptr": 2,
                    "target_error": 1,
                    "value_ptr": 1
                },
                "param_2": {
                    "file_descriptor": 26,
                    "input_address": 1,
                    "input_data": 1,
                    "source": 2,
                    "source_file_descriptor": 1
                },
                "param_3": {
                    "buffer": 30,
                    "buffer_ptr": 1
                },
                "param_4": {
                    "count": 22,
                    "size": 9
                }
            },
            "called": [
                "FUN_0800572c"
            ],
            "calling": [
                "FUN_08006f38"
            ],
            "code": "\nvoid read_and_assign_error_code_0800706c(int *result,undefined4 file_descriptor,undefined4 buffer,undefined4 count)\n\n{\n  int read_result;\n  \n  DAT_200006a4 = 0;\n  read_result = _read(file_descriptor,buffer,count,count,count);\n  if ((read_result == -1) && (DAT_200006a4 != 0)) {\n    *result = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "current_name": "read_and_assign_error_code_0800706c",
            "entrypoint": "0x0800706c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800706c": "read_and_assign_error_code_0800706c",
                "iVar1": "read_result",
                "param_1": "result",
                "param_2": "file_descriptor",
                "param_3": "buffer",
                "param_4": "count"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007090": {
            "additional_data": {
                "FUN_08007090": {
                    "handle_abort_and_set_flags": 2,
                    "handle_and_exit": 2,
                    "handle_critical_errors": 1,
                    "handle_data_errors": 1,
                    "handle_error": 2,
                    "handle_error_and_exit": 13,
                    "handle_jumptable": 1,
                    "handle_main_function": 1,
                    "initialize_data": 5,
                    "initialize_variables": 1,
                    "process_data": 1
                },
                "UNRECOVERED_JUMPTABLE": {
                    "handle_error_jumptable": 1,
                    "jmp_table": 2,
                    "jump_table": 12,
                    "jump_table_function": 1,
                    "jumptable": 2,
                    "next_function": 2
                },
                "abort": {
                    "": 1
                },
                "handle_error_and_exit_08006ac0": {
                    "handle_error_and_exit": 20
                }
            },
            "called": [
                "FUN_08006ac0"
            ],
            "calling": [
                "FUN_080060d4"
            ],
            "code": "\nvoid handle_error_and_exit_08007090(void)\n\n{\n  code *jump_table;\n  \n  jump_table = handle_error_and_exit_08007090;\n  abort();\n  if (-1 < DAT_2000062c << 0x1f) {\n    DAT_2000062c = 1;\n  }\n  if (-1 < DAT_20000628 << 0x1f) {\n    DAT_20000628 = 1;\n  }\n  if (-1 < DAT_20000624 << 0x1f) {\n    DAT_20000624 = 1;\n  }\n  if (-1 < DAT_20000620 << 0x1f) {\n    DAT_20000620 = 1;\n  }\n  if (-1 < DAT_2000061c << 0x1f) {\n    DAT_2000061c = 1;\n  }\n  if (-1 < DAT_20000618 << 0x1f) {\n    DAT_20000618 = 1;\n  }\n  if (-1 < DAT_20000614 << 0x1f) {\n    DAT_20000614 = 1;\n  }\n  if (-1 < DAT_20000610 << 0x1f) {\n    DAT_20000610 = 1;\n  }\n  if (-1 < DAT_2000060c << 0x1f) {\n    DAT_2000060c = 1;\n  }\n  if (-1 < DAT_20000608 << 0x1f) {\n    DAT_20000608 = 1;\n  }\n  if (-1 < DAT_20000604 << 0x1f) {\n    DAT_20000604 = 1;\n  }\n  if (-1 < DAT_20000600 << 0x1f) {\n    DAT_20000600 = 1;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08007128. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)();\n  return;\n}\n\n",
            "current_name": "handle_error_and_exit_08007090",
            "entrypoint": "0x08007090",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007090": "handle_error_and_exit_08007090",
                "UNRECOVERED_JUMPTABLE": "jump_table"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007328": {
            "called": [],
            "calling": [
                "FUN_08006198",
                "FUN_0800010c"
            ],
            "code": "\nvoid FUNC_08007328(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08007328",
            "entrypoint": "0x08007328",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08007328": "FUNC_08007328"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08007334": {
            "called": [],
            "calling": [],
            "code": "\nvoid FUNC_08007334(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08007334",
            "entrypoint": "0x08007334",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08007334": "FUNC_08007334"
            },
            "skipped": true,
            "tags": []
        }
    },
    "layers": [
        [
            "FUN_0800010c",
            "FUN_08000178",
            "FUN_08000190",
            "FUN_08000194",
            "FUN_0800040c",
            "FUN_0800042c",
            "FUN_080006d4",
            "FUN_080008ba",
            "FUN_0800092c",
            "FUN_080009a8",
            "FUN_080009b8",
            "FUN_080009c8",
            "FUN_080009dc",
            "FUN_080009f0",
            "FUN_08000a04",
            "FUN_08000a18",
            "FUN_08000a2c",
            "FUN_08000a58",
            "FUN_08000aa8",
            "FUN_08000ae8",
            "FUN_08000aec",
            "FUN_08000b08",
            "FUN_08001294",
            "FUN_080012a2",
            "FUN_080012c0",
            "FUN_080012e8",
            "FUN_08001310",
            "FUN_0800134e",
            "FUN_0800135a",
            "FUN_08001366",
            "FUN_0800138e",
            "FUN_080013a4",
            "FUN_08001550",
            "FUN_0800157c",
            "FUN_080015b2",
            "FUN_080015f8",
            "FUN_080016b4",
            "FUN_08001814",
            "FUN_08001918",
            "FUN_08001960",
            "FUN_080019f6",
            "FUN_08001a44",
            "FUN_08001a66",
            "FUN_08001b48",
            "FUN_08001be8",
            "FUN_08001c32",
            "FUN_08001c3c",
            "FUN_08001c88",
            "FUN_08001cac",
            "FUN_08001cc4",
            "FUN_08001cd0",
            "FUN_08001e40",
            "FUN_08001e48",
            "FUN_08001f80",
            "FUN_08001f84",
            "FUN_08002004",
            "FUN_080020f0",
            "FUN_0800213c",
            "FUN_0800224c",
            "FUN_08002348",
            "FUN_08002384",
            "FUN_08002470",
            "FUN_08002494",
            "FUN_080024f8",
            "FUN_08002514",
            "FUN_08002540",
            "FUN_08002560",
            "FUN_08002582",
            "FUN_0800258c",
            "FUN_08002624",
            "FUN_08002810",
            "FUN_0800281e",
            "FUN_0800282c",
            "FUN_08002848",
            "FUN_080028d2",
            "FUN_080028de",
            "FUN_08002ab8",
            "FUN_08002ad8",
            "FUN_08002af8",
            "FUN_08002b84",
            "FUN_08002c10",
            "FUN_08002c54",
            "FUN_08002ca6",
            "FUN_08002cf2",
            "FUN_08002d1c",
            "FUN_08002db2",
            "FUN_08002efc",
            "FUN_08002f9c",
            "FUN_0800306c",
            "FUN_0800316c",
            "FUN_080032b4",
            "FUN_080033b8",
            "FUN_08003520",
            "FUN_0800365c",
            "FUN_08003688",
            "FUN_08003a68",
            "FUN_08003ad4",
            "FUN_08003afa",
            "FUN_08003c44",
            "FUN_08003c50",
            "FUN_08003c70",
            "FUN_08003c90",
            "FUN_08003da4",
            "FUN_08003ea0",
            "FUN_08003ed8",
            "FUN_08003f18",
            "FUN_08004092",
            "FUN_080040b0",
            "FUN_08004110",
            "FUN_0800412c",
            "FUN_0800417c",
            "FUN_08004198",
            "FUN_08004204",
            "FUN_080043b4",
            "FUN_0800441a",
            "FUN_08004478",
            "FUN_0800455a",
            "FUN_080045a2",
            "FUN_080045fe",
            "FUN_08004618",
            "FUN_080046b8",
            "FUN_080047e8",
            "FUN_080047f4",
            "FUN_0800480a",
            "FUN_08004828",
            "FUN_08004848",
            "FUN_08004884",
            "FUN_0800492c",
            "FUN_08004948",
            "FUN_08004974",
            "FUN_080049f0",
            "FUN_08004a4c",
            "FUN_08004b34",
            "FUN_08004b3c",
            "FUN_08004b94",
            "FUN_08004b9e",
            "FUN_08004bb0",
            "FUN_08004c30",
            "FUN_08004c48",
            "FUN_08004c52",
            "FUN_08004c5e",
            "FUN_08004c78",
            "FUN_08004c8a",
            "FUN_08004ca2",
            "FUN_08004cb2",
            "FUN_08004cce",
            "FUN_08004ce2",
            "FUN_08004d06",
            "FUN_08004d18",
            "FUN_08004d40",
            "FUN_08004d44",
            "FUN_08004d90",
            "FUN_08004df4",
            "FUN_08004df8",
            "FUN_08004e12",
            "FUN_08004e20",
            "FUN_08004e70",
            "FUN_08004e74",
            "FUN_08004ec4",
            "FUN_08004ef4",
            "FUN_08004f4c",
            "FUN_08005384",
            "FUN_080053d4",
            "FUN_0800548c",
            "FUN_080054b0",
            "FUN_080054d4",
            "FUN_08005510",
            "FUN_08005568",
            "FUN_080055bc",
            "FUN_080055e0",
            "FUN_08005604",
            "FUN_080056d8",
            "FUN_08005714",
            "FUN_0800571a",
            "FUN_08005724",
            "FUN_08005728",
            "FUN_0800572c",
            "FUN_08005730",
            "FUN_0800573c",
            "FUN_08005740",
            "FUN_08005750",
            "FUN_08005754",
            "FUN_080057b4",
            "FUN_08005848",
            "FUN_08005890",
            "FUN_080058e0",
            "FUN_0800591e",
            "FUN_0800598a",
            "FUN_08005a44",
            "FUN_08005a68",
            "FUN_08005b24",
            "FUN_08005b3c",
            "FUN_08005b54",
            "FUN_08005bb0",
            "FUN_08005c1c",
            "FUN_08005c38",
            "FUN_08005c96",
            "FUN_08005cb6",
            "FUN_08005cc0",
            "FUN_08005ce8",
            "FUN_08005d8a",
            "FUN_08005f2c",
            "FUN_08005f6c",
            "FUN_08005f8c",
            "FUN_08005fc8",
            "FUN_080060e4",
            "FUN_08006112",
            "FUN_0800611c",
            "FUN_08006158",
            "FUN_08006174",
            "FUN_08006198",
            "FUN_080061e0",
            "FUN_080061f0",
            "FUN_08006288",
            "FUN_08006344",
            "FUN_08006370",
            "FUN_08006394",
            "FUN_080065c0",
            "FUN_080066b0",
            "FUN_080068f0",
            "FUN_08006920",
            "FUN_080069e4",
            "FUN_08006ac0",
            "FUN_08006be0",
            "FUN_08006c40",
            "FUN_08006c88",
            "FUN_08006cb4",
            "FUN_08006d14",
            "FUN_08006dc8",
            "FUN_08006e10",
            "FUN_08006e90",
            "FUN_08006f00",
            "FUN_08006f38",
            "FUN_08006f5a",
            "FUN_08006f92",
            "FUN_08007004",
            "FUN_08007028",
            "FUN_08007048",
            "FUN_0800706c"
        ],
        [
            "FUN_080004f8",
            "FUN_0800074c",
            "FUN_08000bcc",
            "FUN_080014ba",
            "FUN_080018f8",
            "FUN_08001ab0",
            "FUN_08005cd4",
            "FUN_08005d42",
            "FUN_08005f40",
            "FUN_08005f5e"
        ],
        [
            "FUN_08001510",
            "FUN_08001b18",
            "FUN_08005d82"
        ],
        [
            "FUN_08000cd0",
            "FUN_08005da8"
        ],
        [
            "FUN_080060d4",
            "FUN_08007090"
        ]
    ],
    "locked_functions": [],
    "used_tokens": 920681
}