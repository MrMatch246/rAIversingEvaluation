{
  "functions": {
    "FUN_000800f4": {
      "entrypoint": "0x000800f4",
      "current_name": "FUN_000800f4",
      "code": "\n/* WARNING: Removing unreachable block (ram,0x00080100) */\n\nundefined4 FUN_000800f4(undefined4 param_1)\n\n{\n  if ((char)DAT_2007089c \u003d\u003d \u0027\\0\u0027) {\n    DAT_2007089c._0_1_ \u003d \u0027\\x01\u0027;\n  }\n  return param_1;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00080118": {
      "entrypoint": "0x00080118",
      "current_name": "FUN_00080118",
      "code": "\n/* WARNING: Removing unreachable block (ram,0x0008011e) */\n/* WARNING: Removing unreachable block (ram,0x00080130) */\n\n\nvoid FUN_00080118(void)\n\n{\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00081d7c"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00080164": {
      "entrypoint": "0x00080164",
      "current_name": "FUN_00080164",
      "code": "\nvoid FUN_00080164(int **param_1)\n\n{\n  int iVar1;\n  \n  *param_1 \u003d \u0026DAT_20070b60;\n  (**(code **)(DAT_20070b60 + 0x18))(\u0026DAT_20070b60);\n  if (1 \u003c *(byte *)((int)param_1 + 6)) {\n    pinMode(*(byte *)((int)param_1 + 6),1);\n    digitalWrite(*(undefined *)((int)param_1 + 6),0);\n  }\n  do {\n    iVar1 \u003d (**(code **)(**param_1 + 0xc))();\n  } while (-1 \u003c iVar1);\n  *(undefined *)((int)param_1 + 0x49) \u003d 0;\n  *(undefined *)((int)param_1 + 0x4a) \u003d 0;\n  *(undefined2 *)(param_1 + 0x15) \u003d 0;\n  *(undefined2 *)((int)param_1 + 0x52) \u003d 0;\n  *(undefined2 *)(param_1 + 0x14) \u003d 0;\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_000804a8"
      ],
      "called": [
        "FUN_00081210",
        "FUN_00081318"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_000801b0": {
      "entrypoint": "0x000801b0",
      "current_name": "FUN_000801b0",
      "code": "\nint FUN_000801b0(int **param_1)\n\n{\n  bool bVar1;\n  undefined uVar2;\n  char cVar3;\n  int iVar4;\n  byte bVar5;\n  \n  if (1 \u003c *(byte *)((int)param_1 + 6)) {\n    digitalWrite(*(byte *)((int)param_1 + 6),0);\n  }\n  bVar1 \u003d false;\n  *(undefined *)((int)param_1 + 0x49) \u003d 0;\n  if (*(byte *)((int)param_1 + 5) \u003c 4) {\n    while (iVar4 \u003d (**(code **)(**param_1 + 8))(), iVar4 !\u003d 0) {\n      bVar5 \u003d *(byte *)((int)param_1 + 0x49);\n      uVar2 \u003d (**(code **)(**param_1 + 0xc))();\n      cVar3 \u003d *(char *)((int)param_1 + 0x49);\n      *(undefined *)((int)param_1 + bVar5 + 9) \u003d uVar2;\n      bVar5 \u003d cVar3 + 1;\n      *(byte *)((int)param_1 + 0x49) \u003d bVar5;\n      if (0x3f \u003c bVar5) {\n        bVar1 \u003d true;\n      }\n    }\n  }\n  *(short *)(param_1 + 0x14) \u003d *(short *)(param_1 + 0x14) + 1;\n  if (bVar1) {\n    cVar3 \u003d -3;\n    *(short *)(param_1 + 0x15) \u003d *(short *)(param_1 + 0x15) + 1;\n  }\n  else {\n    cVar3 \u003d *(char *)((int)param_1 + 0x49);\n  }\n  return (int)cVar3;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_0008043e"
      ],
      "called": [
        "FUN_00081318"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0008021c": {
      "entrypoint": "0x0008021c",
      "current_name": "FUN_0008021c",
      "code": "\nuint FUN_0008021c(int param_1,uint param_2)\n\n{\n  int iVar1;\n  uint uVar2;\n  char cVar3;\n  uint uVar4;\n  \n  uVar2 \u003d 0xffff;\n  for (iVar1 \u003d param_1; (iVar1 - param_1 \u0026 0xffU) \u003c param_2; iVar1 \u003d iVar1 + 1) {\n    uVar2 \u003d uVar2 ^ *(byte *)(iVar1 + 9);\n    cVar3 \u003d \u0027\\b\u0027;\n    do {\n      uVar4 \u003d uVar2 \u0026 1;\n      uVar2 \u003d uVar2 \u003e\u003e 1;\n      if (uVar4 !\u003d 0) {\n        uVar2 \u003d uVar2 ^ 0xa001;\n      }\n      cVar3 \u003d cVar3 + -1;\n    } while (cVar3 !\u003d \u0027\\0\u0027);\n  }\n  return (uVar2 \u0026 0xff) \u003c\u003c 8 | uVar2 \u003e\u003e 8;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00080258"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00080258": {
      "entrypoint": "0x00080258",
      "current_name": "FUN_00080258",
      "code": "\nvoid FUN_00080258(int **param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  byte bVar1;\n  undefined2 uVar2;\n  int iVar3;\n  uint uVar4;\n  \n  bVar1 \u003d *(byte *)((int)param_1 + 0x49);\n  uVar4 \u003d (uint)bVar1;\n  uVar2 \u003d calcCRC(param_1,uVar4,param_3,param_4,param_4);\n  *(char *)((int)param_1 + uVar4 + 9) \u003d (char)((ushort)uVar2 \u003e\u003e 8);\n  *(char *)((int)param_1 + (uVar4 + 1 \u0026 0xff) + 9) \u003d (char)uVar2;\n  *(byte *)((int)param_1 + 0x49) \u003d bVar1 + 2;\n  if (1 \u003c *(byte *)((int)param_1 + 6)) {\n    digitalWrite(*(byte *)((int)param_1 + 6),1);\n  }\n  if (*(byte *)((int)param_1 + 5) \u003c 4) {\n    (**(code **)(**param_1 + 4))(*param_1,(int)param_1 + 9,*(undefined *)((int)param_1 + 0x49));\n  }\n  if (1 \u003c *(byte *)((int)param_1 + 6)) {\n    digitalWrite(*(byte *)((int)param_1 + 6),0);\n  }\n  if (*(byte *)((int)param_1 + 5) \u003c 4) {\n    do {\n      iVar3 \u003d (**(code **)(**param_1 + 0xc))();\n    } while (-1 \u003c iVar3);\n  }\n  *(undefined *)((int)param_1 + 0x49) \u003d 0;\n  iVar3 \u003d millis();\n  param_1[0x17] \u003d (int *)(iVar3 + (uint)*(ushort *)((int)param_1 + 0x56));\n  *(short *)((int)param_1 + 0x52) \u003d *(short *)((int)param_1 + 0x52) + 1;\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_000802da"
      ],
      "called": [
        "FUN_00081208",
        "FUN_0008021c",
        "FUN_00081318"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_000802da": {
      "entrypoint": "0x000802da",
      "current_name": "FUN_000802da",
      "code": "\nint FUN_000802da(int param_1,uint param_2,uint param_3,ushort *param_4)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined uVar3;\n  ushort uVar4;\n  uint uVar5;\n  ushort *puVar6;\n  undefined local_1c;\n  undefined local_1b;\n  ushort local_18;\n  \n  local_1c \u003d (undefined)param_2;\n  local_1b \u003d (undefined)(param_2 \u003e\u003e 8);\n  local_18 \u003d (ushort)param_3;\n  uVar5 \u003d param_3 \u0026 0xffff;\n  if (*(char *)(param_1 + 4) !\u003d \u0027\\0\u0027) {\n    cVar1 \u003d -2;\n    goto LAB_000803cc;\n  }\n  if (*(char *)(param_1 + 7) !\u003d \u0027\\0\u0027) {\n    cVar1 \u003d -1;\n    goto LAB_000803cc;\n  }\n  if (0xf6 \u003c ((param_2 \u0026 0xff) - 1 \u0026 0xff)) {\n    cVar1 \u003d -3;\n    goto LAB_000803cc;\n  }\n  *(undefined *)(param_1 + 9) \u003d local_1c;\n  *(undefined *)(param_1 + 10) \u003d local_1b;\n  *(ushort **)(param_1 + 0x4c) \u003d param_4;\n  *(char *)(param_1 + 0xb) \u003d (char)(param_2 \u003e\u003e 0x18);\n  *(char *)(param_1 + 0xc) \u003d (char)(param_2 \u003e\u003e 0x10);\n  uVar3 \u003d (undefined)(param_3 \u003e\u003e 8);\n  switch(local_1b) {\n  case 1:\n  case 2:\n  case 3:\n  case 4:\n    *(undefined *)(param_1 + 0xd) \u003d uVar3;\n    break;\n  case 5:\n    uVar4 \u003d *param_4;\n    if (uVar4 !\u003d 0) {\n      uVar4 \u003d 1;\n    }\n    *(char *)(param_1 + 0xd) \u003d -(char)uVar4;\n    uVar5 \u003d 0;\n    break;\n  case 6:\n    *(char *)(param_1 + 0xd) \u003d (char)(*param_4 \u003e\u003e 8);\n    uVar5 \u003d (uint)*param_4;\n    break;\n  default:\n    goto switchD_0008031e_caseD_7;\n  case 0xf:\n    bVar2 \u003d (byte)(local_18 \u003e\u003e 3) \u0026 0xfe;\n    if ((param_3 \u0026 0xf) !\u003d 0) {\n      bVar2 \u003d bVar2 + 1;\n    }\n    *(char *)(param_1 + 0xe) \u003d (char)param_3;\n    *(undefined *)(param_1 + 0xd) \u003d uVar3;\n    *(byte *)(param_1 + 0xf) \u003d bVar2;\n    uVar3 \u003d 7;\n    goto LAB_0008034a;\n  case 0x10:\n    *(undefined *)(param_1 + 0xd) \u003d uVar3;\n    *(char *)(param_1 + 0xe) \u003d (char)param_3;\n    param_4 \u003d param_4 + -1;\n    *(char *)(param_1 + 0xf) \u003d (char)uVar5 * \u0027\\x02\u0027;\n    *(undefined *)(param_1 + 0x49) \u003d 7;\n    puVar6 \u003d param_4 + uVar5;\n    while (param_4 !\u003d puVar6) {\n      bVar2 \u003d *(byte *)(param_1 + 0x49);\n      *(char *)(param_1 + (uint)bVar2 + 9) \u003d (char)(param_4[1] \u003e\u003e 8);\n      uVar5 \u003d bVar2 + 1 \u0026 0xff;\n      *(char *)(param_1 + 0x49) \u003d (char)uVar5;\n      param_4 \u003d param_4 + 1;\n      *(char *)(uVar5 + param_1 + 9) \u003d (char)*param_4;\n      *(byte *)(param_1 + 0x49) \u003d bVar2 + 2;\n    }\n    goto switchD_0008031e_caseD_7;\n  }\n  *(char *)(param_1 + 0xe) \u003d (char)uVar5;\n  uVar3 \u003d 6;\nLAB_0008034a:\n  *(undefined *)(param_1 + 0x49) \u003d uVar3;\nswitchD_0008031e_caseD_7:\n  sendTxBuffer(param_1);\n  *(undefined *)(param_1 + 7) \u003d 1;\n  cVar1 \u003d \u0027\\0\u0027;\nLAB_000803cc:\n  return (int)cVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_000805d0"
      ],
      "called": [
        "FUN_00080258"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_000803d4": {
      "entrypoint": "0x000803d4",
      "current_name": "FUN_000803d4",
      "code": "\nundefined4 FUN_000803d4(int param_1)\n\n{\n  int iVar1;\n  \n  if ((int)((uint)*(byte *)(param_1 + 10) \u003c\u003c 0x18) \u003c 0) {\n    *(short *)(param_1 + 0x54) \u003d *(short *)(param_1 + 0x54) + 1;\n    return 0xfb;\n  }\n  iVar1 \u003d 0;\n  do {\n    if ((\u0026DAT_00084d10)[iVar1] \u003d\u003d *(byte *)(param_1 + 10)) {\n      return 0;\n    }\n    iVar1 \u003d iVar1 + 1;\n  } while (iVar1 !\u003d 8);\n  *(short *)(param_1 + 0x54) \u003d *(short *)(param_1 + 0x54) + 1;\n  return 1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_0008043e"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00080410": {
      "entrypoint": "0x00080410",
      "current_name": "FUN_00080410",
      "code": "\nvoid FUN_00080410(int param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined2 uVar1;\n  int iVar2;\n  byte bVar3;\n  uint uVar4;\n  int iVar5;\n  \n  bVar3 \u003d 0;\n  while( true ) {\n    uVar4 \u003d (uint)bVar3;\n    bVar3 \u003d bVar3 + 1;\n    if (*(byte *)(param_1 + 0xb) \u003e\u003e 1 \u003c\u003d uVar4) break;\n    iVar2 \u003d (uVar4 * 2 + 3 \u0026 0xff) + param_1;\n    iVar5 \u003d *(int *)(param_1 + 0x4c);\n    uVar1 \u003d makeWord(*(undefined *)(iVar2 + 9),*(undefined *)(iVar2 + 10),iVar2,\n                     *(byte *)(param_1 + 0xb),param_4);\n    *(undefined2 *)(iVar5 + uVar4 * 2) \u003d uVar1;\n  }\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_0008043e"
      ],
      "called": [
        "FUN_000815f8"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0008043e": {
      "entrypoint": "0x0008043e",
      "current_name": "FUN_0008043e",
      "code": "\nint FUN_0008043e(int **param_1)\n\n{\n  char cVar1;\n  uint uVar2;\n  int *piVar3;\n  int iVar4;\n  uint unaff_r6;\n  \n  if (*(byte *)((int)param_1 + 5) \u003c 4) {\n    uVar2 \u003d (**(code **)(**param_1 + 8))();\n    unaff_r6 \u003d uVar2 \u0026 0xff;\n  }\n  piVar3 \u003d (int *)millis();\n  if (param_1[0x17] \u003c piVar3) {\n    *(undefined *)(param_1 + 2) \u003d 0xff;\n    *(undefined *)((int)param_1 + 7) \u003d 0;\n    *(short *)(param_1 + 0x15) \u003d *(short *)(param_1 + 0x15) + 1;\n  }\n  else if (7 \u003c unaff_r6) {\n    getRxBuffer(param_1);\n    iVar4 \u003d validateAnswer(param_1);\n    if (iVar4 \u003d\u003d 0) {\n      if (*(byte *)((int)param_1 + 10) - 3 \u003c 2) {\n        get_FC3(param_1);\n      }\n      *(undefined *)((int)param_1 + 7) \u003d 0;\n      cVar1 \u003d *(char *)((int)param_1 + 0x49);\n    }\n    else {\n      *(undefined *)((int)param_1 + 7) \u003d 0;\n      cVar1 \u003d (char)iVar4;\n    }\n    goto LAB_000804a2;\n  }\n  cVar1 \u003d \u0027\\0\u0027;\nLAB_000804a2:\n  return (int)cVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_000805d0"
      ],
      "called": [
        "FUN_00081208",
        "FUN_000801b0",
        "FUN_00080410",
        "FUN_000803d4"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_000804a8": {
      "entrypoint": "0x000804a8",
      "current_name": "FUN_000804a8",
      "code": "\nundefined8 FUN_000804a8(void)\n\n{\n  int iVar1;\n  \n  pinMode(1,0);\n  pinMode(6,1);\n  pinMode(0,1);\n  pinMode(1,1);\n  digitalWrite(0,0);\n  digitalWrite(1,0);\n  DAT_2007098a \u003d 0x13;\n  DAT_2007098c._0_2_ \u003d 10;\n  DAT_20070990 \u003d \u0026DAT_200708f2;\n  DAT_2007097d \u003d 3;\n  DAT_20070995 \u003d 3;\n  DAT_20070996 \u003d 0x14;\n  DAT_200709a4._0_2_ \u003d 3;\n  DAT_20070980._0_2_ \u003d 0x10;\n  DAT_20070984 \u003d \u0026DAT_200708cc;\n  DAT_20070989 \u003d 0x10;\n  DAT_20070998._0_2_ \u003d 0xc;\n  DAT_200709a1 \u003d 0x10;\n  DAT_200709b0._0_2_ \u003d 8;\n  DAT_200709a2 \u003d 0x1c;\n  DAT_200709a8 \u003d \u0026DAT_20070904;\n  DAT_200709ac \u003d 2;\n  DAT_200709ad \u003d 2;\n  DAT_200709b4 \u003d \u0026DAT_200709cc;\n  DAT_200709b8 \u003d 2;\n  DAT_2007097c \u003d 1;\n  DAT_20070988 \u003d 1;\n  DAT_20070994 \u003d 1;\n  DAT_200709a0 \u003d 1;\n  DAT_200709ba \u003d 1;\n  DAT_200709bc \u003d 1;\n  DAT_2007097e \u003d 0;\n  DAT_2007099c \u003d \u0026DAT_200708f4;\n  DAT_200709ae \u003d 0;\n  DAT_200709b9 \u003d 5;\n  DAT_200709c0 \u003d \u0026DAT_200709ce;\n  FUN_00080164(\u0026DAT_200709e4,0x4b00);\n  DAT_20070a3a \u003d 2000;\n  DAT_200708c8 \u003d millis();\n  iVar1 \u003d millis();\n  DAT_200709e0 \u003d iVar1 + 1000;\n  iVar1 \u003d millis();\n  DAT_20070a48 \u003d iVar1 + 1000;\n  iVar1 \u003d millis();\n  DAT_20070934 \u003d iVar1 + 1000;\n  iVar1 \u003d millis();\n  DAT_200708c0 \u003d iVar1 + 1000;\n  DAT_20070948 \u003d 0;\n  if (DAT_200708b8 \u003d\u003d 0) {\n    software_interrupt(0x3f);\n    return 1;\n  }\n  return 0;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_000816a8"
      ],
      "called": [
        "FUN_00081208",
        "FUN_00081210",
        "FUN_00081318",
        "FUN_00080164"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_000805d0": {
      "entrypoint": "0x000805d0",
      "current_name": "FUN_000805d0",
      "code": "\n\n\nvoid FUN_000805d0(void)\n\n{\n  uint uVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  int iVar6;\n  uint *puVar7;\n  undefined4 *puVar8;\n  \n  switch(DAT_20070948) {\n  case \u0027\\0\u0027:\n    uVar1 \u003d millis();\n    if (DAT_200708c8 \u003c uVar1) goto LAB_000806ca;\n    break;\n  case \u0027\\x01\u0027:\n    poll(\u0026DAT_200709e4);\n    if (DAT_200709eb \u003d\u003d \u0027\\0\u0027) {\n      query(\u0026DAT_200709e4,_DAT_2007097c,DAT_20070980,DAT_20070984);\n      DAT_20070948 \u003d DAT_20070948 + \u0027\\x01\u0027;\n      DAT_200708c8 \u003d millis();\n      DAT_20070940 \u003d (uint)DAT_200708ce;\n      DAT_20070944 \u003d (uint)DAT_200708d0;\n      DAT_20070a4c \u003d __floatunsisf(DAT_200708d8);\n      DAT_2007094c \u003d __floatsisf(DAT_200708da / 10);\n      DAT_200709c4 \u003d __floatunsisf(DAT_200708dc);\n      DAT_20070974 \u003d (uint)DAT_200708e4;\n      DAT_20070970 \u003d (uint)DAT_200708de;\n      DAT_20070924 \u003d (uint)DAT_200708e8;\n      DAT_20070928 \u003d (uint)DAT_200708ea;\n    }\n    break;\n  case \u0027\\x02\u0027:\n  case \u0027\\x04\u0027:\n  case \u0027\\x06\u0027:\n  case \u0027\\b\u0027:\n    poll(\u0026DAT_200709e4);\n    if (DAT_200709eb \u003d\u003d \u0027\\0\u0027) {\n      DAT_20070948 \u003d DAT_20070948 + \u0027\\x01\u0027;\n      DAT_200708c8 \u003d millis();\n    }\n    break;\n  case \u0027\\x03\u0027:\n    poll(\u0026DAT_200709e4);\n    if (DAT_200709eb \u003d\u003d \u0027\\0\u0027) {\n      query(\u0026DAT_200709e4,_DAT_20070994,DAT_20070998,DAT_2007099c);\n      DAT_20070948 \u003d DAT_20070948 + \u0027\\x01\u0027;\n      DAT_200708c8 \u003d millis();\n      DAT_20070938 \u003d (uint)DAT_20070908;\n      DAT_20070920 \u003d (uint)DAT_20070906;\n    }\n    break;\n  case \u0027\\x05\u0027:\n    poll(\u0026DAT_200709e4);\n    if (DAT_200709eb \u003d\u003d \u0027\\0\u0027) {\n      puVar8 \u003d (undefined4 *)\u0026DAT_20070988;\nLAB_000806c4:\n      query(\u0026DAT_200709e4,*puVar8,puVar8[1],puVar8[2]);\n      goto LAB_000806ca;\n    }\n    break;\n  case \u0027\\a\u0027:\n    poll(\u0026DAT_200709e4);\n    if ((DAT_20070918 \u003d\u003d 1) \u0026\u0026 (DAT_200709eb \u003d\u003d \u0027\\0\u0027)) {\n      DAT_20070906 \u003d 0;\n      puVar8 \u003d (undefined4 *)\u0026DAT_200709a0;\n      DAT_20070918 \u003d 0;\n      goto LAB_000806c4;\n    }\nLAB_000806ca:\n    DAT_20070948 \u003d DAT_20070948 + \u0027\\x01\u0027;\n    break;\n  case \u0027\\t\u0027:\n    poll(\u0026DAT_200709e4);\n    if (DAT_200709eb \u003d\u003d \u0027\\0\u0027) {\n      query(\u0026DAT_200709e4,_DAT_200709ac,DAT_200709b0,DAT_200709b4);\n      DAT_200708c8 \u003d millis();\n    }\n    DAT_20070948 \u003d \u0027\\0\u0027;\n  }\n  DAT_20070978 \u003d DAT_20070924 - DAT_20070950;\n  if (DAT_20070978 \u003c 0) {\n    DAT_20070978 \u003d DAT_20070978 + 0x3c;\n  }\n  DAT_200708bc \u003d DAT_20070928 - DAT_2007090c;\n  if ((int)DAT_200708bc \u003c 0) {\n    DAT_20070978 \u003d DAT_20070978 + -1;\n    DAT_200708bc \u003d DAT_200708bc + 0x3c;\n  }\n  DAT_20070902 \u003d (undefined2)DAT_20070978;\n  DAT_20070904 \u003d (undefined2)DAT_200708bc;\n  if ((DAT_20070978 \u003d\u003d 0) \u0026\u0026 (DAT_200708bc \u003d\u003d 0)) {\n    DAT_20070918 \u003d 1;\n    DAT_20070950 \u003d DAT_200708bc;\n    DAT_2007090c \u003d DAT_200708bc;\n  }\n  if (DAT_20070964 \u003d\u003d DAT_20070924) {\n    DAT_20070968 \u003d 1 - DAT_20070928;\n    if (1 \u003c DAT_20070928) {\n      DAT_20070968 \u003d 0;\n    }\n    if (DAT_20070968 !\u003d 0) goto LAB_00080a08;\n  }\n  else {\nLAB_00080a08:\n    DAT_20070968 \u003d DAT_20070928;\n    DAT_20070950 \u003d 0;\n    DAT_2007090c \u003d 0;\n    DAT_20070960 \u003d 0;\n    DAT_20070964 \u003d DAT_20070924;\n  }\n  if (DAT_20070920 \u003d\u003d 0) {\n    DAT_20070950 \u003d DAT_20070920;\n    DAT_2007090c \u003d DAT_20070920;\n    puVar7 \u003d (uint *)\u0026DAT_20070960;\nLAB_000808f2:\n    *puVar7 \u003d DAT_2007090c;\n  }\n  else {\n    if (DAT_20070920 !\u003d 1) goto LAB_000808f4;\n    if ((DAT_20070960 \u003c (int)DAT_20070938) \u0026\u0026 (uVar1 \u003d millis(), DAT_200708c0 \u003c uVar1)) {\n      DAT_20070960 \u003d DAT_20070960 + 1;\n      iVar6 \u003d millis();\n      DAT_200708c0 \u003d iVar6 + 1000;\n    }\n    if (DAT_20070960 \u003c (int)DAT_20070938) goto LAB_000808f4;\n    DAT_20070960 \u003d DAT_20070938 + 1;\n    if ((int)DAT_20070950 \u003c (int)DAT_20070924) {\n      uVar1 \u003d millis();\n      if (DAT_200708c0 \u003c uVar1) {\n        DAT_2007090c \u003d DAT_2007090c + 1;\n        iVar6 \u003d millis();\n        DAT_200708c0 \u003d iVar6 + 1000;\n      }\n    }\n    else {\n      if (DAT_20070950 !\u003d DAT_20070924) goto LAB_000808f4;\n      if ((int)DAT_20070928 \u003c (int)DAT_2007090c) {\n        puVar7 \u003d \u0026DAT_20070950;\n        DAT_2007090c \u003d 0;\n        goto LAB_000808f2;\n      }\n      uVar1 \u003d millis();\n      if (DAT_200708c0 \u003c uVar1) {\n        DAT_2007090c \u003d DAT_2007090c + 1;\n        iVar6 \u003d millis();\n        DAT_200708c0 \u003d iVar6 + 1000;\n      }\n    }\n    if (0x3b \u003c (int)DAT_2007090c) {\n      DAT_2007090c \u003d 0;\n      DAT_20070950 \u003d DAT_20070950 + 1;\n    }\n  }\nLAB_000808f4:\n  uVar1 \u003d millis();\n  if (DAT_200709e0 \u003c uVar1) {\n    uVar2 \u003d __floatsisf(DAT_20070940);\n    uVar3 \u003d __aeabi_fsub(uVar2,DAT_200709c8);\n    uVar2 \u003d DAT_200708c4;\n    DAT_20070930 \u003d uVar3;\n    uVar4 \u003d __addsf3(uVar3,DAT_200708c4);\n    uVar4 \u003d __aeabi_fmul(uVar4,DAT_2007094c);\n    uVar4 \u003d __addsf3(uVar4,DAT_20070914);\n    DAT_2007094c \u003d uVar4;\n    uVar2 \u003d __aeabi_fsub(uVar3,uVar2);\n    uVar2 \u003d __aeabi_fmul(uVar2,DAT_200709c4);\n    uVar2 \u003d __aeabi_fsub(uVar2,DAT_2007096c);\n    DAT_200709c4 \u003d uVar2;\n    uVar5 \u003d __aeabi_fmul(uVar3,DAT_20070a4c);\n    uVar5 \u003d __addsf3(uVar5,uVar4);\n    __addsf3(uVar5,uVar2);\n    DAT_20070910 \u003d __aeabi_f2iz();\n    DAT_2007091c \u003d __floatsisf();\n    DAT_2007092c \u003d 0;\n    DAT_200708c4 \u003d uVar3;\n    DAT_20070914 \u003d uVar4;\n    DAT_2007096c \u003d uVar2;\n    iVar6 \u003d millis();\n    DAT_200709e0 \u003d iVar6 + DAT_20070970;\n  }\n  uVar2 \u003d __floatsisf(DAT_20070970);\n  iVar6 \u003d __aeabi_fcmpge(DAT_2007091c,uVar2);\n  if (iVar6 !\u003d 0) {\n    DAT_2007091c \u003d uVar2;\n  }\n  iVar6 \u003d __aeabi_fcmple(DAT_2007091c,0);\n  if (iVar6 !\u003d 0) {\n    DAT_2007091c \u003d 0;\n  }\n  DAT_200708f6 \u003d __fixunssfsi(DAT_2007091c);\n  DAT_2007092c \u003d DAT_2007092c + 1;\n  DAT_2007093c \u003d DAT_200709cc \u0026 1 ^ 1;\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_000816a8"
      ],
      "called": [
        "FUN_00081208",
        "FUN_000802da",
        "FUN_00081cd0",
        "FUN_00081894",
        "FUN_00081734",
        "FUN_00081c94",
        "FUN_00081730",
        "FUN_00081944",
        "FUN_0008043e",
        "FUN_0008189c",
        "FUN_00081d1c",
        "FUN_00081ca8"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00080a68": {
      "entrypoint": "0x00080a68",
      "current_name": "FUN_00080a68",
      "code": "\nvoid FUN_00080a68(void)\n\n{\n  String(\u0026DAT_20070954,\"\");\n  __aeabi_atexit(\u0026DAT_20070954,0x815ff,0x2007002c);\n  DAT_200709e8 \u003d 0;\n  DAT_200709e9 \u003d 0;\n  DAT_200709ea \u003d 6;\n  DAT_20070a3a \u003d 1000;\n  return;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [
        "FUN_00081d5c",
        "FUN_00081682"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00080aa8": {
      "entrypoint": "0x00080aa8",
      "current_name": "FUN_00080aa8",
      "code": "\nvoid FUN_00080aa8(void)\n\n{\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00080ce0"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00080ab8": {
      "entrypoint": "0x00080ab8",
      "current_name": "FUN_00080ab8",
      "code": "\nvoid FUN_00080ab8(void)\n\n{\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00080ce0"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00080aba": {
      "entrypoint": "0x00080aba",
      "current_name": "FUN_00080aba",
      "code": "\nvoid FUN_00080aba(void)\n\n{\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00080ce0"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00080abc": {
      "entrypoint": "0x00080abc",
      "current_name": "FUN_00080abc",
      "code": "\nvoid FUN_00080abc(void)\n\n{\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00080ce0"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00080ae4": {
      "entrypoint": "0x00080ae4",
      "current_name": "FUN_00080ae4",
      "code": "\n\n\nvoid FUN_00080ae4(void)\n\n{\n  int iVar1;\n  int iVar2;\n  \n  SystemInit();\n  _DAT_e000e014 \u003d Elf32_Rel_ARRAY_20070000[6].r_offset / 1000 - 1;\n  DAT_e000ed23 \u003d 0xf0;\n  _DAT_e000e018 \u003d 0;\n  _DAT_e000e010 \u003d 7;\n  __libc_init_array();\n  iVar1 \u003d 0;\n  do {\n    iVar2 \u003d iVar1 + 1;\n    digitalWrite(iVar1,0);\n    iVar1 \u003d iVar2;\n  } while (iVar2 !\u003d 0x4f);\n  _DAT_400e0ea0 \u003d 0xffffffff;\n  _DAT_400e10a0 \u003d 0xffffffff;\n  _DAT_400e12a0 \u003d 0xffffffff;\n  _DAT_400e14a0 \u003d 0xffffffff;\n  PIO_Configure(0x400e0e00,1,0x300,0);\n  digitalWrite(0,1);\n  PIO_Configure(0x400e0e00,1,0xc00,0);\n  PIO_Configure(0x400e0e00,1,0x3000,0);\n  PIO_Configure(0x400e1400,2,0x30,0);\n  PIO_Configure(0x400e1000,1,0xc00,0);\n  PIO_Configure(0x400e0e00,1,3,0);\n  PIO_Configure(0x400e1000,1,0xc000,0);\n  pmc_enable_periph_clk(0x25);\n  adc_init(0x400c0000,Elf32_Rel_ARRAY_20070000[6].r_offset,20000000,0xc);\n  adc_configure_timing(0x400c0000,0,0x300000,1);\n  adc_configure_trigger(0x400c0000,0,0);\n  adc_disable_interrupt(0x400c0000,0xffffffff);\n  adc_disable_all_channel(0x400c0000);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_000816a8"
      ],
      "called": [
        "FUN_00080f9c",
        "FUN_00080e18",
        "FUN_00080da0",
        "FUN_00081066",
        "FUN_00081042",
        "FUN_00081318",
        "FUN_0008106e",
        "FUN_00081034",
        "FUN_00081d7c",
        "FUN_00080e9c"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00080c0c": {
      "entrypoint": "0x00080c0c",
      "current_name": "FUN_00080c0c",
      "code": "\nvoid FUN_00080c0c(undefined4 param_1,undefined4 param_2,undefined4 param_3)\n\n{\n  RingBuffer(\u0026DAT_20070b84);\n  RingBuffer(\u0026DAT_20070ad8);\n  UARTClass(\u0026DAT_20070b60,0x400e0800,8,8,\u0026DAT_20070b84,\u0026DAT_20070ad8,param_3);\n  RingBuffer(\u0026DAT_20070de4);\n  RingBuffer(\u0026DAT_20070e6c);\n  RingBuffer(\u0026DAT_20070ef4);\n  RingBuffer(\u0026DAT_20070a50);\n  RingBuffer(\u0026DAT_20070c84);\n  RingBuffer(\u0026DAT_20070d0c);\n  USARTClass(\u0026DAT_20070c0c,0x40098000,0x11,0x11,\u0026DAT_20070de4,\u0026DAT_20070a50);\n  USARTClass(\u0026DAT_20070c34,0x4009c000,0x12,0x12,\u0026DAT_20070e6c,\u0026DAT_20070c84);\n  USARTClass(\u0026DAT_20070c5c,0x400a4000,0x14,0x14,\u0026DAT_20070ef4,\u0026DAT_20070d0c);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [
        "FUN_000813a8",
        "FUN_000814e4",
        "FUN_000815d4"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00080ce0": {
      "entrypoint": "0x00080ce0",
      "current_name": "FUN_00080ce0",
      "code": "\nvoid FUN_00080ce0(void)\n\n{\n  int iVar1;\n  \n  iVar1 \u003d available(\u0026DAT_20070b60);\n  if (iVar1 !\u003d 0) {\n    serialEvent();\n  }\n  iVar1 \u003d available(\u0026DAT_20070c0c);\n  if (iVar1 !\u003d 0) {\n    serialEvent1();\n  }\n  iVar1 \u003d available(\u0026DAT_20070c34);\n  if (iVar1 !\u003d 0) {\n    serialEvent2();\n  }\n  iVar1 \u003d available(\u0026DAT_20070c5c);\n  if (iVar1 !\u003d 0) {\n    serialEvent3();\n  }\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_000816a8"
      ],
      "called": [
        "FUN_00080aba",
        "FUN_00080ab8",
        "FUN_000813e4",
        "FUN_00080abc",
        "FUN_00080aa8"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00080d2e": {
      "entrypoint": "0x00080d2e",
      "current_name": "FUN_00080d2e",
      "code": "\nvoid FUN_00080d2e(int param_1,undefined4 param_2,uint param_3)\n\n{\n  uint uVar1;\n  \n  *(uint *)(param_1 + 0x44) \u003d param_3;\n  switch(param_2) {\n  case 0:\n  case 3:\n  case 4:\n  case 5:\n    return;\n  case 1:\n    uVar1 \u003d *(uint *)(param_1 + 0x70) \u0026 *(uint *)(param_1 + 0x70) \u0026 ~param_3;\n    break;\n  case 2:\n    uVar1 \u003d *(uint *)(param_1 + 0x70) | param_3;\n    break;\n  default:\n    goto switchD_00080d34_caseD_6;\n  }\n  *(uint *)(param_1 + 0x70) \u003d uVar1;\nswitchD_00080d34_caseD_6:\n  *(uint *)(param_1 + 4) \u003d param_3;\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00080da0"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00080d54": {
      "entrypoint": "0x00080d54",
      "current_name": "FUN_00080d54",
      "code": "\nvoid FUN_00080d54(undefined4 *param_1,undefined4 param_2,uint param_3)\n\n{\n  bool bVar1;\n  \n  bVar1 \u003d (int)(param_3 \u003c\u003c 0x1f) \u003c 0;\n  param_1[0x11] \u003d param_2;\n  if (bVar1) {\n    param_1[0x19] \u003d param_2;\n  }\n  if (!bVar1) {\n    param_1[0x18] \u003d param_2;\n  }\n  bVar1 \u003d (param_3 \u0026 10) !\u003d 0;\n  if (bVar1) {\n    param_1[8] \u003d param_2;\n  }\n  if (!bVar1) {\n    param_1[9] \u003d param_2;\n  }\n  if (((int)(param_3 \u003c\u003c 0x1e) \u003c 0) || ((int)(param_3 \u003c\u003c 0x1c) \u003c 0)) {\n    param_1[0x20] \u003d param_2;\n  }\n  param_1[5] \u003d param_2;\n  *param_1 \u003d param_2;\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00080da0"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00080d7a": {
      "entrypoint": "0x00080d7a",
      "current_name": "FUN_00080d7a",
      "code": "\nvoid FUN_00080d7a(undefined4 *param_1,undefined4 param_2,int param_3,int param_4,int param_5)\n\n{\n  param_1[0x11] \u003d param_2;\n  if (param_5 \u003d\u003d 0) {\n    param_1[0x18] \u003d param_2;\n  }\n  else {\n    param_1[0x19] \u003d param_2;\n  }\n  if (param_4 \u003d\u003d 0) {\n    param_1[0x15] \u003d param_2;\n  }\n  else {\n    param_1[0x14] \u003d param_2;\n  }\n  if (param_3 \u003d\u003d 0) {\n    param_1[0xd] \u003d param_2;\n  }\n  else {\n    param_1[0xc] \u003d param_2;\n  }\n  param_1[4] \u003d param_2;\n  *param_1 \u003d param_2;\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00080da0",
        "FUN_00081318"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00080da0": {
      "entrypoint": "0x00080da0",
      "current_name": "FUN_00080da0",
      "code": "\nundefined4 FUN_00080da0(int param_1,int param_2,undefined4 param_3,uint param_4)\n\n{\n  bool bVar1;\n  \n  switch(param_2) {\n  case 1:\n  case 2:\n    PIO_SetPeripheral(param_1,param_2,param_3);\n    bVar1 \u003d (int)(param_4 \u003c\u003c 0x1f) \u003c 0;\n    *(undefined4 *)(param_1 + 0x44) \u003d param_3;\n    if (bVar1) {\n      *(undefined4 *)(param_1 + 100) \u003d param_3;\n    }\n    if (!bVar1) {\n      *(undefined4 *)(param_1 + 0x60) \u003d param_3;\n    }\n    break;\n  case 3:\n    PIO_SetInput(param_1,param_3,param_4,0x80d55,param_1);\n    break;\n  case 4:\n  case 5:\n    PIO_SetOutput(param_1,param_3,param_2 \u003d\u003d 5,(param_4 \u003c\u003c 0x1d) \u003e\u003e 0x1f,param_4 \u0026 1,param_2,param_3\n                 );\n    break;\n  default:\n    return 0;\n  }\n  return 1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00081210",
        "FUN_00080ae4"
      ],
      "called": [
        "FUN_00080d2e",
        "FUN_00080d7a",
        "FUN_00080d54"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00080e04": {
      "entrypoint": "0x00080e04",
      "current_name": "FUN_00080e04",
      "code": "\nuint FUN_00080e04(int param_1,uint param_2)\n\n{\n  uint uVar1;\n  \n  uVar1 \u003d *(uint *)(param_1 + 8) \u0026 param_2;\n  if (uVar1 !\u003d 0) {\n    if ((param_2 \u0026 *(uint *)(param_1 + 0x18)) \u003d\u003d 0) {\n      uVar1 \u003d 0;\n    }\n    else {\n      uVar1 \u003d 1;\n    }\n  }\n  return uVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00081318"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00080e18": {
      "entrypoint": "0x00080e18",
      "current_name": "FUN_00080e18",
      "code": "\n\n\nundefined4 FUN_00080e18(uint param_1)\n\n{\n  uint uVar1;\n  \n  if (param_1 \u003c 0x2d) {\n    if (param_1 \u003c 0x20) {\n      uVar1 \u003d 1 \u003c\u003c (param_1 \u0026 0xff);\n      if ((uVar1 \u0026 _DAT_400e0618) !\u003d uVar1) {\n        _DAT_400e0610 \u003d uVar1;\n      }\n    }\n    else {\n      uVar1 \u003d 1 \u003c\u003c (param_1 - 0x20 \u0026 0xff);\n      if ((uVar1 \u0026 _DAT_400e0708) !\u003d uVar1) {\n        _DAT_400e0700 \u003d uVar1;\n      }\n    }\n    return 0;\n  }\n  return 1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00081508",
        "FUN_00081210",
        "FUN_00080ae4"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00080e9c": {
      "entrypoint": "0x00080e9c",
      "current_name": "FUN_00080e9c",
      "code": "\n\n\nvoid FUN_00080e9c(void)\n\n{\n  _DAT_400e0a00 \u003d 0x400;\n  _DAT_400e0c00 \u003d 0x400;\n  _DAT_400e0620 \u003d _DAT_400e0620 \u003c\u003c 7;\n  while (-1 \u003c _DAT_400e0620) {\n    _DAT_400e0620 \u003d _DAT_400e0668 \u003c\u003c 0x1f;\n  }\n  _DAT_400e0620 \u003d 0x1370809;\n  do {\n  } while (-1 \u003c _DAT_400e0668 \u003c\u003c 0xf);\n  do {\n  } while (-1 \u003c _DAT_400e0668 \u003c\u003c 0x1c);\n  _DAT_400e0628 \u003d 0x200d3f01;\n  do {\n  } while (-1 \u003c _DAT_400e0668 \u003c\u003c 0x1e);\n  do {\n  } while (-1 \u003c _DAT_400e0668 \u003c\u003c 0x1c);\n  _DAT_400e0630 \u003d 0x12;\n  do {\n  } while (-1 \u003c _DAT_400e0668 \u003c\u003c 0x1c);\n  Elf32_Rel_ARRAY_20070000[6].r_offset \u003d 84000000;\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00080ae4"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00080f24": {
      "entrypoint": "0x00080f24",
      "current_name": "FUN_00080f24",
      "code": "\n/* WARNING: Removing unreachable block (ram,0x00080f6e) */\n\n\nvoid FUN_00080f24(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  \n  for (iVar1 \u003d 0; (undefined4 *)((int)\u0026Elf32_Rel_ARRAY_20070000[0].r_offset + iVar1) \u003c \u0026DAT_2007089c\n      ; iVar1 \u003d iVar1 + 4) {\n    *(undefined4 *)((int)\u0026Elf32_Rel_ARRAY_20070000[0].r_offset + iVar1) \u003d\n         *(undefined4 *)(\u0026DAT_0008588c + iVar1);\n  }\n  for (puVar2 \u003d \u0026DAT_2007089c; puVar2 \u003c (undefined4 *)0x200711c0; puVar2 \u003d puVar2 + 1) {\n    *puVar2 \u003d 0;\n  }\n  _DAT_e000ed08 \u003d 0x80000;\n  main();\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [
        "FUN_000816a8"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00080f9c": {
      "entrypoint": "0x00080f9c",
      "current_name": "FUN_00080f9c",
      "code": "\nundefined4 FUN_00080f9c(undefined4 *param_1,uint param_2,int param_3,int param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint local_58 [16];\n  \n  local_58[0] \u003d 0;\n  local_58[1] \u003d 8;\n  local_58[2] \u003d 0x10;\n  local_58[3] \u003d 0x18;\n  local_58[4] \u003d 0x40;\n  local_58[5] \u003d 0x50;\n  local_58[6] \u003d 0x60;\n  local_58[7] \u003d 0x70;\n  local_58[8] \u003d 0x200;\n  local_58[9] \u003d 0x240;\n  local_58[10] \u003d 0x280;\n  local_58[11] \u003d 0x2c0;\n  local_58[12] \u003d 0x300;\n  local_58[13] \u003d 0x340;\n  local_58[14] \u003d 0x380;\n  local_58[15] \u003d 0x3c0;\n  *param_1 \u003d 1;\n  param_1[1] \u003d 0;\n  param_1[0x48] \u003d 0x202;\n  param_1[0x41] \u003d 0;\n  param_1[0x45] \u003d 0;\n  uVar1 \u003d param_2 / (uint)(param_3 * 2);\n  if (param_2 \u003d\u003d param_3 * 2 * uVar1) {\n    uVar1 \u003d uVar1 - 1;\n  }\n  uVar2 \u003d 0;\n  do {\n    if ((uint)(param_4 * (int)(((ulonglong)param_2 / (ulonglong)((uVar1 + 1) * 2)) / 1000000)) \u003c\u003d\n        local_58[uVar2]) {\n      param_1[1] \u003d (uVar2 \u0026 0xf) \u003c\u003c 0x10 | (uVar1 \u0026 0xff) \u003c\u003c 8 | param_1[1];\n      return 0;\n    }\n    uVar2 \u003d uVar2 + 1;\n  } while (uVar2 !\u003d 0x10);\n  return 0xffffffff;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00080ae4"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00081034": {
      "entrypoint": "0x00081034",
      "current_name": "FUN_00081034",
      "code": "\nvoid FUN_00081034(int param_1,uint param_2,uint param_3)\n\n{\n  *(uint *)(param_1 + 4) \u003d param_2 | *(uint *)(param_1 + 4) | (param_3 \u0026 1) \u003c\u003c 7;\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00080ae4"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00081042": {
      "entrypoint": "0x00081042",
      "current_name": "FUN_00081042",
      "code": "\nvoid FUN_00081042(int param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  *(uint *)(param_1 + 4) \u003d\n       param_3 | *(uint *)(param_1 + 4) | (param_2 \u0026 0xf) \u003c\u003c 0x18 | (param_4 \u0026 3) \u003c\u003c 0x1c;\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00080ae4"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0008105c": {
      "entrypoint": "0x0008105c",
      "current_name": "FUN_0008105c",
      "code": "\nvoid FUN_0008105c(int param_1,uint param_2)\n\n{\n  *(int *)(param_1 + 0x14) \u003d 1 \u003c\u003c (param_2 \u0026 0xff);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00081210"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00081066": {
      "entrypoint": "0x00081066",
      "current_name": "FUN_00081066",
      "code": "\nvoid FUN_00081066(int param_1)\n\n{\n  *(undefined4 *)(param_1 + 0x14) \u003d 0xffff;\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00080ae4"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0008106e": {
      "entrypoint": "0x0008106e",
      "current_name": "FUN_0008106e",
      "code": "\nvoid FUN_0008106e(int param_1,undefined4 param_2)\n\n{\n  *(undefined4 *)(param_1 + 0x28) \u003d param_2;\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00080ae4"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00081184": {
      "entrypoint": "0x00081184",
      "current_name": "FUN_00081184",
      "code": "\nundefined4 FUN_00081184(void)\n\n{\n  return 0;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0008118c": {
      "entrypoint": "0x0008118c",
      "current_name": "FUN_0008118c",
      "code": "\nint FUN_0008118c(int param_1)\n\n{\n  int iVar1;\n  \n  if (DAT_20071180 \u003d\u003d 0) {\n    DAT_20071180 \u003d 0x200711c0;\n  }\n  iVar1 \u003d DAT_20071180;\n  DAT_20071180 \u003d param_1 + DAT_20071180;\n  return iVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00082970"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_000811ae": {
      "entrypoint": "0x000811ae",
      "current_name": "FUN_000811ae",
      "code": "\nundefined4 FUN_000811ae(void)\n\n{\n  return 0xffffffff;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_000811b4": {
      "entrypoint": "0x000811b4",
      "current_name": "FUN_000811b4",
      "code": "\nundefined4 FUN_000811b4(undefined4 param_1,int param_2)\n\n{\n  *(undefined4 *)(param_2 + 4) \u003d 0x2000;\n  return 0;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_000846b4"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_000811be": {
      "entrypoint": "0x000811be",
      "current_name": "FUN_000811be",
      "code": "\nundefined4 FUN_000811be(void)\n\n{\n  return 1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_000846dc"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_000811c2": {
      "entrypoint": "0x000811c2",
      "current_name": "FUN_000811c2",
      "code": "\nundefined4 FUN_000811c2(void)\n\n{\n  return 0;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00084700"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_000811c6": {
      "entrypoint": "0x000811c6",
      "current_name": "FUN_000811c6",
      "code": "\nundefined4 FUN_000811c6(void)\n\n{\n  return 0;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00084728"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_000811cc": {
      "entrypoint": "0x000811cc",
      "current_name": "FUN_000811cc",
      "code": "\n\n\nuint FUN_000811cc(undefined4 param_1,int param_2,uint param_3)\n\n{\n  int iVar1;\n  \n  for (iVar1 \u003d 0; iVar1 \u003c (int)param_3; iVar1 \u003d iVar1 + 1) {\n    do {\n    } while (-1 \u003c _DAT_400e0814 \u003c\u003c 0x1e);\n    _DAT_400e081c \u003d (uint)*(byte *)(param_2 + iVar1);\n  }\n  return param_3 \u0026 ~((int)param_3 \u003e\u003e 0x1f);\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00084464"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00081208": {
      "entrypoint": "0x00081208",
      "current_name": "FUN_00081208",
      "code": "\nundefined4 GetTickCount(void)\n\n{\n  return DAT_20071184;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_000805d0",
        "FUN_000804a8",
        "FUN_00080258",
        "FUN_0008043e"
      ],
      "called": [
        "FUN_00081714"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0008120c": {
      "entrypoint": "0x0008120c",
      "current_name": "FUN_0008120c",
      "code": "\nvoid FUN_0008120c(void)\n\n{\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_000816a8"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00081210": {
      "entrypoint": "0x00081210",
      "current_name": "FUN_00081210",
      "code": "\n\n\nint FUN_00081210(int param_1,int param_2)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  uint uVar4;\n  byte bVar5;\n  byte bVar6;\n  int iVar7;\n  int iVar8;\n  \n  iVar1 \u003d param_1;\n  if ((\u0026DAT_00084d24)[param_1 * 0x1c] !\u003d \u0027\\0\u0027) {\n    if (((\u0026DAT_20070d94)[param_1] \u0026 0xf) \u003d\u003d 4) {\n      iVar1 \u003d adc_disable_channel(0x400c0000,(\u0026DAT_00084d31)[param_1 * 0x1c]);\n    }\n    bVar6 \u003d (\u0026DAT_20070d94)[param_1];\n    bVar5 \u003d bVar6 \u0026 0xf;\n    if ((bVar5 \u003c 3) \u0026\u0026 (bVar6 !\u003d 0)) {\n      if (bVar5 \u003d\u003d 2) {\n        if (param_2 \u003d\u003d 0) {\n          return iVar1;\n        }\n      }\n      else if (bVar5 \u003d\u003d 1) {\n        if (param_2 \u003d\u003d 2) {\n          return iVar1;\n        }\n      }\n      else if (bVar5 \u003d\u003d 3) {\n        if (param_2 \u003d\u003d 1) {\n          return iVar1;\n        }\n        goto LAB_0008126c;\n      }\n    }\n    if (param_2 !\u003d 1) {\nLAB_0008126c:\n      if (param_2 \u003d\u003d 0) {\n        iVar1 \u003d param_1 * 0x1c;\n        pmc_enable_periph_clk(*(undefined4 *)(\u0026DAT_00084d20 + iVar1));\n        iVar1 \u003d PIO_Configure(*(undefined4 *)(\u0026DAT_00084d18 + iVar1),3,\n                              *(undefined4 *)(\u0026DAT_00084d1c + iVar1),0);\n        bVar6 \u003d (\u0026DAT_20070d94)[param_1] \u0026 0xf0 | 2;\n      }\n      else {\n        if (param_2 !\u003d 2) {\n          return iVar1;\n        }\n        iVar1 \u003d param_1 * 0x1c;\n        pmc_enable_periph_clk(*(undefined4 *)(\u0026DAT_00084d20 + iVar1));\n        iVar1 \u003d PIO_Configure(*(undefined4 *)(\u0026DAT_00084d18 + iVar1),3,\n                              *(undefined4 *)(\u0026DAT_00084d1c + iVar1),1);\n        bVar6 \u003d (\u0026DAT_20070d94)[param_1] \u0026 0xf0 | 1;\n      }\n      (\u0026DAT_20070d94)[param_1] \u003d bVar6;\n      return iVar1;\n    }\n    iVar7 \u003d param_1 * 0x1c;\n    iVar8 \u003d *(int *)(\u0026DAT_00084d18 + iVar7);\n    if (bVar6 \u003e\u003e 4 \u003d\u003d 0) {\n      uVar3 \u003d 4;\n    }\n    else {\n      uVar3 \u003d 5;\n    }\n    iVar1 \u003d PIO_Configure(iVar8,uVar3,*(undefined4 *)(\u0026DAT_00084d1c + iVar7),\n                          *(undefined4 *)(\u0026DAT_00084d28 + iVar7));\n    (\u0026DAT_20070d94)[param_1] \u003d (\u0026DAT_20070d94)[param_1] \u0026 0xf0 | 3;\n    if (*(int *)(iVar8 + 0x18) \u003d\u003d -1) {\n      uVar2 \u003d *(uint *)(\u0026DAT_00084d20 + iVar7);\n      if (0x2c \u003c uVar2) {\n        return 1;\n      }\n      if (uVar2 \u003c 0x20) {\n        uVar2 \u003d 1 \u003c\u003c (uVar2 \u0026 0xff);\n        uVar4 \u003d _DAT_400e0618 \u0026 uVar2;\n        if (uVar4 \u003d\u003d uVar2) {\n          _DAT_400e0614 \u003d uVar4;\n        }\n      }\n      else {\n        uVar2 \u003d 1 \u003c\u003c (uVar2 - 0x20 \u0026 0xff);\n        uVar4 \u003d _DAT_400e0708 \u0026 uVar2;\n        if (uVar4 \u003d\u003d uVar2) {\n          _DAT_400e0704 \u003d uVar4;\n        }\n      }\n      return 0;\n    }\n  }\n  return iVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_000804a8",
        "FUN_00081318",
        "FUN_00080164"
      ],
      "called": [
        "FUN_00080e18",
        "FUN_00080da0",
        "FUN_0008105c"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00081318": {
      "entrypoint": "0x00081318",
      "current_name": "FUN_00081318",
      "code": "\nvoid FUN_00081318(int param_1,int param_2,undefined4 param_3)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  int iVar3;\n  \n  if ((\u0026DAT_00084d24)[param_1 * 0x1c] !\u003d \u0027\\0\u0027) {\n    if (((\u0026DAT_20070d94)[param_1] \u0026 0xf) \u003d\u003d 5) {\n      pinMode(param_1,1,param_3,5,param_1,param_2,param_3);\n    }\n    (\u0026DAT_20070d94)[param_1] \u003d (\u0026DAT_20070d94)[param_1] \u0026 0xf | (byte)(param_2 \u003c\u003c 4);\n    iVar3 \u003d *(int *)(\u0026DAT_00084d18 + param_1 * 0x1c);\n    uVar2 \u003d *(undefined4 *)(\u0026DAT_00084d1c + param_1 * 0x1c);\n    iVar1 \u003d PIO_GetOutputDataStatus(iVar3,uVar2);\n    if (iVar1 \u003d\u003d 0) {\n      if (param_2 !\u003d 0) {\n        *(undefined4 *)(iVar3 + 100) \u003d uVar2;\n        return;\n      }\n      *(undefined4 *)(iVar3 + 0x60) \u003d uVar2;\n      return;\n    }\n    PIO_SetOutput(iVar3,uVar2,param_2,0,1);\n  }\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_000801b0",
        "FUN_000804a8",
        "FUN_00080ae4",
        "FUN_00080258",
        "FUN_00080164"
      ],
      "called": [
        "FUN_00081210",
        "FUN_00080e04",
        "FUN_00080d7a"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00081388": {
      "entrypoint": "0x00081388",
      "current_name": "FUN_00081388",
      "code": "\nvoid FUN_00081388(void)\n\n{\n  if ((Elf32_Rel_ARRAY_20070000[6].r_info !\u003d 0xffffffff) \u0026\u0026\n     (Elf32_Rel_ARRAY_20070000[6].r_info \u003d Elf32_Rel_ARRAY_20070000[6].r_info - 1,\n     Elf32_Rel_ARRAY_20070000[6].r_info \u003d\u003d 0)) {\n    (*(code *)((int)\u0026Elf32_Rel_ARRAY_20070000[0].r_offset + 1))();\n  }\n  return;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_000813a8": {
      "entrypoint": "0x000813a8",
      "current_name": "FUN_000813a8",
      "code": "\nint FUN_000813a8(int param_1)\n\n{\n  memset(param_1,0,0x80);\n  *(undefined4 *)(param_1 + 0x80) \u003d 0;\n  *(undefined4 *)(param_1 + 0x84) \u003d 0;\n  return param_1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00080c0c"
      ],
      "called": [
        "FUN_00082504"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_000813c2": {
      "entrypoint": "0x000813c2",
      "current_name": "FUN_000813c2",
      "code": "\nvoid FUN_000813c2(int param_1,undefined param_2)\n\n{\n  uint uVar1;\n  \n  uVar1 \u003d *(int *)(param_1 + 0x80) + 1U \u0026 0x7f;\n  if (uVar1 !\u003d *(uint *)(param_1 + 0x84)) {\n    *(undefined *)(param_1 + *(int *)(param_1 + 0x80)) \u003d param_2;\n    *(uint *)(param_1 + 0x80) \u003d uVar1;\n  }\n  return;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_000813e4": {
      "entrypoint": "0x000813e4",
      "current_name": "FUN_000813e4",
      "code": "\nuint FUN_000813e4(int param_1)\n\n{\n  return *(int *)(*(int *)(param_1 + 0x10) + 0x80) - *(int *)(*(int *)(param_1 + 0x10) + 0x84) \u0026\n         0x7f;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00080ce0"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00081454": {
      "entrypoint": "0x00081454",
      "current_name": "FUN_00081454",
      "code": "\nundefined4 FUN_00081454(int param_1,undefined4 param_2)\n\n{\n  int iVar1;\n  uint uVar2;\n  \n  iVar1 \u003d *(int *)(param_1 + 0x14);\n  if ((*(int *)(*(int *)(param_1 + 0x18) + 0x14) \u003c\u003c 0x1e \u003c 0) \u0026\u0026\n     (*(int *)(iVar1 + 0x84) \u003d\u003d *(int *)(iVar1 + 0x80))) {\n    *(undefined4 *)(*(int *)(param_1 + 0x18) + 0x1c) \u003d param_2;\n  }\n  else {\n    uVar2 \u003d *(int *)(iVar1 + 0x80) + 1U \u0026 0x8000007f;\n    if ((int)uVar2 \u003c 0) {\n      uVar2 \u003d (uVar2 - 1 | 0xffffff80) + 1;\n    }\n    do {\n    } while (*(uint *)(iVar1 + 0x84) \u003d\u003d uVar2);\n    *(char *)(iVar1 + *(int *)(iVar1 + 0x80)) \u003d (char)param_2;\n    *(uint *)(*(int *)(param_1 + 0x14) + 0x80) \u003d uVar2;\n    *(undefined4 *)(*(int *)(param_1 + 0x18) + 8) \u003d 2;\n  }\n  return 1;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_000814e4": {
      "entrypoint": "0x000814e4",
      "current_name": "FUN_000814e4",
      "code": "\nvoid FUN_000814e4(undefined4 *param_1,undefined4 param_2,undefined param_3,undefined4 param_4,\n                 undefined4 param_5,undefined4 param_6)\n\n{\n  param_1[1] \u003d 0;\n  param_1[2] \u003d 1000;\n  param_1[6] \u003d param_2;\n  *param_1 \u003d \u0026PTR_FUN_00081454_1_000857a8;\n  *(undefined *)(param_1 + 7) \u003d param_3;\n  param_1[4] \u003d param_5;\n  param_1[8] \u003d param_4;\n  param_1[5] \u003d param_6;\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_000815d4",
        "FUN_00080c0c"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00081508": {
      "entrypoint": "0x00081508",
      "current_name": "FUN_00081508",
      "code": "\nvoid FUN_00081508(int param_1,uint param_2,undefined4 param_3)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  \n  pmc_enable_periph_clk(*(undefined4 *)(param_1 + 0x20));\n  puVar2 \u003d *(undefined4 **)(param_1 + 0x18);\n  puVar2[0x48] \u003d 0x202;\n  *puVar2 \u003d 0xac;\n  puVar2[1] \u003d param_3;\n  puVar2[8] \u003d Elf32_Rel_ARRAY_20070000[6].r_offset / param_2 \u003e\u003e 4;\n  puVar2[3] \u003d 0xffffffff;\n  puVar2[2] \u003d 0x61;\n  *(int *)(((uint)(int)(char)*(byte *)(param_1 + 0x1c) \u003e\u003e 5) * 4 + -0x1fff1f00) \u003d\n       1 \u003c\u003c (uint)(*(byte *)(param_1 + 0x1c) \u0026 0x1f);\n  iVar1 \u003d *(int *)(param_1 + 0x10);\n  *(undefined4 *)(iVar1 + 0x84) \u003d 0;\n  *(undefined4 *)(iVar1 + 0x80) \u003d 0;\n  iVar1 \u003d *(int *)(param_1 + 0x14);\n  *(undefined4 *)(iVar1 + 0x84) \u003d 0;\n  *(undefined4 *)(iVar1 + 0x80) \u003d 0;\n  *puVar2 \u003d 0x50;\n  return;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [
        "FUN_00080e18"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_000815d4": {
      "entrypoint": "0x000815d4",
      "current_name": "FUN_000815d4",
      "code": "\nundefined4 * FUN_000815d4(undefined4 *param_1,undefined4 param_2)\n\n{\n  UARTClass();\n  *param_1 \u003d \u0026PTR_FUN_00081454_1_000857d8;\n  param_1[9] \u003d param_2;\n  return param_1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00080c0c"
      ],
      "called": [
        "FUN_000814e4"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_000815f8": {
      "entrypoint": "0x000815f8",
      "current_name": "FUN_000815f8",
      "code": "\nuint FUN_000815f8(int param_1,uint param_2)\n\n{\n  return param_2 | param_1 \u003c\u003c 8;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00080410"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_000815fe": {
      "entrypoint": "0x000815fe",
      "current_name": "FUN_000815fe",
      "code": "\nundefined4 * FUN_000815fe(undefined4 *param_1)\n\n{\n  free(*param_1);\n  return param_1;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [
        "FUN_00081e04"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0008160c": {
      "entrypoint": "0x0008160c",
      "current_name": "FUN_0008160c",
      "code": "\nvoid FUN_0008160c(int *param_1)\n\n{\n  if (*param_1 !\u003d 0) {\n    free();\n  }\n  *param_1 \u003d 0;\n  param_1[2] \u003d 0;\n  param_1[1] \u003d 0;\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_0008165c"
      ],
      "called": [
        "FUN_00081e04"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00081622": {
      "entrypoint": "0x00081622",
      "current_name": "FUN_00081622",
      "code": "\nint FUN_00081622(int *param_1,int param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  \n  iVar1 \u003d realloc(*param_1,param_2 + 1,param_3,param_4,param_4);\n  if (iVar1 !\u003d 0) {\n    *param_1 \u003d iVar1;\n    param_1[1] \u003d param_2;\n    iVar1 \u003d 1;\n  }\n  return iVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_0008163a"
      ],
      "called": [
        "FUN_000825a0"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0008163a": {
      "entrypoint": "0x0008163a",
      "current_name": "FUN_0008163a",
      "code": "\nundefined4 FUN_0008163a(int *param_1,uint param_2)\n\n{\n  int iVar1;\n  \n  if ((*param_1 \u003d\u003d 0) || ((uint)param_1[1] \u003c param_2)) {\n    iVar1 \u003d changeBuffer(param_1);\n    if (iVar1 \u003d\u003d 0) {\n      return 0;\n    }\n    if (param_1[2] \u003d\u003d 0) {\n      *(undefined *)*param_1 \u003d 0;\n    }\n  }\n  return 1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_0008165c"
      ],
      "called": [
        "FUN_00081622"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0008165c": {
      "entrypoint": "0x0008165c",
      "current_name": "FUN_0008165c",
      "code": "\nundefined4 * FUN_0008165c(undefined4 *param_1,undefined4 param_2,undefined4 param_3)\n\n{\n  int iVar1;\n  \n  iVar1 \u003d reserve(param_1,param_3);\n  if (iVar1 \u003d\u003d 0) {\n    invalidate(param_1);\n  }\n  else {\n    param_1[2] \u003d param_3;\n    strcpy(*param_1,param_2);\n  }\n  return param_1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00081682"
      ],
      "called": [
        "FUN_0008160c",
        "FUN_0008163a",
        "FUN_00082994"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00081682": {
      "entrypoint": "0x00081682",
      "current_name": "FUN_00081682",
      "code": "\nundefined4 * FUN_00081682(undefined4 *param_1,int param_2)\n\n{\n  undefined4 uVar1;\n  \n  *param_1 \u003d 0;\n  param_1[1] \u003d 0;\n  param_1[2] \u003d 0;\n  if (param_2 !\u003d 0) {\n    uVar1 \u003d strlen(param_2);\n    copy(param_1,param_2,uVar1);\n  }\n  return param_1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00080a68"
      ],
      "called": [
        "FUN_00082a50",
        "FUN_0008165c"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_000816a6": {
      "entrypoint": "0x000816a6",
      "current_name": "FUN_000816a6",
      "code": "\nvoid FUN_000816a6(void)\n\n{\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_000816a8"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_000816a8": {
      "entrypoint": "0x000816a8",
      "current_name": "FUN_000816a8",
      "code": "\nvoid FUN_000816a8(void)\n\n{\n  _watchdogDefaultSetup();\n  FUN_00080ae4();\n  initVariant();\n  delay(1);\n  setup();\n  do {\n    loop();\n    serialEventRun();\n  } while( true );\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00080f24"
      ],
      "called": [
        "FUN_000805d0",
        "FUN_0008120c",
        "FUN_00080ae4",
        "FUN_000804a8",
        "FUN_000816a6",
        "FUN_000816d4",
        "FUN_00080ce0"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_000816d4": {
      "entrypoint": "0x000816d4",
      "current_name": "FUN_000816d4",
      "code": "\n\n\nvoid FUN_000816d4(void)\n\n{\n  _DAT_400e1a54 \u003d 0x8000;\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_000816a8"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00081714": {
      "entrypoint": "0x00081714",
      "current_name": "FUN_00081714",
      "code": "\nundefined4 FUN_00081714(void)\n\n{\n  return DAT_20071184;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00081208"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00081730": {
      "entrypoint": "0x00081730",
      "current_name": "FUN_00081730",
      "code": "\nuint FUN_00081730(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  int iVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  bool bVar8;\n  \n  uVar3 \u003d param_2 ^ 0x80000000;\n  uVar5 \u003d param_1 \u003c\u003c 1;\n  bVar8 \u003d uVar5 \u003d\u003d 0;\n  if (!bVar8) {\n    param_4 \u003d param_2 \u003c\u003c 1;\n    bVar8 \u003d param_4 \u003d\u003d 0;\n  }\n  if (!bVar8) {\n    bVar8 \u003d uVar5 \u003d\u003d param_4;\n  }\n  iVar1 \u003d (int)uVar5 \u003e\u003e 0x18;\n  if (!bVar8) {\n    bVar8 \u003d iVar1 \u003d\u003d -1;\n  }\n  if (!bVar8) {\n    bVar8 \u003d (int)param_4 \u003e\u003e 0x18 \u003d\u003d -1;\n  }\n  if (bVar8) {\n    iVar2 \u003d (int)(param_2 \u003c\u003c 1) \u003e\u003e 0x18;\n    if (iVar1 \u003d\u003d -1 || iVar2 \u003d\u003d -1) {\n      uVar5 \u003d uVar3;\n      if (iVar1 \u003d\u003d -1) {\n        uVar5 \u003d param_1;\n      }\n      if (iVar1 !\u003d -1 || iVar2 !\u003d -1) {\n        uVar3 \u003d uVar5;\n      }\n      bVar8 \u003d (uVar5 \u0026 0x7fffff) \u003d\u003d 0;\n      if (bVar8) {\n        bVar8 \u003d (uVar3 \u0026 0x7fffff) \u003d\u003d 0;\n      }\n      if (bVar8) {\n        bVar8 \u003d uVar5 \u003d\u003d uVar3;\n      }\n      if (!bVar8) {\n        uVar5 \u003d uVar5 | 0x400000;\n      }\n      return uVar5;\n    }\n    if (((param_1 ^ uVar3) \u0026 0x7fffffff) !\u003d 0) {\n      if (uVar5 \u003d\u003d 0) {\n        param_1 \u003d uVar3;\n      }\n      return param_1;\n    }\n    if (param_1 !\u003d uVar3) {\n      return 0;\n    }\n    if ((uVar5 \u0026 0xff000000) \u003d\u003d 0) {\n      uVar3 \u003d param_1 \u003c\u003c 1;\n      if ((param_1 \u0026 0x80000000) !\u003d 0) {\n        uVar3 \u003d uVar3 | 0x80000000;\n      }\n      return uVar3;\n    }\n    if (uVar5 \u003c 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 \u003d param_1 \u0026 0x80000000;\nLAB_0008186a:\n    return param_1 | 0x7f800000;\n  }\n  uVar5 \u003d uVar5 \u003e\u003e 0x18;\n  param_4 \u003d param_4 \u003e\u003e 0x18;\n  uVar7 \u003d param_4 - uVar5;\n  bVar8 \u003d uVar7 !\u003d 0;\n  uVar6 \u003d uVar5;\n  if (bVar8 \u0026\u0026 uVar5 \u003c\u003d param_4) {\n    uVar6 \u003d uVar5 + uVar7;\n  }\n  if (bVar8 \u0026\u0026 uVar5 \u003c\u003d param_4) {\n    uVar3 \u003d uVar3 ^ param_1;\n  }\n  if (bVar8 \u0026\u0026 uVar5 \u003c\u003d param_4) {\n    param_1 \u003d param_1 ^ uVar3;\n  }\n  if (bVar8 \u0026\u0026 uVar5 \u003c\u003d param_4) {\n    uVar3 \u003d uVar3 ^ param_1;\n  }\n  if (param_4 \u003c uVar5) {\n    uVar7 \u003d -uVar7;\n  }\n  if (0x19 \u003c uVar7) {\n    return param_1;\n  }\n  uVar5 \u003d param_1 \u0026 0xffffff | 0x800000;\n  if ((param_1 \u0026 0x80000000) !\u003d 0) {\n    uVar5 \u003d -uVar5;\n  }\n  uVar4 \u003d uVar3 \u0026 0xffffff | 0x800000;\n  if ((uVar3 \u0026 0x80000000) !\u003d 0) {\n    uVar4 \u003d -uVar4;\n  }\n  if (uVar6 \u003d\u003d uVar7) {\n    uVar4 \u003d uVar4 ^ 0x800000;\n    if (uVar6 \u003d\u003d 0) {\n      uVar5 \u003d uVar5 ^ 0x800000;\n      uVar6 \u003d 1;\n    }\n    else {\n      uVar7 \u003d uVar7 - 1;\n    }\n  }\n  uVar5 \u003d uVar5 + ((int)uVar4 \u003e\u003e (uVar7 \u0026 0xff));\n  uVar4 \u003d uVar4 \u003c\u003c (0x20 - uVar7 \u0026 0xff);\n  param_1 \u003d uVar5 \u0026 0x80000000;\n  if ((int)uVar5 \u003c 0) {\n    bVar8 \u003d uVar4 !\u003d 0;\n    uVar4 \u003d -uVar4;\n    uVar5 \u003d -uVar5 - (uint)bVar8;\n  }\n  if (uVar5 \u003c 0x800000) {\n    uVar3 \u003d uVar4 \u0026 0x80000000;\n    uVar4 \u003d uVar4 \u003c\u003c 1;\n    uVar5 \u003d uVar5 * 2 + (uint)(uVar3 !\u003d 0);\n    uVar3 \u003d uVar6 - 2;\n    if ((uVar5 \u0026 0x800000) \u003d\u003d 0) {\n      uVar7 \u003d LZCOUNT(uVar5) - 8;\n      uVar5 \u003d uVar5 \u003c\u003c (uVar7 \u0026 0xff);\n      if ((int)uVar3 \u003c (int)uVar7) {\n        uVar5 \u003d uVar5 \u003e\u003e (-(uVar3 - uVar7) \u0026 0xff);\n      }\n      else {\n        uVar5 \u003d uVar5 + (uVar3 - uVar7) * 0x800000;\n      }\n      return uVar5 | param_1;\n    }\n  }\n  else {\n    uVar3 \u003d uVar6 - 1;\n    if (0xffffff \u003c uVar5) {\n      uVar3 \u003d uVar5 \u0026 1;\n      uVar5 \u003d uVar5 \u003e\u003e 1;\n      uVar4 \u003d (uint)(uVar3 !\u003d 0) \u003c\u003c 0x1f | uVar4 \u003e\u003e 1;\n      uVar3 \u003d uVar6;\n      if (0xfd \u003c uVar6) goto LAB_0008186a;\n    }\n  }\n  uVar5 \u003d uVar5 + uVar3 * 0x800000 + (uint)(0x7fffffff \u003c uVar4);\n  if (uVar4 \u003d\u003d 0x80000000) {\n    uVar5 \u003d uVar5 \u0026 0xfffffffe;\n  }\n  return uVar5 | param_1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_000805d0"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00081734": {
      "entrypoint": "0x00081734",
      "current_name": "FUN_00081734",
      "code": "\nuint FUN_00081734(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  int iVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  bool bVar7;\n  \n  uVar4 \u003d param_1 \u003c\u003c 1;\n  bVar7 \u003d uVar4 \u003d\u003d 0;\n  if (!bVar7) {\n    param_4 \u003d param_2 \u003c\u003c 1;\n    bVar7 \u003d param_4 \u003d\u003d 0;\n  }\n  if (!bVar7) {\n    bVar7 \u003d uVar4 \u003d\u003d param_4;\n  }\n  iVar1 \u003d (int)uVar4 \u003e\u003e 0x18;\n  if (!bVar7) {\n    bVar7 \u003d iVar1 \u003d\u003d -1;\n  }\n  if (!bVar7) {\n    bVar7 \u003d (int)param_4 \u003e\u003e 0x18 \u003d\u003d -1;\n  }\n  if (bVar7) {\n    iVar2 \u003d (int)(param_2 \u003c\u003c 1) \u003e\u003e 0x18;\n    if (iVar1 \u003d\u003d -1 || iVar2 \u003d\u003d -1) {\n      uVar4 \u003d param_2;\n      if (iVar1 \u003d\u003d -1) {\n        uVar4 \u003d param_1;\n      }\n      if (iVar1 !\u003d -1 || iVar2 !\u003d -1) {\n        param_2 \u003d uVar4;\n      }\n      bVar7 \u003d (uVar4 \u0026 0x7fffff) \u003d\u003d 0;\n      if (bVar7) {\n        bVar7 \u003d (param_2 \u0026 0x7fffff) \u003d\u003d 0;\n      }\n      if (bVar7) {\n        bVar7 \u003d uVar4 \u003d\u003d param_2;\n      }\n      if (!bVar7) {\n        uVar4 \u003d uVar4 | 0x400000;\n      }\n      return uVar4;\n    }\n    if (((param_1 ^ param_2) \u0026 0x7fffffff) !\u003d 0) {\n      if (uVar4 \u003d\u003d 0) {\n        param_1 \u003d param_2;\n      }\n      return param_1;\n    }\n    if (param_1 !\u003d param_2) {\n      return 0;\n    }\n    if ((uVar4 \u0026 0xff000000) \u003d\u003d 0) {\n      uVar4 \u003d param_1 \u003c\u003c 1;\n      if ((param_1 \u0026 0x80000000) !\u003d 0) {\n        uVar4 \u003d uVar4 | 0x80000000;\n      }\n      return uVar4;\n    }\n    if (uVar4 \u003c 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 \u003d param_1 \u0026 0x80000000;\nLAB_0008186a:\n    return param_1 | 0x7f800000;\n  }\n  uVar4 \u003d uVar4 \u003e\u003e 0x18;\n  param_4 \u003d param_4 \u003e\u003e 0x18;\n  uVar6 \u003d param_4 - uVar4;\n  bVar7 \u003d uVar6 !\u003d 0;\n  uVar5 \u003d uVar4;\n  if (bVar7 \u0026\u0026 uVar4 \u003c\u003d param_4) {\n    uVar5 \u003d uVar4 + uVar6;\n  }\n  if (bVar7 \u0026\u0026 uVar4 \u003c\u003d param_4) {\n    param_2 \u003d param_2 ^ param_1;\n  }\n  if (bVar7 \u0026\u0026 uVar4 \u003c\u003d param_4) {\n    param_1 \u003d param_1 ^ param_2;\n  }\n  if (bVar7 \u0026\u0026 uVar4 \u003c\u003d param_4) {\n    param_2 \u003d param_2 ^ param_1;\n  }\n  if (param_4 \u003c uVar4) {\n    uVar6 \u003d -uVar6;\n  }\n  if (0x19 \u003c uVar6) {\n    return param_1;\n  }\n  uVar4 \u003d param_1 \u0026 0xffffff | 0x800000;\n  if ((param_1 \u0026 0x80000000) !\u003d 0) {\n    uVar4 \u003d -uVar4;\n  }\n  uVar3 \u003d param_2 \u0026 0xffffff | 0x800000;\n  if ((param_2 \u0026 0x80000000) !\u003d 0) {\n    uVar3 \u003d -uVar3;\n  }\n  if (uVar5 \u003d\u003d uVar6) {\n    uVar3 \u003d uVar3 ^ 0x800000;\n    if (uVar5 \u003d\u003d 0) {\n      uVar4 \u003d uVar4 ^ 0x800000;\n      uVar5 \u003d 1;\n    }\n    else {\n      uVar6 \u003d uVar6 - 1;\n    }\n  }\n  uVar4 \u003d uVar4 + ((int)uVar3 \u003e\u003e (uVar6 \u0026 0xff));\n  uVar3 \u003d uVar3 \u003c\u003c (0x20 - uVar6 \u0026 0xff);\n  param_1 \u003d uVar4 \u0026 0x80000000;\n  if ((int)uVar4 \u003c 0) {\n    bVar7 \u003d uVar3 !\u003d 0;\n    uVar3 \u003d -uVar3;\n    uVar4 \u003d -uVar4 - (uint)bVar7;\n  }\n  if (uVar4 \u003c 0x800000) {\n    uVar6 \u003d uVar3 \u0026 0x80000000;\n    uVar3 \u003d uVar3 \u003c\u003c 1;\n    uVar4 \u003d uVar4 * 2 + (uint)(uVar6 !\u003d 0);\n    uVar6 \u003d uVar5 - 2;\n    if ((uVar4 \u0026 0x800000) \u003d\u003d 0) {\n      uVar5 \u003d LZCOUNT(uVar4) - 8;\n      uVar4 \u003d uVar4 \u003c\u003c (uVar5 \u0026 0xff);\n      if ((int)uVar6 \u003c (int)uVar5) {\n        uVar4 \u003d uVar4 \u003e\u003e (-(uVar6 - uVar5) \u0026 0xff);\n      }\n      else {\n        uVar4 \u003d uVar4 + (uVar6 - uVar5) * 0x800000;\n      }\n      return uVar4 | param_1;\n    }\n  }\n  else {\n    uVar6 \u003d uVar5 - 1;\n    if (0xffffff \u003c uVar4) {\n      uVar6 \u003d uVar4 \u0026 1;\n      uVar4 \u003d uVar4 \u003e\u003e 1;\n      uVar3 \u003d (uint)(uVar6 !\u003d 0) \u003c\u003c 0x1f | uVar3 \u003e\u003e 1;\n      uVar6 \u003d uVar5;\n      if (0xfd \u003c uVar5) goto LAB_0008186a;\n    }\n  }\n  uVar4 \u003d uVar4 + uVar6 * 0x800000 + (uint)(0x7fffffff \u003c uVar3);\n  if (uVar3 \u003d\u003d 0x80000000) {\n    uVar4 \u003d uVar4 \u0026 0xfffffffe;\n  }\n  return uVar4 | param_1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_000805d0"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00081894": {
      "entrypoint": "0x00081894",
      "current_name": "FUN_00081894",
      "code": "\nuint FUN_00081894(uint param_1)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  \n  if (param_1 \u003d\u003d 0) {\n    return 0;\n  }\n  uVar1 \u003d LZCOUNT(param_1);\n  uVar2 \u003d uVar1 - 8;\n  iVar3 \u003d uVar2 * -0x800000 + 0x4a800000;\n  if (7 \u003c uVar1) {\n    uVar4 \u003d 0 \u003c\u003c (uVar2 \u0026 0xff);\n    uVar1 \u003d iVar3 + (param_1 \u003c\u003c (uVar2 \u0026 0xff)) +\n            (0U \u003e\u003e (0x20 - uVar2 \u0026 0xff)) + (uint)(0x7fffffff \u003c uVar4);\n    if (uVar4 \u003d\u003d 0x80000000) {\n      uVar1 \u003d uVar1 \u0026 0xfffffffe;\n    }\n    return uVar1;\n  }\n  uVar2 \u003d param_1 \u003c\u003c uVar1 + 0x18;\n  uVar1 \u003d iVar3 + ((param_1 \u003e\u003e (0x20 - (uVar1 + 0x18) \u0026 0xff)) - ((int)uVar2 \u003e\u003e 0x1f));\n  if ((uVar2 \u0026 0x7fffffff) \u003d\u003d 0) {\n    uVar1 \u003d uVar1 \u0026 ~(uVar2 \u003e\u003e 0x1f);\n  }\n  return uVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_000805d0"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0008189c": {
      "entrypoint": "0x0008189c",
      "current_name": "FUN_0008189c",
      "code": "\nuint FUN_0008189c(uint param_1)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  \n  uVar3 \u003d param_1 \u0026 0x80000000;\n  if ((int)uVar3 \u003c 0) {\n    param_1 \u003d -param_1;\n  }\n  if (param_1 \u003d\u003d 0) {\n    return 0;\n  }\n  uVar1 \u003d LZCOUNT(param_1);\n  uVar2 \u003d uVar1 - 8;\n  iVar4 \u003d ((uVar3 | 0x4b000000) - 0x800000) + uVar2 * -0x800000;\n  if (7 \u003c uVar1) {\n    uVar1 \u003d 0 \u003c\u003c (uVar2 \u0026 0xff);\n    uVar3 \u003d iVar4 + (param_1 \u003c\u003c (uVar2 \u0026 0xff)) +\n            (0U \u003e\u003e (0x20 - uVar2 \u0026 0xff)) + (uint)(0x7fffffff \u003c uVar1);\n    if (uVar1 \u003d\u003d 0x80000000) {\n      uVar3 \u003d uVar3 \u0026 0xfffffffe;\n    }\n    return uVar3;\n  }\n  uVar2 \u003d param_1 \u003c\u003c uVar1 + 0x18;\n  uVar3 \u003d iVar4 + ((param_1 \u003e\u003e (0x20 - (uVar1 + 0x18) \u0026 0xff)) - ((int)uVar2 \u003e\u003e 0x1f));\n  if ((uVar2 \u0026 0x7fffffff) \u003d\u003d 0) {\n    uVar3 \u003d uVar3 \u0026 ~(uVar2 \u003e\u003e 0x1f);\n  }\n  return uVar3;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_000805d0"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00081944": {
      "entrypoint": "0x00081944",
      "current_name": "FUN_00081944",
      "code": "\nuint FUN_00081944(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  longlong lVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  int iVar5;\n  uint uVar6;\n  int iVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  \n  uVar3 \u003d param_1 \u003e\u003e 0x17 \u0026 0xff;\n  bVar9 \u003d uVar3 \u003d\u003d 0;\n  if (!bVar9) {\n    param_4 \u003d param_2 \u003e\u003e 0x17 \u0026 0xff;\n    bVar9 \u003d param_4 \u003d\u003d 0;\n  }\n  if (!bVar9) {\n    bVar9 \u003d uVar3 \u003d\u003d 0xff;\n  }\n  if (!bVar9) {\n    bVar9 \u003d param_4 \u003d\u003d 0xff;\n  }\n  if (bVar9) {\n    param_4 \u003d param_2 \u003e\u003e 0x17 \u0026 0xff;\n    if (uVar3 \u003d\u003d 0xff || param_4 \u003d\u003d 0xff) {\n      bVar9 \u003d param_1 \u003d\u003d 0 || param_1 \u003d\u003d 0x80000000;\n      uVar2 \u003d param_2;\n      if (param_1 !\u003d 0 \u0026\u0026 param_1 !\u003d 0x80000000) {\n        bVar9 \u003d param_2 \u003d\u003d 0;\n        uVar2 \u003d param_1;\n      }\n      if (!bVar9) {\n        bVar9 \u003d param_2 \u003d\u003d 0x80000000;\n      }\n      uVar8 \u003d uVar2;\n      if (((bVar9) || ((uVar3 \u003d\u003d 0xff \u0026\u0026 ((uVar2 \u0026 0x7fffff) !\u003d 0)))) ||\n         ((param_4 \u003d\u003d 0xff \u0026\u0026 (uVar8 \u003d param_2, (param_2 \u0026 0x7fffff) !\u003d 0)))) {\n        return uVar8 | 0x7fc00000;\n      }\n      uVar2 \u003d uVar2 ^ param_2;\n      goto LAB_00081a94;\n    }\n    bVar9 \u003d (param_1 \u0026 0x7fffffff) \u003d\u003d 0;\n    if (!bVar9) {\n      bVar9 \u003d (param_2 \u0026 0x7fffffff) \u003d\u003d 0;\n    }\n    if (bVar9) {\n      return (param_1 ^ param_2) \u0026 0x80000000;\n    }\n    bVar9 \u003d uVar3 \u003d\u003d 0;\n    uVar2 \u003d param_1 \u0026 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_1 \u003d param_1 \u003c\u003c 1;\n        bVar9 \u003d (param_1 \u0026 0x800000) \u003d\u003d 0;\n      }\n      if (!bVar9) break;\n      uVar3 \u003d uVar3 - 1;\n    }\n    param_1 \u003d param_1 | uVar2;\n    bVar9 \u003d param_4 \u003d\u003d 0;\n    uVar2 \u003d param_2 \u0026 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_2 \u003d param_2 \u003c\u003c 1;\n        bVar9 \u003d (param_2 \u0026 0x800000) \u003d\u003d 0;\n      }\n      if (!bVar9) break;\n      param_4 \u003d param_4 - 1;\n    }\n    param_2 \u003d param_2 | uVar2;\n  }\n  iVar4 \u003d uVar3 + param_4;\n  uVar8 \u003d param_1 ^ param_2;\n  uVar3 \u003d param_1 \u003c\u003c 9;\n  bVar9 \u003d uVar3 \u003d\u003d 0;\n  if (!bVar9) {\n    param_2 \u003d param_2 \u003c\u003c 9;\n    bVar9 \u003d param_2 \u003d\u003d 0;\n  }\n  if (bVar9) {\n    if (uVar3 \u003d\u003d 0) {\n      param_2 \u003d param_2 \u003c\u003c 9;\n    }\n    uVar2 \u003d uVar8 \u0026 0x80000000 | param_1 \u0026 0x7fffff | param_2 \u003e\u003e 9;\n    bVar10 \u003d SBORROW4(iVar4,0x7f);\n    iVar5 \u003d iVar4 + -0x7f;\n    bVar9 \u003d iVar5 \u003d\u003d 0;\n    iVar7 \u003d iVar5;\n    if (!bVar9 \u0026\u0026 0x7e \u003c iVar4) {\n      bVar10 \u003d SBORROW4(0xff,iVar5);\n      iVar7 \u003d 0xff - iVar5;\n      bVar9 \u003d iVar5 \u003d\u003d 0xff;\n    }\n    if (!bVar9 \u0026\u0026 iVar7 \u003c 0 \u003d\u003d bVar10) {\n      uVar2 \u003d uVar2 | iVar5 * 0x800000;\n    }\n    if (!bVar9 \u0026\u0026 iVar7 \u003c 0 \u003d\u003d bVar10) {\n      return uVar2;\n    }\n    uVar2 \u003d uVar2 | 0x800000;\n    uVar6 \u003d 0;\n    bVar10 \u003d SBORROW4(iVar5,1);\n    uVar8 \u003d iVar4 - 0x80;\n    bVar9 \u003d uVar8 \u003d\u003d 0;\n    uVar3 \u003d uVar8;\n  }\n  else {\n    lVar1 \u003d (ulonglong)(uVar3 \u003e\u003e 5 | 0x8000000) * (ulonglong)(param_2 \u003e\u003e 5 | 0x8000000);\n    uVar6 \u003d (uint)lVar1;\n    uVar2 \u003d (uint)((ulonglong)lVar1 \u003e\u003e 0x20);\n    bVar9 \u003d uVar2 \u003c 0x800000;\n    if (bVar9) {\n      uVar2 \u003d uVar2 \u003c\u003c 1;\n    }\n    if (bVar9) {\n      uVar2 \u003d uVar2 | uVar6 \u003e\u003e 0x1f;\n      uVar6 \u003d uVar6 \u003c\u003c 1;\n    }\n    uVar2 \u003d uVar8 \u0026 0x80000000 | uVar2;\n    uVar8 \u003d (iVar4 + -0x7f) - (uint)bVar9;\n    bVar10 \u003d SBORROW4(uVar8,0xfd);\n    bVar9 \u003d uVar8 \u003d\u003d 0xfd;\n    uVar3 \u003d uVar8 - 0xfd;\n    if (uVar8 \u003c 0xfe) {\n      uVar2 \u003d uVar2 + uVar8 * 0x800000 + (uint)(0x7fffffff \u003c uVar6);\n      if (uVar6 \u003d\u003d 0x80000000) {\n        uVar2 \u003d uVar2 \u0026 0xfffffffe;\n      }\n      return uVar2;\n    }\n  }\n  if (bVar9 || (int)uVar3 \u003c 0 !\u003d bVar10) {\n    bVar9 \u003d (int)(uVar8 + 0x19) \u003c 0;\n    if (uVar8 \u003d\u003d 0xffffffe7 || bVar9 !\u003d SCARRY4(uVar8,0x19)) {\n      uVar2 \u003d uVar2 \u0026 0x80000000;\n    }\n    if (uVar8 !\u003d 0xffffffe7 \u0026\u0026 bVar9 \u003d\u003d SCARRY4(uVar8,0x19)) {\n      uVar3 \u003d (uVar2 \u003c\u003c 1) \u003e\u003e (-uVar8 \u0026 0xff);\n      uVar8 \u003d uVar2 \u003c\u003c (uVar8 + 0x20 \u0026 0xff);\n      uVar3 \u003d ((uint)((uVar2 \u0026 0x80000000) !\u003d 0) \u003c\u003c 0x1f | uVar3 \u003e\u003e 1) + (uint)((byte)uVar3 \u0026 1);\n      if ((uVar6 | uVar8 \u003c\u003c 1) \u003d\u003d 0) {\n        uVar3 \u003d uVar3 \u0026 ~(uVar8 \u003e\u003e 0x1f);\n      }\n      return uVar3;\n    }\n    return uVar2;\n  }\nLAB_00081a94:\n  return uVar2 \u0026 0x80000000 | 0x7f800000;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_000805d0"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00081bf4": {
      "entrypoint": "0x00081bf4",
      "current_name": "FUN_00081bf4",
      "code": "\nuint FUN_00081bf4(uint param_1,uint param_2)\n\n{\n  bool bVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  bool bVar5;\n  \n  uVar2 \u003d param_1 * 2;\n  uVar3 \u003d param_2 * 2;\n  if (((int)uVar2 \u003e\u003e 0x18 \u003d\u003d -1 || (int)uVar3 \u003e\u003e 0x18 \u003d\u003d -1) \u0026\u0026\n     ((((int)uVar2 \u003e\u003e 0x18 \u003d\u003d -1 \u0026\u0026 ((param_1 \u0026 0x7fffff) !\u003d 0)) ||\n      (((int)uVar3 \u003e\u003e 0x18 \u003d\u003d -1 \u0026\u0026 ((param_2 \u0026 0x7fffff) !\u003d 0)))))) {\n    return 1;\n  }\n  uVar4 \u003d uVar2 | param_2 \u0026 0x7fffffff;\n  bVar5 \u003d uVar4 \u003d\u003d 0;\n  if (!bVar5) {\n    uVar4 \u003d param_1 ^ param_2;\n    bVar5 \u003d uVar4 \u003d\u003d 0;\n  }\n  bVar1 \u003d -1 \u003c (int)uVar4;\n  if (bVar1) {\n    param_1 \u003d uVar2 + param_2 * -2;\n    bVar5 \u003d param_1 \u003d\u003d 0;\n  }\n  if ((bVar1 \u0026\u0026 uVar3 \u003c\u003d uVar2) \u0026\u0026 !bVar5) {\n    param_1 \u003d (int)param_2 \u003e\u003e 0x1f;\n  }\n  if (!bVar1 || uVar3 \u003e uVar2) {\n    param_1 \u003d ~((int)param_2 \u003e\u003e 0x1f);\n  }\n  if (!bVar5) {\n    param_1 \u003d param_1 | 1;\n  }\n  return param_1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00081c5c"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00081c54": {
      "entrypoint": "0x00081c54",
      "current_name": "FUN_00081c54",
      "code": "\nvoid FUN_00081c54(undefined4 param_1,undefined4 param_2)\n\n{\n  __aeabi_cfcmpeq(param_2,param_1);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00081ca8"
      ],
      "called": [
        "FUN_00081c5c"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00081c5c": {
      "entrypoint": "0x00081c5c",
      "current_name": "FUN_00081c5c",
      "code": "\nundefined8 FUN_00081c5c(undefined4 param_1,undefined4 param_2)\n\n{\n  __cmpsf2();\n  return CONCAT44(param_2,param_1);\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00081c54",
        "FUN_00081c94"
      ],
      "called": [
        "FUN_00081bf4"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00081c94": {
      "entrypoint": "0x00081c94",
      "current_name": "FUN_00081c94",
      "code": "\nbool FUN_00081c94(void)\n\n{\n  undefined in_ZR;\n  undefined in_CY;\n  \n  __aeabi_cfcmpeq();\n  return !(bool)in_CY || (bool)in_ZR;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_000805d0"
      ],
      "called": [
        "FUN_00081c5c"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00081ca8": {
      "entrypoint": "0x00081ca8",
      "current_name": "FUN_00081ca8",
      "code": "\nbool FUN_00081ca8(void)\n\n{\n  undefined in_ZR;\n  undefined in_CY;\n  \n  __aeabi_cfrcmple();\n  return !(bool)in_CY || (bool)in_ZR;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_000805d0"
      ],
      "called": [
        "FUN_00081c54"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00081cd0": {
      "entrypoint": "0x00081cd0",
      "current_name": "FUN_00081cd0",
      "code": "\nuint FUN_00081cd0(uint param_1)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 \u003c\u003c 1 \u003c 0x7f000000) {\n    return 0;\n  }\n  uVar1 \u003d (param_1 \u003c\u003c 1) \u003e\u003e 0x18;\n  uVar2 \u003d 0x9e - uVar1;\n  if (uVar1 \u003c 0x9f \u0026\u0026 uVar2 !\u003d 0) {\n    uVar1 \u003d (param_1 \u003c\u003c 8 | 0x80000000) \u003e\u003e (uVar2 \u0026 0xff);\n    if ((param_1 \u0026 0x80000000) !\u003d 0) {\n      uVar1 \u003d -uVar1;\n    }\n    return uVar1;\n  }\n  if ((uVar2 \u003d\u003d 0xffffff9f) \u0026\u0026 ((param_1 \u0026 0x7fffff) !\u003d 0)) {\n    return 0;\n  }\n  param_1 \u003d param_1 \u0026 0x80000000;\n  if (param_1 \u003d\u003d 0) {\n    param_1 \u003d 0x7fffffff;\n  }\n  return param_1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_000805d0"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00081d1c": {
      "entrypoint": "0x00081d1c",
      "current_name": "FUN_00081d1c",
      "code": "\nuint FUN_00081d1c(uint param_1)\n\n{\n  uint uVar1;\n  \n  if (((param_1 \u0026 0x80000000) !\u003d 0) || (param_1 \u003c\u003c 1 \u003c 0x7f000000)) {\n    return 0;\n  }\n  uVar1 \u003d 0x9e - ((param_1 \u003c\u003c 1) \u003e\u003e 0x18);\n  if (-1 \u003c (int)uVar1) {\n    return (param_1 \u003c\u003c 8 | 0x80000000) \u003e\u003e (uVar1 \u0026 0xff);\n  }\n  if ((uVar1 \u003d\u003d 0xffffff9f) \u0026\u0026 ((param_1 \u0026 0x7fffff) !\u003d 0)) {\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_000805d0"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00081d5c": {
      "entrypoint": "0x00081d5c",
      "current_name": "FUN_00081d5c",
      "code": "\nundefined4 FUN_00081d5c(dword param_1,dword param_2,dword param_3)\n\n{\n  dword *pdVar1;\n  uint uVar2;\n  uint uVar3;\n  \n  if (Elf32_Rel_ARRAY_20070000[48].r_offset \u003d\u003d 0) {\n    Elf32_Rel_ARRAY_20070000[48].r_offset \u003d 0x20070184;\n  }\n  uVar2 \u003d *(uint *)(Elf32_Rel_ARRAY_20070000[48].r_offset + 4);\n  pdVar1 \u003d (dword *)Elf32_Rel_ARRAY_20070000[48].r_offset;\n  if (0x1f \u003c (int)uVar2) {\n    pdVar1 \u003d (dword *)malloc(400);\n    if (pdVar1 \u003d\u003d (dword *)0x0) {\n      return 0xffffffff;\n    }\n    *pdVar1 \u003d Elf32_Rel_ARRAY_20070000[48].r_offset;\n    pdVar1[1] \u003d 0;\n    uVar2 \u003d 0;\n    Elf32_Rel_ARRAY_20070000[48].r_offset \u003d (dword)pdVar1;\n    pdVar1[0x62] \u003d 0;\n    pdVar1[99] \u003d 0;\n  }\n  uVar3 \u003d 1 \u003c\u003c (uVar2 \u0026 0xff);\n  pdVar1[uVar2 + 0x22] \u003d param_1;\n  pdVar1[0x62] \u003d pdVar1[0x62] | uVar3;\n  pdVar1[uVar2 + 0x42] \u003d param_3;\n  pdVar1[99] \u003d uVar3 | pdVar1[99];\n  pdVar1[1] \u003d uVar2 + 1;\n  pdVar1[uVar2 + 2] \u003d param_2;\n  return 0;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00080a68"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00081d7c": {
      "entrypoint": "0x00081d7c",
      "current_name": "FUN_00081d7c",
      "code": "\n/* WARNING: Removing unreachable block (ram,0x00081d88) */\n/* WARNING: Removing unreachable block (ram,0x00081d8c) */\n/* WARNING: Removing unreachable block (ram,0x00081db8) */\n\nvoid FUN_00081d7c(void)\n\n{\n  int iVar1;\n  code **ppcVar2;\n  \n  _init();\n  ppcVar2 \u003d (code **)0x85860;\n  iVar1 \u003d 0;\n  do {\n    iVar1 \u003d iVar1 + 1;\n    ppcVar2 \u003d ppcVar2 + 1;\n    (**ppcVar2)();\n  } while (iVar1 !\u003d 4);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00080ae4"
      ],
      "called": [
        "FUN_00083974",
        "FUN_00080118",
        "FUN_00085858"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00081df4": {
      "entrypoint": "0x00081df4",
      "current_name": "FUN_00081df4",
      "code": "\nvoid FUN_00081df4(undefined4 param_1)\n\n{\n  _malloc_r(Elf32_Rel_ARRAY_20070000[140].r_offset,param_1);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00083974"
      ],
      "called": [
        "FUN_00081e14"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00081e04": {
      "entrypoint": "0x00081e04",
      "current_name": "FUN_00081e04",
      "code": "\nvoid FUN_00081e04(undefined4 param_1)\n\n{\n  _free_r(Elf32_Rel_ARRAY_20070000[140].r_offset,param_1);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_0008160c",
        "FUN_000815fe"
      ],
      "called": [
        "FUN_00083d9c"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00081e14": {
      "entrypoint": "0x00081e14",
      "current_name": "FUN_00081e14",
      "code": "\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nint * FUN_00081e14(undefined4 *param_1,uint param_2)\n\n{\n  dword dVar1;\n  int iVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  dword dVar7;\n  uint uVar8;\n  int iVar9;\n  undefined *puVar10;\n  dword dVar11;\n  dword dVar12;\n  int iVar13;\n  dword *pdVar14;\n  uint uVar15;\n  undefined *puVar16;\n  dword *pdVar17;\n  uint uVar18;\n  \n  if (param_2 + 0xb \u003c 0x17) {\n    uVar15 \u003d 0x10;\n    if (0x10 \u003c param_2) goto LAB_00081e7a;\n  }\n  else {\n    uVar15 \u003d param_2 + 0xb \u0026 0xfffffff8;\n    if (((int)uVar15 \u003c 0) || (uVar15 \u003c param_2)) {\nLAB_00081e7a:\n      *param_1 \u003d 0xc;\n      return (int *)0x0;\n    }\n  }\n  __malloc_lock(param_1);\n  dVar1 \u003d Elf32_Rel_ARRAY_20070000[142].r_info;\n  if (uVar15 \u003c 0x1f8) {\n    iVar13 \u003d *(int *)((int)\u0026Elf32_Rel_ARRAY_20070000[0x8e].r_offset + uVar15);\n    if ((iVar13 !\u003d uVar15 + 0x20070464) ||\n       (iVar2 \u003d iVar13 + 8, iVar13 \u003d *(int *)(iVar13 + 0x14), iVar2 !\u003d iVar13)) {\n      iVar5 \u003d *(int *)(iVar13 + 0xc);\n      iVar9 \u003d (*(uint *)(iVar13 + 4) \u0026 0xfffffffc) + iVar13;\n      uVar15 \u003d *(uint *)(iVar9 + 4);\n      iVar2 \u003d *(int *)(iVar13 + 8);\n      *(int *)(iVar2 + 0xc) \u003d iVar5;\n      *(int *)(iVar5 + 8) \u003d iVar2;\n      *(uint *)(iVar9 + 4) \u003d uVar15 | 1;\n      __malloc_unlock(param_1);\n      return (int *)(iVar13 + 8);\n    }\n    uVar18 \u003d (uVar15 \u003e\u003e 3) + 2;\n  }\n  else {\n    uVar18 \u003d uVar15 \u003e\u003e 9;\n    if (uVar18 \u003d\u003d 0) {\n      iVar2 \u003d 0x7e;\n      iVar13 \u003d 0x3f;\n    }\n    else if (uVar18 \u003c 5) {\n      iVar13 \u003d (uVar15 \u003e\u003e 6) + 0x38;\n      iVar2 \u003d iVar13 * 2;\n    }\n    else if (uVar18 \u003c 0x15) {\n      iVar13 \u003d uVar18 + 0x5b;\n      iVar2 \u003d iVar13 * 2;\n    }\n    else if (uVar18 \u003c 0x55) {\n      iVar13 \u003d (uVar15 \u003e\u003e 0xc) + 0x6e;\n      iVar2 \u003d iVar13 * 2;\n    }\n    else if (uVar18 \u003c 0x155) {\n      iVar13 \u003d (uVar15 \u003e\u003e 0xf) + 0x77;\n      iVar2 \u003d iVar13 * 2;\n    }\n    else if (uVar18 \u003c 0x555) {\n      iVar13 \u003d (uVar15 \u003e\u003e 0x12) + 0x7c;\n      iVar2 \u003d iVar13 * 2;\n    }\n    else {\n      iVar2 \u003d 0xfc;\n      iVar13 \u003d 0x7e;\n    }\n    for (dVar7 \u003d (\u0026Elf32_Rel_ARRAY_20070000[0x8e].r_offset)[iVar2]; iVar2 * 4 + 0x20070464U !\u003d dVar7\n        ; dVar7 \u003d *(dword *)(dVar7 + 0xc)) {\n      uVar18 \u003d *(uint *)(dVar7 + 4) \u0026 0xfffffffc;\n      iVar5 \u003d uVar18 - uVar15;\n      if (0xf \u003c iVar5) {\n        iVar13 \u003d iVar13 + -1;\n        break;\n      }\n      if (-1 \u003c iVar5) {\n        iVar2 \u003d uVar18 + dVar7;\n        uVar15 \u003d *(uint *)(iVar2 + 4);\n        iVar5 \u003d *(int *)(dVar7 + 0xc);\n        iVar13 \u003d *(int *)(dVar7 + 8);\n        *(int *)(iVar13 + 0xc) \u003d iVar5;\n        *(int *)(iVar5 + 8) \u003d iVar13;\n        *(uint *)(iVar2 + 4) \u003d uVar15 | 1;\n        __malloc_unlock(param_1);\n        return (int *)(dVar7 + 8);\n      }\n    }\n    uVar18 \u003d iVar13 + 1;\n  }\n  dVar7 \u003d Elf32_Rel_ARRAY_20070000[141].r_offset;\n  if (Elf32_Rel_ARRAY_20070000[142].r_info !\u003d 0x2007046c) {\n    uVar3 \u003d *(uint *)(Elf32_Rel_ARRAY_20070000[142].r_info + 4);\n    uVar4 \u003d uVar3 \u0026 0xfffffffc;\n    uVar6 \u003d uVar4 - uVar15;\n    if (0xf \u003c (int)uVar6) {\n      dVar7 \u003d uVar15 + Elf32_Rel_ARRAY_20070000[142].r_info;\n      *(uint *)(Elf32_Rel_ARRAY_20070000[142].r_info + 4) \u003d uVar15 | 1;\n      Elf32_Rel_ARRAY_20070000[142].r_info \u003d dVar7;\n      Elf32_Rel_ARRAY_20070000[143].r_offset \u003d dVar7;\n      *(undefined4 *)(dVar7 + 0xc) \u003d 0x2007046c;\n      *(undefined4 *)(dVar7 + 8) \u003d 0x2007046c;\n      *(uint *)(dVar7 + 4) \u003d uVar6 | 1;\n      *(uint *)(dVar7 + uVar6) \u003d uVar6;\n      __malloc_unlock(param_1);\n      return (int *)(dVar1 + 8);\n    }\n    Elf32_Rel_ARRAY_20070000[143].r_offset \u003d 0x2007046c;\n    Elf32_Rel_ARRAY_20070000[142].r_info \u003d 0x2007046c;\n    if (-1 \u003c (int)uVar6) {\n      *(uint *)(uVar4 + dVar1 + 4) \u003d *(uint *)(uVar4 + dVar1 + 4) | 1;\n      __malloc_unlock(param_1);\n      return (int *)(dVar1 + 8);\n    }\n    if (uVar4 \u003c 0x200) {\n      uVar4 \u003d uVar3 \u0026 0xfffffff8;\n      iVar13 \u003d *(int *)((int)\u0026Elf32_Rel_ARRAY_20070000[0x8d].r_info + uVar4);\n      dVar7 \u003d 1 \u003c\u003c ((int)(uVar3 \u003e\u003e 3) \u003e\u003e 2 \u0026 0xffU) | Elf32_Rel_ARRAY_20070000[141].r_offset;\n      *(int *)(dVar1 + 8) \u003d iVar13;\n      *(uint *)(dVar1 + 0xc) \u003d uVar4 + 0x20070464;\n      Elf32_Rel_ARRAY_20070000[141].r_offset \u003d dVar7;\n      *(dword *)((int)\u0026Elf32_Rel_ARRAY_20070000[0x8d].r_info + uVar4) \u003d dVar1;\n      *(dword *)(iVar13 + 0xc) \u003d dVar1;\n    }\n    else {\n      uVar6 \u003d uVar3 \u003e\u003e 9;\n      if (uVar6 \u003c 5) {\n        iVar2 \u003d (uVar3 \u003e\u003e 6) + 0x38;\n        iVar13 \u003d iVar2 * 2;\n      }\n      else if (uVar6 \u003c 0x15) {\n        iVar2 \u003d uVar6 + 0x5b;\n        iVar13 \u003d iVar2 * 2;\n      }\n      else if (uVar6 \u003c 0x55) {\n        iVar2 \u003d (uVar3 \u003e\u003e 0xc) + 0x6e;\n        iVar13 \u003d iVar2 * 2;\n      }\n      else if (uVar6 \u003c 0x155) {\n        iVar2 \u003d (uVar3 \u003e\u003e 0xf) + 0x77;\n        iVar13 \u003d iVar2 * 2;\n      }\n      else if (uVar6 \u003c 0x555) {\n        iVar2 \u003d (uVar3 \u003e\u003e 0x12) + 0x7c;\n        iVar13 \u003d iVar2 * 2;\n      }\n      else {\n        iVar13 \u003d 0xfc;\n        iVar2 \u003d 0x7e;\n      }\n      dVar7 \u003d iVar13 * 4 + 0x20070464;\n      dVar11 \u003d (\u0026Elf32_Rel_ARRAY_20070000[0x8d].r_info)[iVar13];\n      if (dVar11 \u003d\u003d dVar7) {\n        Elf32_Rel_ARRAY_20070000[141].r_offset \u003d\n             Elf32_Rel_ARRAY_20070000[141].r_offset | 1 \u003c\u003c (iVar2 \u003e\u003e 2 \u0026 0xffU);\n        dVar12 \u003d dVar11;\n      }\n      else {\n        do {\n          dVar12 \u003d dVar11;\n          if ((*(uint *)(dVar11 + 4) \u0026 0xfffffffc) \u003c\u003d uVar4) break;\n          dVar11 \u003d *(dword *)(dVar11 + 8);\n          dVar12 \u003d dVar11;\n        } while (dVar7 !\u003d dVar11);\n        dVar11 \u003d *(dword *)(dVar12 + 0xc);\n      }\n      dVar7 \u003d Elf32_Rel_ARRAY_20070000[141].r_offset;\n      *(dword *)(dVar1 + 0xc) \u003d dVar11;\n      *(dword *)(dVar1 + 8) \u003d dVar12;\n      *(dword *)(dVar11 + 8) \u003d dVar1;\n      *(dword *)(dVar12 + 0xc) \u003d dVar1;\n    }\n  }\n  dVar1 \u003d Elf32_Rel_ARRAY_20070000[141].r_info;\n  uVar3 \u003d 1 \u003c\u003c ((int)uVar18 \u003e\u003e 2 \u0026 0xffU);\n  if (uVar3 \u003c\u003d dVar7) {\n    if ((dVar7 \u0026 uVar3) \u003d\u003d 0) {\n      uVar18 \u003d uVar18 \u0026 0xfffffffc;\n      do {\n        uVar3 \u003d uVar3 \u003c\u003c 1;\n        uVar18 \u003d uVar18 + 4;\n      } while ((dVar7 \u0026 uVar3) \u003d\u003d 0);\n    }\n    do {\n      pdVar17 \u003d \u0026Elf32_Rel_ARRAY_20070000[uVar18 + 0x8c].r_info;\n      pdVar14 \u003d pdVar17;\n      uVar4 \u003d uVar18;\n      do {\n        for (puVar10 \u003d (undefined *)pdVar14[3]; pdVar14 !\u003d (dword *)puVar10;\n            puVar10 \u003d *(undefined **)(puVar10 + 0xc)) {\n          uVar6 \u003d *(uint *)(puVar10 + 4) \u0026 0xfffffffc;\n          uVar8 \u003d uVar6 - uVar15;\n          if (0xf \u003c (int)uVar8) {\n            iVar2 \u003d *(int *)(puVar10 + 8);\n            iVar13 \u003d *(int *)(puVar10 + 0xc);\n            puVar16 \u003d puVar10 + uVar15;\n            *(uint *)(puVar10 + 4) \u003d uVar15 | 1;\n            *(int *)(iVar2 + 0xc) \u003d iVar13;\n            *(int *)(iVar13 + 8) \u003d iVar2;\n            Elf32_Rel_ARRAY_20070000[142].r_info \u003d (dword)puVar16;\n            Elf32_Rel_ARRAY_20070000[143].r_offset \u003d (dword)puVar16;\n            *(undefined4 *)(puVar16 + 0xc) \u003d 0x2007046c;\n            *(undefined4 *)(puVar16 + 8) \u003d 0x2007046c;\n            *(uint *)(puVar16 + 4) \u003d uVar8 | 1;\n            *(uint *)(puVar16 + uVar8) \u003d uVar8;\n            __malloc_unlock(param_1);\n            return (int *)(puVar10 + 8);\n          }\n          if (-1 \u003c (int)uVar8) {\n            iVar13 \u003d *(int *)(puVar10 + 8);\n            iVar2 \u003d *(int *)(puVar10 + 0xc);\n            *(uint *)(puVar10 + uVar6 + 4) \u003d *(uint *)(puVar10 + uVar6 + 4) | 1;\n            *(int *)(iVar13 + 0xc) \u003d iVar2;\n            *(int *)(iVar2 + 8) \u003d iVar13;\n            __malloc_unlock(param_1);\n            return (int *)(puVar10 + 8);\n          }\n        }\n        uVar4 \u003d uVar4 + 1;\n        pdVar14 \u003d pdVar14 + 2;\n      } while ((uVar4 \u0026 3) !\u003d 0);\n      do {\n        uVar6 \u003d uVar18 \u0026 3;\n        puVar10 \u003d (undefined *)(pdVar17 + -2);\n        uVar18 \u003d uVar18 - 1;\n        if (uVar6 \u003d\u003d 0) {\n          Elf32_Rel_ARRAY_20070000[141].r_offset \u003d Elf32_Rel_ARRAY_20070000[141].r_offset \u0026 ~uVar3;\n          break;\n        }\n        pdVar17 \u003d (dword *)*pdVar17;\n      } while (pdVar17 \u003d\u003d (dword *)puVar10);\n      uVar3 \u003d uVar3 * 2;\n      if ((Elf32_Rel_ARRAY_20070000[141].r_offset \u003c\u003d uVar3 \u0026\u0026\n           uVar3 - Elf32_Rel_ARRAY_20070000[141].r_offset !\u003d 0) || (uVar18 \u003d uVar4, uVar3 \u003d\u003d 0))\n      break;\n      for (; (Elf32_Rel_ARRAY_20070000[141].r_offset \u0026 uVar3) \u003d\u003d 0; uVar3 \u003d uVar3 \u003c\u003c 1) {\n        uVar18 \u003d uVar18 + 4;\n      }\n    } while( true );\n  }\n  uVar18 \u003d *(uint *)(Elf32_Rel_ARRAY_20070000[141].r_info + 4) \u0026 0xfffffffc;\n  if ((uVar15 \u003c\u003d uVar18) \u0026\u0026\n     (uVar3 \u003d uVar18 - uVar15, dVar7 \u003d Elf32_Rel_ARRAY_20070000[141].r_info, 0xf \u003c (int)uVar3))\n  goto LAB_0008211e;\n  uVar3 \u003d Elf32_Rel_ARRAY_20070000[141].r_info + uVar18;\n  if (Elf32_Rel_ARRAY_20070000[270].r_offset \u003d\u003d 0xffffffff) {\n    uVar4 \u003d uVar15 + DAT_20071190 + 0x10;\n  }\n  else {\n    uVar4 \u003d uVar15 + DAT_20071190 + 0x100f \u0026 0xfffff000;\n  }\n  dVar7 \u003d _sbrk_r(param_1,uVar4);\n  if ((dVar7 \u003d\u003d 0xffffffff) || ((dVar7 \u003c uVar3 \u0026\u0026 (dVar1 !\u003d 0x20070464)))) {\n    uVar18 \u003d *(uint *)(Elf32_Rel_ARRAY_20070000[141].r_info + 4) \u0026 0xfffffffc;\n    dVar7 \u003d Elf32_Rel_ARRAY_20070000[141].r_info;\n  }\n  else {\n    uVar6 \u003d DAT_20071194 + uVar4;\n    DAT_20071194 \u003d uVar6;\n    if ((uVar3 \u003d\u003d dVar7) \u0026\u0026 ((uVar3 \u0026 0xfff) \u003d\u003d 0)) {\n      *(uint *)(Elf32_Rel_ARRAY_20070000[141].r_info + 4) \u003d uVar4 + uVar18 | 1;\n    }\n    else {\n      dVar11 \u003d dVar7;\n      if (Elf32_Rel_ARRAY_20070000[270].r_offset !\u003d 0xffffffff) {\n        dVar11 \u003d Elf32_Rel_ARRAY_20070000[270].r_offset;\n        DAT_20071194 \u003d uVar6 + (dVar7 - uVar3);\n      }\n      Elf32_Rel_ARRAY_20070000[270].r_offset \u003d dVar11;\n      uVar3 \u003d dVar7 \u0026 7;\n      if (uVar3 \u003d\u003d 0) {\n        iVar13 \u003d 0x1000;\n      }\n      else {\n        dVar7 \u003d dVar7 + (8 - uVar3);\n        iVar13 \u003d 0x1008 - uVar3;\n      }\n      iVar13 \u003d iVar13 - (uVar4 + dVar7 \u0026 0xfff);\n      iVar2 \u003d _sbrk_r(param_1,iVar13);\n      if (iVar2 \u003d\u003d -1) {\n        uVar3 \u003d 1;\n        iVar13 \u003d 0;\n      }\n      else {\n        uVar3 \u003d (iVar2 - dVar7) + iVar13 | 1;\n      }\n      uVar6 \u003d DAT_20071194 + iVar13;\n      Elf32_Rel_ARRAY_20070000[141].r_info \u003d dVar7;\n      DAT_20071194 \u003d uVar6;\n      *(uint *)(dVar7 + 4) \u003d uVar3;\n      if (dVar1 !\u003d 0x20070464) {\n        if (uVar18 \u003c 0x10) {\n          *(undefined4 *)(dVar7 + 4) \u003d 1;\n          uVar18 \u003d 0;\n          goto LAB_00082108;\n        }\n        uVar18 \u003d uVar18 - 0xc \u0026 0xfffffff8;\n        *(uint *)(dVar1 + 4) \u003d uVar18 | *(uint *)(dVar1 + 4) \u0026 1;\n        *(undefined4 *)(dVar1 + uVar18 + 4) \u003d 5;\n        *(undefined4 *)(dVar1 + uVar18 + 8) \u003d 5;\n        if (0xf \u003c uVar18) {\n          _free_r(param_1,dVar1 + 8);\n          uVar6 \u003d DAT_20071194;\n        }\n      }\n    }\n    if (DAT_2007118c \u003c uVar6) {\n      DAT_2007118c \u003d uVar6;\n    }\n    if (DAT_20071188 \u003c uVar6) {\n      DAT_20071188 \u003d uVar6;\n    }\n    uVar18 \u003d *(uint *)(Elf32_Rel_ARRAY_20070000[141].r_info + 4) \u0026 0xfffffffc;\n    dVar7 \u003d Elf32_Rel_ARRAY_20070000[141].r_info;\n  }\nLAB_00082108:\n  uVar3 \u003d uVar18 - uVar15;\n  if ((uVar18 \u003c uVar15) || ((int)uVar3 \u003c 0x10)) {\n    __malloc_unlock(param_1);\n    return (int *)0x0;\n  }\nLAB_0008211e:\n  Elf32_Rel_ARRAY_20070000[141].r_info \u003d uVar15 + dVar7;\n  *(uint *)(dVar7 + 4) \u003d uVar15 | 1;\n  *(uint *)(Elf32_Rel_ARRAY_20070000[141].r_info + 4) \u003d uVar3 | 1;\n  __malloc_unlock(param_1);\n  return (int *)(dVar7 + 8);\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_000842a4",
        "FUN_00083f34",
        "FUN_000825b0",
        "FUN_00081df4"
      ],
      "called": [
        "FUN_00082598",
        "FUN_00082970",
        "FUN_0008259c",
        "FUN_00083d9c"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0008234c": {
      "entrypoint": "0x0008234c",
      "current_name": "FUN_0008234c",
      "code": "\nundefined4 * FUN_0008234c(undefined4 *param_1,undefined4 *param_2,uint param_3)\n\n{\n  undefined4 *puVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  uint uVar4;\n  uint uVar5;\n  bool bVar6;\n  \n  puVar2 \u003d param_1;\n  if ((((uint)param_2 | (uint)param_1) \u0026 3) !\u003d 0) {\n    if (param_3 \u003c 8) {\n      uVar5 \u003d param_3 - 4;\n      if (3 \u003c param_3) {\n        do {\n          puVar1 \u003d param_2;\n          puVar3 \u003d puVar2;\n          bVar6 \u003d uVar5 !\u003d 0;\n          uVar5 \u003d uVar5 - 1;\n          *(undefined *)puVar3 \u003d *(undefined *)puVar1;\n          puVar2 \u003d (undefined4 *)((int)puVar3 + 1);\n          param_2 \u003d (undefined4 *)((int)puVar1 + 1);\n        } while (bVar6);\n        *(undefined *)(undefined4 *)((int)puVar3 + 1) \u003d\n             *(undefined *)(undefined4 *)((int)puVar1 + 1);\n        *(undefined *)((int)puVar3 + 2) \u003d *(undefined *)((int)puVar1 + 2);\n        *(undefined *)((int)puVar3 + 3) \u003d *(undefined *)((int)puVar1 + 3);\n        return param_1;\n      }\n      goto LAB_000823d0;\n    }\n    if ((((uint)param_2 \u0026 3) !\u003d 0) \u0026\u0026 (((uint)param_1 \u0026 3) !\u003d 0)) {\n      uVar5 \u003d 4 - ((uint)param_1 \u0026 3);\n      param_3 \u003d param_3 - uVar5;\n      puVar1 \u003d param_1;\n      puVar3 \u003d param_2;\n      if (((uint)param_1 \u0026 1) !\u003d 0) {\n        puVar3 \u003d (undefined4 *)((int)param_2 + 1);\n        puVar1 \u003d (undefined4 *)((int)param_1 + 1);\n        *(undefined *)param_1 \u003d *(undefined *)param_2;\n      }\n      puVar2 \u003d puVar1;\n      param_2 \u003d puVar3;\n      if ((uVar5 \u0026 2) !\u003d 0) {\n        param_2 \u003d (undefined4 *)((int)puVar3 + 2);\n        puVar2 \u003d (undefined4 *)((int)puVar1 + 2);\n        *(undefined2 *)puVar1 \u003d *(undefined2 *)puVar3;\n      }\n    }\n  }\n  while (0x3f \u003c param_3) {\n    *puVar2 \u003d *param_2;\n    puVar2[1] \u003d param_2[1];\n    puVar2[2] \u003d param_2[2];\n    puVar2[3] \u003d param_2[3];\n    puVar2[4] \u003d param_2[4];\n    puVar2[5] \u003d param_2[5];\n    puVar2[6] \u003d param_2[6];\n    puVar2[7] \u003d param_2[7];\n    puVar2[8] \u003d param_2[8];\n    puVar2[9] \u003d param_2[9];\n    puVar2[10] \u003d param_2[10];\n    puVar2[0xb] \u003d param_2[0xb];\n    puVar2[0xc] \u003d param_2[0xc];\n    puVar2[0xd] \u003d param_2[0xd];\n    puVar2[0xe] \u003d param_2[0xe];\n    puVar2[0xf] \u003d param_2[0xf];\n    puVar2 \u003d puVar2 + 0x10;\n    param_2 \u003d param_2 + 0x10;\n    param_3 \u003d param_3 - 0x40;\n  }\n  uVar4 \u003d param_3 - 0x10;\n  if (0xffffffcf \u003c param_3 - 0x40) {\n    do {\n      *puVar2 \u003d *param_2;\n      puVar2[1] \u003d param_2[1];\n      puVar2[2] \u003d param_2[2];\n      puVar2[3] \u003d param_2[3];\n      puVar2 \u003d puVar2 + 4;\n      param_2 \u003d param_2 + 4;\n      bVar6 \u003d 0xf \u003c uVar4;\n      uVar4 \u003d uVar4 - 0x10;\n    } while (bVar6);\n  }\n  uVar5 \u003d uVar4 + 0xc;\n  puVar3 \u003d puVar2;\n  puVar1 \u003d param_2;\n  if (0xfffffff3 \u003c uVar4) {\n    do {\n      param_2 \u003d puVar1 + 1;\n      *puVar3 \u003d *puVar1;\n      bVar6 \u003d 3 \u003c uVar5;\n      uVar5 \u003d uVar5 - 4;\n      puVar2 \u003d puVar3 + 1;\n      puVar3 \u003d puVar3 + 1;\n      puVar1 \u003d param_2;\n    } while (bVar6);\n  }\nLAB_000823d0:\n  if (uVar5 + 4 !\u003d 0) {\n    puVar1 \u003d puVar2;\n    puVar3 \u003d param_2;\n    if ((uVar5 \u0026 1) !\u003d 0) {\n      puVar3 \u003d (undefined4 *)((int)param_2 + 1);\n      puVar1 \u003d (undefined4 *)((int)puVar2 + 1);\n      *(undefined *)puVar2 \u003d *(undefined *)param_2;\n    }\n    if ((uVar5 + 4 \u0026 2) !\u003d 0) {\n      *(undefined2 *)puVar1 \u003d *(undefined2 *)puVar3;\n    }\n  }\n  return param_1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00083f34"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00082438": {
      "entrypoint": "0x00082438",
      "current_name": "FUN_00082438",
      "code": "\nvoid FUN_00082438(undefined4 *param_1,undefined4 *param_2,uint param_3)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  undefined4 *puVar4;\n  uint uVar5;\n  undefined *puVar6;\n  uint uVar7;\n  \n  if ((param_2 \u003c param_1) \u0026\u0026 (puVar4 \u003d (undefined4 *)((int)param_2 + param_3), param_1 \u003c puVar4)) {\n    puVar6 \u003d (undefined *)((int)param_1 + param_3);\n    iVar1 \u003d param_3 - 1;\n    if (param_3 !\u003d 0) {\n      do {\n        puVar4 \u003d (undefined4 *)((int)puVar4 + -1);\n        iVar1 \u003d iVar1 + -1;\n        puVar6 \u003d puVar6 + -1;\n        *puVar6 \u003d *(undefined *)puVar4;\n      } while (iVar1 !\u003d -1);\n    }\n    return;\n  }\n  if (param_3 \u003c 0x10) {\n    if (param_3 \u003d\u003d 0) {\n      return;\n    }\n  }\n  else if ((((uint)param_1 | (uint)param_2) \u0026 3) \u003d\u003d 0) {\n    puVar4 \u003d param_1;\n    puVar3 \u003d param_2;\n    do {\n      puVar2 \u003d puVar4 + 4;\n      *puVar4 \u003d *puVar3;\n      puVar4[1] \u003d puVar3[1];\n      puVar4[2] \u003d puVar3[2];\n      puVar4[3] \u003d puVar3[3];\n      puVar4 \u003d puVar2;\n      puVar3 \u003d puVar3 + 4;\n    } while (puVar2 !\u003d (undefined4 *)((int)param_1 + (param_3 - 0x10 \u0026 0xfffffff0) + 0x10));\n    iVar1 \u003d (param_3 - 0x10 \u003e\u003e 4) + 1;\n    uVar7 \u003d param_3 \u0026 0xf;\n    param_2 \u003d param_2 + iVar1 * 4;\n    param_1 \u003d param_1 + iVar1 * 4;\n    uVar5 \u003d uVar7;\n    puVar4 \u003d param_1;\n    puVar3 \u003d param_2;\n    if (3 \u003c uVar7) {\n      do {\n        uVar5 \u003d uVar5 - 4;\n        *puVar4 \u003d *puVar3;\n        puVar4 \u003d puVar4 + 1;\n        puVar3 \u003d puVar3 + 1;\n      } while (3 \u003c uVar5);\n      iVar1 \u003d (uVar7 - 4 \u0026 0xfffffffc) + 4;\n      param_1 \u003d (undefined4 *)((int)param_1 + iVar1);\n      param_2 \u003d (undefined4 *)((int)param_2 + iVar1);\n      uVar7 \u003d param_3 \u0026 3;\n    }\n    param_3 \u003d uVar7;\n    if (param_3 \u003d\u003d 0) {\n      return;\n    }\n  }\n  puVar4 \u003d param_1;\n  do {\n    puVar3 \u003d (undefined4 *)((int)puVar4 + 1);\n    *(undefined *)puVar4 \u003d *(undefined *)param_2;\n    param_2 \u003d (undefined4 *)((int)param_2 + 1);\n    puVar4 \u003d puVar3;\n  } while (puVar3 !\u003d (undefined4 *)(param_3 + (int)param_1));\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00083f34",
        "FUN_000825b0"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00082504": {
      "entrypoint": "0x00082504",
      "current_name": "FUN_00082504",
      "code": "\nvoid FUN_00082504(undefined4 *param_1,undefined param_2,uint param_3)\n\n{\n  undefined4 *puVar1;\n  undefined4 *puVar2;\n  undefined4 uVar3;\n  uint uVar4;\n  bool bVar5;\n  \n  if (((uint)param_1 \u0026 3) !\u003d 0) {\n    bVar5 \u003d param_3 \u003d\u003d 0;\n    puVar1 \u003d param_1;\n    param_3 \u003d param_3 - 1;\n    if (bVar5) {\n      return;\n    }\n    while( true ) {\n      param_1 \u003d (undefined4 *)((int)puVar1 + 1);\n      *(undefined *)puVar1 \u003d param_2;\n      if (((uint)param_1 \u0026 3) \u003d\u003d 0) break;\n      bVar5 \u003d param_3 \u003d\u003d 0;\n      puVar1 \u003d param_1;\n      param_3 \u003d param_3 - 1;\n      if (bVar5) {\n        return;\n      }\n    }\n  }\n  if (3 \u003c param_3) {\n    uVar3 \u003d CONCAT22(CONCAT11(param_2,param_2),CONCAT11(param_2,param_2));\n    uVar4 \u003d param_3;\n    puVar1 \u003d param_1;\n    if (0xf \u003c param_3) {\n      uVar4 \u003d param_3 - 0x10;\n      do {\n        *puVar1 \u003d uVar3;\n        puVar1[1] \u003d uVar3;\n        puVar1[2] \u003d uVar3;\n        puVar1[3] \u003d uVar3;\n        puVar1 \u003d puVar1 + 4;\n      } while (puVar1 !\u003d (undefined4 *)((int)param_1 + (uVar4 \u0026 0xfffffff0) + 0x10));\n      param_3 \u003d param_3 \u0026 0xf;\n      param_1 \u003d param_1 + ((uVar4 \u003e\u003e 4) + 1) * 4;\n      uVar4 \u003d param_3;\n      puVar1 \u003d param_1;\n      if (param_3 \u003c 4) goto LAB_00082580;\n    }\n    do {\n      param_3 \u003d param_3 - 4;\n      *param_1 \u003d uVar3;\n      param_1 \u003d param_1 + 1;\n    } while (3 \u003c param_3);\n    param_1 \u003d (undefined4 *)((int)puVar1 + (uVar4 - 4 \u0026 0xfffffffc) + 4);\n    param_3 \u003d uVar4 \u0026 3;\n  }\nLAB_00082580:\n  if (param_3 !\u003d 0) {\n    puVar1 \u003d param_1;\n    do {\n      puVar2 \u003d (undefined4 *)((int)puVar1 + 1);\n      *(undefined *)puVar1 \u003d param_2;\n      puVar1 \u003d puVar2;\n    } while (puVar2 !\u003d (undefined4 *)(param_3 + (int)param_1));\n  }\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_000813a8",
        "FUN_00083b14"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00082598": {
      "entrypoint": "0x00082598",
      "current_name": "FUN_00082598",
      "code": "\nvoid FUN_00082598(void)\n\n{\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_000825b0",
        "FUN_00083d9c",
        "FUN_00083d00",
        "FUN_00081e14"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0008259c": {
      "entrypoint": "0x0008259c",
      "current_name": "FUN_0008259c",
      "code": "\nvoid FUN_0008259c(void)\n\n{\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_000825b0",
        "FUN_00083d9c",
        "FUN_00083d00",
        "FUN_00081e14"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_000825a0": {
      "entrypoint": "0x000825a0",
      "current_name": "FUN_000825a0",
      "code": "\nvoid FUN_000825a0(undefined4 param_1,undefined4 param_2)\n\n{\n  _realloc_r(Elf32_Rel_ARRAY_20070000[140].r_offset,param_1,param_2);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00081622"
      ],
      "called": [
        "FUN_000825b0"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_000825b0": {
      "entrypoint": "0x000825b0",
      "current_name": "FUN_000825b0",
      "code": "\nint * FUN_000825b0(undefined4 *param_1,int *param_2,uint param_3)\n\n{\n  dword dVar1;\n  int *piVar2;\n  uint uVar3;\n  int iVar4;\n  uint uVar5;\n  int iVar6;\n  int *piVar7;\n  uint uVar8;\n  uint uVar9;\n  int *piVar10;\n  \n  if (param_2 \u003d\u003d (int *)0x0) {\n    piVar2 \u003d (int *)_malloc_r(param_1,param_3);\n    return piVar2;\n  }\n  __malloc_lock();\n  uVar5 \u003d param_2[-1];\n  uVar8 \u003d uVar5 \u0026 0xfffffffc;\n  piVar2 \u003d param_2 + -2;\n  if (param_3 + 0xb \u003c 0x17) {\n    uVar9 \u003d 0x10;\n  }\n  else {\n    uVar9 \u003d param_3 + 0xb \u0026 0xfffffff8;\n    if ((int)uVar9 \u003c 0) goto LAB_0008267c;\n  }\n  if (uVar9 \u003c param_3) {\nLAB_0008267c:\n    *param_1 \u003d 0xc;\n    return (int *)0x0;\n  }\n  if ((int)uVar8 \u003c (int)uVar9) {\n    dVar1 \u003d (int)piVar2 + uVar8;\n    if (Elf32_Rel_ARRAY_20070000[141].r_info \u003d\u003d dVar1) {\n      uVar3 \u003d *(uint *)(Elf32_Rel_ARRAY_20070000[141].r_info + 4) \u0026 0xfffffffc;\n      dVar1 \u003d Elf32_Rel_ARRAY_20070000[141].r_info;\n      if ((int)(uVar9 + 0x10) \u003c\u003d (int)(uVar3 + uVar8)) {\n        Elf32_Rel_ARRAY_20070000[141].r_info \u003d (int)piVar2 + uVar9;\n        *(uint *)(Elf32_Rel_ARRAY_20070000[141].r_info + 4) \u003d (uVar3 + uVar8) - uVar9 | 1;\n        param_2[-1] \u003d uVar9 | param_2[-1] \u0026 1U;\n        __malloc_unlock(param_1);\n        return param_2;\n      }\n    }\n    else if ((*(uint *)((*(uint *)(dVar1 + 4) \u0026 0xfffffffe) + dVar1 + 4) \u0026 1) \u003d\u003d 0) {\n      uVar3 \u003d *(uint *)(dVar1 + 4) \u0026 0xfffffffc;\n      if ((int)uVar9 \u003c\u003d (int)(uVar3 + uVar8)) {\n        iVar6 \u003d *(int *)(dVar1 + 0xc);\n        iVar4 \u003d *(int *)(dVar1 + 8);\n        *(int *)(iVar4 + 0xc) \u003d iVar6;\n        *(int *)(iVar6 + 8) \u003d iVar4;\n        uVar8 \u003d uVar3 + uVar8;\n        goto LAB_0008268c;\n      }\n    }\n    else {\n      uVar3 \u003d 0;\n      dVar1 \u003d 0;\n    }\n    if (-1 \u003c (int)(uVar5 \u003c\u003c 0x1f)) {\n      piVar10 \u003d (int *)((int)piVar2 - param_2[-2]);\n      uVar5 \u003d (piVar10[1] \u0026 0xfffffffcU) + uVar8;\n      if (dVar1 !\u003d 0) {\n        if (dVar1 \u003d\u003d Elf32_Rel_ARRAY_20070000[141].r_info) {\n          if ((int)(uVar9 + 0x10) \u003c\u003d (int)(uVar3 + uVar5)) {\n            piVar2 \u003d piVar10 + 2;\n            iVar4 \u003d *piVar2;\n            iVar6 \u003d piVar10[3];\n            uVar8 \u003d uVar8 - 4;\n            *(int *)(iVar4 + 0xc) \u003d iVar6;\n            *(int *)(iVar6 + 8) \u003d iVar4;\n            if (uVar8 \u003c 0x25) {\n              piVar7 \u003d piVar2;\n              if (0x13 \u003c uVar8) {\n                piVar10[2] \u003d *param_2;\n                piVar10[3] \u003d param_2[1];\n                if (uVar8 \u003c 0x1c) {\n                  param_2 \u003d param_2 + 2;\n                  piVar7 \u003d piVar10 + 4;\n                }\n                else {\n                  piVar10[4] \u003d param_2[2];\n                  piVar10[5] \u003d param_2[3];\n                  if (uVar8 \u003d\u003d 0x24) {\n                    piVar10[6] \u003d param_2[4];\n                    piVar7 \u003d param_2 + 5;\n                    param_2 \u003d param_2 + 6;\n                    piVar10[7] \u003d *piVar7;\n                    piVar7 \u003d piVar10 + 8;\n                  }\n                  else {\n                    param_2 \u003d param_2 + 4;\n                    piVar7 \u003d piVar10 + 6;\n                  }\n                }\n              }\n              *piVar7 \u003d *param_2;\n              piVar7[1] \u003d param_2[1];\n              piVar7[2] \u003d param_2[2];\n            }\n            else {\n              memmove(piVar2,param_2);\n            }\n            Elf32_Rel_ARRAY_20070000[141].r_info \u003d (int)piVar10 + uVar9;\n            *(uint *)(Elf32_Rel_ARRAY_20070000[141].r_info + 4) \u003d (uVar3 + uVar5) - uVar9 | 1;\n            piVar10[1] \u003d uVar9 | piVar10[1] \u0026 1U;\n            __malloc_unlock(param_1);\n            return piVar2;\n          }\n        }\n        else {\n          uVar3 \u003d uVar3 + uVar5;\n          if ((int)uVar9 \u003c\u003d (int)uVar3) {\n            iVar6 \u003d *(int *)(dVar1 + 0xc);\n            iVar4 \u003d *(int *)(dVar1 + 8);\n            *(int *)(iVar4 + 0xc) \u003d iVar6;\n            *(int *)(iVar6 + 8) \u003d iVar4;\n            piVar7 \u003d piVar10 + 2;\n            iVar4 \u003d *piVar7;\n            iVar6 \u003d piVar10[3];\n            uVar5 \u003d uVar8 - 4;\n            *(int *)(iVar4 + 0xc) \u003d iVar6;\n            *(int *)(iVar6 + 8) \u003d iVar4;\n            uVar8 \u003d uVar3;\n            if (uVar5 \u003c 0x25) {\n              piVar2 \u003d piVar7;\n              if (0x13 \u003c uVar5) {\n                piVar10[2] \u003d *param_2;\n                piVar10[3] \u003d param_2[1];\n                if (uVar5 \u003c 0x1c) {\n                  param_2 \u003d param_2 + 2;\n                  piVar2 \u003d piVar10 + 4;\n                }\n                else {\n                  piVar10[4] \u003d param_2[2];\n                  piVar10[5] \u003d param_2[3];\n                  if (uVar5 \u003d\u003d 0x24) {\n                    piVar10[6] \u003d param_2[4];\n                    piVar2 \u003d param_2 + 5;\n                    param_2 \u003d param_2 + 6;\n                    piVar10[7] \u003d *piVar2;\n                    piVar2 \u003d piVar10 + 8;\n                  }\n                  else {\n                    param_2 \u003d param_2 + 4;\n                    piVar2 \u003d piVar10 + 6;\n                  }\n                }\n              }\n              *piVar2 \u003d *param_2;\n              piVar2[1] \u003d param_2[1];\n              piVar2[2] \u003d param_2[2];\n              uVar5 \u003d piVar10[1];\n              piVar2 \u003d piVar10;\n              param_2 \u003d piVar7;\n            }\n            else {\n              memmove(piVar7,param_2);\n              uVar5 \u003d piVar10[1];\n              piVar2 \u003d piVar10;\n              param_2 \u003d piVar7;\n            }\n            goto LAB_0008268c;\n          }\n        }\n      }\n      if ((int)uVar9 \u003c\u003d (int)uVar5) {\n        piVar7 \u003d piVar10 + 2;\n        iVar4 \u003d *piVar7;\n        iVar6 \u003d piVar10[3];\n        uVar3 \u003d uVar8 - 4;\n        *(int *)(iVar4 + 0xc) \u003d iVar6;\n        *(int *)(iVar6 + 8) \u003d iVar4;\n        uVar8 \u003d uVar5;\n        if (uVar3 \u003c 0x25) {\n          piVar2 \u003d piVar7;\n          if (0x13 \u003c uVar3) {\n            piVar10[2] \u003d *param_2;\n            piVar10[3] \u003d param_2[1];\n            if (uVar3 \u003c 0x1c) {\n              param_2 \u003d param_2 + 2;\n              piVar2 \u003d piVar10 + 4;\n            }\n            else {\n              piVar10[4] \u003d param_2[2];\n              piVar10[5] \u003d param_2[3];\n              if (uVar3 \u003d\u003d 0x24) {\n                piVar10[6] \u003d param_2[4];\n                piVar2 \u003d param_2 + 5;\n                param_2 \u003d param_2 + 6;\n                piVar10[7] \u003d *piVar2;\n                piVar2 \u003d piVar10 + 8;\n              }\n              else {\n                param_2 \u003d param_2 + 4;\n                piVar2 \u003d piVar10 + 6;\n              }\n            }\n          }\n          *piVar2 \u003d *param_2;\n          piVar2[1] \u003d param_2[1];\n          piVar2[2] \u003d param_2[2];\n          uVar5 \u003d piVar10[1];\n          piVar2 \u003d piVar10;\n          param_2 \u003d piVar7;\n        }\n        else {\n          memmove(piVar7,param_2);\n          uVar5 \u003d piVar10[1];\n          piVar2 \u003d piVar10;\n          param_2 \u003d piVar7;\n        }\n        goto LAB_0008268c;\n      }\n    }\n    piVar10 \u003d (int *)_malloc_r(param_1,param_3);\n    if (piVar10 \u003d\u003d (int *)0x0) goto LAB_000826a4;\n    uVar5 \u003d param_2[-1];\n    if (piVar10 + -2 !\u003d (int *)((uVar5 \u0026 0xfffffffe) + (int)piVar2)) {\n      uVar8 \u003d uVar8 - 4;\n      if (uVar8 \u003c 0x25) {\n        piVar2 \u003d param_2;\n        piVar7 \u003d piVar10;\n        if (0x13 \u003c uVar8) {\n          *piVar10 \u003d *param_2;\n          piVar10[1] \u003d param_2[1];\n          if (uVar8 \u003c 0x1c) {\n            piVar2 \u003d param_2 + 2;\n            piVar7 \u003d piVar10 + 2;\n          }\n          else {\n            piVar10[2] \u003d param_2[2];\n            piVar10[3] \u003d param_2[3];\n            if (uVar8 \u003d\u003d 0x24) {\n              piVar10[4] \u003d param_2[4];\n              piVar10[5] \u003d param_2[5];\n              piVar2 \u003d param_2 + 6;\n              piVar7 \u003d piVar10 + 6;\n            }\n            else {\n              piVar2 \u003d param_2 + 4;\n              piVar7 \u003d piVar10 + 4;\n            }\n          }\n        }\n        *piVar7 \u003d *piVar2;\n        piVar7[1] \u003d piVar2[1];\n        piVar7[2] \u003d piVar2[2];\n      }\n      else {\n        memmove(piVar10,param_2);\n      }\n      _free_r(param_1,param_2);\n      goto LAB_000826a4;\n    }\n    uVar8 \u003d uVar8 + (piVar10[-1] \u0026 0xfffffffcU);\n  }\nLAB_0008268c:\n  uVar3 \u003d uVar8 - uVar9;\n  piVar10 \u003d param_2;\n  if (uVar3 \u003c 0x10) {\n    piVar2[1] \u003d uVar5 \u0026 1 | uVar8;\n    *(uint *)((int)piVar2 + uVar8 + 4) \u003d *(uint *)((int)piVar2 + uVar8 + 4) | 1;\n  }\n  else {\n    piVar2[1] \u003d uVar5 \u0026 1 | uVar9;\n    *(uint *)((int)piVar2 + uVar9 + 4) \u003d uVar3 | 1;\n    *(uint *)((int)piVar2 + uVar3 + uVar9 + 4) \u003d *(uint *)((int)piVar2 + uVar3 + uVar9 + 4) | 1;\n    _free_r(param_1,(int)piVar2 + uVar9 + 8);\n  }\nLAB_000826a4:\n  __malloc_unlock(param_1);\n  return piVar10;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00083f34",
        "FUN_000825a0"
      ],
      "called": [
        "FUN_00082438",
        "FUN_00082598",
        "FUN_0008259c",
        "FUN_00083d9c",
        "FUN_00081e14"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00082970": {
      "entrypoint": "0x00082970",
      "current_name": "FUN_00082970",
      "code": "\nvoid FUN_00082970(int *param_1,undefined4 param_2)\n\n{\n  int iVar1;\n  \n  DAT_200711bc \u003d 0;\n  iVar1 \u003d _sbrk(param_2);\n  if ((iVar1 \u003d\u003d -1) \u0026\u0026 (DAT_200711bc !\u003d 0)) {\n    *param_1 \u003d DAT_200711bc;\n    return;\n  }\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00083d00",
        "FUN_00081e14"
      ],
      "called": [
        "FUN_0008118c"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00082994": {
      "entrypoint": "0x00082994",
      "current_name": "FUN_00082994",
      "code": "\nvoid FUN_00082994(uint *param_1,uint *param_2)\n\n{\n  char cVar1;\n  ushort uVar2;\n  uint *puVar3;\n  uint *puVar4;\n  uint uVar5;\n  uint uVar6;\n  uint *puVar7;\n  bool bVar8;\n  \n  if ((((uint)param_1 ^ (uint)param_2) \u0026 3) !\u003d 0) {\n    do {\n      cVar1 \u003d *(char *)param_2;\n      *(char *)param_1 \u003d cVar1;\n      param_2 \u003d (uint *)((int)param_2 + 1);\n      param_1 \u003d (uint *)((int)param_1 + 1);\n    } while (cVar1 !\u003d \u0027\\0\u0027);\n    return;\n  }\n  if (((uint)param_2 \u0026 3) !\u003d 0) {\n    puVar4 \u003d param_2;\n    if (((uint)param_2 \u0026 1) !\u003d 0) {\n      puVar4 \u003d (uint *)((int)param_2 + 1);\n      cVar1 \u003d *(char *)param_2;\n      *(char *)param_1 \u003d cVar1;\n      param_1 \u003d (uint *)((int)param_1 + 1);\n      if (cVar1 \u003d\u003d \u0027\\0\u0027) {\n        return;\n      }\n    }\n    param_2 \u003d puVar4;\n    if (((uint)puVar4 \u0026 2) !\u003d 0) {\n      param_2 \u003d (uint *)((int)puVar4 + 2);\n      uVar2 \u003d *(ushort *)puVar4;\n      bVar8 \u003d (uVar2 \u0026 0xff) \u003d\u003d 0;\n      if (bVar8) {\n        *(char *)param_1 \u003d (char)uVar2;\n      }\n      else {\n        *(ushort *)param_1 \u003d uVar2;\n        bVar8 \u003d (uVar2 \u0026 0xff00) \u003d\u003d 0;\n        param_1 \u003d (uint *)((int)param_1 + 2);\n      }\n      if (bVar8) {\n        return;\n      }\n    }\n  }\n  uVar5 \u003d *param_2;\n  puVar4 \u003d param_2 + 1;\n  puVar7 \u003d param_1;\n  if (((uint)param_2 \u0026 4) !\u003d 0) {\n    if ((uVar5 + 0xfefefeff \u0026 ~uVar5 \u0026 0x80808080) !\u003d 0) goto LAB_000829f8;\n    puVar7 \u003d param_1 + 1;\n    *param_1 \u003d uVar5;\n    puVar4 \u003d param_2 + 2;\n    uVar5 \u003d param_2[1];\n  }\n  while( true ) {\n    puVar3 \u003d puVar4 + 1;\n    uVar6 \u003d *puVar4;\n    param_1 \u003d puVar7;\n    if ((uVar5 + 0xfefefeff \u0026 ~uVar5 \u0026 0x80808080) !\u003d 0) break;\n    param_1 \u003d puVar7 + 1;\n    *puVar7 \u003d uVar5;\n    uVar5 \u003d uVar6;\n    if ((uVar6 + 0xfefefeff \u0026 ~uVar6 \u0026 0x80808080) !\u003d 0) break;\n    puVar4 \u003d puVar4 + 2;\n    uVar5 \u003d *puVar3;\n    puVar7 \u003d puVar7 + 2;\n    *param_1 \u003d uVar6;\n  }\nLAB_000829f8:\n  do {\n    *(char *)param_1 \u003d (char)uVar5;\n    uVar6 \u003d uVar5 \u0026 0xff;\n    uVar5 \u003d uVar5 \u003e\u003e 8 | uVar5 \u003c\u003c 0x18;\n    param_1 \u003d (uint *)((int)param_1 + 1);\n  } while (uVar6 !\u003d 0);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_0008165c"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00082a50": {
      "entrypoint": "0x00082a50",
      "current_name": "FUN_00082a50",
      "code": "\nint FUN_00082a50(uint param_1)\n\n{\n  int iVar1;\n  uint *puVar2;\n  uint uVar3;\n  bool bVar4;\n  \n  puVar2 \u003d (uint *)(param_1 \u0026 0xfffffffc);\n  iVar1 \u003d -(param_1 \u0026 3);\n  uVar3 \u003d *puVar2;\n  if ((param_1 \u0026 3) !\u003d 0) {\n    uVar3 \u003d uVar3 | 0xffffffffU \u003e\u003e ((iVar1 + 4U \u0026 0x1f) \u003c\u003c 3);\n  }\n  while (puVar2 \u003d puVar2 + 1, (uVar3 + 0xfefefeff \u0026 ~uVar3 \u0026 0x80808080) \u003d\u003d 0) {\n    iVar1 \u003d iVar1 + 4;\n    uVar3 \u003d *puVar2;\n  }\n  bVar4 \u003d (uVar3 \u0026 0xff) \u003d\u003d 0;\n  if (!bVar4) {\n    iVar1 \u003d iVar1 + 1;\n    bVar4 \u003d (uVar3 \u0026 0xff00) \u003d\u003d 0;\n  }\n  if (!bVar4) {\n    iVar1 \u003d iVar1 + 1;\n    bVar4 \u003d (uVar3 \u0026 0xff0000) \u003d\u003d 0;\n  }\n  if (!bVar4) {\n    iVar1 \u003d iVar1 + 1;\n  }\n  return iVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00081682",
        "FUN_00082b38"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00082ac0": {
      "entrypoint": "0x00082ac0",
      "current_name": "FUN_00082ac0",
      "code": "\nint FUN_00082ac0(undefined4 param_1,int param_2,int **param_3)\n\n{\n  int *piVar1;\n  int iVar2;\n  int *piVar3;\n  uint uVar4;\n  undefined4 *puVar5;\n  uint uVar6;\n  uint uVar7;\n  \n  if (-1 \u003c *(int *)(param_2 + 100) \u003c\u003c 0x12) {\n    iVar2 \u003d __sfvwrite_r();\n    param_3[2] \u003d (int *)0x0;\n    param_3[1] \u003d (int *)0x0;\n    return iVar2;\n  }\n  piVar3 \u003d param_3[2];\n  piVar1 \u003d *param_3;\n  while (piVar3 !\u003d (int *)0x0) {\n    uVar6 \u003d piVar1[1];\n    uVar7 \u003d uVar6 \u003e\u003e 2;\n    if (uVar7 !\u003d 0) {\n      puVar5 \u003d (undefined4 *)(*piVar1 + -4);\n      uVar4 \u003d 0;\n      do {\n        puVar5 \u003d puVar5 + 1;\n        iVar2 \u003d _fputwc_r(param_1,*puVar5,param_2);\n        uVar4 \u003d uVar4 + 1;\n        if (iVar2 \u003d\u003d -1) goto LAB_00082b00;\n      } while (uVar7 !\u003d uVar4);\n      piVar3 \u003d param_3[2];\n    }\n    piVar3 \u003d (int *)((int)piVar3 - (uVar6 \u0026 0xfffffffc));\n    param_3[2] \u003d piVar3;\n    piVar1 \u003d piVar1 + 2;\n  }\n  iVar2 \u003d 0;\nLAB_00082b00:\n  param_3[2] \u003d (int *)0x0;\n  param_3[1] \u003d (int *)0x0;\n  return iVar2;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00082b38"
      ],
      "called": [
        "FUN_00083f34",
        "FUN_00083c40"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00082b38": {
      "entrypoint": "0x00082b38",
      "current_name": "FUN_00082b38",
      "code": "\n/* WARNING: Type propagation algorithm not settling */\n\nint FUN_00082b38(int param_1,int param_2,int *******param_3,int **param_4)\n\n{\n  bool bVar1;\n  bool bVar2;\n  bool bVar3;\n  char cVar4;\n  bool bVar5;\n  int ********ppppppppiVar6;\n  int *piVar7;\n  int iVar8;\n  char cVar9;\n  int *******pppppppiVar10;\n  uint uVar11;\n  int **ppiVar12;\n  uint uVar13;\n  uint uVar14;\n  int iVar15;\n  int ********ppppppppiVar16;\n  int iVar17;\n  int *******pppppppiVar18;\n  int *piVar19;\n  int *******pppppppiVar20;\n  uint uVar21;\n  int *piVar22;\n  int *******pppppppiVar23;\n  undefined4 uVar24;\n  int ********ppppppppiVar25;\n  bool bVar26;\n  longlong lVar27;\n  int *******local_dc;\n  int *******local_d4;\n  int **local_c8;\n  int local_c4;\n  char *local_c0;\n  char local_a1;\n  undefined local_a0;\n  undefined local_9f;\n  int ********local_9c;\n  int local_98;\n  int *******local_94;\n  undefined local_90;\n  char cStack_6a;\n  undefined local_69;\n  undefined local_68 [4];\n  int *******local_64 [16];\n  \n  if ((param_1 !\u003d 0) \u0026\u0026 (*(int *)(param_1 + 0x38) \u003d\u003d 0)) {\n    __sinit();\n  }\n  uVar13 \u003d (uint)*(ushort *)(param_2 + 0xc);\n  if (-1 \u003c (int)((uint)*(ushort *)(param_2 + 0xc) \u003c\u003c 0x12)) {\n    uVar13 \u003d uVar13 | 0x2000;\n    *(short *)(param_2 + 0xc) \u003d (short)uVar13;\n    *(uint *)(param_2 + 100) \u003d *(uint *)(param_2 + 100) \u0026 0xffffdfff;\n  }\n  if (((int)(uVar13 \u003c\u003c 0x1c) \u003c 0) \u0026\u0026 (*(int *)(param_2 + 0x10) !\u003d 0)) {\n    if ((uVar13 \u0026 0x1a) !\u003d 10) goto LAB_00082b8a;\n  }\n  else {\n    iVar8 \u003d __swsetup_r(param_1,param_2);\n    if (iVar8 !\u003d 0) {\n      return -1;\n    }\n    if ((*(ushort *)(param_2 + 0xc) \u0026 0x1a) !\u003d 10) goto LAB_00082b8a;\n  }\n  if (-1 \u003c *(short *)(param_2 + 0xe)) {\n    iVar8 \u003d __sbprintf(param_1,param_2,param_3,param_4);\n    return iVar8;\n  }\nLAB_00082b8a:\n  local_c0 \u003d (char *)0x0;\n  local_94 \u003d (int *******)0x0;\n  local_98 \u003d 0;\n  local_c4 \u003d 0;\n  ppppppppiVar6 \u003d (int ********)local_68;\n  local_c8 \u003d param_4;\n  local_9c \u003d (int ********)local_68;\nLAB_00082b9e:\n  pppppppiVar10 \u003d param_3;\n  if ((*(char *)param_3 !\u003d \u0027\\0\u0027) \u0026\u0026 (*(char *)param_3 !\u003d \u0027%\u0027)) {\n    do {\n      pppppppiVar10 \u003d (int *******)((int)pppppppiVar10 + 1);\n      if (*(char *)pppppppiVar10 \u003d\u003d \u0027\\0\u0027) break;\n    } while (*(char *)pppppppiVar10 !\u003d \u0027%\u0027);\n    pppppppiVar20 \u003d (int *******)((int)pppppppiVar10 - (int)param_3);\n    if (pppppppiVar20 !\u003d (int *******)0x0) {\n      local_98 \u003d local_98 + 1;\n      local_94 \u003d (int *******)((int)local_94 + (int)pppppppiVar20);\n      *ppppppppiVar6 \u003d param_3;\n      ppppppppiVar6[1] \u003d pppppppiVar20;\n      if (local_98 \u003c 8) {\n        ppppppppiVar6 \u003d ppppppppiVar6 + 2;\n      }\n      else {\n        if (local_94 \u003d\u003d (int *******)0x0) {\n          local_c4 \u003d local_c4 + (int)pppppppiVar20;\n          local_98 \u003d 0;\n          ppppppppiVar6 \u003d (int ********)local_68;\n          goto LAB_00082bee;\n        }\n        iVar8 \u003d __sprint_r_part_0(param_1,param_2,\u0026local_9c);\n        ppppppppiVar6 \u003d (int ********)local_68;\n        if (iVar8 !\u003d 0) goto LAB_000833de;\n      }\n      local_c4 \u003d local_c4 + (int)pppppppiVar20;\n    }\n  }\nLAB_00082bee:\n  if (*(char *)pppppppiVar10 !\u003d \u0027\\0\u0027) {\n    local_a1 \u003d \u0027\\0\u0027;\n    uVar14 \u003d (uint)*(byte *)((int)pppppppiVar10 + 1);\n    uVar13 \u003d 0;\n    bVar5 \u003d false;\n    bVar2 \u003d false;\n    bVar1 \u003d false;\n    bVar3 \u003d false;\n    bVar26 \u003d false;\n    pppppppiVar20 \u003d (int *******)0x0;\n    local_d4 \u003d (int *******)0xffffffff;\n    param_3 \u003d (int *******)((int)pppppppiVar10 + 1);\nLAB_00082c12:\n    param_3 \u003d (int *******)((int)param_3 + 1);\nLAB_00082c16:\n    switch(uVar14) {\n    case 0x20:\n      goto switchD_00082c20_caseD_20;\n    default:\n      if (uVar14 !\u003d 0) {\n        local_dc \u003d (int *******)0x1;\n        local_d4 \u003d (int *******)0x1;\n        ppppppppiVar25 \u003d (int ********)\u0026local_90;\n        local_90 \u003d (char)uVar14;\n        goto LAB_00083012;\n      }\n      goto LAB_000833d0;\n    case 0x23:\n      bVar3 \u003d true;\n      uVar14 \u003d (uint)*(byte *)param_3;\n      goto LAB_00082c12;\n    case 0x2a:\n      pppppppiVar20 \u003d (int *******)*local_c8;\n      local_c8 \u003d local_c8 + 1;\n      if ((int)pppppppiVar20 \u003c 0) {\n        pppppppiVar20 \u003d (int *******)-(int)pppppppiVar20;\n        goto switchD_00082c20_caseD_2d;\n      }\n      uVar14 \u003d (uint)*(byte *)param_3;\n      goto LAB_00082c12;\n    case 0x2b:\n      uVar14 \u003d (uint)*(byte *)param_3;\n      local_a1 \u003d \u0027+\u0027;\n      goto LAB_00082c12;\n    case 0x2d:\nswitchD_00082c20_caseD_2d:\n      uVar13 \u003d uVar13 | 4;\n      uVar14 \u003d (uint)*(byte *)param_3;\n      goto LAB_00082c12;\n    case 0x2e:\n      uVar14 \u003d (uint)*(byte *)param_3;\n      pppppppiVar10 \u003d (int *******)((int)param_3 + 1);\n      if (uVar14 \u003d\u003d 0x2a) {\n        uVar14 \u003d (uint)*(byte *)((int)param_3 + 1);\n        local_d4 \u003d (int *******)*local_c8;\n        local_c8 \u003d local_c8 + 1;\n        param_3 \u003d pppppppiVar10;\n        if ((int)local_d4 \u003c 0) {\n          local_d4 \u003d (int *******)0xffffffff;\n        }\n        goto LAB_00082c12;\n      }\n      uVar11 \u003d uVar14 - 0x30;\n      if (uVar11 \u003c 10) {\n        uVar21 \u003d 0;\n        do {\n          param_3 \u003d (int *******)((int)pppppppiVar10 + 1);\n          uVar14 \u003d (uint)*(byte *)pppppppiVar10;\n          uVar21 \u003d uVar11 + uVar21 * 10;\n          uVar11 \u003d uVar14 - 0x30;\n          pppppppiVar10 \u003d param_3;\n        } while (uVar11 \u003c 10);\n        local_d4 \u003d (int *******)(uVar21 | (int)uVar21 \u003e\u003e 0x1f);\n      }\n      else {\n        local_d4 \u003d (int *******)0x0;\n        param_3 \u003d pppppppiVar10;\n      }\n      goto LAB_00082c16;\n    case 0x30:\n      uVar13 \u003d uVar13 | 0x80;\n      uVar14 \u003d (uint)*(byte *)param_3;\n      goto LAB_00082c12;\n    case 0x31:\n    case 0x32:\n    case 0x33:\n    case 0x34:\n    case 0x35:\n    case 0x36:\n    case 0x37:\n    case 0x38:\n    case 0x39:\n      goto switchD_00082c20_caseD_31;\n    case 0x44:\n      bVar2 \u003d true;\n      if (bVar1 \u003d\u003d false) goto LAB_00083028;\nLAB_00082e98:\n      local_c8 \u003d (int **)((int)local_c8 + 7U \u0026 0xfffffff8);\n      piVar19 \u003d *local_c8;\n      piVar22 \u003d local_c8[1];\n      local_c8 \u003d local_c8 + 2;\n      goto LAB_00082eac;\n    case 0x4f:\n      bVar2 \u003d true;\n      if (bVar1 !\u003d false) goto LAB_00082d42;\nLAB_00082f2a:\n      iVar8 \u003d (uint)bVar2 \u003c\u003c 4;\n      iVar15 \u003d (uint)bVar1 \u003c\u003c 5;\n      if ((bVar2 \u003d\u003d 0) \u0026\u0026 (iVar15 \u003d (uint)bVar26 \u003c\u003c 6, bVar26 !\u003d 0)) {\n        piVar19 \u003d (int *)(uint)*(ushort *)local_c8;\n        local_c8 \u003d local_c8 + 1;\n        piVar22 \u003d (int *)0x0;\n      }\n      else {\n        iVar8 \u003d iVar15;\n        piVar19 \u003d *local_c8;\n        local_c8 \u003d local_c8 + 1;\n        piVar22 \u003d (int *)0x0;\n      }\n      break;\n    case 0x55:\n      bVar2 \u003d true;\n      if (bVar1 !\u003d false) goto LAB_00082e62;\nLAB_00082f7c:\n      if ((bVar2) || (bVar26 \u003d\u003d false)) {\n        iVar8 \u003d 1;\n        piVar19 \u003d *local_c8;\n        local_c8 \u003d local_c8 + 1;\n        piVar22 \u003d (int *)0x0;\n      }\n      else {\n        piVar22 \u003d (int *)0x0;\n        piVar19 \u003d (int *)(uint)*(ushort *)local_c8;\n        local_c8 \u003d local_c8 + 1;\n        iVar8 \u003d 1;\n      }\n      break;\n    case 0x58:\n      local_c0 \u003d \"0123456789ABCDEF\";\n      if (bVar1 \u003d\u003d false) goto LAB_00083196;\nLAB_00082fb6:\n      ppiVar12 \u003d (int **)((int)local_c8 + 7U \u0026 0xfffffff8);\n      local_c8 \u003d ppiVar12 + 2;\n      piVar19 \u003d *ppiVar12;\n      piVar22 \u003d ppiVar12[1];\n      goto LAB_00082fca;\n    case 99:\n      piVar19 \u003d *local_c8;\n      local_c8 \u003d local_c8 + 1;\n      local_dc \u003d (int *******)0x1;\n      local_90 \u003d SUB41(piVar19,0);\n      local_d4 \u003d (int *******)0x1;\n      ppppppppiVar25 \u003d (int ********)\u0026local_90;\n      goto LAB_00083012;\n    case 100:\n    case 0x69:\n      if (bVar1 !\u003d false) goto LAB_00082e98;\nLAB_00083028:\n      if ((bVar2 \u003d\u003d false) \u0026\u0026 (bVar26 !\u003d false)) {\n        piVar19 \u003d (int *)(int)*(short *)local_c8;\n        local_c8 \u003d local_c8 + 1;\n        piVar22 \u003d (int *)((int)piVar19 \u003e\u003e 0x1f);\n      }\n      else {\n        piVar19 \u003d *local_c8;\n        local_c8 \u003d local_c8 + 1;\n        piVar22 \u003d (int *)((int)piVar19 \u003e\u003e 0x1f);\n      }\nLAB_00082eac:\n      if ((int)piVar22 \u003c 0) {\n        bVar26 \u003d piVar19 !\u003d (int *)0x0;\n        piVar19 \u003d (int *)-(int)piVar19;\n        piVar22 \u003d (int *)(-(int)piVar22 - (uint)bVar26);\n        local_a1 \u003d \u0027-\u0027;\n        cVar4 \u003d \u0027-\u0027;\n        iVar8 \u003d 1;\n        goto LAB_00082d6a;\n      }\n      if (-1 \u003c (int)local_d4) {\n        uVar13 \u003d uVar13 \u0026 0xffffff7f;\n      }\n      bVar5 \u003d false;\n      uVar14 \u003d (uint)piVar19 | (uint)piVar22;\n      iVar8 \u003d 1;\n      cVar4 \u003d local_a1;\n      goto joined_r0x00082d78;\n    case 0x68:\n      bVar26 \u003d true;\n      uVar14 \u003d (uint)*(byte *)param_3;\n      goto LAB_00082c12;\n    case 0x6c:\n      uVar14 \u003d (uint)*(byte *)param_3;\n      if (uVar14 \u003d\u003d 0x6c) {\n        bVar1 \u003d true;\n        uVar14 \u003d (uint)*(byte *)((int)param_3 + 1);\n        param_3 \u003d (int *******)((int)param_3 + 1);\n      }\n      else {\n        bVar2 \u003d true;\n      }\n      goto LAB_00082c12;\n    case 0x6e:\n      if (bVar1 \u003d\u003d false) {\n        if (bVar2 \u003d\u003d false) {\n          if (bVar26) {\n            piVar19 \u003d *local_c8;\n            local_c8 \u003d local_c8 + 1;\n            *(short *)piVar19 \u003d (short)local_c4;\n          }\n          else {\n            piVar19 \u003d *local_c8;\n            local_c8 \u003d local_c8 + 1;\n            *piVar19 \u003d local_c4;\n          }\n        }\n        else {\n          piVar19 \u003d *local_c8;\n          local_c8 \u003d local_c8 + 1;\n          *piVar19 \u003d local_c4;\n        }\n      }\n      else {\n        piVar19 \u003d *local_c8;\n        local_c8 \u003d local_c8 + 1;\n        *piVar19 \u003d local_c4;\n        piVar19[1] \u003d local_c4 \u003e\u003e 0x1f;\n      }\n      goto LAB_00082b9e;\n    case 0x6f:\n      if (bVar1 \u003d\u003d false) goto LAB_00082f2a;\nLAB_00082d42:\n      ppiVar12 \u003d (int **)((int)local_c8 + 7U \u0026 0xfffffff8);\n      local_c8 \u003d ppiVar12 + 2;\n      piVar19 \u003d *ppiVar12;\n      piVar22 \u003d ppiVar12[1];\n      iVar8 \u003d 0;\n      break;\n    case 0x70:\n      piVar19 \u003d *local_c8;\n      local_c8 \u003d local_c8 + 1;\n      local_9f \u003d 0x78;\n      bVar5 \u003d true;\n      piVar22 \u003d (int *)0x0;\n      local_a0 \u003d 0x30;\n      local_c0 \u003d \"0123456789abcdef\";\n      iVar8 \u003d 2;\n      break;\n    case 0x71:\n      bVar1 \u003d true;\n      uVar14 \u003d (uint)*(byte *)param_3;\n      goto LAB_00082c12;\n    case 0x73:\n      ppppppppiVar25 \u003d (int ********)*local_c8;\n      local_a1 \u003d \u0027\\0\u0027;\n      local_c8 \u003d local_c8 + 1;\n      if (ppppppppiVar25 !\u003d (int ********)0x0) {\n        if ((int)local_d4 \u003c 0) {\n          local_d4 \u003d (int *******)strlen(ppppppppiVar25);\n          pppppppiVar10 \u003d (int *******)0x0;\n          cVar4 \u003d local_a1;\n        }\n        else {\n          iVar8 \u003d memchr(ppppppppiVar25,0,local_d4);\n          cVar4 \u003d local_a1;\n          if (iVar8 \u003d\u003d 0) {\n            pppppppiVar10 \u003d (int *******)0x0;\n          }\n          else {\n            pppppppiVar18 \u003d (int *******)(iVar8 - (int)ppppppppiVar25);\n            if ((int)local_d4 \u003c\u003d (int)(int *******)(iVar8 - (int)ppppppppiVar25)) {\n              pppppppiVar18 \u003d local_d4;\n            }\n            pppppppiVar10 \u003d (int *******)0x0;\n            local_d4 \u003d pppppppiVar18;\n          }\n        }\n        goto LAB_00082da0;\n      }\n      if ((int *******)0x5 \u003c local_d4) {\n        local_d4 \u003d (int *******)0x6;\n      }\n      local_dc \u003d (int *******)((uint)local_d4 \u0026 ~((int)local_d4 \u003e\u003e 0x1f));\n      ppppppppiVar25 \u003d (int ********)\u0026UNK_00085840;\nLAB_00083012:\n      local_a1 \u003d \u0027\\0\u0027;\n      pppppppiVar10 \u003d (int *******)0x0;\n      goto LAB_00082dba;\n    case 0x75:\n      if (!bVar1) goto LAB_00082f7c;\nLAB_00082e62:\n      ppiVar12 \u003d (int **)((int)local_c8 + 7U \u0026 0xfffffff8);\n      local_c8 \u003d ppiVar12 + 2;\n      piVar19 \u003d *ppiVar12;\n      piVar22 \u003d ppiVar12[1];\n      iVar8 \u003d 1;\n      break;\n    case 0x78:\n      local_c0 \u003d \"0123456789abcdef\";\n      if (bVar1 !\u003d false) goto LAB_00082fb6;\nLAB_00083196:\n      if ((bVar2 \u003d\u003d false) \u0026\u0026 (bVar26 !\u003d false)) {\n        piVar22 \u003d (int *)0x0;\n        piVar19 \u003d (int *)(uint)*(ushort *)local_c8;\n        local_c8 \u003d local_c8 + 1;\n      }\n      else {\n        piVar19 \u003d *local_c8;\n        local_c8 \u003d local_c8 + 1;\n        piVar22 \u003d (int *)0x0;\n      }\nLAB_00082fca:\n      if ((bVar3) \u0026\u0026 (((uint)piVar19 | (uint)piVar22) !\u003d 0)) {\n        bVar5 \u003d true;\n        local_a0 \u003d 0x30;\n        iVar8 \u003d 2;\n        local_9f \u003d (char)uVar14;\n      }\n      else {\n        iVar8 \u003d 2;\n      }\n    }\n    local_a1 \u003d \u0027\\0\u0027;\n    cVar4 \u003d \u0027\\0\u0027;\nLAB_00082d6a:\n    if (-1 \u003c (int)local_d4) {\n      uVar13 \u003d uVar13 \u0026 0xffffff7f;\n    }\n    uVar14 \u003d (uint)piVar19 | (uint)piVar22;\njoined_r0x00082d78:\n    lVar27 \u003d CONCAT44(piVar22,piVar19);\n    pppppppiVar10 \u003d local_d4;\n    if ((uVar14 \u003d\u003d 0) \u0026\u0026 (local_d4 \u003d\u003d (int *******)0x0)) {\n      ppppppppiVar25 \u003d (int ********)local_68;\n      if ((iVar8 !\u003d 0) || (!bVar3)) goto LAB_00082da0;\n      ppppppppiVar25 \u003d (int ********)(\u0026cStack_6a + 1);\n      local_69 \u003d \u00270\u0027;\n      goto LAB_00082d9a;\n    }\n    if (iVar8 \u003d\u003d 1) {\n      if (piVar22 !\u003d (int *)0x0 || (int *)0x9 \u003c piVar19) {\n        ppppppppiVar16 \u003d (int ********)(\u0026cStack_6a + 1);\n        do {\n          ppppppppiVar25 \u003d ppppppppiVar16;\n          uVar24 \u003d (undefined4)((ulonglong)lVar27 \u003e\u003e 0x20);\n          cVar9 \u003d \u0027\\n\u0027;\n          __aeabi_uldivmod((int)lVar27,uVar24,10,0);\n          *(char *)ppppppppiVar25 \u003d cVar9 + \u00270\u0027;\n          lVar27 \u003d __aeabi_uldivmod((int)lVar27,uVar24,10,0);\n          ppppppppiVar16 \u003d (int ********)((int)ppppppppiVar25 + -1);\n        } while (lVar27 !\u003d 0);\n        local_d4 \u003d (int *******)((int)local_68 - (int)ppppppppiVar25);\n        goto LAB_00082da0;\n      }\n      local_69 \u003d (char)piVar19 + \u00270\u0027;\n      ppppppppiVar25 \u003d (int ********)(\u0026cStack_6a + 1);\n      goto LAB_0008351e;\n    }\n    ppppppppiVar16 \u003d (int ********)(\u0026cStack_6a + 1);\n    if (iVar8 !\u003d 2) goto LAB_0008337e;\n    do {\n      ppppppppiVar25 \u003d ppppppppiVar16;\n      uVar14 \u003d (uint)piVar19 \u0026 0xf;\n      piVar19 \u003d (int *)((uint)piVar19 \u003e\u003e 4 | (int)piVar22 \u003c\u003c 0x1c);\n      piVar22 \u003d (int *)((uint)piVar22 \u003e\u003e 4);\n      *(char *)ppppppppiVar25 \u003d local_c0[uVar14];\n      ppppppppiVar16 \u003d (int ********)((int)ppppppppiVar25 + -1);\n    } while (((uint)piVar19 | (uint)piVar22) !\u003d 0);\n    local_d4 \u003d (int *******)((int)local_68 - (int)ppppppppiVar25);\n    goto LAB_00082da0;\n  }\nLAB_000833d0:\n  if (local_94 !\u003d (int *******)0x0) {\n    __sprint_r_part_0(param_1,param_2,\u0026local_9c);\n  }\nLAB_000833de:\n  if ((int)((uint)*(ushort *)(param_2 + 0xc) \u003c\u003c 0x19) \u003c 0) {\n    return -1;\n  }\n  return local_c4;\nLAB_0008337e:\n  do {\n    ppppppppiVar25 \u003d ppppppppiVar16;\n    piVar7 \u003d (int *)((uint)piVar19 \u003e\u003e 3 | (int)piVar22 \u003c\u003c 0x1d);\n    piVar22 \u003d (int *)((uint)piVar22 \u003e\u003e 3);\n    iVar8 \u003d ((uint)piVar19 \u0026 7) + 0x30;\n    *(char *)ppppppppiVar25 \u003d (char)iVar8;\n    ppppppppiVar16 \u003d (int ********)((int)ppppppppiVar25 + -1);\n    piVar19 \u003d piVar7;\n  } while (((uint)piVar7 | (uint)piVar22) !\u003d 0);\n  if (bVar3) {\n    if (iVar8 \u003d\u003d 0x30) {\nLAB_00082d9a:\n      local_d4 \u003d (int *******)((int)local_68 - (int)ppppppppiVar25);\n    }\n    else {\n      *(undefined *)((int)ppppppppiVar25 + -1) \u003d 0x30;\n      ppppppppiVar25 \u003d ppppppppiVar16;\n      local_d4 \u003d (int *******)((int)local_68 - (int)ppppppppiVar16);\n    }\n  }\n  else {\nLAB_0008351e:\n    local_d4 \u003d (int *******)((int)local_68 - (int)ppppppppiVar25);\n  }\nLAB_00082da0:\n  local_dc \u003d local_d4;\n  if ((int)local_d4 \u003c (int)pppppppiVar10) {\n    local_dc \u003d pppppppiVar10;\n  }\n  if (cVar4 !\u003d \u0027\\0\u0027) {\n    local_dc \u003d (int *******)((int)local_dc + 1);\n  }\nLAB_00082dba:\n  if (bVar5) {\n    local_dc \u003d (int *******)((int)local_dc + 2);\n  }\n  if ((uVar13 \u003d\u003d 0) \u0026\u0026\n     (pppppppiVar18 \u003d (int *******)((int)pppppppiVar20 - (int)local_dc), 0 \u003c (int)pppppppiVar18)) {\n    if ((int)pppppppiVar18 \u003c 0x11) {\n      local_98 \u003d local_98 + 1;\n    }\n    else {\n      do {\n        pppppppiVar23 \u003d pppppppiVar18;\n        iVar8 \u003d local_98 + 1;\n        local_94 \u003d local_94 + 4;\n        *ppppppppiVar6 \u003d (int *******)0x85808;\n        ppppppppiVar6[1] \u003d (int *******)0x10;\n        if (iVar8 \u003c 8) {\n          iVar15 \u003d local_98 + 2;\n          ppppppppiVar6 \u003d ppppppppiVar6 + 2;\n          local_98 \u003d iVar8;\n        }\n        else if (local_94 \u003d\u003d (int *******)0x0) {\n          iVar15 \u003d 1;\n          ppppppppiVar6 \u003d (int ********)local_68;\n          local_98 \u003d 0;\n        }\n        else {\n          local_98 \u003d iVar8;\n          iVar8 \u003d __sprint_r_part_0(param_1,param_2,\u0026local_9c);\n          if (iVar8 !\u003d 0) goto LAB_000833de;\n          iVar15 \u003d local_98 + 1;\n          ppppppppiVar6 \u003d (int ********)local_68;\n        }\n        pppppppiVar18 \u003d pppppppiVar23 + -4;\n      } while (0x10 \u003c (int)pppppppiVar18);\n      pppppppiVar18 \u003d pppppppiVar23 + -4;\n      local_98 \u003d iVar15;\n    }\n    local_94 \u003d (int *******)((int)local_94 + (int)pppppppiVar18);\n    *ppppppppiVar6 \u003d (int *******)0x85808;\n    ppppppppiVar6[1] \u003d pppppppiVar18;\n    if (local_98 \u003c 8) {\n      iVar8 \u003d local_98 + 1;\n      ppppppppiVar6 \u003d ppppppppiVar6 + 2;\n    }\n    else if (local_94 \u003d\u003d (int *******)0x0) {\n      iVar8 \u003d 1;\n      local_98 \u003d 0;\n      ppppppppiVar6 \u003d (int ********)local_68;\n    }\n    else {\n      iVar8 \u003d __sprint_r_part_0(param_1,param_2,\u0026local_9c);\n      if (iVar8 !\u003d 0) goto LAB_000833de;\n      iVar8 \u003d local_98 + 1;\n      ppppppppiVar6 \u003d (int ********)local_68;\n    }\n  }\n  else {\n    iVar8 \u003d local_98 + 1;\n  }\n  iVar15 \u003d iVar8;\n  if (local_a1 !\u003d \u0027\\0\u0027) {\n    local_94 \u003d (int *******)((int)local_94 + 1);\n    iVar15 \u003d 1;\n    *ppppppppiVar6 \u003d (int *******)\u0026local_a1;\n    ppppppppiVar6[1] \u003d (int *******)0x1;\n    local_98 \u003d iVar8;\n    if (iVar8 \u003c 8) {\n      iVar15 \u003d iVar8 + 1;\n      ppppppppiVar6 \u003d ppppppppiVar6 + 2;\n    }\n    else if (local_94 \u003d\u003d (int *******)0x0) {\n      local_98 \u003d 0;\n      ppppppppiVar6 \u003d (int ********)local_68;\n    }\n    else {\n      iVar8 \u003d __sprint_r_part_0(param_1,param_2,\u0026local_9c);\n      if (iVar8 !\u003d 0) goto LAB_000833de;\n      iVar15 \u003d local_98 + 1;\n      ppppppppiVar6 \u003d (int ********)local_68;\n    }\n  }\n  iVar8 \u003d iVar15;\n  iVar17 \u003d local_98;\n  if (bVar5) {\n    local_94 \u003d (int *******)((int)local_94 + 2);\n    *ppppppppiVar6 \u003d (int *******)\u0026local_a0;\n    ppppppppiVar6[1] \u003d (int *******)0x2;\n    if (iVar15 \u003c 8) {\n      iVar8 \u003d iVar15 + 1;\n      iVar17 \u003d iVar15;\n      ppppppppiVar6 \u003d ppppppppiVar6 + 2;\n    }\n    else if (local_94 \u003d\u003d (int *******)0x0) {\n      iVar8 \u003d 1;\n      iVar17 \u003d 0;\n      ppppppppiVar6 \u003d (int ********)local_68;\n    }\n    else {\n      local_98 \u003d iVar15;\n      iVar8 \u003d __sprint_r_part_0(param_1,param_2,\u0026local_9c);\n      if (iVar8 !\u003d 0) goto LAB_000833de;\n      iVar8 \u003d local_98 + 1;\n      iVar17 \u003d local_98;\n      ppppppppiVar6 \u003d (int ********)local_68;\n    }\n  }\n  local_98 \u003d iVar17;\n  if ((uVar13 \u003d\u003d 0x80) \u0026\u0026\n     (pppppppiVar18 \u003d (int *******)((int)pppppppiVar20 - (int)local_dc), 0 \u003c (int)pppppppiVar18)) {\n    if (0x10 \u003c (int)pppppppiVar18) {\n      do {\n        while( true ) {\n          pppppppiVar23 \u003d pppppppiVar18;\n          local_98 \u003d iVar17 + 1;\n          local_94 \u003d local_94 + 4;\n          *ppppppppiVar6 \u003d (int *******)\u0026DAT_00085848;\n          ppppppppiVar6[1] \u003d (int *******)0x10;\n          if (7 \u003c local_98) break;\n          iVar8 \u003d iVar17 + 2;\n          ppppppppiVar6 \u003d ppppppppiVar6 + 2;\nLAB_0008348e:\n          iVar17 \u003d local_98;\n          pppppppiVar18 \u003d pppppppiVar23 + -4;\n          if ((int)(pppppppiVar23 + -4) \u003c 0x11) goto LAB_000834b4;\n        }\n        if (local_94 !\u003d (int *******)0x0) {\n          iVar8 \u003d __sprint_r_part_0(param_1,param_2,\u0026local_9c);\n          if (iVar8 \u003d\u003d 0) {\n            iVar8 \u003d local_98 + 1;\n            ppppppppiVar6 \u003d (int ********)local_68;\n            goto LAB_0008348e;\n          }\n          goto LAB_000833de;\n        }\n        iVar8 \u003d 1;\n        iVar17 \u003d 0;\n        pppppppiVar18 \u003d pppppppiVar23 + -4;\n        ppppppppiVar6 \u003d (int ********)local_68;\n      } while (0x10 \u003c (int)(pppppppiVar23 + -4));\nLAB_000834b4:\n      pppppppiVar18 \u003d pppppppiVar23 + -4;\n    }\n    local_94 \u003d (int *******)((int)local_94 + (int)pppppppiVar18);\n    *ppppppppiVar6 \u003d (int *******)\u0026DAT_00085848;\n    ppppppppiVar6[1] \u003d pppppppiVar18;\n    local_98 \u003d iVar8;\n    if (iVar8 \u003c 8) {\n      iVar8 \u003d iVar8 + 1;\n      ppppppppiVar6 \u003d ppppppppiVar6 + 2;\n    }\n    else if (local_94 \u003d\u003d (int *******)0x0) {\n      iVar8 \u003d 1;\n      local_98 \u003d 0;\n      ppppppppiVar6 \u003d (int ********)local_68;\n    }\n    else {\n      iVar8 \u003d __sprint_r_part_0(param_1,param_2,\u0026local_9c);\n      if (iVar8 !\u003d 0) goto LAB_000833de;\n      iVar8 \u003d local_98 + 1;\n      ppppppppiVar6 \u003d (int ********)local_68;\n    }\n  }\n  pppppppiVar10 \u003d (int *******)((int)pppppppiVar10 - (int)local_d4);\n  ppppppppiVar16 \u003d (int ********)local_68;\n  if ((int)pppppppiVar10 \u003c 1) {\nLAB_000832c6:\n    local_94 \u003d (int *******)((int)local_94 + (int)local_d4);\n    *ppppppppiVar6 \u003d (int *******)ppppppppiVar25;\n    ppppppppiVar6[1] \u003d local_d4;\n    local_d4 \u003d local_94;\n    local_98 \u003d iVar8;\n    if (iVar8 \u003c 8) goto LAB_0008345a;\n    if (local_94 \u003d\u003d (int *******)0x0) {\n      local_98 \u003d 0;\n    }\n    else {\n      iVar8 \u003d __sprint_r_part_0(param_1,param_2,\u0026local_9c);\n      if (iVar8 !\u003d 0) goto LAB_000833de;\n    }\n  }\n  else {\n    iVar15 \u003d local_98;\n    if (0x10 \u003c (int)pppppppiVar10) {\n      do {\n        while( true ) {\n          pppppppiVar18 \u003d pppppppiVar10;\n          local_98 \u003d iVar15 + 1;\n          local_94 \u003d local_94 + 4;\n          *ppppppppiVar6 \u003d (int *******)\u0026DAT_00085848;\n          ppppppppiVar6[1] \u003d (int *******)0x10;\n          if (7 \u003c local_98) break;\n          iVar8 \u003d iVar15 + 2;\n          ppppppppiVar6 \u003d ppppppppiVar6 + 2;\nLAB_00083282:\n          iVar15 \u003d local_98;\n          pppppppiVar10 \u003d pppppppiVar18 + -4;\n          if ((int)(pppppppiVar18 + -4) \u003c 0x11) goto LAB_000832aa;\n        }\n        if (local_94 !\u003d (int *******)0x0) {\n          iVar8 \u003d __sprint_r_part_0(param_1,param_2,\u0026local_9c);\n          if (iVar8 \u003d\u003d 0) {\n            iVar8 \u003d local_98 + 1;\n            ppppppppiVar6 \u003d (int ********)local_68;\n            goto LAB_00083282;\n          }\n          goto LAB_000833de;\n        }\n        iVar8 \u003d 1;\n        ppppppppiVar6 \u003d (int ********)local_68;\n        iVar15 \u003d 0;\n        pppppppiVar10 \u003d pppppppiVar18 + -4;\n      } while (0x10 \u003c (int)(pppppppiVar18 + -4));\nLAB_000832aa:\n      pppppppiVar10 \u003d pppppppiVar18 + -4;\n    }\n    local_94 \u003d (int *******)((int)local_94 + (int)pppppppiVar10);\n    *ppppppppiVar6 \u003d (int *******)\u0026DAT_00085848;\n    ppppppppiVar6[1] \u003d pppppppiVar10;\n    if (iVar8 \u003c 8) {\n      iVar8 \u003d iVar8 + 1;\n      ppppppppiVar6 \u003d ppppppppiVar6 + 2;\n      goto LAB_000832c6;\n    }\n    if (local_94 !\u003d (int *******)0x0) {\n      local_98 \u003d iVar8;\n      iVar8 \u003d __sprint_r_part_0(param_1,param_2,\u0026local_9c);\n      if (iVar8 !\u003d 0) goto LAB_000833de;\n      iVar8 \u003d local_98 + 1;\n      ppppppppiVar6 \u003d (int ********)local_68;\n      goto LAB_000832c6;\n    }\n    local_64[0] \u003d local_d4;\n    local_98 \u003d 1;\n    ppppppppiVar6 \u003d (int ********)local_68;\n    local_68 \u003d (undefined  [4])ppppppppiVar25;\nLAB_0008345a:\n    ppppppppiVar16 \u003d ppppppppiVar6 + 2;\n    local_94 \u003d local_d4;\n  }\n  if (((uVar13 \u0026 4) !\u003d 0) \u0026\u0026\n     (pppppppiVar10 \u003d (int *******)((int)pppppppiVar20 - (int)local_dc), 0 \u003c (int)pppppppiVar10)) {\n    iVar8 \u003d local_98;\n    if ((int)pppppppiVar10 \u003c 0x11) {\n      iVar15 \u003d local_98 + 1;\n    }\n    else {\n      do {\n        while( true ) {\n          local_98 \u003d iVar8 + 1;\n          local_94 \u003d local_94 + 4;\n          *ppppppppiVar16 \u003d (int *******)0x85808;\n          ppppppppiVar16[1] \u003d (int *******)0x10;\n          if (7 \u003c local_98) break;\n          iVar15 \u003d iVar8 + 2;\n          ppppppppiVar16 \u003d ppppppppiVar16 + 2;\nLAB_00083316:\n          pppppppiVar10 \u003d pppppppiVar10 + -4;\n          iVar8 \u003d local_98;\n          if ((int)pppppppiVar10 \u003c 0x11) goto LAB_0008333e;\n        }\n        if (local_94 !\u003d (int *******)0x0) {\n          iVar8 \u003d __sprint_r_part_0(param_1,param_2,\u0026local_9c);\n          if (iVar8 \u003d\u003d 0) {\n            iVar15 \u003d local_98 + 1;\n            ppppppppiVar16 \u003d (int ********)local_68;\n            goto LAB_00083316;\n          }\n          goto LAB_000833de;\n        }\n        pppppppiVar10 \u003d pppppppiVar10 + -4;\n        iVar15 \u003d 1;\n        iVar8 \u003d 0;\n        ppppppppiVar16 \u003d (int ********)local_68;\n      } while (0x10 \u003c (int)pppppppiVar10);\n    }\nLAB_0008333e:\n    local_94 \u003d (int *******)((int)local_94 + (int)pppppppiVar10);\n    *ppppppppiVar16 \u003d (int *******)0x85808;\n    ppppppppiVar16[1] \u003d pppppppiVar10;\n    local_98 \u003d iVar15;\n    if (7 \u003c iVar15) {\n      if (local_94 \u003d\u003d (int *******)0x0) {\n        if ((int)local_dc \u003c (int)pppppppiVar20) {\n          local_dc \u003d pppppppiVar20;\n        }\n        local_c4 \u003d local_c4 + (int)local_dc;\n        goto LAB_00083422;\n      }\n      iVar8 \u003d __sprint_r_part_0(param_1,param_2,\u0026local_9c);\n      if (iVar8 !\u003d 0) goto LAB_000833de;\n    }\n  }\n  if ((int)local_dc \u003c (int)pppppppiVar20) {\n    local_dc \u003d pppppppiVar20;\n  }\n  local_c4 \u003d local_c4 + (int)local_dc;\n  if ((local_94 !\u003d (int *******)0x0) \u0026\u0026\n     (iVar8 \u003d __sprint_r_part_0(param_1,param_2,\u0026local_9c), iVar8 !\u003d 0)) goto LAB_000833de;\nLAB_00083422:\n  local_98 \u003d 0;\n  ppppppppiVar6 \u003d (int ********)local_68;\n  goto LAB_00082b9e;\nswitchD_00082c20_caseD_31:\n  uVar11 \u003d uVar14 - 0x30;\n  pppppppiVar20 \u003d (int *******)0x0;\n  pppppppiVar10 \u003d param_3;\n  do {\n    param_3 \u003d (int *******)((int)pppppppiVar10 + 1);\n    uVar14 \u003d (uint)*(byte *)pppppppiVar10;\n    pppppppiVar20 \u003d (int *******)(uVar11 + (int)pppppppiVar20 * 10);\n    uVar11 \u003d uVar14 - 0x30;\n    pppppppiVar10 \u003d param_3;\n  } while (uVar11 \u003c 10);\n  goto LAB_00082c16;\nswitchD_00082c20_caseD_20:\n  uVar14 \u003d (uint)*(byte *)param_3;\n  if (local_a1 \u003d\u003d \u0027\\0\u0027) {\n    local_a1 \u003d \u0027 \u0027;\n  }\n  goto LAB_00082c12;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_0008378c"
      ],
      "called": [
        "FUN_00082ac0",
        "FUN_00082a50",
        "FUN_0008378c",
        "FUN_00084384",
        "FUN_00084750",
        "FUN_00083b14",
        "FUN_00083808"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0008378c": {
      "entrypoint": "0x0008378c",
      "current_name": "FUN_0008378c",
      "code": "\nint FUN_0008378c(undefined4 param_1,int param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined *local_488 [2];\n  undefined4 local_480;\n  ushort local_47c;\n  undefined2 local_47a;\n  undefined *local_478;\n  undefined4 local_474;\n  undefined4 local_470;\n  undefined4 local_46c;\n  undefined4 local_464;\n  undefined4 local_424;\n  undefined auStack_420 [1024];\n  \n  local_424 \u003d *(undefined4 *)(param_2 + 100);\n  local_46c \u003d *(undefined4 *)(param_2 + 0x1c);\n  local_47a \u003d *(undefined2 *)(param_2 + 0xe);\n  local_464 \u003d *(undefined4 *)(param_2 + 0x24);\n  local_488[0] \u003d auStack_420;\n  local_47c \u003d *(ushort *)(param_2 + 0xc) \u0026 0xfffd;\n  local_480 \u003d 0x400;\n  local_474 \u003d 0x400;\n  local_470 \u003d 0;\n  local_478 \u003d local_488[0];\n  iVar1 \u003d _vfiprintf_r(param_1,local_488);\n  if ((-1 \u003c iVar1) \u0026\u0026 (iVar2 \u003d _fflush_r(param_1,local_488), iVar2 !\u003d 0)) {\n    iVar1 \u003d -1;\n  }\n  if ((int)((uint)local_47c \u003c\u003c 0x19) \u003c 0) {\n    *(ushort *)(param_2 + 0xc) \u003d *(ushort *)(param_2 + 0xc) | 0x40;\n  }\n  return iVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00082b38"
      ],
      "called": [
        "FUN_00083adc",
        "FUN_00082b38"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00083808": {
      "entrypoint": "0x00083808",
      "current_name": "FUN_00083808",
      "code": "\nundefined4 FUN_00083808(undefined4 *param_1,int *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  uint uVar3;\n  ushort uVar4;\n  \n  if ((Elf32_Rel_ARRAY_20070000[140].r_offset !\u003d 0) \u0026\u0026\n     (*(int *)(Elf32_Rel_ARRAY_20070000[140].r_offset + 0x38) \u003d\u003d 0)) {\n    __sinit();\n  }\n  uVar4 \u003d *(ushort *)(param_2 + 3);\n  uVar3 \u003d (uint)uVar4;\n  if ((int)(uVar3 \u003c\u003c 0x1c) \u003c 0) {\n    iVar2 \u003d param_2[4];\n  }\n  else {\n    if (-1 \u003c (int)(uVar3 \u003c\u003c 0x1b)) {\n      *param_1 \u003d 9;\n      *(ushort *)(param_2 + 3) \u003d uVar4 | 0x40;\n      return 0xffffffff;\n    }\n    if ((int)(uVar3 \u003c\u003c 0x1d) \u003c 0) {\n      if ((int *)param_2[0xc] !\u003d (int *)0x0) {\n        if ((int *)param_2[0xc] !\u003d param_2 + 0x10) {\n          _free_r(param_1);\n          uVar4 \u003d *(ushort *)(param_2 + 3);\n        }\n        param_2[0xc] \u003d 0;\n      }\n      iVar2 \u003d param_2[4];\n      uVar4 \u003d uVar4 \u0026 0xffdb;\n      *param_2 \u003d iVar2;\n      param_2[1] \u003d 0;\n    }\n    else {\n      iVar2 \u003d param_2[4];\n    }\n    *(ushort *)(param_2 + 3) \u003d uVar4 | 8;\n    uVar3 \u003d (uint)(uVar4 | 8);\n  }\n  if ((iVar2 \u003d\u003d 0) \u0026\u0026 ((uVar3 \u0026 0x280) !\u003d 0x200)) {\n    __smakebuf_r(param_1,param_2);\n    uVar3 \u003d (uint)*(ushort *)(param_2 + 3);\n    iVar2 \u003d param_2[4];\n  }\n  if ((uVar3 \u0026 1) \u003d\u003d 0) {\n    iVar1 \u003d 0;\n    if (-1 \u003c (int)(uVar3 \u003c\u003c 0x1e)) {\n      iVar1 \u003d param_2[5];\n    }\n    param_2[2] \u003d iVar1;\n  }\n  else {\n    param_2[6] \u003d -param_2[5];\n    param_2[2] \u003d 0;\n  }\n  if ((iVar2 \u003d\u003d 0) \u0026\u0026 ((int)((uint)*(ushort *)(param_2 + 3) \u003c\u003c 0x18) \u003c 0)) {\n    *(ushort *)(param_2 + 3) \u003d *(ushort *)(param_2 + 3) | 0x40;\n    return 0xffffffff;\n  }\n  return 0;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00083f34",
        "FUN_000844c4",
        "FUN_00082b38"
      ],
      "called": [
        "FUN_000842a4",
        "FUN_00083d9c",
        "FUN_00083b14"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00083974": {
      "entrypoint": "0x00083974",
      "current_name": "FUN_00083974",
      "code": "\n/* WARNING: Removing unreachable block (ram,0x00083934) */\n/* WARNING: Removing unreachable block (ram,0x000838cc) */\n/* WARNING: Removing unreachable block (ram,0x00083960) */\n/* WARNING: Removing unreachable block (ram,0x000838de) */\n/* WARNING: Removing unreachable block (ram,0x000838e4) */\n/* WARNING: Removing unreachable block (ram,0x000838f0) */\n/* WARNING: Removing unreachable block (ram,0x0008390a) */\n/* WARNING: Removing unreachable block (ram,0x000838e8) */\n/* WARNING: Removing unreachable block (ram,0x00083922) */\n/* WARNING: Removing unreachable block (ram,0x00083954) */\n/* WARNING: Removing unreachable block (ram,0x00083924) */\n\nundefined4 FUN_00083974(undefined4 param_1)\n\n{\n  return param_1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00081d7c"
      ],
      "called": [
        "FUN_00081df4"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00083adc": {
      "entrypoint": "0x00083adc",
      "current_name": "FUN_00083adc",
      "code": "\nundefined4 FUN_00083adc(int *param_1,int *param_2)\n\n{\n  int *piVar1;\n  int iVar2;\n  ushort uVar3;\n  uint uVar4;\n  int iVar5;\n  code *pcVar6;\n  undefined4 unaff_r4;\n  int iVar7;\n  \n  if ((param_1 !\u003d (int *)0x0) \u0026\u0026 (param_1[0xe] \u003d\u003d 0)) {\n    __sinit();\n  }\n  if (*(short *)(param_2 + 3) \u003d\u003d 0) {\n    return 0;\n  }\n  uVar3 \u003d *(ushort *)(param_2 + 3);\n  if ((int)((uint)uVar3 \u003c\u003c 0x1c) \u003c 0) {\n    iVar7 \u003d param_2[4];\n    if (iVar7 \u003d\u003d 0) {\n      return 0;\n    }\n    iVar2 \u003d *param_2;\n    if ((uVar3 \u0026 3) \u003d\u003d 0) {\n      iVar5 \u003d param_2[5];\n    }\n    else {\n      iVar5 \u003d 0;\n    }\n    *param_2 \u003d iVar7;\n    iVar2 \u003d iVar2 - iVar7;\n    param_2[2] \u003d iVar5;\n    do {\n      if (iVar2 \u003c 1) {\n        return 0;\n      }\n      iVar5 \u003d (*(code *)param_2[9])(param_1,param_2[7],iVar7,iVar2,unaff_r4);\n      iVar2 \u003d iVar2 - iVar5;\n      iVar7 \u003d iVar7 + iVar5;\n    } while (0 \u003c iVar5);\nLAB_00083a54:\n    *(ushort *)(param_2 + 3) \u003d *(ushort *)(param_2 + 3) | 0x40;\n    return 0xffffffff;\n  }\n  *(ushort *)(param_2 + 3) \u003d uVar3 | 0x800;\n  if ((param_2[1] \u003c 1) \u0026\u0026 (param_2[0xf] \u003c 1)) {\n    return 0;\n  }\n  pcVar6 \u003d (code *)param_2[10];\n  if (pcVar6 \u003d\u003d (code *)0x0) {\n    return 0;\n  }\n  uVar4 \u003d (uint)(uVar3 | 0x800);\n  iVar7 \u003d *param_1;\n  *param_1 \u003d 0;\n  if ((uVar3 \u0026 0x1000) \u003d\u003d 0) {\n    iVar2 \u003d (*pcVar6)(param_1,param_2[7],uVar4 \u0026 0x1000,1);\n    if ((iVar2 \u003d\u003d -1) \u0026\u0026 (iVar5 \u003d *param_1, iVar5 !\u003d 0)) {\n      if ((iVar5 \u003d\u003d 0x1d) || (iVar5 \u003d\u003d 0x16)) {\n        *param_1 \u003d iVar7;\n        return 0;\n      }\n      goto LAB_00083a54;\n    }\n    uVar4 \u003d (uint)*(ushort *)(param_2 + 3);\n    pcVar6 \u003d (code *)param_2[10];\n  }\n  else {\n    iVar2 \u003d param_2[0x14];\n  }\n  if (((int)(uVar4 \u003c\u003c 0x1d) \u003c 0) \u0026\u0026 (iVar2 \u003d iVar2 - param_2[1], param_2[0xc] !\u003d 0)) {\n    iVar2 \u003d iVar2 - param_2[0xf];\n  }\n  iVar2 \u003d (*pcVar6)(param_1,param_2[7],iVar2,0);\n  if (iVar2 \u003d\u003d -1) {\n    iVar5 \u003d *param_1;\n    if (iVar5 !\u003d 0) {\n      if ((iVar5 !\u003d 0x1d) \u0026\u0026 (iVar5 !\u003d 0x16)) {\n        *(ushort *)(param_2 + 3) \u003d *(ushort *)(param_2 + 3) | 0x40;\n        return 0xffffffff;\n      }\n      *(ushort *)(param_2 + 3) \u003d *(ushort *)(param_2 + 3) \u0026 0xf7ff;\n      *param_2 \u003d param_2[4];\n      param_2[1] \u003d 0;\n      goto LAB_00083a00;\n    }\n    uVar3 \u003d *(ushort *)(param_2 + 3) \u0026 0xf7ff;\n    param_2[1] \u003d 0;\n    *(ushort *)(param_2 + 3) \u003d uVar3;\n    *param_2 \u003d param_2[4];\n  }\n  else {\n    uVar3 \u003d *(ushort *)(param_2 + 3) \u0026 0xf7ff;\n    *param_2 \u003d param_2[4];\n    *(ushort *)(param_2 + 3) \u003d uVar3;\n    param_2[1] \u003d 0;\n  }\n  if ((int)((uint)uVar3 \u003c\u003c 0x13) \u003c 0) {\n    param_2[0x14] \u003d iVar2;\n  }\nLAB_00083a00:\n  piVar1 \u003d (int *)param_2[0xc];\n  *param_1 \u003d iVar7;\n  if (piVar1 \u003d\u003d (int *)0x0) {\n    return 0;\n  }\n  if (piVar1 !\u003d param_2 + 0x10) {\n    _free_r(param_1);\n  }\n  param_2[0xc] \u003d 0;\n  return 0;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00083f34",
        "FUN_0008378c",
        "FUN_000846a4",
        "FUN_000844c4"
      ],
      "called": [
        "FUN_00083d9c",
        "FUN_00083b14"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00083b14": {
      "entrypoint": "0x00083b14",
      "current_name": "FUN_00083b14",
      "code": "\nvoid FUN_00083b14(int param_1)\n\n{\n  undefined4 *puVar1;\n  undefined4 *puVar2;\n  \n  if (*(int *)(param_1 + 0x38) \u003d\u003d 0) {\n    puVar1 \u003d *(undefined4 **)(param_1 + 4);\n    *(undefined **)(param_1 + 0x3c) \u003d \u0026LAB_00083b08_1;\n    *(undefined4 *)(param_1 + 0x2e4) \u003d 3;\n    *(int *)(param_1 + 0x2e8) \u003d param_1 + 0x2ec;\n    *(undefined4 *)(param_1 + 0x2e0) \u003d 0;\n    *(undefined2 *)(puVar1 + 3) \u003d 4;\n    *puVar1 \u003d 0;\n    puVar1[1] \u003d 0;\n    puVar1[2] \u003d 0;\n    puVar1[0x19] \u003d 0;\n    *(undefined2 *)((int)puVar1 + 0xe) \u003d 0;\n    puVar1[4] \u003d 0;\n    puVar1[5] \u003d 0;\n    puVar1[6] \u003d 0;\n    memset(puVar1 + 0x17,0,8);\n    puVar2 \u003d *(undefined4 **)(param_1 + 8);\n    puVar1[7] \u003d puVar1;\n    puVar1[8] \u003d \u0026LAB_00084440_1;\n    puVar1[9] \u003d 0x84465;\n    puVar1[10] \u003d 0x8449d;\n    puVar1[0xb] \u003d \u0026LAB_000844bc_1;\n    *(undefined2 *)((int)puVar2 + 0xe) \u003d 1;\n    *(undefined2 *)(puVar2 + 3) \u003d 9;\n    *puVar2 \u003d 0;\n    puVar2[1] \u003d 0;\n    puVar2[2] \u003d 0;\n    puVar2[0x19] \u003d 0;\n    puVar2[4] \u003d 0;\n    puVar2[5] \u003d 0;\n    puVar2[6] \u003d 0;\n    memset(puVar2 + 0x17,0,8);\n    puVar1 \u003d *(undefined4 **)(param_1 + 0xc);\n    puVar2[7] \u003d puVar2;\n    puVar2[8] \u003d \u0026LAB_00084440_1;\n    puVar2[9] \u003d 0x84465;\n    puVar2[10] \u003d 0x8449d;\n    puVar2[0xb] \u003d \u0026LAB_000844bc_1;\n    *(undefined2 *)(puVar1 + 3) \u003d 0x12;\n    *(undefined2 *)((int)puVar1 + 0xe) \u003d 2;\n    *puVar1 \u003d 0;\n    puVar1[1] \u003d 0;\n    puVar1[2] \u003d 0;\n    puVar1[0x19] \u003d 0;\n    puVar1[4] \u003d 0;\n    puVar1[5] \u003d 0;\n    puVar1[6] \u003d 0;\n    memset(puVar1 + 0x17,0,8);\n    puVar1[7] \u003d puVar1;\n    puVar1[8] \u003d \u0026LAB_00084440_1;\n    puVar1[9] \u003d 0x84465;\n    puVar1[10] \u003d 0x8449d;\n    puVar1[0xb] \u003d \u0026LAB_000844bc_1;\n    *(undefined4 *)(param_1 + 0x38) \u003d 1;\n  }\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_000846a4",
        "FUN_00083adc",
        "FUN_000844c4",
        "FUN_00082b38",
        "FUN_00083808"
      ],
      "called": [
        "FUN_00082504"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00083c08": {
      "entrypoint": "0x00083c08",
      "current_name": "FUN_00083c08",
      "code": "\nvoid FUN_00083c08(void)\n\n{\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_000846a4"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00083c0c": {
      "entrypoint": "0x00083c0c",
      "current_name": "FUN_00083c0c",
      "code": "\nvoid FUN_00083c0c(void)\n\n{\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_000846a4"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00083c40": {
      "entrypoint": "0x00083c40",
      "current_name": "FUN_00083c40",
      "code": "\nuint FUN_00083c40(undefined4 param_1,uint param_2,byte **param_3)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  byte *pbVar4;\n  uint uVar5;\n  byte local_1c;\n  byte abStack_1b [3];\n  \n  if (-1 \u003c (int)((uint)*(ushort *)(param_3 + 3) \u003c\u003c 0x12)) {\n    *(ushort *)(param_3 + 3) \u003d *(ushort *)(param_3 + 3) | 0x2000;\n    param_3[0x19] \u003d (byte *)((uint)param_3[0x19] | 0x2000);\n  }\n  iVar1 \u003d __locale_mb_cur_max();\n  if ((iVar1 \u003d\u003d 1) \u0026\u0026 (param_2 - 1 \u003c 0xff)) {\n    uVar3 \u003d param_2 \u0026 0xff;\n    local_1c \u003d (byte)uVar3;\n    uVar2 \u003d 1;\n  }\n  else {\n    uVar2 \u003d _wcrtomb_r(param_1,\u0026local_1c,param_2,param_3 + 0x17);\n    if (uVar2 \u003d\u003d 0xffffffff) {\n      *(ushort *)(param_3 + 3) \u003d *(ushort *)(param_3 + 3) | 0x40;\n      return 0xffffffff;\n    }\n    if (uVar2 \u003d\u003d 0) {\n      return param_2;\n    }\n    uVar3 \u003d (uint)local_1c;\n  }\n  uVar5 \u003d 0;\n  do {\n    pbVar4 \u003d param_3[2] + -1;\n    param_3[2] \u003d pbVar4;\n    if ((int)pbVar4 \u003c 0) {\n      if ((int)param_3[6] \u003c\u003d (int)pbVar4) {\n        **param_3 \u003d (byte)uVar3;\n        pbVar4 \u003d *param_3;\n        uVar3 \u003d (uint)*pbVar4;\n        if (uVar3 !\u003d 10) goto LAB_00083c90;\n      }\n      iVar1 \u003d __swbuf_r(param_1,uVar3,param_3);\n      if (iVar1 \u003d\u003d -1) {\n        return 0xffffffff;\n      }\n    }\n    else {\n      **param_3 \u003d (byte)uVar3;\n      pbVar4 \u003d *param_3;\nLAB_00083c90:\n      *param_3 \u003d pbVar4 + 1;\n    }\n    if (uVar2 \u003c\u003d uVar5 + 1) {\n      return param_2;\n    }\n    uVar3 \u003d (uint)abStack_1b[uVar5];\n    uVar5 \u003d uVar5 + 1;\n  } while( true );\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00082ac0"
      ],
      "called": [
        "FUN_0008456c",
        "FUN_000844c4",
        "FUN_00084298"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00083d00": {
      "entrypoint": "0x00083d00",
      "current_name": "FUN_00083d00",
      "code": "\nundefined4 FUN_00083d00(undefined4 param_1,int param_2)\n\n{\n  int iVar1;\n  uint uVar2;\n  int iVar3;\n  \n  __malloc_lock();\n  uVar2 \u003d *(uint *)(Elf32_Rel_ARRAY_20070000[141].r_info + 4) \u0026 0xfffffffc;\n  iVar3 \u003d ((uVar2 - param_2) + 0xfef \u0026 0xfffff000) - 0x1000;\n  if (0xfff \u003c iVar3) {\n    iVar1 \u003d _sbrk_r(param_1,0);\n    if (iVar1 \u003d\u003d Elf32_Rel_ARRAY_20070000[141].r_info + uVar2) {\n      iVar1 \u003d _sbrk_r(param_1,-iVar3);\n      if (iVar1 !\u003d -1) {\n        DAT_20071194 \u003d DAT_20071194 - iVar3;\n        *(uint *)(Elf32_Rel_ARRAY_20070000[141].r_info + 4) \u003d uVar2 - iVar3 | 1;\n        __malloc_unlock(param_1);\n        return 1;\n      }\n      iVar3 \u003d _sbrk_r(param_1,0);\n      if (0xf \u003c (int)(iVar3 - Elf32_Rel_ARRAY_20070000[141].r_info)) {\n        DAT_20071194 \u003d iVar3 - Elf32_Rel_ARRAY_20070000[270].r_offset;\n        *(dword *)(Elf32_Rel_ARRAY_20070000[141].r_info + 4) \u003d\n             iVar3 - Elf32_Rel_ARRAY_20070000[141].r_info | 1;\n      }\n    }\n  }\n  __malloc_unlock(param_1);\n  return 0;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00083d9c"
      ],
      "called": [
        "FUN_00082970",
        "FUN_00082598",
        "FUN_0008259c"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00083d9c": {
      "entrypoint": "0x00083d9c",
      "current_name": "FUN_00083d9c",
      "code": "\nvoid FUN_00083d9c(undefined4 param_1,int param_2)\n\n{\n  int iVar1;\n  bool bVar2;\n  uint uVar3;\n  dword dVar4;\n  int iVar5;\n  uint uVar6;\n  dword dVar7;\n  uint uVar8;\n  dword dVar9;\n  \n  if (param_2 \u003d\u003d 0) {\n    return;\n  }\n  __malloc_lock();\n  uVar3 \u003d *(uint *)(param_2 + -4);\n  dVar7 \u003d param_2 - 8;\n  uVar6 \u003d uVar3 \u0026 0xfffffffe;\n  dVar4 \u003d dVar7 + uVar6;\n  uVar8 \u003d *(uint *)(dVar4 + 4) \u0026 0xfffffffc;\n  if (Elf32_Rel_ARRAY_20070000[141].r_info \u003d\u003d dVar4) {\n    uVar8 \u003d uVar8 + uVar6;\n    if (-1 \u003c (int)(uVar3 \u003c\u003c 0x1f)) {\n      dVar7 \u003d dVar7 - *(int *)(param_2 + -8);\n      iVar5 \u003d *(int *)(dVar7 + 0xc);\n      iVar1 \u003d *(int *)(dVar7 + 8);\n      uVar8 \u003d uVar8 + *(int *)(param_2 + -8);\n      *(int *)(iVar1 + 0xc) \u003d iVar5;\n      *(int *)(iVar5 + 8) \u003d iVar1;\n    }\n    dVar4 \u003d Elf32_Rel_ARRAY_20070000[269].r_info;\n    *(uint *)(dVar7 + 4) \u003d uVar8 | 1;\n    Elf32_Rel_ARRAY_20070000[141].r_info \u003d dVar7;\n    if (dVar4 \u003c\u003d uVar8) {\n      _malloc_trim_r(param_1,DAT_20071190);\n    }\n  }\n  else {\n    *(uint *)(dVar4 + 4) \u003d uVar8;\n    if ((uVar3 \u0026 1) \u003d\u003d 0) {\n      dVar7 \u003d dVar7 - *(int *)(param_2 + -8);\n      iVar1 \u003d *(int *)(dVar7 + 8);\n      uVar6 \u003d uVar6 + *(int *)(param_2 + -8);\n      if (iVar1 \u003d\u003d 0x2007046c) {\n        bVar2 \u003d true;\n      }\n      else {\n        iVar5 \u003d *(int *)(dVar7 + 0xc);\n        *(int *)(iVar1 + 0xc) \u003d iVar5;\n        *(int *)(iVar5 + 8) \u003d iVar1;\n        bVar2 \u003d false;\n      }\n    }\n    else {\n      bVar2 \u003d false;\n    }\n    if (-1 \u003c *(int *)(dVar4 + uVar8 + 4) \u003c\u003c 0x1f) {\n      uVar6 \u003d uVar6 + uVar8;\n      iVar1 \u003d *(int *)(dVar4 + 8);\n      if ((!bVar2) \u0026\u0026 (iVar1 \u003d\u003d 0x2007046c)) {\n        Elf32_Rel_ARRAY_20070000[142].r_info \u003d dVar7;\n        Elf32_Rel_ARRAY_20070000[143].r_offset \u003d dVar7;\n        *(undefined4 *)(dVar7 + 0xc) \u003d 0x2007046c;\n        *(undefined4 *)(dVar7 + 8) \u003d 0x2007046c;\n        *(uint *)(dVar7 + 4) \u003d uVar6 | 1;\n        *(uint *)(dVar7 + uVar6) \u003d uVar6;\n        goto LAB_00083e30;\n      }\n      iVar5 \u003d *(int *)(dVar4 + 0xc);\n      *(int *)(iVar1 + 0xc) \u003d iVar5;\n      *(int *)(iVar5 + 8) \u003d iVar1;\n    }\n    *(uint *)(dVar7 + 4) \u003d uVar6 | 1;\n    *(uint *)(dVar7 + uVar6) \u003d uVar6;\n    if (!bVar2) {\n      if (uVar6 \u003c 0x200) {\n        uVar3 \u003d uVar6 \u0026 0xfffffff8;\n        iVar1 \u003d *(int *)((int)\u0026Elf32_Rel_ARRAY_20070000[0x8d].r_info + uVar3);\n        Elf32_Rel_ARRAY_20070000[141].r_offset \u003d\n             Elf32_Rel_ARRAY_20070000[141].r_offset | 1 \u003c\u003c ((int)(uVar6 \u003e\u003e 3) \u003e\u003e 2 \u0026 0xffU);\n        *(int *)(dVar7 + 8) \u003d iVar1;\n        *(uint *)(dVar7 + 0xc) \u003d uVar3 + 0x20070464;\n        *(dword *)((int)\u0026Elf32_Rel_ARRAY_20070000[0x8d].r_info + uVar3) \u003d dVar7;\n        *(dword *)(iVar1 + 0xc) \u003d dVar7;\n        __malloc_unlock(param_1);\n        return;\n      }\n      uVar3 \u003d uVar6 \u003e\u003e 9;\n      if (uVar3 \u003c 5) {\n        iVar1 \u003d (uVar6 \u003e\u003e 6) + 0x38;\n        iVar5 \u003d iVar1 * 2;\n      }\n      else if (uVar3 \u003c 0x15) {\n        iVar1 \u003d uVar3 + 0x5b;\n        iVar5 \u003d iVar1 * 2;\n      }\n      else if (uVar3 \u003c 0x55) {\n        iVar1 \u003d (uVar6 \u003e\u003e 0xc) + 0x6e;\n        iVar5 \u003d iVar1 * 2;\n      }\n      else if (uVar3 \u003c 0x155) {\n        iVar1 \u003d (uVar6 \u003e\u003e 0xf) + 0x77;\n        iVar5 \u003d iVar1 * 2;\n      }\n      else if (uVar3 \u003c 0x555) {\n        iVar1 \u003d (uVar6 \u003e\u003e 0x12) + 0x7c;\n        iVar5 \u003d iVar1 * 2;\n      }\n      else {\n        iVar5 \u003d 0xfc;\n        iVar1 \u003d 0x7e;\n      }\n      dVar9 \u003d iVar5 * 4 + 0x20070464;\n      dVar4 \u003d (\u0026Elf32_Rel_ARRAY_20070000[0x8d].r_info)[iVar5];\n      if (dVar4 \u003d\u003d dVar9) {\n        Elf32_Rel_ARRAY_20070000[141].r_offset \u003d\n             Elf32_Rel_ARRAY_20070000[141].r_offset | 1 \u003c\u003c (iVar1 \u003e\u003e 2 \u0026 0xffU);\n        dVar9 \u003d dVar4;\n      }\n      else {\n        do {\n          if ((*(uint *)(dVar4 + 4) \u0026 0xfffffffc) \u003c\u003d uVar6) break;\n          dVar4 \u003d *(dword *)(dVar4 + 8);\n        } while (dVar9 !\u003d dVar4);\n        dVar9 \u003d *(dword *)(dVar4 + 0xc);\n      }\n      *(dword *)(dVar7 + 0xc) \u003d dVar9;\n      *(dword *)(dVar7 + 8) \u003d dVar4;\n      *(dword *)(dVar9 + 8) \u003d dVar7;\n      *(dword *)(dVar4 + 0xc) \u003d dVar7;\n    }\n  }\nLAB_00083e30:\n  __malloc_unlock(param_1);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00081e04",
        "FUN_00083f34",
        "FUN_000825b0",
        "FUN_000846a4",
        "FUN_00083adc",
        "FUN_00083808",
        "FUN_00081e14"
      ],
      "called": [
        "FUN_00082598",
        "FUN_0008259c",
        "FUN_00083d00"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00083f34": {
      "entrypoint": "0x00083f34",
      "current_name": "FUN_00083f34",
      "code": "\nundefined4 FUN_00083f34(undefined4 *param_1,uint *param_2,uint **param_3)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  ushort uVar4;\n  uint uVar5;\n  uint *puVar6;\n  uint *puVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint local_2c;\n  \n  if (param_3[2] !\u003d (uint *)0x0) {\n    uVar4 \u003d *(ushort *)(param_2 + 3);\n    uVar5 \u003d (uint)uVar4;\n    if (((int)(uVar5 \u003c\u003c 0x1c) \u003c 0) \u0026\u0026 (param_2[4] !\u003d 0)) {\n      puVar7 \u003d *param_3;\n    }\n    else {\n      iVar1 \u003d __swsetup_r(param_1,param_2);\n      if (iVar1 !\u003d 0) {\n        return 0xffffffff;\n      }\n      uVar4 \u003d *(ushort *)(param_2 + 3);\n      uVar5 \u003d (uint)uVar4;\n      puVar7 \u003d *param_3;\n    }\n    if ((uVar4 \u0026 2) \u003d\u003d 0) {\n      uVar2 \u003d uVar5 \u0026 2;\n      uVar10 \u003d uVar2;\n      uVar8 \u003d uVar2;\n      local_2c \u003d uVar2;\n      if ((uVar5 \u0026 1) \u003d\u003d 0) {\n        uVar2 \u003d 0;\n        uVar10 \u003d 0;\n        while( true ) {\n          while (uVar2 \u003d\u003d 0) {\n            uVar10 \u003d *puVar7;\n            puVar6 \u003d puVar7 + 1;\n            puVar7 \u003d puVar7 + 2;\n            uVar2 \u003d *puVar6;\n          }\n          uVar8 \u003d param_2[2];\n          if ((int)(uVar5 \u003c\u003c 0x16) \u003c 0) {\n            if (uVar2 \u003c uVar8) {\n              uVar5 \u003d *param_2;\n              uVar8 \u003d uVar2;\n            }\n            else if ((uVar5 \u0026 0x480) \u003d\u003d 0) {\n              uVar5 \u003d *param_2;\n            }\n            else {\n              iVar1 \u003d *param_2 - param_2[4];\n              uVar8 \u003d iVar1 + 1 + uVar2;\n              uVar9 \u003d (int)(param_2[5] * 3) / 2;\n              if (uVar8 \u003c\u003d uVar9) {\n                uVar8 \u003d uVar9;\n              }\n              if ((int)(uVar5 \u003c\u003c 0x15) \u003c 0) {\n                uVar9 \u003d _malloc_r(param_1,uVar8);\n                if (uVar9 \u003d\u003d 0) {\n                  *param_1 \u003d 0xc;\n                  uVar4 \u003d *(ushort *)(param_2 + 3);\n                  goto LAB_00084030;\n                }\n                memcpy(uVar9,param_2[4],iVar1);\n                *(ushort *)(param_2 + 3) \u003d *(ushort *)(param_2 + 3) \u0026 0xfb7f | 0x80;\n              }\n              else {\n                uVar9 \u003d _realloc_r(param_1);\n                if (uVar9 \u003d\u003d 0) {\n                  _free_r(param_1,param_2[4]);\n                  uVar4 \u003d *(ushort *)(param_2 + 3) \u0026 0xff7f;\n                  *param_1 \u003d 0xc;\n                  goto LAB_00084030;\n                }\n              }\n              uVar5 \u003d uVar9 + iVar1;\n              param_2[4] \u003d uVar9;\n              param_2[5] \u003d uVar8;\n              *param_2 \u003d uVar5;\n              param_2[2] \u003d uVar8 - iVar1;\n              uVar8 \u003d uVar2;\n            }\n            memmove(uVar5,uVar10,uVar8);\n            param_2[2] \u003d param_2[2] - uVar8;\n            *param_2 \u003d *param_2 + uVar8;\n            uVar8 \u003d uVar2;\n          }\n          else if ((param_2[4] \u003c *param_2) || (uVar5 \u003d param_2[5], uVar2 \u003c uVar5)) {\n            if (uVar2 \u003c uVar8) {\n              uVar8 \u003d uVar2;\n            }\n            memmove(*param_2,uVar10,uVar8);\n            uVar5 \u003d param_2[2];\n            param_2[2] \u003d uVar5 - uVar8;\n            *param_2 \u003d *param_2 + uVar8;\n            if ((uVar5 - uVar8 \u003d\u003d 0) \u0026\u0026 (iVar1 \u003d _fflush_r(param_1,param_2), iVar1 !\u003d 0))\n            goto LAB_0008402e;\n          }\n          else {\n            uVar8 \u003d 0x7fffffff;\n            if (uVar2 \u003c 0x7fffffff) {\n              uVar8 \u003d uVar2;\n            }\n            uVar8 \u003d (*(code *)param_2[9])(param_1,param_2[7],uVar10,(uVar8 / uVar5) * uVar5);\n            if ((int)uVar8 \u003c 1) goto LAB_0008402e;\n          }\n          puVar6 \u003d param_3[2];\n          uVar10 \u003d uVar10 + uVar8;\n          uVar2 \u003d uVar2 - uVar8;\n          param_3[2] \u003d (uint *)((int)puVar6 - uVar8);\n          if ((uint *)((int)puVar6 - uVar8) \u003d\u003d (uint *)0x0) break;\n          uVar5 \u003d (uint)*(ushort *)(param_2 + 3);\n        }\n      }\n      else {\n        do {\n          while (uVar2 \u003d\u003d 0) {\n            uVar8 \u003d *puVar7;\n            uVar2 \u003d puVar7[1];\n            local_2c \u003d 0;\n            puVar7 \u003d puVar7 + 2;\n          }\n          if (local_2c \u003d\u003d 0) {\n            iVar1 \u003d memchr(uVar8,10,uVar2);\n            if (iVar1 \u003d\u003d 0) {\n              uVar10 \u003d uVar2 + 1;\n              local_2c \u003d 1;\n            }\n            else {\n              uVar10 \u003d (iVar1 + 1) - uVar8;\n              local_2c \u003d 1;\n            }\n          }\n          uVar9 \u003d *param_2;\n          uVar5 \u003d uVar10;\n          if (uVar2 \u003c\u003d uVar10) {\n            uVar5 \u003d uVar2;\n          }\n          uVar3 \u003d param_2[5];\n          if ((param_2[4] \u003c uVar9) \u0026\u0026 (uVar11 \u003d param_2[2] + uVar3, (int)uVar11 \u003c (int)uVar5)) {\n            memmove(uVar9,uVar8,uVar11);\n            *param_2 \u003d *param_2 + uVar11;\n            iVar1 \u003d _fflush_r(param_1,param_2);\n            if (iVar1 !\u003d 0) goto LAB_0008402e;\n          }\n          else if ((int)uVar5 \u003c (int)uVar3) {\n            memmove(uVar9,uVar8,uVar5);\n            param_2[2] \u003d param_2[2] - uVar5;\n            *param_2 \u003d uVar5 + *param_2;\n            uVar11 \u003d uVar5;\n          }\n          else {\n            uVar11 \u003d (*(code *)param_2[9])(param_1,param_2[7],uVar8,uVar3);\n            if ((int)uVar11 \u003c 1) goto LAB_0008402e;\n          }\n          uVar10 \u003d uVar10 - uVar11;\n          if (uVar10 \u003d\u003d 0) {\n            iVar1 \u003d _fflush_r(param_1,param_2);\n            if (iVar1 !\u003d 0) goto LAB_0008402e;\n            local_2c \u003d 0;\n          }\n          puVar6 \u003d param_3[2];\n          uVar8 \u003d uVar8 + uVar11;\n          uVar2 \u003d uVar2 - uVar11;\n          param_3[2] \u003d (uint *)((int)puVar6 - uVar11);\n        } while ((uint *)((int)puVar6 - uVar11) !\u003d (uint *)0x0);\n      }\n    }\n    else {\n      uVar2 \u003d 0;\n      uVar5 \u003d 0;\n      do {\n        while( true ) {\n          uVar10 \u003d uVar5;\n          if (0x7ffffbff \u003c uVar5) {\n            uVar10 \u003d 0x7ffffc00;\n          }\n          if (uVar5 !\u003d 0) break;\n          uVar2 \u003d *puVar7;\n          uVar5 \u003d puVar7[1];\n          puVar7 \u003d puVar7 + 2;\n        }\n        iVar1 \u003d (*(code *)param_2[9])(param_1,param_2[7],uVar2,uVar10);\n        if (iVar1 \u003c 1) {\nLAB_0008402e:\n          uVar4 \u003d *(ushort *)(param_2 + 3);\nLAB_00084030:\n          *(ushort *)(param_2 + 3) \u003d uVar4 | 0x40;\n          return 0xffffffff;\n        }\n        puVar6 \u003d param_3[2];\n        uVar2 \u003d uVar2 + iVar1;\n        uVar5 \u003d uVar5 - iVar1;\n        param_3[2] \u003d (uint *)((int)puVar6 - iVar1);\n      } while ((uint *)((int)puVar6 - iVar1) !\u003d (uint *)0x0);\n    }\n  }\n  return 0;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00082ac0"
      ],
      "called": [
        "FUN_00082438",
        "FUN_000825b0",
        "FUN_00084384",
        "FUN_00083d9c",
        "FUN_0008234c",
        "FUN_00083adc",
        "FUN_00083808",
        "FUN_00081e14"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00084290": {
      "entrypoint": "0x00084290",
      "current_name": "FUN_00084290",
      "code": "\nundefined4 FUN_00084290(void)\n\n{\n  return 0x20070874;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_0008456c"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00084298": {
      "entrypoint": "0x00084298",
      "current_name": "FUN_00084298",
      "code": "\ndword FUN_00084298(void)\n\n{\n  return Elf32_Rel_ARRAY_20070000[274].r_info;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00083c40"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_000842a4": {
      "entrypoint": "0x000842a4",
      "current_name": "FUN_000842a4",
      "code": "\nvoid FUN_000842a4(int param_1,int *param_2)\n\n{\n  ushort uVar1;\n  int iVar2;\n  int iVar3;\n  uint uVar4;\n  bool bVar5;\n  undefined auStack_54 [4];\n  uint local_50;\n  \n  uVar1 \u003d *(ushort *)(param_2 + 3);\n  uVar4 \u003d (uint)uVar1;\n  if ((int)(uVar4 \u003c\u003c 0x1e) \u003c 0) {\n    *param_2 \u003d (int)param_2 + 0x43;\n    param_2[4] \u003d (int)param_2 + 0x43;\n    param_2[5] \u003d 1;\n    return;\n  }\n  if (-1 \u003c *(short *)((int)param_2 + 0xe)) {\n    iVar2 \u003d _fstat_r(param_1,(int)*(short *)((int)param_2 + 0xe),auStack_54);\n    if (-1 \u003c iVar2) {\n      bVar5 \u003d (local_50 \u0026 0xf000) \u003d\u003d 0x2000;\n      if (((local_50 \u0026 0xf000) \u003d\u003d 0x8000) \u0026\u0026 (param_2[10] \u003d\u003d 0x8449d)) {\n        iVar2 \u003d 0x400;\n        *(ushort *)(param_2 + 3) \u003d *(ushort *)(param_2 + 3) | 0x400;\n        param_2[0x13] \u003d 0x400;\n      }\n      else {\n        iVar2 \u003d 0x400;\n        *(ushort *)(param_2 + 3) \u003d *(ushort *)(param_2 + 3) | 0x800;\n      }\n      goto LAB_00084300;\n    }\n    uVar1 \u003d *(ushort *)(param_2 + 3);\n    uVar4 \u003d (uint)uVar1;\n  }\n  *(ushort *)(param_2 + 3) \u003d uVar1 | 0x800;\n  if ((uVar4 \u0026 0x80) \u003d\u003d 0) {\n    iVar2 \u003d 0x400;\n  }\n  else {\n    iVar2 \u003d 0x40;\n  }\n  bVar5 \u003d false;\nLAB_00084300:\n  iVar3 \u003d _malloc_r(param_1,iVar2);\n  uVar1 \u003d *(ushort *)(param_2 + 3);\n  if (iVar3 \u003d\u003d 0) {\n    if (-1 \u003c (int)((uint)uVar1 \u003c\u003c 0x16)) {\n      *(ushort *)(param_2 + 3) \u003d uVar1 | 2;\n      *param_2 \u003d (int)param_2 + 0x43;\n      param_2[4] \u003d (int)param_2 + 0x43;\n      param_2[5] \u003d 1;\n    }\n  }\n  else {\n    *(undefined **)(param_1 + 0x3c) \u003d \u0026LAB_00083b08_1;\n    *(ushort *)(param_2 + 3) \u003d uVar1 | 0x80;\n    *param_2 \u003d iVar3;\n    param_2[4] \u003d iVar3;\n    param_2[5] \u003d iVar2;\n    if ((bVar5) \u0026\u0026 (iVar2 \u003d _isatty_r(param_1,(int)*(short *)((int)param_2 + 0xe)), iVar2 !\u003d 0)) {\n      *(ushort *)(param_2 + 3) \u003d *(ushort *)(param_2 + 3) | 1;\n    }\n  }\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00083808"
      ],
      "called": [
        "FUN_000846dc",
        "FUN_000846b4",
        "FUN_00081e14"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00084384": {
      "entrypoint": "0x00084384",
      "current_name": "FUN_00084384",
      "code": "\nuint * FUN_00084384(uint *param_1,char param_2,uint param_3)\n\n{\n  uint uVar1;\n  int iVar2;\n  uint *puVar3;\n  bool bVar4;\n  \n  if (((uint)param_1 \u0026 3) \u003d\u003d 0) {\nLAB_000843b4:\n    if (3 \u003c param_3) {\n      puVar3 \u003d param_1;\n      do {\n        uVar1 \u003d *puVar3 ^ CONCAT22(CONCAT11(param_2,param_2),CONCAT11(param_2,param_2));\n        param_1 \u003d puVar3;\n        if ((uVar1 + 0xfefefeff \u0026 ~uVar1 \u0026 0x80808080) !\u003d 0) break;\n        param_3 \u003d param_3 - 4;\n        param_1 \u003d puVar3 + 1;\n        puVar3 \u003d puVar3 + 1;\n      } while (3 \u003c param_3);\n    }\n    if (param_3 \u003d\u003d 0) {\n      param_1 \u003d (uint *)0x0;\n    }\n    else if (*(char *)param_1 !\u003d param_2) {\n      iVar2 \u003d 0;\n      do {\n        param_1 \u003d (uint *)((int)param_1 + 1);\n        bVar4 \u003d iVar2 \u003d\u003d param_3 - 1;\n        iVar2 \u003d iVar2 + 1;\n        if (bVar4) goto LAB_000843dc;\n      } while (*(char *)param_1 !\u003d param_2);\n    }\n  }\n  else if (param_3 \u003d\u003d 0) {\nLAB_000843dc:\n    param_1 \u003d (uint *)0x0;\n  }\n  else if (*(char *)param_1 !\u003d param_2) {\n    puVar3 \u003d (uint *)((int)param_1 + 1);\n    param_3 \u003d param_3 - 1;\n    do {\n      param_1 \u003d puVar3;\n      if (((uint)param_1 \u0026 3) \u003d\u003d 0) goto LAB_000843b4;\n      if (param_3 \u003d\u003d 0) goto LAB_000843dc;\n      puVar3 \u003d (uint *)((int)param_1 + 1);\n      param_3 \u003d param_3 - 1;\n    } while (*(char *)param_1 !\u003d param_2);\n  }\n  return param_1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00083f34",
        "FUN_00082b38"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00084464": {
      "entrypoint": "0x00084464",
      "current_name": "FUN_00084464",
      "code": "\nvoid FUN_00084464(int *param_1,int param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  ushort uVar2;\n  undefined4 unaff_r4;\n  undefined4 unaff_r5;\n  undefined4 unaff_r6;\n  undefined4 in_lr;\n  \n  uVar2 \u003d *(ushort *)(param_2 + 0xc);\n  if ((int)((uint)uVar2 \u003c\u003c 0x17) \u003c 0) {\n    _lseek_r(param_1,(int)*(short *)(param_2 + 0xe),0,2);\n    uVar2 \u003d *(ushort *)(param_2 + 0xc);\n  }\n  *(ushort *)(param_2 + 0xc) \u003d uVar2 \u0026 0xefff;\n  DAT_200711bc \u003d 0;\n  iVar1 \u003d _write((int)*(short *)(param_2 + 0xe),param_3,param_4,param_4,unaff_r4,unaff_r5,unaff_r6,\n                 in_lr);\n  if ((iVar1 \u003d\u003d -1) \u0026\u0026 (DAT_200711bc !\u003d 0)) {\n    *param_1 \u003d DAT_200711bc;\n    return;\n  }\n  return;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [
        "FUN_00084700",
        "FUN_000811cc"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0008449c": {
      "entrypoint": "0x0008449c",
      "current_name": "FUN_0008449c",
      "code": "\nvoid FUN_0008449c(undefined4 param_1,int param_2)\n\n{\n  int iVar1;\n  ushort uVar2;\n  \n  iVar1 \u003d _lseek_r(param_1,(int)*(short *)(param_2 + 0xe));\n  if (iVar1 \u003d\u003d -1) {\n    uVar2 \u003d *(ushort *)(param_2 + 0xc) \u0026 0xefff;\n  }\n  else {\n    uVar2 \u003d *(ushort *)(param_2 + 0xc) | 0x1000;\n  }\n  if (iVar1 !\u003d -1) {\n    *(int *)(param_2 + 0x50) \u003d iVar1;\n  }\n  *(ushort *)(param_2 + 0xc) \u003d uVar2;\n  return;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [
        "FUN_00084700"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_000844c4": {
      "entrypoint": "0x000844c4",
      "current_name": "FUN_000844c4",
      "code": "\nuint FUN_000844c4(int param_1,uint param_2,undefined4 *param_3,undefined4 param_4)\n\n{\n  ushort uVar1;\n  uint uVar2;\n  undefined *puVar3;\n  int iVar4;\n  \n  if ((param_1 !\u003d 0) \u0026\u0026 (*(int *)(param_1 + 0x38) \u003d\u003d 0)) {\n    __sinit();\n  }\n  uVar1 \u003d *(ushort *)(param_3 + 3);\n  uVar2 \u003d (uint)uVar1;\n  param_3[2] \u003d param_3[6];\n  if ((-1 \u003c (int)(uVar2 \u003c\u003c 0x1c)) || (iVar4 \u003d param_3[4], iVar4 \u003d\u003d 0)) {\n    iVar4 \u003d __swsetup_r(param_1,param_3,uVar1,uVar2,param_4);\n    if (iVar4 !\u003d 0) {\n      return 0xffffffff;\n    }\n    uVar1 \u003d *(ushort *)(param_3 + 3);\n    iVar4 \u003d param_3[4];\n    uVar2 \u003d (uint)uVar1;\n  }\n  param_2 \u003d param_2 \u0026 0xff;\n  if ((int)(uVar2 \u003c\u003c 0x12) \u003c 0) {\n    puVar3 \u003d (undefined *)*param_3;\n    iVar4 \u003d (int)puVar3 - iVar4;\n    if (iVar4 \u003c (int)param_3[5]) {\nLAB_000844f6:\n      iVar4 \u003d iVar4 + 1;\n      goto LAB_000844f8;\n    }\n  }\n  else {\n    param_3[0x19] \u003d param_3[0x19] \u0026 0xffffdfff;\n    puVar3 \u003d (undefined *)*param_3;\n    *(ushort *)(param_3 + 3) \u003d uVar1 | 0x2000;\n    iVar4 \u003d (int)puVar3 - iVar4;\n    if (iVar4 \u003c (int)param_3[5]) goto LAB_000844f6;\n  }\n  iVar4 \u003d _fflush_r(param_1,param_3);\n  if (iVar4 !\u003d 0) {\n    return 0xffffffff;\n  }\n  puVar3 \u003d (undefined *)*param_3;\n  iVar4 \u003d 1;\nLAB_000844f8:\n  param_3[2] \u003d param_3[2] + -1;\n  *param_3 \u003d puVar3 + 1;\n  *puVar3 \u003d (char)param_2;\n  if (((param_3[5] \u003d\u003d iVar4) ||\n      (((int)((uint)*(ushort *)(param_3 + 3) \u003c\u003c 0x1f) \u003c 0 \u0026\u0026 (param_2 \u003d\u003d 10)))) \u0026\u0026\n     (iVar4 \u003d _fflush_r(param_1,param_3), iVar4 !\u003d 0)) {\n    return 0xffffffff;\n  }\n  return param_2;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00083c40"
      ],
      "called": [
        "FUN_00083adc",
        "FUN_00083b14",
        "FUN_00083808"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0008456c": {
      "entrypoint": "0x0008456c",
      "current_name": "FUN_0008456c",
      "code": "\nvoid FUN_0008456c(undefined4 *param_1,int param_2,undefined4 param_3,undefined4 *param_4)\n\n{\n  code *pcVar1;\n  undefined4 uVar2;\n  int iVar3;\n  undefined auStack_24 [12];\n  \n  pcVar1 \u003d DAT_20070898;\n  if (param_2 \u003d\u003d 0) {\n    uVar2 \u003d __locale_charset();\n    iVar3 \u003d (*pcVar1)(param_1,auStack_24,0,uVar2,param_4);\n  }\n  else {\n    uVar2 \u003d __locale_charset();\n    iVar3 \u003d (*pcVar1)(param_1,param_2,param_3,uVar2,param_4);\n  }\n  if (iVar3 \u003d\u003d -1) {\n    *param_4 \u003d 0;\n    *param_1 \u003d 0x8a;\n  }\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00083c40"
      ],
      "called": [
        "FUN_000845bc",
        "FUN_00084290"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_000845bc": {
      "entrypoint": "0x000845bc",
      "current_name": "FUN_000845bc",
      "code": "\nundefined4 FUN_000845bc(undefined4 *param_1,undefined *param_2,uint param_3)\n\n{\n  if (param_2 \u003d\u003d (undefined *)0x0) {\n    return 0;\n  }\n  if (param_3 \u003c 0x100) {\n    *param_2 \u003d (char)param_3;\n    return 1;\n  }\n  *param_1 \u003d 0x8a;\n  return 0xffffffff;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_0008456c"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_000846a4": {
      "entrypoint": "0x000846a4",
      "current_name": "FUN_000846a4",
      "code": "\nundefined4 FUN_000846a4(int param_1)\n\n{\n  dword dVar1;\n  undefined4 uVar2;\n  int iVar3;\n  \n  dVar1 \u003d Elf32_Rel_ARRAY_20070000[140].r_offset;\n  if (param_1 !\u003d 0) {\n    if ((Elf32_Rel_ARRAY_20070000[140].r_offset !\u003d 0) \u0026\u0026\n       (*(int *)(Elf32_Rel_ARRAY_20070000[140].r_offset + 0x38) \u003d\u003d 0)) {\n      __sinit();\n    }\n    if (*(short *)(param_1 + 0xc) !\u003d 0) {\n      uVar2 \u003d _fflush_r(dVar1,param_1);\n      if ((*(code **)(param_1 + 0x2c) !\u003d (code *)0x0) \u0026\u0026\n         (iVar3 \u003d (**(code **)(param_1 + 0x2c))(dVar1,*(undefined4 *)(param_1 + 0x1c)), iVar3 \u003c 0))\n      {\n        uVar2 \u003d 0xffffffff;\n      }\n      if ((int)((uint)*(ushort *)(param_1 + 0xc) \u003c\u003c 0x18) \u003c 0) {\n        _free_r(dVar1,*(undefined4 *)(param_1 + 0x10));\n      }\n      if (*(int *)(param_1 + 0x30) !\u003d 0) {\n        if (*(int *)(param_1 + 0x30) !\u003d param_1 + 0x40) {\n          _free_r(dVar1);\n        }\n        *(undefined4 *)(param_1 + 0x30) \u003d 0;\n      }\n      if (*(int *)(param_1 + 0x44) !\u003d 0) {\n        _free_r(dVar1);\n        *(undefined4 *)(param_1 + 0x44) \u003d 0;\n      }\n      __sfp_lock_acquire();\n      *(undefined2 *)(param_1 + 0xc) \u003d 0;\n      __sfp_lock_release();\n      return uVar2;\n    }\n  }\n  return 0;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [
        "FUN_00083c08",
        "FUN_00083c0c",
        "FUN_00083d9c",
        "FUN_00083adc",
        "FUN_00083b14"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_000846b4": {
      "entrypoint": "0x000846b4",
      "current_name": "FUN_000846b4",
      "code": "\nvoid FUN_000846b4(int *param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  \n  DAT_200711bc \u003d 0;\n  iVar1 \u003d _fstat(param_2,param_3,param_3,0,param_4);\n  if ((iVar1 \u003d\u003d -1) \u0026\u0026 (DAT_200711bc !\u003d 0)) {\n    *param_1 \u003d DAT_200711bc;\n    return;\n  }\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_000842a4"
      ],
      "called": [
        "FUN_000811b4"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_000846dc": {
      "entrypoint": "0x000846dc",
      "current_name": "FUN_000846dc",
      "code": "\nvoid FUN_000846dc(int *param_1,undefined4 param_2)\n\n{\n  int iVar1;\n  \n  DAT_200711bc \u003d 0;\n  iVar1 \u003d _isatty(param_2);\n  if ((iVar1 \u003d\u003d -1) \u0026\u0026 (DAT_200711bc !\u003d 0)) {\n    *param_1 \u003d DAT_200711bc;\n    return;\n  }\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_000842a4"
      ],
      "called": [
        "FUN_000811be"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00084700": {
      "entrypoint": "0x00084700",
      "current_name": "FUN_00084700",
      "code": "\nvoid FUN_00084700(int *param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  \n  DAT_200711bc \u003d 0;\n  iVar1 \u003d _lseek(param_2,param_3,param_4);\n  if ((iVar1 \u003d\u003d -1) \u0026\u0026 (DAT_200711bc !\u003d 0)) {\n    *param_1 \u003d DAT_200711bc;\n    return;\n  }\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00084464",
        "FUN_0008449c"
      ],
      "called": [
        "FUN_000811c2"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00084728": {
      "entrypoint": "0x00084728",
      "current_name": "FUN_00084728",
      "code": "\nvoid FUN_00084728(int *param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  \n  DAT_200711bc \u003d 0;\n  iVar1 \u003d _read(param_2,param_3,param_4);\n  if ((iVar1 \u003d\u003d -1) \u0026\u0026 (DAT_200711bc !\u003d 0)) {\n    *param_1 \u003d DAT_200711bc;\n    return;\n  }\n  return;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [
        "FUN_000811c6"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00084750": {
      "entrypoint": "0x00084750",
      "current_name": "FUN_00084750",
      "code": "\nint FUN_00084750(int param_1,int param_2,int param_3,int param_4)\n\n{\n  int iVar1;\n  \n  if ((param_4 \u003d\u003d 0) \u0026\u0026 (param_3 \u003d\u003d 0)) {\n    if (param_2 !\u003d 0 || param_1 !\u003d 0) {\n      param_1 \u003d -1;\n    }\n    return param_1;\n  }\n  iVar1 \u003d __gnu_uldivmod_helper();\n  return iVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00082b38"
      ],
      "called": [
        "FUN_000847ac"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0008477c": {
      "entrypoint": "0x0008477c",
      "current_name": "FUN_0008477c",
      "code": "\nvoid FUN_0008477c(uint param_1,int param_2,undefined4 param_3,undefined4 param_4,int *param_5)\n\n{\n  uint uVar1;\n  longlong lVar2;\n  \n  lVar2 \u003d __divdi3();\n  lVar2 \u003d lVar2 * CONCAT44(param_4,param_3);\n  uVar1 \u003d (uint)lVar2;\n  *param_5 \u003d param_1 - uVar1;\n  param_5[1] \u003d (param_2 - (int)((ulonglong)lVar2 \u003e\u003e 0x20)) - (uint)(param_1 \u003c uVar1);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [
        "FUN_000847e0"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_000847ac": {
      "entrypoint": "0x000847ac",
      "current_name": "FUN_000847ac",
      "code": "\nvoid FUN_000847ac(uint param_1,int param_2,undefined4 param_3,undefined4 param_4,int *param_5)\n\n{\n  uint uVar1;\n  longlong lVar2;\n  \n  lVar2 \u003d __udivdi3();\n  lVar2 \u003d lVar2 * CONCAT44(param_4,param_3);\n  uVar1 \u003d (uint)lVar2;\n  *param_5 \u003d param_1 - uVar1;\n  param_5[1] \u003d (param_2 - (int)((ulonglong)lVar2 \u003e\u003e 0x20)) - (uint)(param_1 \u003c uVar1);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00084750"
      ],
      "called": [
        "FUN_00084a80"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_000847e0": {
      "entrypoint": "0x000847e0",
      "current_name": "FUN_000847e0",
      "code": "\nundefined8 FUN_000847e0(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  longlong lVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  \n  if ((int)param_2 \u003c 0) {\n    bVar13 \u003d param_1 !\u003d 0;\n    param_1 \u003d -param_1;\n    param_2 \u003d -param_2 - (uint)bVar13;\n    uVar9 \u003d 0xffffffff;\n  }\n  else {\n    uVar9 \u003d 0;\n  }\n  if ((int)param_4 \u003c 0) {\n    uVar9 \u003d ~uVar9;\n    bVar13 \u003d param_3 !\u003d 0;\n    param_3 \u003d -param_3;\n    param_4 \u003d -param_4 - (uint)bVar13;\n  }\n  if (param_4 \u003d\u003d 0) {\n    if (param_2 \u003c param_3) {\n      iVar6 \u003d LZCOUNT(param_3);\n      if (iVar6 !\u003d 0) {\n        uVar3 \u003d param_1 \u003e\u003e (0x20U - iVar6 \u0026 0xff);\n        param_3 \u003d param_3 \u003c\u003c iVar6;\n        param_1 \u003d param_1 \u003c\u003c iVar6;\n        param_2 \u003d param_2 \u003c\u003c iVar6 | uVar3;\n      }\n      uVar2 \u003d param_3 \u003e\u003e 0x10;\n      uVar4 \u003d param_2 / uVar2;\n      uVar7 \u003d (param_3 \u0026 0xffff) * uVar4;\n      uVar10 \u003d param_1 \u003e\u003e 0x10 | (param_2 - uVar2 * uVar4) * 0x10000;\n      uVar3 \u003d uVar4;\n      if (uVar10 \u003c\u003d uVar7 \u0026\u0026 uVar7 - uVar10 !\u003d 0) {\n        bVar13 \u003d CARRY4(uVar10,param_3);\n        uVar10 \u003d uVar10 + param_3;\n        uVar3 \u003d uVar4 - 1;\n        if ((bVar13 \u003d\u003d false) \u0026\u0026 (uVar10 \u003c\u003d uVar7 \u0026\u0026 uVar7 - uVar10 !\u003d 0)) {\n          uVar3 \u003d uVar4 - 2;\n          uVar10 \u003d uVar10 + param_3;\n        }\n      }\n      uVar8 \u003d (uVar10 - uVar7) / uVar2;\n      uVar4 \u003d (param_3 \u0026 0xffff) * uVar8;\n      uVar7 \u003d param_1 \u0026 0xffff | ((uVar10 - uVar7) - uVar2 * uVar8) * 0x10000;\n      uVar2 \u003d uVar8;\n      if (uVar7 \u003c\u003d uVar4 \u0026\u0026 uVar4 - uVar7 !\u003d 0) {\n        uVar2 \u003d uVar8 - 1;\n        if ((CARRY4(uVar7,param_3) \u003d\u003d false) \u0026\u0026\n           (uVar7 + param_3 \u003c\u003d uVar4 \u0026\u0026 uVar4 - (uVar7 + param_3) !\u003d 0)) {\n          uVar2 \u003d uVar8 - 2;\n        }\n      }\n      uVar2 \u003d uVar2 | uVar3 \u003c\u003c 0x10;\n      uVar3 \u003d 0;\n    }\n    else {\n      if (param_3 \u003d\u003d 0) {\n        param_3 \u003d 1 / 0;\n      }\n      iVar6 \u003d LZCOUNT(param_3);\n      if (iVar6 \u003d\u003d 0) {\n        param_2 \u003d param_2 - param_3;\n        uVar4 \u003d param_3 \u003e\u003e 0x10;\n        uVar12 \u003d param_3 \u0026 0xffff;\n        uVar3 \u003d 1;\n      }\n      else {\n        param_3 \u003d param_3 \u003c\u003c iVar6;\n        uVar3 \u003d param_2 \u003e\u003e (0x20U - iVar6 \u0026 0xff);\n        uVar4 \u003d param_3 \u003e\u003e 0x10;\n        uVar10 \u003d uVar3 / uVar4;\n        uVar12 \u003d param_3 \u0026 0xffff;\n        uVar7 \u003d uVar12 * uVar10;\n        uVar8 \u003d param_1 \u003e\u003e (0x20U - iVar6 \u0026 0xff) | param_2 \u003c\u003c iVar6;\n        uVar3 \u003d uVar8 \u003e\u003e 0x10 | (uVar3 - uVar4 * uVar10) * 0x10000;\n        param_1 \u003d param_1 \u003c\u003c iVar6;\n        uVar2 \u003d uVar10;\n        if (uVar3 \u003c\u003d uVar7 \u0026\u0026 uVar7 - uVar3 !\u003d 0) {\n          bVar13 \u003d CARRY4(uVar3,param_3);\n          uVar3 \u003d uVar3 + param_3;\n          uVar2 \u003d uVar10 - 1;\n          if ((bVar13 \u003d\u003d false) \u0026\u0026 (uVar3 \u003c\u003d uVar7 \u0026\u0026 uVar7 - uVar3 !\u003d 0)) {\n            uVar2 \u003d uVar10 - 2;\n            uVar3 \u003d uVar3 + param_3;\n          }\n        }\n        uVar5 \u003d (uVar3 - uVar7) / uVar4;\n        uVar10 \u003d uVar12 * uVar5;\n        param_2 \u003d uVar8 \u0026 0xffff | ((uVar3 - uVar7) - uVar4 * uVar5) * 0x10000;\n        uVar3 \u003d uVar5;\n        if (param_2 \u003c\u003d uVar10 \u0026\u0026 uVar10 - param_2 !\u003d 0) {\n          bVar13 \u003d CARRY4(param_2,param_3);\n          param_2 \u003d param_2 + param_3;\n          uVar3 \u003d uVar5 - 1;\n          if ((bVar13 \u003d\u003d false) \u0026\u0026 (param_2 \u003c\u003d uVar10 \u0026\u0026 uVar10 - param_2 !\u003d 0)) {\n            uVar3 \u003d uVar5 - 2;\n            param_2 \u003d param_2 + param_3;\n          }\n        }\n        param_2 \u003d param_2 - uVar10;\n        uVar3 \u003d uVar3 | uVar2 \u003c\u003c 0x10;\n      }\n      uVar2 \u003d param_2 / uVar4;\n      uVar10 \u003d uVar12 * uVar2;\n      uVar8 \u003d param_1 \u003e\u003e 0x10 | (param_2 - uVar4 * uVar2) * 0x10000;\n      uVar7 \u003d uVar2;\n      if (uVar8 \u003c\u003d uVar10 \u0026\u0026 uVar10 - uVar8 !\u003d 0) {\n        bVar13 \u003d CARRY4(uVar8,param_3);\n        uVar8 \u003d uVar8 + param_3;\n        uVar7 \u003d uVar2 - 1;\n        if ((bVar13 \u003d\u003d false) \u0026\u0026 (uVar8 \u003c\u003d uVar10 \u0026\u0026 uVar10 - uVar8 !\u003d 0)) {\n          uVar7 \u003d uVar2 - 2;\n          uVar8 \u003d uVar8 + param_3;\n        }\n      }\n      uVar5 \u003d (uVar8 - uVar10) / uVar4;\n      uVar12 \u003d uVar12 * uVar5;\n      uVar4 \u003d param_1 \u0026 0xffff | ((uVar8 - uVar10) - uVar4 * uVar5) * 0x10000;\n      uVar2 \u003d uVar5;\n      if (uVar4 \u003c\u003d uVar12 \u0026\u0026 uVar12 - uVar4 !\u003d 0) {\n        uVar2 \u003d uVar5 - 1;\n        if ((CARRY4(uVar4,param_3) \u003d\u003d false) \u0026\u0026\n           (uVar4 + param_3 \u003c\u003d uVar12 \u0026\u0026 uVar12 - (uVar4 + param_3) !\u003d 0)) {\n          uVar2 \u003d uVar5 - 2;\n        }\n      }\n      uVar2 \u003d uVar2 | uVar7 \u003c\u003c 0x10;\n    }\n  }\n  else if (param_2 \u003c param_4) {\n    uVar3 \u003d 0;\n    uVar2 \u003d 0;\n  }\n  else {\n    iVar6 \u003d LZCOUNT(param_4);\n    if (iVar6 \u003d\u003d 0) {\n      if ((param_4 \u003c param_2) || (param_3 \u003c\u003d param_1)) {\n        uVar3 \u003d 0;\n        uVar2 \u003d 1;\n      }\n      else {\n        uVar2 \u003d 0;\n        uVar3 \u003d 0;\n      }\n    }\n    else {\n      uVar3 \u003d 0x20 - iVar6;\n      uVar4 \u003d param_2 \u003e\u003e (uVar3 \u0026 0xff);\n      uVar12 \u003d param_3 \u003e\u003e (uVar3 \u0026 0xff) | param_4 \u003c\u003c iVar6;\n      uVar10 \u003d uVar12 \u003e\u003e 0x10;\n      uVar2 \u003d uVar4 / uVar10;\n      uVar8 \u003d (uVar12 \u0026 0xffff) * uVar2;\n      uVar7 \u003d param_2 \u003c\u003c iVar6 | param_1 \u003e\u003e (uVar3 \u0026 0xff);\n      uVar4 \u003d uVar7 \u003e\u003e 0x10 | (uVar4 - uVar10 * uVar2) * 0x10000;\n      uVar3 \u003d uVar2;\n      if (uVar4 \u003c\u003d uVar8 \u0026\u0026 uVar8 - uVar4 !\u003d 0) {\n        bVar13 \u003d CARRY4(uVar4,uVar12);\n        uVar4 \u003d uVar4 + uVar12;\n        uVar3 \u003d uVar2 - 1;\n        if ((bVar13 \u003d\u003d false) \u0026\u0026 (uVar4 \u003c\u003d uVar8 \u0026\u0026 uVar8 - uVar4 !\u003d 0)) {\n          uVar3 \u003d uVar2 - 2;\n          uVar4 \u003d uVar4 + uVar12;\n        }\n      }\n      uVar5 \u003d (uVar4 - uVar8) / uVar10;\n      uVar11 \u003d (uVar12 \u0026 0xffff) * uVar5;\n      uVar4 \u003d uVar7 \u0026 0xffff | ((uVar4 - uVar8) - uVar10 * uVar5) * 0x10000;\n      uVar2 \u003d uVar5;\n      if (uVar4 \u003c\u003d uVar11 \u0026\u0026 uVar11 - uVar4 !\u003d 0) {\n        bVar13 \u003d CARRY4(uVar4,uVar12);\n        uVar4 \u003d uVar4 + uVar12;\n        uVar2 \u003d uVar5 - 1;\n        if ((bVar13 \u003d\u003d false) \u0026\u0026 (uVar4 \u003c\u003d uVar11 \u0026\u0026 uVar11 - uVar4 !\u003d 0)) {\n          uVar2 \u003d uVar5 - 2;\n          uVar4 \u003d uVar4 + uVar12;\n        }\n      }\n      uVar2 \u003d uVar2 | uVar3 \u003c\u003c 0x10;\n      lVar1 \u003d (ulonglong)uVar2 * (ulonglong)(param_3 \u003c\u003c iVar6);\n      uVar7 \u003d (uint)((ulonglong)lVar1 \u003e\u003e 0x20);\n      uVar3 \u003d 0;\n      if ((uVar4 - uVar11 \u003c uVar7) ||\n         ((uVar4 - uVar11 \u003d\u003d uVar7 \u0026\u0026 (param_1 \u003c\u003c iVar6 \u003c (uint)lVar1)))) {\n        uVar2 \u003d uVar2 - 1;\n        uVar3 \u003d 0;\n      }\n    }\n  }\n  if (uVar9 !\u003d 0) {\n    bVar13 \u003d uVar2 !\u003d 0;\n    uVar2 \u003d -uVar2;\n    uVar3 \u003d -uVar3 - (uint)bVar13;\n  }\n  return CONCAT44(uVar3,uVar2);\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_0008477c"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00084a80": {
      "entrypoint": "0x00084a80",
      "current_name": "FUN_00084a80",
      "code": "\nulonglong FUN_00084a80(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  longlong lVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  int iVar10;\n  bool bVar11;\n  \n  if (param_4 \u003d\u003d 0) {\n    if (param_3 \u003c\u003d param_2) {\n      if (param_3 \u003d\u003d 0) {\n        param_3 \u003d 1 / 0;\n      }\n      iVar10 \u003d LZCOUNT(param_3);\n      if (iVar10 \u003d\u003d 0) {\n        param_2 \u003d param_2 - param_3;\n        uVar3 \u003d param_3 \u003e\u003e 0x10;\n        uVar5 \u003d param_3 \u0026 0xffff;\n        uVar2 \u003d 1;\n      }\n      else {\n        param_3 \u003d param_3 \u003c\u003c iVar10;\n        uVar8 \u003d param_2 \u003e\u003e (0x20U - iVar10 \u0026 0xff);\n        uVar3 \u003d param_3 \u003e\u003e 0x10;\n        uVar9 \u003d uVar8 / uVar3;\n        uVar5 \u003d param_3 \u0026 0xffff;\n        uVar2 \u003d uVar5 * uVar9;\n        uVar6 \u003d param_1 \u003e\u003e (0x20U - iVar10 \u0026 0xff) | param_2 \u003c\u003c iVar10;\n        uVar4 \u003d uVar6 \u003e\u003e 0x10 | (uVar8 - uVar3 * uVar9) * 0x10000;\n        param_1 \u003d param_1 \u003c\u003c iVar10;\n        uVar8 \u003d uVar9;\n        if (uVar4 \u003c\u003d uVar2 \u0026\u0026 uVar2 - uVar4 !\u003d 0) {\n          bVar11 \u003d CARRY4(uVar4,param_3);\n          uVar4 \u003d uVar4 + param_3;\n          uVar8 \u003d uVar9 - 1;\n          if ((bVar11 \u003d\u003d false) \u0026\u0026 (uVar4 \u003c\u003d uVar2 \u0026\u0026 uVar2 - uVar4 !\u003d 0)) {\n            uVar8 \u003d uVar9 - 2;\n            uVar4 \u003d uVar4 + param_3;\n          }\n        }\n        uVar7 \u003d (uVar4 - uVar2) / uVar3;\n        uVar9 \u003d uVar5 * uVar7;\n        param_2 \u003d uVar6 \u0026 0xffff | ((uVar4 - uVar2) - uVar3 * uVar7) * 0x10000;\n        uVar2 \u003d uVar7;\n        if (param_2 \u003c\u003d uVar9 \u0026\u0026 uVar9 - param_2 !\u003d 0) {\n          bVar11 \u003d CARRY4(param_2,param_3);\n          param_2 \u003d param_2 + param_3;\n          uVar2 \u003d uVar7 - 1;\n          if ((bVar11 \u003d\u003d false) \u0026\u0026 (param_2 \u003c\u003d uVar9 \u0026\u0026 uVar9 - param_2 !\u003d 0)) {\n            uVar2 \u003d uVar7 - 2;\n            param_2 \u003d param_2 + param_3;\n          }\n        }\n        param_2 \u003d param_2 - uVar9;\n        uVar2 \u003d uVar2 | uVar8 \u003c\u003c 0x10;\n      }\n      uVar9 \u003d param_2 / uVar3;\n      uVar4 \u003d uVar5 * uVar9;\n      uVar6 \u003d param_1 \u003e\u003e 0x10 | (param_2 - uVar3 * uVar9) * 0x10000;\n      uVar8 \u003d uVar9;\n      if (uVar6 \u003c\u003d uVar4 \u0026\u0026 uVar4 - uVar6 !\u003d 0) {\n        bVar11 \u003d CARRY4(uVar6,param_3);\n        uVar6 \u003d uVar6 + param_3;\n        uVar8 \u003d uVar9 - 1;\n        if ((bVar11 \u003d\u003d false) \u0026\u0026 (uVar6 \u003c\u003d uVar4 \u0026\u0026 uVar4 - uVar6 !\u003d 0)) {\n          uVar8 \u003d uVar9 - 2;\n          uVar6 \u003d uVar6 + param_3;\n        }\n      }\n      uVar9 \u003d (uVar6 - uVar4) / uVar3;\n      uVar5 \u003d uVar5 * uVar9;\n      uVar6 \u003d param_1 \u0026 0xffff | ((uVar6 - uVar4) - uVar3 * uVar9) * 0x10000;\n      uVar3 \u003d uVar9;\n      if (uVar6 \u003c\u003d uVar5 \u0026\u0026 uVar5 - uVar6 !\u003d 0) {\n        uVar3 \u003d uVar9 - 1;\n        if ((CARRY4(uVar6,param_3) \u003d\u003d false) \u0026\u0026\n           (uVar6 + param_3 \u003c\u003d uVar5 \u0026\u0026 uVar5 - (uVar6 + param_3) !\u003d 0)) {\n          uVar3 \u003d uVar9 - 2;\n        }\n      }\n      return CONCAT44(uVar2,uVar3 | uVar8 \u003c\u003c 0x10);\n    }\n    iVar10 \u003d LZCOUNT(param_3);\n    if (iVar10 !\u003d 0) {\n      uVar8 \u003d param_1 \u003e\u003e (0x20U - iVar10 \u0026 0xff);\n      param_3 \u003d param_3 \u003c\u003c iVar10;\n      param_1 \u003d param_1 \u003c\u003c iVar10;\n      param_2 \u003d uVar8 | param_2 \u003c\u003c iVar10;\n    }\n    uVar2 \u003d param_3 \u003e\u003e 0x10;\n    uVar3 \u003d param_2 / uVar2;\n    uVar5 \u003d (param_3 \u0026 0xffff) * uVar3;\n    uVar9 \u003d param_1 \u003e\u003e 0x10 | (param_2 - uVar2 * uVar3) * 0x10000;\n    uVar8 \u003d uVar3;\n    if (uVar9 \u003c\u003d uVar5 \u0026\u0026 uVar5 - uVar9 !\u003d 0) {\n      bVar11 \u003d CARRY4(uVar9,param_3);\n      uVar9 \u003d uVar9 + param_3;\n      uVar8 \u003d uVar3 - 1;\n      if ((bVar11 \u003d\u003d false) \u0026\u0026 (uVar9 \u003c\u003d uVar5 \u0026\u0026 uVar5 - uVar9 !\u003d 0)) {\n        uVar8 \u003d uVar3 - 2;\n        uVar9 \u003d uVar9 + param_3;\n      }\n    }\n    uVar6 \u003d (uVar9 - uVar5) / uVar2;\n    uVar3 \u003d (param_3 \u0026 0xffff) * uVar6;\n    uVar5 \u003d param_1 \u0026 0xffff | ((uVar9 - uVar5) - uVar2 * uVar6) * 0x10000;\n    uVar2 \u003d uVar6;\n    if (uVar5 \u003c\u003d uVar3 \u0026\u0026 uVar3 - uVar5 !\u003d 0) {\n      uVar2 \u003d uVar6 - 1;\n      if ((CARRY4(uVar5,param_3) \u003d\u003d false) \u0026\u0026\n         (uVar5 + param_3 \u003c\u003d uVar3 \u0026\u0026 uVar3 - (uVar5 + param_3) !\u003d 0)) {\n        uVar2 \u003d uVar6 - 2;\n      }\n    }\n    uVar2 \u003d uVar2 | uVar8 \u003c\u003c 0x10;\n  }\n  else {\n    if (param_2 \u003c param_4) {\n      return 0;\n    }\n    iVar10 \u003d LZCOUNT(param_4);\n    if (iVar10 \u003d\u003d 0) {\n      if ((param_4 \u003c param_2) || (param_3 \u003c\u003d param_1)) {\n        return 1;\n      }\n      uVar2 \u003d 0;\n    }\n    else {\n      uVar2 \u003d 0x20 - iVar10;\n      uVar8 \u003d param_2 \u003e\u003e (uVar2 \u0026 0xff);\n      uVar3 \u003d param_4 \u003c\u003c iVar10 | param_3 \u003e\u003e (uVar2 \u0026 0xff);\n      uVar5 \u003d uVar3 \u003e\u003e 0x10;\n      uVar4 \u003d uVar8 / uVar5;\n      uVar9 \u003d (uVar3 \u0026 0xffff) * uVar4;\n      uVar6 \u003d param_1 \u003e\u003e (uVar2 \u0026 0xff) | param_2 \u003c\u003c iVar10;\n      uVar2 \u003d uVar6 \u003e\u003e 0x10 | (uVar8 - uVar5 * uVar4) * 0x10000;\n      uVar8 \u003d uVar4;\n      if (uVar2 \u003c\u003d uVar9 \u0026\u0026 uVar9 - uVar2 !\u003d 0) {\n        bVar11 \u003d CARRY4(uVar2,uVar3);\n        uVar2 \u003d uVar2 + uVar3;\n        uVar8 \u003d uVar4 - 1;\n        if ((bVar11 \u003d\u003d false) \u0026\u0026 (uVar2 \u003c\u003d uVar9 \u0026\u0026 uVar9 - uVar2 !\u003d 0)) {\n          uVar8 \u003d uVar4 - 2;\n          uVar2 \u003d uVar2 + uVar3;\n        }\n      }\n      uVar4 \u003d (uVar2 - uVar9) / uVar5;\n      uVar7 \u003d (uVar3 \u0026 0xffff) * uVar4;\n      uVar5 \u003d uVar6 \u0026 0xffff | ((uVar2 - uVar9) - uVar5 * uVar4) * 0x10000;\n      uVar2 \u003d uVar4;\n      if (uVar5 \u003c\u003d uVar7 \u0026\u0026 uVar7 - uVar5 !\u003d 0) {\n        bVar11 \u003d CARRY4(uVar5,uVar3);\n        uVar5 \u003d uVar5 + uVar3;\n        uVar2 \u003d uVar4 - 1;\n        if ((bVar11 \u003d\u003d false) \u0026\u0026 (uVar5 \u003c\u003d uVar7 \u0026\u0026 uVar7 - uVar5 !\u003d 0)) {\n          uVar2 \u003d uVar4 - 2;\n          uVar5 \u003d uVar5 + uVar3;\n        }\n      }\n      uVar2 \u003d uVar2 | uVar8 \u003c\u003c 0x10;\n      lVar1 \u003d (ulonglong)uVar2 * (ulonglong)(param_3 \u003c\u003c iVar10);\n      uVar8 \u003d (uint)((ulonglong)lVar1 \u003e\u003e 0x20);\n      if ((uVar5 - uVar7 \u003c uVar8) || ((uVar5 - uVar7 \u003d\u003d uVar8 \u0026\u0026 (param_1 \u003c\u003c iVar10 \u003c (uint)lVar1)))\n         ) {\n        uVar2 \u003d uVar2 - 1;\n      }\n    }\n  }\n  return (ulonglong)uVar2;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_000847ac"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00085858": {
      "entrypoint": "0x00085858",
      "current_name": "FUN_00085858",
      "code": "\nvoid FUN_00085858(void)\n\n{\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00081d7c"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    }
  },
  "layers": [],
  "locked_functions": [],
  "used_tokens": 0
}