{
    "functions": {
        "FUN_0800010c": {
            "entrypoint": "0x0800010c",
            "current_name": "initialize_flag_0800010c",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08000118) */\n\nundefined4 initializeFlag_0800010c(undefined4 input)\n\n{\n  if ((char)DAT_200000f4 == '\\0') {\n    DAT_200000f4._0_1_ = '\\x01';\n  }\n  return input;\n}\n\n",
            "renaming": {
                "FUN_0800010c": "initialize_flag_0800010c",
                "param_1": "input"
            },
            "calling": [],
            "called": [
                "FUN_0800a424"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000178": {
            "entrypoint": "0x08000178",
            "current_name": "find_end_of_string_08000178",
            "code": "\nchar * find_end_of_string_08000178(char *input_string)\n\n{\n  char current_character;\n  char *next_character;\n  char *current_position;\n  \n  current_position = input_string;\n  do {\n    next_character = current_position + 1;\n    current_character = *current_position;\n    current_position = next_character;\n  } while (current_character != '\\0');\n  return next_character + (-1 - (int)input_string);\n}\n\n",
            "renaming": {
                "FUN_08000178": "find_end_of_string_08000178",
                "param_1": "input_string",
                "cVar1": "current_character",
                "pcVar2": "next_character",
                "pcVar3": "current_position"
            },
            "calling": [
                "FUN_08002e44",
                "FUN_080032a2"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000188": {
            "entrypoint": "0x08000188",
            "current_name": "execute_software_interrupt_08000188",
            "code": "\nvoid executeSoftwareInterrupt_08000188(void)\n\n{\n  software_interrupt(0x3f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000188": "execute_software_interrupt_08000188"
            },
            "calling": [
                "FUN_0800018c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800018c": {
            "entrypoint": "0x0800018c",
            "current_name": "check_and_call_function_0800018c",
            "code": "\nundefined4 check_and_call_function_0800018c(undefined4 input_param,undefined4 unused_param,undefined4 unused_param_2,undefined4 output_param)\n\n{\n  undefined4 result;\n  \n  if (DAT_20000110 != 0) {\n    return 0;\n  }\n  result = FUN_08000188(1,input_param,0,0,output_param);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800018c": "check_and_call_function_0800018c",
                "param_1": "input_param",
                "param_2": "unused_param",
                "param_3": "unused_param_2",
                "param_4": "output_param",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08000188"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000214": {
            "entrypoint": "0x08000214",
            "current_name": "process_data_08000214",
            "code": "\nvoid processData_08000214(uint count,undefined4 param1,undefined4 param2,undefined4 param3)\n\n{\n  bool isValid;\n  int result;\n  \n  if (0x3b < (int)count) {\n    return;\n  }\n  result = FUN_08002fa0(&DAT_200003d4,count,param2,param3,param3);\n  if (result == 3) {\n    if (count < 0x3c) {\n      if ((&DAT_0800a908)[count] == -1) {\n        result = 0;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[count]);\n          if (result == 1) {\n            result = 0;\n          }\n          else {\n            result = FUN_0800738a((int)(char)(&DAT_0800a908)[count],&DAT_0800a6cc);\n          }\n        }\n      }\n    }\n    else {\n      result = 0;\n    }\n    if (result != 0) {\n      FUN_080088e0(count,param1);\n    }\n    FUN_08002fc2(&DAT_200003d4,count,param1);\n  }\n  else if (result == 4) {\n    if (count < 0x3c) {\n      if ((&DAT_0800a908)[count] == -1) {\n        isValid = false;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          isValid = false;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[count]);\n          if (result == 1) {\n            isValid = false;\n          }\n          else {\n            isValid = true;\n          }\n        }\n      }\n    }\n    else {\n      isValid = false;\n    }\n    if (isValid) {\n      FUN_080026b0(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[count] * 3,param1);\n    }\n    FUN_08002fc2(&DAT_200003d4,count,param1);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000214": "process_data_08000214",
                "param_1": "count",
                "param_2": "param1",
                "param_3": "param2",
                "param_4": "param3",
                "bVar1": "isValid",
                "iVar2": "result"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [
                "FUN_0800021a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800021a": {
            "entrypoint": "0x0800021a",
            "current_name": "process_data_0800021a",
            "code": "\nvoid processData_0800021a(uint index,undefined4 dataParam,undefined4 param1,undefined4 param2)\n\n{\n  bool isValid;\n  int result;\n  \n  result = FUN_08002fa0(&DAT_200003d4,index,param1,param2,param2);\n  if (result == 3) {\n    if (index < 0x3c) {\n      if ((&DAT_0800a908)[index] == -1) {\n        result = 0;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[index]);\n          if (result == 1) {\n            result = 0;\n          }\n          else {\n            result = FUN_0800738a((int)(char)(&DAT_0800a908)[index],&DAT_0800a6cc);\n          }\n        }\n      }\n    }\n    else {\n      result = 0;\n    }\n    if (result != 0) {\n      FUN_080088e0(index,dataParam);\n    }\n    FUN_08002fc2(&DAT_200003d4,index,dataParam);\n  }\n  else if (result == 4) {\n    if (index < 0x3c) {\n      if ((&DAT_0800a908)[index] == -1) {\n        isValid = false;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          isValid = false;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[index]);\n          if (result == 1) {\n            isValid = false;\n          }\n          else {\n            isValid = true;\n          }\n        }\n      }\n    }\n    else {\n      isValid = false;\n    }\n    if (isValid) {\n      FUN_080026b0(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[index] * 3,dataParam);\n    }\n    FUN_08002fc2(&DAT_200003d4,index,dataParam);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800021a": "process_data_0800021a",
                "param_1": "index",
                "param_2": "dataParam",
                "param_3": "param1",
                "param_4": "param2",
                "bVar1": "isValid",
                "iVar2": "result"
            },
            "calling": [
                "FUN_08000214"
            ],
            "called": [
                "FUN_080026b0",
                "FUN_08002fa0",
                "FUN_080036ac",
                "FUN_08002fc2",
                "FUN_0800738a",
                "FUN_080088e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000488": {
            "entrypoint": "0x08000488",
            "current_name": "update_bit_in_value_08000488",
            "code": "\nvoid updateBitInValue_08000488(uint bitPosition,int bitValue)\n\n{\n  undefined4 result;\n  \n  if ((int)bitPosition < 0xe) {\n    if (bitValue == 0) {\n      DAT_20000114 = DAT_20000114 & ~(1 << (bitPosition & 0xff));\n      return;\n    }\n    DAT_20000114 = 1 << (bitPosition & 0xff) | DAT_20000114;\n    if (DAT_20000171 == '\\0') {\n      result = FUN_08008880();\n      FUN_08002ef2(&DAT_200003d4,bitPosition,result);\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000488": "update_bit_in_value_08000488",
                "param_1": "bitPosition",
                "param_2": "bitValue",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08008880",
                "FUN_08002ef2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004d4": {
            "entrypoint": "0x080004d4",
            "current_name": "execute_some_operation_080004d4",
            "code": "\nvoid executeSomeOperation_080004d4(int inputCheck,int flag)\n\n{\n  int loopCounter;\n  undefined *dataPointer;\n  \n  if (inputCheck != 1) {\n    return;\n  }\n  if (flag == 0xffff) {\n    dataPointer = &DAT_2000022c;\n    for (loopCounter = 0xb; -1 < loopCounter; loopCounter = loopCounter + -1) {\n      FUN_08002580(dataPointer);\n      dataPointer = dataPointer + 3;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080004d4": "execute_some_operation_080004d4",
                "param_1": "inputCheck",
                "param_2": "flag",
                "iVar1": "loopCounter",
                "puVar2": "dataPointer"
            },
            "calling": [],
            "called": [
                "FUN_08002580"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000500": {
            "entrypoint": "0x08000500",
            "current_name": "attach_servo_08000500",
            "code": "\nvoid attachServo_08000500(int servoIndex,int param2,int param3,undefined4 param4)\n\n{\n  if (0xb < DAT_200001ed) {\n    FUN_08002f14(&DAT_200003d4,\"Max servos attached\",param3,param4,param4);\n    return;\n  }\n  if (DAT_2000011c == 0) {\n    (&DAT_200001f0)[servoIndex] = DAT_200001ed;\n    DAT_200001ed = DAT_200001ed + 1;\n  }\n  else {\n    (&DAT_200001f0)[servoIndex] = (&DAT_2000011f)[DAT_2000011c];\n    DAT_2000011c = DAT_2000011c - 1;\n  }\n  if ((0 < param2) && (0 < param3)) {\n    FUN_080025ac(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[servoIndex] * 3,servoIndex,param2,param3);\n    return;\n  }\n  FUN_08002634(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[servoIndex] * 3,servoIndex);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000500": "attach_servo_08000500",
                "param_1": "servoIndex",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08002634",
                "FUN_08002f14",
                "FUN_080025ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000588": {
            "entrypoint": "0x08000588",
            "current_name": "update_and_reset_value_08000588",
            "code": "\nvoid updateAndResetValue_08000588(int inputIndex)\n\n{\n  FUN_08002644(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[inputIndex] * 3);\n  if (((&DAT_200001f0)[inputIndex] == DAT_200001ed) && (DAT_200001ed != '\\0')) {\n    DAT_200001ed = DAT_200001ed + -1;\n  }\n  else if (DAT_200001ed != '\\0') {\n    DAT_2000011c = DAT_2000011c + 1;\n    (&DAT_2000011f)[DAT_2000011c] = (&DAT_200001f0)[inputIndex];\n  }\n  (&DAT_200001f0)[inputIndex] = 0xff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000588": "update_and_reset_value_08000588",
                "param_1": "inputIndex"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08002644"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005e0": {
            "entrypoint": "0x080005e0",
            "current_name": "initialize_data_080005e0",
            "code": "\nvoid initializeData_080005e0(void)\n\n{\n  DAT_20000170 = 0;\n  DAT_20000004 = 0xff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080005e0": "initialize_data_080005e0"
            },
            "calling": [
                "FUN_08000aec",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005f8": {
            "entrypoint": "0x080005f8",
            "current_name": "initialize_pin_mode_080005f8",
            "code": "\nvoid initializePinMode_080005f8(uint pinNumber,int mode)\n\n{\n  int pinMode;\n  char isFlagSet;\n  bool isValidPin;\n  uint maskedPinNumber;\n  \n  pinMode = FUN_08002fa0(&DAT_200003d4,pinNumber);\n  if (pinMode != 0x7f) {\n    pinMode = FUN_08002fa0(&DAT_200003d4,pinNumber);\n    if (pinMode == 6) {\n      if (DAT_20000170 == '\\0') {\n        isFlagSet = '\\0';\n      }\n      else {\n        isFlagSet = DAT_20000170;\n        if (mode == 6) {\n          isFlagSet = '\\0';\n        }\n      }\n    }\n    else {\n      isFlagSet = '\\0';\n    }\n    if (isFlagSet != '\\0') {\n      FUN_080005e0();\n    }\n    if (pinNumber < 0x3c) {\n      if ((&DAT_0800a908)[pinNumber] == -1) {\n        isValidPin = false;\n      }\n      else {\n        pinMode = FUN_080036ac();\n        if (pinMode == 0) {\n          isValidPin = false;\n        }\n        else {\n          pinMode = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n          if (pinMode == 1) {\n            isValidPin = false;\n          }\n          else if (mode == 4) {\n            isValidPin = false;\n          }\n          else {\n            isValidPin = true;\n          }\n        }\n      }\n    }\n    else {\n      isValidPin = false;\n    }\n    if (isValidPin) {\n      if ((byte)(&DAT_200001f0)[pinNumber] < 0xc) {\n        pinMode = FUN_080026f8(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[pinNumber] * 3);\n      }\n      else {\n        pinMode = 0;\n      }\n      if (pinMode != 0) {\n        FUN_08000588(pinNumber);\n      }\n    }\n    maskedPinNumber = pinNumber - 0x2e & 0xff;\n    if (maskedPinNumber < 0xe) {\n      if (pinNumber < 0x3c) {\n        pinMode = (int)(char)(&DAT_0800a908)[pinNumber];\n      }\n      else {\n        pinMode = -1;\n      }\n      pinMode = FUN_080036ac(pinMode);\n      if (pinMode == 0) {\n        isValidPin = false;\n      }\n      else {\n        if (pinNumber < 0x3c) {\n          pinMode = (int)(char)(&DAT_0800a908)[pinNumber];\n        }\n        else {\n          pinMode = -1;\n        }\n        pinMode = FUN_080036ac(pinMode);\n        if (pinMode == 1) {\n          isValidPin = false;\n        }\n        else {\n          isValidPin = true;\n        }\n      }\n    }\n    else {\n      isValidPin = false;\n    }\n    if (isValidPin) {\n      FUN_08000488(maskedPinNumber,mode == 2);\n    }\n    if (pinNumber < 0x3c) {\n      if ((&DAT_0800a908)[pinNumber] == -1) {\n        isValidPin = false;\n      }\n      else {\n        pinMode = FUN_080036ac();\n        if (pinMode == 0) {\n          isValidPin = false;\n        }\n        else {\n          pinMode = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n          if (pinMode == 1) {\n            isValidPin = false;\n          }\n          else {\n            isValidPin = true;\n          }\n        }\n      }\n    }\n    else {\n      isValidPin = false;\n    }\n    if (isValidPin) {\n      if ((mode == 0) || (mode == 0xb)) {\n        (&DAT_20000174)[pinNumber >> 3] = (&DAT_20000174)[pinNumber >> 3] | (byte)(1 << (pinNumber & 7));\n      }\n      else {\n        (&DAT_20000174)[pinNumber >> 3] = (&DAT_20000174)[pinNumber >> 3] & ~(byte)(1 << (pinNumber & 7));\n      }\n    }\n    FUN_08002fc2(&DAT_200003d4,pinNumber,0);\n    switch(mode) {\n    case 0:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          isValidPin = false;\n        }\n        else {\n          pinMode = FUN_080036ac();\n          if (pinMode == 0) {\n            isValidPin = false;\n          }\n          else {\n            pinMode = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (pinMode == 1) {\n              isValidPin = false;\n            }\n            else {\n              isValidPin = true;\n            }\n          }\n        }\n      }\n      else {\n        isValidPin = false;\n      }\n      if (isValidPin) {\n        FUN_08008990(pinNumber,0);\n        FUN_08002fa8(&DAT_200003d4,pinNumber,0);\n        return;\n      }\n      break;\n    case 1:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          isValidPin = false;\n        }\n        else {\n          pinMode = FUN_080036ac();\n          if (pinMode == 0) {\n            isValidPin = false;\n          }\n          else {\n            pinMode = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (pinMode == 1) {\n              isValidPin = false;\n            }\n            else {\n              isValidPin = true;\n            }\n          }\n        }\n      }\n      else {\n        isValidPin = false;\n      }\n      if (isValidPin) {\n        pinMode = FUN_08002fa0(&DAT_200003d4,pinNumber);\n        if (pinMode == 3) {\n          FUN_08008a24(pinNumber,0);\n        }\n        FUN_08008990(pinNumber,1);\n        FUN_08002fa8(&DAT_200003d4,pinNumber,1);\n        return;\n      }\n      break;\n    case 2:\n      if (maskedPinNumber < 0xe) {\n        if (pinNumber < 0x3c) {\n          pinMode = (int)(char)(&DAT_0800a908)[pinNumber];\n        }\n        else {\n          pinMode = -1;\n        }\n        pinMode = FUN_080036ac(pinMode);\n        if (pinMode == 0) {\n          isValidPin = false;\n        }\n        else {\n          if (pinNumber < 0x3c) {\n            pinMode = (int)(char)(&DAT_0800a908)[pinNumber];\n          }\n          else {\n            pinMode = -1;\n          }\n          pinMode = FUN_080036ac(pinMode);\n          if (pinMode == 1) {\n            isValidPin = false;\n          }\n          else {\n            isValidPin = true;\n          }\n        }\n      }\n      else {\n        isValidPin = false;\n      }\n      if (isValidPin) {\n        if (pinNumber < 0x3c) {\n          if ((&DAT_0800a908)[pinNumber] == -1) {\n            isValidPin = false;\n          }\n          else {\n            pinMode = FUN_080036ac();\n            if (pinMode == 0) {\n              isValidPin = false;\n            }\n            else {\n              pinMode = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n              if (pinMode == 1) {\n                isValidPin = false;\n              }\n            }\n          }\n        }\n        else {\n          isValidPin = false;\n        }\n        if (isValidPin) {\n          FUN_08008990(pinNumber,0);\n        }\n        FUN_08002fa8(&DAT_200003d4,pinNumber,2);\n        return;\n      }\n      break;\n    case 3:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          pinMode = 0;\n        }\n        else {\n          pinMode = FUN_080036ac();\n          if (pinMode == 0) {\n            pinMode = 0;\n          }\n          else {\n            pinMode = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (pinMode == 1) {\n              pinMode = 0;\n            }\n            else {\n              pinMode = FUN_0800738a((int)(char)(&DAT_0800a908)[pinNumber],&DAT_0800a6cc);\n            }\n          }\n        }\n      }\n      else {\n        pinMode = 0;\n      }\n      if (pinMode != 0) {\n        FUN_08008990(pinNumber,1);\n        FUN_080088e0(pinNumber,0);\n        FUN_08002fa8(&DAT_200003d4,pinNumber,3);\n        return;\n      }\n      break;\n    case 4:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          isValidPin = false;\n        }\n        else {\n          pinMode = FUN_080036ac();\n          if (pinMode == 0) {\n            isValidPin = false;\n          }\n          else {\n            pinMode = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (pinMode == 1) {\n              isValidPin = false;\n            }\n            else {\n              isValidPin = true;\n            }\n          }\n        }\n      }\n      else {\n        isValidPin = false;\n      }\n      if (isValidPin) {\n        FUN_08002fa8(&DAT_200003d4,pinNumber,4);\n        if (((byte)(&DAT_200001f0)[pinNumber] != 0xff) &&\n           (pinMode = FUN_080026f8(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[pinNumber] * 3),\n           pinMode != 0)) {\n          isValidPin = false;\n        }\n        if (isValidPin) {\n          FUN_08000500(pinNumber,0xffffffff);\n          return;\n        }\n      }\n      break;\n    default:\n      FUN_08002f14(&DAT_200003d4,\"Unknown pin mode\");\n      break;\n    case 6:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          pinMode = 0;\n        }\n        else {\n          pinMode = FUN_080036ac();\n          if (pinMode == 0) {\n            pinMode = 0;\n          }\n          else {\n            pinMode = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (pinMode == 1) {\n              pinMode = 0;\n            }\n            else {\n              pinMode = FUN_0800738a((int)(char)(&DAT_0800a908)[pinNumber],&DAT_0800a69c);\n              if (pinMode == 0) {\n                pinMode = FUN_0800738a((int)(char)(&DAT_0800a908)[pinNumber],&DAT_0800a66c);\n              }\n            }\n          }\n        }\n      }\n      else {\n        pinMode = 0;\n      }\n      if (pinMode != 0) {\n        FUN_08002fa8(&DAT_200003d4,pinNumber,6);\n        return;\n      }\n      break;\n    case 10:\n      break;\n    case 0xb:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          isValidPin = false;\n        }\n        else {\n          pinMode = FUN_080036ac();\n          if (pinMode == 0) {\n            isValidPin = false;\n          }\n          else {\n            pinMode = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (pinMode == 1) {\n              isValidPin = false;\n            }\n            else {\n              isValidPin = true;\n            }\n          }\n        }\n      }\n      else {\n        isValidPin = false;\n      }\n      if (isValidPin) {\n        FUN_08008990(pinNumber,2);\n        FUN_08002fa8(&DAT_200003d4,pinNumber,0xb);\n        FUN_08002fc2(&DAT_200003d4,pinNumber,1);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080005f8": "initialize_pin_mode_080005f8",
                "param_1": "pinNumber",
                "param_2": "mode",
                "iVar1": "pinMode",
                "cVar2": "isFlagSet",
                "bVar3": "isValidPin",
                "uVar4": "maskedPinNumber"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08000aec",
                "FUN_08000a64"
            ],
            "called": [
                "FUN_08002f14",
                "FUN_08008990",
                "FUN_080036ac",
                "FUN_080005e0",
                "FUN_08002fc2",
                "FUN_0800738a",
                "FUN_080088e0",
                "FUN_08000488",
                "FUN_08000588",
                "FUN_08002fa0",
                "FUN_08008a24",
                "FUN_08002fa8",
                "FUN_08000500",
                "FUN_080026f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a64": {
            "entrypoint": "0x08000a64",
            "current_name": "process_data_08000a64",
            "code": "\nvoid processData_08000a64(void)\n\n{\n  int result;\n  uint index;\n  \n  for (index = 0; index < 0x3c; index = index + 1 & 0xff) {\n    if (index < 0x3c) {\n      if ((&DAT_0800a908)[index] == -1) {\n        result = 0;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[index]);\n          if (result == 1) {\n            result = 0;\n          }\n          else {\n            result = FUN_0800738a((int)(char)(&DAT_0800a908)[index],&DAT_0800a69c);\n            if (result == 0) {\n              result = FUN_0800738a((int)(char)(&DAT_0800a908)[index],&DAT_0800a66c);\n            }\n          }\n        }\n      }\n    }\n    else {\n      result = 0;\n    }\n    if (result != 0) {\n      FUN_080005f8(index,6);\n    }\n  }\n  DAT_20000170 = 1;\n  FUN_08002a26(&DAT_20000314);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000a64": "process_data_08000a64",
                "iVar1": "result",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [
                "FUN_080036ac",
                "FUN_08002a26",
                "FUN_0800738a",
                "FUN_080005f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000aec": {
            "entrypoint": "0x08000aec",
            "current_name": "initialize_data_08000aec",
            "code": "\nvoid initializeData_08000aec(void)\n\n{\n  bool isConditionMet;\n  int result;\n  uint index;\n  \n  DAT_20000171 = 1;\n  if (DAT_20000170 != '\\0') {\n    FUN_080005e0();\n  }\n  for (index = 0; index < 5; index = index + 1 & 0xff) {\n    (&DAT_200001e8)[index] = 0;\n    (&DAT_20000174)[index] = 0;\n    (&DAT_20000180)[index] = 0;\n  }\n  for (index = 0; index < 0x3c; index = index + 1 & 0xff) {\n    if ((index - 0x2e & 0xff) < 0xe) {\n      if (index < 0x3c) {\n        result = (int)(char)(&DAT_0800a908)[index];\n      }\n      else {\n        result = -1;\n      }\n      result = FUN_080036ac(result);\n      if (result == 0) {\n        isConditionMet = false;\n      }\n      else {\n        if (index < 0x3c) {\n          result = (int)(char)(&DAT_0800a908)[index];\n        }\n        else {\n          result = -1;\n        }\n        result = FUN_080036ac(result);\n        if (result == 1) {\n          isConditionMet = false;\n        }\n        else {\n          isConditionMet = true;\n        }\n      }\n    }\n    else {\n      isConditionMet = false;\n    }\n    if (isConditionMet) {\n      FUN_080005f8(index,2);\n    }\n    else {\n      if ((((index < 0x3c) && ((&DAT_0800a908)[index] != -1)) &&\n          (result = FUN_080036ac(), result != 0)) &&\n         (result = FUN_080036ac((int)(char)(&DAT_0800a908)[index]), result != 1)) {\n        isConditionMet = true;\n      }\n      if (isConditionMet) {\n        FUN_080005f8(index,1);\n      }\n    }\n    (&DAT_200001f0)[index] = 0xff;\n  }\n  DAT_20000114 = 0;\n  DAT_2000011c = 0;\n  DAT_200001ed = 0;\n  DAT_20000171 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000aec": "initialize_data_08000aec",
                "bVar1": "isConditionMet",
                "iVar2": "result",
                "uVar3": "index"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_080036ac",
                "FUN_080005e0",
                "FUN_080005f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000be8": {
            "entrypoint": "0x08000be8",
            "current_name": "reverse_and_process_data_08000be8",
            "code": "\nvoid reverseAndProcessData_08000be8(int index,uint mask,int flag,undefined4 data)\n\n{\n  undefined1 *destination;\n  undefined1 *maskedByte;\n  \n  destination = &DAT_20000174;\n  maskedByte = (undefined1 *)((byte)(&DAT_20000174)[index] & mask);\n  if ((flag != 0) ||\n     (destination = (undefined1 *)(uint)(byte)(&DAT_20000180)[index], maskedByte != destination)) {\n    FUN_08002efe(&DAT_200003d4,index,maskedByte,destination,data);\n    (&DAT_20000180)[index] = (char)maskedByte;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000be8": "reverse_and_process_data_08000be8",
                "param_1": "index",
                "param_2": "mask",
                "param_3": "flag",
                "param_4": "data",
                "puVar1": "destination",
                "puVar2": "maskedByte"
            },
            "calling": [
                "FUN_08000ef8"
            ],
            "called": [
                "FUN_08002efe"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ef8": {
            "entrypoint": "0x08000ef8",
            "current_name": "configure_features_08000ef8",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08001ade) */\n/* WARNING: Removing unreachable block (ram,0x08001a4a) */\n/* WARNING: Removing unreachable block (ram,0x080019b6) */\n/* WARNING: Removing unreachable block (ram,0x08001912) */\n/* WARNING: Removing unreachable block (ram,0x08001866) */\n/* WARNING: Removing unreachable block (ram,0x080017d2) */\n/* WARNING: Removing unreachable block (ram,0x0800173e) */\n/* WARNING: Removing unreachable block (ram,0x0800169a) */\n/* WARNING: Removing unreachable block (ram,0x080015ee) */\n/* WARNING: Removing unreachable block (ram,0x0800155a) */\n/* WARNING: Removing unreachable block (ram,0x08001490) */\n/* WARNING: Removing unreachable block (ram,0x080014a2) */\n/* WARNING: Removing unreachable block (ram,0x080014e4) */\n/* WARNING: Removing unreachable block (ram,0x080014b0) */\n/* WARNING: Removing unreachable block (ram,0x080014ba) */\n/* WARNING: Removing unreachable block (ram,0x080014e8) */\n/* WARNING: Removing unreachable block (ram,0x080014c2) */\n/* WARNING: Removing unreachable block (ram,0x080014b6) */\n/* WARNING: Removing unreachable block (ram,0x08001496) */\n/* WARNING: Removing unreachable block (ram,0x08001430) */\n/* WARNING: Removing unreachable block (ram,0x08001376) */\n/* WARNING: Removing unreachable block (ram,0x080012e2) */\n/* WARNING: Removing unreachable block (ram,0x0800124e) */\n/* WARNING: Removing unreachable block (ram,0x080011b8) */\n/* WARNING: Removing unreachable block (ram,0x08001100) */\n/* WARNING: Removing unreachable block (ram,0x0800106c) */\n/* WARNING: Removing unreachable block (ram,0x08000fd8) */\n/* WARNING: Removing unreachable block (ram,0x08000f42) */\n/* WARNING: Removing unreachable block (ram,0x08000f8e) */\n/* WARNING: Removing unreachable block (ram,0x08001022) */\n/* WARNING: Removing unreachable block (ram,0x080010b6) */\n/* WARNING: Removing unreachable block (ram,0x0800114a) */\n/* WARNING: Removing unreachable block (ram,0x08001204) */\n/* WARNING: Removing unreachable block (ram,0x08001298) */\n/* WARNING: Removing unreachable block (ram,0x0800132c) */\n/* WARNING: Removing unreachable block (ram,0x080013c0) */\n/* WARNING: Removing unreachable block (ram,0x0800147c) */\n/* WARNING: Removing unreachable block (ram,0x08001510) */\n/* WARNING: Removing unreachable block (ram,0x080015a4) */\n/* WARNING: Removing unreachable block (ram,0x08001638) */\n/* WARNING: Removing unreachable block (ram,0x080016f4) */\n/* WARNING: Removing unreachable block (ram,0x08001788) */\n/* WARNING: Removing unreachable block (ram,0x0800181c) */\n/* WARNING: Removing unreachable block (ram,0x080018b0) */\n/* WARNING: Removing unreachable block (ram,0x0800196c) */\n/* WARNING: Removing unreachable block (ram,0x08001a00) */\n/* WARNING: Removing unreachable block (ram,0x08001a94) */\n/* WARNING: Removing unreachable block (ram,0x08001b28) */\n/* WARNING: Removing unreachable block (ram,0x080014ca) */\n\nvoid configureFeatures_08000ef8(void)\n\n{\n  byte featureFlags;\n  int result;\n  bool flagEnabled;\n  byte newFeatureFlags;\n  \n  featureFlags = DAT_20000174;\n  if (DAT_200001e8 != '\\0') {\n    result = FUN_080036ac();\n    if (result == 0) {\n      newFeatureFlags = 0;\n    }\n    else {\n      result = FUN_080036ac(3);\n      if (result == 1) {\n        newFeatureFlags = 0;\n      }\n      else if ((featureFlags & 1) == 0) {\n        newFeatureFlags = 0;\n      }\n      else {\n        result = FUN_08008a6c(0);\n        if (result == 0) {\n          newFeatureFlags = 0;\n        }\n        else {\n          newFeatureFlags = 1;\n        }\n      }\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flagEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(2);\n      if (result == 1) {\n        flagEnabled = false;\n      }\n      else if ((featureFlags & 2) == 0) {\n        flagEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(1);\n        if (result == 0) {\n          flagEnabled = false;\n        }\n        else {\n          flagEnabled = true;\n        }\n      }\n    }\n    if (flagEnabled) {\n      newFeatureFlags = newFeatureFlags | 2;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flagEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(10);\n      if (result == 1) {\n        flagEnabled = false;\n      }\n      else if ((featureFlags & 4) == 0) {\n        flagEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(2);\n        if (result == 0) {\n          flagEnabled = false;\n        }\n        else {\n          flagEnabled = true;\n        }\n      }\n    }\n    if (flagEnabled) {\n      newFeatureFlags = newFeatureFlags | 4;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flagEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x13);\n      if (result == 1) {\n        flagEnabled = false;\n      }\n      else if ((featureFlags & 8) == 0) {\n        flagEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(3);\n        if (result == 0) {\n          flagEnabled = false;\n        }\n        else {\n          flagEnabled = true;\n        }\n      }\n    }\n    if (flagEnabled) {\n      newFeatureFlags = newFeatureFlags | 8;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flagEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x15);\n      if (result == 1) {\n        flagEnabled = false;\n      }\n      else if ((featureFlags & 0x10) == 0) {\n        flagEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(4);\n        if (result == 0) {\n          flagEnabled = false;\n        }\n        else {\n          flagEnabled = true;\n        }\n      }\n    }\n    if (flagEnabled) {\n      newFeatureFlags = newFeatureFlags | 0x10;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flagEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x14);\n      if (result == 1) {\n        flagEnabled = false;\n      }\n      else if ((featureFlags & 0x20) == 0) {\n        flagEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(5);\n        if (result == 0) {\n          flagEnabled = false;\n        }\n        else {\n          flagEnabled = true;\n        }\n      }\n    }\n    if (flagEnabled) {\n      newFeatureFlags = newFeatureFlags | 0x20;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flagEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x1a);\n      if (result == 1) {\n        flagEnabled = false;\n      }\n      else if ((featureFlags & 0x40) == 0) {\n        flagEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(6);\n        if (result == 0) {\n          flagEnabled = false;\n        }\n        else {\n          flagEnabled = true;\n        }\n      }\n    }\n    if (flagEnabled) {\n      newFeatureFlags = newFeatureFlags | 0x40;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flagEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(8);\n      if (result == 1) {\n        flagEnabled = false;\n      }\n      else if ((featureFlags & 0x80) == 0) {\n        flagEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(7);\n        if (result == 0) {\n          flagEnabled = false;\n        }\n        else {\n          flagEnabled = true;\n        }\n      }\n    }\n    if (flagEnabled) {\n      newFeatureFlags = newFeatureFlags | 0x80;\n    }\n    FUN_08000be8(0,newFeatureFlags);\n  }\n  featureFlags = DAT_20000175;\n  if (DAT_200001e9 != '\\0') {\n    result = FUN_080036ac();\n    if (result == 0) {\n      newFeatureFlags = 0;\n    }\n    else {\n      result = FUN_080036ac(9);\n      if (result == 1) {\n        newFeatureFlags = 0;\n      }\n      else if ((featureFlags & 1) == 0) {\n        newFeatureFlags = 0;\n      }\n      else {\n        result = FUN_08008a6c(8);\n        if (result == 0) {\n          newFeatureFlags = 0;\n        }\n        else {\n          newFeatureFlags = 1;\n        }\n      }\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flagEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x27);\n      if (result == 1) {\n        flagEnabled = false;\n      }\n      else if ((featureFlags & 2) == 0) {\n        flagEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(9);\n        if (result == 0) {\n          flagEnabled = false;\n        }\n        else {\n          flagEnabled = true;\n        }\n      }\n    }\n    if (flagEnabled) {\n      newFeatureFlags = newFeatureFlags | 2;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flagEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x16);\n      if (result == 1) {\n        flagEnabled = false;\n      }\n      else if ((featureFlags & 4) == 0) {\n        flagEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(10);\n        if (result == 0) {\n          flagEnabled = false;\n        }\n        else {\n          flagEnabled = true;\n        }\n      }\n    }\n    if (flagEnabled) {\n      newFeatureFlags = newFeatureFlags | 4;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flagEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(7);\n      if (result == 1) {\n        flagEnabled = false;\n      }\n      else if ((featureFlags & 8) == 0) {\n        flagEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0xb);\n        if (result == 0) {\n          flagEnabled = false;\n        }\n        else {\n          flagEnabled = true;\n        }\n      }\n    }\n    if (flagEnabled) {\n      newFeatureFlags = newFeatureFlags | 8;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flagEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(6);\n      if (result == 1) {\n        flagEnabled = false;\n      }\n      else if ((featureFlags & 0x10) == 0) {\n        flagEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0xc);\n        if (result == 0) {\n          flagEnabled = false;\n        }\n        else {\n          flagEnabled = true;\n        }\n      }\n    }\n    if (flagEnabled) {\n      newFeatureFlags = newFeatureFlags | 0x10;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flagEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(5);\n      if (result == 1) {\n        flagEnabled = false;\n      }\n      else if ((featureFlags & 0x20) == 0) {\n        flagEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0xd);\n        if (result == 0) {\n          flagEnabled = false;\n        }\n        else {\n          flagEnabled = true;\n        }\n      }\n    }\n    if (flagEnabled) {\n      newFeatureFlags = newFeatureFlags | 0x20;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flagEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x19);\n      if (result == 1) {\n        flagEnabled = false;\n      }\n      else if ((featureFlags & 0x40) == 0) {\n        flagEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0xe);\n        if (result == 0) {\n          flagEnabled = false;\n        }\n        else {\n          flagEnabled = true;\n        }\n      }\n    }\n    if (flagEnabled) {\n      newFeatureFlags = newFeatureFlags | 0x40;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flagEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x18);\n      if (result == 1) {\n        flagEnabled = false;\n      }\n      else if ((featureFlags & 0x80) == 0) {\n        flagEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0xf);\n        if (result == 0) {\n          flagEnabled = false;\n        }\n        else {\n          flagEnabled = true;\n        }\n      }\n    }\n    if (flagEnabled) {\n      newFeatureFlags = newFeatureFlags | 0x80;\n    }\n    FUN_08000be8(1,newFeatureFlags,0);\n  }\n  featureFlags = DAT_20000176;\n  if (DAT_200001ea != '\\0') {\n    result = FUN_080036ac();\n    if (result == 0) {\n      newFeatureFlags = 0;\n    }\n    else {\n      result = FUN_080036ac(0x2a);\n      if (result == 1) {\n        newFeatureFlags = 0;\n      }\n      else if ((featureFlags & 1) == 0) {\n        newFeatureFlags = 0;\n      }\n      else {\n        result = FUN_08008a6c(0x10);\n        if (result == 0) {\n          newFeatureFlags = 0;\n        }\n        else {\n          newFeatureFlags = 1;\n        }\n      }\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flagEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x2c);\n      if (result == 1) {\n        flagEnabled = false;\n      }\n      else if ((featureFlags & 2) == 0) {\n        flagEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0x11);\n        if (result == 0) {\n          flagEnabled = false;\n        }\n        else {\n          flagEnabled = true;\n        }\n      }\n    }\n    if (flagEnabled) {\n      newFeatureFlags = newFeatureFlags | 2;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flagEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0xd);\n      if (result == 1) {\n        flagEnabled = false;\n      }\n      else if ((featureFlags & 8) == 0) {\n        flagEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0x13);\n        if (result == 0) {\n          flagEnabled = false;\n        }\n        else {\n          flagEnabled = true;\n        }\n      }\n    }\n    if (flagEnabled) {\n      newFeatureFlags = newFeatureFlags | 8;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flagEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0xe);\n      if (result == 1) {\n        flagEnabled = false;\n      }\n      else if ((featureFlags & 0x10) == 0) {\n        flagEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0x14);\n        if (result == 0) {\n          flagEnabled = false;\n        }\n        else {\n          flagEnabled = true;\n        }\n      }\n    }\n    if (flagEnabled) {\n      newFeatureFlags = newFeatureFlags | 0x10;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flagEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0xf);\n      if (result == 1) {\n        flagEnabled = false;\n      }\n      else if ((featureFlags & 0x20) == 0) {\n        flagEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0x15);\n        if (result == 0) {\n          flagEnabled = false;\n        }\n        else {\n          flagEnabled = true;\n        }\n      }\n    }\n    if (flagEnabled) {\n      newFeatureFlags = newFeatureFlags | 0x20;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flagEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x17);\n      if (result == 1) {\n        flagEnabled = false;\n      }\n      else if ((featureFlags & 0x40) == 0) {\n        flagEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0x16);\n        if (result == 0) {\n          flagEnabled = false;\n        }\n        else {\n          flagEnabled = true;\n        }\n      }\n    }\n    if (flagEnabled) {\n      newFeatureFlags = newFeatureFlags | 0x40;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flagEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x2d);\n      if (result == 1) {\n        flagEnabled = false;\n      }\n      else if ((featureFlags & 0x80) == 0) {\n        flagEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0x17);\n        if (result == 0) {\n          flagEnabled = false;\n        }\n        else {\n          flagEnabled = true;\n        }\n      }\n    }\n    if (flagEnabled) {\n      newFeatureFlags = newFeatureFlags | 0x80;\n    }\n    FUN_08000be8(2,newFeatureFlags,0);\n  }\n  featureFlags = DAT_20000177;\n  if (DAT_200001eb != '\\0') {\n    result = FUN_080036ac();\n    if (result == 0) {\n      newFeatureFlags = 0;\n    }\n    else {\n      result = FUN_080036ac(0x2e);\n      if (result == 1) {\n        newFeatureFlags = 0;\n      }\n      else if ((featureFlags & 1) == 0) {\n        newFeatureFlags = 0;\n      }\n      else {\n        result = FUN_08008a6c(0x18);\n        if (result == 0) {\n          newFeatureFlags = 0;\n        }\n        else {\n          newFeatureFlags = 1;\n        }\n      }\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flagEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x2f);\n      if (result == 1) {\n        flagEnabled = false;\n      }\n      else if ((featureFlags & 2) == 0) {\n        flagEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0x19);\n        if (result == 0) {\n          flagEnabled = false;\n        }\n        else {\n          flagEnabled = true;\n        }\n      }\n    }\n    if (flagEnabled) {\n      newFeatureFlags = newFeatureFlags | 2;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flagEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x30);\n      if (result == 1) {\n        flagEnabled = false;\n      }\n      else if ((featureFlags & 4) == 0) {\n        flagEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1a);\n        if (result == 0) {\n          flagEnabled = false;\n        }\n        else {\n          flagEnabled = true;\n        }\n      }\n    }\n    if (flagEnabled) {\n      newFeatureFlags = newFeatureFlags | 4;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flagEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x31);\n      if (result == 1) {\n        flagEnabled = false;\n      }\n      else if ((featureFlags & 8) == 0) {\n        flagEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1b);\n        if (result == 0) {\n          flagEnabled = false;\n        }\n        else {\n          flagEnabled = true;\n        }\n      }\n    }\n    if (flagEnabled) {\n      newFeatureFlags = newFeatureFlags | 8;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flagEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x22);\n      if (result == 1) {\n        flagEnabled = false;\n      }\n      else if ((featureFlags & 0x10) == 0) {\n        flagEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1c);\n        if (result == 0) {\n          flagEnabled = false;\n        }\n        else {\n          flagEnabled = true;\n        }\n      }\n    }\n    if (flagEnabled) {\n      newFeatureFlags = newFeatureFlags | 0x10;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flagEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x23);\n      if (result == 1) {\n        flagEnabled = false;\n      }\n      else if ((featureFlags & 0x20) == 0) {\n        flagEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1d);\n        if (result == 0) {\n          flagEnabled = false;\n        }\n        else {\n          flagEnabled = true;\n        }\n      }\n    }\n    if (flagEnabled) {\n      newFeatureFlags = newFeatureFlags | 0x20;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flagEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x2b);\n      if (result == 1) {\n        flagEnabled = false;\n      }\n      else if ((featureFlags & 0x40) == 0) {\n        flagEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1e);\n        if (result == 0) {\n          flagEnabled = false;\n        }\n        else {\n          flagEnabled = true;\n        }\n      }\n    }\n    if (flagEnabled) {\n      newFeatureFlags = newFeatureFlags | 0x40;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flagEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x32);\n      if (result == 1) {\n        flagEnabled = false;\n      }\n      else if ((featureFlags & 0x80) == 0) {\n        flagEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1f);\n        if (result == 0) {\n          flagEnabled = false;\n        }\n        else {\n          flagEnabled = true;\n        }\n      }\n    }\n    if (flagEnabled) {\n      newFeatureFlags = newFeatureFlags | 0x80;\n    }\n    FUN_08000be8(3,newFeatureFlags,0);\n  }\n  featureFlags = DAT_20000178;\n  if (DAT_200001ec != '\\0') {\n    result = FUN_080036ac();\n    if (result == 0) {\n      newFeatureFlags = 0;\n    }\n    else {\n      result = FUN_080036ac(0x29);\n      if (result == 1) {\n        newFeatureFlags = 0;\n      }\n      else if ((featureFlags & 1) == 0) {\n        newFeatureFlags = 0;\n      }\n      else {\n        result = FUN_08008a6c(0x20);\n        if (result == 0) {\n          newFeatureFlags = 0;\n        }\n        else {\n          newFeatureFlags = 1;\n        }\n      }\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flagEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x28);\n      if (result == 1) {\n        flagEnabled = false;\n      }\n      else if ((featureFlags & 2) == 0) {\n        flagEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0x21);\n        if (result == 0) {\n          flagEnabled = false;\n        }\n        else {\n          flagEnabled = true;\n        }\n      }\n    }\n    if (flagEnabled) {\n      newFeatureFlags = newFeatureFlags | 2;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flagEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x26);\n      if (result == 1) {\n        flagEnabled = false;\n      }\n      else if ((featureFlags & 4) == 0) {\n        flagEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0x22);\n        if (result == 0) {\n          flagEnabled = false;\n        }\n        else {\n          flagEnabled = true;\n        }\n      }\n    }\n    if (flagEnabled) {\n      newFeatureFlags = newFeatureFlags | 4;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flagEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x25);\n      if (result == 1) {\n        flagEnabled = false;\n      }\n      else if ((featureFlags & 8) == 0) {\n        flagEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0x23);\n        if (result == 0) {\n          flagEnabled = false;\n        }\n        else {\n          flagEnabled = true;\n        }\n      }\n    }\n    if (flagEnabled) {\n      newFeatureFlags = newFeatureFlags | 8;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flagEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0xc);\n      if (result == 1) {\n        flagEnabled = false;\n      }\n      else if ((featureFlags & 0x10) == 0) {\n        flagEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0x24);\n        if (result == 0) {\n          flagEnabled = false;\n        }\n        else {\n          flagEnabled = true;\n        }\n      }\n    }\n    if (flagEnabled) {\n      newFeatureFlags = newFeatureFlags | 0x10;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flagEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0xb);\n      if (result == 1) {\n        flagEnabled = false;\n      }\n      else if ((featureFlags & 0x20) == 0) {\n        flagEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0x25);\n        if (result == 0) {\n          flagEnabled = false;\n        }\n        else {\n          flagEnabled = true;\n        }\n      }\n    }\n    if (flagEnabled) {\n      newFeatureFlags = newFeatureFlags | 0x20;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flagEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x1c);\n      if (result == 1) {\n        flagEnabled = false;\n      }\n      else if ((featureFlags & 0x40) == 0) {\n        flagEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0x26);\n        if (result == 0) {\n          flagEnabled = false;\n        }\n        else {\n          flagEnabled = true;\n        }\n      }\n    }\n    if (flagEnabled) {\n      newFeatureFlags = newFeatureFlags | 0x40;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flagEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x1b);\n      if (result == 1) {\n        flagEnabled = false;\n      }\n      else if ((featureFlags & 0x80) == 0) {\n        flagEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0x27);\n        if (result == 0) {\n          flagEnabled = false;\n        }\n        else {\n          flagEnabled = true;\n        }\n      }\n    }\n    if (flagEnabled) {\n      newFeatureFlags = newFeatureFlags | 0x80;\n    }\n    FUN_08000be8(4,newFeatureFlags,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000ef8": "configure_features_08000ef8",
                "bVar1": "featureFlags",
                "iVar2": "result",
                "bVar3": "flagEnabled",
                "bVar4": "newFeatureFlags"
            },
            "calling": [
                "FUN_080022f8"
            ],
            "called": [
                "FUN_08000be8",
                "FUN_080036ac",
                "FUN_08008a6c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001b48": {
            "entrypoint": "0x08001b48",
            "current_name": "initialize_gateway_08001b48",
            "code": "\nvoid initializeGateway_08001b48(void)\n\n{\n  FUN_08002e44(&DAT_200003d4,\"/home/bo/p2im/p2im-real_firmware_scratch/Gateway/StandardFirmata.ino\",\n               2,5);\n  FUN_08002f2c(&DAT_200003d4,0xe0,0x8000215);\n  FUN_08002f2c(&DAT_200003d4,0x90,&address1);\n  FUN_08002f2c(&DAT_200003d4,0xc0,0x8000489);\n  FUN_08002f2c(&DAT_200003d4,0xd0,&address2);\n  FUN_08002f2c(&DAT_200003d4,0xf4,0x80005f9);\n  FUN_08002f2c(&DAT_200003d4,0xf5,&address3);\n  FUNC_08002f94(&DAT_200003d4,0xf0,0x8001cd1);\n  FUN_08002f84(&DAT_200003d4,0xff,0x8000aed);\n  FUN_08003048(&DAT_200003d4,0xe100);\n  FUN_08000aec();\n  FUN_0800018c(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001b48": "initialize_gateway_08001b48",
                "LAB_080002ec_1": "address1",
                "LAB_08000c18_1": "address2",
                "LAB_080001a8_1": "address3"
            },
            "calling": [
                "FUN_08008f1c"
            ],
            "called": [
                "FUN_08002f84",
                "FUN_08000aec",
                "FUN_08003048",
                "FUN_08002f94",
                "FUN_08002f2c",
                "FUN_08002e44",
                "FUN_0800018c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001bf8": {
            "entrypoint": "0x08001bf8",
            "current_name": "initialize_data_08001bf8",
            "code": "\nvoid initializeData_08001bf8(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  FUN_0800288c(&DAT_20000314,input1,input3,input4,input4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001bf8": "initialize_data_08001bf8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08001c18"
            ],
            "called": [
                "FUN_0800288c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c08": {
            "entrypoint": "0x08001c08",
            "current_name": "initialize_data_08001c08",
            "code": "\nundefined initializeData_08001c08(void)\n\n{\n  undefined result;\n  \n  result = FUN_08002720(&DAT_20000314);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08001c08": "initialize_data_08001c08",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08001c18"
            ],
            "called": [
                "FUN_08002720"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c18": {
            "entrypoint": "0x08001c18",
            "current_name": "process_i2_c_data_08001c18",
            "code": "\nvoid processI2CData_08001c18(undefined4 deviceAddress,uint dataLength,int expectedLength,undefined4 deviceConfig)\n\n{\n  undefined receivedByte;\n  int receivedBytesCount;\n  int currentByteIndex;\n  bool isByteReceived;\n  \n  if (dataLength == 0xffffffff) {\n    dataLength = 0;\n  }\n  else {\n    FUN_08002a30(&DAT_20000314,deviceAddress);\n    FUN_08001bf8(dataLength & 0xff);\n    FUN_08002a58(&DAT_20000314,deviceConfig);\n  }\n  FUN_08002c14(&DAT_20000314,deviceAddress,expectedLength);\n  receivedBytesCount = FUN_0800270c(&DAT_20000314);\n  if (expectedLength < receivedBytesCount) {\n    FUN_08002f14(&DAT_200003d4,\"I2C: Too many bytes received\");\n  }\n  else {\n    receivedBytesCount = FUN_0800270c(&DAT_20000314);\n    if (receivedBytesCount < expectedLength) {\n      FUN_08002f14(&DAT_200003d4,\"I2C: Too few bytes received\");\n    }\n  }\n  DAT_20000130 = (undefined)deviceAddress;\n  DAT_20000131 = (undefined)dataLength;\n  receivedBytesCount = 0;\n  while( true ) {\n    if (receivedBytesCount < expectedLength) {\n      currentByteIndex = FUN_0800270c(&DAT_20000314);\n      if (currentByteIndex == 0) {\n        isByteReceived = false;\n      }\n      else {\n        isByteReceived = true;\n      }\n    }\n    else {\n      isByteReceived = false;\n    }\n    if (!isByteReceived) break;\n    receivedByte = FUN_08001c08();\n    (&DAT_20000132)[receivedBytesCount] = receivedByte;\n    receivedBytesCount = receivedBytesCount + 1;\n  }\n  FUN_08002f0a(&DAT_200003d4,0x77,expectedLength + 2U & 0xff,&DAT_20000130);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001c18": "process_i2_c_data_08001c18",
                "param_1": "deviceAddress",
                "param_2": "dataLength",
                "param_3": "expectedLength",
                "param_4": "deviceConfig",
                "uVar1": "receivedByte",
                "iVar2": "receivedBytesCount",
                "iVar3": "currentByteIndex",
                "bVar4": "isByteReceived"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_080022f8"
            ],
            "called": [
                "FUN_08002f14",
                "FUN_08002f0a",
                "FUN_0800270c",
                "FUN_08002a58",
                "FUN_08001bf8",
                "FUN_08002c14",
                "FUN_08002a30",
                "FUN_08001c08"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cd0": {
            "entrypoint": "0x08001cd0",
            "current_name": "process_data_08001cd0",
            "code": "\nvoid processData_08001cd0(undefined4 opcode,int length,byte *data,undefined4 param)\n\n{\n  byte byteVar1;\n  byte byteVar2;\n  byte byteVar3;\n  undefined4 uintVar4;\n  byte byteVar5;\n  char charVar6;\n  int intVar;\n  int intVar2;\n  uint uintVar1;\n  uint uintVar2;\n  int intVar3;\n  bool boolVar;\n  \n  switch(opcode) {\n  case 0x69:\n    FUN_08002f1e(&DAT_200003d4,0xf0);\n    FUN_08002f1e(&DAT_200003d4,0x6a);\n    for (uintVar1 = 0; uintVar1 < 0x3c; uintVar1 = uintVar1 + 1 & 0xff) {\n      uintVar2 = uintVar1 - 0x2e & 0xff;\n      if (uintVar2 < 0xe) {\n        if (uintVar1 < 0x3c) {\n          intVar = (int)(char)(&DAT_0800a908)[uintVar1];\n        }\n        else {\n          intVar = -1;\n        }\n        intVar = FUN_080036ac(intVar);\n        if (intVar == 0) {\n          uintVar2 = 0x7f;\n        }\n        else {\n          if (uintVar1 < 0x3c) {\n            intVar = (int)(char)(&DAT_0800a908)[uintVar1];\n          }\n          else {\n            intVar = -1;\n          }\n          intVar = FUN_080036ac(intVar);\n          if (intVar == 1) {\n            uintVar2 = 0x7f;\n          }\n        }\n      }\n      else {\n        uintVar2 = 0x7f;\n      }\n      FUN_08002f1e(&DAT_200003d4,uintVar2);\n    }\n    FUN_08002f1e(&DAT_200003d4,0xf7);\n    break;\n  case 0x6b:\n    FUN_08002f1e(&DAT_200003d4,0xf0);\n    FUN_08002f1e(&DAT_200003d4,0x6c);\n    for (uintVar1 = 0; uintVar1 < 0x3c; uintVar1 = uintVar1 + 1 & 0xff) {\n      if (uintVar1 < 0x3c) {\n        if ((&DAT_0800a908)[uintVar1] == -1) {\n          boolVar = false;\n        }\n        else {\n          intVar = FUN_080036ac();\n          if (intVar == 0) {\n            boolVar = false;\n          }\n          else {\n            intVar = FUN_080036ac((int)(char)(&DAT_0800a908)[uintVar1]);\n            if (intVar == 1) {\n              boolVar = false;\n            }\n            else {\n              boolVar = true;\n            }\n          }\n        }\n      }\n      else {\n        boolVar = false;\n      }\n      if (boolVar) {\n        FUN_08002f1e(&DAT_200003d4,0);\n        FUN_08002f1e(&DAT_200003d4,1);\n        FUN_08002f1e(&DAT_200003d4,0xb);\n        FUN_08002f1e(&DAT_200003d4,1);\n        FUN_08002f1e(&DAT_200003d4,1);\n        FUN_08002f1e(&DAT_200003d4,1);\n      }\n      if ((uintVar1 - 0x2e & 0xff) < 0xe) {\n        if (uintVar1 < 0x3c) {\n          intVar = (int)(char)(&DAT_0800a908)[uintVar1];\n        }\n        else {\n          intVar = -1;\n        }\n        intVar = FUN_080036ac(intVar);\n        if (intVar == 0) {\n          boolVar = false;\n        }\n        else {\n          if (uintVar1 < 0x3c) {\n            intVar = (int)(char)(&DAT_0800a908)[uintVar1];\n          }\n          else {\n            intVar = -1;\n          }\n          intVar = FUN_080036ac(intVar);\n          if (intVar == 1) {\n            boolVar = false;\n          }\n          else {\n            boolVar = true;\n          }\n        }\n      }\n      else {\n        boolVar = false;\n      }\n      if (boolVar) {\n        FUN_08002f1e(&DAT_200003d4,2);\n        FUN_08002f1e(&DAT_200003d4,10);\n      }\n      if (uintVar1 < 0x3c) {\n        if ((&DAT_0800a908)[uintVar1] == -1) {\n          intVar = 0;\n        }\n        else {\n          intVar = FUN_080036ac();\n          if (intVar == 0) {\n            intVar = 0;\n          }\n          else {\n            intVar = FUN_080036ac((int)(char)(&DAT_0800a908)[uintVar1]);\n            if (intVar == 1) {\n              intVar = 0;\n            }\n            else {\n              intVar = FUN_0800738a((int)(char)(&DAT_0800a908)[uintVar1],&DAT_0800a6cc);\n            }\n          }\n        }\n      }\n      else {\n        intVar = 0;\n      }\n      if (intVar != 0) {\n        FUN_08002f1e(&DAT_200003d4,3);\n        FUN_08002f1e(&DAT_200003d4,8);\n      }\n      if (uintVar1 < 0x3c) {\n        if ((&DAT_0800a908)[uintVar1] == -1) {\n          boolVar = false;\n        }\n        else {\n          intVar = FUN_080036ac();\n          if (intVar == 0) {\n            boolVar = false;\n          }\n          else {\n            intVar = FUN_080036ac((int)(char)(&DAT_0800a908)[uintVar1]);\n            if (intVar == 1) {\n              boolVar = false;\n            }\n            else {\n              boolVar = true;\n            }\n          }\n        }\n      }\n      else {\n        boolVar = false;\n      }\n      if (boolVar) {\n        FUN_08002f1e(&DAT_200003d4,4);\n        FUN_08002f1e(&DAT_200003d4,0xe);\n      }\n      if (uintVar1 < 0x3c) {\n        if ((&DAT_0800a908)[uintVar1] == -1) {\n          intVar = 0;\n        }\n        else {\n          intVar = FUN_080036ac();\n          if (intVar == 0) {\n            intVar = 0;\n          }\n          else {\n            intVar = FUN_080036ac((int)(char)(&DAT_0800a908)[uintVar1]);\n            if (intVar == 1) {\n              intVar = 0;\n            }\n            else {\n              intVar = FUN_0800738a((int)(char)(&DAT_0800a908)[uintVar1],&DAT_0800a69c);\n              if (intVar == 0) {\n                intVar = FUN_0800738a((int)(char)(&DAT_0800a908)[uintVar1],&DAT_0800a66c);\n              }\n            }\n          }\n        }\n      }\n      else {\n        intVar = 0;\n      }\n      if (intVar != 0) {\n        FUN_08002f1e(&DAT_200003d4,6);\n        FUN_08002f1e(&DAT_200003d4,1);\n      }\n      FUN_08002f1e(&DAT_200003d4,0x7f);\n    }\n    FUN_08002f1e(&DAT_200003d4,0xf7);\n    return;\n  case 0x6d:\n    if (length != 0) {\n      byteVar1 = *data;\n      FUN_08002f1e(&DAT_200003d4,0xf0);\n      FUN_08002f1e(&DAT_200003d4,0x6e);\n      FUN_08002f1e(&DAT_200003d4,byteVar1);\n      if (byteVar1 < 0x3c) {\n        uintVar4 = FUN_08002fa0(&DAT_200003d4,byteVar1);\n        FUN_08002f1e(&DAT_200003d4,uintVar4);\n        uintVar1 = FUN_08002fba(&DAT_200003d4,byteVar1);\n        FUN_08002f1e(&DAT_200003d4,uintVar1 & 0x7f);\n        uintVar1 = FUN_08002fba(&DAT_200003d4,byteVar1);\n        if ((uintVar1 & 0xff80) != 0) {\n          intVar = FUN_08002fba(&DAT_200003d4,byteVar1);\n          FUN_08002f1e(&DAT_200003d4,(uint)(intVar << 0x12) >> 0x19);\n        }\n        uintVar1 = FUN_08002fba(&DAT_200003d4,byteVar1);\n        if ((uintVar1 & 0xc000) != 0) {\n          intVar = FUN_08002fba(&DAT_200003d4,byteVar1);\n          FUN_08002f1e(&DAT_200003d4,(uint)(intVar << 0xb) >> 0x19);\n        }\n      }\n      FUN_08002f1e(&DAT_200003d4,0xf7);\n      return;\n    }\n    break;\n  case 0x6f:\n    if (1 < length) {\n      uintVar1 = (uint)data[1];\n      if (2 < length) {\n        uintVar1 = uintVar1 | (uint)data[2] << 7;\n      }\n      if (3 < length) {\n        uintVar1 = uintVar1 | (uint)data[3] << 0xe;\n      }\n      FUN_08000214(*data,uintVar1);\n      return;\n    }\n    break;\n  case 0x70:\n    if (4 < length) {\n      uintVar1 = (uint)*data;\n      byteVar1 = data[1];\n      byteVar5 = data[2];\n      byteVar2 = data[3];\n      byteVar3 = data[4];\n      if (uintVar1 < 0x3c) {\n        if ((&DAT_0800a908)[uintVar1] == -1) {\n          boolVar = false;\n        }\n        else {\n          intVar = FUN_080036ac();\n          if (intVar == 0) {\n            boolVar = false;\n          }\n          else {\n            intVar = FUN_080036ac((int)(char)(&DAT_0800a908)[uintVar1]);\n            if (intVar == 1) {\n              boolVar = false;\n            }\n            else {\n              boolVar = true;\n            }\n          }\n        }\n      }\n      else {\n        boolVar = false;\n      }\n      if (boolVar) {\n        if ((byte)(&DAT_200001f0)[uintVar1] < 0xc) {\n          intVar = FUN_080026f8(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[uintVar1] * 3);\n        }\n        else {\n          intVar = 0;\n        }\n        if (intVar != 0) {\n          FUN_08000588(uintVar1);\n        }\n        FUN_08000500(uintVar1,(uint)byteVar1 + (uint)byteVar5 * 0x80,(uint)byteVar2 + (uint)byteVar3 * 0x80);\n        FUN_080005f8(uintVar1,4);\n        return;\n      }\n    }\n    break;\n  case 0x76:\n    byteVar1 = data[1];\n    byteVar5 = byteVar1 & 0x18;\n    if ((byteVar1 & 0x20) != 0) {\n      FUN_08002f14(&DAT_200003d4,\"10-bit addressing not supported\",byteVar5,byteVar1,param);\n      return;\n    }\n    byteVar2 = *data;\n    boolVar = (byteVar1 & 0x40) == 0;\n    if (byteVar5 < 0x19) {\n      switch(byteVar5) {\n      case 0:\n        FUN_08002a30(&DAT_20000314,byteVar2);\n        for (uintVar1 = 2; (int)uintVar1 < length; uintVar1 = uintVar1 + 2 & 0xff) {\n          FUN_08001bf8(data[uintVar1 + 1] * -0x80 + data[uintVar1]);\n        }\n        FUN_08002ac0(&DAT_20000314);\n        return;\n      case 8:\n        if (length == 6) {\n          intVar = (uint)data[2] + (uint)data[3] * 0x80;\n          charVar6 = data[4] + data[5] * -0x80;\n        }\n        else {\n          charVar6 = data[2] + data[3] * -0x80;\n          intVar = -1;\n        }\n        FUN_08001c18(byteVar2,intVar,charVar6);\n        return;\n      case 0x10:\n        if (DAT_20000004 + 1 < 8) {\n          if (length == 6) {\n            intVar = (uint)data[2] + (uint)data[3] * 0x80;\n            charVar6 = data[4] + data[5] * -0x80;\n          }\n          else {\n            charVar6 = data[2] + data[3] * -0x80;\n            intVar = -1;\n          }\n          DAT_20000004 = DAT_20000004 + '\\x01';\n          intVar2 = (int)DAT_20000004;\n          intVar3 = intVar2 * 0xc;\n          (&DAT_20000188)[intVar3] = byteVar2;\n          (&DAT_2000018c)[intVar2 * 3] = intVar;\n          (&DAT_20000190)[intVar3] = charVar6;\n          (&DAT_20000191)[intVar3] = boolVar;\n          return;\n        }\n        FUN_08002f14(&DAT_200003d4,\"too many queries\",(int)DAT_20000004,boolVar,param);\n        return;\n      case 0x18:\n        if (DAT_20000004 < 1) {\n          DAT_20000004 = 0xff;\n          return;\n        }\n      }\n      for (uintVar1 = 0; intVar = DAT_20000004 + 1, (int)uintVar1 < intVar; uintVar1 = uintVar1 + 1 & 0xff) {\n        if (byteVar2 == (&DAT_20000188)[uintVar1 * 0xc]) goto LAB_08001e66;\n      }\n      uintVar1 = 0;\nLAB_08001e66:\n      for (; (int)uintVar1 < intVar; uintVar1 = uintVar1 + 1 & 0xff) {\n        if (uintVar1 < 8) {\n          intVar2 = (uintVar1 + 1) * 0xc;\n          intVar3 = uintVar1 * 0xc;\n          (&DAT_20000188)[intVar3] = (&DAT_20000188)[intVar2];\n          (&DAT_2000018c)[uintVar1 * 3] = (&DAT_2000018c)[(uintVar1 + 1) * 3];\n          (&DAT_20000190)[intVar3] = (&DAT_20000190)[intVar2];\n          (&DAT_20000191)[intVar3] = (&DAT_20000191)[intVar2];\n        }\n      }\n      DAT_20000004 = DAT_20000004 + -1;\n      return;\n    }\n    break;\n  case 0x78:\n    intVar = (uint)*data + (uint)data[1] * 0x80;\n    if ((1 < length) && (intVar != 0)) {\n      DAT_2000012c = intVar;\n    }\n    if (DAT_20000170 == '\\0') {\n      FUN_08000a64();\n      return;\n    }\n    break;\n  case 0x7a:\n    if ((1 < length) &&\n       (DAT_20000008 = (uint)*data + (uint)data[1] * 0x80, DAT_20000008 == 0)) {\n      DAT_20000008 = 1;\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001cd0": "process_data_08001cd0",
                "param_1": "opcode",
                "param_2": "length",
                "param_3": "data",
                "param_4": "param",
                "bVar1": "byteVar1",
                "bVar2": "byteVar2",
                "bVar3": "byteVar3",
                "uVar4": "uintVar4",
                "bVar5": "byteVar5",
                "cVar6": "charVar6",
                "iVar7": "intVar",
                "iVar8": "intVar2",
                "uVar9": "uintVar1",
                "uVar10": "uintVar2",
                "iVar11": "intVar3",
                "bVar12": "boolVar"
            },
            "calling": [],
            "called": [
                "FUN_08002f1e",
                "FUN_08002f14",
                "FUN_080036ac",
                "FUN_08001bf8",
                "FUN_0800738a",
                "FUN_08002ac0",
                "FUN_08001c18",
                "FUN_08002fba",
                "FUN_08002a30",
                "FUN_080005f8",
                "FUN_08000588",
                "FUN_08002fa0",
                "FUN_08000a64",
                "FUN_08000500",
                "FUN_08000214",
                "FUN_080026f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080022f8": {
            "entrypoint": "0x080022f8",
            "current_name": "initialize_system_080022f8",
            "code": "\nvoid initializeSystem_080022f8(void)\n\n{\n  bool isConditionMet;\n  int result;\n  undefined4 value;\n  uint counter1;\n  uint counter2;\n  \n  FUN_08000ef8();\n  while (result = FUN_08002ec4(&DAT_200003d4), result != 0) {\n    FUN_08002ed2(&DAT_200003d4);\n  }\n  DAT_20000118 = FUN_08008abc();\n  if (DAT_20000008 < (uint)(DAT_20000118 - DAT_2000017c)) {\n    DAT_2000017c = DAT_2000017c + DAT_20000008;\n    for (counter1 = 0; counter1 < 0x3c; counter1 = counter1 + 1 & 0xff) {\n      counter2 = counter1 - 0x2e & 0xff;\n      if (counter2 < 0xe) {\n        if (counter1 < 0x3c) {\n          result = (int)(char)(&DAT_0800a908)[counter1];\n        }\n        else {\n          result = -1;\n        }\n        result = FUN_080036ac(result);\n        if (result == 0) {\n          isConditionMet = false;\n        }\n        else {\n          if (counter1 < 0x3c) {\n            result = (int)(char)(&DAT_0800a908)[counter1];\n          }\n          else {\n            result = -1;\n          }\n          result = FUN_080036ac(result);\n          if (result == 1) {\n            isConditionMet = false;\n          }\n          else {\n            result = FUN_08002fa0(&DAT_200003d4,counter1);\n            if (result == 2) {\n              isConditionMet = true;\n            }\n            else {\n              isConditionMet = false;\n            }\n          }\n        }\n      }\n      else {\n        isConditionMet = false;\n      }\n      if ((isConditionMet) && ((DAT_20000114 >> counter2 & 1U) != 0)) {\n        value = FUN_08008880(counter2);\n        FUN_08002ef2(&DAT_200003d4,counter2,value);\n      }\n    }\n    if (-1 < DAT_20000004) {\n      for (counter1 = 0; (int)counter1 < DAT_20000004 + 1; counter1 = counter1 + 1 & 0xff) {\n        result = counter1 * 0xc;\n        FUN_08001c18((&DAT_20000188)[result],(&DAT_2000018c)[counter1 * 3],(&DAT_20000190)[result],\n                     (&DAT_20000191)[result]);\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080022f8": "initialize_system_080022f8",
                "bVar1": "isConditionMet",
                "iVar2": "result",
                "uVar3": "value",
                "uVar4": "counter1",
                "uVar5": "counter2"
            },
            "calling": [
                "FUN_08008f1c"
            ],
            "called": [
                "FUN_08002ed2",
                "FUN_08008abc",
                "FUN_08002fa0",
                "FUN_08008880",
                "FUN_080036ac",
                "FUN_08002ef2",
                "FUN_08001c18",
                "FUN_08002ec4",
                "FUN_08000ef8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002400": {
            "entrypoint": "0x08002400",
            "current_name": "check_for_bit_flag_08002400",
            "code": "\nundefined4 check_for_bit_flag_08002400(int input_param)\n\n{\n  uint iteration_count;\n  \n  iteration_count = 0;\n  while( true ) {\n    if (0xb < iteration_count) {\n      return 0;\n    }\n    if (((&DAT_20000258)[(input_param * 0xc + iteration_count) * 8] & 0x40) != 0) break;\n    iteration_count = iteration_count + 1 & 0xff;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002400": "check_for_bit_flag_08002400",
                "param_1": "input_param",
                "uVar1": "iteration_count"
            },
            "calling": [
                "FUN_08002644",
                "FUN_080025ac"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800242c": {
            "entrypoint": "0x0800242c",
            "current_name": "initialize_connection_0800242c",
            "code": "\nvoid initializeConnection_0800242c(undefined4 param1,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  FUN_08007648(param1,60000,0x5dc,&errorHandlingFunction,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800242c": "initialize_connection_0800242c",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "LAB_08002444_1": "errorHandlingFunction"
            },
            "calling": [
                "FUN_080025ac"
            ],
            "called": [
                "FUN_08007648"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002578": {
            "entrypoint": "0x08002578",
            "current_name": "initialize_system_08002578",
            "code": "\nvoid initializeSystem_08002578(void)\n\n{\n  FUN_080076e0();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002578": "initialize_system_08002578"
            },
            "calling": [
                "FUN_08002644"
            ],
            "called": [
                "FUN_080076e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002580": {
            "entrypoint": "0x08002580",
            "current_name": "update_value_08002580",
            "code": "\nvoid updateValue_08002580(byte *valueArray)\n\n{\n  char nextValue;\n  uint currentValue;\n  \n  currentValue = (uint)DAT_20000250;\n  if (0xb < currentValue) {\n    *valueArray = 0xff;\n    return;\n  }\n  nextValue = DAT_20000250 + 1;\n  *valueArray = DAT_20000250;\n  DAT_20000250 = nextValue;\n  *(undefined4 *)(&DAT_2000025c + currentValue * 8) = 0x5dc;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002580": "update_value_08002580",
                "param_1": "valueArray",
                "cVar1": "nextValue",
                "uVar2": "currentValue"
            },
            "calling": [
                "FUN_080004d4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025ac": {
            "entrypoint": "0x080025ac",
            "current_name": "process_data_080025ac",
            "code": "\nbyte processData_080025ac(byte *data,uint value,int paramA,int paramB)\n\n{\n  uint modifiedValue;\n  uint tempValue;\n  uint divisionResult;\n  int offset;\n  \n  if (*data < 0xc) {\n    FUN_08008990(value,1,paramA,*data,paramB);\n    tempValue = (uint)*data;\n    modifiedValue = (byte)(&DAT_20000258)[tempValue * 8] & 0xffffffc0 | value & 0x3f;\n    (&DAT_20000258)[tempValue * 8] = (char)modifiedValue;\n    offset = -paramA + 0x220;\n    if (offset < 0) {\n      offset = -paramA + 0x223;\n    }\n    data[1] = (byte)((uint)(offset << 0x16) >> 0x18);\n    offset = -paramB + 0x960;\n    if (offset < 0) {\n      offset = -paramB + 0x963;\n    }\n    data[2] = (byte)((uint)(offset << 0x16) >> 0x18);\n    divisionResult = *data / 0xc;\n    offset = FUN_08002400(divisionResult,modifiedValue,tempValue,(uint)*data * -0x55555555);\n    if (offset == 0) {\n      DAT_200002fc = (undefined)divisionResult;\n      FUN_0800242c();\n    }\n    (&DAT_20000258)[(uint)*data * 8] = (&DAT_20000258)[(uint)*data * 8] | 0x40;\n  }\n  return *data;\n}\n\n",
            "renaming": {
                "FUN_080025ac": "process_data_080025ac",
                "param_1": "data",
                "param_2": "value",
                "param_3": "paramA",
                "param_4": "paramB",
                "uVar1": "modifiedValue",
                "uVar2": "tempValue",
                "uVar3": "divisionResult",
                "iVar4": "offset"
            },
            "calling": [
                "FUN_08002634",
                "FUN_08000500"
            ],
            "called": [
                "FUN_08008990",
                "FUN_0800242c",
                "FUN_08002400"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002634": {
            "entrypoint": "0x08002634",
            "current_name": "initialize_components_08002634",
            "code": "\nvoid initializeComponents_08002634(undefined4 component1,undefined4 component2,undefined4 component3,undefined4 component4)\n\n{\n  FUN_080025ac(component1,component2,0x220,0x960,component4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002634": "initialize_components_08002634",
                "param_1": "component1",
                "param_2": "component2",
                "param_3": "component3",
                "param_4": "component4"
            },
            "calling": [
                "FUN_08000500"
            ],
            "called": [
                "FUN_080025ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002644": {
            "entrypoint": "0x08002644",
            "current_name": "process_data_08002644",
            "code": "\nvoid processData_08002644(byte *data,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  byte byteVar;\n  uint intValue;\n  int returnValue;\n  \n  intValue = (uint)*data;\n  byteVar = (&DAT_20000258)[intValue * 8];\n  (&DAT_20000258)[intValue * 8] = byteVar & 0xbf;\n  returnValue = FUN_08002400(intValue / 0xc,param2,byteVar & 0xbf,intValue * -0x55555555,param4);\n  if (returnValue == 0) {\n    FUN_08002578(&DAT_200002b8);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002644": "process_data_08002644",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "bVar1": "byteVar",
                "uVar2": "intValue",
                "iVar3": "returnValue"
            },
            "calling": [
                "FUN_08000588"
            ],
            "called": [
                "FUN_08002400",
                "FUN_08002578"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800267c": {
            "entrypoint": "0x0800267c",
            "current_name": "update_memory_value_0800267c",
            "code": "\nvoid updateMemoryValue_0800267c(byte *memoryPointer,int newValue)\n\n{\n  int index;\n  \n  if (*memoryPointer < 0xc) {\n    index = (0x88 - (char)memoryPointer[1]) * 4;\n    if ((index - newValue == 0 || index < newValue) &&\n       (index = (600 - (char)memoryPointer[2]) * 4,\n       newValue == index || newValue + (600 - (char)memoryPointer[2]) * -4 < 0 != SBORROW4(newValue,index)))\n    {\n      index = newValue;\n    }\n    *(int *)(&DAT_2000025c + (uint)*memoryPointer * 8) = index;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800267c": "update_memory_value_0800267c",
                "param_1": "memoryPointer",
                "param_2": "newValue",
                "iVar1": "index"
            },
            "calling": [
                "FUN_080026b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080026b0": {
            "entrypoint": "0x080026b0",
            "current_name": "update_parameter_value_080026b0",
            "code": "\nvoid updateParameterValue_080026b0(int inputParam1,int inputParam2)\n\n{\n  if (inputParam2 < 0x220) {\n    if (inputParam2 < 0) {\n      inputParam2 = 0;\n    }\n    else if (0xb4 < inputParam2) {\n      inputParam2 = 0xb4;\n    }\n    inputParam2 = FUN_08008ef4(inputParam2,0,0xb4,(0x88 - *(char *)(inputParam1 + 1)) * 4,\n                           (600 - *(char *)(inputParam1 + 2)) * 4);\n  }\n  FUN_0800267c(inputParam1,inputParam2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080026b0": "update_parameter_value_080026b0",
                "param_1": "inputParam1",
                "param_2": "inputParam2"
            },
            "calling": [
                "FUN_0800021a"
            ],
            "called": [
                "FUN_08008ef4",
                "FUN_0800267c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080026f8": {
            "entrypoint": "0x080026f8",
            "current_name": "bitwise_extraction_080026f8",
            "code": "\nunsigned_integer bitwise_extraction_080026f8(input_byte_type *input_byte)\n\n{\n  return ((unsigned_integer)(input_byte_type)(&DAT_20000258)[(unsigned_integer)*input_byte * 8] << 0x19) >> 0x1f;\n}\n\n",
            "renaming": {
                "FUN_080026f8": "bitwise_extraction_080026f8",
                "param_1": "input_byte",
                "uint": "unsigned_integer",
                "byte": "input_byte_type"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800270c": {
            "entrypoint": "0x0800270c",
            "current_name": "calculate_difference_0800270c",
            "code": "\nint calculate_difference_0800270c(void)\n\n{\n  return (uint)DAT_200003b7 - (uint)DAT_200003b5;\n}\n\n",
            "renaming": {
                "FUN_0800270c": "calculate_difference_0800270c"
            },
            "calling": [
                "FUN_08001c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002720": {
            "entrypoint": "0x08002720",
            "current_name": "get_next_byte_from_buffer_08002720",
            "code": "\nuint get_next_byte_from_buffer_08002720(void)\n\n{\n  uint buffer_index;\n  \n  buffer_index = (uint)DAT_200003b5;\n  if (buffer_index < DAT_200003b7) {\n    DAT_200003b5 = DAT_200003b5 + 1;\n    return (uint)*(byte *)(DAT_200003c8 + buffer_index);\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08002720": "get_next_byte_from_buffer_08002720",
                "uVar1": "buffer_index"
            },
            "calling": [
                "FUN_08001c08"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080027f0": {
            "entrypoint": "0x080027f0",
            "current_name": "process_data_080027f0",
            "code": "\nuint processData_080027f0(int inputOffset,undefined4 param2,uint data)\n\n{\n  int result;\n  uint newDataSize;\n  \n  if (DAT_200003b4 == '\\0') {\n    result = FUN_08007ede(inputOffset + 0x14,param2,data & 0xffff);\n    if (result == 0) {\n      return data;\n    }\n    return 0;\n  }\n  newDataSize = DAT_200003b8 + data;\n  if (DAT_200003c5 < newDataSize) {\n    if (newDataSize < 0x20) {\n      newDataSize = 0x20;\n    }\n    DAT_200003cc = FUN_08009908(DAT_200003cc,newDataSize);\n    if (DAT_200003cc == 0) {\n      DAT_200003c5 = 0;\n    }\n    else {\n      DAT_200003c5 = (byte)newDataSize;\n    }\n  }\n  if (DAT_200003cc == 0) {\n    *(undefined4 *)(inputOffset + 4) = 1;\n    return 0;\n  }\n  FUN_080091b0((uint)DAT_200003b6 + DAT_200003cc,param2,data);\n  DAT_200003b6 = DAT_200003b6 + (char)data;\n  DAT_200003b8 = DAT_200003b6;\n  return data;\n}\n\n",
            "renaming": {
                "FUN_080027f0": "process_data_080027f0",
                "param_1": "inputOffset",
                "param_2": "param2",
                "param_3": "data",
                "iVar1": "result",
                "uVar2": "newDataSize"
            },
            "calling": [],
            "called": [
                "FUN_080091b0",
                "FUN_08009908",
                "FUN_08007ede"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800288c": {
            "entrypoint": "0x0800288c",
            "current_name": "write_data_0800288c",
            "code": "\nundefined4 writeData_0800288c(int bufferPointer,undefined data)\n\n{\n  undefined4 success;\n  int result;\n  uint newSize;\n  undefined byteData;\n  \n  byteData = data;\n  if (DAT_200003b4 == '\\0') {\n    result = FUN_08007ede(bufferPointer + 0x14,&byteData,1);\n    if (result == 0) {\n      success = 1;\n    }\n    else {\n      success = 0;\n    }\n  }\n  else {\n    newSize = DAT_200003b8 + 1;\n    if (DAT_200003c5 < newSize) {\n      if (newSize < 0x20) {\n        newSize = 0x20;\n      }\n      DAT_200003cc = FUN_08009908(DAT_200003cc,newSize);\n      if (DAT_200003cc == 0) {\n        DAT_200003c5 = 0;\n      }\n      else {\n        DAT_200003c5 = (byte)newSize;\n      }\n    }\n    if (DAT_200003cc == 0) {\n      *(undefined4 *)(bufferPointer + 4) = 1;\n      success = 0;\n    }\n    else {\n      *(undefined *)(DAT_200003cc + (uint)DAT_200003b6) = byteData;\n      DAT_200003b6 = DAT_200003b6 + 1;\n      success = 1;\n      DAT_200003b8 = DAT_200003b6;\n    }\n  }\n  return success;\n}\n\n",
            "renaming": {
                "FUN_0800288c": "write_data_0800288c",
                "param_1": "bufferPointer",
                "param_2": "data",
                "uVar1": "success",
                "iVar2": "result",
                "uVar3": "newSize",
                "local_11": "byteData"
            },
            "calling": [
                "FUN_08001bf8"
            ],
            "called": [
                "FUN_08009908",
                "FUN_08007ede"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800291c": {
            "entrypoint": "0x0800291c",
            "current_name": "initialize_param_0800291c",
            "code": "\nvoid initializeParam_0800291c(undefined4 *paramArray)\n\n{\n  paramArray[1] = 0;\n  paramArray[2] = 1000;\n  *paramArray = &PTR_FUN_0800288c_1_0800a5a0;\n  *(undefined *)(paramArray + 0x1b) = 0x19;\n  *(undefined *)((int)paramArray + 0x6d) = 0x18;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800291c": "initialize_param_0800291c",
                "param_1": "paramArray"
            },
            "calling": [
                "FUN_08002948"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002948": {
            "entrypoint": "0x08002948",
            "current_name": "check_param_08002948",
            "code": "\nvoid checkParam_08002948(int param1,int param2)\n\n{\n  if (param1 != 1) {\n    return;\n  }\n  if (param2 == 0xffff) {\n    FUN_0800291c(&DAT_20000314);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002948": "check_param_08002948",
                "param_1": "param1",
                "param_2": "param2"
            },
            "calling": [
                "FUN_08002c1e"
            ],
            "called": [
                "FUN_0800291c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002968": {
            "entrypoint": "0x08002968",
            "current_name": "initialize_settings_08002968",
            "code": "\nvoid initializeSettings_08002968(int param1,uint param2)\n\n{\n  int shiftedValue;\n  int iVar2;\n  \n  DAT_200003b5 = 0;\n  DAT_200003b7 = 0;\n  if (DAT_200003c8 != 0) {\n    FUN_080091c6(DAT_200003c8,0,DAT_200003c4);\n  }\n  DAT_200003b6 = 0;\n  DAT_200003b8 = 0;\n  if (DAT_200003cc != 0) {\n    FUN_080091c6(DAT_200003cc,0,DAT_200003c5);\n  }\n  DAT_200003b4 = 0;\n  shiftedValue = (param2 & 0x7f) << 1;\n  *(char *)(param1 + 0x10) = (char)shiftedValue;\n  if (param2 == 0x33) {\n    *(undefined *)(param1 + 0x11) = 1;\n  }\n  else {\n    *(undefined *)(param1 + 0x11) = 0;\n  }\n  iVar2 = param1 + 0x14;\n  FUN_080077b0(iVar2,100000,0x4000,shiftedValue,*(undefined *)(param1 + 0x11));\n  if (*(char *)(param1 + 0x11) == '\\0') {\n    FUN_08007f8e(iVar2,&actionLabel1);\n    FUN_08007f7c(iVar2,&actionLabel2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002968": "initialize_settings_08002968",
                "param_1": "param1",
                "param_2": "param2",
                "iVar1": "shiftedValue",
                "LAB_08002774_1": "actionLabel1",
                "LAB_08002b00_1": "actionLabel2"
            },
            "calling": [
                "FUN_08002a1c"
            ],
            "called": [
                "FUN_080077b0",
                "FUN_08007f8e",
                "FUN_080091c6",
                "FUN_08007f7c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a1c": {
            "entrypoint": "0x08002a1c",
            "current_name": "execute_function_08002a1c",
            "code": "\nvoid executeFunction_08002a1c(undefined4 argument1,undefined argument2,undefined4 argument3,undefined4 argument4)\n\n{\n  FUN_08002968(argument1,argument2,argument3,argument4,argument4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a1c": "execute_function_08002a1c",
                "param_1": "argument1",
                "param_2": "argument2",
                "param_3": "argument3",
                "param_4": "argument4"
            },
            "calling": [
                "FUN_08002a26"
            ],
            "called": [
                "FUN_08002968"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a26": {
            "entrypoint": "0x08002a26",
            "current_name": "initialize_function_08002a26",
            "code": "\nvoid initializeFunction_08002a26(undefined4 parameter1,undefined4 parameter2,undefined4 parameter3,undefined4 parameter4)\n\n{\n  FUN_08002a1c(parameter1,0x33,parameter3,parameter4,parameter4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a26": "initialize_function_08002a26",
                "param_1": "parameter1",
                "param_2": "parameter2",
                "param_3": "parameter3",
                "param_4": "parameter4"
            },
            "calling": [
                "FUN_08000a64"
            ],
            "called": [
                "FUN_08002a1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a30": {
            "entrypoint": "0x08002a30",
            "current_name": "initialize_data_08002a30",
            "code": "\nvoid initializeData_08002a30(undefined4 unusedParam,int shiftAmount)\n\n{\n  DAT_200003b4 = 1;\n  DAT_200003d0 = (char)(shiftAmount << 1);\n  DAT_200003b6 = 0;\n  DAT_200003b8 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a30": "initialize_data_08002a30",
                "param_1": "unusedParam",
                "param_2": "shiftAmount"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08002b68",
                "FUN_08001c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a58": {
            "entrypoint": "0x08002a58",
            "current_name": "check_status_08002a58",
            "code": "\nundefined4 checkStatus_08002a58(int status)\n\n{\n  int errorCode;\n  undefined4 result;\n  \n  if (*(char *)(status + 0x11) == '\\0') {\n    result = 4;\n  }\n  else {\n    errorCode = FUN_08007e74(status + 0x14,DAT_200003d0,DAT_200003cc,DAT_200003b8);\n    if (errorCode == 0) {\n      result = 0;\n    }\n    else if (errorCode == 1) {\n      result = 1;\n    }\n    else {\n      result = 4;\n    }\n    if (DAT_200003cc != 0) {\n      FUN_080091c6(DAT_200003cc,0,DAT_200003c5);\n    }\n    DAT_200003b6 = 0;\n    DAT_200003b8 = 0;\n    DAT_200003b4 = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002a58": "check_status_08002a58",
                "param_1": "status",
                "iVar1": "errorCode",
                "uVar2": "result"
            },
            "calling": [
                "FUN_08002b68",
                "FUN_08002ac0",
                "FUN_08001c18"
            ],
            "called": [
                "FUN_080091c6",
                "FUN_08007e74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ac0": {
            "entrypoint": "0x08002ac0",
            "current_name": "execute_function_08002ac0",
            "code": "\nvoid executeFunction_08002ac0(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  FUN_08002a58(input1,1,input3,input4,input4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ac0": "execute_function_08002ac0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [
                "FUN_08002a58"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002acc": {
            "entrypoint": "0x08002acc",
            "current_name": "adjust_param_08002acc",
            "code": "\nvoid adjustParam_08002acc(uint inputSize,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  if (DAT_200003c4 < inputSize) {\n    if (inputSize < 0x20) {\n      inputSize = 0x20;\n    }\n    DAT_200003c8 = FUN_08009908(DAT_200003c8,inputSize,param3,(uint)DAT_200003c4,param4);\n    if (DAT_200003c8 == 0) {\n      DAT_200003c4 = 0;\n    }\n    else {\n      DAT_200003c4 = (byte)inputSize;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002acc": "adjust_param_08002acc",
                "param_1": "inputSize",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_08002b68"
            ],
            "called": [
                "FUN_08009908"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002b68": {
            "entrypoint": "0x08002b68",
            "current_name": "process_data_08002b68",
            "code": "\nundefined4\nprocess_data_08002b68(undefined4 *data_array,uint data_length,undefined4 data_type,uint param,byte byte_value)\n\n{\n  int result;\n  uint byte_count;\n  uint temp_param;\n  \n  byte_count = (uint)byte_value;\n  if (*(char *)((int)data_array + 0x11) == '\\0') {\n    return 0;\n  }\n  temp_param = param;\n  FUN_08002acc(data_type);\n  if (DAT_200003c8 != 0) {\n    if (byte_count != 0) {\n      FUN_08002a30(data_array,data_length);\n      if (3 < byte_count) {\n        byte_count = 3;\n      }\n      while( true ) {\n        if (byte_count == 0) break;\n        (**(code **)*data_array)(data_array,param >> ((byte_count - 1 & 0x1f) << 3) & 0xff);\n        byte_count = byte_count - 1 & 0xff;\n      }\n      FUN_08002a58(data_array,0);\n    }\n    result = FUN_08007f0e(data_array + 5,(data_length & 0x7f) << 1,DAT_200003c8,data_type,temp_param);\n    if (result != 0) {\n      data_type = 0;\n    }\n    DAT_200003b5 = 0;\n    DAT_200003b7 = (char)data_type;\n    return data_type;\n  }\n  data_array[1] = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002b68": "process_data_08002b68",
                "param_1": "data_array",
                "param_2": "data_length",
                "param_3": "data_type",
                "param_4": "param",
                "param_5": "byte_value",
                "iVar1": "result",
                "uVar2": "byte_count",
                "uVar3": "temp_param"
            },
            "calling": [
                "FUN_08002c00"
            ],
            "called": [
                "FUN_08007f0e",
                "FUN_08002a58",
                "FUN_08002acc",
                "FUN_08002a30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c00": {
            "entrypoint": "0x08002c00",
            "current_name": "initialize_application_08002c00",
            "code": "\nvoid initializeApplication_08002c00(void)\n\n{\n  FUN_08002b68();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c00": "initialize_application_08002c00"
            },
            "calling": [
                "FUN_08002c14"
            ],
            "called": [
                "FUN_08002b68"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c14": {
            "entrypoint": "0x08002c14",
            "current_name": "initialize_application_08002c14",
            "code": "\nvoid initializeApplication_08002c14(void)\n\n{\n  FUN_08002c00();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c14": "initialize_application_08002c14"
            },
            "calling": [
                "FUN_08001c18"
            ],
            "called": [
                "FUN_08002c00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c1e": {
            "entrypoint": "0x08002c1e",
            "current_name": "initialize_memory_08002c1e",
            "code": "\nvoid initializeMemory_08002c1e(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  FUN_08002948(1,0xffff,arg3,arg4,arg4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c1e": "initialize_memory_08002c1e",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "calling": [],
            "called": [
                "FUN_08002948"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c2c": {
            "entrypoint": "0x08002c2c",
            "current_name": "execute_callback_08002c2c",
            "code": "\nvoid executeCallback_08002c2c(undefined4 unused_param,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  if (DAT_200005d4 != (code *)0x0) {\n    (*DAT_200005d4)(param_2,param_3,param_3,DAT_200005d4,param_4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c2c": "execute_callback_08002c2c",
                "param_1": "unused_param"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ce0": {
            "entrypoint": "0x08002ce0",
            "current_name": "initialize_function_08002ce0",
            "code": "\nint initialize_function_08002ce0(int function_parameter)\n\n{\n  int local_variable_1;\n  \n  FUN_0800314e(function_parameter + 0x40);\n  local_variable_1 = function_parameter + 0x44;\n  FUN_080032bc(local_variable_1,function_parameter,0x40);\n  *(undefined *)(function_parameter + 0xc4) = 0;\n  *(undefined4 *)(function_parameter + 200) = 0;\n  *(undefined *)(function_parameter + 0x1f8) = 0;\n  FUN_08003306(local_variable_1,0xe0,FUN_08002c2c + 1,0);\n  FUN_08003306(local_variable_1,0x90,&label_1,0);\n  FUN_08003306(local_variable_1,0xc0,&label_2,0);\n  FUN_08003306(local_variable_1,0xd0,&label_3,0);\n  FUN_08003306(local_variable_1,0xf4,&label_4,0);\n  FUN_08003306(local_variable_1,0xf5,&label_5,0);\n  FUN_08003366(local_variable_1,0x71,&label_6,0);\n  FUN_08003370(local_variable_1,0xf0,&label_7,0);\n  FUN_08003346(local_variable_1,0x79,&label_8,function_parameter);\n  FUN_08003350(local_variable_1,0xf9,&label_9,function_parameter);\n  FUN_08003350(local_variable_1,0xff,&label_10,0);\n  return function_parameter;\n}\n\n",
            "renaming": {
                "FUN_08002ce0": "initialize_function_08002ce0",
                "param_1": "function_parameter",
                "iVar1": "local_variable_1",
                "LAB_08002c40_1": "label_1",
                "LAB_08002c7c_1": "label_2",
                "LAB_08002c90_1": "label_3",
                "LAB_08002c54_1": "label_4",
                "LAB_08002c68_1": "label_5",
                "LAB_08002ca4_1": "label_6",
                "LAB_08002cb8_1": "label_7",
                "LAB_08002e1a_1": "label_8",
                "LAB_08002dea_1": "label_9",
                "LAB_08002cd0_1": "label_10"
            },
            "calling": [
                "FUN_08002dbc"
            ],
            "called": [
                "FUN_08003350",
                "FUN_08003366",
                "FUN_08003306",
                "FUN_0800314e",
                "FUN_080032bc",
                "FUN_08003346",
                "FUN_08003370"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002dbc": {
            "entrypoint": "0x08002dbc",
            "current_name": "check_param_and_update_data_08002dbc",
            "code": "\nvoid checkParamAndUpdateData_08002dbc(int param,int flag)\n\n{\n  if (param != 1) {\n    return;\n  }\n  if (flag == 0xffff) {\n    FUN_08002ce0(&DAT_200003d4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002dbc": "check_param_and_update_data_08002dbc",
                "param_1": "param",
                "param_2": "flag"
            },
            "calling": [],
            "called": [
                "FUN_08002ce0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ddc": {
            "entrypoint": "0x08002ddc",
            "current_name": "initialize_data_structures_08002ddc",
            "code": "\nvoid initializeDataStructures_08002ddc(int dataPointer,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  FUN_0800322c(dataPointer + 0x40,2,5,value3,value3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ddc": "initialize_data_structures_08002ddc",
                "param_1": "dataPointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3"
            },
            "calling": [
                "FUN_08002e26"
            ],
            "called": [
                "FUN_0800322c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002df6": {
            "entrypoint": "0x08002df6",
            "current_name": "process_data_08002df6",
            "code": "\nvoid processData_08002df6(int dataPointer)\n\n{\n  undefined *data;\n  \n  if (*(byte *)(dataPointer + 0xc4) == 0) {\n    return;\n  }\n  data = *(undefined **)(dataPointer + 200);\n  FUN_080031ce(dataPointer + 0x40,*data,data[1],*(byte *)(dataPointer + 0xc4) - 2,data + 2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002df6": "process_data_08002df6",
                "param_1": "dataPointer",
                "puVar1": "data"
            },
            "calling": [
                "FUN_08002e26"
            ],
            "called": [
                "FUN_080031ce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002e26": {
            "entrypoint": "0x08002e26",
            "current_name": "update_value_and_call_functions_08002e26",
            "code": "\nvoid updateValueAndCallFunctions_08002e26(int baseAddress,undefined4 newValue)\n\n{\n  *(undefined4 *)(baseAddress + 0xc0) = newValue;\n  FUN_08003154(baseAddress + 0x40);\n  FUN_08002ddc(baseAddress);\n  FUN_08002df6(baseAddress);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002e26": "update_value_and_call_functions_08002e26",
                "param_1": "baseAddress",
                "param_2": "newValue"
            },
            "calling": [
                "FUN_08003048"
            ],
            "called": [
                "FUN_08002ddc",
                "FUN_08002df6",
                "FUN_08003154"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002e44": {
            "entrypoint": "0x08002e44",
            "current_name": "extract_file_path_08002e44",
            "code": "\nvoid extractFilePath_08002e44(int fileInfoPtr,int inputPathPtr,undefined param3,undefined param4)\n\n{\n  byte byteVariable;\n  char charVariable;\n  int fileExtension;\n  int slashIndex;\n  undefined *filePathPtr;\n  \n  fileExtension = FUN_080099a4(inputPathPtr,\".cpp\");\n  slashIndex = FUN_0800997e(inputPathPtr,0x2f);\n  if (slashIndex == 0) {\n    slashIndex = FUN_0800997e(inputPathPtr,0x5c);\n  }\n  if (slashIndex != 0) {\n    inputPathPtr = slashIndex + 1;\n  }\n  if (fileExtension == 0) {\n    charVariable = FUN_08000178(inputPathPtr);\n    *(char *)(fileInfoPtr + 0xc4) = charVariable + '\\x02';\n  }\n  else {\n    *(char *)(fileInfoPtr + 0xc4) = ((char)fileExtension - (char)inputPathPtr) + '\\x02';\n  }\n  FUN_080091a0(*(undefined4 *)(fileInfoPtr + 200));\n  byteVariable = *(byte *)(fileInfoPtr + 0xc4);\n  filePathPtr = (undefined *)FUN_08009190(byteVariable + 1);\n  *(undefined **)(fileInfoPtr + 200) = filePathPtr;\n  filePathPtr[byteVariable] = 0;\n  *filePathPtr = param3;\n  filePathPtr[1] = param4;\n  FUN_08009954(filePathPtr + 2,inputPathPtr,*(byte *)(fileInfoPtr + 0xc4) - 2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002e44": "extract_file_path_08002e44",
                "param_1": "fileInfoPtr",
                "param_2": "inputPathPtr",
                "param_3": "param3",
                "param_4": "param4",
                "bVar1": "byteVariable",
                "cVar2": "charVariable",
                "iVar3": "fileExtension",
                "iVar4": "slashIndex",
                "puVar5": "filePathPtr"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_0800997e",
                "FUN_08009954",
                "FUN_080099a4",
                "FUN_08000178",
                "FUN_080091a0",
                "FUN_08009190"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ec4": {
            "entrypoint": "0x08002ec4",
            "current_name": "execute_nested_code_08002ec4",
            "code": "\nvoid executeNestedCode_08002ec4(int nestedCodePointer)\n\n{\n  (**(code **)(**(int **)(nestedCodePointer + 0xc0) + 8))();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ec4": "execute_nested_code_08002ec4",
                "param_1": "nestedCodePointer"
            },
            "calling": [
                "FUN_080022f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ed2": {
            "entrypoint": "0x08002ed2",
            "current_name": "process_result_08002ed2",
            "code": "\nvoid processResult_08002ed2(int input)\n\n{\n  uint result;\n  \n  result = (**(code **)(**(int **)(input + 0xc0) + 0xc))();\n  if (result != 0xffffffff) {\n    FUN_08003474(input + 0x44,result & 0xff);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ed2": "process_result_08002ed2",
                "param_1": "input",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080022f8"
            ],
            "called": [
                "FUN_08003474"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ef2": {
            "entrypoint": "0x08002ef2",
            "current_name": "copy_and_process_data_08002ef2",
            "code": "\nvoid copyAndProcessData_08002ef2(int sourceOffset,undefined4 unused1,undefined2 unused2,undefined4 unused3)\n\n{\n  FUN_08003158(sourceOffset + 0x40,unused1,unused2,unused3,unused3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ef2": "copy_and_process_data_08002ef2",
                "param_1": "sourceOffset",
                "param_2": "unused1",
                "param_3": "unused2",
                "param_4": "unused3"
            },
            "calling": [
                "FUN_080022f8",
                "FUN_08000488"
            ],
            "called": [
                "FUN_08003158"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002efe": {
            "entrypoint": "0x08002efe",
            "current_name": "initialize_data_08002efe",
            "code": "\nvoid initializeData_08002efe(int dataOffset,undefined4 arg2,undefined2 arg3,undefined4 arg4)\n\n{\n  FUN_0800319e(dataOffset + 0x40,arg2,arg3,arg4,arg4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002efe": "initialize_data_08002efe",
                "param_1": "dataOffset",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "calling": [
                "FUN_08000be8"
            ],
            "called": [
                "FUN_0800319e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f0a": {
            "entrypoint": "0x08002f0a",
            "current_name": "initialize_data_08002f0a",
            "code": "\nvoid initializeData_08002f0a(int dataPointer)\n\n{\n  FUNC_0800325a(dataPointer + 0x40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f0a": "initialize_data_08002f0a",
                "param_1": "dataPointer"
            },
            "calling": [
                "FUN_08001c18"
            ],
            "called": [
                "FUN_0800325a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f14": {
            "entrypoint": "0x08002f14",
            "current_name": "initialize_buffer_08002f14",
            "code": "\nvoid initializeBuffer_08002f14(int bufferSize)\n\n{\n  FUN_080032a2(bufferSize + 0x40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f14": "initialize_buffer_08002f14",
                "param_1": "bufferSize"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08001c18",
                "FUN_08000500",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_080032a2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f1e": {
            "entrypoint": "0x08002f1e",
            "current_name": "execute_function_08002f1e",
            "code": "\nvoid executeFunction_08002f1e(int functionPointer)\n\n{\n  (**(code **)**(undefined4 **)(functionPointer + 0xc0))();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f1e": "execute_function_08002f1e",
                "param_1": "functionPointer"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f2c": {
            "entrypoint": "0x08002f2c",
            "current_name": "update_data_08002f2c",
            "code": "\nvoid updateData_08002f2c(undefined4 param1,uint param2,undefined4 param3)\n\n{\n  undefined4 tempVar1;\n  \n  if (param2 == 0xd0) {\n    DAT_200005f0 = param3;\n    return;\n  }\n  if (0xd0 < param2) {\n    if (param2 == 0xf4) {\n      DAT_200005e0 = param3;\n      return;\n    }\n    tempVar1 = param3;\n    if ((param2 != 0xf5) && (tempVar1 = DAT_200005e4, param2 == 0xe0)) {\n      DAT_200005d4 = param3;\n      return;\n    }\n    DAT_200005e4 = tempVar1;\n    return;\n  }\n  if (param2 == 0x90) {\n    DAT_200005dc = param3;\n    return;\n  }\n  if (param2 != 0xc0) {\n    return;\n  }\n  DAT_200005ec = param3;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f2c": "update_data_08002f2c",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "uVar1": "tempVar1"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f84": {
            "entrypoint": "0x08002f84",
            "current_name": "update_data_08002f84",
            "code": "\nvoid updateData_08002f84(undefined4 param1,int param2,undefined4 param3)\n\n{\n  if (param2 == 0xff) {\n    DAT_200005e8 = param3;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f84": "update_data_08002f84",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f94": {
            "entrypoint": "0x08002f94",
            "current_name": "FUNC_08002f94",
            "code": "\nvoid FUNC_08002f94(undefined4 param_1,undefined4 param_2,undefined4 param_3)\n\n{\n  DAT_200005d0 = param_3;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f94": "FUNC_08002f94"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002fa0": {
            "entrypoint": "0x08002fa0",
            "current_name": "get_undefined_value_08002fa0",
            "code": "\nundefined get_undefined_value_08002fa0(int offset,int base_address)\n\n{\n  return *(undefined *)(base_address + offset + 0xcc);\n}\n\n",
            "renaming": {
                "FUN_08002fa0": "get_undefined_value_08002fa0",
                "param_1": "offset",
                "param_2": "base_address"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_08001cd0",
                "FUN_080022f8",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fa8": {
            "entrypoint": "0x08002fa8",
            "current_name": "update_character_if_not_set_08002fa8",
            "code": "\nvoid updateCharacterIfNotSet_08002fa8(int characterBaseAddress,int characterOffset,undefined newValue)\n\n{\n  if (*(char *)(characterBaseAddress + characterOffset + 0xcc) != '\\x7f') {\n    *(undefined *)(characterBaseAddress + characterOffset + 0xcc) = newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fa8": "update_character_if_not_set_08002fa8",
                "param_1": "characterBaseAddress",
                "param_2": "characterOffset",
                "param_3": "newValue"
            },
            "calling": [
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fba": {
            "entrypoint": "0x08002fba",
            "current_name": "get_offset_value_08002fba",
            "code": "\nundefined4 getOffsetValue_08002fba(int baseAddress,int offset)\n\n{\n  return *(undefined4 *)(baseAddress + (offset + 0x42) * 4);\n}\n\n",
            "renaming": {
                "FUN_08002fba": "get_offset_value_08002fba",
                "param_1": "baseAddress",
                "param_2": "offset"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fc2": {
            "entrypoint": "0x08002fc2",
            "current_name": "store_value_at_index_08002fc2",
            "code": "\nvoid storeValueAtIndex_08002fc2(int arrayBase,int index,undefined4 value)\n\n{\n  *(undefined4 *)(arrayBase + (index + 0x42) * 4) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fc2": "store_value_at_index_08002fc2",
                "param_1": "arrayBase",
                "param_2": "index",
                "param_3": "value"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fca": {
            "entrypoint": "0x08002fca",
            "current_name": "perform_action_multiple_times_08002fca",
            "code": "\nvoid performActionMultipleTimes_08002fca(undefined4 arg1,undefined4 arg2,int numIterations,undefined4 arg4,\n                 undefined4 arg5)\n\n{\n  uint iterationCount;\n  \n  for (iterationCount = 0; (int)iterationCount < numIterations; iterationCount = iterationCount + 1 & 0xff) {\n    FUNC_08008ac4(arg5);\n    FUN_08008a24(arg2,1);\n    FUNC_08008ac4(arg4);\n    FUN_08008a24(arg2,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fca": "perform_action_multiple_times_08002fca",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "numIterations",
                "param_4": "arg4",
                "param_5": "arg5",
                "uVar1": "iterationCount"
            },
            "calling": [
                "FUN_08003002"
            ],
            "called": [
                "FUN_08008ac4",
                "FUN_08008a24"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003002": {
            "entrypoint": "0x08003002",
            "current_name": "check_and_perform_actions_08003002",
            "code": "\nvoid checkAndPerformActions_08003002(int data)\n\n{\n  if (*(char *)(data + 0x1f8) != '\\0') {\n    return;\n  }\n  FUN_08008990(0xd,1);\n  FUN_08002fca(data,0xd,2,0x28,0xd2);\n  FUNC_08008ac4(0xfa);\n  FUN_08002fca(data,0xd,5,0x28,0xd2);\n  FUNC_08008ac4(0x7d);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003002": "check_and_perform_actions_08003002",
                "param_1": "data"
            },
            "calling": [
                "FUN_08003048"
            ],
            "called": [
                "FUN_08008990",
                "FUN_08008ac4",
                "FUN_08002fca"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003048": {
            "entrypoint": "0x08003048",
            "current_name": "initialize_data_08003048",
            "code": "\nvoid initializeData_08003048(undefined4 inputParameter1,undefined4 inputParameter2,undefined4 inputParameter3,undefined4 inputParameter4)\n\n{\n  FUN_08008c44(&DAT_20000700,inputParameter2,6,inputParameter4,inputParameter4);\n  FUN_08003002(inputParameter1);\n  FUN_08002e26(inputParameter1,&DAT_20000700);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003048": "initialize_data_08003048",
                "param_1": "inputParameter1",
                "param_2": "inputParameter2",
                "param_3": "inputParameter3",
                "param_4": "inputParameter4"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08003002",
                "FUN_08002e26",
                "FUN_08008c44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800307a": {
            "entrypoint": "0x0800307a",
            "current_name": "decode_data_0800307a",
            "code": "\nvoid decodeData_0800307a(undefined4 *functionPtr,uint dataSize,byte *dataBuffer,uint maxIterations)\n\n{\n  uint currentByte;\n  uint bitCounter;\n  uint iterationCounter;\n  uint byteIndex;\n  \n  currentByte = (uint)*dataBuffer;\n  if (maxIterations == 0) {\n    maxIterations = 0xffffffff;\n  }\n  byteIndex = 0;\n  bitCounter = 0;\n  iterationCounter = 0;\n  while ((byteIndex < dataSize && (iterationCounter < maxIterations))) {\n    (***(code ***)(undefined4 *)*functionPtr)\n              ((undefined4 *)*functionPtr,((uint)dataBuffer[byteIndex] << (bitCounter & 0xff) | currentByte) & 0x7f);\n    currentByte = (int)(uint)dataBuffer[byteIndex] >> (7 - bitCounter & 0xff) & 0xff;\n    bitCounter = bitCounter + 1;\n    while ((iterationCounter = iterationCounter + 1, 6 < bitCounter && (iterationCounter < maxIterations))) {\n      (***(code ***)(undefined4 *)*functionPtr)((undefined4 *)*functionPtr,currentByte & 0x7f);\n      currentByte = currentByte >> 7;\n      bitCounter = bitCounter - 7;\n    }\n    byteIndex = byteIndex + 1;\n  }\n  if ((bitCounter != 0) && (iterationCounter < maxIterations)) {\n    (***(code ***)(undefined4 *)*functionPtr)((undefined4 *)*functionPtr,(1 << (bitCounter & 0xff)) - 1U & currentByte)\n    ;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800307a": "decode_data_0800307a",
                "param_1": "functionPtr",
                "param_2": "dataSize",
                "param_3": "dataBuffer",
                "param_4": "maxIterations",
                "uVar1": "currentByte",
                "uVar2": "bitCounter",
                "uVar3": "iterationCounter",
                "uVar4": "byteIndex"
            },
            "calling": [
                "FUN_08003158",
                "FUN_080031ce",
                "FUN_08003106",
                "FUN_0800319e",
                "FUN_0800325a"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003106": {
            "entrypoint": "0x08003106",
            "current_name": "execute_function_08003106",
            "code": "\nvoid executeFunction_08003106(undefined4 *functionPtr,undefined4 param1,undefined4 param2,undefined4 param3)\n\n{\n  undefined4 *ptrToFunction;\n  \n  ptrToFunction = (undefined4 *)*functionPtr;\n  if (ptrToFunction != (undefined4 *)0x0) {\n    (**(code **)*ptrToFunction)(ptrToFunction,0xf0);\n    (***(code ***)(undefined4 *)*functionPtr)((undefined4 *)*functionPtr,0x6f);\n    (***(code ***)(undefined4 *)*functionPtr)((undefined4 *)*functionPtr,param1);\n    FUN_0800307a(functionPtr,param2,param3,param2);\n    (***(code ***)(undefined4 *)*functionPtr)((undefined4 *)*functionPtr,0xf7);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003106": "execute_function_08003106",
                "param_1": "functionPtr",
                "param_2": "param1",
                "param_3": "param2",
                "param_4": "param3",
                "puVar1": "ptrToFunction"
            },
            "calling": [
                "FUN_08003158"
            ],
            "called": [
                "FUN_0800307a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800314e": {
            "entrypoint": "0x0800314e",
            "current_name": "initialize_memory_0800314e",
            "code": "\nvoid initializeMemory_0800314e(undefined4 *memoryPointer)\n\n{\n  *memoryPointer = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800314e": "initialize_memory_0800314e",
                "param_1": "memoryPointer"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003154": {
            "entrypoint": "0x08003154",
            "current_name": "copy_param_to_pointer_08003154",
            "code": "\nvoid copy_param_to_pointer_08003154(unsigned_int *destination,unsigned_int value)\n\n{\n  *destination = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003154": "copy_param_to_pointer_08003154",
                "param_1": "destination",
                "param_2": "value",
                "undefined4": "unsigned_int"
            },
            "calling": [
                "FUN_08002e26"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003158": {
            "entrypoint": "0x08003158",
            "current_name": "execute_function_08003158",
            "code": "\nvoid executeFunction_08003158(undefined4 *functionPointer,uint flag,ushort value)\n\n{\n  undefined4 *pointer;\n  ushort tempValue;\n  \n  pointer = (undefined4 *)*functionPointer;\n  if (pointer != (undefined4 *)0x0) {\n    tempValue = value;\n    if (((int)flag < 0x10) && (value < 0x4000)) {\n      (**(code **)*pointer)(pointer,flag | 0xe0);\n      FUN_0800307a(functionPointer,2,&tempValue);\n    }\n    else {\n      FUN_08003106(functionPointer,flag,2,&tempValue);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003158": "execute_function_08003158",
                "param_1": "functionPointer",
                "param_2": "flag",
                "param_3": "value",
                "puVar1": "pointer",
                "local_a": "tempValue"
            },
            "calling": [
                "FUN_08002ef2"
            ],
            "called": [
                "FUN_0800307a",
                "FUN_08003106"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800319e": {
            "entrypoint": "0x0800319e",
            "current_name": "execute_function_with_param_0800319e",
            "code": "\nvoid executeFunctionWithParam_0800319e(undefined4 *paramArray,uint value,undefined2 flags)\n\n{\n  undefined4 *functionPointer;\n  undefined2 tempParam;\n  \n  functionPointer = (undefined4 *)*paramArray;\n  if (functionPointer != (undefined4 *)0x0) {\n    tempParam = flags;\n    (**(code **)*functionPointer)(functionPointer,value & 0xf | 0x90);\n    FUN_0800307a(paramArray,2,&tempParam);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800319e": "execute_function_with_param_0800319e",
                "param_1": "paramArray",
                "param_2": "value",
                "param_3": "flags",
                "puVar1": "functionPointer",
                "local_a": "tempParam"
            },
            "calling": [
                "FUN_08002efe"
            ],
            "called": [
                "FUN_0800307a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080031ce": {
            "entrypoint": "0x080031ce",
            "current_name": "execute_operation_080031ce",
            "code": "\nvoid execute_operation_080031ce(undefined4 *pointer,undefined4 value_2,undefined4 value_3,uint length,int offset\n                 )\n\n{\n  undefined4 *function_pointer;\n  uint index;\n  \n  function_pointer = (undefined4 *)*pointer;\n  if (function_pointer != (undefined4 *)0x0) {\n    (**(code **)*function_pointer)(function_pointer,0xf0,value_3,*(code **)*function_pointer,length);\n    (***(code ***)(undefined4 *)*pointer)((undefined4 *)*pointer,0x79);\n    (***(code ***)(undefined4 *)*pointer)((undefined4 *)*pointer,value_2);\n    (***(code ***)(undefined4 *)*pointer)((undefined4 *)*pointer,value_3);\n    for (index = 0; index < length; index = index + 1) {\n      FUN_0800307a(pointer,1,offset + index,0);\n    }\n    (***(code ***)(undefined4 *)*pointer)((undefined4 *)*pointer,0xf7);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080031ce": "execute_operation_080031ce",
                "param_1": "pointer",
                "param_2": "value_2",
                "param_3": "value_3",
                "param_4": "length",
                "param_5": "offset",
                "puVar1": "function_pointer",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08002df6"
            ],
            "called": [
                "FUN_0800307a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800322c": {
            "entrypoint": "0x0800322c",
            "current_name": "execute_function_0800322c",
            "code": "\nvoid executeFunction_0800322c(undefined4 *functionPointer,undefined4 parameter2,undefined4 parameter3)\n\n{\n  undefined4 *functionToExecute;\n  \n  functionToExecute = (undefined4 *)*functionPointer;\n  if (functionToExecute != (undefined4 *)0x0) {\n    (**(code **)*functionToExecute)(functionToExecute,0xf9);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,parameter2);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,parameter3);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800322c": "execute_function_0800322c",
                "param_1": "functionPointer",
                "param_2": "parameter2",
                "param_3": "parameter3",
                "puVar1": "functionToExecute"
            },
            "calling": [
                "FUN_08002ddc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800325a": {
            "entrypoint": "0x0800325a",
            "current_name": "FUNC_0800325a",
            "code": "\nvoid FUNC_0800325a(undefined4 *param_1,undefined4 param_2,uint param_3,int param_4)\n\n{\n  undefined4 *puVar1;\n  uint uVar2;\n  \n  puVar1 = (undefined4 *)*param_1;\n  if (puVar1 != (undefined4 *)0x0) {\n    (**(code **)*puVar1)(puVar1,0xf0);\n    (***(code ***)(undefined4 *)*param_1)((undefined4 *)*param_1,param_2);\n    for (uVar2 = 0; uVar2 < param_3; uVar2 = uVar2 + 1) {\n      FUN_0800307a(param_1,1,param_4 + uVar2,0);\n    }\n    (***(code ***)(undefined4 *)*param_1)((undefined4 *)*param_1,0xf7);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800325a": "FUNC_0800325a"
            },
            "calling": [
                "FUN_08002f0a",
                "FUN_080032a2"
            ],
            "called": [
                "FUN_0800307a"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080032a2": {
            "entrypoint": "0x080032a2",
            "current_name": "initialize_connection_080032a2",
            "code": "\nvoid initializeConnection_080032a2(undefined4 socket,undefined4 connection,undefined4 address,undefined4 options)\n\n{\n  undefined4 connectionID;\n  \n  connectionID = FUN_08000178(connection);\n  FUNC_0800325a(socket,0x71,connectionID,connection,options);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080032a2": "initialize_connection_080032a2",
                "param_1": "socket",
                "param_2": "connection",
                "param_3": "address",
                "param_4": "options",
                "uVar1": "connectionID"
            },
            "calling": [
                "FUN_08002f14"
            ],
            "called": [
                "FUN_08000178",
                "FUN_0800325a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080032bc": {
            "entrypoint": "0x080032bc",
            "current_name": "initialize_memory_080032bc",
            "code": "\nvoid initializeMemory_080032bc(int memoryAddress,int value,undefined4 additionalValue)\n\n{\n  *(int *)(memoryAddress + 4) = value;\n  *(undefined4 *)(memoryAddress + 8) = additionalValue;\n  *(undefined *)(memoryAddress + 0xc) = 0;\n  *(undefined *)(memoryAddress + 0xd) = 0;\n  *(undefined4 *)(memoryAddress + 0x10) = 0;\n  *(undefined *)(memoryAddress + 0x14) = 0;\n  *(undefined4 *)(memoryAddress + 0x18) = 0;\n  *(undefined4 *)(memoryAddress + 0x1c) = 0;\n  *(undefined4 *)(memoryAddress + 0x20) = 0;\n  *(undefined4 *)(memoryAddress + 0x24) = 0;\n  *(undefined4 *)(memoryAddress + 0x28) = 0;\n  *(undefined4 *)(memoryAddress + 0x2c) = 0;\n  *(undefined4 *)(memoryAddress + 0x30) = 0;\n  *(undefined4 *)(memoryAddress + 0x34) = 0;\n  *(undefined4 *)(memoryAddress + 0x38) = 0;\n  *(undefined4 *)(memoryAddress + 0x3c) = 0;\n  *(undefined4 *)(memoryAddress + 0x40) = 0;\n  *(undefined4 *)(memoryAddress + 0x44) = 0;\n  *(undefined4 *)(memoryAddress + 0x48) = 0;\n  *(undefined4 *)(memoryAddress + 0x4c) = 0;\n  *(undefined4 *)(memoryAddress + 0x50) = 0;\n  *(undefined4 *)(memoryAddress + 0x54) = 0;\n  *(undefined4 *)(memoryAddress + 0x58) = 0;\n  *(undefined4 *)(memoryAddress + 0x5c) = 0;\n  *(undefined4 *)(memoryAddress + 0x60) = 0;\n  *(undefined4 *)(memoryAddress + 100) = 0;\n  *(undefined4 *)(memoryAddress + 0x68) = 0;\n  *(undefined4 *)(memoryAddress + 0x6c) = 0;\n  *(undefined4 *)(memoryAddress + 0x70) = 0;\n  *(undefined4 *)(memoryAddress + 0x74) = 0;\n  *(undefined4 *)(memoryAddress + 0x78) = 0;\n  *(bool *)memoryAddress = value == 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080032bc": "initialize_memory_080032bc",
                "param_1": "memoryAddress",
                "param_2": "value",
                "param_3": "additionalValue"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003306": {
            "entrypoint": "0x08003306",
            "current_name": "update_data_08003306",
            "code": "\nvoid updateData_08003306(int baseAddress,uint dataIdentifier,undefined4 value1,undefined4 value2)\n\n{\n  if (dataIdentifier == 0xd0) {\n    *(undefined4 *)(baseAddress + 0x58) = value1;\n    *(undefined4 *)(baseAddress + 0x28) = value2;\n    return;\n  }\n  if (0xd0 < dataIdentifier) {\n    if (dataIdentifier == 0xf4) {\n      *(undefined4 *)(baseAddress + 0x5c) = value1;\n      *(undefined4 *)(baseAddress + 0x2c) = value2;\n      return;\n    }\n    if (dataIdentifier == 0xf5) {\n      *(undefined4 *)(baseAddress + 0x60) = value1;\n      *(undefined4 *)(baseAddress + 0x30) = value2;\n    }\n    else if (dataIdentifier == 0xe0) {\n      *(undefined4 *)(baseAddress + 0x4c) = value1;\n      *(undefined4 *)(baseAddress + 0x1c) = value2;\n      return;\n    }\n    return;\n  }\n  if (dataIdentifier == 0x90) {\n    *(undefined4 *)(baseAddress + 0x50) = value1;\n    *(undefined4 *)(baseAddress + 0x20) = value2;\n    return;\n  }\n  if (dataIdentifier == 0xc0) {\n    *(undefined4 *)(baseAddress + 0x54) = value1;\n    *(undefined4 *)(baseAddress + 0x24) = value2;\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003306": "update_data_08003306",
                "param_1": "baseAddress",
                "param_2": "dataIdentifier",
                "param_3": "value1",
                "param_4": "value2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003346": {
            "entrypoint": "0x08003346",
            "current_name": "update_parameters_08003346",
            "code": "\nvoid updateParameters_08003346(int ptr,int value,undefined4 newValue1,undefined4 newValue2)\n\n{\n  if (value == 0x79) {\n    *(undefined4 *)(ptr + 0x70) = newValue1;\n    *(undefined4 *)(ptr + 0x34) = newValue2;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003346": "update_parameters_08003346",
                "param_1": "ptr",
                "param_2": "value",
                "param_3": "newValue1",
                "param_4": "newValue2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003350": {
            "entrypoint": "0x08003350",
            "current_name": "update_param_08003350",
            "code": "\nvoid updateParam_08003350(int targetAddress,int value,undefined4 newParam1,undefined4 newParam2)\n\n{\n  if (value == 0xf9) {\n    *(undefined4 *)(targetAddress + 0x74) = newParam1;\n    *(undefined4 *)(targetAddress + 0x38) = newParam2;\n    return;\n  }\n  if (value != 0xff) {\n    return;\n  }\n  *(undefined4 *)(targetAddress + 0x78) = newParam1;\n  *(undefined4 *)(targetAddress + 0x48) = newParam2;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003350": "update_param_08003350",
                "param_1": "targetAddress",
                "param_2": "value",
                "param_3": "newParam1",
                "param_4": "newParam2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003366": {
            "entrypoint": "0x08003366",
            "current_name": "update_parameters_08003366",
            "code": "\nvoid updateParameters_08003366(int baseAddress,int value,undefined4 newValue1,undefined4 newValue2)\n\n{\n  if (value == 0x71) {\n    *(undefined4 *)(baseAddress + 0x68) = newValue1;\n    *(undefined4 *)(baseAddress + 0x40) = newValue2;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003366": "update_parameters_08003366",
                "param_1": "baseAddress",
                "param_2": "value",
                "param_3": "newValue1",
                "param_4": "newValue2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003370": {
            "entrypoint": "0x08003370",
            "current_name": "set_parameters_08003370",
            "code": "\nvoid setParameters_08003370(int ptr_instance,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  *(undefined4 *)(ptr_instance + 0x6c) = param3;\n  *(undefined4 *)(ptr_instance + 0x44) = param4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003370": "set_parameters_08003370",
                "param_1": "ptr_instance",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003376": {
            "entrypoint": "0x08003376",
            "current_name": "update_parameter_value_08003376",
            "code": "\nvoid updateParameterValue_08003376(undefined *parameterPointer,undefined newParameterValue,uint inputValue)\n\n{\n  bool isValueUpdated;\n  \n  if (inputValue < *(uint *)(parameterPointer + 8)) {\n    isValueUpdated = false;\n  }\n  else {\n    isValueUpdated = true;\n    if (*(code **)(parameterPointer + 100) != (code *)0x0) {\n      *parameterPointer = 1;\n      (**(code **)(parameterPointer + 100))(*(undefined4 *)(parameterPointer + 0x3c));\n      if (inputValue < *(uint *)(parameterPointer + 8)) {\n        isValueUpdated = false;\n      }\n      else {\n        isValueUpdated = true;\n      }\n    }\n  }\n  if (!isValueUpdated) {\n    *(undefined *)(*(int *)(parameterPointer + 4) + inputValue) = newParameterValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003376": "update_parameter_value_08003376",
                "param_1": "parameterPointer",
                "param_2": "newParameterValue",
                "param_3": "inputValue",
                "bVar1": "isValueUpdated"
            },
            "calling": [
                "FUN_08003474",
                "FUN_080033cc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033a8": {
            "entrypoint": "0x080033a8",
            "current_name": "copy_and_shift_bits_080033a8",
            "code": "\nvoid copyAndShiftBits_080033a8(undefined4 inputBuffer,uint bufferSize,int outputBuffer)\n\n{\n  byte sourceByte;\n  int outputIndex;\n  uint inputIndex;\n  \n  outputIndex = 0;\n  for (inputIndex = 0; inputIndex < bufferSize; inputIndex = inputIndex + 2) {\n    sourceByte = *(byte *)(outputBuffer + inputIndex);\n    *(byte *)(outputBuffer + outputIndex) = sourceByte;\n    *(byte *)(outputBuffer + outputIndex) = *(char *)(outputBuffer + inputIndex + 1) << 7 | sourceByte;\n    outputIndex = outputIndex + 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033a8": "copy_and_shift_bits_080033a8",
                "param_1": "inputBuffer",
                "param_2": "bufferSize",
                "param_3": "outputBuffer",
                "bVar1": "sourceByte",
                "iVar2": "outputIndex",
                "uVar3": "inputIndex"
            },
            "calling": [
                "FUN_080033cc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033cc": {
            "entrypoint": "0x080033cc",
            "current_name": "handle_data_080033cc",
            "code": "\nvoid handleData_080033cc(int data,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  char firstChar;\n  int result;\n  char *dataPtr;\n  \n  dataPtr = *(char **)(data + 4);\n  firstChar = *dataPtr;\n  if (firstChar == 'q') {\n    if (*(int *)(data + 0x68) != 0) {\n      result = FUN_080033a8(data,*(int *)(data + 0x18) + -1,dataPtr + 1,dataPtr,param4);\n      FUN_08003376(data,0,result + 1);\n      (**(code **)(data + 0x68))(*(undefined4 *)(data + 0x40),*(int *)(data + 4) + 1);\n      return;\n    }\n  }\n  else if (firstChar == 'y') {\n    if (*(code **)(data + 0x70) != (code *)0x0) {\n      if (*(uint *)(data + 0x18) < 3) {\n        (**(code **)(data + 0x70))(*(undefined4 *)(data + 0x34),0,0);\n        return;\n      }\n      result = FUN_080033a8(data,*(uint *)(data + 0x18) - 3,dataPtr + 3,dataPtr,param4);\n      FUN_08003376(data,0,result + 3);\n      result = *(int *)(data + 4);\n      (**(code **)(data + 0x70))\n                (*(undefined4 *)(data + 0x34),*(undefined *)(result + 1),*(undefined *)(result + 2)\n                 ,result + 3);\n      return;\n    }\n  }\n  else if (*(code **)(data + 0x6c) != (code *)0x0) {\n    (**(code **)(data + 0x6c))\n              (*(undefined4 *)(data + 0x44),firstChar,*(int *)(data + 0x18) + -1,dataPtr + 1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033cc": "handle_data_080033cc",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "cVar1": "firstChar",
                "iVar2": "result",
                "pcVar3": "dataPtr"
            },
            "calling": [
                "FUN_08003474"
            ],
            "called": [
                "FUN_08003376",
                "FUN_080033a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800344a": {
            "entrypoint": "0x0800344a",
            "current_name": "initialize_data_0800344a",
            "code": "\nvoid initializeData_0800344a(int dataPointer)\n\n{\n  uint index;\n  \n  *(undefined4 *)(dataPointer + 0x10) = 0;\n  *(undefined *)(dataPointer + 0xc) = 0;\n  *(undefined *)(dataPointer + 0xd) = 0;\n  for (index = 0; index < *(uint *)(dataPointer + 8); index = index + 1) {\n    *(undefined *)(*(int *)(dataPointer + 4) + index) = 0;\n  }\n  *(undefined *)(dataPointer + 0x14) = 0;\n  *(undefined4 *)(dataPointer + 0x18) = 0;\n  if (*(code **)(dataPointer + 0x78) != (code *)0x0) {\n    (**(code **)(dataPointer + 0x78))(*(undefined4 *)(dataPointer + 0x48));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800344a": "initialize_data_0800344a",
                "param_1": "dataPointer",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08003474"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003474": {
            "entrypoint": "0x08003474",
            "current_name": "process_input_08003474",
            "code": "\nvoid processInput_08003474(int inputPtr,uint inputValue)\n\n{\n  byte tempByte;\n  \n  if (*(char *)(inputPtr + 0x14) != '\\0') {\n    if (inputValue != 0xf7) {\n      FUN_08003376(inputPtr,inputValue,*(undefined4 *)(inputPtr + 0x18));\n      *(int *)(inputPtr + 0x18) = *(int *)(inputPtr + 0x18) + 1;\n      return;\n    }\n    *(undefined *)(inputPtr + 0x14) = 0;\n    FUN_080033cc();\n    return;\n  }\n  if ((*(int *)(inputPtr + 0x10) == 0) || (0x7f < (int)inputValue)) {\n    if ((int)inputValue < 0xf0) {\n      *(byte *)(inputPtr + 0xd) = (byte)inputValue & 0xf;\n      inputValue = inputValue & 0xf0;\n    }\n    if (inputValue == 0xf0) {\n      *(undefined *)(inputPtr + 0x14) = 1;\n      *(undefined4 *)(inputPtr + 0x18) = 0;\n      return;\n    }\n    if (inputValue < 0xf1) {\n      if (inputValue != 0xc0) {\n        if (inputValue < 0xc1) {\n          if (inputValue != 0x90) {\n            return;\n          }\n        }\n        else {\n          if (inputValue == 0xd0) goto label_1;\n          if (inputValue != 0xe0) {\n            return;\n          }\n        }\nLAB_08003586:\n        *(undefined4 *)(inputPtr + 0x10) = 2;\n        *(char *)(inputPtr + 0xc) = (char)inputValue;\n        return;\n      }\nlabel_1:\n      *(undefined4 *)(inputPtr + 0x10) = 1;\n      *(char *)(inputPtr + 0xc) = (char)inputValue;\n      return;\n    }\n    if (inputValue != 0xf9) {\n      if (0xf9 < inputValue) {\n        if (inputValue == 0xff) {\n          FUN_0800344a(inputPtr);\n          return;\n        }\n        return;\n      }\n      if (1 < inputValue - 0xf4) {\n        return;\n      }\n      goto LAB_08003586;\n    }\n    if (*(code **)(inputPtr + 0x74) != (code *)0x0) {\n      (**(code **)(inputPtr + 0x74))(*(undefined4 *)(inputPtr + 0x38));\n    }\n  }\n  else {\n    *(int *)(inputPtr + 0x10) = *(int *)(inputPtr + 0x10) + -1;\n    FUN_08003376();\n    if ((*(int *)(inputPtr + 0x10) == 0) && (tempByte = *(byte *)(inputPtr + 0xc), tempByte != 0)) {\n      if (tempByte == 0xd0) {\n        if (*(code **)(inputPtr + 0x58) != (code *)0x0) {\n          (**(code **)(inputPtr + 0x58))\n                    (*(undefined4 *)(inputPtr + 0x28),*(undefined *)(inputPtr + 0xd),\n                     **(undefined **)(inputPtr + 4));\n        }\n      }\n      else if (tempByte < 0xd1) {\n        if (tempByte == 0x90) {\n          if (*(code **)(inputPtr + 0x50) != (code *)0x0) {\n            (**(code **)(inputPtr + 0x50))\n                      (*(undefined4 *)(inputPtr + 0x20),*(undefined *)(inputPtr + 0xd),\n                       (uint)(*(byte **)(inputPtr + 4))[1] + (uint)**(byte **)(inputPtr + 4) * 0x80);\n          }\n        }\n        else if ((tempByte == 0xc0) && (*(code **)(inputPtr + 0x54) != (code *)0x0)) {\n          (**(code **)(inputPtr + 0x54))\n                    (*(undefined4 *)(inputPtr + 0x24),*(undefined *)(inputPtr + 0xd),\n                     **(undefined **)(inputPtr + 4));\n        }\n      }\n      else if (tempByte == 0xf4) {\n        if (*(code **)(inputPtr + 0x5c) != (code *)0x0) {\n          (**(code **)(inputPtr + 0x5c))\n                    (*(undefined4 *)(inputPtr + 0x2c),(*(undefined **)(inputPtr + 4))[1],\n                     **(undefined **)(inputPtr + 4));\n        }\n      }\n      else if (tempByte == 0xf5) {\n        if (*(code **)(inputPtr + 0x60) != (code *)0x0) {\n          (**(code **)(inputPtr + 0x60))\n                    (*(undefined4 *)(inputPtr + 0x30),(*(undefined **)(inputPtr + 4))[1],\n                     **(undefined **)(inputPtr + 4));\n        }\n      }\n      else if ((tempByte == 0xe0) && (*(code **)(inputPtr + 0x4c) != (code *)0x0)) {\n        (**(code **)(inputPtr + 0x4c))\n                  (*(undefined4 *)(inputPtr + 0x1c),*(undefined *)(inputPtr + 0xd),\n                   (uint)(*(byte **)(inputPtr + 4))[1] + (uint)**(byte **)(inputPtr + 4) * 0x80);\n      }\n      *(undefined *)(inputPtr + 0xc) = 0;\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003474": "process_input_08003474",
                "param_1": "inputPtr",
                "param_2": "inputValue",
                "bVar1": "tempByte",
                "LAB_0800359c": "label_1"
            },
            "calling": [
                "FUN_08002ed2"
            ],
            "called": [
                "FUN_08003376",
                "FUN_080033cc",
                "FUN_0800344a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080035b8": {
            "entrypoint": "0x080035b8",
            "current_name": "initialize_stm32_hardware_080035b8",
            "code": "\nvoid initializeSTM32Hardware_080035b8(void)\n\n{\n  int result;\n  uint milliseconds;\n  undefined4 parameters1 [2];\n  undefined4 parameter2;\n  undefined4 parameter3;\n  undefined4 parameter4;\n  undefined4 parameter5;\n  undefined4 parameter6;\n  undefined4 parameter7;\n  undefined4 parameters2 [4];\n  undefined4 default1;\n  undefined4 default2;\n  undefined4 default3;\n  undefined4 default4;\n  undefined4 default5;\n  \n  parameters2[0] = 2;\n  default1 = 1;\n  default2 = 0x10;\n  default3 = 2;\n  default4 = 0;\n  default5 = 0x380000;\n  result = FUN_08005460(parameters2);\n  if (result != 0) {\n    FUN_080073e8(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x88);\n  }\n  parameter3 = 0xf;\n  parameter4 = 2;\n  parameter5 = 0;\n  parameter6 = 0x400;\n  parameter7 = 0;\n  result = FUN_080058ac(&parameter3);\n  if (result != 0) {\n    FUN_080073e8(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x95);\n  }\n  parameters1[0] = 2;\n  parameter2 = 0x8000;\n  result = FUN_08005aa4(parameters1);\n  if (result != 0) {\n    FUN_080073e8(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x9c);\n  }\n  milliseconds = FUN_08005a1c();\n  FUN_08003fd8(milliseconds / 1000);\n  FUN_08004024(4);\n  FUN_08003f30(0xffffffff,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080035b8": "initialize_stm32_hardware_080035b8",
                "iVar1": "result",
                "uVar2": "milliseconds",
                "local_54": "parameters1",
                "local_4c": "parameter2",
                "local_44": "parameter3",
                "local_40": "parameter4",
                "local_3c": "parameter5",
                "local_38": "parameter6",
                "local_34": "parameter7",
                "local_30": "parameters2",
                "local_20": "default1",
                "local_1c": "default2",
                "local_14": "default3",
                "local_10": "default4",
                "local_c": "default5"
            },
            "calling": [
                "FUN_080072fa"
            ],
            "called": [
                "FUN_08005a1c",
                "FUN_08005aa4",
                "FUN_08004024",
                "FUN_08003fd8",
                "FUN_08003f30",
                "FUN_08005460",
                "FUN_080073e8",
                "FUN_080058ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x08003658",
            "current_name": "entry",
            "code": "\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined4 *)(iVar1 + 0x20000000) < &DAT_200000f4; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x800ac18);\n  }\n  for (puVar2 = &DAT_200000f4; puVar2 < &DAT_20000a3c; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_080073ec();\n  FUN_08009148();\n  UNRECOVERED_JUMPTABLE = (code *)0x800368a;\n  FUN_08008f1c();\n                    /* WARNING: Could not recover jumptable at 0x0800368a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_080073ec",
                "FUN_08009148",
                "FUN_08008f1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036a2": {
            "entrypoint": "0x080036a2",
            "current_name": "initialize_080036a2",
            "code": "\nvoid initialize_080036a2(void)\n\n{\n  FUN_080072fa();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036a2": "initialize_080036a2"
            },
            "calling": [
                "FUN_08008f0e"
            ],
            "called": [
                "FUN_080072fa"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036ac": {
            "entrypoint": "0x080036ac",
            "current_name": "find_character_index_080036ac",
            "code": "\nuint find_character_index_080036ac(int character)\n\n{\n  uint index;\n  \n  if ((uint)(character << 0x18) >> 0x1c < 5) {\n    for (index = 0; (index < 0x3c && (character != (char)(&DAT_0800a908)[index])); index = index + 1)\n    {\n    }\n  }\n  else {\n    index = 0xffffffff;\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_080036ac": "find_character_index_080036ac",
                "param_1": "character",
                "uVar1": "index"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_08001cd0",
                "FUN_08000aec",
                "FUN_080022f8",
                "FUN_08000a64",
                "FUN_08000ef8",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036d4": {
            "entrypoint": "0x080036d4",
            "current_name": "FUNC_080036d4",
            "code": "\nvoid FUNC_080036d4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036d4": "FUNC_080036d4"
            },
            "calling": [
                "FUN_08003724"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080036d8": {
            "entrypoint": "0x080036d8",
            "current_name": "initialize_system_080036d8",
            "code": "\nundefined4 initializeSystem_080036d8(uint inputValue)\n\n{\n  int result;\n  \n  result = FUN_08003fd8(DAT_20000018 / (1000 / DAT_2000000c));\n  if (result != 0) {\n    return 1;\n  }\n  if (0xf < inputValue) {\n    return 1;\n  }\n  FUN_08003f30(0xffffffff,inputValue,0);\n  DAT_20000010 = inputValue;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080036d8": "initialize_system_080036d8",
                "param_1": "inputValue",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08003724",
                "FUN_080058d2"
            ],
            "called": [
                "FUN_08003fd8",
                "FUN_08003f30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003724": {
            "entrypoint": "0x08003724",
            "current_name": "set_flag_and_call_functions_08003724",
            "code": "\n\n\nundefined4 setFlagAndCallFunctions_08003724(void)\n\n{\n  _DAT_40022000 = _DAT_40022000 | 0x10;\n  FUNC_08003f0c(3);\n  FUN_080036d8(0xf);\n  FUNC_080036d4();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003724": "set_flag_and_call_functions_08003724"
            },
            "calling": [
                "FUN_080072fa"
            ],
            "called": [
                "FUN_080036d4",
                "FUN_080036d8",
                "FUN_08003f0c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003748": {
            "entrypoint": "0x08003748",
            "current_name": "add_data_to_sum_08003748",
            "code": "\nvoid addDataToSum_08003748(void)\n\n{\n  DAT_20000a34 = (uint)DAT_2000000c + DAT_20000a34;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003748": "add_data_to_sum_08003748"
            },
            "calling": [
                "FUN_08007246"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003760": {
            "entrypoint": "0x08003760",
            "current_name": "get_data_value_08003760",
            "code": "\nundefined4 get_data_value_08003760(void)\n\n{\n  return DAT_20000a34;\n}\n\n",
            "renaming": {
                "FUN_08003760": "get_data_value_08003760"
            },
            "calling": [
                "FUN_080066e8",
                "FUN_080067ac",
                "FUN_0800376c",
                "FUN_08003b8c",
                "FUN_080058d2",
                "FUN_08007e74",
                "FUN_08008500",
                "FUN_08005aa4",
                "FUN_08007f0e",
                "FUN_0800723c",
                "FUN_08003a20",
                "FUN_08003e20",
                "FUN_08005460"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800376c": {
            "entrypoint": "0x0800376c",
            "current_name": "calculate_result_0800376c",
            "code": "\nundefined4 calculateResult_0800376c(uint **inputs,uint size)\n\n{\n  int currentValue;\n  uint divisor;\n  int tempValue;\n  undefined4 result;\n  uint *values;\n  uint totalIterations;\n  uint currentIteration;\n  \n  currentIteration = 0;\n  currentValue = FUN_08003760();\n  totalIterations = DAT_20000018;\n  values = *inputs;\n  if ((values[2] & 0x100) == 0) {\n    if (((values[1] & 0x100) == 0) && ((values[0xb] & 0xf00000) == 0)) {\n      do {\n        if ((**inputs & 2) != 0) goto LAB_0800387e;\n      } while ((size == 0xffffffff) ||\n              ((size != 0 && (tempValue = FUN_08003760(), (uint)(tempValue - currentValue) <= size))));\n      inputs[10] = (uint *)((uint)inputs[10] | 4);\n      *(undefined *)(inputs + 9) = 0;\n      result = 3;\n    }\n    else {\n      divisor = FUN_08005bb8(2);\n      values = *inputs;\n      if (((values[4] & 0x24924924) == 0) && ((values[3] & 0x924924) == 0)) {\n        if ((values[4] & 0x12492492) == 0) {\n          if ((values[3] & 0x492492) == 0) {\n            tempValue = 0x14;\n          }\n          else {\n            tempValue = 0x29;\n          }\n        }\n        else {\n          tempValue = 0x29;\n        }\n      }\n      else if (((values[4] & 0x12492492) == 0) && ((values[3] & 0x492492) == 0)) {\n        tempValue = 0x54;\n      }\n      else if ((values[4] & 0x249249) == 0) {\n        if ((values[3] & 0x249249) == 0) {\n          tempValue = 0x54;\n        }\n        else {\n          tempValue = 0xfc;\n        }\n      }\n      else {\n        tempValue = 0xfc;\n      }\n      totalIterations = (totalIterations / divisor) * tempValue;\n      for (; currentIteration <= totalIterations && totalIterations - currentIteration != 0; currentIteration = currentIteration + 1) {\n        if ((size != 0xffffffff) &&\n           ((size == 0 || (tempValue = FUN_08003760(), size < (uint)(tempValue - currentValue))))) {\n          inputs[10] = (uint *)((uint)inputs[10] | 4);\n          *(undefined *)(inputs + 9) = 0;\n          return 3;\n        }\n      }\nLAB_0800387e:\n      **inputs = 0xffffffed;\n      inputs[10] = (uint *)((uint)inputs[10] | 0x200);\n      if (((*inputs)[2] & 0xe0000) == 0xe0000) {\n        if (inputs[3] == (uint *)0x0) {\n          inputs[10] = (uint *)((uint)inputs[10] & 0xfffffeff);\n          if (((uint)inputs[10] & 0x1000) == 0) {\n            inputs[10] = (uint *)((uint)inputs[10] | 1);\n            result = 0;\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        result = 0;\n      }\n    }\n  }\n  else {\n    inputs[10] = (uint *)((uint)inputs[10] | 0x20);\n    *(undefined *)(inputs + 9) = 0;\n    result = 1;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800376c": "calculate_result_0800376c",
                "param_1": "inputs",
                "param_2": "size",
                "iVar1": "currentValue",
                "uVar2": "divisor",
                "iVar3": "tempValue",
                "uVar4": "result",
                "puVar5": "values",
                "uVar6": "totalIterations",
                "local_1c": "currentIteration"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08005bb8",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080038dc": {
            "entrypoint": "0x080038dc",
            "current_name": "get_offset_from_pointer_080038dc",
            "code": "\nundefined4 get_offset_from_pointer_080038dc(int *pointer)\n\n{\n  return *(undefined4 *)(*pointer + 0x4c);\n}\n\n",
            "renaming": {
                "FUN_080038dc": "get_offset_from_pointer_080038dc",
                "param_1": "pointer"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080038e4": {
            "entrypoint": "0x080038e4",
            "current_name": "update_settings_080038e4",
            "code": "\nundefined4 updateSettings_080038e4(int *settings,uint *values)\n\n{\n  undefined4 result;\n  uint index;\n  int counter;\n  \n  if (*(char *)(settings + 9) == '\\x01') {\n    result = 2;\n  }\n  else {\n    *(undefined *)(settings + 9) = 1;\n    index = values[1];\n    if (index < 7) {\n      index = index * 5 - 5;\n      *(uint *)(*settings + 0x34) =\n           *values << (index & 0xff) | *(uint *)(*settings + 0x34) & ~(0x1f << (index & 0xff));\n    }\n    else if (index < 0xd) {\n      index = index * 5 - 0x23;\n      *(uint *)(*settings + 0x30) =\n           *values << (index & 0xff) | *(uint *)(*settings + 0x30) & ~(0x1f << (index & 0xff));\n    }\n    else {\n      index = index * 5 - 0x41;\n      *(uint *)(*settings + 0x2c) =\n           *values << (index & 0xff) | *(uint *)(*settings + 0x2c) & ~(0x1f << (index & 0xff));\n    }\n    index = *values;\n    if (index < 10) {\n      *(uint *)(*settings + 0x10) =\n           values[2] << (index * 3 & 0xff) |\n           *(uint *)(*settings + 0x10) & ~(7 << (index * 3 & 0xff));\n    }\n    else {\n      index = index * 3 - 0x1e;\n      *(uint *)(*settings + 0xc) =\n           values[2] << (index & 0xff) | *(uint *)(*settings + 0xc) & ~(7 << (index & 0xff));\n    }\n    if (*values - 0x10 < 2) {\n      if (*settings == 0x40012400) {\n        if ((uRam40012408 & 0x800000) == 0) {\n          uRam40012408 = uRam40012408 | 0x800000;\n          if (*values == 0x10) {\n            for (counter = (DAT_20000018 / 1000000) * 10; counter != 0; counter = counter + -1) {\n            }\n            result = 0;\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        settings[10] = settings[10] | 0x20;\n        result = 1;\n      }\n    }\n    else {\n      result = 0;\n    }\n    *(undefined *)(settings + 9) = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080038e4": "update_settings_080038e4",
                "param_1": "settings",
                "param_2": "values",
                "uVar1": "result",
                "uVar2": "index",
                "local_c": "counter"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a1c": {
            "entrypoint": "0x08003a1c",
            "current_name": "get_pointer_at_offset_08003a1c",
            "code": "\nundefined4 getPointerAtOffset_08003a1c(int originalPointer)\n\n{\n  return *(undefined4 *)(originalPointer + 0x28);\n}\n\n",
            "renaming": {
                "FUN_08003a1c": "get_pointer_at_offset_08003a1c",
                "param_1": "originalPointer"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a20": {
            "entrypoint": "0x08003a20",
            "current_name": "initialize_hardware_08003a20",
            "code": "\nundefined4 initializeHardware_08003a20(int *hardwareData,undefined4 paramFlag)\n\n{\n  int currentValue;\n  undefined4 returnValue;\n  int currentValuePtr;\n  uint tempValue;\n  \n  currentValuePtr = *hardwareData;\n  if ((*(uint *)(currentValuePtr + 8) & 1) == 0) {\n    *(uint *)(currentValuePtr + 8) = *(uint *)(currentValuePtr + 8) | 1;\n    for (tempValue = DAT_20000018 / 1000000; tempValue != 0; tempValue = tempValue - 1) {\n    }\n    currentValuePtr = FUN_08003760(hardwareData,paramFlag,DAT_20000018 * 0x431bde83);\n    do {\n      if ((*(uint *)(*hardwareData + 8) & 1) != 0) {\n        return 0;\n      }\n      currentValue = FUN_08003760();\n    } while ((uint)(currentValue - currentValuePtr) < 3);\n    hardwareData[10] = hardwareData[10] | 0x10;\n    hardwareData[0xb] = hardwareData[0xb] | 1;\n    *(undefined *)(hardwareData + 9) = 0;\n    returnValue = 1;\n  }\n  else {\n    returnValue = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08003a20": "initialize_hardware_08003a20",
                "param_1": "hardwareData",
                "param_2": "paramFlag",
                "iVar1": "currentValue",
                "uVar2": "returnValue",
                "iVar3": "currentValuePtr",
                "local_14": "tempValue"
            },
            "calling": [
                "FUN_08003e20",
                "FUN_08003aa0"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003aa0": {
            "entrypoint": "0x08003aa0",
            "current_name": "update_flags_and_values_08003aa0",
            "code": "\n\n\nint updateFlagsAndValues_08003aa0(int *parameters)\n\n{\n  int result;\n  undefined4 *pointer;\n  int temp;\n  \n  if (*(char *)(parameters + 9) != '\\x01') {\n    *(undefined *)(parameters + 9) = 1;\n    result = FUN_08003a20();\n    if (result == 0) {\n      value1 = value1 & 0xfffffcfeU | 0x100;\n      pointer = (undefined4 *)*parameters;\n      if ((pointer == (undefined4 *)0x40012800) && ((_DAT_40012404 & 0xf0000) != 0)) {\n        value1 = value1 | 0x100000;\n        if ((_DAT_40012404 & 0x400) != 0) {\n          value1 = value1 & 0xffffcfffU | 0x1000;\n        }\n      }\n      else {\n        value1 = value1 & 0xffefffff;\n        if ((pointer[1] & 0x400) != 0) {\n          value1 = value1 & 0xffffcfffU | 0x1000;\n        }\n      }\n      if ((value1 & 0x1000U) == 0) {\n        value2 = 0;\n      }\n      else {\n        value2 = value2 & 0xfffffff9;\n      }\n      *(undefined *)(parameters + 9) = 0;\n      *pointer = 0xfffffffd;\n      temp = *parameters;\n      if (((*(uint *)(temp + 8) & 0xe0000) == 0xe0000) &&\n         ((temp != 0x40012800 || ((_DAT_40012404 & 0xf0000) == 0)))) {\n        *(uint *)(temp + 8) = *(uint *)(temp + 8) | 0x500000;\n      }\n      else {\n        *(uint *)(temp + 8) = *(uint *)(temp + 8) | 0x100000;\n      }\n    }\n    else {\n      *(undefined *)(parameters + 9) = 0;\n    }\n    return result;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08003aa0": "update_flags_and_values_08003aa0",
                "param_1": "parameters",
                "iVar1": "result",
                "puVar2": "pointer",
                "iVar3": "temp",
                "param_1[10]": "value1",
                "param_1[0xb]": "value2"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08003a20"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003b8c": {
            "entrypoint": "0x08003b8c",
            "current_name": "check_and_set_flag_08003b8c",
            "code": "\nundefined4 checkAndSetFlag_08003b8c(int *array)\n\n{\n  int currentValue;\n  int arrayValue;\n  \n  arrayValue = *array;\n  if ((*(uint *)(arrayValue + 8) & 1) == 0) {\n    return 0;\n  }\n  *(uint *)(arrayValue + 8) = *(uint *)(arrayValue + 8) & 0xfffffffe;\n  arrayValue = FUN_08003760();\n  do {\n    if ((*(uint *)(*array + 8) & 1) == 0) {\n      return 0;\n    }\n    currentValue = FUN_08003760();\n  } while ((uint)(currentValue - arrayValue) < 3);\n  array[10] = array[10] | 0x10;\n  array[0xb] = array[0xb] | 1;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08003b8c": "check_and_set_flag_08003b8c",
                "param_1": "array",
                "iVar1": "currentValue",
                "iVar2": "arrayValue"
            },
            "calling": [
                "FUN_08003bd8",
                "FUN_08003ce8",
                "FUN_08003e20",
                "FUN_08003de4"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003bd8": {
            "entrypoint": "0x08003bd8",
            "current_name": "initialize_device_08003bd8",
            "code": "\nundefined4 initializeDevice_08003bd8(int *device)\n\n{\n  int result;\n  uint controlFlags;\n  uint optionFlags;\n  \n  if (device == (int *)0x0) {\n    return 1;\n  }\n  if (device[10] == 0) {\n    device[0xb] = 0;\n    *(undefined *)(device + 9) = 0;\n    FUN_08006ca8();\n  }\n  result = FUN_08003b8c(device);\n  if (((device[10] & 0x10U) == 0) && (result == 0)) {\n    device[10] = device[10] & 0xffffeefdU | 2;\n    controlFlags = device[1] | device[7] | device[3] << 1;\n    if (device[2] == 0x100) {\n      optionFlags = 0x100;\n    }\n    else {\n      optionFlags = 0;\n      if (device[2] == 1) {\n        optionFlags = 0x100;\n      }\n    }\n    if (device[5] == 1) {\n      if (device[3] == 0) {\n        optionFlags = optionFlags | (device[6] + -1) * 0x2000 | 0x800;\n      }\n      else {\n        device[10] = device[10] | 0x20;\n        device[0xb] = device[0xb] | 1;\n      }\n    }\n    *(uint *)(*device + 4) = optionFlags | *(uint *)(*device + 4) & 0xffff16ff;\n    *(uint *)(*device + 8) = *(uint *)(*device + 8) & 0xffe1f7fd | controlFlags;\n    if ((device[2] == 0x100) || (device[2] == 1)) {\n      optionFlags = (device[4] + -1) * 0x100000;\n    }\n    else {\n      optionFlags = 0;\n    }\n    *(uint *)(*device + 0x2c) = optionFlags | *(uint *)(*device + 0x2c) & 0xff0fffff;\n    if (controlFlags != (*(uint *)(*device + 8) & 0xff1f0efe)) {\n      device[10] = device[10] & 0xffffffedU | 0x10;\n      device[0xb] = device[0xb] | 1;\n      return 1;\n    }\n    device[0xb] = 0;\n    device[10] = device[10] & 0xfffffffcU | 1;\n    return 0;\n  }\n  device[10] = device[10] | 0x10;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08003bd8": "initialize_device_08003bd8",
                "param_1": "device",
                "iVar1": "result",
                "uVar2": "controlFlags",
                "uVar3": "optionFlags"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08006ca8",
                "FUN_08003b8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ce8": {
            "entrypoint": "0x08003ce8",
            "current_name": "clear_permissions_08003ce8",
            "code": "\nint clearPermissions_08003ce8(int *inputArray)\n\n{\n  int result;\n  \n  if (inputArray == (int *)0x0) {\n    result = 1;\n  }\n  else {\n    inputArray[10] = inputArray[10] | 2;\n    result = FUN_08003b8c();\n    if (result == 0) {\n      *(undefined4 *)*inputArray = 0xffffffe0;\n      *(uint *)(*inputArray + 4) = *(uint *)(*inputArray + 4) & 0xff3f0000;\n      *(uint *)(*inputArray + 8) = *(uint *)(*inputArray + 8) & 0xff0106f0;\n      *(uint *)(*inputArray + 0xc) = *(uint *)(*inputArray + 0xc) & 0xff000000;\n      *(uint *)(*inputArray + 0x10) = *(uint *)(*inputArray + 0x10) & 0xc0000000;\n      *(uint *)(*inputArray + 0x14) = *(uint *)(*inputArray + 0x14) & 0xfffff000;\n      *(uint *)(*inputArray + 0x18) = *(uint *)(*inputArray + 0x18) & 0xfffff000;\n      *(uint *)(*inputArray + 0x1c) = *(uint *)(*inputArray + 0x1c) & 0xfffff000;\n      *(uint *)(*inputArray + 0x20) = *(uint *)(*inputArray + 0x20) & 0xfffff000;\n      *(uint *)(*inputArray + 0x24) = *(uint *)(*inputArray + 0x24) & 0xfffff000;\n      *(uint *)(*inputArray + 0x28) = *(uint *)(*inputArray + 0x28) & 0xfffff000;\n      *(uint *)(*inputArray + 0x2c) = *(uint *)(*inputArray + 0x2c) & 0xff000000;\n      *(uint *)(*inputArray + 0x2c) = *(uint *)(*inputArray + 0x2c) & 0xff000000;\n      *(uint *)(*inputArray + 0x30) = *(uint *)(*inputArray + 0x30) & 0xc0000000;\n      *(uint *)(*inputArray + 0x34) = *(uint *)(*inputArray + 0x34) & 0xc0000000;\n      *(uint *)(*inputArray + 0x38) = *(uint *)(*inputArray + 0x38) & 0xffc00000;\n      *(uint *)(*inputArray + 0x38) = *(uint *)(*inputArray + 0x38) & 0xffc00000;\n      FUN_08006d24(inputArray);\n      inputArray[0xb] = 0;\n      inputArray[10] = 0;\n    }\n    *(undefined *)(inputArray + 9) = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08003ce8": "clear_permissions_08003ce8",
                "param_1": "inputArray",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08006d24",
                "FUN_08003b8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003de4": {
            "entrypoint": "0x08003de4",
            "current_name": "verify_and_process_data_08003de4",
            "code": "\nint verify_and_process_data_08003de4(int data_ptr)\n\n{\n  int result;\n  \n  if (*(char *)(data_ptr + 0x24) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(data_ptr + 0x24) = 1;\n  result = FUN_08003b8c();\n  if (result == 0) {\n    *(uint *)(data_ptr + 0x28) = *(uint *)(data_ptr + 0x28) & 0xffffeefe | 1;\n  }\n  *(undefined *)(data_ptr + 0x24) = 0;\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08003de4": "verify_and_process_data_08003de4",
                "param_1": "data_ptr",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08003b8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003e20": {
            "entrypoint": "0x08003e20",
            "current_name": "process_data_08003e20",
            "code": "\nint process_data_08003e20(int *data_array)\n\n{\n  uint constant_1;\n  int result;\n  uint constant_2;\n  int temp_var;\n  int temp_var_2;\n  int loop_counter;\n  \n  if (*(char *)(data_array + 9) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(data_array + 9) = 1;\n  result = FUN_08003b8c();\n  if (result == 0) {\n    data_array[10] = data_array[10] & 0xffffeefdU | 2;\n    constant_1 = DAT_20000018;\n    constant_2 = FUN_08005bb8(2);\n    for (loop_counter = constant_1 / constant_2 << 1; loop_counter != 0; loop_counter = loop_counter + -1) {\n    }\n    FUN_08003a20(data_array);\n    *(uint *)(*data_array + 8) = *(uint *)(*data_array + 8) | 8;\n    temp_var = FUN_08003760();\n    while (temp_var_2 = *data_array, (*(uint *)(temp_var_2 + 8) & 8) != 0) {\n      temp_var_2 = FUN_08003760();\n      if (10 < (uint)(temp_var_2 - temp_var)) {\n        data_array[10] = data_array[10] & 0xffffffedU | 0x10;\n        *(undefined *)(data_array + 9) = 0;\n        return 1;\n      }\n    }\n    *(uint *)(temp_var_2 + 8) = *(uint *)(temp_var_2 + 8) | 4;\n    temp_var = FUN_08003760();\n    while ((*(uint *)(*data_array + 8) & 4) != 0) {\n      temp_var_2 = FUN_08003760();\n      if (10 < (uint)(temp_var_2 - temp_var)) {\n        data_array[10] = data_array[10] & 0xffffffedU | 0x10;\n        *(undefined *)(data_array + 9) = 0;\n        return 1;\n      }\n    }\n    data_array[10] = data_array[10] & 0xfffffffcU | 1;\n  }\n  *(undefined *)(data_array + 9) = 0;\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08003e20": "process_data_08003e20",
                "param_1": "data_array",
                "uVar1": "constant_1",
                "iVar2": "result",
                "uVar3": "constant_2",
                "iVar4": "temp_var",
                "iVar5": "temp_var_2",
                "local_14": "loop_counter"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08003a20",
                "FUN_08003b8c",
                "FUN_08005bb8",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f0c": {
            "entrypoint": "0x08003f0c",
            "current_name": "FUNC_08003f0c",
            "code": "\n\n\nvoid FUNC_08003f0c(uint param_1)\n\n{\n  _DAT_e000ed0c = (param_1 & 7) << 8 | _DAT_e000ed0c & 0xf8ff | 0x5fa0000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f0c": "FUNC_08003f0c"
            },
            "calling": [
                "FUN_08008f0e",
                "FUN_08003724"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003f30": {
            "entrypoint": "0x08003f30",
            "current_name": "update_char_value_08003f30",
            "code": "\n\n\nvoid updateCharValue_08003f30(uint offset,uint mask1,uint mask2)\n\n{\n  uint shiftedBits;\n  uint remainingBits;\n  \n  shiftedBits = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  remainingBits = 7 - shiftedBits;\n  if (3 < remainingBits) {\n    remainingBits = 4;\n  }\n  if (shiftedBits + 4 < 7) {\n    shiftedBits = 0;\n  }\n  else {\n    shiftedBits = shiftedBits - 3;\n  }\n  shiftedBits = (mask1 & (1 << (remainingBits & 0xff)) - 1U) << (shiftedBits & 0xff) |\n          (1 << (shiftedBits & 0xff)) - 1U & mask2;\n  if ((int)offset < 0) {\n    *(char *)((offset & 0xf) + 0xe000ed14) = (char)(shiftedBits << 4);\n  }\n  else {\n    *(char *)(offset + 0xe000e400) = (char)(shiftedBits << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f30": "update_char_value_08003f30",
                "param_1": "offset",
                "param_2": "mask1",
                "param_3": "mask2",
                "uVar1": "shiftedBits",
                "uVar2": "remainingBits"
            },
            "calling": [
                "FUN_08007648",
                "FUN_080077b0",
                "FUN_08008694",
                "FUN_080036d8",
                "FUN_080035b8",
                "FUN_0800863c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f94": {
            "entrypoint": "0x08003f94",
            "current_name": "set_bit_08003f94",
            "code": "\nvoid setBit_08003f94(uint inputValue)\n\n{\n  if (-1 < (int)inputValue) {\n    *(int *)((inputValue >> 5) * 4 + -0x1fff1f00) = 1 << (inputValue & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f94": "set_bit_08003f94",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08007648",
                "FUN_080077b0",
                "FUN_08008694",
                "FUN_0800863c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003fb0": {
            "entrypoint": "0x08003fb0",
            "current_name": "set_bit_in_memory_08003fb0",
            "code": "\nvoid setBitInMemory_08003fb0(uint value)\n\n{\n  if (-1 < (int)value) {\n    *(int *)(((value >> 5) + 0x20) * 4 + -0x1fff1f00) = 1 << (value & 0x1f);\n    DataSynchronizationBarrier(0xf);\n    InstructionSynchronizationBarrier(0xf);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003fb0": "set_bit_in_memory_08003fb0",
                "param_1": "value"
            },
            "calling": [
                "FUN_080076e0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003fd8": {
            "entrypoint": "0x08003fd8",
            "current_name": "initialize_value_08003fd8",
            "code": "\n\n\nundefined4 initializeValue_08003fd8(int inputValue)\n\n{\n  if (inputValue - 1U < 0x1000000) {\n    _DAT_e000e014 = inputValue - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08003fd8": "initialize_value_08003fd8",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_080036d8",
                "FUN_080035b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004004": {
            "entrypoint": "0x08004004",
            "current_name": "set_bit_08004004",
            "code": "\nvoid setBit_08004004(uint bitIndex)\n\n{\n  if (-1 < (int)bitIndex) {\n    *(int *)(((bitIndex >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (bitIndex & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004004": "set_bit_08004004",
                "param_1": "bitIndex"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004024": {
            "entrypoint": "0x08004024",
            "current_name": "update_flag_08004024",
            "code": "\n\n\nvoid updateFlag_08004024(int flag)\n\n{\n  if (flag != 4) {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n    return;\n  }\n  _DAT_e000e010 = _DAT_e000e010 | 4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004024": "update_flag_08004024",
                "param_1": "flag"
            },
            "calling": [
                "FUN_080035b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004044": {
            "entrypoint": "0x08004044",
            "current_name": "FUNC_08004044",
            "code": "\nvoid FUNC_08004044(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004044": "FUNC_08004044"
            },
            "calling": [
                "FUN_08004046"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004046": {
            "entrypoint": "0x08004046",
            "current_name": "execute_initialization_08004046",
            "code": "\nvoid execute_initialization_08004046(void)\n\n{\n  FUNC_08004044();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004046": "execute_initialization_08004046"
            },
            "calling": [
                "FUN_08007246"
            ],
            "called": [
                "FUN_08004044"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004050": {
            "entrypoint": "0x08004050",
            "current_name": "update_data_08004050",
            "code": "\n\n\nundefined4 updateData_08004050(uint **data)\n\n{\n  uint *currentValue;\n  \n  if (*(char *)((int)data + 0x21) != '\\x02') {\n    data[0xe] = (uint *)0x4;\n    return 1;\n  }\n  **data = **data & 0xfffffff1;\n  **data = **data & 0xfffffffe;\n  currentValue = *data;\n  if (currentValue == (uint *)0x40020008) {\n    _DAT_40020004 = 1;\n  }\n  else if (currentValue == (uint *)0x4002001c) {\n    _DAT_40020004 = 0x10;\n  }\n  else if (currentValue == (uint *)0x40020030) {\n    _DAT_40020004 = 0x100;\n  }\n  else if (currentValue == (uint *)0x40020044) {\n    _DAT_40020004 = 0x1000;\n  }\n  else if (currentValue == (uint *)0x40020058) {\n    _DAT_40020004 = 0x10000;\n  }\n  else if (currentValue == (uint *)0x4002006c) {\n    _DAT_40020004 = 0x100000;\n  }\n  else {\n    _DAT_40020004 = 0x1000000;\n  }\n  *(undefined *)((int)data + 0x21) = 1;\n  *(undefined *)(data + 8) = 0;\n  if (data[0xd] != (uint *)0x0) {\n    (*(code *)data[0xd])();\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004050": "update_data_08004050",
                "param_1": "data",
                "puVar1": "currentValue"
            },
            "calling": [
                "FUN_080069ec",
                "FUN_08004f3c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040e8": {
            "entrypoint": "0x080040e8",
            "current_name": "update_flags_and_values_080040e8",
            "code": "\n\n\nvoid updateFlagsAndValues_080040e8(uint *targetFlags,uint *sourceFlags)\n\n{\n  uint *targetPtr;\n  uint currentFlag;\n  uint isFlagSet;\n  uint index;\n  uint flagValue;\n  uint newValue;\n  int bitOffset;\n  int registerIndex;\n  \n  newValue = 0;\n  index = 0;\n  do {\n    if (0xf < index) {\n      return;\n    }\n    currentFlag = 1 << (index & 0xff);\n    isFlagSet = *sourceFlags & currentFlag;\n    if (currentFlag == isFlagSet) {\n      flagValue = sourceFlags[1];\n      if (flagValue == 0x12) {\n        newValue = sourceFlags[3] + 0xc;\n      }\n      else if (flagValue < 0x13) {\n        if (flagValue == 2) {\n          newValue = sourceFlags[3] + 8;\n        }\n        else if (flagValue < 3) {\n          if (flagValue == 0) goto LAB_0800423a;\n          if (flagValue == 1) {\n            newValue = sourceFlags[3];\n          }\n        }\n        else if (flagValue == 3) {\n          newValue = 0;\n        }\n        else if (flagValue == 0x11) {\n          newValue = sourceFlags[3] + 4;\n        }\n      }\n      else if (flagValue == 0x10210000) {\nLAB_0800423a:\n        if (sourceFlags[2] == 0) {\n          newValue = 4;\n        }\n        else if (sourceFlags[2] == 1) {\n          targetFlags[4] = currentFlag;\n          newValue = 8;\n        }\n        else {\n          targetFlags[5] = currentFlag;\n          newValue = 8;\n        }\n      }\n      else if (flagValue < 0x10210001) {\n        if ((flagValue == 0x10110000) || (flagValue == 0x10120000)) goto LAB_0800423a;\n      }\n      else if ((flagValue == 0x10310000) || ((flagValue == 0x10320000 || (flagValue == 0x10220000))))\n      goto LAB_0800423a;\n      currentFlag = index;\n      targetPtr = targetFlags;\n      if (0xff < isFlagSet) {\n        currentFlag = index - 8;\n        targetPtr = targetFlags + 1;\n      }\n      *targetPtr = *targetPtr & ~(0xf << (currentFlag << 2 & 0xff)) | newValue << (currentFlag << 2 & 0xff);\n      if ((sourceFlags[1] & 0x10000000) != 0) {\n        _DAT_40021018 = _DAT_40021018 | 1;\n        bitOffset = (index & 3) << 2;\n        if (targetFlags == (uint *)0x40010800) {\n          registerIndex = 0;\n        }\n        else if (targetFlags == (uint *)0x40010c00) {\n          registerIndex = 1;\n        }\n        else if (targetFlags == (uint *)0x40011000) {\n          registerIndex = 2;\n        }\n        else if (targetFlags == (uint *)0x40011400) {\n          registerIndex = 3;\n        }\n        else {\n          registerIndex = 4;\n        }\n        *(uint *)(((index >> 2) + 2) * 4 + 0x40010000) =\n             *(uint *)(((index >> 2) + 2) * 4 + 0x40010000) & ~(0xf << bitOffset) | registerIndex << bitOffset;\n        if ((sourceFlags[1] & 0x10000) == 0) {\n          _DAT_40010400 = _DAT_40010400 & ~isFlagSet;\n        }\n        else {\n          _DAT_40010400 = _DAT_40010400 | isFlagSet;\n        }\n        if ((sourceFlags[1] & 0x20000) == 0) {\n          _DAT_40010404 = _DAT_40010404 & ~isFlagSet;\n        }\n        else {\n          _DAT_40010404 = _DAT_40010404 | isFlagSet;\n        }\n        if ((sourceFlags[1] & 0x100000) == 0) {\n          _DAT_40010408 = _DAT_40010408 & ~isFlagSet;\n        }\n        else {\n          _DAT_40010408 = _DAT_40010408 | isFlagSet;\n        }\n        if ((sourceFlags[1] & 0x200000) == 0) {\n          _DAT_4001040c = _DAT_4001040c & ~isFlagSet;\n        }\n        else {\n          _DAT_4001040c = isFlagSet | _DAT_4001040c;\n        }\n      }\n    }\n    index = index + 1;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080040e8": "update_flags_and_values_080040e8",
                "param_1": "targetFlags",
                "param_2": "sourceFlags",
                "puVar1": "targetPtr",
                "uVar2": "currentFlag",
                "uVar3": "isFlagSet",
                "uVar4": "index",
                "uVar5": "flagValue",
                "uVar6": "newValue",
                "iVar7": "bitOffset",
                "iVar8": "registerIndex"
            },
            "calling": [
                "FUN_08006ca8",
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08006e68",
                "FUN_08007258"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042d4": {
            "entrypoint": "0x080042d4",
            "current_name": "check_bit_is_set_080042d4",
            "code": "\nundefined4 check_bit_is_set_080042d4(int input_data,uint bit_mask)\n\n{\n  if ((bit_mask & *(uint *)(input_data + 8)) == 0) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080042d4": "check_bit_is_set_080042d4",
                "param_1": "input_data",
                "param_2": "bit_mask"
            },
            "calling": [
                "FUN_080072f0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042e2": {
            "entrypoint": "0x080042e2",
            "current_name": "FUNC_080042e2",
            "code": "\nvoid FUNC_080042e2(int param_1,int param_2,int param_3)\n\n{\n  if (param_3 == 0) {\n    *(int *)(param_1 + 0x10) = param_2 << 0x10;\n    return;\n  }\n  *(int *)(param_1 + 0x10) = param_2;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080042e2": "FUNC_080042e2"
            },
            "calling": [
                "FUN_080072d8"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080042f0": {
            "entrypoint": "0x080042f0",
            "current_name": "update_data_080042f0",
            "code": "\n\n\nvoid updateData_080042f0(uint newData)\n\n{\n  if ((_DAT_40010414 & newData) != 0) {\n    _DAT_40010414 = newData;\n    FUN_08009094();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080042f0": "update_data_080042f0",
                "param_1": "newData"
            },
            "calling": [],
            "called": [
                "FUN_08009094"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800430c": {
            "entrypoint": "0x0800430c",
            "current_name": "set_param_value_0800430c",
            "code": "\nundefined4 setParamValue_0800430c(int *paramArray)\n\n{\n  if (*(char *)((int)paramArray + 0x3e) == '@') {\n    if (paramValue2 == 0) {\n      *(uint *)(*paramArray + 0x10) = paramValue3 & 0xfe;\n    }\n    else {\n      *(uint *)(*paramArray + 0x10) = paramValue3 & 0xffU | 1;\n    }\n  }\n  else if (paramValue5 == 0x4000) {\n    if (*(char *)((int)paramArray + 0x3d) == '!') {\n      *(uint *)(*paramArray + 0x10) = paramValue3 & 0xfe;\n    }\n    else {\n      *(uint *)(*paramArray + 0x10) = paramValue3 & 0xffU | 1;\n    }\n  }\n  else if (paramValue2 == 0) {\n    *(uint *)(*paramArray + 0x10) = (uint)(paramValue3 << 0x10) >> 0x17 & 6 | 0xf0;\n  }\n  else if (paramValue2 == 1) {\n    *(uint *)(*paramArray + 0x10) = (uint)(paramValue3 << 0x10) >> 0x17 & 6 | 0xf1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800430c": "set_param_value_0800430c",
                "param_1": "paramArray",
                "param_1[0x14]": "paramValue2",
                "param_1[0x11]": "paramValue3",
                "param_1[4]": "paramValue5"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004396": {
            "entrypoint": "0x08004396",
            "current_name": "set_param_value_08004396",
            "code": "\nundefined4 set_param_value_08004396(int *ptr_param)\n\n{\n  *(uint *)(*ptr_param + 0x10) = ptr_param[0x11] & 0xff;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004396": "set_param_value_08004396",
                "param_1": "ptr_param"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080043a2": {
            "entrypoint": "0x080043a2",
            "current_name": "set_flag_based_on_conditions_080043a2",
            "code": "\nundefined4 setFlagBasedOnConditions_080043a2(uint **parameters)\n\n{\n  uint *ptrValue;\n  \n  ptrValue = parameters[0xb];\n  if ((*(char *)((int)parameters + 0x3d) == '\\\"') &&\n     ((parameters[0x14] != (uint *)0x0 || (*(char *)((int)parameters + 0x3e) != '@')))) {\n    if ((parameters[0x14] == (uint *)0x0) && (parameters[4] == (uint *)0xc000)) {\n      **parameters = **parameters | 0x100;\n      parameters[0x14] = (uint *)((int)parameters[0x14] + 1);\n    }\n    else {\n      if (*(short *)((int)parameters + 0x2a) == 0) {\n        **parameters = **parameters | 0x200;\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 1) {\n        if (ptrValue == (uint *)0xffff0000) {\n          **parameters = **parameters & 0xfffffbff;\n          ptrValue = *parameters;\n          if ((ptrValue[1] & 0x800) == 0) {\n            *ptrValue = *ptrValue | 0x200;\n          }\n          else {\n            *ptrValue = *ptrValue & 0xfffffbff;\n          }\n        }\n        else if (((ptrValue == (uint *)0x4) || (ptrValue == (uint *)0x8)) ||\n                (parameters[0xc] == (uint *)0x12)) {\n          **parameters = **parameters & 0xfffffbff;\n          **parameters = **parameters | 0x200;\n        }\n        else if (parameters[0xb] == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n        }\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 2) {\n        if (parameters[0xb] == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters | 0x800;\n          **parameters = **parameters & 0xfffffbff;\n        }\n        ptrValue = *parameters;\n        if ((ptrValue[1] & 0x800) != 0) {\n          ptrValue[1] = ptrValue[1] | 0x1000;\n        }\n      }\n      else {\n        **parameters = **parameters | 0x400;\n        ptrValue = *parameters;\n        if ((ptrValue[1] & 0x800) != 0) {\n          ptrValue[1] = ptrValue[1] | 0x1000;\n        }\n      }\n      parameters[0x14] = (uint *)0x0;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080043a2": "set_flag_based_on_conditions_080043a2",
                "param_1": "parameters",
                "puVar1": "ptrValue"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800457c": {
            "entrypoint": "0x0800457c",
            "current_name": "update_data_0800457c",
            "code": "\nundefined4 updateData_0800457c(int *dataPtr)\n\n{\n  byte *bytePtr;\n  \n  if (*(short *)((int)dataPtr + 0x2a) != 0) {\n    bytePtr = (byte *)dataPtr[9];\n    dataPtr[9] = (int)(bytePtr + 1);\n    *(uint *)(*dataPtr + 0x10) = (uint)*bytePtr;\n    *(short *)((int)dataPtr + 0x2a) = *(short *)((int)dataPtr + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800457c": "update_data_0800457c",
                "param_1": "dataPtr",
                "pbVar1": "bytePtr"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800459c": {
            "entrypoint": "0x0800459c",
            "current_name": "update_pointer_0800459c",
            "code": "\nundefined4 updatePointer_0800459c(int *pointer)\n\n{\n  undefined *dataPointer;\n  \n  if (*(short *)((int)pointer + 0x2a) != 0) {\n    dataPointer = (undefined *)pointer[9];\n    pointer[9] = (int)(dataPointer + 1);\n    *dataPointer = (char)*(undefined4 *)(*pointer + 0x10);\n    *(short *)((int)pointer + 0x2a) = *(short *)((int)pointer + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800459c": "update_pointer_0800459c",
                "param_1": "pointer",
                "puVar1": "dataPointer"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080045bc": {
            "entrypoint": "0x080045bc",
            "current_name": "FUNC_080045bc",
            "code": "\nvoid FUNC_080045bc(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080045bc": "FUNC_080045bc"
            },
            "calling": [
                "FUN_080045c0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080045c0": {
            "entrypoint": "0x080045c0",
            "current_name": "FUNC_080045c0",
            "code": "\nundefined4 FUNC_080045c0(uint **param_1)\n\n{\n  bool bVar1;\n  uint uVar2;\n  uint *puVar3;\n  uint uVar4;\n  \n  if (param_1 == (uint **)0x0) {\n    return 1;\n  }\n  if (*(char *)((int)param_1 + 0x3d) == '\\0') {\n    *(undefined *)(param_1 + 0xf) = 0;\n    FUNC_080045bc();\n  }\n  *(undefined *)((int)param_1 + 0x3d) = 0x24;\n  **param_1 = **param_1 & 0xfffffffe;\n  uVar2 = FUN_08005a28();\n  if (param_1[1] < (uint *)0x186a1) {\n    if (uVar2 < 2000000) {\n      bVar1 = true;\n    }\n    else {\n      bVar1 = false;\n    }\n  }\n  else {\n    bVar1 = uVar2 < 4000000;\n  }\n  if (bVar1) {\n    return 1;\n  }\n  uVar4 = uVar2 / 1000000;\n  (*param_1)[1] = uVar4;\n  if ((uint *)0x186a0 < param_1[1]) {\n    uVar4 = (uVar4 * 300) / 1000;\n  }\n  (*param_1)[8] = uVar4 + 1;\n  puVar3 = param_1[1];\n  if (puVar3 < (uint *)0x186a1) {\n    uVar2 = (uVar2 - 1) / (uint)((int)puVar3 << 1) + 1 & 0xfff;\n    if (uVar2 < 4) {\n      uVar2 = 4;\n    }\n  }\n  else {\n    if (param_1[2] == (uint *)0x0) {\n      uVar4 = (uVar2 - 1) / (uint)((int)puVar3 * 3);\n    }\n    else {\n      uVar4 = (uVar2 - 1) / (uint)((int)puVar3 * 0x19);\n    }\n    if ((uVar4 + 1 & 0xfff) == 0) {\n      uVar2 = 1;\n    }\n    else if (param_1[2] == (uint *)0x0) {\n      uVar2 = (uVar2 - 1) / (uint)((int)puVar3 * 3) + 1 & 0xfff | 0x8000;\n    }\n    else {\n      uVar2 = (uVar2 - 1) / (uint)((int)puVar3 * 0x19) + 1 & 0xfff | 0xc000;\n    }\n  }\n  (*param_1)[7] = uVar2;\n  **param_1 = (uint)param_1[7] | (uint)param_1[8];\n  (*param_1)[2] = (uint)param_1[4] | (uint)param_1[3];\n  (*param_1)[3] = (uint)param_1[5] | (uint)param_1[6];\n  **param_1 = **param_1 | 1;\n  param_1[0x10] = (uint *)0x0;\n  *(undefined *)((int)param_1 + 0x3d) = 0x20;\n  param_1[0xc] = (uint *)0x0;\n  *(undefined *)((int)param_1 + 0x3e) = 0;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080045c0": "FUNC_080045c0"
            },
            "calling": [
                "FUN_080077b0"
            ],
            "called": [
                "FUN_080045bc",
                "FUN_08005a28"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004728": {
            "entrypoint": "0x08004728",
            "current_name": "set_flag_and_values_08004728",
            "code": "\nundefined4 setFlagAndValues_08004728(uint **flagParameters,uint *param_2,uint *param_3,undefined2 param_4)\n\n{\n  undefined4 returnValue;\n  uint *ptrToFlagParams;\n  int counter;\n  \n  if (*(char *)((int)flagParameters + 0x3d) == ' ') {\n    counter = (DAT_20000018 / 25000) * 0x19;\n    do {\n      if (counter == 0) {\n        flagParameters[0xc] = (uint *)0x0;\n        *(undefined *)((int)flagParameters + 0x3d) = 0x20;\n        *(undefined *)(flagParameters + 0xf) = 0;\n        return 3;\n      }\n      ptrToFlagParams = *flagParameters;\n      counter = counter + -1;\n    } while ((ptrToFlagParams[6] & 2) != 0);\n    if (*(char *)(flagParameters + 0xf) == '\\x01') {\n      returnValue = 2;\n    }\n    else {\n      *(undefined *)(flagParameters + 0xf) = 1;\n      if ((*ptrToFlagParams & 1) == 0) {\n        *ptrToFlagParams = *ptrToFlagParams | 1;\n      }\n      **flagParameters = **flagParameters & 0xfffff7ff;\n      *(undefined *)((int)flagParameters + 0x3d) = 0x21;\n      *(undefined *)((int)flagParameters + 0x3e) = 0x10;\n      returnValue = 0;\n      flagParameters[0x10] = (uint *)0x0;\n      flagParameters[9] = param_3;\n      *(undefined2 *)((int)flagParameters + 0x2a) = param_4;\n      flagParameters[0xb] = (uint *)0xffff0000;\n      *(undefined2 *)(flagParameters + 10) = *(undefined2 *)((int)flagParameters + 0x2a);\n      flagParameters[0x11] = param_2;\n      **flagParameters = **flagParameters | 0x100;\n      *(undefined *)(flagParameters + 0xf) = 0;\n      (*flagParameters)[1] = (*flagParameters)[1] | 0x700;\n    }\n  }\n  else {\n    returnValue = 2;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08004728": "set_flag_and_values_08004728",
                "param_1": "flagParameters",
                "uVar1": "returnValue",
                "puVar2": "ptrToFlagParams",
                "local_c": "counter"
            },
            "calling": [
                "FUN_08007e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047f4": {
            "entrypoint": "0x080047f4",
            "current_name": "process_input_080047f4",
            "code": "\nundefined4 processInput_080047f4(uint **inputData,uint *param2,uint *param3,undefined2 param4)\n\n{\n  undefined4 result;\n  uint *ptr;\n  int counter;\n  \n  if (*(char *)((int)inputData + 0x3d) == ' ') {\n    counter = (DAT_20000018 / 25000) * 0x19;\n    do {\n      if (counter == 0) {\n        inputData[0xc] = (uint *)0x0;\n        *(undefined *)((int)inputData + 0x3d) = 0x20;\n        *(undefined *)(inputData + 0xf) = 0;\n        return 3;\n      }\n      ptr = *inputData;\n      counter = counter + -1;\n    } while ((ptr[6] & 2) != 0);\n    if (*(char *)(inputData + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(inputData + 0xf) = 1;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **inputData = **inputData & 0xfffff7ff;\n      *(undefined *)((int)inputData + 0x3d) = 0x22;\n      *(undefined *)((int)inputData + 0x3e) = 0x10;\n      result = 0;\n      inputData[0x10] = (uint *)0x0;\n      inputData[9] = param3;\n      *(undefined2 *)((int)inputData + 0x2a) = param4;\n      inputData[0xb] = (uint *)0xffff0000;\n      *(undefined2 *)(inputData + 10) = *(undefined2 *)((int)inputData + 0x2a);\n      inputData[0x11] = param2;\n      **inputData = **inputData | 0x400;\n      **inputData = **inputData | 0x100;\n      *(undefined *)(inputData + 0xf) = 0;\n      (*inputData)[1] = (*inputData)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080047f4": "process_input_080047f4",
                "param_1": "inputData",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "result",
                "puVar2": "ptr",
                "local_c": "counter"
            },
            "calling": [
                "FUN_08007f0e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080048c8": {
            "entrypoint": "0x080048c8",
            "current_name": "validate_input_080048c8",
            "code": "\nundefined4 validateInput_080048c8(uint **input,uint *paramA,int paramB,uint *paramC)\n\n{\n  undefined4 result;\n  uint *ptr;\n  \n  if (*(char *)((int)input + 0x3d) == '(') {\n    if (paramA == (uint *)0x0) {\n      result = 1;\n    }\n    else if (paramB == 0) {\n      result = 1;\n    }\n    else if (*(char *)(input + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(input + 0xf) = 1;\n      ptr = *input;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **input = **input & 0xfffff7ff;\n      *(undefined *)((int)input + 0x3d) = 0x29;\n      *(undefined *)((int)input + 0x3e) = 0x20;\n      result = 0;\n      input[0x10] = (uint *)0x0;\n      input[9] = paramA;\n      *(short *)((int)input + 0x2a) = (short)paramB;\n      input[0xb] = paramC;\n      *(undefined2 *)(input + 10) = *(undefined2 *)((int)input + 0x2a);\n      *(undefined *)(input + 0xf) = 0;\n      (*input)[1] = (*input)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080048c8": "validate_input_080048c8",
                "param_1": "input",
                "param_2": "paramA",
                "param_3": "paramB",
                "param_4": "paramC",
                "uVar1": "result",
                "puVar2": "ptr"
            },
            "calling": [
                "FUN_08007fa0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004954": {
            "entrypoint": "0x08004954",
            "current_name": "verify_and_initialize_08004954",
            "code": "\nundefined4 verify_and_initialize_08004954(uint **pointer_array,uint *data_pointer,int size,uint *target_array)\n\n{\n  undefined4 result;\n  uint *temp_pointer;\n  \n  if (*(char *)((int)pointer_array + 0x3d) == '(') {\n    if (data_pointer == (uint *)0x0) {\n      result = 1;\n    }\n    else if (size == 0) {\n      result = 1;\n    }\n    else if (*(char *)(pointer_array + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(pointer_array + 0xf) = 1;\n      temp_pointer = *pointer_array;\n      if ((*temp_pointer & 1) == 0) {\n        *temp_pointer = *temp_pointer | 1;\n      }\n      **pointer_array = **pointer_array & 0xfffff7ff;\n      *(undefined *)((int)pointer_array + 0x3d) = 0x2a;\n      *(undefined *)((int)pointer_array + 0x3e) = 0x20;\n      result = 0;\n      pointer_array[0x10] = (uint *)0x0;\n      pointer_array[9] = data_pointer;\n      *(short *)((int)pointer_array + 0x2a) = (short)size;\n      pointer_array[0xb] = target_array;\n      *(undefined2 *)(pointer_array + 10) = *(undefined2 *)((int)pointer_array + 0x2a);\n      *(undefined *)(pointer_array + 0xf) = 0;\n      (*pointer_array)[1] = (*pointer_array)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08004954": "verify_and_initialize_08004954",
                "param_1": "pointer_array",
                "param_2": "data_pointer",
                "param_3": "size",
                "param_4": "target_array",
                "uVar1": "result",
                "puVar2": "temp_pointer"
            },
            "calling": [
                "FUN_08007fa0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080049e0": {
            "entrypoint": "0x080049e0",
            "current_name": "initialize_flags_080049e0",
            "code": "\nundefined4 initializeFlags_080049e0(uint **flags)\n\n{\n  uint *ptrToFlags;\n  \n  if (*(char *)((int)flags + 0x3d) != ' ') {\n    return 2;\n  }\n  *(undefined *)((int)flags + 0x3d) = 0x28;\n  ptrToFlags = *flags;\n  if ((*ptrToFlags & 1) == 0) {\n    *ptrToFlags = *ptrToFlags | 1;\n  }\n  **flags = **flags | 0x400;\n  (*flags)[1] = (*flags)[1] | 0x300;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080049e0": "initialize_flags_080049e0",
                "param_1": "flags",
                "puVar1": "ptrToFlags"
            },
            "calling": [
                "FUN_08008020",
                "FUN_08007f8e",
                "FUN_08007ff0",
                "FUN_08007f7c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a1e": {
            "entrypoint": "0x08004a1e",
            "current_name": "FUNC_08004a1e",
            "code": "\nvoid FUNC_08004a1e(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a1e": "FUNC_08004a1e"
            },
            "calling": [
                "FUN_08004b82",
                "FUN_08004ccc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004a20": {
            "entrypoint": "0x08004a20",
            "current_name": "FUNC_08004a20",
            "code": "\nvoid FUNC_08004a20(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a20": "FUNC_08004a20"
            },
            "calling": [
                "FUN_08004e3c",
                "FUN_08004d6c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004a22": {
            "entrypoint": "0x08004a22",
            "current_name": "FUNC_08004a22",
            "code": "\nvoid FUNC_08004a22(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a22": "FUNC_08004a22"
            },
            "calling": [
                "FUN_08004aec",
                "FUN_08004a24"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004a24": {
            "entrypoint": "0x08004a24",
            "current_name": "handle_data_08004a24",
            "code": "\nundefined4 handleData_08004a24(int *data)\n\n{\n  char charValue;\n  byte *bytePtr;\n  \n  charValue = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    bytePtr = (byte *)data[9];\n    data[9] = (int)(bytePtr + 1);\n    *(uint *)(*data + 0x10) = (uint)*bytePtr;\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (charValue == ')')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      data[0xc] = 0x21;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      FUNC_08004a22();\n    }\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004a24": "handle_data_08004a24",
                "param_1": "data",
                "cVar1": "charValue",
                "pbVar2": "bytePtr"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a22"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a74": {
            "entrypoint": "0x08004a74",
            "current_name": "FUNC_08004a74",
            "code": "\nvoid FUNC_08004a74(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a74": "FUNC_08004a74"
            },
            "calling": [
                "FUN_08004a76",
                "FUN_08005084"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004a76": {
            "entrypoint": "0x08004a76",
            "current_name": "process_param_08004a76",
            "code": "\nundefined4 processParam_08004a76(int *paramArray)\n\n{\n  char charValue;\n  undefined *ptr;\n  \n  charValue = *(char *)((int)paramArray + 0x3d);\n  if (*(short *)((int)paramArray + 0x2a) != 0) {\n    ptr = (undefined *)paramArray[9];\n    paramArray[9] = (int)(ptr + 1);\n    *ptr = (char)*(undefined4 *)(*paramArray + 0x10);\n    *(short *)((int)paramArray + 0x2a) = *(short *)((int)paramArray + 0x2a) + -1;\n    if ((*(short *)((int)paramArray + 0x2a) == 0) && (charValue == '*')) {\n      *(uint *)(*paramArray + 4) = *(uint *)(*paramArray + 4) & 0xfffffbff;\n      paramArray[0xc] = 0x22;\n      *(undefined *)((int)paramArray + 0x3d) = 0x28;\n      FUNC_08004a74();\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004a76": "process_param_08004a76",
                "param_1": "paramArray",
                "cVar1": "charValue",
                "puVar2": "ptr"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ac2": {
            "entrypoint": "0x08004ac2",
            "current_name": "process_data_08004ac2",
            "code": "\nundefined4 processData_08004ac2(int *dataPtr,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined2 selectedValue;\n  uint flag;\n  \n  flag = *(uint *)(*dataPtr + 0x18);\n  if ((flag & 0x80) == 0) {\n    selectedValue = *(undefined2 *)(dataPtr + 3);\n  }\n  else {\n    selectedValue = *(undefined2 *)(dataPtr + 6);\n  }\n  FUN_08007fa0(dataPtr,(*(uint *)(*dataPtr + 0x18) & 4) == 0,selectedValue,flag,param4);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004ac2": "process_data_08004ac2",
                "param_1": "dataPtr",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "selectedValue",
                "uVar2": "flag"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08007fa0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004aec": {
            "entrypoint": "0x08004aec",
            "current_name": "process_param_08004aec",
            "code": "\nundefined4 processParam_08004aec(uint **paramArray)\n\n{\n  if (((paramArray[11] == (uint *)0x4) || (paramArray[11] == (uint *)0x8)) &&\n     (*(char *)((int)paramArray + 0x3d) == '(')) {\n    paramArray[11] = (uint *)0xffff0000;\n    (*paramArray)[1] = (*paramArray)[1] & 0xfffff8ff;\n    (*paramArray)[5] = 0xfffffbff;\n    **paramArray = **paramArray & 0xfffffbff;\n    paramArray[12] = (uint *)0x0;\n    *(undefined *)((int)paramArray + 0x3d) = 0x20;\n    *(undefined *)((int)paramArray + 0x3e) = 0;\n    FUN_08007ff0();\n  }\n  else if (*(char *)((int)paramArray + 0x3d) == '!') {\n    paramArray[11] = (uint *)0xffff0000;\n    paramArray[12] = (uint *)0x21;\n    *(undefined *)((int)paramArray + 0x3d) = 0x20;\n    *(undefined *)((int)paramArray + 0x3e) = 0;\n    (*paramArray)[1] = (*paramArray)[1] & 0xfffff8ff;\n    (*paramArray)[5] = 0xfffffbff;\n    **paramArray = **paramArray & 0xfffffbff;\n    FUNC_08004a22();\n  }\n  else {\n    (*paramArray)[5] = 0xfffffbff;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004aec": "process_param_08004aec",
                "param_1": "paramArray",
                "param_1[0xb]": "paramArray[11]",
                "param_1[0xc]": "paramArray[12]"
            },
            "calling": [
                "FUN_080052f0"
            ],
            "called": [
                "FUN_08007ff0",
                "FUN_08004a22"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b80": {
            "entrypoint": "0x08004b80",
            "current_name": "FUNC_08004b80",
            "code": "\nvoid FUNC_08004b80(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b80": "FUNC_08004b80"
            },
            "calling": [
                "FUN_08004b82",
                "FUN_08004ccc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004b82": {
            "entrypoint": "0x08004b82",
            "current_name": "update_config_08004b82",
            "code": "\nundefined4 updateConfig_08004b82(uint **config)\n\n{\n  char configChar;\n  uint *ptrValue;\n  \n  configChar = *(char *)((int)config + 0x3d);\n  ptrValue = config[0xb];\n  if ((*(short *)(config + 10) == 0) && (configChar == '!')) {\n    if ((ptrValue == (uint *)0x4) || ((ptrValue == (uint *)0x8 || (ptrValue == (uint *)0xffff0000)))) {\n      (*config)[1] = (*config)[1] & 0xfffff8ff;\n      **config = **config | 0x200;\n      config[0xc] = (uint *)0x0;\n      *(undefined *)((int)config + 0x3d) = 0x20;\n      if (*(char *)((int)config + 0x3e) == '@') {\n        *(undefined *)((int)config + 0x3e) = 0;\n        FUNC_08004b80();\n      }\n      else {\n        *(undefined *)((int)config + 0x3e) = 0;\n        FUNC_08004a1e();\n      }\n    }\n    else {\n      (*config)[1] = (*config)[1] & 0xfffff8ff;\n      config[0xc] = (uint *)0x11;\n      *(undefined *)((int)config + 0x3e) = 0;\n      *(undefined *)((int)config + 0x3d) = 0x20;\n      FUNC_08004a1e();\n    }\n  }\n  else if ((configChar == '!') || ((*(char *)((int)config + 0x3e) == '@' && (configChar == '\\\"')))) {\n    if (*(short *)((int)config + 0x2a) == 0) {\n      (*config)[1] = (*config)[1] & 0xfffffbff;\n    }\n    else if (*(char *)((int)config + 0x3e) == '@') {\n      if (config[0x14] == (uint *)0x0) {\n        if (config[0x13] == (uint *)0x1) {\n          (*config)[4] = (uint)config[0x12] & 0xff;\n          config[0x14] = (uint *)((int)config[0x14] + 2);\n        }\n        else {\n          (*config)[4] = (uint)((int)config[0x12] << 0x10) >> 0x18;\n          config[0x14] = (uint *)((int)config[0x14] + 1);\n        }\n      }\n      else if (config[0x14] == (uint *)0x1) {\n        (*config)[4] = (uint)config[0x12] & 0xff;\n        config[0x14] = (uint *)((int)config[0x14] + 1);\n      }\n      else if (config[0x14] == (uint *)0x2) {\n        if (*(char *)((int)config + 0x3d) == '\\\"') {\n          **config = **config | 0x100;\n        }\n        else if (*(char *)((int)config + 0x3d) == '!') {\n          ptrValue = config[9];\n          config[9] = (uint *)((int)ptrValue + 1);\n          (*config)[4] = (uint)*(byte *)ptrValue;\n          *(short *)((int)config + 0x2a) = *(short *)((int)config + 0x2a) + -1;\n        }\n      }\n    }\n    else {\n      ptrValue = config[9];\n      config[9] = (uint *)((int)ptrValue + 1);\n      (*config)[4] = (uint)*(byte *)ptrValue;\n      *(short *)((int)config + 0x2a) = *(short *)((int)config + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004b82": "update_config_08004b82",
                "param_1": "config",
                "cVar1": "configChar",
                "puVar2": "ptrValue"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a1e",
                "FUN_08004b80"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ccc": {
            "entrypoint": "0x08004ccc",
            "current_name": "process_parameter_08004ccc",
            "code": "\nundefined4 processParameter_08004ccc(uint **parameters)\n\n{\n  uint *tempPointer;\n  \n  tempPointer = parameters[0xb];\n  if (*(char *)((int)parameters + 0x3d) == '!') {\n    if (*(short *)((int)parameters + 0x2a) == 0) {\n      if (((tempPointer == (uint *)0x4) || (tempPointer == (uint *)0x8)) || (tempPointer == (uint *)0xffff0000)) {\n        (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n        **parameters = **parameters | 0x200;\n        parameters[0xc] = (uint *)0x0;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        if (*(char *)((int)parameters + 0x3e) == '@') {\n          *(undefined *)((int)parameters + 0x3e) = 0;\n          FUNC_08004b80();\n        }\n        else {\n          *(undefined *)((int)parameters + 0x3e) = 0;\n          FUNC_08004a1e();\n        }\n      }\n      else {\n        (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n        parameters[0xc] = (uint *)0x11;\n        *(undefined *)((int)parameters + 0x3e) = 0;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        FUNC_08004a1e();\n      }\n    }\n    else {\n      tempPointer = parameters[9];\n      parameters[9] = (uint *)((int)tempPointer + 1);\n      (*parameters)[4] = (uint)*(byte *)tempPointer;\n      *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004ccc": "process_parameter_08004ccc",
                "param_1": "parameters",
                "puVar1": "tempPointer"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a1e",
                "FUN_08004b80"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d6a": {
            "entrypoint": "0x08004d6a",
            "current_name": "FUNC_08004d6a",
            "code": "\nvoid FUNC_08004d6a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d6a": "FUNC_08004d6a"
            },
            "calling": [
                "FUN_08004e3c",
                "FUN_08004d6c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004d6c": {
            "entrypoint": "0x08004d6c",
            "current_name": "apply_flag_updates_08004d6c",
            "code": "\nundefined4 applyFlagUpdates_08004d6c(uint **flags)\n\n{\n  uint *ptr;\n  \n  if (*(char *)((int)flags + 0x3d) == '\\\"') {\n    if (*(ushort *)((int)flags + 0x2a) < 4) {\n      if (*(ushort *)((int)flags + 0x2a) - 2 < 2) {\n        if (flags[0xb] == (uint *)0x2) {\n          **flags = **flags | 0x400;\n        }\n        else {\n          **flags = **flags & 0xfffffbff;\n          **flags = **flags | 0x800;\n        }\n        (*flags)[1] = (*flags)[1] & 0xfffffbff;\n      }\n      else {\n        if (flags[0xb] == (uint *)0x2) {\n          **flags = **flags | 0x400;\n        }\n        else {\n          **flags = **flags & 0xfffffbff;\n        }\n        (*flags)[1] = (*flags)[1] & 0xfffff8ff;\n        ptr = flags[9];\n        flags[9] = (uint *)((int)ptr + 1);\n        *(char *)ptr = (char)(*flags)[4];\n        *(short *)((int)flags + 0x2a) = *(short *)((int)flags + 0x2a) + -1;\n        *(undefined *)((int)flags + 0x3d) = 0x20;\n        flags[0xc] = (uint *)0x0;\n        if (*(char *)((int)flags + 0x3e) == '@') {\n          *(undefined *)((int)flags + 0x3e) = 0;\n          FUNC_08004d6a();\n        }\n        else {\n          *(undefined *)((int)flags + 0x3e) = 0;\n          FUNC_08004a20();\n        }\n      }\n    }\n    else {\n      ptr = flags[9];\n      flags[9] = (uint *)((int)ptr + 1);\n      *(char *)ptr = (char)(*flags)[4];\n      *(short *)((int)flags + 0x2a) = *(short *)((int)flags + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004d6c": "apply_flag_updates_08004d6c",
                "param_1": "flags",
                "puVar1": "ptr"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004d6a",
                "FUN_08004a20"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e3c": {
            "entrypoint": "0x08004e3c",
            "current_name": "update_state_08004e3c",
            "code": "\nundefined4 updateState_08004e3c(uint **state)\n\n{\n  uint *currentValue;\n  \n  currentValue = state[0xb];\n  if (*(short *)((int)state + 0x2a) == 3) {\n    if (((currentValue == (uint *)0x4) || (currentValue == (uint *)0x8)) || (currentValue == (uint *)0xffff0000)) {\n      **state = **state & 0xfffffbff;\n    }\n    currentValue = state[9];\n    state[9] = (uint *)((int)currentValue + 1);\n    *(char *)currentValue = (char)(*state)[4];\n    *(short *)((int)state + 0x2a) = *(short *)((int)state + 0x2a) + -1;\n  }\n  else if (*(short *)((int)state + 0x2a) == 2) {\n    if (((currentValue == (uint *)0x4) || (currentValue == (uint *)0x8)) || (currentValue == (uint *)0xffff0000)) {\n      (*state)[1] = (*state)[1] & 0xfffffcff;\n      **state = **state | 0x200;\n    }\n    else {\n      if (currentValue == (uint *)0x2) {\n        **state = **state | 0x400;\n      }\n      else {\n        **state = **state & 0xfffffbff;\n      }\n      (*state)[1] = (*state)[1] & 0xfffffcff;\n    }\n    currentValue = state[9];\n    state[9] = (uint *)((int)currentValue + 1);\n    *(char *)currentValue = (char)(*state)[4];\n    *(short *)((int)state + 0x2a) = *(short *)((int)state + 0x2a) + -1;\n    currentValue = state[9];\n    state[9] = (uint *)((int)currentValue + 1);\n    *(char *)currentValue = (char)(*state)[4];\n    *(short *)((int)state + 0x2a) = *(short *)((int)state + 0x2a) + -1;\n    *(undefined *)((int)state + 0x3d) = 0x20;\n    state[0xc] = (uint *)0x0;\n    if (*(char *)((int)state + 0x3e) == '@') {\n      *(undefined *)((int)state + 0x3e) = 0;\n      FUNC_08004d6a();\n    }\n    else {\n      *(undefined *)((int)state + 0x3e) = 0;\n      FUNC_08004a20();\n    }\n  }\n  else {\n    currentValue = state[9];\n    state[9] = (uint *)((int)currentValue + 1);\n    *(char *)currentValue = (char)(*state)[4];\n    *(short *)((int)state + 0x2a) = *(short *)((int)state + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004e3c": "update_state_08004e3c",
                "param_1": "state",
                "puVar1": "currentValue"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004d6a",
                "FUN_08004a20"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004f3a": {
            "entrypoint": "0x08004f3a",
            "current_name": "FUNC_08004f3a",
            "code": "\nvoid FUNC_08004f3a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004f3a": "FUNC_08004f3a"
            },
            "calling": [
                "FUN_08004f3c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004f3c": {
            "entrypoint": "0x08004f3c",
            "current_name": "process_function_08004f3c",
            "code": "\nvoid process_function_08004f3c(uint **input_array)\n\n{\n  int result;\n  uint *temp_pointer_1;\n  uint *temp_pointer_2;\n  \n  if (*(byte *)((int)input_array + 0x3d) - 0x29 < 2) {\n    input_array[0xc] = (uint *)0x0;\n    *(undefined *)((int)input_array + 0x3d) = 0x28;\n  }\n  else {\n    if ((*(char *)((int)input_array + 0x3d) != '`') && (((*input_array)[1] & 0x800) == 0)) {\n      *(undefined *)((int)input_array + 0x3d) = 0x20;\n    }\n    input_array[0xc] = (uint *)0x0;\n    *(undefined *)((int)input_array + 0x3e) = 0;\n  }\n  **input_array = **input_array & 0xfffff7ff;\n  temp_pointer_2 = *input_array;\n  if ((temp_pointer_2[1] & 0x800) == 0) {\n    if (*(char *)((int)input_array + 0x3d) == '`') {\n      *(undefined *)((int)input_array + 0x3d) = 0x20;\n      input_array[0x10] = (uint *)0x0;\n      if ((temp_pointer_2[5] & 0x40) != 0) {\n        temp_pointer_1 = input_array[9];\n        input_array[9] = (uint *)((int)temp_pointer_1 + 1);\n        *(char *)temp_pointer_1 = (char)temp_pointer_2[4];\n      }\n      **input_array = **input_array & 0xfffffffe;\n      FUNC_08004f3a(input_array);\n    }\n    else {\n      if ((temp_pointer_2[5] & 0x40) != 0) {\n        temp_pointer_1 = input_array[9];\n        input_array[9] = (uint *)((int)temp_pointer_1 + 1);\n        *(char *)temp_pointer_1 = (char)temp_pointer_2[4];\n      }\n      FUN_08008020(input_array);\n    }\n  }\n  else {\n    temp_pointer_2[1] = temp_pointer_2[1] & 0xfffff7ff;\n    if (*(char *)((int)input_array[0xd] + 0x21) == '\\x01') {\n      input_array[0xe][0xd] = (uint)&LAB_080053cc_1;\n      result = FUN_08004050(input_array[0xe]);\n      if (result != 0) {\n        if (((*input_array)[5] & 0x40) != 0) {\n          temp_pointer_2 = input_array[9];\n          input_array[9] = (uint *)((int)temp_pointer_2 + 1);\n          *(char *)temp_pointer_2 = (char)(*input_array)[4];\n        }\n        **input_array = **input_array & 0xfffffffe;\n        *(undefined *)((int)input_array + 0x3d) = 0x20;\n        (*(code *)input_array[0xe][0xd])();\n      }\n    }\n    else {\n      input_array[0xd][0xd] = (uint)&LAB_080053cc_1;\n      result = FUN_08004050(input_array[0xd]);\n      if (result != 0) {\n        **input_array = **input_array & 0xfffffffe;\n        *(undefined *)((int)input_array + 0x3d) = 0x20;\n        (*(code *)input_array[0xd][0xd])();\n      }\n    }\n  }\n  if ((*(char *)((int)input_array + 0x3d) == '(') && (((uint)input_array[0x10] & 4) != 0)) {\n    input_array[0xb] = (uint *)0xffff0000;\n    input_array[0xc] = (uint *)0x0;\n    *(undefined *)((int)input_array + 0x3d) = 0x20;\n    *(undefined *)((int)input_array + 0x3e) = 0;\n    FUN_08007ff0(input_array);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004f3c": "process_function_08004f3c",
                "param_1": "input_array",
                "iVar1": "result",
                "puVar2": "temp_pointer_1",
                "puVar3": "temp_pointer_2"
            },
            "calling": [
                "FUN_080052f0",
                "FUN_08005084"
            ],
            "called": [
                "FUN_08008020",
                "FUN_08004050",
                "FUN_08004f3a",
                "FUN_08007ff0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005084": {
            "entrypoint": "0x08005084",
            "current_name": "process_function_08005084",
            "code": "\nundefined4 processFunction_08005084(uint **parameters)\n\n{\n  char character;\n  uint *pointer2;\n  uint *pointer3;\n  \n  character = *(char *)((int)parameters + 0x3d);\n  (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n  **parameters = **parameters | 1;\n  **parameters = **parameters & 0xfffffbff;\n  pointer2 = *parameters;\n  if ((pointer2[1] & 0x800) != 0) {\n    if ((*(char *)((int)parameters + 0x3d) == '\\\"') || (*(char *)((int)parameters + 0x3d) == '*')) {\n      *(short *)((int)parameters + 0x2a) = (short)*(undefined4 *)(*parameters[0xe] + 4);\n    }\n    else {\n      *(short *)((int)parameters + 0x2a) = (short)*(undefined4 *)(*parameters[0xd] + 4);\n    }\n  }\n  if (*(short *)((int)parameters + 0x2a) != 0) {\n    if ((pointer2[5] & 4) != 0) {\n      pointer3 = parameters[9];\n      parameters[9] = (uint *)((int)pointer3 + 1);\n      *(char *)pointer3 = (char)pointer2[4];\n      *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    }\n    if (((*parameters)[5] & 0x40) != 0) {\n      pointer2 = parameters[9];\n      parameters[9] = (uint *)((int)pointer2 + 1);\n      *(char *)pointer2 = (char)(*parameters)[4];\n      *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    }\n    parameters[0x10] = (uint *)((uint)parameters[0x10] | 4);\n  }\n  if (parameters[0x10] == (uint *)0x0) {\n    if (((character == '(') || (character == '*')) || (character == ')')) {\n      parameters[0xb] = (uint *)0xffff0000;\n      parameters[0xc] = (uint *)0x0;\n      *(undefined *)((int)parameters + 0x3d) = 0x20;\n      *(undefined *)((int)parameters + 0x3e) = 0;\n      FUN_08007ff0();\n    }\n    else if ((parameters[0xc] == (uint *)0x22) || (character == '\\\"')) {\n      parameters[0xc] = (uint *)0x0;\n      *(undefined *)((int)parameters + 0x3d) = 0x20;\n      *(undefined *)((int)parameters + 0x3e) = 0;\n      FUNC_08004a74();\n    }\n  }\n  else {\n    FUN_08004f3c();\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005084": "process_function_08005084",
                "param_1": "parameters",
                "cVar1": "character",
                "puVar2": "pointer2",
                "puVar3": "pointer3"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a74",
                "FUN_08007ff0",
                "FUN_08004f3c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005188": {
            "entrypoint": "0x08005188",
            "current_name": "process_data_08005188",
            "code": "\nvoid processData_08005188(int *data_ptr)\n\n{\n  int value;\n  uint flag1;\n  uint flag2;\n  uint flag3;\n  \n  value = *data_ptr;\n  flag3 = *(uint *)(value + 0x18);\n  flag1 = *(uint *)(value + 0x14);\n  flag2 = *(uint *)(value + 4);\n  if ((*(char *)((int)data_ptr + 0x3e) == '\\x10') || (*(char *)((int)data_ptr + 0x3e) == '@')) {\n    if (((flag1 & 0x10001) == 0) || ((flag2 & 0x200) == 0)) {\n      if (((flag1 & 0x10008) == 0) || ((flag2 & 0x200) == 0)) {\n        if (((flag1 & 0x10002) != 0) && ((flag2 & 0x200) != 0)) {\n          FUN_080043a2(data_ptr);\n        }\n      }\n      else {\n        FUN_08004396(data_ptr);\n      }\n    }\n    else {\n      FUN_0800430c(data_ptr);\n    }\n    if ((flag3 & 0x100004) == 0) {\n      if ((((flag1 & 0x10040) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08004d6c(data_ptr);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_08004e3c(data_ptr);\n        return;\n      }\n    }\n    else {\n      if ((((flag1 & 0x10080) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08004b82(data_ptr);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_08004ccc(data_ptr);\n        return;\n      }\n    }\n  }\n  else {\n    if (((flag1 & 0x10002) != 0) && ((flag2 & 0x200) != 0)) {\n      FUN_08004ac2();\n      return;\n    }\n    if (((flag1 & 0x10010) != 0) && ((flag2 & 0x200) != 0)) {\n      FUN_08005084(data_ptr);\n      return;\n    }\n    if ((flag3 & 0x100004) == 0) {\n      if ((((flag1 & 0x10040) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08004a76(data_ptr);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_0800459c(data_ptr);\n      }\n    }\n    else {\n      if ((((flag1 & 0x10080) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08004a24(data_ptr);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_0800457c(data_ptr);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005188": "process_data_08005188",
                "param_1": "data_ptr",
                "iVar1": "value",
                "uVar2": "flag1",
                "uVar3": "flag2",
                "uVar4": "flag3"
            },
            "calling": [],
            "called": [
                "FUN_08004e3c",
                "FUN_08004ccc",
                "FUN_08004396",
                "FUN_08004ac2",
                "FUN_08004a76",
                "FUN_0800459c",
                "FUN_0800457c",
                "FUN_080043a2",
                "FUN_08005084",
                "FUN_0800430c",
                "FUN_08004a24",
                "FUN_08004b82",
                "FUN_08004d6c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052f0": {
            "entrypoint": "0x080052f0",
            "current_name": "update_permissions_080052f0",
            "code": "\nvoid updatePermissions_080052f0(uint **parameters)\n\n{\n  char character;\n  uint *pointer1;\n  uint value1;\n  uint value2;\n  \n  pointer1 = *parameters;\n  value1 = pointer1[5];\n  value2 = pointer1[1];\n  if (((value1 & 0x10100) != 0) && ((value2 & 0x100) != 0)) {\n    parameters[0x10] = (uint *)((uint)parameters[0x10] | 1);\n    pointer1[5] = 0xfffffeff;\n    **parameters = **parameters | 0x8000;\n  }\n  if (((value1 & 0x10200) != 0) && ((value2 & 0x100) != 0)) {\n    parameters[0x10] = (uint *)((uint)parameters[0x10] | 2);\n    (*parameters)[5] = 0xfffffdff;\n  }\n  if (((value1 & 0x10400) != 0) && ((value2 & 0x100) != 0)) {\n    character = *(char *)((int)parameters + 0x3d);\n    if (((*(char *)((int)parameters + 0x3e) == ' ') && (*(short *)((int)parameters + 0x2a) == 0)) &&\n       (((character == '!' || (character == ')')) || ((character == '(' && (parameters[0xc] == (uint *)0x21)))))) {\n      FUN_08004aec(parameters);\n    }\n    else {\n      parameters[0x10] = (uint *)((uint)parameters[0x10] | 4);\n      if (*(char *)((int)parameters + 0x3e) == '\\x10') {\n        **parameters = **parameters | 0x200;\n      }\n      (*parameters)[5] = 0xfffffbff;\n    }\n  }\n  if (((value1 & 0x10800) != 0) && ((value2 & 0x100) != 0)) {\n    parameters[0x10] = (uint *)((uint)parameters[0x10] | 8);\n    (*parameters)[5] = 0xfffff7ff;\n  }\n  if (parameters[0x10] != (uint *)0x0) {\n    FUN_08004f3c(parameters);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080052f0": "update_permissions_080052f0",
                "param_1": "parameters",
                "cVar1": "character",
                "puVar2": "pointer1",
                "uVar3": "value1",
                "uVar4": "value2"
            },
            "calling": [],
            "called": [
                "FUN_08004aec",
                "FUN_08004f3c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800542a": {
            "entrypoint": "0x0800542a",
            "current_name": "get_value_at_index_0800542a",
            "code": "\nundefined getValueAtIndex_0800542a(int index)\n\n{\n  return *(undefined *)(index + 0x3d);\n}\n\n",
            "renaming": {
                "FUN_0800542a": "get_value_at_index_0800542a",
                "param_1": "index"
            },
            "calling": [
                "FUN_08007f0e",
                "FUN_08007e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005430": {
            "entrypoint": "0x08005430",
            "current_name": "get_offset_value_08005430",
            "code": "\nundefined4 getOffsetValue_08005430(int address)\n\n{\n  return *(undefined4 *)(address + 0x40);\n}\n\n",
            "renaming": {
                "FUN_08005430": "get_offset_value_08005430",
                "param_1": "address"
            },
            "calling": [
                "FUN_08007f0e",
                "FUN_08007e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005434": {
            "entrypoint": "0x08005434",
            "current_name": "delay_function_08005434",
            "code": "\nvoid delayFunction_08005434(int input)\n\n{\n  bool isNotZero;\n  int delayCounter;\n  \n  delayCounter = input * (DAT_20000018 / 8000);\n  do {\n    isNotZero = delayCounter != 0;\n    delayCounter = delayCounter + -1;\n  } while (isNotZero);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005434": "delay_function_08005434",
                "param_1": "input",
                "bVar1": "isNotZero",
                "local_4": "delayCounter"
            },
            "calling": [
                "FUN_08005460"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005460": {
            "entrypoint": "0x08005460",
            "current_name": "check_status_08005460",
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nundefined4 checkStatus_08005460(uint *param_1)\n\n{\n  int startTime;\n  int currentTime;\n  undefined4 result;\n  uint value;\n  bool isConditionTrue;\n  \n  if ((*param_1 & 1) != 0) {\n    if (((_DAT_40021004 & 0xc) == 4) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) != 0)))) {\n      if (((_DAT_40021000 & 0x20000) != 0) && (param_1[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      value = param_1[1];\n      if (value == 0x10000) {\n        _DAT_40021000 = _DAT_40021000 | 0x10000;\n      }\n      else if (value == 0) {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      else if (value == 0x50000) {\n        _DAT_40021000 = _DAT_40021000 | 0x50000;\n      }\n      else {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      if (param_1[1] == 0) {\n        startTime = FUN_08003760();\n        while ((_DAT_40021000 & 0x20000) != 0) {\n          currentTime = FUN_08003760();\n          if (100 < (uint)(currentTime - startTime)) {\n            return 3;\n          }\n        }\n      }\n      else {\n        startTime = FUN_08003760();\n        while ((_DAT_40021000 & 0x20000) == 0) {\n          currentTime = FUN_08003760();\n          if (100 < (uint)(currentTime - startTime)) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*param_1 & 2) != 0) {\n    if (((_DAT_40021004 & 0xc) == 0) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) == 0)))) {\n      if (((_DAT_40021000 & 2) != 0) && (param_1[4] != 1)) {\n        return 1;\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | param_1[5] << 3;\n    }\n    else if (param_1[4] == 0) {\n      _DAT_42420000 = 0;\n      startTime = FUN_08003760();\n      while ((_DAT_40021000 & 2) != 0) {\n        currentTime = FUN_08003760();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420000 = 1;\n      startTime = FUN_08003760();\n      while ((_DAT_40021000 & 2) == 0) {\n        currentTime = FUN_08003760();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | param_1[5] << 3;\n    }\n  }\n  if ((*param_1 & 8) != 0) {\n    if (param_1[6] == 0) {\n      _DAT_42420480 = 0;\n      startTime = FUN_08003760();\n      while ((_DAT_40021024 & 2) != 0) {\n        currentTime = FUN_08003760();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420480 = 1;\n      startTime = FUN_08003760();\n      while ((_DAT_40021024 & 2) == 0) {\n        currentTime = FUN_08003760();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n      FUN_08005434(1);\n    }\n  }\n  if ((*param_1 & 4) != 0) {\n    isConditionTrue = (_DAT_4002101c & 0x10000000) == 0;\n    if (isConditionTrue) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      startTime = FUN_08003760();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        currentTime = FUN_08003760();\n        if (100 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    value = param_1[3];\n    if (value == 1) {\n      _DAT_40021020 = _DAT_40021020 | 1;\n    }\n    else if (value == 0) {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    else if (value == 5) {\n      _DAT_40021020 = _DAT_40021020 | 5;\n    }\n    else {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    if (param_1[3] == 0) {\n      startTime = FUN_08003760();\n      while ((_DAT_40021020 & 2) != 0) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      startTime = FUN_08003760();\n      while ((_DAT_40021020 & 2) == 0) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    if (isConditionTrue) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if (param_1[7] == 0) {\n    result = 0;\n  }\n  else if ((_DAT_40021004 & 0xc) == 8) {\n    result = 1;\n  }\n  else if (param_1[7] == 2) {\n    _DAT_42420060 = 0;\n    startTime = FUN_08003760();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        if (param_1[8] == 0x10000) {\n          _DAT_40021004 = _DAT_40021004 & 0xfffdffff | param_1[2];\n        }\n        _DAT_40021004 = _DAT_40021004 & 0xffc2ffff | param_1[8] | param_1[9];\n        _DAT_42420060 = 1;\n        startTime = FUN_08003760();\n        do {\n          if ((_DAT_40021000 & 0x2000000) != 0) {\n            return 0;\n          }\n          currentTime = FUN_08003760();\n        } while ((uint)(currentTime - startTime) < 3);\n        return 3;\n      }\n      currentTime = FUN_08003760();\n    } while ((uint)(currentTime - startTime) < 3);\n    result = 3;\n  }\n  else {\n    _DAT_42420060 = 0;\n    startTime = FUN_08003760();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        return 0;\n      }\n      currentTime = FUN_08003760();\n    } while ((uint)(currentTime - startTime) < 3);\n    result = 3;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005460": "check_status_08005460",
                "iVar1": "startTime",
                "iVar2": "currentTime",
                "uVar3": "result",
                "uVar4": "value",
                "bVar5": "isConditionTrue"
            },
            "calling": [
                "FUN_080035b8"
            ],
            "called": [
                "FUN_08005434",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005840": {
            "entrypoint": "0x08005840",
            "current_name": "calculate_execution_time_08005840",
            "code": "\n\n\nuint calculateExecutionTime_08005840(void)\n\n{\n  uint executionTime;\n  undefined2 constant5;\n  undefined4 constant4;\n  undefined4 constant3;\n  undefined4 constant2;\n  undefined4 constant1;\n  \n  constant1 = 0x10100f0e;\n  constant2 = 0xd0c0b0a;\n  constant3 = 0x9080706;\n  constant4 = 0x5040302;\n  constant5 = 0x201;\n  if ((_DAT_40021004 & 0xc) == 8) {\n    executionTime = (uint)*(byte *)((int)&constant4 + ((_DAT_40021004 << 10) >> 0x1c));\n    if ((_DAT_40021004 & 0x10000) == 0) {\n      executionTime = executionTime * 4000000;\n    }\n    else {\n      executionTime = (executionTime * 8000000) /\n              (uint)*(byte *)((int)&constant5 - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n    }\n  }\n  else {\n    executionTime = 8000000;\n  }\n  return executionTime;\n}\n\n",
            "renaming": {
                "FUN_08005840": "calculate_execution_time_08005840",
                "uStack_c": "constant1",
                "uStack_10": "constant2",
                "uStack_14": "constant3",
                "uStack_18": "constant4",
                "local_1c": "constant5",
                "uVar1": "executionTime"
            },
            "calling": [
                "FUN_080058d2"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058ac": {
            "entrypoint": "0x080058ac",
            "current_name": "initialize_component_080058ac",
            "code": "\n\n\nundefined4 initializeComponent_080058ac(uint *configArray,uint configSize)\n\n{\n  int startTime;\n  int currentTime;\n  uint status;\n  \n  if ((_DAT_40022000 & 7) < configSize) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | configSize;\n    if (configSize != (configSize & 7)) {\n      return 1;\n    }\n  }\n  if ((*configArray & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | configArray[2];\n  }\n  if ((*configArray & 1) != 0) {\n    status = configArray[1];\n    if (status == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((status != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = status | _DAT_40021004 & 0xfffffffc;\n    startTime = FUN_08003760();\n    if (configArray[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else if (configArray[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (configSize < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | configSize;\n    if (configSize != (configSize & 7)) {\n      return 1;\n    }\n  }\n  if ((*configArray & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | configArray[3];\n  }\n  if ((*configArray & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | configArray[4] << 3;\n  }\n  status = FUN_08005840();\n  DAT_20000018 = status >> (&DAT_0800a944)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_080036d8(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080058ac": "initialize_component_080058ac",
                "param_1": "configArray",
                "param_2": "configSize",
                "iVar1": "startTime",
                "iVar2": "currentTime",
                "uVar3": "status"
            },
            "calling": [
                "FUN_080035b8"
            ],
            "called": [
                "FUN_080058d2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058d2": {
            "entrypoint": "0x080058d2",
            "current_name": "initialize_data_080058d2",
            "code": "\n\n\nundefined4 initialize_data_080058d2(uint *flags,uint value)\n\n{\n  int initial_time;\n  int current_time;\n  uint result;\n  \n  if ((*flags & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | flags[2];\n  }\n  if ((*flags & 1) != 0) {\n    result = flags[1];\n    if (result == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((result != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = result | _DAT_40021004 & 0xfffffffc;\n    initial_time = FUN_08003760();\n    if (flags[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        current_time = FUN_08003760();\n        if (5000 < (uint)(current_time - initial_time)) {\n          return 3;\n        }\n      }\n    }\n    else if (flags[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        current_time = FUN_08003760();\n        if (5000 < (uint)(current_time - initial_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        current_time = FUN_08003760();\n        if (5000 < (uint)(current_time - initial_time)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (value < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | value;\n    if (value != (value & 7)) {\n      return 1;\n    }\n  }\n  if ((*flags & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | flags[3];\n  }\n  if ((*flags & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | flags[4] << 3;\n  }\n  result = FUN_08005840();\n  DAT_20000018 = result >> (&DAT_0800a944)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_080036d8(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080058d2": "initialize_data_080058d2",
                "param_1": "flags",
                "param_2": "value",
                "iVar1": "initial_time",
                "iVar2": "current_time",
                "uVar3": "result"
            },
            "calling": [
                "FUN_080058ac"
            ],
            "called": [
                "FUN_080036d8",
                "FUN_08003760",
                "FUN_08005840"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a1c": {
            "entrypoint": "0x08005a1c",
            "current_name": "get_global_data_08005a1c",
            "code": "\nundefined4 get_global_data_08005a1c(void)\n\n{\n  return DAT_20000018;\n}\n\n",
            "renaming": {
                "FUN_08005a1c": "get_global_data_08005a1c"
            },
            "calling": [
                "FUN_08005a28",
                "FUN_08005a48",
                "FUN_080035b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a28": {
            "entrypoint": "0x08005a28",
            "current_name": "shifted_value_08005a28",
            "code": "\n\n\nuint shiftedValue_08005a28(void)\n\n{\n  uint result;\n  \n  result = FUN_08005a1c();\n  return result >> (&DAT_0800a954)[(uint)(_DAT_40021004 << 0x15) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08005a28": "shifted_value_08005a28",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080045c0",
                "FUN_08006538",
                "FUN_080075dc"
            ],
            "called": [
                "FUN_08005a1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a48": {
            "entrypoint": "0x08005a48",
            "current_name": "calculate_shifted_value_08005a48",
            "code": "\n\n\nuint calculate_shifted_value_08005a48(void)\n\n{\n  uint result;\n  \n  result = FUN_08005a1c();\n  return result >> (&DAT_0800a954)[(uint)(_DAT_40021004 << 0x12) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08005a48": "calculate_shifted_value_08005a48",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08006538",
                "FUN_08005bb8",
                "FUN_080075dc"
            ],
            "called": [
                "FUN_08005a1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a68": {
            "entrypoint": "0x08005a68",
            "current_name": "initialize_parameters_08005a68",
            "code": "\n\n\nvoid initialize_parameters_08005a68(undefined4 *output,uint *memory)\n\n{\n  *output = 0xf;\n  output[1] = _DAT_40021004 & 3;\n  output[2] = _DAT_40021004 & 0xf0;\n  output[3] = _DAT_40021004 & 0x700;\n  output[4] = _DAT_40021004 >> 3 & 0x700;\n  *memory = _DAT_40022000 & 7;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a68": "initialize_parameters_08005a68",
                "param_1": "output",
                "param_2": "memory"
            },
            "calling": [
                "FUN_080075dc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005aa4": {
            "entrypoint": "0x08005aa4",
            "current_name": "update_settings_08005aa4",
            "code": "\n\n\nundefined4 updateSettings_08005aa4(uint *settings)\n\n{\n  uint tempVar1;\n  uint tempVar2;\n  int startIndex;\n  int currentIndex;\n  bool isFlagSet;\n  \n  if ((*settings & 1) != 0) {\n    isFlagSet = (_DAT_4002101c & 0x10000000) == 0;\n    if (isFlagSet) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      startIndex = FUN_08003760();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        currentIndex = FUN_08003760();\n        if (100 < (uint)(currentIndex - startIndex)) {\n          return 3;\n        }\n      }\n    }\n    if (((_DAT_40021020 & 0x300) != 0) && ((_DAT_40021020 & 0x300) != (settings[1] & 0x300))) {\n      tempVar2 = _DAT_40021020 & 0xfffffcff;\n      _DAT_42420440 = 0;\n      tempVar1 = _DAT_40021020 & 1;\n      _DAT_40021020 = tempVar2;\n      if (tempVar1 != 0) {\n        startIndex = FUN_08003760();\n        while ((_DAT_40021020 & 2) == 0) {\n          currentIndex = FUN_08003760();\n          if (5000 < (uint)(currentIndex - startIndex)) {\n            return 3;\n          }\n        }\n      }\n    }\n    _DAT_40021020 = _DAT_40021020 & 0xfffffcff | settings[1];\n    if (isFlagSet) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if ((*settings & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffff3fff | settings[2];\n  }\n  if ((*settings & 0x10) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffbfffff | settings[3];\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005aa4": "update_settings_08005aa4",
                "param_1": "settings",
                "uVar1": "tempVar1",
                "uVar2": "tempVar2",
                "iVar3": "startIndex",
                "iVar4": "currentIndex",
                "bVar5": "isFlagSet"
            },
            "calling": [
                "FUN_080035b8"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005bb8": {
            "entrypoint": "0x08005bb8",
            "current_name": "calculate_parameter_08005bb8",
            "code": "\n\n\nuint calculateParameter_08005bb8(int input)\n\n{\n  uint result;\n  undefined2 constant;\n  undefined4 constant;\n  undefined4 constant;\n  undefined4 constant;\n  undefined4 constant;\n  \n  constant = 0x10100f0e;\n  constant = 0xd0c0b0a;\n  constant = 0x9080706;\n  constant = 0x5040302;\n  constant = 0x201;\n  if (input == 2) {\n    result = FUN_08005a48();\n    result = result / ((((_DAT_40021004 << 0x10) >> 0x1e) + 1) * 2);\n  }\n  else if (input == 0x10) {\n    if ((_DAT_40021000 & 0x1000000) == 0) {\n      result = 0;\n    }\n    else {\n      if ((_DAT_40021004 & 0x10000) == 0) {\n        result = 4000000;\n      }\n      else {\n        result = 8000000 / *(byte *)((int)&constant - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n      }\n      result = result * *(byte *)((int)&constant + ((_DAT_40021004 << 10) >> 0x1c));\n      if ((_DAT_40021004 & 0x400000) == 0) {\n        result = (result * 2) / 3;\n      }\n    }\n  }\n  else if (input == 1) {\n    if ((_DAT_40021020 & 0x302) == 0x102) {\n      result = 0x8000;\n    }\n    else if (((_DAT_40021020 & 0x300) == 0x200) && ((_DAT_40021024 & 2) != 0)) {\n      result = 32000;\n    }\n    else if ((_DAT_40021020 & 0x300) == 0x300) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        result = 0;\n      }\n      else {\n        result = 0xf424;\n      }\n    }\n    else {\n      result = 0;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005bb8": "calculate_parameter_08005bb8",
                "param_1": "input",
                "uVar1": "result",
                "local_24": "constant",
                "uStack_20": "constant",
                "uStack_1c": "constant",
                "uStack_18": "constant",
                "uStack_14": "constant"
            },
            "calling": [
                "FUN_0800376c",
                "FUN_08003e20"
            ],
            "called": [
                "FUN_08005a48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cb4": {
            "entrypoint": "0x08005cb4",
            "current_name": "initialize_flags_08005cb4",
            "code": "\n\n\nvoid initializeFlags_08005cb4(uint **flags)\n\n{\n  if (((**flags & 2) != 0) && (((*flags)[1] & 2) != 0)) {\n    FUN_080073c0();\n    (*flags)[1] = 0xfffffffd;\n  }\n  _DAT_40010414 = 0x20000;\n  *(undefined *)((int)flags + 0x11) = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cb4": "initialize_flags_08005cb4",
                "param_1": "flags"
            },
            "calling": [],
            "called": [
                "FUN_080073c0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cec": {
            "entrypoint": "0x08005cec",
            "current_name": "update_memory_config_08005cec",
            "code": "\nvoid updateMemoryConfig_08005cec(int memoryConfigAddress,uint *configData)\n\n{\n  uint updatedConfigValue;\n  uint oldConfigValue;\n  uint newConfigValue;\n  \n  *(uint *)(memoryConfigAddress + 0x20) = *(uint *)(memoryConfigAddress + 0x20) & 0xfffffffe;\n  oldConfigValue = *(uint *)(memoryConfigAddress + 4);\n  newConfigValue = *configData;\n  updatedConfigValue = *(uint *)(memoryConfigAddress + 0x20) & 0xfffffffd | configData[2];\n  if (memoryConfigAddress == 0x40012c00) {\n    updatedConfigValue = (updatedConfigValue & 0xfffffff7 | configData[3]) & 0xfffffffb;\n    oldConfigValue = oldConfigValue & 0xfffffcff | configData[5] | configData[6];\n  }\n  *(uint *)(memoryConfigAddress + 4) = oldConfigValue;\n  *(uint *)(memoryConfigAddress + 0x18) = *(uint *)(memoryConfigAddress + 0x18) & 0xffffff8c | newConfigValue;\n  *(uint *)(memoryConfigAddress + 0x34) = configData[1];\n  *(uint *)(memoryConfigAddress + 0x20) = updatedConfigValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cec": "update_memory_config_08005cec",
                "param_1": "memoryConfigAddress",
                "param_2": "configData",
                "uVar1": "updatedConfigValue",
                "uVar2": "oldConfigValue",
                "uVar3": "newConfigValue"
            },
            "calling": [
                "FUN_08006186",
                "FUN_08006128"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d48": {
            "entrypoint": "0x08005d48",
            "current_name": "update_data_08005d48",
            "code": "\nvoid updateData_08005d48(int dataAddress,uint *paramArray)\n\n{\n  uint modifiedValue1;\n  uint modifiedValue2;\n  uint valueToAssign;\n  \n  *(uint *)(dataAddress + 0x20) = *(uint *)(dataAddress + 0x20) & 0xfffffeff;\n  modifiedValue2 = *(uint *)(dataAddress + 4);\n  valueToAssign = *paramArray;\n  modifiedValue1 = *(uint *)(dataAddress + 0x20) & 0xfffffdff | paramArray[2] << 8;\n  if (dataAddress == 0x40012c00) {\n    modifiedValue1 = (modifiedValue1 & 0xfffff7ff | paramArray[3] << 8) & 0xfffffbff;\n    modifiedValue2 = modifiedValue2 & 0xffffcfff | paramArray[5] << 4 | paramArray[6] << 4;\n  }\n  *(uint *)(dataAddress + 4) = modifiedValue2;\n  *(uint *)(dataAddress + 0x1c) = *(uint *)(dataAddress + 0x1c) & 0xffffff8c | valueToAssign;\n  *(uint *)(dataAddress + 0x3c) = paramArray[1];\n  *(uint *)(dataAddress + 0x20) = modifiedValue1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005d48": "update_data_08005d48",
                "param_1": "dataAddress",
                "param_2": "paramArray",
                "uVar1": "modifiedValue1",
                "uVar2": "modifiedValue2",
                "uVar3": "valueToAssign"
            },
            "calling": [
                "FUN_08006186",
                "FUN_08006128"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005dac": {
            "entrypoint": "0x08005dac",
            "current_name": "update_param_and_values_08005dac",
            "code": "\nvoid updateParamAndValues_08005dac(int paramAddress,int *paramArray)\n\n{\n  uint value1;\n  int firstValue;\n  int secondValue;\n  \n  *(uint *)(paramAddress + 0x20) = *(uint *)(paramAddress + 0x20) & 0xffffefff;\n  value1 = *(uint *)(paramAddress + 4);\n  firstValue = *paramArray;\n  secondValue = paramArray[2];\n  if (paramAddress == 0x40012c00) {\n    value1 = value1 & 0xffffbfff | paramArray[5] << 6;\n  }\n  *(uint *)(paramAddress + 4) = value1;\n  *(uint *)(paramAddress + 0x1c) = *(uint *)(paramAddress + 0x1c) & 0xffff8cff | firstValue << 8;\n  *(int *)(paramAddress + 0x40) = paramArray[1];\n  *(uint *)(paramAddress + 0x20) = *(uint *)(paramAddress + 0x20) & 0xffffdfff | secondValue << 0xc;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005dac": "update_param_and_values_08005dac",
                "param_1": "paramAddress",
                "param_2": "paramArray",
                "uVar1": "value1",
                "iVar2": "firstValue",
                "iVar3": "secondValue"
            },
            "calling": [
                "FUN_08006186",
                "FUN_08006128"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005df4": {
            "entrypoint": "0x08005df4",
            "current_name": "update_data_08005df4",
            "code": "\nvoid updateData_08005df4(uint **data)\n\n{\n  uint *ptr;\n  \n  *(undefined *)((int)data + 0x3d) = 2;\n  ptr = *data;\n  if ((ptr[8] & 0x1111) == 0) {\n    if ((ptr[8] & 0x444) == 0) {\n      *ptr = *ptr & 0xfffffffe;\n    }\n  }\n  FUN_08007710(data);\n  *(undefined *)((int)data + 0x3d) = 0;\n  *(undefined *)(data + 0xf) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005df4": "update_data_08005df4",
                "param_1": "data",
                "puVar1": "ptr"
            },
            "calling": [
                "FUN_080076e0"
            ],
            "called": [
                "FUN_08007710"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005e2e": {
            "entrypoint": "0x08005e2e",
            "current_name": "update_data_08005e2e",
            "code": "\nvoid updateData_08005e2e(uint **data)\n\n{\n  uint *ptr;\n  \n  *(undefined *)((int)data + 0x3d) = 2;\n  ptr = *data;\n  if ((ptr[8] & 0x1111) == 0) {\n    if ((ptr[8] & 0x444) == 0) {\n      *ptr = *ptr & 0xfffffffe;\n    }\n  }\n  FUN_08007110(data);\n  *(undefined *)((int)data + 0x3d) = 0;\n  *(undefined *)(data + 0xf) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e2e": "update_data_08005e2e",
                "param_1": "data",
                "puVar1": "ptr"
            },
            "calling": [
                "FUN_080071e4"
            ],
            "called": [
                "FUN_08007110"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005e68": {
            "entrypoint": "0x08005e68",
            "current_name": "FUNC_08005e68",
            "code": "\nvoid FUNC_08005e68(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e68": "FUNC_08005e68"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005e6a": {
            "entrypoint": "0x08005e6a",
            "current_name": "FUNC_08005e6a",
            "code": "\nvoid FUNC_08005e6a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e6a": "FUNC_08005e6a"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005e6c": {
            "entrypoint": "0x08005e6c",
            "current_name": "FUNC_08005e6c",
            "code": "\nvoid FUNC_08005e6c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e6c": "FUNC_08005e6c"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005e6e": {
            "entrypoint": "0x08005e6e",
            "current_name": "process_function_08005e6e",
            "code": "\nvoid processFunction_08005e6e(int *inputArray)\n\n{\n  int tempVar;\n  \n  tempVar = *inputArray;\n  if (((*(uint *)(tempVar + 0x10) & 2) != 0) && ((*(uint *)(tempVar + 0xc) & 2) != 0)) {\n    *(undefined4 *)(tempVar + 0x10) = 0xfffffffd;\n    *(undefined *)(inputArray + 7) = 1;\n    if ((*(uint *)(*inputArray + 0x18) & 3) == 0) {\n      FUN_0800771c();\n      FUNC_08005e6a(inputArray);\n    }\n    else {\n      FUNC_08005e68();\n    }\n    *(undefined *)(inputArray + 7) = 0;\n  }\n  tempVar = *inputArray;\n  if (((*(uint *)(tempVar + 0x10) & 4) != 0) && ((*(uint *)(tempVar + 0xc) & 4) != 0)) {\n    *(undefined4 *)(tempVar + 0x10) = 0xfffffffb;\n    *(undefined *)(inputArray + 7) = 2;\n    if ((*(uint *)(*inputArray + 0x18) & 0x300) == 0) {\n      FUN_0800771c(inputArray);\n      FUNC_08005e6a(inputArray);\n    }\n    else {\n      FUNC_08005e68(inputArray);\n    }\n    *(undefined *)(inputArray + 7) = 0;\n  }\n  tempVar = *inputArray;\n  if (((*(uint *)(tempVar + 0x10) & 8) != 0) && ((*(uint *)(tempVar + 0xc) & 8) != 0)) {\n    *(undefined4 *)(tempVar + 0x10) = 0xfffffff7;\n    *(undefined *)(inputArray + 7) = 4;\n    if ((*(uint *)(*inputArray + 0x1c) & 3) == 0) {\n      FUN_0800771c(inputArray);\n      FUNC_08005e6a(inputArray);\n    }\n    else {\n      FUNC_08005e68(inputArray);\n    }\n    *(undefined *)(inputArray + 7) = 0;\n  }\n  tempVar = *inputArray;\n  if (((*(uint *)(tempVar + 0x10) & 0x10) != 0) && ((*(uint *)(tempVar + 0xc) & 0x10) != 0)) {\n    *(undefined4 *)(tempVar + 0x10) = 0xffffffef;\n    *(undefined *)(inputArray + 7) = 8;\n    if ((*(uint *)(*inputArray + 0x1c) & 0x300) == 0) {\n      FUN_0800771c(inputArray);\n      FUNC_08005e6a(inputArray);\n    }\n    else {\n      FUNC_08005e68(inputArray);\n    }\n    *(undefined *)(inputArray + 7) = 0;\n  }\n  tempVar = *inputArray;\n  if (((*(uint *)(tempVar + 0x10) & 1) != 0) && ((*(uint *)(tempVar + 0xc) & 1) != 0)) {\n    *(undefined4 *)(tempVar + 0x10) = 0xfffffffe;\n    FUN_08007736(inputArray);\n  }\n  tempVar = *inputArray;\n  if (((*(uint *)(tempVar + 0x10) & 0x80) != 0) && ((*(uint *)(tempVar + 0xc) & 0x80) != 0)) {\n    *(undefined4 *)(tempVar + 0x10) = 0xffffff7f;\n    FUNC_080064ae(inputArray);\n  }\n  tempVar = *inputArray;\n  if (((*(uint *)(tempVar + 0x10) & 0x40) != 0) && ((*(uint *)(tempVar + 0xc) & 0x40) != 0)) {\n    *(undefined4 *)(tempVar + 0x10) = 0xffffffbf;\n    FUNC_08005e6c(inputArray);\n  }\n  tempVar = *inputArray;\n  if (((*(uint *)(tempVar + 0x10) & 0x20) != 0) && ((*(uint *)(tempVar + 0xc) & 0x20) != 0)) {\n    *(undefined4 *)(tempVar + 0x10) = 0xffffffdf;\n    FUNC_080064ac(inputArray);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e6e": "process_function_08005e6e",
                "param_1": "inputArray",
                "iVar1": "tempVar"
            },
            "calling": [],
            "called": [
                "FUN_0800771c",
                "FUN_08005e6a",
                "FUN_08005e6c",
                "FUN_080064ae",
                "FUN_08005e68",
                "FUN_080064ac",
                "FUN_08007736"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005fe8": {
            "entrypoint": "0x08005fe8",
            "current_name": "update_parameter_08005fe8",
            "code": "\nvoid updateParameter_08005fe8(uint *inputParam,uint *newParam)\n\n{\n  uint tempVar;\n  \n  tempVar = *inputParam;\n  if ((((inputParam == (uint *)0x40012c00) || (inputParam == (uint *)0x40000000)) ||\n      (inputParam == (uint *)0x40000400)) || (inputParam == (uint *)0x40000800)) {\n    tempVar = tempVar & 0xffffff8f | newParam[1];\n  }\n  if (((inputParam == (uint *)0x40012c00) || (inputParam == (uint *)0x40000000)) ||\n     ((inputParam == (uint *)0x40000400 || (inputParam == (uint *)0x40000800)))) {\n    tempVar = tempVar & 0xfffffcff | newParam[3];\n  }\n  *inputParam = tempVar & 0xffffff7f | newParam[5];\n  inputParam[0xb] = newParam[2];\n  inputParam[10] = *newParam;\n  if (inputParam == (uint *)0x40012c00) {\n    globalVar = newParam[4];\n  }\n  inputParam[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005fe8": "update_parameter_08005fe8",
                "param_1": "inputParam",
                "param_2": "newParam",
                "uVar1": "tempVar",
                "uRam40012c30": "globalVar"
            },
            "calling": [
                "FUN_08006092",
                "FUN_08006060"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006060": {
            "entrypoint": "0x08006060",
            "current_name": "process_parameter_08006060",
            "code": "\nundefined4 processParameter_08006060(undefined4 *param)\n\n{\n  if (param != (undefined4 *)0x0) {\n    if (*(char *)((int)param + 0x3d) == '\\0') {\n      *(undefined *)(param + 0xf) = 0;\n      FUN_08007708();\n    }\n    *(undefined *)((int)param + 0x3d) = 2;\n    FUN_08005fe8(*param,param + 1);\n    *(undefined *)((int)param + 0x3d) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08006060": "process_parameter_08006060",
                "param_1": "param"
            },
            "calling": [
                "FUN_08007648"
            ],
            "called": [
                "FUN_08007708",
                "FUN_08005fe8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006092": {
            "entrypoint": "0x08006092",
            "current_name": "update_data_08006092",
            "code": "\nundefined4 updateData_08006092(undefined4 *dataPtr)\n\n{\n  if (dataPtr != (undefined4 *)0x0) {\n    if (*(char *)((int)dataPtr + 0x3d) == '\\0') {\n      *(undefined *)(dataPtr + 0xf) = 0;\n      FUN_08006e68();\n    }\n    *(undefined *)((int)dataPtr + 0x3d) = 2;\n    FUN_08005fe8(*dataPtr,dataPtr + 1);\n    *(undefined *)((int)dataPtr + 0x3d) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08006092": "update_data_08006092",
                "param_1": "dataPtr"
            },
            "calling": [
                "FUN_08007118"
            ],
            "called": [
                "FUN_08006e68",
                "FUN_08005fe8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080060c4": {
            "entrypoint": "0x080060c4",
            "current_name": "update_parameters_080060c4",
            "code": "\nvoid updateParameters_080060c4(int baseAddress,int *parameters)\n\n{\n  uint newMask1;\n  uint newMask2;\n  int value1;\n  \n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & 0xffffffef;\n  newMask2 = *(uint *)(baseAddress + 4);\n  value1 = *parameters;\n  newMask1 = *(uint *)(baseAddress + 0x20) & 0xffffffdf | value2 << 4;\n  if (baseAddress == 0x40012c00) {\n    newMask1 = (newMask1 & 0xffffff7f | value3 << 4) & 0xffffffbf;\n    newMask2 = newMask2 & 0xfffff3ff | value4 << 2 | value5 << 2;\n  }\n  *(uint *)(baseAddress + 4) = newMask2;\n  *(uint *)(baseAddress + 0x18) = *(uint *)(baseAddress + 0x18) & 0xffff8cff | value1 << 8;\n  *(int *)(baseAddress + 0x38) = parameters[1];\n  *(uint *)(baseAddress + 0x20) = newMask1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080060c4": "update_parameters_080060c4",
                "param_1": "baseAddress",
                "param_2": "parameters",
                "uVar1": "newMask1",
                "uVar2": "newMask2",
                "iVar3": "value1",
                "param_2[2]": "value2",
                "param_2[3]": "value3",
                "param_2[5]": "value4",
                "param_2[6]": "value5"
            },
            "calling": [
                "FUN_08006186",
                "FUN_08006128"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006128": {
            "entrypoint": "0x08006128",
            "current_name": "handle_parameter_08006128",
            "code": "\nundefined4 handle_parameter_08006128(undefined4 *input_array,undefined4 value,undefined4 action)\n\n{\n  if (*(char *)(input_array + 0xf) != '\\x01') {\n    *(undefined *)(input_array + 0xf) = 1;\n    *(undefined *)((int)input_array + 0x3d) = 2;\n    switch(action) {\n    case 0:\n      FUN_08005cec(*input_array);\n      break;\n    case 4:\n      FUN_080060c4(*input_array);\n      break;\n    case 8:\n      FUN_08005d48(*input_array);\n      break;\n    case 0xc:\n      FUN_08005dac(*input_array);\n    }\n    *(undefined *)((int)input_array + 0x3d) = 1;\n    *(undefined *)(input_array + 0xf) = 0;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08006128": "handle_parameter_08006128",
                "param_1": "input_array",
                "param_2": "value",
                "param_3": "action"
            },
            "calling": [
                "FUN_08007648"
            ],
            "called": [
                "FUN_08005d48",
                "FUN_08005dac",
                "FUN_080060c4",
                "FUN_08005cec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006186": {
            "entrypoint": "0x08006186",
            "current_name": "update_settings_08006186",
            "code": "\nundefined4 updateSettings_08006186(int *settings,int input,undefined4 option)\n\n{\n  if (*(char *)(settings + 0xf) != '\\x01') {\n    *(undefined *)(settings + 0xf) = 1;\n    *(undefined *)((int)settings + 0x3d) = 2;\n    switch(option) {\n    case 0:\n      FUN_08005cec(*settings);\n      *(uint *)(*settings + 0x18) = *(uint *)(*settings + 0x18) | 8;\n      *(uint *)(*settings + 0x18) = *(uint *)(*settings + 0x18) & 0xfffffffb;\n      *(uint *)(*settings + 0x18) = *(uint *)(*settings + 0x18) | *(uint *)(input + 0x10);\n      break;\n    case 4:\n      FUN_080060c4(*settings);\n      *(uint *)(*settings + 0x18) = *(uint *)(*settings + 0x18) | 0x800;\n      *(uint *)(*settings + 0x18) = *(uint *)(*settings + 0x18) & 0xfffffbff;\n      *(uint *)(*settings + 0x18) = *(uint *)(*settings + 0x18) | *(int *)(input + 0x10) << 8;\n      break;\n    case 8:\n      FUN_08005d48(*settings);\n      *(uint *)(*settings + 0x1c) = *(uint *)(*settings + 0x1c) | 8;\n      *(uint *)(*settings + 0x1c) = *(uint *)(*settings + 0x1c) & 0xfffffffb;\n      *(uint *)(*settings + 0x1c) = *(uint *)(*settings + 0x1c) | *(uint *)(input + 0x10);\n      break;\n    case 0xc:\n      FUN_08005dac(*settings);\n      *(uint *)(*settings + 0x1c) = *(uint *)(*settings + 0x1c) | 0x800;\n      *(uint *)(*settings + 0x1c) = *(uint *)(*settings + 0x1c) & 0xfffffbff;\n      *(uint *)(*settings + 0x1c) = *(uint *)(*settings + 0x1c) | *(int *)(input + 0x10) << 8;\n    }\n    *(undefined *)((int)settings + 0x3d) = 1;\n    *(undefined *)(settings + 0xf) = 0;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08006186": "update_settings_08006186",
                "param_1": "settings",
                "param_2": "input",
                "param_3": "option"
            },
            "calling": [
                "FUN_08007118"
            ],
            "called": [
                "FUN_08005d48",
                "FUN_08005dac",
                "FUN_080060c4",
                "FUN_08005cec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006262": {
            "entrypoint": "0x08006262",
            "current_name": "update_bits_08006262",
            "code": "\nvoid updateBits_08006262(int baseAddress,uint bitPosition,int value)\n\n{\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & ~(1 << (bitPosition & 0xff));\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) | value << (bitPosition & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006262": "update_bits_08006262",
                "param_1": "baseAddress",
                "param_2": "bitPosition",
                "param_3": "value"
            },
            "calling": [
                "FUN_080063c0",
                "FUN_08006280",
                "FUN_080062f4",
                "FUN_08006390"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006280": {
            "entrypoint": "0x08006280",
            "current_name": "set_flag_and_perform_action_08006280",
            "code": "\nundefined4 setFlagAndPerformAction_08006280(uint **dataPointer,undefined4 flag)\n\n{\n  switch(flag) {\n  case 0:\n    (*dataPointer)[3] = (*dataPointer)[3] | 2;\n    break;\n  case 4:\n    (*dataPointer)[3] = (*dataPointer)[3] | 4;\n    break;\n  case 8:\n    (*dataPointer)[3] = (*dataPointer)[3] | 8;\n    break;\n  case 0xc:\n    (*dataPointer)[3] = (*dataPointer)[3] | 0x10;\n  }\n  FUN_08006262(*dataPointer,flag,1);\n  if (*dataPointer == (uint *)0x40012c00) {\n    memoryData = memoryData | 0x8000;\n  }\n  **dataPointer = **dataPointer | 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006280": "set_flag_and_perform_action_08006280",
                "param_1": "dataPointer",
                "param_2": "flag",
                "uRam40012c44": "memoryData"
            },
            "calling": [
                "FUN_08007648"
            ],
            "called": [
                "FUN_08006262"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080062f4": {
            "entrypoint": "0x080062f4",
            "current_name": "update_flags_and_values_080062f4",
            "code": "\nundefined4 updateFlagsAndValues_080062f4(uint **pointerToValues,undefined4 flag)\n\n{\n  uint *tempPointer;\n  \n  switch(flag) {\n  case 0:\n    (*pointerToValues)[3] = (*pointerToValues)[3] & 0xfffffffd;\n    break;\n  case 4:\n    (*pointerToValues)[3] = (*pointerToValues)[3] & 0xfffffffb;\n    break;\n  case 8:\n    (*pointerToValues)[3] = (*pointerToValues)[3] & 0xfffffff7;\n    break;\n  case 0xc:\n    (*pointerToValues)[3] = (*pointerToValues)[3] & 0xffffffef;\n  }\n  FUN_08006262(*pointerToValues,flag,0);\n  if (((*pointerToValues == (uint *)0x40012c00) && ((uRam40012c20 & 0x1111) == 0)) &&\n     ((uRam40012c20 & 0x444) == 0)) {\n    uRam40012c44 = uRam40012c44 & 0xffff7fff;\n  }\n  tempPointer = *pointerToValues;\n  if (((tempPointer[8] & 0x1111) == 0) && ((tempPointer[8] & 0x444) == 0)) {\n    *tempPointer = *tempPointer & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080062f4": "update_flags_and_values_080062f4",
                "param_1": "pointerToValues",
                "param_2": "flag",
                "puVar1": "tempPointer"
            },
            "calling": [
                "FUN_080076e0"
            ],
            "called": [
                "FUN_08006262"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006390": {
            "entrypoint": "0x08006390",
            "current_name": "update_flags_and_value_08006390",
            "code": "\nundefined4 updateFlagsAndValue_08006390(uint **pointerToUint,undefined4 value)\n\n{\n  FUN_08006262(*pointerToUint,value,1);\n  if (*pointerToUint == (uint *)0x40012c00) {\n    globalVar = globalVar | 0x8000;\n  }\n  **pointerToUint = **pointerToUint | 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006390": "update_flags_and_value_08006390",
                "param_1": "pointerToUint",
                "param_2": "value",
                "uRam40012c44": "globalVar"
            },
            "calling": [
                "FUN_08007118"
            ],
            "called": [
                "FUN_08006262"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080063c0": {
            "entrypoint": "0x080063c0",
            "current_name": "update_memory_addresses_080063c0",
            "code": "\nundefined4 updateMemoryAddresses_080063c0(uint **memoryAddresses,undefined4 value)\n\n{\n  uint *currentAddress;\n  \n  FUN_08006262(*memoryAddresses,value,0);\n  if (((*memoryAddresses == (uint *)0x40012c00) && ((constant & 0x1111) == 0)) &&\n     ((constant & 0x444) == 0)) {\n    flag = flag & 0xffff7fff;\n  }\n  currentAddress = *memoryAddresses;\n  if (((currentAddress[8] & 0x1111) == 0) && ((currentAddress[8] & 0x444) == 0)) {\n    *currentAddress = *currentAddress & 0xfffffffe;\n  }\n  *(undefined *)((int)memoryAddresses + 0x3d) = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080063c0": "update_memory_addresses_080063c0",
                "param_1": "memoryAddresses",
                "param_2": "value",
                "puVar1": "currentAddress",
                "uRam40012c20": "constant",
                "uRam40012c44": "flag"
            },
            "calling": [
                "FUN_080071e4"
            ],
            "called": [
                "FUN_08006262"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006420": {
            "entrypoint": "0x08006420",
            "current_name": "update_bitwise_value_08006420",
            "code": "\nvoid updateBitwiseValue_08006420(int data,uint bitPosition,int bitValue)\n\n{\n  *(uint *)(data + 0x20) = *(uint *)(data + 0x20) & ~(4 << (bitPosition & 0xff));\n  *(uint *)(data + 0x20) = *(uint *)(data + 0x20) | bitValue << (bitPosition & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006420": "update_bitwise_value_08006420",
                "param_1": "data",
                "param_2": "bitPosition",
                "param_3": "bitValue"
            },
            "calling": [
                "FUN_0800643c",
                "FUN_08006460"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800643c": {
            "entrypoint": "0x0800643c",
            "current_name": "set_flags_and_permissions_0800643c",
            "code": "\nundefined4 setFlagsAndPermissions_0800643c(uint **arrayPointer,undefined4 value)\n\n{\n  FUN_08006420(*arrayPointer,value,4);\n  (*arrayPointer)[0x11] = (*arrayPointer)[0x11] | 0x8000;\n  **arrayPointer = **arrayPointer | 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800643c": "set_flags_and_permissions_0800643c",
                "param_1": "arrayPointer",
                "param_2": "value"
            },
            "calling": [
                "FUN_08007118"
            ],
            "called": [
                "FUN_08006420"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006460": {
            "entrypoint": "0x08006460",
            "current_name": "sanitize_data_08006460",
            "code": "\nundefined4 sanitizeData_08006460(uint **dataPtr,undefined4 param)\n\n{\n  uint *data;\n  \n  FUN_08006420(*dataPtr,param,0);\n  data = *dataPtr;\n  if (((data[8] & 0x1111) == 0) && ((data[8] & 0x444) == 0)) {\n    data[17] = data[17] & 0xffff7fff;\n  }\n  data = *dataPtr;\n  if (((data[8] & 0x1111) == 0) && ((data[8] & 0x444) == 0)) {\n    *data = *data & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006460": "sanitize_data_08006460",
                "param_1": "dataPtr",
                "param_2": "param",
                "puVar1": "data",
                "puVar1[8]": "data[8]",
                "puVar1[0x11]": "data[17]"
            },
            "calling": [
                "FUN_080071e4"
            ],
            "called": [
                "FUN_08006420"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080064ac": {
            "entrypoint": "0x080064ac",
            "current_name": "FUNC_080064ac",
            "code": "\nvoid FUNC_080064ac(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080064ac": "FUNC_080064ac"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080064ae": {
            "entrypoint": "0x080064ae",
            "current_name": "FUNC_080064ae",
            "code": "\nvoid FUNC_080064ae(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080064ae": "FUNC_080064ae"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080064b0": {
            "entrypoint": "0x080064b0",
            "current_name": "clear_flags_and_set_spacing_080064b0",
            "code": "\nvoid clearFlagsAndSetSpacing_080064b0(int *ptrData)\n\n{\n  *(uint *)(*ptrData + 0xc) = *(uint *)(*ptrData + 0xc) & 0xfffffedf;\n  *(uint *)(*ptrData + 0x14) = *(uint *)(*ptrData + 0x14) & 0xfffffffe;\n  *(undefined *)((int)ptrData + 0x3a) = 0x20;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080064b0": "clear_flags_and_set_spacing_080064b0",
                "param_1": "ptrData"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080064cc": {
            "entrypoint": "0x080064cc",
            "current_name": "process_data_080064cc",
            "code": "\nundefined4 processData_080064cc(int *data)\n\n{\n  short remainingCount;\n  byte *bytePtr;\n  \n  if (*(char *)((int)data + 0x39) != '!') {\n    return 2;\n  }\n  if (value2 == 0x1000) {\n    *(uint *)(*data + 4) = *(ushort *)ptrToValue8 & 0x1ff;\n    if (value4 == 0) {\n      ptrToValue8 = ptrToValue8 + 2;\n    }\n    else {\n      ptrToValue8 = ptrToValue8 + 1;\n    }\n  }\n  else {\n    bytePtr = (byte *)ptrToValue8;\n    ptrToValue8 = (int)(bytePtr + 1);\n    *(uint *)(*data + 4) = (uint)*bytePtr;\n  }\n  remainingCount = *(short *)((int)data + 0x26) + -1;\n  *(short *)((int)data + 0x26) = remainingCount;\n  if (remainingCount == 0) {\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xffffff7f;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x40;\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080064cc": "process_data_080064cc",
                "param_1": "data",
                "sVar1": "remainingCount",
                "pbVar2": "bytePtr",
                "param_1[2]": "value2",
                "param_1[4]": "value4",
                "param_1[8]": "ptrToValue8"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006538": {
            "entrypoint": "0x08006538",
            "current_name": "calculate_values_08006538",
            "code": "\nvoid calculateValues_08006538(int *input)\n\n{\n  int result1;\n  int result2;\n  int result3;\n  int result4;\n  int result5;\n  int result6;\n  int result7;\n  int result8;\n  int result9;\n  int result10;\n  \n  *(uint *)(*input + 0x10) = *(uint *)(*input + 0x10) & 0xffffcfff | input[3];\n  *(uint *)(*input + 0xc) =\n       input[2] | input[4] | input[5] | *(uint *)(*input + 0xc) & 0xffffe9f3;\n  *(uint *)(*input + 0x14) = *(uint *)(*input + 0x14) & 0xfffffcff | input[6];\n  result10 = *input;\n  if (result10 != 0x40013800) {\n    result1 = FUN_08005a28();\n    result6 = input[1];\n    result2 = FUN_08005a28();\n    result7 = input[1];\n    result3 = FUN_08005a28();\n    result8 = input[1];\n    result4 = FUN_08005a28();\n    result9 = input[1];\n    result5 = FUN_08005a28();\n    *(uint *)(result10 + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(result4 * 0x19) / (uint)(result9 << 2) +\n                        (int)(((ulonglong)(uint)(result5 * 0x19) / (ulonglong)(uint)(input[1] << 2))\n                             / 100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n         ((((uint)(result2 * 0x19) / (uint)(result7 << 2) +\n           (int)(((ulonglong)(uint)(result3 * 0x19) / (ulonglong)(uint)(result8 << 2)) / 100) * -100) *\n           0x10 + 0x32) / 100 & 0xf0) +\n         (int)(((ulonglong)(uint)(result1 * 0x19) / (ulonglong)(uint)(result6 << 2)) / 100) * 0x10;\n    return;\n  }\n  result10 = FUN_08005a48();\n  result5 = input[1];\n  result1 = FUN_08005a48();\n  result6 = input[1];\n  result2 = FUN_08005a48();\n  result7 = input[1];\n  result3 = FUN_08005a48();\n  result8 = input[1];\n  result4 = FUN_08005a48();\n  iRam40013808 = ((uint)((int)((ulonglong)\n                               (((uint)(result3 * 0x19) / (uint)(result8 << 2) +\n                                (int)(((ulonglong)(uint)(result4 * 0x19) /\n                                      (ulonglong)(uint)(input[1] << 2)) / 100) * -100) * 0x10 +\n                               0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n                 ((((uint)(result1 * 0x19) / (uint)(result6 << 2) +\n                   (int)(((ulonglong)(uint)(result2 * 0x19) / (ulonglong)(uint)(result7 << 2)) / 100) *\n                   -100) * 0x10 + 0x32) / 100 & 0xf0) +\n                 (int)(((ulonglong)(uint)(result10 * 0x19) / (ulonglong)(uint)(result5 << 2)) / 100) *\n                 0x10;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006538": "calculate_values_08006538",
                "param_1": "input",
                "iVar1": "result1",
                "iVar2": "result2",
                "iVar3": "result3",
                "iVar4": "result4",
                "iVar5": "result5",
                "iVar6": "result6",
                "iVar7": "result7",
                "iVar8": "result8",
                "iVar9": "result9",
                "iVar10": "result10"
            },
            "calling": [
                "FUN_0800674e"
            ],
            "called": [
                "FUN_08005a28",
                "FUN_08005a48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080066e8": {
            "entrypoint": "0x080066e8",
            "current_name": "check_and_modify_080066e8",
            "code": "\nundefined4 check_and_modify_080066e8(uint **pointer_array,uint input_value1,uint check_result,int limit_value,uint comparison_value)\n\n{\n  int temp_variable;\n  \n  do {\n    if (((input_value1 & ~**pointer_array) == 0) != check_result) {\n      return 0;\n    }\n  } while ((comparison_value == 0xffffffff) ||\n          ((comparison_value != 0 && (temp_variable = FUN_08003760(), (uint)(temp_variable - limit_value) <= comparison_value))));\n  (*pointer_array)[3] = (*pointer_array)[3] & 0xfffffe5f;\n  (*pointer_array)[5] = (*pointer_array)[5] & 0xfffffffe;\n  *(undefined *)((int)pointer_array + 0x39) = 0x20;\n  *(undefined *)((int)pointer_array + 0x3a) = 0x20;\n  *(undefined *)(pointer_array + 0xe) = 0;\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_080066e8": "check_and_modify_080066e8",
                "param_1": "pointer_array",
                "param_2": "input_value1",
                "param_3": "check_result",
                "param_4": "limit_value",
                "param_5": "comparison_value",
                "iVar1": "temp_variable"
            },
            "calling": [
                "FUN_080067ac"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800674c": {
            "entrypoint": "0x0800674c",
            "current_name": "FUNC_0800674c",
            "code": "\nvoid FUNC_0800674c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800674c": "FUNC_0800674c"
            },
            "calling": [
                "FUN_0800674e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800674e": {
            "entrypoint": "0x0800674e",
            "current_name": "initialize_data_structure_0800674e",
            "code": "\nundefined4 initializeDataStructure_0800674e(int *dataStructure)\n\n{\n  if (dataStructure != (int *)0x0) {\n    if (*(char *)((int)dataStructure + 0x39) == '\\0') {\n      *(undefined *)(dataStructure + 0xe) = 0;\n      FUNC_0800674c();\n    }\n    *(undefined *)((int)dataStructure + 0x39) = 0x24;\n    *(uint *)(*dataStructure + 0xc) = *(uint *)(*dataStructure + 0xc) & 0xffffdfff;\n    FUN_08006538(dataStructure);\n    *(uint *)(*dataStructure + 0x10) = *(uint *)(*dataStructure + 0x10) & 0xffffb7ff;\n    *(uint *)(*dataStructure + 0x14) = *(uint *)(*dataStructure + 0x14) & 0xffffffd5;\n    *(uint *)(*dataStructure + 0xc) = *(uint *)(*dataStructure + 0xc) | 0x2000;\n    flag = 0;\n    *(undefined *)((int)dataStructure + 0x39) = 0x20;\n    *(undefined *)((int)dataStructure + 0x3a) = 0x20;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800674e": "initialize_data_structure_0800674e",
                "param_1": "dataStructure",
                "param_1[0xf]": "flag"
            },
            "calling": [
                "FUN_08008078"
            ],
            "called": [
                "FUN_0800674c",
                "FUN_08006538"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080067ac": {
            "entrypoint": "0x080067ac",
            "current_name": "process_data_080067ac",
            "code": "\nundefined4 process_data_080067ac(int *data_ptr,ushort *input_ptr,int input_size,undefined4 parameter)\n\n{\n  int result;\n  undefined4 status;\n  \n  if (*(char *)((int)data_ptr + 0x39) == ' ') {\n    if (input_ptr == (ushort *)0x0) {\n      status = 1;\n    }\n    else if (input_size == 0) {\n      status = 1;\n    }\n    else if (*(char *)(data_ptr + 0xe) == '\\x01') {\n      status = 2;\n    }\n    else {\n      *(undefined *)(data_ptr + 0xe) = 1;\n      data_ptr[0xf] = 0;\n      *(undefined *)((int)data_ptr + 0x39) = 0x21;\n      status = FUN_08003760();\n      *(short *)(data_ptr + 9) = (short)input_size;\n      *(short *)((int)data_ptr + 0x26) = (short)input_size;\n      while (*(short *)((int)data_ptr + 0x26) != 0) {\n        *(short *)((int)data_ptr + 0x26) = *(short *)((int)data_ptr + 0x26) + -1;\n        if (data_ptr[2] == 0x1000) {\n          result = FUN_080066e8(data_ptr,0x80,0,status,parameter);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*data_ptr + 4) = *input_ptr & 0x1ff;\n          if (data_ptr[4] == 0) {\n            input_ptr = input_ptr + 1;\n          }\n          else {\n            input_ptr = (ushort *)((int)input_ptr + 1);\n          }\n        }\n        else {\n          result = FUN_080066e8(data_ptr,0x80,0,status,parameter);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*data_ptr + 4) = (uint)*(byte *)input_ptr;\n          input_ptr = (ushort *)((int)input_ptr + 1);\n        }\n      }\n      result = FUN_080066e8(data_ptr,0x40,0,status,parameter);\n      if (result == 0) {\n        *(undefined *)((int)data_ptr + 0x39) = 0x20;\n        *(undefined *)(data_ptr + 0xe) = 0;\n        status = 0;\n      }\n      else {\n        status = 3;\n      }\n    }\n  }\n  else {\n    status = 2;\n  }\n  return status;\n}\n\n",
            "renaming": {
                "FUN_080067ac": "process_data_080067ac",
                "param_1": "data_ptr",
                "param_2": "input_ptr",
                "param_3": "input_size",
                "param_4": "parameter",
                "iVar1": "result",
                "uVar2": "status"
            },
            "calling": [
                "FUN_08008500"
            ],
            "called": [
                "FUN_080066e8",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800688e": {
            "entrypoint": "0x0800688e",
            "current_name": "validate_input_0800688e",
            "code": "\nundefined4 validate_input_0800688e(int *input,int length,int value)\n\n{\n  if (*(char *)((int)input + 0x39) != ' ') {\n    return 2;\n  }\n  if (length == 0) {\n    return 1;\n  }\n  if (value == 0) {\n    return 1;\n  }\n  if (*(char *)(input + 0xe) != '\\x01') {\n    input_length = length;\n    *(short *)(input + 9) = (short)value;\n    *(short *)((int)input + 0x26) = (short)value;\n    counter = 0;\n    *(undefined *)((int)input + 0x39) = 0x21;\n    *(undefined *)(input + 0xe) = 0;\n    *(uint *)(*input + 0xc) = *(uint *)(*input + 0xc) | 0x80;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_0800688e": "validate_input_0800688e",
                "param_1": "input",
                "param_2": "length",
                "param_3": "value",
                "param_1[8]": "input_length",
                "param_1[0xf]": "counter"
            },
            "calling": [
                "FUN_08008694",
                "FUN_08008730"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080068d6": {
            "entrypoint": "0x080068d6",
            "current_name": "validate_input_080068d6",
            "code": "\nundefined4 validate_input_080068d6(int *input_data,int value1,int value2)\n\n{\n  if (*(char *)((int)input_data + 0x3a) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(char *)(input_data + 0xe) != '\\x01') {\n    input_data[10] = value1;\n    *(short *)(input_data + 0xb) = (short)value2;\n    *(short *)((int)input_data + 0x2e) = (short)value2;\n    input_data[15] = 0;\n    *(undefined *)((int)input_data + 0x3a) = 0x22;\n    *(undefined *)(input_data + 0xe) = 0;\n    *(uint *)(*input_data + 0xc) = *(uint *)(*input_data + 0xc) | 0x100;\n    *(uint *)(*input_data + 0x14) = *(uint *)(*input_data + 0x14) | 1;\n    *(uint *)(*input_data + 0xc) = *(uint *)(*input_data + 0xc) | 0x20;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_080068d6": "validate_input_080068d6",
                "param_1": "input_data",
                "param_2": "value1",
                "param_3": "value2",
                "param_1[10]": "input_data[10]",
                "param_1[0xf]": "input_data[15]"
            },
            "calling": [
                "FUN_08008600",
                "FUN_0800863c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006932": {
            "entrypoint": "0x08006932",
            "current_name": "clear_bit_and_set_flag_08006932",
            "code": "\nundefined4 clearBitAndSetFlag_08006932(int *ptr)\n\n{\n  *(uint *)(*ptr + 0xc) = *(uint *)(*ptr + 0xc) & 0xffffffbf;\n  *(undefined *)((int)ptr + 0x39) = 0x20;\n  FUNC_08008730();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006932": "clear_bit_and_set_flag_08006932",
                "param_1": "ptr"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [
                "FUN_08008730"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800694c": {
            "entrypoint": "0x0800694c",
            "current_name": "process_input_string_0800694c",
            "code": "\nundefined4 processInputString_0800694c(int *input)\n\n{\n  byte *bytePointer;\n  short shortValue;\n  undefined *undefinedPointer;\n  \n  if (*(char *)((int)input + 0x3a) != '\\\"') {\n    return 2;\n  }\n  if (input[2] == 0x1000) {\n    if (input[4] == 0) {\n      *(ushort *)input[10] = (ushort)((uint)(*(int *)(*input + 4) << 0x17) >> 0x17);\n      input[10] = input[10] + 2;\n    }\n    else {\n      *(ushort *)input[10] = (ushort)*(undefined4 *)(*input + 4) & 0xff;\n      input[10] = input[10] + 1;\n    }\n  }\n  else if (input[4] == 0) {\n    undefinedPointer = (undefined *)input[10];\n    input[10] = (int)(undefinedPointer + 1);\n    *undefinedPointer = (char)*(undefined4 *)(*input + 4);\n  }\n  else {\n    bytePointer = (byte *)input[10];\n    input[10] = (int)(bytePointer + 1);\n    *bytePointer = (byte)*(undefined4 *)(*input + 4) & 0x7f;\n  }\n  shortValue = *(short *)((int)input + 0x2e) + -1;\n  *(short *)((int)input + 0x2e) = shortValue;\n  if (shortValue != 0) {\n    return 0;\n  }\n  *(uint *)(*input + 0xc) = *(uint *)(*input + 0xc) & 0xffffffdf;\n  *(uint *)(*input + 0xc) = *(uint *)(*input + 0xc) & 0xfffffeff;\n  *(uint *)(*input + 0x14) = *(uint *)(*input + 0x14) & 0xfffffffe;\n  *(undefined *)((int)input + 0x3a) = 0x20;\n  FUN_0800870c();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800694c": "process_input_string_0800694c",
                "param_1": "input",
                "pbVar1": "bytePointer",
                "sVar2": "shortValue",
                "puVar3": "undefinedPointer"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [
                "FUN_0800870c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069ec": {
            "entrypoint": "0x080069ec",
            "current_name": "process_conditions_080069ec",
            "code": "\nvoid process_conditions_080069ec(uint **input_params)\n\n{\n  int result;\n  uint param_3;\n  uint *ptr_param_1;\n  uint flag;\n  uint flag_2;\n  \n  ptr_param_1 = *input_params;\n  flag_2 = *ptr_param_1;\n  param_3 = ptr_param_1[3];\n  if ((((flag_2 & 0xf) == 0) && ((flag_2 & 0x20) != 0)) && ((param_3 & 0x20) != 0)) {\n    FUN_0800694c(input_params);\n    return;\n  }\n  if (((flag_2 & 0xf) == 0) || ((flag = ptr_param_1[5] & 1, flag == 0 && ((param_3 & 0x120) == 0)))) {\n    if (((flag_2 & 0x80) != 0) && ((param_3 & 0x80) != 0)) {\n      FUN_080064cc(input_params);\n      return;\n    }\n    if (((flag_2 & 0x40) != 0) && ((param_3 & 0x40) != 0)) {\n      FUN_08006932(input_params);\n    }\n  }\n  else {\n    if (((flag_2 & 1) != 0) && ((param_3 & 0x100) != 0)) {\n      input_params[0xf] = (uint *)((uint)input_params[0xf] | 1);\n    }\n    if (((flag_2 & 4) != 0) && (flag != 0)) {\n      input_params[0xf] = (uint *)((uint)input_params[0xf] | 2);\n    }\n    if (((flag_2 & 2) != 0) && (flag != 0)) {\n      input_params[0xf] = (uint *)((uint)input_params[0xf] | 4);\n    }\n    if (((flag_2 & 8) != 0) && (flag != 0)) {\n      input_params[0xf] = (uint *)((uint)input_params[0xf] | 8);\n    }\n    if (input_params[0xf] != (uint *)0x0) {\n      if (((flag_2 & 0x20) != 0) && ((param_3 & 0x20) != 0)) {\n        FUN_0800694c(input_params);\n      }\n      if ((((uint)input_params[0xf] & 8) == 0) && (((*input_params)[5] & 0x40) == 0)) {\n        FUNC_0800877c(input_params);\n        input_params[0xf] = (uint *)0x0;\n        return;\n      }\n      FUN_080064b0(input_params);\n      ptr_param_1 = *input_params;\n      if ((ptr_param_1[5] & 0x40) == 0) {\n        FUNC_0800877c(input_params);\n        return;\n      }\n      ptr_param_1[5] = ptr_param_1[5] & 0xffffffbf;\n      if (input_params[0xd] == (uint *)0x0) {\n        FUNC_0800877c(input_params);\n        return;\n      }\n      input_params[0xd][0xd] = (uint)&LAB_08006b0c_1;\n      result = FUN_08004050(input_params[0xd]);\n      if (result != 0) {\n        (*(code *)input_params[0xd][0xd])();\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080069ec": "process_conditions_080069ec",
                "param_1": "input_params",
                "iVar1": "result",
                "uVar2": "param_3",
                "puVar3": "ptr_param_1",
                "uVar4": "flag",
                "uVar5": "flag_2"
            },
            "calling": [],
            "called": [
                "FUN_0800877c",
                "FUN_080064b0",
                "FUN_08004050",
                "FUN_08006932",
                "FUN_0800694c",
                "FUN_080064cc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b1c": {
            "entrypoint": "0x08006b1c",
            "current_name": "combine_bytes_08006b1c",
            "code": "\nbyte combineBytes_08006b1c(int address)\n\n{\n  return *(byte *)(address + 0x3a) | *(byte *)(address + 0x39);\n}\n\n",
            "renaming": {
                "FUN_08006b1c": "combine_bytes_08006b1c",
                "param_1": "address"
            },
            "calling": [
                "FUN_080085b8",
                "FUN_080085dc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b28": {
            "entrypoint": "0x08006b28",
            "current_name": "check_bit_value_08006b28",
            "code": "\nuint checkBitValue_08006b28(uint inputValue,int baseAddress)\n\n{\n  return *(uint *)(baseAddress + ((inputValue << 0x18) >> 0x1c) * 4) >> (inputValue & 0xf) & 1;\n}\n\n",
            "renaming": {
                "FUN_08006b28": "check_bit_value_08006b28",
                "param_1": "inputValue",
                "param_2": "baseAddress"
            },
            "calling": [
                "FUN_08008990",
                "FUN_08008a24",
                "FUN_080088e0",
                "FUN_08008a6c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b3e": {
            "entrypoint": "0x08006b3e",
            "current_name": "update_array_value_08006b3e",
            "code": "\nvoid updateArrayValue_08006b3e(uint value,int array)\n\n{\n  uint index;\n  \n  index = (value << 0x18) >> 0x1c;\n  *(uint *)(array + index * 4) = *(uint *)(array + index * 4) | 1 << (value & 0xf);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006b3e": "update_array_value_08006b3e",
                "param_1": "value",
                "param_2": "array",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08008990",
                "FUN_080088e0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b5c": {
            "entrypoint": "0x08006b5c",
            "current_name": "update_bit_in_array_08006b5c",
            "code": "\nvoid updateBitInArray_08006b5c(uint bitPosition,int arrayAddress)\n\n{\n  uint arrayIndex;\n  \n  arrayIndex = (bitPosition << 0x18) >> 0x1c;\n  *(uint *)(arrayAddress + arrayIndex * 4) = *(uint *)(arrayAddress + arrayIndex * 4) & ~(1 << (bitPosition & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006b5c": "update_bit_in_array_08006b5c",
                "param_1": "bitPosition",
                "param_2": "arrayAddress",
                "uVar1": "arrayIndex"
            },
            "calling": [
                "FUN_08008990"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b7c": {
            "entrypoint": "0x08006b7c",
            "current_name": "get_memory_address_08006b7c",
            "code": "\nundefined4 getMemoryAddress_08006b7c(undefined4 inputValue)\n\n{\n  switch(inputValue) {\n  case 0:\n    return 0x40010800;\n  case 1:\n    return 0x40010c00;\n  case 2:\n    return 0x40011000;\n  case 3:\n    return 0x40011400;\n  case 4:\n    return 0x40011800;\n  default:\n    return 0;\n  }\n}\n\n",
            "renaming": {
                "FUN_08006b7c": "get_memory_address_08006b7c",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08008a24",
                "FUN_08008a6c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006bb8": {
            "entrypoint": "0x08006bb8",
            "current_name": "set_register_value_08006bb8",
            "code": "\n\n\nundefined4 setRegisterValue_08006bb8(undefined4 value)\n\n{\n  undefined4 returnValue;\n  \n  switch(value) {\n  case 0:\n    _DAT_40021018 = _DAT_40021018 | 4;\n    returnValue = 0x40010800;\n    break;\n  case 1:\n    _DAT_40021018 = _DAT_40021018 | 8;\n    returnValue = 0x40010c00;\n    break;\n  case 2:\n    _DAT_40021018 = _DAT_40021018 | 0x10;\n    returnValue = 0x40011000;\n    break;\n  case 3:\n    _DAT_40021018 = _DAT_40021018 | 0x20;\n    returnValue = 0x40011400;\n    break;\n  case 4:\n    _DAT_40021018 = _DAT_40021018 | 0x40;\n    returnValue = 0x40011800;\n    break;\n  default:\n    returnValue = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08006bb8": "set_register_value_08006bb8",
                "param_1": "value",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08006ca8",
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08006e68",
                "FUN_08007258"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c60": {
            "entrypoint": "0x08006c60",
            "current_name": "calculate_value_08006c60",
            "code": "\nuint calculateValue_08006c60(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  int result;\n  uint shiftedValue;\n  \n  result = FUN_08007376(input1,&DAT_0800a5b8,input3,input4,input4);\n  shiftedValue = (uint)(result << 0xc) >> 0x1b;\n  if (0x10 < shiftedValue - 1) {\n    shiftedValue = 0;\n  }\n  return shiftedValue;\n}\n\n",
            "renaming": {
                "FUN_08006c60": "calculate_value_08006c60",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "result",
                "uVar2": "shiftedValue"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08007376"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c7c": {
            "entrypoint": "0x08006c7c",
            "current_name": "determine_result_08006c7c",
            "code": "\nundefined4 determineResult_08006c7c(undefined4 input,undefined4 ptr1,undefined4 param3,undefined4 param4)\n\n{\n  int result;\n  uint shiftedValue;\n  \n  result = FUN_08007376(input,&DAT_0800a6cc,param3,param4,param4);\n  shiftedValue = (uint)(result << 0xc) >> 0x1b;\n  if (shiftedValue == 3) {\n    return 8;\n  }\n  if (shiftedValue != 4) {\n    if (shiftedValue != 2) {\n      return 0;\n    }\n    return 4;\n  }\n  return 0xc;\n}\n\n",
            "renaming": {
                "FUN_08006c7c": "determine_result_08006c7c",
                "param_1": "input",
                "param_2": "ptr1",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "result",
                "uVar2": "shiftedValue"
            },
            "calling": [
                "FUN_080071e4",
                "FUN_08007118"
            ],
            "called": [
                "FUN_08007376"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ca8": {
            "entrypoint": "0x08006ca8",
            "current_name": "update_settings_08006ca8",
            "code": "\n\n\nvoid updateSettings_08006ca8(int *settingsPtr,undefined4 data)\n\n{\n  undefined4 result;\n  uint newSetting;\n  int currentSetting;\n  uint bitMask;\n  undefined4 flag;\n  undefined4 zero;\n  \n  currentSetting = *settingsPtr;\n  if (currentSetting == 0x40012400) {\n    newSetting = _DAT_40021018 | 0x200;\n    currentSetting = 0x200;\n    _DAT_40021018 = newSetting;\n  }\n  else {\n    newSetting = 0x40012800;\n    if (currentSetting == 0x40012800) {\n      newSetting = _DAT_40021018 | 0x400;\n      currentSetting = 0x400;\n      _DAT_40021018 = newSetting;\n    }\n  }\n  result = FUN_08006bb8((uint)((int)(char)DAT_20000014 << 0x18) >> 0x1c,data,newSetting,currentSetting);\n  bitMask = 1 << (DAT_20000014 & 0xf) & 0xffff;\n  flag = 3;\n  zero = 0;\n  FUN_080040e8(result,&bitMask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006ca8": "update_settings_08006ca8",
                "param_1": "settingsPtr",
                "param_2": "data",
                "uVar1": "result",
                "uVar2": "newSetting",
                "iVar3": "currentSetting",
                "local_18": "bitMask",
                "local_14": "flag",
                "local_10": "zero"
            },
            "calling": [
                "FUN_08003bd8"
            ],
            "called": [
                "FUN_08006bb8",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d24": {
            "entrypoint": "0x08006d24",
            "current_name": "update_control_registers_08006d24",
            "code": "\n\n\nvoid updateControlRegisters_08006d24(int *value)\n\n{\n  if (*value != 0x40012400) {\n    if (*value == 0x40012800) {\n      _DAT_4002100c = _DAT_4002100c & 0xfffffbff;\n      _DAT_40021018 = _DAT_40021018 & 0xfffffbff;\n    }\n    return;\n  }\n  _DAT_4002100c = _DAT_4002100c & 0xfffffdff;\n  _DAT_40021018 = _DAT_40021018 & 0xfffffdff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d24": "update_control_registers_08006d24",
                "param_1": "value"
            },
            "calling": [
                "FUN_08003ce8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d80": {
            "entrypoint": "0x08006d80",
            "current_name": "validate_input_08006d80",
            "code": "\nundefined2 validateInput_08006d80(undefined4 inputData)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined2 isValidInput;\n  uint inputSize;\n  undefined4 isInputValid;\n  undefined4 inputValidationStatus;\n  int inputBuffer;\n  undefined4 var1;\n  undefined4 var2;\n  undefined4 var3;\n  undefined4 var4;\n  undefined4 var5;\n  undefined4 var6;\n  undefined4 var7;\n  undefined4 var8;\n  \n  FUN_080091c6(&inputBuffer,0,0x30);\n  inputSize = 0;\n  isInputValid = 0;\n  inputValidationStatus = 0;\n  isValidInput = 0;\n  inputBuffer = FUN_08007320(inputData,&DAT_0800a5b8);\n  if (inputBuffer == 0) {\n    isValidInput = 0;\n  }\n  else {\n    var1 = 0;\n    var2 = 0;\n    var3 = 0;\n    var5 = 0;\n    var7 = 0xe0000;\n    var8 = 0;\n    var4 = 1;\n    var6 = 0;\n    DAT_20000014 = (undefined)inputData;\n    iVar1 = FUN_08003bd8(&inputBuffer);\n    if (iVar1 == 0) {\n      inputSize = FUN_08006c60(inputData);\n      if (inputSize < 0x12) {\n        isInputValid = 1;\n        inputValidationStatus = 2;\n        iVar1 = FUN_080038e4(&inputBuffer,&inputSize);\n        if (iVar1 == 0) {\n          iVar1 = FUN_08003e20(&inputBuffer);\n          if (iVar1 == 0) {\n            iVar1 = FUN_08003aa0(&inputBuffer);\n            if (iVar1 == 0) {\n              iVar1 = FUN_0800376c(&inputBuffer,10);\n              if (iVar1 == 0) {\n                uVar2 = FUN_08003a1c(&inputBuffer);\n                if ((uVar2 & 0x200) != 0) {\n                  isValidInput = FUN_080038dc(&inputBuffer);\n                }\n                iVar1 = FUN_08003de4(&inputBuffer);\n                if (iVar1 == 0) {\n                  iVar1 = FUN_08003ce8(&inputBuffer);\n                  if (iVar1 != 0) {\n                    isValidInput = 0;\n                  }\n                }\n                else {\n                  isValidInput = 0;\n                }\n              }\n              else {\n                isValidInput = 0;\n              }\n            }\n            else {\n              isValidInput = 0;\n            }\n          }\n          else {\n            isValidInput = 0;\n          }\n        }\n        else {\n          isValidInput = 0;\n        }\n      }\n      else {\n        isValidInput = 0;\n      }\n    }\n    else {\n      isValidInput = 0;\n    }\n  }\n  return isValidInput;\n}\n\n",
            "renaming": {
                "FUN_08006d80": "validate_input_08006d80",
                "param_1": "inputData",
                "local_46": "isValidInput",
                "local_44": "inputSize",
                "local_40": "isInputValid",
                "local_3c": "inputValidationStatus",
                "local_38": "inputBuffer",
                "local_34": "var1",
                "local_30": "var2",
                "local_2c": "var3",
                "local_28": "var4",
                "local_24": "var5",
                "local_20": "var6",
                "local_1c": "var7",
                "local_10": "var8"
            },
            "calling": [
                "FUN_08008880"
            ],
            "called": [
                "FUN_080038dc",
                "FUN_08003bd8",
                "FUN_080038e4",
                "FUN_08003a1c",
                "FUN_08006c60",
                "FUN_080091c6",
                "FUN_0800376c",
                "FUN_08003ce8",
                "FUN_08003e20",
                "FUN_08003aa0",
                "FUN_08003de4",
                "FUN_08007320"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e68": {
            "entrypoint": "0x08006e68",
            "current_name": "initialize_device_08006e68",
            "code": "\n\n\nvoid initializeDevice_08006e68(undefined4 param)\n\n{\n  int deviceStatus;\n  undefined4 deviceConfig;\n  uint bitmask;\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  \n  deviceStatus = FUN_08007376((int)(char)DAT_20000014,&DAT_0800a6cc);\n  FUN_08007438(param);\n  deviceConfig = FUN_08006bb8((uint)((int)(char)DAT_20000014 << 0x18) >> 0x1c);\n  value1 = 2;\n  value2 = 0;\n  value3 = 3;\n  _DAT_40021018 = _DAT_40021018 | 1;\n  switch((uint)(deviceStatus << 0x11) >> 0x19) {\n  case 1:\n    _DAT_40010004 = _DAT_40010004 | 0x7000001;\n    break;\n  case 2:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n    break;\n  case 3:\n    _DAT_40010004 = _DAT_40010004 | 0x7000002;\n    break;\n  case 4:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n    break;\n  case 5:\n    _DAT_40010004 = _DAT_40010004 | 0x7000004;\n    break;\n  case 6:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n    break;\n  case 7:\n    _DAT_40010004 = _DAT_40010004 | 0x7000008;\n    break;\n  case 8:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n    break;\n  case 9:\n    _DAT_40010004 = _DAT_40010004 | 0x7000030;\n    break;\n  case 10:\n    _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n    break;\n  case 0xb:\n    _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n    break;\n  case 0xc:\n    _DAT_40010004 = _DAT_40010004 | 0x70000c0;\n    break;\n  case 0xd:\n    _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n    break;\n  case 0xe:\n    _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n    break;\n  case 0xf:\n    _DAT_40010004 = _DAT_40010004 | 0x7000300;\n    break;\n  case 0x10:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n    break;\n  case 0x11:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n    break;\n  case 0x12:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n    break;\n  case 0x13:\n    _DAT_40010004 = _DAT_40010004 | 0x7000c00;\n    break;\n  case 0x14:\n    _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n    break;\n  case 0x15:\n    _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n    break;\n  case 0x16:\n    _DAT_40010004 = _DAT_40010004 | 0x7001000;\n    break;\n  case 0x17:\n    _DAT_40010004 = _DAT_40010004 & 0xffffefff | 0x7000000;\n    break;\n  case 0x1b:\n    _DAT_40010004 = _DAT_40010004 | 0x7008000;\n    break;\n  case 0x1c:\n    _DAT_40010004 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n    break;\n  case 0x21:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff;\n    break;\n  case 0x22:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n    break;\n  case 0x23:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n    break;\n  case 0x24:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n  }\n  bitmask = 1 << (DAT_20000014 & 0xf) & 0xffff;\n  FUN_080040e8(deviceConfig,&bitmask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006e68": "initialize_device_08006e68",
                "param_1": "param",
                "iVar1": "deviceStatus",
                "uVar2": "deviceConfig",
                "local_20": "bitmask",
                "local_1c": "value1",
                "local_18": "value2",
                "local_14": "value3"
            },
            "calling": [
                "FUN_08006092"
            ],
            "called": [
                "FUN_08007438",
                "FUN_08007376",
                "FUN_08006bb8",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007110": {
            "entrypoint": "0x08007110",
            "current_name": "initialize_application_08007110",
            "code": "\nvoid initialize_application_08007110(void)\n\n{\n  FUN_080074e0();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007110": "initialize_application_08007110"
            },
            "calling": [
                "FUN_08005e2e"
            ],
            "called": [
                "FUN_080074e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007118": {
            "entrypoint": "0x08007118",
            "current_name": "process_data_08007118",
            "code": "\nvoid processData_08007118(undefined4 inputData,uint divisor,int value,undefined4 paramValue,char flag)\n\n{\n  uint divisionResult;\n  int resultCode;\n  int processResult;\n  undefined4 var1;\n  undefined4 var2;\n  undefined4 var3;\n  undefined4 var4;\n  undefined4 var5;\n  undefined4 var6;\n  undefined4 var7;\n  int buffer;\n  int newValue;\n  undefined4 unknownVar1;\n  int unknownVar2;\n  undefined4 unknownVar3;\n  undefined4 unknownVar4;\n  undefined unknownVar5;\n  \n  FUN_080091c6(&buffer,0,0x40);\n  var1 = 0;\n  var2 = 0;\n  var3 = 0;\n  var4 = 0;\n  var5 = 0;\n  var6 = 0;\n  var7 = 0;\n  buffer = FUN_08007320(inputData,&DAT_0800a6cc);\n  if (buffer != 0) {\n    divisionResult = FUN_080075dc();\n    newValue = divisionResult / divisor - 1;\n    unknownVar2 = value + -1;\n    unknownVar3 = 0;\n    unknownVar1 = 0;\n    unknownVar4 = 0;\n    unknownVar5 = 0;\n    if (flag == '\\x01') {\n      DAT_20000014 = (undefined)inputData;\n      resultCode = FUN_08006092(&buffer);\n      if (resultCode != 0) {\n        return;\n      }\n    }\n    resultCode = FUN_08006c7c(inputData);\n    if ((((resultCode == 0) || (resultCode == 4)) || (resultCode == 8)) || ((resultCode == 0xc || (resultCode == 0x18)))) {\n      var1 = 0x60;\n      var3 = 0;\n      var5 = 0;\n      var4 = 0;\n      var7 = 0;\n      var6 = 0;\n      var2 = paramValue;\n      processResult = FUN_08006186(&buffer,&var1,resultCode);\n      if (processResult == 0) {\n        divisionResult = FUN_08007376(inputData,&DAT_0800a6cc);\n        if ((divisionResult & 0x100000) == 0) {\n          FUN_08006390(&buffer,resultCode);\n        }\n        else {\n          FUN_0800643c(&buffer,resultCode);\n        }\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007118": "process_data_08007118",
                "param_1": "inputData",
                "param_2": "divisor",
                "param_3": "value",
                "param_4": "paramValue",
                "param_5": "flag",
                "uVar1": "divisionResult",
                "iVar2": "resultCode",
                "iVar3": "processResult",
                "local_74": "var1",
                "local_70": "var2",
                "local_6c": "var3",
                "local_68": "var4",
                "local_64": "var5",
                "local_60": "var6",
                "local_5c": "var7",
                "local_58": "buffer",
                "local_54": "newValue",
                "local_50": "unknownVar1",
                "local_4c": "unknownVar2",
                "local_48": "unknownVar3",
                "local_44": "unknownVar4",
                "local_1b": "unknownVar5"
            },
            "calling": [
                "FUN_080088e0"
            ],
            "called": [
                "FUN_08006092",
                "FUN_08006186",
                "FUN_0800643c",
                "FUN_08006c7c",
                "FUN_080091c6",
                "FUN_08007376",
                "FUN_080075dc",
                "FUN_08006390",
                "FUN_08007320"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080071e4": {
            "entrypoint": "0x080071e4",
            "current_name": "process_binary_function_080071e4",
            "code": "\nvoid processBinaryFunction_080071e4(undefined4 inputParameter)\n\n{\n  int result;\n  uint flag;\n  int arrayVariable [17];\n  \n  arrayVariable[0] = FUN_08007320(inputParameter,&DAT_0800a6cc);\n  if ((arrayVariable[0] != 0) &&\n     ((((result = FUN_08006c7c(inputParameter), result == 0 || (result == 4)) || (result == 8)) ||\n      ((result == 0xc || (result == 0x18)))))) {\n    flag = FUN_08007376(inputParameter,&DAT_0800a6cc);\n    if ((flag & 0x100000) == 0) {\n      FUN_080063c0(arrayVariable,result);\n    }\n    else {\n      FUN_08006460(arrayVariable,result);\n    }\n    FUN_08005e2e(arrayVariable);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080071e4": "process_binary_function_080071e4",
                "param_1": "inputParameter",
                "iVar1": "result",
                "uVar2": "flag",
                "local_50": "arrayVariable"
            },
            "calling": [
                "FUN_08008990"
            ],
            "called": [
                "FUN_08005e2e",
                "FUN_080063c0",
                "FUN_08006c7c",
                "FUN_08006460",
                "FUN_08007376",
                "FUN_08007320"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800723c": {
            "entrypoint": "0x0800723c",
            "current_name": "initialize_0800723c",
            "code": "\nvoid initialize_0800723c(void)\n\n{\n  FUN_08003760();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800723c": "initialize_0800723c"
            },
            "calling": [
                "FUN_08008abc"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007244": {
            "entrypoint": "0x08007244",
            "current_name": "FUNC_08007244",
            "code": "\nvoid FUNC_08007244(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007244": "FUNC_08007244"
            },
            "calling": [
                "FUN_08007246"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08007246": {
            "entrypoint": "0x08007246",
            "current_name": "execute_initialization_08007246",
            "code": "\nvoid executeInitialization_08007246(void)\n\n{\n  FUN_08003748();\n  FUN_08004046();\n  FUNC_08007244();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007246": "execute_initialization_08007246"
            },
            "calling": [],
            "called": [
                "FUN_08007244",
                "FUN_08004046",
                "FUN_08003748"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007258": {
            "entrypoint": "0x08007258",
            "current_name": "initialize_peripheral_08007258",
            "code": "\n\n\nvoid initializePeripheral_08007258(uint peripheralCode,undefined4 param2,undefined4 param3)\n\n{\n  undefined4 convertedCode;\n  uint bitmask;\n  undefined4 localVariable1;\n  undefined4 localVariable2;\n  undefined4 localVariable3;\n  \n  convertedCode = FUN_08006bb8((peripheralCode << 0x18) >> 0x1c);\n  bitmask = 1 << (peripheralCode & 0xf) & 0xffff;\n  localVariable3 = 3;\n  _DAT_40021018 = _DAT_40021018 | 1;\n  if ((peripheralCode - 0xd & 0xff) < 2) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n  }\n  if (((peripheralCode == 0xf) || (peripheralCode == 0x13)) || (peripheralCode == 0x14)) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n  }\n  localVariable1 = param2;\n  localVariable2 = param3;\n  FUN_080040e8(convertedCode,&bitmask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007258": "initialize_peripheral_08007258",
                "param_1": "peripheralCode",
                "param_2": "param2",
                "param_3": "param3",
                "uVar1": "convertedCode",
                "local_20": "bitmask",
                "local_1c": "localVariable1",
                "local_18": "localVariable2",
                "local_14": "localVariable3"
            },
            "calling": [
                "FUN_08008990"
            ],
            "called": [
                "FUN_08006bb8",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080072d8": {
            "entrypoint": "0x080072d8",
            "current_name": "process_parameter_080072d8",
            "code": "\nvoid processParameter_080072d8(undefined4 data1,undefined2 data2,int flag,undefined4 config)\n\n{\n  if (flag == 0) {\n    FUNC_080042e2(data1,data2,0,config,config);\n    return;\n  }\n  FUNC_080042e2(data1,data2,1,config,config);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072d8": "process_parameter_080072d8",
                "param_1": "data1",
                "param_2": "data2",
                "param_3": "flag",
                "param_4": "config"
            },
            "calling": [
                "FUN_08008a24"
            ],
            "called": [
                "FUN_080042e2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080072f0": {
            "entrypoint": "0x080072f0",
            "current_name": "execute_function_080072f0",
            "code": "\nvoid executeFunction_080072f0(undefined4 input_1,undefined2 input_2,undefined4 input_3,undefined4 input_4)\n\n{\n  FUN_080042d4(input_1,input_2,input_3,input_4,input_4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072f0": "execute_function_080072f0",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4"
            },
            "calling": [
                "FUN_08008a6c"
            ],
            "called": [
                "FUN_080042d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080072fa": {
            "entrypoint": "0x080072fa",
            "current_name": "initialize_application_080072fa",
            "code": "\nvoid initializeApplication_080072fa(void)\n\n{\n  FUN_08003724();\n  FUN_080035b8();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072fa": "initialize_application_080072fa"
            },
            "calling": [
                "FUN_080036a2"
            ],
            "called": [
                "FUN_08003724",
                "FUN_080035b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007306": {
            "entrypoint": "0x08007306",
            "current_name": "find_next_match_08007306",
            "code": "\nundefined4 find_next_match_08007306(int target_value,char *array_ptr)\n\n{\n  while( true ) {\n    if (*array_ptr == -1) {\n      return 0;\n    }\n    if (*array_ptr == target_value) break;\n    array_ptr = array_ptr + 0xc;\n  }\n  return *(undefined4 *)(array_ptr + 4);\n}\n\n",
            "renaming": {
                "FUN_08007306": "find_next_match_08007306",
                "param_1": "target_value",
                "param_2": "array_ptr"
            },
            "calling": [
                "FUN_08007306",
                "FUN_08007320"
            ],
            "called": [
                "FUN_08007306"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007320": {
            "entrypoint": "0x08007320",
            "current_name": "check_if_parameter_valid_08007320",
            "code": "\nundefined4 checkIfParameterValid_08007320(int inputParam)\n\n{\n  undefined4 result;\n  \n  if (inputParam != -1) {\n    result = FUN_08007306();\n    return result;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007320": "check_if_parameter_valid_08007320",
                "param_1": "inputParam",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08008078",
                "FUN_080084b0",
                "FUN_080077b0",
                "FUN_080071e4",
                "FUN_08007118",
                "FUN_08006d80",
                "FUN_08008500"
            ],
            "called": [
                "FUN_08007306"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007332": {
            "entrypoint": "0x08007332",
            "current_name": "find_character_08007332",
            "code": "\nint find_character_08007332(int target_value,char *character_data)\n\n{\n  while( true ) {\n    if (*(int *)(character_data + 4) == 0) {\n      return -1;\n    }\n    if (*(int *)(character_data + 4) == target_value) break;\n    character_data = character_data + 0xc;\n  }\n  return (int)*character_data;\n}\n\n",
            "renaming": {
                "FUN_08007332": "find_character_08007332",
                "param_1": "target_value",
                "param_2": "character_data"
            },
            "calling": [
                "FUN_0800734a",
                "FUN_08007332"
            ],
            "called": [
                "FUN_08007332"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800734a": {
            "entrypoint": "0x0800734a",
            "current_name": "check_param_0800734a",
            "code": "\nundefined4 check_param_0800734a(int input_param)\n\n{\n  undefined4 result;\n  \n  if (input_param != 0) {\n    result = FUN_08007332();\n    return result;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800734a": "check_param_0800734a",
                "param_1": "input_param",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080084b0",
                "FUN_08008d30"
            ],
            "called": [
                "FUN_08007332"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800735a": {
            "entrypoint": "0x0800735a",
            "current_name": "find_value_index_0800735a",
            "code": "\nundefined4 find_value_index_0800735a(int value,char *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      return 0xffffffff;\n    }\n    if (*array == value) break;\n    array = array + 0xc;\n  }\n  return *(undefined4 *)(array + 8);\n}\n\n",
            "renaming": {
                "FUN_0800735a": "find_value_index_0800735a",
                "param_1": "value",
                "param_2": "array"
            },
            "calling": [
                "FUN_0800735a",
                "FUN_08007376"
            ],
            "called": [
                "FUN_0800735a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007376": {
            "entrypoint": "0x08007376",
            "current_name": "check_parameter_08007376",
            "code": "\nundefined4 check_parameter_08007376(int input_value)\n\n{\n  undefined4 result;\n  \n  if (input_value == -1) {\n    return 0xffffffff;\n  }\n  result = FUN_0800735a();\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08007376": "check_parameter_08007376",
                "param_1": "input_value",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08006e68",
                "FUN_08006c60",
                "FUN_080071e4",
                "FUN_08006c7c",
                "FUN_08007118"
            ],
            "called": [
                "FUN_0800735a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800738a": {
            "entrypoint": "0x0800738a",
            "current_name": "compare_values_0800738a",
            "code": "\nundefined4 compareValues_0800738a(int value1,char *values)\n\n{\n  if (value1 == -1) {\n    return 0;\n  }\n  while( true ) {\n    if (*values == -1) {\n      return 0;\n    }\n    if (value1 == *values) break;\n    values = values + 0xc;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800738a": "compare_values_0800738a",
                "param_1": "value1",
                "param_2": "values"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_08001cd0",
                "FUN_08008990",
                "FUN_08000a64",
                "FUN_080088e0",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073ae": {
            "entrypoint": "0x080073ae",
            "current_name": "compare_and_return_non_zero_080073ae",
            "code": "\nint compare_and_return_non_zero_080073ae(int input_1,int input_2)\n\n{\n  if (input_1 != input_2) {\n    if (input_1 == 0) {\n      return input_2;\n    }\n    if (input_2 == 0) {\n      return input_1;\n    }\n    input_1 = 0;\n  }\n  return input_1;\n}\n\n",
            "renaming": {
                "FUN_080073ae": "compare_and_return_non_zero_080073ae",
                "param_1": "input_1",
                "param_2": "input_2"
            },
            "calling": [
                "FUN_08008078",
                "FUN_080077b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073c0": {
            "entrypoint": "0x080073c0",
            "current_name": "execute_callback_080073c0",
            "code": "\nvoid executeCallback_080073c0(void)\n\n{\n  if (DAT_200005f4 != (code *)0x0) {\n    (*DAT_200005f4)(DAT_2000060c);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073c0": "execute_callback_080073c0"
            },
            "calling": [
                "FUN_08005cb4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073e8": {
            "entrypoint": "0x080073e8",
            "current_name": "run_infinite_loop_080073e8",
            "code": "\nvoid run_infinite_loop_080073e8(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080073e8": "run_infinite_loop_080073e8"
            },
            "calling": [
                "FUN_080035b8",
                "FUN_080073e8"
            ],
            "called": [
                "FUN_080073e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073ec": {
            "entrypoint": "0x080073ec",
            "current_name": "initialize_hardware_080073ec",
            "code": "\n\n\nvoid initializeHardware_080073ec(void)\n\n{\n  _DAT_40021000 = _DAT_40021000 & 0xfef2ffff | 1;\n  _DAT_40021004 = _DAT_40021004 & 0xf8800000;\n  _DAT_40021008 = 0x9f0000;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073ec": "initialize_hardware_080073ec"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007438": {
            "entrypoint": "0x08007438",
            "current_name": "update_flags_and_data_pointers_08007438",
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nvoid updateFlagsAndDataPointers_08007438(int *dataPointer)\n\n{\n  if (*dataPointer == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 | 0x800;\n    DAT_20000610 = dataPointer;\n  }\n  if (*dataPointer == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c | 1;\n    DAT_20000614 = dataPointer;\n  }\n  if (*dataPointer == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c | 2;\n    DAT_20000618 = dataPointer;\n  }\n  if (*dataPointer == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c | 4;\n    DAT_2000061c = dataPointer;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007438": "update_flags_and_data_pointers_08007438",
                "param_1": "dataPointer"
            },
            "calling": [
                "FUN_08006e68",
                "FUN_08007708"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080074e0": {
            "entrypoint": "0x080074e0",
            "current_name": "update_memory_access_permissions_080074e0",
            "code": "\n\n\nvoid updateMemoryAccessPermissions_080074e0(int *address)\n\n{\n  if (*address == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 & 0xfffff7ff;\n  }\n  if (*address == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffe;\n  }\n  if (*address == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffd;\n  }\n  if (*address == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffb;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080074e0": "update_memory_access_permissions_080074e0",
                "param_1": "address"
            },
            "calling": [
                "FUN_08007710",
                "FUN_08007110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007544": {
            "entrypoint": "0x08007544",
            "current_name": "determine_timer_irq_08007544",
            "code": "\nundefined4 determineTimerIRQ_08007544(uint timerValue)\n\n{\n  if (timerValue == 0xffffffff) {\n    return 0;\n  }\n  if (timerValue == 0x40000400) {\n    return 0x1d;\n  }\n  if (timerValue < 0x40000401) {\n    if (timerValue == 0x40000000) {\n      return 0x1c;\n    }\n  }\n  else {\n    if (timerValue == 0x40000800) {\n      return 0x1e;\n    }\n    if (timerValue == 0x40012c00) {\n      return 0x19;\n    }\n  }\n  FUN_080098d8(\"TIM: Unknown timer IRQn\");\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007544": "determine_timer_irq_08007544",
                "param_1": "timerValue"
            },
            "calling": [
                "FUN_080076e0",
                "FUN_08007648"
            ],
            "called": [
                "FUN_080098d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007594": {
            "entrypoint": "0x08007594",
            "current_name": "check_timer_instance_08007594",
            "code": "\nundefined4 checkTimerInstance_08007594(uint timerInstance)\n\n{\n  if (timerInstance == 0xffffffff) {\n    return 0;\n  }\n  if (timerInstance == 0x40000400) {\n    return 1;\n  }\n  if (timerInstance < 0x40000401) {\n    if (timerInstance == 0x40000000) {\n      return 1;\n    }\n  }\n  else {\n    if (timerInstance == 0x40000800) {\n      return 1;\n    }\n    if (timerInstance == 0x40012c00) {\n      return 2;\n    }\n  }\n  FUN_080098d8(\"TIM: Unknown timer instance\");\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007594": "check_timer_instance_08007594",
                "param_1": "timerInstance"
            },
            "calling": [
                "FUN_080075dc"
            ],
            "called": [
                "FUN_080098d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080075dc": {
            "entrypoint": "0x080075dc",
            "current_name": "get_modified_clock_source_080075dc",
            "code": "\nint getModifiedClockSource_080075dc(undefined4 clockSource)\n\n{\n  uint previousClockSource;\n  int result;\n  uint currentClockSource;\n  undefined4 parsedValue1;\n  undefined4 parsedValue2;\n  undefined4 parsedValue3;\n  undefined4 parsedValue4;\n  uint localValue1;\n  uint localValue2;\n  \n  parsedValue2 = 0;\n  parsedValue3 = 0;\n  parsedValue4 = 0;\n  localValue1 = 0;\n  localValue2 = 0;\n  parsedValue1 = 0;\n  FUN_08005a68(&parsedValue2,&parsedValue1);\n  result = FUN_08007594(clockSource);\n  previousClockSource = localValue2;\n  currentClockSource = localValue1;\n  if (result == 1) {\n    result = FUN_08005a28();\n  }\n  else if (result == 2) {\n    result = FUN_08005a48();\n    currentClockSource = previousClockSource;\n  }\n  else {\n    FUN_080098d8(\"TIM: Unknown clock source\");\n    result = 0;\n    currentClockSource = 0;\n  }\n  if (currentClockSource != 0x500) {\n    if (currentClockSource < 0x501) {\n      if (currentClockSource != 0x400) {\n        return result;\n      }\n    }\n    else if ((currentClockSource != 0x600) && (currentClockSource != 0x700)) {\n      return result;\n    }\n  }\n  return result << 1;\n}\n\n",
            "renaming": {
                "FUN_080075dc": "get_modified_clock_source_080075dc",
                "param_1": "clockSource",
                "uVar1": "previousClockSource",
                "iVar2": "result",
                "uVar3": "currentClockSource",
                "local_20": "parsedValue1",
                "local_1c": "parsedValue2",
                "local_18": "parsedValue3",
                "local_14": "parsedValue4",
                "local_10": "localValue1",
                "local_c": "localValue2"
            },
            "calling": [
                "FUN_08007648",
                "FUN_08007118"
            ],
            "called": [
                "FUN_08005a28",
                "FUN_08005a48",
                "FUN_080098d8",
                "FUN_08007594",
                "FUN_08005a68"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007648": {
            "entrypoint": "0x08007648",
            "current_name": "initialize_data_08007648",
            "code": "\nvoid initializeData_08007648(undefined4 *dataPointer,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  char charValue;\n  uint result;\n  int status;\n  undefined4 *nextDataPointer;\n  undefined4 localValue1;\n  undefined4 localValue2;\n  undefined4 localValue3;\n  undefined4 localValue4;\n  undefined4 localValue5;\n  undefined4 localValue6;\n  undefined4 localValue7;\n  \n  localValue1 = 0;\n  localValue2 = 0;\n  localValue3 = 0;\n  localValue4 = 0;\n  localValue5 = 0;\n  localValue6 = 0;\n  localValue7 = 0;\n  nextDataPointer = dataPointer + 1;\n  *dataPointer = 0x40000000;\n  dataPointer[1] = 0x40000000;\n  dataPointer[4] = value1;\n  result = FUN_080075dc();\n  dataPointer[2] = result / 1000000 - 1;\n  dataPointer[5] = 0;\n  dataPointer[3] = 0;\n  dataPointer[6] = 0;\n  dataPointer[0x13] = value3;\n  localValue1 = 0;\n  localValue3 = 0;\n  localValue5 = 0;\n  localValue4 = 0;\n  localValue6 = 0;\n  localValue7 = 0;\n  localValue2 = value2;\n  charValue = FUN_08007544(*dataPointer);\n  FUN_08003f30((int)charValue,0xe,0);\n  charValue = FUN_08007544(*dataPointer);\n  FUN_08003f94((int)charValue);\n  status = FUN_08006060(nextDataPointer);\n  if ((status == 0) && (status = FUN_08006128(nextDataPointer,&localValue1,0), status == 0)) {\n    FUN_08006280(nextDataPointer,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007648": "initialize_data_08007648",
                "param_1": "dataPointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "cVar1": "charValue",
                "uVar2": "result",
                "iVar3": "status",
                "puVar4": "nextDataPointer",
                "local_34": "localValue1",
                "local_30": "localValue2",
                "local_2c": "localValue3",
                "local_28": "localValue4",
                "local_24": "localValue5",
                "local_20": "localValue6",
                "local_1c": "localValue7"
            },
            "calling": [
                "FUN_0800242c"
            ],
            "called": [
                "FUN_08007544",
                "FUN_08006280",
                "FUN_08003f30",
                "FUN_08006060",
                "FUN_08003f94",
                "FUN_080075dc",
                "FUN_08006128"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080076e0": {
            "entrypoint": "0x080076e0",
            "current_name": "initialize_data_080076e0",
            "code": "\nvoid initializeData_080076e0(undefined4 *data)\n\n{\n  char result;\n  int status;\n  \n  data[0x13] = 0;\n  result = FUN_08007544(*data);\n  FUN_08003fb0((int)result);\n  status = FUN_08005df4(data + 1);\n  if (status == 0) {\n    FUN_080062f4(data + 1,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080076e0": "initialize_data_080076e0",
                "param_1": "data",
                "cVar1": "result",
                "iVar2": "status"
            },
            "calling": [
                "FUN_08002578"
            ],
            "called": [
                "FUN_08003fb0",
                "FUN_08007544",
                "FUN_08005df4",
                "FUN_080062f4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007708": {
            "entrypoint": "0x08007708",
            "current_name": "initialize_08007708",
            "code": "\nvoid initialize_08007708(void)\n\n{\n  FUN_08007438();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007708": "initialize_08007708"
            },
            "calling": [
                "FUN_08006060"
            ],
            "called": [
                "FUN_08007438"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007710": {
            "entrypoint": "0x08007710",
            "current_name": "initialize_app_08007710",
            "code": "\nvoid initialize_app_08007710(void)\n\n{\n  FUN_080074e0();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007710": "initialize_app_08007710"
            },
            "calling": [
                "FUN_08005df4"
            ],
            "called": [
                "FUN_080074e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007718": {
            "entrypoint": "0x08007718",
            "current_name": "subtract_four_08007718",
            "code": "\nint subtract_four_08007718(int input_number)\n\n{\n  return input_number + -4;\n}\n\n",
            "renaming": {
                "FUN_08007718": "subtract_four_08007718",
                "param_1": "input_number"
            },
            "calling": [
                "FUN_0800771c",
                "FUN_08007736"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800771c": {
            "entrypoint": "0x0800771c",
            "current_name": "execute_function_if_condition_met_0800771c",
            "code": "\nvoid executeFunctionIfConditionMet_0800771c(int functionArgument)\n\n{\n  int functionReturnValue;\n  \n  functionReturnValue = FUN_08007718();\n  if ((*(code **)(functionReturnValue + 0x4c) != (code *)0x0) && (*(char *)(functionArgument + 0x1c) == '\\x01')) {\n    (**(code **)(functionReturnValue + 0x4c))(functionReturnValue,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800771c": "execute_function_if_condition_met_0800771c",
                "param_1": "functionArgument",
                "iVar1": "functionReturnValue"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [
                "FUN_08007718"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007736": {
            "entrypoint": "0x08007736",
            "current_name": "execute_callback_08007736",
            "code": "\nvoid executeCallback_08007736(void)\n\n{\n  int callbackAddress;\n  \n  callbackAddress = FUN_08007718();\n  if (*(functionPointer **)(callbackAddress + 0x48) != (functionPointer *)0x0) {\n    (**(functionPointer **)(callbackAddress + 0x48))();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007736": "execute_callback_08007736",
                "iVar1": "callbackAddress",
                "code": "functionPointer"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [
                "FUN_08007718"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007744": {
            "entrypoint": "0x08007744",
            "current_name": "get_offset_08007744",
            "code": "\nundefined4 getOffset_08007744(int input)\n\n{\n  return *(undefined4 *)(*(int *)(input + 4) + 0x24);\n}\n\n",
            "renaming": {
                "FUN_08007744": "get_offset_08007744",
                "param_1": "input"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800774a": {
            "entrypoint": "0x0800774a",
            "current_name": "write_value_to_memory_0800774a",
            "code": "\nvoid writeValueToMemory_0800774a(int memoryBlockAddress,undefined4 valueToWrite)\n\n{\n  *(undefined4 *)(*(int *)(memoryBlockAddress + 4) + 0x24) = valueToWrite;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800774a": "write_value_to_memory_0800774a",
                "param_1": "memoryBlockAddress",
                "param_2": "valueToWrite"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007750": {
            "entrypoint": "0x08007750",
            "current_name": "update_array_element_08007750",
            "code": "\nvoid updateArrayElement_08007750(int arrayPointer,int index,undefined4 newValue)\n\n{\n  *(undefined4 *)(*(int *)(arrayPointer + 4) + 0x34 + index * 4) = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007750": "update_array_element_08007750",
                "param_1": "arrayPointer",
                "param_2": "index",
                "param_3": "newValue"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080077b0": {
            "entrypoint": "0x080077b0",
            "current_name": "initialize_i2_c_080077b0",
            "code": "\n\n\nvoid initializeI2C_080077b0(int *config,int pin1,int pin2,int pinMode,undefined undefinedParam)\n\n{\n  int peripheralPin1;\n  int peripheralPin2;\n  undefined4 pinConfig;\n  uint var1;\n  uint var2;\n  int *pinInfo;\n  uint mask1;\n  uint mask2;\n  uint shiftedValue;\n  undefined4 constant3;\n  \n  if (config != (int *)0x0) {\n    pinInfo = config + 1;\n    peripheralPin1 = FUN_08007320((int)*(char *)(config + 0x16),&DAT_0800a69c);\n    peripheralPin2 = FUN_08007320((int)*(char *)((int)config + 0x59),&DAT_0800a66c);\n    if ((peripheralPin1 == 0) || (peripheralPin2 == 0)) {\n      FUN_080098d8(\"ERROR: at least one I2C pin has no peripheral\\n\");\n    }\n    else {\n      peripheralPin1 = FUN_080073ae(peripheralPin1,peripheralPin2);\n      *config = peripheralPin1;\n      if (peripheralPin1 == 0) {\n        FUN_080098d8(\"ERROR: I2C pins mismatch\\n\");\n      }\n      else {\n        if (peripheralPin1 == 0x40005400) {\n          _DAT_4002101c = _DAT_4002101c | 0x200000;\n          _DAT_40021010 = _DAT_40021010 & 0xffdfffff;\n          *(undefined *)((int)config + 0x5a) = 0x1f;\n          *(undefined *)((int)config + 0x5b) = 0x20;\n          DAT_20000668 = pinInfo;\n        }\n        if (*config == 0x40005800) {\n          _DAT_4002101c = _DAT_4002101c | 0x400000;\n          _DAT_40021010 = _DAT_40021010 & 0xffbfffff;\n          *(undefined *)((int)config + 0x5a) = 0x21;\n          *(undefined *)((int)config + 0x5b) = 0x22;\n          DAT_2000066c = pinInfo;\n        }\n        pinConfig = FUN_08006bb8((uint)((int)*(char *)((int)config + 0x59) << 0x18) >> 0x1c);\n        mask1 = 1 << ((int)*(char *)((int)config + 0x59) & 0xfU) & 0xffff;\n        var1 = FUN_08007376((int)*(char *)((int)config + 0x59),&DAT_0800a66c);\n        var2 = FUN_08007376((int)*(char *)((int)config + 0x59),&DAT_0800a66c);\n        mask2 = (var1 >> 3 & 1) << 4 | var2 & 7;\n        constant3 = 3;\n        peripheralPin1 = FUN_08007376((int)*(char *)((int)config + 0x59),&DAT_0800a66c);\n        shiftedValue = (uint)(peripheralPin1 << 0x1a) >> 0x1e;\n        peripheralPin1 = FUN_08007376((int)*(char *)((int)config + 0x59),&DAT_0800a66c);\n        _DAT_40021018 = _DAT_40021018 | 1;\n        var2 = 1;\n        var1 = _DAT_40021018;\n        switch((uint)(peripheralPin1 << 0x11) >> 0x19) {\n        case 1:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 | 0x7000001;\n          _DAT_40010004 = var2;\n          break;\n        case 2:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          _DAT_40010004 = var2;\n          break;\n        case 3:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 | 0x7000002;\n          _DAT_40010004 = var2;\n          break;\n        case 4:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          _DAT_40010004 = var2;\n          break;\n        case 5:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 | 0x7000004;\n          _DAT_40010004 = var2;\n          break;\n        case 6:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          _DAT_40010004 = var2;\n          break;\n        case 7:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 | 0x7000008;\n          _DAT_40010004 = var2;\n          break;\n        case 8:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          _DAT_40010004 = var2;\n          break;\n        case 9:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 | 0x7000030;\n          _DAT_40010004 = var2;\n          break;\n        case 10:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          _DAT_40010004 = var2;\n          break;\n        case 0xb:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          _DAT_40010004 = var2;\n          break;\n        case 0xc:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 | 0x70000c0;\n          _DAT_40010004 = var2;\n          break;\n        case 0xd:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          _DAT_40010004 = var2;\n          break;\n        case 0xe:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          _DAT_40010004 = var2;\n          break;\n        case 0xf:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 | 0x7000300;\n          _DAT_40010004 = var2;\n          break;\n        case 0x10:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          _DAT_40010004 = var2;\n          break;\n        case 0x11:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          _DAT_40010004 = var2;\n          break;\n        case 0x12:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          _DAT_40010004 = var2;\n          break;\n        case 0x13:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 | 0x7000c00;\n          _DAT_40010004 = var2;\n          break;\n        case 0x14:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          _DAT_40010004 = var2;\n          break;\n        case 0x15:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          _DAT_40010004 = var2;\n          break;\n        case 0x16:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 | 0x7001000;\n          _DAT_40010004 = var2;\n          break;\n        case 0x17:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          _DAT_40010004 = var2;\n          break;\n        case 0x1b:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 | 0x7008000;\n          _DAT_40010004 = var2;\n          break;\n        case 0x1c:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          _DAT_40010004 = var2;\n          break;\n        case 0x21:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 & 0xf8ffffff;\n          _DAT_40010004 = var2;\n          break;\n        case 0x22:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          _DAT_40010004 = var2;\n          break;\n        case 0x23:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          _DAT_40010004 = var2;\n          break;\n        case 0x24:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n          _DAT_40010004 = var2;\n        }\n        FUN_080040e8(pinConfig,&mask1,var1,var2);\n        pinConfig = FUN_08006bb8((uint)((int)*(char *)(config + 0x16) << 0x18) >> 0x1c);\n        mask1 = 1 << ((int)*(char *)(config + 0x16) & 0xfU) & 0xffff;\n        var1 = FUN_08007376((int)*(char *)(config + 0x16),&DAT_0800a69c);\n        var2 = FUN_08007376((int)*(char *)(config + 0x16),&DAT_0800a69c);\n        mask2 = (var1 >> 3 & 1) << 4 | var2 & 7;\n        constant3 = 3;\n        peripheralPin1 = FUN_08007376((int)*(char *)(config + 0x16),&DAT_0800a69c);\n        shiftedValue = (uint)(peripheralPin1 << 0x1a) >> 0x1e;\n        peripheralPin1 = FUN_08007376((int)*(char *)(config + 0x16),&DAT_0800a69c);\n        _DAT_40021018 = _DAT_40021018 | 1;\n        var2 = 1;\n        var1 = _DAT_40021018;\n        switch((uint)(peripheralPin1 << 0x11) >> 0x19) {\n        case 1:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 | 0x7000001;\n          _DAT_40010004 = var2;\n          break;\n        case 2:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          _DAT_40010004 = var2;\n          break;\n        case 3:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 | 0x7000002;\n          _DAT_40010004 = var2;\n          break;\n        case 4:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          _DAT_40010004 = var2;\n          break;\n        case 5:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 | 0x7000004;\n          _DAT_40010004 = var2;\n          break;\n        case 6:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          _DAT_40010004 = var2;\n          break;\n        case 7:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 | 0x7000008;\n          _DAT_40010004 = var2;\n          break;\n        case 8:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          _DAT_40010004 = var2;\n          break;\n        case 9:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 | 0x7000030;\n          _DAT_40010004 = var2;\n          break;\n        case 10:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          _DAT_40010004 = var2;\n          break;\n        case 0xb:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          _DAT_40010004 = var2;\n          break;\n        case 0xc:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 | 0x70000c0;\n          _DAT_40010004 = var2;\n          break;\n        case 0xd:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          _DAT_40010004 = var2;\n          break;\n        case 0xe:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          _DAT_40010004 = var2;\n          break;\n        case 0xf:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 | 0x7000300;\n          _DAT_40010004 = var2;\n          break;\n        case 0x10:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          _DAT_40010004 = var2;\n          break;\n        case 0x11:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          _DAT_40010004 = var2;\n          break;\n        case 0x12:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          _DAT_40010004 = var2;\n          break;\n        case 0x13:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 | 0x7000c00;\n          _DAT_40010004 = var2;\n          break;\n        case 0x14:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          _DAT_40010004 = var2;\n          break;\n        case 0x15:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          _DAT_40010004 = var2;\n          break;\n        case 0x16:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 | 0x7001000;\n          _DAT_40010004 = var2;\n          break;\n        case 0x17:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          _DAT_40010004 = var2;\n          break;\n        case 0x1b:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 | 0x7008000;\n          _DAT_40010004 = var2;\n          break;\n        case 0x1c:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          _DAT_40010004 = var2;\n          break;\n        case 0x21:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 & 0xf8ffffff;\n          _DAT_40010004 = var2;\n          break;\n        case 0x22:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          _DAT_40010004 = var2;\n          break;\n        case 0x23:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          _DAT_40010004 = var2;\n          break;\n        case 0x24:\n          var1 = 0x40010000;\n          var2 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n          _DAT_40010004 = var2;\n        }\n        FUN_080040e8(pinConfig,&mask1,var1,var2);\n        config[1] = *config;\n        config[2] = pin1;\n        config[3] = 0;\n        config[4] = pinMode;\n        config[7] = 0xff;\n        config[5] = pin2;\n        config[6] = 0;\n        config[8] = 0;\n        config[9] = 0;\n        *(undefined *)((int)config + 0x41) = 0;\n        FUN_08003f30((int)*(char *)((int)config + 0x5a),0,1);\n        FUN_08003f94((int)*(char *)((int)config + 0x5a));\n        FUN_08003f30((int)*(char *)((int)config + 0x5b),0,1);\n        FUN_08003f94((int)*(char *)((int)config + 0x5b));\n        FUNC_080045c0(pinInfo);\n        *(undefined *)((int)config + 0x5d) = undefinedParam;\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080077b0": "initialize_i2_c_080077b0",
                "param_1": "config",
                "param_2": "pin1",
                "param_3": "pin2",
                "param_4": "pinMode",
                "param_5": "undefinedParam",
                "iVar1": "peripheralPin1",
                "iVar2": "peripheralPin2",
                "uVar3": "pinConfig",
                "uVar4": "var1",
                "uVar5": "var2",
                "piVar6": "pinInfo",
                "local_38": "mask1",
                "local_34": "mask2",
                "local_30": "shiftedValue",
                "local_2c": "constant3"
            },
            "calling": [
                "FUN_08002968"
            ],
            "called": [
                "FUN_080045c0",
                "FUN_080098d8",
                "FUN_080073ae",
                "FUN_08003f30",
                "FUN_08003f94",
                "FUN_08006bb8",
                "FUN_08007376",
                "FUN_08007320",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e74": {
            "entrypoint": "0x08007e74",
            "current_name": "check_string_validity_08007e74",
            "code": "\nint checkStringValidity_08007e74(int str,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int initialValue;\n  int result;\n  uint difference;\n  int status;\n  int tempVar;\n  undefined4 tempParam4;\n  \n  tempParam4 = param4;\n  initialValue = FUN_08003760();\n  difference = 0;\n  status = 2;\n  do {\n    tempVar = str + 4;\n    result = FUN_08004728(tempVar,param2,param3,param4,tempParam4);\n    if (result == 0) {\n      status = 0;\n      while ((result = FUN_0800542a(tempVar), result != 0x20 && (status == 0))) {\n        result = FUN_08003760();\n        difference = result - initialValue;\n        if (difference < 0x65) {\n          result = FUN_08005430(tempVar);\n          if (result != 0) {\n            status = 2;\n          }\n        }\n        else {\n          status = 1;\n        }\n      }\n    }\n    result = FUN_08005430(tempVar);\n  } while ((result == 4) && (difference < 100));\n  return status;\n}\n\n",
            "renaming": {
                "FUN_08007e74": "check_string_validity_08007e74",
                "param_1": "str",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "initialValue",
                "iVar2": "result",
                "uVar3": "difference",
                "iVar4": "status",
                "iVar5": "tempVar",
                "uVar6": "tempParam4"
            },
            "calling": [
                "FUN_08002a58"
            ],
            "called": [
                "FUN_08004728",
                "FUN_0800542a",
                "FUN_08005430",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ede": {
            "entrypoint": "0x08007ede",
            "current_name": "copy_to_memory_08007ede",
            "code": "\nundefined4 copyToMemory_08007ede(int destination,int source,uint length)\n\n{\n  uint counter;\n  \n  if (0x20 < length) {\n    return 2;\n  }\n  for (counter = 0; counter < length; counter = counter + 1 & 0xff) {\n    *(undefined *)(destination + counter + 0x68) = *(undefined *)(source + counter);\n    *(char *)(destination + 0x88) = *(char *)(destination + 0x88) + '\\x01';\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007ede": "copy_to_memory_08007ede",
                "param_1": "destination",
                "param_2": "source",
                "param_3": "length",
                "uVar1": "counter"
            },
            "calling": [
                "FUN_080027f0",
                "FUN_0800288c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f0e": {
            "entrypoint": "0x08007f0e",
            "current_name": "check_value_and_return_08007f0e",
            "code": "\nint checkValueAndReturn_08007f0e(int inputValue,undefined4 parameter2,undefined4 parameter3,undefined4 parameter4)\n\n{\n  int initialValue;\n  int returnValue;\n  uint difference;\n  int status;\n  int tempValue;\n  undefined4 tempParameter;\n  \n  tempParameter = parameter4;\n  initialValue = FUN_08003760();\n  difference = 0;\n  status = 2;\n  do {\n    tempValue = inputValue + 4;\n    returnValue = FUN_080047f4(tempValue,parameter2,parameter3,parameter4,tempParameter);\n    if (returnValue == 0) {\n      status = 0;\n      while ((returnValue = FUN_0800542a(tempValue), returnValue != 0x20 && (status == 0))) {\n        returnValue = FUN_08003760();\n        difference = returnValue - initialValue;\n        if (difference < 0x65) {\n          returnValue = FUN_08005430(tempValue);\n          if (returnValue != 0) {\n            status = 2;\n          }\n        }\n        else {\n          status = 1;\n        }\n      }\n    }\n    returnValue = FUN_08005430(tempValue);\n  } while ((returnValue == 4) && (difference < 100));\n  return status;\n}\n\n",
            "renaming": {
                "FUN_08007f0e": "check_value_and_return_08007f0e",
                "param_1": "inputValue",
                "param_2": "parameter2",
                "param_3": "parameter3",
                "param_4": "parameter4",
                "iVar1": "initialValue",
                "iVar2": "returnValue",
                "uVar3": "difference",
                "iVar4": "status",
                "iVar5": "tempValue",
                "uVar6": "tempParameter"
            },
            "calling": [
                "FUN_08002b68"
            ],
            "called": [
                "FUN_080047f4",
                "FUN_0800542a",
                "FUN_08005430",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f78": {
            "entrypoint": "0x08007f78",
            "current_name": "subtract_4_08007f78",
            "code": "\nint subtract_4_08007f78(int number)\n\n{\n  return number + -4;\n}\n\n",
            "renaming": {
                "FUN_08007f78": "subtract_4_08007f78",
                "param_1": "number"
            },
            "calling": [
                "FUN_08008020",
                "FUN_08007fa0",
                "FUN_08007ff0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f7c": {
            "entrypoint": "0x08007f7c",
            "current_name": "update_param_value_08007f7c",
            "code": "\nvoid updateParamValue_08007f7c(int updatedAddress,int value)\n\n{\n  if (updatedAddress != 0) {\n    if (value != 0) {\n      *(int *)(updatedAddress + 0x60) = value;\n      FUN_080049e0(updatedAddress + 4);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007f7c": "update_param_value_08007f7c",
                "param_1": "updatedAddress",
                "param_2": "value"
            },
            "calling": [
                "FUN_08002968"
            ],
            "called": [
                "FUN_080049e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f8e": {
            "entrypoint": "0x08007f8e",
            "current_name": "update_param_and_call_function_08007f8e",
            "code": "\nvoid update_param_and_call_function_08007f8e(int old_param,int new_param)\n\n{\n  if (old_param != 0) {\n    if (new_param != 0) {\n      *(int *)(old_param + 100) = new_param;\n      FUN_080049e0(old_param + 4);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007f8e": "update_param_and_call_function_08007f8e",
                "param_1": "old_param",
                "param_2": "new_param"
            },
            "calling": [
                "FUN_08002968"
            ],
            "called": [
                "FUN_080049e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007fa0": {
            "entrypoint": "0x08007fa0",
            "current_name": "process_data_08007fa0",
            "code": "\nvoid processData_08007fa0(int dataBuffer,int flag,int comparisonValue,undefined4 additionalParams)\n\n{\n  int result;\n  \n  result = FUN_08007f78();\n  if (comparisonValue == *(int *)(dataBuffer + 0xc)) {\n    if (flag == 0) {\n      *(undefined *)(result + 0x88) = 0;\n      *(undefined *)(result + 0x5c) = 0;\n      if (*(code **)(result + 100) != (code *)0x0) {\n        (**(code **)(result + 100))();\n      }\n      FUN_080048c8(dataBuffer,result + 0x68,*(undefined *)(result + 0x88),8);\n      return;\n    }\n    *(undefined *)(result + 0x5c) = 1;\n    FUN_08004954(dataBuffer,result + 0x68,0x20,8,additionalParams);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007fa0": "process_data_08007fa0",
                "param_1": "dataBuffer",
                "param_2": "flag",
                "param_3": "comparisonValue",
                "param_4": "additionalParams",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08004ac2"
            ],
            "called": [
                "FUN_08004954",
                "FUN_08007f78",
                "FUN_080048c8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ff0": {
            "entrypoint": "0x08007ff0",
            "current_name": "execute_function_if_condition_met_08007ff0",
            "code": "\nvoid executeFunctionIfConditionMet_08007ff0(undefined4 inputParameter)\n\n{\n  int returnValue;\n  \n  returnValue = FUN_08007f78();\n  if (((*(code **)(returnValue + 0x60) != (code *)0x0) && (*(char *)(returnValue + 0x5c) == '\\x01')) &&\n     (*(char *)(returnValue + 0x2c) != ' ')) {\n    (**(code **)(returnValue + 0x60))(returnValue + 0x68);\n  }\n  FUN_080049e0(inputParameter);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007ff0": "execute_function_if_condition_met_08007ff0",
                "param_1": "inputParameter",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08004aec",
                "FUN_08004f3c",
                "FUN_08005084"
            ],
            "called": [
                "FUN_08007f78",
                "FUN_080049e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008020": {
            "entrypoint": "0x08008020",
            "current_name": "check_and_execute_function_08008020",
            "code": "\nvoid checkAndExecuteFunction_08008020(undefined4 input)\n\n{\n  int result;\n  \n  result = FUN_08007f78();\n  if (*(char *)(result + 0x5d) == '\\0') {\n    FUN_080049e0(input);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008020": "check_and_execute_function_08008020",
                "param_1": "input",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08004f3c"
            ],
            "called": [
                "FUN_08007f78",
                "FUN_080049e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008078": {
            "entrypoint": "0x08008078",
            "current_name": "configure_uart_pins_08008078",
            "code": "\n\n\nvoid configure_UART_pins_08008078(int *uart_pins)\n\n{\n  int uart_pin_1;\n  int uart_pin_2;\n  undefined4 uart_pin_config;\n  uint uart_pin_data;\n  uint pin_1_bit;\n  uint pin_1_mode;\n  uint pin_1_speed;\n  undefined4 uart_pin_count;\n  \n  if (uart_pins != (int *)0x0) {\n    uart_pin_1 = FUN_08007320((int)*(char *)(uart_pins + 0x16),&DAT_0800a864);\n    uart_pin_2 = FUN_08007320((int)*(char *)((int)uart_pins + 0x59),&DAT_0800a81c);\n    if ((uart_pin_2 == 0) || (uart_pin_1 == 0)) {\n      FUN_080098d8(\"ERROR: at least one UART pin has no peripheral\\n\",uart_pin_2);\n    }\n    else {\n      uart_pin_1 = FUN_080073ae(uart_pin_1);\n      *uart_pins = uart_pin_1;\n      if (uart_pin_1 == 0) {\n        FUN_080098d8(\"ERROR: U(S)ART pins mismatch\\n\");\n      }\n      else {\n        if (uart_pin_1 == 0x40013800) {\n          _DAT_4002100c = _DAT_4002100c & 0xffffbfff;\n          _DAT_40021018 = _DAT_40021018 | 0x4000;\n          *(undefined *)(uart_pins + 0x11) = 0;\n          *(undefined *)((int)uart_pins + 0x5a) = 0x25;\n        }\n        else if (uart_pin_1 == 0x40004400) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffdffff;\n          _DAT_4002101c = _DAT_4002101c | 0x20000;\n          *(undefined *)(uart_pins + 0x11) = 1;\n          *(undefined *)((int)uart_pins + 0x5a) = 0x26;\n        }\n        else if (uart_pin_1 == 0x40004800) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffbffff;\n          _DAT_4002101c = _DAT_4002101c | 0x40000;\n          *(undefined *)(uart_pins + 0x11) = 2;\n          *(undefined *)((int)uart_pins + 0x5a) = 0x27;\n        }\n        uart_pin_config = FUN_08006bb8((uint)((int)*(char *)((int)uart_pins + 0x59) << 0x18) >> 0x1c);\n        uart_pin_data = FUN_08007376((int)*(char *)((int)uart_pins + 0x59),&DAT_0800a81c);\n        pin_1_bit = 1 << (*(byte *)((int)uart_pins + 0x59) & 0xf) & 0xffff;\n        pin_1_mode = (uart_pin_data >> 3 & 1) << 4 | uart_pin_data & 7;\n        pin_1_speed = (uart_pin_data << 0x1a) >> 0x1e;\n        _DAT_40021018 = _DAT_40021018 | 1;\n        switch((uart_pin_data << 0x11) >> 0x19) {\n        case 1:\n          _DAT_40010004 = _DAT_40010004 | 0x7000001;\n          break;\n        case 2:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          break;\n        case 3:\n          _DAT_40010004 = _DAT_40010004 | 0x7000002;\n          break;\n        case 4:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          break;\n        case 5:\n          _DAT_40010004 = _DAT_40010004 | 0x7000004;\n          break;\n        case 6:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          break;\n        case 7:\n          _DAT_40010004 = _DAT_40010004 | 0x7000008;\n          break;\n        case 8:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          break;\n        case 9:\n          _DAT_40010004 = _DAT_40010004 | 0x7000030;\n          break;\n        case 10:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          break;\n        case 0xb:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          break;\n        case 0xc:\n          _DAT_40010004 = _DAT_40010004 | 0x70000c0;\n          break;\n        case 0xd:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          break;\n        case 0xe:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          break;\n        case 0xf:\n          _DAT_40010004 = _DAT_40010004 | 0x7000300;\n          break;\n        case 0x10:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          break;\n        case 0x11:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          break;\n        case 0x12:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          break;\n        case 0x13:\n          _DAT_40010004 = _DAT_40010004 | 0x7000c00;\n          break;\n        case 0x14:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          break;\n        case 0x15:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          break;\n        case 0x16:\n          _DAT_40010004 = _DAT_40010004 | 0x7001000;\n          break;\n        case 0x17:\n          _DAT_40010004 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          break;\n        case 0x1b:\n          _DAT_40010004 = _DAT_40010004 | 0x7008000;\n          break;\n        case 0x1c:\n          _DAT_40010004 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          break;\n        case 0x21:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff;\n          break;\n        case 0x22:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          break;\n        case 0x23:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          break;\n        case 0x24:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n        }\n        uart_pin_count = 3;\n        FUN_080040e8(uart_pin_config,&pin_1_bit);\n        uart_pin_config = FUN_08006bb8((uint)((int)*(char *)(uart_pins + 0x16) << 0x18) >> 0x1c);\n        uart_pin_data = FUN_08007376((int)*(char *)(uart_pins + 0x16),&DAT_0800a864);\n        pin_1_bit = 1 << (*(byte *)(uart_pins + 0x16) & 0xf) & 0xffff;\n        pin_1_mode = (uart_pin_data >> 3 & 1) << 4 | uart_pin_data & 7;\n        pin_1_speed = (uart_pin_data << 0x1a) >> 0x1e;\n        FUN_080040e8(uart_pin_config,&pin_1_bit);\n        (&DAT_200006c0)[*(byte *)(uart_pins + 0x11)] = uart_pins + 1;\n        uart_pins[1] = *uart_pins;\n        uart_pins[2] = uart_pins[0x12];\n        uart_pins[3] = uart_pins[0x13];\n        uart_pins[4] = uart_pins[0x14];\n        uart_pins[5] = uart_pins[0x15];\n        uart_pins[6] = 0xc;\n        uart_pins[7] = 0;\n        uart_pins[8] = 0;\n        FUN_0800674e(uart_pins + 1);\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008078": "configure_uart_pins_08008078",
                "param_1": "uart_pins",
                "iVar1": "uart_pin_1",
                "iVar2": "uart_pin_2",
                "uVar3": "uart_pin_config",
                "uVar4": "uart_pin_data",
                "local_20": "pin_1_bit",
                "local_1c": "pin_1_mode",
                "local_18": "pin_1_speed",
                "local_14": "uart_pin_count"
            },
            "calling": [
                "FUN_080084b0",
                "FUN_08008c44"
            ],
            "called": [
                "FUN_080073ae",
                "FUN_080098d8",
                "FUN_0800674e",
                "FUN_08006bb8",
                "FUN_08007376",
                "FUN_08007320",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080084b0": {
            "entrypoint": "0x080084b0",
            "current_name": "initialize_data_080084b0",
            "code": "\nvoid initializeData_080084b0(void)\n\n{\n  int result;\n  undefined4 value;\n  \n  result = FUN_08007320(2,&DAT_0800a864);\n  if (result != 0) {\n    value = FUN_08007320(2,&DAT_0800a864);\n    DAT_20000075 = FUN_0800734a(value,&DAT_0800a81c);\n    DAT_20000074 = 2;\n    DAT_20000064 = 0x2580;\n    DAT_20000070 = 0;\n    DAT_20000068 = 0;\n    DAT_2000006c = 0;\n    FUN_08008078(&DAT_2000001c);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080084b0": "initialize_data_080084b0",
                "iVar1": "result",
                "uVar2": "value"
            },
            "calling": [
                "FUN_08008500"
            ],
            "called": [
                "FUN_08008078",
                "FUN_0800734a",
                "FUN_08007320"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008500": {
            "entrypoint": "0x08008500",
            "current_name": "verify_and_execute_08008500",
            "code": "\nuint verify_and_execute_08008500(undefined4 flag,uint value)\n\n{\n  int result1;\n  int result2;\n  uint counter;\n  \n  result1 = FUN_08003760();\n  result2 = FUN_08007320(2,&DAT_0800a864);\n  if (result2 == 0) {\n    return 0;\n  }\n  for (counter = 0;\n      (counter < 5 &&\n      (((&DAT_200006c0)[counter] == 0 ||\n       (result2 = FUN_08007320(2,&DAT_0800a864), *(int *)(&DAT_200006c0)[counter] != result2))));\n      counter = counter + 1 & 0xff) {\n  }\n  if (4 < counter) {\n    if ((4 < DAT_20000060) && (FUN_080084b0(), 4 < DAT_20000060)) {\n      return 0;\n    }\n    counter = (uint)DAT_20000060;\n  }\n  do {\n    result2 = FUN_080067ac((&DAT_200006c0)[counter],flag,value & 0xffff,1000);\n    if (result2 == 0) {\n      return value;\n    }\n    result2 = FUN_08003760();\n  } while ((uint)(result2 - result1) < 1000);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008500": "verify_and_execute_08008500",
                "param_1": "flag",
                "param_2": "value",
                "iVar1": "result1",
                "iVar2": "result2",
                "uVar3": "counter"
            },
            "calling": [
                "FUN_0800885c"
            ],
            "called": [
                "FUN_080084b0",
                "FUN_080067ac",
                "FUN_08007320",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080085b8": {
            "entrypoint": "0x080085b8",
            "current_name": "check_flag_validity_080085b8",
            "code": "\nbool checkFlagValidity_080085b8(int flagAddress)\n\n{\n  uint computedFlag;\n  \n  computedFlag = FUN_08006b1c((&DAT_200006c0)[*(byte *)(flagAddress + 0x44)]);\n  return (computedFlag & 0x22) == 0x22;\n}\n\n",
            "renaming": {
                "FUN_080085b8": "check_flag_validity_080085b8",
                "param_1": "flagAddress",
                "uVar1": "computedFlag"
            },
            "calling": [
                "FUN_08008600",
                "FUN_0800863c"
            ],
            "called": [
                "FUN_08006b1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080085dc": {
            "entrypoint": "0x080085dc",
            "current_name": "is_result_valid_080085dc",
            "code": "\nbool is_result_valid_080085dc(int input_value)\n\n{\n  uint result;\n  \n  result = FUN_08006b1c((&DAT_200006c0)[*(byte *)(input_value + 0x44)]);\n  return (result & 0x21) == 0x21;\n}\n\n",
            "renaming": {
                "FUN_080085dc": "is_result_valid_080085dc",
                "param_1": "input_value",
                "uVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_08006b1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008600": {
            "entrypoint": "0x08008600",
            "current_name": "extract_data_08008600",
            "code": "\nundefined4 extractData_08008600(int input_data,undefined *output_data,undefined4 value1,undefined4 value2)\n\n{\n  int result;\n  \n  if (input_data == 0) {\n    return 0xffffffff;\n  }\n  result = FUN_080085b8();\n  if (result == 0) {\n    *output_data = *(undefined *)(input_data + 0x45);\n    FUN_080068d6((&DAT_200006c0)[*(byte *)(input_data + 0x44)],input_data + 0x45,1,&DAT_200006c0,value2);\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008600": "extract_data_08008600",
                "param_1": "input_data",
                "param_2": "output_data",
                "param_3": "value1",
                "param_4": "value2",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08008b66"
            ],
            "called": [
                "FUN_080085b8",
                "FUN_080068d6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800863c": {
            "entrypoint": "0x0800863c",
            "current_name": "update_data_0800863c",
            "code": "\nvoid updateData_0800863c(int dataPointer,undefined4 newValue,undefined4 unused,undefined4 additionalParam)\n\n{\n  int result;\n  uint index;\n  \n  if (dataPointer != 0) {\n    result = FUN_080085b8();\n    if (result == 0) {\n      index = (uint)*(byte *)(dataPointer + 0x44);\n      *(undefined4 *)(&DAT_20000670 + index * 4) = newValue;\n      *(int *)(&DAT_20000684 + index * 4) = dataPointer;\n      FUN_08003f30((int)*(char *)(dataPointer + 0x5a),0,1,index,additionalParam);\n      FUN_08003f94((int)*(char *)(dataPointer + 0x5a));\n      FUN_080068d6((&DAT_200006c0)[*(byte *)(dataPointer + 0x44)],dataPointer + 0x45,1);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800863c": "update_data_0800863c",
                "param_1": "dataPointer",
                "param_2": "newValue",
                "param_3": "unused",
                "param_4": "additionalParam",
                "iVar1": "result",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08008c44"
            ],
            "called": [
                "FUN_080085b8",
                "FUN_08003f30",
                "FUN_08003f94",
                "FUN_080068d6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008694": {
            "entrypoint": "0x08008694",
            "current_name": "update_data_08008694",
            "code": "\nvoid updateData_08008694(int data,undefined4 value)\n\n{\n  byte byteValue;\n  \n  if (data != 0) {\n    byteValue = *(byte *)(data + 0x44);\n    *(undefined4 *)(&DAT_20000698 + (uint)byteValue * 4) = value;\n    *(int *)(&DAT_200006ac + (uint)byteValue * 4) = data;\n    FUN_08003f30((int)*(char *)(data + 0x5a),0,2);\n    FUN_08003f94((int)*(char *)(data + 0x5a));\n    FUN_0800688e((&DAT_200006c0)[*(byte *)(data + 0x44)],\n                 *(int *)(data + 100) + (uint)*(ushort *)(data + 0x6a),1);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008694": "update_data_08008694",
                "param_1": "data",
                "param_2": "value",
                "bVar1": "byteValue"
            },
            "calling": [],
            "called": [
                "FUN_08003f30",
                "FUN_08003f94",
                "FUN_0800688e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080086e8": {
            "entrypoint": "0x080086e8",
            "current_name": "find_value_index_080086e8",
            "code": "\nuint find_value_index_080086e8(int value)\n\n{\n  uint index;\n  \n  if (value == 0) {\n    index = 5;\n  }\n  else {\n    index = 0;\n    while( true ) {\n      if (4 < index) {\n        return index;\n      }\n      if (value == (&DAT_200006c0)[index]) break;\n      index = index + 1 & 0xff;\n    }\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_080086e8": "find_value_index_080086e8",
                "param_1": "value",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08008730",
                "FUN_0800870c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800870c": {
            "entrypoint": "0x0800870c",
            "current_name": "execute_command_0800870c",
            "code": "\nvoid executeCommand_0800870c(void)\n\n{\n  uint commandIndex;\n  \n  commandIndex = FUN_080086e8();\n  if (commandIndex < 5) {\n    (**(code **)(&DAT_20000670 + commandIndex * 4))(*(undefined4 *)(&DAT_20000684 + commandIndex * 4));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800870c": "execute_command_0800870c",
                "uVar1": "commandIndex"
            },
            "calling": [
                "FUN_0800694c"
            ],
            "called": [
                "FUN_080086e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008730": {
            "entrypoint": "0x08008730",
            "current_name": "FUNC_08008730",
            "code": "\nvoid FUNC_08008730(void)\n\n{\n  uint uVar1;\n  int iVar2;\n  int iVar3;\n  \n  uVar1 = FUN_080086e8();\n  iVar3 = *(int *)(&DAT_200006ac + uVar1 * 4);\n  if ((uVar1 < 5) && (iVar2 = (**(code **)(&DAT_20000698 + uVar1 * 4))(iVar3), iVar2 != -1)) {\n    FUN_0800688e((&DAT_200006c0)[*(byte *)(iVar3 + 0x44)],\n                 *(int *)(iVar3 + 100) + (uint)*(ushort *)(iVar3 + 0x6a),1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008730": "FUNC_08008730"
            },
            "calling": [
                "FUN_08006932"
            ],
            "called": [
                "FUN_080086e8",
                "FUN_0800688e"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800877c": {
            "entrypoint": "0x0800877c",
            "current_name": "FUNC_0800877c",
            "code": "\nvoid FUNC_0800877c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800877c": "FUNC_0800877c"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008804": {
            "entrypoint": "0x08008804",
            "current_name": "allocate_memory_08008804",
            "code": "\nundefined * allocateMemory_08008804(int size)\n\n{\n  undefined *startAddress;\n  \n  if (DAT_200006d4 == (undefined *)0x0) {\n    DAT_200006d4 = &DAT_20000a3c;\n  }\n  startAddress = DAT_200006d4;\n  if (DAT_200006d4 + size <= stackBottom) {\n    DAT_200006d4 = DAT_200006d4 + size;\n    return startAddress;\n  }\n  DAT_20000a38 = 0xc;\n  return (undefined *)0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008804": "allocate_memory_08008804",
                "param_1": "size",
                "puVar1": "startAddress",
                "&stack0x00000000": "stackBottom"
            },
            "calling": [
                "FUN_08009918"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008840": {
            "entrypoint": "0x08008840",
            "current_name": "get_default_value_08008840",
            "code": "\nundefined4 get_default_value_08008840(void)\n\n{\n  result 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008840": "get_default_value_08008840",
                "return": "result"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008846": {
            "entrypoint": "0x08008846",
            "current_name": "set_memory_protection_08008846",
            "code": "\nundefined4 setMemoryProtection_08008846(undefined4 param1,int memoryAddress)\n\n{\n  *(undefined4 *)(memoryAddress + 4) = 0x2000;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008846": "set_memory_protection_08008846",
                "param_1": "param1",
                "param_2": "memoryAddress"
            },
            "calling": [
                "FUN_0800a0ec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008850": {
            "entrypoint": "0x08008850",
            "current_name": "initialize_result_08008850",
            "code": "\nundefined4 initializeResult_08008850(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08008850": "initialize_result_08008850"
            },
            "calling": [
                "FUN_0800a110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008854": {
            "entrypoint": "0x08008854",
            "current_name": "initialize_app_08008854",
            "code": "\nundefined4 initializeApp_08008854(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008854": "initialize_app_08008854"
            },
            "calling": [
                "FUN_0800a130"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008858": {
            "entrypoint": "0x08008858",
            "current_name": "initialize_data_08008858",
            "code": "\nvoid initializeData_08008858(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008858": "initialize_data_08008858",
                "undefined4": "void"
            },
            "calling": [
                "FUN_0800a168"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800885c": {
            "entrypoint": "0x0800885c",
            "current_name": "initialize_function_0800885c",
            "code": "\nvoid initializeFunction_0800885c(undefined4 param1,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  FUN_08008500(param2,param3,param3,param4,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800885c": "initialize_function_0800885c",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_0800a042"
            ],
            "called": [
                "FUN_08008500"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008868": {
            "entrypoint": "0x08008868",
            "current_name": "infinite_loop_08008868",
            "code": "\nvoid infiniteLoop_08008868(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08008868": "infinite_loop_08008868"
            },
            "calling": [
                "FUN_08008868",
                "FUN_08009b5c"
            ],
            "called": [
                "FUN_08008868"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800886c": {
            "entrypoint": "0x0800886c",
            "current_name": "initialize_data_0800886c",
            "code": "\nundefined4 initializeData_0800886c(void)\n\n{\n  DAT_20000a38 = 0x16;\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800886c": "initialize_data_0800886c"
            },
            "calling": [
                "FUN_08009fe8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800887c": {
            "entrypoint": "0x0800887c",
            "current_name": "check_validity_0800887c",
            "code": "\nundefined4 checkValidity_0800887c(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800887c": "check_validity_0800887c"
            },
            "calling": [
                "thunk_FUN_0800887c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008880": {
            "entrypoint": "0x08008880",
            "current_name": "get_shifted_value_08008880",
            "code": "\nuint getShiftedValue_08008880(uint inputValue)\n\n{\n  bool isInRange;\n  char resultChar;\n  uint shiftedValue;\n  \n  if (inputValue < 0xe) {\n    if (inputValue + 0x2e < 0x3c) {\n      isInRange = true;\n    }\n    else {\n      isInRange = false;\n    }\n  }\n  else {\n    isInRange = inputValue < 0x3c;\n  }\n  if (isInRange) {\n    if (inputValue < 0xe) {\n      inputValue = inputValue + 0x2e;\n    }\n    resultChar = (&DAT_0800a908)[inputValue];\n  }\n  else {\n    resultChar = -1;\n  }\n  if (resultChar == -1) {\n    shiftedValue = 0;\n  }\n  else {\n    shiftedValue = FUN_08006d80();\n    if (DAT_20000088 != 0xc) {\n      if (DAT_20000088 < 0xc) {\n        return shiftedValue >> (0xc - DAT_20000088 & 0xff);\n      }\n      return shiftedValue << (DAT_20000088 - 0xc & 0xff);\n    }\n  }\n  return shiftedValue;\n}\n\n",
            "renaming": {
                "FUN_08008880": "get_shifted_value_08008880",
                "param_1": "inputValue",
                "bVar1": "isInRange",
                "cVar2": "resultChar",
                "uVar3": "shiftedValue"
            },
            "calling": [
                "FUN_080022f8",
                "FUN_08000488"
            ],
            "called": [
                "FUN_08006d80"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080088e0": {
            "entrypoint": "0x080088e0",
            "current_name": "process_data_080088e0",
            "code": "\nvoid processData_080088e0(uint dataIndex,uint param)\n\n{\n  int result;\n  int charValue;\n  \n  if (dataIndex < 0x3c) {\n    charValue = (int)(char)(&DAT_0800a908)[dataIndex];\n  }\n  else {\n    charValue = -1;\n  }\n  if (charValue != -1) {\n    result = FUN_0800738a(charValue,&DAT_0800a6cc);\n    if (result == 0) {\n      FUN_08008990(dataIndex,1);\n      if (DAT_2000008c != 8) {\n        if (DAT_2000008c < 9) {\n          param = param << (8 - DAT_2000008c & 0xff);\n        }\n        else {\n          param = param >> (DAT_2000008c - 8 & 0xff);\n        }\n      }\n      if (param < 0x80) {\n        FUN_08008a24(dataIndex,0);\n      }\n      else {\n        FUN_08008a24(dataIndex,1);\n      }\n    }\n    else {\n      result = FUN_08006b28(charValue,&DAT_200006d8);\n      if (result == 0) {\n        FUN_08006b3e(charValue,&DAT_200006d8);\n      }\n      if (DAT_2000008c != 8) {\n        if (DAT_2000008c < 9) {\n          param = param << (8 - DAT_2000008c & 0xff);\n        }\n        else {\n          param = param >> (DAT_2000008c - 8 & 0xff);\n        }\n      }\n      FUN_08007118(charValue,0x3e418,0xff,param,result == 0);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080088e0": "process_data_080088e0",
                "param_1": "dataIndex",
                "param_2": "param",
                "iVar1": "result",
                "iVar2": "charValue"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08008990",
                "FUN_08008a24",
                "FUN_08007118",
                "FUN_0800738a",
                "FUN_08006b3e",
                "FUN_08006b28"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008990": {
            "entrypoint": "0x08008990",
            "current_name": "process_data_08008990",
            "code": "\nvoid processData_08008990(uint inputIndex,undefined4 mode,undefined4 param3,undefined1 *inputData)\n\n{\n  int result;\n  undefined1 *ptrData;\n  int index;\n  \n  if (inputIndex < 0x3c) {\n    index = (int)(char)(&DAT_0800a908)[inputIndex];\n    ptrData = &DAT_0800a908;\n  }\n  else {\n    index = -1;\n    ptrData = inputData;\n  }\n  if (index != -1) {\n    result = FUN_08006b28(index,&DAT_200006d8,param3,ptrData,inputData);\n    if (result != 0) {\n      result = FUN_0800738a(index,&DAT_0800a6cc);\n      if (result != 0) {\n        FUN_080071e4(index);\n      }\n      FUN_08006b5c(index,&DAT_200006d8);\n    }\n    switch(mode) {\n    case 0:\n      FUN_08007258(index,0);\n      break;\n    case 1:\n      FUN_08007258(index,1,0);\n      break;\n    case 2:\n      FUN_08007258(index,0,1);\n      break;\n    case 3:\n      FUN_08007258(index,0,2);\n    }\n    FUN_08006b3e(index,&DAT_200006ec);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008990": "process_data_08008990",
                "param_1": "inputIndex",
                "param_2": "mode",
                "param_3": "param3",
                "param_4": "inputData",
                "iVar1": "result",
                "puVar2": "ptrData",
                "iVar3": "index"
            },
            "calling": [
                "FUN_08003002",
                "FUN_080088e0",
                "FUN_080025ac",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08006b5c",
                "FUN_080071e4",
                "FUN_08007258",
                "FUN_0800738a",
                "FUN_08006b3e",
                "FUN_08006b28"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a24": {
            "entrypoint": "0x08008a24",
            "current_name": "process_data_08008a24",
            "code": "\nvoid processData_08008a24(uint value,undefined4 param2,undefined4 param3,undefined1 *data)\n\n{\n  int result;\n  undefined4 shiftedValue;\n  undefined1 *pointer;\n  uint lookupValue;\n  \n  if (value < 0x3c) {\n    lookupValue = (uint)(char)(&DAT_0800a908)[value];\n    pointer = &DAT_0800a908;\n  }\n  else {\n    lookupValue = 0xffffffff;\n    pointer = data;\n  }\n  if ((lookupValue != 0xffffffff) &&\n     (result = FUN_08006b28(lookupValue,&DAT_200006ec,param3,pointer,data), result != 0)) {\n    shiftedValue = FUN_08006b7c((lookupValue << 0x18) >> 0x1c);\n    FUN_080072d8(shiftedValue,1 << (lookupValue & 0xf) & 0xffff,param2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008a24": "process_data_08008a24",
                "param_1": "value",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "data",
                "iVar1": "result",
                "uVar2": "shiftedValue",
                "puVar3": "pointer",
                "uVar4": "lookupValue"
            },
            "calling": [
                "FUN_08002fca",
                "FUN_080088e0",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08006b7c",
                "FUN_08006b28",
                "FUN_080072d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a6c": {
            "entrypoint": "0x08008a6c",
            "current_name": "check_value_08008a6c",
            "code": "\nchar checkValue_08008a6c(uint value)\n\n{\n  char result;\n  int checkResult;\n  undefined4 shiftedValue;\n  uint lookupIndex;\n  \n  if (value < 0x3c) {\n    lookupIndex = (uint)(char)(&DAT_0800a908)[value];\n  }\n  else {\n    lookupIndex = 0xffffffff;\n  }\n  if (lookupIndex == 0xffffffff) {\n    result = '\\0';\n  }\n  else {\n    checkResult = FUN_08006b28(lookupIndex,&DAT_200006ec);\n    if (checkResult == 0) {\n      result = '\\0';\n    }\n    else {\n      shiftedValue = FUN_08006b7c((lookupIndex << 0x18) >> 0x1c);\n      result = FUN_080072f0(shiftedValue,1 << (lookupIndex & 0xf) & 0xffff);\n    }\n  }\n  if (result != '\\0') {\n    result = '\\x01';\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08008a6c": "check_value_08008a6c",
                "param_1": "value",
                "cVar1": "result",
                "iVar2": "checkResult",
                "uVar3": "shiftedValue",
                "uVar4": "lookupIndex"
            },
            "calling": [
                "FUN_08000ef8"
            ],
            "called": [
                "FUN_08006b7c",
                "FUN_08006b28",
                "FUN_080072f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008abc": {
            "entrypoint": "0x08008abc",
            "current_name": "initialize_system_08008abc",
            "code": "\nvoid initialize_system_08008abc(void)\n\n{\n  FUN_0800723c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008abc": "initialize_system_08008abc"
            },
            "calling": [
                "FUN_080022f8"
            ],
            "called": [
                "FUN_0800723c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008ac4": {
            "entrypoint": "0x08008ac4",
            "current_name": "FUNC_08008ac4",
            "code": "\nvoid FUNC_08008ac4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008ac4": "FUNC_08008ac4"
            },
            "calling": [
                "FUN_08003002",
                "FUN_08002fca"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008afa": {
            "entrypoint": "0x08008afa",
            "current_name": "calculate_checksum_08008afa",
            "code": "\nushort calculateChecksum_08008afa(int memoryAddress)\n\n{\n  return (*(short *)(memoryAddress + 0x134) + 0x40) - *(short *)(memoryAddress + 0x136) bitwiseAnd 0x3f;\n}\n\n",
            "renaming": {
                "FUN_08008afa": "calculate_checksum_08008afa",
                "param_1": "memoryAddress",
                "&": "bitwiseAnd"
            },
            "calling": [
                "FUN_08008bf4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b66": {
            "entrypoint": "0x08008b66",
            "current_name": "update_data_08008b66",
            "code": "\nvoid updateData_08008b66(int data)\n\n{\n  int result;\n  ushort newIndex;\n  undefined newValue;\n  \n  result = FUN_08008600(data,&newValue);\n  if ((result == 0) &&\n     (newIndex = *(short *)(data + 0x60) + 1U & 0x3f, newIndex != *(ushort *)(data + 0x62))) {\n    *(undefined *)(*(int *)(data + 0x5c) + (uint)*(ushort *)(data + 0x60)) = newValue;\n    *(ushort *)(data + 0x60) = newIndex;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008b66": "update_data_08008b66",
                "param_1": "data",
                "iVar1": "result",
                "uVar2": "newIndex",
                "local_9": "newValue"
            },
            "calling": [],
            "called": [
                "FUN_08008600"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008bf4": {
            "entrypoint": "0x08008bf4",
            "current_name": "FUNC_08008bf4",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08008bfa) */\n/* WARNING: Removing unreachable block (ram,0x08008c0c) */\n/* WARNING: Removing unreachable block (ram,0x08008c02) */\n/* WARNING: Removing unreachable block (ram,0x08008c14) */\n\nvoid FUNC_08008bf4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008bf4": "FUNC_08008bf4"
            },
            "calling": [
                "FUN_08008f1c"
            ],
            "called": [
                "FUN_08008afa"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008c20": {
            "entrypoint": "0x08008c20",
            "current_name": "initialize_memory_08008c20",
            "code": "\nvoid initializeMemory_08008c20(int baseAddress)\n\n{\n  *(int *)(baseAddress + 0x130) = baseAddress + 0x11;\n  *(undefined2 *)(baseAddress + 0x134) = 0;\n  *(undefined2 *)(baseAddress + 0x136) = 0;\n  *(int *)(baseAddress + 0x138) = baseAddress + 0x51;\n  *(undefined2 *)(baseAddress + 0x13c) = 0;\n  *(undefined2 *)(baseAddress + 0x13e) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008c20": "initialize_memory_08008c20",
                "param_1": "baseAddress"
            },
            "calling": [
                "FUN_08008d30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008c44": {
            "entrypoint": "0x08008c44",
            "current_name": "initialize_serial_port_08008c44",
            "code": "\nvoid initializeSerialPort_08008c44(int portAddress,undefined4 baudRate,byte serialOptions)\n\n{\n  uint temp;\n  byte serialOptionsMasked;\n  int serialOptionsValue;\n  code *jumpTable;\n  \n  *(undefined4 *)(portAddress + 0x11c) = baudRate;\n  *(byte *)(portAddress + 0x140) = serialOptions;\n  serialOptionsMasked = serialOptions & 7;\n  if (serialOptionsMasked == 4) {\n    serialOptionsValue = 7;\n  }\n  else if (serialOptionsMasked == 6) {\n    serialOptionsValue = 8;\n  }\n  else if (serialOptionsMasked == 2) {\n    serialOptionsValue = 6;\n  }\n  else {\n    serialOptionsValue = 0;\n  }\n  if ((serialOptions & 0x30) == 0x30) {\n    *(undefined4 *)(portAddress + 0x128) = 0x600;\n    serialOptionsValue = serialOptionsValue + 1;\n  }\n  else if ((serialOptions & 0x20) == 0) {\n    *(undefined4 *)(portAddress + 0x128) = 0;\n  }\n  else {\n    *(undefined4 *)(portAddress + 0x128) = 0x400;\n    serialOptionsValue = serialOptionsValue + 1;\n  }\n  if ((serialOptions & 8) == 0) {\n    *(undefined4 *)(portAddress + 0x124) = 0;\n  }\n  else {\n    *(undefined4 *)(portAddress + 0x124) = 0x2000;\n  }\n  if (serialOptionsValue == 8) {\n    *(undefined4 *)(portAddress + 0x120) = 0;\n  }\n  else if (serialOptionsValue == 9) {\n    *(undefined4 *)(portAddress + 0x120) = 0x1000;\n  }\n  else {\n    serialOptionsValue = 0;\n  }\n  if (serialOptionsValue != 0) {\n    FUN_08008078(portAddress + 0xd4);\n    FUN_0800863c(portAddress + 0xd4,0x8008b67);\n    return;\n  }\n  jumpTable = (code *)0x8008cee;\n  FUN_080090cc(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/cores/arduino/HardwareSerial.cpp\"\n               ,299,\"void HardwareSerial::begin(long unsigned int, byte)\",\"databits!=0\");\n  if (temp < 0x3c) {\n    uRam0000012d = (&DAT_0800a908)[temp];\n  }\n  else {\n    uRam0000012d = 0xff;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08008d0c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)(0,temp,&stack0x00000148);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008c44": "initialize_serial_port_08008c44",
                "param_1": "portAddress",
                "param_2": "baudRate",
                "param_3": "serialOptions",
                "extraout_r1": "temp",
                "bVar1": "serialOptionsMasked",
                "iVar2": "serialOptionsValue",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_08003048"
            ],
            "called": [
                "FUN_08008078",
                "FUN_080090cc",
                "FUN_0800863c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008d00": {
            "entrypoint": "0x08008d00",
            "current_name": "set_fixed_value_08008d00",
            "code": "\nvoid setFixedValue_08008d00(int baseAddress,uint index)\n\n{\n  undefined value;\n  code *jumpTable;\n  \n  if (index < 0x3c) {\n    value = (&DAT_0800a908)[index];\n  }\n  else {\n    value = 0xff;\n  }\n  *(undefined *)(baseAddress + 0x12d) = value;\n                    /* WARNING: Could not recover jumptable at 0x08008d0c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008d00": "set_fixed_value_08008d00",
                "param_1": "baseAddress",
                "param_2": "index",
                "uVar1": "value",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_08008d30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008d18": {
            "entrypoint": "0x08008d18",
            "current_name": "set_byte_value_08008d18",
            "code": "\nvoid setByteValue_08008d18(int baseAddress,uint index)\n\n{\n  undefined byteValue;\n  \n  if (index < 0x3c) {\n    byteValue = (&DAT_0800a908)[index];\n  }\n  else {\n    byteValue = 0xff;\n  }\n  *(undefined *)(baseAddress + 300) = byteValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008d18": "set_byte_value_08008d18",
                "param_1": "baseAddress",
                "param_2": "index",
                "uVar1": "byteValue"
            },
            "calling": [
                "FUN_08008d30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008d30": {
            "entrypoint": "0x08008d30",
            "current_name": "initialize_params_08008d30",
            "code": "\nundefined4 *\ninitializeParams_08008d30(undefined4 *paramArray,undefined4 paramVal,undefined4 paramFlag,undefined4 paramData)\n\n{\n  undefined returnValue;\n  \n  paramArray[1] = 0;\n  paramArray[2] = 1000;\n  *paramArray = &PTR_LAB_08008ba4_1_0800aab8;\n  if (paramArray == (undefined4 *)&DAT_20000700) {\n    FUN_08008d00(&DAT_20000700,0,paramFlag,&DAT_20000700,paramData);\n    FUN_08008d18(&DAT_20000700,1);\n  }\n  else {\n    returnValue = FUN_0800734a(paramVal,&DAT_0800a81c);\n    *(undefined *)((int)paramArray + 0x12d) = returnValue;\n    returnValue = FUN_0800734a(paramVal,&DAT_0800a864);\n    *(undefined *)(paramArray + 0x4b) = returnValue;\n  }\n  FUN_08008c20(paramArray);\n  return paramArray;\n}\n\n",
            "renaming": {
                "FUN_08008d30": "initialize_params_08008d30",
                "param_1": "paramArray",
                "param_2": "paramVal",
                "param_3": "paramFlag",
                "param_4": "paramData",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08008d8c"
            ],
            "called": [
                "FUN_08008d18",
                "FUN_08008d00",
                "FUN_08008c20",
                "FUN_0800734a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008d8c": {
            "entrypoint": "0x08008d8c",
            "current_name": "process_param_08008d8c",
            "code": "\nvoid processParam_08008d8c(int flag,int value,undefined4 data1,undefined4 data2)\n\n{\n  if (flag != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    FUN_08008d30(&DAT_20000700,0x40004400,data1,0xffff,data2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008d8c": "process_param_08008d8c",
                "param_1": "flag",
                "param_2": "value",
                "param_3": "data1",
                "param_4": "data2"
            },
            "calling": [],
            "called": [
                "FUN_08008d30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008df8": {
            "entrypoint": "0x08008df8",
            "current_name": "initialize_data_08008df8",
            "code": "\nvoid initializeData_08008df8(undefined4 *dataPointer,undefined value_1,undefined value_2,undefined value_3,\n                 undefined value_4)\n\n{\n  *dataPointer = &DAT_0800ab0c;\n  *(undefined *)(dataPointer + 1) = value_1;\n  *(undefined *)((int)dataPointer + 5) = value_2;\n  *(undefined *)((int)dataPointer + 6) = value_3;\n  *(undefined *)((int)dataPointer + 7) = value_4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008df8": "initialize_data_08008df8",
                "param_1": "dataPointer",
                "param_2": "value_1",
                "param_3": "value_2",
                "param_4": "value_3",
                "param_5": "value_4"
            },
            "calling": [
                "FUN_08008e14"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008e14": {
            "entrypoint": "0x08008e14",
            "current_name": "check_params_08008e14",
            "code": "\nvoid checkParams_08008e14(int value1,int value2)\n\n{\n  if ((value1 == 1) && (value2 == 0xffff)) {\n    FUN_08008df8(&DAT_20000844,0,0,0,0);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008e14": "check_params_08008e14",
                "param_1": "value1",
                "param_2": "value2"
            },
            "calling": [],
            "called": [
                "FUN_08008df8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008ef4": {
            "entrypoint": "0x08008ef4",
            "current_name": "calculate_interpolation_08008ef4",
            "code": "\nint calculate_interpolation_08008ef4(int start_value,int start_range,int end_range,int start_interval,int end_interval)\n\n{\n  return (unsigned_integer)((end_interval - start_interval) * (start_value - start_range)) / (unsigned_integer)(end_range - start_range) + start_interval;\n}\n\n",
            "renaming": {
                "FUN_08008ef4": "calculate_interpolation_08008ef4",
                "param_1": "start_value",
                "param_2": "start_range",
                "param_3": "end_range",
                "param_4": "start_interval",
                "param_5": "end_interval",
                "uint": "unsigned_integer"
            },
            "calling": [
                "FUN_080026b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008f0c": {
            "entrypoint": "0x08008f0c",
            "current_name": "FUNC_08008f0c",
            "code": "\nvoid FUNC_08008f0c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008f0c": "FUNC_08008f0c"
            },
            "calling": [
                "FUN_08008f1c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008f0e": {
            "entrypoint": "0x08008f0e",
            "current_name": "initialize_application_08008f0e",
            "code": "\nvoid initialize_application_08008f0e(void)\n\n{\n  FUNC_08003f0c(3);\n  FUN_080036a2();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008f0e": "initialize_application_08008f0e"
            },
            "calling": [
                "FUN_08009148"
            ],
            "called": [
                "FUN_080036a2",
                "FUN_08003f0c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008f1c": {
            "entrypoint": "0x08008f1c",
            "current_name": "run_infinite_loop_08008f1c",
            "code": "\nvoid run_infinite_loop_08008f1c(void)\n\n{\n  FUNC_08008f0c();\n  FUN_08001b48();\n  do {\n    FUN_080022f8();\n    FUNC_08008bf4();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08008f1c": "run_infinite_loop_08008f1c"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_080022f8",
                "FUN_08008f0c",
                "FUN_08008bf4",
                "FUN_08001b48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008f3c": {
            "entrypoint": "0x08008f3c",
            "current_name": "count_set_bits_08008f3c",
            "code": "\nchar countSetBits_08008f3c(uint number)\n\n{\n  char bitCount;\n  \n  bitCount = '\\0';\n  for (; number != 1; number = number >> 1) {\n    bitCount = bitCount + '\\x01';\n  }\n  return bitCount;\n}\n\n",
            "renaming": {
                "FUN_08008f3c": "count_set_bits_08008f3c",
                "param_1": "number",
                "cVar1": "bitCount"
            },
            "calling": [
                "FUN_08009094"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008f78": {
            "entrypoint": "0x08008f78",
            "current_name": "initialize_data_08008f78",
            "code": "\nvoid initializeData_08008f78(int isFirstParameter,int secondParameter,undefined4 param3,undefined4 param4)\n\n{\n  if (isFirstParameter != 1) {\n    return;\n  }\n  if (secondParameter == 0xffff) {\n    DAT_2000084c = 6;\n    DAT_20000858 = 0;\n    DAT_20000860 = 7;\n    DAT_2000086c = 0;\n    DAT_20000874 = 8;\n    DAT_20000880 = 0;\n    DAT_20000888 = 9;\n    DAT_20000894 = 0;\n    DAT_2000089c = 10;\n    DAT_200008a8 = 0;\n    DAT_200008b0 = 0x17;\n    DAT_200008bc = 0;\n    DAT_200008c4 = 0x17;\n    DAT_200008d0 = 0;\n    DAT_200008d8 = 0x17;\n    DAT_200008e4 = 0;\n    DAT_200008ec = 0x17;\n    DAT_200008f8 = 0;\n    DAT_20000900 = 0x17;\n    DAT_2000090c = 0;\n    DAT_20000914 = 0x28;\n    DAT_20000920 = 0;\n    DAT_20000928 = 0x28;\n    DAT_20000934 = 0;\n    DAT_2000093c = 0x28;\n    DAT_20000948 = 0;\n    DAT_20000950 = 0x28;\n    DAT_2000095c = 0;\n    DAT_20000964 = 0x28;\n    DAT_20000970 = 0;\n    DAT_20000978 = 0x28;\n    DAT_20000984 = 0;\n    FUN_080090c2(0,&LAB_08008f50_1,&DAT_20000000,&DAT_2000084c,param4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008f78": "initialize_data_08008f78",
                "param_1": "isFirstParameter",
                "param_2": "secondParameter",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [],
            "called": [
                "FUN_080090c2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009084": {
            "entrypoint": "0x08009084",
            "current_name": "process_data_08009084",
            "code": "\nvoid processData_08009084(int data)\n\n{\n  int index;\n  \n  if (*(int *)(data + 8) != 0) {\n    (**(code **)(data + 0xc))();\n    return;\n  }\n  FUN_0800a18c();\n  index = FUN_08008f3c();\n  if ((&DAT_20000858)[index * 5] != 0) {\n    processData_08009084();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009084": "process_data_08009084",
                "param_1": "data",
                "iVar1": "index"
            },
            "calling": [
                "FUN_08009094"
            ],
            "called": [
                "FUN_0800a18c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009094": {
            "entrypoint": "0x08009094",
            "current_name": "check_data_and_execute_08009094",
            "code": "\nvoid checkDataAndExecute_08009094(void)\n\n{\n  int index;\n  \n  index = FUN_08008f3c();\n  if ((&DAT_20000858)[index * 5] != 0) {\n    FUN_08009084();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009094": "check_data_and_execute_08009094",
                "iVar1": "index"
            },
            "calling": [
                "FUN_080042f0"
            ],
            "called": [
                "FUN_08008f3c",
                "FUN_08009084"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080090c2": {
            "entrypoint": "0x080090c2",
            "current_name": "initialize_parameters_080090c2",
            "code": "\nvoid initializeParameters_080090c2(undefined4 firstParameter,undefined4 secondParameter)\n\n{\n  FUN_08009108(secondParameter,firstParameter);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080090c2": "initialize_parameters_080090c2",
                "param_1": "firstParameter",
                "param_2": "secondParameter"
            },
            "calling": [
                "FUN_08008f78"
            ],
            "called": [
                "FUN_08009108"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080090cc": {
            "entrypoint": "0x080090cc",
            "current_name": "handle_assertion_080090cc",
            "code": "\nvoid handle_assertion_080090cc(undefined4 file_name,undefined4 line_number,char *error_message,undefined4 function_name)\n\n{\n  undefined4 function_pointer;\n  char *additional_info;\n  undefined8 result;\n  undefined4 additional_info_2;\n  \n  function_pointer = *(undefined4 *)(DAT_20000090 + 0xc);\n  additional_info_2 = function_name;\n  if (error_message == (char *)0x0) goto LAB_080090f0;\n  additional_info = \", function: \";\n  do {\n    FUN_08009124(function_pointer,\"assertion \\\"%s\\\" failed: file \\\"%s\\\", line %d%s%s\\n\",function_name,file_name,line_number\n                 ,additional_info,error_message,additional_info_2);\n    result = FUN_08009b5c();\n    line_number = (undefined4)((ulonglong)result >> 0x20);\n    function_pointer = (undefined4)result;\nLAB_080090f0:\n    error_message = \"\";\n    additional_info = error_message;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080090cc": "handle_assertion_080090cc",
                "param_1": "file_name",
                "param_2": "line_number",
                "param_3": "error_message",
                "param_4": "function_name",
                "uVar1": "function_pointer",
                "pcVar2": "additional_info",
                "uVar3": "result",
                "uVar4": "additional_info_2"
            },
            "calling": [
                "FUN_08008c44"
            ],
            "called": [
                "FUN_08009b5c",
                "FUN_08009124"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009108": {
            "entrypoint": "0x08009108",
            "current_name": "shift_param_to_high_bits_08009108",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08009110) */\n\nlonglong shiftParamToHighBits_08009108(undefined4 param1,uint param2)\n\n{\n  return (ulonglong)param2 << 0x20;\n}\n\n",
            "renaming": {
                "FUN_08009108": "shift_param_to_high_bits_08009108",
                "param_1": "param1",
                "param_2": "param2"
            },
            "calling": [
                "FUN_080090c2"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009124": {
            "entrypoint": "0x08009124",
            "current_name": "copy_and_process_data_08009124",
            "code": "\nvoid copyAndProcessData_08009124(undefined4 inputParam1,undefined4 inputParam2,undefined4 outputParam1,undefined4 outputParam2)\n\n{\n  undefined4 tempParam1;\n  undefined4 tempParam2;\n  \n  tempParam1 = outputParam1;\n  tempParam2 = outputParam2;\n  FUN_0800937c(DAT_20000090,inputParam1,inputParam2,&tempParam1,inputParam1,&tempParam1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009124": "copy_and_process_data_08009124",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "param_3": "outputParam1",
                "param_4": "outputParam2",
                "uStack_8": "tempParam1",
                "uStack_4": "tempParam2"
            },
            "calling": [
                "FUN_080090cc"
            ],
            "called": [
                "FUN_0800937c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009148": {
            "entrypoint": "0x08009148",
            "current_name": "execute_functions_08009148",
            "code": "\nvoid executeFunctions_08009148(void)\n\n{\n  int index;\n  \n  for (index = 0; index != 0; index = index + 1) {\n    (*(code *)(&DAT_0800abe4)[index])();\n  }\n  FUNC_0800a424();\n  for (index = 0; index != 0xc; index = index + 1) {\n    (*(code *)(&DAT_0800abe4)[index])();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009148": "execute_functions_08009148",
                "iVar1": "index"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_0800a424",
                "FUN_08008f0e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009190": {
            "entrypoint": "0x08009190",
            "current_name": "initialize_data_08009190",
            "code": "\nvoid initializeData_08009190(undefined4 dataPointer)\n\n{\n  FUN_08009270(DAT_20000090,dataPointer);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009190": "initialize_data_08009190",
                "param_1": "dataPointer"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [
                "FUN_08009270"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091a0": {
            "entrypoint": "0x080091a0",
            "current_name": "initialize_resources_080091a0",
            "code": "\nvoid initializeResources_080091a0(undefined4 resource)\n\n{\n  FUN_080091d8(DAT_20000090,resource);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091a0": "initialize_resources_080091a0",
                "param_1": "resource"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [
                "FUN_080091d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091b0": {
            "entrypoint": "0x080091b0",
            "current_name": "copy_from_param_to_memory_080091b0",
            "code": "\nvoid copyFromParamToMemory_080091b0(int targetMemoryOffset,undefined *sourceData,int dataLength)\n\n{\n  undefined *endPointer;\n  undefined *targetPointer;\n  \n  targetPointer = (undefined *)(targetMemoryOffset + -1);\n  endPointer = sourceData + dataLength;\n  for (; sourceData != endPointer; sourceData = sourceData + 1) {\n    targetPointer = targetPointer + 1;\n    *targetPointer = *sourceData;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091b0": "copy_from_param_to_memory_080091b0",
                "param_1": "targetMemoryOffset",
                "param_2": "sourceData",
                "param_3": "dataLength",
                "puVar1": "endPointer",
                "puVar2": "targetPointer"
            },
            "calling": [
                "FUN_080027f0",
                "FUN_08009908"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091c6": {
            "entrypoint": "0x080091c6",
            "current_name": "fill_memory_080091c6",
            "code": "\nvoid fill_memory_080091c6(undefined *memory,undefined value,int size)\n\n{\n  undefined *end_address;\n  \n  end_address = memory + size;\n  for (; memory != end_address; memory = memory + 1) {\n    *memory = value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091c6": "fill_memory_080091c6",
                "param_1": "memory",
                "param_2": "value",
                "param_3": "size",
                "puVar1": "end_address"
            },
            "calling": [
                "FUN_08002a58",
                "FUN_08009cdc",
                "FUN_08002968",
                "FUN_08007118",
                "FUN_08009db0",
                "FUN_08009d24",
                "FUN_08006d80"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091d8": {
            "entrypoint": "0x080091d8",
            "current_name": "update_data_structure_080091d8",
            "code": "\nvoid updateDataStructure_080091d8(undefined4 *result,int length,undefined4 value1,undefined4 value2)\n\n{\n  int **temp1;\n  int **temp2;\n  int **temp3;\n  int *temp4;\n  int **temp5;\n  int **temp6;\n  \n  if (length == 0) {\n    return;\n  }\n  temp6 = (int **)(length + -4);\n  if (*(int *)(length + -4) < 0) {\n    temp6 = (int **)((int)temp6 + *(int *)(length + -4));\n  }\n  FUNC_08009f48();\n  temp3 = (int **)&DAT_2000098c;\n  if (DAT_2000098c == (int **)0x0) {\n    temp6[1] = (int *)0x0;\n    temp2 = temp1;\n    DAT_2000098c = temp6;\n  }\n  else {\n    temp3 = DAT_2000098c;\n    if (temp6 < DAT_2000098c) {\n      temp2 = (int **)*temp6;\n      temp3 = (int **)((int)temp6 + (int)temp2);\n      if (DAT_2000098c == temp3) {\n        temp4 = *DAT_2000098c;\n        DAT_2000098c = (int **)DAT_2000098c[1];\n        temp3 = (int **)((int)temp4 + (int)temp2);\n        *temp6 = (int *)temp3;\n      }\n      temp6[1] = (int *)DAT_2000098c;\n      DAT_2000098c = temp6;\n    }\n    else {\n      do {\n        temp5 = temp3;\n        temp3 = (int **)temp5[1];\n        if (temp3 == (int **)0x0) break;\n      } while (temp3 <= temp6);\n      temp2 = (int **)*temp5;\n      if ((int **)((int)temp5 + (int)temp2) == temp6) {\n        temp2 = (int **)((int)temp2 + (int)*temp6);\n        *temp5 = (int *)temp2;\n        if (temp3 == (int **)((int)temp5 + (int)temp2)) {\n          temp4 = *temp3;\n          temp3 = (int **)temp3[1];\n          temp2 = (int **)((int)temp2 + (int)temp4);\n          *temp5 = (int *)temp2;\n          temp5[1] = (int *)temp3;\n        }\n      }\n      else if (temp6 < (int **)((int)temp5 + (int)temp2)) {\n        *result = 0xc;\n      }\n      else {\n        temp2 = (int **)((int)temp6 + (int)*temp6);\n        if (temp3 == temp2) {\n          temp4 = *temp3;\n          temp3 = (int **)temp3[1];\n          temp2 = (int **)((int)temp4 + (int)*temp6);\n          *temp6 = (int *)temp2;\n        }\n        temp6[1] = (int *)temp3;\n        temp5[1] = (int *)temp6;\n      }\n    }\n  }\n  FUNC_08009f4a(result,temp2,temp3,value2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091d8": "update_data_structure_080091d8",
                "param_1": "result",
                "param_2": "length",
                "param_3": "value1",
                "param_4": "value2",
                "extraout_r1": "temp1",
                "ppiVar1": "temp2",
                "ppiVar2": "temp3",
                "piVar3": "temp4",
                "ppiVar4": "temp5",
                "ppiVar5": "temp6"
            },
            "calling": [
                "FUN_08009b5c",
                "FUN_08009908",
                "FUN_080091a0",
                "FUN_08009a80"
            ],
            "called": [
                "FUN_08009f4a",
                "FUN_08009f48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009270": {
            "entrypoint": "0x08009270",
            "current_name": "allocate_memory_08009270",
            "code": "\nuint allocate_memory_08009270(undefined4 *buffer,uint size)\n\n{\n  uint *current_block;\n  int offset;\n  uint *previous_block;\n  uint block_diff;\n  uint *block_ptr;\n  uint allocated_size;\n  \n  allocated_size = (size + 3 & 0xfffffffc) + 8;\n  if (allocated_size < 0xc) {\n    allocated_size = 0xc;\n  }\n  if (((int)allocated_size < 0) || (allocated_size < size)) {\n    *buffer = 0xc;\n  }\n  else {\n    FUNC_08009f48();\n    current_block = DAT_2000098c;\n    block_ptr = DAT_2000098c;\n    while (previous_block = current_block, previous_block != (uint *)0x0) {\n      block_diff = *previous_block - allocated_size;\n      if (-1 < (int)block_diff) {\n        if (block_diff < 0xc) {\n          if (block_ptr == previous_block) {\n            current_block = (uint *)block_ptr[1];\n            DAT_2000098c = current_block;\n          }\n          else {\n            current_block = (uint *)previous_block[1];\n          }\n          if (block_ptr != previous_block) {\n            block_ptr[1] = (uint)current_block;\n            block_ptr = previous_block;\n          }\n        }\n        else {\n          *previous_block = block_diff;\n          *(uint *)((int)previous_block + block_diff) = allocated_size;\n          block_ptr = (uint *)((int)previous_block + block_diff);\n        }\n        goto LAB_080092d4;\n      }\n      block_ptr = previous_block;\n      current_block = (uint *)previous_block[1];\n    }\n    if (DAT_20000990 == 0) {\n      DAT_20000990 = FUN_08009918(buffer);\n    }\n    current_block = (uint *)FUN_08009918(buffer,allocated_size);\n    if ((current_block != (uint *)0xffffffff) &&\n       ((block_ptr = (uint *)((int)current_block + 3U & 0xfffffffc), current_block == block_ptr ||\n        (offset = FUN_08009918(buffer,(int)block_ptr - (int)current_block), offset != -1)))) {\n      *block_ptr = allocated_size;\nLAB_080092d4:\n      FUNC_08009f4a(buffer);\n      allocated_size = (int)block_ptr + 0xbU & 0xfffffff8;\n      offset = allocated_size - (int)(block_ptr + 1);\n      if (offset != 0) {\n        *(int *)((int)block_ptr + offset) = -offset;\n        return allocated_size;\n      }\n      return allocated_size;\n    }\n    *buffer = 0xc;\n    FUNC_08009f4a(buffer);\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08009270": "allocate_memory_08009270",
                "param_1": "buffer",
                "param_2": "size",
                "puVar1": "current_block",
                "iVar2": "offset",
                "puVar3": "previous_block",
                "uVar4": "block_diff",
                "puVar5": "block_ptr",
                "uVar6": "allocated_size"
            },
            "calling": [
                "FUN_08009908",
                "FUN_08009eac",
                "FUN_08009190",
                "FUN_08009d24"
            ],
            "called": [
                "FUN_08009f4a",
                "FUN_08009f48",
                "FUN_08009918"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800932c": {
            "entrypoint": "0x0800932c",
            "current_name": "process_input_0800932c",
            "code": "\nuint processInput_0800932c(int inputData,byte byteToProcess,byte **dataPointersArray)\n\n{\n  int tempVar1;\n  byte *tempVar2;\n  byte *tempVar3;\n  uint returnVal;\n  \n  tempVar2 = dataPointersArray[2] + -1;\n  dataPointersArray[2] = tempVar2;\n  if ((-1 < (int)tempVar2) ||\n     (((int)dataPointersArray[6] <= (int)tempVar2 && (tempVar2 = (byte *)(uint)byteToProcess, tempVar2 != (byte *)0xa))))\n  {\n    tempVar2 = *dataPointersArray;\n    *dataPointersArray = tempVar2 + 1;\n    *tempVar2 = byteToProcess;\n    return (uint)byteToProcess;\n  }\n  if ((inputData != 0) && (*(int *)(inputData + 0x18) == 0)) {\n    FUN_08009d50();\n  }\n  if (dataPointersArray == (byte **)&DAT_0800aba4) {\n    dataPointersArray = *(byte ***)(inputData + 4);\n  }\n  else if (dataPointersArray == (byte **)&DAT_0800abc4) {\n    dataPointersArray = *(byte ***)(inputData + 8);\n  }\n  else if (dataPointersArray == (byte **)&DAT_0800ab84) {\n    dataPointersArray = *(byte ***)(inputData + 0xc);\n  }\n  dataPointersArray[2] = dataPointersArray[6];\n  tempVar3 = (byte *)(uint)*(ushort *)(dataPointersArray + 3);\n  tempVar1 = (int)tempVar3 << 0x1c;\n  if (((tempVar1 < 0) && (tempVar3 = dataPointersArray[4], tempVar3 != (byte *)0x0)) ||\n     (tempVar1 = FUN_08009a80(inputData,dataPointersArray,tempVar1,tempVar3,tempVar2), tempVar1 == 0)) {\n    returnVal = (uint)byteToProcess;\n    tempVar1 = (int)*dataPointersArray - (int)dataPointersArray[4];\n    if ((tempVar1 < (int)dataPointersArray[5]) || (tempVar1 = FUN_08009c7c(inputData,dataPointersArray), tempVar1 == 0)) {\n      dataPointersArray[2] = dataPointersArray[2] + -1;\n      tempVar2 = *dataPointersArray;\n      *dataPointersArray = tempVar2 + 1;\n      *tempVar2 = byteToProcess;\n      if ((byte *)(tempVar1 + 1) != dataPointersArray[5]) {\n        if (-1 < (int)((uint)*(ushort *)(dataPointersArray + 3) << 0x1f)) {\n          return returnVal;\n        }\n        if (returnVal != 10) {\n          return returnVal;\n        }\n      }\n      tempVar1 = FUN_08009c7c(inputData,dataPointersArray);\n      if (tempVar1 == 0) {\n        return returnVal;\n      }\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800932c": "process_input_0800932c",
                "param_1": "inputData",
                "param_2": "byteToProcess",
                "param_3": "dataPointersArray",
                "iVar1": "tempVar1",
                "pbVar2": "tempVar2",
                "pbVar3": "tempVar3",
                "uVar4": "returnVal"
            },
            "calling": [
                "FUN_08009358"
            ],
            "called": [
                "FUN_08009c7c",
                "FUN_08009a80",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009358": {
            "entrypoint": "0x08009358",
            "current_name": "iterate_through_data_08009358",
            "code": "\nint iterateThroughData_08009358(undefined4 param1,undefined4 param2,undefined *dataPointer,int dataLength)\n\n{\n  int iterationResult;\n  undefined *endPointer;\n  int currentLength;\n  \n  endPointer = dataPointer + dataLength;\n  currentLength = dataLength;\n  do {\n    if (dataPointer == endPointer) {\n      return 0;\n    }\n    iterationResult = FUN_0800932c(param1,*dataPointer,param2,dataLength,currentLength);\n    dataLength = iterationResult + 1;\n    dataPointer = dataPointer + 1;\n  } while (dataLength != 0);\n  return iterationResult;\n}\n\n",
            "renaming": {
                "FUN_08009358": "iterate_through_data_08009358",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "dataPointer",
                "param_4": "dataLength",
                "iVar1": "iterationResult",
                "puVar2": "endPointer",
                "iVar3": "currentLength"
            },
            "calling": [
                "FUN_0800937c"
            ],
            "called": [
                "FUN_0800932c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800937c": {
            "entrypoint": "0x0800937c",
            "current_name": "parse_and_process_format_string_0800937c",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08009550) */\n\nint parseAndProcessFormatString_0800937c(int arg1,undefined4 *arg2,byte *formatString,int *arg4)\n\n{\n  int returnValue;\n  int *ptrArg4;\n  bool foundNumericValue;\n  byte *currentChar;\n  byte *nextChar;\n  int unaff_r9;\n  int tempVar;\n  int *ptrArg4;\n  uint flags;\n  int precision;\n  undefined4 local_80;\n  int width;\n  int totalWritten;\n  byte specifier;\n  undefined leftJustify;\n  undefined showSign;\n  undefined spaceBeforePositive;\n  undefined4 printSign;\n  \n  ptrArg4 = arg4;\n  if ((arg1 != 0) && (*(int *)(arg1 + 0x18) == 0)) {\n    FUN_08009d50();\n  }\n  if (arg2 == &DAT_0800aba4) {\n    arg2 = *(undefined4 **)(arg1 + 4);\n  }\n  else if (arg2 == (undefined4 *)&DAT_0800abc4) {\n    arg2 = *(undefined4 **)(arg1 + 8);\n  }\n  else if (arg2 == (undefined4 *)&DAT_0800ab84) {\n    arg2 = *(undefined4 **)(arg1 + 0xc);\n  }\n  if (((-1 < (int)((uint)*(ushort *)(arg2 + 3) << 0x1c)) || (arg2[4] == 0)) &&\n     (tempVar = FUN_08009a80(arg1,arg2), tempVar != 0)) {\n    return -1;\n  }\n  totalWritten = 0;\n  leftJustify = 0x20;\n  showSign = 0x30;\n  currentChar = formatString;\nLAB_080093be:\n  nextChar = currentChar;\n  if (*nextChar != 0) goto LAB_08009474;\n  goto LAB_080093c8;\nLAB_08009474:\n  currentChar = nextChar + 1;\n  if (*nextChar != 0x25) goto LAB_080093be;\nLAB_080093c8:\n  tempVar = (int)nextChar - (int)formatString;\n  if (tempVar != 0) {\n    returnValue = FUN_08009358(arg1,arg2,formatString,tempVar);\n    if (returnValue == -1) {\nLAB_08009568:\n      if ((int)((uint)*(ushort *)(arg2 + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return totalWritten;\n    }\n    totalWritten = totalWritten + tempVar;\n  }\n  if (*nextChar == 0) goto LAB_08009568;\n  flags = 0;\n  width = 0;\n  precision = -1;\n  local_80 = 0;\n  spaceBeforePositive = 0;\n  printSign = 0;\n  currentChar = nextChar + 1;\n  while( true ) {\n    tempVar = FUN_08009f2c(\"#-0+ \",*currentChar);\n    formatString = currentChar + 1;\n    if (tempVar == 0) break;\n    flags = 1 << (tempVar + 0xf7ff54b0U & 0xff) | flags;\n    currentChar = formatString;\n  }\n  if ((int)(flags << 0x1b) < 0) {\n    spaceBeforePositive = 0x20;\n  }\n  if ((int)(flags << 0x1c) < 0) {\n    spaceBeforePositive = 0x2b;\n  }\n  if (*currentChar == 0x2a) {\n    ptrArg4 = ptrArg4 + 1;\n    tempVar = *ptrArg4;\n    ptrArg4 = ptrArg4;\n    if (tempVar < 0) {\n      width = -tempVar;\n      flags = flags | 2;\n      goto LAB_080094a6;\n    }\n  }\n  else {\n    foundNumericValue = false;\n    tempVar = width;\n    formatString = currentChar;\n    while( true ) {\n      if (9 < *formatString - 0x30) break;\n      tempVar = tempVar * 10 + (*formatString - 0x30);\n      foundNumericValue = true;\n      formatString = formatString + 1;\n    }\n    if (!foundNumericValue) goto LAB_080094a6;\n  }\n  width = tempVar;\nLAB_080094a6:\n  if (*formatString == 0x2e) {\n    if (formatString[1] == 0x2a) {\n      formatString = formatString + 2;\n      ptrArg4 = ptrArg4 + 1;\n      precision = *ptrArg4;\n      ptrArg4 = ptrArg4;\n      if (precision < 0) {\n        precision = -1;\n      }\n    }\n    else {\n      foundNumericValue = false;\n      tempVar = 0;\n      precision = 0;\n      while( true ) {\n        formatString = formatString + 1;\n        if (9 < *formatString - 0x30) break;\n        tempVar = tempVar * 10 + (*formatString - 0x30);\n        foundNumericValue = true;\n      }\n      if (foundNumericValue) {\n        precision = tempVar;\n      }\n    }\n  }\n  tempVar = FUN_08009f2c(&DAT_0800ab56,*formatString,3);\n  if (tempVar != 0) {\n    formatString = formatString + 1;\n    flags = flags | 0x40 << (tempVar + 0xf7ff54aaU & 0xff);\n  }\n  specifier = *formatString;\n  formatString = formatString + 1;\n  tempVar = FUN_08009f2c(\"efgEFG\",specifier,6);\n  if (tempVar == 0) {\n    unaff_r9 = FUN_08009698(arg1,&flags,arg2,0x8009359,&ptrArg4);\n    if (unaff_r9 == -1) goto LAB_08009568;\n  }\n  else {\n    ptrArg4 = (int *)(((int)ptrArg4 + 7U & 0xfffffff8) + 8);\n  }\n  totalWritten = totalWritten + unaff_r9;\n  currentChar = formatString;\n  goto LAB_080093be;\n}\n\n",
            "renaming": {
                "FUN_0800937c": "parse_and_process_format_string_0800937c",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "formatString",
                "param_4": "arg4",
                "iVar1": "returnValue",
                "piVar2": "ptrArg4",
                "bVar3": "foundNumericValue",
                "pbVar4": "currentChar",
                "pbVar5": "nextChar",
                "iVar6": "tempVar",
                "local_8c": "ptrArg4",
                "local_88": "flags",
                "local_84": "precision",
                "local_7c": "width",
                "local_74": "totalWritten",
                "local_70": "specifier",
                "local_6f": "leftJustify",
                "local_6e": "showSign",
                "local_45": "spaceBeforePositive",
                "local_30": "printSign"
            },
            "calling": [
                "FUN_080098d8",
                "FUN_08009124"
            ],
            "called": [
                "FUN_08009f2c",
                "FUN_08009358",
                "FUN_08009698",
                "FUN_08009a80",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080095a8": {
            "entrypoint": "0x080095a8",
            "current_name": "extract_data_080095a8",
            "code": "\nundefined4\nextractData_080095a8(undefined4 input_value,uint *data_array,uint *output_value,undefined4 temp_value,code *callback_function)\n\n{\n  int counter1;\n  int callback_result;\n  uint max_value;\n  uint temp_value2;\n  bool is_condition_met;\n  \n  max_value = data_array[4];\n  if ((int)data_array[4] < (int)data_array[2]) {\n    max_value = data_array[2];\n  }\n  *output_value = max_value;\n  if (*(char *)((int)data_array + 0x43) != '\\0') {\n    *output_value = max_value + 1;\n  }\n  if ((int)(*data_array << 0x1a) < 0) {\n    *output_value = *output_value + 2;\n  }\n  if ((*data_array & 6) == 0) {\n    for (counter1 = 0; counter1 < (int)(data_array[3] - *output_value); counter1 = counter1 + 1) {\n      callback_result = (*callback_function)(input_value,temp_value,(int)data_array + 0x19,1);\n      if (callback_result == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  max_value = (uint)*(byte *)((int)data_array + 0x43);\n  if (max_value != 0) {\n    max_value = 1;\n  }\n  temp_value2 = max_value;\n  if ((int)(*data_array << 0x1a) < 0) {\n    *(undefined *)((int)data_array + max_value + 0x43) = 0x30;\n    temp_value2 = max_value + 2;\n    *(undefined *)((int)data_array + max_value + 0x44) = *(undefined *)((int)data_array + 0x45);\n  }\n  counter1 = (*callback_function)(input_value,temp_value,(int)data_array + 0x43,temp_value2);\n  if (counter1 != -1) {\n    max_value = data_array[3];\n    is_condition_met = (*data_array & 6) != 4;\n    if (is_condition_met) {\n      max_value = 0;\n    }\n    temp_value2 = 0;\n    if (!is_condition_met) {\n      max_value = max_value - *output_value;\n    }\n    if (!is_condition_met) {\n      max_value = max_value & ~((int)max_value >> 0x1f);\n    }\n    if ((int)data_array[4] < (int)data_array[2]) {\n      max_value = max_value + (data_array[2] - data_array[4]);\n    }\n    while( true ) {\n      if (max_value == temp_value2) {\n        return 0;\n      }\n      counter1 = (*callback_function)(input_value,temp_value,(int)data_array + 0x1a,1);\n      if (counter1 == -1) break;\n      temp_value2 = temp_value2 + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080095a8": "extract_data_080095a8",
                "param_1": "input_value",
                "param_2": "data_array",
                "param_3": "output_value",
                "param_4": "temp_value",
                "param_5": "callback_function",
                "iVar1": "counter1",
                "iVar2": "callback_result",
                "uVar3": "max_value",
                "uVar4": "temp_value2",
                "bVar5": "is_condition_met"
            },
            "calling": [
                "FUN_08009698"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009698": {
            "entrypoint": "0x08009698",
            "current_name": "convert_number_to_string_08009698",
            "code": "\nuint convertNumberToString_08009698(undefined4 inputVariable1,uint *inputVariable2,undefined4 inputVariable3,code *conversionFunction,uint **outputVariable)\n\n{\n  byte byteValue;\n  int tempVariable1;\n  uint *tempPointer1;\n  int tempVariable2;\n  char *hexCharacters;\n  uint tempVariable3;\n  uint **ppuVar7;\n  char **ppcVar8;\n  uint tempVariable4;\n  uint tempVariable5;\n  char *stringPointer;\n  char *stringEndPointer;\n  uint localArray [2];\n  \n  byteValue = *(byte *)(inputVariable2 + 6);\n  stringEndPointer = (char *)((int)inputVariable2 + 0x43);\n  if (byteValue != 0x6e) {\n    if (byteValue < 0x6f) {\n      if (byteValue != 99) {\n        if (byteValue < 100) {\n          if (byteValue == 0) goto LAB_08009852;\n          if (byteValue != 0x58) goto LAB_080096c8;\n          *(undefined *)((int)inputVariable2 + 0x45) = 0x58;\n          hexCharacters = \"0123456789ABCDEF\";\nLAB_080097e2:\n          tempVariable3 = *inputVariable2;\n          tempPointer1 = *outputVariable;\n          *outputVariable = tempPointer1 + 1;\n          if (((tempVariable3 & 0x80) == 0) && ((int)(tempVariable3 << 0x19) < 0)) {\n            tempVariable4 = (uint)*(ushort *)tempPointer1;\n          }\n          else {\n            tempVariable4 = *tempPointer1;\n          }\n          if ((int)(tempVariable3 << 0x1f) < 0) {\n            *inputVariable2 = tempVariable3 | 0x20;\n          }\n          if (tempVariable4 == 0) {\n            *inputVariable2 = *inputVariable2 & 0xffffffdf;\n          }\n          tempVariable3 = 0x10;\nLAB_08009778:\n          *(undefined *)((int)inputVariable2 + 0x43) = 0;\n        }\n        else {\n          if ((byteValue != 100) && (byteValue != 0x69)) goto LAB_080096c8;\n          tempVariable4 = *inputVariable2;\n          tempPointer1 = *outputVariable;\n          if ((tempVariable4 & 0x80) == 0) {\n            *outputVariable = tempPointer1 + 1;\n            if ((tempVariable4 & 0x40) == 0) goto LAB_080096e8;\n            tempVariable4 = (uint)(short)*(ushort *)tempPointer1;\n          }\n          else {\n            *outputVariable = tempPointer1 + 1;\nLAB_080096e8:\n            tempVariable4 = *tempPointer1;\n          }\n          if ((int)tempVariable4 < 0) {\n            tempVariable4 = -tempVariable4;\n            *(undefined *)((int)inputVariable2 + 0x43) = 0x2d;\n          }\n          hexCharacters = \"0123456789ABCDEF\";\n          tempVariable3 = 10;\n        }\n        tempVariable5 = inputVariable2[1];\n        inputVariable2[2] = tempVariable5;\n        stringPointer = stringEndPointer;\n        if ((int)tempVariable5 < 0) {\n          if (tempVariable4 != 0) goto LAB_08009816;\nLAB_080098c4:\n          *(char *)((int)inputVariable2 + 0x42) = *hexCharacters;\n          stringPointer = (char *)((int)inputVariable2 + 0x42);\n        }\n        else {\n          *inputVariable2 = *inputVariable2 & 0xfffffffb;\n          if (tempVariable4 == 0) {\n            if (tempVariable5 != 0) goto LAB_080098c4;\n          }\n          else {\nLAB_08009816:\n            do {\n              tempVariable5 = tempVariable4 / tempVariable3;\n              stringPointer = stringPointer + -1;\n              *stringPointer = hexCharacters[tempVariable4 - tempVariable3 * tempVariable5];\n              tempVariable4 = tempVariable5;\n            } while (tempVariable5 != 0);\n          }\n        }\n        if (((tempVariable3 == 8) && ((int)(*inputVariable2 << 0x1f) < 0)) && ((int)inputVariable2[1] <= (int)inputVariable2[4]))\n        {\n          stringPointer[-1] = '0';\n          stringPointer = stringPointer + -1;\n        }\n        inputVariable2[4] = (int)stringEndPointer - (int)stringPointer;\n        stringEndPointer = stringPointer;\n        goto LAB_080097be;\n      }\n      tempPointer1 = *outputVariable;\n      *outputVariable = tempPointer1 + 1;\n      *(char *)((int)inputVariable2 + 0x42) = (char)*tempPointer1;\nLAB_08009728:\n      stringEndPointer = (char *)((int)inputVariable2 + 0x42);\n      tempVariable4 = 1;\n    }\n    else {\n      if (byteValue != 0x73) {\n        if (byteValue < 0x74) {\n          if (byteValue == 0x6f) {\nLAB_0800974e:\n            tempVariable4 = *inputVariable2;\n            tempPointer1 = *outputVariable;\n            if ((tempVariable4 & 0x80) == 0) {\n              *outputVariable = tempPointer1 + 1;\n              if ((tempVariable4 & 0x40) == 0) goto LAB_0800975c;\n              tempVariable4 = (uint)*(ushort *)tempPointer1;\n            }\n            else {\n              *outputVariable = tempPointer1 + 1;\nLAB_0800975c:\n              tempVariable4 = *tempPointer1;\n            }\n            if (byteValue == 0x6f) {\n              tempVariable3 = 8;\n            }\n            else {\n              tempVariable3 = 10;\n            }\n            hexCharacters = \"0123456789ABCDEF\";\n            goto LAB_08009778;\n          }\n          if (byteValue == 0x70) {\n            *inputVariable2 = *inputVariable2 | 0x20;\nLAB_0800970e:\n            hexCharacters = \"0123456789abcdef\";\n            *(undefined *)((int)inputVariable2 + 0x45) = 0x78;\n            goto LAB_080097e2;\n          }\n        }\n        else {\n          if (byteValue == 0x75) goto LAB_0800974e;\n          if (byteValue == 0x78) goto LAB_0800970e;\n        }\nLAB_080096c8:\n        *(byte *)((int)inputVariable2 + 0x42) = byteValue;\n        goto LAB_08009728;\n      }\n      ppcVar8 = (char **)*outputVariable;\n      *outputVariable = (uint *)(ppcVar8 + 1);\n      stringEndPointer = *ppcVar8;\n      tempVariable1 = FUN_08009f2c(stringEndPointer,0,inputVariable2[1]);\n      if (tempVariable1 != 0) {\n        inputVariable2[1] = tempVariable1 - (int)stringEndPointer;\n      }\n      tempVariable4 = inputVariable2[1];\n    }\n    inputVariable2[4] = tempVariable4;\n    *(undefined *)((int)inputVariable2 + 0x43) = 0;\n    goto LAB_080097be;\n  }\n  tempVariable4 = *inputVariable2;\n  ppuVar7 = (uint **)*outputVariable;\n  tempVariable3 = inputVariable2[5];\n  if ((tempVariable4 & 0x80) == 0) {\n    *outputVariable = (uint *)(ppuVar7 + 1);\n    tempPointer1 = *ppuVar7;\n    if ((tempVariable4 & 0x40) == 0) goto LAB_0800983e;\n    *(short *)tempPointer1 = (short)tempVariable3;\n  }\n  else {\n    *outputVariable = (uint *)(ppuVar7 + 1);\n    tempPointer1 = *ppuVar7;\nLAB_0800983e:\n    *tempPointer1 = tempVariable3;\n  }\nLAB_08009852:\n  inputVariable2[4] = 0;\nLAB_080097be:\n  tempVariable1 = FUN_080095a8(inputVariable1,inputVariable2,localArray,inputVariable3,conversionFunction);\n  if ((tempVariable1 == -1) || (tempVariable1 = (*conversionFunction)(inputVariable1,inputVariable3,stringEndPointer,inputVariable2[4]), tempVariable1 == -1)) {\nLAB_080097d2:\n    tempVariable4 = 0xffffffff;\n  }\n  else {\n    if ((int)(*inputVariable2 << 0x1e) < 0) {\n      for (tempVariable1 = 0; tempVariable1 < (int)(inputVariable2[3] - localArray[0]); tempVariable1 = tempVariable1 + 1) {\n        tempVariable2 = (*conversionFunction)(inputVariable1,inputVariable3,(int)inputVariable2 + 0x19,1);\n        if (tempVariable2 == -1) goto LAB_080097d2;\n      }\n    }\n    tempVariable4 = inputVariable2[3];\n    if ((int)inputVariable2[3] < (int)localArray[0]) {\n      tempVariable4 = localArray[0];\n    }\n  }\n  return tempVariable4;\n}\n\n",
            "renaming": {
                "FUN_08009698": "convert_number_to_string_08009698",
                "param_1": "inputVariable1",
                "param_2": "inputVariable2",
                "param_3": "inputVariable3",
                "param_4": "conversionFunction",
                "param_5": "outputVariable",
                "bVar1": "byteValue",
                "iVar2": "tempVariable1",
                "puVar3": "tempPointer1",
                "iVar4": "tempVariable2",
                "pcVar5": "hexCharacters",
                "uVar6": "tempVariable3",
                "uVar9": "tempVariable4",
                "uVar10": "tempVariable5",
                "pcVar11": "stringPointer",
                "pcVar12": "stringEndPointer",
                "local_24": "localArray"
            },
            "calling": [
                "FUN_0800937c"
            ],
            "called": [
                "FUN_08009f2c",
                "FUN_080095a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080098d8": {
            "entrypoint": "0x080098d8",
            "current_name": "execute_task_080098d8",
            "code": "\nvoid executeTask_080098d8(undefined4 taskParam1,undefined4 taskParam2,undefined4 taskParam3,undefined4 taskParam4)\n\n{\n  int dataPtr;\n  undefined4 paramCopy1;\n  undefined4 paramCopy2;\n  undefined4 paramCopy3;\n  undefined4 paramCopy4;\n  \n  dataPtr = DAT_20000090;\n  paramCopy1 = taskParam1;\n  paramCopy2 = taskParam2;\n  paramCopy3 = taskParam3;\n  paramCopy4 = taskParam4;\n  if ((DAT_20000090 != 0) && (*(int *)(DAT_20000090 + 0x18) == 0)) {\n    FUN_08009d50(DAT_20000090);\n  }\n  FUN_0800937c(dataPtr,*(undefined4 *)(dataPtr + 8),taskParam1,&paramCopy2,paramCopy1,&paramCopy2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080098d8": "execute_task_080098d8",
                "param_1": "taskParam1",
                "param_2": "taskParam2",
                "param_3": "taskParam3",
                "param_4": "taskParam4",
                "iVar1": "dataPtr",
                "uVar2": "paramCopy1",
                "uStack_c": "paramCopy2",
                "uStack_8": "paramCopy3",
                "uStack_4": "paramCopy4"
            },
            "calling": [
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08007544",
                "FUN_08007594",
                "FUN_080075dc"
            ],
            "called": [
                "FUN_0800937c",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009908": {
            "entrypoint": "0x08009908",
            "current_name": "check_and_process_data_08009908",
            "code": "\nint check_and_process_data_08009908(int data_size,uint threshold)\n\n{\n  undefined4 constant_value;\n  int result;\n  uint calculated_value;\n  \n  constant_value = DAT_20000090;\n  if (data_size != 0) {\n    if (threshold == 0) {\n      FUN_080091d8();\n      result = 0;\n    }\n    else {\n      calculated_value = FUN_0800a154();\n      result = data_size;\n      if ((calculated_value < threshold) && (result = FUN_08009270(constant_value,threshold), result != 0)) {\n        FUN_080091b0(result,data_size,threshold);\n        FUN_080091d8(constant_value,data_size);\n      }\n    }\n    return result;\n  }\n  result = FUN_08009270(DAT_20000090,threshold,threshold,&DAT_20000090);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009908": "check_and_process_data_08009908",
                "param_1": "data_size",
                "param_2": "threshold",
                "uVar1": "constant_value",
                "iVar2": "result",
                "uVar3": "calculated_value"
            },
            "calling": [
                "FUN_080027f0",
                "FUN_08002acc",
                "FUN_0800288c"
            ],
            "called": [
                "FUN_080091d8",
                "FUN_0800a154",
                "FUN_080091b0",
                "FUN_08009270"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009918": {
            "entrypoint": "0x08009918",
            "current_name": "check_and_update_param_08009918",
            "code": "\nvoid checkAndUpdateParam_08009918(int *result,undefined4 inputValue)\n\n{\n  int returnValue;\n  \n  DAT_20000a38 = 0;\n  returnValue = FUN_08008804(inputValue);\n  if ((returnValue == -1) && (DAT_20000a38 != 0)) {\n    *result = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009918": "check_and_update_param_08009918",
                "param_1": "result",
                "param_2": "inputValue",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08009270"
            ],
            "called": [
                "FUN_08008804"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009938": {
            "entrypoint": "0x08009938",
            "current_name": "find_character_08009938",
            "code": "\nchar * find_character_08009938(char *string,char character)\n\n{\n  char *current_char;\n  \n  do {\n    current_char = string;\n    if (*current_char == '\\0') {\n      if (character != '\\0') {\n        current_char = (char *)0x0;\n      }\n      return current_char;\n    }\n    string = current_char + 1;\n  } while (character != *current_char);\n  return current_char;\n}\n\n",
            "renaming": {
                "FUN_08009938": "find_character_08009938",
                "param_1": "string",
                "param_2": "character",
                "pcVar1": "current_char"
            },
            "calling": [
                "FUN_0800997e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009954": {
            "entrypoint": "0x08009954",
            "current_name": "copy_string_08009954",
            "code": "\nvoid copyString_08009954(char *destination,char *source,int length)\n\n{\n  char currentChar;\n  int remainingLength;\n  char *destinationPtr;\n  \n  do {\n    destinationPtr = destination;\n    remainingLength = length;\n    if (remainingLength == 0) {\n      return;\n    }\n    currentChar = *source;\n    destination = destinationPtr + 1;\n    *destinationPtr = currentChar;\n    source = source + 1;\n    length = remainingLength + -1;\n  } while (currentChar != '\\0');\n  for (; destination != destinationPtr + remainingLength; destination = destination + 1) {\n    *destination = '\\0';\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009954": "copy_string_08009954",
                "param_1": "destination",
                "param_2": "source",
                "param_3": "length",
                "cVar1": "currentChar",
                "iVar2": "remainingLength",
                "pcVar3": "destinationPtr"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800997e": {
            "entrypoint": "0x0800997e",
            "current_name": "find_last_occurrence_0800997e",
            "code": "\nint find_last_occurrence_0800997e(int data,int length,undefined4 param_3,undefined4 param_4)\n\n{\n  int last_index;\n  int previous_index;\n  \n  if (length != 0) {\n    previous_index = 0;\n    while (last_index = FUN_08009938(data,length,param_3,data,param_4), last_index != 0) {\n      data = last_index + 1;\n      previous_index = last_index;\n    }\n    return previous_index;\n  }\n  previous_index = FUN_08009938();\n  return previous_index;\n}\n\n",
            "renaming": {
                "FUN_0800997e": "find_last_occurrence_0800997e",
                "param_1": "data",
                "param_2": "length",
                "iVar1": "last_index",
                "iVar2": "previous_index"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [
                "FUN_08009938"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080099a4": {
            "entrypoint": "0x080099a4",
            "current_name": "find_substring_080099a4",
            "code": "\nchar * find_substring_080099a4(char *original_string,char *sub_string)\n\n{\n  char *current_char;\n  char *compare_char;\n  char *sub_string_char;\n  \n  if (*original_string == '\\0') {\n    if (*sub_string != '\\0') {\n      original_string = (char *)0x0;\n    }\n    return original_string;\n  }\n  do {\n    current_char = original_string;\n    if (*current_char == '\\0') {\n      return (char *)0x0;\n    }\n    sub_string_char = sub_string + -1;\n    compare_char = current_char + -1;\n    do {\n      sub_string_char = sub_string_char + 1;\n      if (*sub_string_char == '\\0') {\n        return current_char;\n      }\n      compare_char = compare_char + 1;\n      original_string = current_char + 1;\n    } while (*compare_char == *sub_string_char);\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080099a4": "find_substring_080099a4",
                "param_1": "original_string",
                "param_2": "sub_string",
                "pcVar1": "current_char",
                "pcVar2": "compare_char",
                "pcVar3": "sub_string_char"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009a80": {
            "entrypoint": "0x08009a80",
            "current_name": "process_data_08009a80",
            "code": "\nuint processData_08009a80(undefined4 *outputParam,undefined4 *inputParam)\n\n{\n  int globalVariable;\n  uint result;\n  ushort inputParamValue;\n  \n  globalVariable = DAT_20000090;\n  if ((DAT_20000090 != 0) && (*(int *)(DAT_20000090 + 0x18) == 0)) {\n    FUN_08009d50(DAT_20000090);\n  }\n  if (inputParam == &DAT_0800aba4) {\n    inputParam = *(undefined4 **)(globalVariable + 4);\n  }\n  else if (inputParam == (undefined4 *)&DAT_0800abc4) {\n    inputParam = *(undefined4 **)(globalVariable + 8);\n  }\n  else if (inputParam == (undefined4 *)&DAT_0800ab84) {\n    inputParam = *(undefined4 **)(globalVariable + 0xc);\n  }\n  inputParamValue = *(ushort *)(inputParam + 3);\n  result = (uint)inputParamValue;\n  if (-1 < (int)(result << 0x1c)) {\n    if (-1 < (int)(result << 0x1b)) {\n      *outputParam = 9;\n      goto LAB_08009ab0;\n    }\n    if ((int)(result << 0x1d) < 0) {\n      if ((undefined4 *)inputParam[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)inputParam[0xd] != inputParam + 0x11) {\n          FUN_080091d8(outputParam);\n        }\n        inputParam[0xd] = 0;\n      }\n      *(ushort *)(inputParam + 3) = *(ushort *)(inputParam + 3) & 0xffdb;\n      inputParam[1] = 0;\n      *inputParam = inputParam[4];\n    }\n    *(ushort *)(inputParam + 3) = *(ushort *)(inputParam + 3) | 8;\n  }\n  if ((inputParam[4] == 0) && ((*(ushort *)(inputParam + 3) & 0x280) != 0x200)) {\n    FUN_08009eac(outputParam,inputParam);\n  }\n  inputParamValue = *(ushort *)(inputParam + 3);\n  result = inputParamValue & 1;\n  if ((inputParamValue & 1) == 0) {\n    if (-1 < (int)((uint)inputParamValue << 0x1e)) {\n      result = inputParam[5];\n    }\n    inputParam[2] = result;\n  }\n  else {\n    inputParam[2] = 0;\n    inputParam[6] = -inputParam[5];\n  }\n  if (inputParam[4] == 0) {\n    inputParamValue = *(ushort *)(inputParam + 3);\n    result = (int)(short)inputParamValue & 0x80;\n    if (result != 0) {\nLAB_08009ab0:\n      *(ushort *)(inputParam + 3) = inputParamValue | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009a80": "process_data_08009a80",
                "param_1": "outputParam",
                "param_2": "inputParam",
                "iVar1": "globalVariable",
                "uVar2": "result",
                "uVar3": "inputParamValue"
            },
            "calling": [
                "FUN_0800937c",
                "FUN_0800932c"
            ],
            "called": [
                "FUN_080091d8",
                "FUN_08009eac",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009b5c": {
            "entrypoint": "0x08009b5c",
            "current_name": "process_binary_data_08009b5c",
            "code": "\nvoid processBinaryData_08009b5c(void)\n\n{\n  uint *dataPointer;\n  int counter;\n  int *dataArray;\n  int *tempArray;\n  uint tempValue;\n  ushort flag;\n  int tempVar;\n  code *functionPointer;\n  int tempCounter;\n  uint tempValue2;\n  code *jumpTableFunction;\n  bool flag2;\n  undefined8 functionResult;\n  \n  FUN_08009fe8(6);\n  jumpTableFunction = (code *)0x8009b6b;\n  functionResult = FUN_08008868(1);\n  dataArray = (int *)((ulonglong)functionResult >> 0x20);\n  dataPointer = (uint *)functionResult;\n  flag = *(ushort *)(dataArray + 3);\n  tempValue = (uint)flag;\n  if ((int)(tempValue << 0x1c) < 0) {\n    counter = dataArray[4];\n    if (counter != 0) {\n      tempVar = tempValue << 0x1e;\n      flag2 = tempVar != 0;\n      if (flag2) {\n        tempVar = 0;\n      }\n      tempCounter = *dataArray;\n      if (!flag2) {\n        tempVar = dataArray[5];\n      }\n      *dataArray = counter;\n      dataArray[2] = tempVar;\n      for (tempCounter = tempCounter - counter; 0 < tempCounter; tempCounter = tempCounter - tempVar) {\n        tempVar = (*(code *)dataArray[10])(dataPointer,dataArray[8],counter,tempCounter);\n        if (tempVar < 1) {\n          flag = *(ushort *)(dataArray + 3);\n          goto LAB_08009c62;\n        }\n        counter = counter + tempVar;\n      }\n    }\n  }\n  else if (((0 < dataArray[1]) || (0 < dataArray[0x10])) &&\n          (functionPointer = (code *)dataArray[0xb], functionPointer != (code *)0x0)) {\n    tempValue2 = *dataPointer;\n    *dataPointer = 0;\n    if ((flag & 0x1000) == 0) {\n      counter = (*functionPointer)(dataPointer,dataArray[8],tempValue & 0x1000,1);\n      if ((counter == -1) && (tempValue = *dataPointer, tempValue != 0)) {\n        if ((tempValue != 0x1d) && (tempValue != 0x16)) {\n          *(ushort *)(dataArray + 3) = *(ushort *)(dataArray + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c2c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          (*jumpTableFunction)();\n          return;\n        }\n        *dataPointer = tempValue2;\n        goto LAB_08009b86;\n      }\n    }\n    else {\n      counter = dataArray[0x15];\n    }\n    if (((int)((uint)*(ushort *)(dataArray + 3) << 0x1d) < 0) &&\n       (counter = counter - dataArray[1], dataArray[0xd] != 0)) {\n      counter = counter - dataArray[0x10];\n    }\n    counter = (*(code *)dataArray[0xb])(dataPointer,dataArray[8],counter,0);\n    flag = *(ushort *)(dataArray + 3);\n    if ((counter == -1) &&\n       ((0x1d < *dataPointer || (-1 < (int)((0x20400001U >> (*dataPointer & 0xff)) << 0x1f))))) {\nLAB_08009c62:\n      *(ushort *)(dataArray + 3) = flag | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c6c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jumpTableFunction)(0xffffffff);\n      return;\n    }\n    dataArray[1] = 0;\n    *dataArray = dataArray[4];\n    if (((int)((uint)flag << 0x13) < 0) && ((counter != -1 || (*dataPointer == 0)))) {\n      dataArray[0x15] = counter;\n    }\n    tempArray = (int *)dataArray[0xd];\n    *dataPointer = tempValue2;\n    if (tempArray != (int *)0x0) {\n      if (tempArray != dataArray + 0x11) {\n        FUN_080091d8(dataPointer);\n      }\n      dataArray[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08009c02. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jumpTableFunction)();\n      return;\n    }\n  }\nLAB_08009b86:\n                    /* WARNING: Could not recover jumptable at 0x08009b88. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTableFunction)(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009b5c": "process_binary_data_08009b5c",
                "puVar1": "dataPointer",
                "iVar2": "counter",
                "piVar3": "dataArray",
                "piVar4": "tempArray",
                "uVar5": "tempValue",
                "uVar6": "flag",
                "iVar7": "tempVar",
                "pcVar8": "functionPointer",
                "iVar9": "tempCounter",
                "uVar10": "tempValue2",
                "bVar11": "flag2",
                "uVar12": "functionResult",
                "UNRECOVERED_JUMPTABLE_00": "jumpTableFunction"
            },
            "calling": [
                "FUN_080090cc",
                "FUN_0800a18c"
            ],
            "called": [
                "FUN_080091d8",
                "FUN_08008868",
                "FUN_08009fe8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009c7c": {
            "entrypoint": "0x08009c7c",
            "current_name": "execute_function_08009c7c",
            "code": "\nundefined4 executeFunction_08009c7c(uint *functionParams,int *internalVars)\n\n{\n  undefined4 result;\n  int tempVar1;\n  int *ptrVar1;\n  uint ushortVar;\n  ushort ushortResult;\n  int tempVar2;\n  undefined4 unaffVar1;\n  undefined4 unaffVar2;\n  code *functionPtr;\n  int loopVar1;\n  uint tempVar3;\n  code *jumpTable;\n  bool boolVar2;\n  \n  if (internalVars[4] != 0) {\n    if ((functionParams != (uint *)0x0) && (functionParams[6] == 0)) {\n      FUN_08009d50();\n    }\n    if (internalVars == &DAT_0800aba4) {\n      internalVars = (int *)functionParams[1];\n    }\n    else if (internalVars == (int *)&DAT_0800abc4) {\n      internalVars = (int *)functionParams[2];\n    }\n    else if (internalVars == (int *)&DAT_0800ab84) {\n      internalVars = (int *)functionParams[3];\n    }\n    if (*(short *)(internalVars + 3) != 0) {\n      ushortResult = *(ushort *)(internalVars + 3);\n      ushortVar = (uint)ushortResult;\n      if ((int)(ushortVar << 0x1c) < 0) {\n        tempVar1 = internalVars[4];\n        if (tempVar1 != 0) {\n          tempVar2 = ushortVar << 0x1e;\n          boolVar2 = tempVar2 != 0;\n          if (boolVar2) {\n            tempVar2 = 0;\n          }\n          loopVar1 = *internalVars;\n          if (!boolVar2) {\n            tempVar2 = internalVars[5];\n          }\n          *internalVars = tempVar1;\n          internalVars[2] = tempVar2;\n          for (loopVar1 = loopVar1 - tempVar1; 0 < loopVar1; loopVar1 = loopVar1 - tempVar2) {\n            tempVar2 = (*(code *)internalVars[10])(functionParams,internalVars[8],tempVar1,loopVar1,unaffVar1,unaffVar2);\n            if (tempVar2 < 1) {\n              ushortResult = *(ushort *)(internalVars + 3);\n              goto LAB_08009c62;\n            }\n            tempVar1 = tempVar1 + tempVar2;\n          }\n        }\n      }\n      else if (((0 < internalVars[1]) || (0 < internalVars[0x10])) &&\n              (functionPtr = (code *)internalVars[0xb], functionPtr != (code *)0x0)) {\n        tempVar3 = *functionParams;\n        *functionParams = 0;\n        if ((ushortResult & 0x1000) == 0) {\n          tempVar1 = (*functionPtr)(functionParams,internalVars[8],ushortVar & 0x1000,1);\n          if ((tempVar1 == -1) && (ushortVar = *functionParams, ushortVar != 0)) {\n            if ((ushortVar != 0x1d) && (ushortVar != 0x16)) {\n              *(ushort *)(internalVars + 3) = *(ushort *)(internalVars + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c2c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              result = (*jumpTable)();\n              return result;\n            }\n            *functionParams = tempVar3;\n            goto LAB_08009b86;\n          }\n        }\n        else {\n          tempVar1 = internalVars[0x15];\n        }\n        if (((int)((uint)*(ushort *)(internalVars + 3) << 0x1d) < 0) &&\n           (tempVar1 = tempVar1 - internalVars[1], internalVars[0xd] != 0)) {\n          tempVar1 = tempVar1 - internalVars[0x10];\n        }\n        tempVar1 = (*(code *)internalVars[0xb])(functionParams,internalVars[8],tempVar1,0);\n        ushortResult = *(ushort *)(internalVars + 3);\n        if ((tempVar1 == -1) &&\n           ((0x1d < *functionParams || (-1 < (int)((0x20400001U >> (*functionParams & 0xff)) << 0x1f))))) {\nLAB_08009c62:\n          *(ushort *)(internalVars + 3) = ushortResult | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c6c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          result = (*jumpTable)(0xffffffff);\n          return result;\n        }\n        internalVars[1] = 0;\n        *internalVars = internalVars[4];\n        if (((int)((uint)ushortResult << 0x13) < 0) && ((tempVar1 != -1 || (*functionParams == 0)))) {\n          internalVars[0x15] = tempVar1;\n        }\n        ptrVar1 = (int *)internalVars[0xd];\n        *functionParams = tempVar3;\n        if (ptrVar1 != (int *)0x0) {\n          if (ptrVar1 != internalVars + 0x11) {\n            FUN_080091d8(functionParams);\n          }\n          internalVars[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08009c02. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          result = (*jumpTable)();\n          return result;\n        }\n      }\nLAB_08009b86:\n                    /* WARNING: Could not recover jumptable at 0x08009b88. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      result = (*jumpTable)(0);\n      return result;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08009c7c": "execute_function_08009c7c",
                "param_1": "functionParams",
                "param_2": "internalVars",
                "uVar1": "result",
                "iVar2": "tempVar1",
                "piVar3": "ptrVar1",
                "uVar4": "ushortVar",
                "uVar5": "ushortResult",
                "iVar6": "tempVar2",
                "unaff_r4": "unaffVar1",
                "unaff_r5": "unaffVar2",
                "pcVar7": "functionPtr",
                "iVar8": "loopVar1",
                "uVar9": "tempVar3",
                "UNRECOVERED_JUMPTABLE_00": "jumpTable",
                "bVar10": "boolVar2"
            },
            "calling": [
                "FUN_0800932c"
            ],
            "called": [
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009cdc": {
            "entrypoint": "0x08009cdc",
            "current_name": "initialize_data_structure_08009cdc",
            "code": "\nvoid initializeDataStructure_08009cdc(undefined4 *dataStructure,undefined2 value1,undefined2 value2)\n\n{\n  *dataStructure = 0;\n  dataStructure[1] = 0;\n  dataStructure[2] = 0;\n  *(undefined2 *)(dataStructure + 3) = value1;\n  dataStructure[0x19] = 0;\n  *(undefined2 *)((int)dataStructure + 0xe) = value2;\n  dataStructure[4] = 0;\n  dataStructure[5] = 0;\n  dataStructure[6] = 0;\n  FUN_080091c6(dataStructure + 0x17,0,8);\n  dataStructure[8] = dataStructure;\n  dataStructure[9] = 0x800a021;\n  dataStructure[10] = 0x800a043;\n  dataStructure[0xb] = 0x800a07b;\n  dataStructure[0xc] = &LAB_0800a09e_1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009cdc": "initialize_data_structure_08009cdc",
                "param_1": "dataStructure",
                "param_2": "value1",
                "param_3": "value2"
            },
            "calling": [
                "FUN_08009d50"
            ],
            "called": [
                "FUN_080091c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009d24": {
            "entrypoint": "0x08009d24",
            "current_name": "initialize_data_08009d24",
            "code": "\nundefined4 * initializeData_08009d24(undefined4 inputPtr,int count)\n\n{\n  undefined4 *outputPtr;\n  int offset;\n  \n  offset = (count + -1) * 0x68;\n  outputPtr = (undefined4 *)FUN_08009270(inputPtr,offset + 0x74);\n  if (outputPtr != (undefined4 *)0x0) {\n    *outputPtr = 0;\n    outputPtr[1] = count;\n    outputPtr[2] = outputPtr + 3;\n    FUN_080091c6(outputPtr + 3,0,offset + 0x68);\n  }\n  return outputPtr;\n}\n\n",
            "renaming": {
                "FUN_08009d24": "initialize_data_08009d24",
                "param_1": "inputPtr",
                "param_2": "count",
                "puVar1": "outputPtr",
                "iVar2": "offset"
            },
            "calling": [
                "FUN_08009db0"
            ],
            "called": [
                "FUN_080091c6",
                "FUN_08009270"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009d50": {
            "entrypoint": "0x08009d50",
            "current_name": "initialize_data_08009d50",
            "code": "\nvoid initializeData_08009d50(undefined4 *data)\n\n{\n  undefined4 returnValue;\n  undefined4 *temporaryPointer;\n  \n  if (data[6] == 0) {\n    data[0x12] = 0;\n    data[0x13] = 0;\n    data[0x14] = 0;\n    temporaryPointer = &DAT_20000094;\n    data[10] = &LAB_08009cd0_1;\n    if (data == &DAT_20000094) {\n      temporaryPointer = (undefined4 *)0x1;\n    }\n    if (data == &DAT_20000094) {\n      data[6] = temporaryPointer;\n    }\n    returnValue = FUN_08009db0();\n    data[1] = returnValue;\n    returnValue = FUN_08009db0(data);\n    data[2] = returnValue;\n    returnValue = FUN_08009db0(data);\n    data[3] = returnValue;\n    FUN_08009cdc(data[1],4,0);\n    FUN_08009cdc(data[2],9,1);\n    FUN_08009cdc(data[3],0x12,2);\n    data[6] = 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009d50": "initialize_data_08009d50",
                "param_1": "data",
                "uVar1": "returnValue",
                "puVar2": "temporaryPointer"
            },
            "calling": [
                "FUN_08009c7c",
                "FUN_080098d8",
                "FUN_0800937c",
                "FUN_0800932c",
                "FUN_08009db0",
                "FUN_08009a80"
            ],
            "called": [
                "FUN_08009cdc",
                "FUN_08009db0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009db0": {
            "entrypoint": "0x08009db0",
            "current_name": "find_next_available_block_08009db0",
            "code": "\nint * findNextAvailableBlock_08009db0(undefined4 *result,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int *currentBlock;\n  int *nextBlock;\n  int **blockList;\n  \n  if (DAT_200000ac == 0) {\n    FUN_08009d50(&DAT_20000094);\n  }\n  blockList = (int **)&DAT_200000dc;\n  do {\n    nextBlock = blockList[2];\n    currentBlock = blockList[1];\n    while (currentBlock = (int *)((int)currentBlock + -1), -1 < (int)currentBlock) {\n      if (*(short *)(nextBlock + 3) == 0) {\n        *(undefined2 *)((int)nextBlock + 0xe) = 0xffff;\n        nextBlock[0x19] = 0;\n        *(undefined2 *)(nextBlock + 3) = 1;\n        *nextBlock = 0;\n        nextBlock[2] = 0;\n        nextBlock[1] = 0;\n        nextBlock[4] = 0;\n        nextBlock[5] = 0;\n        nextBlock[6] = 0;\n        FUN_080091c6(nextBlock + 0x17,0,8,1,param4);\n        nextBlock[0xd] = 0;\n        nextBlock[0xe] = 0;\n        nextBlock[0x12] = 0;\n        nextBlock[0x13] = 0;\n        return nextBlock;\n      }\n      nextBlock = nextBlock + 0x1a;\n    }\n    if (*blockList == (int *)0x0) {\n      currentBlock = (int *)FUN_08009d24(result,4);\n      *blockList = currentBlock;\n      if (currentBlock == (int *)0x0) {\n        *result = 0xc;\n        return (int *)0x0;\n      }\n    }\n    blockList = (int **)*blockList;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08009db0": "find_next_available_block_08009db0",
                "param_1": "result",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "piVar1": "currentBlock",
                "piVar2": "nextBlock",
                "ppiVar3": "blockList"
            },
            "calling": [
                "FUN_08009d50"
            ],
            "called": [
                "FUN_080091c6",
                "FUN_08009d24",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009e64": {
            "entrypoint": "0x08009e64",
            "current_name": "check_permissions_08009e64",
            "code": "\nundefined4 checkPermissions_08009e64(undefined4 param_1,int buffer,undefined4 *result,uint *flag)\n\n{\n  int status;\n  undefined4 permission;\n  undefined temp [4];\n  uint permissionFlag;\n  \n  if ((*(short *)(buffer + 0xe) < 0) ||\n     (status = FUN_0800a0ec(param_1,(int)*(short *)(buffer + 0xe),temp), status < 0)) {\n    *flag = 0;\n    if ((int)((uint)*(ushort *)(buffer + 0xc) << 0x18) < 0) {\n      permission = 0x40;\n      goto LAB_08009ea4;\n    }\n  }\n  else {\n    *flag = (uint)((permissionFlag & 0xf000) == 0x2000);\n  }\n  permission = 0x400;\nLAB_08009ea4:\n  *result = permission;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08009e64": "check_permissions_08009e64",
                "param_2": "buffer",
                "param_3": "result",
                "param_4": "flag",
                "iVar1": "status",
                "uVar2": "permission",
                "auStack_4c": "temp",
                "local_48": "permissionFlag"
            },
            "calling": [
                "FUN_08009eac"
            ],
            "called": [
                "FUN_0800a0ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009eac": {
            "entrypoint": "0x08009eac",
            "current_name": "process_data_08009eac",
            "code": "\nvoid processData_08009eac(int inputValue,int *outputArray)\n\n{\n  ushort result;\n  int status;\n  int tempValue;\n  int *tempArray;\n  \n  if (-1 < (int)((uint)*(ushort *)(outputArray + 3) << 0x1e)) {\n    tempValue = inputValue;\n    tempArray = outputArray;\n    result = FUN_08009e64(inputValue,outputArray,&tempValue,&tempArray);\n    status = FUN_08009270(inputValue,tempValue);\n    if (status != 0) {\n      *(undefined **)(inputValue + 0x28) = &LAB_08009cd0_1;\n      *outputArray = status;\n      *(ushort *)(outputArray + 3) = *(ushort *)(outputArray + 3) | 0x80;\n      outputArray[4] = status;\n      outputArray[5] = tempValue;\n      if ((tempArray != (int *)0x0) &&\n         (status = FUN_0800a110(inputValue,(int)*(short *)((int)outputArray + 0xe)), status != 0)) {\n        *(ushort *)(outputArray + 3) = *(ushort *)(outputArray + 3) & 0xfffc | 1;\n      }\n      *(ushort *)(outputArray + 3) = result | *(ushort *)(outputArray + 3);\n      return;\n    }\n    if ((int)(short)*(ushort *)(outputArray + 3) << 0x16 < 0) {\n      return;\n    }\n    *(ushort *)(outputArray + 3) = *(ushort *)(outputArray + 3) & 0xfffc | 2;\n  }\n  *outputArray = (int)outputArray + 0x47;\n  outputArray[4] = (int)outputArray + 0x47;\n  outputArray[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009eac": "process_data_08009eac",
                "param_1": "inputValue",
                "param_2": "outputArray",
                "uVar1": "result",
                "iVar2": "status",
                "local_18": "tempValue",
                "local_14": "tempArray"
            },
            "calling": [
                "FUN_08009a80"
            ],
            "called": [
                "FUN_08009270",
                "FUN_0800a110",
                "FUN_08009e64"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009f2c": {
            "entrypoint": "0x08009f2c",
            "current_name": "find_character_08009f2c",
            "code": "\nchar * find_character_08009f2c(char *string,char character,int length)\n\n{\n  char *ptr_start;\n  char *ptr_current;\n  \n  ptr_start = string;\n  do {\n    ptr_current = ptr_start;\n    if (ptr_current == string + length) {\n      return (char *)0x0;\n    }\n    ptr_start = ptr_current + 1;\n  } while (*ptr_current != character);\n  return ptr_current;\n}\n\n",
            "renaming": {
                "FUN_08009f2c": "find_character_08009f2c",
                "param_1": "string",
                "param_2": "character",
                "param_3": "length",
                "pcVar1": "ptr_start",
                "pcVar2": "ptr_current"
            },
            "calling": [
                "FUN_0800937c",
                "FUN_08009698"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009f48": {
            "entrypoint": "0x08009f48",
            "current_name": "FUNC_08009f48",
            "code": "\nvoid FUNC_08009f48(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009f48": "FUNC_08009f48"
            },
            "calling": [
                "FUN_080091d8",
                "FUN_08009270"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08009f4a": {
            "entrypoint": "0x08009f4a",
            "current_name": "FUNC_08009f4a",
            "code": "\nvoid FUNC_08009f4a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009f4a": "FUNC_08009f4a"
            },
            "calling": [
                "FUN_080091d8",
                "FUN_08009270"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08009fe8": {
            "entrypoint": "0x08009fe8",
            "current_name": "execute_function_08009fe8",
            "code": "\nint executeFunction_08009fe8(uint inputParam)\n\n{\n  int *pointerToData;\n  undefined4 returnVal;\n  int tempVar;\n  code *functionPtr;\n  undefined4 unaff_r4;\n  undefined4 unaff_r5;\n  undefined4 in_lr;\n  undefined4 *pointerToData2;\n  \n  pointerToData = DAT_20000090;\n  pointerToData2 = &DAT_20000090;\n  if (0x1f < inputParam) {\n    *DAT_20000090 = 0x16;\n    return -1;\n  }\n  tempVar = DAT_20000090[0x11];\n  if ((tempVar != 0) && (functionPtr = *(code **)(tempVar + inputParam * 4), functionPtr != (code *)0x0)) {\n    if (functionPtr != (code *)0x1) {\n      if (functionPtr == (code *)0xffffffff) {\n        *DAT_20000090 = 0x16;\n        return 1;\n      }\n      *(undefined4 *)(tempVar + inputParam * 4) = 0;\n      (*functionPtr)(inputParam);\n    }\n    return 0;\n  }\n  returnVal = thunk_FUN_0800887c(DAT_20000090);\n  DAT_20000a38 = 0;\n  tempVar = FUN_0800886c(returnVal,inputParam,inputParam,0,pointerToData2,unaff_r4,unaff_r5,in_lr);\n  if ((tempVar == -1) && (DAT_20000a38 != 0)) {\n    *pointerToData = DAT_20000a38;\n  }\n  return tempVar;\n}\n\n",
            "renaming": {
                "FUN_08009fe8": "execute_function_08009fe8",
                "param_1": "inputParam",
                "piVar1": "pointerToData",
                "uVar2": "returnVal",
                "iVar3": "tempVar",
                "pcVar4": "functionPtr",
                "puVar5": "pointerToData2"
            },
            "calling": [
                "FUN_08009b5c"
            ],
            "called": [
                "thunk_FUN_0800887c",
                "FUN_0800886c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_0800887c": {
            "entrypoint": "0x0800a01c",
            "current_name": "initialize_thunk_0800887c",
            "code": "\nint initialize_thunk_0800887c(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "thunk_FUN_0800887c": "initialize_thunk_0800887c",
                "undefined4": "int"
            },
            "calling": [
                "FUN_08009fe8"
            ],
            "called": [
                "FUN_0800887c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a020": {
            "entrypoint": "0x0800a020",
            "current_name": "update_values_0800a020",
            "code": "\nvoid updateValues_0800a020(undefined4 arg1,int arg2)\n\n{\n  int result;\n  uint newValue;\n  bool isPositive;\n  \n  result = FUN_0800a168(arg1,(int)*(short *)(arg2 + 0xe));\n  isPositive = -1 < result;\n  if (isPositive) {\n    newValue = *(int *)(arg2 + 0x54) + result;\n  }\n  else {\n    newValue = *(ushort *)(arg2 + 0xc) & 0xffffefff;\n  }\n  if (isPositive) {\n    *(uint *)(arg2 + 0x54) = newValue;\n  }\n  if (!isPositive) {\n    *(short *)(arg2 + 0xc) = (short)newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a020": "update_values_0800a020",
                "param_1": "arg1",
                "param_2": "arg2",
                "iVar1": "result",
                "uVar2": "newValue",
                "bVar3": "isPositive"
            },
            "calling": [],
            "called": [
                "FUN_0800a168"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a042": {
            "entrypoint": "0x0800a042",
            "current_name": "process_data_0800a042",
            "code": "\nvoid processData_0800a042(int *outputPtr,int inputPtr,undefined4 paramA,undefined4 paramB)\n\n{\n  int result;\n  undefined4 unusedVar1;\n  undefined4 unusedVar2;\n  undefined4 unusedVar3;\n  \n  if ((int)((uint)*(ushort *)(inputPtr + 0xc) << 0x17) < 0) {\n    FUN_0800a130(outputPtr,(int)*(short *)(inputPtr + 0xe),0,2);\n  }\n  *(ushort *)(inputPtr + 0xc) = *(ushort *)(inputPtr + 0xc) & 0xefff;\n  DAT_20000a38 = 0;\n  result = FUN_0800885c((int)*(short *)(inputPtr + 0xe),paramA,paramB,paramB,paramB,unusedVar1,\n                       unusedVar2,unusedVar3);\n  if ((result == -1) && (DAT_20000a38 != 0)) {\n    *outputPtr = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a042": "process_data_0800a042",
                "param_1": "outputPtr",
                "param_2": "inputPtr",
                "param_3": "paramA",
                "param_4": "paramB",
                "iVar1": "result",
                "unaff_r4": "unusedVar1",
                "unaff_r5": "unusedVar2",
                "in_lr": "unusedVar3"
            },
            "calling": [],
            "called": [
                "FUN_0800885c",
                "FUN_0800a130"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a07a": {
            "entrypoint": "0x0800a07a",
            "current_name": "update_flag_0800a07a",
            "code": "\nvoid updateFlag_0800a07a(undefined4 input,int data)\n\n{\n  int result;\n  ushort newFlag;\n  bool isError;\n  \n  result = FUN_0800a130(input,(int)*(short *)(data + 0xe));\n  isError = result == -1;\n  if (isError) {\n    newFlag = *(ushort *)(data + 0xc) & 0xefff;\n  }\n  else {\n    *(int *)(data + 0x54) = result;\n    newFlag = *(ushort *)(data + 0xc) | 0x1000;\n  }\n  if (isError) {\n    *(ushort *)(data + 0xc) = newFlag;\n  }\n  if (!isError) {\n    *(ushort *)(data + 0xc) = newFlag;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a07a": "update_flag_0800a07a",
                "param_1": "input",
                "param_2": "data",
                "iVar1": "result",
                "uVar2": "newFlag",
                "bVar3": "isError"
            },
            "calling": [],
            "called": [
                "FUN_0800a130"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a0ec": {
            "entrypoint": "0x0800a0ec",
            "current_name": "extract_and_assign_value_0800a0ec",
            "code": "\nvoid extract_and_assign_value_0800a0ec(int *output,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  int result;\n  \n  DAT_20000a38 = 0;\n  result = FUN_08008846(value1,value2,value2,0,value3);\n  if ((result == -1) && (DAT_20000a38 != 0)) {\n    *output = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a0ec": "extract_and_assign_value_0800a0ec",
                "param_1": "output",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08009e64"
            ],
            "called": [
                "FUN_08008846"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a110": {
            "entrypoint": "0x0800a110",
            "current_name": "assign_return_value_or_default_0800a110",
            "code": "\nvoid assignReturnValueOrDefault_0800a110(int *outputParam,undefined4 inputParam)\n\n{\n  int returnValue;\n  \n  DAT_20000a38 = 0;\n  returnValue = FUN_08008850(inputParam);\n  if ((returnValue == -1) && (DAT_20000a38 != 0)) {\n    *outputParam = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a110": "assign_return_value_or_default_0800a110",
                "param_1": "outputParam",
                "param_2": "inputParam",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08009eac"
            ],
            "called": [
                "FUN_08008850"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a130": {
            "entrypoint": "0x0800a130",
            "current_name": "update_param_if_negative_0800a130",
            "code": "\nvoid updateParamIfNegative_0800a130(int *result,undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  int returnValue;\n  \n  DAT_20000a38 = 0;\n  returnValue = FUN_08008854(input1,input2,input3,input3,input3);\n  if ((returnValue == -1) && (DAT_20000a38 != 0)) {\n    *result = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a130": "update_param_if_negative_0800a130",
                "param_1": "result",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_0800a07a",
                "FUN_0800a042"
            ],
            "called": [
                "FUN_08008854"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a154": {
            "entrypoint": "0x0800a154",
            "current_name": "calculate_new_value_0800a154",
            "code": "\nint calculateNewValue_0800a154(undefined4 inputValue,int pointerVar)\n\n{\n  int result;\n  \n  result = *(int *)(pointerVar + -4) + -4;\n  if (*(int *)(pointerVar + -4) < 0) {\n    result = result + *(int *)(pointerVar + result);\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800a154": "calculate_new_value_0800a154",
                "param_1": "inputValue",
                "param_2": "pointerVar",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08009908"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a168": {
            "entrypoint": "0x0800a168",
            "current_name": "update_parameter_0800a168",
            "code": "\nvoid updateParameter_0800a168(int *resultPointer,undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  int returnValue;\n  \n  DAT_20000a38 = 0;\n  returnValue = FUN_08008858(input1,input2,input3,input3,input3);\n  if ((returnValue == -1) && (DAT_20000a38 != 0)) {\n    *resultPointer = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a168": "update_parameter_0800a168",
                "param_1": "resultPointer",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_0800a020"
            ],
            "called": [
                "FUN_08008858"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a18c": {
            "entrypoint": "0x0800a18c",
            "current_name": "update_data_values_0800a18c",
            "code": "\nvoid updateDataValues_0800a18c(void)\n\n{\n  code *jumpTable;\n  \n  jumpTable = updateDataValues_0800a18c;\n  FUN_08009b5c();\n  if (-1 < DAT_200009c0 << 0x1f) {\n    DAT_200009c0 = 1;\n  }\n  if (-1 < DAT_200009bc << 0x1f) {\n    DAT_200009bc = 1;\n  }\n  if (-1 < DAT_200009b8 << 0x1f) {\n    DAT_200009b8 = 1;\n  }\n  if (-1 < DAT_200009b4 << 0x1f) {\n    DAT_200009b4 = 1;\n  }\n  if (-1 < DAT_200009b0 << 0x1f) {\n    DAT_200009b0 = 1;\n  }\n  if (-1 < DAT_200009ac << 0x1f) {\n    DAT_200009ac = 1;\n  }\n  if (-1 < DAT_200009a8 << 0x1f) {\n    DAT_200009a8 = 1;\n  }\n  if (-1 < DAT_200009a4 << 0x1f) {\n    DAT_200009a4 = 1;\n  }\n  if (-1 < DAT_200009a0 << 0x1f) {\n    DAT_200009a0 = 1;\n  }\n  if (-1 < DAT_2000099c << 0x1f) {\n    DAT_2000099c = 1;\n  }\n  if (-1 < DAT_20000998 << 0x1f) {\n    DAT_20000998 = 1;\n  }\n  if (-1 < DAT_20000994 << 0x1f) {\n    DAT_20000994 = 1;\n  }\n                    /* WARNING: Could not recover jumptable at 0x0800a224. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a18c": "update_data_values_0800a18c",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_08009084"
            ],
            "called": [
                "FUN_08009b5c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a424": {
            "entrypoint": "0x0800a424",
            "current_name": "FUNC_0800a424",
            "code": "\nvoid FUNC_0800a424(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a424": "FUNC_0800a424"
            },
            "calling": [
                "FUN_08009148",
                "FUN_0800010c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800a430": {
            "entrypoint": "0x0800a430",
            "current_name": "FUNC_0800a430",
            "code": "\nvoid FUNC_0800a430(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a430": "FUNC_0800a430"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 210530,
    "layers": [
        [
            "FUN_0800010c",
            "FUN_08000178",
            "FUN_08000188",
            "FUN_0800018c",
            "FUN_08000214",
            "FUN_0800021a",
            "FUN_08000488",
            "FUN_080004d4",
            "FUN_08000500",
            "FUN_08000588",
            "FUN_080005e0",
            "FUN_080005f8",
            "FUN_08000a64",
            "FUN_08000aec",
            "FUN_08000be8",
            "FUN_08000ef8",
            "FUN_08001b48",
            "FUN_08001bf8",
            "FUN_08001c08",
            "FUN_08001c18",
            "FUN_08001cd0",
            "FUN_080022f8",
            "FUN_08002400",
            "FUN_0800242c",
            "FUN_08002578",
            "FUN_08002580",
            "FUN_080025ac",
            "FUN_08002634",
            "FUN_08002644",
            "FUN_0800267c",
            "FUN_080026b0",
            "FUN_080026f8",
            "FUN_0800270c",
            "FUN_08002720",
            "FUN_080027f0",
            "FUN_0800288c",
            "FUN_0800291c",
            "FUN_08002948",
            "FUN_08002968",
            "FUN_08002a1c",
            "FUN_08002a26",
            "FUN_08002a30",
            "FUN_08002a58",
            "FUN_08002ac0",
            "FUN_08002acc",
            "FUN_08002b68",
            "FUN_08002c00",
            "FUN_08002c14",
            "FUN_08002c1e",
            "FUN_08002c2c",
            "FUN_08002ce0",
            "FUN_08002dbc",
            "FUN_08002ddc",
            "FUN_08002df6",
            "FUN_08002e26",
            "FUN_08002e44",
            "FUN_08002ec4",
            "FUN_08002ed2",
            "FUN_08002ef2",
            "FUN_08002efe",
            "FUN_08002f0a",
            "FUN_08002f14",
            "FUN_08002f1e",
            "FUN_08002f2c",
            "FUN_08002f84",
            "FUN_08002f94",
            "FUN_08002fa0",
            "FUN_08002fa8",
            "FUN_08002fba",
            "FUN_08002fc2",
            "FUN_08002fca",
            "FUN_08003002",
            "FUN_08003048",
            "FUN_0800307a",
            "FUN_08003106",
            "FUN_0800314e",
            "FUN_08003154",
            "FUN_08003158",
            "FUN_0800319e",
            "FUN_080031ce",
            "FUN_0800322c",
            "FUN_0800325a",
            "FUN_080032a2",
            "FUN_080032bc",
            "FUN_08003306",
            "FUN_08003346",
            "FUN_08003350",
            "FUN_08003366",
            "FUN_08003370",
            "FUN_08003376",
            "FUN_080033a8",
            "FUN_080033cc",
            "FUN_0800344a",
            "FUN_08003474",
            "FUN_080035b8",
            "FUN_080036a2",
            "FUN_080036ac",
            "FUN_080036d8",
            "FUN_08003724",
            "FUN_08003748",
            "FUN_08003760",
            "FUN_0800376c",
            "FUN_080038dc",
            "FUN_080038e4",
            "FUN_08003a1c",
            "FUN_08003a20",
            "FUN_08003aa0",
            "FUN_08003b8c",
            "FUN_08003bd8",
            "FUN_08003ce8",
            "FUN_08003de4",
            "FUN_08003e20",
            "FUN_08003f0c",
            "FUN_08003f30",
            "FUN_08003f94",
            "FUN_08003fb0",
            "FUN_08003fd8",
            "FUN_08004004",
            "FUN_08004024",
            "FUN_08004046",
            "FUN_08004050",
            "FUN_080040e8",
            "FUN_080042d4",
            "FUN_080042e2",
            "FUN_080042f0",
            "FUN_0800430c",
            "FUN_08004396",
            "FUN_080043a2",
            "FUN_0800457c",
            "FUN_0800459c",
            "FUN_080045c0",
            "FUN_08004728",
            "FUN_080047f4",
            "FUN_080048c8",
            "FUN_08004954",
            "FUN_080049e0",
            "FUN_08004a24",
            "FUN_08004a76",
            "FUN_08004ac2",
            "FUN_08004aec",
            "FUN_08004b82",
            "FUN_08004ccc",
            "FUN_08004d6c",
            "FUN_08004e3c",
            "FUN_08004f3c",
            "FUN_08005084",
            "FUN_08005188",
            "FUN_080052f0",
            "FUN_0800542a",
            "FUN_08005430",
            "FUN_08005434",
            "FUN_08005460",
            "FUN_08005840",
            "FUN_080058ac",
            "FUN_080058d2",
            "FUN_08005a1c",
            "FUN_08005a28",
            "FUN_08005a48",
            "FUN_08005a68",
            "FUN_08005aa4",
            "FUN_08005bb8",
            "FUN_08005cb4",
            "FUN_08005cec",
            "FUN_08005d48",
            "FUN_08005dac",
            "FUN_08005df4",
            "FUN_08005e2e",
            "FUN_08005e6e",
            "FUN_08005fe8",
            "FUN_08006060",
            "FUN_08006092",
            "FUN_080060c4",
            "FUN_08006128",
            "FUN_08006186",
            "FUN_08006262",
            "FUN_08006280",
            "FUN_080062f4",
            "FUN_08006390",
            "FUN_080063c0",
            "FUN_08006420",
            "FUN_0800643c",
            "FUN_08006460",
            "FUN_080064b0",
            "FUN_080064cc",
            "FUN_08006538",
            "FUN_080066e8",
            "FUN_0800674e",
            "FUN_080067ac",
            "FUN_0800688e",
            "FUN_080068d6",
            "FUN_08006932",
            "FUN_0800694c",
            "FUN_080069ec",
            "FUN_08006b1c",
            "FUN_08006b28",
            "FUN_08006b3e",
            "FUN_08006b5c",
            "FUN_08006b7c",
            "FUN_08006bb8",
            "FUN_08006c60",
            "FUN_08006c7c",
            "FUN_08006ca8",
            "FUN_08006d24",
            "FUN_08006d80",
            "FUN_08006e68",
            "FUN_08007110",
            "FUN_08007118",
            "FUN_080071e4",
            "FUN_0800723c",
            "FUN_08007246",
            "FUN_08007258",
            "FUN_080072d8",
            "FUN_080072f0",
            "FUN_080072fa",
            "FUN_08007306",
            "FUN_08007320",
            "FUN_08007332",
            "FUN_0800734a",
            "FUN_0800735a",
            "FUN_08007376",
            "FUN_0800738a",
            "FUN_080073ae",
            "FUN_080073c0",
            "FUN_080073e8",
            "FUN_080073ec",
            "FUN_08007438",
            "FUN_080074e0",
            "FUN_08007544",
            "FUN_08007594",
            "FUN_080075dc",
            "FUN_08007648",
            "FUN_080076e0",
            "FUN_08007708",
            "FUN_08007710",
            "FUN_08007718",
            "FUN_0800771c",
            "FUN_08007736",
            "FUN_08007744",
            "FUN_0800774a",
            "FUN_08007750",
            "FUN_080077b0",
            "FUN_08007e74",
            "FUN_08007ede",
            "FUN_08007f0e",
            "FUN_08007f78",
            "FUN_08007f7c",
            "FUN_08007f8e",
            "FUN_08007fa0",
            "FUN_08007ff0",
            "FUN_08008020",
            "FUN_08008078",
            "FUN_080084b0",
            "FUN_08008500",
            "FUN_080085b8",
            "FUN_080085dc",
            "FUN_08008600",
            "FUN_0800863c",
            "FUN_08008694",
            "FUN_080086e8",
            "FUN_0800870c",
            "FUN_08008730",
            "FUN_08008804",
            "FUN_08008840",
            "FUN_08008846",
            "FUN_08008850",
            "FUN_08008854",
            "FUN_08008858",
            "FUN_0800885c",
            "FUN_08008868",
            "FUN_0800886c",
            "FUN_0800887c",
            "FUN_08008880",
            "FUN_080088e0",
            "FUN_08008990",
            "FUN_08008a24",
            "FUN_08008a6c",
            "FUN_08008abc",
            "FUN_08008afa",
            "FUN_08008b66",
            "FUN_08008c20",
            "FUN_08008c44",
            "FUN_08008d00",
            "FUN_08008d18",
            "FUN_08008d30",
            "FUN_08008d8c",
            "FUN_08008df8",
            "FUN_08008e14",
            "FUN_08008ef4",
            "FUN_08008f0e",
            "FUN_08008f1c",
            "FUN_08008f3c",
            "FUN_08008f78",
            "FUN_08009084",
            "FUN_08009094",
            "FUN_080090c2",
            "FUN_080090cc",
            "FUN_08009108",
            "FUN_08009124",
            "FUN_08009148",
            "FUN_08009190",
            "FUN_080091a0",
            "FUN_080091b0",
            "FUN_080091c6",
            "FUN_080091d8",
            "FUN_08009270",
            "FUN_0800932c",
            "FUN_08009358",
            "FUN_0800937c",
            "FUN_080095a8",
            "FUN_08009698",
            "FUN_080098d8",
            "FUN_08009908",
            "FUN_08009918",
            "FUN_08009938",
            "FUN_08009954",
            "FUN_0800997e",
            "FUN_080099a4",
            "FUN_08009a80",
            "FUN_08009b5c",
            "FUN_08009c7c",
            "FUN_08009cdc",
            "FUN_08009d24",
            "FUN_08009d50",
            "FUN_08009db0",
            "FUN_08009e64",
            "FUN_08009eac",
            "FUN_08009f2c",
            "FUN_08009fe8",
            "thunk_FUN_0800887c",
            "FUN_0800a020",
            "FUN_0800a042",
            "FUN_0800a07a",
            "FUN_0800a0ec",
            "FUN_0800a110",
            "FUN_0800a130",
            "FUN_0800a154",
            "FUN_0800a168",
            "FUN_0800a18c"
        ]
    ],
    "locked_functions": []
}